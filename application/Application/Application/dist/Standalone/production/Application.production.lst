

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sat Mar 26 21:23:32 2022

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F46J50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK3,global,class=CODE,delta=1,noexec
     9                           	psect	idataBANK4,global,class=CODE,delta=1,noexec
    10                           	psect	idataBANK5,global,class=CODE,delta=1,noexec
    11                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
    12                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    13                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    19                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    21                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    22                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    23                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    24                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    25                           	psect	dataBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    26                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    27                           	psect	bssBANK7,global,class=BANK7,space=1,delta=1,lowdata,noexec
    28                           	psect	bssBANK8,global,class=BANK8,space=1,delta=1,lowdata,noexec
    29                           	psect	bssBANK9,global,class=BANK9,space=1,delta=1,lowdata,noexec
    30                           	psect	bssBIGRAMl,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    31                           	psect	cstackBANK10,global,class=BANK10,space=1,delta=1,noexec
    32                           	psect	cstackBANK5,global,class=BANK5,space=1,delta=1,noexec
    33                           	psect	cstackBANK4,global,class=BANK4,space=1,delta=1,noexec
    34                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    35                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    36                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    37                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    38                           	psect	text0,global,reloc=2,class=CODE,delta=1
    39                           	psect	text1,global,reloc=2,class=CODE,delta=1
    40                           	psect	text2,global,reloc=2,class=CODE,delta=1
    41                           	psect	text3,global,reloc=2,class=CODE,delta=1
    42                           	psect	text4,global,reloc=2,class=CODE,delta=1
    43                           	psect	text5,global,reloc=2,class=CODE,delta=1
    44                           	psect	text6,global,reloc=2,class=CODE,delta=1
    45                           	psect	text7,global,reloc=2,class=CODE,delta=1
    46                           	psect	text8,global,reloc=2,class=CODE,delta=1
    47                           	psect	text9,global,reloc=2,class=CODE,delta=1
    48                           	psect	text10,global,reloc=2,class=CODE,delta=1
    49                           	psect	text11,global,reloc=2,class=CODE,delta=1
    50                           	psect	text12,global,reloc=2,class=CODE,delta=1
    51                           	psect	text13,global,reloc=2,class=CODE,delta=1
    52                           	psect	text14,global,reloc=2,class=CODE,delta=1
    53                           	psect	text15,global,reloc=2,class=CODE,delta=1
    54                           	psect	text16,global,reloc=2,class=CODE,delta=1
    55                           	psect	text17,global,reloc=2,class=CODE,delta=1
    56                           	psect	text18,global,reloc=2,class=CODE,delta=1
    57                           	psect	text19,global,reloc=2,class=CODE,delta=1
    58                           	psect	text20,global,reloc=2,class=CODE,delta=1
    59                           	psect	text21,global,reloc=2,class=CODE,delta=1
    60                           	psect	text22,global,reloc=2,class=CODE,delta=1
    61                           	psect	text23,global,reloc=2,class=CODE,delta=1
    62                           	psect	text24,global,reloc=2,class=CODE,delta=1
    63                           	psect	text25,global,reloc=2,class=CODE,delta=1
    64                           	psect	text26,global,reloc=2,class=CODE,delta=1
    65                           	psect	text27,global,reloc=2,class=CODE,delta=1
    66                           	psect	text28,global,reloc=2,class=CODE,delta=1
    67                           	psect	text29,global,reloc=2,class=CODE,delta=1
    68                           	psect	text30,global,reloc=2,class=CODE,delta=1
    69                           	psect	text31,global,reloc=2,class=CODE,delta=1
    70                           	psect	text32,global,reloc=2,class=CODE,delta=1
    71                           	psect	text33,global,reloc=2,class=CODE,delta=1
    72                           	psect	text34,global,reloc=2,class=CODE,delta=1
    73                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    74                           	psect	text36,global,reloc=2,class=CODE,delta=1
    75                           	psect	text37,global,reloc=2,class=CODE,delta=1
    76                           	psect	text38,global,reloc=2,class=CODE,delta=1
    77                           	psect	text39,global,reloc=2,class=CODE,delta=1
    78                           	psect	text40,global,reloc=2,class=CODE,delta=1
    79                           	psect	text41,global,reloc=2,class=CODE,delta=1
    80                           	psect	text42,global,reloc=2,class=CODE,delta=1
    81                           	psect	text43,global,reloc=2,class=CODE,delta=1
    82                           	psect	text44,global,reloc=2,class=CODE,delta=1
    83                           	psect	text45,global,reloc=2,class=CODE,delta=1
    84                           	psect	text46,global,reloc=2,class=CODE,delta=1
    85                           	psect	text47,global,reloc=2,class=CODE,delta=1
    86                           	psect	text48,global,reloc=2,class=CODE,delta=1
    87                           	psect	text49,global,reloc=2,class=CODE,delta=1
    88                           	psect	text50,global,reloc=2,class=CODE,delta=1
    89                           	psect	text51,global,reloc=2,class=CODE,delta=1
    90                           	psect	text52,global,reloc=2,class=CODE,delta=1
    91                           	psect	text53,global,reloc=2,class=CODE,delta=1
    92                           	psect	text54,global,reloc=2,class=CODE,delta=1
    93                           	psect	text55,global,reloc=2,class=CODE,delta=1
    94                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=1
    95                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    96                           	psect	text58,global,reloc=2,class=CODE,delta=1
    97                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    98                           	psect	text60,global,reloc=2,class=CODE,delta=1
    99                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=1
   100                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=1
   101                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=1
   102                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=1
   103                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=1
   104                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=1
   105                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=1
   106                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=1
   107                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=1
   108                           	psect	text70,global,reloc=2,class=CODE,delta=1
   109                           	psect	text71,global,reloc=2,class=CODE,delta=1,group=1
   110                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=1
   111                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=1
   112                           	psect	text74,global,reloc=2,class=CODE,delta=1
   113                           	psect	text75,global,reloc=2,class=CODE,delta=1
   114                           	psect	text76,global,reloc=2,class=CODE,delta=1,group=1
   115                           	psect	text77,global,reloc=2,class=CODE,delta=1,group=1
   116                           	psect	text78,global,reloc=2,class=CODE,delta=1
   117                           	psect	text79,global,reloc=2,class=CODE,delta=1
   118                           	psect	text80,global,reloc=2,class=CODE,delta=1
   119                           	psect	text81,global,reloc=2,class=CODE,delta=1,group=1
   120                           	psect	text82,global,reloc=2,class=CODE,delta=1,group=1
   121                           	psect	text83,global,reloc=2,class=CODE,delta=1
   122                           	psect	text84,global,reloc=2,class=CODE,delta=1
   123                           	psect	text85,global,reloc=2,class=CODE,delta=1
   124                           	psect	text86,global,reloc=2,class=CODE,delta=1
   125                           	psect	text87,global,reloc=2,class=CODE,delta=1
   126                           	psect	text88,global,reloc=2,class=CODE,delta=1
   127                           	psect	text89,global,reloc=2,class=CODE,delta=1
   128                           	psect	text90,global,reloc=2,class=CODE,delta=1
   129                           	psect	text91,global,reloc=2,class=CODE,delta=1
   130                           	psect	text92,global,reloc=2,class=CODE,delta=1
   131                           	psect	text93,global,reloc=2,class=CODE,delta=1
   132                           	psect	text94,global,reloc=2,class=CODE,delta=1
   133                           	psect	text95,global,reloc=2,class=CODE,delta=1
   134                           	psect	text96,global,reloc=2,class=CODE,delta=1
   135                           	psect	text97,global,reloc=2,class=CODE,delta=1
   136                           	psect	text98,global,reloc=2,class=CODE,delta=1
   137                           	psect	text99,global,reloc=2,class=CODE,delta=1
   138                           	psect	text100,global,reloc=2,class=CODE,delta=1
   139                           	psect	text101,global,reloc=2,class=CODE,delta=1
   140                           	psect	text102,global,reloc=2,class=CODE,delta=1
   141                           	psect	text103,global,reloc=2,class=CODE,delta=1
   142                           	psect	text104,global,reloc=2,class=CODE,delta=1
   143                           	psect	text105,global,reloc=2,class=CODE,delta=1
   144                           	psect	text106,global,reloc=2,class=CODE,delta=1
   145                           	psect	text107,global,reloc=2,class=CODE,delta=1
   146                           	psect	text108,global,reloc=2,class=CODE,delta=1
   147                           	psect	text109,global,reloc=2,class=CODE,delta=1
   148                           	psect	text110,global,reloc=2,class=CODE,delta=1
   149                           	psect	text111,global,reloc=2,class=CODE,delta=1
   150                           	psect	text112,global,reloc=2,class=CODE,delta=1
   151                           	psect	text113,global,reloc=2,class=CODE,delta=1
   152                           	psect	text114,global,reloc=2,class=CODE,delta=1
   153                           	psect	text115,global,reloc=2,class=CODE,delta=1
   154                           	psect	text116,global,reloc=2,class=CODE,delta=1
   155                           	psect	text117,global,reloc=2,class=CODE,delta=1
   156                           	psect	text118,global,reloc=2,class=CODE,delta=1
   157                           	psect	text119,global,reloc=2,class=CODE,delta=1
   158                           	psect	text120,global,reloc=2,class=CODE,delta=1
   159                           	psect	text121,global,reloc=2,class=CODE,delta=1
   160                           	psect	text122,global,reloc=2,class=CODE,delta=1
   161                           	psect	text123,global,reloc=2,class=CODE,delta=1
   162                           	psect	text124,global,reloc=2,class=CODE,delta=1
   163                           	psect	text125,global,reloc=2,class=CODE,delta=1
   164                           	psect	text126,global,reloc=2,class=CODE,delta=1
   165                           	psect	text127,global,reloc=2,class=CODE,delta=1
   166                           	psect	text128,global,reloc=2,class=CODE,delta=1
   167                           	psect	text129,global,reloc=2,class=CODE,delta=1,group=1
   168                           	psect	text130,global,reloc=2,class=CODE,delta=1
   169                           	psect	text131,global,reloc=2,class=CODE,delta=1
   170                           	psect	text132,global,reloc=2,class=CODE,delta=1
   171                           	psect	text133,global,reloc=2,class=CODE,delta=1
   172                           	psect	text134,global,reloc=2,class=CODE,delta=1
   173                           	psect	text135,global,reloc=2,class=CODE,delta=1
   174                           	psect	text136,global,reloc=2,class=CODE,delta=1
   175                           	psect	text137,global,reloc=2,class=CODE,delta=1
   176                           	psect	text138,global,reloc=2,class=CODE,delta=1
   177                           	psect	text139,global,reloc=2,class=CODE,delta=1
   178                           	psect	text140,global,reloc=2,class=CODE,delta=1
   179                           	psect	text141,global,reloc=2,class=CODE,delta=1
   180                           	psect	text142,global,reloc=2,class=CODE,delta=1
   181                           	psect	text143,global,reloc=2,class=CODE,delta=1
   182                           	psect	text144,global,reloc=2,class=CODE,delta=1
   183                           	psect	text145,global,reloc=2,class=CODE,delta=1
   184                           	psect	text146,global,reloc=2,class=CODE,delta=1
   185                           	psect	text147,global,reloc=2,class=CODE,delta=1
   186                           	psect	text148,global,reloc=2,class=CODE,delta=1
   187                           	psect	text149,global,reloc=2,class=CODE,delta=1
   188                           	psect	text150,global,reloc=2,class=CODE,delta=1,group=1
   189                           	psect	text151,global,reloc=2,class=CODE,delta=1
   190                           	psect	text152,global,reloc=2,class=CODE,delta=1,group=1
   191                           	psect	text153,global,reloc=2,class=CODE,delta=1
   192                           	psect	text154,global,reloc=2,class=CODE,delta=1
   193                           	psect	text155,global,reloc=2,class=CODE,delta=1,group=1
   194                           	psect	text156,global,reloc=2,class=CODE,delta=1
   195                           	psect	text157,global,reloc=2,class=CODE,delta=1
   196                           	psect	text158,global,reloc=2,class=CODE,delta=1
   197                           	psect	text159,global,reloc=2,class=CODE,delta=1
   198                           	psect	text160,global,reloc=2,class=CODE,delta=1
   199                           	psect	text161,global,reloc=2,class=CODE,delta=1
   200                           	psect	text162,global,reloc=2,class=CODE,delta=1
   201                           	psect	text163,global,reloc=2,class=CODE,delta=1
   202                           	psect	text164,global,reloc=2,class=CODE,delta=1
   203                           	psect	text165,global,reloc=2,class=CODE,delta=1
   204                           	psect	text166,global,reloc=2,class=CODE,delta=1
   205                           	psect	text167,global,reloc=2,class=CODE,delta=1
   206                           	psect	text168,global,reloc=2,class=CODE,delta=1
   207                           	psect	text169,global,reloc=2,class=CODE,delta=1
   208                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
   209                           	psect	text171,global,reloc=2,class=CODE,delta=1
   210                           	psect	text172,global,reloc=2,class=CODE,delta=1
   211                           	psect	text173,global,reloc=2,class=CODE,delta=1
   212                           	psect	text174,global,reloc=2,class=CODE,delta=1
   213                           	psect	text175,global,reloc=2,class=CODE,delta=1
   214                           	psect	text176,global,reloc=2,class=CODE,delta=1
   215                           	psect	text177,global,reloc=2,class=CODE,delta=1
   216                           	psect	text178,global,reloc=2,class=CODE,delta=1
   217                           	psect	text179,global,reloc=2,class=CODE,delta=1
   218                           	psect	text180,global,reloc=2,class=CODE,delta=1
   219                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   220                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   221                           	psect	text182,global,reloc=2,class=CODE,delta=1
   222                           	psect	text183,global,reloc=2,class=CODE,delta=1
   223                           	psect	text184,global,reloc=2,class=CODE,delta=1
   224                           	psect	text185,global,reloc=2,class=CODE,delta=1
   225                           	psect	text186,global,reloc=2,class=CODE,delta=1
   226                           	psect	text187,global,reloc=2,class=CODE,delta=1
   227                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   228                           	psect	text188,global,reloc=2,class=CODE,delta=1
   229                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   230                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   231                           	dabs	1,0x400,48,_BDT
   232                           	dabs	1,0x438,8,_CtrlTrfData
   233                           	dabs	1,0x430,8,_SetupPkt
   234  0000                     
   235                           ; Version 1.45
   236                           ; Generated 16/11/2017 GMT
   237                           ; 
   238                           ; Copyright © 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   239                           ; All rights reserved.
   240                           ; 
   241                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   242                           ; 
   243                           ; Redistribution and use in source and binary forms, with or without modification, are
   244                           ; permitted provided that the following conditions are met:
   245                           ; 
   246                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   247                           ;        conditions and the following disclaimer.
   248                           ; 
   249                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   250                           ;        of conditions and the following disclaimer in the documentation and/or other
   251                           ;        materials provided with the distribution.
   252                           ; 
   253                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   254                           ;        software without specific prior written permission.
   255                           ; 
   256                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   257                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   258                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   259                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   260                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   261                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   262                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   263                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   264                           ; 
   265                           ; 
   266                           ; Code-generator required, PIC18F46J50 Definitions
   267                           ; 
   268                           ; SFR Addresses
   269  0000                     
   270                           	psect	idataBANK0
   271  00689E                     __pidataBANK0:
   272                           	opt stack 0
   273                           
   274                           ;initializer for findEmptySpot@currentPosition
   275  00689E  10                 	db	16
   276                           
   277                           ;initializer for isNumberInMemory@currentPosition
   278  00689F  10                 	db	16
   279                           
   280                           	psect	idataBANK1
   281  0068A0                     __pidataBANK1:
   282                           	opt stack 0
   283                           
   284                           ;initializer for _isMemoryEmpty
   285  0068A0  01                 	db	1
   286                           
   287                           ;initializer for InitGprsNetwork@GprsInitSts
   288  0068A1  01                 	db	1
   289                           
   290                           	psect	idataBANK2
   291  006816                     __pidataBANK2:
   292                           	opt stack 0
   293                           
   294                           ;initializer for Terminal@EchoOption
   295  006816  01                 	db	1
   296                           
   297                           ;initializer for _MainSystemTimebaseFlag
   298  006817  01                 	db	1
   299                           
   300                           ;initializer for _ConnTimeout
   301  006818  00                 	db	0
   302  006819  01                 	db	1
   303  00681A  0000               	dw	0
   304  00681C  0000               	dw	0
   305  00681E  0000               	dw	0
   306  006820  0000               	dw	0
   307  006822  00                 	db	0
   308                           
   309                           	psect	idataBANK3
   310  005CC4                     __pidataBANK3:
   311                           	opt stack 0
   312                           
   313                           ;initializer for ModemEvtParser@F9112
   314  005CC4  43                 	db	67
   315  005CC5  61                 	db	97
   316  005CC6  6C                 	db	108
   317  005CC7  6C                 	db	108
   318  005CC8  20                 	db	32
   319  005CC9  52                 	db	82
   320  005CCA  65                 	db	101
   321  005CCB  61                 	db	97
   322  005CCC  64                 	db	100
   323  005CCD  79                 	db	121
   324                           
   325                           ;initializer for ModemEvtParser@F9110
   326  005CCE  2B                 	db	43
   327  005CCF  43                 	db	67
   328  005CD0  4D                 	db	77
   329  005CD1  54                 	db	84
   330  005CD2  49                 	db	73
   331                           
   332                           ;initializer for ModemEvtParser@F9108
   333  005CD3  2B                 	db	43
   334  005CD4  43                 	db	67
   335  005CD5  4C                 	db	76
   336  005CD6  49                 	db	73
   337  005CD7  50                 	db	80
   338                           
   339                           ;initializer for ModemEvtParser@F9106
   340  005CD8  52                 	db	82
   341  005CD9  49                 	db	73
   342  005CDA  4E                 	db	78
   343  005CDB  47                 	db	71
   344                           
   345                           ;initializer for MyApp_Task@F9036
   346  005CDC  63                 	db	99
   347  005CDD  61                 	db	97
   348  005CDE  74                 	db	116
   349                           
   350                           ;initializer for triggerRelay@F9025
   351  005CDF  50                 	db	80
   352  005CE0  00                 	db	0
   353                           
   354                           ;initializer for Term_MainSm@TermDelay
   355  005CE1  01                 	db	1
   356  005CE2  01                 	db	1
   357  005CE3  0000               	dw	0
   358  005CE5  0000               	dw	0
   359  005CE7  0000               	dw	0
   360  005CE9  0000               	dw	0
   361  005CEB  00                 	db	0
   362                           
   363                           ;initializer for _ConnWait
   364  005CEC  00                 	db	0
   365  005CED  01                 	db	1
   366  005CEE  0000               	dw	0
   367  005CF0  0000               	dw	0
   368  005CF2  0000               	dw	0
   369  005CF4  0000               	dw	0
   370  005CF6  00                 	db	0
   371                           
   372                           ;initializer for SendSmsSm@SwTimer
   373  005CF7  01                 	db	1
   374  005CF8  01                 	db	1
   375  005CF9  0000               	dw	0
   376  005CFB  0000               	dw	0
   377  005CFD  0000               	dw	0
   378  005CFF  0000               	dw	0
   379  005D01  00                 	db	0
   380                           
   381                           ;initializer for CheckModem@Timeout
   382  005D02  00                 	db	0
   383  005D03  01                 	db	1
   384  005D04  0000               	dw	0
   385  005D06  0000               	dw	0
   386  005D08  0000               	dw	0
   387  005D0A  0000               	dw	0
   388  005D0C  00                 	db	0
   389                           
   390                           	psect	idataBANK4
   391  006823                     __pidataBANK4:
   392                           	opt stack 0
   393                           
   394                           ;initializer for MyApp_Task@smsPhoneNumber
   395  006823  2B                 	db	43
   396  006824  33                 	db	51
   397  006825  39                 	db	57
   398  006826  30                 	db	48
   399  006827  31                 	db	49
   400  006828  32                 	db	50
   401  006829  33                 	db	51
   402  00682A  34                 	db	52
   403  00682B  35                 	db	53
   404  00682C  36                 	db	54
   405  00682D  37                 	db	55
   406  00682E  38                 	db	56
   407  00682F  39                 	db	57
   408                           
   409                           	psect	idataBANK5
   410  005A52                     __pidataBANK5:
   411                           	opt stack 0
   412                           
   413                           ;initializer for _TaskTable
   414  005A52  7C                 	db	low _Mdm_DrvMainFn
   415  005A53  68                 	db	high _Mdm_DrvMainFn
   416  005A54  00                 	db	0
   417  005A55  0000               	dw	0
   418  005A57  000A               	dw	10
   419  005A59  00                 	db	0
   420  005A5A  0A                 	db	low _I2cSlv_MainTask
   421  005A5B  58                 	db	high _I2cSlv_MainTask
   422  005A5C  00                 	db	0
   423  005A5D  0000               	dw	0
   424  005A5F  0001               	dw	1
   425  005A61  00                 	db	0
   426  005A62  A2                 	db	low _Mdm_MainTask
   427  005A63  5A                 	db	high _Mdm_MainTask
   428  005A64  00                 	db	0
   429  005A65  0000               	dw	0
   430  005A67  0001               	dw	1
   431  005A69  00                 	db	0
   432  005A6A  9E                 	db	low _MdmHttp_MainTask
   433  005A6B  5D                 	db	high _MdmHttp_MainTask
   434  005A6C  00                 	db	0
   435  005A6D  0000               	dw	0
   436  005A6F  0001               	dw	1
   437  005A71  00                 	db	0
   438  005A72  36                 	db	low _UsbDevice_MainTask
   439  005A73  64                 	db	high _UsbDevice_MainTask
   440  005A74  00                 	db	0
   441  005A75  0000               	dw	0
   442  005A77  0001               	dw	1
   443  005A79  00                 	db	0
   444  005A7A  C6                 	db	low _Wdg_MainTask
   445  005A7B  64                 	db	high _Wdg_MainTask
   446  005A7C  00                 	db	0
   447  005A7D  0000               	dw	0
   448  005A7F  0064               	dw	100
   449  005A81  00                 	db	0
   450  005A82  A8                 	db	low _Led_MainTask
   451  005A83  3B                 	db	high _Led_MainTask
   452  005A84  00                 	db	0
   453  005A85  0000               	dw	0
   454  005A87  0032               	dw	50
   455  005A89  00                 	db	0
   456  005A8A  48                 	db	low _Rtcm_MainTask
   457  005A8B  4D                 	db	high _Rtcm_MainTask
   458  005A8C  00                 	db	0
   459  005A8D  0000               	dw	0
   460  005A8F  0064               	dw	100
   461  005A91  00                 	db	0
   462  005A92  80                 	db	low _Term_MainTask
   463  005A93  66                 	db	high _Term_MainTask
   464  005A94  00                 	db	0
   465  005A95  0000               	dw	0
   466  005A97  0001               	dw	1
   467  005A99  00                 	db	0
   468  005A9A  B6                 	db	low _MyApp_Task
   469  005A9B  10                 	db	high _MyApp_Task
   470  005A9C  00                 	db	0
   471  005A9D  0000               	dw	0
   472  005A9F  0064               	dw	100
   473  005AA1  00                 	db	0
   474                           
   475                           	psect	mediumconst
   476  00FC10                     __pmediumconst:
   477                           	opt stack 0
   478  00FC10  00                 	db	0
   479  00FC11                     MyApp_Task@F9031:
   480                           	opt stack 0
   481  00FC11  00                 	db	0
   482  00FC12  00                 	db	0
   483  00FC13  00                 	db	0
   484  00FC14  00                 	db	0
   485  00FC15  00                 	db	0
   486  00FC16  00                 	db	0
   487  00FC17  00                 	db	0
   488  00FC18  00                 	db	0
   489  00FC19  00                 	db	0
   490  00FC1A  00                 	db	0
   491  00FC1B  00                 	db	0
   492  00FC1C  00                 	db	0
   493  00FC1D  00                 	db	0
   494  00FC1E                     __end_ofMyApp_Task@F9031:
   495                           	opt stack 0
   496  00FC1E                     _USB_SD_Ptr:
   497                           	opt stack 0
   498  00FC1E  5B                 	db	low _sd000
   499  00FC1F  FE                 	db	high _sd000
   500  00FC20  14                 	db	low _sd001
   501  00FC21  FE                 	db	high _sd001
   502  00FC22  EE                 	db	low _sd002
   503  00FC23  FD                 	db	high _sd002
   504  00FC24                     __end_of_USB_SD_Ptr:
   505                           	opt stack 0
   506  00FC24                     MyApp_Task@F9034:
   507                           	opt stack 0
   508  00FC24  4E                 	db	78
   509  00FC25  55                 	db	85
   510  00FC26  4D                 	db	77
   511  00FC27  2B                 	db	43
   512  00FC28                     __end_ofMyApp_Task@F9034:
   513                           	opt stack 0
   514  00FC28                     parseCommand@F9019:
   515                           	opt stack 0
   516  00FC28  44                 	db	68
   517  00FC29  45                 	db	69
   518  00FC2A  4C                 	db	76
   519  00FC2B                     __end_ofparseCommand@F9019:
   520                           	opt stack 0
   521  00FC2B                     parseCommand@F9017:
   522                           	opt stack 0
   523  00FC2B  41                 	db	65
   524  00FC2C  44                 	db	68
   525  00FC2D  44                 	db	68
   526  00FC2E                     __end_ofparseCommand@F9017:
   527                           	opt stack 0
   528  00FC2E                     _USB_CD_Ptr:
   529                           	opt stack 0
   530  00FC2E  AB                 	db	low _configDescriptor1
   531  00FC2F  FD                 	db	high _configDescriptor1
   532  00FC30                     __end_of_USB_CD_Ptr:
   533                           	opt stack 0
   534  00FC30                     _TaskNumber:
   535                           	opt stack 0
   536  00FC30  000A               	dw	10
   537  00FC32                     __end_of_TaskNumber:
   538                           	opt stack 0
   539  00FC32                     _MsgFormat:
   540                           	opt stack 0
   541  00FC32  48                 	db	72
   542  00FC33  6F                 	db	111
   543  00FC34  73                 	db	115
   544  00FC35  74                 	db	116
   545  00FC36  20                 	db	32
   546  00FC37  6D                 	db	109
   547  00FC38  65                 	db	101
   548  00FC39  73                 	db	115
   549  00FC3A  73                 	db	115
   550  00FC3B  61                 	db	97
   551  00FC3C  67                 	db	103
   552  00FC3D  65                 	db	101
   553  00FC3E  20                 	db	32
   554  00FC3F  66                 	db	102
   555  00FC40  6F                 	db	111
   556  00FC41  72                 	db	114
   557  00FC42  6D                 	db	109
   558  00FC43  61                 	db	97
   559  00FC44  74                 	db	116
   560  00FC45  3A                 	db	58
   561  00FC46  20                 	db	32
   562  00FC47  0D                 	db	13
   563  00FC48  0A                 	db	10
   564  00FC49  5B                 	db	91
   565  00FC4A  6F                 	db	111
   566  00FC4B  70                 	db	112
   567  00FC4C  5F                 	db	95
   568  00FC4D  74                 	db	116
   569  00FC4E  79                 	db	121
   570  00FC4F  70                 	db	112
   571  00FC50  65                 	db	101
   572  00FC51  5D                 	db	93
   573  00FC52  3A                 	db	58
   574  00FC53  5B                 	db	91
   575  00FC54  6F                 	db	111
   576  00FC55  70                 	db	112
   577  00FC56  5D                 	db	93
   578  00FC57  3A                 	db	58
   579  00FC58  5B                 	db	91
   580  00FC59  6C                 	db	108
   581  00FC5A  65                 	db	101
   582  00FC5B  6E                 	db	110
   583  00FC5C  5D                 	db	93
   584  00FC5D  3A                 	db	58
   585  00FC5E  5B                 	db	91
   586  00FC5F  61                 	db	97
   587  00FC60  64                 	db	100
   588  00FC61  64                 	db	100
   589  00FC62  72                 	db	114
   590  00FC63  5D                 	db	93
   591  00FC64  3A                 	db	58
   592  00FC65  5B                 	db	91
   593  00FC66  70                 	db	112
   594  00FC67  61                 	db	97
   595  00FC68  79                 	db	121
   596  00FC69  6C                 	db	108
   597  00FC6A  6F                 	db	111
   598  00FC6B  61                 	db	97
   599  00FC6C  64                 	db	100
   600  00FC6D  5D                 	db	93
   601  00FC6E  0D                 	db	13
   602  00FC6F  0A                 	db	10
   603  00FC70  0D                 	db	13
   604  00FC71  0A                 	db	10
   605  00FC72  5B                 	db	91
   606  00FC73  6F                 	db	111
   607  00FC74  70                 	db	112
   608  00FC75  5F                 	db	95
   609  00FC76  74                 	db	116
   610  00FC77  79                 	db	121
   611  00FC78  70                 	db	112
   612  00FC79  65                 	db	101
   613  00FC7A  5D                 	db	93
   614  00FC7B  20                 	db	32
   615  00FC7C  3D                 	db	61
   616  00FC7D  20                 	db	32
   617  00FC7E  53                 	db	83
   618  00FC7F  4F                 	db	79
   619  00FC80  2C                 	db	44
   620  00FC81  53                 	db	83
   621  00FC82  42                 	db	66
   622  00FC83  0D                 	db	13
   623  00FC84  0A                 	db	10
   624  00FC85  5B                 	db	91
   625  00FC86  6F                 	db	111
   626  00FC87  70                 	db	112
   627  00FC88  5D                 	db	93
   628  00FC89  20                 	db	32
   629  00FC8A  3D                 	db	61
   630  00FC8B  20                 	db	32
   631  00FC8C  52                 	db	82
   632  00FC8D  3A                 	db	58
   633  00FC8E  20                 	db	32
   634  00FC8F  72                 	db	114
   635  00FC90  65                 	db	101
   636  00FC91  61                 	db	97
   637  00FC92  64                 	db	100
   638  00FC93  2C                 	db	44
   639  00FC94  57                 	db	87
   640  00FC95  3A                 	db	58
   641  00FC96  20                 	db	32
   642  00FC97  77                 	db	119
   643  00FC98  72                 	db	114
   644  00FC99  69                 	db	105
   645  00FC9A  74                 	db	116
   646  00FC9B  65                 	db	101
   647  00FC9C  0D                 	db	13
   648  00FC9D  0A                 	db	10
   649  00FC9E  5B                 	db	91
   650  00FC9F  6C                 	db	108
   651  00FCA0  65                 	db	101
   652  00FCA1  6E                 	db	110
   653  00FCA2  5D                 	db	93
   654  00FCA3  20                 	db	32
   655  00FCA4  3D                 	db	61
   656  00FCA5  20                 	db	32
   657  00FCA6  32                 	db	50
   658  00FCA7  20                 	db	32
   659  00FCA8  62                 	db	98
   660  00FCA9  79                 	db	121
   661  00FCAA  74                 	db	116
   662  00FCAB  65                 	db	101
   663  00FCAC  20                 	db	32
   664  00FCAD  41                 	db	65
   665  00FCAE  53                 	db	83
   666  00FCAF  43                 	db	67
   667  00FCB0  49                 	db	73
   668  00FCB1  49                 	db	73
   669  00FCB2  0D                 	db	13
   670  00FCB3  0A                 	db	10
   671  00FCB4  5B                 	db	91
   672  00FCB5  61                 	db	97
   673  00FCB6  64                 	db	100
   674  00FCB7  64                 	db	100
   675  00FCB8  72                 	db	114
   676  00FCB9  5D                 	db	93
   677  00FCBA  20                 	db	32
   678  00FCBB  3D                 	db	61
   679  00FCBC  20                 	db	32
   680  00FCBD  32                 	db	50
   681  00FCBE  20                 	db	32
   682  00FCBF  62                 	db	98
   683  00FCC0  79                 	db	121
   684  00FCC1  74                 	db	116
   685  00FCC2  65                 	db	101
   686  00FCC3  20                 	db	32
   687  00FCC4  41                 	db	65
   688  00FCC5  53                 	db	83
   689  00FCC6  43                 	db	67
   690  00FCC7  49                 	db	73
   691  00FCC8  49                 	db	73
   692  00FCC9  0D                 	db	13
   693  00FCCA  0A                 	db	10
   694  00FCCB  5B                 	db	91
   695  00FCCC  70                 	db	112
   696  00FCCD  61                 	db	97
   697  00FCCE  79                 	db	121
   698  00FCCF  6C                 	db	108
   699  00FCD0  6F                 	db	111
   700  00FCD1  61                 	db	97
   701  00FCD2  64                 	db	100
   702  00FCD3  5D                 	db	93
   703  00FCD4  20                 	db	32
   704  00FCD5  3D                 	db	61
   705  00FCD6  20                 	db	32
   706  00FCD7  6D                 	db	109
   707  00FCD8  61                 	db	97
   708  00FCD9  78                 	db	120
   709  00FCDA  20                 	db	32
   710  00FCDB  32                 	db	50
   711  00FCDC  30                 	db	48
   712  00FCDD  20                 	db	32
   713  00FCDE  62                 	db	98
   714  00FCDF  79                 	db	121
   715  00FCE0  74                 	db	116
   716  00FCE1  65                 	db	101
   717  00FCE2  20                 	db	32
   718  00FCE3  41                 	db	65
   719  00FCE4  53                 	db	83
   720  00FCE5  43                 	db	67
   721  00FCE6  49                 	db	73
   722  00FCE7  49                 	db	73
   723  00FCE8  0D                 	db	13
   724  00FCE9  0A                 	db	10
   725  00FCEA  0D                 	db	13
   726  00FCEB  0A                 	db	10
   727  00FCEC  54                 	db	84
   728  00FCED  65                 	db	101
   729  00FCEE  72                 	db	114
   730  00FCEF  6D                 	db	109
   731  00FCF0  69                 	db	105
   732  00FCF1  6E                 	db	110
   733  00FCF2  61                 	db	97
   734  00FCF3  6C                 	db	108
   735  00FCF4  20                 	db	32
   736  00FCF5  4D                 	db	77
   737  00FCF6  6F                 	db	111
   738  00FCF7  64                 	db	100
   739  00FCF8  65                 	db	101
   740  00FCF9  3A                 	db	58
   741  00FCFA  20                 	db	32
   742  00FCFB  43                 	db	67
   743  00FCFC  4F                 	db	79
   744  00FCFD  4D                 	db	77
   745  00FCFE  4D                 	db	77
   746  00FCFF  41                 	db	65
   747  00FD00  4E                 	db	78
   748  00FD01  44                 	db	68
   749  00FD02  20                 	db	32
   750  00FD03  4D                 	db	77
   751  00FD04  4F                 	db	79
   752  00FD05  44                 	db	68
   753  00FD06  45                 	db	69
   754  00FD07  0D                 	db	13
   755  00FD08  0A                 	db	10
   756  00FD09  4D                 	db	77
   757  00FD0A  6F                 	db	111
   758  00FD0B  64                 	db	100
   759  00FD0C  65                 	db	101
   760  00FD0D  6D                 	db	109
   761  00FD0E  20                 	db	32
   762  00FD0F  54                 	db	84
   763  00FD10  79                 	db	121
   764  00FD11  70                 	db	112
   765  00FD12  65                 	db	101
   766  00FD13  3A                 	db	58
   767  00FD14  20                 	db	32
   768  00FD15  47                 	db	71
   769  00FD16  53                 	db	83
   770  00FD17  4D                 	db	77
   771  00FD18  2F                 	db	47
   772  00FD19  47                 	db	71
   773  00FD1A  50                 	db	80
   774  00FD1B  52                 	db	82
   775  00FD1C  53                 	db	83
   776  00FD1D  0D                 	db	13
   777  00FD1E  0A                 	db	10
   778  00FD1F  0D                 	db	13
   779  00FD20  0A                 	db	10
   780  00FD21  00                 	db	0
   781  00FD22                     __end_of_MsgFormat:
   782                           	opt stack 0
   783  00FD22                     _Welcome:
   784                           	opt stack 0
   785  00FD22  2A                 	db	42
   786  00FD23  2A                 	db	42
   787  00FD24  2A                 	db	42
   788  00FD25  2A                 	db	42
   789  00FD26  2A                 	db	42
   790  00FD27  2A                 	db	42
   791  00FD28  2A                 	db	42
   792  00FD29  2A                 	db	42
   793  00FD2A  2A                 	db	42
   794  00FD2B  2A                 	db	42
   795  00FD2C  2A                 	db	42
   796  00FD2D  2A                 	db	42
   797  00FD2E  2A                 	db	42
   798  00FD2F  2A                 	db	42
   799  00FD30  2A                 	db	42
   800  00FD31  2A                 	db	42
   801  00FD32  2A                 	db	42
   802  00FD33  2A                 	db	42
   803  00FD34  2A                 	db	42
   804  00FD35  2A                 	db	42
   805  00FD36  2A                 	db	42
   806  00FD37  2A                 	db	42
   807  00FD38  2A                 	db	42
   808  00FD39  2A                 	db	42
   809  00FD3A  2A                 	db	42
   810  00FD3B  2A                 	db	42
   811  00FD3C  2A                 	db	42
   812  00FD3D  2A                 	db	42
   813  00FD3E  2A                 	db	42
   814  00FD3F  2A                 	db	42
   815  00FD40  2A                 	db	42
   816  00FD41  2A                 	db	42
   817  00FD42  2A                 	db	42
   818  00FD43  2A                 	db	42
   819  00FD44  2A                 	db	42
   820  00FD45  2A                 	db	42
   821  00FD46  2A                 	db	42
   822  00FD47  2A                 	db	42
   823  00FD48  2A                 	db	42
   824  00FD49  2A                 	db	42
   825  00FD4A  2A                 	db	42
   826  00FD4B  2A                 	db	42
   827  00FD4C  2A                 	db	42
   828  00FD4D  2A                 	db	42
   829  00FD4E  2A                 	db	42
   830  00FD4F  2A                 	db	42
   831  00FD50  2A                 	db	42
   832  00FD51  2A                 	db	42
   833  00FD52  2A                 	db	42
   834  00FD53  0D                 	db	13
   835  00FD54  0A                 	db	10
   836  00FD55  20                 	db	32
   837  00FD56  20                 	db	32
   838  00FD57  20                 	db	32
   839  00FD58  20                 	db	32
   840  00FD59  20                 	db	32
   841  00FD5A  20                 	db	32
   842  00FD5B  20                 	db	32
   843  00FD5C  20                 	db	32
   844  00FD5D  20                 	db	32
   845  00FD5E  20                 	db	32
   846  00FD5F  20                 	db	32
   847  00FD60  20                 	db	32
   848  00FD61  20                 	db	32
   849  00FD62  20                 	db	32
   850  00FD63  20                 	db	32
   851  00FD64  20                 	db	32
   852  00FD65  20                 	db	32
   853  00FD66  20                 	db	32
   854  00FD67  4D                 	db	77
   855  00FD68  45                 	db	69
   856  00FD69  52                 	db	82
   857  00FD6A  43                 	db	67
   858  00FD6B  55                 	db	85
   859  00FD6C  52                 	db	82
   860  00FD6D  59                 	db	89
   861  00FD6E  20                 	db	32
   862  00FD6F  53                 	db	83
   863  00FD70  59                 	db	89
   864  00FD71  53                 	db	83
   865  00FD72  54                 	db	84
   866  00FD73  45                 	db	69
   867  00FD74  4D                 	db	77
   868  00FD75  0D                 	db	13
   869  00FD76  0A                 	db	10
   870  00FD77  2A                 	db	42
   871  00FD78  2A                 	db	42
   872  00FD79  2A                 	db	42
   873  00FD7A  2A                 	db	42
   874  00FD7B  2A                 	db	42
   875  00FD7C  2A                 	db	42
   876  00FD7D  2A                 	db	42
   877  00FD7E  2A                 	db	42
   878  00FD7F  2A                 	db	42
   879  00FD80  2A                 	db	42
   880  00FD81  2A                 	db	42
   881  00FD82  2A                 	db	42
   882  00FD83  2A                 	db	42
   883  00FD84  2A                 	db	42
   884  00FD85  2A                 	db	42
   885  00FD86  2A                 	db	42
   886  00FD87  2A                 	db	42
   887  00FD88  2A                 	db	42
   888  00FD89  2A                 	db	42
   889  00FD8A  2A                 	db	42
   890  00FD8B  2A                 	db	42
   891  00FD8C  2A                 	db	42
   892  00FD8D  2A                 	db	42
   893  00FD8E  2A                 	db	42
   894  00FD8F  2A                 	db	42
   895  00FD90  2A                 	db	42
   896  00FD91  2A                 	db	42
   897  00FD92  2A                 	db	42
   898  00FD93  2A                 	db	42
   899  00FD94  2A                 	db	42
   900  00FD95  2A                 	db	42
   901  00FD96  2A                 	db	42
   902  00FD97  2A                 	db	42
   903  00FD98  2A                 	db	42
   904  00FD99  2A                 	db	42
   905  00FD9A  2A                 	db	42
   906  00FD9B  2A                 	db	42
   907  00FD9C  2A                 	db	42
   908  00FD9D  2A                 	db	42
   909  00FD9E  2A                 	db	42
   910  00FD9F  2A                 	db	42
   911  00FDA0  2A                 	db	42
   912  00FDA1  2A                 	db	42
   913  00FDA2  2A                 	db	42
   914  00FDA3  2A                 	db	42
   915  00FDA4  2A                 	db	42
   916  00FDA5  2A                 	db	42
   917  00FDA6  2A                 	db	42
   918  00FDA7  2A                 	db	42
   919  00FDA8  0D                 	db	13
   920  00FDA9  0A                 	db	10
   921  00FDAA  00                 	db	0
   922  00FDAB                     __end_of_Welcome:
   923                           	opt stack 0
   924  00FDAB                     _configDescriptor1:
   925                           	opt stack 0
   926  00FDAB  09                 	db	9
   927  00FDAC  02                 	db	2
   928  00FDAD  43                 	db	67
   929  00FDAE  00                 	db	0
   930  00FDAF  02                 	db	2
   931  00FDB0  01                 	db	1
   932  00FDB1  00                 	db	0
   933  00FDB2  C0                 	db	192
   934  00FDB3  32                 	db	50
   935  00FDB4  09                 	db	9
   936  00FDB5  04                 	db	4
   937  00FDB6  00                 	db	0
   938  00FDB7  00                 	db	0
   939  00FDB8  01                 	db	1
   940  00FDB9  02                 	db	2
   941  00FDBA  02                 	db	2
   942  00FDBB  01                 	db	1
   943  00FDBC  00                 	db	0
   944  00FDBD  05                 	db	5
   945  00FDBE  24                 	db	36
   946  00FDBF  00                 	db	0
   947  00FDC0  10                 	db	16
   948  00FDC1  01                 	db	1
   949  00FDC2  04                 	db	4
   950  00FDC3  24                 	db	36
   951  00FDC4  02                 	db	2
   952  00FDC5  02                 	db	2
   953  00FDC6  05                 	db	5
   954  00FDC7  24                 	db	36
   955  00FDC8  06                 	db	6
   956  00FDC9  00                 	db	0
   957  00FDCA  01                 	db	1
   958  00FDCB  05                 	db	5
   959  00FDCC  24                 	db	36
   960  00FDCD  01                 	db	1
   961  00FDCE  00                 	db	0
   962  00FDCF  01                 	db	1
   963  00FDD0  07                 	db	7
   964  00FDD1  05                 	db	5
   965  00FDD2  81                 	db	129
   966  00FDD3  03                 	db	3
   967  00FDD4  08                 	db	8
   968  00FDD5  00                 	db	0
   969  00FDD6  02                 	db	2
   970  00FDD7  09                 	db	9
   971  00FDD8  04                 	db	4
   972  00FDD9  01                 	db	1
   973  00FDDA  00                 	db	0
   974  00FDDB  02                 	db	2
   975  00FDDC  0A                 	db	10
   976  00FDDD  00                 	db	0
   977  00FDDE  00                 	db	0
   978  00FDDF  00                 	db	0
   979  00FDE0  07                 	db	7
   980  00FDE1  05                 	db	5
   981  00FDE2  02                 	db	2
   982  00FDE3  02                 	db	2
   983  00FDE4  40                 	db	64
   984  00FDE5  00                 	db	0
   985  00FDE6  00                 	db	0
   986  00FDE7  07                 	db	7
   987  00FDE8  05                 	db	5
   988  00FDE9  82                 	db	130
   989  00FDEA  02                 	db	2
   990  00FDEB  40                 	db	64
   991  00FDEC  00                 	db	0
   992  00FDED  00                 	db	0
   993  00FDEE                     __end_of_configDescriptor1:
   994                           	opt stack 0
   995  00FDEE                     _sd002:
   996                           	opt stack 0
   997  00FDEE  26                 	db	38
   998  00FDEF  03                 	db	3
   999  00FDF0  0054               	dw	84
  1000  00FDF2  0065               	dw	101
  1001  00FDF4  0072               	dw	114
  1002  00FDF6  006D               	dw	109
  1003  00FDF8  0069               	dw	105
  1004  00FDFA  006E               	dw	110
  1005  00FDFC  0061               	dw	97
  1006  00FDFE  006C               	dw	108
  1007  00FE00  0020               	dw	32
  1008  00FE02  0049               	dw	73
  1009  00FE04  006E               	dw	110
  1010  00FE06  0074               	dw	116
  1011  00FE08  0065               	dw	101
  1012  00FE0A  0072               	dw	114
  1013  00FE0C  0066               	dw	102
  1014  00FE0E  0061               	dw	97
  1015  00FE10  0063               	dw	99
  1016  00FE12  0065               	dw	101
  1017  00FE14                     __end_of_sd002:
  1018                           	opt stack 0
  1019  00FE14                     _sd001:
  1020                           	opt stack 0
  1021  00FE14  1E                 	db	30
  1022  00FE15  03                 	db	3
  1023  00FE16  004D               	dw	77
  1024  00FE18  0065               	dw	101
  1025  00FE1A  0072               	dw	114
  1026  00FE1C  0063               	dw	99
  1027  00FE1E  0075               	dw	117
  1028  00FE20  0072               	dw	114
  1029  00FE22  0079               	dw	121
  1030  00FE24  0020               	dw	32
  1031  00FE26  0053               	dw	83
  1032  00FE28  0079               	dw	121
  1033  00FE2A  0073               	dw	115
  1034  00FE2C  0074               	dw	116
  1035  00FE2E  0065               	dw	101
  1036  00FE30  006D               	dw	109
  1037  00FE32                     __end_of_sd001:
  1038                           	opt stack 0
  1039  00FE32                     _MsgReady:
  1040                           	opt stack 0
  1041  00FE32  0D                 	db	13
  1042  00FE33  0A                 	db	10
  1043  00FE34  53                 	db	83
  1044  00FE35  79                 	db	121
  1045  00FE36  73                 	db	115
  1046  00FE37  74                 	db	116
  1047  00FE38  65                 	db	101
  1048  00FE39  6D                 	db	109
  1049  00FE3A  20                 	db	32
  1050  00FE3B  52                 	db	82
  1051  00FE3C  65                 	db	101
  1052  00FE3D  61                 	db	97
  1053  00FE3E  64                 	db	100
  1054  00FE3F  79                 	db	121
  1055  00FE40  2E                 	db	46
  1056  00FE41  2E                 	db	46
  1057  00FE42  2E                 	db	46
  1058  00FE43  20                 	db	32
  1059  00FE44  0D                 	db	13
  1060  00FE45  0A                 	db	10
  1061  00FE46  0D                 	db	13
  1062  00FE47  0A                 	db	10
  1063  00FE48  00                 	db	0
  1064  00FE49                     __end_of_MsgReady:
  1065                           	opt stack 0
  1066  00FE49                     _device_dsc:
  1067                           	opt stack 0
  1068  00FE49  12                 	db	18
  1069  00FE4A  01                 	db	1
  1070  00FE4B  0200               	dw	512
  1071  00FE4D  02                 	db	2
  1072  00FE4E  00                 	db	0
  1073  00FE4F  00                 	db	0
  1074  00FE50  08                 	db	8
  1075  00FE51  04D8               	dw	1240
  1076  00FE53  000A               	dw	10
  1077  00FE55  0100               	dw	256
  1078  00FE57  01                 	db	1
  1079  00FE58  02                 	db	2
  1080  00FE59  00                 	db	0
  1081  00FE5A  01                 	db	1
  1082  00FE5B                     __end_of_device_dsc:
  1083                           	opt stack 0
  1084  00FE5B                     _sd000:
  1085                           	opt stack 0
  1086  00FE5B  04                 	db	4
  1087  00FE5C  03                 	db	3
  1088  00FE5D  0409               	dw	1033
  1089  00FE5F                     __end_of_sd000:
  1090                           	opt stack 0
  1091  0000                     _RPINR1	set	3815
  1092  0000                     _UEP0bits	set	3878
  1093  0000                     _UIEbits	set	3894
  1094  0000                     _UADDR	set	3896
  1095  0000                     _UIE	set	3894
  1096  0000                     _UEIE	set	3895
  1097  0000                     _UCFG	set	3897
  1098  0000                     _RTCCAL	set	3902
  1099  0000                     _PADCFG1bits	set	3900
  1100  0000                     _RTCCFGbits	set	3903
  1101  0000                     _DSCONLbits	set	3916
  1102  0000                     _DSGPR1	set	3919
  1103  0000                     _DSGPR0	set	3918
  1104  0000                     _DSCONHbits	set	3917
  1105  0000                     _ANCON1bits	set	3913
  1106  0000                     _UEP1	set	3879
  1107  0000                     _UEP0	set	3878
  1108  0000                     _T1CONbits	set	4045
  1109  0000                     _PORTDbits	set	3971
  1110  0000                     _USTAT	set	3940
  1111  0000                     _PIR2bits	set	4001
  1112  0000                     _UCON	set	3941
  1113  0000                     _UIRbits	set	3938
  1114  0000                     _UCONbits	set	3941
  1115  0000                     _UIR	set	3938
  1116  0000                     _UEIR	set	3939
  1117  0000                     _PIE2bits	set	4000
  1118  0000                     _BAUDCON2	set	3964
  1119  0000                     _RCSTA2	set	3996
  1120  0000                     _BAUDCON1	set	3966
  1121  0000                     _RCSTA1	set	4012
  1122  0000                     _TRISCbits	set	3988
  1123  0000                     _TXSTA2	set	4008
  1124  0000                     _TXSTA1	set	4013
  1125  0000                     _RCREG2	set	4010
  1126  0000                     _RCREG1	set	4015
  1127  0000                     _TXREG2	set	4009
  1128  0000                     _TXREG1	set	4014
  1129  0000                     _SPBRG2	set	4011
  1130  0000                     _SPBRGH2	set	3965
  1131  0000                     _SPBRG1	set	4016
  1132  0000                     _SPBRGH1	set	3967
  1133  0000                     _PR4	set	3959
  1134  0000                     _PR2	set	4043
  1135  0000                     _PIE1bits	set	3997
  1136  0000                     _IPR1bits	set	3999
  1137  0000                     _T4CONbits	set	3958
  1138  0000                     _T2CONbits	set	4042
  1139  0000                     _ALRMVALL	set	3982
  1140  0000                     _ALRMVALH	set	3983
  1141  0000                     _RTCVALH	set	3993
  1142  0000                     _RTCVALL	set	3992
  1143  0000                     _ALRMRPTbits	set	3984
  1144  0000                     _ALRMCFGbits	set	3985
  1145  0000                     _PIE3bits	set	4003
  1146  0000                     _IPR3bits	set	4005
  1147  0000                     _OSCCONbits	set	4051
  1148  0000                     _PORTEbits	set	3972
  1149  0000                     _TRISEbits	set	3990
  1150  0000                     _WDTCONbits	set	4032
  1151  0000                     _INTCON2bits	set	4081
  1152  0000                     _TRISBbits	set	3987
  1153  0000                     _OSCTUNEbits	set	3995
  1154  0000                     _SSP2CON1	set	3954
  1155  0000                     _TRISDbits	set	3989
  1156  0000                     _SSP2BUF	set	3957
  1157  0000                     _SSP2CON2bits	set	3953
  1158  0000                     _SSP2STAT	set	3955
  1159  0000                     _SSP2CON2	set	3953
  1160  0000                     _SSP2ADD	set	3956
  1161  0000                     _PIR1bits	set	3998
  1162  0000                     _PIR3bits	set	4004
  1163  0000                     _INTCON3bits	set	4080
  1164  0000                     _INTCONbits	set	4082
  1165  0000                     _RCONbits	set	4048
  1166  00FE5F                     STR_21:
  1167  00FE5F  20                 	db	32
  1168  00FE60  4C                 	db	76	;'L'
  1169  00FE61  61                 	db	97	;'a'
  1170  00FE62  7A                 	db	122	;'z'
  1171  00FE63  79                 	db	121	;'y'
  1172  00FE64  20                 	db	32
  1173  00FE65  64                 	db	100	;'d'
  1174  00FE66  65                 	db	101	;'e'
  1175  00FE67  76                 	db	118	;'v'
  1176  00FE68  69                 	db	105	;'i'
  1177  00FE69  63                 	db	99	;'c'
  1178  00FE6A  65                 	db	101	;'e'
  1179  00FE6B  2E                 	db	46
  1180  00FE6C  2E                 	db	46
  1181  00FE6D  2E                 	db	46
  1182  00FE6E  79                 	db	121	;'y'
  1183  00FE6F  6F                 	db	111	;'o'
  1184  00FE70  75                 	db	117	;'u'
  1185  00FE71  27                 	db	39
  1186  00FE72  76                 	db	118	;'v'
  1187  00FE73  65                 	db	101	;'e'
  1188  00FE74  20                 	db	32
  1189  00FE75  62                 	db	98	;'b'
  1190  00FE76  65                 	db	101	;'e'
  1191  00FE77  65                 	db	101	;'e'
  1192  00FE78  6E                 	db	110	;'n'
  1193  00FE79  20                 	db	32
  1194  00FE7A  74                 	db	116	;'t'
  1195  00FE7B  69                 	db	105	;'i'
  1196  00FE7C  6D                 	db	109	;'m'
  1197  00FE7D  65                 	db	101	;'e'
  1198  00FE7E  64                 	db	100	;'d'
  1199  00FE7F  2D                 	db	45
  1200  00FE80  6F                 	db	111	;'o'
  1201  00FE81  75                 	db	117	;'u'
  1202  00FE82  74                 	db	116	;'t'
  1203  00FE83  21                 	db	33
  1204  00FE84  21                 	db	33
  1205  00FE85  21                 	db	33
  1206  00FE86  0D                 	db	13
  1207  00FE87  0A                 	db	10
  1208  00FE88  00                 	db	0
  1209  00FE89                     STR_8:
  1210  00FE89  41                 	db	65	;'A'
  1211  00FE8A  54                 	db	84	;'T'
  1212  00FE8B  2B                 	db	43
  1213  00FE8C  53                 	db	83	;'S'
  1214  00FE8D  41                 	db	65	;'A'
  1215  00FE8E  50                 	db	80	;'P'
  1216  00FE8F  42                 	db	66	;'B'
  1217  00FE90  52                 	db	82	;'R'
  1218  00FE91  3D                 	db	61	;'='
  1219  00FE92  33                 	db	51	;'3'
  1220  00FE93  2C                 	db	44
  1221  00FE94  31                 	db	49	;'1'
  1222  00FE95  2C                 	db	44
  1223  00FE96  22                 	db	34
  1224  00FE97  43                 	db	67	;'C'
  1225  00FE98  6F                 	db	111	;'o'
  1226  00FE99  6E                 	db	110	;'n'
  1227  00FE9A  74                 	db	116	;'t'
  1228  00FE9B  79                 	db	121	;'y'
  1229  00FE9C  70                 	db	112	;'p'
  1230  00FE9D  65                 	db	101	;'e'
  1231  00FE9E  22                 	db	34
  1232  00FE9F  2C                 	db	44
  1233  00FEA0  22                 	db	34
  1234  00FEA1  47                 	db	71	;'G'
  1235  00FEA2  50                 	db	80	;'P'
  1236  00FEA3  52                 	db	82	;'R'
  1237  00FEA4  53                 	db	83	;'S'
  1238  00FEA5  22                 	db	34
  1239  00FEA6  0D                 	db	13
  1240  00FEA7  00                 	db	0
  1241  00FEA8                     STR_14:
  1242  00FEA8  41                 	db	65	;'A'
  1243  00FEA9  54                 	db	84	;'T'
  1244  00FEAA  2B                 	db	43
  1245  00FEAB  48                 	db	72	;'H'
  1246  00FEAC  54                 	db	84	;'T'
  1247  00FEAD  54                 	db	84	;'T'
  1248  00FEAE  50                 	db	80	;'P'
  1249  00FEAF  50                 	db	80	;'P'
  1250  00FEB0  41                 	db	65	;'A'
  1251  00FEB1  52                 	db	82	;'R'
  1252  00FEB2  41                 	db	65	;'A'
  1253  00FEB3  3D                 	db	61	;'='
  1254  00FEB4  22                 	db	34
  1255  00FEB5  43                 	db	67	;'C'
  1256  00FEB6  49                 	db	73	;'I'
  1257  00FEB7  44                 	db	68	;'D'
  1258  00FEB8  22                 	db	34
  1259  00FEB9  2C                 	db	44
  1260  00FEBA  31                 	db	49	;'1'
  1261  00FEBB  0D                 	db	13
  1262  00FEBC  00                 	db	0
  1263  00FEBD                     STR_9:
  1264  00FEBD  41                 	db	65	;'A'
  1265  00FEBE  54                 	db	84	;'T'
  1266  00FEBF  2B                 	db	43
  1267  00FEC0  53                 	db	83	;'S'
  1268  00FEC1  41                 	db	65	;'A'
  1269  00FEC2  50                 	db	80	;'P'
  1270  00FEC3  42                 	db	66	;'B'
  1271  00FEC4  52                 	db	82	;'R'
  1272  00FEC5  3D                 	db	61	;'='
  1273  00FEC6  33                 	db	51	;'3'
  1274  00FEC7  2C                 	db	44
  1275  00FEC8  31                 	db	49	;'1'
  1276  00FEC9  2C                 	db	44
  1277  00FECA  22                 	db	34
  1278  00FECB  41                 	db	65	;'A'
  1279  00FECC  50                 	db	80	;'P'
  1280  00FECD  4E                 	db	78	;'N'
  1281  00FECE  22                 	db	34
  1282  00FECF  2C                 	db	44
  1283  00FED0  22                 	db	34
  1284  00FED1  00                 	db	0
  1285  00FED2                     STR_23:
  1286  00FED2  46                 	db	70	;'F'
  1287  00FED3  72                 	db	114	;'r'
  1288  00FED4  61                 	db	97	;'a'
  1289  00FED5  6D                 	db	109	;'m'
  1290  00FED6  65                 	db	101	;'e'
  1291  00FED7  77                 	db	119	;'w'
  1292  00FED8  6F                 	db	111	;'o'
  1293  00FED9  72                 	db	114	;'r'
  1294  00FEDA  6B                 	db	107	;'k'
  1295  00FEDB  20                 	db	32
  1296  00FEDC  56                 	db	86	;'V'
  1297  00FEDD  65                 	db	101	;'e'
  1298  00FEDE  72                 	db	114	;'r'
  1299  00FEDF  73                 	db	115	;'s'
  1300  00FEE0  69                 	db	105	;'i'
  1301  00FEE1  6F                 	db	111	;'o'
  1302  00FEE2  6E                 	db	110	;'n'
  1303  00FEE3  3A                 	db	58	;':'
  1304  00FEE4  20                 	db	32
  1305  00FEE5  00                 	db	0
  1306  00FEE6                     STR_15:
  1307  00FEE6  41                 	db	65	;'A'
  1308  00FEE7  54                 	db	84	;'T'
  1309  00FEE8  2B                 	db	43
  1310  00FEE9  48                 	db	72	;'H'
  1311  00FEEA  54                 	db	84	;'T'
  1312  00FEEB  54                 	db	84	;'T'
  1313  00FEEC  50                 	db	80	;'P'
  1314  00FEED  50                 	db	80	;'P'
  1315  00FEEE  41                 	db	65	;'A'
  1316  00FEEF  52                 	db	82	;'R'
  1317  00FEF0  41                 	db	65	;'A'
  1318  00FEF1  3D                 	db	61	;'='
  1319  00FEF2  22                 	db	34
  1320  00FEF3  55                 	db	85	;'U'
  1321  00FEF4  52                 	db	82	;'R'
  1322  00FEF5  4C                 	db	76	;'L'
  1323  00FEF6  22                 	db	34
  1324  00FEF7  2C                 	db	44
  1325  00FEF8  22                 	db	34
  1326  00FEF9  00                 	db	0
  1327  00FEFA                     STR_31:
  1328  00FEFA  41                 	db	65	;'A'
  1329  00FEFB  54                 	db	84	;'T'
  1330  00FEFC  2B                 	db	43
  1331  00FEFD  43                 	db	67	;'C'
  1332  00FEFE  4D                 	db	77	;'M'
  1333  00FEFF  47                 	db	71	;'G'
  1334  00FF00  44                 	db	68	;'D'
  1335  00FF01  41                 	db	65	;'A'
  1336  00FF02  3D                 	db	61	;'='
  1337  00FF03  44                 	db	68	;'D'
  1338  00FF04  45                 	db	69	;'E'
  1339  00FF05  4C                 	db	76	;'L'
  1340  00FF06  20                 	db	32
  1341  00FF07  41                 	db	65	;'A'
  1342  00FF08  4C                 	db	76	;'L'
  1343  00FF09  4C                 	db	76	;'L'
  1344  00FF0A  0D                 	db	13
  1345  00FF0B  0A                 	db	10
  1346  00FF0C  00                 	db	0
  1347  00FF0D                     STR_27:
  1348  00FF0D  42                 	db	66	;'B'
  1349  00FF0E  75                 	db	117	;'u'
  1350  00FF0F  69                 	db	105	;'i'
  1351  00FF10  6C                 	db	108	;'l'
  1352  00FF11  64                 	db	100	;'d'
  1353  00FF12  20                 	db	32
  1354  00FF13  44                 	db	68	;'D'
  1355  00FF14  61                 	db	97	;'a'
  1356  00FF15  74                 	db	116	;'t'
  1357  00FF16  65                 	db	101	;'e'
  1358  00FF17  3A                 	db	58	;':'
  1359  00FF18  20                 	db	32
  1360  00FF19  25                 	db	37
  1361  00FF1A  73                 	db	115	;'s'
  1362  00FF1B  0D                 	db	13
  1363  00FF1C  0A                 	db	10
  1364  00FF1D  00                 	db	0
  1365  00FF1E                     STR_16:
  1366  00FF1E  41                 	db	65	;'A'
  1367  00FF1F  54                 	db	84	;'T'
  1368  00FF20  2B                 	db	43
  1369  00FF21  48                 	db	72	;'H'
  1370  00FF22  54                 	db	84	;'T'
  1371  00FF23  54                 	db	84	;'T'
  1372  00FF24  50                 	db	80	;'P'
  1373  00FF25  41                 	db	65	;'A'
  1374  00FF26  43                 	db	67	;'C'
  1375  00FF27  54                 	db	84	;'T'
  1376  00FF28  49                 	db	73	;'I'
  1377  00FF29  4F                 	db	79	;'O'
  1378  00FF2A  4E                 	db	78	;'N'
  1379  00FF2B  3D                 	db	61	;'='
  1380  00FF2C  30                 	db	48	;'0'
  1381  00FF2D  0D                 	db	13
  1382  00FF2E  00                 	db	0
  1383  00FF2F                     STR_29:
  1384  00FF2F  41                 	db	65	;'A'
  1385  00FF30  54                 	db	84	;'T'
  1386  00FF31  2B                 	db	43
  1387  00FF32  43                 	db	67	;'C'
  1388  00FF33  4D                 	db	77	;'M'
  1389  00FF34  47                 	db	71	;'G'
  1390  00FF35  44                 	db	68	;'D'
  1391  00FF36  3D                 	db	61	;'='
  1392  00FF37  31                 	db	49	;'1'
  1393  00FF38  2C                 	db	44
  1394  00FF39  30                 	db	48	;'0'
  1395  00FF3A  0D                 	db	13
  1396  00FF3B  0A                 	db	10
  1397  00FF3C  00                 	db	0
  1398  00FF3D  41                 	db	65	;'A'
  1399  00FF3E  54                 	db	84	;'T'
  1400  00FF3F  2B                 	db	43
  1401  00FF40  48                 	db	72	;'H'
  1402  00FF41  54                 	db	84	;'T'
  1403  00FF42  54                 	db	84	;'T'
  1404  00FF43  50                 	db	80	;'P'
  1405  00FF44  53                 	db	83	;'S'
  1406  00FF45  53                 	db	83	;'S'
  1407  00FF46  4C                 	db	76	;'L'
  1408  00FF47  3D                 	db	61	;'='
  1409  00FF48  30                 	db	48	;'0'
  1410  00FF49  0D                 	db	13
  1411  00FF4A  00                 	db	0
  1412  00FF4B                     STR_10:
  1413  00FF4B  41                 	db	65	;'A'
  1414  00FF4C  54                 	db	84	;'T'
  1415  00FF4D  2B                 	db	43
  1416  00FF4E  53                 	db	83	;'S'
  1417  00FF4F  41                 	db	65	;'A'
  1418  00FF50  50                 	db	80	;'P'
  1419  00FF51  42                 	db	66	;'B'
  1420  00FF52  52                 	db	82	;'R'
  1421  00FF53  3D                 	db	61	;'='
  1422  00FF54  31                 	db	49	;'1'
  1423  00FF55  2C                 	db	44
  1424  00FF56  31                 	db	49	;'1'
  1425  00FF57  0D                 	db	13
  1426  00FF58  00                 	db	0
  1427  00FF59                     STR_11:
  1428  00FF59  41                 	db	65	;'A'
  1429  00FF5A  54                 	db	84	;'T'
  1430  00FF5B  2B                 	db	43
  1431  00FF5C  53                 	db	83	;'S'
  1432  00FF5D  41                 	db	65	;'A'
  1433  00FF5E  50                 	db	80	;'P'
  1434  00FF5F  42                 	db	66	;'B'
  1435  00FF60  52                 	db	82	;'R'
  1436  00FF61  3D                 	db	61	;'='
  1437  00FF62  32                 	db	50	;'2'
  1438  00FF63  2C                 	db	44
  1439  00FF64  31                 	db	49	;'1'
  1440  00FF65  0D                 	db	13
  1441  00FF66  00                 	db	0
  1442  00FF67                     STR_13:
  1443  00FF67  41                 	db	65	;'A'
  1444  00FF68  54                 	db	84	;'T'
  1445  00FF69  2B                 	db	43
  1446  00FF6A  48                 	db	72	;'H'
  1447  00FF6B  54                 	db	84	;'T'
  1448  00FF6C  54                 	db	84	;'T'
  1449  00FF6D  50                 	db	80	;'P'
  1450  00FF6E  53                 	db	83	;'S'
  1451  00FF6F  53                 	db	83	;'S'
  1452  00FF70  4C                 	db	76	;'L'
  1453  00FF71  3D                 	db	61	;'='
  1454  00FF72  31                 	db	49	;'1'
  1455  00FF73  0D                 	db	13
  1456  00FF74  00                 	db	0
  1457  00FF75                     STR_2:
  1458  00FF75  41                 	db	65	;'A'
  1459  00FF76  54                 	db	84	;'T'
  1460  00FF77  2B                 	db	43
  1461  00FF78  49                 	db	73	;'I'
  1462  00FF79  50                 	db	80	;'P'
  1463  00FF7A  52                 	db	82	;'R'
  1464  00FF7B  3D                 	db	61	;'='
  1465  00FF7C  39                 	db	57	;'9'
  1466  00FF7D  36                 	db	54	;'6'
  1467  00FF7E  30                 	db	48	;'0'
  1468  00FF7F  30                 	db	48	;'0'
  1469  00FF80  0D                 	db	13
  1470  00FF81  0A                 	db	10
  1471  00FF82  00                 	db	0
  1472  00FF83                     STR_17:
  1473  00FF83  41                 	db	65	;'A'
  1474  00FF84  54                 	db	84	;'T'
  1475  00FF85  2B                 	db	43
  1476  00FF86  48                 	db	72	;'H'
  1477  00FF87  54                 	db	84	;'T'
  1478  00FF88  54                 	db	84	;'T'
  1479  00FF89  50                 	db	80	;'P'
  1480  00FF8A  52                 	db	82	;'R'
  1481  00FF8B  45                 	db	69	;'E'
  1482  00FF8C  41                 	db	65	;'A'
  1483  00FF8D  44                 	db	68	;'D'
  1484  00FF8E  0D                 	db	13
  1485  00FF8F  00                 	db	0
  1486  00FF90                     STR_18:
  1487  00FF90  41                 	db	65	;'A'
  1488  00FF91  54                 	db	84	;'T'
  1489  00FF92  2B                 	db	43
  1490  00FF93  48                 	db	72	;'H'
  1491  00FF94  54                 	db	84	;'T'
  1492  00FF95  54                 	db	84	;'T'
  1493  00FF96  50                 	db	80	;'P'
  1494  00FF97  54                 	db	84	;'T'
  1495  00FF98  45                 	db	69	;'E'
  1496  00FF99  52                 	db	82	;'R'
  1497  00FF9A  4D                 	db	77	;'M'
  1498  00FF9B  0D                 	db	13
  1499  00FF9C  00                 	db	0
  1500  00FF9D                     STR_12:
  1501  00FF9D  41                 	db	65	;'A'
  1502  00FF9E  54                 	db	84	;'T'
  1503  00FF9F  2B                 	db	43
  1504  00FFA0  48                 	db	72	;'H'
  1505  00FFA1  54                 	db	84	;'T'
  1506  00FFA2  54                 	db	84	;'T'
  1507  00FFA3  50                 	db	80	;'P'
  1508  00FFA4  49                 	db	73	;'I'
  1509  00FFA5  4E                 	db	78	;'N'
  1510  00FFA6  49                 	db	73	;'I'
  1511  00FFA7  54                 	db	84	;'T'
  1512  00FFA8  0D                 	db	13
  1513  00FFA9  00                 	db	0
  1514  00FFAA                     STR_32:
  1515  00FFAA  41                 	db	65	;'A'
  1516  00FFAB  54                 	db	84	;'T'
  1517  00FFAC  2B                 	db	43
  1518  00FFAD  43                 	db	67	;'C'
  1519  00FFAE  4C                 	db	76	;'L'
  1520  00FFAF  49                 	db	73	;'I'
  1521  00FFB0  50                 	db	80	;'P'
  1522  00FFB1  3D                 	db	61	;'='
  1523  00FFB2  31                 	db	49	;'1'
  1524  00FFB3  0D                 	db	13
  1525  00FFB4  0A                 	db	10
  1526  00FFB5  00                 	db	0
  1527  00FFB6                     STR_28:
  1528  00FFB6  4D                 	db	77	;'M'
  1529  00FFB7  61                 	db	97	;'a'
  1530  00FFB8  72                 	db	114	;'r'
  1531  00FFB9  20                 	db	32
  1532  00FFBA  32                 	db	50	;'2'
  1533  00FFBB  36                 	db	54	;'6'
  1534  00FFBC  20                 	db	32
  1535  00FFBD  32                 	db	50	;'2'
  1536  00FFBE  30                 	db	48	;'0'
  1537  00FFBF  32                 	db	50	;'2'
  1538  00FFC0  32                 	db	50	;'2'
  1539  00FFC1  00                 	db	0
  1540  00FFC2                     STR_4:
  1541  00FFC2  41                 	db	65	;'A'
  1542  00FFC3  54                 	db	84	;'T'
  1543  00FFC4  2B                 	db	43
  1544  00FFC5  43                 	db	67	;'C'
  1545  00FFC6  4D                 	db	77	;'M'
  1546  00FFC7  47                 	db	71	;'G'
  1547  00FFC8  52                 	db	82	;'R'
  1548  00FFC9  3D                 	db	61	;'='
  1549  00FFCA  31                 	db	49	;'1'
  1550  00FFCB  0D                 	db	13
  1551  00FFCC  0A                 	db	10
  1552  00FFCD  00                 	db	0
  1553  00FFCE                     STR_5:
  1554  00FFCE  41                 	db	65	;'A'
  1555  00FFCF  54                 	db	84	;'T'
  1556  00FFD0  2B                 	db	43
  1557  00FFD1  43                 	db	67	;'C'
  1558  00FFD2  4D                 	db	77	;'M'
  1559  00FFD3  47                 	db	71	;'G'
  1560  00FFD4  53                 	db	83	;'S'
  1561  00FFD5  3D                 	db	61	;'='
  1562  00FFD6  22                 	db	34
  1563  00FFD7  00                 	db	0
  1564  00FFD8                     STR_33:
  1565  00FFD8  28                 	db	40
  1566  00FFD9  6E                 	db	110	;'n'
  1567  00FFDA  75                 	db	117	;'u'
  1568  00FFDB  6C                 	db	108	;'l'
  1569  00FFDC  6C                 	db	108	;'l'
  1570  00FFDD  29                 	db	41
  1571  00FFDE  00                 	db	0
  1572  00FFDF                     STR_3:
  1573  00FFDF  41                 	db	65	;'A'
  1574  00FFE0  54                 	db	84	;'T'
  1575  00FFE1  45                 	db	69	;'E'
  1576  00FFE2  30                 	db	48	;'0'
  1577  00FFE3  0D                 	db	13
  1578  00FFE4  0A                 	db	10
  1579  00FFE5  00                 	db	0
  1580  00FFE6                     STR_1:
  1581  00FFE6  41                 	db	65	;'A'
  1582  00FFE7  54                 	db	84	;'T'
  1583  00FFE8  0D                 	db	13
  1584  00FFE9  0A                 	db	10
  1585  00FFEA  00                 	db	0
  1586  00FFEB  41                 	db	65	;'A'
  1587  00FFEC  54                 	db	84	;'T'
  1588  00FFED  41                 	db	65	;'A'
  1589  00FFEE  0D                 	db	13
  1590  00FFEF  00                 	db	0
  1591  00FFF0                     STR_6:
  1592  00FFF0  41                 	db	65	;'A'
  1593  00FFF1  54                 	db	84	;'T'
  1594  00FFF2  48                 	db	72	;'H'
  1595  00FFF3  0D                 	db	13
  1596  00FFF4  00                 	db	0
  1597  00FFF5                     STR_24:
  1598  00FFF5  2E                 	db	46
  1599  00FFF6  00                 	db	0
  1600  0000                     
  1601                           ; #config settings
  1602  00FFF7  00                 	db	0	; dummy byte at the end
  1603  0000                     
  1604                           	psect	cinit
  1605  002438                     __pcinit:
  1606                           	opt stack 0
  1607  002438                     start_initialization:
  1608                           	opt stack 0
  1609  002438                     __initialization:
  1610                           	opt stack 0
  1611                           
  1612                           ; Initialize objects allocated to BANK5 (80 bytes)
  1613                           ; load TBLPTR registers with __pidataBANK5
  1614  002438  0E52               	movlw	low __pidataBANK5
  1615  00243A  6EF6               	movwf	tblptrl,c
  1616  00243C  0E5A               	movlw	high __pidataBANK5
  1617  00243E  6EF7               	movwf	tblptrh,c
  1618  002440  0E00               	movlw	low (__pidataBANK5 shr (0+16))
  1619  002442  6EF8               	movwf	tblptru,c
  1620  002444  EE05  F0A4         	lfsr	0,__pdataBANK5
  1621  002448  EE10 F050          	lfsr	1,80
  1622  00244C                     copy_data0:
  1623  00244C  0009               	tblrd		*+
  1624  00244E  CFF5 FFEE          	movff	tablat,postinc0
  1625  002452  50E5               	movf	postdec1,w,c
  1626  002454  50E1               	movf	fsr1l,w,c
  1627  002456  E1FA               	bnz	copy_data0
  1628                           
  1629                           ; Initialize objects allocated to BANK3 (73 bytes)
  1630                           ; load TBLPTR registers with __pidataBANK3
  1631  002458  0EC4               	movlw	low __pidataBANK3
  1632  00245A  6EF6               	movwf	tblptrl,c
  1633  00245C  0E5C               	movlw	high __pidataBANK3
  1634  00245E  6EF7               	movwf	tblptrh,c
  1635  002460  0E00               	movlw	low (__pidataBANK3 shr (0+16))
  1636  002462  6EF8               	movwf	tblptru,c
  1637  002464  EE03  F0B7         	lfsr	0,__pdataBANK3
  1638  002468  EE10 F049          	lfsr	1,73
  1639  00246C                     copy_data1:
  1640  00246C  0009               	tblrd		*+
  1641  00246E  CFF5 FFEE          	movff	tablat,postinc0
  1642  002472  50E5               	movf	postdec1,w,c
  1643  002474  50E1               	movf	fsr1l,w,c
  1644  002476  E1FA               	bnz	copy_data1
  1645                           
  1646                           ; Initialize objects allocated to BANK2 (13 bytes)
  1647                           ; load TBLPTR registers with __pidataBANK2
  1648  002478  0E16               	movlw	low __pidataBANK2
  1649  00247A  6EF6               	movwf	tblptrl,c
  1650  00247C  0E68               	movlw	high __pidataBANK2
  1651  00247E  6EF7               	movwf	tblptrh,c
  1652  002480  0E00               	movlw	low (__pidataBANK2 shr (0+16))
  1653  002482  6EF8               	movwf	tblptru,c
  1654  002484  EE02  F0F3         	lfsr	0,__pdataBANK2
  1655  002488  EE10 F00D          	lfsr	1,13
  1656  00248C                     copy_data2:
  1657  00248C  0009               	tblrd		*+
  1658  00248E  CFF5 FFEE          	movff	tablat,postinc0
  1659  002492  50E5               	movf	postdec1,w,c
  1660  002494  50E1               	movf	fsr1l,w,c
  1661  002496  E1FA               	bnz	copy_data2
  1662                           
  1663                           ; Initialize objects allocated to BANK1 (2 bytes)
  1664                           ; load TBLPTR registers with __pidataBANK1
  1665  002498  0EA0               	movlw	low __pidataBANK1
  1666  00249A  6EF6               	movwf	tblptrl,c
  1667  00249C  0E68               	movlw	high __pidataBANK1
  1668  00249E  6EF7               	movwf	tblptrh,c
  1669  0024A0  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1670  0024A2  6EF8               	movwf	tblptru,c
  1671  0024A4  0009               	tblrd		*+	;fetch initializer
  1672  0024A6  CFF5 F1FE          	movff	tablat,__pdataBANK1
  1673  0024AA  0009               	tblrd		*+	;fetch initializer
  1674  0024AC  CFF5 F1FF          	movff	tablat,__pdataBANK1+1
  1675                           
  1676                           ; Initialize objects allocated to BANK4 (13 bytes)
  1677                           ; load TBLPTR registers with __pidataBANK4
  1678  0024B0  0E23               	movlw	low __pidataBANK4
  1679  0024B2  6EF6               	movwf	tblptrl,c
  1680  0024B4  0E68               	movlw	high __pidataBANK4
  1681  0024B6  6EF7               	movwf	tblptrh,c
  1682  0024B8  0E00               	movlw	low (__pidataBANK4 shr (0+16))
  1683  0024BA  6EF8               	movwf	tblptru,c
  1684  0024BC  EE04  F0EF         	lfsr	0,__pdataBANK4
  1685  0024C0  EE10 F00D          	lfsr	1,13
  1686  0024C4                     copy_data3:
  1687  0024C4  0009               	tblrd		*+
  1688  0024C6  CFF5 FFEE          	movff	tablat,postinc0
  1689  0024CA  50E5               	movf	postdec1,w,c
  1690  0024CC  50E1               	movf	fsr1l,w,c
  1691  0024CE  E1FA               	bnz	copy_data3
  1692                           
  1693                           ; Initialize objects allocated to BANK0 (2 bytes)
  1694                           ; load TBLPTR registers with __pidataBANK0
  1695  0024D0  0E9E               	movlw	low __pidataBANK0
  1696  0024D2  6EF6               	movwf	tblptrl,c
  1697  0024D4  0E68               	movlw	high __pidataBANK0
  1698  0024D6  6EF7               	movwf	tblptrh,c
  1699  0024D8  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1700  0024DA  6EF8               	movwf	tblptru,c
  1701  0024DC  0009               	tblrd		*+	;fetch initializer
  1702  0024DE  CFF5 F0E1          	movff	tablat,__pdataBANK0
  1703  0024E2  0009               	tblrd		*+	;fetch initializer
  1704  0024E4  CFF5 F0E2          	movff	tablat,__pdataBANK0+1
  1705                           
  1706                           ; Clear objects allocated to BIGRAMl (800 bytes)
  1707  0024E8  EE0A  F0C8         	lfsr	0,__pbssBIGRAMl
  1708  0024EC  EE13 F020          	lfsr	1,800
  1709  0024F0                     clear_0:
  1710  0024F0  6AEE               	clrf	postinc0,c
  1711  0024F2  50E5               	movf	postdec1,w,c
  1712  0024F4  50E1               	movf	fsr1l,w,c
  1713  0024F6  E1FC               	bnz	clear_0
  1714  0024F8  50E2               	movf	fsr1h,w,c
  1715  0024FA  E1FA               	bnz	clear_0
  1716                           
  1717                           ; Clear objects allocated to BANK9 (200 bytes)
  1718  0024FC  EE09  F000         	lfsr	0,__pbssBANK9
  1719  002500  0EC8               	movlw	200
  1720  002502                     clear_1:
  1721  002502  6AEE               	clrf	postinc0,c
  1722  002504  06E8               	decf	wreg,f,c
  1723  002506  E1FD               	bnz	clear_1
  1724                           
  1725                           ; Clear objects allocated to BANK8 (200 bytes)
  1726  002508  EE08  F000         	lfsr	0,__pbssBANK8
  1727  00250C  0EC8               	movlw	200
  1728  00250E                     clear_2:
  1729  00250E  6AEE               	clrf	postinc0,c
  1730  002510  06E8               	decf	wreg,f,c
  1731  002512  E1FD               	bnz	clear_2
  1732                           
  1733                           ; Clear objects allocated to BANK7 (246 bytes)
  1734  002514  EE07  F000         	lfsr	0,__pbssBANK7
  1735  002518  0EF6               	movlw	246
  1736  00251A                     clear_3:
  1737  00251A  6AEE               	clrf	postinc0,c
  1738  00251C  06E8               	decf	wreg,f,c
  1739  00251E  E1FD               	bnz	clear_3
  1740                           
  1741                           ; Clear objects allocated to BANK6 (220 bytes)
  1742  002520  EE06  F000         	lfsr	0,__pbssBANK6
  1743  002524  0EDC               	movlw	220
  1744  002526                     clear_4:
  1745  002526  6AEE               	clrf	postinc0,c
  1746  002528  06E8               	decf	wreg,f,c
  1747  00252A  E1FD               	bnz	clear_4
  1748                           
  1749                           ; Clear objects allocated to BANK5 (164 bytes)
  1750  00252C  EE05  F000         	lfsr	0,__pbssBANK5
  1751  002530  0EA4               	movlw	164
  1752  002532                     clear_5:
  1753  002532  6AEE               	clrf	postinc0,c
  1754  002534  06E8               	decf	wreg,f,c
  1755  002536  E1FD               	bnz	clear_5
  1756                           
  1757                           ; Clear objects allocated to BANK3 (183 bytes)
  1758  002538  EE03  F000         	lfsr	0,__pbssBANK3
  1759  00253C  0EB7               	movlw	183
  1760  00253E                     clear_6:
  1761  00253E  6AEE               	clrf	postinc0,c
  1762  002540  06E8               	decf	wreg,f,c
  1763  002542  E1FD               	bnz	clear_6
  1764                           
  1765                           ; Clear objects allocated to BANK2 (43 bytes)
  1766  002544  EE02  F0C8         	lfsr	0,__pbssBANK2
  1767  002548  0E2B               	movlw	43
  1768  00254A                     clear_7:
  1769  00254A  6AEE               	clrf	postinc0,c
  1770  00254C  06E8               	decf	wreg,f,c
  1771  00254E  E1FD               	bnz	clear_7
  1772                           
  1773                           ; Clear objects allocated to BANK1 (53 bytes)
  1774  002550  EE01  F0C9         	lfsr	0,__pbssBANK1
  1775  002554  0E35               	movlw	53
  1776  002556                     clear_8:
  1777  002556  6AEE               	clrf	postinc0,c
  1778  002558  06E8               	decf	wreg,f,c
  1779  00255A  E1FD               	bnz	clear_8
  1780                           
  1781                           ; Clear objects allocated to BANK4 (175 bytes)
  1782  00255C  EE04  F040         	lfsr	0,__pbssBANK4
  1783  002560  0EAF               	movlw	175
  1784  002562                     clear_9:
  1785  002562  6AEE               	clrf	postinc0,c
  1786  002564  06E8               	decf	wreg,f,c
  1787  002566  E1FD               	bnz	clear_9
  1788                           
  1789                           ; Clear objects allocated to BANK0 (49 bytes)
  1790  002568  EE00  F0B0         	lfsr	0,__pbssBANK0
  1791  00256C  0E31               	movlw	49
  1792  00256E                     clear_10:
  1793  00256E  6AEE               	clrf	postinc0,c
  1794  002570  06E8               	decf	wreg,f,c
  1795  002572  E1FD               	bnz	clear_10
  1796                           
  1797                           ; Clear objects allocated to COMRAM (31 bytes)
  1798  002574  EE00  F023         	lfsr	0,__pbssCOMRAM
  1799  002578  0E1F               	movlw	31
  1800  00257A                     clear_11:
  1801  00257A  6AEE               	clrf	postinc0,c
  1802  00257C  06E8               	decf	wreg,f,c
  1803  00257E  E1FD               	bnz	clear_11
  1804  002580                     end_of_initialization:
  1805                           	opt stack 0
  1806  002580                     __end_of__initialization:
  1807                           	opt stack 0
  1808  002580  9042               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1809  002582  9242               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1810  002584  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1811  002586  6EF8               	movwf	tblptru,c
  1812  002588  0100               	movlb	0
  1813  00258A  EF18  F034         	goto	_main	;jump to C main() function
  1814                           tblptru	equ	0xFF8
  1815                           tblptrh	equ	0xFF7
  1816                           tblptrl	equ	0xFF6
  1817                           tablat	equ	0xFF5
  1818                           postinc0	equ	0xFEE
  1819                           wreg	equ	0xFE8
  1820                           postdec1	equ	0xFE5
  1821                           fsr1h	equ	0xFE2
  1822                           fsr1l	equ	0xFE1
  1823                           
  1824                           	psect	bssCOMRAM
  1825  000023                     __pbssCOMRAM:
  1826                           	opt stack 0
  1827  000023                     Uart_MdmGsmGprsReadService@RxCounter:
  1828                           	opt stack 0
  1829  000023                     	ds	2
  1830  000025                     _USBDeferOUTDataStagePackets:
  1831                           	opt stack 0
  1832  000025                     	ds	1
  1833  000026                     _USBDeferINDataStagePackets:
  1834                           	opt stack 0
  1835  000026                     	ds	1
  1836  000027                     _USBStatusStageEnabledFlag2:
  1837                           	opt stack 0
  1838  000027                     	ds	1
  1839  000028                     _USBStatusStageEnabledFlag1:
  1840                           	opt stack 0
  1841  000028                     	ds	1
  1842  000029                     CheckModem@CheckMdmSts:
  1843                           	opt stack 0
  1844  000029                     	ds	1
  1845  00002A                     _ComChecCompleted:
  1846                           	opt stack 0
  1847  00002A                     	ds	1
  1848  00002B                     Uart_Uart1RxIsr@UartRxData:
  1849                           	opt stack 0
  1850  00002B                     	ds	1
  1851  00002C                     Uart_MdmGsmGprsReadService@RxState:
  1852                           	opt stack 0
  1853  00002C                     	ds	1
  1854  00002D                     MdmCntSm@MdmCntState:
  1855                           	opt stack 0
  1856  00002D                     	ds	1
  1857  00002E                     RiSm@MdmDrvState:
  1858                           	opt stack 0
  1859  00002E                     	ds	1
  1860  00002F                     _Mmd_RingIndicator:
  1861                           	opt stack 0
  1862  00002F                     	ds	1
  1863  000030                     I2c_ReadData@ReadStatus:
  1864                           	opt stack 0
  1865  000030                     	ds	1
  1866  000031                     I2c_ReadData@TentativeCounter:
  1867                           	opt stack 0
  1868  000031                     	ds	1
  1869  000032                     I2c_ReadData@DataCounter:
  1870                           	opt stack 0
  1871  000032                     	ds	1
  1872  000033                     I2c_ReadData@I2cReadState:
  1873                           	opt stack 0
  1874  000033                     	ds	1
  1875  000034                     I2c_WriteData@WriteStatus:
  1876                           	opt stack 0
  1877  000034                     	ds	1
  1878  000035                     I2c_WriteData@TentativeCounter:
  1879                           	opt stack 0
  1880  000035                     	ds	1
  1881  000036                     I2c_WriteData@I2cNextState:
  1882                           	opt stack 0
  1883  000036                     	ds	1
  1884  000037                     I2c_WriteData@I2cWriteState:
  1885                           	opt stack 0
  1886  000037                     	ds	1
  1887  000038                     _memorizedNumbersCount:
  1888                           	opt stack 0
  1889  000038                     	ds	1
  1890  000039                     _MdmStsReady:
  1891                           	opt stack 0
  1892  000039                     	ds	1
  1893  00003A                     _NewStringMdmTerminal:
  1894                           	opt stack 0
  1895  00003A                     	ds	1
  1896  00003B                     _NewMdmEvtParserRequest:
  1897                           	opt stack 0
  1898  00003B                     	ds	1
  1899  00003C                     _NewStringReceived:
  1900                           	opt stack 0
  1901  00003C                     	ds	1
  1902  00003D                     _MdmResetRequest:
  1903                           	opt stack 0
  1904  00003D                     	ds	1
  1905  00003E                     _CallClosedEvent:
  1906                           	opt stack 0
  1907  00003E                     	ds	1
  1908  00003F                     _IncomingCallEvent:
  1909                           	opt stack 0
  1910  00003F                     	ds	1
  1911  000040                     _NewSmsEvent:
  1912                           	opt stack 0
  1913  000040                     	ds	1
  1914  000041                     _ActivateRiDetection:
  1915                           	opt stack 0
  1916  000041                     	ds	1
  1917                           tblptru	equ	0xFF8
  1918                           tblptrh	equ	0xFF7
  1919                           tblptrl	equ	0xFF6
  1920                           tablat	equ	0xFF5
  1921                           postinc0	equ	0xFEE
  1922                           wreg	equ	0xFE8
  1923                           postdec1	equ	0xFE5
  1924                           fsr1h	equ	0xFE2
  1925                           fsr1l	equ	0xFE1
  1926                           
  1927                           	psect	bssBANK0
  1928  0000B0                     __pbssBANK0:
  1929                           	opt stack 0
  1930  0000B0                     _inPipes:
  1931                           	opt stack 0
  1932  0000B0                     	ds	6
  1933  0000B6                     _pBDTEntryIn:
  1934                           	opt stack 0
  1935  0000B6                     	ds	6
  1936  0000BC                     _CDCDataOutHandle:
  1937                           	opt stack 0
  1938  0000BC                     	ds	2
  1939  0000BE                     _pBDTEntryEP0OutNext:
  1940                           	opt stack 0
  1941  0000BE                     	ds	2
  1942  0000C0                     _pBDTEntryEP0OutCurrent:
  1943                           	opt stack 0
  1944  0000C0                     	ds	2
  1945  0000C2                     _RxLen:
  1946                           	opt stack 0
  1947  0000C2                     	ds	2
  1948  0000C4                     _cdc_tx_len:
  1949                           	opt stack 0
  1950  0000C4                     	ds	1
  1951  0000C5                     _cdc_trf_state:
  1952                           	opt stack 0
  1953  0000C5                     	ds	1
  1954  0000C6                     _cdc_rx_len:
  1955                           	opt stack 0
  1956  0000C6                     	ds	1
  1957  0000C7                     _USBDeferStatusStagePacket:
  1958                           	opt stack 0
  1959  0000C7                     	ds	1
  1960  0000C8                     _USBStatusStageTimeoutCounter:
  1961                           	opt stack 0
  1962  0000C8                     	ds	1
  1963  0000C9                     _endpoint_number:
  1964                           	opt stack 0
  1965  0000C9                     	ds	1
  1966  0000CA                     _controlTransferState:
  1967                           	opt stack 0
  1968  0000CA                     	ds	1
  1969  0000CB                     _shortPacketStatus:
  1970                           	opt stack 0
  1971  0000CB                     	ds	1
  1972  0000CC                     _USBDeviceState:
  1973                           	opt stack 0
  1974  0000CC                     	ds	1
  1975  0000CD                     _I2cComSts:
  1976                           	opt stack 0
  1977  0000CD                     	ds	1
  1978  0000CE                     HttpGetMethod@GetMethodNextState:
  1979                           	opt stack 0
  1980  0000CE                     	ds	1
  1981  0000CF                     InitGprsNetwork@GprsNetInitNextState:
  1982                           	opt stack 0
  1983  0000CF                     	ds	1
  1984  0000D0                     _MdmStatus:
  1985                           	opt stack 0
  1986  0000D0                     	ds	1
  1987  0000D1                     _PhoneNumbLen:
  1988                           	opt stack 0
  1989  0000D1                     	ds	1
  1990  0000D2                     _SmsLen:
  1991                           	opt stack 0
  1992  0000D2                     	ds	1
  1993  0000D3                     _SystemState:
  1994                           	opt stack 0
  1995  0000D3                     	ds	1
  1996  0000D4                     _USTATcopy:
  1997                           	opt stack 0
  1998  0000D4                     	ds	1
  1999  0000D5                     _USBActiveConfiguration:
  2000                           	opt stack 0
  2001  0000D5                     	ds	1
  2002  0000D6                     _I2cReadDataEvt:
  2003                           	opt stack 0
  2004  0000D6                     	ds	1
  2005  0000D7                     _I2cWriteDataEvt:
  2006                           	opt stack 0
  2007  0000D7                     	ds	1
  2008  0000D8                     _GetMethod:
  2009                           	opt stack 0
  2010  0000D8                     	ds	1
  2011  0000D9                     _InitNetwork:
  2012                           	opt stack 0
  2013  0000D9                     	ds	1
  2014  0000DA                     _SmsTxtReady:
  2015                           	opt stack 0
  2016  0000DA                     	ds	1
  2017  0000DB                     _GetSmsText:
  2018                           	opt stack 0
  2019  0000DB                     	ds	1
  2020  0000DC                     _SmsEvent:
  2021                           	opt stack 0
  2022  0000DC                     	ds	1
  2023  0000DD                     _ClipEvent:
  2024                           	opt stack 0
  2025  0000DD                     	ds	1
  2026  0000DE                     _RingEvent:
  2027                           	opt stack 0
  2028  0000DE                     	ds	1
  2029  0000DF                     _SendSmsEvent:
  2030                           	opt stack 0
  2031  0000DF                     	ds	1
  2032  0000E0                     _MdmOnOffPulseRequest:
  2033                           	opt stack 0
  2034  0000E0                     	ds	1
  2035                           tblptru	equ	0xFF8
  2036                           tblptrh	equ	0xFF7
  2037                           tblptrl	equ	0xFF6
  2038                           tablat	equ	0xFF5
  2039                           postinc0	equ	0xFEE
  2040                           wreg	equ	0xFE8
  2041                           postdec1	equ	0xFE5
  2042                           fsr1h	equ	0xFE2
  2043                           fsr1l	equ	0xFE1
  2044                           
  2045                           	psect	dataBANK0
  2046  0000E1                     __pdataBANK0:
  2047                           	opt stack 0
  2048  0000E1                     findEmptySpot@currentPosition:
  2049                           	opt stack 0
  2050  0000E1                     	ds	1
  2051  0000E2                     isNumberInMemory@currentPosition:
  2052                           	opt stack 0
  2053  0000E2                     	ds	1
  2054                           tblptru	equ	0xFF8
  2055                           tblptrh	equ	0xFF7
  2056                           tblptrl	equ	0xFF6
  2057                           tablat	equ	0xFF5
  2058                           postinc0	equ	0xFEE
  2059                           wreg	equ	0xFE8
  2060                           postdec1	equ	0xFE5
  2061                           fsr1h	equ	0xFE2
  2062                           fsr1l	equ	0xFE1
  2063                           
  2064                           	psect	bssBANK1
  2065  0001C9                     __pbssBANK1:
  2066                           	opt stack 0
  2067  0001C9                     _outPipes:
  2068                           	opt stack 0
  2069  0001C9                     	ds	8
  2070  0001D1                     _CDCDataInHandle:
  2071                           	opt stack 0
  2072  0001D1                     	ds	2
  2073  0001D3                     initFsm@currentState:
  2074                           	opt stack 0
  2075  0001D3                     	ds	1
  2076  0001D4                     initEeprom@currentState:
  2077                           	opt stack 0
  2078  0001D4                     	ds	1
  2079  0001D5                     initGprsModem@currentState:
  2080                           	opt stack 0
  2081  0001D5                     	ds	1
  2082  0001D6                     MyApp_Task@currentState:
  2083                           	opt stack 0
  2084  0001D6                     	ds	1
  2085  0001D7                     	ds	1
  2086  0001D8                     	ds	1
  2087  0001D9                     	ds	1
  2088  0001DA                     	ds	1
  2089  0001DB                     	ds	1
  2090  0001DC                     GsmGprsTerminal@SMS:
  2091                           	opt stack 0
  2092  0001DC                     	ds	1
  2093  0001DD                     	ds	1
  2094  0001DE                     _control_signal_bitmap:
  2095                           	opt stack 0
  2096  0001DE                     	ds	1
  2097  0001DF                     _cdc_mem_type:
  2098                           	opt stack 0
  2099  0001DF                     	ds	1
  2100  0001E0                     _USBTicksSinceSuspendEnd:
  2101                           	opt stack 0
  2102  0001E0                     	ds	1
  2103  0001E1                     _BothEP0OutUOWNsSet:
  2104                           	opt stack 0
  2105  0001E1                     	ds	1
  2106  0001E2                     _USBBusIsSuspended:
  2107                           	opt stack 0
  2108  0001E2                     	ds	1
  2109  0001E3                     _RemoteWakeup:
  2110                           	opt stack 0
  2111  0001E3                     	ds	1
  2112  0001E4                     I2cSlv_QueryI2cData@Ret:
  2113                           	opt stack 0
  2114  0001E4                     	ds	1
  2115  0001E5                     I2cSlv_QueryI2cData@I2cOpState:
  2116                           	opt stack 0
  2117  0001E5                     	ds	1
  2118  0001E6                     I2cSendMsgSm@I2cComState:
  2119                           	opt stack 0
  2120  0001E6                     	ds	1
  2121  0001E7                     _I2cBusStatus:
  2122                           	opt stack 0
  2123  0001E7                     	ds	1
  2124  0001E8                     HttpGetMethod@GetMOutSts:
  2125                           	opt stack 0
  2126  0001E8                     	ds	1
  2127  0001E9                     HttpGetMethod@GetMethodState:
  2128                           	opt stack 0
  2129  0001E9                     	ds	1
  2130  0001EA                     InitGprsNetwork@GprsNetInitState:
  2131                           	opt stack 0
  2132  0001EA                     	ds	1
  2133  0001EB                     _PostMethod:
  2134                           	opt stack 0
  2135  0001EB                     	ds	1
  2136  0001EC                     _HttpGetMethodSts:
  2137                           	opt stack 0
  2138  0001EC                     	ds	1
  2139  0001ED                     _GprsNetworkSts:
  2140                           	opt stack 0
  2141  0001ED                     	ds	1
  2142  0001EE                     _ApnLenLocal:
  2143                           	opt stack 0
  2144  0001EE                     	ds	1
  2145  0001EF                     SendSmsSm@SendSms_NextState:
  2146                           	opt stack 0
  2147  0001EF                     	ds	1
  2148  0001F0                     SendSmsSm@SendSms_State:
  2149                           	opt stack 0
  2150  0001F0                     	ds	1
  2151  0001F1                     GetSmsSm@GetSmsState:
  2152                           	opt stack 0
  2153  0001F1                     	ds	1
  2154  0001F2                     ConfigureModem@NextState:
  2155                           	opt stack 0
  2156  0001F2                     	ds	1
  2157  0001F3                     ConfigureModem@MdmConfigState:
  2158                           	opt stack 0
  2159  0001F3                     	ds	1
  2160  0001F4                     TurnOnModem@TurnOnMdmState:
  2161                           	opt stack 0
  2162  0001F4                     	ds	1
  2163  0001F5                     _AlarmEvent:
  2164                           	opt stack 0
  2165  0001F5                     	ds	1
  2166  0001F6                     _Led3OutSts:
  2167                           	opt stack 0
  2168  0001F6                     	ds	1
  2169  0001F7                     _Led3Sts:
  2170                           	opt stack 0
  2171  0001F7                     	ds	1
  2172  0001F8                     _Led2OutSts:
  2173                           	opt stack 0
  2174  0001F8                     	ds	1
  2175  0001F9                     _Led2Sts:
  2176                           	opt stack 0
  2177  0001F9                     	ds	1
  2178  0001FA                     _Led1OutSts:
  2179                           	opt stack 0
  2180  0001FA                     	ds	1
  2181  0001FB                     _Led1Sts:
  2182                           	opt stack 0
  2183  0001FB                     	ds	1
  2184  0001FC                     _ReadAddress:
  2185                           	opt stack 0
  2186  0001FC                     	ds	1
  2187  0001FD                     I2cDummyTx@DummyBuffer:
  2188                           	opt stack 0
  2189  0001FD                     	ds	1
  2190                           tblptru	equ	0xFF8
  2191                           tblptrh	equ	0xFF7
  2192                           tblptrl	equ	0xFF6
  2193                           tablat	equ	0xFF5
  2194                           postinc0	equ	0xFEE
  2195                           wreg	equ	0xFE8
  2196                           postdec1	equ	0xFE5
  2197                           fsr1h	equ	0xFE2
  2198                           fsr1l	equ	0xFE1
  2199                           
  2200                           	psect	dataBANK1
  2201  0001FE                     __pdataBANK1:
  2202                           	opt stack 0
  2203  0001FE                     _isMemoryEmpty:
  2204                           	opt stack 0
  2205  0001FE                     	ds	1
  2206  0001FF                     InitGprsNetwork@GprsInitSts:
  2207                           	opt stack 0
  2208  0001FF                     	ds	1
  2209                           tblptru	equ	0xFF8
  2210                           tblptrh	equ	0xFF7
  2211                           tblptrl	equ	0xFF6
  2212                           tablat	equ	0xFF5
  2213                           postinc0	equ	0xFEE
  2214                           wreg	equ	0xFE8
  2215                           postdec1	equ	0xFE5
  2216                           fsr1h	equ	0xFE2
  2217                           fsr1l	equ	0xFE1
  2218                           
  2219                           	psect	bssBANK2
  2220  0002C8                     __pbssBANK2:
  2221                           	opt stack 0
  2222  0002C8                     _pCDCDst:
  2223                           	opt stack 0
  2224  0002C8                     	ds	3
  2225  0002CB                     _pCDCSrc:
  2226                           	opt stack 0
  2227  0002CB                     	ds	3
  2228  0002CE                     _ep_data_out:
  2229                           	opt stack 0
  2230  0002CE                     	ds	3
  2231  0002D1                     _ep_data_in:
  2232                           	opt stack 0
  2233  0002D1                     	ds	3
  2234  0002D4                     _pDst:
  2235                           	opt stack 0
  2236  0002D4                     	ds	2
  2237  0002D6                     ConfigureModem@DelayValueMs:
  2238                           	opt stack 0
  2239  0002D6                     	ds	2
  2240  0002D8                     TurnOnModem@Counter:
  2241                           	opt stack 0
  2242  0002D8                     	ds	2
  2243  0002DA                     UpdateSchFlag@InterruptCounter:
  2244                           	opt stack 0
  2245  0002DA                     	ds	2
  2246  0002DC                     MdmCntSm@Counter:
  2247                           	opt stack 0
  2248  0002DC                     	ds	2
  2249  0002DE                     RiSm@Counter:
  2250                           	opt stack 0
  2251  0002DE                     	ds	2
  2252  0002E0                     _ExtInt1IsrCallback:
  2253                           	opt stack 0
  2254  0002E0                     	ds	2
  2255  0002E2                     _ExtInt0IsrCallback:
  2256                           	opt stack 0
  2257  0002E2                     	ds	2
  2258  0002E4                     _RtccIsrCallback:
  2259                           	opt stack 0
  2260  0002E4                     	ds	2
  2261  0002E6                     _Tmr4IsrCallback:
  2262                           	opt stack 0
  2263  0002E6                     	ds	2
  2264  0002E8                     _Tmr2IsrCallback:
  2265                           	opt stack 0
  2266  0002E8                     	ds	2
  2267  0002EA                     	ds	1
  2268  0002EB                     	ds	1
  2269  0002EC                     Term_MainSm@TermMainSmState:
  2270                           	opt stack 0
  2271  0002EC                     	ds	1
  2272  0002ED                     Terminal@FormatOption:
  2273                           	opt stack 0
  2274  0002ED                     	ds	1
  2275  0002EE                     Terminal@SlaveAddr:
  2276                           	opt stack 0
  2277  0002EE                     	ds	1
  2278  0002EF                     Terminal@PackageLen:
  2279                           	opt stack 0
  2280  0002EF                     	ds	1
  2281  0002F0                     Terminal@TermState:
  2282                           	opt stack 0
  2283  0002F0                     	ds	1
  2284  0002F1                     _USBAlternateInterface:
  2285                           	opt stack 0
  2286  0002F1                     	ds	2
  2287                           tblptru	equ	0xFF8
  2288                           tblptrh	equ	0xFF7
  2289                           tblptrl	equ	0xFF6
  2290                           tablat	equ	0xFF5
  2291                           postinc0	equ	0xFEE
  2292                           wreg	equ	0xFE8
  2293                           postdec1	equ	0xFE5
  2294                           fsr1h	equ	0xFE2
  2295                           fsr1l	equ	0xFE1
  2296                           
  2297                           	psect	dataBANK2
  2298  0002F3                     __pdataBANK2:
  2299                           	opt stack 0
  2300  0002F3                     Terminal@EchoOption:
  2301                           	opt stack 0
  2302  0002F3                     	ds	1
  2303  0002F4                     _MainSystemTimebaseFlag:
  2304                           	opt stack 0
  2305  0002F4                     	ds	1
  2306  0002F5                     _ConnTimeout:
  2307                           	opt stack 0
  2308  0002F5                     	ds	11
  2309                           tblptru	equ	0xFF8
  2310                           tblptrh	equ	0xFF7
  2311                           tblptrl	equ	0xFF6
  2312                           tablat	equ	0xFF5
  2313                           postinc0	equ	0xFEE
  2314                           wreg	equ	0xFE8
  2315                           postdec1	equ	0xFE5
  2316                           fsr1h	equ	0xFE2
  2317                           fsr1l	equ	0xFE1
  2318                           
  2319                           	psect	bssBANK3
  2320  000300                     __pbssBANK3:
  2321                           	opt stack 0
  2322  000300                     _Rtcm_SystemDate:
  2323                           	opt stack 0
  2324  000300                     	ds	8
  2325  000308                     _Rtcm_RtccAlarm:
  2326                           	opt stack 0
  2327  000308                     	ds	6
  2328  00030E                     _pBDTEntryOut:
  2329                           	opt stack 0
  2330  00030E                     	ds	6
  2331  000314                     _BaudRateGen:
  2332                           	opt stack 0
  2333  000314                     	ds	4
  2334  000318                     _USB1msTickCount:
  2335                           	opt stack 0
  2336  000318                     	ds	4
  2337  00031C                     _OsTmr_OsTickCounter:
  2338                           	opt stack 0
  2339  00031C                     	ds	4
  2340  000320                     	ds	2
  2341  000322                     _UsbMasterPhoneNumberLen:
  2342                           	opt stack 0
  2343  000322                     	ds	2
  2344  000324                     _ApnLocal:
  2345                           	opt stack 0
  2346  000324                     	ds	2
  2347  000326                     ConfigureModem@DelayCounter:
  2348                           	opt stack 0
  2349  000326                     	ds	2
  2350  000328                     _UartConfig:
  2351                           	opt stack 0
  2352  000328                     	ds	21
  2353  00033D                     I2cSlv_QueryI2cData@TimeoutTimer:
  2354                           	opt stack 0
  2355  00033D                     	ds	11
  2356  000348                     _I2cConfig:
  2357                           	opt stack 0
  2358  000348                     	ds	10
  2359  000352                     _Led3Blink:
  2360                           	opt stack 0
  2361  000352                     	ds	9
  2362  00035B                     _Led2Blink:
  2363                           	opt stack 0
  2364  00035B                     	ds	9
  2365  000364                     _Led1Blink:
  2366                           	opt stack 0
  2367  000364                     	ds	9
  2368  00036D                     _dummy_encapsulated_cmd_response:
  2369                           	opt stack 0
  2370  00036D                     	ds	8
  2371  000375                     _line_coding:
  2372                           	opt stack 0
  2373  000375                     	ds	7
  2374  00037C                     _Led3Pulse:
  2375                           	opt stack 0
  2376  00037C                     	ds	6
  2377  000382                     _Led2Pulse:
  2378                           	opt stack 0
  2379  000382                     	ds	6
  2380  000388                     _Led1Pulse:
  2381                           	opt stack 0
  2382  000388                     	ds	6
  2383  00038E                     _I2cRxPacket:
  2384                           	opt stack 0
  2385  00038E                     	ds	6
  2386  000394                     _memoryPreamble:
  2387                           	opt stack 0
  2388  000394                     	ds	5
  2389  000399                     _I2cTxPacket:
  2390                           	opt stack 0
  2391  000399                     	ds	5
  2392  00039E                     _HttpGetDataLocal:
  2393                           	opt stack 0
  2394  00039E                     	ds	5
  2395  0003A3                     Terminal@Addr:
  2396                           	opt stack 0
  2397  0003A3                     	ds	4
  2398  0003A7                     Terminal@Len:
  2399                           	opt stack 0
  2400  0003A7                     	ds	4
  2401  0003AB                     _AlCfg:
  2402                           	opt stack 0
  2403  0003AB                     	ds	4
  2404  0003AF                     _RtcConfig:
  2405                           	opt stack 0
  2406  0003AF                     	ds	4
  2407  0003B3                     _setupCallTicks:
  2408                           	opt stack 0
  2409  0003B3                     	ds	2
  2410  0003B5                     initGprsModem@modemCounter:
  2411                           	opt stack 0
  2412  0003B5                     	ds	2
  2413                           tblptru	equ	0xFF8
  2414                           tblptrh	equ	0xFF7
  2415                           tblptrl	equ	0xFF6
  2416                           tablat	equ	0xFF5
  2417                           postinc0	equ	0xFEE
  2418                           wreg	equ	0xFE8
  2419                           postdec1	equ	0xFE5
  2420                           fsr1h	equ	0xFE2
  2421                           fsr1l	equ	0xFE1
  2422                           
  2423                           	psect	dataBANK3
  2424  0003B7                     __pdataBANK3:
  2425                           	opt stack 0
  2426  0003B7                     ModemEvtParser@F9112:
  2427                           	opt stack 0
  2428  0003B7                     	ds	10
  2429  0003C1                     ModemEvtParser@F9110:
  2430                           	opt stack 0
  2431  0003C1                     	ds	5
  2432  0003C6                     ModemEvtParser@F9108:
  2433                           	opt stack 0
  2434  0003C6                     	ds	5
  2435  0003CB                     ModemEvtParser@F9106:
  2436                           	opt stack 0
  2437  0003CB                     	ds	4
  2438  0003CF                     MyApp_Task@F9036:
  2439                           	opt stack 0
  2440  0003CF                     	ds	3
  2441  0003D2                     triggerRelay@F9025:
  2442                           	opt stack 0
  2443  0003D2                     	ds	2
  2444  0003D4                     Term_MainSm@TermDelay:
  2445                           	opt stack 0
  2446  0003D4                     	ds	11
  2447  0003DF                     _ConnWait:
  2448                           	opt stack 0
  2449  0003DF                     	ds	11
  2450  0003EA                     SendSmsSm@SwTimer:
  2451                           	opt stack 0
  2452  0003EA                     	ds	11
  2453  0003F5                     CheckModem@Timeout:
  2454                           	opt stack 0
  2455  0003F5                     	ds	11
  2456                           tblptru	equ	0xFF8
  2457                           tblptrh	equ	0xFF7
  2458                           tblptrl	equ	0xFF6
  2459                           tablat	equ	0xFF5
  2460                           postinc0	equ	0xFEE
  2461                           wreg	equ	0xFE8
  2462                           postdec1	equ	0xFE5
  2463                           fsr1h	equ	0xFE2
  2464                           fsr1l	equ	0xFE1
  2465                           
  2466                           	psect	bssBANK4
  2467  000440                     __pbssBANK4:
  2468                           	opt stack 0
  2469  000440                     _UsbMasterPhoneNumber:
  2470                           	opt stack 0
  2471  000440                     	ds	15
  2472  00044F                     	ds	10
  2473  000459                     _cdc_notice:
  2474                           	opt stack 0
  2475  000459                     	ds	10
  2476  000463                     Term_MainSm@Data:
  2477                           	opt stack 0
  2478  000463                     	ds	50
  2479  000495                     _smsText:
  2480                           	opt stack 0
  2481  000495                     	ds	20
  2482  0004A9                     _PhoneNumber:
  2483                           	opt stack 0
  2484  0004A9                     	ds	20
  2485  0004BD                     _EepromBuffer:
  2486                           	opt stack 0
  2487  0004BD                     	ds	15
  2488  0004CC                     _callerNumber:
  2489                           	opt stack 0
  2490  0004CC                     	ds	13
  2491  0004D9                     Terminal@SwTimer:
  2492                           	opt stack 0
  2493  0004D9                     	ds	11
  2494  0004E4                     I2cSlv_QueryI2cData@QueryTimer:
  2495                           	opt stack 0
  2496  0004E4                     	ds	11
  2497                           tblptru	equ	0xFF8
  2498                           tblptrh	equ	0xFF7
  2499                           tblptrl	equ	0xFF6
  2500                           tablat	equ	0xFF5
  2501                           postinc0	equ	0xFEE
  2502                           wreg	equ	0xFE8
  2503                           postdec1	equ	0xFE5
  2504                           fsr1h	equ	0xFE2
  2505                           fsr1l	equ	0xFE1
  2506                           
  2507                           	psect	dataBANK4
  2508  0004EF                     __pdataBANK4:
  2509                           	opt stack 0
  2510  0004EF                     	ds	13
  2511                           tblptru	equ	0xFF8
  2512                           tblptrh	equ	0xFF7
  2513                           tblptrl	equ	0xFF6
  2514                           tablat	equ	0xFF5
  2515                           postinc0	equ	0xFEE
  2516                           wreg	equ	0xFE8
  2517                           postdec1	equ	0xFE5
  2518                           fsr1h	equ	0xFE2
  2519                           fsr1l	equ	0xFE1
  2520                           
  2521                           	psect	bssBANK5
  2522  000500                     __pbssBANK5:
  2523                           	opt stack 0
  2524  000500                     _cdc_data_rx:
  2525                           	opt stack 0
  2526  000500                     	ds	64
  2527  000540                     Terminal@TermRxBuffer:
  2528                           	opt stack 0
  2529  000540                     	ds	50
  2530  000572                     _MessageText:
  2531                           	opt stack 0
  2532  000572                     	ds	50
  2533                           tblptru	equ	0xFF8
  2534                           tblptrh	equ	0xFF7
  2535                           tblptrl	equ	0xFF6
  2536                           tablat	equ	0xFF5
  2537                           postinc0	equ	0xFEE
  2538                           wreg	equ	0xFE8
  2539                           postdec1	equ	0xFE5
  2540                           fsr1h	equ	0xFE2
  2541                           fsr1l	equ	0xFE1
  2542                           
  2543                           	psect	dataBANK5
  2544  0005A4                     __pdataBANK5:
  2545                           	opt stack 0
  2546  0005A4                     _TaskTable:
  2547                           	opt stack 0
  2548  0005A4                     	ds	80
  2549                           tblptru	equ	0xFF8
  2550                           tblptrh	equ	0xFF7
  2551                           tblptrl	equ	0xFF6
  2552                           tablat	equ	0xFF5
  2553                           postinc0	equ	0xFEE
  2554                           wreg	equ	0xFE8
  2555                           postdec1	equ	0xFE5
  2556                           fsr1h	equ	0xFE2
  2557                           fsr1l	equ	0xFE1
  2558                           
  2559                           	psect	bssBANK6
  2560  000600                     __pbssBANK6:
  2561                           	opt stack 0
  2562  000600                     _OsAlarms:
  2563                           	opt stack 0
  2564  000600                     	ds	220
  2565                           tblptru	equ	0xFF8
  2566                           tblptrh	equ	0xFF7
  2567                           tblptrl	equ	0xFF6
  2568                           tablat	equ	0xFF5
  2569                           postinc0	equ	0xFEE
  2570                           wreg	equ	0xFE8
  2571                           postdec1	equ	0xFE5
  2572                           fsr1h	equ	0xFE2
  2573                           fsr1l	equ	0xFE1
  2574                           
  2575                           	psect	bssBANK7
  2576  000700                     __pbssBANK7:
  2577                           	opt stack 0
  2578  000700                     _Mdm_SmsRx:
  2579                           	opt stack 0
  2580  000700                     	ds	102
  2581  000766                     Terminal@Payload:
  2582                           	opt stack 0
  2583  000766                     	ds	80
  2584  0007B6                     _cdc_data_tx:
  2585                           	opt stack 0
  2586  0007B6                     	ds	64
  2587                           tblptru	equ	0xFF8
  2588                           tblptrh	equ	0xFF7
  2589                           tblptrl	equ	0xFF6
  2590                           tablat	equ	0xFF5
  2591                           postinc0	equ	0xFEE
  2592                           wreg	equ	0xFE8
  2593                           postdec1	equ	0xFE5
  2594                           fsr1h	equ	0xFE2
  2595                           fsr1l	equ	0xFE1
  2596                           
  2597                           	psect	bssBANK8
  2598  000800                     __pbssBANK8:
  2599                           	opt stack 0
  2600  000800                     GsmGprsTerminal@UsbBuffer:
  2601                           	opt stack 0
  2602  000800                     	ds	200
  2603                           tblptru	equ	0xFF8
  2604                           tblptrh	equ	0xFF7
  2605                           tblptrl	equ	0xFF6
  2606                           tablat	equ	0xFF5
  2607                           postinc0	equ	0xFEE
  2608                           wreg	equ	0xFE8
  2609                           postdec1	equ	0xFE5
  2610                           fsr1h	equ	0xFE2
  2611                           fsr1l	equ	0xFE1
  2612                           
  2613                           	psect	bssBANK9
  2614  000900                     __pbssBANK9:
  2615                           	opt stack 0
  2616  000900                     GsmGprsTerminal@UartBuffer:
  2617                           	opt stack 0
  2618  000900                     	ds	200
  2619                           tblptru	equ	0xFF8
  2620                           tblptrh	equ	0xFF7
  2621                           tblptrl	equ	0xFF6
  2622                           tablat	equ	0xFF5
  2623                           postinc0	equ	0xFEE
  2624                           wreg	equ	0xFE8
  2625                           postdec1	equ	0xFE5
  2626                           fsr1h	equ	0xFE2
  2627                           fsr1l	equ	0xFE1
  2628                           
  2629                           	psect	bssBIGRAMl
  2630  000AC8                     __pbssBIGRAMl:
  2631                           	opt stack 0
  2632  000AC8                     Uart_MdmGsmGprsReadService@LocalRxBuffer:
  2633                           	opt stack 0
  2634  000AC8                     	ds	400
  2635  000C58                     _RxBuffer:
  2636                           	opt stack 0
  2637  000C58                     	ds	400
  2638                           tblptru	equ	0xFF8
  2639                           tblptrh	equ	0xFF7
  2640                           tblptrl	equ	0xFF6
  2641                           tablat	equ	0xFF5
  2642                           postinc0	equ	0xFEE
  2643                           wreg	equ	0xFE8
  2644                           postdec1	equ	0xFE5
  2645                           fsr1h	equ	0xFE2
  2646                           fsr1l	equ	0xFE1
  2647                           
  2648                           	psect	cstackBANK10
  2649  000A00                     __pcstackBANK10:
  2650                           	opt stack 0
  2651  000A00                     Terminal@UsbRxBuffer:
  2652                           	opt stack 0
  2653                           
  2654                           ; 200 bytes @ 0x0
  2655  000A00                     	ds	200
  2656                           tblptru	equ	0xFF8
  2657                           tblptrh	equ	0xFF7
  2658                           tblptrl	equ	0xFF6
  2659                           tablat	equ	0xFF5
  2660                           postinc0	equ	0xFEE
  2661                           wreg	equ	0xFE8
  2662                           postdec1	equ	0xFE5
  2663                           fsr1h	equ	0xFE2
  2664                           fsr1l	equ	0xFE1
  2665                           
  2666                           	psect	cstackBANK5
  2667  0005F4                     __pcstackBANK5:
  2668                           	opt stack 0
  2669  0005F4                     ScheduleTasks@ActiveTaskIndex:
  2670                           	opt stack 0
  2671                           
  2672                           ; 1 bytes @ 0x0
  2673  0005F4                     	ds	1
  2674                           tblptru	equ	0xFF8
  2675                           tblptrh	equ	0xFF7
  2676                           tblptrl	equ	0xFF6
  2677                           tablat	equ	0xFF5
  2678                           postinc0	equ	0xFEE
  2679                           wreg	equ	0xFE8
  2680                           postdec1	equ	0xFE5
  2681                           fsr1h	equ	0xFE2
  2682                           fsr1l	equ	0xFE1
  2683                           
  2684                           	psect	cstackBANK4
  2685  0004FC                     __pcstackBANK4:
  2686                           	opt stack 0
  2687  0004FC                     ??_InitializeTasks:
  2688  0004FC                     ??_ScheduleTasks:
  2689                           
  2690                           ; 1 bytes @ 0x0
  2691  0004FC                     	ds	2
  2692  0004FE                     InitializeTasks@ActiveTaskIndex:
  2693                           	opt stack 0
  2694                           
  2695                           ; 1 bytes @ 0x2
  2696  0004FE                     	ds	2
  2697                           tblptru	equ	0xFF8
  2698                           tblptrh	equ	0xFF7
  2699                           tblptrl	equ	0xFF6
  2700                           tablat	equ	0xFF5
  2701                           postinc0	equ	0xFEE
  2702                           wreg	equ	0xFE8
  2703                           postdec1	equ	0xFE5
  2704                           fsr1h	equ	0xFE2
  2705                           fsr1l	equ	0xFE1
  2706                           
  2707                           	psect	cstackBANK2
  2708  000200                     __pcstackBANK2:
  2709                           	opt stack 0
  2710  000200                     Terminal@UsbTxBuffer:
  2711                           	opt stack 0
  2712                           
  2713                           ; 200 bytes @ 0x0
  2714  000200                     	ds	200
  2715                           tblptru	equ	0xFF8
  2716                           tblptrh	equ	0xFF7
  2717                           tblptrl	equ	0xFF6
  2718                           tablat	equ	0xFF5
  2719                           postinc0	equ	0xFEE
  2720                           wreg	equ	0xFE8
  2721                           postdec1	equ	0xFE5
  2722                           fsr1h	equ	0xFE2
  2723                           fsr1l	equ	0xFE1
  2724                           
  2725                           	psect	cstackBANK1
  2726  000100                     __pcstackBANK1:
  2727                           	opt stack 0
  2728  000100                     initEeprom@addressToRead:
  2729                           	opt stack 0
  2730  000100                     isNumberInMemory@phoneNumber:
  2731                           	opt stack 0
  2732  000100                     findEmptySpot@readBuffer:
  2733                           	opt stack 0
  2734  000100                     SendSmsSm@UartMessage:
  2735                           	opt stack 0
  2736  000100                     InitGprsNetwork@UartMessage:
  2737                           	opt stack 0
  2738  000100                     Terminal@TermTxBuffer:
  2739                           	opt stack 0
  2740  000100                     HttpGetMethod@UartMessage:
  2741                           	opt stack 0
  2742                           
  2743                           ; 200 bytes @ 0x0
  2744  000100                     	ds	1
  2745  000101                     initEeprom@memoryOpResult:
  2746                           	opt stack 0
  2747                           
  2748                           ; 1 bytes @ 0x1
  2749  000101                     	ds	1
  2750  000102                     initEeprom@isInitialized:
  2751                           	opt stack 0
  2752  000102                     isNumberInMemory@readBuffer:
  2753                           	opt stack 0
  2754                           
  2755                           ; 13 bytes @ 0x2
  2756  000102                     	ds	1
  2757  000103                     initFsm@isInitialized:
  2758                           	opt stack 0
  2759                           
  2760                           ; 1 bytes @ 0x3
  2761  000103                     	ds	10
  2762  00010D                     findEmptySpot@searchFailed:
  2763                           	opt stack 0
  2764                           
  2765                           ; 1 bytes @ 0xD
  2766  00010D                     	ds	1
  2767  00010E                     findEmptySpot@searchInProgress:
  2768                           	opt stack 0
  2769                           
  2770                           ; 1 bytes @ 0xE
  2771  00010E                     	ds	1
  2772  00010F                     isNumberInMemory@searchFailed:
  2773                           	opt stack 0
  2774  00010F                     findEmptySpot@positionInMemory:
  2775                           	opt stack 0
  2776                           
  2777                           ; 1 bytes @ 0xF
  2778  00010F                     	ds	1
  2779  000110                     isNumberInMemory@searchInProgress:
  2780                           	opt stack 0
  2781  000110                     findEmptySpot@memoryOpResult:
  2782                           	opt stack 0
  2783                           
  2784                           ; 1 bytes @ 0x10
  2785  000110                     	ds	1
  2786  000111                     isNumberInMemory@positionInMemory:
  2787                           	opt stack 0
  2788                           
  2789                           ; 1 bytes @ 0x11
  2790  000111                     	ds	1
  2791  000112                     isNumberInMemory@memoryOpResult:
  2792                           	opt stack 0
  2793                           
  2794                           ; 1 bytes @ 0x12
  2795  000112                     	ds	1
  2796  000113                     ??_MyApp_Task:
  2797                           
  2798                           ; 1 bytes @ 0x13
  2799  000113                     	ds	2
  2800  000115                     MyApp_Task@emptyNumber:
  2801                           	opt stack 0
  2802                           
  2803                           ; 13 bytes @ 0x15
  2804  000115                     	ds	13
  2805  000122                     MyApp_Task@cmpString:
  2806                           	opt stack 0
  2807                           
  2808                           ; 3 bytes @ 0x22
  2809  000122                     	ds	3
  2810  000125                     MyApp_Task@cmdAddNumber:
  2811                           	opt stack 0
  2812                           
  2813                           ; 4 bytes @ 0x25
  2814  000125                     	ds	4
  2815  000129                     MyApp_Task@memoryResult:
  2816                           	opt stack 0
  2817                           
  2818                           ; 1 bytes @ 0x29
  2819  000129                     	ds	1
  2820  00012A                     MyApp_Task@numberInMemory:
  2821                           	opt stack 0
  2822                           
  2823                           ; 1 bytes @ 0x2A
  2824  00012A                     	ds	8
  2825  000132                     InitGprsNetwork@Index:
  2826                           	opt stack 0
  2827  000132                     Term_MainSm@FwkMajorStr:
  2828                           	opt stack 0
  2829                           
  2830                           ; 4 bytes @ 0x32
  2831  000132                     	ds	4
  2832  000136                     Term_MainSm@FwkMinorStr:
  2833                           	opt stack 0
  2834                           
  2835                           ; 4 bytes @ 0x36
  2836  000136                     	ds	4
  2837  00013A                     Term_MainSm@FwkBuildStr:
  2838                           	opt stack 0
  2839                           
  2840                           ; 4 bytes @ 0x3A
  2841  00013A                     	ds	142
  2842  0001C8                     HttpGetMethod@Index:
  2843                           	opt stack 0
  2844                           
  2845                           ; 1 bytes @ 0xC8
  2846  0001C8                     	ds	1
  2847                           tblptru	equ	0xFF8
  2848                           tblptrh	equ	0xFF7
  2849                           tblptrl	equ	0xFF6
  2850                           tablat	equ	0xFF5
  2851                           postinc0	equ	0xFEE
  2852                           wreg	equ	0xFE8
  2853                           postdec1	equ	0xFE5
  2854                           fsr1h	equ	0xFE2
  2855                           fsr1l	equ	0xFE1
  2856                           
  2857                           	psect	cstackBANK0
  2858  000060                     __pcstackBANK0:
  2859                           	opt stack 0
  2860  000060                     
  2861                           ; 1 bytes @ 0x0
  2862  000060                     	ds	8
  2863  000068                     ??_LowPriorityIsr:
  2864                           
  2865                           ; 1 bytes @ 0x8
  2866  000068                     	ds	21
  2867  00007D                     ??_isdigit:
  2868  00007D                     ??_isspace:
  2869  00007D                     ??_isupper:
  2870  00007D                     ??_Rtcc_GetRtccValue:
  2871  00007D                     ??_UartTxBufferStatus:
  2872  00007D                     ??_USBStdGetDscHandler:
  2873  00007D                     ??_USBStdGetStatusHandler:
  2874  00007D                     ?_USBTransferOnePacket:
  2875                           	opt stack 0
  2876  00007D                     ?_strlen:
  2877                           	opt stack 0
  2878  00007D                     ?_sprintf:
  2879                           	opt stack 0
  2880  00007D                     ?_initPreamble:
  2881                           	opt stack 0
  2882  00007D                     ?___wmul:
  2883                           	opt stack 0
  2884  00007D                     ?___awdiv:
  2885                           	opt stack 0
  2886  00007D                     ?___awmod:
  2887                           	opt stack 0
  2888  00007D                     ?___lwmod:
  2889                           	opt stack 0
  2890  00007D                     ?_GetOsTickCounter:
  2891                           	opt stack 0
  2892  00007D                     ?___lmul:
  2893                           	opt stack 0
  2894  00007D                     Irq_InitIntController@GlobalInt_HighPInt:
  2895                           	opt stack 0
  2896  00007D                     SetAckStatus@AckSts:
  2897                           	opt stack 0
  2898  00007D                     WriteByte@Byte:
  2899                           	opt stack 0
  2900  00007D                     ReadByte@Byte:
  2901                           	opt stack 0
  2902  00007D                     Mcu_SetWdgSts@WdgSts:
  2903                           	opt stack 0
  2904  00007D                     RtccIrqInit@Priority:
  2905                           	opt stack 0
  2906  00007D                     Rtcc_SetRtcStatus@Status:
  2907                           	opt stack 0
  2908  00007D                     TmrBInit@Prescaler:
  2909                           	opt stack 0
  2910  00007D                     Tmr_TmrBIrqSet@Priority:
  2911                           	opt stack 0
  2912  00007D                     Tmr_StartTmr@TmrNumb:
  2913                           	opt stack 0
  2914  00007D                     UartWriteByte@ByteToWrite:
  2915                           	opt stack 0
  2916  00007D                     USBTransferOnePacket@dir:
  2917                           	opt stack 0
  2918  00007D                     USBConfigureEndpoint@direction:
  2919                           	opt stack 0
  2920  00007D                     USBCtrlTrfTxService@byteToSend:
  2921                           	opt stack 0
  2922  00007D                     USBCtrlTrfRxService@i:
  2923                           	opt stack 0
  2924  00007D                     Led_SetLedStatus@LedSts:
  2925                           	opt stack 0
  2926  00007D                     toupper@c:
  2927                           	opt stack 0
  2928  00007D                     tolower@c:
  2929                           	opt stack 0
  2930  00007D                     Mcu_StartSystemPll@PllStartupCounter:
  2931                           	opt stack 0
  2932  00007D                     Rtcc_AlarmConfig@AlarmConfig:
  2933                           	opt stack 0
  2934  00007D                     Tmr_RegisterTmr2IsrCallback@IsrCallback:
  2935                           	opt stack 0
  2936  00007D                     Uart_ClearRxBuffer@Index:
  2937                           	opt stack 0
  2938  00007D                     GenerateEvt@Event:
  2939                           	opt stack 0
  2940  00007D                     ReceiveEvt@Event:
  2941                           	opt stack 0
  2942  00007D                     Led_SetLedBlinkTime@OnTimeMs:
  2943                           	opt stack 0
  2944  00007D                     StringCompare@String1:
  2945                           	opt stack 0
  2946  00007D                     StringCopy@SourceStr:
  2947                           	opt stack 0
  2948  00007D                     ClearBuffer@Buffer:
  2949                           	opt stack 0
  2950  00007D                     isNumberValid@phoneNumber:
  2951                           	opt stack 0
  2952  00007D                     sprintf@sp:
  2953                           	opt stack 0
  2954  00007D                     ___wmul@multiplier:
  2955                           	opt stack 0
  2956  00007D                     ___awdiv@dividend:
  2957                           	opt stack 0
  2958  00007D                     ___awmod@dividend:
  2959                           	opt stack 0
  2960  00007D                     ___lwmod@dividend:
  2961                           	opt stack 0
  2962  00007D                     memcpy@d1:
  2963                           	opt stack 0
  2964  00007D                     memset@p1:
  2965                           	opt stack 0
  2966  00007D                     strcat@to:
  2967                           	opt stack 0
  2968  00007D                     strcpy@to:
  2969                           	opt stack 0
  2970  00007D                     strlen@s:
  2971                           	opt stack 0
  2972  00007D                     ___lmul@multiplier:
  2973                           	opt stack 0
  2974                           
  2975                           ; 4 bytes @ 0x1D
  2976  00007D                     	ds	1
  2977  00007E                     ??_USBConfigureEndpoint:
  2978  00007E                     Irq_InitIntController@PerInt_LowPInt:
  2979                           	opt stack 0
  2980  00007E                     Rtcc_GetRtccValue@RtccPtrVal:
  2981                           	opt stack 0
  2982  00007E                     TmrBInit@Postscaler:
  2983                           	opt stack 0
  2984  00007E                     Tmr_TmrBIrqSet@TmrIrqSts:
  2985                           	opt stack 0
  2986  00007E                     UartWriteByte@Module:
  2987                           	opt stack 0
  2988  00007E                     UartTxBufferStatus@Module:
  2989                           	opt stack 0
  2990  00007E                     USBCtrlTrfRxService@byteToRead:
  2991                           	opt stack 0
  2992  00007E                     USBCtrlTrfInHandler@lastDTS:
  2993                           	opt stack 0
  2994  00007E                     Led_SetLedStatus@Led:
  2995                           	opt stack 0
  2996  00007E                     _isdigit$6360:
  2997                           	opt stack 0
  2998  00007E                     _isspace$6629:
  2999                           	opt stack 0
  3000  00007E                     _isupper$6632:
  3001                           	opt stack 0
  3002  00007E                     I2c_WriteData@WritePacket:
  3003                           	opt stack 0
  3004  00007E                     Rtcc_RtcConfig@RtcConfig:
  3005                           	opt stack 0
  3006  00007E                     USBTransferOnePacket@data:
  3007                           	opt stack 0
  3008  00007E                     USBStdGetStatusHandler@p:
  3009                           	opt stack 0
  3010                           
  3011                           ; 2 bytes @ 0x1E
  3012  00007E                     	ds	1
  3013  00007F                     ??_strlen:
  3014  00007F                     ??_Rtcc_AlarmConfig:
  3015  00007F                     ??_TmrBInit:
  3016  00007F                     Irq_InitIntController@IntPriorityEn:
  3017                           	opt stack 0
  3018  00007F                     Rtcc_GetRtccValue@RetValue:
  3019                           	opt stack 0
  3020  00007F                     Tmr_TmrBIrqSet@TmrNumb:
  3021                           	opt stack 0
  3022  00007F                     UartTxBufferStatus@TxBufferStatus:
  3023                           	opt stack 0
  3024  00007F                     GenerateEvt@EventStatus:
  3025                           	opt stack 0
  3026  00007F                     isdigit@c:
  3027                           	opt stack 0
  3028  00007F                     isspace@c:
  3029                           	opt stack 0
  3030  00007F                     isupper@c:
  3031                           	opt stack 0
  3032  00007F                     Led_SetLedBlinkTime@OffTimeMs:
  3033                           	opt stack 0
  3034  00007F                     StringCompare@String2:
  3035                           	opt stack 0
  3036  00007F                     StringCopy@DestStr:
  3037                           	opt stack 0
  3038  00007F                     ClearBuffer@Len:
  3039                           	opt stack 0
  3040  00007F                     sprintf@f:
  3041                           	opt stack 0
  3042  00007F                     ___wmul@multiplicand:
  3043                           	opt stack 0
  3044  00007F                     ___awdiv@divisor:
  3045                           	opt stack 0
  3046  00007F                     ___awmod@divisor:
  3047                           	opt stack 0
  3048  00007F                     ___lwmod@divisor:
  3049                           	opt stack 0
  3050  00007F                     memcpy@s1:
  3051                           	opt stack 0
  3052  00007F                     memset@c:
  3053                           	opt stack 0
  3054  00007F                     strcat@from:
  3055                           	opt stack 0
  3056  00007F                     strcpy@from:
  3057                           	opt stack 0
  3058                           
  3059                           ; 2 bytes @ 0x1F
  3060  00007F                     	ds	1
  3061  000080                     ??_isalpha:
  3062  000080                     ??_isxdigit:
  3063  000080                     ??_I2c_WriteData:
  3064  000080                     ??_Rtcc_RtcConfig:
  3065  000080                     Rtcc_GetRtccValue@RegValue:
  3066                           	opt stack 0
  3067  000080                     TmrBInit@TmrNumb:
  3068                           	opt stack 0
  3069  000080                     ReceiveEvt@EventStatus:
  3070                           	opt stack 0
  3071  000080                     USBTransferOnePacket@len:
  3072                           	opt stack 0
  3073  000080                     isNumberValid@isNumberOk:
  3074                           	opt stack 0
  3075  000080                     I2c_ReadData@ReadPacket:
  3076                           	opt stack 0
  3077  000080                     Uart_WriteConstString@ConstStringToWrite:
  3078                           	opt stack 0
  3079  000080                     Uart_WriteString@StringToWrite:
  3080                           	opt stack 0
  3081  000080                     Uart_WriteStringLen@StringToWrite:
  3082                           	opt stack 0
  3083  000080                     I2cSlv_SendI2cMsg@TxBuffer:
  3084                           	opt stack 0
  3085  000080                     I2cSlv_ReceiveI2cMsg@RxBuffer:
  3086                           	opt stack 0
  3087                           
  3088                           ; 2 bytes @ 0x20
  3089  000080                     	ds	1
  3090  000081                     ?_GetElapsedTime:
  3091                           	opt stack 0
  3092  000081                     ?_Rtcm_GetRtccDate:
  3093                           	opt stack 0
  3094  000081                     Mdm_IsSmsReceived@Ret:
  3095                           	opt stack 0
  3096  000081                     Mdm_IsRinging@Ret:
  3097                           	opt stack 0
  3098  000081                     I2cSlv_I2cReadMsgSts@Result:
  3099                           	opt stack 0
  3100  000081                     USBTransferOnePacket@ep:
  3101                           	opt stack 0
  3102  000081                     Led_SetLedBlinkTime@Led:
  3103                           	opt stack 0
  3104  000081                     isNumberValid@i:
  3105                           	opt stack 0
  3106  000081                     ___awdiv@counter:
  3107                           	opt stack 0
  3108  000081                     ___awmod@counter:
  3109                           	opt stack 0
  3110  000081                     ___lwmod@counter:
  3111                           	opt stack 0
  3112  000081                     _isalpha$6626:
  3113                           	opt stack 0
  3114  000081                     _isxdigit$6636:
  3115                           	opt stack 0
  3116  000081                     OsTmr_StartTimer@Timer:
  3117                           	opt stack 0
  3118  000081                     StringCompare@Len:
  3119                           	opt stack 0
  3120  000081                     StringCopy@Len:
  3121                           	opt stack 0
  3122  000081                     ClearBuffer@Index:
  3123                           	opt stack 0
  3124  000081                     ___wmul@product:
  3125                           	opt stack 0
  3126  000081                     memcpy@n:
  3127                           	opt stack 0
  3128  000081                     memset@n:
  3129                           	opt stack 0
  3130  000081                     strcat@cp:
  3131                           	opt stack 0
  3132  000081                     strcpy@cp:
  3133                           	opt stack 0
  3134  000081                     strlen@cp:
  3135                           	opt stack 0
  3136  000081                     GetElapsedTime@StartTime:
  3137                           	opt stack 0
  3138  000081                     ___lmul@multiplicand:
  3139                           	opt stack 0
  3140                           
  3141                           ; 4 bytes @ 0x21
  3142  000081                     	ds	1
  3143  000082                     ??_I2c_ReadData:
  3144  000082                     Uart_WriteConstString@Module:
  3145                           	opt stack 0
  3146  000082                     Uart_WriteString@Module:
  3147                           	opt stack 0
  3148  000082                     Uart_WriteStringLen@Len:
  3149                           	opt stack 0
  3150  000082                     I2cSlv_SendI2cMsg@SlaveAddr:
  3151                           	opt stack 0
  3152  000082                     I2cSlv_ReceiveI2cMsg@SlaveAddr:
  3153                           	opt stack 0
  3154  000082                     USBConfigureEndpoint@EPNum:
  3155                           	opt stack 0
  3156  000082                     ___awdiv@sign:
  3157                           	opt stack 0
  3158  000082                     ___awmod@sign:
  3159                           	opt stack 0
  3160  000082                     isalpha@c:
  3161                           	opt stack 0
  3162  000082                     isxdigit@c:
  3163                           	opt stack 0
  3164  000082                     USBTransferOnePacket@handle:
  3165                           	opt stack 0
  3166                           
  3167                           ; 2 bytes @ 0x22
  3168  000082                     	ds	1
  3169  000083                     ??_StringCopy:
  3170  000083                     ?_GetCallerNumber:
  3171                           	opt stack 0
  3172  000083                     ?_atoi:
  3173                           	opt stack 0
  3174  000083                     ?_xtoi:
  3175                           	opt stack 0
  3176  000083                     ?___lwdiv:
  3177                           	opt stack 0
  3178  000083                     Uart_WriteStringLen@Index:
  3179                           	opt stack 0
  3180  000083                     Mdm_SetSmsFormat@Index:
  3181                           	opt stack 0
  3182  000083                     I2cSlv_SendI2cMsg@DataLenght:
  3183                           	opt stack 0
  3184  000083                     I2cSlv_ReceiveI2cMsg@DataLenght:
  3185                           	opt stack 0
  3186  000083                     getSetupCall@isCalledReceived:
  3187                           	opt stack 0
  3188  000083                     sprintf@flag:
  3189                           	opt stack 0
  3190  000083                     memcpy@tmp:
  3191                           	opt stack 0
  3192  000083                     OsAlrm_SetOsAlarm@OsAlarmId:
  3193                           	opt stack 0
  3194  000083                     USBConfigureEndpoint@handle:
  3195                           	opt stack 0
  3196  000083                     putUSBUSART@data:
  3197                           	opt stack 0
  3198  000083                     atoi@s:
  3199                           	opt stack 0
  3200  000083                     ___awdiv@quotient:
  3201                           	opt stack 0
  3202  000083                     ___lwdiv@dividend:
  3203                           	opt stack 0
  3204  000083                     memset@p:
  3205                           	opt stack 0
  3206  000083                     xtoi@s:
  3207                           	opt stack 0
  3208  000083                     OsTmr_StartTimer@Timeout:
  3209                           	opt stack 0
  3210                           
  3211                           ; 4 bytes @ 0x23
  3212  000083                     	ds	1
  3213  000084                     Uart_WriteStringLen@Module:
  3214                           	opt stack 0
  3215  000084                     I2cSlv_SendI2cMsg@TxSts:
  3216                           	opt stack 0
  3217  000084                     I2cSlv_ReceiveI2cMsg@RxSts:
  3218                           	opt stack 0
  3219  000084                     CDCTxService@i:
  3220                           	opt stack 0
  3221  000084                     getsUSBUSART@buffer:
  3222                           	opt stack 0
  3223  000084                     sprintf@ap:
  3224                           	opt stack 0
  3225  000084                     memcpy@d:
  3226                           	opt stack 0
  3227  000084                     Mdm_SetSmsFormat@UartMessage:
  3228                           	opt stack 0
  3229                           
  3230                           ; 20 bytes @ 0x24
  3231  000084                     	ds	1
  3232  000085                     ??_atoi:
  3233  000085                     ??_xtoi:
  3234  000085                     ??_GetElapsedTime:
  3235  000085                     Rtcc_SetRtccValue@Value:
  3236                           	opt stack 0
  3237  000085                     USBDeviceInit@i:
  3238                           	opt stack 0
  3239  000085                     USBEnableEndpoint@options:
  3240                           	opt stack 0
  3241  000085                     putUSBUSART@length:
  3242                           	opt stack 0
  3243  000085                     CDCTxService@byte_to_send:
  3244                           	opt stack 0
  3245  000085                     StringCompare@Result:
  3246                           	opt stack 0
  3247  000085                     StringCopy@Index:
  3248                           	opt stack 0
  3249  000085                     ___lwdiv@divisor:
  3250                           	opt stack 0
  3251  000085                     OsAlrm_SetOsAlarm@OsAlarmTimeout:
  3252                           	opt stack 0
  3253  000085                     ___lmul@product:
  3254                           	opt stack 0
  3255                           
  3256                           ; 4 bytes @ 0x25
  3257  000085                     	ds	1
  3258  000086                     ??_Rtcc_SetRtccValue:
  3259  000086                     getsUSBUSART@len:
  3260                           	opt stack 0
  3261  000086                     sprintf@c:
  3262                           	opt stack 0
  3263  000086                     USBEnableEndpoint@p:
  3264                           	opt stack 0
  3265  000086                     StringCompare@Index:
  3266                           	opt stack 0
  3267  000086                     memcpy@s:
  3268                           	opt stack 0
  3269                           
  3270                           ; 2 bytes @ 0x26
  3271  000086                     	ds	1
  3272  000087                     atoi@sign:
  3273                           	opt stack 0
  3274  000087                     ___lwdiv@counter:
  3275                           	opt stack 0
  3276  000087                     xtoi@sign:
  3277                           	opt stack 0
  3278  000087                     Mdm_GetSmsData@MessageText:
  3279                           	opt stack 0
  3280  000087                     Eeprom_Write@WriteBuffer:
  3281                           	opt stack 0
  3282  000087                     sprintf@cp:
  3283                           	opt stack 0
  3284                           
  3285                           ; 2 bytes @ 0x27
  3286  000087                     	ds	1
  3287  000088                     Rtcc_SetRtccValue@RtccPtrVal:
  3288                           	opt stack 0
  3289  000088                     USBEnableEndpoint@ep:
  3290                           	opt stack 0
  3291  000088                     parseCommand@text:
  3292                           	opt stack 0
  3293  000088                     atoi@a:
  3294                           	opt stack 0
  3295  000088                     ___lwdiv@quotient:
  3296                           	opt stack 0
  3297  000088                     xtoi@val:
  3298                           	opt stack 0
  3299  000088                     ModemEvtParser@CallReadyString:
  3300                           	opt stack 0
  3301                           
  3302                           ; 10 bytes @ 0x28
  3303  000088                     	ds	1
  3304  000089                     ??_Rtcm_GetRtccDate:
  3305  000089                     ?_strtol:
  3306                           	opt stack 0
  3307  000089                     ?___lldiv:
  3308                           	opt stack 0
  3309  000089                     Mdm_GetSmsData@GetSmsStatus:
  3310                           	opt stack 0
  3311  000089                     Eeprom_Write@DataLength:
  3312                           	opt stack 0
  3313  000089                     OsAlrm_SetOsAlarm@AlarmCallback:
  3314                           	opt stack 0
  3315  000089                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  3316                           	opt stack 0
  3317  000089                     strtol@s:
  3318                           	opt stack 0
  3319  000089                     ___lldiv@dividend:
  3320                           	opt stack 0
  3321  000089                     Rtcm_SetRtccDate@Date:
  3322                           	opt stack 0
  3323                           
  3324                           ; 8 bytes @ 0x29
  3325  000089                     	ds	1
  3326  00008A                     Eeprom_Write@WriteSts:
  3327                           	opt stack 0
  3328  00008A                     xtoi@c:
  3329                           	opt stack 0
  3330  00008A                     LedBlinkStateMachine@LedBlink:
  3331                           	opt stack 0
  3332  00008A                     LedPulseStateMachine@LedPulse:
  3333                           	opt stack 0
  3334  00008A                     secondsAppTimer@counter:
  3335                           	opt stack 0
  3336  00008A                     utoa@buf:
  3337                           	opt stack 0
  3338  00008A                     parseCommand@addNumberCmd:
  3339                           	opt stack 0
  3340  00008A                     Rtcm_GetRtccDate@LocalDate:
  3341                           	opt stack 0
  3342                           
  3343                           ; 8 bytes @ 0x2A
  3344  00008A                     	ds	1
  3345  00008B                     Eeprom_Write@MemoryAddress:
  3346                           	opt stack 0
  3347  00008B                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  3348                           	opt stack 0
  3349  00008B                     strtol@endptr:
  3350                           	opt stack 0
  3351                           
  3352                           ; 2 bytes @ 0x2B
  3353  00008B                     	ds	1
  3354  00008C                     Eeprom_Write@SlaveAddress:
  3355                           	opt stack 0
  3356  00008C                     LedPulseStateMachine@Led:
  3357                           	opt stack 0
  3358  00008C                     secondsAppTimer@isCyclic:
  3359                           	opt stack 0
  3360  00008C                     utoa@val:
  3361                           	opt stack 0
  3362                           
  3363                           ; 2 bytes @ 0x2C
  3364  00008C                     	ds	1
  3365  00008D                     Eeprom_Write@CommandLength:
  3366                           	opt stack 0
  3367  00008D                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  3368                           	opt stack 0
  3369  00008D                     strtol@base:
  3370                           	opt stack 0
  3371  00008D                     parseCommand@deleteNumberCmd:
  3372                           	opt stack 0
  3373  00008D                     GetElapsedTime@TimeValue:
  3374                           	opt stack 0
  3375  00008D                     ___lldiv@divisor:
  3376                           	opt stack 0
  3377                           
  3378                           ; 4 bytes @ 0x2D
  3379  00008D                     	ds	1
  3380  00008E                     saveNumberInMemory@phoneNumber:
  3381                           	opt stack 0
  3382  00008E                     utoa@base:
  3383                           	opt stack 0
  3384                           
  3385                           ; 2 bytes @ 0x2E
  3386  00008E                     	ds	1
  3387  00008F                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  3388  00008F                     ??_strtol:
  3389  00008F                     secondsAppTimer@seconds:
  3390                           	opt stack 0
  3391  00008F                     LedStateMachine@LedSts:
  3392                           	opt stack 0
  3393                           
  3394                           ; 2 bytes @ 0x2F
  3395  00008F                     	ds	1
  3396  000090                     parseCommand@state:
  3397                           	opt stack 0
  3398  000090                     secondsAppTimer@isExpired:
  3399                           	opt stack 0
  3400  000090                     saveNumberInMemory@address:
  3401                           	opt stack 0
  3402  000090                     utoa@v:
  3403                           	opt stack 0
  3404                           
  3405                           ; 2 bytes @ 0x30
  3406  000090                     	ds	1
  3407  000091                     ??_USBStdFeatureReqHandler:
  3408  000091                     USBStdSetCfgHandler@i:
  3409                           	opt stack 0
  3410  000091                     LedStateMachine@LedOut:
  3411                           	opt stack 0
  3412  000091                     secondsAppTimer@destinationTicks:
  3413                           	opt stack 0
  3414  000091                     GetElapsedTime@CurrentTimestamp:
  3415                           	opt stack 0
  3416  000091                     ___lldiv@quotient:
  3417                           	opt stack 0
  3418                           
  3419                           ; 4 bytes @ 0x31
  3420  000091                     	ds	1
  3421  000092                     utoa@c:
  3422                           	opt stack 0
  3423  000092                     USBStdFeatureReqHandler@pUEP:
  3424                           	opt stack 0
  3425  000092                     ModemEvtParser@ClipString:
  3426                           	opt stack 0
  3427                           
  3428                           ; 5 bytes @ 0x32
  3429  000092                     	ds	1
  3430  000093                     waitSetupCall@isCallArrived:
  3431                           	opt stack 0
  3432  000093                     strtol@sign:
  3433                           	opt stack 0
  3434  000093                     LedStateMachine@LedBlink:
  3435                           	opt stack 0
  3436  000093                     itoa@buf:
  3437                           	opt stack 0
  3438                           
  3439                           ; 2 bytes @ 0x33
  3440  000093                     	ds	1
  3441  000094                     USBStdFeatureReqHandler@current_ep_data:
  3442                           	opt stack 0
  3443  000094                     strtol@a:
  3444                           	opt stack 0
  3445                           
  3446                           ; 4 bytes @ 0x34
  3447  000094                     	ds	1
  3448  000095                     ___lldiv@counter:
  3449                           	opt stack 0
  3450  000095                     OsTmr_GetTimerStatus@Timer:
  3451                           	opt stack 0
  3452  000095                     USBStdFeatureReqHandler@p:
  3453                           	opt stack 0
  3454  000095                     LedStateMachine@LedPulse:
  3455                           	opt stack 0
  3456  000095                     itoa@val:
  3457                           	opt stack 0
  3458                           
  3459                           ; 2 bytes @ 0x35
  3460  000095                     	ds	1
  3461  000096                     Tmr_TmrBPrSet@IntFreqHz:
  3462                           	opt stack 0
  3463  000096                     SetUartBaudRate@UartConfig:
  3464                           	opt stack 0
  3465  000096                     SetBaudRate@DesiredI2cBusClockHz:
  3466                           	opt stack 0
  3467                           
  3468                           ; 4 bytes @ 0x36
  3469  000096                     	ds	1
  3470  000097                     ??_USBCtrlEPService:
  3471  000097                     itoa@base:
  3472                           	opt stack 0
  3473  000097                     ModemEvtParser@SmsString:
  3474                           	opt stack 0
  3475                           
  3476                           ; 5 bytes @ 0x37
  3477  000097                     	ds	1
  3478  000098                     Tmr_TmrBPrSet@Prescaler:
  3479                           	opt stack 0
  3480  000098                     Mdm_SetSmsFormat@TextFormat:
  3481                           	opt stack 0
  3482  000098                     USBDeviceTasks@i:
  3483                           	opt stack 0
  3484  000098                     LedStateMachine@LedOutSts:
  3485                           	opt stack 0
  3486  000098                     strtol@c:
  3487                           	opt stack 0
  3488                           
  3489                           ; 1 bytes @ 0x38
  3490  000098                     	ds	1
  3491  000099                     Tmr_TmrBPrSet@Postscaler:
  3492                           	opt stack 0
  3493  000099                     SetUartBaudRate@Module:
  3494                           	opt stack 0
  3495  000099                     LedStateMachine@Led:
  3496                           	opt stack 0
  3497  000099                     initGprsModem@isInitialized:
  3498                           	opt stack 0
  3499  000099                     itoa@cp:
  3500                           	opt stack 0
  3501                           
  3502                           ; 2 bytes @ 0x39
  3503  000099                     	ds	1
  3504  00009A                     ??_Led_MainTask:
  3505  00009A                     Tmr_TmrBPrSet@TmrBPrCfgSts:
  3506                           	opt stack 0
  3507  00009A                     SetUartBaudRate@BaudRateRegister:
  3508                           	opt stack 0
  3509  00009A                     SetBaudRate@McuClockHz:
  3510                           	opt stack 0
  3511                           
  3512                           ; 4 bytes @ 0x3A
  3513  00009A                     	ds	1
  3514  00009B                     ??_SendSmsSm:
  3515  00009B                     Tmr_TmrBPrSet@TmrNumb:
  3516                           	opt stack 0
  3517  00009B                     OsTmr_Wait@WaitTimer:
  3518                           	opt stack 0
  3519  00009B                     InitGprsNetwork@Apn:
  3520                           	opt stack 0
  3521  00009B                     HttpGetMethod@GetData:
  3522                           	opt stack 0
  3523                           
  3524                           ; 2 bytes @ 0x3B
  3525  00009B                     	ds	1
  3526  00009C                     SetUartBaudRate@DivisionFactor:
  3527                           	opt stack 0
  3528  00009C                     Tmr_TmrBPrSet@Divisor:
  3529                           	opt stack 0
  3530  00009C                     ModemEvtParser@RingString:
  3531                           	opt stack 0
  3532                           
  3533                           ; 4 bytes @ 0x3C
  3534  00009C                     	ds	1
  3535  00009D                     ??_HttpGetMethod:
  3536  00009D                     InitGprsNetwork@ApnLen:
  3537                           	opt stack 0
  3538  00009D                     Uart_InitUartModule@UartConfig:
  3539                           	opt stack 0
  3540  00009D                     OsTmr_Wait@DelayMs:
  3541                           	opt stack 0
  3542                           
  3543                           ; 4 bytes @ 0x3D
  3544  00009D                     	ds	1
  3545  00009E                     ??_SetBaudRate:
  3546  00009E                     ??_InitGprsNetwork:
  3547                           
  3548                           ; 1 bytes @ 0x3E
  3549  00009E                     	ds	1
  3550  00009F                     ??_Uart_InitUartModule:
  3551                           
  3552                           ; 1 bytes @ 0x3F
  3553  00009F                     	ds	1
  3554  0000A0                     ModemEvtParser@Match:
  3555                           	opt stack 0
  3556  0000A0                     Tmr_TmrBConfig@TmrBConfig:
  3557                           	opt stack 0
  3558                           
  3559                           ; 2 bytes @ 0x40
  3560  0000A0                     	ds	1
  3561  0000A1                     Uart_InitUartModule@Module:
  3562                           	opt stack 0
  3563  0000A1                     OsTmr_Wait@Ret:
  3564                           	opt stack 0
  3565  0000A1                     ModemEvtParser@CompareIdx:
  3566                           	opt stack 0
  3567                           
  3568                           ; 1 bytes @ 0x41
  3569  0000A1                     	ds	1
  3570  0000A2                     ??_Terminal:
  3571  0000A2                     I2c_InitI2cModule@I2cConfig:
  3572                           	opt stack 0
  3573  0000A2                     I2cSlv_QueryI2cData@TxBuffer:
  3574                           	opt stack 0
  3575                           
  3576                           ; 2 bytes @ 0x42
  3577  0000A2                     	ds	1
  3578  0000A3                     Tmr_TmrBConfig@TmrNumb:
  3579                           	opt stack 0
  3580                           
  3581                           ; 1 bytes @ 0x43
  3582  0000A3                     	ds	1
  3583  0000A4                     ??_I2c_InitI2cModule:
  3584  0000A4                     I2cSlv_QueryI2cData@TxLen:
  3585                           	opt stack 0
  3586  0000A4                     Terminal@i:
  3587                           	opt stack 0
  3588  0000A4                     InitSchedTimer@TmrBConfig:
  3589                           	opt stack 0
  3590                           
  3591                           ; 7 bytes @ 0x44
  3592  0000A4                     	ds	1
  3593  0000A5                     Terminal@ReceivedBytes:
  3594                           	opt stack 0
  3595  0000A5                     I2cSlv_QueryI2cData@RxBuffer:
  3596                           	opt stack 0
  3597                           
  3598                           ; 2 bytes @ 0x45
  3599  0000A5                     	ds	1
  3600  0000A6                     Terminal@Index:
  3601                           	opt stack 0
  3602                           
  3603                           ; 1 bytes @ 0x46
  3604  0000A6                     	ds	1
  3605  0000A7                     I2cSlv_QueryI2cData@RxLen:
  3606                           	opt stack 0
  3607                           
  3608                           ; 1 bytes @ 0x47
  3609  0000A7                     	ds	1
  3610  0000A8                     I2cSlv_QueryI2cData@SlaveAddr:
  3611                           	opt stack 0
  3612                           
  3613                           ; 1 bytes @ 0x48
  3614  0000A8                     	ds	1
  3615  0000A9                     Eeprom_Read@ReadBuffer:
  3616                           	opt stack 0
  3617                           
  3618                           ; 2 bytes @ 0x49
  3619  0000A9                     	ds	2
  3620  0000AB                     Eeprom_Read@DataLength:
  3621                           	opt stack 0
  3622                           
  3623                           ; 1 bytes @ 0x4B
  3624  0000AB                     	ds	1
  3625  0000AC                     Eeprom_Read@MemoryAddress:
  3626                           	opt stack 0
  3627                           
  3628                           ; 1 bytes @ 0x4C
  3629  0000AC                     	ds	1
  3630  0000AD                     Eeprom_Read@SlaveAddress:
  3631                           	opt stack 0
  3632                           
  3633                           ; 1 bytes @ 0x4D
  3634  0000AD                     	ds	1
  3635  0000AE                     Eeprom_Read@ReadSts:
  3636                           	opt stack 0
  3637                           
  3638                           ; 1 bytes @ 0x4E
  3639  0000AE                     	ds	1
  3640  0000AF                     Eeprom_Read@QuerySts:
  3641                           	opt stack 0
  3642                           
  3643                           ; 1 bytes @ 0x4F
  3644  0000AF                     	ds	1
  3645  0000B0                     tblptru	equ	0xFF8
  3646                           tblptrh	equ	0xFF7
  3647                           tblptrl	equ	0xFF6
  3648                           tablat	equ	0xFF5
  3649                           postinc0	equ	0xFEE
  3650                           wreg	equ	0xFE8
  3651                           postdec1	equ	0xFE5
  3652                           fsr1h	equ	0xFE2
  3653                           fsr1l	equ	0xFE1
  3654                           
  3655                           ; 1 bytes @ 0x50
  3656                           
  3657                           	psect	cstackCOMRAM
  3658  000001                     __pcstackCOMRAM:
  3659                           	opt stack 0
  3660  000001                     i2GenerateEvt@Event:
  3661                           	opt stack 0
  3662                           
  3663                           ; 2 bytes @ 0x0
  3664  000001                     	ds	2
  3665  000003                     i2GenerateEvt@EventStatus:
  3666                           	opt stack 0
  3667                           
  3668                           ; 1 bytes @ 0x2
  3669  000003                     	ds	1
  3670  000004                     Uart_MdmGsmGprsReadService@UartData:
  3671                           	opt stack 0
  3672                           
  3673                           ; 1 bytes @ 0x3
  3674  000004                     	ds	1
  3675  000005                     Uart_MdmGsmGprsReadService@ServiceCounter:
  3676                           	opt stack 0
  3677                           
  3678                           ; 2 bytes @ 0x4
  3679  000005                     	ds	2
  3680  000007                     ??_HighPriorityIsr:
  3681                           
  3682                           ; 1 bytes @ 0x6
  3683  000007                     	ds	18
  3684  000019                     ?i1___wmul:
  3685                           	opt stack 0
  3686  000019                     OsAlrm_ClearOsAlarm@OsAlarmId:
  3687                           	opt stack 0
  3688  000019                     i1GenerateEvt@Event:
  3689                           	opt stack 0
  3690  000019                     i1___wmul@multiplier:
  3691                           	opt stack 0
  3692                           
  3693                           ; 2 bytes @ 0x18
  3694  000019                     	ds	2
  3695  00001B                     i1GenerateEvt@EventStatus:
  3696                           	opt stack 0
  3697  00001B                     i1___wmul@multiplicand:
  3698                           	opt stack 0
  3699                           
  3700                           ; 2 bytes @ 0x1A
  3701  00001B                     	ds	1
  3702  00001C                     i1I2cSlv_SendI2cMsg@TxBuffer:
  3703                           	opt stack 0
  3704                           
  3705                           ; 2 bytes @ 0x1B
  3706  00001C                     	ds	1
  3707  00001D                     i1___wmul@product:
  3708                           	opt stack 0
  3709                           
  3710                           ; 2 bytes @ 0x1C
  3711  00001D                     	ds	1
  3712  00001E                     i1I2cSlv_SendI2cMsg@SlaveAddr:
  3713                           	opt stack 0
  3714                           
  3715                           ; 1 bytes @ 0x1D
  3716  00001E                     	ds	1
  3717  00001F                     i1I2cSlv_SendI2cMsg@DataLenght:
  3718                           	opt stack 0
  3719                           
  3720                           ; 1 bytes @ 0x1E
  3721  00001F                     	ds	1
  3722  000020                     i1I2cSlv_SendI2cMsg@TxSts:
  3723                           	opt stack 0
  3724                           
  3725                           ; 1 bytes @ 0x1F
  3726  000020                     	ds	1
  3727  000021                     OsAlrm_ProcessOsAlarms@AlarmIndex:
  3728                           	opt stack 0
  3729                           
  3730                           ; 2 bytes @ 0x20
  3731  000021                     	ds	2
  3732  000023                     tblptru	equ	0xFF8
  3733                           tblptrh	equ	0xFF7
  3734                           tblptrl	equ	0xFF6
  3735                           tablat	equ	0xFF5
  3736                           postinc0	equ	0xFEE
  3737                           wreg	equ	0xFE8
  3738                           postdec1	equ	0xFE5
  3739                           fsr1h	equ	0xFE2
  3740                           fsr1l	equ	0xFE1
  3741                           
  3742                           ; 1 bytes @ 0x22
  3743 ;;
  3744 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3745 ;;
  3746 ;; *************** function _main *****************
  3747 ;; Defined at:
  3748 ;;		line 58 in file "../../MercuryFwk/Source/c/00_Main/main.c"
  3749 ;; Parameters:    Size  Location     Type
  3750 ;;		None
  3751 ;; Auto vars:     Size  Location     Type
  3752 ;;		None
  3753 ;; Return value:  Size  Location     Type
  3754 ;;                  2   14[None  ] short 
  3755 ;; Registers used:
  3756 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  3757 ;; Tracked objects:
  3758 ;;		On entry : 0/0
  3759 ;;		On exit  : 0/0
  3760 ;;		Unchanged: 0/0
  3761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3762 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3763 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3765 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3766 ;;Total ram usage:        0 bytes
  3767 ;; Hardware stack levels required when called:   23
  3768 ;; This function calls:
  3769 ;;		_Sch_MainScheduler
  3770 ;;		_SystemInit
  3771 ;; This function is called by:
  3772 ;;		Startup code after reset
  3773 ;; This function uses a non-reentrant model
  3774 ;;
  3775                           
  3776                           	psect	text0
  3777  006830                     __ptext0:
  3778                           	opt stack 0
  3779  006830                     _main:
  3780                           	opt stack 8
  3781                           
  3782                           ;main.c: 61: SystemInit();
  3783                           
  3784                           ;incstack = 0
  3785  006830  EC13  F031         	call	_SystemInit	;wreg free
  3786                           
  3787                           ;main.c: 64: Sch_MainScheduler();
  3788  006834  EC08  F033         	call	_Sch_MainScheduler	;wreg free
  3789                           
  3790                           ;main.c: 67: return 0;
  3791                           ;	Return value of _main is never used
  3792  006838  EF66  F000         	goto	start
  3793  00683C                     __end_of_main:
  3794                           	opt stack 0
  3795                           tblptru	equ	0xFF8
  3796                           tblptrh	equ	0xFF7
  3797                           tblptrl	equ	0xFF6
  3798                           tablat	equ	0xFF5
  3799                           postinc0	equ	0xFEE
  3800                           wreg	equ	0xFE8
  3801                           postdec1	equ	0xFE5
  3802                           fsr1h	equ	0xFE2
  3803                           fsr1l	equ	0xFE1
  3804                           
  3805 ;; *************** function _SystemInit *****************
  3806 ;; Defined at:
  3807 ;;		line 121 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/sys_init.c"
  3808 ;; Parameters:    Size  Location     Type
  3809 ;;		None
  3810 ;; Auto vars:     Size  Location     Type
  3811 ;;		None
  3812 ;; Return value:  Size  Location     Type
  3813 ;;                  1    wreg      void 
  3814 ;; Registers used:
  3815 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3816 ;; Tracked objects:
  3817 ;;		On entry : 0/0
  3818 ;;		On exit  : 0/0
  3819 ;;		Unchanged: 0/0
  3820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3821 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3822 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3823 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3824 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3825 ;;Total ram usage:        0 bytes
  3826 ;; Hardware stack levels used:    1
  3827 ;; Hardware stack levels required when called:   15
  3828 ;; This function calls:
  3829 ;;		_InitSchedTimer
  3830 ;;		_Irq_InitIntController
  3831 ;;		_Mcu_ConfigExtInt
  3832 ;;		_Mcu_StartSystemPll
  3833 ;;		_Pm_DsReleasePinControl
  3834 ;;		_Tmr_RegisterTmr2IsrCallback
  3835 ;; This function is called by:
  3836 ;;		_main
  3837 ;; This function uses a non-reentrant model
  3838 ;;
  3839                           
  3840                           	psect	text1
  3841  006226                     __ptext1:
  3842                           	opt stack 0
  3843  006226                     _SystemInit:
  3844                           	opt stack 15
  3845                           
  3846                           ;sys_init.c: 124: Pm_DsReleasePinControl();
  3847                           
  3848                           ;incstack = 0
  3849  006226  EC3B  F034         	call	_Pm_DsReleasePinControl	;wreg free
  3850                           
  3851                           ;sys_init.c: 126: Mcu_StartSystemPll();
  3852  00622A  ECF9  F032         	call	_Mcu_StartSystemPll	;wreg free
  3853                           
  3854                           ;sys_init.c: 128: Irq_InitIntController(IntPriorityMode,1u,1u);
  3855  00622E  0E01               	movlw	1
  3856  006230  0100               	movlb	0	; () banked
  3857  006232  6F7D               	movwf	Irq_InitIntController@GlobalInt_HighPInt& (0+255),b
  3858  006234  0E01               	movlw	1
  3859  006236  6F7E               	movwf	Irq_InitIntController@PerInt_LowPInt& (0+255),b
  3860  006238  0E01               	movlw	1
  3861  00623A  ECB7  F031         	call	_Irq_InitIntController
  3862                           
  3863                           ;sys_init.c: 130: Tmr_RegisterTmr2IsrCallback(&Sch_SchmIntService);
  3864  00623E  0E08               	movlw	low _Sch_SchmIntService
  3865  006240  0100               	movlb	0	; () banked
  3866  006242  6F7D               	movwf	Tmr_RegisterTmr2IsrCallback@IsrCallback& (0+255),b
  3867  006244  0E68               	movlw	high _Sch_SchmIntService
  3868  006246  6F7E               	movwf	(Tmr_RegisterTmr2IsrCallback@IsrCallback+1)& (0+255),b
  3869  006248  EC1E  F034         	call	_Tmr_RegisterTmr2IsrCallback	;wreg free
  3870                           
  3871                           ;sys_init.c: 132: InitSchedTimer();
  3872  00624C  EC73  F031         	call	_InitSchedTimer	;wreg free
  3873                           
  3874                           ;sys_init.c: 134: Mcu_ConfigExtInt();
  3875  006250  EC33  F033         	call	_Mcu_ConfigExtInt	;wreg free
  3876  006254  0012               	return		;funcret
  3877  006256                     __end_of_SystemInit:
  3878                           	opt stack 0
  3879                           tblptru	equ	0xFF8
  3880                           tblptrh	equ	0xFF7
  3881                           tblptrl	equ	0xFF6
  3882                           tablat	equ	0xFF5
  3883                           postinc0	equ	0xFEE
  3884                           wreg	equ	0xFE8
  3885                           postdec1	equ	0xFE5
  3886                           fsr1h	equ	0xFE2
  3887                           fsr1l	equ	0xFE1
  3888                           
  3889 ;; *************** function _Tmr_RegisterTmr2IsrCallback *****************
  3890 ;; Defined at:
  3891 ;;		line 329 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  3892 ;; Parameters:    Size  Location     Type
  3893 ;;  IsrCallback     2   29[BANK0 ] PTR FTN()void 
  3894 ;;		 -> Sch_SchmIntService(1), 
  3895 ;; Auto vars:     Size  Location     Type
  3896 ;;		None
  3897 ;; Return value:  Size  Location     Type
  3898 ;;                  1    wreg      void 
  3899 ;; Registers used:
  3900 ;;		wreg, status,2, status,0
  3901 ;; Tracked objects:
  3902 ;;		On entry : 0/0
  3903 ;;		On exit  : 0/0
  3904 ;;		Unchanged: 0/0
  3905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3906 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3907 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3908 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3909 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3910 ;;Total ram usage:        2 bytes
  3911 ;; Hardware stack levels used:    1
  3912 ;; Hardware stack levels required when called:   11
  3913 ;; This function calls:
  3914 ;;		Nothing
  3915 ;; This function is called by:
  3916 ;;		_SystemInit
  3917 ;; This function uses a non-reentrant model
  3918 ;;
  3919                           
  3920                           	psect	text2
  3921  00683C                     __ptext2:
  3922                           	opt stack 0
  3923  00683C                     _Tmr_RegisterTmr2IsrCallback:
  3924                           	opt stack 18
  3925                           
  3926                           ;tmr_drv.c: 332: Tmr2IsrCallback = IsrCallback;
  3927                           
  3928                           ;incstack = 0
  3929  00683C  C07D  F2E8         	movff	Tmr_RegisterTmr2IsrCallback@IsrCallback,_Tmr2IsrCallback
  3930  006840  C07E  F2E9         	movff	Tmr_RegisterTmr2IsrCallback@IsrCallback+1,_Tmr2IsrCallback+1
  3931  006844  0012               	return		;funcret
  3932  006846                     __end_of_Tmr_RegisterTmr2IsrCallback:
  3933                           	opt stack 0
  3934                           tblptru	equ	0xFF8
  3935                           tblptrh	equ	0xFF7
  3936                           tblptrl	equ	0xFF6
  3937                           tablat	equ	0xFF5
  3938                           postinc0	equ	0xFEE
  3939                           wreg	equ	0xFE8
  3940                           postdec1	equ	0xFE5
  3941                           fsr1h	equ	0xFE2
  3942                           fsr1l	equ	0xFE1
  3943                           
  3944 ;; *************** function _Pm_DsReleasePinControl *****************
  3945 ;; Defined at:
  3946 ;;		line 166 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/pm_drv.c"
  3947 ;; Parameters:    Size  Location     Type
  3948 ;;		None
  3949 ;; Auto vars:     Size  Location     Type
  3950 ;;		None
  3951 ;; Return value:  Size  Location     Type
  3952 ;;                  1    wreg      void 
  3953 ;; Registers used:
  3954 ;;		None
  3955 ;; Tracked objects:
  3956 ;;		On entry : 0/0
  3957 ;;		On exit  : 0/0
  3958 ;;		Unchanged: 0/0
  3959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3960 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3961 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3963 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3964 ;;Total ram usage:        0 bytes
  3965 ;; Hardware stack levels used:    1
  3966 ;; Hardware stack levels required when called:   11
  3967 ;; This function calls:
  3968 ;;		Nothing
  3969 ;; This function is called by:
  3970 ;;		_SystemInit
  3971 ;; This function uses a non-reentrant model
  3972 ;;
  3973                           
  3974                           	psect	text3
  3975  006876                     __ptext3:
  3976                           	opt stack 0
  3977  006876                     _Pm_DsReleasePinControl:
  3978                           	opt stack 18
  3979                           
  3980                           ;pm_drv.c: 169: DSCONLbits.RELEASE = 0u;
  3981                           
  3982                           ;incstack = 0
  3983  006876  010F               	movlb	15	; () banked
  3984  006878  914C               	bcf	76,0,b	;volatile
  3985                           
  3986                           ; BSR set to: 15
  3987  00687A  0012               	return		;funcret
  3988  00687C                     __end_of_Pm_DsReleasePinControl:
  3989                           	opt stack 0
  3990                           tblptru	equ	0xFF8
  3991                           tblptrh	equ	0xFF7
  3992                           tblptrl	equ	0xFF6
  3993                           tablat	equ	0xFF5
  3994                           postinc0	equ	0xFEE
  3995                           wreg	equ	0xFE8
  3996                           postdec1	equ	0xFE5
  3997                           fsr1h	equ	0xFE2
  3998                           fsr1l	equ	0xFE1
  3999                           
  4000 ;; *************** function _Mcu_StartSystemPll *****************
  4001 ;; Defined at:
  4002 ;;		line 81 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
  4003 ;; Parameters:    Size  Location     Type
  4004 ;;		None
  4005 ;; Auto vars:     Size  Location     Type
  4006 ;;  PllStartupCo    2   29[BANK0 ] volatile unsigned short 
  4007 ;; Return value:  Size  Location     Type
  4008 ;;                  1    wreg      void 
  4009 ;; Registers used:
  4010 ;;		wreg, status,2, status,0
  4011 ;; Tracked objects:
  4012 ;;		On entry : 0/0
  4013 ;;		On exit  : 0/0
  4014 ;;		Unchanged: 0/0
  4015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4016 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4017 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4019 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4020 ;;Total ram usage:        2 bytes
  4021 ;; Hardware stack levels used:    1
  4022 ;; Hardware stack levels required when called:   11
  4023 ;; This function calls:
  4024 ;;		Nothing
  4025 ;; This function is called by:
  4026 ;;		_SystemInit
  4027 ;; This function uses a non-reentrant model
  4028 ;;
  4029                           
  4030                           	psect	text4
  4031  0065F2                     __ptext4:
  4032                           	opt stack 0
  4033  0065F2                     _Mcu_StartSystemPll:
  4034                           	opt stack 18
  4035                           
  4036                           ;mcu_drv.c: 83: volatile UINT16 PllStartupCounter = ((UINT16)(1000));
  4037                           
  4038                           ; BSR set to: 15
  4039                           ;incstack = 0
  4040  0065F2  0E03               	movlw	3
  4041  0065F4  0100               	movlb	0	; () banked
  4042  0065F6  6F7E               	movwf	(Mcu_StartSystemPll@PllStartupCounter+1)& (0+255),b	;volatile
  4043  0065F8  0EE8               	movlw	232
  4044  0065FA  6F7D               	movwf	Mcu_StartSystemPll@PllStartupCounter& (0+255),b	;volatile
  4045                           
  4046                           ; BSR set to: 0
  4047                           ;mcu_drv.c: 86: OSCTUNEbits.PLLEN = ((UINT8)(1));
  4048  0065FC  8C9B               	bsf	3995,6,c	;volatile
  4049  0065FE                     l11862:
  4050                           
  4051                           ; BSR set to: 0
  4052  0065FE  077D               	decf	Mcu_StartSystemPll@PllStartupCounter& (0+255),f,b	;volatile
  4053  006600  A0D8               	btfss	status,0,c
  4054  006602  077E               	decf	(Mcu_StartSystemPll@PllStartupCounter+1)& (0+255),f,b	;volatile
  4055  006604  297D               	incf	Mcu_StartSystemPll@PllStartupCounter& (0+255),w,b	;volatile
  4056  006606  E1FB               	bnz	l11862
  4057  006608  297E               	incf	(Mcu_StartSystemPll@PllStartupCounter+1)& (0+255),w,b	;volatile
  4058  00660A  B4D8               	btfsc	status,2,c
  4059  00660C  0012               	return	
  4060  00660E  D7F7               	goto	l237
  4061  006610                     __end_of_Mcu_StartSystemPll:
  4062                           	opt stack 0
  4063                           tblptru	equ	0xFF8
  4064                           tblptrh	equ	0xFF7
  4065                           tblptrl	equ	0xFF6
  4066                           tablat	equ	0xFF5
  4067                           postinc0	equ	0xFEE
  4068                           wreg	equ	0xFE8
  4069                           postdec1	equ	0xFE5
  4070                           fsr1h	equ	0xFE2
  4071                           fsr1l	equ	0xFE1
  4072                           status	equ	0xFD8
  4073                           
  4074 ;; *************** function _Mcu_ConfigExtInt *****************
  4075 ;; Defined at:
  4076 ;;		line 99 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
  4077 ;; Parameters:    Size  Location     Type
  4078 ;;		None
  4079 ;; Auto vars:     Size  Location     Type
  4080 ;;		None
  4081 ;; Return value:  Size  Location     Type
  4082 ;;                  1    wreg      void 
  4083 ;; Registers used:
  4084 ;;		wreg, status,2
  4085 ;; Tracked objects:
  4086 ;;		On entry : 0/0
  4087 ;;		On exit  : 0/0
  4088 ;;		Unchanged: 0/0
  4089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4090 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4091 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4092 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4093 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4094 ;;Total ram usage:        0 bytes
  4095 ;; Hardware stack levels used:    1
  4096 ;; Hardware stack levels required when called:   11
  4097 ;; This function calls:
  4098 ;;		Nothing
  4099 ;; This function is called by:
  4100 ;;		_SystemInit
  4101 ;; This function uses a non-reentrant model
  4102 ;;
  4103                           
  4104                           	psect	text5
  4105  006666                     __ptext5:
  4106                           	opt stack 0
  4107  006666                     _Mcu_ConfigExtInt:
  4108                           	opt stack 18
  4109                           
  4110                           ;mcu_drv.c: 102: TRISBbits.TRISB0 = ((UINT8)(1));
  4111                           
  4112                           ; BSR set to: 0
  4113                           ;incstack = 0
  4114  006666  8093               	bsf	3987,0,c	;volatile
  4115                           
  4116                           ;mcu_drv.c: 103: TRISDbits.TRISD3 = ((UINT8)(1));
  4117  006668  8695               	bsf	3989,3,c	;volatile
  4118                           
  4119                           ;mcu_drv.c: 106: ANCON1bits.PCFG12 = 1u;
  4120  00666A  010F               	movlb	15	; () banked
  4121  00666C  8949               	bsf	73,4,b	;volatile
  4122                           
  4123                           ; BSR set to: 15
  4124                           ;mcu_drv.c: 108: RPINR1 = 20;
  4125  00666E  0E14               	movlw	20
  4126  006670  010E               	movlb	14	; () banked
  4127  006672  6FE7               	movwf	231,b	;volatile
  4128                           
  4129                           ; BSR set to: 14
  4130                           ;mcu_drv.c: 111: INTCONbits.INT0IE = 1u;
  4131  006674  88F2               	bsf	intcon,4,c	;volatile
  4132                           
  4133                           ; BSR set to: 14
  4134                           ;mcu_drv.c: 112: INTCON3bits.INT1IE = 1u;
  4135  006676  86F0               	bsf	intcon3,3,c	;volatile
  4136                           
  4137                           ; BSR set to: 14
  4138                           ;mcu_drv.c: 113: INTCON3bits.INT1IP = 1u;
  4139  006678  8CF0               	bsf	intcon3,6,c	;volatile
  4140                           
  4141                           ; BSR set to: 14
  4142                           ;mcu_drv.c: 114: INTCON2bits.INTEDG0 = 0u;
  4143  00667A  9CF1               	bcf	intcon2,6,c	;volatile
  4144                           
  4145                           ; BSR set to: 14
  4146                           ;mcu_drv.c: 115: INTCON2bits.INTEDG1 = 0u;
  4147  00667C  9AF1               	bcf	intcon2,5,c	;volatile
  4148                           
  4149                           ; BSR set to: 14
  4150  00667E  0012               	return		;funcret
  4151  006680                     __end_of_Mcu_ConfigExtInt:
  4152                           	opt stack 0
  4153                           tblptru	equ	0xFF8
  4154                           tblptrh	equ	0xFF7
  4155                           tblptrl	equ	0xFF6
  4156                           tablat	equ	0xFF5
  4157                           intcon	equ	0xFF2
  4158                           intcon2	equ	0xFF1
  4159                           intcon3	equ	0xFF0
  4160                           postinc0	equ	0xFEE
  4161                           wreg	equ	0xFE8
  4162                           postdec1	equ	0xFE5
  4163                           fsr1h	equ	0xFE2
  4164                           fsr1l	equ	0xFE1
  4165                           status	equ	0xFD8
  4166                           
  4167 ;; *************** function _Irq_InitIntController *****************
  4168 ;; Defined at:
  4169 ;;		line 75 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/irq.c"
  4170 ;; Parameters:    Size  Location     Type
  4171 ;;  IntPriorityE    1    wreg     enum E7720
  4172 ;;  GlobalInt_Hi    1   29[BANK0 ] unsigned char 
  4173 ;;  PerInt_LowPI    1   30[BANK0 ] unsigned char 
  4174 ;; Auto vars:     Size  Location     Type
  4175 ;;  IntPriorityE    1   31[BANK0 ] enum E7720
  4176 ;; Return value:  Size  Location     Type
  4177 ;;                  1    wreg      void 
  4178 ;; Registers used:
  4179 ;;		wreg
  4180 ;; Tracked objects:
  4181 ;;		On entry : 0/0
  4182 ;;		On exit  : 0/0
  4183 ;;		Unchanged: 0/0
  4184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4185 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4186 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4188 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4189 ;;Total ram usage:        3 bytes
  4190 ;; Hardware stack levels used:    1
  4191 ;; Hardware stack levels required when called:   11
  4192 ;; This function calls:
  4193 ;;		Nothing
  4194 ;; This function is called by:
  4195 ;;		_SystemInit
  4196 ;; This function uses a non-reentrant model
  4197 ;;
  4198                           
  4199                           	psect	text6
  4200  00636E                     __ptext6:
  4201                           	opt stack 0
  4202  00636E                     _Irq_InitIntController:
  4203                           	opt stack 18
  4204                           
  4205                           ; BSR set to: 14
  4206                           ;incstack = 0
  4207                           ;Irq_InitIntController@IntPriorityEn stored from wreg
  4208  00636E  0100               	movlb	0	; () banked
  4209  006370  6F7F               	movwf	Irq_InitIntController@IntPriorityEn& (0+255),b
  4210                           
  4211                           ;irq.c: 78: RCONbits.IPEN = IntPriorityEn;
  4212  006372  0100               	movlb	0	; () banked
  4213  006374  B17F               	btfsc	Irq_InitIntController@IntPriorityEn& (0+255),0,b
  4214  006376  D002               	bra	u10475
  4215  006378  9ED0               	bcf	4048,7,c	;volatile
  4216  00637A  D001               	bra	u10476
  4217  00637C                     u10475:
  4218  00637C  8ED0               	bsf	4048,7,c	;volatile
  4219  00637E                     u10476:
  4220                           
  4221                           ;irq.c: 80: INTCONbits.GIE_GIEH = GlobalInt_HighPInt;
  4222  00637E  0100               	movlb	0	; () banked
  4223  006380  B17D               	btfsc	Irq_InitIntController@GlobalInt_HighPInt& (0+255),0,b
  4224  006382  D002               	bra	u10485
  4225  006384  9EF2               	bcf	intcon,7,c	;volatile
  4226  006386  D001               	bra	u10486
  4227  006388                     u10485:
  4228  006388  8EF2               	bsf	intcon,7,c	;volatile
  4229  00638A                     u10486:
  4230                           
  4231                           ;irq.c: 82: INTCONbits.PEIE_GIEL = PerInt_LowPInt;
  4232  00638A  0100               	movlb	0	; () banked
  4233  00638C  B17E               	btfsc	Irq_InitIntController@PerInt_LowPInt& (0+255),0,b
  4234  00638E  D002               	bra	u10495
  4235  006390  9CF2               	bcf	intcon,6,c	;volatile
  4236  006392  D001               	bra	u10496
  4237  006394                     u10495:
  4238  006394  8CF2               	bsf	intcon,6,c	;volatile
  4239  006396                     u10496:
  4240  006396  0012               	return		;funcret
  4241  006398                     __end_of_Irq_InitIntController:
  4242                           	opt stack 0
  4243                           tblptru	equ	0xFF8
  4244                           tblptrh	equ	0xFF7
  4245                           tblptrl	equ	0xFF6
  4246                           tablat	equ	0xFF5
  4247                           intcon	equ	0xFF2
  4248                           intcon2	equ	0xFF1
  4249                           intcon3	equ	0xFF0
  4250                           postinc0	equ	0xFEE
  4251                           wreg	equ	0xFE8
  4252                           postdec1	equ	0xFE5
  4253                           fsr1h	equ	0xFE2
  4254                           fsr1l	equ	0xFE1
  4255                           status	equ	0xFD8
  4256                           
  4257 ;; *************** function _InitSchedTimer *****************
  4258 ;; Defined at:
  4259 ;;		line 69 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/sys_init.c"
  4260 ;; Parameters:    Size  Location     Type
  4261 ;;		None
  4262 ;; Auto vars:     Size  Location     Type
  4263 ;;  TmrBConfig      7   68[BANK0 ] struct _TmrBConfigType
  4264 ;; Return value:  Size  Location     Type
  4265 ;;                  1    wreg      void 
  4266 ;; Registers used:
  4267 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4268 ;; Tracked objects:
  4269 ;;		On entry : 0/0
  4270 ;;		On exit  : 0/0
  4271 ;;		Unchanged: 0/0
  4272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4274 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4276 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4277 ;;Total ram usage:        7 bytes
  4278 ;; Hardware stack levels used:    1
  4279 ;; Hardware stack levels required when called:   14
  4280 ;; This function calls:
  4281 ;;		_Tmr_TmrBConfig
  4282 ;; This function is called by:
  4283 ;;		_SystemInit
  4284 ;; This function uses a non-reentrant model
  4285 ;;
  4286                           
  4287                           	psect	text7
  4288  0062E6                     __ptext7:
  4289                           	opt stack 0
  4290  0062E6                     _InitSchedTimer:
  4291                           	opt stack 15
  4292                           
  4293                           ;sys_init.c: 71: TmrBConfigType TmrBConfig;
  4294                           ;sys_init.c: 74: TmrBConfig.PreScaler = 4;
  4295                           
  4296                           ;incstack = 0
  4297  0062E6  0E04               	movlw	4
  4298  0062E8  0100               	movlb	0	; () banked
  4299  0062EA  6FA4               	movwf	InitSchedTimer@TmrBConfig& (0+255),b
  4300                           
  4301                           ;sys_init.c: 75: TmrBConfig.PostScaler = 12;
  4302  0062EC  0E0C               	movlw	12
  4303  0062EE  6FA5               	movwf	(InitSchedTimer@TmrBConfig+1)& (0+255),b
  4304                           
  4305                           ;sys_init.c: 76: TmrBConfig.IntPriority = 0u;
  4306  0062F0  0E00               	movlw	0
  4307  0062F2  6FA7               	movwf	(InitSchedTimer@TmrBConfig+3)& (0+255),b
  4308                           
  4309                           ;sys_init.c: 77: TmrBConfig.IntEnable = 1u;
  4310  0062F4  0E01               	movlw	1
  4311  0062F6  6FA6               	movwf	(InitSchedTimer@TmrBConfig+2)& (0+255),b
  4312                           
  4313                           ;sys_init.c: 78: TmrBConfig.IntFreqHz = ((UINT16)(1000));
  4314  0062F8  0E03               	movlw	3
  4315  0062FA  6FA9               	movwf	(InitSchedTimer@TmrBConfig+5)& (0+255),b
  4316  0062FC  0EE8               	movlw	232
  4317  0062FE  6FA8               	movwf	(InitSchedTimer@TmrBConfig+4)& (0+255),b
  4318                           
  4319                           ;sys_init.c: 79: TmrBConfig.StartTmrRequest = StartTmrReq;
  4320  006300  0E01               	movlw	1
  4321  006302  6FAA               	movwf	(InitSchedTimer@TmrBConfig+6)& (0+255),b
  4322                           
  4323                           ; BSR set to: 0
  4324                           ;sys_init.c: 82: Tmr_TmrBConfig(((UINT8)(2)),&TmrBConfig);
  4325  006304  0EA4               	movlw	low InitSchedTimer@TmrBConfig
  4326  006306  6FA0               	movwf	Tmr_TmrBConfig@TmrBConfig& (0+255),b
  4327  006308  0E00               	movlw	high InitSchedTimer@TmrBConfig
  4328  00630A  6FA1               	movwf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),b
  4329  00630C  0E02               	movlw	2
  4330  00630E  EC05  F01F         	call	_Tmr_TmrBConfig
  4331  006312  0012               	return		;funcret
  4332  006314                     __end_of_InitSchedTimer:
  4333                           	opt stack 0
  4334                           tblptru	equ	0xFF8
  4335                           tblptrh	equ	0xFF7
  4336                           tblptrl	equ	0xFF6
  4337                           tablat	equ	0xFF5
  4338                           intcon	equ	0xFF2
  4339                           intcon2	equ	0xFF1
  4340                           intcon3	equ	0xFF0
  4341                           postinc0	equ	0xFEE
  4342                           wreg	equ	0xFE8
  4343                           postdec1	equ	0xFE5
  4344                           fsr1h	equ	0xFE2
  4345                           fsr1l	equ	0xFE1
  4346                           status	equ	0xFD8
  4347                           
  4348 ;; *************** function _Tmr_TmrBConfig *****************
  4349 ;; Defined at:
  4350 ;;		line 271 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  4351 ;; Parameters:    Size  Location     Type
  4352 ;;  TmrNumb         1    wreg     unsigned char 
  4353 ;;  TmrBConfig      2   64[BANK0 ] PTR struct _TmrBConfigTy
  4354 ;;		 -> InitAuxTimer@TmrBConfig(7), InitSchedTimer@TmrBConfig(7), 
  4355 ;; Auto vars:     Size  Location     Type
  4356 ;;  TmrNumb         1   67[BANK0 ] unsigned char 
  4357 ;; Return value:  Size  Location     Type
  4358 ;;                  1    wreg      void 
  4359 ;; Registers used:
  4360 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4361 ;; Tracked objects:
  4362 ;;		On entry : 0/0
  4363 ;;		On exit  : 0/0
  4364 ;;		Unchanged: 0/0
  4365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4366 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4367 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4368 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4369 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4370 ;;Total ram usage:        4 bytes
  4371 ;; Hardware stack levels used:    1
  4372 ;; Hardware stack levels required when called:   13
  4373 ;; This function calls:
  4374 ;;		_TmrBInit
  4375 ;;		_Tmr_StartTmr
  4376 ;;		_Tmr_TmrBIrqSet
  4377 ;;		_Tmr_TmrBPrSet
  4378 ;; This function is called by:
  4379 ;;		_InitSchedTimer
  4380 ;;		_InitAuxTimer
  4381 ;; This function uses a non-reentrant model
  4382 ;;
  4383                           
  4384                           	psect	text8
  4385  003E0A                     __ptext8:
  4386                           	opt stack 0
  4387  003E0A                     _Tmr_TmrBConfig:
  4388                           	opt stack 15
  4389                           
  4390                           ;incstack = 0
  4391                           ;Tmr_TmrBConfig@TmrNumb stored from wreg
  4392  003E0A  0100               	movlb	0	; () banked
  4393  003E0C  6FA3               	movwf	Tmr_TmrBConfig@TmrNumb& (0+255),b
  4394                           
  4395                           ;tmr_drv.c: 274: TmrBInit(TmrNumb,TmrBConfig->PreScaler,TmrBConfig->PostScaler);
  4396  003E0E  C0A0  FFD9         	movff	Tmr_TmrBConfig@TmrBConfig,fsr2l
  4397  003E12  C0A1  FFDA         	movff	Tmr_TmrBConfig@TmrBConfig+1,fsr2h
  4398  003E16  50DF               	movf	indf2,w,c
  4399  003E18  0100               	movlb	0	; () banked
  4400  003E1A  6F7D               	movwf	TmrBInit@Prescaler& (0+255),b
  4401  003E1C  EE20 F001          	lfsr	2,1
  4402  003E20  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4403  003E22  26D9               	addwf	fsr2l,f,c
  4404  003E24  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4405  003E26  22DA               	addwfc	fsr2h,f,c
  4406  003E28  50DF               	movf	indf2,w,c
  4407  003E2A  6F7E               	movwf	TmrBInit@Postscaler& (0+255),b
  4408  003E2C  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4409  003E2E  ECEA  F024         	call	_TmrBInit
  4410                           
  4411                           ;tmr_drv.c: 276: if (TmrBConfig->IntEnable == EnableInt)
  4412  003E32  0100               	movlb	0	; () banked
  4413  003E34  EE20 F002          	lfsr	2,2
  4414  003E38  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4415  003E3A  26D9               	addwf	fsr2l,f,c
  4416  003E3C  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4417  003E3E  22DA               	addwfc	fsr2h,f,c
  4418  003E40  04DE               	decf	postinc2,w,c
  4419  003E42  A4D8               	btfss	status,2,c
  4420  003E44  D00E               	goto	l546
  4421                           
  4422                           ; BSR set to: 0
  4423                           ;tmr_drv.c: 277: {
  4424                           ;tmr_drv.c: 279: Tmr_TmrBIrqSet(TmrNumb,TmrBConfig->IntPriority,1u);
  4425  003E46  EE20 F003          	lfsr	2,3
  4426  003E4A  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4427  003E4C  26D9               	addwf	fsr2l,f,c
  4428  003E4E  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4429  003E50  22DA               	addwfc	fsr2h,f,c
  4430  003E52  50DF               	movf	indf2,w,c
  4431  003E54  6F7D               	movwf	Tmr_TmrBIrqSet@Priority& (0+255),b
  4432  003E56  0E01               	movlw	1
  4433  003E58  6F7E               	movwf	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),b
  4434  003E5A  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4435  003E5C  EC16  F02E         	call	_Tmr_TmrBIrqSet
  4436                           
  4437                           ;tmr_drv.c: 280: }
  4438  003E60  D00E               	goto	l547
  4439  003E62                     l546:
  4440                           
  4441                           ;tmr_drv.c: 281: else
  4442                           ;tmr_drv.c: 282: {
  4443                           ;tmr_drv.c: 284: Tmr_TmrBIrqSet(TmrNumb,TmrBConfig->IntPriority,0u);
  4444  003E62  0100               	movlb	0	; () banked
  4445  003E64  EE20 F003          	lfsr	2,3
  4446  003E68  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4447  003E6A  26D9               	addwf	fsr2l,f,c
  4448  003E6C  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4449  003E6E  22DA               	addwfc	fsr2h,f,c
  4450  003E70  50DF               	movf	indf2,w,c
  4451  003E72  6F7D               	movwf	Tmr_TmrBIrqSet@Priority& (0+255),b
  4452  003E74  0E00               	movlw	0
  4453  003E76  6F7E               	movwf	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),b
  4454  003E78  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4455  003E7A  EC16  F02E         	call	_Tmr_TmrBIrqSet
  4456  003E7E                     l547:
  4457                           
  4458                           ;tmr_drv.c: 285: }
  4459                           ;tmr_drv.c: 287: Tmr_TmrBPrSet(TmrNumb,TmrBConfig->IntFreqHz,TmrBConfig->PreScaler,TmrBC
      +                          onfig->PostScaler);
  4460  003E7E  0100               	movlb	0	; () banked
  4461  003E80  EE20 F004          	lfsr	2,4
  4462  003E84  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4463  003E86  26D9               	addwf	fsr2l,f,c
  4464  003E88  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4465  003E8A  22DA               	addwfc	fsr2h,f,c
  4466  003E8C  CFDE F096          	movff	postinc2,Tmr_TmrBPrSet@IntFreqHz
  4467  003E90  CFDD F097          	movff	postdec2,Tmr_TmrBPrSet@IntFreqHz+1
  4468  003E94  C0A0  FFD9         	movff	Tmr_TmrBConfig@TmrBConfig,fsr2l
  4469  003E98  C0A1  FFDA         	movff	Tmr_TmrBConfig@TmrBConfig+1,fsr2h
  4470  003E9C  50DF               	movf	indf2,w,c
  4471  003E9E  6F98               	movwf	Tmr_TmrBPrSet@Prescaler& (0+255),b
  4472  003EA0  EE20 F001          	lfsr	2,1
  4473  003EA4  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4474  003EA6  26D9               	addwf	fsr2l,f,c
  4475  003EA8  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4476  003EAA  22DA               	addwfc	fsr2h,f,c
  4477  003EAC  50DF               	movf	indf2,w,c
  4478  003EAE  6F99               	movwf	Tmr_TmrBPrSet@Postscaler& (0+255),b
  4479  003EB0  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4480  003EB2  EC7B  F019         	call	_Tmr_TmrBPrSet
  4481                           
  4482                           ;tmr_drv.c: 289: if (TmrBConfig->StartTmrRequest == StartTmrReq)
  4483  003EB6  0100               	movlb	0	; () banked
  4484  003EB8  EE20 F006          	lfsr	2,6
  4485  003EBC  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4486  003EBE  26D9               	addwf	fsr2l,f,c
  4487  003EC0  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4488  003EC2  22DA               	addwfc	fsr2h,f,c
  4489  003EC4  04DE               	decf	postinc2,w,c
  4490  003EC6  A4D8               	btfss	status,2,c
  4491  003EC8  0012               	return	
  4492                           
  4493                           ; BSR set to: 0
  4494                           ;tmr_drv.c: 290: {
  4495                           ;tmr_drv.c: 292: Tmr_StartTmr(TmrNumb);
  4496  003ECA  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4497  003ECC  ECC9  F032         	call	_Tmr_StartTmr
  4498                           
  4499                           ;tmr_drv.c: 293: }
  4500  003ED0  0012               	return	
  4501  003ED2                     __end_of_Tmr_TmrBConfig:
  4502                           	opt stack 0
  4503                           tblptru	equ	0xFF8
  4504                           tblptrh	equ	0xFF7
  4505                           tblptrl	equ	0xFF6
  4506                           tablat	equ	0xFF5
  4507                           intcon	equ	0xFF2
  4508                           intcon2	equ	0xFF1
  4509                           intcon3	equ	0xFF0
  4510                           postinc0	equ	0xFEE
  4511                           wreg	equ	0xFE8
  4512                           postdec1	equ	0xFE5
  4513                           fsr1h	equ	0xFE2
  4514                           fsr1l	equ	0xFE1
  4515                           indf2	equ	0xFDF
  4516                           postinc2	equ	0xFDE
  4517                           postdec2	equ	0xFDD
  4518                           fsr2h	equ	0xFDA
  4519                           fsr2l	equ	0xFD9
  4520                           status	equ	0xFD8
  4521                           
  4522 ;; *************** function _Tmr_TmrBPrSet *****************
  4523 ;; Defined at:
  4524 ;;		line 193 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  4525 ;; Parameters:    Size  Location     Type
  4526 ;;  TmrNumb         1    wreg     unsigned char 
  4527 ;;  IntFreqHz       2   54[BANK0 ] unsigned short 
  4528 ;;  Prescaler       1   56[BANK0 ] unsigned char 
  4529 ;;  Postscaler      1   57[BANK0 ] unsigned char 
  4530 ;; Auto vars:     Size  Location     Type
  4531 ;;  TmrNumb         1   59[BANK0 ] unsigned char 
  4532 ;;  Divisor         4   60[BANK0 ] unsigned long 
  4533 ;;  TmrBPrCfgSts    1   58[BANK0 ] enum E7736
  4534 ;; Return value:  Size  Location     Type
  4535 ;;                  1    wreg      enum E7736
  4536 ;; Registers used:
  4537 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4538 ;; Tracked objects:
  4539 ;;		On entry : 0/0
  4540 ;;		On exit  : 0/0
  4541 ;;		Unchanged: 0/0
  4542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4543 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4544 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4545 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4546 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4547 ;;Total ram usage:       10 bytes
  4548 ;; Hardware stack levels used:    1
  4549 ;; Hardware stack levels required when called:   12
  4550 ;; This function calls:
  4551 ;;		___lldiv
  4552 ;;		___lmul
  4553 ;; This function is called by:
  4554 ;;		_Tmr_TmrBConfig
  4555 ;; This function uses a non-reentrant model
  4556 ;;
  4557                           
  4558                           	psect	text9
  4559  0032F6                     __ptext9:
  4560                           	opt stack 0
  4561  0032F6                     _Tmr_TmrBPrSet:
  4562                           	opt stack 15
  4563                           
  4564                           ;incstack = 0
  4565                           ;Tmr_TmrBPrSet@TmrNumb stored from wreg
  4566  0032F6  0100               	movlb	0	; () banked
  4567  0032F8  6F9B               	movwf	Tmr_TmrBPrSet@TmrNumb& (0+255),b
  4568                           
  4569                           ;tmr_drv.c: 195: CfgStsType TmrBPrCfgSts;
  4570                           ;tmr_drv.c: 196: UINT32 Divisor = 0;
  4571  0032FA  0E00               	movlw	0
  4572  0032FC  0100               	movlb	0	; () banked
  4573  0032FE  6F9C               	movwf	Tmr_TmrBPrSet@Divisor& (0+255),b
  4574  003300  0E00               	movlw	0
  4575  003302  6F9D               	movwf	(Tmr_TmrBPrSet@Divisor+1)& (0+255),b
  4576  003304  0E00               	movlw	0
  4577  003306  6F9E               	movwf	(Tmr_TmrBPrSet@Divisor+2)& (0+255),b
  4578  003308  0E00               	movlw	0
  4579  00330A  6F9F               	movwf	(Tmr_TmrBPrSet@Divisor+3)& (0+255),b
  4580                           
  4581                           ; BSR set to: 0
  4582                           ;tmr_drv.c: 199: Divisor = (UINT32)Prescaler*(UINT32)Postscaler*(UINT32)IntFreqHz;
  4583  00330C  5198               	movf	Tmr_TmrBPrSet@Prescaler& (0+255),w,b
  4584  00330E  0399               	mulwf	Tmr_TmrBPrSet@Postscaler& (0+255),b
  4585  003310  CFF3 F07D          	movff	prodl,___lmul@multiplier
  4586  003314  CFF4 F07E          	movff	prodh,___lmul@multiplier+1
  4587  003318  6B7F               	clrf	(___lmul@multiplier+2)& (0+255),b
  4588  00331A  6B80               	clrf	(___lmul@multiplier+3)& (0+255),b
  4589  00331C  C096  F081         	movff	Tmr_TmrBPrSet@IntFreqHz,___lmul@multiplicand
  4590  003320  C097  F082         	movff	Tmr_TmrBPrSet@IntFreqHz+1,___lmul@multiplicand+1
  4591  003324  6B83               	clrf	(___lmul@multiplicand+2)& (0+255),b
  4592  003326  6B84               	clrf	(___lmul@multiplicand+3)& (0+255),b
  4593  003328  EC81  F02B         	call	___lmul	;wreg free
  4594  00332C  C07D  F09C         	movff	?___lmul,Tmr_TmrBPrSet@Divisor
  4595  003330  C07E  F09D         	movff	?___lmul+1,Tmr_TmrBPrSet@Divisor+1
  4596  003334  C07F  F09E         	movff	?___lmul+2,Tmr_TmrBPrSet@Divisor+2
  4597  003338  C080  F09F         	movff	?___lmul+3,Tmr_TmrBPrSet@Divisor+3
  4598                           
  4599                           ;tmr_drv.c: 202: if (((((UINT32)(48000000))/(UINT32)(4))/Divisor) <= 255)
  4600  00333C  0E00               	movlw	0
  4601  00333E  0100               	movlb	0	; () banked
  4602  003340  6F89               	movwf	___lldiv@dividend& (0+255),b
  4603  003342  0E1B               	movlw	27
  4604  003344  6F8A               	movwf	(___lldiv@dividend+1)& (0+255),b
  4605  003346  0EB7               	movlw	183
  4606  003348  6F8B               	movwf	(___lldiv@dividend+2)& (0+255),b
  4607  00334A  0E00               	movlw	0
  4608  00334C  6F8C               	movwf	(___lldiv@dividend+3)& (0+255),b
  4609  00334E  C09C  F08D         	movff	Tmr_TmrBPrSet@Divisor,___lldiv@divisor
  4610  003352  C09D  F08E         	movff	Tmr_TmrBPrSet@Divisor+1,___lldiv@divisor+1
  4611  003356  C09E  F08F         	movff	Tmr_TmrBPrSet@Divisor+2,___lldiv@divisor+2
  4612  00335A  C09F  F090         	movff	Tmr_TmrBPrSet@Divisor+3,___lldiv@divisor+3
  4613  00335E  ECFE  F027         	call	___lldiv	;wreg free
  4614  003362  0100               	movlb	0	; () banked
  4615  003364  518C               	movf	(?___lldiv+3)& (0+255),w,b
  4616  003366  118B               	iorwf	(?___lldiv+2)& (0+255),w,b
  4617  003368  E13A               	bnz	l14822
  4618  00336A  058A               	decf	(?___lldiv+1)& (0+255),w,b
  4619  00336C  A0D8               	btfss	status,0,c
  4620  00336E  D02D               	goto	l529
  4621  003370  D036               	goto	l528
  4622  003372                     
  4623                           ; BSR set to: 0
  4624                           ;tmr_drv.c: 209: PR2 = (((UINT32)(48000000))/(UINT32)(4))/Divisor;
  4625                           
  4626                           ; BSR set to: 0
  4627  003372  0E00               	movlw	0
  4628  003374  6F89               	movwf	___lldiv@dividend& (0+255),b
  4629  003376  0E1B               	movlw	27
  4630  003378  6F8A               	movwf	(___lldiv@dividend+1)& (0+255),b
  4631  00337A  0EB7               	movlw	183
  4632  00337C  6F8B               	movwf	(___lldiv@dividend+2)& (0+255),b
  4633  00337E  0E00               	movlw	0
  4634  003380  6F8C               	movwf	(___lldiv@dividend+3)& (0+255),b
  4635  003382  C09C  F08D         	movff	Tmr_TmrBPrSet@Divisor,___lldiv@divisor
  4636  003386  C09D  F08E         	movff	Tmr_TmrBPrSet@Divisor+1,___lldiv@divisor+1
  4637  00338A  C09E  F08F         	movff	Tmr_TmrBPrSet@Divisor+2,___lldiv@divisor+2
  4638  00338E  C09F  F090         	movff	Tmr_TmrBPrSet@Divisor+3,___lldiv@divisor+3
  4639  003392  ECFE  F027         	call	___lldiv	;wreg free
  4640  003396  0100               	movlb	0	; () banked
  4641  003398  5189               	movf	?___lldiv& (0+255),w,b
  4642  00339A  6ECB               	movwf	4043,c	;volatile
  4643                           
  4644                           ;tmr_drv.c: 210: break;
  4645  00339C  D01D               	goto	l531
  4646  00339E                     
  4647                           ; BSR set to: 0
  4648                           ;tmr_drv.c: 214: PR4 = (((UINT32)(48000000))/(UINT32)(4))/Divisor;
  4649                           
  4650                           ; BSR set to: 0
  4651  00339E  0E00               	movlw	0
  4652  0033A0  6F89               	movwf	___lldiv@dividend& (0+255),b
  4653  0033A2  0E1B               	movlw	27
  4654  0033A4  6F8A               	movwf	(___lldiv@dividend+1)& (0+255),b
  4655  0033A6  0EB7               	movlw	183
  4656  0033A8  6F8B               	movwf	(___lldiv@dividend+2)& (0+255),b
  4657  0033AA  0E00               	movlw	0
  4658  0033AC  6F8C               	movwf	(___lldiv@dividend+3)& (0+255),b
  4659  0033AE  C09C  F08D         	movff	Tmr_TmrBPrSet@Divisor,___lldiv@divisor
  4660  0033B2  C09D  F08E         	movff	Tmr_TmrBPrSet@Divisor+1,___lldiv@divisor+1
  4661  0033B6  C09E  F08F         	movff	Tmr_TmrBPrSet@Divisor+2,___lldiv@divisor+2
  4662  0033BA  C09F  F090         	movff	Tmr_TmrBPrSet@Divisor+3,___lldiv@divisor+3
  4663  0033BE  ECFE  F027         	call	___lldiv	;wreg free
  4664  0033C2  0100               	movlb	0	; () banked
  4665  0033C4  5189               	movf	?___lldiv& (0+255),w,b
  4666  0033C6  6E77               	movwf	3959,c	;volatile
  4667                           
  4668                           ; BSR set to: 0
  4669                           ;tmr_drv.c: 219: }
  4670                           
  4671                           ; BSR set to: 0
  4672                           ;tmr_drv.c: 218: break;
  4673                           
  4674                           ;tmr_drv.c: 217: default:
  4675                           
  4676                           ;tmr_drv.c: 215: break;
  4677  0033C8  D007               	goto	l531
  4678  0033CA                     l529:
  4679                           
  4680                           ; BSR set to: 0
  4681                           
  4682                           ; BSR set to: 0
  4683  0033CA  519B               	movf	Tmr_TmrBPrSet@TmrNumb& (0+255),w,b
  4684                           
  4685                           ; Switch size 1, requested type "space"
  4686                           ; Number of cases is 2, Range of values is 2 to 4
  4687                           ; switch strategies available:
  4688                           ; Name         Instructions Cycles
  4689                           ; simple_byte            7     4 (average)
  4690                           ;	Chosen strategy is simple_byte
  4691  0033CC  0A02               	xorlw	2	; case 2
  4692  0033CE  B4D8               	btfsc	status,2,c
  4693  0033D0  D7D0               	goto	l530
  4694  0033D2  0A06               	xorlw	6	; case 4
  4695  0033D4  B4D8               	btfsc	status,2,c
  4696  0033D6  D7E3               	goto	l532
  4697  0033D8                     l531:
  4698                           
  4699                           ; BSR set to: 0
  4700                           ;tmr_drv.c: 222: TmrBPrCfgSts = CfgOk;
  4701                           
  4702                           ; BSR set to: 0
  4703  0033D8  0E00               	movlw	0
  4704  0033DA  6F9A               	movwf	Tmr_TmrBPrSet@TmrBPrCfgSts& (0+255),b
  4705                           
  4706                           ;tmr_drv.c: 223: }
  4707  0033DC  0012               	return	
  4708  0033DE                     l528:
  4709  0033DE                     l14822:
  4710                           
  4711                           ; BSR set to: 0
  4712                           ;tmr_drv.c: 224: else
  4713                           ;tmr_drv.c: 225: {
  4714                           ;tmr_drv.c: 227: TmrBPrCfgSts = CfgError;
  4715  0033DE  0E01               	movlw	1
  4716  0033E0  6F9A               	movwf	Tmr_TmrBPrSet@TmrBPrCfgSts& (0+255),b
  4717                           
  4718                           ; BSR set to: 0
  4719  0033E2  0012               	return	
  4720  0033E4                     __end_of_Tmr_TmrBPrSet:
  4721                           	opt stack 0
  4722                           tblptru	equ	0xFF8
  4723                           tblptrh	equ	0xFF7
  4724                           tblptrl	equ	0xFF6
  4725                           tablat	equ	0xFF5
  4726                           prodh	equ	0xFF4
  4727                           prodl	equ	0xFF3
  4728                           intcon	equ	0xFF2
  4729                           intcon2	equ	0xFF1
  4730                           intcon3	equ	0xFF0
  4731                           postinc0	equ	0xFEE
  4732                           wreg	equ	0xFE8
  4733                           postdec1	equ	0xFE5
  4734                           fsr1h	equ	0xFE2
  4735                           fsr1l	equ	0xFE1
  4736                           indf2	equ	0xFDF
  4737                           postinc2	equ	0xFDE
  4738                           postdec2	equ	0xFDD
  4739                           fsr2h	equ	0xFDA
  4740                           fsr2l	equ	0xFD9
  4741                           status	equ	0xFD8
  4742                           
  4743 ;; *************** function _Tmr_TmrBIrqSet *****************
  4744 ;; Defined at:
  4745 ;;		line 153 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  4746 ;; Parameters:    Size  Location     Type
  4747 ;;  TmrNumb         1    wreg     unsigned char 
  4748 ;;  Priority        1   29[BANK0 ] enum E7716
  4749 ;;  TmrIrqSts       1   30[BANK0 ] unsigned char 
  4750 ;; Auto vars:     Size  Location     Type
  4751 ;;  TmrNumb         1   31[BANK0 ] unsigned char 
  4752 ;; Return value:  Size  Location     Type
  4753 ;;                  1    wreg      void 
  4754 ;; Registers used:
  4755 ;;		wreg, status,2, status,0
  4756 ;; Tracked objects:
  4757 ;;		On entry : 0/0
  4758 ;;		On exit  : 0/0
  4759 ;;		Unchanged: 0/0
  4760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4761 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4762 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4764 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4765 ;;Total ram usage:        3 bytes
  4766 ;; Hardware stack levels used:    1
  4767 ;; Hardware stack levels required when called:   11
  4768 ;; This function calls:
  4769 ;;		Nothing
  4770 ;; This function is called by:
  4771 ;;		_Tmr_TmrBConfig
  4772 ;; This function uses a non-reentrant model
  4773 ;;
  4774                           
  4775                           	psect	text10
  4776  005C2C                     __ptext10:
  4777                           	opt stack 0
  4778  005C2C                     _Tmr_TmrBIrqSet:
  4779                           	opt stack 16
  4780                           
  4781                           ; BSR set to: 0
  4782                           ;incstack = 0
  4783                           ;Tmr_TmrBIrqSet@TmrNumb stored from wreg
  4784  005C2C  0100               	movlb	0	; () banked
  4785  005C2E  6F7F               	movwf	Tmr_TmrBIrqSet@TmrNumb& (0+255),b
  4786                           
  4787                           ;tmr_drv.c: 156: switch (TmrNumb)
  4788  005C30  D01A               	goto	l520
  4789  005C32                     l521:
  4790                           
  4791                           ; BSR set to: 0
  4792                           ;tmr_drv.c: 160: PIR1bits.TMR2IF = 0u;
  4793  005C32  929E               	bcf	3998,1,c	;volatile
  4794                           
  4795                           ;tmr_drv.c: 162: IPR1bits.TMR2IP = Priority;
  4796  005C34  B17D               	btfsc	Tmr_TmrBIrqSet@Priority& (0+255),0,b
  4797  005C36  D002               	bra	u8765
  4798  005C38  929F               	bcf	3999,1,c	;volatile
  4799  005C3A  D001               	bra	u8766
  4800  005C3C                     u8765:
  4801  005C3C  829F               	bsf	3999,1,c	;volatile
  4802  005C3E                     u8766:
  4803                           
  4804                           ;tmr_drv.c: 164: PIE1bits.TMR2IE = TmrIrqSts;
  4805  005C3E  0100               	movlb	0	; () banked
  4806  005C40  B17E               	btfsc	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),0,b
  4807  005C42  D002               	bra	u8775
  4808  005C44  929D               	bcf	3997,1,c	;volatile
  4809  005C46  D001               	bra	u8776
  4810  005C48                     u8775:
  4811  005C48  829D               	bsf	3997,1,c	;volatile
  4812  005C4A                     u8776:
  4813                           
  4814                           ;tmr_drv.c: 165: break;
  4815  005C4A  0012               	return	
  4816  005C4C                     l523:
  4817                           
  4818                           ; BSR set to: 0
  4819                           ;tmr_drv.c: 169: PIR3bits.TMR4IF = 0u;
  4820  005C4C  96A4               	bcf	4004,3,c	;volatile
  4821                           
  4822                           ;tmr_drv.c: 171: IPR3bits.TMR4IP = Priority;
  4823  005C4E  B17D               	btfsc	Tmr_TmrBIrqSet@Priority& (0+255),0,b
  4824  005C50  D002               	bra	u8785
  4825  005C52  96A5               	bcf	4005,3,c	;volatile
  4826  005C54  D001               	bra	u8786
  4827  005C56                     u8785:
  4828  005C56  86A5               	bsf	4005,3,c	;volatile
  4829  005C58                     u8786:
  4830                           
  4831                           ;tmr_drv.c: 173: PIE3bits.TMR4IE = TmrIrqSts;
  4832  005C58  0100               	movlb	0	; () banked
  4833  005C5A  B17E               	btfsc	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),0,b
  4834  005C5C  D002               	bra	u8795
  4835  005C5E  96A3               	bcf	4003,3,c	;volatile
  4836  005C60  D001               	bra	u8796
  4837  005C62                     u8795:
  4838  005C62  86A3               	bsf	4003,3,c	;volatile
  4839  005C64                     u8796:
  4840                           
  4841                           ;tmr_drv.c: 178: }
  4842                           
  4843                           ;tmr_drv.c: 177: break;
  4844                           
  4845                           ;tmr_drv.c: 176: default:
  4846                           
  4847                           ;tmr_drv.c: 174: break;
  4848  005C64  0012               	return	
  4849  005C66                     l520:
  4850  005C66  0100               	movlb	0	; () banked
  4851  005C68  517F               	movf	Tmr_TmrBIrqSet@TmrNumb& (0+255),w,b
  4852                           
  4853                           ; Switch size 1, requested type "space"
  4854                           ; Number of cases is 2, Range of values is 2 to 4
  4855                           ; switch strategies available:
  4856                           ; Name         Instructions Cycles
  4857                           ; simple_byte            7     4 (average)
  4858                           ;	Chosen strategy is simple_byte
  4859  005C6A  0A02               	xorlw	2	; case 2
  4860  005C6C  B4D8               	btfsc	status,2,c
  4861  005C6E  D7E1               	goto	l521
  4862  005C70  0A06               	xorlw	6	; case 4
  4863  005C72  A4D8               	btfss	status,2,c
  4864  005C74  0012               	return	
  4865  005C76  D7EA               	goto	l523
  4866  005C78                     __end_of_Tmr_TmrBIrqSet:
  4867                           	opt stack 0
  4868                           tblptru	equ	0xFF8
  4869                           tblptrh	equ	0xFF7
  4870                           tblptrl	equ	0xFF6
  4871                           tablat	equ	0xFF5
  4872                           prodh	equ	0xFF4
  4873                           prodl	equ	0xFF3
  4874                           intcon	equ	0xFF2
  4875                           intcon2	equ	0xFF1
  4876                           intcon3	equ	0xFF0
  4877                           postinc0	equ	0xFEE
  4878                           wreg	equ	0xFE8
  4879                           postdec1	equ	0xFE5
  4880                           fsr1h	equ	0xFE2
  4881                           fsr1l	equ	0xFE1
  4882                           indf2	equ	0xFDF
  4883                           postinc2	equ	0xFDE
  4884                           postdec2	equ	0xFDD
  4885                           fsr2h	equ	0xFDA
  4886                           fsr2l	equ	0xFD9
  4887                           status	equ	0xFD8
  4888                           
  4889 ;; *************** function _Tmr_StartTmr *****************
  4890 ;; Defined at:
  4891 ;;		line 242 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  4892 ;; Parameters:    Size  Location     Type
  4893 ;;  TmrNumb         1    wreg     unsigned char 
  4894 ;; Auto vars:     Size  Location     Type
  4895 ;;  TmrNumb         1   29[BANK0 ] unsigned char 
  4896 ;; Return value:  Size  Location     Type
  4897 ;;                  1    wreg      void 
  4898 ;; Registers used:
  4899 ;;		wreg, status,2, status,0
  4900 ;; Tracked objects:
  4901 ;;		On entry : 0/0
  4902 ;;		On exit  : 0/0
  4903 ;;		Unchanged: 0/0
  4904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4905 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4906 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4908 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4909 ;;Total ram usage:        1 bytes
  4910 ;; Hardware stack levels used:    1
  4911 ;; Hardware stack levels required when called:   11
  4912 ;; This function calls:
  4913 ;;		Nothing
  4914 ;; This function is called by:
  4915 ;;		_Tmr_TmrBConfig
  4916 ;; This function uses a non-reentrant model
  4917 ;;
  4918                           
  4919                           	psect	text11
  4920  006592                     __ptext11:
  4921                           	opt stack 0
  4922  006592                     _Tmr_StartTmr:
  4923                           	opt stack 16
  4924                           
  4925                           ;incstack = 0
  4926                           ;Tmr_StartTmr@TmrNumb stored from wreg
  4927  006592  0100               	movlb	0	; () banked
  4928  006594  6F7D               	movwf	Tmr_StartTmr@TmrNumb& (0+255),b
  4929                           
  4930                           ;tmr_drv.c: 245: switch (TmrNumb)
  4931  006596  D004               	goto	l538
  4932  006598                     l539:
  4933                           
  4934                           ; BSR set to: 0
  4935                           ;tmr_drv.c: 249: T2CONbits.TMR2ON = 1u;
  4936  006598  84CA               	bsf	4042,2,c	;volatile
  4937                           
  4938                           ;tmr_drv.c: 250: break;
  4939  00659A  0012               	return	
  4940  00659C                     l541:
  4941                           
  4942                           ; BSR set to: 0
  4943                           ;tmr_drv.c: 254: T4CONbits.TMR4ON = 1u;
  4944  00659C  8476               	bsf	3958,2,c	;volatile
  4945                           
  4946                           ; BSR set to: 0
  4947                           ;tmr_drv.c: 259: }
  4948                           
  4949                           ; BSR set to: 0
  4950                           ;tmr_drv.c: 258: break;
  4951                           
  4952                           ;tmr_drv.c: 257: default:
  4953                           
  4954                           ;tmr_drv.c: 255: break;
  4955  00659E  0012               	return	
  4956  0065A0                     l538:
  4957                           
  4958                           ; BSR set to: 0
  4959  0065A0  0100               	movlb	0	; () banked
  4960  0065A2  517D               	movf	Tmr_StartTmr@TmrNumb& (0+255),w,b
  4961                           
  4962                           ; Switch size 1, requested type "space"
  4963                           ; Number of cases is 2, Range of values is 2 to 4
  4964                           ; switch strategies available:
  4965                           ; Name         Instructions Cycles
  4966                           ; simple_byte            7     4 (average)
  4967                           ;	Chosen strategy is simple_byte
  4968  0065A4  0A02               	xorlw	2	; case 2
  4969  0065A6  B4D8               	btfsc	status,2,c
  4970  0065A8  D7F7               	goto	l539
  4971  0065AA  0A06               	xorlw	6	; case 4
  4972  0065AC  A4D8               	btfss	status,2,c
  4973  0065AE  0012               	return	
  4974  0065B0  D7F5               	goto	l541
  4975  0065B2                     __end_of_Tmr_StartTmr:
  4976                           	opt stack 0
  4977                           tblptru	equ	0xFF8
  4978                           tblptrh	equ	0xFF7
  4979                           tblptrl	equ	0xFF6
  4980                           tablat	equ	0xFF5
  4981                           prodh	equ	0xFF4
  4982                           prodl	equ	0xFF3
  4983                           intcon	equ	0xFF2
  4984                           intcon2	equ	0xFF1
  4985                           intcon3	equ	0xFF0
  4986                           postinc0	equ	0xFEE
  4987                           wreg	equ	0xFE8
  4988                           postdec1	equ	0xFE5
  4989                           fsr1h	equ	0xFE2
  4990                           fsr1l	equ	0xFE1
  4991                           indf2	equ	0xFDF
  4992                           postinc2	equ	0xFDE
  4993                           postdec2	equ	0xFDD
  4994                           fsr2h	equ	0xFDA
  4995                           fsr2l	equ	0xFD9
  4996                           status	equ	0xFD8
  4997                           
  4998 ;; *************** function _TmrBInit *****************
  4999 ;; Defined at:
  5000 ;;		line 72 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  5001 ;; Parameters:    Size  Location     Type
  5002 ;;  TmrNumb         1    wreg     unsigned char 
  5003 ;;  Prescaler       1   29[BANK0 ] unsigned char 
  5004 ;;  Postscaler      1   30[BANK0 ] unsigned char 
  5005 ;; Auto vars:     Size  Location     Type
  5006 ;;  TmrNumb         1   32[BANK0 ] unsigned char 
  5007 ;; Return value:  Size  Location     Type
  5008 ;;                  1    wreg      void 
  5009 ;; Registers used:
  5010 ;;		wreg, status,2, status,0
  5011 ;; Tracked objects:
  5012 ;;		On entry : 0/0
  5013 ;;		On exit  : 0/0
  5014 ;;		Unchanged: 0/0
  5015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5016 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5017 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5018 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5019 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5020 ;;Total ram usage:        4 bytes
  5021 ;; Hardware stack levels used:    1
  5022 ;; Hardware stack levels required when called:   11
  5023 ;; This function calls:
  5024 ;;		Nothing
  5025 ;; This function is called by:
  5026 ;;		_Tmr_TmrBConfig
  5027 ;; This function uses a non-reentrant model
  5028 ;;
  5029                           
  5030                           	psect	text12
  5031  0049D4                     __ptext12:
  5032                           	opt stack 0
  5033  0049D4                     _TmrBInit:
  5034                           	opt stack 16
  5035                           
  5036                           ; BSR set to: 0
  5037                           ;incstack = 0
  5038                           ;TmrBInit@TmrNumb stored from wreg
  5039  0049D4  0100               	movlb	0	; () banked
  5040  0049D6  6F80               	movwf	TmrBInit@TmrNumb& (0+255),b
  5041                           
  5042                           ;tmr_drv.c: 75: switch (TmrNumb)
  5043  0049D8  D03F               	goto	l500
  5044  0049DA                     l503:
  5045                           
  5046                           ; BSR set to: 0
  5047                           ;tmr_drv.c: 83: T2CONbits.T2CKPS0 = 0u;
  5048  0049DA  90CA               	bcf	4042,0,c	;volatile
  5049  0049DC  D001               	goto	L1
  5050  0049DE                     l505:
  5051                           
  5052                           ; BSR set to: 0
  5053                           ;tmr_drv.c: 89: T2CONbits.T2CKPS0 = 1u;
  5054  0049DE  80CA               	bsf	4042,0,c	;volatile
  5055  0049E0                     L1:
  5056                           
  5057                           ;tmr_drv.c: 90: T2CONbits.T2CKPS1 = 0u;
  5058  0049E0  92CA               	bcf	4042,1,c	;volatile
  5059                           
  5060                           ;tmr_drv.c: 91: break;
  5061  0049E2  D00E               	goto	l504
  5062  0049E4                     l506:
  5063                           
  5064                           ; BSR set to: 0
  5065                           ;tmr_drv.c: 94: T2CONbits.T2CKPS0 = 1u;
  5066  0049E4  80CA               	bsf	4042,0,c	;volatile
  5067                           
  5068                           ;tmr_drv.c: 95: T2CONbits.T2CKPS1 = 1u;
  5069  0049E6  82CA               	bsf	4042,1,c	;volatile
  5070                           
  5071                           ; BSR set to: 0
  5072                           ;tmr_drv.c: 100: }
  5073                           
  5074                           ; BSR set to: 0
  5075                           ;tmr_drv.c: 99: break;
  5076                           
  5077                           ;tmr_drv.c: 98: default:
  5078                           
  5079                           ;tmr_drv.c: 96: break;
  5080  0049E8  D00B               	goto	l504
  5081  0049EA                     
  5082                           ; BSR set to: 0
  5083  0049EA  0100               	movlb	0	; () banked
  5084  0049EC  517D               	movf	TmrBInit@Prescaler& (0+255),w,b
  5085                           
  5086                           ; Switch size 1, requested type "space"
  5087                           ; Number of cases is 3, Range of values is 1 to 16
  5088                           ; switch strategies available:
  5089                           ; Name         Instructions Cycles
  5090                           ; simple_byte           10     6 (average)
  5091                           ;	Chosen strategy is simple_byte
  5092  0049EE  0A01               	xorlw	1	; case 1
  5093  0049F0  B4D8               	btfsc	status,2,c
  5094  0049F2  D7F3               	goto	l503
  5095  0049F4  0A05               	xorlw	5	; case 4
  5096  0049F6  B4D8               	btfsc	status,2,c
  5097  0049F8  D7F2               	goto	l505
  5098  0049FA  0A14               	xorlw	20	; case 16
  5099  0049FC  B4D8               	btfsc	status,2,c
  5100  0049FE  D7F2               	goto	l506
  5101  004A00                     l504:
  5102                           
  5103                           ; BSR set to: 0
  5104                           ;tmr_drv.c: 103: T2CONbits.T2OUTPS = (Postscaler - 1);
  5105                           
  5106                           ; BSR set to: 0
  5107  004A00  C07E  F07F         	movff	TmrBInit@Postscaler,??_TmrBInit
  5108  004A04  0EFF               	movlw	255
  5109  004A06  277F               	addwf	??_TmrBInit& (0+255),f,b
  5110  004A08  477F               	rlncf	??_TmrBInit& (0+255),f,b
  5111  004A0A  477F               	rlncf	??_TmrBInit& (0+255),f,b
  5112  004A0C  477F               	rlncf	??_TmrBInit& (0+255),f,b
  5113  004A0E  50CA               	movf	4042,w,c	;volatile
  5114  004A10  197F               	xorwf	??_TmrBInit& (0+255),w,b
  5115  004A12  0B87               	andlw	-121
  5116  004A14  197F               	xorwf	??_TmrBInit& (0+255),w,b
  5117  004A16  6ECA               	movwf	4042,c	;volatile
  5118                           
  5119                           ;tmr_drv.c: 104: break;
  5120  004A18  0012               	return	
  5121  004A1A                     l511:
  5122                           
  5123                           ; BSR set to: 0
  5124                           ;tmr_drv.c: 112: T4CONbits.T4CKPS0 = 0u;
  5125  004A1A  9076               	bcf	3958,0,c	;volatile
  5126  004A1C  D001               	goto	L2
  5127  004A1E                     l513:
  5128                           
  5129                           ; BSR set to: 0
  5130                           ;tmr_drv.c: 118: T4CONbits.T4CKPS0 = 1u;
  5131  004A1E  8076               	bsf	3958,0,c	;volatile
  5132  004A20                     L2:
  5133                           
  5134                           ;tmr_drv.c: 119: T4CONbits.T4CKPS1 = 0u;
  5135  004A20  9276               	bcf	3958,1,c	;volatile
  5136                           
  5137                           ;tmr_drv.c: 120: break;
  5138  004A22  D00D               	goto	l512
  5139  004A24                     l514:
  5140                           
  5141                           ; BSR set to: 0
  5142                           ;tmr_drv.c: 123: T4CONbits.T4CKPS0 = 1u;
  5143  004A24  8076               	bsf	3958,0,c	;volatile
  5144                           
  5145                           ;tmr_drv.c: 124: T4CONbits.T4CKPS1 = 1u;
  5146  004A26  8276               	bsf	3958,1,c	;volatile
  5147                           
  5148                           ; BSR set to: 0
  5149                           ;tmr_drv.c: 129: }
  5150                           
  5151                           ; BSR set to: 0
  5152                           ;tmr_drv.c: 128: break;
  5153                           
  5154                           ;tmr_drv.c: 127: default:
  5155                           
  5156                           ;tmr_drv.c: 125: break;
  5157  004A28  D00A               	goto	l512
  5158  004A2A                     
  5159                           ; BSR set to: 0
  5160                           
  5161                           ; BSR set to: 0
  5162  004A2A  517D               	movf	TmrBInit@Prescaler& (0+255),w,b
  5163                           
  5164                           ; Switch size 1, requested type "space"
  5165                           ; Number of cases is 3, Range of values is 1 to 16
  5166                           ; switch strategies available:
  5167                           ; Name         Instructions Cycles
  5168                           ; simple_byte           10     6 (average)
  5169                           ;	Chosen strategy is simple_byte
  5170  004A2C  0A01               	xorlw	1	; case 1
  5171  004A2E  B4D8               	btfsc	status,2,c
  5172  004A30  D7F4               	goto	l511
  5173  004A32  0A05               	xorlw	5	; case 4
  5174  004A34  B4D8               	btfsc	status,2,c
  5175  004A36  D7F3               	goto	l513
  5176  004A38  0A14               	xorlw	20	; case 16
  5177  004A3A  B4D8               	btfsc	status,2,c
  5178  004A3C  D7F3               	goto	l514
  5179  004A3E                     l512:
  5180                           
  5181                           ; BSR set to: 0
  5182                           ;tmr_drv.c: 132: T4CONbits.T4OUTPS = (Postscaler - 1);
  5183                           
  5184                           ; BSR set to: 0
  5185  004A3E  C07E  F07F         	movff	TmrBInit@Postscaler,??_TmrBInit
  5186  004A42  0EFF               	movlw	255
  5187  004A44  277F               	addwf	??_TmrBInit& (0+255),f,b
  5188  004A46  477F               	rlncf	??_TmrBInit& (0+255),f,b
  5189  004A48  477F               	rlncf	??_TmrBInit& (0+255),f,b
  5190  004A4A  477F               	rlncf	??_TmrBInit& (0+255),f,b
  5191  004A4C  5076               	movf	3958,w,c	;volatile
  5192  004A4E  197F               	xorwf	??_TmrBInit& (0+255),w,b
  5193  004A50  0B87               	andlw	-121
  5194  004A52  197F               	xorwf	??_TmrBInit& (0+255),w,b
  5195  004A54  6E76               	movwf	3958,c	;volatile
  5196                           
  5197                           ; BSR set to: 0
  5198                           ;tmr_drv.c: 137: }
  5199                           
  5200                           ; BSR set to: 0
  5201                           ;tmr_drv.c: 136: break;
  5202                           
  5203                           ;tmr_drv.c: 135: default:
  5204                           
  5205                           ;tmr_drv.c: 133: break;
  5206  004A56  0012               	return	
  5207  004A58                     l500:
  5208                           
  5209                           ; BSR set to: 0
  5210  004A58  0100               	movlb	0	; () banked
  5211  004A5A  5180               	movf	TmrBInit@TmrNumb& (0+255),w,b
  5212                           
  5213                           ; Switch size 1, requested type "space"
  5214                           ; Number of cases is 2, Range of values is 2 to 4
  5215                           ; switch strategies available:
  5216                           ; Name         Instructions Cycles
  5217                           ; simple_byte            7     4 (average)
  5218                           ;	Chosen strategy is simple_byte
  5219  004A5C  0A02               	xorlw	2	; case 2
  5220  004A5E  B4D8               	btfsc	status,2,c
  5221  004A60  D7C4               	goto	l502
  5222  004A62  0A06               	xorlw	6	; case 4
  5223  004A64  A4D8               	btfss	status,2,c
  5224  004A66  0012               	return	
  5225  004A68  D7E0               	goto	l510
  5226  004A6A                     __end_of_TmrBInit:
  5227                           	opt stack 0
  5228                           tblptru	equ	0xFF8
  5229                           tblptrh	equ	0xFF7
  5230                           tblptrl	equ	0xFF6
  5231                           tablat	equ	0xFF5
  5232                           prodh	equ	0xFF4
  5233                           prodl	equ	0xFF3
  5234                           intcon	equ	0xFF2
  5235                           intcon2	equ	0xFF1
  5236                           intcon3	equ	0xFF0
  5237                           postinc0	equ	0xFEE
  5238                           wreg	equ	0xFE8
  5239                           postdec1	equ	0xFE5
  5240                           fsr1h	equ	0xFE2
  5241                           fsr1l	equ	0xFE1
  5242                           indf2	equ	0xFDF
  5243                           postinc2	equ	0xFDE
  5244                           postdec2	equ	0xFDD
  5245                           fsr2h	equ	0xFDA
  5246                           fsr2l	equ	0xFD9
  5247                           status	equ	0xFD8
  5248                           
  5249 ;; *************** function _Sch_MainScheduler *****************
  5250 ;; Defined at:
  5251 ;;		line 175 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
  5252 ;; Parameters:    Size  Location     Type
  5253 ;;		None
  5254 ;; Auto vars:     Size  Location     Type
  5255 ;;		None
  5256 ;; Return value:  Size  Location     Type
  5257 ;;                  1    wreg      void 
  5258 ;; Registers used:
  5259 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  5260 ;; Tracked objects:
  5261 ;;		On entry : 0/0
  5262 ;;		On exit  : 0/0
  5263 ;;		Unchanged: 0/0
  5264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5265 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5266 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5268 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5269 ;;Total ram usage:        0 bytes
  5270 ;; Hardware stack levels used:    1
  5271 ;; Hardware stack levels required when called:   22
  5272 ;; This function calls:
  5273 ;;		_InitializeTasks
  5274 ;;		_ScheduleTasks
  5275 ;; This function is called by:
  5276 ;;		_main
  5277 ;; This function uses a non-reentrant model
  5278 ;;
  5279                           
  5280                           	psect	text13
  5281  006610                     __ptext13:
  5282                           	opt stack 0
  5283  006610                     _Sch_MainScheduler:
  5284                           	opt stack 8
  5285                           
  5286                           ;os_sched.c: 178: InitializeTasks();
  5287                           
  5288                           ; BSR set to: 0
  5289                           ;incstack = 0
  5290  006610  ECF3  F028         	call	_InitializeTasks	;wreg free
  5291                           
  5292                           ;os_sched.c: 180: SystemState = RunningState;
  5293  006614  0E01               	movlw	1
  5294  006616  0100               	movlb	0	; () banked
  5295  006618  6FD3               	movwf	_SystemState& (0+255),b
  5296  00661A                     
  5297                           ;os_sched.c: 188: {
  5298                           ;os_sched.c: 190: if (MainSystemTimebaseFlag == CallTaskPhase)
  5299                           
  5300                           ; BSR set to: 0
  5301  00661A  0102               	movlb	2	; () banked
  5302  00661C  51F4               	movf	_MainSystemTimebaseFlag& (0+255),w,b
  5303  00661E  A4D8               	btfss	status,2,c
  5304  006620  D7FC               	goto	l790
  5305                           
  5306                           ; BSR set to: 2
  5307                           ;os_sched.c: 191: {
  5308                           ;os_sched.c: 196: ScheduleTasks();
  5309  006622  ECD7  F017         	call	_ScheduleTasks	;wreg free
  5310                           
  5311                           ;os_sched.c: 201: MainSystemTimebaseFlag = WaitTriggerPhase;
  5312  006626  0E01               	movlw	1
  5313  006628  0102               	movlb	2	; () banked
  5314  00662A  6FF4               	movwf	_MainSystemTimebaseFlag& (0+255),b
  5315                           
  5316                           ; BSR set to: 2
  5317                           
  5318                           ; BSR set to: 2
  5319  00662C  D7F6               	goto	l790
  5320  00662E                     __end_of_Sch_MainScheduler:
  5321                           	opt stack 0
  5322                           tblptru	equ	0xFF8
  5323                           tblptrh	equ	0xFF7
  5324                           tblptrl	equ	0xFF6
  5325                           tablat	equ	0xFF5
  5326                           prodh	equ	0xFF4
  5327                           prodl	equ	0xFF3
  5328                           intcon	equ	0xFF2
  5329                           intcon2	equ	0xFF1
  5330                           intcon3	equ	0xFF0
  5331                           postinc0	equ	0xFEE
  5332                           wreg	equ	0xFE8
  5333                           postdec1	equ	0xFE5
  5334                           fsr1h	equ	0xFE2
  5335                           fsr1l	equ	0xFE1
  5336                           indf2	equ	0xFDF
  5337                           postinc2	equ	0xFDE
  5338                           postdec2	equ	0xFDD
  5339                           fsr2h	equ	0xFDA
  5340                           fsr2l	equ	0xFD9
  5341                           status	equ	0xFD8
  5342                           
  5343 ;; *************** function _ScheduleTasks *****************
  5344 ;; Defined at:
  5345 ;;		line 99 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
  5346 ;; Parameters:    Size  Location     Type
  5347 ;;		None
  5348 ;; Auto vars:     Size  Location     Type
  5349 ;;  ActiveTaskIn    1    0[BANK5 ] unsigned char 
  5350 ;; Return value:  Size  Location     Type
  5351 ;;                  1    wreg      void 
  5352 ;; Registers used:
  5353 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  5354 ;; Tracked objects:
  5355 ;;		On entry : 0/0
  5356 ;;		On exit  : 0/0
  5357 ;;		Unchanged: 0/0
  5358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5359 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5360 ;;      Locals:         0       0       0       0       0       0       1       0       0       0       0       0       
      +0       0       0       0
  5361 ;;      Temps:          0       0       0       0       0       4       0       0       0       0       0       0       
      +0       0       0       0
  5362 ;;      Totals:         0       0       0       0       0       4       1       0       0       0       0       0       
      +0       0       0       0
  5363 ;;Total ram usage:        5 bytes
  5364 ;; Hardware stack levels used:    1
  5365 ;; Hardware stack levels required when called:   21
  5366 ;; This function calls:
  5367 ;;		_I2cSlv_MainTask
  5368 ;;		_Led_MainTask
  5369 ;;		_MdmHttp_MainTask
  5370 ;;		_Mdm_DrvMainFn
  5371 ;;		_Mdm_MainTask
  5372 ;;		_MyApp_Task
  5373 ;;		_Rtcm_MainTask
  5374 ;;		_Term_MainTask
  5375 ;;		_UsbDevice_MainTask
  5376 ;;		_Wdg_MainTask
  5377 ;; This function is called by:
  5378 ;;		_Sch_MainScheduler
  5379 ;; This function uses a non-reentrant model
  5380 ;;
  5381                           
  5382                           	psect	text14
  5383  002FAE                     __ptext14:
  5384                           	opt stack 0
  5385  002FAE                     _ScheduleTasks:
  5386                           	opt stack 8
  5387                           
  5388                           ;os_sched.c: 102: UINT8 ActiveTaskIndex = 0u;
  5389                           
  5390                           ; BSR set to: 2
  5391                           ;incstack = 0
  5392  002FAE  0E00               	movlw	0
  5393  002FB0  0105               	movlb	5	; () banked
  5394  002FB2  6FF4               	movwf	ScheduleTasks@ActiveTaskIndex& (0+255),b
  5395                           
  5396                           ;os_sched.c: 105: for (ActiveTaskIndex = 0u; ActiveTaskIndex < TaskNumber; ActiveTaskInd
      +                          ex++)
  5397  002FB4  0E00               	movlw	0
  5398  002FB6  6FF4               	movwf	ScheduleTasks@ActiveTaskIndex& (0+255),b
  5399  002FB8                     l16096:
  5400                           
  5401                           ; BSR set to: 5
  5402  002FB8  0E30               	movlw	low _TaskNumber
  5403  002FBA  6EF6               	movwf	tblptrl,c
  5404  002FBC                     	if	1	;There is more than 1 active tblptr byte
  5405  002FBC  0EFC               	movlw	high _TaskNumber
  5406  002FBE  6EF7               	movwf	tblptrh,c
  5407  002FC0                     	endif
  5408  002FC0                     	if	0	;There are less than 3 active tblptr bytes
  5409  002FC0                     	endif
  5410  002FC0  51F4               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5411  002FC2  0104               	movlb	4	; () banked
  5412  002FC4  6FFC               	movwf	??_ScheduleTasks& (0+255),b
  5413  002FC6  6BFD               	clrf	(??_ScheduleTasks+1)& (0+255),b
  5414  002FC8  0009               	tblrd		*+
  5415  002FCA  50F5               	movf	tablat,w,c
  5416  002FCC  5DFC               	subwf	??_ScheduleTasks& (0+255),w,b
  5417  002FCE  0009               	tblrd		*+
  5418  002FD0  50F5               	movf	tablat,w,c
  5419  002FD2  59FD               	subwfb	(??_ScheduleTasks+1)& (0+255),w,b
  5420  002FD4  B0D8               	btfsc	status,0,c
  5421  002FD6  0012               	return	
  5422                           
  5423                           ; BSR set to: 4
  5424                           ;os_sched.c: 106: {
  5425                           ;os_sched.c: 108: TaskTable[ActiveTaskIndex].Counter++;
  5426                           
  5427                           ; BSR set to: 4
  5428                           
  5429                           ; BSR set to: 4
  5430  002FD8  0105               	movlb	5	; () banked
  5431  002FDA  51F4               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5432  002FDC  0D08               	mullw	8
  5433  002FDE  0E03               	movlw	3
  5434  002FE0  26F3               	addwf	prodl,f,c
  5435  002FE2  0E00               	movlw	0
  5436  002FE4  22F4               	addwfc	prodh,f,c
  5437  002FE6  0EA4               	movlw	low _TaskTable
  5438  002FE8  24F3               	addwf	prodl,w,c
  5439  002FEA  6ED9               	movwf	fsr2l,c
  5440  002FEC  0E05               	movlw	high _TaskTable
  5441  002FEE  20F4               	addwfc	prodh,w,c
  5442  002FF0  6EDA               	movwf	fsr2h,c
  5443  002FF2  2ADE               	incf	postinc2,f,c
  5444  002FF4  0E00               	movlw	0
  5445  002FF6  22DD               	addwfc	postdec2,f,c
  5446                           
  5447                           ; BSR set to: 5
  5448                           ;os_sched.c: 110: if (TaskTable[ActiveTaskIndex].Counter >= (TaskTable[ActiveTaskIndex].
      +                          TimeoutMs/((((UINT16)(1000))*((UINT16)(1)))/1000)))
  5449  002FF8  51F4               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5450  002FFA  0D08               	mullw	8
  5451  002FFC  0E05               	movlw	5
  5452  002FFE  26F3               	addwf	prodl,f,c
  5453  003000  0E00               	movlw	0
  5454  003002  22F4               	addwfc	prodh,f,c
  5455  003004  0EA4               	movlw	low _TaskTable
  5456  003006  24F3               	addwf	prodl,w,c
  5457  003008  6ED9               	movwf	fsr2l,c
  5458  00300A  0E05               	movlw	high _TaskTable
  5459  00300C  20F4               	addwfc	prodh,w,c
  5460  00300E  6EDA               	movwf	fsr2h,c
  5461  003010  51F4               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5462  003012  0D08               	mullw	8
  5463  003014  0E03               	movlw	3
  5464  003016  26F3               	addwf	prodl,f,c
  5465  003018  0E00               	movlw	0
  5466  00301A  22F4               	addwfc	prodh,f,c
  5467  00301C  0EA4               	movlw	low _TaskTable
  5468  00301E  24F3               	addwf	prodl,w,c
  5469  003020  6EE1               	movwf	fsr1l,c
  5470  003022  0E05               	movlw	high _TaskTable
  5471  003024  20F4               	addwfc	prodh,w,c
  5472  003026  6EE2               	movwf	fsr1h,c
  5473  003028  50DE               	movf	postinc2,w,c
  5474  00302A  5CE6               	subwf	postinc1,w,c
  5475  00302C  50DE               	movf	postinc2,w,c
  5476  00302E  58E6               	subwfb	postinc1,w,c
  5477  003030  A0D8               	btfss	status,0,c
  5478  003032  D04E               	goto	l775
  5479                           
  5480                           ; BSR set to: 5
  5481                           ;os_sched.c: 111: {
  5482                           ;os_sched.c: 112: TaskTable[ActiveTaskIndex].Counter = ((UINT8)(0));
  5483  003034  51F4               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5484  003036  0D08               	mullw	8
  5485  003038  0E03               	movlw	3
  5486  00303A  26F3               	addwf	prodl,f,c
  5487  00303C  0E00               	movlw	0
  5488  00303E  22F4               	addwfc	prodh,f,c
  5489  003040  0EA4               	movlw	low _TaskTable
  5490  003042  24F3               	addwf	prodl,w,c
  5491  003044  6ED9               	movwf	fsr2l,c
  5492  003046  0E05               	movlw	high _TaskTable
  5493  003048  20F4               	addwfc	prodh,w,c
  5494  00304A  6EDA               	movwf	fsr2h,c
  5495  00304C  0E00               	movlw	0
  5496  00304E  6EDE               	movwf	postinc2,c
  5497  003050  0E00               	movlw	0
  5498  003052  6EDD               	movwf	postdec2,c
  5499                           
  5500                           ;os_sched.c: 113: TaskTable[ActiveTaskIndex].State = TaskRunning;
  5501  003054  51F4               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5502  003056  0D08               	mullw	8
  5503  003058  0E02               	movlw	2
  5504  00305A  26F3               	addwf	prodl,f,c
  5505  00305C  0E00               	movlw	0
  5506  00305E  22F4               	addwfc	prodh,f,c
  5507  003060  0EA4               	movlw	low _TaskTable
  5508  003062  24F3               	addwf	prodl,w,c
  5509  003064  6ED9               	movwf	fsr2l,c
  5510  003066  0E05               	movlw	high _TaskTable
  5511  003068  20F4               	addwfc	prodh,w,c
  5512  00306A  6EDA               	movwf	fsr2h,c
  5513  00306C  0E01               	movlw	1
  5514  00306E  6EDF               	movwf	indf2,c
  5515                           
  5516                           ; BSR set to: 5
  5517                           ;os_sched.c: 114: TaskTable[ActiveTaskIndex].Task(TaskTable[ActiveTaskIndex].Options);
  5518  003070  51F4               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5519  003072  0D08               	mullw	8
  5520  003074  0EA4               	movlw	low _TaskTable
  5521  003076  24F3               	addwf	prodl,w,c
  5522  003078  6ED9               	movwf	fsr2l,c
  5523  00307A  0E05               	movlw	high _TaskTable
  5524  00307C  20F4               	addwfc	prodh,w,c
  5525  00307E  6EDA               	movwf	fsr2h,c
  5526  003080  D801               	call	u15988
  5527  003082  D017               	goto	u15989
  5528  003084                     u15988:
  5529  003084  0005               	push	
  5530  003086  6EFA               	movwf	pclath,c
  5531  003088  50DE               	movf	postinc2,w,c
  5532  00308A  6EFD               	movwf	tosl,c
  5533  00308C  50DE               	movf	postinc2,w,c
  5534  00308E  6EFE               	movwf	tosh,c
  5535  003090  50F8               	movf	tblptru,w,c
  5536  003092  6EFF               	movwf	tosu,c
  5537  003094  50FA               	movf	pclath,w,c
  5538  003096  51F4               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5539  003098  0D08               	mullw	8
  5540  00309A  0E07               	movlw	7
  5541  00309C  26F3               	addwf	prodl,f,c
  5542  00309E  0E00               	movlw	0
  5543  0030A0  22F4               	addwfc	prodh,f,c
  5544  0030A2  0EA4               	movlw	low _TaskTable
  5545  0030A4  24F3               	addwf	prodl,w,c
  5546  0030A6  6ED9               	movwf	fsr2l,c
  5547  0030A8  0E05               	movlw	high _TaskTable
  5548  0030AA  20F4               	addwfc	prodh,w,c
  5549  0030AC  6EDA               	movwf	fsr2h,c
  5550  0030AE  50DF               	movf	indf2,w,c
  5551  0030B0  0012               	return		;indir
  5552  0030B2                     u15989:
  5553                           
  5554                           ;os_sched.c: 115: TaskTable[ActiveTaskIndex].State = TaskIdle;
  5555  0030B2  0105               	movlb	5	; () banked
  5556  0030B4  51F4               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5557  0030B6  0D08               	mullw	8
  5558  0030B8  0E02               	movlw	2
  5559  0030BA  26F3               	addwf	prodl,f,c
  5560  0030BC  0E00               	movlw	0
  5561  0030BE  22F4               	addwfc	prodh,f,c
  5562  0030C0  0EA4               	movlw	low _TaskTable
  5563  0030C2  24F3               	addwf	prodl,w,c
  5564  0030C4  6ED9               	movwf	fsr2l,c
  5565  0030C6  0E05               	movlw	high _TaskTable
  5566  0030C8  20F4               	addwfc	prodh,w,c
  5567  0030CA  6EDA               	movwf	fsr2h,c
  5568  0030CC  0E00               	movlw	0
  5569  0030CE  6EDF               	movwf	indf2,c
  5570  0030D0                     l775:
  5571                           
  5572                           ; BSR set to: 5
  5573                           
  5574                           ; BSR set to: 5
  5575                           
  5576                           ;os_sched.c: 117: else
  5577                           ;os_sched.c: 118: {
  5578                           
  5579                           ; BSR set to: 5
  5580  0030D0  2BF4               	incf	ScheduleTasks@ActiveTaskIndex& (0+255),f,b
  5581  0030D2  D772               	goto	l16096
  5582  0030D4                     __end_of_ScheduleTasks:
  5583                           	opt stack 0
  5584                           tosu	equ	0xFFF
  5585                           tosh	equ	0xFFE
  5586                           tosl	equ	0xFFD
  5587                           pclath	equ	0xFFA
  5588                           tblptru	equ	0xFF8
  5589                           tblptrh	equ	0xFF7
  5590                           tblptrl	equ	0xFF6
  5591                           tablat	equ	0xFF5
  5592                           prodh	equ	0xFF4
  5593                           prodl	equ	0xFF3
  5594                           intcon	equ	0xFF2
  5595                           intcon2	equ	0xFF1
  5596                           intcon3	equ	0xFF0
  5597                           postinc0	equ	0xFEE
  5598                           wreg	equ	0xFE8
  5599                           postinc1	equ	0xFE6
  5600                           postdec1	equ	0xFE5
  5601                           fsr1h	equ	0xFE2
  5602                           fsr1l	equ	0xFE1
  5603                           indf2	equ	0xFDF
  5604                           postinc2	equ	0xFDE
  5605                           postdec2	equ	0xFDD
  5606                           fsr2h	equ	0xFDA
  5607                           fsr2l	equ	0xFD9
  5608                           status	equ	0xFD8
  5609                           
  5610 ;; *************** function _InitializeTasks *****************
  5611 ;; Defined at:
  5612 ;;		line 79 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
  5613 ;; Parameters:    Size  Location     Type
  5614 ;;		None
  5615 ;; Auto vars:     Size  Location     Type
  5616 ;;  ActiveTaskIn    1    2[BANK4 ] unsigned char 
  5617 ;; Return value:  Size  Location     Type
  5618 ;;                  1    wreg      void 
  5619 ;; Registers used:
  5620 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  5621 ;; Tracked objects:
  5622 ;;		On entry : 0/0
  5623 ;;		On exit  : 0/0
  5624 ;;		Unchanged: 0/0
  5625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5626 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5627 ;;      Locals:         0       0       0       0       0       1       0       0       0       0       0       0       
      +0       0       0       0
  5628 ;;      Temps:          0       0       0       0       0       2       0       0       0       0       0       0       
      +0       0       0       0
  5629 ;;      Totals:         0       0       0       0       0       3       0       0       0       0       0       0       
      +0       0       0       0
  5630 ;;Total ram usage:        3 bytes
  5631 ;; Hardware stack levels used:    1
  5632 ;; Hardware stack levels required when called:   21
  5633 ;; This function calls:
  5634 ;;		_I2cSlv_MainTask
  5635 ;;		_Led_MainTask
  5636 ;;		_MdmHttp_MainTask
  5637 ;;		_Mdm_DrvMainFn
  5638 ;;		_Mdm_MainTask
  5639 ;;		_MyApp_Task
  5640 ;;		_Rtcm_MainTask
  5641 ;;		_Term_MainTask
  5642 ;;		_UsbDevice_MainTask
  5643 ;;		_Wdg_MainTask
  5644 ;; This function is called by:
  5645 ;;		_Sch_MainScheduler
  5646 ;; This function uses a non-reentrant model
  5647 ;;
  5648                           
  5649                           	psect	text15
  5650  0051E6                     __ptext15:
  5651                           	opt stack 0
  5652  0051E6                     _InitializeTasks:
  5653                           	opt stack 8
  5654                           
  5655                           ;os_sched.c: 82: UINT8 ActiveTaskIndex = 0u;
  5656                           
  5657                           ; BSR set to: 4
  5658                           ;incstack = 0
  5659  0051E6  0E00               	movlw	0
  5660  0051E8  0104               	movlb	4	; () banked
  5661  0051EA  6FFE               	movwf	InitializeTasks@ActiveTaskIndex& (0+255),b
  5662                           
  5663                           ;os_sched.c: 85: for (ActiveTaskIndex = 0u; ActiveTaskIndex < TaskNumber; ActiveTaskInde
      +                          x++)
  5664  0051EC  0E00               	movlw	0
  5665  0051EE  6FFE               	movwf	InitializeTasks@ActiveTaskIndex& (0+255),b
  5666  0051F0                     l16084:
  5667                           
  5668                           ; BSR set to: 4
  5669  0051F0  0E30               	movlw	low _TaskNumber
  5670  0051F2  6EF6               	movwf	tblptrl,c
  5671  0051F4                     	if	1	;There is more than 1 active tblptr byte
  5672  0051F4  0EFC               	movlw	high _TaskNumber
  5673  0051F6  6EF7               	movwf	tblptrh,c
  5674  0051F8                     	endif
  5675  0051F8                     	if	0	;There are less than 3 active tblptr bytes
  5676  0051F8                     	endif
  5677  0051F8  51FE               	movf	InitializeTasks@ActiveTaskIndex& (0+255),w,b
  5678  0051FA  6FFC               	movwf	??_InitializeTasks& (0+255),b
  5679  0051FC  6BFD               	clrf	(??_InitializeTasks+1)& (0+255),b
  5680  0051FE  0009               	tblrd		*+
  5681  005200  50F5               	movf	tablat,w,c
  5682  005202  5DFC               	subwf	??_InitializeTasks& (0+255),w,b
  5683  005204  0009               	tblrd		*+
  5684  005206  50F5               	movf	tablat,w,c
  5685  005208  59FD               	subwfb	(??_InitializeTasks+1)& (0+255),w,b
  5686  00520A  B0D8               	btfsc	status,0,c
  5687  00520C  0012               	return	
  5688                           
  5689                           ; BSR set to: 4
  5690                           ;os_sched.c: 86: {
  5691                           ;os_sched.c: 87: TaskTable[ActiveTaskIndex].Task(TaskTable[ActiveTaskIndex].Options);
  5692                           
  5693                           ; BSR set to: 4
  5694                           
  5695                           ; BSR set to: 4
  5696  00520E  51FE               	movf	InitializeTasks@ActiveTaskIndex& (0+255),w,b
  5697  005210  0D08               	mullw	8
  5698  005212  0EA4               	movlw	low _TaskTable
  5699  005214  24F3               	addwf	prodl,w,c
  5700  005216  6ED9               	movwf	fsr2l,c
  5701  005218  0E05               	movlw	high _TaskTable
  5702  00521A  20F4               	addwfc	prodh,w,c
  5703  00521C  6EDA               	movwf	fsr2h,c
  5704  00521E  D801               	call	u15948
  5705  005220  D017               	goto	u15949
  5706  005222                     u15948:
  5707  005222  0005               	push	
  5708  005224  6EFA               	movwf	pclath,c
  5709  005226  50DE               	movf	postinc2,w,c
  5710  005228  6EFD               	movwf	tosl,c
  5711  00522A  50DE               	movf	postinc2,w,c
  5712  00522C  6EFE               	movwf	tosh,c
  5713  00522E  50F8               	movf	tblptru,w,c
  5714  005230  6EFF               	movwf	tosu,c
  5715  005232  50FA               	movf	pclath,w,c
  5716  005234  51FE               	movf	InitializeTasks@ActiveTaskIndex& (0+255),w,b
  5717  005236  0D08               	mullw	8
  5718  005238  0E07               	movlw	7
  5719  00523A  26F3               	addwf	prodl,f,c
  5720  00523C  0E00               	movlw	0
  5721  00523E  22F4               	addwfc	prodh,f,c
  5722  005240  0EA4               	movlw	low _TaskTable
  5723  005242  24F3               	addwf	prodl,w,c
  5724  005244  6ED9               	movwf	fsr2l,c
  5725  005246  0E05               	movlw	high _TaskTable
  5726  005248  20F4               	addwfc	prodh,w,c
  5727  00524A  6EDA               	movwf	fsr2h,c
  5728  00524C  50DF               	movf	indf2,w,c
  5729  00524E  0012               	return		;indir
  5730  005250                     u15949:
  5731  005250  0104               	movlb	4	; () banked
  5732  005252  2BFE               	incf	InitializeTasks@ActiveTaskIndex& (0+255),f,b
  5733  005254  D7CD               	goto	l16084
  5734  005256                     __end_of_InitializeTasks:
  5735                           	opt stack 0
  5736                           tosu	equ	0xFFF
  5737                           tosh	equ	0xFFE
  5738                           tosl	equ	0xFFD
  5739                           pclath	equ	0xFFA
  5740                           tblptru	equ	0xFF8
  5741                           tblptrh	equ	0xFF7
  5742                           tblptrl	equ	0xFF6
  5743                           tablat	equ	0xFF5
  5744                           prodh	equ	0xFF4
  5745                           prodl	equ	0xFF3
  5746                           intcon	equ	0xFF2
  5747                           intcon2	equ	0xFF1
  5748                           intcon3	equ	0xFF0
  5749                           postinc0	equ	0xFEE
  5750                           wreg	equ	0xFE8
  5751                           postinc1	equ	0xFE6
  5752                           postdec1	equ	0xFE5
  5753                           fsr1h	equ	0xFE2
  5754                           fsr1l	equ	0xFE1
  5755                           indf2	equ	0xFDF
  5756                           postinc2	equ	0xFDE
  5757                           postdec2	equ	0xFDD
  5758                           fsr2h	equ	0xFDA
  5759                           fsr2l	equ	0xFD9
  5760                           status	equ	0xFD8
  5761                           
  5762 ;; *************** function _MyApp_Task *****************
  5763 ;; Defined at:
  5764 ;;		line 140 in file "../Source/c/04_App/app.c"
  5765 ;; Parameters:    Size  Location     Type
  5766 ;;  Options         1    wreg     unsigned char 
  5767 ;; Auto vars:     Size  Location     Type
  5768 ;;  Options         1    0[COMRAM] unsigned char 
  5769 ;;  emptyNumber    13   21[BANK1 ] const unsigned char [13]
  5770 ;;  cmdAddNumber    4   37[BANK1 ] const unsigned char [4]
  5771 ;;  cmpString       3   34[BANK1 ] unsigned char [3]
  5772 ;;  numberInMemo    1   42[BANK1 ] unsigned char 
  5773 ;;  memoryResult    1   41[BANK1 ] enum E8114
  5774 ;; Return value:  Size  Location     Type
  5775 ;;                  1    wreg      void 
  5776 ;; Registers used:
  5777 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5778 ;; Tracked objects:
  5779 ;;		On entry : 0/0
  5780 ;;		On exit  : 0/0
  5781 ;;		Unchanged: 0/0
  5782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5783 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5784 ;;      Locals:         0       0      22       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5785 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5786 ;;      Totals:         0       0      24       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5787 ;;Total ram usage:       24 bytes
  5788 ;; Hardware stack levels used:    1
  5789 ;; Hardware stack levels required when called:   19
  5790 ;; This function calls:
  5791 ;;		_GetCallerNumber
  5792 ;;		_Led_SetLedBlinkTime
  5793 ;;		_Led_SetLedStatus
  5794 ;;		_Mdm_GetSmsData
  5795 ;;		_Mdm_HangPhoneCall
  5796 ;;		_Mdm_IsRinging
  5797 ;;		_Mdm_IsSmsReceived
  5798 ;;		_Mdm_RequestSmsData
  5799 ;;		_StringCompare
  5800 ;;		_Uart_WriteConstString
  5801 ;;		_findEmptySpot
  5802 ;;		_initFsm
  5803 ;;		_initMemorizedNumbersCount
  5804 ;;		_isNumberInMemory
  5805 ;;		_parseCommand
  5806 ;;		_saveNumberInMemory
  5807 ;;		_waitSetupCall
  5808 ;; This function is called by:
  5809 ;;		_InitializeTasks
  5810 ;;		_ScheduleTasks
  5811 ;; This function uses a non-reentrant model
  5812 ;;
  5813                           
  5814                           	psect	text16
  5815  0010B6                     __ptext16:
  5816                           	opt stack 0
  5817  0010B6                     _MyApp_Task:
  5818                           	opt stack 9
  5819                           
  5820                           ;app.c: 142: const uint8_t emptyNumber[((UINT8)(13))] = {0};
  5821                           
  5822                           ; BSR set to: 4
  5823                           ;incstack = 0
  5824  0010B6  0E11               	movlw	low MyApp_Task@F9031
  5825  0010B8  6EF6               	movwf	tblptrl,c
  5826  0010BA                     	if	1	;There is more than 1 active tblptr byte
  5827  0010BA  0EFC               	movlw	high MyApp_Task@F9031
  5828  0010BC  6EF7               	movwf	tblptrh,c
  5829  0010BE                     	endif
  5830  0010BE                     	if	0	;There are less than 3 active tblptr bytes
  5831  0010BE                     	endif
  5832  0010BE  EE21  F015         	lfsr	2,MyApp_Task@emptyNumber
  5833  0010C2  0E0C               	movlw	12
  5834  0010C4                     u15710:
  5835  0010C4  0009               	tblrd		*+
  5836  0010C6  CFF5 FFDE          	movff	tablat,postinc2
  5837  0010CA  06E8               	decf	wreg,f,c
  5838  0010CC  E2FB               	bc	u15710
  5839                           
  5840                           ;app.c: 143: static UINT8 smsPhoneNumber[] = {'+', '3', '9', '0', '1', '2', '3', '4', '5
      +                          ', '6', '7', '8', '9'};
  5841                           ;app.c: 148: const uint8_t cmdAddNumber[] = {'N', 'U', 'M', '+'};
  5842  0010CE  0E24               	movlw	low MyApp_Task@F9034
  5843  0010D0  6EF6               	movwf	tblptrl,c
  5844  0010D2                     	if	1	;There is more than 1 active tblptr byte
  5845  0010D2  0EFC               	movlw	high MyApp_Task@F9034
  5846  0010D4  6EF7               	movwf	tblptrh,c
  5847  0010D6                     	endif
  5848  0010D6                     	if	0	;There are less than 3 active tblptr bytes
  5849  0010D6                     	endif
  5850  0010D6  0009               	tblrd		*+
  5851  0010D8  CFF5 F125          	movff	tablat,MyApp_Task@cmdAddNumber
  5852  0010DC  0009               	tblrd		*+
  5853  0010DE  CFF5 F126          	movff	tablat,MyApp_Task@cmdAddNumber+1
  5854  0010E2  0009               	tblrd		*+
  5855  0010E4  CFF5 F127          	movff	tablat,MyApp_Task@cmdAddNumber+2
  5856  0010E8  000A               	tblrd		*-
  5857  0010EA  CFF5 F128          	movff	tablat,MyApp_Task@cmdAddNumber+3
  5858                           
  5859                           ;app.c: 149: uint8_t cmpString[] = {'c', 'a', 't'};
  5860  0010EE  C3CF  F122         	movff	MyApp_Task@F9036,MyApp_Task@cmpString
  5861  0010F2  C3D0  F123         	movff	MyApp_Task@F9036+1,MyApp_Task@cmpString+1
  5862  0010F6  C3D1  F124         	movff	MyApp_Task@F9036+2,MyApp_Task@cmpString+2
  5863                           
  5864                           ;app.c: 151: static gateFsmStates currentState = GATE_INIT;
  5865                           ;app.c: 152: I2cOpStsType memoryResult = OP_COMPLETE;
  5866  0010FA  0E01               	movlw	1
  5867  0010FC  0101               	movlb	1	; () banked
  5868  0010FE  6F29               	movwf	MyApp_Task@memoryResult& (0+255),b
  5869                           
  5870                           ; BSR set to: 1
  5871                           ;app.c: 153: uint8_t numberInMemory = 0;
  5872  001100  0E00               	movlw	0
  5873  001102  6F2A               	movwf	MyApp_Task@numberInMemory& (0+255),b
  5874                           
  5875                           ;app.c: 155: switch (SystemState)
  5876  001104  D12B               	goto	l2600
  5877  001106                     
  5878                           ;app.c: 160: Led_SetLedBlinkTime(1u,100,900);
  5879                           
  5880                           ; BSR set to: 1
  5881  001106  0E00               	movlw	0
  5882  001108  0100               	movlb	0	; () banked
  5883  00110A  6F7E               	movwf	(Led_SetLedBlinkTime@OnTimeMs+1)& (0+255),b
  5884  00110C  0E64               	movlw	100
  5885  00110E  6F7D               	movwf	Led_SetLedBlinkTime@OnTimeMs& (0+255),b
  5886  001110  0E03               	movlw	3
  5887  001112  6F80               	movwf	(Led_SetLedBlinkTime@OffTimeMs+1)& (0+255),b
  5888  001114  0E84               	movlw	132
  5889  001116  6F7F               	movwf	Led_SetLedBlinkTime@OffTimeMs& (0+255),b
  5890  001118  0E01               	movlw	1
  5891  00111A  EC83  F02C         	call	_Led_SetLedBlinkTime
  5892                           
  5893                           ;app.c: 161: break;
  5894  00111E  0012               	return	
  5895  001120                     
  5896                           ;app.c: 168: if (initFsm())
  5897  001120  ECAB  F02E         	call	_initFsm	;wreg free
  5898  001124  0900               	iorlw	0
  5899  001126  B4D8               	btfsc	status,2,c
  5900  001128  0012               	return	
  5901                           
  5902                           ;app.c: 169: {
  5903                           ;app.c: 170: if (isMemoryEmpty)
  5904  00112A  0101               	movlb	1	; () banked
  5905  00112C  51FE               	movf	_isMemoryEmpty& (0+255),w,b
  5906  00112E  B4D8               	btfsc	status,2,c
  5907  001130  D036               	goto	l2607
  5908                           
  5909                           ; BSR set to: 1
  5910                           ;app.c: 171: {
  5911                           ;app.c: 172: if (waitSetupCall())
  5912  001132  ECA1  F02D         	call	_waitSetupCall	;wreg free
  5913  001136  0900               	iorlw	0
  5914  001138  B4D8               	btfsc	status,2,c
  5915  00113A  D003               	goto	l2608
  5916                           
  5917                           ;app.c: 173: {
  5918                           ;app.c: 174: currentState = GATE_SAVE_FIRST_MASTER;
  5919  00113C  0E01               	movlw	1
  5920  00113E  0101               	movlb	1	; () banked
  5921  001140  6FD6               	movwf	MyApp_Task@currentState& (0+255),b
  5922  001142                     l2608:
  5923                           
  5924                           ;app.c: 175: }
  5925                           ;app.c: 176: if (Mdm_IsSmsReceived())
  5926                           
  5927                           ; BSR set to: 1
  5928  001142  EC3F  F032         	call	_Mdm_IsSmsReceived	;wreg free
  5929  001146  0900               	iorlw	0
  5930  001148  A4D8               	btfss	status,2,c
  5931                           
  5932                           ;app.c: 177: {
  5933                           ;app.c: 178: Mdm_RequestSmsData();
  5934  00114A  ECEC  F033         	call	_Mdm_RequestSmsData	;wreg free
  5935                           
  5936                           ;app.c: 179: }
  5937                           ;app.c: 180: if (Mdm_GetSmsData(smsText) == SmsDataReady)
  5938  00114E  0E95               	movlw	low _smsText
  5939  001150  0100               	movlb	0	; () banked
  5940  001152  6F87               	movwf	Mdm_GetSmsData@MessageText& (0+255),b
  5941  001154  0E04               	movlw	high _smsText
  5942  001156  6F88               	movwf	(Mdm_GetSmsData@MessageText+1)& (0+255),b
  5943  001158  ECCB  F029         	call	_Mdm_GetSmsData	;wreg free
  5944  00115C  06E8               	decf	wreg,f,c
  5945  00115E  A4D8               	btfss	status,2,c
  5946  001160  0012               	return	
  5947                           
  5948                           ;app.c: 181: {
  5949                           ;app.c: 182: Uart_WriteConstString(1,"AT+CMGD=1,0\r\n");
  5950  001162  0E2F               	movlw	low STR_29
  5951  001164  0100               	movlb	0	; () banked
  5952  001166  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
  5953  001168  0EFF               	movlw	high STR_29
  5954  00116A  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
  5955  00116C  0E01               	movlw	1
  5956  00116E  EC7A  F02F         	call	_Uart_WriteConstString
  5957                           
  5958                           ;app.c: 183: if (StringCompare(smsText, cmdAddNumber, sizeof(cmdAddNumber)))
  5959  001172  0E95               	movlw	low _smsText
  5960  001174  0100               	movlb	0	; () banked
  5961  001176  6F7D               	movwf	StringCompare@String1& (0+255),b
  5962  001178  0E04               	movlw	high _smsText
  5963  00117A  6F7E               	movwf	(StringCompare@String1+1)& (0+255),b
  5964  00117C  0E25               	movlw	low MyApp_Task@cmdAddNumber
  5965  00117E  6F7F               	movwf	StringCompare@String2& (0+255),b
  5966  001180  0E01               	movlw	high MyApp_Task@cmdAddNumber
  5967  001182  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
  5968  001184  0E00               	movlw	0
  5969  001186  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
  5970  001188  0E04               	movlw	4
  5971  00118A  6F81               	movwf	StringCompare@Len& (0+255),b
  5972  00118C  EC00  F02D         	call	_StringCompare	;wreg free
  5973  001190  0900               	iorlw	0
  5974  001192  B4D8               	btfsc	status,2,c
  5975  001194  0012               	return	
  5976                           
  5977                           ;app.c: 184: {
  5978                           ;app.c: 185: currentState = GATE_SAVE_FIRST_MASTER;
  5979  001196  0E01               	movlw	1
  5980  001198  0101               	movlb	1	; () banked
  5981  00119A  6FD6               	movwf	MyApp_Task@currentState& (0+255),b
  5982                           
  5983                           ; BSR set to: 1
  5984                           ;app.c: 186: }
  5985                           ;app.c: 187: }
  5986                           ;app.c: 188: }
  5987                           
  5988                           ; BSR set to: 1
  5989  00119C  0012               	return	
  5990  00119E                     l2607:
  5991                           
  5992                           ; BSR set to: 1
  5993                           ;app.c: 189: else
  5994                           ;app.c: 190: {
  5995                           ;app.c: 191: Led_SetLedStatus(1u, LED_STS_ON);
  5996                           
  5997                           ; BSR set to: 1
  5998  00119E  0E01               	movlw	1
  5999  0011A0  0100               	movlb	0	; () banked
  6000  0011A2  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
  6001  0011A4  0E01               	movlw	1
  6002  0011A6  EC5B  F031         	call	_Led_SetLedStatus
  6003                           
  6004                           ;app.c: 192: currentState = GATE_WAIT_EVENT;
  6005  0011AA  0E03               	movlw	3
  6006  0011AC  0101               	movlb	1	; () banked
  6007  0011AE  6FD6               	movwf	MyApp_Task@currentState& (0+255),b
  6008                           
  6009                           ; BSR set to: 1
  6010                           ;app.c: 193: }
  6011                           ;app.c: 194: }
  6012                           ;app.c: 195: break;
  6013                           
  6014                           ; BSR set to: 1
  6015  0011B0  0012               	return	
  6016  0011B2                     
  6017                           ; BSR set to: 1
  6018                           ;app.c: 198: saveNumberInMemory(16, GetCallerNumber());
  6019                           
  6020                           ; BSR set to: 1
  6021  0011B2  EC91  F030         	call	_GetCallerNumber	;wreg free
  6022  0011B6  C083  F08E         	movff	?_GetCallerNumber,saveNumberInMemory@phoneNumber
  6023  0011BA  C084  F08F         	movff	?_GetCallerNumber+1,saveNumberInMemory@phoneNumber+1
  6024  0011BE  0E10               	movlw	16
  6025  0011C0  EC4D  F033         	call	_saveNumberInMemory
  6026                           
  6027                           ;app.c: 199: currentState = GATE_UPDATE_NUMBERS_COUNT;
  6028  0011C4  0E02               	movlw	2
  6029  0011C6  0101               	movlb	1	; () banked
  6030  0011C8  6FD6               	movwf	MyApp_Task@currentState& (0+255),b
  6031                           
  6032                           ;app.c: 200: break;
  6033  0011CA  0012               	return	
  6034  0011CC                     
  6035                           ; BSR set to: 1
  6036                           ;app.c: 203: initMemorizedNumbersCount();
  6037                           
  6038                           ; BSR set to: 1
  6039  0011CC  EC5A  F033         	call	_initMemorizedNumbersCount	;wreg free
  6040                           
  6041                           ;app.c: 204: Led_SetLedStatus(1u, LED_STS_ON);
  6042  0011D0  0E01               	movlw	1
  6043  0011D2  0100               	movlb	0	; () banked
  6044  0011D4  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
  6045  0011D6  0E01               	movlw	1
  6046  0011D8  EC5B  F031         	call	_Led_SetLedStatus
  6047                           
  6048                           ;app.c: 205: currentState = GATE_WAIT_EVENT;
  6049  0011DC  0E03               	movlw	3
  6050  0011DE  0101               	movlb	1	; () banked
  6051  0011E0  6FD6               	movwf	MyApp_Task@currentState& (0+255),b
  6052                           
  6053                           ;app.c: 206: break;
  6054  0011E2  0012               	return	
  6055  0011E4                     
  6056                           ; BSR set to: 1
  6057                           ;app.c: 209: if (Mdm_IsSmsReceived())
  6058                           
  6059                           ; BSR set to: 1
  6060  0011E4  EC3F  F032         	call	_Mdm_IsSmsReceived	;wreg free
  6061  0011E8  0900               	iorlw	0
  6062  0011EA  A4D8               	btfss	status,2,c
  6063                           
  6064                           ;app.c: 210: {
  6065                           ;app.c: 211: Mdm_RequestSmsData();
  6066  0011EC  ECEC  F033         	call	_Mdm_RequestSmsData	;wreg free
  6067                           
  6068                           ;app.c: 212: }
  6069                           ;app.c: 213: if (Mdm_GetSmsData(smsText) == SmsDataReady)
  6070  0011F0  0E95               	movlw	low _smsText
  6071  0011F2  0100               	movlb	0	; () banked
  6072  0011F4  6F87               	movwf	Mdm_GetSmsData@MessageText& (0+255),b
  6073  0011F6  0E04               	movlw	high _smsText
  6074  0011F8  6F88               	movwf	(Mdm_GetSmsData@MessageText+1)& (0+255),b
  6075  0011FA  ECCB  F029         	call	_Mdm_GetSmsData	;wreg free
  6076  0011FE  06E8               	decf	wreg,f,c
  6077  001200  A4D8               	btfss	status,2,c
  6078  001202  D011               	goto	l2618
  6079                           
  6080                           ;app.c: 214: {
  6081                           ;app.c: 215: Uart_WriteConstString(1,"AT+CMGD=1,0\r\n");
  6082  001204  0E2F               	movlw	low STR_29
  6083  001206  0100               	movlb	0	; () banked
  6084  001208  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
  6085  00120A  0EFF               	movlw	high STR_29
  6086  00120C  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
  6087  00120E  0E01               	movlw	1
  6088  001210  EC7A  F02F         	call	_Uart_WriteConstString
  6089                           
  6090                           ;app.c: 216: currentState = parseCommand(smsText);
  6091  001214  0E95               	movlw	low _smsText
  6092  001216  0100               	movlb	0	; () banked
  6093  001218  6F88               	movwf	parseCommand@text& (0+255),b
  6094  00121A  0E04               	movlw	high _smsText
  6095  00121C  6F89               	movwf	(parseCommand@text+1)& (0+255),b
  6096  00121E  EC04  F022         	call	_parseCommand	;wreg free
  6097  001222  0101               	movlb	1	; () banked
  6098  001224  6FD6               	movwf	MyApp_Task@currentState& (0+255),b
  6099  001226                     l2618:
  6100                           
  6101                           ;app.c: 217: }
  6102                           ;app.c: 218: if (Mdm_IsRinging())
  6103                           
  6104                           ; BSR set to: 1
  6105  001226  EC2D  F032         	call	_Mdm_IsRinging	;wreg free
  6106  00122A  0900               	iorlw	0
  6107  00122C  B4D8               	btfsc	status,2,c
  6108  00122E  0012               	return	
  6109                           
  6110                           ;app.c: 219: {
  6111                           ;app.c: 220: Mdm_HangPhoneCall();
  6112  001230  ECCA  F033         	call	_Mdm_HangPhoneCall	;wreg free
  6113                           
  6114                           ;app.c: 221: currentState = GATE_TRIGGER_CMD;
  6115  001234  0E07               	movlw	7
  6116  001236  0101               	movlb	1	; () banked
  6117  001238  6FD6               	movwf	MyApp_Task@currentState& (0+255),b
  6118                           
  6119                           ; BSR set to: 1
  6120                           ;app.c: 222: }
  6121                           ;app.c: 223: break;
  6122  00123A  0012               	return	
  6123  00123C                     
  6124                           ; BSR set to: 1
  6125                           ;app.c: 226: numberInMemory = isNumberInMemory(GetCallerNumber());
  6126                           
  6127                           ; BSR set to: 1
  6128  00123C  EC91  F030         	call	_GetCallerNumber	;wreg free
  6129  001240  C083  F100         	movff	?_GetCallerNumber,isNumberInMemory@phoneNumber
  6130  001244  C084  F101         	movff	?_GetCallerNumber+1,isNumberInMemory@phoneNumber+1
  6131  001248  EC31  F027         	call	_isNumberInMemory	;wreg free
  6132  00124C  0101               	movlb	1	; () banked
  6133  00124E  6F2A               	movwf	MyApp_Task@numberInMemory& (0+255),b
  6134                           
  6135                           ; BSR set to: 1
  6136                           ;app.c: 227: if (numberInMemory == 1)
  6137  001250  052A               	decf	MyApp_Task@numberInMemory& (0+255),w,b
  6138  001252  A4D8               	btfss	status,2,c
  6139  001254  D003               	goto	l2621
  6140                           
  6141                           ; BSR set to: 1
  6142                           ;app.c: 228: {
  6143                           ;app.c: 229: currentState = GATE_WAIT_EVENT;
  6144  001256  0E03               	movlw	3
  6145  001258  6FD6               	movwf	MyApp_Task@currentState& (0+255),b
  6146                           
  6147                           ;app.c: 230: }
  6148  00125A  0012               	return	
  6149  00125C                     l2621:
  6150                           
  6151                           ; BSR set to: 1
  6152                           ;app.c: 231: else if (numberInMemory != 0 && numberInMemory != 1)
  6153                           
  6154                           ; BSR set to: 1
  6155  00125C  512A               	movf	MyApp_Task@numberInMemory& (0+255),w,b
  6156  00125E  B4D8               	btfsc	status,2,c
  6157  001260  0012               	return	
  6158                           
  6159                           ; BSR set to: 1
  6160  001262  052A               	decf	MyApp_Task@numberInMemory& (0+255),w,b
  6161  001264  B4D8               	btfsc	status,2,c
  6162  001266  0012               	return	
  6163                           
  6164                           ; BSR set to: 1
  6165                           ;app.c: 232: {
  6166                           ;app.c: 233: currentState = GATE_SAVE_NEW;
  6167  001268  0E05               	movlw	5
  6168  00126A  6FD6               	movwf	MyApp_Task@currentState& (0+255),b
  6169                           
  6170                           ; BSR set to: 1
  6171                           ;app.c: 234: }
  6172                           ;app.c: 235: break;
  6173                           
  6174                           ; BSR set to: 1
  6175  00126C  0012               	return	
  6176  00126E                     
  6177                           ; BSR set to: 1
  6178                           ;app.c: 238: numberInMemory = findEmptySpot();
  6179                           
  6180                           ; BSR set to: 1
  6181  00126E  EC97  F029         	call	_findEmptySpot	;wreg free
  6182  001272  0101               	movlb	1	; () banked
  6183  001274  6F2A               	movwf	MyApp_Task@numberInMemory& (0+255),b
  6184                           
  6185                           ; BSR set to: 1
  6186                           ;app.c: 239: if (numberInMemory == 1)
  6187  001276  052A               	decf	MyApp_Task@numberInMemory& (0+255),w,b
  6188  001278  A4D8               	btfss	status,2,c
  6189  00127A  D003               	goto	l2625
  6190                           
  6191                           ; BSR set to: 1
  6192                           ;app.c: 240: {
  6193                           ;app.c: 241: currentState = GATE_WAIT_EVENT;
  6194  00127C  0E03               	movlw	3
  6195  00127E  6FD6               	movwf	MyApp_Task@currentState& (0+255),b
  6196                           
  6197                           ;app.c: 242: }
  6198  001280  0012               	return	
  6199  001282                     l2625:
  6200                           
  6201                           ; BSR set to: 1
  6202                           ;app.c: 243: else if (numberInMemory != 0 && numberInMemory != 1)
  6203                           
  6204                           ; BSR set to: 1
  6205  001282  512A               	movf	MyApp_Task@numberInMemory& (0+255),w,b
  6206  001284  B4D8               	btfsc	status,2,c
  6207  001286  0012               	return	
  6208                           
  6209                           ; BSR set to: 1
  6210  001288  052A               	decf	MyApp_Task@numberInMemory& (0+255),w,b
  6211  00128A  B4D8               	btfsc	status,2,c
  6212  00128C  0012               	return	
  6213                           
  6214                           ; BSR set to: 1
  6215                           ;app.c: 244: {
  6216                           ;app.c: 245: saveNumberInMemory(smsText + 3, numberInMemory);
  6217  00128E  512A               	movf	MyApp_Task@numberInMemory& (0+255),w,b
  6218  001290  6F13               	movwf	??_MyApp_Task& (0+255),b
  6219  001292  6B14               	clrf	(??_MyApp_Task+1)& (0+255),b
  6220  001294  C113  F08E         	movff	??_MyApp_Task,saveNumberInMemory@phoneNumber
  6221  001298  C114  F08F         	movff	??_MyApp_Task+1,saveNumberInMemory@phoneNumber+1
  6222  00129C  0E95               	movlw	_smsText& (0+255)
  6223  00129E  0F03               	addlw	3
  6224  0012A0  EC4D  F033         	call	_saveNumberInMemory
  6225                           
  6226                           ;app.c: 246: currentState = GATE_WAIT_EVENT;
  6227  0012A4  0E03               	movlw	3
  6228  0012A6  0101               	movlb	1	; () banked
  6229  0012A8  6FD6               	movwf	MyApp_Task@currentState& (0+255),b
  6230                           
  6231                           ; BSR set to: 1
  6232                           ;app.c: 247: }
  6233                           ;app.c: 248: break;
  6234                           
  6235                           ; BSR set to: 1
  6236  0012AA  0012               	return	
  6237  0012AC                     
  6238                           ; BSR set to: 1
  6239                           ;app.c: 251: numberInMemory = isNumberInMemory(GetCallerNumber());
  6240                           
  6241                           ; BSR set to: 1
  6242  0012AC  EC91  F030         	call	_GetCallerNumber	;wreg free
  6243  0012B0  C083  F100         	movff	?_GetCallerNumber,isNumberInMemory@phoneNumber
  6244  0012B4  C084  F101         	movff	?_GetCallerNumber+1,isNumberInMemory@phoneNumber+1
  6245  0012B8  EC31  F027         	call	_isNumberInMemory	;wreg free
  6246  0012BC  0101               	movlb	1	; () banked
  6247  0012BE  6F2A               	movwf	MyApp_Task@numberInMemory& (0+255),b
  6248                           
  6249                           ; BSR set to: 1
  6250                           ;app.c: 252: if (numberInMemory == 1)
  6251  0012C0  052A               	decf	MyApp_Task@numberInMemory& (0+255),w,b
  6252  0012C2  A4D8               	btfss	status,2,c
  6253  0012C4  D003               	goto	l2629
  6254                           
  6255                           ; BSR set to: 1
  6256                           ;app.c: 253: {
  6257                           ;app.c: 254: currentState = GATE_WAIT_EVENT;
  6258  0012C6  0E03               	movlw	3
  6259  0012C8  6FD6               	movwf	MyApp_Task@currentState& (0+255),b
  6260                           
  6261                           ;app.c: 255: }
  6262  0012CA  0012               	return	
  6263  0012CC                     l2629:
  6264                           
  6265                           ; BSR set to: 1
  6266                           ;app.c: 256: else if (numberInMemory != 0 && numberInMemory != 1)
  6267                           
  6268                           ; BSR set to: 1
  6269  0012CC  512A               	movf	MyApp_Task@numberInMemory& (0+255),w,b
  6270  0012CE  B4D8               	btfsc	status,2,c
  6271  0012D0  0012               	return	
  6272                           
  6273                           ; BSR set to: 1
  6274  0012D2  052A               	decf	MyApp_Task@numberInMemory& (0+255),w,b
  6275  0012D4  B4D8               	btfsc	status,2,c
  6276  0012D6  0012               	return	
  6277                           
  6278                           ; BSR set to: 1
  6279                           ;app.c: 257: {
  6280                           ;app.c: 258: saveNumberInMemory(numberInMemory, emptyNumber);
  6281  0012D8  0E15               	movlw	low MyApp_Task@emptyNumber
  6282  0012DA  0100               	movlb	0	; () banked
  6283  0012DC  6F8E               	movwf	saveNumberInMemory@phoneNumber& (0+255),b
  6284  0012DE  0E01               	movlw	high MyApp_Task@emptyNumber
  6285  0012E0  6F8F               	movwf	(saveNumberInMemory@phoneNumber+1)& (0+255),b
  6286  0012E2  0101               	movlb	1	; () banked
  6287  0012E4  512A               	movf	MyApp_Task@numberInMemory& (0+255),w,b
  6288  0012E6  EC4D  F033         	call	_saveNumberInMemory
  6289                           
  6290                           ;app.c: 259: currentState = GATE_WAIT_EVENT;
  6291  0012EA  0E03               	movlw	3
  6292  0012EC  0101               	movlb	1	; () banked
  6293  0012EE  6FD6               	movwf	MyApp_Task@currentState& (0+255),b
  6294                           
  6295                           ; BSR set to: 1
  6296                           ;app.c: 260: }
  6297                           ;app.c: 261: break;
  6298                           
  6299                           ; BSR set to: 1
  6300  0012F0  0012               	return	
  6301  0012F2                     
  6302                           ; BSR set to: 1
  6303                           ;app.c: 264: numberInMemory = isNumberInMemory(GetCallerNumber());
  6304                           
  6305                           ; BSR set to: 1
  6306  0012F2  EC91  F030         	call	_GetCallerNumber	;wreg free
  6307  0012F6  C083  F100         	movff	?_GetCallerNumber,isNumberInMemory@phoneNumber
  6308  0012FA  C084  F101         	movff	?_GetCallerNumber+1,isNumberInMemory@phoneNumber+1
  6309  0012FE  EC31  F027         	call	_isNumberInMemory	;wreg free
  6310  001302  0101               	movlb	1	; () banked
  6311  001304  6F2A               	movwf	MyApp_Task@numberInMemory& (0+255),b
  6312                           
  6313                           ; BSR set to: 1
  6314                           ;app.c: 265: if (numberInMemory == 1)
  6315  001306  052A               	decf	MyApp_Task@numberInMemory& (0+255),w,b
  6316  001308  A4D8               	btfss	status,2,c
  6317  00130A  D003               	goto	l2633
  6318                           
  6319                           ; BSR set to: 1
  6320                           ;app.c: 266: {
  6321                           ;app.c: 267: currentState = GATE_WAIT_EVENT;
  6322  00130C  0E03               	movlw	3
  6323  00130E  6FD6               	movwf	MyApp_Task@currentState& (0+255),b
  6324                           
  6325                           ;app.c: 268: }
  6326  001310  0012               	return	
  6327  001312                     l2633:
  6328                           
  6329                           ; BSR set to: 1
  6330                           ;app.c: 269: else if (numberInMemory != 0 && numberInMemory != 1)
  6331                           
  6332                           ; BSR set to: 1
  6333  001312  512A               	movf	MyApp_Task@numberInMemory& (0+255),w,b
  6334  001314  B4D8               	btfsc	status,2,c
  6335  001316  0012               	return	
  6336                           
  6337                           ; BSR set to: 1
  6338  001318  052A               	decf	MyApp_Task@numberInMemory& (0+255),w,b
  6339  00131A  B4D8               	btfsc	status,2,c
  6340  00131C  0012               	return	
  6341                           
  6342                           ; BSR set to: 1
  6343                           ;app.c: 270: {
  6344                           ;app.c: 271: currentState = GATE_ACTIVATE_RELAY;
  6345  00131E  0E08               	movlw	8
  6346  001320  6FD6               	movwf	MyApp_Task@currentState& (0+255),b
  6347                           
  6348                           ; BSR set to: 1
  6349                           ;app.c: 279: }
  6350                           
  6351                           ; BSR set to: 1
  6352                           ;app.c: 278: break;
  6353                           
  6354                           ;app.c: 277: default:
  6355                           
  6356                           ; BSR set to: 1
  6357                           ;app.c: 275: break;
  6358                           
  6359                           ;app.c: 272: }
  6360                           ;app.c: 274: case GATE_ACTIVATE_RELAY:
  6361                           
  6362                           ; BSR set to: 1
  6363                           
  6364                           ; BSR set to: 1
  6365  001322  0012               	return	
  6366  001324                     
  6367                           ; BSR set to: 1
  6368  001324  0101               	movlb	1	; () banked
  6369  001326  51D6               	movf	MyApp_Task@currentState& (0+255),w,b
  6370                           
  6371                           ; Switch size 1, requested type "space"
  6372                           ; Number of cases is 9, Range of values is 0 to 8
  6373                           ; switch strategies available:
  6374                           ; Name         Instructions Cycles
  6375                           ; simple_byte           28    15 (average)
  6376                           ;	Chosen strategy is simple_byte
  6377  001328  0A00               	xorlw	0	; case 0
  6378  00132A  B4D8               	btfsc	status,2,c
  6379  00132C  D6F9               	goto	l2605
  6380  00132E  0A01               	xorlw	1	; case 1
  6381  001330  B4D8               	btfsc	status,2,c
  6382  001332  D73F               	goto	l2614
  6383  001334  0A03               	xorlw	3	; case 2
  6384  001336  B4D8               	btfsc	status,2,c
  6385  001338  D749               	goto	l2615
  6386  00133A  0A01               	xorlw	1	; case 3
  6387  00133C  B4D8               	btfsc	status,2,c
  6388  00133E  D752               	goto	l2616
  6389  001340  0A07               	xorlw	7	; case 4
  6390  001342  B4D8               	btfsc	status,2,c
  6391  001344  D77B               	goto	l2620
  6392  001346  0A01               	xorlw	1	; case 5
  6393  001348  B4D8               	btfsc	status,2,c
  6394  00134A  D791               	goto	l2624
  6395  00134C  0A03               	xorlw	3	; case 6
  6396  00134E  B4D8               	btfsc	status,2,c
  6397  001350  D7AD               	goto	l2628
  6398  001352  0A01               	xorlw	1	; case 7
  6399  001354  B4D8               	btfsc	status,2,c
  6400  001356  D7CD               	goto	l2632
  6401  001358  0A0F               	xorlw	15	; case 8
  6402                           
  6403                           ; BSR set to: 1
  6404                           ;app.c: 285: }
  6405                           
  6406                           ; BSR set to: 1
  6407                           ;app.c: 284: break;
  6408                           
  6409                           ;app.c: 283: default:
  6410                           
  6411                           ; BSR set to: 1
  6412                           ;app.c: 280: break;
  6413  00135A  0012               	return	
  6414  00135C                     l2600:
  6415                           
  6416                           ; BSR set to: 1
  6417                           
  6418                           ; BSR set to: 1
  6419  00135C  0100               	movlb	0	; () banked
  6420  00135E  51D3               	movf	_SystemState& (0+255),w,b
  6421                           
  6422                           ; Switch size 1, requested type "space"
  6423                           ; Number of cases is 2, Range of values is 0 to 1
  6424                           ; switch strategies available:
  6425                           ; Name         Instructions Cycles
  6426                           ; simple_byte            7     4 (average)
  6427                           ;	Chosen strategy is simple_byte
  6428  001360  0A00               	xorlw	0	; case 0
  6429  001362  B4D8               	btfsc	status,2,c
  6430  001364  D6D0               	goto	l2601
  6431  001366  0A01               	xorlw	1	; case 1
  6432  001368  A4D8               	btfss	status,2,c
  6433  00136A  0012               	return	
  6434  00136C  D7DB               	goto	l2604
  6435  00136E                     __end_of_MyApp_Task:
  6436                           	opt stack 0
  6437                           tosu	equ	0xFFF
  6438                           tosh	equ	0xFFE
  6439                           tosl	equ	0xFFD
  6440                           pclath	equ	0xFFA
  6441                           tblptru	equ	0xFF8
  6442                           tblptrh	equ	0xFF7
  6443                           tblptrl	equ	0xFF6
  6444                           tablat	equ	0xFF5
  6445                           prodh	equ	0xFF4
  6446                           prodl	equ	0xFF3
  6447                           intcon	equ	0xFF2
  6448                           intcon2	equ	0xFF1
  6449                           intcon3	equ	0xFF0
  6450                           postinc0	equ	0xFEE
  6451                           wreg	equ	0xFE8
  6452                           postinc1	equ	0xFE6
  6453                           postdec1	equ	0xFE5
  6454                           fsr1h	equ	0xFE2
  6455                           fsr1l	equ	0xFE1
  6456                           indf2	equ	0xFDF
  6457                           postinc2	equ	0xFDE
  6458                           postdec2	equ	0xFDD
  6459                           fsr2h	equ	0xFDA
  6460                           fsr2l	equ	0xFD9
  6461                           status	equ	0xFD8
  6462                           
  6463 ;; *************** function _Term_MainTask *****************
  6464 ;; Defined at:
  6465 ;;		line 845 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/term.c"
  6466 ;; Parameters:    Size  Location     Type
  6467 ;;  Options         1    wreg     unsigned char 
  6468 ;; Auto vars:     Size  Location     Type
  6469 ;;  Options         1    0[COMRAM] unsigned char 
  6470 ;; Return value:  Size  Location     Type
  6471 ;;                  1    wreg      void 
  6472 ;; Registers used:
  6473 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6474 ;; Tracked objects:
  6475 ;;		On entry : 0/0
  6476 ;;		On exit  : 0/0
  6477 ;;		Unchanged: 0/0
  6478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6479 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6480 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6481 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6482 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6483 ;;Total ram usage:        0 bytes
  6484 ;; Hardware stack levels used:    1
  6485 ;; Hardware stack levels required when called:   17
  6486 ;; This function calls:
  6487 ;;		_Term_MainSm
  6488 ;; This function is called by:
  6489 ;;		_InitializeTasks
  6490 ;;		_ScheduleTasks
  6491 ;; This function uses a non-reentrant model
  6492 ;;
  6493                           
  6494                           	psect	text17
  6495  006680                     __ptext17:
  6496                           	opt stack 0
  6497  006680                     _Term_MainTask:
  6498                           	opt stack 11
  6499                           
  6500                           ;term.c: 847: switch (SystemState)
  6501                           
  6502                           ;incstack = 0
  6503  006680  D003               	goto	l2478
  6504  006682                     
  6505                           ;term.c: 858: Term_MainSm();
  6506  006682  ECB7  F009         	call	_Term_MainSm	;wreg free
  6507                           
  6508                           ;term.c: 865: }
  6509                           
  6510                           ;term.c: 864: break;
  6511                           
  6512                           ;term.c: 863: default:
  6513                           
  6514                           ;term.c: 860: break;
  6515  006686  0012               	return	
  6516  006688                     l2478:
  6517  006688  0100               	movlb	0	; () banked
  6518  00668A  51D3               	movf	_SystemState& (0+255),w,b
  6519                           
  6520                           ; Switch size 1, requested type "space"
  6521                           ; Number of cases is 2, Range of values is 0 to 1
  6522                           ; switch strategies available:
  6523                           ; Name         Instructions Cycles
  6524                           ; simple_byte            7     4 (average)
  6525                           ;	Chosen strategy is simple_byte
  6526  00668C  0A00               	xorlw	0	; case 0
  6527  00668E  B4D8               	btfsc	status,2,c
  6528  006690  0012               	return	
  6529  006692  0A01               	xorlw	1	; case 1
  6530  006694  A4D8               	btfss	status,2,c
  6531  006696  0012               	return	
  6532  006698  D7F4               	goto	l2481
  6533  00669A                     __end_of_Term_MainTask:
  6534                           	opt stack 0
  6535                           tosu	equ	0xFFF
  6536                           tosh	equ	0xFFE
  6537                           tosl	equ	0xFFD
  6538                           pclath	equ	0xFFA
  6539                           tblptru	equ	0xFF8
  6540                           tblptrh	equ	0xFF7
  6541                           tblptrl	equ	0xFF6
  6542                           tablat	equ	0xFF5
  6543                           prodh	equ	0xFF4
  6544                           prodl	equ	0xFF3
  6545                           intcon	equ	0xFF2
  6546                           intcon2	equ	0xFF1
  6547                           intcon3	equ	0xFF0
  6548                           postinc0	equ	0xFEE
  6549                           wreg	equ	0xFE8
  6550                           postinc1	equ	0xFE6
  6551                           postdec1	equ	0xFE5
  6552                           fsr1h	equ	0xFE2
  6553                           fsr1l	equ	0xFE1
  6554                           indf2	equ	0xFDF
  6555                           postinc2	equ	0xFDE
  6556                           postdec2	equ	0xFDD
  6557                           fsr2h	equ	0xFDA
  6558                           fsr2l	equ	0xFD9
  6559                           status	equ	0xFD8
  6560                           
  6561 ;; *************** function _Rtcm_MainTask *****************
  6562 ;; Defined at:
  6563 ;;		line 99 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/rtcm.c"
  6564 ;; Parameters:    Size  Location     Type
  6565 ;;  Options         1    wreg     unsigned char 
  6566 ;; Auto vars:     Size  Location     Type
  6567 ;;  Options         1    0[COMRAM] unsigned char 
  6568 ;; Return value:  Size  Location     Type
  6569 ;;                  1    wreg      void 
  6570 ;; Registers used:
  6571 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6572 ;; Tracked objects:
  6573 ;;		On entry : 0/0
  6574 ;;		On exit  : 0/0
  6575 ;;		Unchanged: 0/0
  6576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6577 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6578 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6580 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6581 ;;Total ram usage:        0 bytes
  6582 ;; Hardware stack levels used:    1
  6583 ;; Hardware stack levels required when called:   14
  6584 ;; This function calls:
  6585 ;;		_Rtcc_AlarmConfig
  6586 ;;		_Rtcc_LockRtc
  6587 ;;		_Rtcc_RtcConfig
  6588 ;;		_Rtcc_SetRtcStatus
  6589 ;;		_Rtcc_UnlockRtc
  6590 ;;		_Rtcm_GetRtccDate
  6591 ;;		_Rtcm_SetRtccDate
  6592 ;; This function is called by:
  6593 ;;		_InitializeTasks
  6594 ;;		_ScheduleTasks
  6595 ;; This function uses a non-reentrant model
  6596 ;;
  6597                           
  6598                           	psect	text18
  6599  004D48                     __ptext18:
  6600                           	opt stack 0
  6601  004D48                     _Rtcm_MainTask:
  6602                           	opt stack 14
  6603                           
  6604                           ;rtcm.c: 101: switch (SystemState)
  6605                           
  6606                           ;incstack = 0
  6607  004D48  D03D               	goto	l2208
  6608  004D4A                     l2209:
  6609                           
  6610                           ; BSR set to: 0
  6611                           ;rtcm.c: 106: T1CONbits.T1OSCEN = 1u;
  6612  004D4A  86CD               	bsf	4045,3,c	;volatile
  6613                           
  6614                           ; BSR set to: 0
  6615                           ;rtcm.c: 108: RtcConfig.RtcOutPinEnable = 0u;
  6616  004D4C  0E00               	movlw	0
  6617  004D4E  0103               	movlb	3	; () banked
  6618  004D50  6FAF               	movwf	_RtcConfig& (0+255),b
  6619                           
  6620                           ;rtcm.c: 109: RtcConfig.RtcOutputSelectBit = RtccAlarmPulseOnRtccPin;
  6621  004D52  0E00               	movlw	0
  6622  004D54  6FB0               	movwf	(_RtcConfig+1)& (0+255),b
  6623                           
  6624                           ;rtcm.c: 110: RtcConfig.IntEnable = EnableInt;
  6625  004D56  0E01               	movlw	1
  6626  004D58  6FB1               	movwf	(_RtcConfig+2)& (0+255),b
  6627                           
  6628                           ;rtcm.c: 111: RtcConfig.IntPriority = 1u;
  6629  004D5A  0E01               	movlw	1
  6630  004D5C  6FB2               	movwf	(_RtcConfig+3)& (0+255),b
  6631                           
  6632                           ;rtcm.c: 114: AlCfg.RtcAlarmEnable = 1u;
  6633  004D5E  0E01               	movlw	1
  6634  004D60  6FAB               	movwf	_AlCfg& (0+255),b
  6635                           
  6636                           ;rtcm.c: 115: AlCfg.RtcChimeEnable = 1u;
  6637  004D62  0E01               	movlw	1
  6638  004D64  6FAC               	movwf	(_AlCfg+1)& (0+255),b
  6639                           
  6640                           ;rtcm.c: 116: AlCfg.AlarmMask = EverySecond;
  6641  004D66  0E01               	movlw	1
  6642  004D68  6FAD               	movwf	(_AlCfg+2)& (0+255),b
  6643                           
  6644                           ;rtcm.c: 117: AlCfg.AlarmRepeat = 0;
  6645  004D6A  0E00               	movlw	0
  6646  004D6C  6FAE               	movwf	(_AlCfg+3)& (0+255),b
  6647                           
  6648                           ; BSR set to: 3
  6649                           ;rtcm.c: 120: Rtcc_UnlockRtc();
  6650  004D6E  ECDC  F033         	call	_Rtcc_UnlockRtc	;wreg free
  6651                           
  6652                           ;rtcm.c: 122: Rtcc_RtcConfig(&RtcConfig);
  6653  004D72  0EAF               	movlw	low _RtcConfig
  6654  004D74  0100               	movlb	0	; () banked
  6655  004D76  6F7E               	movwf	Rtcc_RtcConfig@RtcConfig& (0+255),b
  6656  004D78  0E03               	movlw	high _RtcConfig
  6657  004D7A  6F7F               	movwf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),b
  6658  004D7C  ECFF  F023         	call	_Rtcc_RtcConfig	;wreg free
  6659                           
  6660                           ;rtcm.c: 123: Rtcc_AlarmConfig(&AlCfg);
  6661  004D80  0EAB               	movlw	low _AlCfg
  6662  004D82  0100               	movlb	0	; () banked
  6663  004D84  6F7D               	movwf	Rtcc_AlarmConfig@AlarmConfig& (0+255),b
  6664  004D86  0E03               	movlw	high _AlCfg
  6665  004D88  6F7E               	movwf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),b
  6666  004D8A  EC61  F029         	call	_Rtcc_AlarmConfig	;wreg free
  6667                           
  6668                           ;rtcm.c: 125: Rtcc_SetRtcStatus(1u);
  6669  004D8E  0E01               	movlw	1
  6670  004D90  EC8B  F033         	call	_Rtcc_SetRtcStatus
  6671                           
  6672                           ;rtcm.c: 127: Rtcc_LockRtc();
  6673  004D94  ECE4  F033         	call	_Rtcc_LockRtc	;wreg free
  6674                           
  6675                           ;rtcm.c: 129: Rtcm_SetRtccDate(Rtcm_SystemDate);
  6676  004D98  EE23  F000         	lfsr	2,_Rtcm_SystemDate
  6677  004D9C  EE00  F089         	lfsr	0,Rtcm_SetRtccDate@Date
  6678  004DA0  0E07               	movlw	7
  6679  004DA2                     u15691:
  6680  004DA2  CFDB FFEB          	movff	plusw2,plusw0
  6681  004DA6  06E8               	decf	wreg,f,c
  6682  004DA8  E2FC               	bc	u15691
  6683  004DAA  EC2F  F02C         	call	_Rtcm_SetRtccDate	;wreg free
  6684                           
  6685                           ;rtcm.c: 154: break;
  6686  004DAE  0012               	return	
  6687  004DB0                     
  6688                           ;rtcm.c: 159: Rtcm_SystemDate = Rtcm_GetRtccDate();
  6689  004DB0  EC32  F02A         	call	_Rtcm_GetRtccDate	;wreg free
  6690  004DB4  EE23  F000         	lfsr	2,_Rtcm_SystemDate
  6691  004DB8  0E07               	movlw	7
  6692  004DBA                     u15701:
  6693  004DBA  CFEB FFDB          	movff	plusw0,plusw2
  6694  004DBE  06E8               	decf	wreg,f,c
  6695  004DC0  E2FC               	bc	u15701
  6696                           
  6697                           ;rtcm.c: 165: }
  6698                           
  6699                           ;rtcm.c: 164: break;
  6700                           
  6701                           ;rtcm.c: 163: default:
  6702                           
  6703                           ;rtcm.c: 160: break;
  6704  004DC2  0012               	return	
  6705  004DC4                     l2208:
  6706  004DC4  0100               	movlb	0	; () banked
  6707  004DC6  51D3               	movf	_SystemState& (0+255),w,b
  6708                           
  6709                           ; Switch size 1, requested type "space"
  6710                           ; Number of cases is 2, Range of values is 0 to 1
  6711                           ; switch strategies available:
  6712                           ; Name         Instructions Cycles
  6713                           ; simple_byte            7     4 (average)
  6714                           ;	Chosen strategy is simple_byte
  6715  004DC8  0A00               	xorlw	0	; case 0
  6716  004DCA  B4D8               	btfsc	status,2,c
  6717  004DCC  D7BE               	goto	l2209
  6718  004DCE  0A01               	xorlw	1	; case 1
  6719  004DD0  A4D8               	btfss	status,2,c
  6720  004DD2  0012               	return	
  6721  004DD4  D7ED               	goto	l2211
  6722  004DD6                     __end_of_Rtcm_MainTask:
  6723                           	opt stack 0
  6724                           tosu	equ	0xFFF
  6725                           tosh	equ	0xFFE
  6726                           tosl	equ	0xFFD
  6727                           pclath	equ	0xFFA
  6728                           tblptru	equ	0xFF8
  6729                           tblptrh	equ	0xFF7
  6730                           tblptrl	equ	0xFF6
  6731                           tablat	equ	0xFF5
  6732                           prodh	equ	0xFF4
  6733                           prodl	equ	0xFF3
  6734                           intcon	equ	0xFF2
  6735                           intcon2	equ	0xFF1
  6736                           intcon3	equ	0xFF0
  6737                           postinc0	equ	0xFEE
  6738                           plusw0	equ	0xFEB
  6739                           wreg	equ	0xFE8
  6740                           postinc1	equ	0xFE6
  6741                           postdec1	equ	0xFE5
  6742                           fsr1h	equ	0xFE2
  6743                           fsr1l	equ	0xFE1
  6744                           indf2	equ	0xFDF
  6745                           postinc2	equ	0xFDE
  6746                           postdec2	equ	0xFDD
  6747                           plusw2	equ	0xFDB
  6748                           fsr2h	equ	0xFDA
  6749                           fsr2l	equ	0xFD9
  6750                           status	equ	0xFD8
  6751                           
  6752 ;; *************** function _Led_MainTask *****************
  6753 ;; Defined at:
  6754 ;;		line 298 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
  6755 ;; Parameters:    Size  Location     Type
  6756 ;;  Options         1    wreg     unsigned char 
  6757 ;; Auto vars:     Size  Location     Type
  6758 ;;  Options         1    0[COMRAM] unsigned char 
  6759 ;; Return value:  Size  Location     Type
  6760 ;;                  1    wreg      void 
  6761 ;; Registers used:
  6762 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6763 ;; Tracked objects:
  6764 ;;		On entry : 0/0
  6765 ;;		On exit  : 0/0
  6766 ;;		Unchanged: 0/0
  6767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6768 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6769 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6770 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6771 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6772 ;;Total ram usage:        1 bytes
  6773 ;; Hardware stack levels used:    1
  6774 ;; Hardware stack levels required when called:   14
  6775 ;; This function calls:
  6776 ;;		_LedStateMachine
  6777 ;; This function is called by:
  6778 ;;		_InitializeTasks
  6779 ;;		_ScheduleTasks
  6780 ;; This function uses a non-reentrant model
  6781 ;;
  6782                           
  6783                           	psect	text19
  6784  003BA8                     __ptext19:
  6785                           	opt stack 0
  6786  003BA8                     _Led_MainTask:
  6787                           	opt stack 14
  6788                           
  6789                           ;led.c: 300: switch (SystemState)
  6790                           
  6791                           ;incstack = 0
  6792  003BA8  D05C               	goto	l2122
  6793  003BAA                     l2123:
  6794                           
  6795                           ; BSR set to: 0
  6796                           ;led.c: 305: TRISDbits.TRISD4 = ((UINT8)(0));
  6797  003BAA  9895               	bcf	3989,4,c	;volatile
  6798                           
  6799                           ;led.c: 306: TRISDbits.TRISD5 = ((UINT8)(0));
  6800  003BAC  9A95               	bcf	3989,5,c	;volatile
  6801                           
  6802                           ;led.c: 307: TRISDbits.TRISD6 = ((UINT8)(0));
  6803  003BAE  9C95               	bcf	3989,6,c	;volatile
  6804                           
  6805                           ;led.c: 308: PORTDbits.RD4 = ((UINT8)(0));
  6806  003BB0  9883               	bcf	3971,4,c	;volatile
  6807                           
  6808                           ;led.c: 309: PORTDbits.RD5 = ((UINT8)(0));
  6809  003BB2  9A83               	bcf	3971,5,c	;volatile
  6810                           
  6811                           ;led.c: 310: PORTDbits.RD6 = ((UINT8)(0));
  6812  003BB4  9C83               	bcf	3971,6,c	;volatile
  6813                           
  6814                           ;led.c: 311: break;
  6815  003BB6  0012               	return	
  6816  003BB8                     
  6817                           ; BSR set to: 0
  6818                           ;led.c: 316: PORTDbits.RD4 = LedStateMachine(1u,&Led1Sts,&Led1OutSts,&Led1Blink,&Led1Pul
      +                          se);
  6819                           
  6820                           ; BSR set to: 0
  6821  003BB8  0EFB               	movlw	low _Led1Sts
  6822  003BBA  6F8F               	movwf	LedStateMachine@LedSts& (0+255),b
  6823  003BBC  0E01               	movlw	high _Led1Sts
  6824  003BBE  6F90               	movwf	(LedStateMachine@LedSts+1)& (0+255),b
  6825  003BC0  0EFA               	movlw	low _Led1OutSts
  6826  003BC2  6F91               	movwf	LedStateMachine@LedOut& (0+255),b
  6827  003BC4  0E01               	movlw	high _Led1OutSts
  6828  003BC6  6F92               	movwf	(LedStateMachine@LedOut+1)& (0+255),b
  6829  003BC8  0E64               	movlw	low _Led1Blink
  6830  003BCA  6F93               	movwf	LedStateMachine@LedBlink& (0+255),b
  6831  003BCC  0E03               	movlw	high _Led1Blink
  6832  003BCE  6F94               	movwf	(LedStateMachine@LedBlink+1)& (0+255),b
  6833  003BD0  0E88               	movlw	low _Led1Pulse
  6834  003BD2  6F95               	movwf	LedStateMachine@LedPulse& (0+255),b
  6835  003BD4  0E03               	movlw	high _Led1Pulse
  6836  003BD6  6F96               	movwf	(LedStateMachine@LedPulse+1)& (0+255),b
  6837  003BD8  0E01               	movlw	1
  6838  003BDA  EC5A  F023         	call	_LedStateMachine
  6839  003BDE  0100               	movlb	0	; () banked
  6840  003BE0  6F9A               	movwf	??_Led_MainTask& (0+255),b
  6841  003BE2  3B9A               	swapf	??_Led_MainTask& (0+255),f,b
  6842  003BE4  5083               	movf	3971,w,c	;volatile
  6843  003BE6  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6844  003BE8  0BEF               	andlw	-17
  6845  003BEA  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6846  003BEC  6E83               	movwf	3971,c	;volatile
  6847                           
  6848                           ;led.c: 318: PORTDbits.RD5 = LedStateMachine(2u,&Led2Sts,&Led2OutSts,&Led2Blink,&Led2Pul
      +                          se);
  6849  003BEE  0EF9               	movlw	low _Led2Sts
  6850  003BF0  6F8F               	movwf	LedStateMachine@LedSts& (0+255),b
  6851  003BF2  0E01               	movlw	high _Led2Sts
  6852  003BF4  6F90               	movwf	(LedStateMachine@LedSts+1)& (0+255),b
  6853  003BF6  0EF8               	movlw	low _Led2OutSts
  6854  003BF8  6F91               	movwf	LedStateMachine@LedOut& (0+255),b
  6855  003BFA  0E01               	movlw	high _Led2OutSts
  6856  003BFC  6F92               	movwf	(LedStateMachine@LedOut+1)& (0+255),b
  6857  003BFE  0E5B               	movlw	low _Led2Blink
  6858  003C00  6F93               	movwf	LedStateMachine@LedBlink& (0+255),b
  6859  003C02  0E03               	movlw	high _Led2Blink
  6860  003C04  6F94               	movwf	(LedStateMachine@LedBlink+1)& (0+255),b
  6861  003C06  0E82               	movlw	low _Led2Pulse
  6862  003C08  6F95               	movwf	LedStateMachine@LedPulse& (0+255),b
  6863  003C0A  0E03               	movlw	high _Led2Pulse
  6864  003C0C  6F96               	movwf	(LedStateMachine@LedPulse+1)& (0+255),b
  6865  003C0E  0E02               	movlw	2
  6866  003C10  EC5A  F023         	call	_LedStateMachine
  6867  003C14  0100               	movlb	0	; () banked
  6868  003C16  6F9A               	movwf	??_Led_MainTask& (0+255),b
  6869  003C18  3B9A               	swapf	??_Led_MainTask& (0+255),f,b
  6870  003C1A  479A               	rlncf	??_Led_MainTask& (0+255),f,b
  6871  003C1C  5083               	movf	3971,w,c	;volatile
  6872  003C1E  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6873  003C20  0BDF               	andlw	-33
  6874  003C22  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6875  003C24  6E83               	movwf	3971,c	;volatile
  6876                           
  6877                           ;led.c: 320: PORTDbits.RD6 = LedStateMachine(3u,&Led3Sts,&Led3OutSts,&Led3Blink,&Led3Pul
      +                          se);
  6878  003C26  0EF7               	movlw	low _Led3Sts
  6879  003C28  6F8F               	movwf	LedStateMachine@LedSts& (0+255),b
  6880  003C2A  0E01               	movlw	high _Led3Sts
  6881  003C2C  6F90               	movwf	(LedStateMachine@LedSts+1)& (0+255),b
  6882  003C2E  0EF6               	movlw	low _Led3OutSts
  6883  003C30  6F91               	movwf	LedStateMachine@LedOut& (0+255),b
  6884  003C32  0E01               	movlw	high _Led3OutSts
  6885  003C34  6F92               	movwf	(LedStateMachine@LedOut+1)& (0+255),b
  6886  003C36  0E52               	movlw	low _Led3Blink
  6887  003C38  6F93               	movwf	LedStateMachine@LedBlink& (0+255),b
  6888  003C3A  0E03               	movlw	high _Led3Blink
  6889  003C3C  6F94               	movwf	(LedStateMachine@LedBlink+1)& (0+255),b
  6890  003C3E  0E7C               	movlw	low _Led3Pulse
  6891  003C40  6F95               	movwf	LedStateMachine@LedPulse& (0+255),b
  6892  003C42  0E03               	movlw	high _Led3Pulse
  6893  003C44  6F96               	movwf	(LedStateMachine@LedPulse+1)& (0+255),b
  6894  003C46  0E03               	movlw	3
  6895  003C48  EC5A  F023         	call	_LedStateMachine
  6896  003C4C  0100               	movlb	0	; () banked
  6897  003C4E  6F9A               	movwf	??_Led_MainTask& (0+255),b
  6898  003C50  3B9A               	swapf	??_Led_MainTask& (0+255),f,b
  6899  003C52  479A               	rlncf	??_Led_MainTask& (0+255),f,b
  6900  003C54  479A               	rlncf	??_Led_MainTask& (0+255),f,b
  6901  003C56  5083               	movf	3971,w,c	;volatile
  6902  003C58  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6903  003C5A  0BBF               	andlw	-65
  6904  003C5C  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6905  003C5E  6E83               	movwf	3971,c	;volatile
  6906                           
  6907                           ; BSR set to: 0
  6908                           ;led.c: 326: }
  6909                           
  6910                           ; BSR set to: 0
  6911                           ;led.c: 325: break;
  6912                           
  6913                           ;led.c: 324: default:
  6914                           
  6915                           ;led.c: 321: break;
  6916  003C60  0012               	return	
  6917  003C62                     l2122:
  6918                           
  6919                           ; BSR set to: 0
  6920  003C62  0100               	movlb	0	; () banked
  6921  003C64  51D3               	movf	_SystemState& (0+255),w,b
  6922                           
  6923                           ; Switch size 1, requested type "space"
  6924                           ; Number of cases is 2, Range of values is 0 to 1
  6925                           ; switch strategies available:
  6926                           ; Name         Instructions Cycles
  6927                           ; simple_byte            7     4 (average)
  6928                           ;	Chosen strategy is simple_byte
  6929  003C66  0A00               	xorlw	0	; case 0
  6930  003C68  B4D8               	btfsc	status,2,c
  6931  003C6A  D79F               	goto	l2123
  6932  003C6C  0A01               	xorlw	1	; case 1
  6933  003C6E  A4D8               	btfss	status,2,c
  6934  003C70  0012               	return	
  6935  003C72  D7A2               	goto	l2125
  6936  003C74                     __end_of_Led_MainTask:
  6937                           	opt stack 0
  6938                           tosu	equ	0xFFF
  6939                           tosh	equ	0xFFE
  6940                           tosl	equ	0xFFD
  6941                           pclath	equ	0xFFA
  6942                           tblptru	equ	0xFF8
  6943                           tblptrh	equ	0xFF7
  6944                           tblptrl	equ	0xFF6
  6945                           tablat	equ	0xFF5
  6946                           prodh	equ	0xFF4
  6947                           prodl	equ	0xFF3
  6948                           intcon	equ	0xFF2
  6949                           intcon2	equ	0xFF1
  6950                           intcon3	equ	0xFF0
  6951                           postinc0	equ	0xFEE
  6952                           plusw0	equ	0xFEB
  6953                           wreg	equ	0xFE8
  6954                           postinc1	equ	0xFE6
  6955                           postdec1	equ	0xFE5
  6956                           fsr1h	equ	0xFE2
  6957                           fsr1l	equ	0xFE1
  6958                           indf2	equ	0xFDF
  6959                           postinc2	equ	0xFDE
  6960                           postdec2	equ	0xFDD
  6961                           plusw2	equ	0xFDB
  6962                           fsr2h	equ	0xFDA
  6963                           fsr2l	equ	0xFD9
  6964                           status	equ	0xFD8
  6965                           
  6966 ;; *************** function _UsbDevice_MainTask *****************
  6967 ;; Defined at:
  6968 ;;		line 72 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_mgr.c"
  6969 ;; Parameters:    Size  Location     Type
  6970 ;;  Options         1    wreg     unsigned char 
  6971 ;; Auto vars:     Size  Location     Type
  6972 ;;  Options         1    0[COMRAM] unsigned char 
  6973 ;; Return value:  Size  Location     Type
  6974 ;;                  1    wreg      void 
  6975 ;; Registers used:
  6976 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6977 ;; Tracked objects:
  6978 ;;		On entry : 0/0
  6979 ;;		On exit  : 0/0
  6980 ;;		Unchanged: 0/0
  6981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6982 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6983 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6985 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6986 ;;Total ram usage:        0 bytes
  6987 ;; Hardware stack levels used:    1
  6988 ;; Hardware stack levels required when called:   20
  6989 ;; This function calls:
  6990 ;;		_CDCTxService
  6991 ;;		_USBDeviceInit
  6992 ;;		_USBDeviceTasks
  6993 ;; This function is called by:
  6994 ;;		_InitializeTasks
  6995 ;;		_ScheduleTasks
  6996 ;; This function uses a non-reentrant model
  6997 ;;
  6998                           
  6999                           	psect	text20
  7000  006436                     __ptext20:
  7001                           	opt stack 0
  7002  006436                     _UsbDevice_MainTask:
  7003                           	opt stack 8
  7004                           
  7005                           ;usb_device_mgr.c: 74: switch (SystemState)
  7006                           
  7007                           ; BSR set to: 0
  7008                           ;incstack = 0
  7009  006436  D008               	goto	l1989
  7010  006438                     
  7011                           ;usb_device_mgr.c: 79: USBDeviceInit();
  7012  006438  EC72  F013         	call	_USBDeviceInit	;wreg free
  7013                           
  7014                           ;usb_device_mgr.c: 80: ;
  7015                           ;usb_device_mgr.c: 81: break;
  7016  00643C  0012               	return	
  7017  00643E                     
  7018                           ;usb_device_mgr.c: 86: USBDeviceTasks();
  7019  00643E  EC31  F00F         	call	_USBDeviceTasks	;wreg free
  7020                           
  7021                           ;usb_device_mgr.c: 90: CDCTxService();
  7022  006442  EC68  F015         	call	_CDCTxService	;wreg free
  7023                           
  7024                           ;usb_device_mgr.c: 101: }
  7025                           
  7026                           ;usb_device_mgr.c: 100: break;
  7027                           
  7028                           ;usb_device_mgr.c: 99: default:
  7029                           
  7030                           ;usb_device_mgr.c: 96: break;
  7031  006446  0012               	return	
  7032  006448                     l1989:
  7033  006448  0100               	movlb	0	; () banked
  7034  00644A  51D3               	movf	_SystemState& (0+255),w,b
  7035                           
  7036                           ; Switch size 1, requested type "space"
  7037                           ; Number of cases is 2, Range of values is 0 to 1
  7038                           ; switch strategies available:
  7039                           ; Name         Instructions Cycles
  7040                           ; simple_byte            7     4 (average)
  7041                           ;	Chosen strategy is simple_byte
  7042  00644C  0A00               	xorlw	0	; case 0
  7043  00644E  B4D8               	btfsc	status,2,c
  7044  006450  D7F3               	goto	l1990
  7045  006452  0A01               	xorlw	1	; case 1
  7046  006454  A4D8               	btfss	status,2,c
  7047  006456  0012               	return	
  7048  006458  D7F2               	goto	l1992
  7049  00645A                     __end_of_UsbDevice_MainTask:
  7050                           	opt stack 0
  7051                           tosu	equ	0xFFF
  7052                           tosh	equ	0xFFE
  7053                           tosl	equ	0xFFD
  7054                           pclath	equ	0xFFA
  7055                           tblptru	equ	0xFF8
  7056                           tblptrh	equ	0xFF7
  7057                           tblptrl	equ	0xFF6
  7058                           tablat	equ	0xFF5
  7059                           prodh	equ	0xFF4
  7060                           prodl	equ	0xFF3
  7061                           intcon	equ	0xFF2
  7062                           intcon2	equ	0xFF1
  7063                           intcon3	equ	0xFF0
  7064                           postinc0	equ	0xFEE
  7065                           plusw0	equ	0xFEB
  7066                           wreg	equ	0xFE8
  7067                           postinc1	equ	0xFE6
  7068                           postdec1	equ	0xFE5
  7069                           fsr1h	equ	0xFE2
  7070                           fsr1l	equ	0xFE1
  7071                           indf2	equ	0xFDF
  7072                           postinc2	equ	0xFDE
  7073                           postdec2	equ	0xFDD
  7074                           plusw2	equ	0xFDB
  7075                           fsr2h	equ	0xFDA
  7076                           fsr2l	equ	0xFD9
  7077                           status	equ	0xFD8
  7078                           
  7079 ;; *************** function _MdmHttp_MainTask *****************
  7080 ;; Defined at:
  7081 ;;		line 557 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs_http.c"
  7082 ;; Parameters:    Size  Location     Type
  7083 ;;  Options         1    wreg     unsigned char 
  7084 ;; Auto vars:     Size  Location     Type
  7085 ;;  Options         1    0[COMRAM] unsigned char 
  7086 ;; Return value:  Size  Location     Type
  7087 ;;                  1    wreg      void 
  7088 ;; Registers used:
  7089 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7090 ;; Tracked objects:
  7091 ;;		On entry : 0/0
  7092 ;;		On exit  : 0/0
  7093 ;;		Unchanged: 0/0
  7094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7095 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7096 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7097 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7098 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7099 ;;Total ram usage:        0 bytes
  7100 ;; Hardware stack levels used:    1
  7101 ;; Hardware stack levels required when called:   15
  7102 ;; This function calls:
  7103 ;;		_HttpGetMethod
  7104 ;;		_InitGprsNetwork
  7105 ;; This function is called by:
  7106 ;;		_InitializeTasks
  7107 ;;		_ScheduleTasks
  7108 ;; This function uses a non-reentrant model
  7109 ;;
  7110                           
  7111                           	psect	text21
  7112  005D9E                     __ptext21:
  7113                           	opt stack 0
  7114  005D9E                     _MdmHttp_MainTask:
  7115                           	opt stack 13
  7116                           
  7117                           ;mdm_gsm_gprs_http.c: 559: switch (SystemState)
  7118                           
  7119                           ;incstack = 0
  7120  005D9E  D019               	goto	l1288
  7121  005DA0                     
  7122                           ;mdm_gsm_gprs_http.c: 569: if (MdmStatus == ModemConfigured)
  7123  005DA0  0E03               	movlw	3
  7124  005DA2  0100               	movlb	0	; () banked
  7125  005DA4  19D0               	xorwf	_MdmStatus& (0+255),w,b
  7126  005DA6  A4D8               	btfss	status,2,c
  7127  005DA8  0012               	return	
  7128                           
  7129                           ; BSR set to: 0
  7130                           ;mdm_gsm_gprs_http.c: 570: {
  7131                           ;mdm_gsm_gprs_http.c: 572: GprsNetworkSts = InitGprsNetwork(ApnLocal,ApnLenLocal);
  7132  005DAA  C324  F09B         	movff	_ApnLocal,InitGprsNetwork@Apn
  7133  005DAE  C325  F09C         	movff	_ApnLocal+1,InitGprsNetwork@Apn+1
  7134  005DB2  C1EE  F09D         	movff	_ApnLenLocal,InitGprsNetwork@ApnLen
  7135  005DB6  ECE4  F006         	call	_InitGprsNetwork	;wreg free
  7136  005DBA  0101               	movlb	1	; () banked
  7137  005DBC  6FED               	movwf	_GprsNetworkSts& (0+255),b
  7138                           
  7139                           ;mdm_gsm_gprs_http.c: 574: HttpGetMethodSts = HttpGetMethod(&HttpGetDataLocal);
  7140  005DBE  0E9E               	movlw	low _HttpGetDataLocal
  7141  005DC0  0100               	movlb	0	; () banked
  7142  005DC2  6F9B               	movwf	HttpGetMethod@GetData& (0+255),b
  7143  005DC4  0E03               	movlw	high _HttpGetDataLocal
  7144  005DC6  6F9C               	movwf	(HttpGetMethod@GetData+1)& (0+255),b
  7145  005DC8  ECF6  F002         	call	_HttpGetMethod	;wreg free
  7146  005DCC  0101               	movlb	1	; () banked
  7147  005DCE  6FEC               	movwf	_HttpGetMethodSts& (0+255),b
  7148                           
  7149                           ; BSR set to: 1
  7150                           ;mdm_gsm_gprs_http.c: 581: }
  7151                           
  7152                           ; BSR set to: 1
  7153                           ;mdm_gsm_gprs_http.c: 580: break;
  7154                           
  7155                           ;mdm_gsm_gprs_http.c: 579: default:
  7156                           
  7157                           ; BSR set to: 1
  7158                           ;mdm_gsm_gprs_http.c: 575: }
  7159                           ;mdm_gsm_gprs_http.c: 576: break;
  7160  005DD0  0012               	return	
  7161  005DD2                     l1288:
  7162                           
  7163                           ; BSR set to: 1
  7164  005DD2  0100               	movlb	0	; () banked
  7165  005DD4  51D3               	movf	_SystemState& (0+255),w,b
  7166                           
  7167                           ; Switch size 1, requested type "space"
  7168                           ; Number of cases is 2, Range of values is 0 to 1
  7169                           ; switch strategies available:
  7170                           ; Name         Instructions Cycles
  7171                           ; simple_byte            7     4 (average)
  7172                           ;	Chosen strategy is simple_byte
  7173  005DD6  0A00               	xorlw	0	; case 0
  7174  005DD8  B4D8               	btfsc	status,2,c
  7175  005DDA  0012               	return	
  7176  005DDC  0A01               	xorlw	1	; case 1
  7177  005DDE  A4D8               	btfss	status,2,c
  7178  005DE0  0012               	return	
  7179  005DE2  D7DE               	goto	l1291
  7180  005DE4                     __end_of_MdmHttp_MainTask:
  7181                           	opt stack 0
  7182                           tosu	equ	0xFFF
  7183                           tosh	equ	0xFFE
  7184                           tosl	equ	0xFFD
  7185                           pclath	equ	0xFFA
  7186                           tblptru	equ	0xFF8
  7187                           tblptrh	equ	0xFF7
  7188                           tblptrl	equ	0xFF6
  7189                           tablat	equ	0xFF5
  7190                           prodh	equ	0xFF4
  7191                           prodl	equ	0xFF3
  7192                           intcon	equ	0xFF2
  7193                           intcon2	equ	0xFF1
  7194                           intcon3	equ	0xFF0
  7195                           postinc0	equ	0xFEE
  7196                           plusw0	equ	0xFEB
  7197                           wreg	equ	0xFE8
  7198                           postinc1	equ	0xFE6
  7199                           postdec1	equ	0xFE5
  7200                           fsr1h	equ	0xFE2
  7201                           fsr1l	equ	0xFE1
  7202                           indf2	equ	0xFDF
  7203                           postinc2	equ	0xFDE
  7204                           postdec2	equ	0xFDD
  7205                           plusw2	equ	0xFDB
  7206                           fsr2h	equ	0xFDA
  7207                           fsr2l	equ	0xFD9
  7208                           status	equ	0xFD8
  7209                           
  7210 ;; *************** function _Mdm_MainTask *****************
  7211 ;; Defined at:
  7212 ;;		line 754 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
  7213 ;; Parameters:    Size  Location     Type
  7214 ;;  Options         1    wreg     unsigned char 
  7215 ;; Auto vars:     Size  Location     Type
  7216 ;;  Options         1    0[COMRAM] unsigned char 
  7217 ;; Return value:  Size  Location     Type
  7218 ;;                  1    wreg      void 
  7219 ;; Registers used:
  7220 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7221 ;; Tracked objects:
  7222 ;;		On entry : 0/0
  7223 ;;		On exit  : 0/0
  7224 ;;		Unchanged: 0/0
  7225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7226 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7227 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7229 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7230 ;;Total ram usage:        0 bytes
  7231 ;; Hardware stack levels used:    1
  7232 ;; Hardware stack levels required when called:   15
  7233 ;; This function calls:
  7234 ;;		_CheckModem
  7235 ;;		_ConfigureModem
  7236 ;;		_GetSmsSm
  7237 ;;		_ModemEvtParser
  7238 ;;		_SendSmsSm
  7239 ;;		_TurnOnModem
  7240 ;;		_UartSetConfig
  7241 ;;		_Uart_InitUartModule
  7242 ;; This function is called by:
  7243 ;;		_InitializeTasks
  7244 ;;		_ScheduleTasks
  7245 ;; This function uses a non-reentrant model
  7246 ;;
  7247                           
  7248                           	psect	text22
  7249  005AA2                     __ptext22:
  7250                           	opt stack 0
  7251  005AA2                     _Mdm_MainTask:
  7252                           	opt stack 13
  7253                           
  7254                           ;mdm_gsm_gprs.c: 756: switch (SystemState)
  7255                           
  7256                           ;incstack = 0
  7257  005AA2  D01E               	goto	l1107
  7258  005AA4                     
  7259                           ;mdm_gsm_gprs.c: 761: UartSetConfig();
  7260  005AA4  EC55  F02B         	call	_UartSetConfig	;wreg free
  7261                           
  7262                           ;mdm_gsm_gprs.c: 763: Uart_InitUartModule(1,&UartConfig);
  7263  005AA8  0E28               	movlw	low _UartConfig
  7264  005AAA  0100               	movlb	0	; () banked
  7265  005AAC  6F9D               	movwf	Uart_InitUartModule@UartConfig& (0+255),b
  7266  005AAE  0E03               	movlw	high _UartConfig
  7267  005AB0  6F9E               	movwf	(Uart_InitUartModule@UartConfig+1)& (0+255),b
  7268  005AB2  0E01               	movlw	1
  7269  005AB4  EC5E  F005         	call	_Uart_InitUartModule
  7270                           
  7271                           ;mdm_gsm_gprs.c: 764: break;
  7272  005AB8  0012               	return	
  7273  005ABA                     
  7274                           ;mdm_gsm_gprs.c: 769: CheckModem();
  7275  005ABA  EC1B  F014         	call	_CheckModem	;wreg free
  7276                           
  7277                           ;mdm_gsm_gprs.c: 771: if ((ComChecCompleted == 1u) && (MdmStatus == ModemOff))
  7278  005ABE  042A               	decf	_ComChecCompleted,w,c
  7279  005AC0  A4D8               	btfss	status,2,c
  7280  005AC2  D005               	goto	l1111
  7281  005AC4  0100               	movlb	0	; () banked
  7282  005AC6  51D0               	movf	_MdmStatus& (0+255),w,b
  7283  005AC8  B4D8               	btfsc	status,2,c
  7284                           
  7285                           ; BSR set to: 0
  7286                           ;mdm_gsm_gprs.c: 772: {
  7287                           ;mdm_gsm_gprs.c: 774: TurnOnModem();
  7288  005ACA  EC3C  F02E         	call	_TurnOnModem	;wreg free
  7289  005ACE                     l1111:
  7290                           
  7291                           ;mdm_gsm_gprs.c: 775: }
  7292                           ;mdm_gsm_gprs.c: 777: ConfigureModem();
  7293  005ACE  ECBE  F01B         	call	_ConfigureModem	;wreg free
  7294                           
  7295                           ;mdm_gsm_gprs.c: 779: ModemEvtParser();
  7296  005AD2  ECF5  F00F         	call	_ModemEvtParser	;wreg free
  7297                           
  7298                           ;mdm_gsm_gprs.c: 781: GetSmsSm();
  7299  005AD6  ECA7  F016         	call	_GetSmsSm	;wreg free
  7300                           
  7301                           ;mdm_gsm_gprs.c: 783: SendSmsSm();
  7302  005ADA  EC55  F00E         	call	_SendSmsSm	;wreg free
  7303                           
  7304                           ;mdm_gsm_gprs.c: 789: }
  7305                           
  7306                           ;mdm_gsm_gprs.c: 788: break;
  7307                           
  7308                           ;mdm_gsm_gprs.c: 787: default:
  7309                           
  7310                           ;mdm_gsm_gprs.c: 784: break;
  7311  005ADE  0012               	return	
  7312  005AE0                     l1107:
  7313  005AE0  0100               	movlb	0	; () banked
  7314  005AE2  51D3               	movf	_SystemState& (0+255),w,b
  7315                           
  7316                           ; Switch size 1, requested type "space"
  7317                           ; Number of cases is 2, Range of values is 0 to 1
  7318                           ; switch strategies available:
  7319                           ; Name         Instructions Cycles
  7320                           ; simple_byte            7     4 (average)
  7321                           ;	Chosen strategy is simple_byte
  7322  005AE4  0A00               	xorlw	0	; case 0
  7323  005AE6  B4D8               	btfsc	status,2,c
  7324  005AE8  D7DD               	goto	l1108
  7325  005AEA  0A01               	xorlw	1	; case 1
  7326  005AEC  A4D8               	btfss	status,2,c
  7327  005AEE  0012               	return	
  7328  005AF0  D7E4               	goto	l1110
  7329  005AF2                     __end_of_Mdm_MainTask:
  7330                           	opt stack 0
  7331                           tosu	equ	0xFFF
  7332                           tosh	equ	0xFFE
  7333                           tosl	equ	0xFFD
  7334                           pclath	equ	0xFFA
  7335                           tblptru	equ	0xFF8
  7336                           tblptrh	equ	0xFF7
  7337                           tblptrl	equ	0xFF6
  7338                           tablat	equ	0xFF5
  7339                           prodh	equ	0xFF4
  7340                           prodl	equ	0xFF3
  7341                           intcon	equ	0xFF2
  7342                           intcon2	equ	0xFF1
  7343                           intcon3	equ	0xFF0
  7344                           postinc0	equ	0xFEE
  7345                           plusw0	equ	0xFEB
  7346                           wreg	equ	0xFE8
  7347                           postinc1	equ	0xFE6
  7348                           postdec1	equ	0xFE5
  7349                           fsr1h	equ	0xFE2
  7350                           fsr1l	equ	0xFE1
  7351                           indf2	equ	0xFDF
  7352                           postinc2	equ	0xFDE
  7353                           postdec2	equ	0xFDD
  7354                           plusw2	equ	0xFDB
  7355                           fsr2h	equ	0xFDA
  7356                           fsr2l	equ	0xFD9
  7357                           status	equ	0xFD8
  7358                           
  7359 ;; *************** function _I2cSlv_MainTask *****************
  7360 ;; Defined at:
  7361 ;;		line 215 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
  7362 ;; Parameters:    Size  Location     Type
  7363 ;;  Options         1    wreg     unsigned char 
  7364 ;; Auto vars:     Size  Location     Type
  7365 ;;  Options         1    0[COMRAM] unsigned char 
  7366 ;; Return value:  Size  Location     Type
  7367 ;;                  1    wreg      void 
  7368 ;; Registers used:
  7369 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7370 ;; Tracked objects:
  7371 ;;		On entry : 0/0
  7372 ;;		On exit  : 0/0
  7373 ;;		Unchanged: 0/0
  7374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7375 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7376 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7378 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7379 ;;Total ram usage:        0 bytes
  7380 ;; Hardware stack levels used:    1
  7381 ;; Hardware stack levels required when called:   14
  7382 ;; This function calls:
  7383 ;;		_I2cSendMsgSm
  7384 ;;		_I2cSetConfig
  7385 ;;		_I2c_InitI2cModule
  7386 ;;		_OsAlrm_SetOsAlarm
  7387 ;; This function is called by:
  7388 ;;		_InitializeTasks
  7389 ;;		_ScheduleTasks
  7390 ;; This function uses a non-reentrant model
  7391 ;;
  7392                           
  7393                           	psect	text23
  7394  00580A                     __ptext23:
  7395                           	opt stack 0
  7396  00580A                     _I2cSlv_MainTask:
  7397                           	opt stack 14
  7398                           
  7399                           ;i2c_slv.c: 217: switch (SystemState)
  7400                           
  7401                           ;incstack = 0
  7402  00580A  D020               	goto	l1401
  7403  00580C                     
  7404                           ;i2c_slv.c: 222: I2cSetConfig();
  7405  00580C  ECA1  F031         	call	_I2cSetConfig	;wreg free
  7406                           
  7407                           ;i2c_slv.c: 224: I2c_InitI2cModule(&I2cConfig);
  7408  005810  0E48               	movlw	low _I2cConfig
  7409  005812  0100               	movlb	0	; () banked
  7410  005814  6FA2               	movwf	I2c_InitI2cModule@I2cConfig& (0+255),b
  7411  005816  0E03               	movlw	high _I2cConfig
  7412  005818  6FA3               	movwf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),b
  7413  00581A  ECBA  F028         	call	_I2c_InitI2cModule	;wreg free
  7414                           
  7415                           ;i2c_slv.c: 226: OsAlrm_SetOsAlarm(0x00,50,&I2cDummyTx);
  7416  00581E  0E00               	movlw	0
  7417  005820  0100               	movlb	0	; () banked
  7418  005822  6F84               	movwf	(OsAlrm_SetOsAlarm@OsAlarmId+1)& (0+255),b
  7419  005824  0E00               	movlw	0
  7420  005826  6F83               	movwf	OsAlrm_SetOsAlarm@OsAlarmId& (0+255),b
  7421  005828  0E32               	movlw	50
  7422  00582A  6F85               	movwf	OsAlrm_SetOsAlarm@OsAlarmTimeout& (0+255),b
  7423  00582C  0E00               	movlw	0
  7424  00582E  6F86               	movwf	(OsAlrm_SetOsAlarm@OsAlarmTimeout+1)& (0+255),b
  7425  005830  0E00               	movlw	0
  7426  005832  6F87               	movwf	(OsAlrm_SetOsAlarm@OsAlarmTimeout+2)& (0+255),b
  7427  005834  0E00               	movlw	0
  7428  005836  6F88               	movwf	(OsAlrm_SetOsAlarm@OsAlarmTimeout+3)& (0+255),b
  7429  005838  0E4A               	movlw	low _I2cDummyTx
  7430  00583A  6F89               	movwf	OsAlrm_SetOsAlarm@AlarmCallback& (0+255),b
  7431  00583C  0E66               	movlw	high _I2cDummyTx
  7432  00583E  6F8A               	movwf	(OsAlrm_SetOsAlarm@AlarmCallback+1)& (0+255),b
  7433  005840  ECCD  F01F         	call	_OsAlrm_SetOsAlarm	;wreg free
  7434                           
  7435                           ;i2c_slv.c: 227: break;
  7436  005844  0012               	return	
  7437  005846                     
  7438                           ;i2c_slv.c: 232: I2cSendMsgSm();
  7439  005846  EC31  F020         	call	_I2cSendMsgSm	;wreg free
  7440                           
  7441                           ;i2c_slv.c: 238: }
  7442                           
  7443                           ;i2c_slv.c: 237: break;
  7444                           
  7445                           ;i2c_slv.c: 236: default:
  7446                           
  7447                           ;i2c_slv.c: 233: break;
  7448  00584A  0012               	return	
  7449  00584C                     l1401:
  7450  00584C  0100               	movlb	0	; () banked
  7451  00584E  51D3               	movf	_SystemState& (0+255),w,b
  7452                           
  7453                           ; Switch size 1, requested type "space"
  7454                           ; Number of cases is 2, Range of values is 0 to 1
  7455                           ; switch strategies available:
  7456                           ; Name         Instructions Cycles
  7457                           ; simple_byte            7     4 (average)
  7458                           ;	Chosen strategy is simple_byte
  7459  005850  0A00               	xorlw	0	; case 0
  7460  005852  B4D8               	btfsc	status,2,c
  7461  005854  D7DB               	goto	l1402
  7462  005856  0A01               	xorlw	1	; case 1
  7463  005858  A4D8               	btfss	status,2,c
  7464  00585A  0012               	return	
  7465  00585C  D7F4               	goto	l1404
  7466  00585E                     __end_of_I2cSlv_MainTask:
  7467                           	opt stack 0
  7468                           tosu	equ	0xFFF
  7469                           tosh	equ	0xFFE
  7470                           tosl	equ	0xFFD
  7471                           pclath	equ	0xFFA
  7472                           tblptru	equ	0xFF8
  7473                           tblptrh	equ	0xFF7
  7474                           tblptrl	equ	0xFF6
  7475                           tablat	equ	0xFF5
  7476                           prodh	equ	0xFF4
  7477                           prodl	equ	0xFF3
  7478                           intcon	equ	0xFF2
  7479                           intcon2	equ	0xFF1
  7480                           intcon3	equ	0xFF0
  7481                           postinc0	equ	0xFEE
  7482                           plusw0	equ	0xFEB
  7483                           wreg	equ	0xFE8
  7484                           postinc1	equ	0xFE6
  7485                           postdec1	equ	0xFE5
  7486                           fsr1h	equ	0xFE2
  7487                           fsr1l	equ	0xFE1
  7488                           indf2	equ	0xFDF
  7489                           postinc2	equ	0xFDE
  7490                           postdec2	equ	0xFDD
  7491                           plusw2	equ	0xFDB
  7492                           fsr2h	equ	0xFDA
  7493                           fsr2l	equ	0xFD9
  7494                           status	equ	0xFD8
  7495                           
  7496 ;; *************** function _Mdm_DrvMainFn *****************
  7497 ;; Defined at:
  7498 ;;		line 304 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mdm_drv.c"
  7499 ;; Parameters:    Size  Location     Type
  7500 ;;  Options         1    wreg     unsigned char 
  7501 ;; Auto vars:     Size  Location     Type
  7502 ;;  Options         1    0[COMRAM] unsigned char 
  7503 ;; Return value:  Size  Location     Type
  7504 ;;                  1    wreg      void 
  7505 ;; Registers used:
  7506 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7507 ;; Tracked objects:
  7508 ;;		On entry : 0/0
  7509 ;;		On exit  : 0/0
  7510 ;;		Unchanged: 0/0
  7511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7512 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7513 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7514 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7515 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7516 ;;Total ram usage:        0 bytes
  7517 ;; Hardware stack levels used:    1
  7518 ;; Hardware stack levels required when called:   13
  7519 ;; This function calls:
  7520 ;;		_MdmCntSm
  7521 ;; This function is called by:
  7522 ;;		_InitializeTasks
  7523 ;;		_ScheduleTasks
  7524 ;; This function uses a non-reentrant model
  7525 ;;
  7526                           
  7527                           	psect	text24
  7528  00687C                     __ptext24:
  7529                           	opt stack 0
  7530  00687C                     _Mdm_DrvMainFn:
  7531                           	opt stack 15
  7532                           
  7533                           ;mdm_drv.c: 307: MdmCntSm();
  7534                           
  7535                           ;incstack = 0
  7536  00687C  EC06  F023         	call	_MdmCntSm	;wreg free
  7537  006880  0012               	return		;funcret
  7538  006882                     __end_of_Mdm_DrvMainFn:
  7539                           	opt stack 0
  7540                           tosu	equ	0xFFF
  7541                           tosh	equ	0xFFE
  7542                           tosl	equ	0xFFD
  7543                           pclath	equ	0xFFA
  7544                           tblptru	equ	0xFF8
  7545                           tblptrh	equ	0xFF7
  7546                           tblptrl	equ	0xFF6
  7547                           tablat	equ	0xFF5
  7548                           prodh	equ	0xFF4
  7549                           prodl	equ	0xFF3
  7550                           intcon	equ	0xFF2
  7551                           intcon2	equ	0xFF1
  7552                           intcon3	equ	0xFF0
  7553                           postinc0	equ	0xFEE
  7554                           plusw0	equ	0xFEB
  7555                           wreg	equ	0xFE8
  7556                           postinc1	equ	0xFE6
  7557                           postdec1	equ	0xFE5
  7558                           fsr1h	equ	0xFE2
  7559                           fsr1l	equ	0xFE1
  7560                           indf2	equ	0xFDF
  7561                           postinc2	equ	0xFDE
  7562                           postdec2	equ	0xFDD
  7563                           plusw2	equ	0xFDB
  7564                           fsr2h	equ	0xFDA
  7565                           fsr2l	equ	0xFD9
  7566                           status	equ	0xFD8
  7567                           
  7568 ;; *************** function _Wdg_MainTask *****************
  7569 ;; Defined at:
  7570 ;;		line 73 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/wdg.c"
  7571 ;; Parameters:    Size  Location     Type
  7572 ;;  Options         1    wreg     unsigned char 
  7573 ;; Auto vars:     Size  Location     Type
  7574 ;;  Options         1    0[COMRAM] unsigned char 
  7575 ;; Return value:  Size  Location     Type
  7576 ;;                  1    wreg      void 
  7577 ;; Registers used:
  7578 ;;		wreg, status,2, status,0, cstack
  7579 ;; Tracked objects:
  7580 ;;		On entry : 0/0
  7581 ;;		On exit  : 0/0
  7582 ;;		Unchanged: 0/0
  7583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7584 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7585 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7587 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7588 ;;Total ram usage:        0 bytes
  7589 ;; Hardware stack levels used:    1
  7590 ;; Hardware stack levels required when called:   12
  7591 ;; This function calls:
  7592 ;;		_Mcu_ClearWdg
  7593 ;;		_Mcu_SetWdgSts
  7594 ;; This function is called by:
  7595 ;;		_InitializeTasks
  7596 ;;		_ScheduleTasks
  7597 ;; This function uses a non-reentrant model
  7598 ;;
  7599                           
  7600                           	psect	text25
  7601  0064C6                     __ptext25:
  7602                           	opt stack 0
  7603  0064C6                     _Wdg_MainTask:
  7604                           	opt stack 16
  7605                           
  7606                           ;wdg.c: 75: switch (SystemState)
  7607                           
  7608                           ;incstack = 0
  7609  0064C6  D007               	goto	l2498
  7610  0064C8                     
  7611                           ;wdg.c: 80: Mcu_SetWdgSts(1u);
  7612  0064C8  0E01               	movlw	1
  7613  0064CA  ECC1  F033         	call	_Mcu_SetWdgSts
  7614                           
  7615                           ;wdg.c: 81: break;
  7616  0064CE  0012               	return	
  7617  0064D0                     
  7618                           ;wdg.c: 86: Mcu_ClearWdg();
  7619  0064D0  EC41  F034         	call	_Mcu_ClearWdg	;wreg free
  7620                           
  7621                           ;wdg.c: 92: }
  7622                           
  7623                           ;wdg.c: 91: break;
  7624                           
  7625                           ;wdg.c: 90: default:
  7626                           
  7627                           ;wdg.c: 87: break;
  7628  0064D4  0012               	return	
  7629  0064D6                     l2498:
  7630  0064D6  0100               	movlb	0	; () banked
  7631  0064D8  51D3               	movf	_SystemState& (0+255),w,b
  7632                           
  7633                           ; Switch size 1, requested type "space"
  7634                           ; Number of cases is 2, Range of values is 0 to 1
  7635                           ; switch strategies available:
  7636                           ; Name         Instructions Cycles
  7637                           ; simple_byte            7     4 (average)
  7638                           ;	Chosen strategy is simple_byte
  7639  0064DA  0A00               	xorlw	0	; case 0
  7640  0064DC  B4D8               	btfsc	status,2,c
  7641  0064DE  D7F4               	goto	l2499
  7642  0064E0  0A01               	xorlw	1	; case 1
  7643  0064E2  A4D8               	btfss	status,2,c
  7644  0064E4  0012               	return	
  7645  0064E6  D7F4               	goto	l2501
  7646  0064E8                     __end_of_Wdg_MainTask:
  7647                           	opt stack 0
  7648                           tosu	equ	0xFFF
  7649                           tosh	equ	0xFFE
  7650                           tosl	equ	0xFFD
  7651                           pclath	equ	0xFFA
  7652                           tblptru	equ	0xFF8
  7653                           tblptrh	equ	0xFF7
  7654                           tblptrl	equ	0xFF6
  7655                           tablat	equ	0xFF5
  7656                           prodh	equ	0xFF4
  7657                           prodl	equ	0xFF3
  7658                           intcon	equ	0xFF2
  7659                           intcon2	equ	0xFF1
  7660                           intcon3	equ	0xFF0
  7661                           postinc0	equ	0xFEE
  7662                           plusw0	equ	0xFEB
  7663                           wreg	equ	0xFE8
  7664                           postinc1	equ	0xFE6
  7665                           postdec1	equ	0xFE5
  7666                           fsr1h	equ	0xFE2
  7667                           fsr1l	equ	0xFE1
  7668                           indf2	equ	0xFDF
  7669                           postinc2	equ	0xFDE
  7670                           postdec2	equ	0xFDD
  7671                           plusw2	equ	0xFDB
  7672                           fsr2h	equ	0xFDA
  7673                           fsr2l	equ	0xFD9
  7674                           status	equ	0xFD8
  7675                           
  7676 ;; *************** function _Mcu_SetWdgSts *****************
  7677 ;; Defined at:
  7678 ;;		line 196 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
  7679 ;; Parameters:    Size  Location     Type
  7680 ;;  WdgSts          1    wreg     unsigned char 
  7681 ;; Auto vars:     Size  Location     Type
  7682 ;;  WdgSts          1   29[BANK0 ] unsigned char 
  7683 ;; Return value:  Size  Location     Type
  7684 ;;                  1    wreg      void 
  7685 ;; Registers used:
  7686 ;;		wreg
  7687 ;; Tracked objects:
  7688 ;;		On entry : 0/0
  7689 ;;		On exit  : 0/0
  7690 ;;		Unchanged: 0/0
  7691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7692 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7693 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7694 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7695 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7696 ;;Total ram usage:        1 bytes
  7697 ;; Hardware stack levels used:    1
  7698 ;; Hardware stack levels required when called:   11
  7699 ;; This function calls:
  7700 ;;		Nothing
  7701 ;; This function is called by:
  7702 ;;		_Wdg_MainTask
  7703 ;; This function uses a non-reentrant model
  7704 ;;
  7705                           
  7706                           	psect	text26
  7707  006782                     __ptext26:
  7708                           	opt stack 0
  7709  006782                     _Mcu_SetWdgSts:
  7710                           	opt stack 16
  7711                           
  7712                           ;incstack = 0
  7713                           ;Mcu_SetWdgSts@WdgSts stored from wreg
  7714  006782  0100               	movlb	0	; () banked
  7715  006784  6F7D               	movwf	Mcu_SetWdgSts@WdgSts& (0+255),b
  7716                           
  7717                           ;mcu_drv.c: 199: WDTCONbits.SWDTEN = WdgSts;
  7718  006786  0100               	movlb	0	; () banked
  7719  006788  B17D               	btfsc	Mcu_SetWdgSts@WdgSts& (0+255),0,b
  7720  00678A  D002               	bra	u14205
  7721  00678C  90C0               	bcf	4032,0,c	;volatile
  7722  00678E  D001               	bra	u14206
  7723  006790                     u14205:
  7724  006790  80C0               	bsf	4032,0,c	;volatile
  7725  006792                     u14206:
  7726  006792  0012               	return		;funcret
  7727  006794                     __end_of_Mcu_SetWdgSts:
  7728                           	opt stack 0
  7729                           tosu	equ	0xFFF
  7730                           tosh	equ	0xFFE
  7731                           tosl	equ	0xFFD
  7732                           pclath	equ	0xFFA
  7733                           tblptru	equ	0xFF8
  7734                           tblptrh	equ	0xFF7
  7735                           tblptrl	equ	0xFF6
  7736                           tablat	equ	0xFF5
  7737                           prodh	equ	0xFF4
  7738                           prodl	equ	0xFF3
  7739                           intcon	equ	0xFF2
  7740                           intcon2	equ	0xFF1
  7741                           intcon3	equ	0xFF0
  7742                           postinc0	equ	0xFEE
  7743                           plusw0	equ	0xFEB
  7744                           wreg	equ	0xFE8
  7745                           postinc1	equ	0xFE6
  7746                           postdec1	equ	0xFE5
  7747                           fsr1h	equ	0xFE2
  7748                           fsr1l	equ	0xFE1
  7749                           indf2	equ	0xFDF
  7750                           postinc2	equ	0xFDE
  7751                           postdec2	equ	0xFDD
  7752                           plusw2	equ	0xFDB
  7753                           fsr2h	equ	0xFDA
  7754                           fsr2l	equ	0xFD9
  7755                           status	equ	0xFD8
  7756                           
  7757 ;; *************** function _Mcu_ClearWdg *****************
  7758 ;; Defined at:
  7759 ;;		line 210 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
  7760 ;; Parameters:    Size  Location     Type
  7761 ;;		None
  7762 ;; Auto vars:     Size  Location     Type
  7763 ;;		None
  7764 ;; Return value:  Size  Location     Type
  7765 ;;                  1    wreg      void 
  7766 ;; Registers used:
  7767 ;;		None
  7768 ;; Tracked objects:
  7769 ;;		On entry : 0/0
  7770 ;;		On exit  : 0/0
  7771 ;;		Unchanged: 0/0
  7772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7773 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7774 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7775 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7776 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7777 ;;Total ram usage:        0 bytes
  7778 ;; Hardware stack levels used:    1
  7779 ;; Hardware stack levels required when called:   11
  7780 ;; This function calls:
  7781 ;;		Nothing
  7782 ;; This function is called by:
  7783 ;;		_Wdg_MainTask
  7784 ;; This function uses a non-reentrant model
  7785 ;;
  7786                           
  7787                           	psect	text27
  7788  006882                     __ptext27:
  7789                           	opt stack 0
  7790  006882                     _Mcu_ClearWdg:
  7791                           	opt stack 16
  7792                           
  7793                           ;incstack = 0
  7794  006882  0004               	clrwdt		;# 
  7795  006884  0012               	return		;funcret
  7796  006886                     __end_of_Mcu_ClearWdg:
  7797                           	opt stack 0
  7798                           tosu	equ	0xFFF
  7799                           tosh	equ	0xFFE
  7800                           tosl	equ	0xFFD
  7801                           pclath	equ	0xFFA
  7802                           tblptru	equ	0xFF8
  7803                           tblptrh	equ	0xFF7
  7804                           tblptrl	equ	0xFF6
  7805                           tablat	equ	0xFF5
  7806                           prodh	equ	0xFF4
  7807                           prodl	equ	0xFF3
  7808                           intcon	equ	0xFF2
  7809                           intcon2	equ	0xFF1
  7810                           intcon3	equ	0xFF0
  7811                           postinc0	equ	0xFEE
  7812                           plusw0	equ	0xFEB
  7813                           wreg	equ	0xFE8
  7814                           postinc1	equ	0xFE6
  7815                           postdec1	equ	0xFE5
  7816                           fsr1h	equ	0xFE2
  7817                           fsr1l	equ	0xFE1
  7818                           indf2	equ	0xFDF
  7819                           postinc2	equ	0xFDE
  7820                           postdec2	equ	0xFDD
  7821                           plusw2	equ	0xFDB
  7822                           fsr2h	equ	0xFDA
  7823                           fsr2l	equ	0xFD9
  7824                           status	equ	0xFD8
  7825                           
  7826 ;; *************** function _USBDeviceTasks *****************
  7827 ;; Defined at:
  7828 ;;		line 495 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  7829 ;; Parameters:    Size  Location     Type
  7830 ;;		None
  7831 ;; Auto vars:     Size  Location     Type
  7832 ;;  i               1   56[BANK0 ] unsigned char 
  7833 ;; Return value:  Size  Location     Type
  7834 ;;                  1    wreg      void 
  7835 ;; Registers used:
  7836 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7837 ;; Tracked objects:
  7838 ;;		On entry : 0/0
  7839 ;;		On exit  : 0/0
  7840 ;;		Unchanged: 0/0
  7841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7842 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7843 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7845 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7846 ;;Total ram usage:        1 bytes
  7847 ;; Hardware stack levels used:    1
  7848 ;; Hardware stack levels required when called:   19
  7849 ;; This function calls:
  7850 ;;		_USBCtrlEPAllowStatusStage
  7851 ;;		_USBCtrlEPService
  7852 ;;		_USBDeviceInit
  7853 ;;		_USBIncrement1msInternalTimers
  7854 ;;		_USBStallHandler
  7855 ;;		_USBSuspend
  7856 ;;		_USBWakeFromSuspend
  7857 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7858 ;; This function is called by:
  7859 ;;		_UsbDevice_MainTask
  7860 ;; This function uses a non-reentrant model
  7861 ;;
  7862                           
  7863                           	psect	text28
  7864  001E62                     __ptext28:
  7865                           	opt stack 0
  7866  001E62                     _USBDeviceTasks:
  7867                           	opt stack 8
  7868                           
  7869                           ;usb_device.c: 562: }
  7870                           ;usb_device.c: 584: if(USBDeviceState == DETACHED_STATE)
  7871                           
  7872                           ; BSR set to: 0
  7873                           
  7874                           ; BSR set to: 0
  7875                           ;usb_device.c: 561: return;
  7876                           
  7877                           ; BSR set to: 0
  7878                           ;usb_device.c: 560: {PIR2bits.USBIF = 0;};
  7879                           
  7880                           ;usb_device.c: 532: USBDeviceState = DETACHED_STATE;
  7881                           
  7882                           ;usb_device.c: 529: UIE = 0;
  7883                           
  7884                           ;usb_device.c: 524: {
  7885                           ;usb_device.c: 526: UCON = 0;
  7886                           
  7887                           ;usb_device.c: 497: uint8_t i;
  7888                           ;usb_device.c: 523: if (1 != 1)
  7889                           
  7890                           ;incstack = 0
  7891  001E62  0100               	movlb	0	; () banked
  7892  001E64  51CC               	movf	_USBDeviceState& (0+255),w,b
  7893  001E66  A4D8               	btfss	status,2,c
  7894  001E68  D012               	goto	l1612
  7895                           
  7896                           ; BSR set to: 0
  7897                           ;usb_device.c: 585: {
  7898                           ;usb_device.c: 587: UCON = 0;
  7899  001E6A  0E00               	movlw	0
  7900  001E6C  6E65               	movwf	3941,c	;volatile
  7901                           
  7902                           ;usb_device.c: 590: UIE = 0;
  7903  001E6E  0E00               	movlw	0
  7904  001E70  010F               	movlb	15	; () banked
  7905  001E72  6F36               	movwf	54,b	;volatile
  7906                           
  7907                           ;usb_device.c: 594: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  7908  001E74  0E16               	movlw	22
  7909  001E76  6F39               	movwf	57,b	;volatile
  7910  001E78  0E9F               	movlw	159
  7911  001E7A  6F37               	movwf	55,b	;volatile
  7912  001E7C  0E7B               	movlw	123
  7913  001E7E  6F36               	movwf	54,b	;volatile
  7914                           
  7915                           ;usb_device.c: 597: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
  7916  001E80  D001               	goto	l1613
  7917  001E82                     l1614:
  7918  001E82  8665               	bsf	3941,3,c	;volatile
  7919  001E84                     l1613:
  7920  001E84  A665               	btfss	3941,3,c	;volatile
  7921  001E86  D7FD               	goto	l1614
  7922                           
  7923                           ;usb_device.c: 600: USBDeviceState = ATTACHED_STATE;
  7924  001E88  0E01               	movlw	1
  7925  001E8A  0100               	movlb	0	; () banked
  7926  001E8C  6FCC               	movwf	_USBDeviceState& (0+255),b
  7927  001E8E                     l1612:
  7928                           
  7929                           ; BSR set to: 0
  7930                           ;usb_device.c: 605: }
  7931                           ;usb_device.c: 608: if(USBDeviceState == ATTACHED_STATE)
  7932                           
  7933                           ; BSR set to: 0
  7934  001E8E  05CC               	decf	_USBDeviceState& (0+255),w,b
  7935  001E90  B4D8               	btfsc	status,2,c
  7936                           
  7937                           ; BSR set to: 0
  7938                           ;usb_device.c: 609: {
  7939                           ;usb_device.c: 619: if(!UCONbits.SE0)
  7940  001E92  BA65               	btfsc	3941,5,c	;volatile
  7941  001E94  D00A               	goto	l1617
  7942                           
  7943                           ; BSR set to: 0
  7944                           ;usb_device.c: 620: {
  7945                           ;usb_device.c: 626: {UIR = 0;};
  7946  001E96  0E00               	movlw	0
  7947  001E98  6E62               	movwf	3938,c	;volatile
  7948                           
  7949                           ;usb_device.c: 630: UIE=0;
  7950  001E9A  0E00               	movlw	0
  7951  001E9C  010F               	movlb	15	; () banked
  7952  001E9E  6F36               	movwf	54,b	;volatile
  7953                           
  7954                           ; BSR set to: 15
  7955                           ;usb_device.c: 632: UIEbits.URSTIE = 1;
  7956  001EA0  8136               	bsf	54,0,b	;volatile
  7957                           
  7958                           ; BSR set to: 15
  7959                           ;usb_device.c: 633: UIEbits.IDLEIE = 1;
  7960  001EA2  8936               	bsf	54,4,b	;volatile
  7961                           
  7962                           ;usb_device.c: 634: USBDeviceState = POWERED_STATE;
  7963  001EA4  0E02               	movlw	2
  7964  001EA6  0100               	movlb	0	; () banked
  7965  001EA8  6FCC               	movwf	_USBDeviceState& (0+255),b
  7966  001EAA                     l1617:
  7967                           
  7968                           ; BSR set to: 0
  7969                           ;usb_device.c: 635: }
  7970                           ;usb_device.c: 636: }
  7971                           ;usb_device.c: 652: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
  7972                           
  7973                           ; BSR set to: 0
  7974                           
  7975                           ; BSR set to: 0
  7976  001EAA  A462               	btfss	3938,2,c	;volatile
  7977  001EAC  D006               	goto	l1618
  7978                           
  7979                           ; BSR set to: 0
  7980  001EAE  010F               	movlb	15	; () banked
  7981  001EB0  A536               	btfss	54,2,b	;volatile
  7982  001EB2  D003               	goto	l1618
  7983                           
  7984                           ; BSR set to: 15
  7985                           ;usb_device.c: 653: {
  7986                           ;usb_device.c: 654: (UIR &= 0xFB);
  7987  001EB4  9462               	bcf	3938,2,c	;volatile
  7988                           
  7989                           ; BSR set to: 15
  7990                           ;usb_device.c: 658: USBWakeFromSuspend();
  7991  001EB6  EC57  F030         	call	_USBWakeFromSuspend	;wreg free
  7992  001EBA                     l1618:
  7993                           
  7994                           ;usb_device.c: 660: }
  7995                           ;usb_device.c: 665: if(UCONbits.SUSPND==1)
  7996  001EBA  A265               	btfss	3941,1,c	;volatile
  7997  001EBC  D002               	goto	l1619
  7998                           
  7999                           ;usb_device.c: 666: {
  8000                           ;usb_device.c: 667: {PIR2bits.USBIF = 0;};
  8001  001EBE  98A1               	bcf	4001,4,c	;volatile
  8002                           
  8003                           ;usb_device.c: 668: return;
  8004  001EC0  0012               	return	
  8005  001EC2                     l1619:
  8006                           
  8007                           ;usb_device.c: 669: }
  8008                           ;usb_device.c: 681: if(UIRbits.URSTIF && UIEbits.URSTIE)
  8009  001EC2  A062               	btfss	3938,0,c	;volatile
  8010  001EC4  D009               	goto	l1620
  8011  001EC6  010F               	movlb	15	; () banked
  8012  001EC8  A136               	btfss	54,0,b	;volatile
  8013  001ECA  D006               	goto	l1620
  8014                           
  8015                           ; BSR set to: 15
  8016                           ;usb_device.c: 682: {
  8017                           ;usb_device.c: 683: USBDeviceInit();
  8018  001ECC  EC72  F013         	call	_USBDeviceInit	;wreg free
  8019                           
  8020                           ;usb_device.c: 687: ;
  8021                           ;usb_device.c: 689: USBDeviceState = DEFAULT_STATE;
  8022  001ED0  0E04               	movlw	4
  8023  001ED2  0100               	movlb	0	; () banked
  8024  001ED4  6FCC               	movwf	_USBDeviceState& (0+255),b
  8025                           
  8026                           ; BSR set to: 0
  8027                           ;usb_device.c: 699: (UIR &= 0xFE);
  8028  001ED6  9062               	bcf	3938,0,c	;volatile
  8029  001ED8                     l1620:
  8030                           
  8031                           ;usb_device.c: 700: }
  8032                           ;usb_device.c: 705: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
  8033                           
  8034                           ; BSR set to: 0
  8035  001ED8  A862               	btfss	3938,4,c	;volatile
  8036  001EDA  D004               	goto	l1621
  8037  001EDC  010F               	movlb	15	; () banked
  8038  001EDE  B936               	btfsc	54,4,b	;volatile
  8039                           
  8040                           ; BSR set to: 15
  8041                           ;usb_device.c: 706: {
  8042                           ;usb_device.c: 712: USBSuspend();
  8043  001EE0  ECE1  F030         	call	_USBSuspend	;wreg free
  8044  001EE4                     l1621:
  8045                           
  8046                           ;usb_device.c: 714: }
  8047                           ;usb_device.c: 726: if(UIRbits.SOFIF)
  8048  001EE4  AC62               	btfss	3938,6,c	;volatile
  8049  001EE6  D01D               	goto	l1625
  8050                           
  8051                           ;usb_device.c: 727: {
  8052                           ;usb_device.c: 729: if(UIEbits.SOFIE)
  8053  001EE8  010F               	movlb	15	; () banked
  8054  001EEA  AD36               	btfss	54,6,b	;volatile
  8055  001EEC  D00F               	goto	l1623
  8056                           
  8057                           ; BSR set to: 15
  8058                           ;usb_device.c: 730: {
  8059                           ;usb_device.c: 731: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
  8060  001EEE  0E00               	movlw	0
  8061  001EF0  0100               	movlb	0	; () banked
  8062  001EF2  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  8063  001EF4  0E73               	movlw	115
  8064  001EF6  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  8065  001EF8  0E00               	movlw	0
  8066  001EFA  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  8067  001EFC  0E00               	movlw	0
  8068  001EFE  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  8069  001F00  0E00               	movlw	0
  8070  001F02  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  8071  001F04  0E01               	movlw	1
  8072  001F06  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  8073  001F08  ECC9  F02A         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  8074  001F0C                     l1623:
  8075                           
  8076                           ;usb_device.c: 732: }
  8077                           ;usb_device.c: 733: (UIR &= 0xBF);
  8078  001F0C  9C62               	bcf	3938,6,c	;volatile
  8079                           
  8080                           ;usb_device.c: 736: USBIncrement1msInternalTimers();
  8081  001F0E  EC74  F032         	call	_USBIncrement1msInternalTimers	;wreg free
  8082                           
  8083                           ;usb_device.c: 753: if(USBStatusStageTimeoutCounter != 0u)
  8084  001F12  0100               	movlb	0	; () banked
  8085  001F14  51C8               	movf	_USBStatusStageTimeoutCounter& (0+255),w,b
  8086  001F16  A4D8               	btfss	status,2,c
  8087                           
  8088                           ; BSR set to: 0
  8089                           ;usb_device.c: 754: {
  8090                           ;usb_device.c: 755: USBStatusStageTimeoutCounter--;
  8091  001F18  07C8               	decf	_USBStatusStageTimeoutCounter& (0+255),f,b
  8092                           
  8093                           ; BSR set to: 0
  8094                           ;usb_device.c: 756: }
  8095                           ;usb_device.c: 762: if(USBStatusStageTimeoutCounter == 0)
  8096                           
  8097                           ; BSR set to: 0
  8098  001F1A  51C8               	movf	_USBStatusStageTimeoutCounter& (0+255),w,b
  8099  001F1C  B4D8               	btfsc	status,2,c
  8100                           
  8101                           ; BSR set to: 0
  8102                           ;usb_device.c: 763: {
  8103                           ;usb_device.c: 764: USBCtrlEPAllowStatusStage();
  8104  001F1E  EC3A  F01E         	call	_USBCtrlEPAllowStatusStage	;wreg free
  8105  001F22                     l1625:
  8106                           
  8107                           ;usb_device.c: 765: }
  8108                           ;usb_device.c: 767: }
  8109                           ;usb_device.c: 769: if(UIRbits.STALLIF && UIEbits.STALLIE)
  8110  001F22  AA62               	btfss	3938,5,c	;volatile
  8111  001F24  D004               	goto	l1626
  8112  001F26  010F               	movlb	15	; () banked
  8113  001F28  BB36               	btfsc	54,5,b	;volatile
  8114                           
  8115                           ; BSR set to: 15
  8116                           ;usb_device.c: 770: {
  8117                           ;usb_device.c: 771: USBStallHandler();
  8118  001F2A  ECF2  F02E         	call	_USBStallHandler	;wreg free
  8119  001F2E                     l1626:
  8120                           
  8121                           ;usb_device.c: 772: }
  8122                           ;usb_device.c: 774: if(UIRbits.UERRIF && UIEbits.UERRIE)
  8123  001F2E  A262               	btfss	3938,1,c	;volatile
  8124  001F30  D013               	goto	l1627
  8125  001F32  010F               	movlb	15	; () banked
  8126  001F34  A336               	btfss	54,1,b	;volatile
  8127  001F36  D010               	goto	l1627
  8128                           
  8129                           ; BSR set to: 15
  8130                           ;usb_device.c: 775: {
  8131                           ;usb_device.c: 776: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
  8132  001F38  0E7F               	movlw	127
  8133  001F3A  0100               	movlb	0	; () banked
  8134  001F3C  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  8135  001F3E  6989               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  8136  001F40  0E00               	movlw	0
  8137  001F42  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  8138  001F44  0E00               	movlw	0
  8139  001F46  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  8140  001F48  0E00               	movlw	0
  8141  001F4A  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  8142  001F4C  0E01               	movlw	1
  8143  001F4E  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  8144  001F50  ECC9  F02A         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  8145                           
  8146                           ;usb_device.c: 777: {UEIR = 0;};
  8147  001F54  0E00               	movlw	0
  8148  001F56  6E63               	movwf	3939,c	;volatile
  8149  001F58                     l1627:
  8150                           
  8151                           ;usb_device.c: 785: }
  8152                           ;usb_device.c: 792: if(USBDeviceState < DEFAULT_STATE)
  8153  001F58  0E04               	movlw	4
  8154  001F5A  0100               	movlb	0	; () banked
  8155  001F5C  61CC               	cpfslt	_USBDeviceState& (0+255),b
  8156  001F5E  D002               	goto	l1628
  8157                           
  8158                           ; BSR set to: 0
  8159                           ;usb_device.c: 793: {
  8160                           ;usb_device.c: 794: {PIR2bits.USBIF = 0;};
  8161  001F60  98A1               	bcf	4001,4,c	;volatile
  8162                           
  8163                           ;usb_device.c: 795: return;
  8164  001F62  0012               	return	
  8165  001F64                     l1628:
  8166                           
  8167                           ; BSR set to: 0
  8168                           ;usb_device.c: 796: }
  8169                           ;usb_device.c: 801: if(UIEbits.TRNIE)
  8170  001F64  010F               	movlb	15	; () banked
  8171  001F66  A736               	btfss	54,3,b	;volatile
  8172  001F68  D03E               	goto	u15190
  8173                           
  8174                           ; BSR set to: 15
  8175                           ;usb_device.c: 802: {
  8176                           ;usb_device.c: 803: for(i = 0; i < 4u; i++)
  8177  001F6A  0E00               	movlw	0
  8178  001F6C  0100               	movlb	0	; () banked
  8179  001F6E  6F98               	movwf	USBDeviceTasks@i& (0+255),b
  8180  001F70                     l15488:
  8181                           
  8182                           ; BSR set to: 0
  8183  001F70  0E03               	movlw	3
  8184  001F72  6598               	cpfsgt	USBDeviceTasks@i& (0+255),b
  8185  001F74  D001               	goto	l1630
  8186  001F76  D037               	goto	u15190
  8187  001F78                     l1630:
  8188                           
  8189                           ; BSR set to: 0
  8190                           ;usb_device.c: 804: {
  8191                           ;usb_device.c: 805: if(UIRbits.TRNIF)
  8192  001F78  A662               	btfss	3938,3,c	;volatile
  8193  001F7A  D035               	goto	u15190
  8194                           
  8195                           ; BSR set to: 0
  8196                           ;usb_device.c: 806: {
  8197                           ;usb_device.c: 808: USTATcopy.Val = USTAT;
  8198  001F7C  CF64 F0D4          	movff	3940,_USTATcopy	;volatile
  8199                           
  8200                           ; BSR set to: 0
  8201                           ;usb_device.c: 809: endpoint_number = USTATcopy.endpoint_number;
  8202  001F80  31D4               	rrcf	_USTATcopy& (0+255),w,b
  8203  001F82  32E8               	rrcf	wreg,f,c
  8204  001F84  32E8               	rrcf	wreg,f,c
  8205  001F86  0B0F               	andlw	15
  8206  001F88  6FC9               	movwf	_endpoint_number& (0+255),b
  8207                           
  8208                           ; BSR set to: 0
  8209                           ;usb_device.c: 811: (UIR &= 0xF7);
  8210  001F8A  9662               	bcf	3938,3,c	;volatile
  8211                           
  8212                           ; BSR set to: 0
  8213                           ;usb_device.c: 816: if(USTATcopy.direction == 0)
  8214  001F8C  B5D4               	btfsc	_USTATcopy& (0+255),2,b
  8215  001F8E  D007               	goto	l1633
  8216                           
  8217                           ; BSR set to: 0
  8218                           ;usb_device.c: 817: {
  8219                           ;usb_device.c: 818: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
  8220  001F90  51C9               	movf	_endpoint_number& (0+255),w,b
  8221  001F92  0D01               	mullw	1
  8222  001F94  0ECE               	movlw	low _ep_data_out
  8223  001F96  24F3               	addwf	prodl,w,c
  8224  001F98  6ED9               	movwf	fsr2l,c
  8225  001F9A  0E02               	movlw	high _ep_data_out
  8226  001F9C  D007               	goto	L3
  8227  001F9E                     l1633:
  8228                           
  8229                           ;usb_device.c: 820: else
  8230                           ;usb_device.c: 821: {
  8231                           ;usb_device.c: 822: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
  8232                           
  8233                           ; BSR set to: 2
  8234  001F9E  0100               	movlb	0	; () banked
  8235  001FA0  51C9               	movf	_endpoint_number& (0+255),w,b
  8236  001FA2  0D01               	mullw	1
  8237  001FA4  0ED1               	movlw	low _ep_data_in
  8238  001FA6  24F3               	addwf	prodl,w,c
  8239  001FA8  6ED9               	movwf	fsr2l,c
  8240  001FAA  0E02               	movlw	high _ep_data_in
  8241  001FAC                     L3:
  8242  001FAC  20F4               	addwfc	prodh,w,c
  8243  001FAE  6EDA               	movwf	fsr2h,c
  8244  001FB0  0102               	movlb	2	; () banked
  8245  001FB2  70DF               	btg	indf2,0,c
  8246                           
  8247                           ; BSR set to: 2
  8248                           ;usb_device.c: 823: }
  8249                           ;usb_device.c: 828: if(endpoint_number == 0)
  8250                           
  8251                           ; BSR set to: 2
  8252  001FB4  0100               	movlb	0	; () banked
  8253  001FB6  51C9               	movf	_endpoint_number& (0+255),w,b
  8254  001FB8  A4D8               	btfss	status,2,c
  8255  001FBA  D003               	goto	l1635
  8256                           
  8257                           ; BSR set to: 0
  8258                           ;usb_device.c: 829: {
  8259                           ;usb_device.c: 830: USBCtrlEPService();
  8260  001FBC  EC80  F025         	call	_USBCtrlEPService	;wreg free
  8261                           
  8262                           ;usb_device.c: 831: }
  8263  001FC0  D00F               	goto	l1637
  8264  001FC2                     l1635:
  8265                           
  8266                           ;usb_device.c: 832: else
  8267                           ;usb_device.c: 833: {
  8268                           ;usb_device.c: 834: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
  8269  001FC2  0E00               	movlw	0
  8270  001FC4  0100               	movlb	0	; () banked
  8271  001FC6  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  8272  001FC8  0E72               	movlw	114
  8273  001FCA  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  8274  001FCC  0ED4               	movlw	low _USTATcopy
  8275  001FCE  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  8276  001FD0  0E00               	movlw	high _USTATcopy
  8277  001FD2  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  8278  001FD4  0E00               	movlw	0
  8279  001FD6  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  8280  001FD8  0E00               	movlw	0
  8281  001FDA  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  8282  001FDC  ECC9  F02A         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  8283  001FE0                     l1637:
  8284  001FE0  0100               	movlb	0	; () banked
  8285  001FE2  2B98               	incf	USBDeviceTasks@i& (0+255),f,b
  8286  001FE4  D7C5               	goto	l15488
  8287  001FE6                     u15190:
  8288                           
  8289                           ;usb_device.c: 840: }
  8290                           ;usb_device.c: 841: }
  8291                           ;usb_device.c: 842: }
  8292                           ;usb_device.c: 844: {PIR2bits.USBIF = 0;};
  8293                           
  8294                           ; BSR set to: 0
  8295  001FE6  98A1               	bcf	4001,4,c	;volatile
  8296  001FE8  0012               	return		;funcret
  8297  001FEA                     __end_of_USBDeviceTasks:
  8298                           	opt stack 0
  8299                           tosu	equ	0xFFF
  8300                           tosh	equ	0xFFE
  8301                           tosl	equ	0xFFD
  8302                           pclath	equ	0xFFA
  8303                           tblptru	equ	0xFF8
  8304                           tblptrh	equ	0xFF7
  8305                           tblptrl	equ	0xFF6
  8306                           tablat	equ	0xFF5
  8307                           prodh	equ	0xFF4
  8308                           prodl	equ	0xFF3
  8309                           intcon	equ	0xFF2
  8310                           intcon2	equ	0xFF1
  8311                           intcon3	equ	0xFF0
  8312                           postinc0	equ	0xFEE
  8313                           plusw0	equ	0xFEB
  8314                           wreg	equ	0xFE8
  8315                           postinc1	equ	0xFE6
  8316                           postdec1	equ	0xFE5
  8317                           fsr1h	equ	0xFE2
  8318                           fsr1l	equ	0xFE1
  8319                           indf2	equ	0xFDF
  8320                           postinc2	equ	0xFDE
  8321                           postdec2	equ	0xFDD
  8322                           plusw2	equ	0xFDB
  8323                           fsr2h	equ	0xFDA
  8324                           fsr2l	equ	0xFD9
  8325                           status	equ	0xFD8
  8326                           
  8327 ;; *************** function _USBWakeFromSuspend *****************
  8328 ;; Defined at:
  8329 ;;		line 2321 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8330 ;; Parameters:    Size  Location     Type
  8331 ;;		None
  8332 ;; Auto vars:     Size  Location     Type
  8333 ;;		None
  8334 ;; Return value:  Size  Location     Type
  8335 ;;                  1    wreg      void 
  8336 ;; Registers used:
  8337 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8338 ;; Tracked objects:
  8339 ;;		On entry : 0/0
  8340 ;;		On exit  : 0/0
  8341 ;;		Unchanged: 0/0
  8342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8343 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8344 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8345 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8346 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8347 ;;Total ram usage:        0 bytes
  8348 ;; Hardware stack levels used:    1
  8349 ;; Hardware stack levels required when called:   15
  8350 ;; This function calls:
  8351 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  8352 ;; This function is called by:
  8353 ;;		_USBDeviceTasks
  8354 ;; This function uses a non-reentrant model
  8355 ;;
  8356                           
  8357                           	psect	text29
  8358  0060AE                     __ptext29:
  8359                           	opt stack 0
  8360  0060AE                     _USBWakeFromSuspend:
  8361                           	opt stack 11
  8362                           
  8363                           ;usb_device.c: 2323: USBBusIsSuspended = 0;
  8364                           
  8365                           ;incstack = 0
  8366  0060AE  0E00               	movlw	0
  8367  0060B0  0101               	movlb	1	; () banked
  8368  0060B2  6FE2               	movwf	_USBBusIsSuspended& (0+255),b
  8369                           
  8370                           ; BSR set to: 1
  8371                           ;usb_device.c: 2329: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
  8372  0060B4  0E00               	movlw	0
  8373  0060B6  0100               	movlb	0	; () banked
  8374  0060B8  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  8375  0060BA  0E74               	movlw	116
  8376  0060BC  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  8377  0060BE  0E00               	movlw	0
  8378  0060C0  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  8379  0060C2  0E00               	movlw	0
  8380  0060C4  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  8381  0060C6  0E00               	movlw	0
  8382  0060C8  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  8383  0060CA  0E00               	movlw	0
  8384  0060CC  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  8385  0060CE  ECC9  F02A         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  8386                           
  8387                           ;usb_device.c: 2336: UCONbits.SUSPND = 0;
  8388  0060D2  9265               	bcf	3941,1,c	;volatile
  8389                           
  8390                           ;usb_device.c: 2341: UIEbits.ACTVIE = 0;
  8391  0060D4  010F               	movlb	15	; () banked
  8392  0060D6  9536               	bcf	54,2,b	;volatile
  8393                           
  8394                           ;usb_device.c: 2359: while(UIRbits.ACTVIF)
  8395  0060D8  D001               	goto	l1765
  8396  0060DA                     
  8397                           ;usb_device.c: 2361: {
  8398                           ;usb_device.c: 2362: (UIR &= 0xFB);
  8399                           
  8400                           ; BSR set to: 15
  8401  0060DA  9462               	bcf	3938,2,c	;volatile
  8402  0060DC                     l1765:
  8403  0060DC  B462               	btfsc	3938,2,c	;volatile
  8404  0060DE  D7FD               	goto	l1766
  8405                           
  8406                           ;usb_device.c: 2363: }
  8407                           ;usb_device.c: 2365: USBTicksSinceSuspendEnd = 0;
  8408  0060E0  0E00               	movlw	0
  8409  0060E2  0101               	movlb	1	; () banked
  8410  0060E4  6FE0               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
  8411                           
  8412                           ; BSR set to: 1
  8413  0060E6  0012               	return		;funcret
  8414  0060E8                     __end_of_USBWakeFromSuspend:
  8415                           	opt stack 0
  8416                           tosu	equ	0xFFF
  8417                           tosh	equ	0xFFE
  8418                           tosl	equ	0xFFD
  8419                           pclath	equ	0xFFA
  8420                           tblptru	equ	0xFF8
  8421                           tblptrh	equ	0xFF7
  8422                           tblptrl	equ	0xFF6
  8423                           tablat	equ	0xFF5
  8424                           prodh	equ	0xFF4
  8425                           prodl	equ	0xFF3
  8426                           intcon	equ	0xFF2
  8427                           intcon2	equ	0xFF1
  8428                           intcon3	equ	0xFF0
  8429                           postinc0	equ	0xFEE
  8430                           plusw0	equ	0xFEB
  8431                           wreg	equ	0xFE8
  8432                           postinc1	equ	0xFE6
  8433                           postdec1	equ	0xFE5
  8434                           fsr1h	equ	0xFE2
  8435                           fsr1l	equ	0xFE1
  8436                           indf2	equ	0xFDF
  8437                           postinc2	equ	0xFDE
  8438                           postdec2	equ	0xFDD
  8439                           plusw2	equ	0xFDB
  8440                           fsr2h	equ	0xFDA
  8441                           fsr2l	equ	0xFD9
  8442                           status	equ	0xFD8
  8443                           
  8444 ;; *************** function _USBSuspend *****************
  8445 ;; Defined at:
  8446 ;;		line 2263 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8447 ;; Parameters:    Size  Location     Type
  8448 ;;		None
  8449 ;; Auto vars:     Size  Location     Type
  8450 ;;		None
  8451 ;; Return value:  Size  Location     Type
  8452 ;;                  1    wreg      void 
  8453 ;; Registers used:
  8454 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8455 ;; Tracked objects:
  8456 ;;		On entry : 0/0
  8457 ;;		On exit  : 0/0
  8458 ;;		Unchanged: 0/0
  8459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8460 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8461 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8462 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8463 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8464 ;;Total ram usage:        0 bytes
  8465 ;; Hardware stack levels used:    1
  8466 ;; Hardware stack levels required when called:   15
  8467 ;; This function calls:
  8468 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  8469 ;; This function is called by:
  8470 ;;		_USBDeviceTasks
  8471 ;; This function uses a non-reentrant model
  8472 ;;
  8473                           
  8474                           	psect	text30
  8475  0061C2                     __ptext30:
  8476                           	opt stack 0
  8477  0061C2                     _USBSuspend:
  8478                           	opt stack 11
  8479                           
  8480                           ;usb_device.c: 2288: UIEbits.ACTVIE = 1;
  8481                           
  8482                           ; BSR set to: 1
  8483                           ;incstack = 0
  8484  0061C2  010F               	movlb	15	; () banked
  8485  0061C4  8536               	bsf	54,2,b	;volatile
  8486                           
  8487                           ; BSR set to: 15
  8488                           ;usb_device.c: 2289: (UIR &= 0xEF);
  8489  0061C6  9862               	bcf	3938,4,c	;volatile
  8490                           
  8491                           ; BSR set to: 15
  8492                           ;usb_device.c: 2292: UCONbits.SUSPND = 1;
  8493  0061C8  8265               	bsf	3941,1,c	;volatile
  8494                           
  8495                           ; BSR set to: 15
  8496                           ;usb_device.c: 2295: USBBusIsSuspended = 1;
  8497  0061CA  0E01               	movlw	1
  8498  0061CC  0101               	movlb	1	; () banked
  8499  0061CE  6FE2               	movwf	_USBBusIsSuspended& (0+255),b
  8500                           
  8501                           ; BSR set to: 1
  8502                           ;usb_device.c: 2296: USBTicksSinceSuspendEnd = 0;
  8503  0061D0  0E00               	movlw	0
  8504  0061D2  6FE0               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
  8505                           
  8506                           ; BSR set to: 1
  8507                           ;usb_device.c: 2303: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
  8508  0061D4  0E00               	movlw	0
  8509  0061D6  0100               	movlb	0	; () banked
  8510  0061D8  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  8511  0061DA  0E75               	movlw	117
  8512  0061DC  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  8513  0061DE  0E00               	movlw	0
  8514  0061E0  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  8515  0061E2  0E00               	movlw	0
  8516  0061E4  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  8517  0061E6  0E00               	movlw	0
  8518  0061E8  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  8519  0061EA  0E00               	movlw	0
  8520  0061EC  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  8521  0061EE  ECC9  F02A         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  8522  0061F2  0012               	return		;funcret
  8523  0061F4                     __end_of_USBSuspend:
  8524                           	opt stack 0
  8525                           tosu	equ	0xFFF
  8526                           tosh	equ	0xFFE
  8527                           tosl	equ	0xFFD
  8528                           pclath	equ	0xFFA
  8529                           tblptru	equ	0xFF8
  8530                           tblptrh	equ	0xFF7
  8531                           tblptrl	equ	0xFF6
  8532                           tablat	equ	0xFF5
  8533                           prodh	equ	0xFF4
  8534                           prodl	equ	0xFF3
  8535                           intcon	equ	0xFF2
  8536                           intcon2	equ	0xFF1
  8537                           intcon3	equ	0xFF0
  8538                           postinc0	equ	0xFEE
  8539                           plusw0	equ	0xFEB
  8540                           wreg	equ	0xFE8
  8541                           postinc1	equ	0xFE6
  8542                           postdec1	equ	0xFE5
  8543                           fsr1h	equ	0xFE2
  8544                           fsr1l	equ	0xFE1
  8545                           indf2	equ	0xFDF
  8546                           postinc2	equ	0xFDE
  8547                           postdec2	equ	0xFDD
  8548                           plusw2	equ	0xFDB
  8549                           fsr2h	equ	0xFDA
  8550                           fsr2l	equ	0xFD9
  8551                           status	equ	0xFD8
  8552                           
  8553 ;; *************** function _USBStallHandler *****************
  8554 ;; Defined at:
  8555 ;;		line 2220 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8556 ;; Parameters:    Size  Location     Type
  8557 ;;		None
  8558 ;; Auto vars:     Size  Location     Type
  8559 ;;		None
  8560 ;; Return value:  Size  Location     Type
  8561 ;;                  1    wreg      void 
  8562 ;; Registers used:
  8563 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8564 ;; Tracked objects:
  8565 ;;		On entry : 0/0
  8566 ;;		On exit  : 0/0
  8567 ;;		Unchanged: 0/0
  8568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8569 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8570 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8571 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8572 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8573 ;;Total ram usage:        1 bytes
  8574 ;; Hardware stack levels used:    1
  8575 ;; Hardware stack levels required when called:   11
  8576 ;; This function calls:
  8577 ;;		Nothing
  8578 ;; This function is called by:
  8579 ;;		_USBDeviceTasks
  8580 ;; This function uses a non-reentrant model
  8581 ;;
  8582                           
  8583                           	psect	text31
  8584  005DE4                     __ptext31:
  8585                           	opt stack 0
  8586  005DE4                     _USBStallHandler:
  8587                           	opt stack 15
  8588                           
  8589                           ;usb_device.c: 2232: if(UEP0bits.EPSTALL == 1)
  8590                           
  8591                           ;incstack = 0
  8592  005DE4  010F               	movlb	15	; () banked
  8593  005DE6  A126               	btfss	38,0,b	;volatile
  8594  005DE8  D01D               	goto	l1757
  8595                           
  8596                           ; BSR set to: 15
  8597                           ;usb_device.c: 2233: {
  8598                           ;usb_device.c: 2235: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
  8599  005DEA  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  8600  005DEE  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  8601  005DF2  0E80               	movlw	128
  8602  005DF4  18DE               	xorwf	postinc2,w,c
  8603  005DF6  A4D8               	btfss	status,2,c
  8604  005DF8  D014               	goto	l1758
  8605                           
  8606                           ; BSR set to: 15
  8607  005DFA  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
  8608  005DFE  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  8609  005E02  0E84               	movlw	132
  8610  005E04  18DE               	xorwf	postinc2,w,c
  8611  005E06  A4D8               	btfss	status,2,c
  8612  005E08  D00C               	goto	l1758
  8613                           
  8614                           ; BSR set to: 15
  8615                           ;usb_device.c: 2236: {
  8616                           ;usb_device.c: 2238: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  8617  005E0A  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  8618  005E0E  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  8619  005E12  0E0C               	movlw	12
  8620  005E14  6EDF               	movwf	indf2,c
  8621                           
  8622                           ; BSR set to: 15
  8623                           ;usb_device.c: 2239: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
  8624  005E16  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  8625  005E1A  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  8626  005E1E  0E00               	movlw	0
  8627  005E20  8EDB               	bsf	plusw2,7,c
  8628  005E22                     l1758:
  8629                           
  8630                           ; BSR set to: 15
  8631                           ;usb_device.c: 2240: }
  8632                           ;usb_device.c: 2241: UEP0bits.EPSTALL = 0;
  8633                           
  8634                           ; BSR set to: 15
  8635  005E22  9126               	bcf	38,0,b	;volatile
  8636  005E24                     l1757:
  8637                           
  8638                           ; BSR set to: 15
  8639                           ;usb_device.c: 2242: }
  8640                           ;usb_device.c: 2244: (UIR &= 0xDF);
  8641  005E24  9A62               	bcf	3938,5,c	;volatile
  8642                           
  8643                           ; BSR set to: 15
  8644  005E26  0012               	return		;funcret
  8645  005E28                     __end_of_USBStallHandler:
  8646                           	opt stack 0
  8647                           tosu	equ	0xFFF
  8648                           tosh	equ	0xFFE
  8649                           tosl	equ	0xFFD
  8650                           pclath	equ	0xFFA
  8651                           tblptru	equ	0xFF8
  8652                           tblptrh	equ	0xFF7
  8653                           tblptrl	equ	0xFF6
  8654                           tablat	equ	0xFF5
  8655                           prodh	equ	0xFF4
  8656                           prodl	equ	0xFF3
  8657                           intcon	equ	0xFF2
  8658                           intcon2	equ	0xFF1
  8659                           intcon3	equ	0xFF0
  8660                           postinc0	equ	0xFEE
  8661                           plusw0	equ	0xFEB
  8662                           wreg	equ	0xFE8
  8663                           postinc1	equ	0xFE6
  8664                           postdec1	equ	0xFE5
  8665                           fsr1h	equ	0xFE2
  8666                           fsr1l	equ	0xFE1
  8667                           indf2	equ	0xFDF
  8668                           postinc2	equ	0xFDE
  8669                           postdec2	equ	0xFDD
  8670                           plusw2	equ	0xFDB
  8671                           fsr2h	equ	0xFDA
  8672                           fsr2l	equ	0xFD9
  8673                           status	equ	0xFD8
  8674                           
  8675 ;; *************** function _USBIncrement1msInternalTimers *****************
  8676 ;; Defined at:
  8677 ;;		line 3042 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8678 ;; Parameters:    Size  Location     Type
  8679 ;;		None
  8680 ;; Auto vars:     Size  Location     Type
  8681 ;;		None
  8682 ;; Return value:  Size  Location     Type
  8683 ;;                  1    wreg      void 
  8684 ;; Registers used:
  8685 ;;		wreg, status,2, status,0
  8686 ;; Tracked objects:
  8687 ;;		On entry : 0/0
  8688 ;;		On exit  : 0/0
  8689 ;;		Unchanged: 0/0
  8690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8691 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8692 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8694 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8695 ;;Total ram usage:        0 bytes
  8696 ;; Hardware stack levels used:    1
  8697 ;; Hardware stack levels required when called:   11
  8698 ;; This function calls:
  8699 ;;		Nothing
  8700 ;; This function is called by:
  8701 ;;		_USBDeviceTasks
  8702 ;; This function uses a non-reentrant model
  8703 ;;
  8704                           
  8705                           	psect	text32
  8706  0064E8                     __ptext32:
  8707                           	opt stack 0
  8708  0064E8                     _USBIncrement1msInternalTimers:
  8709                           	opt stack 15
  8710                           
  8711                           ;usb_device.c: 3050: USB1msTickCount++;
  8712                           
  8713                           ; BSR set to: 15
  8714                           ;incstack = 0
  8715  0064E8  0E01               	movlw	1
  8716  0064EA  0103               	movlb	3	; () banked
  8717  0064EC  2718               	addwf	_USB1msTickCount& (0+255),f,b
  8718  0064EE  0E00               	movlw	0
  8719  0064F0  2319               	addwfc	(_USB1msTickCount+1)& (0+255),f,b
  8720  0064F2  231A               	addwfc	(_USB1msTickCount+2)& (0+255),f,b
  8721  0064F4  231B               	addwfc	(_USB1msTickCount+3)& (0+255),f,b
  8722                           
  8723                           ; BSR set to: 3
  8724                           ;usb_device.c: 3051: if(USBBusIsSuspended == 0)
  8725  0064F6  0101               	movlb	1	; () banked
  8726  0064F8  51E2               	movf	_USBBusIsSuspended& (0+255),w,b
  8727  0064FA  A4D8               	btfss	status,2,c
  8728  0064FC  0012               	return	
  8729                           
  8730                           ; BSR set to: 1
  8731                           ;usb_device.c: 3052: {
  8732                           ;usb_device.c: 3053: USBTicksSinceSuspendEnd++;
  8733  0064FE  2BE0               	incf	_USBTicksSinceSuspendEnd& (0+255),f,b
  8734                           
  8735                           ; BSR set to: 1
  8736                           ;usb_device.c: 3055: if(USBTicksSinceSuspendEnd == 0)
  8737  006500  51E0               	movf	_USBTicksSinceSuspendEnd& (0+255),w,b
  8738  006502  A4D8               	btfss	status,2,c
  8739  006504  0012               	return	
  8740                           
  8741                           ; BSR set to: 1
  8742                           ;usb_device.c: 3056: {
  8743                           ;usb_device.c: 3057: USBTicksSinceSuspendEnd = 255;
  8744  006506  69E0               	setf	_USBTicksSinceSuspendEnd& (0+255),b
  8745                           
  8746                           ; BSR set to: 1
  8747  006508  0012               	return	
  8748  00650A                     __end_of_USBIncrement1msInternalTimers:
  8749                           	opt stack 0
  8750                           tosu	equ	0xFFF
  8751                           tosh	equ	0xFFE
  8752                           tosl	equ	0xFFD
  8753                           pclath	equ	0xFFA
  8754                           tblptru	equ	0xFF8
  8755                           tblptrh	equ	0xFF7
  8756                           tblptrl	equ	0xFF6
  8757                           tablat	equ	0xFF5
  8758                           prodh	equ	0xFF4
  8759                           prodl	equ	0xFF3
  8760                           intcon	equ	0xFF2
  8761                           intcon2	equ	0xFF1
  8762                           intcon3	equ	0xFF0
  8763                           postinc0	equ	0xFEE
  8764                           plusw0	equ	0xFEB
  8765                           wreg	equ	0xFE8
  8766                           postinc1	equ	0xFE6
  8767                           postdec1	equ	0xFE5
  8768                           fsr1h	equ	0xFE2
  8769                           fsr1l	equ	0xFE1
  8770                           indf2	equ	0xFDF
  8771                           postinc2	equ	0xFDE
  8772                           postdec2	equ	0xFDD
  8773                           plusw2	equ	0xFDB
  8774                           fsr2h	equ	0xFDA
  8775                           fsr2l	equ	0xFD9
  8776                           status	equ	0xFD8
  8777                           
  8778 ;; *************** function _USBDeviceInit *****************
  8779 ;; Defined at:
  8780 ;;		line 295 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8781 ;; Parameters:    Size  Location     Type
  8782 ;;		None
  8783 ;; Auto vars:     Size  Location     Type
  8784 ;;  i               1   37[BANK0 ] unsigned char 
  8785 ;; Return value:  Size  Location     Type
  8786 ;;                  1    wreg      void 
  8787 ;; Registers used:
  8788 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8789 ;; Tracked objects:
  8790 ;;		On entry : 0/0
  8791 ;;		On exit  : 0/0
  8792 ;;		Unchanged: 0/0
  8793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8794 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8795 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8797 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8798 ;;Total ram usage:        1 bytes
  8799 ;; Hardware stack levels used:    1
  8800 ;; Hardware stack levels required when called:   12
  8801 ;; This function calls:
  8802 ;;		_memset
  8803 ;; This function is called by:
  8804 ;;		_USBDeviceTasks
  8805 ;;		_UsbDevice_MainTask
  8806 ;; This function uses a non-reentrant model
  8807 ;;
  8808                           
  8809                           	psect	text33
  8810  0026E4                     __ptext33:
  8811                           	opt stack 0
  8812  0026E4                     _USBDeviceInit:
  8813                           	opt stack 14
  8814                           
  8815                           ;usb_device.c: 297: uint8_t i;
  8816                           ;usb_device.c: 299: {PIE2bits.USBIE = 0;};
  8817                           
  8818                           ; BSR set to: 1
  8819                           ;incstack = 0
  8820  0026E4  98A0               	bcf	4000,4,c	;volatile
  8821                           
  8822                           ;usb_device.c: 303: ;
  8823                           ;usb_device.c: 306: {UEIR = 0;};
  8824  0026E6  0E00               	movlw	0
  8825  0026E8  6E63               	movwf	3939,c	;volatile
  8826                           
  8827                           ;usb_device.c: 309: {UIR = 0;};
  8828  0026EA  0E00               	movlw	0
  8829  0026EC  6E62               	movwf	3938,c	;volatile
  8830                           
  8831                           ;usb_device.c: 312: UEP0 = 0;
  8832  0026EE  0E00               	movlw	0
  8833  0026F0  010F               	movlb	15	; () banked
  8834  0026F2  6F26               	movwf	38,b	;volatile
  8835                           
  8836                           ; BSR set to: 15
  8837                           ;usb_device.c: 314: memset((void*)&UEP1,0x00,(2));;
  8838  0026F4  0E27               	movlw	39
  8839  0026F6  0100               	movlb	0	; () banked
  8840  0026F8  6F7D               	movwf	memset@p1& (0+255),b
  8841  0026FA  0E0F               	movlw	15
  8842  0026FC  6F7E               	movwf	(memset@p1+1)& (0+255),b
  8843  0026FE  0E00               	movlw	0
  8844  002700  6F80               	movwf	(memset@c+1)& (0+255),b
  8845  002702  0E00               	movlw	0
  8846  002704  6F7F               	movwf	memset@c& (0+255),b
  8847  002706  0E00               	movlw	0
  8848  002708  6F82               	movwf	(memset@n+1)& (0+255),b
  8849  00270A  0E02               	movlw	2
  8850  00270C  6F81               	movwf	memset@n& (0+255),b
  8851  00270E  EC2B  F031         	call	_memset	;wreg free
  8852                           
  8853                           ;usb_device.c: 316: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  8854  002712  0E16               	movlw	22
  8855  002714  010F               	movlb	15	; () banked
  8856  002716  6F39               	movwf	57,b	;volatile
  8857                           
  8858                           ; BSR set to: 15
  8859  002718  0E9F               	movlw	159
  8860  00271A  6F37               	movwf	55,b	;volatile
  8861                           
  8862                           ; BSR set to: 15
  8863  00271C  0E7B               	movlw	123
  8864  00271E  6F36               	movwf	54,b	;volatile
  8865                           
  8866                           ; BSR set to: 15
  8867                           ;usb_device.c: 319: ;
  8868                           ;usb_device.c: 322: ;
  8869                           ;usb_device.c: 325: for(i = 0; i < (sizeof(BDT)/sizeof(BDT_ENTRY)); i++)
  8870  002720  0E00               	movlw	0
  8871  002722  0100               	movlb	0	; () banked
  8872  002724  6F85               	movwf	USBDeviceInit@i& (0+255),b
  8873  002726                     l14208:
  8874                           
  8875                           ; BSR set to: 0
  8876  002726  0E0B               	movlw	11
  8877  002728  6585               	cpfsgt	USBDeviceInit@i& (0+255),b
  8878  00272A  D001               	goto	l1601
  8879  00272C  D00E               	goto	u13390
  8880  00272E                     l1601:
  8881                           
  8882                           ; BSR set to: 0
  8883                           ;usb_device.c: 326: {
  8884                           ;usb_device.c: 327: BDT[i].Val = 0x00;
  8885                           
  8886                           ; BSR set to: 0
  8887  00272E  5185               	movf	USBDeviceInit@i& (0+255),w,b
  8888  002730  0D04               	mullw	4
  8889  002732  0E00               	movlw	0
  8890  002734  24F3               	addwf	prodl,w,c
  8891  002736  6ED9               	movwf	fsr2l,c
  8892  002738  0E04               	movlw	4
  8893  00273A  20F4               	addwfc	prodh,w,c
  8894  00273C  6EDA               	movwf	fsr2h,c
  8895  00273E  6ADE               	clrf	postinc2,c
  8896  002740  6ADE               	clrf	postinc2,c
  8897  002742  6ADE               	clrf	postinc2,c
  8898  002744  6ADD               	clrf	postdec2,c
  8899                           
  8900                           ; BSR set to: 0
  8901  002746  2B85               	incf	USBDeviceInit@i& (0+255),f,b
  8902  002748  D7EE               	goto	l14208
  8903  00274A                     u13390:
  8904                           
  8905                           ; BSR set to: 0
  8906                           ;usb_device.c: 328: }
  8907                           ;usb_device.c: 331: UCONbits.PPBRST = 1;
  8908  00274A  8C65               	bsf	3941,6,c	;volatile
  8909                           
  8910                           ; BSR set to: 0
  8911                           ;usb_device.c: 334: UADDR = 0x00;
  8912  00274C  0E00               	movlw	0
  8913  00274E  010F               	movlb	15	; () banked
  8914  002750  6F38               	movwf	56,b	;volatile
  8915                           
  8916                           ; BSR set to: 15
  8917                           ;usb_device.c: 337: UCONbits.PKTDIS = 0;
  8918  002752  9865               	bcf	3941,4,c	;volatile
  8919                           
  8920                           ; BSR set to: 15
  8921                           ;usb_device.c: 340: UCONbits.PPBRST = 0;
  8922  002754  9C65               	bcf	3941,6,c	;volatile
  8923  002756                     
  8924                           ;usb_device.c: 344: {
  8925                           ;usb_device.c: 345: (UIR &= 0xF7);
  8926                           
  8927                           ; BSR set to: 15
  8928  002756  9662               	bcf	3938,3,c	;volatile
  8929                           
  8930                           ;usb_device.c: 347: inPipes[0].info.Val = 0;
  8931  002758  0E00               	movlw	0
  8932  00275A  0100               	movlb	0	; () banked
  8933  00275C  6FB3               	movwf	(_inPipes+3)& (0+255),b
  8934                           
  8935                           ; BSR set to: 0
  8936                           ;usb_device.c: 348: outPipes[0].info.Val = 0;
  8937  00275E  0E00               	movlw	0
  8938  002760  0101               	movlb	1	; () banked
  8939  002762  6FCC               	movwf	(_outPipes+3)& (0+255),b
  8940                           
  8941                           ; BSR set to: 1
  8942                           ;usb_device.c: 349: outPipes[0].wCount.Val = 0;
  8943  002764  0E00               	movlw	0
  8944  002766  6FCE               	movwf	(_outPipes+5)& (0+255),b
  8945  002768  0E00               	movlw	0
  8946  00276A  6FCD               	movwf	(_outPipes+4)& (0+255),b
  8947                           
  8948                           ; BSR set to: 1
  8949                           ;usb_device.c: 350: }while(UIRbits.TRNIF == 1);
  8950  00276C  B662               	btfsc	3938,3,c	;volatile
  8951  00276E  D7F3               	goto	l1603
  8952                           
  8953                           ; BSR set to: 1
  8954                           ;usb_device.c: 354: USBStatusStageEnabledFlag1 = 1;
  8955                           
  8956                           ; BSR set to: 1
  8957  002770  0E01               	movlw	1
  8958  002772  6E28               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
  8959                           
  8960                           ;usb_device.c: 355: USBStatusStageEnabledFlag2 = 1;
  8961  002774  0E01               	movlw	1
  8962  002776  6E27               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  8963                           
  8964                           ;usb_device.c: 357: USBDeferINDataStagePackets = 0;
  8965  002778  0E00               	movlw	0
  8966  00277A  6E26               	movwf	_USBDeferINDataStagePackets,c	;volatile
  8967                           
  8968                           ;usb_device.c: 358: USBDeferOUTDataStagePackets = 0;
  8969  00277C  0E00               	movlw	0
  8970  00277E  6E25               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
  8971                           
  8972                           ;usb_device.c: 359: USBBusIsSuspended = 0;
  8973  002780  0E00               	movlw	0
  8974  002782  6FE2               	movwf	_USBBusIsSuspended& (0+255),b
  8975                           
  8976                           ;usb_device.c: 363: for(i = 0; i < (uint8_t)(2+1u); i++)
  8977  002784  0E00               	movlw	0
  8978  002786  0100               	movlb	0	; () banked
  8979  002788  6F85               	movwf	USBDeviceInit@i& (0+255),b
  8980  00278A                     l14236:
  8981                           
  8982                           ; BSR set to: 0
  8983  00278A  0E02               	movlw	2
  8984  00278C  6585               	cpfsgt	USBDeviceInit@i& (0+255),b
  8985  00278E  D001               	goto	l1605
  8986  002790  D02E               	goto	u13420
  8987  002792                     l1605:
  8988                           
  8989                           ; BSR set to: 0
  8990                           ;usb_device.c: 364: {
  8991                           ;usb_device.c: 365: pBDTEntryIn[i] = 0u;
  8992                           
  8993                           ; BSR set to: 0
  8994  002792  5185               	movf	USBDeviceInit@i& (0+255),w,b
  8995  002794  0D02               	mullw	2
  8996  002796  0EB6               	movlw	low _pBDTEntryIn
  8997  002798  24F3               	addwf	prodl,w,c
  8998  00279A  6ED9               	movwf	fsr2l,c
  8999  00279C  0E00               	movlw	high _pBDTEntryIn
  9000  00279E  20F4               	addwfc	prodh,w,c
  9001  0027A0  6EDA               	movwf	fsr2h,c
  9002  0027A2  0E00               	movlw	0
  9003  0027A4  6EDE               	movwf	postinc2,c
  9004  0027A6  0E00               	movlw	0
  9005  0027A8  6EDD               	movwf	postdec2,c
  9006                           
  9007                           ;usb_device.c: 366: pBDTEntryOut[i] = 0u;
  9008  0027AA  5185               	movf	USBDeviceInit@i& (0+255),w,b
  9009  0027AC  0D02               	mullw	2
  9010  0027AE  0E0E               	movlw	low _pBDTEntryOut
  9011  0027B0  24F3               	addwf	prodl,w,c
  9012  0027B2  6ED9               	movwf	fsr2l,c
  9013  0027B4  0E03               	movlw	high _pBDTEntryOut
  9014  0027B6  20F4               	addwfc	prodh,w,c
  9015  0027B8  6EDA               	movwf	fsr2h,c
  9016  0027BA  0E00               	movlw	0
  9017  0027BC  6EDE               	movwf	postinc2,c
  9018  0027BE  0E00               	movlw	0
  9019  0027C0  6EDD               	movwf	postdec2,c
  9020                           
  9021                           ;usb_device.c: 367: ep_data_in[i].Val = 0u;
  9022  0027C2  5185               	movf	USBDeviceInit@i& (0+255),w,b
  9023  0027C4  0D01               	mullw	1
  9024  0027C6  0ED1               	movlw	low _ep_data_in
  9025  0027C8  24F3               	addwf	prodl,w,c
  9026  0027CA  6ED9               	movwf	fsr2l,c
  9027  0027CC  0E02               	movlw	high _ep_data_in
  9028  0027CE  20F4               	addwfc	prodh,w,c
  9029  0027D0  6EDA               	movwf	fsr2h,c
  9030  0027D2  0E00               	movlw	0
  9031  0027D4  6EDF               	movwf	indf2,c
  9032                           
  9033                           ;usb_device.c: 368: ep_data_out[i].Val = 0u;
  9034  0027D6  5185               	movf	USBDeviceInit@i& (0+255),w,b
  9035  0027D8  0D01               	mullw	1
  9036  0027DA  0ECE               	movlw	low _ep_data_out
  9037  0027DC  24F3               	addwf	prodl,w,c
  9038  0027DE  6ED9               	movwf	fsr2l,c
  9039  0027E0  0E02               	movlw	high _ep_data_out
  9040  0027E2  20F4               	addwfc	prodh,w,c
  9041  0027E4  6EDA               	movwf	fsr2h,c
  9042  0027E6  0E00               	movlw	0
  9043  0027E8  6EDF               	movwf	indf2,c
  9044                           
  9045                           ; BSR set to: 0
  9046  0027EA  2B85               	incf	USBDeviceInit@i& (0+255),f,b
  9047  0027EC  D7CE               	goto	l14236
  9048  0027EE                     u13420:
  9049                           
  9050                           ; BSR set to: 0
  9051                           ;usb_device.c: 369: }
  9052                           ;usb_device.c: 372: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  9053                           
  9054                           ; BSR set to: 0
  9055  0027EE  0E08               	movlw	8
  9056  0027F0  6FB6               	movwf	_pBDTEntryIn& (0+255),b
  9057  0027F2  0E04               	movlw	4
  9058  0027F4  6FB7               	movwf	(_pBDTEntryIn+1)& (0+255),b
  9059                           
  9060                           ; BSR set to: 0
  9061                           ;usb_device.c: 374: UEP0 = 0x06|0x10;
  9062  0027F6  0E16               	movlw	22
  9063  0027F8  010F               	movlb	15	; () banked
  9064  0027FA  6F26               	movwf	38,b	;volatile
  9065                           
  9066                           ; BSR set to: 15
  9067                           ;usb_device.c: 376: BDT[0].ADR = ((uint16_t)(&SetupPkt));
  9068  0027FC  0E04               	movlw	4
  9069  0027FE  0104               	movlb	4	; () banked
  9070  002800  6F03               	movwf	3,b	;volatile
  9071  002802  0E30               	movlw	48
  9072  002804  6F02               	movwf	2,b	;volatile
  9073                           
  9074                           ; BSR set to: 4
  9075                           ;usb_device.c: 377: BDT[0].CNT = 8;
  9076  002806  0E08               	movlw	8
  9077  002808  6F01               	movwf	1,b	;volatile
  9078                           
  9079                           ; BSR set to: 4
  9080                           ;usb_device.c: 378: BDT[0].STAT.Val = 0x00|0x04;
  9081  00280A  0E04               	movlw	4
  9082  00280C  6F00               	movwf	0,b	;volatile
  9083                           
  9084                           ; BSR set to: 4
  9085                           ;usb_device.c: 379: BDT[0].STAT.Val |= 0x80;
  9086  00280E  8F00               	bsf	0,7,b	;volatile
  9087                           
  9088                           ; BSR set to: 4
  9089                           ;usb_device.c: 382: USBActiveConfiguration = 0;
  9090  002810  0E00               	movlw	0
  9091  002812  0100               	movlb	0	; () banked
  9092  002814  6FD5               	movwf	_USBActiveConfiguration& (0+255),b
  9093                           
  9094                           ; BSR set to: 0
  9095                           ;usb_device.c: 384: USB1msTickCount = 0;
  9096  002816  0E00               	movlw	0
  9097  002818  0103               	movlb	3	; () banked
  9098  00281A  6F18               	movwf	_USB1msTickCount& (0+255),b
  9099  00281C  0E00               	movlw	0
  9100  00281E  6F19               	movwf	(_USB1msTickCount+1)& (0+255),b
  9101  002820  0E00               	movlw	0
  9102  002822  6F1A               	movwf	(_USB1msTickCount+2)& (0+255),b
  9103  002824  0E00               	movlw	0
  9104  002826  6F1B               	movwf	(_USB1msTickCount+3)& (0+255),b
  9105                           
  9106                           ; BSR set to: 3
  9107                           ;usb_device.c: 385: USBTicksSinceSuspendEnd = 0;
  9108  002828  0E00               	movlw	0
  9109  00282A  0101               	movlb	1	; () banked
  9110  00282C  6FE0               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
  9111                           
  9112                           ; BSR set to: 1
  9113                           ;usb_device.c: 388: USBDeviceState = DETACHED_STATE;
  9114  00282E  0E00               	movlw	0
  9115  002830  0100               	movlb	0	; () banked
  9116  002832  6FCC               	movwf	_USBDeviceState& (0+255),b
  9117                           
  9118                           ; BSR set to: 0
  9119  002834  0012               	return		;funcret
  9120  002836                     __end_of_USBDeviceInit:
  9121                           	opt stack 0
  9122                           tosu	equ	0xFFF
  9123                           tosh	equ	0xFFE
  9124                           tosl	equ	0xFFD
  9125                           pclath	equ	0xFFA
  9126                           tblptru	equ	0xFF8
  9127                           tblptrh	equ	0xFF7
  9128                           tblptrl	equ	0xFF6
  9129                           tablat	equ	0xFF5
  9130                           prodh	equ	0xFF4
  9131                           prodl	equ	0xFF3
  9132                           intcon	equ	0xFF2
  9133                           intcon2	equ	0xFF1
  9134                           intcon3	equ	0xFF0
  9135                           postinc0	equ	0xFEE
  9136                           plusw0	equ	0xFEB
  9137                           wreg	equ	0xFE8
  9138                           postinc1	equ	0xFE6
  9139                           postdec1	equ	0xFE5
  9140                           fsr1h	equ	0xFE2
  9141                           fsr1l	equ	0xFE1
  9142                           indf2	equ	0xFDF
  9143                           postinc2	equ	0xFDE
  9144                           postdec2	equ	0xFDD
  9145                           plusw2	equ	0xFDB
  9146                           fsr2h	equ	0xFDA
  9147                           fsr2l	equ	0xFD9
  9148                           status	equ	0xFD8
  9149                           
  9150 ;; *************** function _USBCtrlEPService *****************
  9151 ;; Defined at:
  9152 ;;		line 2390 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  9153 ;; Parameters:    Size  Location     Type
  9154 ;;		None
  9155 ;; Auto vars:     Size  Location     Type
  9156 ;;		None
  9157 ;; Return value:  Size  Location     Type
  9158 ;;                  1    wreg      void 
  9159 ;; Registers used:
  9160 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9161 ;; Tracked objects:
  9162 ;;		On entry : 0/0
  9163 ;;		On exit  : 0/0
  9164 ;;		Unchanged: 0/0
  9165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9166 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9167 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9168 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9169 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9170 ;;Total ram usage:        1 bytes
  9171 ;; Hardware stack levels used:    1
  9172 ;; Hardware stack levels required when called:   18
  9173 ;; This function calls:
  9174 ;;		_USBCtrlTrfInHandler
  9175 ;;		_USBCtrlTrfOutHandler
  9176 ;;		_USBCtrlTrfSetupHandler
  9177 ;;		_memcpy
  9178 ;; This function is called by:
  9179 ;;		_USBDeviceTasks
  9180 ;; This function uses a non-reentrant model
  9181 ;;
  9182                           
  9183                           	psect	text34
  9184  004B00                     __ptext34:
  9185                           	opt stack 0
  9186  004B00                     _USBCtrlEPService:
  9187                           	opt stack 8
  9188                           
  9189                           ;usb_device.c: 2396: USBStatusStageTimeoutCounter = (uint8_t)45;
  9190                           
  9191                           ; BSR set to: 0
  9192                           ;incstack = 0
  9193  004B00  0E2D               	movlw	45
  9194  004B02  0100               	movlb	0	; () banked
  9195  004B04  6FC8               	movwf	_USBStatusStageTimeoutCounter& (0+255),b
  9196                           
  9197                           ; BSR set to: 0
  9198                           ;usb_device.c: 2400: if((USTATcopy.Val & ~0x02) == 0x00)
  9199  004B06  C0D4  F097         	movff	_USTATcopy,??_USBCtrlEPService
  9200  004B0A  0EFD               	movlw	253
  9201  004B0C  1797               	andwf	??_USBCtrlEPService& (0+255),f,b
  9202  004B0E  A4D8               	btfss	status,2,c
  9203  004B10  D038               	goto	l1771
  9204                           
  9205                           ; BSR set to: 0
  9206                           ;usb_device.c: 2401: {
  9207                           ;usb_device.c: 2404: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
  9208  004B12  C0D4  F097         	movff	_USTATcopy,??_USBCtrlEPService
  9209  004B16  90D8               	bcf	status,0,c
  9210  004B18  3397               	rrcf	??_USBCtrlEPService& (0+255),f,b
  9211  004B1A  0E3F               	movlw	63
  9212  004B1C  1797               	andwf	??_USBCtrlEPService& (0+255),f,b
  9213  004B1E  5197               	movf	??_USBCtrlEPService& (0+255),w,b
  9214  004B20  0D04               	mullw	4
  9215  004B22  0E00               	movlw	0
  9216  004B24  24F3               	addwf	prodl,w,c
  9217  004B26  6FC0               	movwf	_pBDTEntryEP0OutCurrent& (0+255),b
  9218  004B28  0E04               	movlw	4
  9219  004B2A  20F4               	addwfc	prodh,w,c
  9220  004B2C  6FC1               	movwf	(_pBDTEntryEP0OutCurrent+1)& (0+255),b
  9221                           
  9222                           ; BSR set to: 0
  9223                           ;usb_device.c: 2412: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  9224  004B2E  C0C0  F0BE         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
  9225  004B32  C0C1  F0BF         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
  9226                           
  9227                           ; BSR set to: 0
  9228                           ;usb_device.c: 2414: ((uint8_t_VAL*)&pBDTEntryEP0OutNext)->Val ^= 0x0004;
  9229  004B36  0E04               	movlw	4
  9230  004B38  1BBE               	xorwf	_pBDTEntryEP0OutNext& (0+255),f,b
  9231                           
  9232                           ; BSR set to: 0
  9233                           ;usb_device.c: 2417: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
  9234  004B3A  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  9235  004B3E  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  9236  004B42  30DF               	rrcf	223,w,c
  9237  004B44  32E8               	rrcf	wreg,f,c
  9238  004B46  0B0F               	andlw	15
  9239  004B48  0A0D               	xorlw	13
  9240  004B4A  A4D8               	btfss	status,2,c
  9241  004B4C  D017               	goto	l1772
  9242                           
  9243                           ; BSR set to: 0
  9244                           ;usb_device.c: 2418: {
  9245                           ;usb_device.c: 2423: memcpy((uint8_t*)&SetupPkt, (uint8_t*)((void *)(pBDTEntryEP0OutCurr
      +                          ent->ADR)), 8);
  9246  004B4E  0E30               	movlw	48
  9247  004B50  6F7D               	movwf	memcpy@d1& (0+255),b
  9248  004B52  0E04               	movlw	4
  9249  004B54  6F7E               	movwf	(memcpy@d1+1)& (0+255),b
  9250  004B56  EE20 F002          	lfsr	2,2
  9251  004B5A  51C0               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
  9252  004B5C  26D9               	addwf	fsr2l,f,c
  9253  004B5E  51C1               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
  9254  004B60  22DA               	addwfc	fsr2h,f,c
  9255  004B62  CFDE F07F          	movff	postinc2,memcpy@s1
  9256  004B66  CFDD F080          	movff	postdec2,memcpy@s1+1
  9257  004B6A  0E00               	movlw	0
  9258  004B6C  6F82               	movwf	(memcpy@n+1)& (0+255),b
  9259  004B6E  0E08               	movlw	8
  9260  004B70  6F81               	movwf	memcpy@n& (0+255),b
  9261  004B72  EC87  F02E         	call	_memcpy	;wreg free
  9262                           
  9263                           ;usb_device.c: 2426: USBCtrlTrfSetupHandler();
  9264  004B76  ECEB  F026         	call	_USBCtrlTrfSetupHandler	;wreg free
  9265                           
  9266                           ;usb_device.c: 2427: }
  9267  004B7A  0012               	return	
  9268  004B7C                     l1772:
  9269                           
  9270                           ;usb_device.c: 2428: else
  9271                           ;usb_device.c: 2429: {
  9272                           ;usb_device.c: 2431: USBCtrlTrfOutHandler();
  9273  004B7C  ECFF  F029         	call	_USBCtrlTrfOutHandler	;wreg free
  9274                           
  9275                           ;usb_device.c: 2432: }
  9276                           ;usb_device.c: 2433: }
  9277  004B80  0012               	return	
  9278  004B82                     l1771:
  9279                           
  9280                           ;usb_device.c: 2434: else if((USTATcopy.Val & ~0x02) == 0x04)
  9281  004B82  0100               	movlb	0	; () banked
  9282  004B84  51D4               	movf	_USTATcopy& (0+255),w,b
  9283  004B86  0BFD               	andlw	253
  9284  004B88  0A04               	xorlw	4
  9285  004B8A  A4D8               	btfss	status,2,c
  9286  004B8C  0012               	return	
  9287                           
  9288                           ; BSR set to: 0
  9289                           ;usb_device.c: 2435: {
  9290                           ;usb_device.c: 2438: USBCtrlTrfInHandler();
  9291  004B8E  EC93  F020         	call	_USBCtrlTrfInHandler	;wreg free
  9292  004B92  0012               	return	
  9293  004B94                     __end_of_USBCtrlEPService:
  9294                           	opt stack 0
  9295                           tosu	equ	0xFFF
  9296                           tosh	equ	0xFFE
  9297                           tosl	equ	0xFFD
  9298                           pclath	equ	0xFFA
  9299                           tblptru	equ	0xFF8
  9300                           tblptrh	equ	0xFF7
  9301                           tblptrl	equ	0xFF6
  9302                           tablat	equ	0xFF5
  9303                           prodh	equ	0xFF4
  9304                           prodl	equ	0xFF3
  9305                           intcon	equ	0xFF2
  9306                           intcon2	equ	0xFF1
  9307                           intcon3	equ	0xFF0
  9308                           postinc0	equ	0xFEE
  9309                           plusw0	equ	0xFEB
  9310                           wreg	equ	0xFE8
  9311                           postinc1	equ	0xFE6
  9312                           postdec1	equ	0xFE5
  9313                           fsr1h	equ	0xFE2
  9314                           fsr1l	equ	0xFE1
  9315                           indf2	equ	0xFDF
  9316                           postinc2	equ	0xFDE
  9317                           postdec2	equ	0xFDD
  9318                           plusw2	equ	0xFDB
  9319                           fsr2h	equ	0xFDA
  9320                           fsr2l	equ	0xFD9
  9321                           status	equ	0xFD8
  9322                           
  9323 ;; *************** function _memcpy *****************
  9324 ;; Defined at:
  9325 ;;		line 27 in file "/opt/microchip/xc8/v1.45/sources/common/memcpy.c"
  9326 ;; Parameters:    Size  Location     Type
  9327 ;;  d1              2   29[BANK0 ] PTR void 
  9328 ;;		 -> SetupPkt(8), 
  9329 ;;  s1              2   31[BANK0 ] PTR const void 
  9330 ;;		 -> RAM(3775), CtrlTrfData(8), SetupPkt(8), 
  9331 ;;  n               2   33[BANK0 ] unsigned int 
  9332 ;; Auto vars:     Size  Location     Type
  9333 ;;  s               2   38[BANK0 ] PTR const unsigned char 
  9334 ;;		 -> RAM(3775), CtrlTrfData(8), SetupPkt(8), 
  9335 ;;  d               2   36[BANK0 ] PTR unsigned char 
  9336 ;;		 -> SetupPkt(8), 
  9337 ;;  tmp             1   35[BANK0 ] unsigned char 
  9338 ;; Return value:  Size  Location     Type
  9339 ;;                  2   29[BANK0 ] PTR void 
  9340 ;; Registers used:
  9341 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9342 ;; Tracked objects:
  9343 ;;		On entry : 0/0
  9344 ;;		On exit  : 0/0
  9345 ;;		Unchanged: 0/0
  9346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9347 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9348 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9349 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9350 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9351 ;;Total ram usage:       11 bytes
  9352 ;; Hardware stack levels used:    1
  9353 ;; Hardware stack levels required when called:   11
  9354 ;; This function calls:
  9355 ;;		Nothing
  9356 ;; This function is called by:
  9357 ;;		_USBCtrlEPService
  9358 ;; This function uses a non-reentrant model
  9359 ;;
  9360                           
  9361                           	psect	text35
  9362  005D0E                     __ptext35:
  9363                           	opt stack 0
  9364  005D0E                     _memcpy:
  9365                           	opt stack 14
  9366                           
  9367                           ;incstack = 0
  9368  005D0E  C07F  F086         	movff	memcpy@s1,memcpy@s
  9369  005D12  C080  F087         	movff	memcpy@s1+1,memcpy@s+1
  9370  005D16  C07D  F084         	movff	memcpy@d1,memcpy@d
  9371  005D1A  C07E  F085         	movff	memcpy@d1+1,memcpy@d+1
  9372  005D1E  D011               	goto	l3291
  9373  005D20                     l13480:
  9374  005D20  C086  FFD9         	movff	memcpy@s,fsr2l
  9375  005D24  C087  FFDA         	movff	memcpy@s+1,fsr2h
  9376  005D28  50DF               	movf	indf2,w,c
  9377  005D2A  0100               	movlb	0	; () banked
  9378  005D2C  6F83               	movwf	memcpy@tmp& (0+255),b
  9379                           
  9380                           ; BSR set to: 0
  9381  005D2E  4B86               	infsnz	memcpy@s& (0+255),f,b
  9382  005D30  2B87               	incf	(memcpy@s+1)& (0+255),f,b
  9383                           
  9384                           ; BSR set to: 0
  9385  005D32  C084  FFD9         	movff	memcpy@d,fsr2l
  9386  005D36  C085  FFDA         	movff	memcpy@d+1,fsr2h
  9387  005D3A  C083  FFDF         	movff	memcpy@tmp,indf2
  9388                           
  9389                           ; BSR set to: 0
  9390  005D3E  4B84               	infsnz	memcpy@d& (0+255),f,b
  9391  005D40  2B85               	incf	(memcpy@d+1)& (0+255),f,b
  9392  005D42                     l3291:
  9393                           
  9394                           ; BSR set to: 0
  9395  005D42  0100               	movlb	0	; () banked
  9396  005D44  0781               	decf	memcpy@n& (0+255),f,b
  9397  005D46  A0D8               	btfss	status,0,c
  9398  005D48  0782               	decf	(memcpy@n+1)& (0+255),f,b
  9399  005D4A  2981               	incf	memcpy@n& (0+255),w,b
  9400  005D4C  E1E9               	bnz	l13480
  9401  005D4E  2982               	incf	(memcpy@n+1)& (0+255),w,b
  9402  005D50  B4D8               	btfsc	status,2,c
  9403  005D52  0012               	return	
  9404  005D54  D7E5               	goto	l3292
  9405  005D56                     __end_of_memcpy:
  9406                           	opt stack 0
  9407                           tosu	equ	0xFFF
  9408                           tosh	equ	0xFFE
  9409                           tosl	equ	0xFFD
  9410                           pclath	equ	0xFFA
  9411                           tblptru	equ	0xFF8
  9412                           tblptrh	equ	0xFF7
  9413                           tblptrl	equ	0xFF6
  9414                           tablat	equ	0xFF5
  9415                           prodh	equ	0xFF4
  9416                           prodl	equ	0xFF3
  9417                           intcon	equ	0xFF2
  9418                           intcon2	equ	0xFF1
  9419                           intcon3	equ	0xFF0
  9420                           postinc0	equ	0xFEE
  9421                           plusw0	equ	0xFEB
  9422                           wreg	equ	0xFE8
  9423                           postinc1	equ	0xFE6
  9424                           postdec1	equ	0xFE5
  9425                           fsr1h	equ	0xFE2
  9426                           fsr1l	equ	0xFE1
  9427                           indf2	equ	0xFDF
  9428                           postinc2	equ	0xFDE
  9429                           postdec2	equ	0xFDD
  9430                           plusw2	equ	0xFDB
  9431                           fsr2h	equ	0xFDA
  9432                           fsr2l	equ	0xFD9
  9433                           status	equ	0xFD8
  9434                           
  9435 ;; *************** function _USBCtrlTrfSetupHandler *****************
  9436 ;; Defined at:
  9437 ;;		line 2483 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  9438 ;; Parameters:    Size  Location     Type
  9439 ;;		None
  9440 ;; Auto vars:     Size  Location     Type
  9441 ;;		None
  9442 ;; Return value:  Size  Location     Type
  9443 ;;                  1    wreg      void 
  9444 ;; Registers used:
  9445 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9446 ;; Tracked objects:
  9447 ;;		On entry : 0/0
  9448 ;;		On exit  : 0/0
  9449 ;;		Unchanged: 0/0
  9450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9451 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9452 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9453 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9454 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9455 ;;Total ram usage:        0 bytes
  9456 ;; Hardware stack levels used:    1
  9457 ;; Hardware stack levels required when called:   17
  9458 ;; This function calls:
  9459 ;;		_USBCheckStdRequest
  9460 ;;		_USBCtrlEPServiceComplete
  9461 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  9462 ;; This function is called by:
  9463 ;;		_USBCtrlEPService
  9464 ;; This function uses a non-reentrant model
  9465 ;;
  9466                           
  9467                           	psect	text36
  9468  004DD6                     __ptext36:
  9469                           	opt stack 0
  9470  004DD6                     _USBCtrlTrfSetupHandler:
  9471                           	opt stack 8
  9472                           
  9473                           ;usb_device.c: 2488: shortPacketStatus = 0;
  9474                           
  9475                           ; BSR set to: 0
  9476                           ;incstack = 0
  9477  004DD6  0E00               	movlw	0
  9478  004DD8  0100               	movlb	0	; () banked
  9479  004DDA  6FCB               	movwf	_shortPacketStatus& (0+255),b
  9480                           
  9481                           ;usb_device.c: 2489: USBDeferStatusStagePacket = 0;
  9482  004DDC  0E00               	movlw	0
  9483  004DDE  6FC7               	movwf	_USBDeferStatusStagePacket& (0+255),b	;volatile
  9484                           
  9485                           ;usb_device.c: 2490: USBDeferINDataStagePackets = 0;
  9486  004DE0  0E00               	movlw	0
  9487  004DE2  6E26               	movwf	_USBDeferINDataStagePackets,c	;volatile
  9488                           
  9489                           ;usb_device.c: 2491: USBDeferOUTDataStagePackets = 0;
  9490  004DE4  0E00               	movlw	0
  9491  004DE6  6E25               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
  9492                           
  9493                           ;usb_device.c: 2492: BothEP0OutUOWNsSet = 0;
  9494  004DE8  0E00               	movlw	0
  9495  004DEA  0101               	movlb	1	; () banked
  9496  004DEC  6FE1               	movwf	_BothEP0OutUOWNsSet& (0+255),b
  9497                           
  9498                           ;usb_device.c: 2493: controlTransferState = 0;
  9499  004DEE  0E00               	movlw	0
  9500  004DF0  0100               	movlb	0	; () banked
  9501  004DF2  6FCA               	movwf	_controlTransferState& (0+255),b
  9502                           
  9503                           ; BSR set to: 0
  9504                           ;usb_device.c: 2502: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  9505  004DF4  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
  9506  004DF8  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9507  004DFC  0E7F               	movlw	127
  9508  004DFE  16DF               	andwf	indf2,f,c
  9509                           
  9510                           ; BSR set to: 0
  9511                           ;usb_device.c: 2503: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  9512  004E00  0E04               	movlw	4
  9513  004E02  1BB6               	xorwf	_pBDTEntryIn& (0+255),f,b
  9514                           
  9515                           ; BSR set to: 0
  9516                           ;usb_device.c: 2504: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  9517  004E04  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
  9518  004E08  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9519  004E0C  0E7F               	movlw	127
  9520  004E0E  16DF               	andwf	indf2,f,c
  9521                           
  9522                           ; BSR set to: 0
  9523                           ;usb_device.c: 2505: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  9524  004E10  0E04               	movlw	4
  9525  004E12  1BB6               	xorwf	_pBDTEntryIn& (0+255),f,b
  9526                           
  9527                           ; BSR set to: 0
  9528                           ;usb_device.c: 2506: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
  9529  004E14  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9530  004E18  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9531  004E1C  0E7F               	movlw	127
  9532  004E1E  16DF               	andwf	indf2,f,c
  9533                           
  9534                           ; BSR set to: 0
  9535                           ;usb_device.c: 2508: inPipes[0].info.Val = 0;
  9536  004E20  0E00               	movlw	0
  9537  004E22  6FB3               	movwf	(_inPipes+3)& (0+255),b
  9538                           
  9539                           ; BSR set to: 0
  9540                           ;usb_device.c: 2509: inPipes[0].wCount.Val = 0;
  9541  004E24  0E00               	movlw	0
  9542  004E26  6FB5               	movwf	(_inPipes+5)& (0+255),b
  9543  004E28  0E00               	movlw	0
  9544  004E2A  6FB4               	movwf	(_inPipes+4)& (0+255),b
  9545                           
  9546                           ; BSR set to: 0
  9547                           ;usb_device.c: 2510: outPipes[0].info.Val = 0;
  9548  004E2C  0E00               	movlw	0
  9549  004E2E  0101               	movlb	1	; () banked
  9550  004E30  6FCC               	movwf	(_outPipes+3)& (0+255),b
  9551                           
  9552                           ; BSR set to: 1
  9553                           ;usb_device.c: 2511: outPipes[0].wCount.Val = 0;
  9554  004E32  0E00               	movlw	0
  9555  004E34  6FCE               	movwf	(_outPipes+5)& (0+255),b
  9556  004E36  0E00               	movlw	0
  9557  004E38  6FCD               	movwf	(_outPipes+4)& (0+255),b
  9558                           
  9559                           ; BSR set to: 1
  9560                           ;usb_device.c: 2517: USBCheckStdRequest();
  9561  004E3A  EC4C  F01B         	call	_USBCheckStdRequest	;wreg free
  9562                           
  9563                           ;usb_device.c: 2518: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
  9564  004E3E  0E00               	movlw	0
  9565  004E40  0100               	movlb	0	; () banked
  9566  004E42  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  9567  004E44  0E03               	movlw	3
  9568  004E46  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  9569  004E48  0E00               	movlw	0
  9570  004E4A  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  9571  004E4C  0E00               	movlw	0
  9572  004E4E  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  9573  004E50  0E00               	movlw	0
  9574  004E52  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  9575  004E54  0E00               	movlw	0
  9576  004E56  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  9577  004E58  ECC9  F02A         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  9578                           
  9579                           ;usb_device.c: 2531: USBCtrlEPServiceComplete();
  9580  004E5C  ECFC  F018         	call	_USBCtrlEPServiceComplete	;wreg free
  9581  004E60  0012               	return		;funcret
  9582  004E62                     __end_of_USBCtrlTrfSetupHandler:
  9583                           	opt stack 0
  9584                           tosu	equ	0xFFF
  9585                           tosh	equ	0xFFE
  9586                           tosl	equ	0xFFD
  9587                           pclath	equ	0xFFA
  9588                           tblptru	equ	0xFF8
  9589                           tblptrh	equ	0xFF7
  9590                           tblptrl	equ	0xFF6
  9591                           tablat	equ	0xFF5
  9592                           prodh	equ	0xFF4
  9593                           prodl	equ	0xFF3
  9594                           intcon	equ	0xFF2
  9595                           intcon2	equ	0xFF1
  9596                           intcon3	equ	0xFF0
  9597                           postinc0	equ	0xFEE
  9598                           plusw0	equ	0xFEB
  9599                           wreg	equ	0xFE8
  9600                           postinc1	equ	0xFE6
  9601                           postdec1	equ	0xFE5
  9602                           fsr1h	equ	0xFE2
  9603                           fsr1l	equ	0xFE1
  9604                           indf2	equ	0xFDF
  9605                           postinc2	equ	0xFDE
  9606                           postdec2	equ	0xFDD
  9607                           plusw2	equ	0xFDB
  9608                           fsr2h	equ	0xFDA
  9609                           fsr2l	equ	0xFD9
  9610                           status	equ	0xFD8
  9611                           
  9612 ;; *************** function _USBCtrlEPServiceComplete *****************
  9613 ;; Defined at:
  9614 ;;		line 1634 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  9615 ;; Parameters:    Size  Location     Type
  9616 ;;		None
  9617 ;; Auto vars:     Size  Location     Type
  9618 ;;		None
  9619 ;; Return value:  Size  Location     Type
  9620 ;;                  1    wreg      void 
  9621 ;; Registers used:
  9622 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9623 ;; Tracked objects:
  9624 ;;		On entry : 0/0
  9625 ;;		On exit  : 0/0
  9626 ;;		Unchanged: 0/0
  9627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9628 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9629 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9631 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9632 ;;Total ram usage:        0 bytes
  9633 ;; Hardware stack levels used:    1
  9634 ;; Hardware stack levels required when called:   13
  9635 ;; This function calls:
  9636 ;;		_USBCtrlEPAllowDataStage
  9637 ;;		_USBCtrlEPAllowStatusStage
  9638 ;; This function is called by:
  9639 ;;		_USBCtrlTrfSetupHandler
  9640 ;; This function uses a non-reentrant model
  9641 ;;
  9642                           
  9643                           	psect	text37
  9644  0031F8                     __ptext37:
  9645                           	opt stack 0
  9646  0031F8                     _USBCtrlEPServiceComplete:
  9647                           	opt stack 11
  9648                           
  9649                           ;usb_device.c: 1640: UCONbits.PKTDIS = 0;
  9650                           
  9651                           ;incstack = 0
  9652  0031F8  9865               	bcf	3941,4,c	;volatile
  9653                           
  9654                           ;usb_device.c: 1646: if(inPipes[0].info.bits.busy == 0)
  9655  0031FA  0100               	movlb	0	; () banked
  9656  0031FC  BFB3               	btfsc	(_inPipes+3)& (0+255),7,b
  9657  0031FE  D03B               	goto	l1681
  9658                           
  9659                           ; BSR set to: 0
  9660                           ;usb_device.c: 1647: {
  9661                           ;usb_device.c: 1648: if(outPipes[0].info.bits.busy == 1)
  9662  003200  0101               	movlb	1	; () banked
  9663  003202  AFCC               	btfss	(_outPipes+3)& (0+255),7,b
  9664  003204  D00C               	goto	l1682
  9665                           
  9666                           ; BSR set to: 1
  9667                           ;usb_device.c: 1649: {
  9668                           ;usb_device.c: 1650: controlTransferState = 2;
  9669  003206  0E02               	movlw	2
  9670  003208  0100               	movlb	0	; () banked
  9671  00320A  6FCA               	movwf	_controlTransferState& (0+255),b
  9672                           
  9673                           ;usb_device.c: 1661: if(USBDeferOUTDataStagePackets == 0)
  9674  00320C  5025               	movf	_USBDeferOUTDataStagePackets,w,c	;volatile
  9675  00320E  B4D8               	btfsc	status,2,c
  9676                           
  9677                           ; BSR set to: 0
  9678                           ;usb_device.c: 1662: {
  9679                           ;usb_device.c: 1663: USBCtrlEPAllowDataStage();
  9680  003210  EC4F  F024         	call	_USBCtrlEPAllowDataStage	;wreg free
  9681                           
  9682                           ;usb_device.c: 1664: }
  9683                           ;usb_device.c: 1668: USBStatusStageEnabledFlag2 = 0;
  9684  003214  0E00               	movlw	0
  9685  003216  6E27               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  9686                           
  9687                           ;usb_device.c: 1669: USBStatusStageEnabledFlag1 = 0;
  9688  003218  0E00               	movlw	0
  9689  00321A  6E28               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
  9690                           
  9691                           ;usb_device.c: 1670: }
  9692  00321C  0012               	return	
  9693  00321E                     l1682:
  9694                           
  9695                           ;usb_device.c: 1671: else
  9696                           ;usb_device.c: 1672: {
  9697                           ;usb_device.c: 1677: pBDTEntryEP0OutNext->CNT = 8;
  9698  00321E  0100               	movlb	0	; () banked
  9699  003220  EE20 F001          	lfsr	2,1
  9700  003224  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9701  003226  26D9               	addwf	fsr2l,f,c
  9702  003228  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9703  00322A  22DA               	addwfc	fsr2h,f,c
  9704  00322C  0E08               	movlw	8
  9705  00322E  6EDF               	movwf	indf2,c
  9706                           
  9707                           ;usb_device.c: 1678: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
  9708  003230  EE20 F002          	lfsr	2,2
  9709  003234  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9710  003236  26D9               	addwf	fsr2l,f,c
  9711  003238  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9712  00323A  22DA               	addwfc	fsr2h,f,c
  9713  00323C  0E30               	movlw	48
  9714  00323E  6EDE               	movwf	postinc2,c
  9715  003240  0E04               	movlw	4
  9716  003242  6EDD               	movwf	postdec2,c
  9717                           
  9718                           ; BSR set to: 0
  9719                           ;usb_device.c: 1679: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  9720  003244  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9721  003248  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9722  00324C  0E0C               	movlw	12
  9723  00324E  6EDF               	movwf	indf2,c
  9724                           
  9725                           ; BSR set to: 0
  9726                           ;usb_device.c: 1680: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  9727  003250  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9728  003254  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9729  003258  0E00               	movlw	0
  9730  00325A  8EDB               	bsf	plusw2,7,c
  9731                           
  9732                           ;usb_device.c: 1681: pBDTEntryIn[0]->STAT.Val = 0x04;
  9733  00325C  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
  9734  003260  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9735  003264  0E04               	movlw	4
  9736  003266  6EDF               	movwf	indf2,c
  9737                           
  9738                           ; BSR set to: 0
  9739                           ;usb_device.c: 1682: pBDTEntryIn[0]->STAT.Val |= 0x80;
  9740  003268  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
  9741  00326C  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9742  003270  0E00               	movlw	0
  9743  003272  8EDB               	bsf	plusw2,7,c
  9744                           
  9745                           ; BSR set to: 0
  9746                           ;usb_device.c: 1683: }
  9747                           ;usb_device.c: 1684: }
  9748  003274  0012               	return	
  9749  003276                     l1681:
  9750                           
  9751                           ; BSR set to: 0
  9752                           ;usb_device.c: 1685: else
  9753                           ;usb_device.c: 1686: {
  9754                           ;usb_device.c: 1687: if(SetupPkt.DataDir == (0x80>>7))
  9755  003276  0104               	movlb	4	; () banked
  9756  003278  AF30               	btfss	48,7,b	;volatile
  9757  00327A  D012               	goto	l1686
  9758                           
  9759                           ; BSR set to: 4
  9760                           ;usb_device.c: 1688: {
  9761                           ;usb_device.c: 1689: controlTransferState = 1;
  9762  00327C  0E01               	movlw	1
  9763  00327E  0100               	movlb	0	; () banked
  9764  003280  6FCA               	movwf	_controlTransferState& (0+255),b
  9765                           
  9766                           ;usb_device.c: 1703: if(USBDeferINDataStagePackets == 0)
  9767  003282  5026               	movf	_USBDeferINDataStagePackets,w,c	;volatile
  9768  003284  B4D8               	btfsc	status,2,c
  9769                           
  9770                           ; BSR set to: 0
  9771                           ;usb_device.c: 1704: {
  9772                           ;usb_device.c: 1705: USBCtrlEPAllowDataStage();
  9773  003286  EC4F  F024         	call	_USBCtrlEPAllowDataStage	;wreg free
  9774                           
  9775                           ;usb_device.c: 1706: }
  9776                           ;usb_device.c: 1728: USBStatusStageEnabledFlag2 = 0;
  9777  00328A  0E00               	movlw	0
  9778  00328C  6E27               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  9779                           
  9780                           ;usb_device.c: 1729: USBStatusStageEnabledFlag1 = 0;
  9781  00328E  0E00               	movlw	0
  9782  003290  6E28               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
  9783                           
  9784                           ;usb_device.c: 1730: if(USBDeferStatusStagePacket == 0)
  9785  003292  0100               	movlb	0	; () banked
  9786  003294  51C7               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
  9787  003296  A4D8               	btfss	status,2,c
  9788  003298  0012               	return	
  9789                           
  9790                           ; BSR set to: 0
  9791                           ;usb_device.c: 1731: {
  9792                           ;usb_device.c: 1732: USBCtrlEPAllowStatusStage();
  9793  00329A  EC3A  F01E         	call	_USBCtrlEPAllowStatusStage	;wreg free
  9794                           
  9795                           ;usb_device.c: 1733: }
  9796                           ;usb_device.c: 1734: }
  9797  00329E  0012               	return	
  9798  0032A0                     l1686:
  9799                           
  9800                           ;usb_device.c: 1735: else
  9801                           ;usb_device.c: 1736: {
  9802                           ;usb_device.c: 1747: controlTransferState = 2;
  9803  0032A0  0E02               	movlw	2
  9804  0032A2  0100               	movlb	0	; () banked
  9805  0032A4  6FCA               	movwf	_controlTransferState& (0+255),b
  9806                           
  9807                           ; BSR set to: 0
  9808                           ;usb_device.c: 1750: pBDTEntryEP0OutNext->CNT = 8;
  9809  0032A6  EE20 F001          	lfsr	2,1
  9810  0032AA  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9811  0032AC  26D9               	addwf	fsr2l,f,c
  9812  0032AE  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9813  0032B0  22DA               	addwfc	fsr2h,f,c
  9814  0032B2  0E08               	movlw	8
  9815  0032B4  6EDF               	movwf	indf2,c
  9816                           
  9817                           ; BSR set to: 0
  9818                           ;usb_device.c: 1751: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
  9819  0032B6  EE20 F002          	lfsr	2,2
  9820  0032BA  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9821  0032BC  26D9               	addwf	fsr2l,f,c
  9822  0032BE  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9823  0032C0  22DA               	addwfc	fsr2h,f,c
  9824  0032C2  0E30               	movlw	48
  9825  0032C4  6EDE               	movwf	postinc2,c
  9826  0032C6  0E04               	movlw	4
  9827  0032C8  6EDD               	movwf	postdec2,c
  9828                           
  9829                           ; BSR set to: 0
  9830                           ;usb_device.c: 1752: pBDTEntryEP0OutNext->STAT.Val = 0x04;
  9831  0032CA  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9832  0032CE  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9833  0032D2  0E04               	movlw	4
  9834  0032D4  6EDF               	movwf	indf2,c
  9835                           
  9836                           ; BSR set to: 0
  9837                           ;usb_device.c: 1753: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  9838  0032D6  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9839  0032DA  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9840  0032DE  0E00               	movlw	0
  9841  0032E0  8EDB               	bsf	plusw2,7,c
  9842                           
  9843                           ; BSR set to: 0
  9844                           ;usb_device.c: 1756: USBStatusStageEnabledFlag2 = 0;
  9845  0032E2  0E00               	movlw	0
  9846  0032E4  6E27               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  9847                           
  9848                           ; BSR set to: 0
  9849                           ;usb_device.c: 1757: USBStatusStageEnabledFlag1 = 0;
  9850  0032E6  0E00               	movlw	0
  9851  0032E8  6E28               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
  9852                           
  9853                           ; BSR set to: 0
  9854                           ;usb_device.c: 1758: if(USBDeferStatusStagePacket == 0)
  9855  0032EA  51C7               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
  9856  0032EC  A4D8               	btfss	status,2,c
  9857  0032EE  0012               	return	
  9858                           
  9859                           ; BSR set to: 0
  9860                           ;usb_device.c: 1759: {
  9861                           ;usb_device.c: 1760: USBCtrlEPAllowStatusStage();
  9862  0032F0  EC3A  F01E         	call	_USBCtrlEPAllowStatusStage	;wreg free
  9863  0032F4  0012               	return	
  9864  0032F6                     __end_of_USBCtrlEPServiceComplete:
  9865                           	opt stack 0
  9866                           tosu	equ	0xFFF
  9867                           tosh	equ	0xFFE
  9868                           tosl	equ	0xFFD
  9869                           pclath	equ	0xFFA
  9870                           tblptru	equ	0xFF8
  9871                           tblptrh	equ	0xFF7
  9872                           tblptrl	equ	0xFF6
  9873                           tablat	equ	0xFF5
  9874                           prodh	equ	0xFF4
  9875                           prodl	equ	0xFF3
  9876                           intcon	equ	0xFF2
  9877                           intcon2	equ	0xFF1
  9878                           intcon3	equ	0xFF0
  9879                           postinc0	equ	0xFEE
  9880                           plusw0	equ	0xFEB
  9881                           wreg	equ	0xFE8
  9882                           postinc1	equ	0xFE6
  9883                           postdec1	equ	0xFE5
  9884                           fsr1h	equ	0xFE2
  9885                           fsr1l	equ	0xFE1
  9886                           indf2	equ	0xFDF
  9887                           postinc2	equ	0xFDE
  9888                           postdec2	equ	0xFDD
  9889                           plusw2	equ	0xFDB
  9890                           fsr2h	equ	0xFDA
  9891                           fsr2l	equ	0xFD9
  9892                           status	equ	0xFD8
  9893                           
  9894 ;; *************** function _USBCtrlEPAllowDataStage *****************
  9895 ;; Defined at:
  9896 ;;		line 1506 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  9897 ;; Parameters:    Size  Location     Type
  9898 ;;		None
  9899 ;; Auto vars:     Size  Location     Type
  9900 ;;		None
  9901 ;; Return value:  Size  Location     Type
  9902 ;;                  1    wreg      void 
  9903 ;; Registers used:
  9904 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9905 ;; Tracked objects:
  9906 ;;		On entry : 0/0
  9907 ;;		On exit  : 0/0
  9908 ;;		Unchanged: 0/0
  9909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9910 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9911 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9913 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9914 ;;Total ram usage:        0 bytes
  9915 ;; Hardware stack levels used:    1
  9916 ;; Hardware stack levels required when called:   12
  9917 ;; This function calls:
  9918 ;;		_USBCtrlTrfTxService
  9919 ;; This function is called by:
  9920 ;;		_USBCtrlEPServiceComplete
  9921 ;; This function uses a non-reentrant model
  9922 ;;
  9923                           
  9924                           	psect	text38
  9925  00489E                     __ptext38:
  9926                           	opt stack 0
  9927  00489E                     _USBCtrlEPAllowDataStage:
  9928                           	opt stack 11
  9929                           
  9930                           ;usb_device.c: 1508: USBDeferINDataStagePackets = 0;
  9931                           
  9932                           ;incstack = 0
  9933  00489E  0E00               	movlw	0
  9934  0048A0  6E26               	movwf	_USBDeferINDataStagePackets,c	;volatile
  9935                           
  9936                           ;usb_device.c: 1509: USBDeferOUTDataStagePackets = 0;
  9937  0048A2  0E00               	movlw	0
  9938  0048A4  6E25               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
  9939                           
  9940                           ;usb_device.c: 1511: if(controlTransferState == 2)
  9941  0048A6  0E02               	movlw	2
  9942  0048A8  0100               	movlb	0	; () banked
  9943  0048AA  19CA               	xorwf	_controlTransferState& (0+255),w,b
  9944  0048AC  A4D8               	btfss	status,2,c
  9945  0048AE  D01F               	goto	l1670
  9946                           
  9947                           ; BSR set to: 0
  9948                           ;usb_device.c: 1512: {
  9949                           ;usb_device.c: 1514: pBDTEntryEP0OutNext->CNT = 8;
  9950  0048B0  EE20 F001          	lfsr	2,1
  9951  0048B4  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9952  0048B6  26D9               	addwf	fsr2l,f,c
  9953  0048B8  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9954  0048BA  22DA               	addwfc	fsr2h,f,c
  9955  0048BC  0E08               	movlw	8
  9956  0048BE  6EDF               	movwf	indf2,c
  9957                           
  9958                           ;usb_device.c: 1515: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
  9959  0048C0  EE20 F002          	lfsr	2,2
  9960  0048C4  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9961  0048C6  26D9               	addwf	fsr2l,f,c
  9962  0048C8  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9963  0048CA  22DA               	addwfc	fsr2h,f,c
  9964  0048CC  0E38               	movlw	56
  9965  0048CE  6EDE               	movwf	postinc2,c
  9966  0048D0  0E04               	movlw	4
  9967  0048D2  6EDD               	movwf	postdec2,c
  9968                           
  9969                           ; BSR set to: 0
  9970                           ;usb_device.c: 1516: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
  9971  0048D4  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9972  0048D8  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9973  0048DC  0E48               	movlw	72
  9974  0048DE  6EDF               	movwf	indf2,c
  9975                           
  9976                           ; BSR set to: 0
  9977                           ;usb_device.c: 1517: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  9978  0048E0  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9979  0048E4  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9980  0048E8  0E00               	movlw	0
  9981  0048EA  8EDB               	bsf	plusw2,7,c
  9982                           
  9983                           ;usb_device.c: 1518: }
  9984  0048EC  0012               	return	
  9985  0048EE                     l1670:
  9986                           
  9987                           ; BSR set to: 0
  9988                           ;usb_device.c: 1519: else
  9989                           ;usb_device.c: 1520: {
  9990                           ;usb_device.c: 1523: if(SetupPkt.wLength < inPipes[0].wCount.Val)
  9991                           
  9992                           ; BSR set to: 0
  9993  0048EE  51B4               	movf	(_inPipes+4)& (0+255),w,b
  9994  0048F0  0104               	movlb	4	; () banked
  9995  0048F2  5D36               	subwf	54,w,b	;volatile
  9996  0048F4  0100               	movlb	0	; () banked
  9997  0048F6  51B5               	movf	(_inPipes+5)& (0+255),w,b
  9998  0048F8  0104               	movlb	4	; () banked
  9999  0048FA  5937               	subwfb	55,w,b	;volatile
 10000  0048FC  B0D8               	btfsc	status,0,c
 10001  0048FE  D004               	goto	l1672
 10002                           
 10003                           ; BSR set to: 4
 10004                           ;usb_device.c: 1524: {
 10005                           ;usb_device.c: 1525: inPipes[0].wCount.Val = SetupPkt.wLength;
 10006  004900  C436 F0B4          	movff	1078,_inPipes+4	;volatile
 10007  004904  C437 F0B5          	movff	1079,_inPipes+5	;volatile
 10008  004908                     l1672:
 10009                           
 10010                           ; BSR set to: 4
 10011                           ;usb_device.c: 1526: }
 10012                           ;usb_device.c: 1527: USBCtrlTrfTxService();
 10013                           
 10014                           ; BSR set to: 4
 10015  004908  EC2C  F01C         	call	_USBCtrlTrfTxService	;wreg free
 10016                           
 10017                           ;usb_device.c: 1532: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
 10018  00490C  0100               	movlb	0	; () banked
 10019  00490E  EE20 F002          	lfsr	2,2
 10020  004912  51B6               	movf	_pBDTEntryIn& (0+255),w,b
 10021  004914  26D9               	addwf	fsr2l,f,c
 10022  004916  51B7               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 10023  004918  22DA               	addwfc	fsr2h,f,c
 10024  00491A  0E38               	movlw	56
 10025  00491C  6EDE               	movwf	postinc2,c
 10026  00491E  0E04               	movlw	4
 10027  004920  6EDD               	movwf	postdec2,c
 10028                           
 10029                           ; BSR set to: 0
 10030                           ;usb_device.c: 1533: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 10031  004922  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 10032  004926  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 10033  00492A  0E48               	movlw	72
 10034  00492C  6EDF               	movwf	indf2,c
 10035                           
 10036                           ; BSR set to: 0
 10037                           ;usb_device.c: 1534: pBDTEntryIn[0]->STAT.Val |= 0x80;
 10038  00492E  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 10039  004932  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 10040  004936  0E00               	movlw	0
 10041  004938  8EDB               	bsf	plusw2,7,c
 10042  00493A  0012               	return	
 10043  00493C                     __end_of_USBCtrlEPAllowDataStage:
 10044                           	opt stack 0
 10045                           tosu	equ	0xFFF
 10046                           tosh	equ	0xFFE
 10047                           tosl	equ	0xFFD
 10048                           pclath	equ	0xFFA
 10049                           tblptru	equ	0xFF8
 10050                           tblptrh	equ	0xFF7
 10051                           tblptrl	equ	0xFF6
 10052                           tablat	equ	0xFF5
 10053                           prodh	equ	0xFF4
 10054                           prodl	equ	0xFF3
 10055                           intcon	equ	0xFF2
 10056                           intcon2	equ	0xFF1
 10057                           intcon3	equ	0xFF0
 10058                           postinc0	equ	0xFEE
 10059                           plusw0	equ	0xFEB
 10060                           wreg	equ	0xFE8
 10061                           postinc1	equ	0xFE6
 10062                           postdec1	equ	0xFE5
 10063                           fsr1h	equ	0xFE2
 10064                           fsr1l	equ	0xFE1
 10065                           indf2	equ	0xFDF
 10066                           postinc2	equ	0xFDE
 10067                           postdec2	equ	0xFDD
 10068                           plusw2	equ	0xFDB
 10069                           fsr2h	equ	0xFDA
 10070                           fsr2l	equ	0xFD9
 10071                           status	equ	0xFD8
 10072                           
 10073 ;; *************** function _USBCheckStdRequest *****************
 10074 ;; Defined at:
 10075 ;;		line 2703 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 10076 ;; Parameters:    Size  Location     Type
 10077 ;;		None
 10078 ;; Auto vars:     Size  Location     Type
 10079 ;;		None
 10080 ;; Return value:  Size  Location     Type
 10081 ;;                  1    wreg      void 
 10082 ;; Registers used:
 10083 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10084 ;; Tracked objects:
 10085 ;;		On entry : 0/0
 10086 ;;		On exit  : 0/0
 10087 ;;		Unchanged: 0/0
 10088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10089 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10090 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10091 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10092 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10093 ;;Total ram usage:        0 bytes
 10094 ;; Hardware stack levels used:    1
 10095 ;; Hardware stack levels required when called:   16
 10096 ;; This function calls:
 10097 ;;		_USBStdFeatureReqHandler
 10098 ;;		_USBStdGetDscHandler
 10099 ;;		_USBStdGetStatusHandler
 10100 ;;		_USBStdSetCfgHandler
 10101 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 10102 ;; This function is called by:
 10103 ;;		_USBCtrlTrfSetupHandler
 10104 ;; This function uses a non-reentrant model
 10105 ;;
 10106                           
 10107                           	psect	text39
 10108  003698                     __ptext39:
 10109                           	opt stack 0
 10110  003698                     _USBCheckStdRequest:
 10111                           	opt stack 8
 10112                           
 10113                           ;usb_device.c: 2705: if(SetupPkt.RequestType != (0x00>>5)) return;
 10114                           
 10115                           ; BSR set to: 0
 10116                           ;incstack = 0
 10117  003698  0104               	movlb	4	; () banked
 10118  00369A  3930               	swapf	48,w,b	;volatile
 10119  00369C  32E8               	rrcf	wreg,f,c
 10120  00369E  0B03               	andlw	3
 10121  0036A0  0900               	iorlw	0
 10122  0036A2  A4D8               	btfss	status,2,c
 10123  0036A4  0012               	return	
 10124  0036A6  D048               	goto	l1805
 10125  0036A8                     l1806:
 10126                           
 10127                           ; BSR set to: 4
 10128                           ;usb_device.c: 2710: inPipes[0].info.bits.busy = 1;
 10129  0036A8  0100               	movlb	0	; () banked
 10130  0036AA  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 10131                           
 10132                           ; BSR set to: 0
 10133                           ;usb_device.c: 2711: USBDeviceState = ADR_PENDING_STATE;
 10134  0036AC  0E08               	movlw	8
 10135  0036AE  6FCC               	movwf	_USBDeviceState& (0+255),b
 10136                           
 10137                           ;usb_device.c: 2713: break;
 10138  0036B0  0012               	return	
 10139  0036B2                     
 10140                           ;usb_device.c: 2715: USBStdGetDscHandler();
 10141                           
 10142                           ; BSR set to: 0
 10143  0036B2  EC40  F017         	call	_USBStdGetDscHandler	;wreg free
 10144                           
 10145                           ;usb_device.c: 2716: break;
 10146  0036B6  0012               	return	
 10147  0036B8                     
 10148                           ;usb_device.c: 2718: USBStdSetCfgHandler();
 10149  0036B8  EC66  F01A         	call	_USBStdSetCfgHandler	;wreg free
 10150                           
 10151                           ;usb_device.c: 2719: break;
 10152  0036BC  0012               	return	
 10153  0036BE                     
 10154                           ;usb_device.c: 2721: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 10155  0036BE  0ED5               	movlw	low _USBActiveConfiguration
 10156  0036C0  0100               	movlb	0	; () banked
 10157  0036C2  6FB0               	movwf	_inPipes& (0+255),b
 10158  0036C4  0E00               	movlw	high _USBActiveConfiguration
 10159  0036C6  6FB1               	movwf	(_inPipes+1)& (0+255),b
 10160                           
 10161                           ; BSR set to: 0
 10162                           ;usb_device.c: 2722: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 10163  0036C8  81B3               	bsf	(_inPipes+3)& (0+255),0,b
 10164                           
 10165                           ; BSR set to: 0
 10166                           ;usb_device.c: 2723: inPipes[0].wCount.v[0] = 1;
 10167  0036CA  0E01               	movlw	1
 10168  0036CC  6FB4               	movwf	(_inPipes+4)& (0+255),b
 10169                           
 10170                           ; BSR set to: 0
 10171                           ;usb_device.c: 2724: inPipes[0].info.bits.busy = 1;
 10172  0036CE  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 10173                           
 10174                           ;usb_device.c: 2725: break;
 10175  0036D0  0012               	return	
 10176  0036D2                     
 10177                           ;usb_device.c: 2727: USBStdGetStatusHandler();
 10178                           
 10179                           ; BSR set to: 0
 10180  0036D2  EC53  F021         	call	_USBStdGetStatusHandler	;wreg free
 10181                           
 10182                           ;usb_device.c: 2728: break;
 10183  0036D6  0012               	return	
 10184  0036D8                     
 10185                           ;usb_device.c: 2730: case 3:
 10186                           ;usb_device.c: 2731: USBStdFeatureReqHandler();
 10187  0036D8  EC09  F00B         	call	_USBStdFeatureReqHandler	;wreg free
 10188                           
 10189                           ;usb_device.c: 2732: break;
 10190  0036DC  0012               	return	
 10191  0036DE                     
 10192                           ;usb_device.c: 2734: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 10193  0036DE  0104               	movlb	4	; () banked
 10194  0036E0  5134               	movf	52,w,b	;volatile
 10195  0036E2  0D01               	mullw	1
 10196  0036E4  0EF1               	movlw	low _USBAlternateInterface
 10197  0036E6  24F3               	addwf	prodl,w,c
 10198  0036E8  0100               	movlb	0	; () banked
 10199  0036EA  6FB0               	movwf	_inPipes& (0+255),b
 10200  0036EC  0E02               	movlw	high _USBAlternateInterface
 10201  0036EE  20F4               	addwfc	prodh,w,c
 10202  0036F0  6FB1               	movwf	(_inPipes+1)& (0+255),b
 10203                           
 10204                           ; BSR set to: 0
 10205                           ;usb_device.c: 2735: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 10206  0036F2  81B3               	bsf	(_inPipes+3)& (0+255),0,b
 10207                           
 10208                           ; BSR set to: 0
 10209                           ;usb_device.c: 2736: inPipes[0].wCount.v[0] = 1;
 10210  0036F4  0E01               	movlw	1
 10211  0036F6  6FB4               	movwf	(_inPipes+4)& (0+255),b
 10212                           
 10213                           ; BSR set to: 0
 10214                           ;usb_device.c: 2737: inPipes[0].info.bits.busy = 1;
 10215  0036F8  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 10216                           
 10217                           ;usb_device.c: 2738: break;
 10218  0036FA  0012               	return	
 10219  0036FC                     l1815:
 10220                           
 10221                           ; BSR set to: 4
 10222                           ;usb_device.c: 2740: inPipes[0].info.bits.busy = 1;
 10223  0036FC  0100               	movlb	0	; () banked
 10224  0036FE  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 10225                           
 10226                           ; BSR set to: 0
 10227                           ;usb_device.c: 2741: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 10228  003700  0104               	movlb	4	; () banked
 10229  003702  5134               	movf	52,w,b	;volatile
 10230  003704  0D01               	mullw	1
 10231  003706  0EF1               	movlw	low _USBAlternateInterface
 10232  003708  24F3               	addwf	prodl,w,c
 10233  00370A  6ED9               	movwf	fsr2l,c
 10234  00370C  0E02               	movlw	high _USBAlternateInterface
 10235  00370E  20F4               	addwfc	prodh,w,c
 10236  003710  6EDA               	movwf	fsr2h,c
 10237  003712  C432 FFDF          	movff	1074,indf2	;volatile
 10238                           
 10239                           ;usb_device.c: 2742: break;
 10240  003716  0012               	return	
 10241  003718                     
 10242                           ; BSR set to: 4
 10243                           ;usb_device.c: 2744: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 10244                           
 10245                           ; BSR set to: 4
 10246  003718  0E00               	movlw	0
 10247  00371A  0100               	movlb	0	; () banked
 10248  00371C  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
 10249  00371E  0E02               	movlw	2
 10250  003720  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
 10251  003722  0E00               	movlw	0
 10252  003724  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
 10253  003726  0E00               	movlw	0
 10254  003728  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
 10255  00372A  0E00               	movlw	0
 10256  00372C  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
 10257  00372E  0E00               	movlw	0
 10258  003730  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
 10259  003732  ECC9  F02A         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 10260                           
 10261                           ;usb_device.c: 2749: }
 10262                           
 10263                           ;usb_device.c: 2748: break;
 10264                           
 10265                           ;usb_device.c: 2747: default:
 10266                           
 10267                           ;usb_device.c: 2746: case 12:
 10268                           
 10269                           ;usb_device.c: 2745: break;
 10270  003736  0012               	return	
 10271  003738                     l1805:
 10272  003738  0104               	movlb	4	; () banked
 10273  00373A  5131               	movf	49,w,b	;volatile
 10274                           
 10275                           ; Switch size 1, requested type "space"
 10276                           ; Number of cases is 11, Range of values is 0 to 12
 10277                           ; switch strategies available:
 10278                           ; Name         Instructions Cycles
 10279                           ; simple_byte           34    18 (average)
 10280                           ;	Chosen strategy is simple_byte
 10281  00373C  0A00               	xorlw	0	; case 0
 10282  00373E  B4D8               	btfsc	status,2,c
 10283  003740  D7C8               	goto	l1811
 10284  003742  0A01               	xorlw	1	; case 1
 10285  003744  B4D8               	btfsc	status,2,c
 10286  003746  D7C8               	goto	l1812
 10287  003748  0A02               	xorlw	2	; case 3
 10288  00374A  B4D8               	btfsc	status,2,c
 10289  00374C  D7C5               	goto	l1812
 10290  00374E  0A06               	xorlw	6	; case 5
 10291  003750  B4D8               	btfsc	status,2,c
 10292  003752  D7AA               	goto	l1806
 10293  003754  0A03               	xorlw	3	; case 6
 10294  003756  B4D8               	btfsc	status,2,c
 10295  003758  D7AC               	goto	l1808
 10296  00375A  0A01               	xorlw	1	; case 7
 10297  00375C  B4D8               	btfsc	status,2,c
 10298  00375E  D7DC               	goto	l1816
 10299  003760  0A0F               	xorlw	15	; case 8
 10300  003762  B4D8               	btfsc	status,2,c
 10301  003764  D7AC               	goto	l1810
 10302  003766  0A01               	xorlw	1	; case 9
 10303  003768  B4D8               	btfsc	status,2,c
 10304  00376A  D7A6               	goto	l1809
 10305  00376C  0A03               	xorlw	3	; case 10
 10306  00376E  B4D8               	btfsc	status,2,c
 10307  003770  D7B6               	goto	l1814
 10308  003772  0A01               	xorlw	1	; case 11
 10309  003774  B4D8               	btfsc	status,2,c
 10310  003776  D7C2               	goto	l1815
 10311  003778  0A07               	xorlw	7	; case 12
 10312  00377A  0012               	return	
 10313  00377C                     __end_of_USBCheckStdRequest:
 10314                           	opt stack 0
 10315                           tosu	equ	0xFFF
 10316                           tosh	equ	0xFFE
 10317                           tosl	equ	0xFFD
 10318                           pclath	equ	0xFFA
 10319                           tblptru	equ	0xFF8
 10320                           tblptrh	equ	0xFF7
 10321                           tblptrl	equ	0xFF6
 10322                           tablat	equ	0xFF5
 10323                           prodh	equ	0xFF4
 10324                           prodl	equ	0xFF3
 10325                           intcon	equ	0xFF2
 10326                           intcon2	equ	0xFF1
 10327                           intcon3	equ	0xFF0
 10328                           postinc0	equ	0xFEE
 10329                           plusw0	equ	0xFEB
 10330                           wreg	equ	0xFE8
 10331                           postinc1	equ	0xFE6
 10332                           postdec1	equ	0xFE5
 10333                           fsr1h	equ	0xFE2
 10334                           fsr1l	equ	0xFE1
 10335                           indf2	equ	0xFDF
 10336                           postinc2	equ	0xFDE
 10337                           postdec2	equ	0xFDD
 10338                           plusw2	equ	0xFDB
 10339                           fsr2h	equ	0xFDA
 10340                           fsr2l	equ	0xFD9
 10341                           status	equ	0xFD8
 10342                           
 10343 ;; *************** function _USBStdSetCfgHandler *****************
 10344 ;; Defined at:
 10345 ;;		line 1986 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 10346 ;; Parameters:    Size  Location     Type
 10347 ;;		None
 10348 ;; Auto vars:     Size  Location     Type
 10349 ;;  i               1   49[BANK0 ] unsigned char 
 10350 ;; Return value:  Size  Location     Type
 10351 ;;                  1    wreg      void 
 10352 ;; Registers used:
 10353 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10354 ;; Tracked objects:
 10355 ;;		On entry : 0/0
 10356 ;;		On exit  : 0/0
 10357 ;;		Unchanged: 0/0
 10358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10359 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10360 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10362 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10363 ;;Total ram usage:        1 bytes
 10364 ;; Hardware stack levels used:    1
 10365 ;; Hardware stack levels required when called:   15
 10366 ;; This function calls:
 10367 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 10368 ;;		_memset
 10369 ;; This function is called by:
 10370 ;;		_USBCheckStdRequest
 10371 ;; This function uses a non-reentrant model
 10372 ;;
 10373                           
 10374                           	psect	text40
 10375  0034CC                     __ptext40:
 10376                           	opt stack 0
 10377  0034CC                     _USBStdSetCfgHandler:
 10378                           	opt stack 8
 10379                           
 10380                           ;usb_device.c: 1988: uint8_t i;
 10381                           ;usb_device.c: 1991: inPipes[0].info.bits.busy = 1;
 10382                           
 10383                           ;incstack = 0
 10384  0034CC  0100               	movlb	0	; () banked
 10385  0034CE  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 10386                           
 10387                           ; BSR set to: 0
 10388                           ;usb_device.c: 1994: memset((void*)&UEP1,0x00,(2));;
 10389  0034D0  0E27               	movlw	39
 10390  0034D2  6F7D               	movwf	memset@p1& (0+255),b
 10391  0034D4  0E0F               	movlw	15
 10392  0034D6  6F7E               	movwf	(memset@p1+1)& (0+255),b
 10393  0034D8  0E00               	movlw	0
 10394  0034DA  6F80               	movwf	(memset@c+1)& (0+255),b
 10395  0034DC  0E00               	movlw	0
 10396  0034DE  6F7F               	movwf	memset@c& (0+255),b
 10397  0034E0  0E00               	movlw	0
 10398  0034E2  6F82               	movwf	(memset@n+1)& (0+255),b
 10399  0034E4  0E02               	movlw	2
 10400  0034E6  6F81               	movwf	memset@n& (0+255),b
 10401  0034E8  EC2B  F031         	call	_memset	;wreg free
 10402                           
 10403                           ;usb_device.c: 1997: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 10404  0034EC  0E00               	movlw	0
 10405  0034EE  0100               	movlb	0	; () banked
 10406  0034F0  6F7D               	movwf	memset@p1& (0+255),b
 10407  0034F2  0E04               	movlw	4
 10408  0034F4  6F7E               	movwf	(memset@p1+1)& (0+255),b
 10409  0034F6  0E00               	movlw	0
 10410  0034F8  6F80               	movwf	(memset@c+1)& (0+255),b
 10411  0034FA  0E00               	movlw	0
 10412  0034FC  6F7F               	movwf	memset@c& (0+255),b
 10413  0034FE  0E00               	movlw	0
 10414  003500  6F82               	movwf	(memset@n+1)& (0+255),b
 10415  003502  0E30               	movlw	48
 10416  003504  6F81               	movwf	memset@n& (0+255),b
 10417  003506  EC2B  F031         	call	_memset	;wreg free
 10418                           
 10419                           ;usb_device.c: 2000: UCONbits.PPBRST = 1;
 10420  00350A  8C65               	bsf	3941,6,c	;volatile
 10421                           
 10422                           ;usb_device.c: 2005: for(i = 0; i < (uint8_t)(2+1u); i++)
 10423  00350C  0E00               	movlw	0
 10424  00350E  0100               	movlb	0	; () banked
 10425  003510  6F91               	movwf	USBStdSetCfgHandler@i& (0+255),b
 10426  003512                     l12828:
 10427                           
 10428                           ; BSR set to: 0
 10429  003512  0E02               	movlw	2
 10430  003514  6591               	cpfsgt	USBStdSetCfgHandler@i& (0+255),b
 10431  003516  D001               	goto	l1722
 10432  003518  D016               	goto	u11500
 10433  00351A                     l1722:
 10434                           
 10435                           ; BSR set to: 0
 10436                           ;usb_device.c: 2006: {
 10437                           ;usb_device.c: 2007: ep_data_in[i].Val = 0u;
 10438                           
 10439                           ; BSR set to: 0
 10440  00351A  5191               	movf	USBStdSetCfgHandler@i& (0+255),w,b
 10441  00351C  0D01               	mullw	1
 10442  00351E  0ED1               	movlw	low _ep_data_in
 10443  003520  24F3               	addwf	prodl,w,c
 10444  003522  6ED9               	movwf	fsr2l,c
 10445  003524  0E02               	movlw	high _ep_data_in
 10446  003526  20F4               	addwfc	prodh,w,c
 10447  003528  6EDA               	movwf	fsr2h,c
 10448  00352A  0E00               	movlw	0
 10449  00352C  6EDF               	movwf	indf2,c
 10450                           
 10451                           ;usb_device.c: 2008: ep_data_out[i].Val = 0u;
 10452  00352E  5191               	movf	USBStdSetCfgHandler@i& (0+255),w,b
 10453  003530  0D01               	mullw	1
 10454  003532  0ECE               	movlw	low _ep_data_out
 10455  003534  24F3               	addwf	prodl,w,c
 10456  003536  6ED9               	movwf	fsr2l,c
 10457  003538  0E02               	movlw	high _ep_data_out
 10458  00353A  20F4               	addwfc	prodh,w,c
 10459  00353C  6EDA               	movwf	fsr2h,c
 10460  00353E  0E00               	movlw	0
 10461  003540  6EDF               	movwf	indf2,c
 10462                           
 10463                           ; BSR set to: 0
 10464  003542  2B91               	incf	USBStdSetCfgHandler@i& (0+255),f,b
 10465  003544  D7E6               	goto	l12828
 10466  003546                     u11500:
 10467                           
 10468                           ; BSR set to: 0
 10469                           ;usb_device.c: 2009: }
 10470                           ;usb_device.c: 2012: memset((void*)&USBAlternateInterface,0x00,2);
 10471                           
 10472                           ; BSR set to: 0
 10473  003546  0EF1               	movlw	low _USBAlternateInterface
 10474  003548  6F7D               	movwf	memset@p1& (0+255),b
 10475  00354A  0E02               	movlw	high _USBAlternateInterface
 10476  00354C  6F7E               	movwf	(memset@p1+1)& (0+255),b
 10477  00354E  0E00               	movlw	0
 10478  003550  6F80               	movwf	(memset@c+1)& (0+255),b
 10479  003552  0E00               	movlw	0
 10480  003554  6F7F               	movwf	memset@c& (0+255),b
 10481  003556  0E00               	movlw	0
 10482  003558  6F82               	movwf	(memset@n+1)& (0+255),b
 10483  00355A  0E02               	movlw	2
 10484  00355C  6F81               	movwf	memset@n& (0+255),b
 10485  00355E  EC2B  F031         	call	_memset	;wreg free
 10486                           
 10487                           ;usb_device.c: 2015: UCONbits.PPBRST = 0;
 10488  003562  9C65               	bcf	3941,6,c	;volatile
 10489                           
 10490                           ;usb_device.c: 2017: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 10491  003564  0E08               	movlw	8
 10492  003566  0100               	movlb	0	; () banked
 10493  003568  6FB6               	movwf	_pBDTEntryIn& (0+255),b
 10494  00356A  0E04               	movlw	4
 10495  00356C  6FB7               	movwf	(_pBDTEntryIn+1)& (0+255),b
 10496                           
 10497                           ; BSR set to: 0
 10498                           ;usb_device.c: 2020: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 10499  00356E  0E00               	movlw	0
 10500  003570  6FC0               	movwf	_pBDTEntryEP0OutCurrent& (0+255),b
 10501  003572  0E04               	movlw	4
 10502  003574  6FC1               	movwf	(_pBDTEntryEP0OutCurrent+1)& (0+255),b
 10503                           
 10504                           ; BSR set to: 0
 10505                           ;usb_device.c: 2021: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 10506  003576  C0C0  F0BE         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 10507  00357A  C0C1  F0BF         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 10508                           
 10509                           ; BSR set to: 0
 10510                           ;usb_device.c: 2024: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 10511  00357E  C432 F0D5          	movff	1074,_USBActiveConfiguration	;volatile
 10512                           
 10513                           ; BSR set to: 0
 10514                           ;usb_device.c: 2027: if(USBActiveConfiguration == 0)
 10515  003582  51D5               	movf	_USBActiveConfiguration& (0+255),w,b
 10516  003584  A4D8               	btfss	status,2,c
 10517  003586  D003               	goto	l1724
 10518                           
 10519                           ; BSR set to: 0
 10520                           ;usb_device.c: 2028: {
 10521                           ;usb_device.c: 2030: USBDeviceState = ADDRESS_STATE;
 10522  003588  0E10               	movlw	16
 10523  00358A  6FCC               	movwf	_USBDeviceState& (0+255),b
 10524                           
 10525                           ;usb_device.c: 2031: }
 10526  00358C  0012               	return	
 10527  00358E                     l1724:
 10528                           
 10529                           ; BSR set to: 0
 10530                           ;usb_device.c: 2032: else
 10531                           ;usb_device.c: 2033: {
 10532                           ;usb_device.c: 2035: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
 10533                           
 10534                           ; BSR set to: 0
 10535  00358E  0E00               	movlw	0
 10536  003590  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
 10537  003592  0E01               	movlw	1
 10538  003594  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
 10539  003596  0ED5               	movlw	low _USBActiveConfiguration
 10540  003598  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
 10541  00359A  0E00               	movlw	high _USBActiveConfiguration
 10542  00359C  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
 10543  00359E  0E00               	movlw	0
 10544  0035A0  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
 10545  0035A2  0E01               	movlw	1
 10546  0035A4  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
 10547  0035A6  ECC9  F02A         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 10548                           
 10549                           ;usb_device.c: 2040: USBDeviceState = CONFIGURED_STATE;
 10550  0035AA  0E20               	movlw	32
 10551  0035AC  0100               	movlb	0	; () banked
 10552  0035AE  6FCC               	movwf	_USBDeviceState& (0+255),b
 10553  0035B0  0012               	return	
 10554  0035B2                     __end_of_USBStdSetCfgHandler:
 10555                           	opt stack 0
 10556                           tosu	equ	0xFFF
 10557                           tosh	equ	0xFFE
 10558                           tosl	equ	0xFFD
 10559                           pclath	equ	0xFFA
 10560                           tblptru	equ	0xFF8
 10561                           tblptrh	equ	0xFF7
 10562                           tblptrl	equ	0xFF6
 10563                           tablat	equ	0xFF5
 10564                           prodh	equ	0xFF4
 10565                           prodl	equ	0xFF3
 10566                           intcon	equ	0xFF2
 10567                           intcon2	equ	0xFF1
 10568                           intcon3	equ	0xFF0
 10569                           postinc0	equ	0xFEE
 10570                           plusw0	equ	0xFEB
 10571                           wreg	equ	0xFE8
 10572                           postinc1	equ	0xFE6
 10573                           postdec1	equ	0xFE5
 10574                           fsr1h	equ	0xFE2
 10575                           fsr1l	equ	0xFE1
 10576                           indf2	equ	0xFDF
 10577                           postinc2	equ	0xFDE
 10578                           postdec2	equ	0xFDD
 10579                           plusw2	equ	0xFDB
 10580                           fsr2h	equ	0xFDA
 10581                           fsr2l	equ	0xFD9
 10582                           status	equ	0xFD8
 10583                           
 10584 ;; *************** function _USBStdGetStatusHandler *****************
 10585 ;; Defined at:
 10586 ;;		line 2147 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 10587 ;; Parameters:    Size  Location     Type
 10588 ;;		None
 10589 ;; Auto vars:     Size  Location     Type
 10590 ;;  p               2   30[BANK0 ] PTR struct __BDT
 10591 ;;		 -> NULL(0), BDT(48), 
 10592 ;; Return value:  Size  Location     Type
 10593 ;;                  1    wreg      void 
 10594 ;; Registers used:
 10595 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10596 ;; Tracked objects:
 10597 ;;		On entry : 0/0
 10598 ;;		On exit  : 0/0
 10599 ;;		Unchanged: 0/0
 10600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10601 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10602 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10603 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10604 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10605 ;;Total ram usage:        3 bytes
 10606 ;; Hardware stack levels used:    1
 10607 ;; Hardware stack levels required when called:   11
 10608 ;; This function calls:
 10609 ;;		Nothing
 10610 ;; This function is called by:
 10611 ;;		_USBCheckStdRequest
 10612 ;; This function uses a non-reentrant model
 10613 ;;
 10614                           
 10615                           	psect	text41
 10616  0042A6                     __ptext41:
 10617                           	opt stack 0
 10618  0042A6                     _USBStdGetStatusHandler:
 10619                           	opt stack 12
 10620                           
 10621                           ;usb_device.c: 2149: CtrlTrfData[0] = 0;
 10622                           
 10623                           ; BSR set to: 0
 10624                           ;incstack = 0
 10625  0042A6  0E00               	movlw	0
 10626  0042A8  0104               	movlb	4	; () banked
 10627  0042AA  6F38               	movwf	56,b	;volatile
 10628                           
 10629                           ;usb_device.c: 2150: CtrlTrfData[1] = 0;
 10630  0042AC  0E00               	movlw	0
 10631  0042AE  6F39               	movwf	57,b	;volatile
 10632                           
 10633                           ;usb_device.c: 2152: switch(SetupPkt.Recipient)
 10634  0042B0  D03D               	goto	l1743
 10635  0042B2                     l1744:
 10636                           
 10637                           ; BSR set to: 4
 10638                           ;usb_device.c: 2155: inPipes[0].info.bits.busy = 1;
 10639  0042B2  0100               	movlb	0	; () banked
 10640  0042B4  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 10641                           
 10642                           ;usb_device.c: 2163: }
 10643                           ;usb_device.c: 2165: if(RemoteWakeup == 1)
 10644                           
 10645                           ; BSR set to: 4
 10646                           
 10647                           ; BSR set to: 0
 10648                           ;usb_device.c: 2161: {
 10649                           ;usb_device.c: 2162: CtrlTrfData[0]|=0x01;
 10650                           
 10651                           ;usb_device.c: 2160: if(0 == 1)
 10652  0042B6  0101               	movlb	1	; () banked
 10653  0042B8  05E3               	decf	_RemoteWakeup& (0+255),w,b
 10654  0042BA  A4D8               	btfss	status,2,c
 10655  0042BC  D042               	goto	l1747
 10656                           
 10657                           ; BSR set to: 1
 10658                           ;usb_device.c: 2166: {
 10659                           ;usb_device.c: 2167: CtrlTrfData[0]|=0x02;
 10660  0042BE  0104               	movlb	4	; () banked
 10661  0042C0  8338               	bsf	56,1,b	;volatile
 10662                           
 10663                           ; BSR set to: 4
 10664                           ;usb_device.c: 2168: }
 10665                           ;usb_device.c: 2169: break;
 10666  0042C2  D03F               	goto	l1747
 10667  0042C4                     l1748:
 10668                           
 10669                           ; BSR set to: 4
 10670                           ;usb_device.c: 2171: inPipes[0].info.bits.busy = 1;
 10671  0042C4  0100               	movlb	0	; () banked
 10672  0042C6  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 10673                           
 10674                           ;usb_device.c: 2172: break;
 10675  0042C8  D03C               	goto	l1747
 10676  0042CA                     l1749:
 10677                           
 10678                           ; BSR set to: 4
 10679                           ;usb_device.c: 2174: inPipes[0].info.bits.busy = 1;
 10680  0042CA  0100               	movlb	0	; () banked
 10681  0042CC  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 10682                           
 10683                           ;usb_device.c: 2178: {
 10684                           ;usb_device.c: 2179: BDT_ENTRY *p;
 10685                           ;usb_device.c: 2181: if(SetupPkt.EPDir == 0)
 10686  0042CE  0104               	movlb	4	; () banked
 10687  0042D0  BF34               	btfsc	52,7,b	;volatile
 10688  0042D2  D00B               	goto	l1750
 10689                           
 10690                           ; BSR set to: 4
 10691                           ;usb_device.c: 2182: {
 10692                           ;usb_device.c: 2183: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 10693  0042D4  5134               	movf	52,w,b	;volatile
 10694  0042D6  0B0F               	andlw	15
 10695  0042D8  0100               	movlb	0	; () banked
 10696  0042DA  6F7D               	movwf	??_USBStdGetStatusHandler& (0+255),b
 10697  0042DC  517D               	movf	??_USBStdGetStatusHandler& (0+255),w,b
 10698  0042DE  0D02               	mullw	2
 10699  0042E0  0E0E               	movlw	low _pBDTEntryOut
 10700  0042E2  24F3               	addwf	prodl,w,c
 10701  0042E4  6ED9               	movwf	fsr2l,c
 10702  0042E6  0E03               	movlw	high _pBDTEntryOut
 10703  0042E8  D00B               	goto	L4
 10704  0042EA                     l1750:
 10705                           
 10706                           ;usb_device.c: 2185: else
 10707                           ;usb_device.c: 2186: {
 10708                           ;usb_device.c: 2187: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 10709                           
 10710                           ; BSR set to: 0
 10711  0042EA  0104               	movlb	4	; () banked
 10712  0042EC  5134               	movf	52,w,b	;volatile
 10713  0042EE  0B0F               	andlw	15
 10714  0042F0  0100               	movlb	0	; () banked
 10715  0042F2  6F7D               	movwf	??_USBStdGetStatusHandler& (0+255),b
 10716  0042F4  517D               	movf	??_USBStdGetStatusHandler& (0+255),w,b
 10717  0042F6  0D02               	mullw	2
 10718  0042F8  0EB6               	movlw	low _pBDTEntryIn
 10719  0042FA  24F3               	addwf	prodl,w,c
 10720  0042FC  6ED9               	movwf	fsr2l,c
 10721  0042FE  0E00               	movlw	high _pBDTEntryIn
 10722  004300                     L4:
 10723  004300  20F4               	addwfc	prodh,w,c
 10724  004302  6EDA               	movwf	fsr2h,c
 10725  004304  CFDE F07E          	movff	postinc2,USBStdGetStatusHandler@p
 10726  004308  CFDD F07F          	movff	postdec2,USBStdGetStatusHandler@p+1
 10727                           
 10728                           ; BSR set to: 0
 10729                           ;usb_device.c: 2188: }
 10730                           ;usb_device.c: 2190: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
 10731                           
 10732                           ; BSR set to: 0
 10733  00430C  C07E  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 10734  004310  C07F  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 10735  004314  AEDF               	btfss	indf2,7,c
 10736  004316  D015               	goto	l1747
 10737                           
 10738                           ; BSR set to: 0
 10739  004318  C07E  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 10740  00431C  C07F  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 10741  004320  A4DF               	btfss	indf2,2,c
 10742  004322  D00F               	goto	l1747
 10743                           
 10744                           ; BSR set to: 0
 10745                           ;usb_device.c: 2191: CtrlTrfData[0]=0x01;
 10746  004324  0E01               	movlw	1
 10747  004326  0104               	movlb	4	; () banked
 10748  004328  6F38               	movwf	56,b	;volatile
 10749                           
 10750                           ; BSR set to: 4
 10751                           ;usb_device.c: 2193: }
 10752                           ;usb_device.c: 2194: }
 10753                           
 10754                           ; BSR set to: 4
 10755                           ;usb_device.c: 2192: break;
 10756  00432A  D00B               	goto	l1747
 10757  00432C                     l1743:
 10758                           
 10759                           ; BSR set to: 4
 10760                           
 10761                           ; BSR set to: 4
 10762  00432C  5130               	movf	48,w,b	;volatile
 10763  00432E  0B1F               	andlw	31
 10764                           
 10765                           ; Switch size 1, requested type "space"
 10766                           ; Number of cases is 3, Range of values is 0 to 2
 10767                           ; switch strategies available:
 10768                           ; Name         Instructions Cycles
 10769                           ; simple_byte           10     6 (average)
 10770                           ;	Chosen strategy is simple_byte
 10771  004330  0A00               	xorlw	0	; case 0
 10772  004332  B4D8               	btfsc	status,2,c
 10773  004334  D7BE               	goto	l1744
 10774  004336  0A01               	xorlw	1	; case 1
 10775  004338  B4D8               	btfsc	status,2,c
 10776  00433A  D7C4               	goto	l1748
 10777  00433C  0A03               	xorlw	3	; case 2
 10778  00433E  B4D8               	btfsc	status,2,c
 10779  004340  D7C4               	goto	l1749
 10780  004342                     l1747:
 10781                           
 10782                           ;usb_device.c: 2196: if(inPipes[0].info.bits.busy == 1)
 10783  004342  0100               	movlb	0	; () banked
 10784  004344  AFB3               	btfss	(_inPipes+3)& (0+255),7,b
 10785  004346  0012               	return	
 10786                           
 10787                           ; BSR set to: 0
 10788                           ;usb_device.c: 2197: {
 10789                           ;usb_device.c: 2198: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
 10790  004348  0E38               	movlw	56
 10791  00434A  6FB0               	movwf	_inPipes& (0+255),b
 10792  00434C  0E04               	movlw	4
 10793  00434E  6FB1               	movwf	(_inPipes+1)& (0+255),b
 10794                           
 10795                           ; BSR set to: 0
 10796                           ;usb_device.c: 2199: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 10797  004350  81B3               	bsf	(_inPipes+3)& (0+255),0,b
 10798                           
 10799                           ; BSR set to: 0
 10800                           ;usb_device.c: 2200: inPipes[0].wCount.v[0] = 2;
 10801  004352  0E02               	movlw	2
 10802  004354  6FB4               	movwf	(_inPipes+4)& (0+255),b
 10803  004356  0012               	return	
 10804  004358                     __end_of_USBStdGetStatusHandler:
 10805                           	opt stack 0
 10806                           tosu	equ	0xFFF
 10807                           tosh	equ	0xFFE
 10808                           tosl	equ	0xFFD
 10809                           pclath	equ	0xFFA
 10810                           tblptru	equ	0xFF8
 10811                           tblptrh	equ	0xFF7
 10812                           tblptrl	equ	0xFF6
 10813                           tablat	equ	0xFF5
 10814                           prodh	equ	0xFF4
 10815                           prodl	equ	0xFF3
 10816                           intcon	equ	0xFF2
 10817                           intcon2	equ	0xFF1
 10818                           intcon3	equ	0xFF0
 10819                           postinc0	equ	0xFEE
 10820                           plusw0	equ	0xFEB
 10821                           wreg	equ	0xFE8
 10822                           postinc1	equ	0xFE6
 10823                           postdec1	equ	0xFE5
 10824                           fsr1h	equ	0xFE2
 10825                           fsr1l	equ	0xFE1
 10826                           indf2	equ	0xFDF
 10827                           postinc2	equ	0xFDE
 10828                           postdec2	equ	0xFDD
 10829                           plusw2	equ	0xFDB
 10830                           fsr2h	equ	0xFDA
 10831                           fsr2l	equ	0xFD9
 10832                           status	equ	0xFD8
 10833                           
 10834 ;; *************** function _USBStdGetDscHandler *****************
 10835 ;; Defined at:
 10836 ;;		line 2061 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 10837 ;; Parameters:    Size  Location     Type
 10838 ;;		None
 10839 ;; Auto vars:     Size  Location     Type
 10840 ;;		None
 10841 ;; Return value:  Size  Location     Type
 10842 ;;                  1    wreg      void 
 10843 ;; Registers used:
 10844 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 10845 ;; Tracked objects:
 10846 ;;		On entry : 0/0
 10847 ;;		On exit  : 0/0
 10848 ;;		Unchanged: 0/0
 10849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10850 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10851 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10852 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10853 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10854 ;;Total ram usage:        2 bytes
 10855 ;; Hardware stack levels used:    1
 10856 ;; Hardware stack levels required when called:   11
 10857 ;; This function calls:
 10858 ;;		Nothing
 10859 ;; This function is called by:
 10860 ;;		_USBCheckStdRequest
 10861 ;; This function uses a non-reentrant model
 10862 ;;
 10863                           
 10864                           	psect	text42
 10865  002E80                     __ptext42:
 10866                           	opt stack 0
 10867  002E80                     _USBStdGetDscHandler:
 10868                           	opt stack 12
 10869                           
 10870                           ;usb_device.c: 2063: if(SetupPkt.bmRequestType == 0x80)
 10871                           
 10872                           ; BSR set to: 0
 10873                           ;incstack = 0
 10874  002E80  0E80               	movlw	128
 10875  002E82  0104               	movlb	4	; () banked
 10876  002E84  1930               	xorwf	48,w,b	;volatile
 10877  002E86  A4D8               	btfss	status,2,c
 10878  002E88  0012               	return	
 10879                           
 10880                           ; BSR set to: 4
 10881                           ;usb_device.c: 2064: {
 10882                           ;usb_device.c: 2065: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 10883  002E8A  0EC0               	movlw	192
 10884  002E8C  0100               	movlb	0	; () banked
 10885  002E8E  6FB3               	movwf	(_inPipes+3)& (0+255),b
 10886                           
 10887                           ;usb_device.c: 2067: switch(SetupPkt.bDescriptorType)
 10888  002E90  D082               	goto	l1730
 10889  002E92                     
 10890                           ;usb_device.c: 2073: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 10891                           
 10892                           ; BSR set to: 0
 10893  002E92  0E49               	movlw	low _device_dsc
 10894  002E94  0100               	movlb	0	; () banked
 10895  002E96  6FB0               	movwf	_inPipes& (0+255),b
 10896  002E98  0EFE               	movlw	high _device_dsc
 10897  002E9A  6FB1               	movwf	(_inPipes+1)& (0+255),b
 10898                           
 10899                           ; BSR set to: 0
 10900                           ;usb_device.c: 2075: inPipes[0].wCount.Val = sizeof(device_dsc);
 10901  002E9C  0E00               	movlw	0
 10902  002E9E  6FB5               	movwf	(_inPipes+5)& (0+255),b
 10903  002EA0  0E12               	movlw	18
 10904  002EA2  6FB4               	movwf	(_inPipes+4)& (0+255),b
 10905                           
 10906                           ;usb_device.c: 2076: break;
 10907  002EA4  0012               	return	
 10908  002EA6                     
 10909                           ;usb_device.c: 2081: if(SetupPkt.bDscIndex < 1)
 10910                           
 10911                           ; BSR set to: 0
 10912  002EA6  0104               	movlb	4	; () banked
 10913  002EA8  5132               	movf	50,w,b	;volatile
 10914  002EAA  A4D8               	btfss	status,2,c
 10915  002EAC  D040               	goto	l1734
 10916                           
 10917                           ; BSR set to: 4
 10918                           ;usb_device.c: 2082: {
 10919                           ;usb_device.c: 2086: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
 10920  002EAE  5132               	movf	50,w,b	;volatile
 10921  002EB0  0D02               	mullw	2
 10922  002EB2  0E2E               	movlw	low _USB_CD_Ptr
 10923  002EB4  24F3               	addwf	prodl,w,c
 10924  002EB6  6EF6               	movwf	tblptrl,c
 10925  002EB8  0EFC               	movlw	high _USB_CD_Ptr
 10926  002EBA  20F4               	addwfc	prodh,w,c
 10927  002EBC  6EF7               	movwf	tblptrh,c
 10928  002EBE                     	if	0	;There are less than 3 active tblptr bytes
 10929  002EBE                     	endif
 10930  002EBE  0009               	tblrd		*+
 10931  002EC0  CFF5 F0B0          	movff	tablat,_inPipes
 10932  002EC4  000A               	tblrd		*-
 10933  002EC6  CFF5 F0B1          	movff	tablat,_inPipes+1
 10934                           
 10935                           ; BSR set to: 4
 10936                           ;usb_device.c: 2092: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 10937  002ECA  0E02               	movlw	2
 10938  002ECC  0100               	movlb	0	; () banked
 10939  002ECE  25B0               	addwf	_inPipes& (0+255),w,b
 10940  002ED0  6F7D               	movwf	??_USBStdGetDscHandler& (0+255),b
 10941  002ED2  0E00               	movlw	0
 10942  002ED4  21B1               	addwfc	(_inPipes+1)& (0+255),w,b
 10943  002ED6  6F7E               	movwf	(??_USBStdGetDscHandler+1)& (0+255),b
 10944  002ED8  C07D  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 10945  002EDC  C07E  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 10946  002EE0  6AF8               	clrf	tblptru,c
 10947  002EE2  0E0E               	movlw	(high __ramtop+-1)
 10948  002EE4  64F7               	cpfsgt	tblptrh,c
 10949  002EE6  D003               	bra	u11547
 10950  002EE8  0008               	tblrd		*
 10951  002EEA  50F5               	movf	tablat,w,c
 10952  002EEC  D005               	bra	u11540
 10953  002EEE                     u11547:
 10954  002EEE  CFF6 FFE9          	movff	tblptrl,fsr0l
 10955  002EF2  CFF7 FFEA          	movff	tblptrh,fsr0h
 10956  002EF6  50EF               	movf	indf0,w,c
 10957  002EF8                     u11540:
 10958  002EF8  0100               	movlb	0	; () banked
 10959  002EFA  6FB4               	movwf	(_inPipes+4)& (0+255),b
 10960                           
 10961                           ; BSR set to: 0
 10962                           ;usb_device.c: 2093: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 10963  002EFC  0E03               	movlw	3
 10964  002EFE  25B0               	addwf	_inPipes& (0+255),w,b
 10965  002F00  6F7D               	movwf	??_USBStdGetDscHandler& (0+255),b
 10966  002F02  0E00               	movlw	0
 10967  002F04  21B1               	addwfc	(_inPipes+1)& (0+255),w,b
 10968  002F06  6F7E               	movwf	(??_USBStdGetDscHandler+1)& (0+255),b
 10969  002F08  C07D  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 10970  002F0C  C07E  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 10971  002F10  6AF8               	clrf	tblptru,c
 10972  002F12  0E0E               	movlw	(high __ramtop+-1)
 10973  002F14  64F7               	cpfsgt	tblptrh,c
 10974  002F16  D003               	bra	u11557
 10975  002F18  0008               	tblrd		*
 10976  002F1A  50F5               	movf	tablat,w,c
 10977  002F1C  D005               	bra	u11550
 10978  002F1E                     u11557:
 10979  002F1E  CFF6 FFE9          	movff	tblptrl,fsr0l
 10980  002F22  CFF7 FFEA          	movff	tblptrh,fsr0h
 10981  002F26  50EF               	movf	indf0,w,c
 10982  002F28                     u11550:
 10983  002F28  0100               	movlb	0	; () banked
 10984  002F2A  6FB5               	movwf	(_inPipes+5)& (0+255),b
 10985                           
 10986                           ;usb_device.c: 2094: }
 10987  002F2C  0012               	return	
 10988  002F2E                     l1734:
 10989                           
 10990                           ;usb_device.c: 2095: else
 10991                           ;usb_device.c: 2096: {
 10992                           ;usb_device.c: 2097: inPipes[0].info.Val = 0;
 10993                           
 10994                           ; BSR set to: 0
 10995  002F2E  0E00               	movlw	0
 10996  002F30  0100               	movlb	0	; () banked
 10997  002F32  6FB3               	movwf	(_inPipes+3)& (0+255),b
 10998                           
 10999                           ; BSR set to: 0
 11000                           ;usb_device.c: 2098: }
 11001                           ;usb_device.c: 2099: break;
 11002  002F34  0012               	return	
 11003  002F36                     
 11004                           ;usb_device.c: 2104: if(SetupPkt.bDscIndex<3)
 11005                           
 11006                           ; BSR set to: 0
 11007  002F36  0E03               	movlw	3
 11008  002F38  0104               	movlb	4	; () banked
 11009  002F3A  6132               	cpfslt	50,b	;volatile
 11010  002F3C  D024               	goto	l1737
 11011                           
 11012                           ; BSR set to: 4
 11013                           ;usb_device.c: 2105: {
 11014                           ;usb_device.c: 2107: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
 11015  002F3E  5132               	movf	50,w,b	;volatile
 11016  002F40  0D02               	mullw	2
 11017  002F42  0E1E               	movlw	low _USB_SD_Ptr
 11018  002F44  24F3               	addwf	prodl,w,c
 11019  002F46  6EF6               	movwf	tblptrl,c
 11020  002F48  0EFC               	movlw	high _USB_SD_Ptr
 11021  002F4A  20F4               	addwfc	prodh,w,c
 11022  002F4C  6EF7               	movwf	tblptrh,c
 11023  002F4E                     	if	0	;There are less than 3 active tblptr bytes
 11024  002F4E                     	endif
 11025  002F4E  0009               	tblrd		*+
 11026  002F50  CFF5 F0B0          	movff	tablat,_inPipes
 11027  002F54  000A               	tblrd		*-
 11028  002F56  CFF5 F0B1          	movff	tablat,_inPipes+1
 11029                           
 11030                           ; BSR set to: 4
 11031                           ;usb_device.c: 2109: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 11032  002F5A  C0B0  FFF6         	movff	_inPipes,tblptrl
 11033  002F5E  C0B1  FFF7         	movff	_inPipes+1,tblptrh
 11034  002F62  6AF8               	clrf	tblptru,c
 11035  002F64  0E0E               	movlw	(high __ramtop+-1)
 11036  002F66  64F7               	cpfsgt	tblptrh,c
 11037  002F68  D003               	bra	u11577
 11038  002F6A  0008               	tblrd		*
 11039  002F6C  50F5               	movf	tablat,w,c
 11040  002F6E  D005               	bra	u11570
 11041  002F70                     u11577:
 11042  002F70  CFF6 FFE9          	movff	tblptrl,fsr0l
 11043  002F74  CFF7 FFEA          	movff	tblptrh,fsr0h
 11044  002F78  50EF               	movf	indf0,w,c
 11045  002F7A                     u11570:
 11046  002F7A  0100               	movlb	0	; () banked
 11047  002F7C  6F7D               	movwf	??_USBStdGetDscHandler& (0+255),b
 11048  002F7E  517D               	movf	??_USBStdGetDscHandler& (0+255),w,b
 11049  002F80  6FB4               	movwf	(_inPipes+4)& (0+255),b
 11050  002F82  6BB5               	clrf	(_inPipes+5)& (0+255),b
 11051                           
 11052                           ;usb_device.c: 2110: }
 11053  002F84  0012               	return	
 11054  002F86                     l1737:
 11055                           
 11056                           ;usb_device.c: 2120: else
 11057                           ;usb_device.c: 2121: {
 11058                           ;usb_device.c: 2122: inPipes[0].info.Val = 0;
 11059                           
 11060                           ; BSR set to: 0
 11061  002F86  0E00               	movlw	0
 11062  002F88  0100               	movlb	0	; () banked
 11063  002F8A  6FB3               	movwf	(_inPipes+3)& (0+255),b
 11064                           
 11065                           ; BSR set to: 0
 11066                           ;usb_device.c: 2123: }
 11067                           ;usb_device.c: 2124: break;
 11068  002F8C  0012               	return	
 11069  002F8E                     
 11070                           ;usb_device.c: 2126: inPipes[0].info.Val = 0;
 11071                           
 11072                           ; BSR set to: 0
 11073  002F8E  0E00               	movlw	0
 11074  002F90  0100               	movlb	0	; () banked
 11075  002F92  6FB3               	movwf	(_inPipes+3)& (0+255),b
 11076                           
 11077                           ; BSR set to: 0
 11078                           ;usb_device.c: 2128: }
 11079                           
 11080                           ;usb_device.c: 2127: break;
 11081  002F94  0012               	return	
 11082  002F96                     l1730:
 11083                           
 11084                           ; BSR set to: 0
 11085                           
 11086                           ; BSR set to: 0
 11087  002F96  0104               	movlb	4	; () banked
 11088  002F98  5133               	movf	51,w,b	;volatile
 11089                           
 11090                           ; Switch size 1, requested type "space"
 11091                           ; Number of cases is 3, Range of values is 1 to 3
 11092                           ; switch strategies available:
 11093                           ; Name         Instructions Cycles
 11094                           ; simple_byte           10     6 (average)
 11095                           ;	Chosen strategy is simple_byte
 11096  002F9A  0A01               	xorlw	1	; case 1
 11097  002F9C  B4D8               	btfsc	status,2,c
 11098  002F9E  D779               	goto	l1731
 11099  002FA0  0A03               	xorlw	3	; case 2
 11100  002FA2  B4D8               	btfsc	status,2,c
 11101  002FA4  D780               	goto	l1733
 11102  002FA6  0A01               	xorlw	1	; case 3
 11103  002FA8  B4D8               	btfsc	status,2,c
 11104  002FAA  D7C5               	goto	l1736
 11105  002FAC  D7F0               	goto	l1739
 11106  002FAE                     __end_of_USBStdGetDscHandler:
 11107                           	opt stack 0
 11108                           tosu	equ	0xFFF
 11109                           tosh	equ	0xFFE
 11110                           tosl	equ	0xFFD
 11111                           pclath	equ	0xFFA
 11112                           tblptru	equ	0xFF8
 11113                           tblptrh	equ	0xFF7
 11114                           tblptrl	equ	0xFF6
 11115                           tablat	equ	0xFF5
 11116                           prodh	equ	0xFF4
 11117                           prodl	equ	0xFF3
 11118                           intcon	equ	0xFF2
 11119                           intcon2	equ	0xFF1
 11120                           intcon3	equ	0xFF0
 11121                           indf0	equ	0xFEF
 11122                           postinc0	equ	0xFEE
 11123                           plusw0	equ	0xFEB
 11124                           fsr0h	equ	0xFEA
 11125                           fsr0l	equ	0xFE9
 11126                           wreg	equ	0xFE8
 11127                           postinc1	equ	0xFE6
 11128                           postdec1	equ	0xFE5
 11129                           fsr1h	equ	0xFE2
 11130                           fsr1l	equ	0xFE1
 11131                           indf2	equ	0xFDF
 11132                           postinc2	equ	0xFDE
 11133                           postdec2	equ	0xFDD
 11134                           plusw2	equ	0xFDB
 11135                           fsr2h	equ	0xFDA
 11136                           fsr2l	equ	0xFD9
 11137                           status	equ	0xFD8
 11138                           
 11139 ;; *************** function _USBStdFeatureReqHandler *****************
 11140 ;; Defined at:
 11141 ;;		line 2771 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 11142 ;; Parameters:    Size  Location     Type
 11143 ;;		None
 11144 ;; Auto vars:     Size  Location     Type
 11145 ;;  p               2   53[BANK0 ] PTR struct __BDT
 11146 ;;		 -> NULL(0), BDT(48), 
 11147 ;;  pUEP            2   50[BANK0 ] PTR unsigned char 
 11148 ;;		 -> UEP0(1), 
 11149 ;;  current_ep_d    1   52[BANK0 ] struct .
 11150 ;; Return value:  Size  Location     Type
 11151 ;;                  1    wreg      void 
 11152 ;; Registers used:
 11153 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11154 ;; Tracked objects:
 11155 ;;		On entry : 0/0
 11156 ;;		On exit  : 0/0
 11157 ;;		Unchanged: 0/0
 11158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11159 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11160 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11161 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11162 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11163 ;;Total ram usage:        6 bytes
 11164 ;; Hardware stack levels used:    1
 11165 ;; Hardware stack levels required when called:   15
 11166 ;; This function calls:
 11167 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 11168 ;; This function is called by:
 11169 ;;		_USBCheckStdRequest
 11170 ;; This function uses a non-reentrant model
 11171 ;;
 11172                           
 11173                           	psect	text43
 11174  001612                     __ptext43:
 11175                           	opt stack 0
 11176  001612                     _USBStdFeatureReqHandler:
 11177                           	opt stack 8
 11178                           
 11179                           ;usb_device.c: 2773: BDT_ENTRY *p;
 11180                           ;usb_device.c: 2774: EP_STATUS current_ep_data;
 11181                           ;usb_device.c: 2778: unsigned char* pUEP;
 11182                           ;usb_device.c: 2816: if((SetupPkt.bFeature == 1)&&
 11183                           ;usb_device.c: 2817: (SetupPkt.Recipient == (0x00)))
 11184                           
 11185                           ;incstack = 0
 11186  001612  0104               	movlb	4	; () banked
 11187  001614  0532               	decf	50,w,b	;volatile
 11188  001616  A4D8               	btfss	status,2,c
 11189  001618  D011               	goto	l1823
 11190                           
 11191                           ; BSR set to: 4
 11192  00161A  5130               	movf	48,w,b	;volatile
 11193  00161C  0B1F               	andlw	31
 11194  00161E  0900               	iorlw	0
 11195  001620  A4D8               	btfss	status,2,c
 11196  001622  D00C               	goto	l1823
 11197                           
 11198                           ; BSR set to: 4
 11199                           ;usb_device.c: 2818: {
 11200                           ;usb_device.c: 2819: inPipes[0].info.bits.busy = 1;
 11201  001624  0100               	movlb	0	; () banked
 11202  001626  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 11203                           
 11204                           ; BSR set to: 0
 11205                           ;usb_device.c: 2820: if(SetupPkt.bRequest == 3)
 11206  001628  0E03               	movlw	3
 11207  00162A  0104               	movlb	4	; () banked
 11208  00162C  1931               	xorwf	49,w,b	;volatile
 11209  00162E  A4D8               	btfss	status,2,c
 11210  001630  D002               	goto	l1822
 11211                           
 11212                           ; BSR set to: 4
 11213                           ;usb_device.c: 2821: RemoteWakeup = 1;
 11214  001632  0E01               	movlw	1
 11215  001634  D001               	goto	L5
 11216  001636                     l1822:
 11217                           
 11218                           ;usb_device.c: 2822: else
 11219                           ;usb_device.c: 2823: RemoteWakeup = 0;
 11220                           
 11221                           ; BSR set to: 1
 11222  001636  0E00               	movlw	0
 11223  001638                     L5:
 11224  001638  0101               	movlb	1	; () banked
 11225  00163A  6FE3               	movwf	_RemoteWakeup& (0+255),b
 11226  00163C                     l1823:
 11227                           
 11228                           ;usb_device.c: 2824: }
 11229                           ;usb_device.c: 2827: if((SetupPkt.bFeature == 0)&&
 11230                           ;usb_device.c: 2828: (SetupPkt.Recipient == (0x02))&&
 11231                           ;usb_device.c: 2829: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
 11232                           ;usb_device.c: 2830: (USBDeviceState == CONFIGURED_STATE))
 11233                           
 11234                           ; BSR set to: 1
 11235  00163C  0104               	movlb	4	; () banked
 11236  00163E  5132               	movf	50,w,b	;volatile
 11237  001640  A4D8               	btfss	status,2,c
 11238  001642  0012               	return	
 11239                           
 11240                           ; BSR set to: 4
 11241  001644  5130               	movf	48,w,b	;volatile
 11242  001646  0B1F               	andlw	31
 11243  001648  0A02               	xorlw	2
 11244  00164A  A4D8               	btfss	status,2,c
 11245  00164C  0012               	return	
 11246                           
 11247                           ; BSR set to: 4
 11248  00164E  5134               	movf	52,w,b	;volatile
 11249  001650  0B0F               	andlw	15
 11250  001652  0900               	iorlw	0
 11251  001654  B4D8               	btfsc	status,2,c
 11252  001656  0012               	return	
 11253                           
 11254                           ; BSR set to: 4
 11255  001658  5134               	movf	52,w,b	;volatile
 11256  00165A  0B0F               	andlw	15
 11257  00165C  0100               	movlb	0	; () banked
 11258  00165E  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11259  001660  0E03               	movlw	3
 11260  001662  6191               	cpfslt	??_USBStdFeatureReqHandler& (0+255),b
 11261  001664  0012               	return	
 11262                           
 11263                           ; BSR set to: 0
 11264  001666  0E20               	movlw	32
 11265  001668  19CC               	xorwf	_USBDeviceState& (0+255),w,b
 11266  00166A  A4D8               	btfss	status,2,c
 11267  00166C  0012               	return	
 11268                           
 11269                           ; BSR set to: 0
 11270                           ;usb_device.c: 2831: {
 11271                           ;usb_device.c: 2834: inPipes[0].info.bits.busy = 1;
 11272  00166E  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 11273                           
 11274                           ;usb_device.c: 2837: if(SetupPkt.EPDir == 0)
 11275  001670  0104               	movlb	4	; () banked
 11276  001672  BF34               	btfsc	52,7,b	;volatile
 11277  001674  D01C               	goto	l1825
 11278                           
 11279                           ; BSR set to: 4
 11280                           ;usb_device.c: 2838: {
 11281                           ;usb_device.c: 2839: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 11282  001676  5134               	movf	52,w,b	;volatile
 11283  001678  0B0F               	andlw	15
 11284  00167A  0100               	movlb	0	; () banked
 11285  00167C  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11286  00167E  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11287  001680  0D02               	mullw	2
 11288  001682  0E0E               	movlw	low _pBDTEntryOut
 11289  001684  24F3               	addwf	prodl,w,c
 11290  001686  6ED9               	movwf	fsr2l,c
 11291  001688  0E03               	movlw	high _pBDTEntryOut
 11292  00168A  20F4               	addwfc	prodh,w,c
 11293  00168C  6EDA               	movwf	fsr2h,c
 11294  00168E  CFDE F095          	movff	postinc2,USBStdFeatureReqHandler@p
 11295  001692  CFDD F096          	movff	postdec2,USBStdFeatureReqHandler@p+1
 11296                           
 11297                           ;usb_device.c: 2840: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 11298  001696  0104               	movlb	4	; () banked
 11299  001698  5134               	movf	52,w,b	;volatile
 11300  00169A  0B0F               	andlw	15
 11301  00169C  0100               	movlb	0	; () banked
 11302  00169E  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11303  0016A0  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11304  0016A2  0D01               	mullw	1
 11305  0016A4  0ECE               	movlw	low _ep_data_out
 11306  0016A6  24F3               	addwf	prodl,w,c
 11307  0016A8  6ED9               	movwf	fsr2l,c
 11308  0016AA  0E02               	movlw	high _ep_data_out
 11309  0016AC  D01C               	goto	L6
 11310  0016AE                     l1825:
 11311                           
 11312                           ;usb_device.c: 2842: else
 11313                           ;usb_device.c: 2843: {
 11314                           ;usb_device.c: 2844: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 11315                           
 11316                           ; BSR set to: 0
 11317  0016AE  0104               	movlb	4	; () banked
 11318  0016B0  5134               	movf	52,w,b	;volatile
 11319  0016B2  0B0F               	andlw	15
 11320  0016B4  0100               	movlb	0	; () banked
 11321  0016B6  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11322  0016B8  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11323  0016BA  0D02               	mullw	2
 11324  0016BC  0EB6               	movlw	low _pBDTEntryIn
 11325  0016BE  24F3               	addwf	prodl,w,c
 11326  0016C0  6ED9               	movwf	fsr2l,c
 11327  0016C2  0E00               	movlw	high _pBDTEntryIn
 11328  0016C4  20F4               	addwfc	prodh,w,c
 11329  0016C6  6EDA               	movwf	fsr2h,c
 11330  0016C8  CFDE F095          	movff	postinc2,USBStdFeatureReqHandler@p
 11331  0016CC  CFDD F096          	movff	postdec2,USBStdFeatureReqHandler@p+1
 11332                           
 11333                           ;usb_device.c: 2845: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 11334  0016D0  0104               	movlb	4	; () banked
 11335  0016D2  5134               	movf	52,w,b	;volatile
 11336  0016D4  0B0F               	andlw	15
 11337  0016D6  0100               	movlb	0	; () banked
 11338  0016D8  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11339  0016DA  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11340  0016DC  0D01               	mullw	1
 11341  0016DE  0ED1               	movlw	low _ep_data_in
 11342  0016E0  24F3               	addwf	prodl,w,c
 11343  0016E2  6ED9               	movwf	fsr2l,c
 11344  0016E4  0E02               	movlw	high _ep_data_in
 11345  0016E6                     L6:
 11346  0016E6  20F4               	addwfc	prodh,w,c
 11347  0016E8  6EDA               	movwf	fsr2h,c
 11348  0016EA  50DF               	movf	indf2,w,c
 11349  0016EC  6F94               	movwf	USBStdFeatureReqHandler@current_ep_data& (0+255),b
 11350                           
 11351                           ; BSR set to: 0
 11352                           ;usb_device.c: 2846: }
 11353                           ;usb_device.c: 2852: if(current_ep_data.bits.ping_pong_state == 0)
 11354                           
 11355                           ; BSR set to: 0
 11356  0016EE  B194               	btfsc	USBStdFeatureReqHandler@current_ep_data& (0+255),0,b
 11357  0016F0  D002               	goto	l1827
 11358                           
 11359                           ; BSR set to: 0
 11360                           ;usb_device.c: 2853: {
 11361                           ;usb_device.c: 2854: {((uint8_t_VAL*)&p)->Val &= ~0x0004;};
 11362  0016F2  9595               	bcf	USBStdFeatureReqHandler@p& (0+255),2,b
 11363                           
 11364                           ;usb_device.c: 2855: }
 11365  0016F4  D001               	goto	l1828
 11366  0016F6                     l1827:
 11367                           
 11368                           ; BSR set to: 0
 11369                           ;usb_device.c: 2856: else
 11370                           ;usb_device.c: 2857: {
 11371                           ;usb_device.c: 2858: {((uint8_t_VAL*)&p)->Val |= 0x0004;};
 11372                           
 11373                           ; BSR set to: 0
 11374  0016F6  8595               	bsf	USBStdFeatureReqHandler@p& (0+255),2,b
 11375  0016F8                     l1828:
 11376                           
 11377                           ; BSR set to: 0
 11378                           ;usb_device.c: 2859: }
 11379                           ;usb_device.c: 2864: if(SetupPkt.EPDir == 0)
 11380                           
 11381                           ; BSR set to: 0
 11382  0016F8  0104               	movlb	4	; () banked
 11383  0016FA  BF34               	btfsc	52,7,b	;volatile
 11384  0016FC  D00B               	goto	l1829
 11385                           
 11386                           ; BSR set to: 4
 11387                           ;usb_device.c: 2865: {
 11388                           ;usb_device.c: 2866: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 11389  0016FE  5134               	movf	52,w,b	;volatile
 11390  001700  0B0F               	andlw	15
 11391  001702  0100               	movlb	0	; () banked
 11392  001704  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11393  001706  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11394  001708  0D02               	mullw	2
 11395  00170A  0E0E               	movlw	low _pBDTEntryOut
 11396  00170C  24F3               	addwf	prodl,w,c
 11397  00170E  6ED9               	movwf	fsr2l,c
 11398  001710  0E03               	movlw	high _pBDTEntryOut
 11399  001712  D00B               	goto	L7
 11400  001714                     l1829:
 11401                           
 11402                           ;usb_device.c: 2868: else
 11403                           ;usb_device.c: 2869: {
 11404                           ;usb_device.c: 2870: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 11405                           
 11406                           ; BSR set to: 0
 11407  001714  0104               	movlb	4	; () banked
 11408  001716  5134               	movf	52,w,b	;volatile
 11409  001718  0B0F               	andlw	15
 11410  00171A  0100               	movlb	0	; () banked
 11411  00171C  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11412  00171E  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11413  001720  0D02               	mullw	2
 11414  001722  0EB6               	movlw	low _pBDTEntryIn
 11415  001724  24F3               	addwf	prodl,w,c
 11416  001726  6ED9               	movwf	fsr2l,c
 11417  001728  0E00               	movlw	high _pBDTEntryIn
 11418  00172A                     L7:
 11419  00172A  20F4               	addwfc	prodh,w,c
 11420  00172C  6EDA               	movwf	fsr2h,c
 11421  00172E  C095  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 11422  001732  C096  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 11423                           
 11424                           ; BSR set to: 0
 11425                           ;usb_device.c: 2871: }
 11426                           ;usb_device.c: 2874: if(SetupPkt.bRequest == 3)
 11427                           
 11428                           ; BSR set to: 0
 11429  001736  0E03               	movlw	3
 11430  001738  0104               	movlb	4	; () banked
 11431  00173A  1931               	xorwf	49,w,b	;volatile
 11432  00173C  A4D8               	btfss	status,2,c
 11433  00173E  D031               	goto	l1831
 11434                           
 11435                           ; BSR set to: 4
 11436                           ;usb_device.c: 2875: {
 11437                           ;usb_device.c: 2876: if(p->STAT.UOWN == 1)
 11438  001740  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11439  001744  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11440  001748  0100               	movlb	0	; () banked
 11441  00174A  AEDF               	btfss	indf2,7,c
 11442  00174C  D01D               	goto	l1834
 11443                           
 11444                           ; BSR set to: 0
 11445                           ;usb_device.c: 2877: {
 11446                           ;usb_device.c: 2880: if(SetupPkt.EPDir == 0)
 11447  00174E  0104               	movlb	4	; () banked
 11448  001750  BF34               	btfsc	52,7,b	;volatile
 11449  001752  D00B               	goto	l1833
 11450                           
 11451                           ; BSR set to: 4
 11452                           ;usb_device.c: 2881: {
 11453                           ;usb_device.c: 2882: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
 11454  001754  5134               	movf	52,w,b	;volatile
 11455  001756  0B0F               	andlw	15
 11456  001758  0100               	movlb	0	; () banked
 11457  00175A  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11458  00175C  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11459  00175E  0D01               	mullw	1
 11460  001760  0ECE               	movlw	low _ep_data_out
 11461  001762  24F3               	addwf	prodl,w,c
 11462  001764  6ED9               	movwf	fsr2l,c
 11463  001766  0E02               	movlw	high _ep_data_out
 11464  001768  D00B               	goto	L8
 11465  00176A                     l1833:
 11466                           
 11467                           ;usb_device.c: 2884: else
 11468                           ;usb_device.c: 2885: {
 11469                           ;usb_device.c: 2886: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
 11470                           
 11471                           ; BSR set to: 2
 11472  00176A  0104               	movlb	4	; () banked
 11473  00176C  5134               	movf	52,w,b	;volatile
 11474  00176E  0B0F               	andlw	15
 11475  001770  0100               	movlb	0	; () banked
 11476  001772  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11477  001774  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11478  001776  0D01               	mullw	1
 11479  001778  0ED1               	movlw	low _ep_data_in
 11480  00177A  24F3               	addwf	prodl,w,c
 11481  00177C  6ED9               	movwf	fsr2l,c
 11482  00177E  0E02               	movlw	high _ep_data_in
 11483  001780                     L8:
 11484  001780  20F4               	addwfc	prodh,w,c
 11485  001782  6EDA               	movwf	fsr2h,c
 11486  001784  0102               	movlb	2	; () banked
 11487  001786  82DF               	bsf	indf2,1,c
 11488  001788                     l1834:
 11489                           
 11490                           ;usb_device.c: 2887: }
 11491                           ;usb_device.c: 2888: }
 11492                           ;usb_device.c: 2891: p->STAT.Val |= 0x04;
 11493                           
 11494                           ; BSR set to: 2
 11495                           
 11496                           ; BSR set to: 2
 11497  001788  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11498  00178C  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11499  001790  0E00               	movlw	0
 11500  001792  84DB               	bsf	plusw2,2,c
 11501                           
 11502                           ;usb_device.c: 2892: p->STAT.Val |= 0x80;
 11503  001794  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11504  001798  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11505  00179C  0E00               	movlw	0
 11506  00179E  8EDB               	bsf	plusw2,7,c
 11507                           
 11508                           ;usb_device.c: 2893: }
 11509  0017A0  0012               	return	
 11510  0017A2                     l1831:
 11511                           
 11512                           ;usb_device.c: 2894: else
 11513                           ;usb_device.c: 2895: {
 11514                           ;usb_device.c: 2899: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 11515  0017A2  0E04               	movlw	4
 11516  0017A4  0100               	movlb	0	; () banked
 11517  0017A6  1B95               	xorwf	USBStdFeatureReqHandler@p& (0+255),f,b
 11518                           
 11519                           ; BSR set to: 0
 11520                           ;usb_device.c: 2901: if(p->STAT.UOWN == 1)
 11521  0017A8  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11522  0017AC  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11523  0017B0  AEDF               	btfss	indf2,7,c
 11524  0017B2  D01B               	goto	l1836
 11525                           
 11526                           ; BSR set to: 0
 11527                           ;usb_device.c: 2902: {
 11528                           ;usb_device.c: 2905: p->STAT.Val &= (~0x80);
 11529  0017B4  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11530  0017B8  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11531  0017BC  0E7F               	movlw	127
 11532  0017BE  16DF               	andwf	indf2,f,c
 11533                           
 11534                           ; BSR set to: 0
 11535                           ;usb_device.c: 2906: p->STAT.Val |= 0x40;
 11536  0017C0  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11537  0017C4  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11538  0017C8  0E00               	movlw	0
 11539  0017CA  8CDB               	bsf	plusw2,6,c
 11540                           
 11541                           ; BSR set to: 0
 11542                           ;usb_device.c: 2907: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 11543  0017CC  0E00               	movlw	0
 11544  0017CE  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
 11545  0017D0  0E05               	movlw	5
 11546  0017D2  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
 11547  0017D4  C095  F08B         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 11548  0017D8  C096  F08C         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 11549  0017DC  0E00               	movlw	0
 11550  0017DE  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
 11551  0017E0  0E02               	movlw	2
 11552  0017E2  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
 11553  0017E4  ECC9  F02A         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 11554                           
 11555                           ;usb_device.c: 2908: }
 11556  0017E8  D006               	goto	l1837
 11557  0017EA                     l1836:
 11558                           
 11559                           ;usb_device.c: 2909: else
 11560                           ;usb_device.c: 2910: {
 11561                           ;usb_device.c: 2912: p->STAT.Val |= 0x40;
 11562  0017EA  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11563  0017EE  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11564  0017F2  0E00               	movlw	0
 11565  0017F4  8CDB               	bsf	plusw2,6,c
 11566  0017F6                     l1837:
 11567                           
 11568                           ;usb_device.c: 2913: }
 11569                           ;usb_device.c: 2917: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 11570  0017F6  0E04               	movlw	4
 11571  0017F8  0100               	movlb	0	; () banked
 11572  0017FA  1B95               	xorwf	USBStdFeatureReqHandler@p& (0+255),f,b
 11573                           
 11574                           ; BSR set to: 0
 11575                           ;usb_device.c: 2923: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 11576  0017FC  B394               	btfsc	USBStdFeatureReqHandler@current_ep_data& (0+255),1,b
 11577  0017FE  D006               	goto	u11790
 11578                           
 11579                           ; BSR set to: 0
 11580  001800  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11581  001804  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11582  001808  AEDF               	btfss	indf2,7,c
 11583  00180A  D033               	goto	l1838
 11584  00180C                     u11790:
 11585                           
 11586                           ; BSR set to: 0
 11587                           ;usb_device.c: 2924: {
 11588                           ;usb_device.c: 2925: if(SetupPkt.EPDir == 0)
 11589  00180C  0104               	movlb	4	; () banked
 11590  00180E  BF34               	btfsc	52,7,b	;volatile
 11591  001810  D00B               	goto	l1841
 11592                           
 11593                           ; BSR set to: 4
 11594                           ;usb_device.c: 2926: {
 11595                           ;usb_device.c: 2927: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
 11596  001812  5134               	movf	52,w,b	;volatile
 11597  001814  0B0F               	andlw	15
 11598  001816  0100               	movlb	0	; () banked
 11599  001818  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11600  00181A  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11601  00181C  0D01               	mullw	1
 11602  00181E  0ECE               	movlw	low _ep_data_out
 11603  001820  24F3               	addwf	prodl,w,c
 11604  001822  6ED9               	movwf	fsr2l,c
 11605  001824  0E02               	movlw	high _ep_data_out
 11606  001826  D00B               	goto	L9
 11607  001828                     l1841:
 11608                           
 11609                           ;usb_device.c: 2929: else
 11610                           ;usb_device.c: 2930: {
 11611                           ;usb_device.c: 2931: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
 11612                           
 11613                           ; BSR set to: 2
 11614  001828  0104               	movlb	4	; () banked
 11615  00182A  5134               	movf	52,w,b	;volatile
 11616  00182C  0B0F               	andlw	15
 11617  00182E  0100               	movlb	0	; () banked
 11618  001830  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11619  001832  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11620  001834  0D01               	mullw	1
 11621  001836  0ED1               	movlw	low _ep_data_in
 11622  001838  24F3               	addwf	prodl,w,c
 11623  00183A  6ED9               	movwf	fsr2l,c
 11624  00183C  0E02               	movlw	high _ep_data_in
 11625  00183E                     L9:
 11626  00183E  20F4               	addwfc	prodh,w,c
 11627  001840  6EDA               	movwf	fsr2h,c
 11628  001842  0102               	movlb	2	; () banked
 11629  001844  92DF               	bcf	indf2,1,c
 11630                           
 11631                           ; BSR set to: 2
 11632                           ;usb_device.c: 2932: }
 11633                           ;usb_device.c: 2934: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 11634                           
 11635                           ; BSR set to: 2
 11636  001846  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11637  00184A  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11638  00184E  0E3B               	movlw	59
 11639  001850  16DF               	andwf	indf2,f,c
 11640                           
 11641                           ; BSR set to: 2
 11642                           ;usb_device.c: 2937: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 11643  001852  0E00               	movlw	0
 11644  001854  0100               	movlb	0	; () banked
 11645  001856  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
 11646  001858  0E05               	movlw	5
 11647  00185A  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
 11648  00185C  C095  F08B         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 11649  001860  C096  F08C         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 11650  001864  0E00               	movlw	0
 11651  001866  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
 11652  001868  0E02               	movlw	2
 11653  00186A  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
 11654  00186C  ECC9  F02A         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 11655                           
 11656                           ;usb_device.c: 2938: }
 11657  001870  D006               	goto	l1843
 11658  001872                     l1838:
 11659                           
 11660                           ;usb_device.c: 2939: else
 11661                           ;usb_device.c: 2940: {
 11662                           ;usb_device.c: 2942: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 11663  001872  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11664  001876  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11665  00187A  0E3B               	movlw	59
 11666  00187C  16DF               	andwf	indf2,f,c
 11667  00187E                     l1843:
 11668                           
 11669                           ;usb_device.c: 2943: }
 11670                           ;usb_device.c: 2990: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
 11671  00187E  0104               	movlb	4	; () banked
 11672  001880  5134               	movf	52,w,b	;volatile
 11673  001882  0B0F               	andlw	15
 11674  001884  0100               	movlb	0	; () banked
 11675  001886  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11676  001888  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11677  00188A  0D01               	mullw	1
 11678  00188C  0E26               	movlw	38
 11679  00188E  24F3               	addwf	prodl,w,c
 11680  001890  6F92               	movwf	USBStdFeatureReqHandler@pUEP& (0+255),b
 11681  001892  0E0F               	movlw	15
 11682  001894  20F4               	addwfc	prodh,w,c
 11683  001896  6F93               	movwf	(USBStdFeatureReqHandler@pUEP+1)& (0+255),b
 11684                           
 11685                           ; BSR set to: 0
 11686                           ;usb_device.c: 2994: *pUEP &= ~0x0001;
 11687  001898  C092  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 11688  00189C  C093  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 11689  0018A0  0EFE               	movlw	254
 11690  0018A2  16DF               	andwf	indf2,f,c
 11691                           
 11692                           ; BSR set to: 0
 11693  0018A4  0012               	return	
 11694  0018A6                     __end_of_USBStdFeatureReqHandler:
 11695                           	opt stack 0
 11696                           tosu	equ	0xFFF
 11697                           tosh	equ	0xFFE
 11698                           tosl	equ	0xFFD
 11699                           pclath	equ	0xFFA
 11700                           tblptru	equ	0xFF8
 11701                           tblptrh	equ	0xFF7
 11702                           tblptrl	equ	0xFF6
 11703                           tablat	equ	0xFF5
 11704                           prodh	equ	0xFF4
 11705                           prodl	equ	0xFF3
 11706                           intcon	equ	0xFF2
 11707                           intcon2	equ	0xFF1
 11708                           intcon3	equ	0xFF0
 11709                           indf0	equ	0xFEF
 11710                           postinc0	equ	0xFEE
 11711                           plusw0	equ	0xFEB
 11712                           fsr0h	equ	0xFEA
 11713                           fsr0l	equ	0xFE9
 11714                           wreg	equ	0xFE8
 11715                           postinc1	equ	0xFE6
 11716                           postdec1	equ	0xFE5
 11717                           fsr1h	equ	0xFE2
 11718                           fsr1l	equ	0xFE1
 11719                           indf2	equ	0xFDF
 11720                           postinc2	equ	0xFDE
 11721                           postdec2	equ	0xFDD
 11722                           plusw2	equ	0xFDB
 11723                           fsr2h	equ	0xFDA
 11724                           fsr2l	equ	0xFD9
 11725                           status	equ	0xFD8
 11726                           
 11727 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 11728 ;; Defined at:
 11729 ;;		line 104 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_mgr.c"
 11730 ;; Parameters:    Size  Location     Type
 11731 ;;  event           2   41[BANK0 ] enum E8362
 11732 ;;  pdata           2   43[BANK0 ] PTR void 
 11733 ;;		 -> USTATcopy(1), USBActiveConfiguration(1), NULL(0), BDT(48), 
 11734 ;;  size            2   45[BANK0 ] unsigned int 
 11735 ;; Auto vars:     Size  Location     Type
 11736 ;;		None
 11737 ;; Return value:  Size  Location     Type
 11738 ;;                  1    wreg      unsigned char 
 11739 ;; Registers used:
 11740 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11741 ;; Tracked objects:
 11742 ;;		On entry : 0/0
 11743 ;;		On exit  : 0/0
 11744 ;;		Unchanged: 0/0
 11745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11746 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11747 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11748 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11749 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11750 ;;Total ram usage:        8 bytes
 11751 ;; Hardware stack levels used:    1
 11752 ;; Hardware stack levels required when called:   14
 11753 ;; This function calls:
 11754 ;;		_CDCInitEP
 11755 ;;		_USBCheckCDCRequest
 11756 ;; This function is called by:
 11757 ;;		_USBDeviceTasks
 11758 ;;		_USBStdSetCfgHandler
 11759 ;;		_USBSuspend
 11760 ;;		_USBWakeFromSuspend
 11761 ;;		_USBCtrlTrfSetupHandler
 11762 ;;		_USBCheckStdRequest
 11763 ;;		_USBStdFeatureReqHandler
 11764 ;; This function uses a non-reentrant model
 11765 ;;
 11766                           
 11767                           	psect	text44
 11768  005592                     __ptext44:
 11769                           	opt stack 0
 11770  005592                     _USER_USB_CALLBACK_EVENT_HANDLER:
 11771                           	opt stack 12
 11772                           
 11773                           ;usb_device_mgr.c: 106: switch( (int) event )
 11774                           
 11775                           ;incstack = 0
 11776  005592  D006               	goto	l1997
 11777  005594                     
 11778                           ;usb_device_mgr.c: 134: CDCInitEP();
 11779  005594  EC2B  F029         	call	_CDCInitEP	;wreg free
 11780                           
 11781                           ;usb_device_mgr.c: 142: break;
 11782                           
 11783                           ;usb_device_mgr.c: 141: case EVENT_SET_DESCRIPTOR:
 11784                           
 11785                           ;usb_device_mgr.c: 139: break;
 11786  005598  0012               	return	
 11787  00559A                     
 11788                           ;usb_device_mgr.c: 148: USBCheckCDCRequest();
 11789  00559A  ECAC  F021         	call	_USBCheckCDCRequest	;wreg free
 11790                           
 11791                           ;usb_device_mgr.c: 163: }
 11792                           
 11793                           ;usb_device_mgr.c: 162: break;
 11794                           
 11795                           ;usb_device_mgr.c: 161: default:
 11796                           
 11797                           ;usb_device_mgr.c: 159: break;
 11798                           
 11799                           ;usb_device_mgr.c: 158: case EVENT_TRANSFER_TERMINATED:
 11800                           
 11801                           ;usb_device_mgr.c: 156: break;
 11802                           
 11803                           ;usb_device_mgr.c: 155: case EVENT_BUS_ERROR:
 11804                           
 11805                           ;usb_device_mgr.c: 153: break;
 11806  00559E  0012               	return	
 11807  0055A0                     l1997:
 11808  0055A0  C089  F08F         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 11809  0055A4  C08A  F090         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 11810                           
 11811                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 11812                           ; Switch size 1, requested type "space"
 11813                           ; Number of cases is 2, Range of values is 0 to 127
 11814                           ; switch strategies available:
 11815                           ; Name         Instructions Cycles
 11816                           ; simple_byte            7     4 (average)
 11817                           ;	Chosen strategy is simple_byte
 11818  0055A8  0100               	movlb	0	; () banked
 11819  0055AA  5190               	movf	(??_USER_USB_CALLBACK_EVENT_HANDLER+1)& (0+255),w,b
 11820  0055AC  0A00               	xorlw	0	; case 0
 11821  0055AE  B4D8               	btfsc	status,2,c
 11822  0055B0  D004               	goto	l16450
 11823  0055B2  0A7F               	xorlw	127	; case 127
 11824  0055B4  A4D8               	btfss	status,2,c
 11825  0055B6  0012               	return	
 11826  0055B8  D018               	goto	l16452
 11827  0055BA                     l16450:
 11828                           
 11829                           ; BSR set to: 0
 11830                           ; Switch size 1, requested type "space"
 11831                           ; Number of cases is 8, Range of values is 1 to 117
 11832                           ; switch strategies available:
 11833                           ; Name         Instructions Cycles
 11834                           ; simple_byte           25    13 (average)
 11835                           ;	Chosen strategy is simple_byte
 11836  0055BA  518F               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER& (0+255),w,b
 11837  0055BC  0A01               	xorlw	1	; case 1
 11838  0055BE  B4D8               	btfsc	status,2,c
 11839  0055C0  D7E9               	goto	l2003
 11840  0055C2  0A03               	xorlw	3	; case 2
 11841  0055C4  B4D8               	btfsc	status,2,c
 11842  0055C6  0012               	return	
 11843  0055C8  0A01               	xorlw	1	; case 3
 11844  0055CA  B4D8               	btfsc	status,2,c
 11845  0055CC  D7E6               	goto	l2005
 11846  0055CE  0A06               	xorlw	6	; case 5
 11847  0055D0  B4D8               	btfsc	status,2,c
 11848  0055D2  0012               	return	
 11849  0055D4  0A77               	xorlw	119	; case 114
 11850  0055D6  B4D8               	btfsc	status,2,c
 11851  0055D8  0012               	return	
 11852  0055DA  0A01               	xorlw	1	; case 115
 11853  0055DC  B4D8               	btfsc	status,2,c
 11854  0055DE  0012               	return	
 11855  0055E0  0A07               	xorlw	7	; case 116
 11856  0055E2  B4D8               	btfsc	status,2,c
 11857  0055E4  0012               	return	
 11858  0055E6  0A01               	xorlw	1	; case 117
 11859  0055E8  0012               	return	
 11860  0055EA                     l16452:
 11861                           
 11862                           ; BSR set to: 0
 11863                           ; Switch size 1, requested type "space"
 11864                           ; Number of cases is 1, Range of values is 255 to 255
 11865                           ; switch strategies available:
 11866                           ; Name         Instructions Cycles
 11867                           ; simple_byte            4     3 (average)
 11868                           ;	Chosen strategy is simple_byte
 11869  0055EA  518F               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER& (0+255),w,b
 11870  0055EC  0AFF               	xorlw	255	; case 255
 11871  0055EE  0012               	return	
 11872  0055F0                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 11873                           	opt stack 0
 11874                           tosu	equ	0xFFF
 11875                           tosh	equ	0xFFE
 11876                           tosl	equ	0xFFD
 11877                           pclath	equ	0xFFA
 11878                           tblptru	equ	0xFF8
 11879                           tblptrh	equ	0xFF7
 11880                           tblptrl	equ	0xFF6
 11881                           tablat	equ	0xFF5
 11882                           prodh	equ	0xFF4
 11883                           prodl	equ	0xFF3
 11884                           intcon	equ	0xFF2
 11885                           intcon2	equ	0xFF1
 11886                           intcon3	equ	0xFF0
 11887                           indf0	equ	0xFEF
 11888                           postinc0	equ	0xFEE
 11889                           plusw0	equ	0xFEB
 11890                           fsr0h	equ	0xFEA
 11891                           fsr0l	equ	0xFE9
 11892                           wreg	equ	0xFE8
 11893                           postinc1	equ	0xFE6
 11894                           postdec1	equ	0xFE5
 11895                           fsr1h	equ	0xFE2
 11896                           fsr1l	equ	0xFE1
 11897                           indf2	equ	0xFDF
 11898                           postinc2	equ	0xFDE
 11899                           postdec2	equ	0xFDD
 11900                           plusw2	equ	0xFDB
 11901                           fsr2h	equ	0xFDA
 11902                           fsr2l	equ	0xFD9
 11903                           status	equ	0xFD8
 11904                           
 11905 ;; *************** function _USBCheckCDCRequest *****************
 11906 ;; Defined at:
 11907 ;;		line 150 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 11908 ;; Parameters:    Size  Location     Type
 11909 ;;		None
 11910 ;; Auto vars:     Size  Location     Type
 11911 ;;		None
 11912 ;; Return value:  Size  Location     Type
 11913 ;;                  1    wreg      void 
 11914 ;; Registers used:
 11915 ;;		wreg, status,2, status,0
 11916 ;; Tracked objects:
 11917 ;;		On entry : 0/0
 11918 ;;		On exit  : 0/0
 11919 ;;		Unchanged: 0/0
 11920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11921 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11922 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11924 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11925 ;;Total ram usage:        0 bytes
 11926 ;; Hardware stack levels used:    1
 11927 ;; Hardware stack levels required when called:   11
 11928 ;; This function calls:
 11929 ;;		Nothing
 11930 ;; This function is called by:
 11931 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 11932 ;; This function uses a non-reentrant model
 11933 ;;
 11934                           
 11935                           	psect	text45
 11936  004358                     __ptext45:
 11937                           	opt stack 0
 11938  004358                     _USBCheckCDCRequest:
 11939                           	opt stack 14
 11940                           
 11941                           ;usb_device_cdc.c: 155: if(SetupPkt.Recipient != (0x01)) return;
 11942                           
 11943                           ;incstack = 0
 11944  004358  0104               	movlb	4	; () banked
 11945  00435A  5130               	movf	48,w,b	;volatile
 11946  00435C  0B1F               	andlw	31
 11947  00435E  06E8               	decf	wreg,f,c
 11948  004360  A4D8               	btfss	status,2,c
 11949  004362  0012               	return	
 11950                           
 11951                           ; BSR set to: 4
 11952                           ;usb_device_cdc.c: 160: if(SetupPkt.RequestType != (0x20>>5)) return;
 11953                           
 11954                           ; BSR set to: 4
 11955                           
 11956                           ; BSR set to: 4
 11957  004364  3930               	swapf	48,w,b	;volatile
 11958  004366  32E8               	rrcf	wreg,f,c
 11959  004368  0B03               	andlw	3
 11960  00436A  06E8               	decf	wreg,f,c
 11961  00436C  A4D8               	btfss	status,2,c
 11962  00436E  0012               	return	
 11963                           
 11964                           ; BSR set to: 4
 11965                           ;usb_device_cdc.c: 166: if((SetupPkt.bIntfID != 0x0)&&
 11966                           ;usb_device_cdc.c: 167: (SetupPkt.bIntfID != 0x01)) return;
 11967                           
 11968                           ; BSR set to: 4
 11969                           
 11970                           ; BSR set to: 4
 11971  004370  5134               	movf	52,w,b	;volatile
 11972  004372  B4D8               	btfsc	status,2,c
 11973  004374  D037               	goto	l1899
 11974                           
 11975                           ; BSR set to: 4
 11976  004376  0534               	decf	52,w,b	;volatile
 11977  004378  A4D8               	btfss	status,2,c
 11978  00437A  0012               	return	
 11979  00437C  D033               	goto	l1899
 11980  00437E                     
 11981                           ; BSR set to: 4
 11982                           ;usb_device_cdc.c: 174: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 11983                           
 11984                           ; BSR set to: 4
 11985  00437E  0E6D               	movlw	low _dummy_encapsulated_cmd_response
 11986  004380  0100               	movlb	0	; () banked
 11987  004382  6FB0               	movwf	_inPipes& (0+255),b
 11988  004384  0E03               	movlw	high _dummy_encapsulated_cmd_response
 11989  004386  6FB1               	movwf	(_inPipes+1)& (0+255),b
 11990                           
 11991                           ; BSR set to: 0
 11992                           ;usb_device_cdc.c: 175: inPipes[0].wCount.Val = 0x08;
 11993  004388  0E00               	movlw	0
 11994  00438A  6FB5               	movwf	(_inPipes+5)& (0+255),b
 11995  00438C  0E08               	movlw	8
 11996  00438E  6FB4               	movwf	(_inPipes+4)& (0+255),b
 11997                           
 11998                           ; BSR set to: 0
 11999                           ;usb_device_cdc.c: 176: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 12000  004390  81B3               	bsf	(_inPipes+3)& (0+255),0,b
 12001                           
 12002                           ; BSR set to: 0
 12003                           ;usb_device_cdc.c: 177: inPipes[0].info.bits.busy = 1;
 12004  004392  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 12005                           
 12006                           ;usb_device_cdc.c: 178: break;
 12007  004394  0012               	return	
 12008  004396                     
 12009                           ;usb_device_cdc.c: 181: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 12010                           
 12011                           ; BSR set to: 0
 12012  004396  0E6D               	movlw	low _dummy_encapsulated_cmd_response
 12013  004398  0100               	movlb	0	; () banked
 12014  00439A  6FB0               	movwf	_inPipes& (0+255),b
 12015  00439C  0E03               	movlw	high _dummy_encapsulated_cmd_response
 12016  00439E  6FB1               	movwf	(_inPipes+1)& (0+255),b
 12017                           
 12018                           ; BSR set to: 0
 12019                           ;usb_device_cdc.c: 182: inPipes[0].info.bits.busy = 1;
 12020  0043A0  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 12021                           
 12022                           ;usb_device_cdc.c: 183: break;
 12023  0043A2  0012               	return	
 12024  0043A4                     l1903:
 12025                           
 12026                           ; BSR set to: 4
 12027                           ;usb_device_cdc.c: 188: outPipes[0].wCount.Val = SetupPkt.wLength;
 12028  0043A4  C436 F1CD          	movff	1078,_outPipes+4	;volatile
 12029  0043A8  C437 F1CE          	movff	1079,_outPipes+5	;volatile
 12030                           
 12031                           ; BSR set to: 4
 12032                           ;usb_device_cdc.c: 189: outPipes[0].pDst.bRam = (uint8_t*)&line_coding._byte[0];
 12033  0043AC  0E75               	movlw	low _line_coding
 12034  0043AE  0101               	movlb	1	; () banked
 12035  0043B0  6FC9               	movwf	_outPipes& (0+255),b
 12036  0043B2  0E03               	movlw	high _line_coding
 12037  0043B4  6FCA               	movwf	(_outPipes+1)& (0+255),b
 12038                           
 12039                           ;usb_device_cdc.c: 190: outPipes[0].pFunc = (0);
 12040  0043B6  0E00               	movlw	0
 12041  0043B8  6FCF               	movwf	(_outPipes+6)& (0+255),b
 12042  0043BA  0E00               	movlw	0
 12043  0043BC  6FD0               	movwf	(_outPipes+7)& (0+255),b
 12044                           
 12045                           ; BSR set to: 1
 12046                           ;usb_device_cdc.c: 191: outPipes[0].info.bits.busy = 1;
 12047  0043BE  8FCC               	bsf	(_outPipes+3)& (0+255),7,b
 12048                           
 12049                           ;usb_device_cdc.c: 192: break;
 12050  0043C0  0012               	return	
 12051  0043C2                     
 12052                           ;usb_device_cdc.c: 195: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 12053                           
 12054                           ; BSR set to: 1
 12055  0043C2  0E75               	movlw	low _line_coding
 12056  0043C4  0100               	movlb	0	; () banked
 12057  0043C6  6FB0               	movwf	_inPipes& (0+255),b
 12058  0043C8  0E03               	movlw	high _line_coding
 12059  0043CA  6FB1               	movwf	(_inPipes+1)& (0+255),b
 12060                           
 12061                           ; BSR set to: 0
 12062  0043CC  0E00               	movlw	0
 12063  0043CE  6FB5               	movwf	(_inPipes+5)& (0+255),b
 12064  0043D0  0E07               	movlw	7
 12065  0043D2  6FB4               	movwf	(_inPipes+4)& (0+255),b
 12066                           
 12067                           ; BSR set to: 0
 12068  0043D4  0EC1               	movlw	193
 12069  0043D6  6FB3               	movwf	(_inPipes+3)& (0+255),b
 12070                           
 12071                           ;usb_device_cdc.c: 199: break;
 12072  0043D8  0012               	return	
 12073  0043DA                     l1905:
 12074                           
 12075                           ; BSR set to: 4
 12076                           ;usb_device_cdc.c: 202: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
 12077  0043DA  C432 F1DE          	movff	1074,_control_signal_bitmap	;volatile
 12078                           
 12079                           ;usb_device_cdc.c: 234: inPipes[0].info.bits.busy = 1;
 12080  0043DE  0100               	movlb	0	; () banked
 12081  0043E0  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 12082                           
 12083                           ; BSR set to: 0
 12084                           ;usb_device_cdc.c: 261: }
 12085                           
 12086                           ; BSR set to: 0
 12087                           ;usb_device_cdc.c: 260: break;
 12088                           
 12089                           ;usb_device_cdc.c: 259: default:
 12090                           
 12091                           ;usb_device_cdc.c: 235: break;
 12092  0043E2  0012               	return	
 12093  0043E4                     l1899:
 12094                           
 12095                           ; BSR set to: 0
 12096  0043E4  0104               	movlb	4	; () banked
 12097  0043E6  5131               	movf	49,w,b	;volatile
 12098                           
 12099                           ; Switch size 1, requested type "space"
 12100                           ; Number of cases is 5, Range of values is 0 to 34
 12101                           ; switch strategies available:
 12102                           ; Name         Instructions Cycles
 12103                           ; simple_byte           16     9 (average)
 12104                           ;	Chosen strategy is simple_byte
 12105  0043E8  0A00               	xorlw	0	; case 0
 12106  0043EA  B4D8               	btfsc	status,2,c
 12107  0043EC  D7C8               	goto	l1900
 12108  0043EE  0A01               	xorlw	1	; case 1
 12109  0043F0  B4D8               	btfsc	status,2,c
 12110  0043F2  D7D1               	goto	l1902
 12111  0043F4  0A21               	xorlw	33	; case 32
 12112  0043F6  B4D8               	btfsc	status,2,c
 12113  0043F8  D7D5               	goto	l1903
 12114  0043FA  0A01               	xorlw	1	; case 33
 12115  0043FC  B4D8               	btfsc	status,2,c
 12116  0043FE  D7E1               	goto	l1904
 12117  004400  0A03               	xorlw	3	; case 34
 12118  004402  A4D8               	btfss	status,2,c
 12119  004404  0012               	return	
 12120  004406  D7E9               	goto	l1905
 12121  004408                     __end_of_USBCheckCDCRequest:
 12122                           	opt stack 0
 12123                           tosu	equ	0xFFF
 12124                           tosh	equ	0xFFE
 12125                           tosl	equ	0xFFD
 12126                           pclath	equ	0xFFA
 12127                           tblptru	equ	0xFF8
 12128                           tblptrh	equ	0xFF7
 12129                           tblptrl	equ	0xFF6
 12130                           tablat	equ	0xFF5
 12131                           prodh	equ	0xFF4
 12132                           prodl	equ	0xFF3
 12133                           intcon	equ	0xFF2
 12134                           intcon2	equ	0xFF1
 12135                           intcon3	equ	0xFF0
 12136                           indf0	equ	0xFEF
 12137                           postinc0	equ	0xFEE
 12138                           plusw0	equ	0xFEB
 12139                           fsr0h	equ	0xFEA
 12140                           fsr0l	equ	0xFE9
 12141                           wreg	equ	0xFE8
 12142                           postinc1	equ	0xFE6
 12143                           postdec1	equ	0xFE5
 12144                           fsr1h	equ	0xFE2
 12145                           fsr1l	equ	0xFE1
 12146                           indf2	equ	0xFDF
 12147                           postinc2	equ	0xFDE
 12148                           postdec2	equ	0xFDD
 12149                           plusw2	equ	0xFDB
 12150                           fsr2h	equ	0xFDA
 12151                           fsr2l	equ	0xFD9
 12152                           status	equ	0xFD8
 12153                           
 12154 ;; *************** function _CDCInitEP *****************
 12155 ;; Defined at:
 12156 ;;		line 297 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 12157 ;; Parameters:    Size  Location     Type
 12158 ;;		None
 12159 ;; Auto vars:     Size  Location     Type
 12160 ;;		None
 12161 ;; Return value:  Size  Location     Type
 12162 ;;                  1    wreg      void 
 12163 ;; Registers used:
 12164 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12165 ;; Tracked objects:
 12166 ;;		On entry : 0/0
 12167 ;;		On exit  : 0/0
 12168 ;;		Unchanged: 0/0
 12169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12170 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12171 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12173 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12174 ;;Total ram usage:        0 bytes
 12175 ;; Hardware stack levels used:    1
 12176 ;; Hardware stack levels required when called:   13
 12177 ;; This function calls:
 12178 ;;		_USBEnableEndpoint
 12179 ;;		_USBTransferOnePacket
 12180 ;; This function is called by:
 12181 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 12182 ;; This function uses a non-reentrant model
 12183 ;;
 12184                           
 12185                           	psect	text46
 12186  005256                     __ptext46:
 12187                           	opt stack 0
 12188  005256                     _CDCInitEP:
 12189                           	opt stack 12
 12190                           
 12191                           ;usb_device_cdc.c: 300: line_coding.dwDTERate = 9600;
 12192                           
 12193                           ;incstack = 0
 12194  005256  0E80               	movlw	128
 12195  005258  0103               	movlb	3	; () banked
 12196  00525A  6F75               	movwf	_line_coding& (0+255),b
 12197  00525C  0E25               	movlw	37
 12198  00525E  6F76               	movwf	(_line_coding+1)& (0+255),b
 12199  005260  0E00               	movlw	0
 12200  005262  6F77               	movwf	(_line_coding+2)& (0+255),b
 12201  005264  0E00               	movlw	0
 12202  005266  6F78               	movwf	(_line_coding+3)& (0+255),b
 12203                           
 12204                           ;usb_device_cdc.c: 301: line_coding.bCharFormat = 0x00;
 12205  005268  0E00               	movlw	0
 12206  00526A  6F79               	movwf	(_line_coding+4)& (0+255),b
 12207                           
 12208                           ;usb_device_cdc.c: 302: line_coding.bParityType = 0x00;
 12209  00526C  0E00               	movlw	0
 12210  00526E  6F7A               	movwf	(_line_coding+5)& (0+255),b
 12211                           
 12212                           ;usb_device_cdc.c: 303: line_coding.bDataBits = 0x08;
 12213  005270  0E08               	movlw	8
 12214  005272  6F7B               	movwf	(_line_coding+6)& (0+255),b
 12215                           
 12216                           ;usb_device_cdc.c: 305: cdc_rx_len = 0;
 12217  005274  0E00               	movlw	0
 12218  005276  0100               	movlb	0	; () banked
 12219  005278  6FC6               	movwf	_cdc_rx_len& (0+255),b
 12220                           
 12221                           ; BSR set to: 0
 12222                           ;usb_device_cdc.c: 318: USBEnableEndpoint(1,0x02|0x10|0x08);
 12223  00527A  0E1A               	movlw	26
 12224  00527C  6F85               	movwf	USBEnableEndpoint@options& (0+255),b
 12225  00527E  0E01               	movlw	1
 12226  005280  EC14  F02F         	call	_USBEnableEndpoint
 12227                           
 12228                           ;usb_device_cdc.c: 319: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
 12229  005284  0E1E               	movlw	30
 12230  005286  0100               	movlb	0	; () banked
 12231  005288  6F85               	movwf	USBEnableEndpoint@options& (0+255),b
 12232  00528A  0E02               	movlw	2
 12233  00528C  EC14  F02F         	call	_USBEnableEndpoint
 12234                           
 12235                           ;usb_device_cdc.c: 321: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 12236  005290  0E00               	movlw	0
 12237  005292  0100               	movlb	0	; () banked
 12238  005294  6F7D               	movwf	USBTransferOnePacket@dir& (0+255),b
 12239  005296  0E00               	movlw	low _cdc_data_rx
 12240  005298  6F7E               	movwf	USBTransferOnePacket@data& (0+255),b
 12241  00529A  0E05               	movlw	high _cdc_data_rx
 12242  00529C  6F7F               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 12243  00529E  0E40               	movlw	64
 12244  0052A0  6F80               	movwf	USBTransferOnePacket@len& (0+255),b
 12245  0052A2  0E02               	movlw	2
 12246  0052A4  ECF4  F020         	call	_USBTransferOnePacket
 12247  0052A8  C07D  F0BC         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
 12248  0052AC  C07E  F0BD         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
 12249                           
 12250                           ;usb_device_cdc.c: 322: CDCDataInHandle = (0);
 12251  0052B0  0E00               	movlw	0
 12252  0052B2  0101               	movlb	1	; () banked
 12253  0052B4  6FD1               	movwf	_CDCDataInHandle& (0+255),b
 12254  0052B6  0E00               	movlw	0
 12255  0052B8  6FD2               	movwf	(_CDCDataInHandle+1)& (0+255),b
 12256                           
 12257                           ; BSR set to: 1
 12258                           ;usb_device_cdc.c: 349: cdc_trf_state = 0;
 12259  0052BA  0E00               	movlw	0
 12260  0052BC  0100               	movlb	0	; () banked
 12261  0052BE  6FC5               	movwf	_cdc_trf_state& (0+255),b
 12262                           
 12263                           ; BSR set to: 0
 12264  0052C0  0012               	return		;funcret
 12265  0052C2                     __end_of_CDCInitEP:
 12266                           	opt stack 0
 12267                           tosu	equ	0xFFF
 12268                           tosh	equ	0xFFE
 12269                           tosl	equ	0xFFD
 12270                           pclath	equ	0xFFA
 12271                           tblptru	equ	0xFF8
 12272                           tblptrh	equ	0xFF7
 12273                           tblptrl	equ	0xFF6
 12274                           tablat	equ	0xFF5
 12275                           prodh	equ	0xFF4
 12276                           prodl	equ	0xFF3
 12277                           intcon	equ	0xFF2
 12278                           intcon2	equ	0xFF1
 12279                           intcon3	equ	0xFF0
 12280                           indf0	equ	0xFEF
 12281                           postinc0	equ	0xFEE
 12282                           plusw0	equ	0xFEB
 12283                           fsr0h	equ	0xFEA
 12284                           fsr0l	equ	0xFE9
 12285                           wreg	equ	0xFE8
 12286                           postinc1	equ	0xFE6
 12287                           postdec1	equ	0xFE5
 12288                           fsr1h	equ	0xFE2
 12289                           fsr1l	equ	0xFE1
 12290                           indf2	equ	0xFDF
 12291                           postinc2	equ	0xFDE
 12292                           postdec2	equ	0xFDD
 12293                           plusw2	equ	0xFDB
 12294                           fsr2h	equ	0xFDA
 12295                           fsr2l	equ	0xFD9
 12296                           status	equ	0xFD8
 12297                           
 12298 ;; *************** function _USBEnableEndpoint *****************
 12299 ;; Defined at:
 12300 ;;		line 896 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 12301 ;; Parameters:    Size  Location     Type
 12302 ;;  ep              1    wreg     unsigned char 
 12303 ;;  options         1   37[BANK0 ] unsigned char 
 12304 ;; Auto vars:     Size  Location     Type
 12305 ;;  ep              1   40[BANK0 ] unsigned char 
 12306 ;;  p               2   38[BANK0 ] PTR unsigned char 
 12307 ;;		 -> UEP0(1), 
 12308 ;; Return value:  Size  Location     Type
 12309 ;;                  1    wreg      void 
 12310 ;; Registers used:
 12311 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12312 ;; Tracked objects:
 12313 ;;		On entry : 0/0
 12314 ;;		On exit  : 0/0
 12315 ;;		Unchanged: 0/0
 12316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12317 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12318 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12320 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12321 ;;Total ram usage:        4 bytes
 12322 ;; Hardware stack levels used:    1
 12323 ;; Hardware stack levels required when called:   12
 12324 ;; This function calls:
 12325 ;;		_USBConfigureEndpoint
 12326 ;; This function is called by:
 12327 ;;		_CDCInitEP
 12328 ;; This function uses a non-reentrant model
 12329 ;;
 12330                           
 12331                           	psect	text47
 12332  005E28                     __ptext47:
 12333                           	opt stack 0
 12334  005E28                     _USBEnableEndpoint:
 12335                           	opt stack 12
 12336                           
 12337                           ; BSR set to: 0
 12338                           ;incstack = 0
 12339                           ;USBEnableEndpoint@ep stored from wreg
 12340  005E28  0100               	movlb	0	; () banked
 12341  005E2A  6F88               	movwf	USBEnableEndpoint@ep& (0+255),b
 12342                           
 12343                           ;usb_device.c: 898: unsigned char* p;
 12344                           ;usb_device.c: 902: if(options & 0x04)
 12345  005E2C  0100               	movlb	0	; () banked
 12346  005E2E  A585               	btfss	USBEnableEndpoint@options& (0+255),2,b
 12347  005E30  D005               	goto	l1640
 12348                           
 12349                           ; BSR set to: 0
 12350                           ;usb_device.c: 903: {
 12351                           ;usb_device.c: 904: USBConfigureEndpoint(ep, 0);
 12352  005E32  0E00               	movlw	0
 12353  005E34  6F7D               	movwf	USBConfigureEndpoint@direction& (0+255),b
 12354  005E36  5188               	movf	USBEnableEndpoint@ep& (0+255),w,b
 12355  005E38  EC9E  F024         	call	_USBConfigureEndpoint
 12356  005E3C                     l1640:
 12357                           
 12358                           ;usb_device.c: 905: }
 12359                           ;usb_device.c: 906: if(options & 0x02)
 12360  005E3C  0100               	movlb	0	; () banked
 12361  005E3E  A385               	btfss	USBEnableEndpoint@options& (0+255),1,b
 12362  005E40  D005               	goto	l1641
 12363                           
 12364                           ; BSR set to: 0
 12365                           ;usb_device.c: 907: {
 12366                           ;usb_device.c: 908: USBConfigureEndpoint(ep, 1);
 12367  005E42  0E01               	movlw	1
 12368  005E44  6F7D               	movwf	USBConfigureEndpoint@direction& (0+255),b
 12369  005E46  5188               	movf	USBEnableEndpoint@ep& (0+255),w,b
 12370  005E48  EC9E  F024         	call	_USBConfigureEndpoint
 12371  005E4C                     l1641:
 12372                           
 12373                           ;usb_device.c: 909: }
 12374                           ;usb_device.c: 917: p = (unsigned char*)(&UEP0+ep);
 12375  005E4C  0100               	movlb	0	; () banked
 12376  005E4E  5188               	movf	USBEnableEndpoint@ep& (0+255),w,b
 12377  005E50  0D01               	mullw	1
 12378  005E52  0E26               	movlw	38
 12379  005E54  24F3               	addwf	prodl,w,c
 12380  005E56  6F86               	movwf	USBEnableEndpoint@p& (0+255),b
 12381  005E58  0E0F               	movlw	15
 12382  005E5A  20F4               	addwfc	prodh,w,c
 12383  005E5C  6F87               	movwf	(USBEnableEndpoint@p+1)& (0+255),b
 12384                           
 12385                           ; BSR set to: 0
 12386                           ;usb_device.c: 919: *p = options;
 12387  005E5E  C086  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 12388  005E62  C087  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 12389  005E66  C085  FFDF         	movff	USBEnableEndpoint@options,indf2
 12390                           
 12391                           ; BSR set to: 0
 12392  005E6A  0012               	return		;funcret
 12393  005E6C                     __end_of_USBEnableEndpoint:
 12394                           	opt stack 0
 12395                           tosu	equ	0xFFF
 12396                           tosh	equ	0xFFE
 12397                           tosl	equ	0xFFD
 12398                           pclath	equ	0xFFA
 12399                           tblptru	equ	0xFF8
 12400                           tblptrh	equ	0xFF7
 12401                           tblptrl	equ	0xFF6
 12402                           tablat	equ	0xFF5
 12403                           prodh	equ	0xFF4
 12404                           prodl	equ	0xFF3
 12405                           intcon	equ	0xFF2
 12406                           intcon2	equ	0xFF1
 12407                           intcon3	equ	0xFF0
 12408                           indf0	equ	0xFEF
 12409                           postinc0	equ	0xFEE
 12410                           plusw0	equ	0xFEB
 12411                           fsr0h	equ	0xFEA
 12412                           fsr0l	equ	0xFE9
 12413                           wreg	equ	0xFE8
 12414                           postinc1	equ	0xFE6
 12415                           postdec1	equ	0xFE5
 12416                           fsr1h	equ	0xFE2
 12417                           fsr1l	equ	0xFE1
 12418                           indf2	equ	0xFDF
 12419                           postinc2	equ	0xFDE
 12420                           postdec2	equ	0xFDD
 12421                           plusw2	equ	0xFDB
 12422                           fsr2h	equ	0xFDA
 12423                           fsr2l	equ	0xFD9
 12424                           status	equ	0xFD8
 12425                           
 12426 ;; *************** function _USBConfigureEndpoint *****************
 12427 ;; Defined at:
 12428 ;;		line 1561 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 12429 ;; Parameters:    Size  Location     Type
 12430 ;;  EPNum           1    wreg     unsigned char 
 12431 ;;  direction       1   29[BANK0 ] unsigned char 
 12432 ;; Auto vars:     Size  Location     Type
 12433 ;;  EPNum           1   34[BANK0 ] unsigned char 
 12434 ;;  handle          2   35[BANK0 ] PTR volatile struct __BD
 12435 ;;		 -> BDT(48), 
 12436 ;; Return value:  Size  Location     Type
 12437 ;;                  1    wreg      void 
 12438 ;; Registers used:
 12439 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 12440 ;; Tracked objects:
 12441 ;;		On entry : 0/0
 12442 ;;		On exit  : 0/0
 12443 ;;		Unchanged: 0/0
 12444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12445 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12446 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12447 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12448 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12449 ;;Total ram usage:        8 bytes
 12450 ;; Hardware stack levels used:    1
 12451 ;; Hardware stack levels required when called:   11
 12452 ;; This function calls:
 12453 ;;		Nothing
 12454 ;; This function is called by:
 12455 ;;		_USBEnableEndpoint
 12456 ;; This function uses a non-reentrant model
 12457 ;;
 12458                           
 12459                           	psect	text48
 12460  00493C                     __ptext48:
 12461                           	opt stack 0
 12462  00493C                     _USBConfigureEndpoint:
 12463                           	opt stack 12
 12464                           
 12465                           ; BSR set to: 0
 12466                           ;incstack = 0
 12467                           ;USBConfigureEndpoint@EPNum stored from wreg
 12468  00493C  0100               	movlb	0	; () banked
 12469  00493E  6F82               	movwf	USBConfigureEndpoint@EPNum& (0+255),b
 12470                           
 12471                           ;usb_device.c: 1563: volatile BDT_ENTRY* handle;
 12472                           ;usb_device.c: 1567: handle = (volatile BDT_ENTRY*)&BDT[0];
 12473  004940  0E00               	movlw	0
 12474  004942  0100               	movlb	0	; () banked
 12475  004944  6F83               	movwf	USBConfigureEndpoint@handle& (0+255),b
 12476  004946  0E04               	movlw	4
 12477  004948  6F84               	movwf	(USBConfigureEndpoint@handle+1)& (0+255),b
 12478                           
 12479                           ; BSR set to: 0
 12480                           ;usb_device.c: 1568: handle += (4*EPNum+2*direction+0u);
 12481  00494A  517D               	movf	USBConfigureEndpoint@direction& (0+255),w,b
 12482  00494C  6F7E               	movwf	??_USBConfigureEndpoint& (0+255),b
 12483  00494E  6B7F               	clrf	(??_USBConfigureEndpoint+1)& (0+255),b
 12484  004950  90D8               	bcf	status,0,c
 12485  004952  377E               	rlcf	??_USBConfigureEndpoint& (0+255),f,b
 12486  004954  377F               	rlcf	(??_USBConfigureEndpoint+1)& (0+255),f,b
 12487  004956  5182               	movf	USBConfigureEndpoint@EPNum& (0+255),w,b
 12488  004958  6F80               	movwf	(??_USBConfigureEndpoint+2)& (0+255),b
 12489  00495A  6B81               	clrf	(??_USBConfigureEndpoint+3)& (0+255),b
 12490  00495C  90D8               	bcf	status,0,c
 12491  00495E  3780               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 12492  004960  3781               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 12493  004962  90D8               	bcf	status,0,c
 12494  004964  3780               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 12495  004966  3781               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 12496  004968  517E               	movf	??_USBConfigureEndpoint& (0+255),w,b
 12497  00496A  2780               	addwf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 12498  00496C  517F               	movf	(??_USBConfigureEndpoint+1)& (0+255),w,b
 12499  00496E  2381               	addwfc	(??_USBConfigureEndpoint+3)& (0+255),f,b
 12500  004970  90D8               	bcf	status,0,c
 12501  004972  3780               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 12502  004974  3781               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 12503  004976  90D8               	bcf	status,0,c
 12504  004978  3780               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 12505  00497A  3781               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 12506  00497C  5180               	movf	(??_USBConfigureEndpoint+2)& (0+255),w,b
 12507  00497E  2783               	addwf	USBConfigureEndpoint@handle& (0+255),f,b
 12508  004980  5181               	movf	(??_USBConfigureEndpoint+3)& (0+255),w,b
 12509  004982  2384               	addwfc	(USBConfigureEndpoint@handle+1)& (0+255),f,b
 12510                           
 12511                           ; BSR set to: 0
 12512                           ;usb_device.c: 1570: handle->STAT.UOWN = 0;
 12513  004984  C083  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 12514  004988  C084  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 12515  00498C  9EDF               	bcf	indf2,7,c
 12516                           
 12517                           ; BSR set to: 0
 12518                           ;usb_device.c: 1575: if(direction == 0)
 12519  00498E  517D               	movf	USBConfigureEndpoint@direction& (0+255),w,b
 12520  004990  A4D8               	btfss	status,2,c
 12521  004992  D007               	goto	l1676
 12522                           
 12523                           ; BSR set to: 0
 12524                           ;usb_device.c: 1576: {
 12525                           ;usb_device.c: 1577: pBDTEntryOut[EPNum] = handle;
 12526  004994  5182               	movf	USBConfigureEndpoint@EPNum& (0+255),w,b
 12527  004996  0D02               	mullw	2
 12528  004998  0E0E               	movlw	low _pBDTEntryOut
 12529  00499A  24F3               	addwf	prodl,w,c
 12530  00499C  6ED9               	movwf	fsr2l,c
 12531  00499E  0E03               	movlw	high _pBDTEntryOut
 12532  0049A0  D006               	goto	L10
 12533  0049A2                     l1676:
 12534                           
 12535                           ; BSR set to: 0
 12536                           ;usb_device.c: 1579: else
 12537                           ;usb_device.c: 1580: {
 12538                           ;usb_device.c: 1581: pBDTEntryIn[EPNum] = handle;
 12539                           
 12540                           ; BSR set to: 0
 12541  0049A2  5182               	movf	USBConfigureEndpoint@EPNum& (0+255),w,b
 12542  0049A4  0D02               	mullw	2
 12543  0049A6  0EB6               	movlw	low _pBDTEntryIn
 12544  0049A8  24F3               	addwf	prodl,w,c
 12545  0049AA  6ED9               	movwf	fsr2l,c
 12546  0049AC  0E00               	movlw	high _pBDTEntryIn
 12547  0049AE                     L10:
 12548  0049AE  20F4               	addwfc	prodh,w,c
 12549  0049B0  6EDA               	movwf	fsr2h,c
 12550  0049B2  C083  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 12551  0049B6  C084  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 12552                           
 12553                           ; BSR set to: 0
 12554                           ;usb_device.c: 1582: }
 12555                           ;usb_device.c: 1585: handle->STAT.DTS = 0;
 12556                           
 12557                           ; BSR set to: 0
 12558  0049BA  C083  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 12559  0049BE  C084  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 12560  0049C2  9CDF               	bcf	indf2,6,c
 12561                           
 12562                           ; BSR set to: 0
 12563                           ;usb_device.c: 1586: (handle+1)->STAT.DTS = 1;
 12564  0049C4  EE20 F004          	lfsr	2,4
 12565  0049C8  5183               	movf	USBConfigureEndpoint@handle& (0+255),w,b
 12566  0049CA  26D9               	addwf	fsr2l,f,c
 12567  0049CC  5184               	movf	(USBConfigureEndpoint@handle+1)& (0+255),w,b
 12568  0049CE  22DA               	addwfc	fsr2h,f,c
 12569  0049D0  8CDF               	bsf	indf2,6,c
 12570                           
 12571                           ; BSR set to: 0
 12572  0049D2  0012               	return		;funcret
 12573  0049D4                     __end_of_USBConfigureEndpoint:
 12574                           	opt stack 0
 12575                           tosu	equ	0xFFF
 12576                           tosh	equ	0xFFE
 12577                           tosl	equ	0xFFD
 12578                           pclath	equ	0xFFA
 12579                           tblptru	equ	0xFF8
 12580                           tblptrh	equ	0xFF7
 12581                           tblptrl	equ	0xFF6
 12582                           tablat	equ	0xFF5
 12583                           prodh	equ	0xFF4
 12584                           prodl	equ	0xFF3
 12585                           intcon	equ	0xFF2
 12586                           intcon2	equ	0xFF1
 12587                           intcon3	equ	0xFF0
 12588                           indf0	equ	0xFEF
 12589                           postinc0	equ	0xFEE
 12590                           plusw0	equ	0xFEB
 12591                           fsr0h	equ	0xFEA
 12592                           fsr0l	equ	0xFE9
 12593                           wreg	equ	0xFE8
 12594                           postinc1	equ	0xFE6
 12595                           postdec1	equ	0xFE5
 12596                           fsr1h	equ	0xFE2
 12597                           fsr1l	equ	0xFE1
 12598                           indf2	equ	0xFDF
 12599                           postinc2	equ	0xFDE
 12600                           postdec2	equ	0xFDD
 12601                           plusw2	equ	0xFDB
 12602                           fsr2h	equ	0xFDA
 12603                           fsr2l	equ	0xFD9
 12604                           status	equ	0xFD8
 12605                           
 12606 ;; *************** function _USBCtrlTrfOutHandler *****************
 12607 ;; Defined at:
 12608 ;;		line 2555 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 12609 ;; Parameters:    Size  Location     Type
 12610 ;;		None
 12611 ;; Auto vars:     Size  Location     Type
 12612 ;;		None
 12613 ;; Return value:  Size  Location     Type
 12614 ;;                  1    wreg      void 
 12615 ;; Registers used:
 12616 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12617 ;; Tracked objects:
 12618 ;;		On entry : 0/0
 12619 ;;		On exit  : 0/0
 12620 ;;		Unchanged: 0/0
 12621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12622 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12623 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12625 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12626 ;;Total ram usage:        0 bytes
 12627 ;; Hardware stack levels used:    1
 12628 ;; Hardware stack levels required when called:   13
 12629 ;; This function calls:
 12630 ;;		_USBCtrlTrfRxService
 12631 ;; This function is called by:
 12632 ;;		_USBCtrlEPService
 12633 ;; This function uses a non-reentrant model
 12634 ;;
 12635                           
 12636                           	psect	text49
 12637  0053FE                     __ptext49:
 12638                           	opt stack 0
 12639  0053FE                     _USBCtrlTrfOutHandler:
 12640                           	opt stack 12
 12641                           
 12642                           ;usb_device.c: 2557: if(controlTransferState == 2)
 12643                           
 12644                           ; BSR set to: 0
 12645                           ;incstack = 0
 12646  0053FE  0E02               	movlw	2
 12647  005400  0100               	movlb	0	; () banked
 12648  005402  19CA               	xorwf	_controlTransferState& (0+255),w,b
 12649  005404  A4D8               	btfss	status,2,c
 12650  005406  D003               	goto	l1782
 12651                           
 12652                           ; BSR set to: 0
 12653                           ;usb_device.c: 2558: {
 12654                           ;usb_device.c: 2559: USBCtrlTrfRxService();
 12655  005408  EC6A  F018         	call	_USBCtrlTrfRxService	;wreg free
 12656                           
 12657                           ;usb_device.c: 2560: }
 12658  00540C  0012               	return	
 12659  00540E                     l1782:
 12660                           
 12661                           ;usb_device.c: 2561: else
 12662                           ;usb_device.c: 2562: {
 12663                           ;usb_device.c: 2565: controlTransferState = 0;
 12664  00540E  0E00               	movlw	0
 12665  005410  0100               	movlb	0	; () banked
 12666  005412  6FCA               	movwf	_controlTransferState& (0+255),b
 12667                           
 12668                           ;usb_device.c: 2572: if(BothEP0OutUOWNsSet == 0)
 12669  005414  0101               	movlb	1	; () banked
 12670  005416  51E1               	movf	_BothEP0OutUOWNsSet& (0+255),w,b
 12671  005418  A4D8               	btfss	status,2,c
 12672  00541A  D020               	goto	l1784
 12673                           
 12674                           ; BSR set to: 1
 12675                           ;usb_device.c: 2573: {
 12676                           ;usb_device.c: 2574: pBDTEntryEP0OutNext->CNT = 8;
 12677  00541C  0100               	movlb	0	; () banked
 12678  00541E  EE20 F001          	lfsr	2,1
 12679  005422  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12680  005424  26D9               	addwf	fsr2l,f,c
 12681  005426  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12682  005428  22DA               	addwfc	fsr2h,f,c
 12683  00542A  0E08               	movlw	8
 12684  00542C  6EDF               	movwf	indf2,c
 12685                           
 12686                           ;usb_device.c: 2575: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 12687  00542E  EE20 F002          	lfsr	2,2
 12688  005432  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12689  005434  26D9               	addwf	fsr2l,f,c
 12690  005436  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12691  005438  22DA               	addwfc	fsr2h,f,c
 12692  00543A  0E30               	movlw	48
 12693  00543C  6EDE               	movwf	postinc2,c
 12694  00543E  0E04               	movlw	4
 12695  005440  6EDD               	movwf	postdec2,c
 12696                           
 12697                           ; BSR set to: 0
 12698                           ;usb_device.c: 2576: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 12699  005442  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12700  005446  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12701  00544A  0E0C               	movlw	12
 12702  00544C  6EDF               	movwf	indf2,c
 12703                           
 12704                           ; BSR set to: 0
 12705                           ;usb_device.c: 2577: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 12706  00544E  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12707  005452  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12708  005456  0E00               	movlw	0
 12709  005458  8EDB               	bsf	plusw2,7,c
 12710                           
 12711                           ;usb_device.c: 2578: }
 12712  00545A  0012               	return	
 12713  00545C                     l1784:
 12714                           
 12715                           ;usb_device.c: 2579: else
 12716                           ;usb_device.c: 2580: {
 12717                           ;usb_device.c: 2581: BothEP0OutUOWNsSet = 0;
 12718                           
 12719                           ; BSR set to: 0
 12720  00545C  0E00               	movlw	0
 12721  00545E  0101               	movlb	1	; () banked
 12722  005460  6FE1               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 12723                           
 12724                           ; BSR set to: 1
 12725  005462  0012               	return	
 12726  005464                     __end_of_USBCtrlTrfOutHandler:
 12727                           	opt stack 0
 12728                           tosu	equ	0xFFF
 12729                           tosh	equ	0xFFE
 12730                           tosl	equ	0xFFD
 12731                           pclath	equ	0xFFA
 12732                           tblptru	equ	0xFF8
 12733                           tblptrh	equ	0xFF7
 12734                           tblptrl	equ	0xFF6
 12735                           tablat	equ	0xFF5
 12736                           prodh	equ	0xFF4
 12737                           prodl	equ	0xFF3
 12738                           intcon	equ	0xFF2
 12739                           intcon2	equ	0xFF1
 12740                           intcon3	equ	0xFF0
 12741                           indf0	equ	0xFEF
 12742                           postinc0	equ	0xFEE
 12743                           plusw0	equ	0xFEB
 12744                           fsr0h	equ	0xFEA
 12745                           fsr0l	equ	0xFE9
 12746                           wreg	equ	0xFE8
 12747                           postinc1	equ	0xFE6
 12748                           postdec1	equ	0xFE5
 12749                           fsr1h	equ	0xFE2
 12750                           fsr1l	equ	0xFE1
 12751                           indf2	equ	0xFDF
 12752                           postinc2	equ	0xFDE
 12753                           postdec2	equ	0xFDD
 12754                           plusw2	equ	0xFDB
 12755                           fsr2h	equ	0xFDA
 12756                           fsr2l	equ	0xFD9
 12757                           status	equ	0xFD8
 12758                           
 12759 ;; *************** function _USBCtrlTrfRxService *****************
 12760 ;; Defined at:
 12761 ;;		line 1870 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 12762 ;; Parameters:    Size  Location     Type
 12763 ;;		None
 12764 ;; Auto vars:     Size  Location     Type
 12765 ;;  byteToRead      1   30[BANK0 ] unsigned char 
 12766 ;;  i               1   29[BANK0 ] unsigned char 
 12767 ;; Return value:  Size  Location     Type
 12768 ;;                  1    wreg      void 
 12769 ;; Registers used:
 12770 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12771 ;; Tracked objects:
 12772 ;;		On entry : 0/0
 12773 ;;		On exit  : 0/0
 12774 ;;		Unchanged: 0/0
 12775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12776 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12777 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12779 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12780 ;;Total ram usage:        2 bytes
 12781 ;; Hardware stack levels used:    1
 12782 ;; Hardware stack levels required when called:   12
 12783 ;; This function calls:
 12784 ;;		_USBCtrlEPAllowStatusStage
 12785 ;; This function is called by:
 12786 ;;		_USBCtrlTrfOutHandler
 12787 ;; This function uses a non-reentrant model
 12788 ;;
 12789                           
 12790                           	psect	text50
 12791  0030D4                     __ptext50:
 12792                           	opt stack 0
 12793  0030D4                     _USBCtrlTrfRxService:
 12794                           	opt stack 12
 12795                           
 12796                           ;usb_device.c: 1872: uint8_t byteToRead;
 12797                           ;usb_device.c: 1873: uint8_t i;
 12798                           ;usb_device.c: 1877: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 12799                           
 12800                           ;incstack = 0
 12801  0030D4  0100               	movlb	0	; () banked
 12802  0030D6  EE20 F001          	lfsr	2,1
 12803  0030DA  51C0               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 12804  0030DC  26D9               	addwf	fsr2l,f,c
 12805  0030DE  51C1               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 12806  0030E0  22DA               	addwfc	fsr2h,f,c
 12807  0030E2  50DF               	movf	indf2,w,c
 12808  0030E4  6F7E               	movwf	USBCtrlTrfRxService@byteToRead& (0+255),b
 12809                           
 12810                           ; BSR set to: 0
 12811                           ;usb_device.c: 1883: if(byteToRead > outPipes[0].wCount.Val)
 12812  0030E6  517E               	movf	USBCtrlTrfRxService@byteToRead& (0+255),w,b
 12813  0030E8  0101               	movlb	1	; () banked
 12814  0030EA  5DCD               	subwf	(_outPipes+4)& (0+255),w,b
 12815  0030EC  0E00               	movlw	0
 12816  0030EE  59CE               	subwfb	(_outPipes+5)& (0+255),w,b
 12817  0030F0  A0D8               	btfss	status,0,c
 12818                           
 12819                           ; BSR set to: 1
 12820                           ;usb_device.c: 1884: {
 12821                           ;usb_device.c: 1885: byteToRead = outPipes[0].wCount.Val;
 12822  0030F2  C1CD  F07E         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead
 12823                           
 12824                           ; BSR set to: 1
 12825                           ;usb_device.c: 1886: }
 12826                           ;usb_device.c: 1888: outPipes[0].wCount.Val -= byteToRead;
 12827                           
 12828                           ; BSR set to: 1
 12829  0030F6  0100               	movlb	0	; () banked
 12830  0030F8  517E               	movf	USBCtrlTrfRxService@byteToRead& (0+255),w,b
 12831  0030FA  0101               	movlb	1	; () banked
 12832  0030FC  5FCD               	subwf	(_outPipes+4)& (0+255),f,b
 12833  0030FE  0E00               	movlw	0
 12834  003100  5BCE               	subwfb	(_outPipes+5)& (0+255),f,b
 12835                           
 12836                           ; BSR set to: 1
 12837                           ;usb_device.c: 1892: for(i=0;i<byteToRead;i++)
 12838  003102  0E00               	movlw	0
 12839  003104  0100               	movlb	0	; () banked
 12840  003106  6F7D               	movwf	USBCtrlTrfRxService@i& (0+255),b
 12841  003108  D013               	goto	l1710
 12842  00310A                     
 12843                           ; BSR set to: 0
 12844                           ;usb_device.c: 1893: {
 12845                           ;usb_device.c: 1894: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 12846                           
 12847                           ; BSR set to: 0
 12848  00310A  517D               	movf	USBCtrlTrfRxService@i& (0+255),w,b
 12849  00310C  0D01               	mullw	1
 12850  00310E  0E38               	movlw	56
 12851  003110  24F3               	addwf	prodl,w,c
 12852  003112  6ED9               	movwf	fsr2l,c
 12853  003114  0E04               	movlw	4
 12854  003116  20F4               	addwfc	prodh,w,c
 12855  003118  6EDA               	movwf	fsr2h,c
 12856  00311A  C1C9  FFE1         	movff	_outPipes,fsr1l
 12857  00311E  C1CA  FFE2         	movff	_outPipes+1,fsr1h
 12858  003122  CFDF FFE7          	movff	indf2,indf1
 12859                           
 12860                           ; BSR set to: 0
 12861  003126  0101               	movlb	1	; () banked
 12862  003128  4BC9               	infsnz	_outPipes& (0+255),f,b
 12863  00312A  2BCA               	incf	(_outPipes+1)& (0+255),f,b
 12864                           
 12865                           ; BSR set to: 1
 12866  00312C  0100               	movlb	0	; () banked
 12867  00312E  2B7D               	incf	USBCtrlTrfRxService@i& (0+255),f,b
 12868  003130                     l1710:
 12869                           
 12870                           ; BSR set to: 0
 12871                           
 12872                           ; BSR set to: 0
 12873  003130  517E               	movf	USBCtrlTrfRxService@byteToRead& (0+255),w,b
 12874  003132  5D7D               	subwf	USBCtrlTrfRxService@i& (0+255),w,b
 12875  003134  A0D8               	btfss	status,0,c
 12876  003136  D7E9               	goto	l1711
 12877                           
 12878                           ; BSR set to: 0
 12879                           ;usb_device.c: 1895: }
 12880                           ;usb_device.c: 1899: if(outPipes[0].wCount.Val > 0)
 12881                           
 12882                           ; BSR set to: 0
 12883  003138  0101               	movlb	1	; () banked
 12884  00313A  51CD               	movf	(_outPipes+4)& (0+255),w,b
 12885  00313C  11CE               	iorwf	(_outPipes+5)& (0+255),w,b
 12886  00313E  B4D8               	btfsc	status,2,c
 12887  003140  D033               	goto	l1713
 12888                           
 12889                           ; BSR set to: 1
 12890                           ;usb_device.c: 1900: {
 12891                           ;usb_device.c: 1901: pBDTEntryEP0OutNext->CNT = 8;
 12892  003142  0100               	movlb	0	; () banked
 12893  003144  EE20 F001          	lfsr	2,1
 12894  003148  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12895  00314A  26D9               	addwf	fsr2l,f,c
 12896  00314C  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12897  00314E  22DA               	addwfc	fsr2h,f,c
 12898  003150  0E08               	movlw	8
 12899  003152  6EDF               	movwf	indf2,c
 12900                           
 12901                           ;usb_device.c: 1902: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 12902  003154  EE20 F002          	lfsr	2,2
 12903  003158  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12904  00315A  26D9               	addwf	fsr2l,f,c
 12905  00315C  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12906  00315E  22DA               	addwfc	fsr2h,f,c
 12907  003160  0E38               	movlw	56
 12908  003162  6EDE               	movwf	postinc2,c
 12909  003164  0E04               	movlw	4
 12910  003166  6EDD               	movwf	postdec2,c
 12911                           
 12912                           ; BSR set to: 0
 12913                           ;usb_device.c: 1903: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 12914  003168  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 12915  00316C  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 12916  003170  BCDF               	btfsc	indf2,6,c
 12917  003172  D00D               	goto	l1714
 12918                           
 12919                           ; BSR set to: 0
 12920                           ;usb_device.c: 1904: {
 12921                           ;usb_device.c: 1905: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 12922  003174  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12923  003178  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12924  00317C  0E48               	movlw	72
 12925  00317E  6EDF               	movwf	indf2,c
 12926                           
 12927                           ; BSR set to: 0
 12928                           ;usb_device.c: 1906: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 12929  003180  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12930  003184  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12931  003188  0E00               	movlw	0
 12932  00318A  8EDB               	bsf	plusw2,7,c
 12933                           
 12934                           ;usb_device.c: 1907: }
 12935  00318C  0012               	return	
 12936  00318E                     l1714:
 12937                           
 12938                           ; BSR set to: 0
 12939                           ;usb_device.c: 1908: else
 12940                           ;usb_device.c: 1909: {
 12941                           ;usb_device.c: 1910: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
 12942                           
 12943                           ; BSR set to: 0
 12944  00318E  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12945  003192  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12946  003196  0E08               	movlw	8
 12947  003198  6EDF               	movwf	indf2,c
 12948                           
 12949                           ; BSR set to: 0
 12950                           ;usb_device.c: 1911: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 12951  00319A  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12952  00319E  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12953  0031A2  0E00               	movlw	0
 12954  0031A4  8EDB               	bsf	plusw2,7,c
 12955                           
 12956                           ; BSR set to: 0
 12957                           ;usb_device.c: 1912: }
 12958                           ;usb_device.c: 1913: }
 12959  0031A6  0012               	return	
 12960  0031A8                     l1713:
 12961                           
 12962                           ;usb_device.c: 1914: else
 12963                           ;usb_device.c: 1915: {
 12964                           ;usb_device.c: 1919: pBDTEntryEP0OutNext->CNT = 8;
 12965                           
 12966                           ; BSR set to: 0
 12967  0031A8  0100               	movlb	0	; () banked
 12968  0031AA  EE20 F001          	lfsr	2,1
 12969  0031AE  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12970  0031B0  26D9               	addwf	fsr2l,f,c
 12971  0031B2  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12972  0031B4  22DA               	addwfc	fsr2h,f,c
 12973  0031B6  0E08               	movlw	8
 12974  0031B8  6EDF               	movwf	indf2,c
 12975                           
 12976                           ;usb_device.c: 1920: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 12977  0031BA  EE20 F002          	lfsr	2,2
 12978  0031BE  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12979  0031C0  26D9               	addwf	fsr2l,f,c
 12980  0031C2  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12981  0031C4  22DA               	addwfc	fsr2h,f,c
 12982  0031C6  0E30               	movlw	48
 12983  0031C8  6EDE               	movwf	postinc2,c
 12984  0031CA  0E04               	movlw	4
 12985  0031CC  6EDD               	movwf	postdec2,c
 12986                           
 12987                           ; BSR set to: 0
 12988                           ;usb_device.c: 1924: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 12989  0031CE  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12990  0031D2  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12991  0031D6  0E04               	movlw	4
 12992  0031D8  6EDF               	movwf	indf2,c
 12993                           
 12994                           ; BSR set to: 0
 12995                           ;usb_device.c: 1925: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 12996  0031DA  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12997  0031DE  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12998  0031E2  0E00               	movlw	0
 12999  0031E4  8EDB               	bsf	plusw2,7,c
 13000                           
 13001                           ; BSR set to: 0
 13002                           ;usb_device.c: 1944: }
 13003                           ;usb_device.c: 1945: outPipes[0].info.bits.busy = 0;
 13004                           
 13005                           ; BSR set to: 0
 13006  0031E6  0101               	movlb	1	; () banked
 13007  0031E8  9FCC               	bcf	(_outPipes+3)& (0+255),7,b
 13008                           
 13009                           ; BSR set to: 1
 13010                           ;usb_device.c: 1959: if(USBDeferStatusStagePacket == 0)
 13011  0031EA  0100               	movlb	0	; () banked
 13012  0031EC  51C7               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 13013  0031EE  A4D8               	btfss	status,2,c
 13014  0031F0  0012               	return	
 13015                           
 13016                           ; BSR set to: 0
 13017                           ;usb_device.c: 1960: {
 13018                           ;usb_device.c: 1961: USBCtrlEPAllowStatusStage();
 13019  0031F2  EC3A  F01E         	call	_USBCtrlEPAllowStatusStage	;wreg free
 13020  0031F6  0012               	return	
 13021  0031F8                     __end_of_USBCtrlTrfRxService:
 13022                           	opt stack 0
 13023                           tosu	equ	0xFFF
 13024                           tosh	equ	0xFFE
 13025                           tosl	equ	0xFFD
 13026                           pclath	equ	0xFFA
 13027                           tblptru	equ	0xFF8
 13028                           tblptrh	equ	0xFF7
 13029                           tblptrl	equ	0xFF6
 13030                           tablat	equ	0xFF5
 13031                           prodh	equ	0xFF4
 13032                           prodl	equ	0xFF3
 13033                           intcon	equ	0xFF2
 13034                           intcon2	equ	0xFF1
 13035                           intcon3	equ	0xFF0
 13036                           indf0	equ	0xFEF
 13037                           postinc0	equ	0xFEE
 13038                           plusw0	equ	0xFEB
 13039                           fsr0h	equ	0xFEA
 13040                           fsr0l	equ	0xFE9
 13041                           wreg	equ	0xFE8
 13042                           indf1	equ	0xFE7
 13043                           postinc1	equ	0xFE6
 13044                           postdec1	equ	0xFE5
 13045                           fsr1h	equ	0xFE2
 13046                           fsr1l	equ	0xFE1
 13047                           indf2	equ	0xFDF
 13048                           postinc2	equ	0xFDE
 13049                           postdec2	equ	0xFDD
 13050                           plusw2	equ	0xFDB
 13051                           fsr2h	equ	0xFDA
 13052                           fsr2l	equ	0xFD9
 13053                           status	equ	0xFD8
 13054                           
 13055 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 13056 ;; Defined at:
 13057 ;;		line 1434 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 13058 ;; Parameters:    Size  Location     Type
 13059 ;;		None
 13060 ;; Auto vars:     Size  Location     Type
 13061 ;;		None
 13062 ;; Return value:  Size  Location     Type
 13063 ;;                  1    wreg      void 
 13064 ;; Registers used:
 13065 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13066 ;; Tracked objects:
 13067 ;;		On entry : 0/0
 13068 ;;		On exit  : 0/0
 13069 ;;		Unchanged: 0/0
 13070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13071 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13072 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13073 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13074 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13075 ;;Total ram usage:        0 bytes
 13076 ;; Hardware stack levels used:    1
 13077 ;; Hardware stack levels required when called:   11
 13078 ;; This function calls:
 13079 ;;		Nothing
 13080 ;; This function is called by:
 13081 ;;		_USBDeviceTasks
 13082 ;;		_USBCtrlEPServiceComplete
 13083 ;;		_USBCtrlTrfRxService
 13084 ;; This function uses a non-reentrant model
 13085 ;;
 13086                           
 13087                           	psect	text51
 13088  003C74                     __ptext51:
 13089                           	opt stack 0
 13090  003C74                     _USBCtrlEPAllowStatusStage:
 13091                           	opt stack 12
 13092                           
 13093                           ;usb_device.c: 1441: if(USBStatusStageEnabledFlag1 == 0)
 13094                           
 13095                           ;incstack = 0
 13096  003C74  5028               	movf	_USBStatusStageEnabledFlag1,w,c	;volatile
 13097  003C76  A4D8               	btfss	status,2,c
 13098  003C78  0012               	return	
 13099                           
 13100                           ;usb_device.c: 1442: {
 13101                           ;usb_device.c: 1443: USBStatusStageEnabledFlag1 = 1;
 13102  003C7A  0E01               	movlw	1
 13103  003C7C  6E28               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 13104                           
 13105                           ;usb_device.c: 1444: if(USBStatusStageEnabledFlag2 == 0)
 13106  003C7E  5027               	movf	_USBStatusStageEnabledFlag2,w,c	;volatile
 13107  003C80  A4D8               	btfss	status,2,c
 13108  003C82  0012               	return	
 13109                           
 13110                           ;usb_device.c: 1445: {
 13111                           ;usb_device.c: 1446: USBStatusStageEnabledFlag2 = 1;
 13112  003C84  0E01               	movlw	1
 13113  003C86  6E27               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 13114                           
 13115                           ;usb_device.c: 1450: if(controlTransferState == 2)
 13116  003C88  0E02               	movlw	2
 13117  003C8A  0100               	movlb	0	; () banked
 13118  003C8C  19CA               	xorwf	_controlTransferState& (0+255),w,b
 13119  003C8E  A4D8               	btfss	status,2,c
 13120  003C90  D015               	goto	l1664
 13121                           
 13122                           ; BSR set to: 0
 13123                           ;usb_device.c: 1451: {
 13124                           ;usb_device.c: 1452: pBDTEntryIn[0]->CNT = 0;
 13125  003C92  EE20 F001          	lfsr	2,1
 13126  003C96  51B6               	movf	_pBDTEntryIn& (0+255),w,b
 13127  003C98  26D9               	addwf	fsr2l,f,c
 13128  003C9A  51B7               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 13129  003C9C  22DA               	addwfc	fsr2h,f,c
 13130  003C9E  0E00               	movlw	0
 13131  003CA0  6EDF               	movwf	indf2,c
 13132                           
 13133                           ; BSR set to: 0
 13134                           ;usb_device.c: 1453: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 13135  003CA2  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 13136  003CA6  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13137  003CAA  0E48               	movlw	72
 13138  003CAC  6EDF               	movwf	indf2,c
 13139                           
 13140                           ; BSR set to: 0
 13141                           ;usb_device.c: 1454: pBDTEntryIn[0]->STAT.Val |= 0x80;
 13142  003CAE  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 13143  003CB2  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13144  003CB6  0E00               	movlw	0
 13145  003CB8  8EDB               	bsf	plusw2,7,c
 13146                           
 13147                           ;usb_device.c: 1455: }
 13148  003CBA  0012               	return	
 13149  003CBC                     l1664:
 13150                           
 13151                           ; BSR set to: 0
 13152                           ;usb_device.c: 1456: else if(controlTransferState == 1)
 13153                           
 13154                           ; BSR set to: 0
 13155  003CBC  05CA               	decf	_controlTransferState& (0+255),w,b
 13156  003CBE  A4D8               	btfss	status,2,c
 13157  003CC0  0012               	return	
 13158                           
 13159                           ; BSR set to: 0
 13160                           ;usb_device.c: 1457: {
 13161                           ;usb_device.c: 1458: BothEP0OutUOWNsSet = 0;
 13162  003CC2  0E00               	movlw	0
 13163  003CC4  0101               	movlb	1	; () banked
 13164  003CC6  6FE1               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 13165                           
 13166                           ; BSR set to: 1
 13167                           ;usb_device.c: 1463: pBDTEntryEP0OutCurrent->CNT = 8;
 13168  003CC8  0100               	movlb	0	; () banked
 13169  003CCA  EE20 F001          	lfsr	2,1
 13170  003CCE  51C0               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 13171  003CD0  26D9               	addwf	fsr2l,f,c
 13172  003CD2  51C1               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 13173  003CD4  22DA               	addwfc	fsr2h,f,c
 13174  003CD6  0E08               	movlw	8
 13175  003CD8  6EDF               	movwf	indf2,c
 13176                           
 13177                           ; BSR set to: 0
 13178                           ;usb_device.c: 1464: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 13179  003CDA  EE20 F002          	lfsr	2,2
 13180  003CDE  51C0               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 13181  003CE0  26D9               	addwf	fsr2l,f,c
 13182  003CE2  51C1               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 13183  003CE4  22DA               	addwfc	fsr2h,f,c
 13184  003CE6  0E30               	movlw	48
 13185  003CE8  6EDE               	movwf	postinc2,c
 13186  003CEA  0E04               	movlw	4
 13187  003CEC  6EDD               	movwf	postdec2,c
 13188                           
 13189                           ; BSR set to: 0
 13190                           ;usb_device.c: 1465: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 13191  003CEE  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 13192  003CF2  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 13193  003CF6  0E04               	movlw	4
 13194  003CF8  6EDF               	movwf	indf2,c
 13195                           
 13196                           ; BSR set to: 0
 13197                           ;usb_device.c: 1466: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 13198  003CFA  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 13199  003CFE  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 13200  003D02  0E00               	movlw	0
 13201  003D04  8EDB               	bsf	plusw2,7,c
 13202                           
 13203                           ; BSR set to: 0
 13204                           ;usb_device.c: 1467: BothEP0OutUOWNsSet = 1;
 13205  003D06  0E01               	movlw	1
 13206  003D08  0101               	movlb	1	; () banked
 13207  003D0A  6FE1               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 13208                           
 13209                           ; BSR set to: 1
 13210                           ;usb_device.c: 1471: pBDTEntryEP0OutNext->CNT = 8;
 13211  003D0C  0100               	movlb	0	; () banked
 13212  003D0E  EE20 F001          	lfsr	2,1
 13213  003D12  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 13214  003D14  26D9               	addwf	fsr2l,f,c
 13215  003D16  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 13216  003D18  22DA               	addwfc	fsr2h,f,c
 13217  003D1A  0E08               	movlw	8
 13218  003D1C  6EDF               	movwf	indf2,c
 13219                           
 13220                           ; BSR set to: 0
 13221                           ;usb_device.c: 1472: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 13222  003D1E  EE20 F002          	lfsr	2,2
 13223  003D22  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 13224  003D24  26D9               	addwf	fsr2l,f,c
 13225  003D26  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 13226  003D28  22DA               	addwfc	fsr2h,f,c
 13227  003D2A  0E30               	movlw	48
 13228  003D2C  6EDE               	movwf	postinc2,c
 13229  003D2E  0E04               	movlw	4
 13230  003D30  6EDD               	movwf	postdec2,c
 13231                           
 13232                           ; BSR set to: 0
 13233                           ;usb_device.c: 1473: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 13234  003D32  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 13235  003D36  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 13236  003D3A  0E80               	movlw	128
 13237  003D3C  6EDF               	movwf	indf2,c
 13238                           
 13239                           ; BSR set to: 0
 13240                           
 13241                           ; BSR set to: 0
 13242                           
 13243                           ; BSR set to: 0
 13244  003D3E  0012               	return	
 13245  003D40                     __end_of_USBCtrlEPAllowStatusStage:
 13246                           	opt stack 0
 13247                           tosu	equ	0xFFF
 13248                           tosh	equ	0xFFE
 13249                           tosl	equ	0xFFD
 13250                           pclath	equ	0xFFA
 13251                           tblptru	equ	0xFF8
 13252                           tblptrh	equ	0xFF7
 13253                           tblptrl	equ	0xFF6
 13254                           tablat	equ	0xFF5
 13255                           prodh	equ	0xFF4
 13256                           prodl	equ	0xFF3
 13257                           intcon	equ	0xFF2
 13258                           intcon2	equ	0xFF1
 13259                           intcon3	equ	0xFF0
 13260                           indf0	equ	0xFEF
 13261                           postinc0	equ	0xFEE
 13262                           plusw0	equ	0xFEB
 13263                           fsr0h	equ	0xFEA
 13264                           fsr0l	equ	0xFE9
 13265                           wreg	equ	0xFE8
 13266                           indf1	equ	0xFE7
 13267                           postinc1	equ	0xFE6
 13268                           postdec1	equ	0xFE5
 13269                           fsr1h	equ	0xFE2
 13270                           fsr1l	equ	0xFE1
 13271                           indf2	equ	0xFDF
 13272                           postinc2	equ	0xFDE
 13273                           postdec2	equ	0xFDD
 13274                           plusw2	equ	0xFDB
 13275                           fsr2h	equ	0xFDA
 13276                           fsr2l	equ	0xFD9
 13277                           status	equ	0xFD8
 13278                           
 13279 ;; *************** function _USBCtrlTrfInHandler *****************
 13280 ;; Defined at:
 13281 ;;		line 2609 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 13282 ;; Parameters:    Size  Location     Type
 13283 ;;		None
 13284 ;; Auto vars:     Size  Location     Type
 13285 ;;  lastDTS         1   30[BANK0 ] unsigned char 
 13286 ;; Return value:  Size  Location     Type
 13287 ;;                  1    wreg      void 
 13288 ;; Registers used:
 13289 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13290 ;; Tracked objects:
 13291 ;;		On entry : 0/0
 13292 ;;		On exit  : 0/0
 13293 ;;		Unchanged: 0/0
 13294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13295 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13296 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13298 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13299 ;;Total ram usage:        1 bytes
 13300 ;; Hardware stack levels used:    1
 13301 ;; Hardware stack levels required when called:   12
 13302 ;; This function calls:
 13303 ;;		_USBCtrlTrfTxService
 13304 ;; This function is called by:
 13305 ;;		_USBCtrlEPService
 13306 ;; This function uses a non-reentrant model
 13307 ;;
 13308                           
 13309                           	psect	text52
 13310  004126                     __ptext52:
 13311                           	opt stack 0
 13312  004126                     _USBCtrlTrfInHandler:
 13313                           	opt stack 13
 13314                           
 13315                           ;usb_device.c: 2611: uint8_t lastDTS;
 13316                           ;usb_device.c: 2613: lastDTS = pBDTEntryIn[0]->STAT.DTS;
 13317                           
 13318                           ;incstack = 0
 13319  004126  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 13320  00412A  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13321  00412E  0100               	movlb	0	; () banked
 13322  004130  0E00               	movlw	0
 13323  004132  BCDF               	btfsc	indf2,6,c
 13324  004134  0E01               	movlw	1
 13325  004136  6F7E               	movwf	USBCtrlTrfInHandler@lastDTS& (0+255),b
 13326                           
 13327                           ; BSR set to: 0
 13328                           ;usb_device.c: 2616: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 13329  004138  0E04               	movlw	4
 13330  00413A  1BB6               	xorwf	_pBDTEntryIn& (0+255),f,b
 13331                           
 13332                           ; BSR set to: 0
 13333                           ;usb_device.c: 2621: if(USBDeviceState == ADR_PENDING_STATE)
 13334  00413C  0E08               	movlw	8
 13335  00413E  19CC               	xorwf	_USBDeviceState& (0+255),w,b
 13336  004140  A4D8               	btfss	status,2,c
 13337  004142  D00D               	goto	l1791
 13338                           
 13339                           ; BSR set to: 0
 13340                           ;usb_device.c: 2622: {
 13341                           ;usb_device.c: 2623: UADDR = (SetupPkt.bDevADR & 0x7F);
 13342  004144  0104               	movlb	4	; () banked
 13343  004146  5132               	movf	50,w,b	;volatile
 13344  004148  0B7F               	andlw	127
 13345  00414A  010F               	movlb	15	; () banked
 13346  00414C  6F38               	movwf	56,b	;volatile
 13347                           
 13348                           ; BSR set to: 15
 13349                           ;usb_device.c: 2624: if(UADDR != 0u)
 13350  00414E  5138               	movf	56,w,b	;volatile
 13351  004150  B4D8               	btfsc	status,2,c
 13352  004152  D002               	goto	l1790
 13353                           
 13354                           ; BSR set to: 15
 13355                           ;usb_device.c: 2625: {
 13356                           ;usb_device.c: 2626: USBDeviceState=ADDRESS_STATE;
 13357  004154  0E10               	movlw	16
 13358  004156  D001               	goto	L11
 13359  004158                     l1790:
 13360                           
 13361                           ;usb_device.c: 2628: else
 13362                           ;usb_device.c: 2629: {
 13363                           ;usb_device.c: 2630: USBDeviceState=DEFAULT_STATE;
 13364                           
 13365                           ; BSR set to: 0
 13366  004158  0E04               	movlw	4
 13367  00415A                     L11:
 13368  00415A  0100               	movlb	0	; () banked
 13369  00415C  6FCC               	movwf	_USBDeviceState& (0+255),b
 13370  00415E                     l1791:
 13371                           
 13372                           ; BSR set to: 0
 13373                           ;usb_device.c: 2631: }
 13374                           ;usb_device.c: 2632: }
 13375                           ;usb_device.c: 2635: if(controlTransferState == 1)
 13376                           
 13377                           ; BSR set to: 0
 13378                           
 13379                           ; BSR set to: 0
 13380  00415E  05CA               	decf	_controlTransferState& (0+255),w,b
 13381  004160  A4D8               	btfss	status,2,c
 13382  004162  D03B               	goto	l1792
 13383                           
 13384                           ; BSR set to: 0
 13385                           ;usb_device.c: 2636: {
 13386                           ;usb_device.c: 2637: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData));
 13387  004164  EE20 F002          	lfsr	2,2
 13388  004168  51B6               	movf	_pBDTEntryIn& (0+255),w,b
 13389  00416A  26D9               	addwf	fsr2l,f,c
 13390  00416C  51B7               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 13391  00416E  22DA               	addwfc	fsr2h,f,c
 13392  004170  0E38               	movlw	56
 13393  004172  6EDE               	movwf	postinc2,c
 13394  004174  0E04               	movlw	4
 13395  004176  6EDD               	movwf	postdec2,c
 13396                           
 13397                           ; BSR set to: 0
 13398                           ;usb_device.c: 2638: USBCtrlTrfTxService();
 13399  004178  EC2C  F01C         	call	_USBCtrlTrfTxService	;wreg free
 13400                           
 13401                           ;usb_device.c: 2644: if(shortPacketStatus == 2)
 13402  00417C  0E02               	movlw	2
 13403  00417E  0100               	movlb	0	; () banked
 13404  004180  19CB               	xorwf	_shortPacketStatus& (0+255),w,b
 13405  004182  A4D8               	btfss	status,2,c
 13406  004184  D00D               	goto	l1793
 13407                           
 13408                           ; BSR set to: 0
 13409                           ;usb_device.c: 2645: {
 13410                           ;usb_device.c: 2648: pBDTEntryIn[0]->STAT.Val = 0x04;
 13411  004186  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 13412  00418A  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13413  00418E  0E04               	movlw	4
 13414  004190  6EDF               	movwf	indf2,c
 13415                           
 13416                           ; BSR set to: 0
 13417                           ;usb_device.c: 2649: pBDTEntryIn[0]->STAT.Val |= 0x80;
 13418  004192  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 13419  004196  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13420  00419A  0E00               	movlw	0
 13421  00419C  8EDB               	bsf	plusw2,7,c
 13422                           
 13423                           ;usb_device.c: 2650: }
 13424  00419E  0012               	return	
 13425  0041A0                     l1793:
 13426                           
 13427                           ; BSR set to: 0
 13428                           ;usb_device.c: 2651: else
 13429                           ;usb_device.c: 2652: {
 13430                           ;usb_device.c: 2653: if(lastDTS == 0)
 13431                           
 13432                           ; BSR set to: 0
 13433  0041A0  517E               	movf	USBCtrlTrfInHandler@lastDTS& (0+255),w,b
 13434  0041A2  A4D8               	btfss	status,2,c
 13435  0041A4  D00D               	goto	l1795
 13436                           
 13437                           ; BSR set to: 0
 13438                           ;usb_device.c: 2654: {
 13439                           ;usb_device.c: 2655: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 13440  0041A6  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 13441  0041AA  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13442  0041AE  0E48               	movlw	72
 13443  0041B0  6EDF               	movwf	indf2,c
 13444                           
 13445                           ; BSR set to: 0
 13446                           ;usb_device.c: 2656: pBDTEntryIn[0]->STAT.Val |= 0x80;
 13447  0041B2  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 13448  0041B6  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13449  0041BA  0E00               	movlw	0
 13450  0041BC  8EDB               	bsf	plusw2,7,c
 13451                           
 13452                           ;usb_device.c: 2657: }
 13453  0041BE  0012               	return	
 13454  0041C0                     l1795:
 13455                           
 13456                           ; BSR set to: 0
 13457                           ;usb_device.c: 2658: else
 13458                           ;usb_device.c: 2659: {
 13459                           ;usb_device.c: 2660: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
 13460                           
 13461                           ; BSR set to: 0
 13462  0041C0  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 13463  0041C4  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13464  0041C8  0E08               	movlw	8
 13465  0041CA  6EDF               	movwf	indf2,c
 13466                           
 13467                           ; BSR set to: 0
 13468                           ;usb_device.c: 2661: pBDTEntryIn[0]->STAT.Val |= 0x80;
 13469  0041CC  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 13470  0041D0  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13471  0041D4  0E00               	movlw	0
 13472  0041D6  8EDB               	bsf	plusw2,7,c
 13473                           
 13474                           ; BSR set to: 0
 13475                           ;usb_device.c: 2662: }
 13476                           ;usb_device.c: 2663: }
 13477                           ;usb_device.c: 2664: }
 13478                           
 13479                           ; BSR set to: 0
 13480  0041D8  0012               	return	
 13481  0041DA                     l1792:
 13482                           
 13483                           ; BSR set to: 0
 13484                           ;usb_device.c: 2665: else
 13485                           ;usb_device.c: 2666: {
 13486                           ;usb_device.c: 2670: if(outPipes[0].info.bits.busy == 1)
 13487  0041DA  0101               	movlb	1	; () banked
 13488  0041DC  BFCC               	btfsc	(_outPipes+3)& (0+255),7,b
 13489                           
 13490                           ; BSR set to: 1
 13491                           ;usb_device.c: 2675: }
 13492                           ;usb_device.c: 2676: outPipes[0].info.bits.busy = 0;
 13493                           
 13494                           ; BSR set to: 1
 13495  0041DE  9FCC               	bcf	(_outPipes+3)& (0+255),7,b
 13496                           
 13497                           ; BSR set to: 1
 13498                           ;usb_device.c: 2677: }
 13499                           ;usb_device.c: 2679: controlTransferState = 0;
 13500                           
 13501                           ; BSR set to: 1
 13502  0041E0  0E00               	movlw	0
 13503  0041E2  0100               	movlb	0	; () banked
 13504  0041E4  6FCA               	movwf	_controlTransferState& (0+255),b
 13505  0041E6  0012               	return	
 13506  0041E8                     __end_of_USBCtrlTrfInHandler:
 13507                           	opt stack 0
 13508                           tosu	equ	0xFFF
 13509                           tosh	equ	0xFFE
 13510                           tosl	equ	0xFFD
 13511                           pclath	equ	0xFFA
 13512                           tblptru	equ	0xFF8
 13513                           tblptrh	equ	0xFF7
 13514                           tblptrl	equ	0xFF6
 13515                           tablat	equ	0xFF5
 13516                           prodh	equ	0xFF4
 13517                           prodl	equ	0xFF3
 13518                           intcon	equ	0xFF2
 13519                           intcon2	equ	0xFF1
 13520                           intcon3	equ	0xFF0
 13521                           indf0	equ	0xFEF
 13522                           postinc0	equ	0xFEE
 13523                           plusw0	equ	0xFEB
 13524                           fsr0h	equ	0xFEA
 13525                           fsr0l	equ	0xFE9
 13526                           wreg	equ	0xFE8
 13527                           indf1	equ	0xFE7
 13528                           postinc1	equ	0xFE6
 13529                           postdec1	equ	0xFE5
 13530                           fsr1h	equ	0xFE2
 13531                           fsr1l	equ	0xFE1
 13532                           indf2	equ	0xFDF
 13533                           postinc2	equ	0xFDE
 13534                           postdec2	equ	0xFDD
 13535                           plusw2	equ	0xFDB
 13536                           fsr2h	equ	0xFDA
 13537                           fsr2l	equ	0xFD9
 13538                           status	equ	0xFD8
 13539                           
 13540 ;; *************** function _USBCtrlTrfTxService *****************
 13541 ;; Defined at:
 13542 ;;		line 1789 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 13543 ;; Parameters:    Size  Location     Type
 13544 ;;		None
 13545 ;; Auto vars:     Size  Location     Type
 13546 ;;  byteToSend      1   29[BANK0 ] unsigned char 
 13547 ;; Return value:  Size  Location     Type
 13548 ;;                  1    wreg      void 
 13549 ;; Registers used:
 13550 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 13551 ;; Tracked objects:
 13552 ;;		On entry : 0/0
 13553 ;;		On exit  : 0/0
 13554 ;;		Unchanged: 0/0
 13555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13556 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13557 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13559 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13560 ;;Total ram usage:        1 bytes
 13561 ;; Hardware stack levels used:    1
 13562 ;; Hardware stack levels required when called:   11
 13563 ;; This function calls:
 13564 ;;		Nothing
 13565 ;; This function is called by:
 13566 ;;		_USBCtrlEPAllowDataStage
 13567 ;;		_USBCtrlTrfInHandler
 13568 ;; This function uses a non-reentrant model
 13569 ;;
 13570                           
 13571                           	psect	text53
 13572  003858                     __ptext53:
 13573                           	opt stack 0
 13574  003858                     _USBCtrlTrfTxService:
 13575                           	opt stack 11
 13576                           
 13577                           ;usb_device.c: 1791: uint8_t byteToSend;
 13578                           ;usb_device.c: 1795: byteToSend = 8;
 13579                           
 13580                           ; BSR set to: 0
 13581                           ;incstack = 0
 13582  003858  0E08               	movlw	8
 13583  00385A  0100               	movlb	0	; () banked
 13584  00385C  6F7D               	movwf	USBCtrlTrfTxService@byteToSend& (0+255),b
 13585                           
 13586                           ; BSR set to: 0
 13587                           ;usb_device.c: 1796: if(inPipes[0].wCount.Val < (uint8_t)8)
 13588  00385E  51B5               	movf	(_inPipes+5)& (0+255),w,b
 13589  003860  E110               	bnz	l12632
 13590  003862  0E08               	movlw	8
 13591  003864  5DB4               	subwf	(_inPipes+4)& (0+255),w,b
 13592  003866  B0D8               	btfsc	status,0,c
 13593  003868  D00C               	goto	l1697
 13594                           
 13595                           ; BSR set to: 0
 13596                           ;usb_device.c: 1797: {
 13597                           ;usb_device.c: 1798: byteToSend = inPipes[0].wCount.Val;
 13598  00386A  C0B4  F07D         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend
 13599                           
 13600                           ; BSR set to: 0
 13601                           ;usb_device.c: 1805: if(shortPacketStatus == 0)
 13602  00386E  51CB               	movf	_shortPacketStatus& (0+255),w,b
 13603  003870  A4D8               	btfss	status,2,c
 13604  003872  D002               	goto	l1695
 13605                           
 13606                           ; BSR set to: 0
 13607                           ;usb_device.c: 1806: {
 13608                           ;usb_device.c: 1807: shortPacketStatus = 1;
 13609  003874  0E01               	movlw	1
 13610  003876  D004               	goto	L12
 13611  003878                     l1695:
 13612                           
 13613                           ; BSR set to: 0
 13614                           ;usb_device.c: 1809: else if(shortPacketStatus == 1)
 13615                           
 13616                           ; BSR set to: 0
 13617  003878  05CB               	decf	_shortPacketStatus& (0+255),w,b
 13618  00387A  A4D8               	btfss	status,2,c
 13619  00387C  D002               	goto	l1697
 13620                           
 13621                           ; BSR set to: 0
 13622                           ;usb_device.c: 1810: {
 13623                           ;usb_device.c: 1811: shortPacketStatus = 2;
 13624  00387E  0E02               	movlw	2
 13625  003880                     L12:
 13626  003880  6FCB               	movwf	_shortPacketStatus& (0+255),b
 13627  003882                     l1697:
 13628  003882                     l12632:
 13629                           
 13630                           ; BSR set to: 0
 13631                           ;usb_device.c: 1812: }
 13632                           ;usb_device.c: 1813: }
 13633                           ;usb_device.c: 1817: inPipes[0].wCount.Val -= byteToSend;
 13634  003882  517D               	movf	USBCtrlTrfTxService@byteToSend& (0+255),w,b
 13635  003884  5FB4               	subwf	(_inPipes+4)& (0+255),f,b
 13636  003886  0E00               	movlw	0
 13637  003888  5BB5               	subwfb	(_inPipes+5)& (0+255),f,b
 13638                           
 13639                           ; BSR set to: 0
 13640                           ;usb_device.c: 1822: pBDTEntryIn[0]->CNT = byteToSend;
 13641  00388A  EE20 F001          	lfsr	2,1
 13642  00388E  51B6               	movf	_pBDTEntryIn& (0+255),w,b
 13643  003890  26D9               	addwf	fsr2l,f,c
 13644  003892  51B7               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 13645  003894  22DA               	addwfc	fsr2h,f,c
 13646  003896  C07D  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 13647                           
 13648                           ; BSR set to: 0
 13649                           ;usb_device.c: 1826: pDst = ( uint8_t*)CtrlTrfData;
 13650  00389A  0E38               	movlw	56
 13651  00389C  0102               	movlb	2	; () banked
 13652  00389E  6FD4               	movwf	_pDst& (0+255),b
 13653  0038A0  0E04               	movlw	4
 13654  0038A2  6FD5               	movwf	(_pDst+1)& (0+255),b
 13655                           
 13656                           ; BSR set to: 2
 13657                           ;usb_device.c: 1827: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 13658  0038A4  0100               	movlb	0	; () banked
 13659  0038A6  A1B3               	btfss	(_inPipes+3)& (0+255),0,b
 13660  0038A8  D01E               	goto	l1699
 13661  0038AA  D03E               	goto	l1703
 13662  0038AC                     
 13663                           ; BSR set to: 0
 13664                           ;usb_device.c: 1830: {
 13665                           ;usb_device.c: 1831: *pDst++ = *inPipes[0].pSrc.bRom++;
 13666                           
 13667                           ; BSR set to: 0
 13668  0038AC  C0B0  FFF6         	movff	_inPipes,tblptrl
 13669  0038B0  C0B1  FFF7         	movff	_inPipes+1,tblptrh
 13670  0038B4  6AF8               	clrf	tblptru,c
 13671  0038B6  C2D4  FFD9         	movff	_pDst,fsr2l
 13672  0038BA  C2D5  FFDA         	movff	_pDst+1,fsr2h
 13673  0038BE  0E0E               	movlw	(high __ramtop+-1)
 13674  0038C0  64F7               	cpfsgt	tblptrh,c
 13675  0038C2  D003               	bra	u11277
 13676  0038C4  0008               	tblrd		*
 13677  0038C6  50F5               	movf	tablat,w,c
 13678  0038C8  D005               	bra	u11270
 13679  0038CA                     u11277:
 13680  0038CA  CFF6 FFE9          	movff	tblptrl,fsr0l
 13681  0038CE  CFF7 FFEA          	movff	tblptrh,fsr0h
 13682  0038D2  50EF               	movf	indf0,w,c
 13683  0038D4                     u11270:
 13684  0038D4  6EDF               	movwf	indf2,c
 13685  0038D6  0100               	movlb	0	; () banked
 13686  0038D8  4BB0               	infsnz	_inPipes& (0+255),f,b
 13687  0038DA  2BB1               	incf	(_inPipes+1)& (0+255),f,b
 13688                           
 13689                           ; BSR set to: 0
 13690  0038DC  0102               	movlb	2	; () banked
 13691  0038DE  4BD4               	infsnz	_pDst& (0+255),f,b
 13692  0038E0  2BD5               	incf	(_pDst+1)& (0+255),f,b
 13693                           
 13694                           ; BSR set to: 2
 13695                           ;usb_device.c: 1832: byteToSend--;
 13696  0038E2  0100               	movlb	0	; () banked
 13697  0038E4  077D               	decf	USBCtrlTrfTxService@byteToSend& (0+255),f,b
 13698  0038E6                     l1699:
 13699                           
 13700                           ; BSR set to: 0
 13701                           
 13702                           ; BSR set to: 0
 13703  0038E6  517D               	movf	USBCtrlTrfTxService@byteToSend& (0+255),w,b
 13704  0038E8  B4D8               	btfsc	status,2,c
 13705  0038EA  0012               	return	
 13706  0038EC  D7DF               	goto	l1700
 13707  0038EE                     
 13708                           ; BSR set to: 0
 13709                           ;usb_device.c: 1838: {
 13710                           ;usb_device.c: 1839: *pDst++ = *inPipes[0].pSrc.bRam++;
 13711                           
 13712                           ; BSR set to: 0
 13713  0038EE  C0B0  FFF6         	movff	_inPipes,tblptrl
 13714  0038F2  C0B1  FFF7         	movff	_inPipes+1,tblptrh
 13715  0038F6  6AF8               	clrf	tblptru,c
 13716  0038F8  C2D4  FFD9         	movff	_pDst,fsr2l
 13717  0038FC  C2D5  FFDA         	movff	_pDst+1,fsr2h
 13718  003900  0E0E               	movlw	(high __ramtop+-1)
 13719  003902  64F7               	cpfsgt	tblptrh,c
 13720  003904  D003               	bra	u11297
 13721  003906  0008               	tblrd		*
 13722  003908  50F5               	movf	tablat,w,c
 13723  00390A  D005               	bra	u11290
 13724  00390C                     u11297:
 13725  00390C  CFF6 FFE9          	movff	tblptrl,fsr0l
 13726  003910  CFF7 FFEA          	movff	tblptrh,fsr0h
 13727  003914  50EF               	movf	indf0,w,c
 13728  003916                     u11290:
 13729  003916  6EDF               	movwf	indf2,c
 13730  003918  0100               	movlb	0	; () banked
 13731  00391A  4BB0               	infsnz	_inPipes& (0+255),f,b
 13732  00391C  2BB1               	incf	(_inPipes+1)& (0+255),f,b
 13733                           
 13734                           ; BSR set to: 0
 13735  00391E  0102               	movlb	2	; () banked
 13736  003920  4BD4               	infsnz	_pDst& (0+255),f,b
 13737  003922  2BD5               	incf	(_pDst+1)& (0+255),f,b
 13738                           
 13739                           ; BSR set to: 2
 13740                           ;usb_device.c: 1840: byteToSend--;
 13741  003924  0100               	movlb	0	; () banked
 13742  003926  077D               	decf	USBCtrlTrfTxService@byteToSend& (0+255),f,b
 13743  003928                     l1703:
 13744                           
 13745                           ; BSR set to: 0
 13746                           
 13747                           ; BSR set to: 0
 13748  003928  517D               	movf	USBCtrlTrfTxService@byteToSend& (0+255),w,b
 13749  00392A  B4D8               	btfsc	status,2,c
 13750  00392C  0012               	return	
 13751  00392E  D7DF               	goto	l1704
 13752  003930                     __end_of_USBCtrlTrfTxService:
 13753                           	opt stack 0
 13754                           tosu	equ	0xFFF
 13755                           tosh	equ	0xFFE
 13756                           tosl	equ	0xFFD
 13757                           pclath	equ	0xFFA
 13758                           tblptru	equ	0xFF8
 13759                           tblptrh	equ	0xFF7
 13760                           tblptrl	equ	0xFF6
 13761                           tablat	equ	0xFF5
 13762                           prodh	equ	0xFF4
 13763                           prodl	equ	0xFF3
 13764                           intcon	equ	0xFF2
 13765                           intcon2	equ	0xFF1
 13766                           intcon3	equ	0xFF0
 13767                           indf0	equ	0xFEF
 13768                           postinc0	equ	0xFEE
 13769                           plusw0	equ	0xFEB
 13770                           fsr0h	equ	0xFEA
 13771                           fsr0l	equ	0xFE9
 13772                           wreg	equ	0xFE8
 13773                           indf1	equ	0xFE7
 13774                           postinc1	equ	0xFE6
 13775                           postdec1	equ	0xFE5
 13776                           fsr1h	equ	0xFE2
 13777                           fsr1l	equ	0xFE1
 13778                           indf2	equ	0xFDF
 13779                           postinc2	equ	0xFDE
 13780                           postdec2	equ	0xFDD
 13781                           plusw2	equ	0xFDB
 13782                           fsr2h	equ	0xFDA
 13783                           fsr2l	equ	0xFD9
 13784                           status	equ	0xFD8
 13785                           
 13786 ;; *************** function _CDCTxService *****************
 13787 ;; Defined at:
 13788 ;;		line 839 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 13789 ;; Parameters:    Size  Location     Type
 13790 ;;		None
 13791 ;; Auto vars:     Size  Location     Type
 13792 ;;  byte_to_send    1   37[BANK0 ] unsigned char 
 13793 ;;  i               1   36[BANK0 ] unsigned char 
 13794 ;; Return value:  Size  Location     Type
 13795 ;;                  1    wreg      void 
 13796 ;; Registers used:
 13797 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13798 ;; Tracked objects:
 13799 ;;		On entry : 0/0
 13800 ;;		On exit  : 0/0
 13801 ;;		Unchanged: 0/0
 13802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13804 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13806 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13807 ;;Total ram usage:        2 bytes
 13808 ;; Hardware stack levels used:    1
 13809 ;; Hardware stack levels required when called:   12
 13810 ;; This function calls:
 13811 ;;		_USBTransferOnePacket
 13812 ;; This function is called by:
 13813 ;;		_UsbDevice_MainTask
 13814 ;; This function uses a non-reentrant model
 13815 ;;
 13816                           
 13817                           	psect	text54
 13818  002AD0                     __ptext54:
 13819                           	opt stack 0
 13820  002AD0                     _CDCTxService:
 13821                           	opt stack 15
 13822                           
 13823                           ;usb_device_cdc.c: 841: uint8_t byte_to_send;
 13824                           ;usb_device_cdc.c: 842: uint8_t i;
 13825                           ;usb_device_cdc.c: 844: ;
 13826                           ;usb_device_cdc.c: 846: {};
 13827                           ;usb_device_cdc.c: 848: if(((CDCDataInHandle != 0x0000) && ((*(volatile uint8_t*)CDCData
      +                          InHandle & 0x80) != 0x00)))
 13828                           
 13829                           ; BSR set to: 0
 13830                           ;incstack = 0
 13831  002AD0  0101               	movlb	1	; () banked
 13832  002AD2  51D1               	movf	_CDCDataInHandle& (0+255),w,b
 13833  002AD4  11D2               	iorwf	(_CDCDataInHandle+1)& (0+255),w,b
 13834  002AD6  B4D8               	btfsc	status,2,c
 13835  002AD8  D006               	goto	l1949
 13836                           
 13837                           ; BSR set to: 1
 13838  002ADA  C1D1  FFD9         	movff	_CDCDataInHandle,fsr2l
 13839  002ADE  C1D2  FFDA         	movff	_CDCDataInHandle+1,fsr2h
 13840  002AE2  BEDF               	btfsc	indf2,7,c
 13841  002AE4  0012               	return	
 13842  002AE6                     l1949:
 13843                           
 13844                           ; BSR set to: 1
 13845                           ;usb_device_cdc.c: 852: }
 13846                           ;usb_device_cdc.c: 859: if(cdc_trf_state == 3)
 13847                           
 13848                           ; BSR set to: 1
 13849  002AE6  0E03               	movlw	3
 13850  002AE8  0100               	movlb	0	; () banked
 13851  002AEA  19C5               	xorwf	_cdc_trf_state& (0+255),w,b
 13852  002AEC  A4D8               	btfss	status,2,c
 13853  002AEE  D002               	goto	l1951
 13854                           
 13855                           ; BSR set to: 0
 13856                           ;usb_device_cdc.c: 860: cdc_trf_state = 0;
 13857  002AF0  0E00               	movlw	0
 13858  002AF2  6FC5               	movwf	_cdc_trf_state& (0+255),b
 13859  002AF4                     l1951:
 13860                           
 13861                           ; BSR set to: 0
 13862                           ;usb_device_cdc.c: 865: if(cdc_trf_state == 0)
 13863  002AF4  51C5               	movf	_cdc_trf_state& (0+255),w,b
 13864  002AF6  B4D8               	btfsc	status,2,c
 13865  002AF8  0012               	return	
 13866                           
 13867                           ; BSR set to: 0
 13868                           ;usb_device_cdc.c: 869: }
 13869                           ;usb_device_cdc.c: 874: if(cdc_trf_state == 2)
 13870                           
 13871                           ; BSR set to: 0
 13872                           
 13873                           ; BSR set to: 0
 13874                           ;usb_device_cdc.c: 866: {
 13875                           ;usb_device_cdc.c: 867: ;
 13876                           ;usb_device_cdc.c: 868: return;
 13877  002AFA  0E02               	movlw	2
 13878  002AFC  19C5               	xorwf	_cdc_trf_state& (0+255),w,b
 13879  002AFE  A4D8               	btfss	status,2,c
 13880  002B00  D013               	goto	l1953
 13881                           
 13882                           ; BSR set to: 0
 13883                           ;usb_device_cdc.c: 875: {
 13884                           ;usb_device_cdc.c: 876: CDCDataInHandle = USBTransferOnePacket(2,1,(0),0);
 13885  002B02  0E01               	movlw	1
 13886  002B04  6F7D               	movwf	USBTransferOnePacket@dir& (0+255),b
 13887  002B06  0E00               	movlw	0
 13888  002B08  6F7E               	movwf	USBTransferOnePacket@data& (0+255),b
 13889  002B0A  0E00               	movlw	0
 13890  002B0C  6F7F               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 13891  002B0E  0E00               	movlw	0
 13892  002B10  6F80               	movwf	USBTransferOnePacket@len& (0+255),b
 13893  002B12  0E02               	movlw	2
 13894  002B14  ECF4  F020         	call	_USBTransferOnePacket
 13895  002B18  C07D  F1D1         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 13896  002B1C  C07E  F1D2         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 13897                           
 13898                           ;usb_device_cdc.c: 878: cdc_trf_state = 3;
 13899  002B20  0E03               	movlw	3
 13900  002B22  0100               	movlb	0	; () banked
 13901  002B24  6FC5               	movwf	_cdc_trf_state& (0+255),b
 13902                           
 13903                           ;usb_device_cdc.c: 879: }
 13904  002B26  0012               	return	
 13905  002B28                     l1953:
 13906                           
 13907                           ; BSR set to: 0
 13908                           ;usb_device_cdc.c: 880: else if(cdc_trf_state == 1)
 13909                           
 13910                           ; BSR set to: 0
 13911  002B28  05C5               	decf	_cdc_trf_state& (0+255),w,b
 13912  002B2A  A4D8               	btfss	status,2,c
 13913  002B2C  0012               	return	
 13914                           
 13915                           ; BSR set to: 0
 13916                           ;usb_device_cdc.c: 881: {
 13917                           ;usb_device_cdc.c: 885: if(cdc_tx_len > sizeof(cdc_data_tx))
 13918  002B2E  0E40               	movlw	64
 13919  002B30  65C4               	cpfsgt	_cdc_tx_len& (0+255),b
 13920  002B32  D003               	goto	l1956
 13921                           
 13922                           ; BSR set to: 0
 13923                           ;usb_device_cdc.c: 886: byte_to_send = sizeof(cdc_data_tx);
 13924  002B34  0E40               	movlw	64
 13925  002B36  6F85               	movwf	CDCTxService@byte_to_send& (0+255),b
 13926  002B38  D002               	goto	l1957
 13927  002B3A                     l1956:
 13928                           
 13929                           ; BSR set to: 0
 13930                           ;usb_device_cdc.c: 887: else
 13931                           ;usb_device_cdc.c: 888: byte_to_send = cdc_tx_len;
 13932  002B3A  C0C4  F085         	movff	_cdc_tx_len,CDCTxService@byte_to_send
 13933  002B3E                     l1957:
 13934                           
 13935                           ; BSR set to: 0
 13936                           ;usb_device_cdc.c: 893: cdc_tx_len = cdc_tx_len - byte_to_send;
 13937                           
 13938                           ; BSR set to: 0
 13939  002B3E  5185               	movf	CDCTxService@byte_to_send& (0+255),w,b
 13940  002B40  0800               	sublw	0
 13941  002B42  25C4               	addwf	_cdc_tx_len& (0+255),w,b
 13942  002B44  6FC4               	movwf	_cdc_tx_len& (0+255),b
 13943                           
 13944                           ;usb_device_cdc.c: 895: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
 13945  002B46  0EB6               	movlw	low _cdc_data_tx
 13946  002B48  0102               	movlb	2	; () banked
 13947  002B4A  6FC8               	movwf	_pCDCDst& (0+255),b
 13948  002B4C  0E07               	movlw	high _cdc_data_tx
 13949  002B4E  6FC9               	movwf	(_pCDCDst+1)& (0+255),b
 13950                           
 13951                           ; BSR set to: 2
 13952                           ;usb_device_cdc.c: 897: i = byte_to_send;
 13953  002B50  C085  F084         	movff	CDCTxService@byte_to_send,CDCTxService@i
 13954                           
 13955                           ; BSR set to: 2
 13956                           ;usb_device_cdc.c: 898: if(cdc_mem_type == 0x00)
 13957  002B54  0101               	movlb	1	; () banked
 13958  002B56  51DF               	movf	_cdc_mem_type& (0+255),w,b
 13959  002B58  B4D8               	btfsc	status,2,c
 13960  002B5A  D01D               	goto	l1959
 13961  002B5C  D03D               	goto	l1963
 13962  002B5E                     
 13963                           ;usb_device_cdc.c: 901: {
 13964                           ;usb_device_cdc.c: 902: *pCDCDst.bRam = *pCDCSrc.bRom;
 13965                           
 13966                           ; BSR set to: 1
 13967  002B5E  C2CB  FFF6         	movff	_pCDCSrc,tblptrl
 13968  002B62  C2CC  FFF7         	movff	_pCDCSrc+1,tblptrh
 13969  002B66  6AF8               	clrf	tblptru,c
 13970  002B68  C2C8  FFD9         	movff	_pCDCDst,fsr2l
 13971  002B6C  C2C9  FFDA         	movff	_pCDCDst+1,fsr2h
 13972  002B70  0E0E               	movlw	(high __ramtop+-1)
 13973  002B72  64F7               	cpfsgt	tblptrh,c
 13974  002B74  D003               	bra	u15287
 13975  002B76  0008               	tblrd		*
 13976  002B78  50F5               	movf	tablat,w,c
 13977  002B7A  D005               	bra	u15280
 13978  002B7C                     u15287:
 13979  002B7C  CFF6 FFE9          	movff	tblptrl,fsr0l
 13980  002B80  CFF7 FFEA          	movff	tblptrh,fsr0h
 13981  002B84  50EF               	movf	indf0,w,c
 13982  002B86                     u15280:
 13983  002B86  6EDF               	movwf	indf2,c
 13984                           
 13985                           ;usb_device_cdc.c: 903: pCDCDst.bRam++;
 13986  002B88  0102               	movlb	2	; () banked
 13987  002B8A  4BC8               	infsnz	_pCDCDst& (0+255),f,b
 13988  002B8C  2BC9               	incf	(_pCDCDst+1)& (0+255),f,b
 13989                           
 13990                           ; BSR set to: 2
 13991                           ;usb_device_cdc.c: 904: pCDCSrc.bRom++;
 13992  002B8E  4BCB               	infsnz	_pCDCSrc& (0+255),f,b
 13993  002B90  2BCC               	incf	(_pCDCSrc+1)& (0+255),f,b
 13994                           
 13995                           ; BSR set to: 2
 13996                           ;usb_device_cdc.c: 905: i--;
 13997  002B92  0100               	movlb	0	; () banked
 13998  002B94  0784               	decf	CDCTxService@i& (0+255),f,b
 13999  002B96                     l1959:
 14000                           
 14001                           ; BSR set to: 0
 14002  002B96  0100               	movlb	0	; () banked
 14003  002B98  5184               	movf	CDCTxService@i& (0+255),w,b
 14004  002B9A  B4D8               	btfsc	status,2,c
 14005  002B9C  D021               	goto	u15310
 14006  002B9E  D7DF               	goto	l1960
 14007  002BA0                     
 14008                           ; BSR set to: 0
 14009                           ;usb_device_cdc.c: 911: {
 14010                           ;usb_device_cdc.c: 912: *pCDCDst.bRam = *pCDCSrc.bRam;
 14011                           
 14012                           ; BSR set to: 0
 14013  002BA0  C2CB  FFF6         	movff	_pCDCSrc,tblptrl
 14014  002BA4  C2CC  FFF7         	movff	_pCDCSrc+1,tblptrh
 14015  002BA8  6AF8               	clrf	tblptru,c
 14016  002BAA  C2C8  FFD9         	movff	_pCDCDst,fsr2l
 14017  002BAE  C2C9  FFDA         	movff	_pCDCDst+1,fsr2h
 14018  002BB2  0E0E               	movlw	(high __ramtop+-1)
 14019  002BB4  64F7               	cpfsgt	tblptrh,c
 14020  002BB6  D003               	bra	u15307
 14021  002BB8  0008               	tblrd		*
 14022  002BBA  50F5               	movf	tablat,w,c
 14023  002BBC  D005               	bra	u15300
 14024  002BBE                     u15307:
 14025  002BBE  CFF6 FFE9          	movff	tblptrl,fsr0l
 14026  002BC2  CFF7 FFEA          	movff	tblptrh,fsr0h
 14027  002BC6  50EF               	movf	indf0,w,c
 14028  002BC8                     u15300:
 14029  002BC8  6EDF               	movwf	indf2,c
 14030                           
 14031                           ;usb_device_cdc.c: 913: pCDCDst.bRam++;
 14032  002BCA  0102               	movlb	2	; () banked
 14033  002BCC  4BC8               	infsnz	_pCDCDst& (0+255),f,b
 14034  002BCE  2BC9               	incf	(_pCDCDst+1)& (0+255),f,b
 14035                           
 14036                           ; BSR set to: 2
 14037                           ;usb_device_cdc.c: 914: pCDCSrc.bRam++;
 14038  002BD0  4BCB               	infsnz	_pCDCSrc& (0+255),f,b
 14039  002BD2  2BCC               	incf	(_pCDCSrc+1)& (0+255),f,b
 14040                           
 14041                           ; BSR set to: 2
 14042                           ;usb_device_cdc.c: 915: i--;
 14043  002BD4  0100               	movlb	0	; () banked
 14044  002BD6  0784               	decf	CDCTxService@i& (0+255),f,b
 14045  002BD8                     l1963:
 14046                           
 14047                           ; BSR set to: 0
 14048  002BD8  0100               	movlb	0	; () banked
 14049  002BDA  5184               	movf	CDCTxService@i& (0+255),w,b
 14050  002BDC  A4D8               	btfss	status,2,c
 14051  002BDE  D7E0               	goto	l1964
 14052  002BE0                     u15310:
 14053                           
 14054                           ; BSR set to: 0
 14055                           ;usb_device_cdc.c: 916: }
 14056                           ;usb_device_cdc.c: 917: }
 14057                           ;usb_device_cdc.c: 923: if(cdc_tx_len == 0)
 14058                           
 14059                           ; BSR set to: 0
 14060                           
 14061                           ; BSR set to: 0
 14062  002BE0  51C4               	movf	_cdc_tx_len& (0+255),w,b
 14063  002BE2  A4D8               	btfss	status,2,c
 14064  002BE4  D008               	goto	l1968
 14065                           
 14066                           ; BSR set to: 0
 14067                           ;usb_device_cdc.c: 924: {
 14068                           ;usb_device_cdc.c: 925: if(byte_to_send == 64)
 14069  002BE6  0E40               	movlw	64
 14070  002BE8  1985               	xorwf	CDCTxService@byte_to_send& (0+255),w,b
 14071  002BEA  A4D8               	btfss	status,2,c
 14072  002BEC  D002               	goto	l1967
 14073                           
 14074                           ; BSR set to: 0
 14075                           ;usb_device_cdc.c: 926: cdc_trf_state = 2;
 14076  002BEE  0E02               	movlw	2
 14077  002BF0  D001               	goto	L13
 14078  002BF2                     l1967:
 14079                           
 14080                           ; BSR set to: 0
 14081                           ;usb_device_cdc.c: 927: else
 14082                           ;usb_device_cdc.c: 928: cdc_trf_state = 3;
 14083                           
 14084                           ; BSR set to: 0
 14085  002BF2  0E03               	movlw	3
 14086  002BF4                     L13:
 14087  002BF4  6FC5               	movwf	_cdc_trf_state& (0+255),b
 14088  002BF6                     l1968:
 14089                           
 14090                           ; BSR set to: 0
 14091                           ;usb_device_cdc.c: 929: }
 14092                           ;usb_device_cdc.c: 930: CDCDataInHandle = USBTransferOnePacket(2,1,(uint8_t*)&cdc_data_t
      +                          x,byte_to_send);
 14093                           
 14094                           ; BSR set to: 0
 14095                           
 14096                           ; BSR set to: 0
 14097  002BF6  0E01               	movlw	1
 14098  002BF8  6F7D               	movwf	USBTransferOnePacket@dir& (0+255),b
 14099  002BFA  0EB6               	movlw	low _cdc_data_tx
 14100  002BFC  6F7E               	movwf	USBTransferOnePacket@data& (0+255),b
 14101  002BFE  0E07               	movlw	high _cdc_data_tx
 14102  002C00  6F7F               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 14103  002C02  C085  F080         	movff	CDCTxService@byte_to_send,USBTransferOnePacket@len
 14104  002C06  0E02               	movlw	2
 14105  002C08  ECF4  F020         	call	_USBTransferOnePacket
 14106  002C0C  C07D  F1D1         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 14107  002C10  C07E  F1D2         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 14108  002C14  0012               	return	
 14109  002C16                     __end_of_CDCTxService:
 14110                           	opt stack 0
 14111                           tosu	equ	0xFFF
 14112                           tosh	equ	0xFFE
 14113                           tosl	equ	0xFFD
 14114                           pclath	equ	0xFFA
 14115                           tblptru	equ	0xFF8
 14116                           tblptrh	equ	0xFF7
 14117                           tblptrl	equ	0xFF6
 14118                           tablat	equ	0xFF5
 14119                           prodh	equ	0xFF4
 14120                           prodl	equ	0xFF3
 14121                           intcon	equ	0xFF2
 14122                           intcon2	equ	0xFF1
 14123                           intcon3	equ	0xFF0
 14124                           indf0	equ	0xFEF
 14125                           postinc0	equ	0xFEE
 14126                           plusw0	equ	0xFEB
 14127                           fsr0h	equ	0xFEA
 14128                           fsr0l	equ	0xFE9
 14129                           wreg	equ	0xFE8
 14130                           indf1	equ	0xFE7
 14131                           postinc1	equ	0xFE6
 14132                           postdec1	equ	0xFE5
 14133                           fsr1h	equ	0xFE2
 14134                           fsr1l	equ	0xFE1
 14135                           indf2	equ	0xFDF
 14136                           postinc2	equ	0xFDE
 14137                           postdec2	equ	0xFDD
 14138                           plusw2	equ	0xFDB
 14139                           fsr2h	equ	0xFDA
 14140                           fsr2l	equ	0xFD9
 14141                           status	equ	0xFD8
 14142                           
 14143 ;; *************** function _Term_MainSm *****************
 14144 ;; Defined at:
 14145 ;;		line 707 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/term.c"
 14146 ;; Parameters:    Size  Location     Type
 14147 ;;		None
 14148 ;; Auto vars:     Size  Location     Type
 14149 ;;  FwkBuildStr     4   58[BANK1 ] unsigned char [4]
 14150 ;;  FwkMinorStr     4   54[BANK1 ] unsigned char [4]
 14151 ;;  FwkMajorStr     4   50[BANK1 ] unsigned char [4]
 14152 ;;  FwkBuildYear    4    0        unsigned char [4]
 14153 ;;  FwkBuildMont    4    0        unsigned char [4]
 14154 ;;  FwkBuildDayS    4    0        unsigned char [4]
 14155 ;; Return value:  Size  Location     Type
 14156 ;;                  1    wreg      void 
 14157 ;; Registers used:
 14158 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14159 ;; Tracked objects:
 14160 ;;		On entry : 0/0
 14161 ;;		On exit  : 0/0
 14162 ;;		Unchanged: 0/0
 14163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14164 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14165 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14166 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14167 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14168 ;;Total ram usage:       12 bytes
 14169 ;; Hardware stack levels used:    1
 14170 ;; Hardware stack levels required when called:   16
 14171 ;; This function calls:
 14172 ;;		_OsTmr_GetTimerStatus
 14173 ;;		_OsTmr_StartTimer
 14174 ;;		_Terminal
 14175 ;;		_memset
 14176 ;;		_putUSBUSART
 14177 ;;		_sprintf
 14178 ;;		_strcat
 14179 ;;		_strcpy
 14180 ;;		_strlen
 14181 ;;		_utoa
 14182 ;; This function is called by:
 14183 ;;		_Term_MainTask
 14184 ;; This function uses a non-reentrant model
 14185 ;;
 14186                           
 14187                           	psect	text55
 14188  00136E                     __ptext55:
 14189                           	opt stack 0
 14190  00136E                     _Term_MainSm:
 14191                           	opt stack 11
 14192                           
 14193                           ;term.c: 709: static TermMainSmStateType TermMainSmState = Term_StartTmr;
 14194                           ;term.c: 710: static SwTimerType TermDelay = { 1u, SwTimerExpired, 0, 0, DelayNotExpired
      +                          , };
 14195                           ;term.c: 711: static UINT8 Data[50];
 14196                           ;term.c: 712: UINT8 FwkMajorStr[4];
 14197                           ;term.c: 713: UINT8 FwkMinorStr[4];
 14198                           ;term.c: 714: UINT8 FwkBuildStr[4];
 14199                           ;term.c: 715: UINT8 FwkBuildDayStr[4];
 14200                           ;term.c: 716: UINT8 FwkBuildMonthStr[4];
 14201                           ;term.c: 717: UINT8 FwkBuildYearStr[4];
 14202                           ;term.c: 719: switch (TermMainSmState)
 14203                           
 14204                           ;incstack = 0
 14205  00136E  D133               	goto	l2453
 14206  001370                     
 14207                           ;term.c: 723: OsTmr_StartTimer(&TermDelay,2000);
 14208  001370  0ED4               	movlw	low Term_MainSm@TermDelay
 14209  001372  0100               	movlb	0	; () banked
 14210  001374  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 14211  001376  0E03               	movlw	high Term_MainSm@TermDelay
 14212  001378  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 14213  00137A  0ED0               	movlw	208
 14214  00137C  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 14215  00137E  0E07               	movlw	7
 14216  001380  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 14217  001382  0E00               	movlw	0
 14218  001384  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 14219  001386  0E00               	movlw	0
 14220  001388  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 14221  00138A  ECF8  F02A         	call	_OsTmr_StartTimer	;wreg free
 14222                           
 14223                           ;term.c: 725: TermMainSmState = Term_InitDelay;
 14224  00138E  0E01               	movlw	1
 14225  001390  0102               	movlb	2	; () banked
 14226  001392  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 14227                           
 14228                           ;term.c: 726: break;
 14229  001394  0012               	return	
 14230  001396                     
 14231                           ; BSR set to: 2
 14232                           ;term.c: 730: if (OsTmr_GetTimerStatus(&TermDelay) == SwTimerExpired)
 14233                           
 14234                           ; BSR set to: 2
 14235  001396  0ED4               	movlw	low Term_MainSm@TermDelay
 14236  001398  0100               	movlb	0	; () banked
 14237  00139A  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 14238  00139C  0E03               	movlw	high Term_MainSm@TermDelay
 14239  00139E  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 14240  0013A0  EC5C  F026         	call	_OsTmr_GetTimerStatus	;wreg free
 14241  0013A4  06E8               	decf	wreg,f,c
 14242  0013A6  A4D8               	btfss	status,2,c
 14243  0013A8  0012               	return	
 14244                           
 14245                           ;term.c: 731: {
 14246                           ;term.c: 733: TermMainSmState = Term_InitState;
 14247  0013AA  0E02               	movlw	2
 14248  0013AC  0102               	movlb	2	; () banked
 14249  0013AE  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 14250                           
 14251                           ; BSR set to: 2
 14252                           ;term.c: 734: }
 14253                           ;term.c: 735: break;
 14254  0013B0  0012               	return	
 14255  0013B2                     
 14256                           ; BSR set to: 2
 14257                           ;term.c: 739: if((USBDeviceState < CONFIGURED_STATE)||(UCONbits.SUSPND == 1))
 14258                           
 14259                           ; BSR set to: 2
 14260  0013B2  0E1F               	movlw	31
 14261  0013B4  0100               	movlb	0	; () banked
 14262  0013B6  65CC               	cpfsgt	_USBDeviceState& (0+255),b
 14263  0013B8  0012               	return	
 14264                           
 14265                           ; BSR set to: 0
 14266  0013BA  B265               	btfsc	3941,1,c	;volatile
 14267  0013BC  0012               	return	
 14268                           
 14269                           ; BSR set to: 0
 14270                           ;term.c: 743: else
 14271                           ;term.c: 744: {
 14272                           ;term.c: 746: TermMainSmState = Term_WelcomeState;
 14273                           
 14274                           ; BSR set to: 0
 14275                           
 14276                           ; BSR set to: 0
 14277                           ;term.c: 740: {
 14278                           ;term.c: 742: }
 14279  0013BE  0E03               	movlw	3
 14280  0013C0  0102               	movlb	2	; () banked
 14281  0013C2  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 14282                           
 14283                           ; BSR set to: 2
 14284                           ;term.c: 747: }
 14285                           ;term.c: 748: break;
 14286  0013C4  0012               	return	
 14287  0013C6                     
 14288                           ; BSR set to: 2
 14289                           ;term.c: 752: if((cdc_trf_state == 0))
 14290                           
 14291                           ; BSR set to: 2
 14292  0013C6  0100               	movlb	0	; () banked
 14293  0013C8  51C5               	movf	_cdc_trf_state& (0+255),w,b
 14294  0013CA  A4D8               	btfss	status,2,c
 14295  0013CC  0012               	return	
 14296                           
 14297                           ; BSR set to: 0
 14298                           ;term.c: 753: {
 14299                           ;term.c: 755: putUSBUSART((void*)Welcome,(sizeof(Welcome) - 1));
 14300  0013CE  0E22               	movlw	low _Welcome
 14301  0013D0  6F83               	movwf	putUSBUSART@data& (0+255),b
 14302  0013D2  0EFD               	movlw	high _Welcome
 14303  0013D4  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 14304  0013D6  0E88               	movlw	136
 14305  0013D8  6F85               	movwf	putUSBUSART@length& (0+255),b
 14306  0013DA  EC96  F032         	call	_putUSBUSART	;wreg free
 14307                           
 14308                           ;term.c: 757: TermMainSmState = Term_InstDescState;
 14309  0013DE  0E04               	movlw	4
 14310  0013E0  0102               	movlb	2	; () banked
 14311  0013E2  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 14312                           
 14313                           ; BSR set to: 2
 14314                           ;term.c: 758: }
 14315                           ;term.c: 759: break;
 14316  0013E4  0012               	return	
 14317  0013E6                     
 14318                           ; BSR set to: 2
 14319                           ;term.c: 763: if((cdc_trf_state == 0))
 14320                           
 14321                           ; BSR set to: 2
 14322  0013E6  0100               	movlb	0	; () banked
 14323  0013E8  51C5               	movf	_cdc_trf_state& (0+255),w,b
 14324  0013EA  A4D8               	btfss	status,2,c
 14325  0013EC  0012               	return	
 14326                           
 14327                           ; BSR set to: 0
 14328                           ;term.c: 764: {
 14329                           ;term.c: 766: putUSBUSART((void*)MsgFormat,(sizeof(MsgFormat) - 1));
 14330  0013EE  0E32               	movlw	low _MsgFormat
 14331  0013F0  6F83               	movwf	putUSBUSART@data& (0+255),b
 14332  0013F2  0EFC               	movlw	high _MsgFormat
 14333  0013F4  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 14334  0013F6  0EEF               	movlw	239
 14335  0013F8  6F85               	movwf	putUSBUSART@length& (0+255),b
 14336  0013FA  EC96  F032         	call	_putUSBUSART	;wreg free
 14337                           
 14338                           ;term.c: 768: TermMainSmState = Term_FwkVerState;
 14339  0013FE  0E05               	movlw	5
 14340  001400  0102               	movlb	2	; () banked
 14341  001402  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 14342                           
 14343                           ; BSR set to: 2
 14344                           ;term.c: 769: }
 14345                           ;term.c: 770: break;
 14346  001404  0012               	return	
 14347  001406                     
 14348                           ; BSR set to: 2
 14349                           ;term.c: 774: if((cdc_trf_state == 0))
 14350                           
 14351                           ; BSR set to: 2
 14352  001406  0100               	movlb	0	; () banked
 14353  001408  51C5               	movf	_cdc_trf_state& (0+255),w,b
 14354  00140A  A4D8               	btfss	status,2,c
 14355  00140C  0012               	return	
 14356                           
 14357                           ; BSR set to: 0
 14358                           ;term.c: 775: {
 14359                           ;term.c: 777: memset(Data,0,50);
 14360  00140E  0E63               	movlw	low Term_MainSm@Data
 14361  001410  6F7D               	movwf	memset@p1& (0+255),b
 14362  001412  0E04               	movlw	high Term_MainSm@Data
 14363  001414  6F7E               	movwf	(memset@p1+1)& (0+255),b
 14364  001416  0E00               	movlw	0
 14365  001418  6F80               	movwf	(memset@c+1)& (0+255),b
 14366  00141A  0E00               	movlw	0
 14367  00141C  6F7F               	movwf	memset@c& (0+255),b
 14368  00141E  0E00               	movlw	0
 14369  001420  6F82               	movwf	(memset@n+1)& (0+255),b
 14370  001422  0E32               	movlw	50
 14371  001424  6F81               	movwf	memset@n& (0+255),b
 14372  001426  EC2B  F031         	call	_memset	;wreg free
 14373                           
 14374                           ;term.c: 779: utoa(FwkMajorStr,1,10);
 14375  00142A  0E32               	movlw	low Term_MainSm@FwkMajorStr
 14376  00142C  0100               	movlb	0	; () banked
 14377  00142E  6F8A               	movwf	utoa@buf& (0+255),b
 14378  001430  0E01               	movlw	high Term_MainSm@FwkMajorStr
 14379  001432  6F8B               	movwf	(utoa@buf+1)& (0+255),b
 14380  001434  0E00               	movlw	0
 14381  001436  6F8D               	movwf	(utoa@val+1)& (0+255),b
 14382  001438  0E01               	movlw	1
 14383  00143A  6F8C               	movwf	utoa@val& (0+255),b
 14384  00143C  0E00               	movlw	0
 14385  00143E  6F8F               	movwf	(utoa@base+1)& (0+255),b
 14386  001440  0E0A               	movlw	10
 14387  001442  6F8E               	movwf	utoa@base& (0+255),b
 14388  001444  ECB1  F022         	call	_utoa	;wreg free
 14389                           
 14390                           ;term.c: 780: utoa(FwkMinorStr,2,10);
 14391  001448  0E36               	movlw	low Term_MainSm@FwkMinorStr
 14392  00144A  0100               	movlb	0	; () banked
 14393  00144C  6F8A               	movwf	utoa@buf& (0+255),b
 14394  00144E  0E01               	movlw	high Term_MainSm@FwkMinorStr
 14395  001450  6F8B               	movwf	(utoa@buf+1)& (0+255),b
 14396  001452  0E00               	movlw	0
 14397  001454  6F8D               	movwf	(utoa@val+1)& (0+255),b
 14398  001456  0E02               	movlw	2
 14399  001458  6F8C               	movwf	utoa@val& (0+255),b
 14400  00145A  0E00               	movlw	0
 14401  00145C  6F8F               	movwf	(utoa@base+1)& (0+255),b
 14402  00145E  0E0A               	movlw	10
 14403  001460  6F8E               	movwf	utoa@base& (0+255),b
 14404  001462  ECB1  F022         	call	_utoa	;wreg free
 14405                           
 14406                           ;term.c: 781: utoa(FwkBuildStr,0,10);
 14407  001466  0E3A               	movlw	low Term_MainSm@FwkBuildStr
 14408  001468  0100               	movlb	0	; () banked
 14409  00146A  6F8A               	movwf	utoa@buf& (0+255),b
 14410  00146C  0E01               	movlw	high Term_MainSm@FwkBuildStr
 14411  00146E  6F8B               	movwf	(utoa@buf+1)& (0+255),b
 14412  001470  0E00               	movlw	0
 14413  001472  6F8D               	movwf	(utoa@val+1)& (0+255),b
 14414  001474  0E00               	movlw	0
 14415  001476  6F8C               	movwf	utoa@val& (0+255),b
 14416  001478  0E00               	movlw	0
 14417  00147A  6F8F               	movwf	(utoa@base+1)& (0+255),b
 14418  00147C  0E0A               	movlw	10
 14419  00147E  6F8E               	movwf	utoa@base& (0+255),b
 14420  001480  ECB1  F022         	call	_utoa	;wreg free
 14421                           
 14422                           ;term.c: 782: strcpy(Data,"Framework Version: ");
 14423  001484  0E63               	movlw	low Term_MainSm@Data
 14424  001486  0100               	movlb	0	; () banked
 14425  001488  6F7D               	movwf	strcpy@to& (0+255),b
 14426  00148A  0E04               	movlw	high Term_MainSm@Data
 14427  00148C  6F7E               	movwf	(strcpy@to+1)& (0+255),b
 14428  00148E  0ED2               	movlw	low STR_23
 14429  001490  6F7F               	movwf	strcpy@from& (0+255),b
 14430  001492  0EFE               	movlw	high STR_23
 14431  001494  6F80               	movwf	(strcpy@from+1)& (0+255),b
 14432  001496  ECFA  F030         	call	_strcpy	;wreg free
 14433                           
 14434                           ;term.c: 783: strcat(Data,FwkMajorStr);
 14435  00149A  0E63               	movlw	low Term_MainSm@Data
 14436  00149C  0100               	movlb	0	; () banked
 14437  00149E  6F7D               	movwf	strcat@to& (0+255),b
 14438  0014A0  0E04               	movlw	high Term_MainSm@Data
 14439  0014A2  6F7E               	movwf	(strcat@to+1)& (0+255),b
 14440  0014A4  0E32               	movlw	low Term_MainSm@FwkMajorStr
 14441  0014A6  6F7F               	movwf	strcat@from& (0+255),b
 14442  0014A8  0E01               	movlw	high Term_MainSm@FwkMajorStr
 14443  0014AA  6F80               	movwf	(strcat@from+1)& (0+255),b
 14444  0014AC  EC27  F02B         	call	_strcat	;wreg free
 14445                           
 14446                           ;term.c: 784: strcat(Data,".");
 14447  0014B0  0E63               	movlw	low Term_MainSm@Data
 14448  0014B2  0100               	movlb	0	; () banked
 14449  0014B4  6F7D               	movwf	strcat@to& (0+255),b
 14450  0014B6  0E04               	movlw	high Term_MainSm@Data
 14451  0014B8  6F7E               	movwf	(strcat@to+1)& (0+255),b
 14452  0014BA  0EF5               	movlw	low STR_24
 14453  0014BC  6F7F               	movwf	strcat@from& (0+255),b
 14454  0014BE  0EFF               	movlw	high STR_24
 14455  0014C0  6F80               	movwf	(strcat@from+1)& (0+255),b
 14456  0014C2  EC27  F02B         	call	_strcat	;wreg free
 14457                           
 14458                           ;term.c: 785: strcat(Data,FwkMinorStr);
 14459  0014C6  0E63               	movlw	low Term_MainSm@Data
 14460  0014C8  0100               	movlb	0	; () banked
 14461  0014CA  6F7D               	movwf	strcat@to& (0+255),b
 14462  0014CC  0E04               	movlw	high Term_MainSm@Data
 14463  0014CE  6F7E               	movwf	(strcat@to+1)& (0+255),b
 14464  0014D0  0E36               	movlw	low Term_MainSm@FwkMinorStr
 14465  0014D2  6F7F               	movwf	strcat@from& (0+255),b
 14466  0014D4  0E01               	movlw	high Term_MainSm@FwkMinorStr
 14467  0014D6  6F80               	movwf	(strcat@from+1)& (0+255),b
 14468  0014D8  EC27  F02B         	call	_strcat	;wreg free
 14469                           
 14470                           ;term.c: 786: strcat(Data,".");
 14471  0014DC  0E63               	movlw	low Term_MainSm@Data
 14472  0014DE  0100               	movlb	0	; () banked
 14473  0014E0  6F7D               	movwf	strcat@to& (0+255),b
 14474  0014E2  0E04               	movlw	high Term_MainSm@Data
 14475  0014E4  6F7E               	movwf	(strcat@to+1)& (0+255),b
 14476  0014E6  0EF5               	movlw	low STR_24
 14477  0014E8  6F7F               	movwf	strcat@from& (0+255),b
 14478  0014EA  0EFF               	movlw	high STR_24
 14479  0014EC  6F80               	movwf	(strcat@from+1)& (0+255),b
 14480  0014EE  EC27  F02B         	call	_strcat	;wreg free
 14481                           
 14482                           ;term.c: 787: strcat(Data,FwkBuildStr);
 14483  0014F2  0E63               	movlw	low Term_MainSm@Data
 14484  0014F4  0100               	movlb	0	; () banked
 14485  0014F6  6F7D               	movwf	strcat@to& (0+255),b
 14486  0014F8  0E04               	movlw	high Term_MainSm@Data
 14487  0014FA  6F7E               	movwf	(strcat@to+1)& (0+255),b
 14488  0014FC  0E3A               	movlw	low Term_MainSm@FwkBuildStr
 14489  0014FE  6F7F               	movwf	strcat@from& (0+255),b
 14490  001500  0E01               	movlw	high Term_MainSm@FwkBuildStr
 14491  001502  6F80               	movwf	(strcat@from+1)& (0+255),b
 14492  001504  EC27  F02B         	call	_strcat	;wreg free
 14493                           
 14494                           ;term.c: 788: strcat(Data,"\r\n");
 14495  001508  0E63               	movlw	low Term_MainSm@Data
 14496  00150A  0100               	movlb	0	; () banked
 14497  00150C  6F7D               	movwf	strcat@to& (0+255),b
 14498  00150E  0E04               	movlw	high Term_MainSm@Data
 14499  001510  6F7E               	movwf	(strcat@to+1)& (0+255),b
 14500  001512  0E86               	movlw	low (STR_21+39)
 14501  001514  6F7F               	movwf	strcat@from& (0+255),b
 14502  001516  0EFE               	movlw	high (STR_21+39)
 14503  001518  6F80               	movwf	(strcat@from+1)& (0+255),b
 14504  00151A  EC27  F02B         	call	_strcat	;wreg free
 14505                           
 14506                           ;term.c: 790: putUSBUSART((void*)Data,strlen(Data));
 14507  00151E  0E63               	movlw	low Term_MainSm@Data
 14508  001520  0100               	movlb	0	; () banked
 14509  001522  6F83               	movwf	putUSBUSART@data& (0+255),b
 14510  001524  0E04               	movlw	high Term_MainSm@Data
 14511  001526  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 14512  001528  0E63               	movlw	low Term_MainSm@Data
 14513  00152A  6F7D               	movwf	strlen@s& (0+255),b
 14514  00152C  0E04               	movlw	high Term_MainSm@Data
 14515  00152E  6F7E               	movwf	(strlen@s+1)& (0+255),b
 14516  001530  ECDC  F02F         	call	_strlen	;wreg free
 14517  001534  0100               	movlb	0	; () banked
 14518  001536  517D               	movf	?_strlen& (0+255),w,b
 14519  001538  6F85               	movwf	putUSBUSART@length& (0+255),b
 14520  00153A  EC96  F032         	call	_putUSBUSART	;wreg free
 14521                           
 14522                           ;term.c: 792: TermMainSmState = Term_FwkBuildDateState;
 14523  00153E  0E06               	movlw	6
 14524  001540  0102               	movlb	2	; () banked
 14525  001542  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 14526                           
 14527                           ; BSR set to: 2
 14528                           ;term.c: 793: }
 14529                           ;term.c: 794: break;
 14530  001544  0012               	return	
 14531  001546                     
 14532                           ; BSR set to: 2
 14533                           ;term.c: 798: if((cdc_trf_state == 0))
 14534                           
 14535                           ; BSR set to: 2
 14536  001546  0100               	movlb	0	; () banked
 14537  001548  51C5               	movf	_cdc_trf_state& (0+255),w,b
 14538  00154A  A4D8               	btfss	status,2,c
 14539  00154C  0012               	return	
 14540                           
 14541                           ; BSR set to: 0
 14542                           ;term.c: 799: {
 14543                           ;term.c: 801: memset(Data,0,50);
 14544  00154E  0E63               	movlw	low Term_MainSm@Data
 14545  001550  6F7D               	movwf	memset@p1& (0+255),b
 14546  001552  0E04               	movlw	high Term_MainSm@Data
 14547  001554  6F7E               	movwf	(memset@p1+1)& (0+255),b
 14548  001556  0E00               	movlw	0
 14549  001558  6F80               	movwf	(memset@c+1)& (0+255),b
 14550  00155A  0E00               	movlw	0
 14551  00155C  6F7F               	movwf	memset@c& (0+255),b
 14552  00155E  0E00               	movlw	0
 14553  001560  6F82               	movwf	(memset@n+1)& (0+255),b
 14554  001562  0E32               	movlw	50
 14555  001564  6F81               	movwf	memset@n& (0+255),b
 14556  001566  EC2B  F031         	call	_memset	;wreg free
 14557                           
 14558                           ;term.c: 803: sprintf(Data,"Build Date: %s\r\n","Mar 26 2022");
 14559  00156A  0E63               	movlw	low Term_MainSm@Data
 14560  00156C  0100               	movlb	0	; () banked
 14561  00156E  6F7D               	movwf	sprintf@sp& (0+255),b
 14562  001570  0E04               	movlw	high Term_MainSm@Data
 14563  001572  6F7E               	movwf	(sprintf@sp+1)& (0+255),b
 14564  001574  0E0D               	movlw	low STR_27
 14565  001576  6F7F               	movwf	sprintf@f& (0+255),b
 14566  001578  0EFF               	movlw	high STR_27
 14567  00157A  6F80               	movwf	(sprintf@f+1)& (0+255),b
 14568  00157C  0EB6               	movlw	low STR_28
 14569  00157E  6F81               	movwf	(?_sprintf+4)& (0+255),b
 14570  001580  0EFF               	movlw	high STR_28
 14571  001582  6F82               	movwf	(?_sprintf+5)& (0+255),b
 14572  001584  EC6D  F01D         	call	_sprintf	;wreg free
 14573                           
 14574                           ;term.c: 805: putUSBUSART((void*)Data,strlen(Data));
 14575  001588  0E63               	movlw	low Term_MainSm@Data
 14576  00158A  0100               	movlb	0	; () banked
 14577  00158C  6F83               	movwf	putUSBUSART@data& (0+255),b
 14578  00158E  0E04               	movlw	high Term_MainSm@Data
 14579  001590  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 14580  001592  0E63               	movlw	low Term_MainSm@Data
 14581  001594  6F7D               	movwf	strlen@s& (0+255),b
 14582  001596  0E04               	movlw	high Term_MainSm@Data
 14583  001598  6F7E               	movwf	(strlen@s+1)& (0+255),b
 14584  00159A  ECDC  F02F         	call	_strlen	;wreg free
 14585  00159E  0100               	movlb	0	; () banked
 14586  0015A0  517D               	movf	?_strlen& (0+255),w,b
 14587  0015A2  6F85               	movwf	putUSBUSART@length& (0+255),b
 14588  0015A4  EC96  F032         	call	_putUSBUSART	;wreg free
 14589                           
 14590                           ;term.c: 807: TermMainSmState = Term_SysInitState;
 14591  0015A8  0E07               	movlw	7
 14592  0015AA  0102               	movlb	2	; () banked
 14593  0015AC  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 14594                           
 14595                           ; BSR set to: 2
 14596                           ;term.c: 808: }
 14597                           ;term.c: 809: break;
 14598  0015AE  0012               	return	
 14599  0015B0                     
 14600                           ; BSR set to: 2
 14601                           ;term.c: 813: if((cdc_trf_state == 0))
 14602                           
 14603                           ; BSR set to: 2
 14604  0015B0  0100               	movlb	0	; () banked
 14605  0015B2  51C5               	movf	_cdc_trf_state& (0+255),w,b
 14606  0015B4  A4D8               	btfss	status,2,c
 14607  0015B6  0012               	return	
 14608                           
 14609                           ; BSR set to: 0
 14610                           ;term.c: 814: {
 14611                           ;term.c: 816: putUSBUSART((void*)MsgReady,(sizeof(MsgReady) - 1));
 14612  0015B8  0E32               	movlw	low _MsgReady
 14613  0015BA  6F83               	movwf	putUSBUSART@data& (0+255),b
 14614  0015BC  0EFE               	movlw	high _MsgReady
 14615  0015BE  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 14616  0015C0  0E16               	movlw	22
 14617  0015C2  6F85               	movwf	putUSBUSART@length& (0+255),b
 14618  0015C4  EC96  F032         	call	_putUSBUSART	;wreg free
 14619                           
 14620                           ;term.c: 818: TermMainSmState = Term_FinalState;
 14621  0015C8  0E08               	movlw	8
 14622  0015CA  0102               	movlb	2	; () banked
 14623  0015CC  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 14624                           
 14625                           ; BSR set to: 2
 14626                           ;term.c: 819: }
 14627                           ;term.c: 820: break;
 14628  0015CE  0012               	return	
 14629  0015D0                     
 14630                           ; BSR set to: 2
 14631                           ;term.c: 824: Terminal();
 14632                           
 14633                           ; BSR set to: 2
 14634  0015D0  EC68  F000         	call	_Terminal	;wreg free
 14635                           
 14636                           ;term.c: 829: }
 14637                           
 14638                           ;term.c: 828: break;
 14639                           
 14640                           ;term.c: 827: default:
 14641                           
 14642                           ;term.c: 825: break;
 14643  0015D4  0012               	return	
 14644  0015D6                     l2453:
 14645  0015D6  0102               	movlb	2	; () banked
 14646  0015D8  51EC               	movf	Term_MainSm@TermMainSmState& (0+255),w,b
 14647                           
 14648                           ; Switch size 1, requested type "space"
 14649                           ; Number of cases is 9, Range of values is 0 to 8
 14650                           ; switch strategies available:
 14651                           ; Name         Instructions Cycles
 14652                           ; simple_byte           28    15 (average)
 14653                           ;	Chosen strategy is simple_byte
 14654  0015DA  0A00               	xorlw	0	; case 0
 14655  0015DC  B4D8               	btfsc	status,2,c
 14656  0015DE  D6C8               	goto	l2454
 14657  0015E0  0A01               	xorlw	1	; case 1
 14658  0015E2  B4D8               	btfsc	status,2,c
 14659  0015E4  D6D8               	goto	l2456
 14660  0015E6  0A03               	xorlw	3	; case 2
 14661  0015E8  B4D8               	btfsc	status,2,c
 14662  0015EA  D6E3               	goto	l2458
 14663  0015EC  0A01               	xorlw	1	; case 3
 14664  0015EE  B4D8               	btfsc	status,2,c
 14665  0015F0  D6EA               	goto	l2463
 14666  0015F2  0A07               	xorlw	7	; case 4
 14667  0015F4  B4D8               	btfsc	status,2,c
 14668  0015F6  D6F7               	goto	l2465
 14669  0015F8  0A01               	xorlw	1	; case 5
 14670  0015FA  B4D8               	btfsc	status,2,c
 14671  0015FC  D704               	goto	l2467
 14672  0015FE  0A03               	xorlw	3	; case 6
 14673  001600  B4D8               	btfsc	status,2,c
 14674  001602  D7A1               	goto	l2469
 14675  001604  0A01               	xorlw	1	; case 7
 14676  001606  B4D8               	btfsc	status,2,c
 14677  001608  D7D3               	goto	l2471
 14678  00160A  0A0F               	xorlw	15	; case 8
 14679  00160C  A4D8               	btfss	status,2,c
 14680  00160E  0012               	return	
 14681  001610  D7DF               	goto	l2473
 14682  001612                     __end_of_Term_MainSm:
 14683                           	opt stack 0
 14684                           tosu	equ	0xFFF
 14685                           tosh	equ	0xFFE
 14686                           tosl	equ	0xFFD
 14687                           pclath	equ	0xFFA
 14688                           tblptru	equ	0xFF8
 14689                           tblptrh	equ	0xFF7
 14690                           tblptrl	equ	0xFF6
 14691                           tablat	equ	0xFF5
 14692                           prodh	equ	0xFF4
 14693                           prodl	equ	0xFF3
 14694                           intcon	equ	0xFF2
 14695                           intcon2	equ	0xFF1
 14696                           intcon3	equ	0xFF0
 14697                           indf0	equ	0xFEF
 14698                           postinc0	equ	0xFEE
 14699                           plusw0	equ	0xFEB
 14700                           fsr0h	equ	0xFEA
 14701                           fsr0l	equ	0xFE9
 14702                           wreg	equ	0xFE8
 14703                           indf1	equ	0xFE7
 14704                           postinc1	equ	0xFE6
 14705                           postdec1	equ	0xFE5
 14706                           fsr1h	equ	0xFE2
 14707                           fsr1l	equ	0xFE1
 14708                           indf2	equ	0xFDF
 14709                           postinc2	equ	0xFDE
 14710                           postdec2	equ	0xFDD
 14711                           plusw2	equ	0xFDB
 14712                           fsr2h	equ	0xFDA
 14713                           fsr2l	equ	0xFD9
 14714                           status	equ	0xFD8
 14715                           
 14716 ;; *************** function _strlen *****************
 14717 ;; Defined at:
 14718 ;;		line 4 in file "/opt/microchip/xc8/v1.45/sources/common/strlen.c"
 14719 ;; Parameters:    Size  Location     Type
 14720 ;;  s               2   29[BANK0 ] PTR const unsigned char 
 14721 ;;		 -> Term_MainSm@Data(50), 
 14722 ;; Auto vars:     Size  Location     Type
 14723 ;;  cp              2   33[BANK0 ] PTR const unsigned char 
 14724 ;;		 -> Term_MainSm@Data(50), 
 14725 ;; Return value:  Size  Location     Type
 14726 ;;                  2   29[BANK0 ] unsigned int 
 14727 ;; Registers used:
 14728 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14729 ;; Tracked objects:
 14730 ;;		On entry : 0/0
 14731 ;;		On exit  : 0/0
 14732 ;;		Unchanged: 0/0
 14733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14734 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14735 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14736 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14737 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14738 ;;Total ram usage:        6 bytes
 14739 ;; Hardware stack levels used:    1
 14740 ;; Hardware stack levels required when called:   11
 14741 ;; This function calls:
 14742 ;;		Nothing
 14743 ;; This function is called by:
 14744 ;;		_Term_MainSm
 14745 ;; This function uses a non-reentrant model
 14746 ;;
 14747                           
 14748                           	psect	text56
 14749  005FB8                     __ptext56:
 14750                           	opt stack 0
 14751  005FB8                     _strlen:
 14752                           	opt stack 15
 14753                           
 14754                           ;incstack = 0
 14755  005FB8  C07D  F081         	movff	strlen@s,strlen@cp
 14756  005FBC  C07E  F082         	movff	strlen@s+1,strlen@cp+1
 14757  005FC0  D003               	goto	l3438
 14758  005FC2  0100               	movlb	0	; () banked
 14759  005FC4  4B81               	infsnz	strlen@cp& (0+255),f,b
 14760  005FC6  2B82               	incf	(strlen@cp+1)& (0+255),f,b
 14761  005FC8                     l3438:
 14762                           
 14763                           ; BSR set to: 0
 14764  005FC8  C081  FFD9         	movff	strlen@cp,fsr2l
 14765  005FCC  C082  FFDA         	movff	strlen@cp+1,fsr2h
 14766  005FD0  50DF               	movf	indf2,w,c
 14767  005FD2  A4D8               	btfss	status,2,c
 14768  005FD4  D7F6               	goto	l3439
 14769  005FD6  C07D  F07F         	movff	strlen@s,??_strlen
 14770  005FDA  C07E  F080         	movff	strlen@s+1,??_strlen+1
 14771  005FDE  0100               	movlb	0	; () banked
 14772  005FE0  1F7F               	comf	??_strlen& (0+255),f,b
 14773  005FE2  1F80               	comf	(??_strlen+1)& (0+255),f,b
 14774  005FE4  4B7F               	infsnz	??_strlen& (0+255),f,b
 14775  005FE6  2B80               	incf	(??_strlen+1)& (0+255),f,b
 14776  005FE8  5181               	movf	strlen@cp& (0+255),w,b
 14777  005FEA  257F               	addwf	??_strlen& (0+255),w,b
 14778  005FEC  6F7D               	movwf	?_strlen& (0+255),b
 14779  005FEE  5182               	movf	(strlen@cp+1)& (0+255),w,b
 14780  005FF0  2180               	addwfc	(??_strlen+1)& (0+255),w,b
 14781  005FF2  6F7E               	movwf	(?_strlen+1)& (0+255),b
 14782  005FF4  0012               	return	
 14783  005FF6                     __end_of_strlen:
 14784                           	opt stack 0
 14785                           tosu	equ	0xFFF
 14786                           tosh	equ	0xFFE
 14787                           tosl	equ	0xFFD
 14788                           pclath	equ	0xFFA
 14789                           tblptru	equ	0xFF8
 14790                           tblptrh	equ	0xFF7
 14791                           tblptrl	equ	0xFF6
 14792                           tablat	equ	0xFF5
 14793                           prodh	equ	0xFF4
 14794                           prodl	equ	0xFF3
 14795                           intcon	equ	0xFF2
 14796                           intcon2	equ	0xFF1
 14797                           intcon3	equ	0xFF0
 14798                           indf0	equ	0xFEF
 14799                           postinc0	equ	0xFEE
 14800                           plusw0	equ	0xFEB
 14801                           fsr0h	equ	0xFEA
 14802                           fsr0l	equ	0xFE9
 14803                           wreg	equ	0xFE8
 14804                           indf1	equ	0xFE7
 14805                           postinc1	equ	0xFE6
 14806                           postdec1	equ	0xFE5
 14807                           fsr1h	equ	0xFE2
 14808                           fsr1l	equ	0xFE1
 14809                           indf2	equ	0xFDF
 14810                           postinc2	equ	0xFDE
 14811                           postdec2	equ	0xFDD
 14812                           plusw2	equ	0xFDB
 14813                           fsr2h	equ	0xFDA
 14814                           fsr2l	equ	0xFD9
 14815                           status	equ	0xFD8
 14816                           
 14817 ;; *************** function _strcat *****************
 14818 ;; Defined at:
 14819 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/strcat.c"
 14820 ;; Parameters:    Size  Location     Type
 14821 ;;  to              2   29[BANK0 ] PTR unsigned char 
 14822 ;;		 -> Term_MainSm@Data(50), 
 14823 ;;  from            2   31[BANK0 ] PTR const unsigned char 
 14824 ;;		 -> STR_26(3), STR_25(2), STR_24(2), Term_MainSm@FwkBuildStr(4), 
 14825 ;;		 -> Term_MainSm@FwkMinorStr(4), Term_MainSm@FwkMajorStr(4), 
 14826 ;; Auto vars:     Size  Location     Type
 14827 ;;  cp              2   33[BANK0 ] PTR unsigned char 
 14828 ;;		 -> Term_MainSm@Data(50), 
 14829 ;; Return value:  Size  Location     Type
 14830 ;;                  2   29[BANK0 ] PTR unsigned char 
 14831 ;; Registers used:
 14832 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 14833 ;; Tracked objects:
 14834 ;;		On entry : 0/0
 14835 ;;		On exit  : 0/0
 14836 ;;		Unchanged: 0/0
 14837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14838 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14839 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14840 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14841 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14842 ;;Total ram usage:        6 bytes
 14843 ;; Hardware stack levels used:    1
 14844 ;; Hardware stack levels required when called:   11
 14845 ;; This function calls:
 14846 ;;		Nothing
 14847 ;; This function is called by:
 14848 ;;		_Term_MainSm
 14849 ;; This function uses a non-reentrant model
 14850 ;;
 14851                           
 14852                           	psect	text57
 14853  00564E                     __ptext57:
 14854                           	opt stack 0
 14855  00564E                     _strcat:
 14856                           	opt stack 15
 14857                           
 14858                           ; BSR set to: 0
 14859                           ;incstack = 0
 14860  00564E  C07D  F081         	movff	strcat@to,strcat@cp
 14861  005652  C07E  F082         	movff	strcat@to+1,strcat@cp+1
 14862  005656  D003               	goto	l3423
 14863  005658  0100               	movlb	0	; () banked
 14864  00565A  4B81               	infsnz	strcat@cp& (0+255),f,b
 14865  00565C  2B82               	incf	(strcat@cp+1)& (0+255),f,b
 14866  00565E                     l3423:
 14867                           
 14868                           ; BSR set to: 0
 14869  00565E  C081  FFD9         	movff	strcat@cp,fsr2l
 14870  005662  C082  FFDA         	movff	strcat@cp+1,fsr2h
 14871  005666  50DF               	movf	indf2,w,c
 14872  005668  B4D8               	btfsc	status,2,c
 14873  00566A  D006               	goto	l3426
 14874  00566C  D7F5               	goto	l3424
 14875  00566E  0100               	movlb	0	; () banked
 14876  005670  4B81               	infsnz	strcat@cp& (0+255),f,b
 14877  005672  2B82               	incf	(strcat@cp+1)& (0+255),f,b
 14878  005674  4B7F               	infsnz	strcat@from& (0+255),f,b
 14879  005676  2B80               	incf	(strcat@from+1)& (0+255),f,b
 14880  005678                     l3426:
 14881                           
 14882                           ; BSR set to: 0
 14883  005678  C07F  FFF6         	movff	strcat@from,tblptrl
 14884  00567C  C080  FFF7         	movff	strcat@from+1,tblptrh
 14885  005680  6AF8               	clrf	tblptru,c
 14886  005682  C081  FFD9         	movff	strcat@cp,fsr2l
 14887  005686  C082  FFDA         	movff	strcat@cp+1,fsr2h
 14888  00568A  0E0E               	movlw	(high __ramtop+-1)
 14889  00568C  64F7               	cpfsgt	tblptrh,c
 14890  00568E  D003               	bra	u13987
 14891  005690  0008               	tblrd		*
 14892  005692  50F5               	movf	tablat,w,c
 14893  005694  D005               	bra	u13980
 14894  005696                     u13987:
 14895  005696  CFF6 FFE9          	movff	tblptrl,fsr0l
 14896  00569A  CFF7 FFEA          	movff	tblptrh,fsr0h
 14897  00569E  50EF               	movf	indf0,w,c
 14898  0056A0                     u13980:
 14899  0056A0  6EDF               	movwf	indf2,c
 14900  0056A2  50DF               	movf	indf2,w,c
 14901  0056A4  B4D8               	btfsc	status,2,c
 14902  0056A6  0012               	return	
 14903  0056A8  D7E2               	goto	l3427
 14904  0056AA                     __end_of_strcat:
 14905                           	opt stack 0
 14906                           tosu	equ	0xFFF
 14907                           tosh	equ	0xFFE
 14908                           tosl	equ	0xFFD
 14909                           pclath	equ	0xFFA
 14910                           tblptru	equ	0xFF8
 14911                           tblptrh	equ	0xFF7
 14912                           tblptrl	equ	0xFF6
 14913                           tablat	equ	0xFF5
 14914                           prodh	equ	0xFF4
 14915                           prodl	equ	0xFF3
 14916                           intcon	equ	0xFF2
 14917                           intcon2	equ	0xFF1
 14918                           intcon3	equ	0xFF0
 14919                           indf0	equ	0xFEF
 14920                           postinc0	equ	0xFEE
 14921                           plusw0	equ	0xFEB
 14922                           fsr0h	equ	0xFEA
 14923                           fsr0l	equ	0xFE9
 14924                           wreg	equ	0xFE8
 14925                           indf1	equ	0xFE7
 14926                           postinc1	equ	0xFE6
 14927                           postdec1	equ	0xFE5
 14928                           fsr1h	equ	0xFE2
 14929                           fsr1l	equ	0xFE1
 14930                           indf2	equ	0xFDF
 14931                           postinc2	equ	0xFDE
 14932                           postdec2	equ	0xFDD
 14933                           plusw2	equ	0xFDB
 14934                           fsr2h	equ	0xFDA
 14935                           fsr2l	equ	0xFD9
 14936                           status	equ	0xFD8
 14937                           
 14938 ;; *************** function _sprintf *****************
 14939 ;; Defined at:
 14940 ;;		line 492 in file "/opt/microchip/xc8/v1.45/sources/common/doprnt.c"
 14941 ;; Parameters:    Size  Location     Type
 14942 ;;  sp              2   29[BANK0 ] PTR unsigned char 
 14943 ;;		 -> Term_MainSm@Data(50), 
 14944 ;;  f               2   31[BANK0 ] PTR const unsigned char 
 14945 ;;		 -> STR_27(17), 
 14946 ;; Auto vars:     Size  Location     Type
 14947 ;;  tmpval          4    0        struct .
 14948 ;;  cp              2   39[BANK0 ] PTR const unsigned char 
 14949 ;;		 -> STR_33(7), STR_28(12), 
 14950 ;;  ap              2   36[BANK0 ] PTR void [1]
 14951 ;;		 -> ?_sprintf(2), 
 14952 ;;  len             2    0        unsigned int 
 14953 ;;  val             2    0        unsigned int 
 14954 ;;  c               1   38[BANK0 ] char 
 14955 ;;  flag            1   35[BANK0 ] unsigned char 
 14956 ;;  prec            1    0        char 
 14957 ;; Return value:  Size  Location     Type
 14958 ;;                  2   29[BANK0 ] int 
 14959 ;; Registers used:
 14960 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 14961 ;; Tracked objects:
 14962 ;;		On entry : 0/0
 14963 ;;		On exit  : 0/0
 14964 ;;		Unchanged: 0/0
 14965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14966 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14967 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14968 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14969 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14970 ;;Total ram usage:       12 bytes
 14971 ;; Hardware stack levels used:    1
 14972 ;; Hardware stack levels required when called:   11
 14973 ;; This function calls:
 14974 ;;		Nothing
 14975 ;; This function is called by:
 14976 ;;		_Term_MainSm
 14977 ;; This function uses a non-reentrant model
 14978 ;;
 14979                           
 14980                           	psect	text58
 14981  003ADA                     __ptext58:
 14982                           	opt stack 0
 14983  003ADA                     _sprintf:
 14984                           	opt stack 15
 14985                           
 14986                           ;doprnt.c: 494: va_list ap;
 14987                           ;doprnt.c: 499: signed char c;
 14988                           ;doprnt.c: 506: signed char prec;
 14989                           ;doprnt.c: 508: unsigned char flag;
 14990                           ;doprnt.c: 523: union {
 14991                           ;doprnt.c: 524: unsigned long vd;
 14992                           ;doprnt.c: 525: double integ;
 14993                           ;doprnt.c: 526: } tmpval;
 14994                           ;doprnt.c: 528: unsigned int val;
 14995                           ;doprnt.c: 529: unsigned len;
 14996                           ;doprnt.c: 530: const char * cp;
 14997                           ;doprnt.c: 533: *ap = __va_start();
 14998                           
 14999                           ;incstack = 0
 15000  003ADA  0E81               	movlw	low (?_sprintf+4)
 15001  003ADC  0100               	movlb	0	; () banked
 15002  003ADE  6F84               	movwf	sprintf@ap& (0+255),b
 15003  003AE0  0E00               	movlw	high (?_sprintf+4)
 15004  003AE2  6F85               	movwf	(sprintf@ap+1)& (0+255),b
 15005                           
 15006                           ;doprnt.c: 536: while(c = *f++) {
 15007  003AE4  D04E               	goto	l2827
 15008  003AE6                     
 15009                           ; BSR set to: 0
 15010                           ;doprnt.c: 538: if(c != '%')
 15011                           
 15012                           ; BSR set to: 0
 15013  003AE6  0E25               	movlw	37
 15014  003AE8  1986               	xorwf	sprintf@c& (0+255),w,b
 15015  003AEA  B4D8               	btfsc	status,2,c
 15016  003AEC  D009               	goto	l2817
 15017                           
 15018                           ; BSR set to: 0
 15019                           ;doprnt.c: 540: {
 15020                           ;doprnt.c: 541: ((*sp++ = (c)));
 15021  003AEE  C07D  FFD9         	movff	sprintf@sp,fsr2l
 15022  003AF2  C07E  FFDA         	movff	sprintf@sp+1,fsr2h
 15023  003AF6  C086  FFDF         	movff	sprintf@c,indf2
 15024                           
 15025                           ; BSR set to: 0
 15026  003AFA  4B7D               	infsnz	sprintf@sp& (0+255),f,b
 15027  003AFC  2B7E               	incf	(sprintf@sp+1)& (0+255),f,b
 15028                           
 15029                           ;doprnt.c: 542: continue;
 15030  003AFE  D041               	goto	l2827
 15031  003B00                     l2817:
 15032                           
 15033                           ; BSR set to: 0
 15034                           ;doprnt.c: 543: }
 15035                           ;doprnt.c: 548: flag = 0;
 15036                           
 15037                           ; BSR set to: 0
 15038  003B00  0E00               	movlw	0
 15039  003B02  6F83               	movwf	sprintf@flag& (0+255),b
 15040                           
 15041                           ;doprnt.c: 635: switch(c = *f++) {
 15042  003B04  D02E               	goto	l2818
 15043  003B06                     
 15044                           ; BSR set to: 0
 15045                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
 15046                           
 15047                           ; BSR set to: 0
 15048  003B06  C084  FFD9         	movff	sprintf@ap,fsr2l
 15049  003B0A  C085  FFDA         	movff	sprintf@ap+1,fsr2h
 15050  003B0E  CFDE F087          	movff	postinc2,sprintf@cp
 15051  003B12  CFDD F088          	movff	postdec2,sprintf@cp+1
 15052                           
 15053                           ; BSR set to: 0
 15054  003B16  0E02               	movlw	2
 15055  003B18  2784               	addwf	sprintf@ap& (0+255),f,b
 15056  003B1A  0E00               	movlw	0
 15057  003B1C  2385               	addwfc	(sprintf@ap+1)& (0+255),f,b
 15058                           
 15059                           ; BSR set to: 0
 15060                           ;doprnt.c: 740: if(!cp)
 15061  003B1E  5187               	movf	sprintf@cp& (0+255),w,b
 15062  003B20  1188               	iorwf	(sprintf@cp+1)& (0+255),w,b
 15063  003B22  A4D8               	btfss	status,2,c
 15064  003B24  D014               	goto	l2823
 15065                           
 15066                           ; BSR set to: 0
 15067                           ;doprnt.c: 741: cp = "(null)";
 15068  003B26  0ED8               	movlw	low STR_33
 15069  003B28  6F87               	movwf	sprintf@cp& (0+255),b
 15070  003B2A  0EFF               	movlw	high STR_33
 15071  003B2C  6F88               	movwf	(sprintf@cp+1)& (0+255),b
 15072                           
 15073                           ; BSR set to: 0
 15074                           ;doprnt.c: 777: while(*cp)
 15075  003B2E  D00F               	goto	l2823
 15076  003B30                     
 15077                           ; BSR set to: 0
 15078                           ;doprnt.c: 778: ((*sp++ = (*cp++)));
 15079                           
 15080                           ; BSR set to: 0
 15081  003B30  C087  FFF6         	movff	sprintf@cp,tblptrl
 15082  003B34  C088  FFF7         	movff	sprintf@cp+1,tblptrh
 15083  003B38                     	if	0	;tblptru may be non-zero
 15084  003B38                     	endif
 15085  003B38                     	if	0	;tblptru may be non-zero
 15086  003B38                     	endif
 15087  003B38  C07D  FFD9         	movff	sprintf@sp,fsr2l
 15088  003B3C  C07E  FFDA         	movff	sprintf@sp+1,fsr2h
 15089  003B40  0008               	tblrd		*
 15090  003B42  CFF5 FFDF          	movff	tablat,indf2
 15091                           
 15092                           ; BSR set to: 0
 15093  003B46  4B87               	infsnz	sprintf@cp& (0+255),f,b
 15094  003B48  2B88               	incf	(sprintf@cp+1)& (0+255),f,b
 15095                           
 15096                           ; BSR set to: 0
 15097  003B4A  4B7D               	infsnz	sprintf@sp& (0+255),f,b
 15098  003B4C  2B7E               	incf	(sprintf@sp+1)& (0+255),f,b
 15099  003B4E                     l2823:
 15100                           
 15101                           ; BSR set to: 0
 15102                           
 15103                           ; BSR set to: 0
 15104  003B4E  C087  FFF6         	movff	sprintf@cp,tblptrl
 15105  003B52  C088  FFF7         	movff	sprintf@cp+1,tblptrh
 15106  003B56                     	if	0	;tblptru may be non-zero
 15107  003B56                     	endif
 15108  003B56                     	if	0	;tblptru may be non-zero
 15109  003B56                     	endif
 15110  003B56  0008               	tblrd		*
 15111  003B58  50F5               	movf	tablat,w,c
 15112  003B5A  0900               	iorlw	0
 15113  003B5C  B4D8               	btfsc	status,2,c
 15114  003B5E  D011               	goto	l2827
 15115  003B60  D7E7               	goto	l2824
 15116  003B62                     l2818:
 15117                           
 15118                           ; BSR set to: 0
 15119                           
 15120                           ; BSR set to: 0
 15121  003B62  C07F  FFF6         	movff	sprintf@f,tblptrl
 15122  003B66  C080  FFF7         	movff	sprintf@f+1,tblptrh
 15123  003B6A  4B7F               	infsnz	sprintf@f& (0+255),f,b
 15124  003B6C  2B80               	incf	(sprintf@f+1)& (0+255),f,b
 15125  003B6E                     	if	0	;tblptru may be non-zero
 15126  003B6E                     	endif
 15127  003B6E                     	if	0	;tblptru may be non-zero
 15128  003B6E                     	endif
 15129  003B6E  0008               	tblrd		*
 15130  003B70  CFF5 F086          	movff	tablat,sprintf@c
 15131  003B74  5186               	movf	sprintf@c& (0+255),w,b
 15132                           
 15133                           ; Switch size 1, requested type "space"
 15134                           ; Number of cases is 2, Range of values is 0 to 115
 15135                           ; switch strategies available:
 15136                           ; Name         Instructions Cycles
 15137                           ; simple_byte            7     4 (average)
 15138                           ;	Chosen strategy is simple_byte
 15139  003B76  0A00               	xorlw	0	; case 0
 15140  003B78  B4D8               	btfsc	status,2,c
 15141  003B7A  D00F               	goto	u14040
 15142  003B7C  0A73               	xorlw	115	; case 115
 15143  003B7E  B4D8               	btfsc	status,2,c
 15144  003B80  D7C2               	goto	l2821
 15145  003B82                     l2827:
 15146                           
 15147                           ; BSR set to: 0
 15148                           
 15149                           ; BSR set to: 0
 15150                           
 15151                           ;doprnt.c: 1422: {
 15152                           
 15153                           ; BSR set to: 0
 15154  003B82  C07F  FFF6         	movff	sprintf@f,tblptrl
 15155  003B86  C080  FFF7         	movff	sprintf@f+1,tblptrh
 15156  003B8A  4B7F               	infsnz	sprintf@f& (0+255),f,b
 15157  003B8C  2B80               	incf	(sprintf@f+1)& (0+255),f,b
 15158  003B8E                     	if	0	;tblptru may be non-zero
 15159  003B8E                     	endif
 15160  003B8E                     	if	0	;tblptru may be non-zero
 15161  003B8E                     	endif
 15162  003B8E  0008               	tblrd		*
 15163  003B90  CFF5 F086          	movff	tablat,sprintf@c
 15164  003B94  5186               	movf	sprintf@c& (0+255),w,b
 15165  003B96  A4D8               	btfss	status,2,c
 15166  003B98  D7A6               	goto	l2816
 15167  003B9A                     u14040:
 15168                           
 15169                           ; BSR set to: 0
 15170                           ;doprnt.c: 1538: *sp = 0;
 15171                           
 15172                           ; BSR set to: 0
 15173                           
 15174                           ;doprnt.c: 1469: }
 15175                           ;doprnt.c: 1533: }
 15176                           ;doprnt.c: 1535: alldone:
 15177                           
 15178                           ; BSR set to: 0
 15179  003B9A  C07D  FFD9         	movff	sprintf@sp,fsr2l
 15180  003B9E  C07E  FFDA         	movff	sprintf@sp+1,fsr2h
 15181  003BA2  0E00               	movlw	0
 15182  003BA4  6EDF               	movwf	indf2,c
 15183  003BA6  0012               	return	
 15184  003BA8                     __end_of_sprintf:
 15185                           	opt stack 0
 15186                           tosu	equ	0xFFF
 15187                           tosh	equ	0xFFE
 15188                           tosl	equ	0xFFD
 15189                           pclath	equ	0xFFA
 15190                           tblptru	equ	0xFF8
 15191                           tblptrh	equ	0xFF7
 15192                           tblptrl	equ	0xFF6
 15193                           tablat	equ	0xFF5
 15194                           prodh	equ	0xFF4
 15195                           prodl	equ	0xFF3
 15196                           intcon	equ	0xFF2
 15197                           intcon2	equ	0xFF1
 15198                           intcon3	equ	0xFF0
 15199                           indf0	equ	0xFEF
 15200                           postinc0	equ	0xFEE
 15201                           plusw0	equ	0xFEB
 15202                           fsr0h	equ	0xFEA
 15203                           fsr0l	equ	0xFE9
 15204                           wreg	equ	0xFE8
 15205                           indf1	equ	0xFE7
 15206                           postinc1	equ	0xFE6
 15207                           postdec1	equ	0xFE5
 15208                           fsr1h	equ	0xFE2
 15209                           fsr1l	equ	0xFE1
 15210                           indf2	equ	0xFDF
 15211                           postinc2	equ	0xFDE
 15212                           postdec2	equ	0xFDD
 15213                           plusw2	equ	0xFDB
 15214                           fsr2h	equ	0xFDA
 15215                           fsr2l	equ	0xFD9
 15216                           status	equ	0xFD8
 15217                           
 15218 ;; *************** function _memset *****************
 15219 ;; Defined at:
 15220 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/memset.c"
 15221 ;; Parameters:    Size  Location     Type
 15222 ;;  p1              2   29[BANK0 ] PTR void 
 15223 ;;		 -> Term_MainSm@Data(50), USBAlternateInterface(2), BDT(48), UEP1(1), 
 15224 ;;  c               2   31[BANK0 ] int 
 15225 ;;  n               2   33[BANK0 ] unsigned int 
 15226 ;; Auto vars:     Size  Location     Type
 15227 ;;  p               2   35[BANK0 ] PTR unsigned char 
 15228 ;;		 -> Term_MainSm@Data(50), USBAlternateInterface(2), BDT(48), UEP1(1), 
 15229 ;; Return value:  Size  Location     Type
 15230 ;;                  2   29[BANK0 ] PTR void 
 15231 ;; Registers used:
 15232 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15233 ;; Tracked objects:
 15234 ;;		On entry : 0/0
 15235 ;;		On exit  : 0/0
 15236 ;;		Unchanged: 0/0
 15237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15238 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15239 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15241 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15242 ;;Total ram usage:        8 bytes
 15243 ;; Hardware stack levels used:    1
 15244 ;; Hardware stack levels required when called:   11
 15245 ;; This function calls:
 15246 ;;		Nothing
 15247 ;; This function is called by:
 15248 ;;		_USBDeviceInit
 15249 ;;		_USBStdSetCfgHandler
 15250 ;;		_Term_MainSm
 15251 ;; This function uses a non-reentrant model
 15252 ;;
 15253                           
 15254                           	psect	text59
 15255  006256                     __ptext59:
 15256                           	opt stack 0
 15257  006256                     _memset:
 15258                           	opt stack 14
 15259                           
 15260                           ; BSR set to: 0
 15261                           ;incstack = 0
 15262  006256  C07D  F083         	movff	memset@p1,memset@p
 15263  00625A  C07E  F084         	movff	memset@p1+1,memset@p+1
 15264  00625E  D009               	goto	l3297
 15265  006260                     l12594:
 15266  006260  C083  FFD9         	movff	memset@p,fsr2l
 15267  006264  C084  FFDA         	movff	memset@p+1,fsr2h
 15268  006268  C07F  FFDF         	movff	memset@c,indf2
 15269  00626C  0100               	movlb	0	; () banked
 15270  00626E  4B83               	infsnz	memset@p& (0+255),f,b
 15271  006270  2B84               	incf	(memset@p+1)& (0+255),f,b
 15272  006272                     l3297:
 15273                           
 15274                           ; BSR set to: 0
 15275  006272  0100               	movlb	0	; () banked
 15276  006274  0781               	decf	memset@n& (0+255),f,b
 15277  006276  A0D8               	btfss	status,0,c
 15278  006278  0782               	decf	(memset@n+1)& (0+255),f,b
 15279  00627A  2981               	incf	memset@n& (0+255),w,b
 15280  00627C  E1F1               	bnz	l12594
 15281  00627E  2982               	incf	(memset@n+1)& (0+255),w,b
 15282  006280  B4D8               	btfsc	status,2,c
 15283  006282  0012               	return	
 15284  006284  D7ED               	goto	l3298
 15285  006286                     __end_of_memset:
 15286                           	opt stack 0
 15287                           tosu	equ	0xFFF
 15288                           tosh	equ	0xFFE
 15289                           tosl	equ	0xFFD
 15290                           pclath	equ	0xFFA
 15291                           tblptru	equ	0xFF8
 15292                           tblptrh	equ	0xFF7
 15293                           tblptrl	equ	0xFF6
 15294                           tablat	equ	0xFF5
 15295                           prodh	equ	0xFF4
 15296                           prodl	equ	0xFF3
 15297                           intcon	equ	0xFF2
 15298                           intcon2	equ	0xFF1
 15299                           intcon3	equ	0xFF0
 15300                           indf0	equ	0xFEF
 15301                           postinc0	equ	0xFEE
 15302                           plusw0	equ	0xFEB
 15303                           fsr0h	equ	0xFEA
 15304                           fsr0l	equ	0xFE9
 15305                           wreg	equ	0xFE8
 15306                           indf1	equ	0xFE7
 15307                           postinc1	equ	0xFE6
 15308                           postdec1	equ	0xFE5
 15309                           fsr1h	equ	0xFE2
 15310                           fsr1l	equ	0xFE1
 15311                           indf2	equ	0xFDF
 15312                           postinc2	equ	0xFDE
 15313                           postdec2	equ	0xFDD
 15314                           plusw2	equ	0xFDB
 15315                           fsr2h	equ	0xFDA
 15316                           fsr2l	equ	0xFD9
 15317                           status	equ	0xFD8
 15318                           
 15319 ;; *************** function _Terminal *****************
 15320 ;; Defined at:
 15321 ;;		line 428 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/term.c"
 15322 ;; Parameters:    Size  Location     Type
 15323 ;;		None
 15324 ;; Auto vars:     Size  Location     Type
 15325 ;;  i               1   68[BANK0 ] unsigned char 
 15326 ;;  UsbRxBuffer   200    0[BANK10] unsigned char [200]
 15327 ;;  UsbTxBuffer   200    0[BANK2 ] unsigned char [200]
 15328 ;;  TermTxBuffer   50    0[BANK1 ] unsigned char [50]
 15329 ;;  Index           1   70[BANK0 ] unsigned char 
 15330 ;;  ReceivedByte    1   69[BANK0 ] unsigned char 
 15331 ;; Return value:  Size  Location     Type
 15332 ;;                  1    wreg      void 
 15333 ;; Registers used:
 15334 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15335 ;; Tracked objects:
 15336 ;;		On entry : 0/0
 15337 ;;		On exit  : 0/0
 15338 ;;		Unchanged: 0/0
 15339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15340 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15341 ;;      Locals:         0       3      50     200       0       0       0       0       0       0       0     200       
      +0       0       0       0
 15342 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15343 ;;      Totals:         0       5      50     200       0       0       0       0       0       0       0     200       
      +0       0       0       0
 15344 ;;Total ram usage:      455 bytes
 15345 ;; Hardware stack levels used:    1
 15346 ;; Hardware stack levels required when called:   15
 15347 ;; This function calls:
 15348 ;;		_I2cSlv_I2cReadMsgSts
 15349 ;;		_I2cSlv_ReceiveI2cMsg
 15350 ;;		_I2cSlv_SendI2cMsg
 15351 ;;		_OsTmr_Wait
 15352 ;;		_atoi
 15353 ;;		_getsUSBUSART
 15354 ;;		_itoa
 15355 ;;		_putUSBUSART
 15356 ;;		_strcpy
 15357 ;;		_strtol
 15358 ;;		_xtoi
 15359 ;; This function is called by:
 15360 ;;		_Term_MainSm
 15361 ;; This function uses a non-reentrant model
 15362 ;;
 15363                           
 15364                           	psect	text60
 15365  0000D0                     __ptext60:
 15366                           	opt stack 0
 15367  0000D0                     _Terminal:
 15368                           	opt stack 11
 15369                           
 15370                           ;term.c: 430: static TermStateType TermState = Term_GetData;
 15371                           ;term.c: 431: UINT8 UsbRxBuffer[200u];
 15372                           ;term.c: 432: UINT8 UsbTxBuffer[200u];
 15373                           ;term.c: 433: UINT8 TermTxBuffer[50u];
 15374                           ;term.c: 434: static UINT8 TermRxBuffer[50u];
 15375                           ;term.c: 435: UINT8 Index;
 15376                           ;term.c: 436: static UINT8 Len[4];
 15377                           ;term.c: 437: static UINT8 PackageLen;
 15378                           ;term.c: 438: static UINT8 Addr[4];
 15379                           ;term.c: 439: static UINT8 SlaveAddr;
 15380                           ;term.c: 440: static PayloadType Payload[20u];
 15381                           ;term.c: 441: UINT8 ReceivedBytes = 0;
 15382                           
 15383                           ; BSR set to: 0
 15384                           ;incstack = 0
 15385  0000D0  0E00               	movlw	0
 15386  0000D2  0100               	movlb	0	; () banked
 15387  0000D4  6FA5               	movwf	Terminal@ReceivedBytes& (0+255),b
 15388                           
 15389                           ; BSR set to: 0
 15390                           ;term.c: 443: static UINT8 FormatOption = 0u;
 15391                           ;term.c: 444: static UINT8 EchoOption = 1u;
 15392                           ;term.c: 445: static SwTimerType SwTimer;
 15393                           ;term.c: 448: if((USBDeviceState < CONFIGURED_STATE)||(UCONbits.SUSPND==1)) return;
 15394  0000D6  0E1F               	movlw	31
 15395  0000D8  65CC               	cpfsgt	_USBDeviceState& (0+255),b
 15396  0000DA  0012               	return	
 15397                           
 15398                           ; BSR set to: 0
 15399  0000DC  B265               	btfsc	3941,1,c	;volatile
 15400  0000DE  0012               	return	
 15401  0000E0  D278               	goto	l2393
 15402  0000E2                     
 15403                           ;term.c: 455: ReceivedBytes = getsUSBUSART(UsbRxBuffer,200u);
 15404                           
 15405                           ; BSR set to: 0
 15406  0000E2  0E00               	movlw	low Terminal@UsbRxBuffer
 15407  0000E4  0100               	movlb	0	; () banked
 15408  0000E6  6F84               	movwf	getsUSBUSART@buffer& (0+255),b
 15409  0000E8  0E0A               	movlw	high Terminal@UsbRxBuffer
 15410  0000EA  6F85               	movwf	(getsUSBUSART@buffer+1)& (0+255),b
 15411  0000EC  0EC8               	movlw	200
 15412  0000EE  6F86               	movwf	getsUSBUSART@len& (0+255),b
 15413  0000F0  EC35  F025         	call	_getsUSBUSART	;wreg free
 15414  0000F4  0100               	movlb	0	; () banked
 15415  0000F6  6FA5               	movwf	Terminal@ReceivedBytes& (0+255),b
 15416                           
 15417                           ; BSR set to: 0
 15418                           ;term.c: 458: if (ReceivedBytes > 0)
 15419  0000F8  51A5               	movf	Terminal@ReceivedBytes& (0+255),w,b
 15420  0000FA  B4D8               	btfsc	status,2,c
 15421  0000FC  0012               	return	
 15422                           
 15423                           ; BSR set to: 0
 15424                           ;term.c: 459: {
 15425                           ;term.c: 461: if (EchoOption == 1u)
 15426  0000FE  0102               	movlb	2	; () banked
 15427  000100  05F3               	decf	Terminal@EchoOption& (0+255),w,b
 15428  000102  A4D8               	btfss	status,2,c
 15429  000104  D026               	goto	l2397
 15430                           
 15431                           ; BSR set to: 2
 15432                           ;term.c: 462: {
 15433                           ;term.c: 464: if((cdc_trf_state == 0))
 15434  000106  0100               	movlb	0	; () banked
 15435  000108  51C5               	movf	_cdc_trf_state& (0+255),w,b
 15436  00010A  A4D8               	btfss	status,2,c
 15437  00010C  D022               	goto	l2397
 15438                           
 15439                           ; BSR set to: 0
 15440                           ;term.c: 465: {
 15441                           ;term.c: 466: UsbRxBuffer[ReceivedBytes] = '\r';
 15442  00010E  51A5               	movf	Terminal@ReceivedBytes& (0+255),w,b
 15443  000110  0D01               	mullw	1
 15444  000112  0E00               	movlw	low Terminal@UsbRxBuffer
 15445  000114  24F3               	addwf	prodl,w,c
 15446  000116  6ED9               	movwf	fsr2l,c
 15447  000118  0E0A               	movlw	high Terminal@UsbRxBuffer
 15448  00011A  20F4               	addwfc	prodh,w,c
 15449  00011C  6EDA               	movwf	fsr2h,c
 15450  00011E  0E0D               	movlw	13
 15451  000120  6EDF               	movwf	indf2,c
 15452                           
 15453                           ; BSR set to: 0
 15454                           ;term.c: 467: UsbRxBuffer[ReceivedBytes + 1] = '\n';
 15455  000122  51A5               	movf	Terminal@ReceivedBytes& (0+255),w,b
 15456  000124  6FA2               	movwf	??_Terminal& (0+255),b
 15457  000126  6BA3               	clrf	(??_Terminal+1)& (0+255),b
 15458  000128  0E01               	movlw	1
 15459  00012A  27A2               	addwf	??_Terminal& (0+255),f,b
 15460  00012C  0E00               	movlw	0
 15461  00012E  23A3               	addwfc	(??_Terminal+1)& (0+255),f,b
 15462  000130  0E00               	movlw	low Terminal@UsbRxBuffer
 15463  000132  25A2               	addwf	??_Terminal& (0+255),w,b
 15464  000134  6ED9               	movwf	fsr2l,c
 15465  000136  0E0A               	movlw	high Terminal@UsbRxBuffer
 15466  000138  21A3               	addwfc	(??_Terminal+1)& (0+255),w,b
 15467  00013A  6EDA               	movwf	fsr2h,c
 15468  00013C  0E0A               	movlw	10
 15469  00013E  6EDF               	movwf	indf2,c
 15470                           
 15471                           ; BSR set to: 0
 15472                           ;term.c: 468: putUSBUSART(UsbRxBuffer,ReceivedBytes + 2);
 15473  000140  0E00               	movlw	low Terminal@UsbRxBuffer
 15474  000142  6F83               	movwf	putUSBUSART@data& (0+255),b
 15475  000144  0E0A               	movlw	high Terminal@UsbRxBuffer
 15476  000146  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 15477  000148  51A5               	movf	Terminal@ReceivedBytes& (0+255),w,b
 15478  00014A  0F02               	addlw	2
 15479  00014C  6F85               	movwf	putUSBUSART@length& (0+255),b
 15480  00014E  EC96  F032         	call	_putUSBUSART	;wreg free
 15481  000152                     l2397:
 15482                           
 15483                           ;term.c: 469: }
 15484                           ;term.c: 470: }
 15485                           ;term.c: 473: if ((UsbRxBuffer[0u] == 'S') &&
 15486                           ;term.c: 474: (UsbRxBuffer[0u + 1u] == 'O') &&
 15487                           ;term.c: 475: (UsbRxBuffer[0u + 1u + 1u] == ':'))
 15488  000152  0E53               	movlw	83
 15489  000154  010A               	movlb	10	; () banked
 15490  000156  1900               	xorwf	Terminal@UsbRxBuffer& (0+255),w,b
 15491  000158  A4D8               	btfss	status,2,c
 15492  00015A  D043               	goto	l2398
 15493                           
 15494                           ; BSR set to: 10
 15495  00015C  0E4F               	movlw	79
 15496  00015E  1901               	xorwf	(Terminal@UsbRxBuffer+1)& (0+255),w,b
 15497  000160  A4D8               	btfss	status,2,c
 15498  000162  D03F               	goto	l2398
 15499                           
 15500                           ; BSR set to: 10
 15501  000164  0E3A               	movlw	58
 15502  000166  1902               	xorwf	(Terminal@UsbRxBuffer+2)& (0+255),w,b
 15503  000168  A4D8               	btfss	status,2,c
 15504  00016A  D03B               	goto	l2398
 15505                           
 15506                           ; BSR set to: 10
 15507                           ;term.c: 476: {
 15508                           ;term.c: 478: if ((UsbRxBuffer[0u + 1u + 1u + 1u] == 'G') && (UsbRxBuffer[0u + 1u + 1u +
      +                           1u + 1] == ':'))
 15509  00016C  0E47               	movlw	71
 15510  00016E  1903               	xorwf	(Terminal@UsbRxBuffer+3)& (0+255),w,b
 15511  000170  A4D8               	btfss	status,2,c
 15512  000172  0012               	return	
 15513                           
 15514                           ; BSR set to: 10
 15515  000174  0E3A               	movlw	58
 15516  000176  1904               	xorwf	(Terminal@UsbRxBuffer+4)& (0+255),w,b
 15517  000178  A4D8               	btfss	status,2,c
 15518  00017A  0012               	return	
 15519                           
 15520                           ; BSR set to: 10
 15521                           ;term.c: 479: {
 15522                           ;term.c: 481: if ((UsbRxBuffer[0u + 1u + 1u + 1u + 2u] == 'D') && (UsbRxBuffer[0u + 1u +
      +                           1u + 1u + 2u + 1] == 'F'))
 15523  00017C  0E44               	movlw	68
 15524  00017E  1905               	xorwf	(Terminal@UsbRxBuffer+5)& (0+255),w,b
 15525  000180  A4D8               	btfss	status,2,c
 15526  000182  D015               	goto	l2400
 15527                           
 15528                           ; BSR set to: 10
 15529  000184  0E46               	movlw	70
 15530  000186  1906               	xorwf	(Terminal@UsbRxBuffer+6)& (0+255),w,b
 15531  000188  A4D8               	btfss	status,2,c
 15532  00018A  D011               	goto	l2400
 15533                           
 15534                           ; BSR set to: 10
 15535                           ;term.c: 482: {
 15536                           ;term.c: 483: if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == 'A')
 15537  00018C  0E41               	movlw	65
 15538  00018E  1908               	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 15539  000190  A4D8               	btfss	status,2,c
 15540  000192  D004               	goto	l2401
 15541                           
 15542                           ; BSR set to: 10
 15543                           ;term.c: 484: {
 15544                           ;term.c: 485: FormatOption = 1u;
 15545  000194  0E01               	movlw	1
 15546  000196  0102               	movlb	2	; () banked
 15547  000198  6FED               	movwf	Terminal@FormatOption& (0+255),b
 15548                           
 15549                           ;term.c: 486: }
 15550  00019A  0012               	return	
 15551  00019C                     l2401:
 15552                           
 15553                           ;term.c: 487: else if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == 'B')
 15554                           
 15555                           ; BSR set to: 2
 15556  00019C  0E42               	movlw	66
 15557  00019E  010A               	movlb	10	; () banked
 15558  0001A0  1908               	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 15559  0001A2  A4D8               	btfss	status,2,c
 15560  0001A4  0012               	return	
 15561                           
 15562                           ; BSR set to: 10
 15563                           ;term.c: 488: {
 15564                           ;term.c: 489: FormatOption = 0u;
 15565  0001A6  0E00               	movlw	0
 15566  0001A8  0102               	movlb	2	; () banked
 15567  0001AA  6FED               	movwf	Terminal@FormatOption& (0+255),b
 15568                           
 15569                           ; BSR set to: 2
 15570                           ;term.c: 490: }
 15571                           ;term.c: 491: }
 15572                           
 15573                           ; BSR set to: 2
 15574  0001AC  0012               	return	
 15575  0001AE                     l2400:
 15576                           
 15577                           ;term.c: 493: else if ((UsbRxBuffer[0u + 1u + 1u + 1u + 2u] == 'E') && (UsbRxBuffer[0u +
      +                           1u + 1u + 1u + 2u + 1] == 'M'))
 15578                           
 15579                           ; BSR set to: 2
 15580  0001AE  0E45               	movlw	69
 15581  0001B0  010A               	movlb	10	; () banked
 15582  0001B2  1905               	xorwf	(Terminal@UsbRxBuffer+5)& (0+255),w,b
 15583  0001B4  A4D8               	btfss	status,2,c
 15584  0001B6  0012               	return	
 15585                           
 15586                           ; BSR set to: 10
 15587  0001B8  0E4D               	movlw	77
 15588  0001BA  1906               	xorwf	(Terminal@UsbRxBuffer+6)& (0+255),w,b
 15589  0001BC  A4D8               	btfss	status,2,c
 15590  0001BE  0012               	return	
 15591                           
 15592                           ; BSR set to: 10
 15593                           ;term.c: 494: {
 15594                           ;term.c: 495: if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == '1')
 15595  0001C0  0E31               	movlw	49
 15596  0001C2  1908               	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 15597  0001C4  A4D8               	btfss	status,2,c
 15598  0001C6  D004               	goto	l2406
 15599                           
 15600                           ; BSR set to: 10
 15601                           ;term.c: 496: {
 15602                           ;term.c: 497: EchoOption = 1u;
 15603  0001C8  0E01               	movlw	1
 15604  0001CA  0102               	movlb	2	; () banked
 15605  0001CC  6FF3               	movwf	Terminal@EchoOption& (0+255),b
 15606                           
 15607                           ;term.c: 498: }
 15608  0001CE  0012               	return	
 15609  0001D0                     l2406:
 15610                           
 15611                           ;term.c: 499: else if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == '0')
 15612                           
 15613                           ; BSR set to: 2
 15614  0001D0  0E30               	movlw	48
 15615  0001D2  010A               	movlb	10	; () banked
 15616  0001D4  1908               	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 15617  0001D6  A4D8               	btfss	status,2,c
 15618  0001D8  0012               	return	
 15619                           
 15620                           ; BSR set to: 10
 15621                           ;term.c: 500: {
 15622                           ;term.c: 501: EchoOption = 0u;
 15623  0001DA  0E00               	movlw	0
 15624  0001DC  0102               	movlb	2	; () banked
 15625  0001DE  6FF3               	movwf	Terminal@EchoOption& (0+255),b
 15626                           
 15627                           ; BSR set to: 2
 15628                           ;term.c: 507: }
 15629                           ;term.c: 508: }
 15630                           ;term.c: 509: }
 15631                           
 15632                           ; BSR set to: 2
 15633                           
 15634                           ; BSR set to: 2
 15635                           
 15636                           ;term.c: 504: else
 15637                           ;term.c: 505: {
 15638                           
 15639                           ; BSR set to: 2
 15640                           
 15641                           ; BSR set to: 2
 15642                           ;term.c: 502: }
 15643                           ;term.c: 503: }
 15644                           
 15645                           ; BSR set to: 2
 15646  0001E0  0012               	return	
 15647  0001E2                     l2398:
 15648                           
 15649                           ;term.c: 510: else if ((UsbRxBuffer[0u] == 'S') &&
 15650                           ;term.c: 511: (UsbRxBuffer[0u + 1u] == 'B') &&
 15651                           ;term.c: 512: (UsbRxBuffer[0u + 1u + 1u] == ':'))
 15652                           
 15653                           ; BSR set to: 2
 15654  0001E2  0E53               	movlw	83
 15655  0001E4  010A               	movlb	10	; () banked
 15656  0001E6  1900               	xorwf	Terminal@UsbRxBuffer& (0+255),w,b
 15657  0001E8  A4D8               	btfss	status,2,c
 15658  0001EA  D0D3               	goto	l2411
 15659                           
 15660                           ; BSR set to: 10
 15661  0001EC  0E42               	movlw	66
 15662  0001EE  1901               	xorwf	(Terminal@UsbRxBuffer+1)& (0+255),w,b
 15663  0001F0  A4D8               	btfss	status,2,c
 15664  0001F2  D0CF               	goto	l2411
 15665                           
 15666                           ; BSR set to: 10
 15667  0001F4  0E3A               	movlw	58
 15668  0001F6  1902               	xorwf	(Terminal@UsbRxBuffer+2)& (0+255),w,b
 15669  0001F8  A4D8               	btfss	status,2,c
 15670  0001FA  D0CB               	goto	l2411
 15671                           
 15672                           ; BSR set to: 10
 15673                           ;term.c: 513: {
 15674                           ;term.c: 514: if ((UsbRxBuffer[0u + 1u + 1u + 1u] == 'W') && (UsbRxBuffer[0u + 1u + 1u +
      +                           1u + 1] == ':'))
 15675  0001FC  0E57               	movlw	87
 15676  0001FE  1903               	xorwf	(Terminal@UsbRxBuffer+3)& (0+255),w,b
 15677  000200  A4D8               	btfss	status,2,c
 15678  000202  D091               	goto	l2412
 15679                           
 15680                           ; BSR set to: 10
 15681  000204  0E3A               	movlw	58
 15682  000206  1904               	xorwf	(Terminal@UsbRxBuffer+4)& (0+255),w,b
 15683  000208  A4D8               	btfss	status,2,c
 15684  00020A  D08D               	goto	l2412
 15685                           
 15686                           ; BSR set to: 10
 15687                           ;term.c: 515: {
 15688                           ;term.c: 517: Len[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u];
 15689  00020C  CA05  F3A7         	movff	Terminal@UsbRxBuffer+5,Terminal@Len
 15690                           
 15691                           ;term.c: 518: Len[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 1];
 15692  000210  CA06  F3A8         	movff	Terminal@UsbRxBuffer+6,Terminal@Len+1
 15693                           
 15694                           ;term.c: 520: Addr[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u];
 15695  000214  CA08  F3A3         	movff	Terminal@UsbRxBuffer+8,Terminal@Addr
 15696                           
 15697                           ;term.c: 521: Addr[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u + 1];
 15698  000218  CA09  F3A4         	movff	Terminal@UsbRxBuffer+9,Terminal@Addr+1
 15699                           
 15700                           ; BSR set to: 10
 15701                           ;term.c: 523: PackageLen = atoi((void*)Len);
 15702  00021C  0EA7               	movlw	low Terminal@Len
 15703  00021E  0100               	movlb	0	; () banked
 15704  000220  6F83               	movwf	atoi@s& (0+255),b
 15705  000222  0E03               	movlw	high Terminal@Len
 15706  000224  6F84               	movwf	(atoi@s+1)& (0+255),b
 15707  000226  EC98  F01C         	call	_atoi	;wreg free
 15708  00022A  0100               	movlb	0	; () banked
 15709  00022C  5183               	movf	?_atoi& (0+255),w,b
 15710  00022E  0102               	movlb	2	; () banked
 15711  000230  6FEF               	movwf	Terminal@PackageLen& (0+255),b
 15712                           
 15713                           ; BSR set to: 2
 15714                           ;term.c: 524: SlaveAddr = xtoi((void*)Addr);
 15715  000232  0EA3               	movlw	low Terminal@Addr
 15716  000234  0100               	movlb	0	; () banked
 15717  000236  6F83               	movwf	xtoi@s& (0+255),b
 15718  000238  0E03               	movlw	high Terminal@Addr
 15719  00023A  6F84               	movwf	(xtoi@s+1)& (0+255),b
 15720  00023C  ECD9  F01A         	call	_xtoi	;wreg free
 15721  000240  0100               	movlb	0	; () banked
 15722  000242  5183               	movf	?_xtoi& (0+255),w,b
 15723  000244  0102               	movlb	2	; () banked
 15724  000246  6FEE               	movwf	Terminal@SlaveAddr& (0+255),b
 15725                           
 15726                           ; BSR set to: 2
 15727                           ;term.c: 526: for (Index = 0; Index <= PackageLen; Index++)
 15728  000248  0E00               	movlw	0
 15729  00024A  0100               	movlb	0	; () banked
 15730  00024C  6FA6               	movwf	Terminal@Index& (0+255),b
 15731  00024E  D032               	goto	l2413
 15732  000250                     
 15733                           ;term.c: 527: {
 15734                           ;term.c: 528: Payload[Index].Byte[0] = UsbRxBuffer[2*Index + 0u + 1u + 1u + 1u + 2u + 3u
      +                           + 3u];
 15735                           
 15736                           ; BSR set to: 0
 15737  000250  0100               	movlb	0	; () banked
 15738  000252  51A6               	movf	Terminal@Index& (0+255),w,b
 15739  000254  0D02               	mullw	2
 15740  000256  0E0B               	movlw	11
 15741  000258  26F3               	addwf	prodl,f,c
 15742  00025A  0E00               	movlw	0
 15743  00025C  22F4               	addwfc	prodh,f,c
 15744  00025E  0E00               	movlw	low Terminal@UsbRxBuffer
 15745  000260  24F3               	addwf	prodl,w,c
 15746  000262  6ED9               	movwf	fsr2l,c
 15747  000264  0E0A               	movlw	high Terminal@UsbRxBuffer
 15748  000266  20F4               	addwfc	prodh,w,c
 15749  000268  6EDA               	movwf	fsr2h,c
 15750  00026A  51A6               	movf	Terminal@Index& (0+255),w,b
 15751  00026C  0D04               	mullw	4
 15752  00026E  0E66               	movlw	low Terminal@Payload
 15753  000270  24F3               	addwf	prodl,w,c
 15754  000272  6EE1               	movwf	fsr1l,c
 15755  000274  0E07               	movlw	high Terminal@Payload
 15756  000276  20F4               	addwfc	prodh,w,c
 15757  000278  6EE2               	movwf	fsr1h,c
 15758  00027A  CFDF FFE7          	movff	indf2,indf1
 15759                           
 15760                           ;term.c: 529: Payload[Index].Byte[1] = UsbRxBuffer[2*Index + 0u + 1u + 1u + 1u + 2u + 3u
      +                           + 3u + 1];
 15761  00027E  51A6               	movf	Terminal@Index& (0+255),w,b
 15762  000280  0D02               	mullw	2
 15763  000282  0E0C               	movlw	12
 15764  000284  26F3               	addwf	prodl,f,c
 15765  000286  0E00               	movlw	0
 15766  000288  22F4               	addwfc	prodh,f,c
 15767  00028A  0E00               	movlw	low Terminal@UsbRxBuffer
 15768  00028C  24F3               	addwf	prodl,w,c
 15769  00028E  6ED9               	movwf	fsr2l,c
 15770  000290  0E0A               	movlw	high Terminal@UsbRxBuffer
 15771  000292  20F4               	addwfc	prodh,w,c
 15772  000294  6EDA               	movwf	fsr2h,c
 15773  000296  51A6               	movf	Terminal@Index& (0+255),w,b
 15774  000298  0D04               	mullw	4
 15775  00029A  0E01               	movlw	1
 15776  00029C  26F3               	addwf	prodl,f,c
 15777  00029E  0E00               	movlw	0
 15778  0002A0  22F4               	addwfc	prodh,f,c
 15779  0002A2  0E66               	movlw	low Terminal@Payload
 15780  0002A4  24F3               	addwf	prodl,w,c
 15781  0002A6  6EE1               	movwf	fsr1l,c
 15782  0002A8  0E07               	movlw	high Terminal@Payload
 15783  0002AA  20F4               	addwfc	prodh,w,c
 15784  0002AC  6EE2               	movwf	fsr1h,c
 15785  0002AE  CFDF FFE7          	movff	indf2,indf1
 15786                           
 15787                           ; BSR set to: 0
 15788  0002B2  2BA6               	incf	Terminal@Index& (0+255),f,b
 15789  0002B4                     l2413:
 15790                           
 15791                           ; BSR set to: 0
 15792                           
 15793                           ; BSR set to: 0
 15794  0002B4  51A6               	movf	Terminal@Index& (0+255),w,b
 15795  0002B6  0102               	movlb	2	; () banked
 15796  0002B8  5DEF               	subwf	Terminal@PackageLen& (0+255),w,b
 15797  0002BA  B0D8               	btfsc	status,0,c
 15798  0002BC  D7C9               	goto	l2414
 15799                           
 15800                           ; BSR set to: 2
 15801                           ;term.c: 530: }
 15802                           ;term.c: 532: for (Index = 0; Index <= PackageLen; Index++)
 15803                           
 15804                           ; BSR set to: 2
 15805  0002BE  0E00               	movlw	0
 15806  0002C0  0100               	movlb	0	; () banked
 15807  0002C2  6FA6               	movwf	Terminal@Index& (0+255),b
 15808  0002C4  D01F               	goto	l2416
 15809  0002C6                     
 15810                           ;term.c: 533: {
 15811                           ;term.c: 537: TermTxBuffer[Index] = strtol((void*)&(Payload[Index]), (0), 16);
 15812                           
 15813                           ; BSR set to: 0
 15814  0002C6  0100               	movlb	0	; () banked
 15815  0002C8  51A6               	movf	Terminal@Index& (0+255),w,b
 15816  0002CA  0D04               	mullw	4
 15817  0002CC  0E66               	movlw	low Terminal@Payload
 15818  0002CE  24F3               	addwf	prodl,w,c
 15819  0002D0  6F89               	movwf	strtol@s& (0+255),b
 15820  0002D2  0E07               	movlw	high Terminal@Payload
 15821  0002D4  20F4               	addwfc	prodh,w,c
 15822  0002D6  6F8A               	movwf	(strtol@s+1)& (0+255),b
 15823  0002D8  0E00               	movlw	0
 15824  0002DA  6F8B               	movwf	strtol@endptr& (0+255),b
 15825  0002DC  0E00               	movlw	0
 15826  0002DE  6F8C               	movwf	(strtol@endptr+1)& (0+255),b
 15827  0002E0  0E00               	movlw	0
 15828  0002E2  6F8E               	movwf	(strtol@base+1)& (0+255),b
 15829  0002E4  0E10               	movlw	16
 15830  0002E6  6F8D               	movwf	strtol@base& (0+255),b
 15831  0002E8  EC6A  F00D         	call	_strtol	;wreg free
 15832  0002EC  0100               	movlb	0	; () banked
 15833  0002EE  51A6               	movf	Terminal@Index& (0+255),w,b
 15834  0002F0  0D01               	mullw	1
 15835  0002F2  0E00               	movlw	low Terminal@TermTxBuffer
 15836  0002F4  24F3               	addwf	prodl,w,c
 15837  0002F6  6ED9               	movwf	fsr2l,c
 15838  0002F8  0E01               	movlw	high Terminal@TermTxBuffer
 15839  0002FA  20F4               	addwfc	prodh,w,c
 15840  0002FC  6EDA               	movwf	fsr2h,c
 15841  0002FE  C089  FFDF         	movff	?_strtol,indf2
 15842                           
 15843                           ; BSR set to: 0
 15844  000302  2BA6               	incf	Terminal@Index& (0+255),f,b
 15845  000304                     l2416:
 15846                           
 15847                           ; BSR set to: 0
 15848                           
 15849                           ; BSR set to: 0
 15850  000304  51A6               	movf	Terminal@Index& (0+255),w,b
 15851  000306  0102               	movlb	2	; () banked
 15852  000308  5DEF               	subwf	Terminal@PackageLen& (0+255),w,b
 15853  00030A  B0D8               	btfsc	status,0,c
 15854  00030C  D7DC               	goto	l2417
 15855                           
 15856                           ; BSR set to: 2
 15857                           ;term.c: 539: }
 15858                           ;term.c: 542: I2cSlv_SendI2cMsg(TermTxBuffer, SlaveAddr, PackageLen);
 15859                           
 15860                           ; BSR set to: 2
 15861  00030E  0E00               	movlw	low Terminal@TermTxBuffer
 15862  000310  0100               	movlb	0	; () banked
 15863  000312  6F80               	movwf	I2cSlv_SendI2cMsg@TxBuffer& (0+255),b
 15864  000314  0E01               	movlw	high Terminal@TermTxBuffer
 15865  000316  6F81               	movwf	(I2cSlv_SendI2cMsg@TxBuffer+1)& (0+255),b
 15866  000318  C2EE  F082         	movff	Terminal@SlaveAddr,I2cSlv_SendI2cMsg@SlaveAddr
 15867  00031C  C2EF  F083         	movff	Terminal@PackageLen,I2cSlv_SendI2cMsg@DataLenght
 15868  000320  ECFB  F02F         	call	_I2cSlv_SendI2cMsg	;wreg free
 15869                           
 15870                           ;term.c: 543: }
 15871  000324  0012               	return	
 15872  000326                     l2412:
 15873                           
 15874                           ;term.c: 544: else if ((UsbRxBuffer[0u + 1u + 1u + 1u] == 'R') && (UsbRxBuffer[0u + 1u +
      +                           1u + 1u + 1] == ':'))
 15875  000326  0E52               	movlw	82
 15876  000328  010A               	movlb	10	; () banked
 15877  00032A  1903               	xorwf	(Terminal@UsbRxBuffer+3)& (0+255),w,b
 15878  00032C  A4D8               	btfss	status,2,c
 15879  00032E  0012               	return	
 15880                           
 15881                           ; BSR set to: 10
 15882  000330  0E3A               	movlw	58
 15883  000332  1904               	xorwf	(Terminal@UsbRxBuffer+4)& (0+255),w,b
 15884  000334  A4D8               	btfss	status,2,c
 15885  000336  0012               	return	
 15886                           
 15887                           ; BSR set to: 10
 15888                           ;term.c: 545: {
 15889                           ;term.c: 547: Len[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u];
 15890  000338  CA05  F3A7         	movff	Terminal@UsbRxBuffer+5,Terminal@Len
 15891                           
 15892                           ;term.c: 548: Len[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 1];
 15893  00033C  CA06  F3A8         	movff	Terminal@UsbRxBuffer+6,Terminal@Len+1
 15894                           
 15895                           ;term.c: 550: Addr[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u];
 15896  000340  CA08  F3A3         	movff	Terminal@UsbRxBuffer+8,Terminal@Addr
 15897                           
 15898                           ;term.c: 551: Addr[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u + 1];
 15899  000344  CA09  F3A4         	movff	Terminal@UsbRxBuffer+9,Terminal@Addr+1
 15900                           
 15901                           ; BSR set to: 10
 15902                           ;term.c: 553: PackageLen = atoi((void*)Len);
 15903  000348  0EA7               	movlw	low Terminal@Len
 15904  00034A  0100               	movlb	0	; () banked
 15905  00034C  6F83               	movwf	atoi@s& (0+255),b
 15906  00034E  0E03               	movlw	high Terminal@Len
 15907  000350  6F84               	movwf	(atoi@s+1)& (0+255),b
 15908  000352  EC98  F01C         	call	_atoi	;wreg free
 15909  000356  0100               	movlb	0	; () banked
 15910  000358  5183               	movf	?_atoi& (0+255),w,b
 15911  00035A  0102               	movlb	2	; () banked
 15912  00035C  6FEF               	movwf	Terminal@PackageLen& (0+255),b
 15913                           
 15914                           ; BSR set to: 2
 15915                           ;term.c: 554: SlaveAddr = xtoi((void*)Addr);
 15916  00035E  0EA3               	movlw	low Terminal@Addr
 15917  000360  0100               	movlb	0	; () banked
 15918  000362  6F83               	movwf	xtoi@s& (0+255),b
 15919  000364  0E03               	movlw	high Terminal@Addr
 15920  000366  6F84               	movwf	(xtoi@s+1)& (0+255),b
 15921  000368  ECD9  F01A         	call	_xtoi	;wreg free
 15922  00036C  0100               	movlb	0	; () banked
 15923  00036E  5183               	movf	?_xtoi& (0+255),w,b
 15924  000370  0102               	movlb	2	; () banked
 15925  000372  6FEE               	movwf	Terminal@SlaveAddr& (0+255),b
 15926                           
 15927                           ; BSR set to: 2
 15928                           ;term.c: 557: I2cSlv_ReceiveI2cMsg(TermRxBuffer, SlaveAddr, PackageLen);
 15929  000374  0E40               	movlw	low Terminal@TermRxBuffer
 15930  000376  0100               	movlb	0	; () banked
 15931  000378  6F80               	movwf	I2cSlv_ReceiveI2cMsg@RxBuffer& (0+255),b
 15932  00037A  0E05               	movlw	high Terminal@TermRxBuffer
 15933  00037C  6F81               	movwf	(I2cSlv_ReceiveI2cMsg@RxBuffer+1)& (0+255),b
 15934  00037E  C2EE  F082         	movff	Terminal@SlaveAddr,I2cSlv_ReceiveI2cMsg@SlaveAddr
 15935  000382  C2EF  F083         	movff	Terminal@PackageLen,I2cSlv_ReceiveI2cMsg@DataLenght
 15936  000386  EC9C  F02F         	call	_I2cSlv_ReceiveI2cMsg	;wreg free
 15937                           
 15938                           ;term.c: 560: TermState = Term_PrepSlvI2cResp;
 15939  00038A  0E01               	movlw	1
 15940  00038C  0102               	movlb	2	; () banked
 15941  00038E  6FF0               	movwf	Terminal@TermState& (0+255),b
 15942                           
 15943                           ; BSR set to: 2
 15944                           ;term.c: 561: }
 15945                           ;term.c: 562: }
 15946                           
 15947                           ; BSR set to: 2
 15948  000390  0012               	return	
 15949  000392                     l2411:
 15950                           
 15951                           ;term.c: 563: else if ((UsbRxBuffer[0u] == 'T') &&
 15952                           ;term.c: 564: (UsbRxBuffer[0u + 1u] == 'E') &&
 15953                           ;term.c: 565: (UsbRxBuffer[0u + 1u + 1u] == 'L'))
 15954                           
 15955                           ; BSR set to: 2
 15956  000392  0E54               	movlw	84
 15957  000394  010A               	movlb	10	; () banked
 15958  000396  1900               	xorwf	Terminal@UsbRxBuffer& (0+255),w,b
 15959  000398  A4D8               	btfss	status,2,c
 15960  00039A  0012               	return	
 15961                           
 15962                           ; BSR set to: 10
 15963  00039C  0E45               	movlw	69
 15964  00039E  1901               	xorwf	(Terminal@UsbRxBuffer+1)& (0+255),w,b
 15965  0003A0  A4D8               	btfss	status,2,c
 15966  0003A2  0012               	return	
 15967                           
 15968                           ; BSR set to: 10
 15969  0003A4  0E4C               	movlw	76
 15970  0003A6  1902               	xorwf	(Terminal@UsbRxBuffer+2)& (0+255),w,b
 15971  0003A8  A4D8               	btfss	status,2,c
 15972  0003AA  0012               	return	
 15973                           
 15974                           ; BSR set to: 10
 15975                           ;term.c: 566: {
 15976                           ;term.c: 568: Len[0] = UsbRxBuffer[0u + 1u + 1u + 1u];
 15977  0003AC  CA03  F3A7         	movff	Terminal@UsbRxBuffer+3,Terminal@Len
 15978                           
 15979                           ;term.c: 569: Len[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 1];
 15980  0003B0  CA04  F3A8         	movff	Terminal@UsbRxBuffer+4,Terminal@Len+1
 15981                           
 15982                           ; BSR set to: 10
 15983                           ;term.c: 570: UsbMasterPhoneNumberLen = atoi(Len);
 15984  0003B4  0EA7               	movlw	low Terminal@Len
 15985  0003B6  0100               	movlb	0	; () banked
 15986  0003B8  6F83               	movwf	atoi@s& (0+255),b
 15987  0003BA  0E03               	movlw	high Terminal@Len
 15988  0003BC  6F84               	movwf	(atoi@s+1)& (0+255),b
 15989  0003BE  EC98  F01C         	call	_atoi	;wreg free
 15990  0003C2  C083  F322         	movff	?_atoi,_UsbMasterPhoneNumberLen
 15991  0003C6  C084  F323         	movff	?_atoi+1,_UsbMasterPhoneNumberLen+1
 15992                           
 15993                           ;term.c: 572: for (UINT8 i = 0; i < UsbMasterPhoneNumberLen; i++)
 15994  0003CA  0E00               	movlw	0
 15995  0003CC  0100               	movlb	0	; () banked
 15996  0003CE  6FA4               	movwf	Terminal@i& (0+255),b
 15997  0003D0  D018               	goto	l2423
 15998  0003D2                     
 15999                           ; BSR set to: 0
 16000                           ;term.c: 573: {
 16001                           ;term.c: 574: UsbMasterPhoneNumber[i] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + i];
 16002                           
 16003                           ; BSR set to: 0
 16004  0003D2  51A4               	movf	Terminal@i& (0+255),w,b
 16005  0003D4  6FA2               	movwf	??_Terminal& (0+255),b
 16006  0003D6  6BA3               	clrf	(??_Terminal+1)& (0+255),b
 16007  0003D8  0E05               	movlw	5
 16008  0003DA  27A2               	addwf	??_Terminal& (0+255),f,b
 16009  0003DC  0E00               	movlw	0
 16010  0003DE  23A3               	addwfc	(??_Terminal+1)& (0+255),f,b
 16011  0003E0  0E00               	movlw	low Terminal@UsbRxBuffer
 16012  0003E2  25A2               	addwf	??_Terminal& (0+255),w,b
 16013  0003E4  6ED9               	movwf	fsr2l,c
 16014  0003E6  0E0A               	movlw	high Terminal@UsbRxBuffer
 16015  0003E8  21A3               	addwfc	(??_Terminal+1)& (0+255),w,b
 16016  0003EA  6EDA               	movwf	fsr2h,c
 16017  0003EC  51A4               	movf	Terminal@i& (0+255),w,b
 16018  0003EE  0D01               	mullw	1
 16019  0003F0  0E40               	movlw	low _UsbMasterPhoneNumber
 16020  0003F2  24F3               	addwf	prodl,w,c
 16021  0003F4  6EE1               	movwf	fsr1l,c
 16022  0003F6  0E04               	movlw	high _UsbMasterPhoneNumber
 16023  0003F8  20F4               	addwfc	prodh,w,c
 16024  0003FA  6EE2               	movwf	fsr1h,c
 16025  0003FC  CFDF FFE7          	movff	indf2,indf1
 16026                           
 16027                           ; BSR set to: 0
 16028  000400  2BA4               	incf	Terminal@i& (0+255),f,b
 16029  000402                     l2423:
 16030                           
 16031                           ; BSR set to: 0
 16032                           
 16033                           ; BSR set to: 0
 16034  000402  51A4               	movf	Terminal@i& (0+255),w,b
 16035  000404  6FA2               	movwf	??_Terminal& (0+255),b
 16036  000406  6BA3               	clrf	(??_Terminal+1)& (0+255),b
 16037  000408  0103               	movlb	3	; () banked
 16038  00040A  5122               	movf	_UsbMasterPhoneNumberLen& (0+255),w,b
 16039  00040C  0100               	movlb	0	; () banked
 16040  00040E  5DA2               	subwf	??_Terminal& (0+255),w,b
 16041  000410  0103               	movlb	3	; () banked
 16042  000412  5123               	movf	(_UsbMasterPhoneNumberLen+1)& (0+255),w,b
 16043  000414  0100               	movlb	0	; () banked
 16044  000416  59A3               	subwfb	(??_Terminal+1)& (0+255),w,b
 16045  000418  B0D8               	btfsc	status,0,c
 16046  00041A  0012               	return	
 16047  00041C  D7DA               	goto	l2424
 16048  00041E                     
 16049                           ;term.c: 619: if((cdc_trf_state == 0))
 16050                           
 16051                           ; BSR set to: 0
 16052  00041E  0100               	movlb	0	; () banked
 16053  000420  51C5               	movf	_cdc_trf_state& (0+255),w,b
 16054  000422  A4D8               	btfss	status,2,c
 16055  000424  0012               	return	
 16056                           
 16057                           ; BSR set to: 0
 16058                           ;term.c: 620: {
 16059                           ;term.c: 621: UsbTxBuffer[0] = 'S';
 16060  000426  0E53               	movlw	83
 16061  000428  0102               	movlb	2	; () banked
 16062  00042A  6F00               	movwf	Terminal@UsbTxBuffer& (0+255),b
 16063                           
 16064                           ;term.c: 622: UsbTxBuffer[1] = 'B';
 16065  00042C  0E42               	movlw	66
 16066  00042E  6F01               	movwf	(Terminal@UsbTxBuffer+1)& (0+255),b
 16067                           
 16068                           ;term.c: 623: UsbTxBuffer[2] = '[';
 16069  000430  0E5B               	movlw	91
 16070  000432  6F02               	movwf	(Terminal@UsbTxBuffer+2)& (0+255),b
 16071                           
 16072                           ; BSR set to: 2
 16073                           ;term.c: 624: UsbTxBuffer[3] = Addr[0];
 16074  000434  C3A3  F203         	movff	Terminal@Addr,Terminal@UsbTxBuffer+3
 16075                           
 16076                           ; BSR set to: 2
 16077                           ;term.c: 625: UsbTxBuffer[4] = Addr[1];
 16078  000438  C3A4  F204         	movff	Terminal@Addr+1,Terminal@UsbTxBuffer+4
 16079                           
 16080                           ;term.c: 626: UsbTxBuffer[5] = ']';
 16081  00043C  0E5D               	movlw	93
 16082  00043E  6F05               	movwf	(Terminal@UsbTxBuffer+5)& (0+255),b
 16083                           
 16084                           ;term.c: 627: UsbTxBuffer[6] = ':';
 16085  000440  0E3A               	movlw	58
 16086  000442  6F06               	movwf	(Terminal@UsbTxBuffer+6)& (0+255),b
 16087                           
 16088                           ; BSR set to: 2
 16089                           ;term.c: 628: putUSBUSART(UsbTxBuffer,7);
 16090  000444  0E00               	movlw	low Terminal@UsbTxBuffer
 16091  000446  0100               	movlb	0	; () banked
 16092  000448  6F83               	movwf	putUSBUSART@data& (0+255),b
 16093  00044A  0E02               	movlw	high Terminal@UsbTxBuffer
 16094  00044C  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 16095  00044E  0E07               	movlw	7
 16096  000450  6F85               	movwf	putUSBUSART@length& (0+255),b
 16097  000452  EC96  F032         	call	_putUSBUSART	;wreg free
 16098                           
 16099                           ;term.c: 631: TermState = Term_ReadSlvI2cData;
 16100  000456  0E02               	movlw	2
 16101  000458  0102               	movlb	2	; () banked
 16102  00045A  6FF0               	movwf	Terminal@TermState& (0+255),b
 16103                           
 16104                           ; BSR set to: 2
 16105                           ;term.c: 632: }
 16106                           ;term.c: 633: break;
 16107  00045C  0012               	return	
 16108  00045E                     
 16109                           ; BSR set to: 2
 16110                           ;term.c: 637: if (I2cSlv_I2cReadMsgSts() == MessageReceived)
 16111                           
 16112                           ; BSR set to: 2
 16113  00045E  ECB8  F032         	call	_I2cSlv_I2cReadMsgSts	;wreg free
 16114  000462  06E8               	decf	wreg,f,c
 16115  000464  A4D8               	btfss	status,2,c
 16116  000466  D088               	goto	l2432
 16117                           
 16118                           ;term.c: 638: {
 16119                           ;term.c: 640: if (FormatOption == 1u)
 16120  000468  0102               	movlb	2	; () banked
 16121  00046A  05ED               	decf	Terminal@FormatOption& (0+255),w,b
 16122  00046C  A4D8               	btfss	status,2,c
 16123  00046E  D027               	goto	u13920
 16124                           
 16125                           ; BSR set to: 2
 16126                           ;term.c: 641: {
 16127                           ;term.c: 643: for (Index = 0; Index <= PackageLen; Index++)
 16128  000470  0E00               	movlw	0
 16129  000472  0100               	movlb	0	; () banked
 16130  000474  6FA6               	movwf	Terminal@Index& (0+255),b
 16131  000476  D01E               	goto	l2434
 16132  000478                     
 16133                           ;term.c: 644: {
 16134                           ;term.c: 645: itoa(((void*)&(Payload[Index])),TermRxBuffer[Index],10);
 16135                           
 16136                           ; BSR set to: 0
 16137  000478  0100               	movlb	0	; () banked
 16138  00047A  51A6               	movf	Terminal@Index& (0+255),w,b
 16139  00047C  0D04               	mullw	4
 16140  00047E  0E66               	movlw	low Terminal@Payload
 16141  000480  24F3               	addwf	prodl,w,c
 16142  000482  6F93               	movwf	itoa@buf& (0+255),b
 16143  000484  0E07               	movlw	high Terminal@Payload
 16144  000486  20F4               	addwfc	prodh,w,c
 16145  000488  6F94               	movwf	(itoa@buf+1)& (0+255),b
 16146  00048A  51A6               	movf	Terminal@Index& (0+255),w,b
 16147  00048C  0D01               	mullw	1
 16148  00048E  0E40               	movlw	low Terminal@TermRxBuffer
 16149  000490  24F3               	addwf	prodl,w,c
 16150  000492  6ED9               	movwf	fsr2l,c
 16151  000494  0E05               	movlw	high Terminal@TermRxBuffer
 16152  000496  20F4               	addwfc	prodh,w,c
 16153  000498  6EDA               	movwf	fsr2h,c
 16154  00049A  50DF               	movf	indf2,w,c
 16155  00049C  6FA2               	movwf	??_Terminal& (0+255),b
 16156  00049E  51A2               	movf	??_Terminal& (0+255),w,b
 16157  0004A0  6F95               	movwf	itoa@val& (0+255),b
 16158  0004A2  6B96               	clrf	(itoa@val+1)& (0+255),b
 16159  0004A4  0E00               	movlw	0
 16160  0004A6  6F98               	movwf	(itoa@base+1)& (0+255),b
 16161  0004A8  0E0A               	movlw	10
 16162  0004AA  6F97               	movwf	itoa@base& (0+255),b
 16163  0004AC  EC36  F02F         	call	_itoa	;wreg free
 16164  0004B0  0100               	movlb	0	; () banked
 16165  0004B2  2BA6               	incf	Terminal@Index& (0+255),f,b
 16166  0004B4                     l2434:
 16167                           
 16168                           ; BSR set to: 0
 16169                           
 16170                           ; BSR set to: 0
 16171  0004B4  51A6               	movf	Terminal@Index& (0+255),w,b
 16172  0004B6  0102               	movlb	2	; () banked
 16173  0004B8  5DEF               	subwf	Terminal@PackageLen& (0+255),w,b
 16174  0004BA  B0D8               	btfsc	status,0,c
 16175  0004BC  D7DD               	goto	l2435
 16176  0004BE                     u13920:
 16177                           
 16178                           ; BSR set to: 2
 16179                           ;term.c: 646: }
 16180                           ;term.c: 647: }
 16181                           ;term.c: 650: if((cdc_trf_state == 0))
 16182                           
 16183                           ; BSR set to: 2
 16184                           
 16185                           ; BSR set to: 2
 16186  0004BE  0100               	movlb	0	; () banked
 16187  0004C0  51C5               	movf	_cdc_trf_state& (0+255),w,b
 16188  0004C2  A4D8               	btfss	status,2,c
 16189  0004C4  0012               	return	
 16190                           
 16191                           ; BSR set to: 0
 16192                           ;term.c: 651: {
 16193                           ;term.c: 653: if (FormatOption == 1u)
 16194  0004C6  0102               	movlb	2	; () banked
 16195  0004C8  05ED               	decf	Terminal@FormatOption& (0+255),w,b
 16196  0004CA  A4D8               	btfss	status,2,c
 16197  0004CC  D02B               	goto	l2438
 16198                           
 16199                           ; BSR set to: 2
 16200                           ;term.c: 654: {
 16201                           ;term.c: 655: Payload[(2*PackageLen)].Byte[3] = '\r';
 16202  0004CE  51EF               	movf	Terminal@PackageLen& (0+255),w,b
 16203  0004D0  0D08               	mullw	8
 16204  0004D2  0E03               	movlw	3
 16205  0004D4  26F3               	addwf	prodl,f,c
 16206  0004D6  0E00               	movlw	0
 16207  0004D8  22F4               	addwfc	prodh,f,c
 16208  0004DA  0E66               	movlw	low Terminal@Payload
 16209  0004DC  24F3               	addwf	prodl,w,c
 16210  0004DE  6ED9               	movwf	fsr2l,c
 16211  0004E0  0E07               	movlw	high Terminal@Payload
 16212  0004E2  20F4               	addwfc	prodh,w,c
 16213  0004E4  6EDA               	movwf	fsr2h,c
 16214  0004E6  0E0D               	movlw	13
 16215  0004E8  6EDF               	movwf	indf2,c
 16216                           
 16217                           ;term.c: 656: Payload[(2*PackageLen)].Byte[2] = '\n';
 16218  0004EA  51EF               	movf	Terminal@PackageLen& (0+255),w,b
 16219  0004EC  0D08               	mullw	8
 16220  0004EE  0E02               	movlw	2
 16221  0004F0  26F3               	addwf	prodl,f,c
 16222  0004F2  0E00               	movlw	0
 16223  0004F4  22F4               	addwfc	prodh,f,c
 16224  0004F6  0E66               	movlw	low Terminal@Payload
 16225  0004F8  24F3               	addwf	prodl,w,c
 16226  0004FA  6ED9               	movwf	fsr2l,c
 16227  0004FC  0E07               	movlw	high Terminal@Payload
 16228  0004FE  20F4               	addwfc	prodh,w,c
 16229  000500  6EDA               	movwf	fsr2h,c
 16230  000502  0E0A               	movlw	10
 16231  000504  6EDF               	movwf	indf2,c
 16232                           
 16233                           ; BSR set to: 2
 16234                           ;term.c: 658: putUSBUSART((void*)Payload,(2*PackageLen) + 4);
 16235  000506  0E66               	movlw	low Terminal@Payload
 16236  000508  0100               	movlb	0	; () banked
 16237  00050A  6F83               	movwf	putUSBUSART@data& (0+255),b
 16238  00050C  0E07               	movlw	high Terminal@Payload
 16239  00050E  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 16240  000510  0102               	movlb	2	; () banked
 16241  000512  51EF               	movf	Terminal@PackageLen& (0+255),w,b
 16242  000514  0D02               	mullw	2
 16243  000516  50F3               	movf	prodl,w,c
 16244  000518  0F04               	addlw	4
 16245  00051A  0100               	movlb	0	; () banked
 16246  00051C  6F85               	movwf	putUSBUSART@length& (0+255),b
 16247  00051E  EC96  F032         	call	_putUSBUSART	;wreg free
 16248                           
 16249                           ;term.c: 659: }
 16250  000522  D026               	goto	l2439
 16251  000524                     l2438:
 16252                           
 16253                           ;term.c: 660: else
 16254                           ;term.c: 661: {
 16255                           ;term.c: 662: TermRxBuffer[PackageLen] = '\r';
 16256  000524  0102               	movlb	2	; () banked
 16257  000526  51EF               	movf	Terminal@PackageLen& (0+255),w,b
 16258  000528  0D01               	mullw	1
 16259  00052A  0E40               	movlw	low Terminal@TermRxBuffer
 16260  00052C  24F3               	addwf	prodl,w,c
 16261  00052E  6ED9               	movwf	fsr2l,c
 16262  000530  0E05               	movlw	high Terminal@TermRxBuffer
 16263  000532  20F4               	addwfc	prodh,w,c
 16264  000534  6EDA               	movwf	fsr2h,c
 16265  000536  0E0D               	movlw	13
 16266  000538  6EDF               	movwf	indf2,c
 16267                           
 16268                           ; BSR set to: 2
 16269                           ;term.c: 663: TermRxBuffer[PackageLen + 1] = '\n';
 16270  00053A  51EF               	movf	Terminal@PackageLen& (0+255),w,b
 16271  00053C  0100               	movlb	0	; () banked
 16272  00053E  6FA2               	movwf	??_Terminal& (0+255),b
 16273  000540  6BA3               	clrf	(??_Terminal+1)& (0+255),b
 16274  000542  0E01               	movlw	1
 16275  000544  27A2               	addwf	??_Terminal& (0+255),f,b
 16276  000546  0E00               	movlw	0
 16277  000548  23A3               	addwfc	(??_Terminal+1)& (0+255),f,b
 16278  00054A  0E40               	movlw	low Terminal@TermRxBuffer
 16279  00054C  25A2               	addwf	??_Terminal& (0+255),w,b
 16280  00054E  6ED9               	movwf	fsr2l,c
 16281  000550  0E05               	movlw	high Terminal@TermRxBuffer
 16282  000552  21A3               	addwfc	(??_Terminal+1)& (0+255),w,b
 16283  000554  6EDA               	movwf	fsr2h,c
 16284  000556  0E0A               	movlw	10
 16285  000558  6EDF               	movwf	indf2,c
 16286                           
 16287                           ; BSR set to: 0
 16288                           ;term.c: 665: putUSBUSART(TermRxBuffer,PackageLen + 2);
 16289  00055A  0E40               	movlw	low Terminal@TermRxBuffer
 16290  00055C  6F83               	movwf	putUSBUSART@data& (0+255),b
 16291  00055E  0E05               	movlw	high Terminal@TermRxBuffer
 16292  000560  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 16293  000562  0102               	movlb	2	; () banked
 16294  000564  51EF               	movf	Terminal@PackageLen& (0+255),w,b
 16295  000566  0F02               	addlw	2
 16296  000568  0100               	movlb	0	; () banked
 16297  00056A  6F85               	movwf	putUSBUSART@length& (0+255),b
 16298  00056C  EC96  F032         	call	_putUSBUSART	;wreg free
 16299  000570                     l2439:
 16300                           
 16301                           ;term.c: 666: }
 16302                           ;term.c: 668: TermState = Term_GetData;
 16303  000570  0E00               	movlw	0
 16304  000572  0102               	movlb	2	; () banked
 16305  000574  6FF0               	movwf	Terminal@TermState& (0+255),b
 16306                           
 16307                           ; BSR set to: 2
 16308                           ;term.c: 669: }
 16309                           ;term.c: 670: }
 16310  000576  0012               	return	
 16311  000578                     l2432:
 16312                           
 16313                           ;term.c: 671: else
 16314                           ;term.c: 672: {
 16315                           ;term.c: 674: if (OsTmr_Wait(&SwTimer,3000u) == DelayExpired)
 16316                           
 16317                           ; BSR set to: 2
 16318  000578  0ED9               	movlw	low Terminal@SwTimer
 16319  00057A  0100               	movlb	0	; () banked
 16320  00057C  6F9B               	movwf	OsTmr_Wait@WaitTimer& (0+255),b
 16321  00057E  0E04               	movlw	high Terminal@SwTimer
 16322  000580  6F9C               	movwf	(OsTmr_Wait@WaitTimer+1)& (0+255),b
 16323  000582  0EB8               	movlw	184
 16324  000584  6F9D               	movwf	OsTmr_Wait@DelayMs& (0+255),b
 16325  000586  0E0B               	movlw	11
 16326  000588  6F9E               	movwf	(OsTmr_Wait@DelayMs+1)& (0+255),b
 16327  00058A  0E00               	movlw	0
 16328  00058C  6F9F               	movwf	(OsTmr_Wait@DelayMs+2)& (0+255),b
 16329  00058E  0E00               	movlw	0
 16330  000590  6FA0               	movwf	(OsTmr_Wait@DelayMs+3)& (0+255),b
 16331  000592  EC40  F028         	call	_OsTmr_Wait	;wreg free
 16332  000596  06E8               	decf	wreg,f,c
 16333  000598  A4D8               	btfss	status,2,c
 16334  00059A  0012               	return	
 16335                           
 16336                           ;term.c: 675: {
 16337                           ;term.c: 677: if((cdc_trf_state == 0))
 16338  00059C  0100               	movlb	0	; () banked
 16339  00059E  51C5               	movf	_cdc_trf_state& (0+255),w,b
 16340  0005A0  A4D8               	btfss	status,2,c
 16341  0005A2  0012               	return	
 16342                           
 16343                           ; BSR set to: 0
 16344                           ;term.c: 678: {
 16345                           ;term.c: 679: strcpy(UsbTxBuffer," Lazy device...you've been timed-out!!!\r\n");
 16346  0005A4  0E00               	movlw	low Terminal@UsbTxBuffer
 16347  0005A6  6F7D               	movwf	strcpy@to& (0+255),b
 16348  0005A8  0E02               	movlw	high Terminal@UsbTxBuffer
 16349  0005AA  6F7E               	movwf	(strcpy@to+1)& (0+255),b
 16350  0005AC  0E5F               	movlw	low STR_21
 16351  0005AE  6F7F               	movwf	strcpy@from& (0+255),b
 16352  0005B0  0EFE               	movlw	high STR_21
 16353  0005B2  6F80               	movwf	(strcpy@from+1)& (0+255),b
 16354  0005B4  ECFA  F030         	call	_strcpy	;wreg free
 16355                           
 16356                           ;term.c: 680: putUSBUSART(UsbTxBuffer,sizeof(" Lazy device...you've been timed-out!!!\r\
      +                          n")-1);
 16357  0005B8  0E00               	movlw	low Terminal@UsbTxBuffer
 16358  0005BA  0100               	movlb	0	; () banked
 16359  0005BC  6F83               	movwf	putUSBUSART@data& (0+255),b
 16360  0005BE  0E02               	movlw	high Terminal@UsbTxBuffer
 16361  0005C0  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 16362  0005C2  0E29               	movlw	41
 16363  0005C4  6F85               	movwf	putUSBUSART@length& (0+255),b
 16364  0005C6  EC96  F032         	call	_putUSBUSART	;wreg free
 16365                           
 16366                           ;term.c: 682: TermState = Term_GetData;
 16367  0005CA  0E00               	movlw	0
 16368  0005CC  0102               	movlb	2	; () banked
 16369  0005CE  6FF0               	movwf	Terminal@TermState& (0+255),b
 16370                           
 16371                           ; BSR set to: 2
 16372                           ;term.c: 693: }
 16373                           
 16374                           ; BSR set to: 2
 16375                           ;term.c: 692: break;
 16376                           
 16377                           ;term.c: 691: default:
 16378                           
 16379                           ; BSR set to: 2
 16380                           ;term.c: 689: break;
 16381                           
 16382                           ;term.c: 688: case Term_ReadSlvUartData:
 16383                           
 16384                           ; BSR set to: 2
 16385                           ;term.c: 683: }
 16386                           ;term.c: 684: }
 16387                           ;term.c: 685: }
 16388                           ;term.c: 686: break;
 16389                           
 16390                           ; BSR set to: 2
 16391                           
 16392                           ; BSR set to: 2
 16393  0005D0  0012               	return	
 16394  0005D2                     l2393:
 16395                           
 16396                           ; BSR set to: 2
 16397  0005D2  0102               	movlb	2	; () banked
 16398  0005D4  51F0               	movf	Terminal@TermState& (0+255),w,b
 16399                           
 16400                           ; Switch size 1, requested type "space"
 16401                           ; Number of cases is 4, Range of values is 0 to 3
 16402                           ; switch strategies available:
 16403                           ; Name         Instructions Cycles
 16404                           ; simple_byte           13     7 (average)
 16405                           ;	Chosen strategy is simple_byte
 16406  0005D6  0A00               	xorlw	0	; case 0
 16407  0005D8  B4D8               	btfsc	status,2,c
 16408  0005DA  D583               	goto	l2394
 16409  0005DC  0A01               	xorlw	1	; case 1
 16410  0005DE  B4D8               	btfsc	status,2,c
 16411  0005E0  D71E               	goto	l2429
 16412  0005E2  0A03               	xorlw	3	; case 2
 16413  0005E4  B4D8               	btfsc	status,2,c
 16414  0005E6  D73B               	goto	l2431
 16415  0005E8  0A01               	xorlw	1	; case 3
 16416  0005EA  0012               	return	
 16417  0005EC                     __end_of_Terminal:
 16418                           	opt stack 0
 16419                           tosu	equ	0xFFF
 16420                           tosh	equ	0xFFE
 16421                           tosl	equ	0xFFD
 16422                           pclath	equ	0xFFA
 16423                           tblptru	equ	0xFF8
 16424                           tblptrh	equ	0xFF7
 16425                           tblptrl	equ	0xFF6
 16426                           tablat	equ	0xFF5
 16427                           prodh	equ	0xFF4
 16428                           prodl	equ	0xFF3
 16429                           intcon	equ	0xFF2
 16430                           intcon2	equ	0xFF1
 16431                           intcon3	equ	0xFF0
 16432                           indf0	equ	0xFEF
 16433                           postinc0	equ	0xFEE
 16434                           plusw0	equ	0xFEB
 16435                           fsr0h	equ	0xFEA
 16436                           fsr0l	equ	0xFE9
 16437                           wreg	equ	0xFE8
 16438                           indf1	equ	0xFE7
 16439                           postinc1	equ	0xFE6
 16440                           postdec1	equ	0xFE5
 16441                           fsr1h	equ	0xFE2
 16442                           fsr1l	equ	0xFE1
 16443                           indf2	equ	0xFDF
 16444                           postinc2	equ	0xFDE
 16445                           postdec2	equ	0xFDD
 16446                           plusw2	equ	0xFDB
 16447                           fsr2h	equ	0xFDA
 16448                           fsr2l	equ	0xFD9
 16449                           status	equ	0xFD8
 16450                           
 16451 ;; *************** function _xtoi *****************
 16452 ;; Defined at:
 16453 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/xtoi.c"
 16454 ;; Parameters:    Size  Location     Type
 16455 ;;  s               2   35[BANK0 ] PTR const unsigned char 
 16456 ;;		 -> Terminal@Addr(4), 
 16457 ;; Auto vars:     Size  Location     Type
 16458 ;;  val             2   40[BANK0 ] unsigned int 
 16459 ;;  c               1   42[BANK0 ] unsigned char 
 16460 ;;  sign            1   39[BANK0 ] unsigned char 
 16461 ;; Return value:  Size  Location     Type
 16462 ;;                  2   35[BANK0 ] unsigned int 
 16463 ;; Registers used:
 16464 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16465 ;; Tracked objects:
 16466 ;;		On entry : 0/0
 16467 ;;		On exit  : 0/0
 16468 ;;		Unchanged: 0/0
 16469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16470 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16471 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16472 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16473 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16474 ;;Total ram usage:        8 bytes
 16475 ;; Hardware stack levels used:    1
 16476 ;; Hardware stack levels required when called:   13
 16477 ;; This function calls:
 16478 ;;		_isdigit
 16479 ;;		_isspace
 16480 ;;		_isupper
 16481 ;;		_isxdigit
 16482 ;;		_tolower
 16483 ;; This function is called by:
 16484 ;;		_Terminal
 16485 ;; This function uses a non-reentrant model
 16486 ;;
 16487                           
 16488                           	psect	text61
 16489  0035B2                     __ptext61:
 16490                           	opt stack 0
 16491  0035B2                     _xtoi:
 16492                           	opt stack 12
 16493                           
 16494                           ;incstack = 0
 16495  0035B2  0E00               	movlw	0
 16496  0035B4  0100               	movlb	0	; () banked
 16497  0035B6  6F87               	movwf	xtoi@sign& (0+255),b
 16498  0035B8  0E00               	movlw	0
 16499  0035BA  6F89               	movwf	(xtoi@val+1)& (0+255),b
 16500  0035BC  0E00               	movlw	0
 16501  0035BE  6F88               	movwf	xtoi@val& (0+255),b
 16502  0035C0  D003               	goto	l3492
 16503  0035C2                     
 16504                           ; BSR set to: 0
 16505  0035C2  0100               	movlb	0	; () banked
 16506  0035C4  4B83               	infsnz	xtoi@s& (0+255),f,b
 16507  0035C6  2B84               	incf	(xtoi@s+1)& (0+255),f,b
 16508  0035C8                     l3492:
 16509                           
 16510                           ; BSR set to: 0
 16511                           
 16512                           ; BSR set to: 0
 16513  0035C8  C083  FFD9         	movff	xtoi@s,fsr2l
 16514  0035CC  C084  FFDA         	movff	xtoi@s+1,fsr2h
 16515  0035D0  50DF               	movf	indf2,w,c
 16516  0035D2  ECCC  F031         	call	_isspace
 16517  0035D6  B0D8               	btfsc	status,0,c
 16518  0035D8  D7F4               	goto	l3493
 16519  0035DA  C083  FFD9         	movff	xtoi@s,fsr2l
 16520  0035DE  C084  FFDA         	movff	xtoi@s+1,fsr2h
 16521  0035E2  0E2D               	movlw	45
 16522  0035E4  18DE               	xorwf	postinc2,w,c
 16523  0035E6  A4D8               	btfss	status,2,c
 16524  0035E8  D003               	goto	l3495
 16525  0035EA  0100               	movlb	0	; () banked
 16526  0035EC  2B87               	incf	xtoi@sign& (0+255),f,b
 16527  0035EE  D009               	goto	L15
 16528  0035F0                     l3495:
 16529                           
 16530                           ; BSR set to: 0
 16531  0035F0  C083  FFD9         	movff	xtoi@s,fsr2l
 16532  0035F4  C084  FFDA         	movff	xtoi@s+1,fsr2h
 16533  0035F8  0E2B               	movlw	43
 16534  0035FA  18DE               	xorwf	postinc2,w,c
 16535  0035FC  A4D8               	btfss	status,2,c
 16536  0035FE  D028               	goto	l3498
 16537  003600  0100               	movlb	0	; () banked
 16538  003602                     L15:
 16539  003602  4B83               	infsnz	xtoi@s& (0+255),f,b
 16540  003604  2B84               	incf	(xtoi@s+1)& (0+255),f,b
 16541                           
 16542                           ; BSR set to: 0
 16543                           
 16544                           ; BSR set to: 0
 16545  003606  D024               	goto	l3498
 16546  003608                     
 16547                           ; BSR set to: 0
 16548  003608  0100               	movlb	0	; () banked
 16549  00360A  518A               	movf	xtoi@c& (0+255),w,b
 16550  00360C  EC85  F032         	call	_isupper
 16551  003610  A0D8               	btfss	status,0,c
 16552  003612  D006               	goto	l3500
 16553  003614  0100               	movlb	0	; () banked
 16554  003616  518A               	movf	xtoi@c& (0+255),w,b
 16555  003618  EC67  F033         	call	_tolower
 16556  00361C  0100               	movlb	0	; () banked
 16557  00361E  6F8A               	movwf	xtoi@c& (0+255),b
 16558  003620                     l3500:
 16559  003620  0100               	movlb	0	; () banked
 16560  003622  518A               	movf	xtoi@c& (0+255),w,b
 16561  003624  ECA7  F032         	call	_isdigit
 16562  003628  A0D8               	btfss	status,0,c
 16563  00362A  D002               	goto	l3501
 16564  00362C  0E30               	movlw	48
 16565  00362E  D001               	goto	L14
 16566  003630                     l3501:
 16567                           
 16568                           ; BSR set to: 0
 16569  003630  0E57               	movlw	87
 16570  003632                     L14:
 16571  003632  0100               	movlb	0	; () banked
 16572  003634  5F8A               	subwf	xtoi@c& (0+255),f,b
 16573                           
 16574                           ; BSR set to: 0
 16575  003636  3B88               	swapf	xtoi@val& (0+255),f,b
 16576  003638  3B89               	swapf	(xtoi@val+1)& (0+255),f,b
 16577  00363A  0EF0               	movlw	240
 16578  00363C  1789               	andwf	(xtoi@val+1)& (0+255),f,b
 16579  00363E  5188               	movf	xtoi@val& (0+255),w,b
 16580  003640  0B0F               	andlw	15
 16581  003642  1389               	iorwf	(xtoi@val+1)& (0+255),f,b
 16582  003644  0EF0               	movlw	240
 16583  003646  1788               	andwf	xtoi@val& (0+255),f,b
 16584  003648  518A               	movf	xtoi@c& (0+255),w,b
 16585  00364A  2788               	addwf	xtoi@val& (0+255),f,b
 16586  00364C  0E00               	movlw	0
 16587  00364E  2389               	addwfc	(xtoi@val+1)& (0+255),f,b
 16588  003650                     l3498:
 16589                           
 16590                           ; BSR set to: 0
 16591  003650  C083  FFD9         	movff	xtoi@s,fsr2l
 16592  003654  C084  FFDA         	movff	xtoi@s+1,fsr2h
 16593  003658  0100               	movlb	0	; () banked
 16594  00365A  4B83               	infsnz	xtoi@s& (0+255),f,b
 16595  00365C  2B84               	incf	(xtoi@s+1)& (0+255),f,b
 16596  00365E  50DF               	movf	indf2,w,c
 16597  003660  6F8A               	movwf	xtoi@c& (0+255),b
 16598  003662  518A               	movf	xtoi@c& (0+255),w,b
 16599  003664  EC39  F030         	call	_isxdigit
 16600  003668  B0D8               	btfsc	status,0,c
 16601  00366A  D7CE               	goto	l3499
 16602  00366C  0100               	movlb	0	; () banked
 16603  00366E  5187               	movf	xtoi@sign& (0+255),w,b
 16604  003670  B4D8               	btfsc	status,2,c
 16605  003672  D00D               	goto	l3504
 16606                           
 16607                           ; BSR set to: 0
 16608  003674  C088  F085         	movff	xtoi@val,??_xtoi
 16609  003678  C089  F086         	movff	xtoi@val+1,??_xtoi+1
 16610  00367C  1F85               	comf	??_xtoi& (0+255),f,b
 16611  00367E  1F86               	comf	(??_xtoi+1)& (0+255),f,b
 16612  003680  4B85               	infsnz	??_xtoi& (0+255),f,b
 16613  003682  2B86               	incf	(??_xtoi+1)& (0+255),f,b
 16614  003684  C085  F083         	movff	??_xtoi,?_xtoi
 16615  003688  C086  F084         	movff	??_xtoi+1,?_xtoi+1
 16616  00368C  0012               	return	
 16617  00368E                     l3504:
 16618                           
 16619                           ; BSR set to: 0
 16620  00368E  C088  F083         	movff	xtoi@val,?_xtoi
 16621  003692  C089  F084         	movff	xtoi@val+1,?_xtoi+1
 16622                           
 16623                           ; BSR set to: 0
 16624  003696  0012               	return		;funcret
 16625  003698                     __end_of_xtoi:
 16626                           	opt stack 0
 16627                           tosu	equ	0xFFF
 16628                           tosh	equ	0xFFE
 16629                           tosl	equ	0xFFD
 16630                           pclath	equ	0xFFA
 16631                           tblptru	equ	0xFF8
 16632                           tblptrh	equ	0xFF7
 16633                           tblptrl	equ	0xFF6
 16634                           tablat	equ	0xFF5
 16635                           prodh	equ	0xFF4
 16636                           prodl	equ	0xFF3
 16637                           intcon	equ	0xFF2
 16638                           intcon2	equ	0xFF1
 16639                           intcon3	equ	0xFF0
 16640                           indf0	equ	0xFEF
 16641                           postinc0	equ	0xFEE
 16642                           plusw0	equ	0xFEB
 16643                           fsr0h	equ	0xFEA
 16644                           fsr0l	equ	0xFE9
 16645                           wreg	equ	0xFE8
 16646                           indf1	equ	0xFE7
 16647                           postinc1	equ	0xFE6
 16648                           postdec1	equ	0xFE5
 16649                           fsr1h	equ	0xFE2
 16650                           fsr1l	equ	0xFE1
 16651                           indf2	equ	0xFDF
 16652                           postinc2	equ	0xFDE
 16653                           postdec2	equ	0xFDD
 16654                           plusw2	equ	0xFDB
 16655                           fsr2h	equ	0xFDA
 16656                           fsr2l	equ	0xFD9
 16657                           status	equ	0xFD8
 16658                           
 16659 ;; *************** function _tolower *****************
 16660 ;; Defined at:
 16661 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/tolower.c"
 16662 ;; Parameters:    Size  Location     Type
 16663 ;;  c               1    wreg     unsigned char 
 16664 ;; Auto vars:     Size  Location     Type
 16665 ;;  c               1   29[BANK0 ] unsigned char 
 16666 ;; Return value:  Size  Location     Type
 16667 ;;                  1    wreg      unsigned char 
 16668 ;; Registers used:
 16669 ;;		wreg, status,2, status,0
 16670 ;; Tracked objects:
 16671 ;;		On entry : 0/0
 16672 ;;		On exit  : 0/0
 16673 ;;		Unchanged: 0/0
 16674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16676 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16678 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16679 ;;Total ram usage:        1 bytes
 16680 ;; Hardware stack levels used:    1
 16681 ;; Hardware stack levels required when called:   11
 16682 ;; This function calls:
 16683 ;;		Nothing
 16684 ;; This function is called by:
 16685 ;;		_xtoi
 16686 ;; This function uses a non-reentrant model
 16687 ;;
 16688                           
 16689                           	psect	text62
 16690  0066CE                     __ptext62:
 16691                           	opt stack 0
 16692  0066CE                     _tolower:
 16693                           	opt stack 13
 16694                           
 16695                           ; BSR set to: 0
 16696                           ;incstack = 0
 16697                           ;tolower@c stored from wreg
 16698  0066CE  0100               	movlb	0	; () banked
 16699  0066D0  6F7D               	movwf	tolower@c& (0+255),b
 16700  0066D2  0E5B               	movlw	91
 16701  0066D4  0100               	movlb	0	; () banked
 16702  0066D6  617D               	cpfslt	tolower@c& (0+255),b
 16703  0066D8  D004               	goto	l3551
 16704                           
 16705                           ; BSR set to: 0
 16706  0066DA  0E40               	movlw	64
 16707  0066DC  657D               	cpfsgt	tolower@c& (0+255),b
 16708  0066DE  D001               	goto	l3551
 16709                           
 16710                           ; BSR set to: 0
 16711  0066E0  8B7D               	bsf	tolower@c& (0+255),5,b
 16712  0066E2                     l3551:
 16713                           
 16714                           ; BSR set to: 0
 16715                           
 16716                           ; BSR set to: 0
 16717  0066E2  517D               	movf	tolower@c& (0+255),w,b
 16718  0066E4  0012               	return	
 16719  0066E6                     __end_of_tolower:
 16720                           	opt stack 0
 16721                           tosu	equ	0xFFF
 16722                           tosh	equ	0xFFE
 16723                           tosl	equ	0xFFD
 16724                           pclath	equ	0xFFA
 16725                           tblptru	equ	0xFF8
 16726                           tblptrh	equ	0xFF7
 16727                           tblptrl	equ	0xFF6
 16728                           tablat	equ	0xFF5
 16729                           prodh	equ	0xFF4
 16730                           prodl	equ	0xFF3
 16731                           intcon	equ	0xFF2
 16732                           intcon2	equ	0xFF1
 16733                           intcon3	equ	0xFF0
 16734                           indf0	equ	0xFEF
 16735                           postinc0	equ	0xFEE
 16736                           plusw0	equ	0xFEB
 16737                           fsr0h	equ	0xFEA
 16738                           fsr0l	equ	0xFE9
 16739                           wreg	equ	0xFE8
 16740                           indf1	equ	0xFE7
 16741                           postinc1	equ	0xFE6
 16742                           postdec1	equ	0xFE5
 16743                           fsr1h	equ	0xFE2
 16744                           fsr1l	equ	0xFE1
 16745                           indf2	equ	0xFDF
 16746                           postinc2	equ	0xFDE
 16747                           postdec2	equ	0xFDD
 16748                           plusw2	equ	0xFDB
 16749                           fsr2h	equ	0xFDA
 16750                           fsr2l	equ	0xFD9
 16751                           status	equ	0xFD8
 16752                           
 16753 ;; *************** function _isxdigit *****************
 16754 ;; Defined at:
 16755 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isxdigit.c"
 16756 ;; Parameters:    Size  Location     Type
 16757 ;;  c               1    wreg     unsigned char 
 16758 ;; Auto vars:     Size  Location     Type
 16759 ;;  c               1   34[BANK0 ] unsigned char 
 16760 ;; Return value:  Size  Location     Type
 16761 ;;		None               void
 16762 ;; Registers used:
 16763 ;;		wreg, status,2, status,0, cstack
 16764 ;; Tracked objects:
 16765 ;;		On entry : 0/0
 16766 ;;		On exit  : 0/0
 16767 ;;		Unchanged: 0/0
 16768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16770 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16771 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16772 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16773 ;;Total ram usage:        3 bytes
 16774 ;; Hardware stack levels used:    1
 16775 ;; Hardware stack levels required when called:   12
 16776 ;; This function calls:
 16777 ;;		_isdigit
 16778 ;; This function is called by:
 16779 ;;		_xtoi
 16780 ;; This function uses a non-reentrant model
 16781 ;;
 16782                           
 16783                           	psect	text63
 16784  006072                     __ptext63:
 16785                           	opt stack 0
 16786  006072                     _isxdigit:
 16787                           	opt stack 12
 16788                           
 16789                           ; BSR set to: 0
 16790                           ;incstack = 0
 16791                           ;isxdigit@c stored from wreg
 16792  006072  0100               	movlb	0	; () banked
 16793  006074  6F82               	movwf	isxdigit@c& (0+255),b
 16794  006076  0E01               	movlw	1
 16795  006078  0100               	movlb	0	; () banked
 16796  00607A  6F81               	movwf	_isxdigit$6636& (0+255),b
 16797                           
 16798                           ; BSR set to: 0
 16799  00607C  0E67               	movlw	103
 16800  00607E  6182               	cpfslt	isxdigit@c& (0+255),b
 16801  006080  D003               	goto	u12300
 16802                           
 16803                           ; BSR set to: 0
 16804  006082  0E61               	movlw	97
 16805  006084  6182               	cpfslt	isxdigit@c& (0+255),b
 16806  006086  D00E               	goto	l3547
 16807  006088                     u12300:
 16808                           
 16809                           ; BSR set to: 0
 16810                           
 16811                           ; BSR set to: 0
 16812  006088  0E47               	movlw	71
 16813  00608A  6182               	cpfslt	isxdigit@c& (0+255),b
 16814  00608C  D003               	goto	u12320
 16815                           
 16816                           ; BSR set to: 0
 16817  00608E  0E41               	movlw	65
 16818  006090  6182               	cpfslt	isxdigit@c& (0+255),b
 16819  006092  D008               	goto	l3547
 16820  006094                     u12320:
 16821                           
 16822                           ; BSR set to: 0
 16823                           
 16824                           ; BSR set to: 0
 16825  006094  5182               	movf	isxdigit@c& (0+255),w,b
 16826  006096  ECA7  F032         	call	_isdigit
 16827  00609A  B0D8               	btfsc	status,0,c
 16828  00609C  D003               	goto	l3547
 16829  00609E  0E00               	movlw	0
 16830  0060A0  0100               	movlb	0	; () banked
 16831  0060A2  6F81               	movwf	_isxdigit$6636& (0+255),b
 16832  0060A4                     l3547:
 16833                           
 16834                           ; BSR set to: 0
 16835  0060A4  C081  F080         	movff	_isxdigit$6636,??_isxdigit
 16836  0060A8  0100               	movlb	0	; () banked
 16837  0060AA  3180               	rrcf	??_isxdigit& (0+255),w,b
 16838  0060AC  0012               	return	
 16839  0060AE                     __end_of_isxdigit:
 16840                           	opt stack 0
 16841                           tosu	equ	0xFFF
 16842                           tosh	equ	0xFFE
 16843                           tosl	equ	0xFFD
 16844                           pclath	equ	0xFFA
 16845                           tblptru	equ	0xFF8
 16846                           tblptrh	equ	0xFF7
 16847                           tblptrl	equ	0xFF6
 16848                           tablat	equ	0xFF5
 16849                           prodh	equ	0xFF4
 16850                           prodl	equ	0xFF3
 16851                           intcon	equ	0xFF2
 16852                           intcon2	equ	0xFF1
 16853                           intcon3	equ	0xFF0
 16854                           indf0	equ	0xFEF
 16855                           postinc0	equ	0xFEE
 16856                           plusw0	equ	0xFEB
 16857                           fsr0h	equ	0xFEA
 16858                           fsr0l	equ	0xFE9
 16859                           wreg	equ	0xFE8
 16860                           indf1	equ	0xFE7
 16861                           postinc1	equ	0xFE6
 16862                           postdec1	equ	0xFE5
 16863                           fsr1h	equ	0xFE2
 16864                           fsr1l	equ	0xFE1
 16865                           indf2	equ	0xFDF
 16866                           postinc2	equ	0xFDE
 16867                           postdec2	equ	0xFDD
 16868                           plusw2	equ	0xFDB
 16869                           fsr2h	equ	0xFDA
 16870                           fsr2l	equ	0xFD9
 16871                           status	equ	0xFD8
 16872                           
 16873 ;; *************** function _strtol *****************
 16874 ;; Defined at:
 16875 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/strtol.c"
 16876 ;; Parameters:    Size  Location     Type
 16877 ;;  s               2   41[BANK0 ] PTR const unsigned char 
 16878 ;;		 -> Terminal@Payload(80), 
 16879 ;;  endptr          2   43[BANK0 ] PTR PTR unsigned char 
 16880 ;;		 -> NULL(0), 
 16881 ;;  base            2   45[BANK0 ] int 
 16882 ;; Auto vars:     Size  Location     Type
 16883 ;;  a               4   52[BANK0 ] long 
 16884 ;;  c               1   56[BANK0 ] unsigned char 
 16885 ;;  sign            1   51[BANK0 ] unsigned char 
 16886 ;; Return value:  Size  Location     Type
 16887 ;;                  4   41[BANK0 ] long 
 16888 ;; Registers used:
 16889 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16890 ;; Tracked objects:
 16891 ;;		On entry : 0/0
 16892 ;;		On exit  : 0/0
 16893 ;;		Unchanged: 0/0
 16894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16895 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16896 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16897 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16898 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16899 ;;Total ram usage:       16 bytes
 16900 ;; Hardware stack levels used:    1
 16901 ;; Hardware stack levels required when called:   13
 16902 ;; This function calls:
 16903 ;;		___lmul
 16904 ;;		_isalpha
 16905 ;;		_isdigit
 16906 ;;		_isspace
 16907 ;;		_toupper
 16908 ;; This function is called by:
 16909 ;;		_Terminal
 16910 ;; This function uses a non-reentrant model
 16911 ;;
 16912                           
 16913                           	psect	text64
 16914  001AD4                     __ptext64:
 16915                           	opt stack 0
 16916  001AD4                     _strtol:
 16917                           	opt stack 12
 16918                           
 16919                           ; BSR set to: 0
 16920                           ;incstack = 0
 16921  001AD4  C089  FFD9         	movff	strtol@s,fsr2l
 16922  001AD8  C08A  FFDA         	movff	strtol@s+1,fsr2h
 16923  001ADC  50DF               	movf	indf2,w,c
 16924  001ADE  0100               	movlb	0	; () banked
 16925  001AE0  6F98               	movwf	strtol@c& (0+255),b
 16926                           
 16927                           ; BSR set to: 0
 16928  001AE2  4B89               	infsnz	strtol@s& (0+255),f,b
 16929  001AE4  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 16930                           
 16931                           ; BSR set to: 0
 16932  001AE6  5198               	movf	strtol@c& (0+255),w,b
 16933  001AE8  ECCC  F031         	call	_isspace
 16934  001AEC  B0D8               	btfsc	status,0,c
 16935  001AEE  D7F2               	goto	_strtol
 16936  001AF0  0E00               	movlw	0
 16937  001AF2  0100               	movlb	0	; () banked
 16938  001AF4  6F94               	movwf	strtol@a& (0+255),b
 16939  001AF6  0E00               	movlw	0
 16940  001AF8  6F95               	movwf	(strtol@a+1)& (0+255),b
 16941  001AFA  0E00               	movlw	0
 16942  001AFC  6F96               	movwf	(strtol@a+2)& (0+255),b
 16943  001AFE  0E00               	movlw	0
 16944  001B00  6F97               	movwf	(strtol@a+3)& (0+255),b
 16945  001B02  0E00               	movlw	0
 16946  001B04  6F93               	movwf	strtol@sign& (0+255),b
 16947                           
 16948                           ; BSR set to: 0
 16949  001B06  0E2D               	movlw	45
 16950  001B08  1998               	xorwf	strtol@c& (0+255),w,b
 16951  001B0A  A4D8               	btfss	status,2,c
 16952  001B0C  D003               	goto	l3454
 16953                           
 16954                           ; BSR set to: 0
 16955  001B0E  0E01               	movlw	1
 16956  001B10  6F93               	movwf	strtol@sign& (0+255),b
 16957  001B12  D004               	goto	u12800
 16958  001B14                     l3454:
 16959                           
 16960                           ; BSR set to: 0
 16961                           
 16962                           ; BSR set to: 0
 16963  001B14  0E2B               	movlw	43
 16964  001B16  1998               	xorwf	strtol@c& (0+255),w,b
 16965  001B18  A4D8               	btfss	status,2,c
 16966  001B1A  D008               	goto	l3456
 16967  001B1C                     u12800:
 16968                           
 16969                           ; BSR set to: 0
 16970  001B1C  C089  FFD9         	movff	strtol@s,fsr2l
 16971  001B20  C08A  FFDA         	movff	strtol@s+1,fsr2h
 16972  001B24  50DF               	movf	indf2,w,c
 16973  001B26  6F98               	movwf	strtol@c& (0+255),b
 16974                           
 16975                           ; BSR set to: 0
 16976  001B28  4B89               	infsnz	strtol@s& (0+255),f,b
 16977  001B2A  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 16978  001B2C                     l3456:
 16979                           
 16980                           ; BSR set to: 0
 16981                           
 16982                           ; BSR set to: 0
 16983                           
 16984                           ; BSR set to: 0
 16985  001B2C  0E30               	movlw	48
 16986  001B2E  1998               	xorwf	strtol@c& (0+255),w,b
 16987  001B30  A4D8               	btfss	status,2,c
 16988  001B32  D02E               	goto	l3464
 16989                           
 16990                           ; BSR set to: 0
 16991  001B34  C089  FFD9         	movff	strtol@s,fsr2l
 16992  001B38  C08A  FFDA         	movff	strtol@s+1,fsr2h
 16993  001B3C  50DF               	movf	indf2,w,c
 16994  001B3E  6F98               	movwf	strtol@c& (0+255),b
 16995                           
 16996                           ; BSR set to: 0
 16997  001B40  4B89               	infsnz	strtol@s& (0+255),f,b
 16998  001B42  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 16999                           
 17000                           ; BSR set to: 0
 17001  001B44  518D               	movf	strtol@base& (0+255),w,b
 17002  001B46  118E               	iorwf	(strtol@base+1)& (0+255),w,b
 17003  001B48  B4D8               	btfsc	status,2,c
 17004  001B4A  D005               	goto	u12830
 17005                           
 17006                           ; BSR set to: 0
 17007  001B4C  0E10               	movlw	16
 17008  001B4E  198D               	xorwf	strtol@base& (0+255),w,b
 17009  001B50  118E               	iorwf	(strtol@base+1)& (0+255),w,b
 17010  001B52  A4D8               	btfss	status,2,c
 17011  001B54  D015               	goto	l3458
 17012  001B56                     u12830:
 17013                           
 17014                           ; BSR set to: 0
 17015                           
 17016                           ; BSR set to: 0
 17017  001B56  0E78               	movlw	120
 17018  001B58  1998               	xorwf	strtol@c& (0+255),w,b
 17019  001B5A  B4D8               	btfsc	status,2,c
 17020  001B5C  D004               	goto	u12850
 17021                           
 17022                           ; BSR set to: 0
 17023  001B5E  0E58               	movlw	88
 17024  001B60  1998               	xorwf	strtol@c& (0+255),w,b
 17025  001B62  A4D8               	btfss	status,2,c
 17026  001B64  D00D               	goto	l3458
 17027  001B66                     u12850:
 17028                           
 17029                           ; BSR set to: 0
 17030                           
 17031                           ; BSR set to: 0
 17032  001B66  0E00               	movlw	0
 17033  001B68  6F8E               	movwf	(strtol@base+1)& (0+255),b
 17034  001B6A  0E10               	movlw	16
 17035  001B6C  6F8D               	movwf	strtol@base& (0+255),b
 17036                           
 17037                           ; BSR set to: 0
 17038  001B6E  C089  FFD9         	movff	strtol@s,fsr2l
 17039  001B72  C08A  FFDA         	movff	strtol@s+1,fsr2h
 17040  001B76  50DF               	movf	indf2,w,c
 17041  001B78  6F98               	movwf	strtol@c& (0+255),b
 17042                           
 17043                           ; BSR set to: 0
 17044  001B7A  4B89               	infsnz	strtol@s& (0+255),f,b
 17045  001B7C  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 17046  001B7E  D008               	goto	l3464
 17047  001B80                     l3458:
 17048                           
 17049                           ; BSR set to: 0
 17050                           
 17051                           ; BSR set to: 0
 17052  001B80  518D               	movf	strtol@base& (0+255),w,b
 17053  001B82  118E               	iorwf	(strtol@base+1)& (0+255),w,b
 17054  001B84  A4D8               	btfss	status,2,c
 17055  001B86  D004               	goto	l3464
 17056                           
 17057                           ; BSR set to: 0
 17058  001B88  0E00               	movlw	0
 17059  001B8A  6F8E               	movwf	(strtol@base+1)& (0+255),b
 17060  001B8C  0E08               	movlw	8
 17061  001B8E  6F8D               	movwf	strtol@base& (0+255),b
 17062  001B90                     l3464:
 17063                           
 17064                           ; BSR set to: 0
 17065                           
 17066                           ; BSR set to: 0
 17067                           
 17068                           ; BSR set to: 0
 17069                           
 17070                           ; BSR set to: 0
 17071  001B90  518D               	movf	strtol@base& (0+255),w,b
 17072  001B92  118E               	iorwf	(strtol@base+1)& (0+255),w,b
 17073  001B94  A4D8               	btfss	status,2,c
 17074  001B96  D004               	goto	l3465
 17075                           
 17076                           ; BSR set to: 0
 17077  001B98  0E00               	movlw	0
 17078  001B9A  6F8E               	movwf	(strtol@base+1)& (0+255),b
 17079  001B9C  0E0A               	movlw	10
 17080  001B9E  6F8D               	movwf	strtol@base& (0+255),b
 17081  001BA0                     l3465:
 17082                           
 17083                           ; BSR set to: 0
 17084                           
 17085                           ; BSR set to: 0
 17086                           
 17087                           ; BSR set to: 0
 17088  001BA0  5198               	movf	strtol@c& (0+255),w,b
 17089  001BA2  EC43  F031         	call	_isalpha
 17090  001BA6  A0D8               	btfss	status,0,c
 17091  001BA8  D008               	goto	l3467
 17092  001BAA  0100               	movlb	0	; () banked
 17093  001BAC  5198               	movf	strtol@c& (0+255),w,b
 17094  001BAE  EC73  F033         	call	_toupper
 17095  001BB2  0FC9               	addlw	201
 17096  001BB4  0100               	movlb	0	; () banked
 17097  001BB6  6F98               	movwf	strtol@c& (0+255),b
 17098  001BB8  D009               	goto	l3470
 17099  001BBA                     l3467:
 17100                           
 17101                           ; BSR set to: 0
 17102  001BBA  0100               	movlb	0	; () banked
 17103  001BBC  5198               	movf	strtol@c& (0+255),w,b
 17104  001BBE  ECA7  F032         	call	_isdigit
 17105  001BC2  A0D8               	btfss	status,0,c
 17106  001BC4  D039               	goto	l3471
 17107  001BC6  0E30               	movlw	48
 17108  001BC8  0100               	movlb	0	; () banked
 17109  001BCA  5F98               	subwf	strtol@c& (0+255),f,b
 17110  001BCC                     l3470:
 17111                           
 17112                           ; BSR set to: 0
 17113                           
 17114                           ; BSR set to: 0
 17115                           
 17116                           ; BSR set to: 0
 17117  001BCC  5198               	movf	strtol@c& (0+255),w,b
 17118  001BCE  6F8F               	movwf	??_strtol& (0+255),b
 17119  001BD0  6B90               	clrf	(??_strtol+1)& (0+255),b
 17120  001BD2  518D               	movf	strtol@base& (0+255),w,b
 17121  001BD4  5D8F               	subwf	??_strtol& (0+255),w,b
 17122  001BD6  5190               	movf	(??_strtol+1)& (0+255),w,b
 17123  001BD8  0A80               	xorlw	128
 17124  001BDA  6F91               	movwf	(??_strtol+2)& (0+255),b
 17125  001BDC  518E               	movf	(strtol@base+1)& (0+255),w,b
 17126  001BDE  0A80               	xorlw	128
 17127  001BE0  5991               	subwfb	(??_strtol+2)& (0+255),w,b
 17128  001BE2  B0D8               	btfsc	status,0,c
 17129  001BE4  D029               	goto	l3471
 17130                           
 17131                           ; BSR set to: 0
 17132                           
 17133                           ; BSR set to: 0
 17134                           
 17135                           ; BSR set to: 0
 17136  001BE6  C08D  F07D         	movff	strtol@base,___lmul@multiplier
 17137  001BEA  C08E  F07E         	movff	strtol@base+1,___lmul@multiplier+1
 17138  001BEE  0E00               	movlw	0
 17139  001BF0  BF7E               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
 17140  001BF2  0EFF               	movlw	-1
 17141  001BF4  6F7F               	movwf	(___lmul@multiplier+2)& (0+255),b
 17142  001BF6  6F80               	movwf	(___lmul@multiplier+3)& (0+255),b
 17143  001BF8  C094  F081         	movff	strtol@a,___lmul@multiplicand
 17144  001BFC  C095  F082         	movff	strtol@a+1,___lmul@multiplicand+1
 17145  001C00  C096  F083         	movff	strtol@a+2,___lmul@multiplicand+2
 17146  001C04  C097  F084         	movff	strtol@a+3,___lmul@multiplicand+3
 17147  001C08  EC81  F02B         	call	___lmul	;wreg free
 17148  001C0C  0100               	movlb	0	; () banked
 17149  001C0E  5198               	movf	strtol@c& (0+255),w,b
 17150  001C10  257D               	addwf	?___lmul& (0+255),w,b
 17151  001C12  6F94               	movwf	strtol@a& (0+255),b
 17152  001C14  0E00               	movlw	0
 17153  001C16  217E               	addwfc	(?___lmul+1)& (0+255),w,b
 17154  001C18  6F95               	movwf	(strtol@a+1)& (0+255),b
 17155  001C1A  0E00               	movlw	0
 17156  001C1C  217F               	addwfc	(?___lmul+2)& (0+255),w,b
 17157  001C1E  6F96               	movwf	(strtol@a+2)& (0+255),b
 17158  001C20  0E00               	movlw	0
 17159  001C22  2180               	addwfc	(?___lmul+3)& (0+255),w,b
 17160  001C24  6F97               	movwf	(strtol@a+3)& (0+255),b
 17161                           
 17162                           ; BSR set to: 0
 17163  001C26  C089  FFD9         	movff	strtol@s,fsr2l
 17164  001C2A  C08A  FFDA         	movff	strtol@s+1,fsr2h
 17165  001C2E  50DF               	movf	indf2,w,c
 17166  001C30  6F98               	movwf	strtol@c& (0+255),b
 17167                           
 17168                           ; BSR set to: 0
 17169  001C32  4B89               	infsnz	strtol@s& (0+255),f,b
 17170  001C34  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 17171  001C36  D7B4               	goto	l3465
 17172  001C38                     l3471:
 17173                           
 17174                           ; BSR set to: 0
 17175  001C38  0100               	movlb	0	; () banked
 17176  001C3A  518B               	movf	strtol@endptr& (0+255),w,b
 17177  001C3C  118C               	iorwf	(strtol@endptr+1)& (0+255),w,b
 17178  001C3E  B4D8               	btfsc	status,2,c
 17179  001C40  D00E               	goto	l3473
 17180                           
 17181                           ; BSR set to: 0
 17182  001C42  0EFF               	movlw	255
 17183  001C44  2589               	addwf	strtol@s& (0+255),w,b
 17184  001C46  6F8F               	movwf	??_strtol& (0+255),b
 17185  001C48  0EFF               	movlw	255
 17186  001C4A  218A               	addwfc	(strtol@s+1)& (0+255),w,b
 17187  001C4C  6F90               	movwf	(??_strtol+1)& (0+255),b
 17188  001C4E  C08B  FFD9         	movff	strtol@endptr,fsr2l
 17189  001C52  C08C  FFDA         	movff	strtol@endptr+1,fsr2h
 17190  001C56  C08F  FFDE         	movff	??_strtol,postinc2
 17191  001C5A  C090  FFDD         	movff	??_strtol+1,postdec2
 17192  001C5E                     l3473:
 17193                           
 17194                           ; BSR set to: 0
 17195                           
 17196                           ; BSR set to: 0
 17197  001C5E  5193               	movf	strtol@sign& (0+255),w,b
 17198  001C60  B4D8               	btfsc	status,2,c
 17199  001C62  D01A               	goto	l3474
 17200                           
 17201                           ; BSR set to: 0
 17202  001C64  C094  F08F         	movff	strtol@a,??_strtol
 17203  001C68  C095  F090         	movff	strtol@a+1,??_strtol+1
 17204  001C6C  C096  F091         	movff	strtol@a+2,??_strtol+2
 17205  001C70  C097  F092         	movff	strtol@a+3,??_strtol+3
 17206  001C74  1F8F               	comf	??_strtol& (0+255),f,b
 17207  001C76  1F90               	comf	(??_strtol+1)& (0+255),f,b
 17208  001C78  1F91               	comf	(??_strtol+2)& (0+255),f,b
 17209  001C7A  1F92               	comf	(??_strtol+3)& (0+255),f,b
 17210  001C7C  2B8F               	incf	??_strtol& (0+255),f,b
 17211  001C7E  0E00               	movlw	0
 17212  001C80  2390               	addwfc	(??_strtol+1)& (0+255),f,b
 17213  001C82  2391               	addwfc	(??_strtol+2)& (0+255),f,b
 17214  001C84  2392               	addwfc	(??_strtol+3)& (0+255),f,b
 17215  001C86  C08F  F089         	movff	??_strtol,?_strtol
 17216  001C8A  C090  F08A         	movff	??_strtol+1,?_strtol+1
 17217  001C8E  C091  F08B         	movff	??_strtol+2,?_strtol+2
 17218  001C92  C092  F08C         	movff	??_strtol+3,?_strtol+3
 17219                           
 17220                           ; BSR set to: 0
 17221  001C96  0012               	return	
 17222  001C98                     l3474:
 17223                           
 17224                           ; BSR set to: 0
 17225  001C98  C094  F089         	movff	strtol@a,?_strtol
 17226  001C9C  C095  F08A         	movff	strtol@a+1,?_strtol+1
 17227  001CA0  C096  F08B         	movff	strtol@a+2,?_strtol+2
 17228  001CA4  C097  F08C         	movff	strtol@a+3,?_strtol+3
 17229                           
 17230                           ; BSR set to: 0
 17231  001CA8  0012               	return		;funcret
 17232  001CAA                     __end_of_strtol:
 17233                           	opt stack 0
 17234                           tosu	equ	0xFFF
 17235                           tosh	equ	0xFFE
 17236                           tosl	equ	0xFFD
 17237                           pclath	equ	0xFFA
 17238                           tblptru	equ	0xFF8
 17239                           tblptrh	equ	0xFF7
 17240                           tblptrl	equ	0xFF6
 17241                           tablat	equ	0xFF5
 17242                           prodh	equ	0xFF4
 17243                           prodl	equ	0xFF3
 17244                           intcon	equ	0xFF2
 17245                           intcon2	equ	0xFF1
 17246                           intcon3	equ	0xFF0
 17247                           indf0	equ	0xFEF
 17248                           postinc0	equ	0xFEE
 17249                           plusw0	equ	0xFEB
 17250                           fsr0h	equ	0xFEA
 17251                           fsr0l	equ	0xFE9
 17252                           wreg	equ	0xFE8
 17253                           indf1	equ	0xFE7
 17254                           postinc1	equ	0xFE6
 17255                           postdec1	equ	0xFE5
 17256                           fsr1h	equ	0xFE2
 17257                           fsr1l	equ	0xFE1
 17258                           indf2	equ	0xFDF
 17259                           postinc2	equ	0xFDE
 17260                           postdec2	equ	0xFDD
 17261                           plusw2	equ	0xFDB
 17262                           fsr2h	equ	0xFDA
 17263                           fsr2l	equ	0xFD9
 17264                           status	equ	0xFD8
 17265                           
 17266 ;; *************** function _toupper *****************
 17267 ;; Defined at:
 17268 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/toupper.c"
 17269 ;; Parameters:    Size  Location     Type
 17270 ;;  c               1    wreg     unsigned char 
 17271 ;; Auto vars:     Size  Location     Type
 17272 ;;  c               1   29[BANK0 ] unsigned char 
 17273 ;; Return value:  Size  Location     Type
 17274 ;;                  1    wreg      unsigned char 
 17275 ;; Registers used:
 17276 ;;		wreg, status,2, status,0
 17277 ;; Tracked objects:
 17278 ;;		On entry : 0/0
 17279 ;;		On exit  : 0/0
 17280 ;;		Unchanged: 0/0
 17281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17282 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17283 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17284 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17285 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17286 ;;Total ram usage:        1 bytes
 17287 ;; Hardware stack levels used:    1
 17288 ;; Hardware stack levels required when called:   11
 17289 ;; This function calls:
 17290 ;;		Nothing
 17291 ;; This function is called by:
 17292 ;;		_strtol
 17293 ;; This function uses a non-reentrant model
 17294 ;;
 17295                           
 17296                           	psect	text65
 17297  0066E6                     __ptext65:
 17298                           	opt stack 0
 17299  0066E6                     _toupper:
 17300                           	opt stack 13
 17301                           
 17302                           ; BSR set to: 0
 17303                           ;incstack = 0
 17304                           ;toupper@c stored from wreg
 17305  0066E6  0100               	movlb	0	; () banked
 17306  0066E8  6F7D               	movwf	toupper@c& (0+255),b
 17307  0066EA  0E7B               	movlw	123
 17308  0066EC  0100               	movlb	0	; () banked
 17309  0066EE  617D               	cpfslt	toupper@c& (0+255),b
 17310  0066F0  D004               	goto	l3478
 17311                           
 17312                           ; BSR set to: 0
 17313  0066F2  0E60               	movlw	96
 17314  0066F4  657D               	cpfsgt	toupper@c& (0+255),b
 17315  0066F6  D001               	goto	l3478
 17316                           
 17317                           ; BSR set to: 0
 17318  0066F8  9B7D               	bcf	toupper@c& (0+255),5,b
 17319  0066FA                     l3478:
 17320                           
 17321                           ; BSR set to: 0
 17322                           
 17323                           ; BSR set to: 0
 17324  0066FA  517D               	movf	toupper@c& (0+255),w,b
 17325  0066FC  0012               	return	
 17326  0066FE                     __end_of_toupper:
 17327                           	opt stack 0
 17328                           tosu	equ	0xFFF
 17329                           tosh	equ	0xFFE
 17330                           tosl	equ	0xFFD
 17331                           pclath	equ	0xFFA
 17332                           tblptru	equ	0xFF8
 17333                           tblptrh	equ	0xFF7
 17334                           tblptrl	equ	0xFF6
 17335                           tablat	equ	0xFF5
 17336                           prodh	equ	0xFF4
 17337                           prodl	equ	0xFF3
 17338                           intcon	equ	0xFF2
 17339                           intcon2	equ	0xFF1
 17340                           intcon3	equ	0xFF0
 17341                           indf0	equ	0xFEF
 17342                           postinc0	equ	0xFEE
 17343                           plusw0	equ	0xFEB
 17344                           fsr0h	equ	0xFEA
 17345                           fsr0l	equ	0xFE9
 17346                           wreg	equ	0xFE8
 17347                           indf1	equ	0xFE7
 17348                           postinc1	equ	0xFE6
 17349                           postdec1	equ	0xFE5
 17350                           fsr1h	equ	0xFE2
 17351                           fsr1l	equ	0xFE1
 17352                           indf2	equ	0xFDF
 17353                           postinc2	equ	0xFDE
 17354                           postdec2	equ	0xFDD
 17355                           plusw2	equ	0xFDB
 17356                           fsr2h	equ	0xFDA
 17357                           fsr2l	equ	0xFD9
 17358                           status	equ	0xFD8
 17359                           
 17360 ;; *************** function _isspace *****************
 17361 ;; Defined at:
 17362 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isspace.c"
 17363 ;; Parameters:    Size  Location     Type
 17364 ;;  c               1    wreg     unsigned char 
 17365 ;; Auto vars:     Size  Location     Type
 17366 ;;  c               1   31[BANK0 ] unsigned char 
 17367 ;; Return value:  Size  Location     Type
 17368 ;;		None               void
 17369 ;; Registers used:
 17370 ;;		wreg, status,2, status,0
 17371 ;; Tracked objects:
 17372 ;;		On entry : 0/0
 17373 ;;		On exit  : 0/0
 17374 ;;		Unchanged: 0/0
 17375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17377 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17378 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17379 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17380 ;;Total ram usage:        3 bytes
 17381 ;; Hardware stack levels used:    1
 17382 ;; Hardware stack levels required when called:   11
 17383 ;; This function calls:
 17384 ;;		Nothing
 17385 ;; This function is called by:
 17386 ;;		_strtol
 17387 ;;		_xtoi
 17388 ;; This function uses a non-reentrant model
 17389 ;;
 17390                           
 17391                           	psect	text66
 17392  006398                     __ptext66:
 17393                           	opt stack 0
 17394  006398                     _isspace:
 17395                           	opt stack 13
 17396                           
 17397                           ; BSR set to: 0
 17398                           ;incstack = 0
 17399                           ;isspace@c stored from wreg
 17400  006398  0100               	movlb	0	; () banked
 17401  00639A  6F7F               	movwf	isspace@c& (0+255),b
 17402  00639C  0E01               	movlw	1
 17403  00639E  0100               	movlb	0	; () banked
 17404  0063A0  6F7E               	movwf	_isspace$6629& (0+255),b
 17405                           
 17406                           ; BSR set to: 0
 17407  0063A2  0E20               	movlw	32
 17408  0063A4  197F               	xorwf	isspace@c& (0+255),w,b
 17409  0063A6  B4D8               	btfsc	status,2,c
 17410  0063A8  D008               	goto	l3535
 17411                           
 17412                           ; BSR set to: 0
 17413  0063AA  0E0E               	movlw	14
 17414  0063AC  617F               	cpfslt	isspace@c& (0+255),b
 17415  0063AE  D003               	goto	u12210
 17416                           
 17417                           ; BSR set to: 0
 17418  0063B0  0E09               	movlw	9
 17419  0063B2  617F               	cpfslt	isspace@c& (0+255),b
 17420  0063B4  D002               	goto	l3535
 17421  0063B6                     u12210:
 17422                           
 17423                           ; BSR set to: 0
 17424                           
 17425                           ; BSR set to: 0
 17426  0063B6  0E00               	movlw	0
 17427  0063B8  6F7E               	movwf	_isspace$6629& (0+255),b
 17428  0063BA                     l3535:
 17429                           
 17430                           ; BSR set to: 0
 17431                           
 17432                           ; BSR set to: 0
 17433  0063BA  C07E  F07D         	movff	_isspace$6629,??_isspace
 17434  0063BE  317D               	rrcf	??_isspace& (0+255),w,b
 17435  0063C0  0012               	return	
 17436  0063C2                     __end_of_isspace:
 17437                           	opt stack 0
 17438                           tosu	equ	0xFFF
 17439                           tosh	equ	0xFFE
 17440                           tosl	equ	0xFFD
 17441                           pclath	equ	0xFFA
 17442                           tblptru	equ	0xFF8
 17443                           tblptrh	equ	0xFF7
 17444                           tblptrl	equ	0xFF6
 17445                           tablat	equ	0xFF5
 17446                           prodh	equ	0xFF4
 17447                           prodl	equ	0xFF3
 17448                           intcon	equ	0xFF2
 17449                           intcon2	equ	0xFF1
 17450                           intcon3	equ	0xFF0
 17451                           indf0	equ	0xFEF
 17452                           postinc0	equ	0xFEE
 17453                           plusw0	equ	0xFEB
 17454                           fsr0h	equ	0xFEA
 17455                           fsr0l	equ	0xFE9
 17456                           wreg	equ	0xFE8
 17457                           indf1	equ	0xFE7
 17458                           postinc1	equ	0xFE6
 17459                           postdec1	equ	0xFE5
 17460                           fsr1h	equ	0xFE2
 17461                           fsr1l	equ	0xFE1
 17462                           indf2	equ	0xFDF
 17463                           postinc2	equ	0xFDE
 17464                           postdec2	equ	0xFDD
 17465                           plusw2	equ	0xFDB
 17466                           fsr2h	equ	0xFDA
 17467                           fsr2l	equ	0xFD9
 17468                           status	equ	0xFD8
 17469                           
 17470 ;; *************** function _isalpha *****************
 17471 ;; Defined at:
 17472 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isalpha.c"
 17473 ;; Parameters:    Size  Location     Type
 17474 ;;  c               1    wreg     unsigned char 
 17475 ;; Auto vars:     Size  Location     Type
 17476 ;;  c               1   34[BANK0 ] unsigned char 
 17477 ;; Return value:  Size  Location     Type
 17478 ;;		None               void
 17479 ;; Registers used:
 17480 ;;		wreg, status,2, status,0, cstack
 17481 ;; Tracked objects:
 17482 ;;		On entry : 0/0
 17483 ;;		On exit  : 0/0
 17484 ;;		Unchanged: 0/0
 17485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17486 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17487 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17488 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17489 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17490 ;;Total ram usage:        3 bytes
 17491 ;; Hardware stack levels used:    1
 17492 ;; Hardware stack levels required when called:   12
 17493 ;; This function calls:
 17494 ;;		_isupper
 17495 ;; This function is called by:
 17496 ;;		_strtol
 17497 ;; This function uses a non-reentrant model
 17498 ;;
 17499                           
 17500                           	psect	text67
 17501  006286                     __ptext67:
 17502                           	opt stack 0
 17503  006286                     _isalpha:
 17504                           	opt stack 12
 17505                           
 17506                           ; BSR set to: 0
 17507                           ;incstack = 0
 17508                           ;isalpha@c stored from wreg
 17509  006286  0100               	movlb	0	; () banked
 17510  006288  6F82               	movwf	isalpha@c& (0+255),b
 17511  00628A  0E01               	movlw	1
 17512  00628C  0100               	movlb	0	; () banked
 17513  00628E  6F81               	movwf	_isalpha$6626& (0+255),b
 17514                           
 17515                           ; BSR set to: 0
 17516  006290  0E7B               	movlw	123
 17517  006292  6182               	cpfslt	isalpha@c& (0+255),b
 17518  006294  D003               	goto	u12230
 17519                           
 17520                           ; BSR set to: 0
 17521  006296  0E61               	movlw	97
 17522  006298  6182               	cpfslt	isalpha@c& (0+255),b
 17523  00629A  D008               	goto	l3530
 17524  00629C                     u12230:
 17525                           
 17526                           ; BSR set to: 0
 17527                           
 17528                           ; BSR set to: 0
 17529  00629C  5182               	movf	isalpha@c& (0+255),w,b
 17530  00629E  EC85  F032         	call	_isupper
 17531  0062A2  B0D8               	btfsc	status,0,c
 17532  0062A4  D003               	goto	l3530
 17533  0062A6  0E00               	movlw	0
 17534  0062A8  0100               	movlb	0	; () banked
 17535  0062AA  6F81               	movwf	_isalpha$6626& (0+255),b
 17536  0062AC                     l3530:
 17537                           
 17538                           ; BSR set to: 0
 17539  0062AC  C081  F080         	movff	_isalpha$6626,??_isalpha
 17540  0062B0  0100               	movlb	0	; () banked
 17541  0062B2  3180               	rrcf	??_isalpha& (0+255),w,b
 17542  0062B4  0012               	return	
 17543  0062B6                     __end_of_isalpha:
 17544                           	opt stack 0
 17545                           tosu	equ	0xFFF
 17546                           tosh	equ	0xFFE
 17547                           tosl	equ	0xFFD
 17548                           pclath	equ	0xFFA
 17549                           tblptru	equ	0xFF8
 17550                           tblptrh	equ	0xFF7
 17551                           tblptrl	equ	0xFF6
 17552                           tablat	equ	0xFF5
 17553                           prodh	equ	0xFF4
 17554                           prodl	equ	0xFF3
 17555                           intcon	equ	0xFF2
 17556                           intcon2	equ	0xFF1
 17557                           intcon3	equ	0xFF0
 17558                           indf0	equ	0xFEF
 17559                           postinc0	equ	0xFEE
 17560                           plusw0	equ	0xFEB
 17561                           fsr0h	equ	0xFEA
 17562                           fsr0l	equ	0xFE9
 17563                           wreg	equ	0xFE8
 17564                           indf1	equ	0xFE7
 17565                           postinc1	equ	0xFE6
 17566                           postdec1	equ	0xFE5
 17567                           fsr1h	equ	0xFE2
 17568                           fsr1l	equ	0xFE1
 17569                           indf2	equ	0xFDF
 17570                           postinc2	equ	0xFDE
 17571                           postdec2	equ	0xFDD
 17572                           plusw2	equ	0xFDB
 17573                           fsr2h	equ	0xFDA
 17574                           fsr2l	equ	0xFD9
 17575                           status	equ	0xFD8
 17576                           
 17577 ;; *************** function _isupper *****************
 17578 ;; Defined at:
 17579 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isupper.c"
 17580 ;; Parameters:    Size  Location     Type
 17581 ;;  c               1    wreg     unsigned char 
 17582 ;; Auto vars:     Size  Location     Type
 17583 ;;  c               1   31[BANK0 ] unsigned char 
 17584 ;; Return value:  Size  Location     Type
 17585 ;;		None               void
 17586 ;; Registers used:
 17587 ;;		wreg, status,2, status,0
 17588 ;; Tracked objects:
 17589 ;;		On entry : 0/0
 17590 ;;		On exit  : 0/0
 17591 ;;		Unchanged: 0/0
 17592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17593 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17594 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17595 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17596 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17597 ;;Total ram usage:        3 bytes
 17598 ;; Hardware stack levels used:    1
 17599 ;; Hardware stack levels required when called:   11
 17600 ;; This function calls:
 17601 ;;		Nothing
 17602 ;; This function is called by:
 17603 ;;		_xtoi
 17604 ;;		_isalpha
 17605 ;; This function uses a non-reentrant model
 17606 ;;
 17607                           
 17608                           	psect	text68
 17609  00650A                     __ptext68:
 17610                           	opt stack 0
 17611  00650A                     _isupper:
 17612                           	opt stack 13
 17613                           
 17614                           ; BSR set to: 0
 17615                           ;incstack = 0
 17616                           ;isupper@c stored from wreg
 17617  00650A  0100               	movlb	0	; () banked
 17618  00650C  6F7F               	movwf	isupper@c& (0+255),b
 17619  00650E  0E00               	movlw	0
 17620  006510  0100               	movlb	0	; () banked
 17621  006512  6F7E               	movwf	_isupper$6632& (0+255),b
 17622                           
 17623                           ; BSR set to: 0
 17624  006514  0E5B               	movlw	91
 17625  006516  617F               	cpfslt	isupper@c& (0+255),b
 17626  006518  D005               	goto	l3540
 17627                           
 17628                           ; BSR set to: 0
 17629  00651A  0E40               	movlw	64
 17630  00651C  657F               	cpfsgt	isupper@c& (0+255),b
 17631  00651E  D002               	goto	l3540
 17632                           
 17633                           ; BSR set to: 0
 17634  006520  0E01               	movlw	1
 17635  006522  6F7E               	movwf	_isupper$6632& (0+255),b
 17636  006524                     l3540:
 17637                           
 17638                           ; BSR set to: 0
 17639                           
 17640                           ; BSR set to: 0
 17641  006524  C07E  F07D         	movff	_isupper$6632,??_isupper
 17642  006528  317D               	rrcf	??_isupper& (0+255),w,b
 17643  00652A  0012               	return	
 17644  00652C                     __end_of_isupper:
 17645                           	opt stack 0
 17646                           tosu	equ	0xFFF
 17647                           tosh	equ	0xFFE
 17648                           tosl	equ	0xFFD
 17649                           pclath	equ	0xFFA
 17650                           tblptru	equ	0xFF8
 17651                           tblptrh	equ	0xFF7
 17652                           tblptrl	equ	0xFF6
 17653                           tablat	equ	0xFF5
 17654                           prodh	equ	0xFF4
 17655                           prodl	equ	0xFF3
 17656                           intcon	equ	0xFF2
 17657                           intcon2	equ	0xFF1
 17658                           intcon3	equ	0xFF0
 17659                           indf0	equ	0xFEF
 17660                           postinc0	equ	0xFEE
 17661                           plusw0	equ	0xFEB
 17662                           fsr0h	equ	0xFEA
 17663                           fsr0l	equ	0xFE9
 17664                           wreg	equ	0xFE8
 17665                           indf1	equ	0xFE7
 17666                           postinc1	equ	0xFE6
 17667                           postdec1	equ	0xFE5
 17668                           fsr1h	equ	0xFE2
 17669                           fsr1l	equ	0xFE1
 17670                           indf2	equ	0xFDF
 17671                           postinc2	equ	0xFDE
 17672                           postdec2	equ	0xFDD
 17673                           plusw2	equ	0xFDB
 17674                           fsr2h	equ	0xFDA
 17675                           fsr2l	equ	0xFD9
 17676                           status	equ	0xFD8
 17677                           
 17678 ;; *************** function _strcpy *****************
 17679 ;; Defined at:
 17680 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/strcpy.c"
 17681 ;; Parameters:    Size  Location     Type
 17682 ;;  to              2   29[BANK0 ] PTR unsigned char 
 17683 ;;		 -> Term_MainSm@Data(50), Terminal@UsbTxBuffer(200), 
 17684 ;;  from            2   31[BANK0 ] PTR const unsigned char 
 17685 ;;		 -> STR_23(20), STR_21(42), 
 17686 ;; Auto vars:     Size  Location     Type
 17687 ;;  cp              2   33[BANK0 ] PTR unsigned char 
 17688 ;;		 -> Term_MainSm@Data(50), Terminal@UsbTxBuffer(200), 
 17689 ;; Return value:  Size  Location     Type
 17690 ;;                  2   29[BANK0 ] PTR unsigned char 
 17691 ;; Registers used:
 17692 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 17693 ;; Tracked objects:
 17694 ;;		On entry : 0/0
 17695 ;;		On exit  : 0/0
 17696 ;;		Unchanged: 0/0
 17697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17698 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17699 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17701 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17702 ;;Total ram usage:        6 bytes
 17703 ;; Hardware stack levels used:    1
 17704 ;; Hardware stack levels required when called:   11
 17705 ;; This function calls:
 17706 ;;		Nothing
 17707 ;; This function is called by:
 17708 ;;		_Terminal
 17709 ;;		_Term_MainSm
 17710 ;; This function uses a non-reentrant model
 17711 ;;
 17712                           
 17713                           	psect	text69
 17714  0061F4                     __ptext69:
 17715                           	opt stack 0
 17716  0061F4                     _strcpy:
 17717                           	opt stack 15
 17718                           
 17719                           ; BSR set to: 0
 17720                           ;incstack = 0
 17721  0061F4  C07D  F081         	movff	strcpy@to,strcpy@cp
 17722  0061F8  C07E  F082         	movff	strcpy@to+1,strcpy@cp+1
 17723  0061FC  D005               	goto	l3432
 17724  0061FE  0100               	movlb	0	; () banked
 17725  006200  4B81               	infsnz	strcpy@cp& (0+255),f,b
 17726  006202  2B82               	incf	(strcpy@cp+1)& (0+255),f,b
 17727  006204  4B7F               	infsnz	strcpy@from& (0+255),f,b
 17728  006206  2B80               	incf	(strcpy@from+1)& (0+255),f,b
 17729  006208                     l3432:
 17730                           
 17731                           ; BSR set to: 0
 17732  006208  C07F  FFF6         	movff	strcpy@from,tblptrl
 17733  00620C  C080  FFF7         	movff	strcpy@from+1,tblptrh
 17734  006210                     	if	0	;tblptru may be non-zero
 17735  006210                     	endif
 17736  006210                     	if	0	;tblptru may be non-zero
 17737  006210                     	endif
 17738  006210  C081  FFD9         	movff	strcpy@cp,fsr2l
 17739  006214  C082  FFDA         	movff	strcpy@cp+1,fsr2h
 17740  006218  0008               	tblrd		*
 17741  00621A  CFF5 FFDF          	movff	tablat,indf2
 17742  00621E  50DF               	movf	indf2,w,c
 17743  006220  B4D8               	btfsc	status,2,c
 17744  006222  0012               	return	
 17745  006224  D7EC               	goto	l3433
 17746  006226                     __end_of_strcpy:
 17747                           	opt stack 0
 17748                           tosu	equ	0xFFF
 17749                           tosh	equ	0xFFE
 17750                           tosl	equ	0xFFD
 17751                           pclath	equ	0xFFA
 17752                           tblptru	equ	0xFF8
 17753                           tblptrh	equ	0xFF7
 17754                           tblptrl	equ	0xFF6
 17755                           tablat	equ	0xFF5
 17756                           prodh	equ	0xFF4
 17757                           prodl	equ	0xFF3
 17758                           intcon	equ	0xFF2
 17759                           intcon2	equ	0xFF1
 17760                           intcon3	equ	0xFF0
 17761                           indf0	equ	0xFEF
 17762                           postinc0	equ	0xFEE
 17763                           plusw0	equ	0xFEB
 17764                           fsr0h	equ	0xFEA
 17765                           fsr0l	equ	0xFE9
 17766                           wreg	equ	0xFE8
 17767                           indf1	equ	0xFE7
 17768                           postinc1	equ	0xFE6
 17769                           postdec1	equ	0xFE5
 17770                           fsr1h	equ	0xFE2
 17771                           fsr1l	equ	0xFE1
 17772                           indf2	equ	0xFDF
 17773                           postinc2	equ	0xFDE
 17774                           postdec2	equ	0xFDD
 17775                           plusw2	equ	0xFDB
 17776                           fsr2h	equ	0xFDA
 17777                           fsr2l	equ	0xFD9
 17778                           status	equ	0xFD8
 17779                           
 17780 ;; *************** function _putUSBUSART *****************
 17781 ;; Defined at:
 17782 ;;		line 559 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 17783 ;; Parameters:    Size  Location     Type
 17784 ;;  data            2   35[BANK0 ] PTR unsigned char 
 17785 ;;		 -> MsgReady(23), Term_MainSm@Data(50), MsgFormat(240), Welcome(137), 
 17786 ;;		 -> Terminal@UsbTxBuffer(200), Terminal@TermRxBuffer(50), Terminal@Payload(80), Terminal@UsbRxBuffer(200), 
 17787 ;;		 -> RxBuffer(400), 
 17788 ;;  length          1   37[BANK0 ] unsigned char 
 17789 ;; Auto vars:     Size  Location     Type
 17790 ;;		None
 17791 ;; Return value:  Size  Location     Type
 17792 ;;                  1    wreg      void 
 17793 ;; Registers used:
 17794 ;;		wreg, status,2, status,0
 17795 ;; Tracked objects:
 17796 ;;		On entry : 0/0
 17797 ;;		On exit  : 0/0
 17798 ;;		Unchanged: 0/0
 17799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17800 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17801 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17803 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17804 ;;Total ram usage:        3 bytes
 17805 ;; Hardware stack levels used:    1
 17806 ;; Hardware stack levels required when called:   11
 17807 ;; This function calls:
 17808 ;;		Nothing
 17809 ;; This function is called by:
 17810 ;;		_Terminal
 17811 ;;		_Term_MainSm
 17812 ;;		_GsmGprsTerminal
 17813 ;; This function uses a non-reentrant model
 17814 ;;
 17815                           
 17816                           	psect	text70
 17817  00652C                     __ptext70:
 17818                           	opt stack 0
 17819  00652C                     _putUSBUSART:
 17820                           	opt stack 15
 17821                           
 17822                           ;usb_device_cdc.c: 584: ;
 17823                           ;usb_device_cdc.c: 585: if(cdc_trf_state == 0)
 17824                           
 17825                           ;incstack = 0
 17826  00652C  0100               	movlb	0	; () banked
 17827  00652E  51C5               	movf	_cdc_trf_state& (0+255),w,b
 17828  006530  A4D8               	btfss	status,2,c
 17829  006532  0012               	return	
 17830                           
 17831                           ; BSR set to: 0
 17832                           ;usb_device_cdc.c: 586: {
 17833                           ;usb_device_cdc.c: 587: { pCDCSrc.bRam = (uint8_t*)data; cdc_tx_len = length; cdc_mem_ty
      +                          pe = 0x01; cdc_trf_state = 1; };
 17834  006534  C083  F2CB         	movff	putUSBUSART@data,_pCDCSrc
 17835  006538  C084  F2CC         	movff	putUSBUSART@data+1,_pCDCSrc+1
 17836                           
 17837                           ; BSR set to: 0
 17838  00653C  C085  F0C4         	movff	putUSBUSART@length,_cdc_tx_len
 17839                           
 17840                           ; BSR set to: 0
 17841  006540  0E01               	movlw	1
 17842  006542  0101               	movlb	1	; () banked
 17843  006544  6FDF               	movwf	_cdc_mem_type& (0+255),b
 17844                           
 17845                           ; BSR set to: 1
 17846  006546  0E01               	movlw	1
 17847  006548  0100               	movlb	0	; () banked
 17848  00654A  6FC5               	movwf	_cdc_trf_state& (0+255),b
 17849  00654C  0012               	return	
 17850  00654E                     __end_of_putUSBUSART:
 17851                           	opt stack 0
 17852                           tosu	equ	0xFFF
 17853                           tosh	equ	0xFFE
 17854                           tosl	equ	0xFFD
 17855                           pclath	equ	0xFFA
 17856                           tblptru	equ	0xFF8
 17857                           tblptrh	equ	0xFF7
 17858                           tblptrl	equ	0xFF6
 17859                           tablat	equ	0xFF5
 17860                           prodh	equ	0xFF4
 17861                           prodl	equ	0xFF3
 17862                           intcon	equ	0xFF2
 17863                           intcon2	equ	0xFF1
 17864                           intcon3	equ	0xFF0
 17865                           indf0	equ	0xFEF
 17866                           postinc0	equ	0xFEE
 17867                           plusw0	equ	0xFEB
 17868                           fsr0h	equ	0xFEA
 17869                           fsr0l	equ	0xFE9
 17870                           wreg	equ	0xFE8
 17871                           indf1	equ	0xFE7
 17872                           postinc1	equ	0xFE6
 17873                           postdec1	equ	0xFE5
 17874                           fsr1h	equ	0xFE2
 17875                           fsr1l	equ	0xFE1
 17876                           indf2	equ	0xFDF
 17877                           postinc2	equ	0xFDE
 17878                           postdec2	equ	0xFDD
 17879                           plusw2	equ	0xFDB
 17880                           fsr2h	equ	0xFDA
 17881                           fsr2l	equ	0xFD9
 17882                           status	equ	0xFD8
 17883                           
 17884 ;; *************** function _itoa *****************
 17885 ;; Defined at:
 17886 ;;		line 4 in file "/opt/microchip/xc8/v1.45/sources/common/itoa.c"
 17887 ;; Parameters:    Size  Location     Type
 17888 ;;  buf             2   51[BANK0 ] PTR unsigned char 
 17889 ;;		 -> Terminal@Payload(80), 
 17890 ;;  val             2   53[BANK0 ] int 
 17891 ;;  base            2   55[BANK0 ] int 
 17892 ;; Auto vars:     Size  Location     Type
 17893 ;;  cp              2   57[BANK0 ] PTR unsigned char 
 17894 ;;		 -> Terminal@Payload(80), 
 17895 ;; Return value:  Size  Location     Type
 17896 ;;                  2   51[BANK0 ] PTR unsigned char 
 17897 ;; Registers used:
 17898 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17899 ;; Tracked objects:
 17900 ;;		On entry : 0/0
 17901 ;;		On exit  : 0/0
 17902 ;;		Unchanged: 0/0
 17903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17904 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17905 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17907 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17908 ;;Total ram usage:        8 bytes
 17909 ;; Hardware stack levels used:    1
 17910 ;; Hardware stack levels required when called:   13
 17911 ;; This function calls:
 17912 ;;		_utoa
 17913 ;; This function is called by:
 17914 ;;		_Terminal
 17915 ;; This function uses a non-reentrant model
 17916 ;;
 17917                           
 17918                           	psect	text71
 17919  005E6C                     __ptext71:
 17920                           	opt stack 0
 17921  005E6C                     _itoa:
 17922                           	opt stack 12
 17923                           
 17924                           ; BSR set to: 0
 17925                           ;incstack = 0
 17926  005E6C  C093  F099         	movff	itoa@buf,itoa@cp
 17927  005E70  C094  F09A         	movff	itoa@buf+1,itoa@cp+1
 17928  005E74  0100               	movlb	0	; () banked
 17929  005E76  AF96               	btfss	(itoa@val+1)& (0+255),7,b
 17930  005E78  D00C               	goto	l3180
 17931                           
 17932                           ; BSR set to: 0
 17933  005E7A  C093  FFD9         	movff	itoa@buf,fsr2l
 17934  005E7E  C094  FFDA         	movff	itoa@buf+1,fsr2h
 17935  005E82  0E2D               	movlw	45
 17936  005E84  6EDF               	movwf	indf2,c
 17937                           
 17938                           ; BSR set to: 0
 17939  005E86  4B93               	infsnz	itoa@buf& (0+255),f,b
 17940  005E88  2B94               	incf	(itoa@buf+1)& (0+255),f,b
 17941                           
 17942                           ; BSR set to: 0
 17943  005E8A  6D95               	negf	itoa@val& (0+255),b
 17944  005E8C  1F96               	comf	(itoa@val+1)& (0+255),f,b
 17945  005E8E  B0D8               	btfsc	status,0,c
 17946  005E90  2B96               	incf	(itoa@val+1)& (0+255),f,b
 17947  005E92                     l3180:
 17948                           
 17949                           ; BSR set to: 0
 17950                           
 17951                           ; BSR set to: 0
 17952  005E92  C093  F08A         	movff	itoa@buf,utoa@buf
 17953  005E96  C094  F08B         	movff	itoa@buf+1,utoa@buf+1
 17954  005E9A  C095  F08C         	movff	itoa@val,utoa@val
 17955  005E9E  C096  F08D         	movff	itoa@val+1,utoa@val+1
 17956  005EA2  C097  F08E         	movff	itoa@base,utoa@base
 17957  005EA6  C098  F08F         	movff	itoa@base+1,utoa@base+1
 17958  005EAA  ECB1  F022         	call	_utoa	;wreg free
 17959  005EAE  0012               	return	
 17960  005EB0                     __end_of_itoa:
 17961                           	opt stack 0
 17962                           tosu	equ	0xFFF
 17963                           tosh	equ	0xFFE
 17964                           tosl	equ	0xFFD
 17965                           pclath	equ	0xFFA
 17966                           tblptru	equ	0xFF8
 17967                           tblptrh	equ	0xFF7
 17968                           tblptrl	equ	0xFF6
 17969                           tablat	equ	0xFF5
 17970                           prodh	equ	0xFF4
 17971                           prodl	equ	0xFF3
 17972                           intcon	equ	0xFF2
 17973                           intcon2	equ	0xFF1
 17974                           intcon3	equ	0xFF0
 17975                           indf0	equ	0xFEF
 17976                           postinc0	equ	0xFEE
 17977                           plusw0	equ	0xFEB
 17978                           fsr0h	equ	0xFEA
 17979                           fsr0l	equ	0xFE9
 17980                           wreg	equ	0xFE8
 17981                           indf1	equ	0xFE7
 17982                           postinc1	equ	0xFE6
 17983                           postdec1	equ	0xFE5
 17984                           fsr1h	equ	0xFE2
 17985                           fsr1l	equ	0xFE1
 17986                           indf2	equ	0xFDF
 17987                           postinc2	equ	0xFDE
 17988                           postdec2	equ	0xFDD
 17989                           plusw2	equ	0xFDB
 17990                           fsr2h	equ	0xFDA
 17991                           fsr2l	equ	0xFD9
 17992                           status	equ	0xFD8
 17993                           
 17994 ;; *************** function _utoa *****************
 17995 ;; Defined at:
 17996 ;;		line 17 in file "/opt/microchip/xc8/v1.45/sources/common/itoa.c"
 17997 ;; Parameters:    Size  Location     Type
 17998 ;;  buf             2   42[BANK0 ] PTR unsigned char 
 17999 ;;		 -> Term_MainSm@FwkBuildStr(4), Term_MainSm@FwkMinorStr(4), Term_MainSm@FwkMajorStr(4), Terminal@Payload(80), 
 18000 ;;  val             2   44[BANK0 ] unsigned int 
 18001 ;;  base            2   46[BANK0 ] int 
 18002 ;; Auto vars:     Size  Location     Type
 18003 ;;  v               2   48[BANK0 ] unsigned int 
 18004 ;;  c               1   50[BANK0 ] unsigned char 
 18005 ;; Return value:  Size  Location     Type
 18006 ;;                  2   42[BANK0 ] PTR unsigned char 
 18007 ;; Registers used:
 18008 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18009 ;; Tracked objects:
 18010 ;;		On entry : 0/0
 18011 ;;		On exit  : 0/0
 18012 ;;		Unchanged: 0/0
 18013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18014 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18015 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18017 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18018 ;;Total ram usage:        9 bytes
 18019 ;; Hardware stack levels used:    1
 18020 ;; Hardware stack levels required when called:   12
 18021 ;; This function calls:
 18022 ;;		___lwdiv
 18023 ;;		___lwmod
 18024 ;; This function is called by:
 18025 ;;		_Term_MainSm
 18026 ;;		_itoa
 18027 ;; This function uses a non-reentrant model
 18028 ;;
 18029                           
 18030                           	psect	text72
 18031  004562                     __ptext72:
 18032                           	opt stack 0
 18033  004562                     _utoa:
 18034                           	opt stack 14
 18035                           
 18036                           ;incstack = 0
 18037  004562  C08C  F090         	movff	utoa@val,utoa@v
 18038  004566  C08D  F091         	movff	utoa@val+1,utoa@v+1
 18039  00456A  C090  F083         	movff	utoa@v,___lwdiv@dividend
 18040  00456E  C091  F084         	movff	utoa@v+1,___lwdiv@dividend+1
 18041  004572  C08E  F085         	movff	utoa@base,___lwdiv@divisor
 18042  004576  C08F  F086         	movff	utoa@base+1,___lwdiv@divisor+1
 18043  00457A  ECAD  F02C         	call	___lwdiv	;wreg free
 18044  00457E  C083  F090         	movff	?___lwdiv,utoa@v
 18045  004582  C084  F091         	movff	?___lwdiv+1,utoa@v+1
 18046  004586  0100               	movlb	0	; () banked
 18047  004588  4B8A               	infsnz	utoa@buf& (0+255),f,b
 18048  00458A  2B8B               	incf	(utoa@buf+1)& (0+255),f,b
 18049                           
 18050                           ; BSR set to: 0
 18051  00458C  5190               	movf	utoa@v& (0+255),w,b
 18052  00458E  1191               	iorwf	(utoa@v+1)& (0+255),w,b
 18053  004590  A4D8               	btfss	status,2,c
 18054  004592  D7EB               	goto	l3184
 18055                           
 18056                           ; BSR set to: 0
 18057                           
 18058                           ; BSR set to: 0
 18059  004594  C08A  FFD9         	movff	utoa@buf,fsr2l
 18060  004598  C08B  FFDA         	movff	utoa@buf+1,fsr2h
 18061  00459C  0E00               	movlw	0
 18062  00459E  6EDF               	movwf	indf2,c
 18063                           
 18064                           ; BSR set to: 0
 18065  0045A0  078A               	decf	utoa@buf& (0+255),f,b
 18066  0045A2  A0D8               	btfss	status,0,c
 18067  0045A4  078B               	decf	(utoa@buf+1)& (0+255),f,b
 18068  0045A6                     
 18069                           ; BSR set to: 0
 18070                           
 18071                           ; BSR set to: 0
 18072  0045A6  C08C  F07D         	movff	utoa@val,___lwmod@dividend
 18073  0045AA  C08D  F07E         	movff	utoa@val+1,___lwmod@dividend+1
 18074  0045AE  C08E  F07F         	movff	utoa@base,___lwmod@divisor
 18075  0045B2  C08F  F080         	movff	utoa@base+1,___lwmod@divisor+1
 18076  0045B6  EC58  F02F         	call	___lwmod	;wreg free
 18077  0045BA  0100               	movlb	0	; () banked
 18078  0045BC  517D               	movf	?___lwmod& (0+255),w,b
 18079  0045BE  6F92               	movwf	utoa@c& (0+255),b
 18080                           
 18081                           ; BSR set to: 0
 18082  0045C0  C08C  F083         	movff	utoa@val,___lwdiv@dividend
 18083  0045C4  C08D  F084         	movff	utoa@val+1,___lwdiv@dividend+1
 18084  0045C8  C08E  F085         	movff	utoa@base,___lwdiv@divisor
 18085  0045CC  C08F  F086         	movff	utoa@base+1,___lwdiv@divisor+1
 18086  0045D0  ECAD  F02C         	call	___lwdiv	;wreg free
 18087  0045D4  C083  F08C         	movff	?___lwdiv,utoa@val
 18088  0045D8  C084  F08D         	movff	?___lwdiv+1,utoa@val+1
 18089  0045DC  0E09               	movlw	9
 18090  0045DE  0100               	movlb	0	; () banked
 18091  0045E0  6592               	cpfsgt	utoa@c& (0+255),b
 18092  0045E2  D002               	goto	l3187
 18093                           
 18094                           ; BSR set to: 0
 18095  0045E4  0E07               	movlw	7
 18096  0045E6  2792               	addwf	utoa@c& (0+255),f,b
 18097  0045E8                     l3187:
 18098                           
 18099                           ; BSR set to: 0
 18100  0045E8  0E30               	movlw	48
 18101  0045EA  2792               	addwf	utoa@c& (0+255),f,b
 18102                           
 18103                           ; BSR set to: 0
 18104  0045EC  C08A  FFD9         	movff	utoa@buf,fsr2l
 18105  0045F0  C08B  FFDA         	movff	utoa@buf+1,fsr2h
 18106  0045F4  C092  FFDF         	movff	utoa@c,indf2
 18107                           
 18108                           ; BSR set to: 0
 18109  0045F8  078A               	decf	utoa@buf& (0+255),f,b
 18110  0045FA  A0D8               	btfss	status,0,c
 18111  0045FC  078B               	decf	(utoa@buf+1)& (0+255),f,b
 18112                           
 18113                           ; BSR set to: 0
 18114  0045FE  518C               	movf	utoa@val& (0+255),w,b
 18115  004600  118D               	iorwf	(utoa@val+1)& (0+255),w,b
 18116  004602  A4D8               	btfss	status,2,c
 18117  004604  D7D0               	goto	l3186
 18118                           
 18119                           ; BSR set to: 0
 18120                           ;	Return value of _utoa is never used
 18121                           
 18122                           ; BSR set to: 0
 18123  004606  4B8A               	infsnz	utoa@buf& (0+255),f,b
 18124  004608  2B8B               	incf	(utoa@buf+1)& (0+255),f,b
 18125  00460A  0012               	return	
 18126  00460C                     __end_of_utoa:
 18127                           	opt stack 0
 18128                           tosu	equ	0xFFF
 18129                           tosh	equ	0xFFE
 18130                           tosl	equ	0xFFD
 18131                           pclath	equ	0xFFA
 18132                           tblptru	equ	0xFF8
 18133                           tblptrh	equ	0xFF7
 18134                           tblptrl	equ	0xFF6
 18135                           tablat	equ	0xFF5
 18136                           prodh	equ	0xFF4
 18137                           prodl	equ	0xFF3
 18138                           intcon	equ	0xFF2
 18139                           intcon2	equ	0xFF1
 18140                           intcon3	equ	0xFF0
 18141                           indf0	equ	0xFEF
 18142                           postinc0	equ	0xFEE
 18143                           plusw0	equ	0xFEB
 18144                           fsr0h	equ	0xFEA
 18145                           fsr0l	equ	0xFE9
 18146                           wreg	equ	0xFE8
 18147                           indf1	equ	0xFE7
 18148                           postinc1	equ	0xFE6
 18149                           postdec1	equ	0xFE5
 18150                           fsr1h	equ	0xFE2
 18151                           fsr1l	equ	0xFE1
 18152                           indf2	equ	0xFDF
 18153                           postinc2	equ	0xFDE
 18154                           postdec2	equ	0xFDD
 18155                           plusw2	equ	0xFDB
 18156                           fsr2h	equ	0xFDA
 18157                           fsr2l	equ	0xFD9
 18158                           status	equ	0xFD8
 18159                           
 18160 ;; *************** function ___lwmod *****************
 18161 ;; Defined at:
 18162 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/lwmod.c"
 18163 ;; Parameters:    Size  Location     Type
 18164 ;;  dividend        2   29[BANK0 ] unsigned int 
 18165 ;;  divisor         2   31[BANK0 ] unsigned int 
 18166 ;; Auto vars:     Size  Location     Type
 18167 ;;  counter         1   33[BANK0 ] unsigned char 
 18168 ;; Return value:  Size  Location     Type
 18169 ;;                  2   29[BANK0 ] unsigned int 
 18170 ;; Registers used:
 18171 ;;		wreg, status,2, status,0
 18172 ;; Tracked objects:
 18173 ;;		On entry : 0/0
 18174 ;;		On exit  : 0/0
 18175 ;;		Unchanged: 0/0
 18176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18177 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18178 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18180 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18181 ;;Total ram usage:        5 bytes
 18182 ;; Hardware stack levels used:    1
 18183 ;; Hardware stack levels required when called:   11
 18184 ;; This function calls:
 18185 ;;		Nothing
 18186 ;; This function is called by:
 18187 ;;		_utoa
 18188 ;; This function uses a non-reentrant model
 18189 ;;
 18190                           
 18191                           	psect	text73
 18192  005EB0                     __ptext73:
 18193                           	opt stack 0
 18194  005EB0                     ___lwmod:
 18195                           	opt stack 14
 18196                           
 18197                           ; BSR set to: 0
 18198                           ;incstack = 0
 18199  005EB0  0100               	movlb	0	; () banked
 18200  005EB2  517F               	movf	___lwmod@divisor& (0+255),w,b
 18201  005EB4  1180               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 18202  005EB6  B4D8               	btfsc	status,2,c
 18203  005EB8  D018               	goto	l3282
 18204                           
 18205                           ; BSR set to: 0
 18206  005EBA  0E01               	movlw	1
 18207  005EBC  6F81               	movwf	___lwmod@counter& (0+255),b
 18208  005EBE  D004               	goto	l3277
 18209  005EC0                     
 18210                           ; BSR set to: 0
 18211                           
 18212                           ; BSR set to: 0
 18213  005EC0  90D8               	bcf	status,0,c
 18214  005EC2  377F               	rlcf	___lwmod@divisor& (0+255),f,b
 18215  005EC4  3780               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 18216  005EC6  2B81               	incf	___lwmod@counter& (0+255),f,b
 18217  005EC8                     l3277:
 18218                           
 18219                           ; BSR set to: 0
 18220                           
 18221                           ; BSR set to: 0
 18222  005EC8  AF80               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 18223  005ECA  D7FA               	goto	l3278
 18224  005ECC                     u11870:
 18225                           
 18226                           ; BSR set to: 0
 18227                           
 18228                           ; BSR set to: 0
 18229                           
 18230                           ; BSR set to: 0
 18231  005ECC  517F               	movf	___lwmod@divisor& (0+255),w,b
 18232  005ECE  5D7D               	subwf	___lwmod@dividend& (0+255),w,b
 18233  005ED0  5180               	movf	(___lwmod@divisor+1)& (0+255),w,b
 18234  005ED2  597E               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 18235  005ED4  A0D8               	btfss	status,0,c
 18236  005ED6  D004               	goto	l3281
 18237                           
 18238                           ; BSR set to: 0
 18239  005ED8  517F               	movf	___lwmod@divisor& (0+255),w,b
 18240  005EDA  5F7D               	subwf	___lwmod@dividend& (0+255),f,b
 18241  005EDC  5180               	movf	(___lwmod@divisor+1)& (0+255),w,b
 18242  005EDE  5B7E               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 18243  005EE0                     l3281:
 18244                           
 18245                           ; BSR set to: 0
 18246                           
 18247                           ; BSR set to: 0
 18248  005EE0  90D8               	bcf	status,0,c
 18249  005EE2  3380               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 18250  005EE4  337F               	rrcf	___lwmod@divisor& (0+255),f,b
 18251                           
 18252                           ; BSR set to: 0
 18253  005EE6  2F81               	decfsz	___lwmod@counter& (0+255),f,b
 18254  005EE8  D7F1               	goto	u11870
 18255  005EEA                     l3282:
 18256                           
 18257                           ; BSR set to: 0
 18258                           
 18259                           ; BSR set to: 0
 18260  005EEA  C07D  F07D         	movff	___lwmod@dividend,?___lwmod
 18261  005EEE  C07E  F07E         	movff	___lwmod@dividend+1,?___lwmod+1
 18262                           
 18263                           ; BSR set to: 0
 18264  005EF2  0012               	return		;funcret
 18265  005EF4                     __end_of___lwmod:
 18266                           	opt stack 0
 18267                           tosu	equ	0xFFF
 18268                           tosh	equ	0xFFE
 18269                           tosl	equ	0xFFD
 18270                           pclath	equ	0xFFA
 18271                           tblptru	equ	0xFF8
 18272                           tblptrh	equ	0xFF7
 18273                           tblptrl	equ	0xFF6
 18274                           tablat	equ	0xFF5
 18275                           prodh	equ	0xFF4
 18276                           prodl	equ	0xFF3
 18277                           intcon	equ	0xFF2
 18278                           intcon2	equ	0xFF1
 18279                           intcon3	equ	0xFF0
 18280                           indf0	equ	0xFEF
 18281                           postinc0	equ	0xFEE
 18282                           plusw0	equ	0xFEB
 18283                           fsr0h	equ	0xFEA
 18284                           fsr0l	equ	0xFE9
 18285                           wreg	equ	0xFE8
 18286                           indf1	equ	0xFE7
 18287                           postinc1	equ	0xFE6
 18288                           postdec1	equ	0xFE5
 18289                           fsr1h	equ	0xFE2
 18290                           fsr1l	equ	0xFE1
 18291                           indf2	equ	0xFDF
 18292                           postinc2	equ	0xFDE
 18293                           postdec2	equ	0xFDD
 18294                           plusw2	equ	0xFDB
 18295                           fsr2h	equ	0xFDA
 18296                           fsr2l	equ	0xFD9
 18297                           status	equ	0xFD8
 18298                           
 18299 ;; *************** function _getsUSBUSART *****************
 18300 ;; Defined at:
 18301 ;;		line 488 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 18302 ;; Parameters:    Size  Location     Type
 18303 ;;  buffer          2   36[BANK0 ] PTR unsigned char 
 18304 ;;		 -> Terminal@UsbRxBuffer(200), GsmGprsTerminal@UsbBuffer(200), 
 18305 ;;  len             1   38[BANK0 ] unsigned char 
 18306 ;; Auto vars:     Size  Location     Type
 18307 ;;		None
 18308 ;; Return value:  Size  Location     Type
 18309 ;;                  1    wreg      unsigned char 
 18310 ;; Registers used:
 18311 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18312 ;; Tracked objects:
 18313 ;;		On entry : 0/0
 18314 ;;		On exit  : 0/0
 18315 ;;		Unchanged: 0/0
 18316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18317 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18318 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18319 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18320 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18321 ;;Total ram usage:        4 bytes
 18322 ;; Hardware stack levels used:    1
 18323 ;; Hardware stack levels required when called:   12
 18324 ;; This function calls:
 18325 ;;		_USBTransferOnePacket
 18326 ;; This function is called by:
 18327 ;;		_Terminal
 18328 ;;		_GsmGprsTerminal
 18329 ;; This function uses a non-reentrant model
 18330 ;;
 18331                           
 18332                           	psect	text74
 18333  004A6A                     __ptext74:
 18334                           	opt stack 0
 18335  004A6A                     _getsUSBUSART:
 18336                           	opt stack 13
 18337                           
 18338                           ;usb_device_cdc.c: 490: cdc_rx_len = 0;
 18339                           
 18340                           ; BSR set to: 0
 18341                           ;incstack = 0
 18342  004A6A  0E00               	movlw	0
 18343  004A6C  0100               	movlb	0	; () banked
 18344  004A6E  6FC6               	movwf	_cdc_rx_len& (0+255),b
 18345                           
 18346                           ; BSR set to: 0
 18347                           ;usb_device_cdc.c: 492: if(!((CDCDataOutHandle != 0x0000) && ((*(volatile uint8_t*)CDCDa
      +                          taOutHandle & 0x80) != 0x00)))
 18348  004A70  51BC               	movf	_CDCDataOutHandle& (0+255),w,b
 18349  004A72  11BD               	iorwf	(_CDCDataOutHandle+1)& (0+255),w,b
 18350  004A74  B4D8               	btfsc	status,2,c
 18351  004A76  D006               	goto	u12590
 18352                           
 18353                           ; BSR set to: 0
 18354  004A78  C0BC  FFD9         	movff	_CDCDataOutHandle,fsr2l
 18355  004A7C  C0BD  FFDA         	movff	_CDCDataOutHandle+1,fsr2h
 18356  004A80  BEDF               	btfsc	indf2,7,c
 18357  004A82  D03B               	goto	l1921
 18358  004A84                     u12590:
 18359                           
 18360                           ; BSR set to: 0
 18361                           ;usb_device_cdc.c: 493: {
 18362                           ;usb_device_cdc.c: 498: if(len > (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT))
 18363                           
 18364                           ; BSR set to: 0
 18365  004A84  EE20 F001          	lfsr	2,1
 18366  004A88  51BC               	movf	_CDCDataOutHandle& (0+255),w,b
 18367  004A8A  26D9               	addwf	fsr2l,f,c
 18368  004A8C  51BD               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 18369  004A8E  22DA               	addwfc	fsr2h,f,c
 18370  004A90  5186               	movf	getsUSBUSART@len& (0+255),w,b
 18371  004A92  5CDE               	subwf	postinc2,w,c
 18372  004A94  B0D8               	btfsc	status,0,c
 18373  004A96  D008               	goto	l1924
 18374                           
 18375                           ; BSR set to: 0
 18376                           ;usb_device_cdc.c: 499: len = (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT);
 18377  004A98  EE20 F001          	lfsr	2,1
 18378  004A9C  51BC               	movf	_CDCDataOutHandle& (0+255),w,b
 18379  004A9E  26D9               	addwf	fsr2l,f,c
 18380  004AA0  51BD               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 18381  004AA2  22DA               	addwfc	fsr2h,f,c
 18382  004AA4  50DF               	movf	indf2,w,c
 18383  004AA6  6F86               	movwf	getsUSBUSART@len& (0+255),b
 18384  004AA8                     l1924:
 18385                           
 18386                           ; BSR set to: 0
 18387                           ;usb_device_cdc.c: 504: for(cdc_rx_len = 0; cdc_rx_len < len; cdc_rx_len++)
 18388                           
 18389                           ; BSR set to: 0
 18390  004AA8  0E00               	movlw	0
 18391  004AAA  6FC6               	movwf	_cdc_rx_len& (0+255),b
 18392  004AAC  D013               	goto	l1925
 18393  004AAE                     
 18394                           ; BSR set to: 0
 18395                           ;usb_device_cdc.c: 505: buffer[cdc_rx_len] = cdc_data_rx[cdc_rx_len];
 18396                           
 18397                           ; BSR set to: 0
 18398  004AAE  51C6               	movf	_cdc_rx_len& (0+255),w,b
 18399  004AB0  0D01               	mullw	1
 18400  004AB2  0E00               	movlw	low _cdc_data_rx
 18401  004AB4  24F3               	addwf	prodl,w,c
 18402  004AB6  6ED9               	movwf	fsr2l,c
 18403  004AB8  0E05               	movlw	high _cdc_data_rx
 18404  004ABA  20F4               	addwfc	prodh,w,c
 18405  004ABC  6EDA               	movwf	fsr2h,c
 18406  004ABE  51C6               	movf	_cdc_rx_len& (0+255),w,b
 18407  004AC0  0D01               	mullw	1
 18408  004AC2  50F3               	movf	prodl,w,c
 18409  004AC4  2584               	addwf	getsUSBUSART@buffer& (0+255),w,b
 18410  004AC6  6EE1               	movwf	fsr1l,c
 18411  004AC8  50F4               	movf	prodh,w,c
 18412  004ACA  2185               	addwfc	(getsUSBUSART@buffer+1)& (0+255),w,b
 18413  004ACC  6EE2               	movwf	fsr1h,c
 18414  004ACE  CFDF FFE7          	movff	indf2,indf1
 18415                           
 18416                           ; BSR set to: 0
 18417  004AD2  2BC6               	incf	_cdc_rx_len& (0+255),f,b
 18418  004AD4                     l1925:
 18419                           
 18420                           ; BSR set to: 0
 18421                           
 18422                           ; BSR set to: 0
 18423  004AD4  5186               	movf	getsUSBUSART@len& (0+255),w,b
 18424  004AD6  5DC6               	subwf	_cdc_rx_len& (0+255),w,b
 18425  004AD8  A0D8               	btfss	status,0,c
 18426  004ADA  D7E9               	goto	l1926
 18427                           
 18428                           ; BSR set to: 0
 18429                           ;usb_device_cdc.c: 511: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 18430                           
 18431                           ; BSR set to: 0
 18432  004ADC  0E00               	movlw	0
 18433  004ADE  6F7D               	movwf	USBTransferOnePacket@dir& (0+255),b
 18434  004AE0  0E00               	movlw	low _cdc_data_rx
 18435  004AE2  6F7E               	movwf	USBTransferOnePacket@data& (0+255),b
 18436  004AE4  0E05               	movlw	high _cdc_data_rx
 18437  004AE6  6F7F               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 18438  004AE8  0E40               	movlw	64
 18439  004AEA  6F80               	movwf	USBTransferOnePacket@len& (0+255),b
 18440  004AEC  0E02               	movlw	2
 18441  004AEE  ECF4  F020         	call	_USBTransferOnePacket
 18442  004AF2  C07D  F0BC         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
 18443  004AF6  C07E  F0BD         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
 18444  004AFA                     l1921:
 18445                           
 18446                           ;usb_device_cdc.c: 513: }
 18447                           ;usb_device_cdc.c: 515: return cdc_rx_len;
 18448  004AFA  0100               	movlb	0	; () banked
 18449  004AFC  51C6               	movf	_cdc_rx_len& (0+255),w,b
 18450  004AFE  0012               	return	
 18451  004B00                     __end_of_getsUSBUSART:
 18452                           	opt stack 0
 18453                           tosu	equ	0xFFF
 18454                           tosh	equ	0xFFE
 18455                           tosl	equ	0xFFD
 18456                           pclath	equ	0xFFA
 18457                           tblptru	equ	0xFF8
 18458                           tblptrh	equ	0xFF7
 18459                           tblptrl	equ	0xFF6
 18460                           tablat	equ	0xFF5
 18461                           prodh	equ	0xFF4
 18462                           prodl	equ	0xFF3
 18463                           intcon	equ	0xFF2
 18464                           intcon2	equ	0xFF1
 18465                           intcon3	equ	0xFF0
 18466                           indf0	equ	0xFEF
 18467                           postinc0	equ	0xFEE
 18468                           plusw0	equ	0xFEB
 18469                           fsr0h	equ	0xFEA
 18470                           fsr0l	equ	0xFE9
 18471                           wreg	equ	0xFE8
 18472                           indf1	equ	0xFE7
 18473                           postinc1	equ	0xFE6
 18474                           postdec1	equ	0xFE5
 18475                           fsr1h	equ	0xFE2
 18476                           fsr1l	equ	0xFE1
 18477                           indf2	equ	0xFDF
 18478                           postinc2	equ	0xFDE
 18479                           postdec2	equ	0xFDD
 18480                           plusw2	equ	0xFDB
 18481                           fsr2h	equ	0xFDA
 18482                           fsr2l	equ	0xFD9
 18483                           status	equ	0xFD8
 18484                           
 18485 ;; *************** function _USBTransferOnePacket *****************
 18486 ;; Defined at:
 18487 ;;		line 1013 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 18488 ;; Parameters:    Size  Location     Type
 18489 ;;  ep              1    wreg     unsigned char 
 18490 ;;  dir             1   29[BANK0 ] unsigned char 
 18491 ;;  data            2   30[BANK0 ] PTR unsigned char 
 18492 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 18493 ;;  len             1   32[BANK0 ] unsigned char 
 18494 ;; Auto vars:     Size  Location     Type
 18495 ;;  ep              1   33[BANK0 ] unsigned char 
 18496 ;;  handle          2   34[BANK0 ] PTR volatile struct __BD
 18497 ;;		 -> NULL(0), BDT(48), 
 18498 ;; Return value:  Size  Location     Type
 18499 ;;                  2   29[BANK0 ] PTR void 
 18500 ;; Registers used:
 18501 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 18502 ;; Tracked objects:
 18503 ;;		On entry : 0/0
 18504 ;;		On exit  : 0/0
 18505 ;;		Unchanged: 0/0
 18506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18507 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18508 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18510 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18511 ;;Total ram usage:        7 bytes
 18512 ;; Hardware stack levels used:    1
 18513 ;; Hardware stack levels required when called:   11
 18514 ;; This function calls:
 18515 ;;		Nothing
 18516 ;; This function is called by:
 18517 ;;		_CDCInitEP
 18518 ;;		_getsUSBUSART
 18519 ;;		_CDCTxService
 18520 ;;		_USBCDCEventHandler
 18521 ;; This function uses a non-reentrant model
 18522 ;;
 18523                           
 18524                           	psect	text75
 18525  0041E8                     __ptext75:
 18526                           	opt stack 0
 18527  0041E8                     _USBTransferOnePacket:
 18528                           	opt stack 13
 18529                           
 18530                           ; BSR set to: 0
 18531                           ;incstack = 0
 18532                           ;USBTransferOnePacket@ep stored from wreg
 18533  0041E8  0100               	movlb	0	; () banked
 18534  0041EA  6F81               	movwf	USBTransferOnePacket@ep& (0+255),b
 18535                           
 18536                           ;usb_device.c: 1015: volatile BDT_ENTRY* handle;
 18537                           ;usb_device.c: 1018: if(dir != 0)
 18538  0041EC  0100               	movlb	0	; () banked
 18539  0041EE  517D               	movf	USBTransferOnePacket@dir& (0+255),w,b
 18540  0041F0  B4D8               	btfsc	status,2,c
 18541  0041F2  D007               	goto	l1645
 18542                           
 18543                           ; BSR set to: 0
 18544                           ;usb_device.c: 1019: {
 18545                           ;usb_device.c: 1021: handle = pBDTEntryIn[ep];
 18546  0041F4  5181               	movf	USBTransferOnePacket@ep& (0+255),w,b
 18547  0041F6  0D02               	mullw	2
 18548  0041F8  0EB6               	movlw	low _pBDTEntryIn
 18549  0041FA  24F3               	addwf	prodl,w,c
 18550  0041FC  6ED9               	movwf	fsr2l,c
 18551  0041FE  0E00               	movlw	high _pBDTEntryIn
 18552  004200  D006               	goto	L16
 18553  004202                     l1645:
 18554                           
 18555                           ; BSR set to: 0
 18556                           ;usb_device.c: 1023: else
 18557                           ;usb_device.c: 1024: {
 18558                           ;usb_device.c: 1026: handle = pBDTEntryOut[ep];
 18559                           
 18560                           ; BSR set to: 0
 18561  004202  5181               	movf	USBTransferOnePacket@ep& (0+255),w,b
 18562  004204  0D02               	mullw	2
 18563  004206  0E0E               	movlw	low _pBDTEntryOut
 18564  004208  24F3               	addwf	prodl,w,c
 18565  00420A  6ED9               	movwf	fsr2l,c
 18566  00420C  0E03               	movlw	high _pBDTEntryOut
 18567  00420E                     L16:
 18568  00420E  20F4               	addwfc	prodh,w,c
 18569  004210  6EDA               	movwf	fsr2h,c
 18570  004212  CFDE F082          	movff	postinc2,USBTransferOnePacket@handle
 18571  004216  CFDD F083          	movff	postdec2,USBTransferOnePacket@handle+1
 18572                           
 18573                           ; BSR set to: 0
 18574                           ;usb_device.c: 1027: }
 18575                           ;usb_device.c: 1031: if(handle == 0)
 18576                           
 18577                           ; BSR set to: 0
 18578  00421A  5182               	movf	USBTransferOnePacket@handle& (0+255),w,b
 18579  00421C  1183               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 18580  00421E  A4D8               	btfss	status,2,c
 18581  004220  D005               	goto	l1647
 18582                           
 18583                           ; BSR set to: 0
 18584                           ;usb_device.c: 1032: {
 18585                           ;usb_device.c: 1033: return 0;
 18586  004222  0E00               	movlw	0
 18587  004224  6F7D               	movwf	?_USBTransferOnePacket& (0+255),b
 18588  004226  0E00               	movlw	0
 18589  004228  6F7E               	movwf	(?_USBTransferOnePacket+1)& (0+255),b
 18590                           
 18591                           ; BSR set to: 0
 18592  00422A  0012               	return	
 18593  00422C                     l1647:
 18594                           
 18595                           ; BSR set to: 0
 18596                           ;usb_device.c: 1034: }
 18597                           ;usb_device.c: 1047: handle->ADR = ((uint16_t)(data));
 18598                           
 18599                           ; BSR set to: 0
 18600  00422C  EE20 F002          	lfsr	2,2
 18601  004230  5182               	movf	USBTransferOnePacket@handle& (0+255),w,b
 18602  004232  26D9               	addwf	fsr2l,f,c
 18603  004234  5183               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 18604  004236  22DA               	addwfc	fsr2h,f,c
 18605  004238  C07E  FFDE         	movff	USBTransferOnePacket@data,postinc2
 18606  00423C  C07F  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 18607                           
 18608                           ;usb_device.c: 1048: handle->CNT = len;
 18609  004240  EE20 F001          	lfsr	2,1
 18610  004244  5182               	movf	USBTransferOnePacket@handle& (0+255),w,b
 18611  004246  26D9               	addwf	fsr2l,f,c
 18612  004248  5183               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 18613  00424A  22DA               	addwfc	fsr2h,f,c
 18614  00424C  C080  FFDF         	movff	USBTransferOnePacket@len,indf2
 18615                           
 18616                           ; BSR set to: 0
 18617                           ;usb_device.c: 1049: handle->STAT.Val &= 0x40;
 18618  004250  C082  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 18619  004254  C083  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 18620  004258  0E40               	movlw	64
 18621  00425A  16DF               	andwf	indf2,f,c
 18622                           
 18623                           ; BSR set to: 0
 18624                           ;usb_device.c: 1050: handle->STAT.Val |= (0x08 & 0x08);
 18625  00425C  C082  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 18626  004260  C083  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 18627  004264  0E00               	movlw	0
 18628  004266  86DB               	bsf	plusw2,3,c
 18629                           
 18630                           ; BSR set to: 0
 18631                           ;usb_device.c: 1051: handle->STAT.Val |= 0x80;
 18632  004268  C082  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 18633  00426C  C083  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 18634  004270  0E00               	movlw	0
 18635  004272  8EDB               	bsf	plusw2,7,c
 18636                           
 18637                           ; BSR set to: 0
 18638                           ;usb_device.c: 1054: if(dir != 0)
 18639  004274  517D               	movf	USBTransferOnePacket@dir& (0+255),w,b
 18640  004276  B4D8               	btfsc	status,2,c
 18641  004278  D007               	goto	l1649
 18642                           
 18643                           ; BSR set to: 0
 18644                           ;usb_device.c: 1055: {
 18645                           ;usb_device.c: 1057: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 18646  00427A  5181               	movf	USBTransferOnePacket@ep& (0+255),w,b
 18647  00427C  0D02               	mullw	2
 18648  00427E  0EB6               	movlw	low _pBDTEntryIn
 18649  004280  24F3               	addwf	prodl,w,c
 18650  004282  6ED9               	movwf	fsr2l,c
 18651  004284  0E00               	movlw	high _pBDTEntryIn
 18652  004286  D006               	goto	L17
 18653  004288                     l1649:
 18654                           
 18655                           ; BSR set to: 0
 18656                           ;usb_device.c: 1059: else
 18657                           ;usb_device.c: 1060: {
 18658                           ;usb_device.c: 1062: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 18659                           
 18660                           ; BSR set to: 0
 18661  004288  5181               	movf	USBTransferOnePacket@ep& (0+255),w,b
 18662  00428A  0D02               	mullw	2
 18663  00428C  0E0E               	movlw	low _pBDTEntryOut
 18664  00428E  24F3               	addwf	prodl,w,c
 18665  004290  6ED9               	movwf	fsr2l,c
 18666  004292  0E03               	movlw	high _pBDTEntryOut
 18667  004294                     L17:
 18668  004294  20F4               	addwfc	prodh,w,c
 18669  004296  6EDA               	movwf	fsr2h,c
 18670  004298  0E04               	movlw	4
 18671  00429A  1ADF               	xorwf	indf2,f,c
 18672                           
 18673                           ; BSR set to: 0
 18674                           ;usb_device.c: 1063: }
 18675                           ;usb_device.c: 1064: return (void*)handle;
 18676                           
 18677                           ; BSR set to: 0
 18678  00429C  C082  F07D         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 18679  0042A0  C083  F07E         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 18680  0042A4  0012               	return	
 18681  0042A6                     __end_of_USBTransferOnePacket:
 18682                           	opt stack 0
 18683                           tosu	equ	0xFFF
 18684                           tosh	equ	0xFFE
 18685                           tosl	equ	0xFFD
 18686                           pclath	equ	0xFFA
 18687                           tblptru	equ	0xFF8
 18688                           tblptrh	equ	0xFF7
 18689                           tblptrl	equ	0xFF6
 18690                           tablat	equ	0xFF5
 18691                           prodh	equ	0xFF4
 18692                           prodl	equ	0xFF3
 18693                           intcon	equ	0xFF2
 18694                           intcon2	equ	0xFF1
 18695                           intcon3	equ	0xFF0
 18696                           indf0	equ	0xFEF
 18697                           postinc0	equ	0xFEE
 18698                           plusw0	equ	0xFEB
 18699                           fsr0h	equ	0xFEA
 18700                           fsr0l	equ	0xFE9
 18701                           wreg	equ	0xFE8
 18702                           indf1	equ	0xFE7
 18703                           postinc1	equ	0xFE6
 18704                           postdec1	equ	0xFE5
 18705                           fsr1h	equ	0xFE2
 18706                           fsr1l	equ	0xFE1
 18707                           indf2	equ	0xFDF
 18708                           postinc2	equ	0xFDE
 18709                           postdec2	equ	0xFDD
 18710                           plusw2	equ	0xFDB
 18711                           fsr2h	equ	0xFDA
 18712                           fsr2l	equ	0xFD9
 18713                           status	equ	0xFD8
 18714                           
 18715 ;; *************** function _atoi *****************
 18716 ;; Defined at:
 18717 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/atoi.c"
 18718 ;; Parameters:    Size  Location     Type
 18719 ;;  s               2   35[BANK0 ] PTR const unsigned char 
 18720 ;;		 -> Terminal@Len(4), 
 18721 ;; Auto vars:     Size  Location     Type
 18722 ;;  a               2   40[BANK0 ] int 
 18723 ;;  sign            1   39[BANK0 ] unsigned char 
 18724 ;; Return value:  Size  Location     Type
 18725 ;;                  2   35[BANK0 ] int 
 18726 ;; Registers used:
 18727 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18728 ;; Tracked objects:
 18729 ;;		On entry : 0/0
 18730 ;;		On exit  : 0/0
 18731 ;;		Unchanged: 0/0
 18732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18733 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18734 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18735 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18736 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18737 ;;Total ram usage:        7 bytes
 18738 ;; Hardware stack levels used:    1
 18739 ;; Hardware stack levels required when called:   12
 18740 ;; This function calls:
 18741 ;;		___wmul
 18742 ;;		_isdigit
 18743 ;; This function is called by:
 18744 ;;		_Terminal
 18745 ;; This function uses a non-reentrant model
 18746 ;;
 18747                           
 18748                           	psect	text76
 18749  003930                     __ptext76:
 18750                           	opt stack 0
 18751  003930                     _atoi:
 18752                           	opt stack 13
 18753                           
 18754                           ; BSR set to: 0
 18755                           ;incstack = 0
 18756  003930  D003               	goto	l2993
 18757  003932  0100               	movlb	0	; () banked
 18758  003934  4B83               	infsnz	atoi@s& (0+255),f,b
 18759  003936  2B84               	incf	(atoi@s+1)& (0+255),f,b
 18760  003938                     l2993:
 18761                           
 18762                           ; BSR set to: 0
 18763  003938  C083  FFD9         	movff	atoi@s,fsr2l
 18764  00393C  C084  FFDA         	movff	atoi@s+1,fsr2h
 18765  003940  0E20               	movlw	32
 18766  003942  18DE               	xorwf	postinc2,w,c
 18767  003944  B4D8               	btfsc	status,2,c
 18768  003946  D7F5               	goto	l2994
 18769  003948  C083  FFD9         	movff	atoi@s,fsr2l
 18770  00394C  C084  FFDA         	movff	atoi@s+1,fsr2h
 18771  003950  0E09               	movlw	9
 18772  003952  18DE               	xorwf	postinc2,w,c
 18773  003954  B4D8               	btfsc	status,2,c
 18774  003956  D7ED               	goto	l2994
 18775  003958  0E00               	movlw	0
 18776  00395A  0100               	movlb	0	; () banked
 18777  00395C  6F89               	movwf	(atoi@a+1)& (0+255),b
 18778  00395E  0E00               	movlw	0
 18779  003960  6F88               	movwf	atoi@a& (0+255),b
 18780  003962  0E00               	movlw	0
 18781  003964  6F87               	movwf	atoi@sign& (0+255),b
 18782                           
 18783                           ; BSR set to: 0
 18784  003966  C083  FFD9         	movff	atoi@s,fsr2l
 18785  00396A  C084  FFDA         	movff	atoi@s+1,fsr2h
 18786  00396E  0E2D               	movlw	45
 18787  003970  18DE               	xorwf	postinc2,w,c
 18788  003972  A4D8               	btfss	status,2,c
 18789  003974  D002               	goto	l2996
 18790                           
 18791                           ; BSR set to: 0
 18792  003976  2B87               	incf	atoi@sign& (0+255),f,b
 18793  003978  D026               	goto	l13646
 18794  00397A                     l2996:
 18795                           
 18796                           ; BSR set to: 0
 18797                           
 18798                           ; BSR set to: 0
 18799  00397A  C083  FFD9         	movff	atoi@s,fsr2l
 18800  00397E  C084  FFDA         	movff	atoi@s+1,fsr2h
 18801  003982  0E2B               	movlw	43
 18802  003984  18DE               	xorwf	postinc2,w,c
 18803  003986  A4D8               	btfss	status,2,c
 18804  003988  D020               	goto	l2999
 18805  00398A  D01D               	goto	l13646
 18806  00398C                     
 18807                           ; BSR set to: 0
 18808  00398C  C088  F07D         	movff	atoi@a,___wmul@multiplier
 18809  003990  C089  F07E         	movff	atoi@a+1,___wmul@multiplier+1
 18810  003994  0E00               	movlw	0
 18811  003996  0100               	movlb	0	; () banked
 18812  003998  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 18813  00399A  0E0A               	movlw	10
 18814  00399C  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 18815  00399E  ECE1  F031         	call	___wmul	;wreg free
 18816  0039A2  C083  FFD9         	movff	atoi@s,fsr2l
 18817  0039A6  C084  FFDA         	movff	atoi@s+1,fsr2h
 18818  0039AA  50DF               	movf	indf2,w,c
 18819  0039AC  0100               	movlb	0	; () banked
 18820  0039AE  6F85               	movwf	??_atoi& (0+255),b
 18821  0039B0  6B86               	clrf	(??_atoi+1)& (0+255),b
 18822  0039B2  517D               	movf	?___wmul& (0+255),w,b
 18823  0039B4  2785               	addwf	??_atoi& (0+255),f,b
 18824  0039B6  517E               	movf	(?___wmul+1)& (0+255),w,b
 18825  0039B8  2386               	addwfc	(??_atoi+1)& (0+255),f,b
 18826  0039BA  0ED0               	movlw	208
 18827  0039BC  2585               	addwf	??_atoi& (0+255),w,b
 18828  0039BE  6F88               	movwf	atoi@a& (0+255),b
 18829  0039C0  0EFF               	movlw	255
 18830  0039C2  2186               	addwfc	(??_atoi+1)& (0+255),w,b
 18831  0039C4  6F89               	movwf	(atoi@a+1)& (0+255),b
 18832  0039C6                     l13646:
 18833                           
 18834                           ; BSR set to: 0
 18835  0039C6  4B83               	infsnz	atoi@s& (0+255),f,b
 18836  0039C8  2B84               	incf	(atoi@s+1)& (0+255),f,b
 18837  0039CA                     l2999:
 18838                           
 18839                           ; BSR set to: 0
 18840                           
 18841                           ; BSR set to: 0
 18842  0039CA  C083  FFD9         	movff	atoi@s,fsr2l
 18843  0039CE  C084  FFDA         	movff	atoi@s+1,fsr2h
 18844  0039D2  50DF               	movf	indf2,w,c
 18845  0039D4  ECA7  F032         	call	_isdigit
 18846  0039D8  B0D8               	btfsc	status,0,c
 18847  0039DA  D7D8               	goto	l3000
 18848  0039DC  0100               	movlb	0	; () banked
 18849  0039DE  5187               	movf	atoi@sign& (0+255),w,b
 18850  0039E0  B4D8               	btfsc	status,2,c
 18851  0039E2  D00D               	goto	l3002
 18852                           
 18853                           ; BSR set to: 0
 18854  0039E4  C088  F085         	movff	atoi@a,??_atoi
 18855  0039E8  C089  F086         	movff	atoi@a+1,??_atoi+1
 18856  0039EC  1F85               	comf	??_atoi& (0+255),f,b
 18857  0039EE  1F86               	comf	(??_atoi+1)& (0+255),f,b
 18858  0039F0  4B85               	infsnz	??_atoi& (0+255),f,b
 18859  0039F2  2B86               	incf	(??_atoi+1)& (0+255),f,b
 18860  0039F4  C085  F083         	movff	??_atoi,?_atoi
 18861  0039F8  C086  F084         	movff	??_atoi+1,?_atoi+1
 18862  0039FC  0012               	return	
 18863  0039FE                     l3002:
 18864                           
 18865                           ; BSR set to: 0
 18866  0039FE  C088  F083         	movff	atoi@a,?_atoi
 18867  003A02  C089  F084         	movff	atoi@a+1,?_atoi+1
 18868                           
 18869                           ; BSR set to: 0
 18870  003A06  0012               	return		;funcret
 18871  003A08                     __end_of_atoi:
 18872                           	opt stack 0
 18873                           tosu	equ	0xFFF
 18874                           tosh	equ	0xFFE
 18875                           tosl	equ	0xFFD
 18876                           pclath	equ	0xFFA
 18877                           tblptru	equ	0xFF8
 18878                           tblptrh	equ	0xFF7
 18879                           tblptrl	equ	0xFF6
 18880                           tablat	equ	0xFF5
 18881                           prodh	equ	0xFF4
 18882                           prodl	equ	0xFF3
 18883                           intcon	equ	0xFF2
 18884                           intcon2	equ	0xFF1
 18885                           intcon3	equ	0xFF0
 18886                           indf0	equ	0xFEF
 18887                           postinc0	equ	0xFEE
 18888                           plusw0	equ	0xFEB
 18889                           fsr0h	equ	0xFEA
 18890                           fsr0l	equ	0xFE9
 18891                           wreg	equ	0xFE8
 18892                           indf1	equ	0xFE7
 18893                           postinc1	equ	0xFE6
 18894                           postdec1	equ	0xFE5
 18895                           fsr1h	equ	0xFE2
 18896                           fsr1l	equ	0xFE1
 18897                           indf2	equ	0xFDF
 18898                           postinc2	equ	0xFDE
 18899                           postdec2	equ	0xFDD
 18900                           plusw2	equ	0xFDB
 18901                           fsr2h	equ	0xFDA
 18902                           fsr2l	equ	0xFD9
 18903                           status	equ	0xFD8
 18904                           
 18905 ;; *************** function _isdigit *****************
 18906 ;; Defined at:
 18907 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isdigit.c"
 18908 ;; Parameters:    Size  Location     Type
 18909 ;;  c               1    wreg     unsigned char 
 18910 ;; Auto vars:     Size  Location     Type
 18911 ;;  c               1   31[BANK0 ] unsigned char 
 18912 ;; Return value:  Size  Location     Type
 18913 ;;		None               void
 18914 ;; Registers used:
 18915 ;;		wreg, status,2, status,0
 18916 ;; Tracked objects:
 18917 ;;		On entry : 0/0
 18918 ;;		On exit  : 0/0
 18919 ;;		Unchanged: 0/0
 18920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18921 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18922 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18923 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18924 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18925 ;;Total ram usage:        3 bytes
 18926 ;; Hardware stack levels used:    1
 18927 ;; Hardware stack levels required when called:   11
 18928 ;; This function calls:
 18929 ;;		Nothing
 18930 ;; This function is called by:
 18931 ;;		_atoi
 18932 ;;		_strtol
 18933 ;;		_xtoi
 18934 ;;		_isxdigit
 18935 ;; This function uses a non-reentrant model
 18936 ;;
 18937                           
 18938                           	psect	text77
 18939  00654E                     __ptext77:
 18940                           	opt stack 0
 18941  00654E                     _isdigit:
 18942                           	opt stack 12
 18943                           
 18944                           ; BSR set to: 0
 18945                           ;incstack = 0
 18946                           ;isdigit@c stored from wreg
 18947  00654E  0100               	movlb	0	; () banked
 18948  006550  6F7F               	movwf	isdigit@c& (0+255),b
 18949  006552  0E00               	movlw	0
 18950  006554  0100               	movlb	0	; () banked
 18951  006556  6F7E               	movwf	_isdigit$6360& (0+255),b
 18952                           
 18953                           ; BSR set to: 0
 18954  006558  0E3A               	movlw	58
 18955  00655A  617F               	cpfslt	isdigit@c& (0+255),b
 18956  00655C  D005               	goto	l3174
 18957                           
 18958                           ; BSR set to: 0
 18959  00655E  0E2F               	movlw	47
 18960  006560  657F               	cpfsgt	isdigit@c& (0+255),b
 18961  006562  D002               	goto	l3174
 18962                           
 18963                           ; BSR set to: 0
 18964  006564  0E01               	movlw	1
 18965  006566  6F7E               	movwf	_isdigit$6360& (0+255),b
 18966  006568                     l3174:
 18967                           
 18968                           ; BSR set to: 0
 18969                           
 18970                           ; BSR set to: 0
 18971  006568  C07E  F07D         	movff	_isdigit$6360,??_isdigit
 18972  00656C  317D               	rrcf	??_isdigit& (0+255),w,b
 18973  00656E  0012               	return	
 18974  006570                     __end_of_isdigit:
 18975                           	opt stack 0
 18976                           tosu	equ	0xFFF
 18977                           tosh	equ	0xFFE
 18978                           tosl	equ	0xFFD
 18979                           pclath	equ	0xFFA
 18980                           tblptru	equ	0xFF8
 18981                           tblptrh	equ	0xFF7
 18982                           tblptrl	equ	0xFF6
 18983                           tablat	equ	0xFF5
 18984                           prodh	equ	0xFF4
 18985                           prodl	equ	0xFF3
 18986                           intcon	equ	0xFF2
 18987                           intcon2	equ	0xFF1
 18988                           intcon3	equ	0xFF0
 18989                           indf0	equ	0xFEF
 18990                           postinc0	equ	0xFEE
 18991                           plusw0	equ	0xFEB
 18992                           fsr0h	equ	0xFEA
 18993                           fsr0l	equ	0xFE9
 18994                           wreg	equ	0xFE8
 18995                           indf1	equ	0xFE7
 18996                           postinc1	equ	0xFE6
 18997                           postdec1	equ	0xFE5
 18998                           fsr1h	equ	0xFE2
 18999                           fsr1l	equ	0xFE1
 19000                           indf2	equ	0xFDF
 19001                           postinc2	equ	0xFDE
 19002                           postdec2	equ	0xFDD
 19003                           plusw2	equ	0xFDB
 19004                           fsr2h	equ	0xFDA
 19005                           fsr2l	equ	0xFD9
 19006                           status	equ	0xFD8
 19007                           
 19008 ;; *************** function _Rtcm_SetRtccDate *****************
 19009 ;; Defined at:
 19010 ;;		line 176 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/rtcm.c"
 19011 ;; Parameters:    Size  Location     Type
 19012 ;;  Date            8   41[BANK0 ] struct _RtccDateType
 19013 ;; Auto vars:     Size  Location     Type
 19014 ;;		None
 19015 ;; Return value:  Size  Location     Type
 19016 ;;                  1    wreg      void 
 19017 ;; Registers used:
 19018 ;;		wreg, status,2, status,0, cstack
 19019 ;; Tracked objects:
 19020 ;;		On entry : 0/0
 19021 ;;		On exit  : 0/0
 19022 ;;		Unchanged: 0/0
 19023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19024 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19025 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19026 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19027 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19028 ;;Total ram usage:        8 bytes
 19029 ;; Hardware stack levels used:    1
 19030 ;; Hardware stack levels required when called:   13
 19031 ;; This function calls:
 19032 ;;		_Rtcc_LockRtc
 19033 ;;		_Rtcc_SetRtccValue
 19034 ;;		_Rtcc_UnlockRtc
 19035 ;; This function is called by:
 19036 ;;		_Rtcm_MainTask
 19037 ;; This function uses a non-reentrant model
 19038 ;;
 19039                           
 19040                           	psect	text78
 19041  00585E                     __ptext78:
 19042                           	opt stack 0
 19043  00585E                     _Rtcm_SetRtccDate:
 19044                           	opt stack 14
 19045                           
 19046                           ;rtcm.c: 179: Rtcc_UnlockRtc();
 19047                           
 19048                           ; BSR set to: 0
 19049                           ;incstack = 0
 19050  00585E  ECDC  F033         	call	_Rtcc_UnlockRtc	;wreg free
 19051                           
 19052                           ;rtcm.c: 182: Rtcc_SetRtccValue(ValPtrYear,(Date.Year - 2000));
 19053  005862  0100               	movlb	0	; () banked
 19054  005864  5189               	movf	Rtcm_SetRtccDate@Date& (0+255),w,b
 19055  005866  0F30               	addlw	48
 19056  005868  6F85               	movwf	Rtcc_SetRtccValue@Value& (0+255),b
 19057  00586A  0E00               	movlw	0
 19058  00586C  EC53  F00C         	call	_Rtcc_SetRtccValue
 19059                           
 19060                           ;rtcm.c: 183: Rtcc_SetRtccValue(ValPtrMonth,Date.Month);
 19061  005870  C08B  F085         	movff	Rtcm_SetRtccDate@Date+2,Rtcc_SetRtccValue@Value
 19062  005874  0E01               	movlw	1
 19063  005876  EC53  F00C         	call	_Rtcc_SetRtccValue
 19064                           
 19065                           ;rtcm.c: 184: Rtcc_SetRtccValue(ValPtrDay,Date.Day);
 19066  00587A  C08C  F085         	movff	Rtcm_SetRtccDate@Date+3,Rtcc_SetRtccValue@Value
 19067  00587E  0E02               	movlw	2
 19068  005880  EC53  F00C         	call	_Rtcc_SetRtccValue
 19069                           
 19070                           ;rtcm.c: 185: Rtcc_SetRtccValue(ValPtrWeekday,Date.Weekday);
 19071  005884  C08D  F085         	movff	Rtcm_SetRtccDate@Date+4,Rtcc_SetRtccValue@Value
 19072  005888  0E03               	movlw	3
 19073  00588A  EC53  F00C         	call	_Rtcc_SetRtccValue
 19074                           
 19075                           ;rtcm.c: 186: Rtcc_SetRtccValue(ValPtrHours,Date.Hour);
 19076  00588E  C08E  F085         	movff	Rtcm_SetRtccDate@Date+5,Rtcc_SetRtccValue@Value
 19077  005892  0E04               	movlw	4
 19078  005894  EC53  F00C         	call	_Rtcc_SetRtccValue
 19079                           
 19080                           ;rtcm.c: 187: Rtcc_SetRtccValue(ValPtrMinutes,Date.Minute);
 19081  005898  C08F  F085         	movff	Rtcm_SetRtccDate@Date+6,Rtcc_SetRtccValue@Value
 19082  00589C  0E05               	movlw	5
 19083  00589E  EC53  F00C         	call	_Rtcc_SetRtccValue
 19084                           
 19085                           ;rtcm.c: 188: Rtcc_SetRtccValue(ValPtrSeconds,Date.Second);
 19086  0058A2  C090  F085         	movff	Rtcm_SetRtccDate@Date+7,Rtcc_SetRtccValue@Value
 19087  0058A6  0E06               	movlw	6
 19088  0058A8  EC53  F00C         	call	_Rtcc_SetRtccValue
 19089                           
 19090                           ;rtcm.c: 191: Rtcc_LockRtc();
 19091  0058AC  ECE4  F033         	call	_Rtcc_LockRtc	;wreg free
 19092  0058B0  0012               	return		;funcret
 19093  0058B2                     __end_of_Rtcm_SetRtccDate:
 19094                           	opt stack 0
 19095                           tosu	equ	0xFFF
 19096                           tosh	equ	0xFFE
 19097                           tosl	equ	0xFFD
 19098                           pclath	equ	0xFFA
 19099                           tblptru	equ	0xFF8
 19100                           tblptrh	equ	0xFF7
 19101                           tblptrl	equ	0xFF6
 19102                           tablat	equ	0xFF5
 19103                           prodh	equ	0xFF4
 19104                           prodl	equ	0xFF3
 19105                           intcon	equ	0xFF2
 19106                           intcon2	equ	0xFF1
 19107                           intcon3	equ	0xFF0
 19108                           indf0	equ	0xFEF
 19109                           postinc0	equ	0xFEE
 19110                           plusw0	equ	0xFEB
 19111                           fsr0h	equ	0xFEA
 19112                           fsr0l	equ	0xFE9
 19113                           wreg	equ	0xFE8
 19114                           indf1	equ	0xFE7
 19115                           postinc1	equ	0xFE6
 19116                           postdec1	equ	0xFE5
 19117                           fsr1h	equ	0xFE2
 19118                           fsr1l	equ	0xFE1
 19119                           indf2	equ	0xFDF
 19120                           postinc2	equ	0xFDE
 19121                           postdec2	equ	0xFDD
 19122                           plusw2	equ	0xFDB
 19123                           fsr2h	equ	0xFDA
 19124                           fsr2l	equ	0xFD9
 19125                           status	equ	0xFD8
 19126                           
 19127 ;; *************** function _Rtcc_UnlockRtc *****************
 19128 ;; Defined at:
 19129 ;;		line 163 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 19130 ;; Parameters:    Size  Location     Type
 19131 ;;		None
 19132 ;; Auto vars:     Size  Location     Type
 19133 ;;		None
 19134 ;; Return value:  Size  Location     Type
 19135 ;;                  1    wreg      void 
 19136 ;; Registers used:
 19137 ;;		None
 19138 ;; Tracked objects:
 19139 ;;		On entry : 0/0
 19140 ;;		On exit  : 0/0
 19141 ;;		Unchanged: 0/0
 19142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19143 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19144 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19146 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19147 ;;Total ram usage:        0 bytes
 19148 ;; Hardware stack levels used:    1
 19149 ;; Hardware stack levels required when called:   11
 19150 ;; This function calls:
 19151 ;;		Nothing
 19152 ;; This function is called by:
 19153 ;;		_Rtcm_MainTask
 19154 ;;		_Rtcm_SetRtccDate
 19155 ;;		_Rtcm_SetRtccAlarm
 19156 ;; This function uses a non-reentrant model
 19157 ;;
 19158                           
 19159                           	psect	text79
 19160  0067B8                     __ptext79:
 19161                           	opt stack 0
 19162  0067B8                     _Rtcc_UnlockRtc:
 19163                           	opt stack 15
 19164                           
 19165                           ;incstack = 0
 19166  0067B8  010F               	movlb	15	;# 
 19167  0067BA  0E55               	movlw	85	;# 
 19168  0067BC  6EA7               	movwf	4007,c	;# 
 19169  0067BE  0EAA               	movlw	170	;# 
 19170  0067C0  6EA7               	movwf	4007,c	;# 
 19171                           
 19172                           ;rtcc_drv.c: 172: RTCCFGbits.RTCWREN = 1u;
 19173  0067C2  010F               	movlb	15	; () banked
 19174  0067C4  8B3F               	bsf	63,5,b	;volatile
 19175                           
 19176                           ; BSR set to: 15
 19177  0067C6  0012               	return		;funcret
 19178  0067C8                     __end_of_Rtcc_UnlockRtc:
 19179                           	opt stack 0
 19180                           tosu	equ	0xFFF
 19181                           tosh	equ	0xFFE
 19182                           tosl	equ	0xFFD
 19183                           pclath	equ	0xFFA
 19184                           tblptru	equ	0xFF8
 19185                           tblptrh	equ	0xFF7
 19186                           tblptrl	equ	0xFF6
 19187                           tablat	equ	0xFF5
 19188                           prodh	equ	0xFF4
 19189                           prodl	equ	0xFF3
 19190                           intcon	equ	0xFF2
 19191                           intcon2	equ	0xFF1
 19192                           intcon3	equ	0xFF0
 19193                           indf0	equ	0xFEF
 19194                           postinc0	equ	0xFEE
 19195                           plusw0	equ	0xFEB
 19196                           fsr0h	equ	0xFEA
 19197                           fsr0l	equ	0xFE9
 19198                           wreg	equ	0xFE8
 19199                           indf1	equ	0xFE7
 19200                           postinc1	equ	0xFE6
 19201                           postdec1	equ	0xFE5
 19202                           fsr1h	equ	0xFE2
 19203                           fsr1l	equ	0xFE1
 19204                           indf2	equ	0xFDF
 19205                           postinc2	equ	0xFDE
 19206                           postdec2	equ	0xFDD
 19207                           plusw2	equ	0xFDB
 19208                           fsr2h	equ	0xFDA
 19209                           fsr2l	equ	0xFD9
 19210                           status	equ	0xFD8
 19211                           
 19212 ;; *************** function _Rtcc_SetRtccValue *****************
 19213 ;; Defined at:
 19214 ;;		line 383 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 19215 ;; Parameters:    Size  Location     Type
 19216 ;;  RtccPtrVal      1    wreg     enum E7757
 19217 ;;  Value           1   37[BANK0 ] unsigned char 
 19218 ;; Auto vars:     Size  Location     Type
 19219 ;;  RtccPtrVal      1   40[BANK0 ] enum E7757
 19220 ;; Return value:  Size  Location     Type
 19221 ;;                  1    wreg      void 
 19222 ;; Registers used:
 19223 ;;		wreg, status,2, status,0, cstack
 19224 ;; Tracked objects:
 19225 ;;		On entry : 0/0
 19226 ;;		On exit  : 0/0
 19227 ;;		Unchanged: 0/0
 19228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19229 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19230 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19231 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19232 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19233 ;;Total ram usage:        4 bytes
 19234 ;; Hardware stack levels used:    1
 19235 ;; Hardware stack levels required when called:   12
 19236 ;; This function calls:
 19237 ;;		___awdiv
 19238 ;;		___awmod
 19239 ;; This function is called by:
 19240 ;;		_Rtcm_SetRtccDate
 19241 ;; This function uses a non-reentrant model
 19242 ;;
 19243                           
 19244                           	psect	text80
 19245  0018A6                     __ptext80:
 19246                           	opt stack 0
 19247  0018A6                     _Rtcc_SetRtccValue:
 19248                           	opt stack 14
 19249                           
 19250                           ; BSR set to: 15
 19251                           ;incstack = 0
 19252                           ;Rtcc_SetRtccValue@RtccPtrVal stored from wreg
 19253  0018A6  0100               	movlb	0	; () banked
 19254  0018A8  6F88               	movwf	Rtcc_SetRtccValue@RtccPtrVal& (0+255),b
 19255                           
 19256                           ;rtcc_drv.c: 385: switch (RtccPtrVal)
 19257  0018AA  D0FC               	goto	l441
 19258  0018AC                     l442:
 19259                           
 19260                           ; BSR set to: 0
 19261                           ;rtcc_drv.c: 389: RTCCFGbits.RTCPTR1 = 1U;
 19262  0018AC  010F               	movlb	15	; () banked
 19263  0018AE  833F               	bsf	63,1,b	;volatile
 19264                           
 19265                           ;rtcc_drv.c: 390: RTCCFGbits.RTCPTR0 = 1U;
 19266  0018B0  813F               	bsf	63,0,b	;volatile
 19267                           
 19268                           ; BSR set to: 15
 19269                           ;rtcc_drv.c: 392: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19270  0018B2  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19271  0018B6  0100               	movlb	0	; () banked
 19272  0018B8  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19273  0018BA  0E00               	movlw	0
 19274  0018BC  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19275  0018BE  0E0A               	movlw	10
 19276  0018C0  6F7F               	movwf	___awmod@divisor& (0+255),b
 19277  0018C2  EC81  F028         	call	___awmod	;wreg free
 19278  0018C6  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19279  0018CA  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19280  0018CE  0E0F               	movlw	15
 19281  0018D0  0100               	movlb	0	; () banked
 19282  0018D2  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19283  0018D4  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19284  0018D8  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19285  0018DA  0E00               	movlw	0
 19286  0018DC  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19287  0018DE  0E0A               	movlw	10
 19288  0018E0  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19289  0018E2  ECBB  F027         	call	___awdiv	;wreg free
 19290  0018E6  0100               	movlb	0	; () banked
 19291  0018E8  397D               	swapf	?___awdiv& (0+255),w,b
 19292  0018EA  0BF0               	andlw	240
 19293  0018EC  0BF0               	andlw	240
 19294  0018EE  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19295  0018F0  6E98               	movwf	3992,c	;volatile
 19296                           
 19297                           ;rtcc_drv.c: 393: break;
 19298  0018F2  0012               	return	
 19299  0018F4                     l444:
 19300                           
 19301                           ; BSR set to: 0
 19302                           ;rtcc_drv.c: 397: RTCCFGbits.RTCPTR1 = 1U;
 19303  0018F4  010F               	movlb	15	; () banked
 19304  0018F6  833F               	bsf	63,1,b	;volatile
 19305                           
 19306                           ;rtcc_drv.c: 398: RTCCFGbits.RTCPTR0 = 0U;
 19307  0018F8  913F               	bcf	63,0,b	;volatile
 19308                           
 19309                           ; BSR set to: 15
 19310                           ;rtcc_drv.c: 400: RTCVALH = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19311  0018FA  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19312  0018FE  0100               	movlb	0	; () banked
 19313  001900  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19314  001902  0E00               	movlw	0
 19315  001904  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19316  001906  0E0A               	movlw	10
 19317  001908  6F7F               	movwf	___awmod@divisor& (0+255),b
 19318  00190A  EC81  F028         	call	___awmod	;wreg free
 19319  00190E  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19320  001912  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19321  001916  0E0F               	movlw	15
 19322  001918  0100               	movlb	0	; () banked
 19323  00191A  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19324  00191C  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19325  001920  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19326  001922  0E00               	movlw	0
 19327  001924  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19328  001926  0E0A               	movlw	10
 19329  001928  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19330  00192A  ECBB  F027         	call	___awdiv	;wreg free
 19331  00192E  0100               	movlb	0	; () banked
 19332  001930  397D               	swapf	?___awdiv& (0+255),w,b
 19333  001932  0BF0               	andlw	240
 19334  001934  0BF0               	andlw	240
 19335  001936  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19336  001938  6E99               	movwf	3993,c	;volatile
 19337                           
 19338                           ;rtcc_drv.c: 401: break;
 19339  00193A  0012               	return	
 19340  00193C                     l445:
 19341                           
 19342                           ; BSR set to: 0
 19343                           ;rtcc_drv.c: 405: RTCCFGbits.RTCPTR1 = 1U;
 19344  00193C  010F               	movlb	15	; () banked
 19345  00193E  833F               	bsf	63,1,b	;volatile
 19346                           
 19347                           ;rtcc_drv.c: 406: RTCCFGbits.RTCPTR0 = 0U;
 19348  001940  913F               	bcf	63,0,b	;volatile
 19349                           
 19350                           ; BSR set to: 15
 19351                           ;rtcc_drv.c: 408: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19352  001942  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19353  001946  0100               	movlb	0	; () banked
 19354  001948  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19355  00194A  0E00               	movlw	0
 19356  00194C  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19357  00194E  0E0A               	movlw	10
 19358  001950  6F7F               	movwf	___awmod@divisor& (0+255),b
 19359  001952  EC81  F028         	call	___awmod	;wreg free
 19360  001956  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19361  00195A  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19362  00195E  0E0F               	movlw	15
 19363  001960  0100               	movlb	0	; () banked
 19364  001962  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19365  001964  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19366  001968  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19367  00196A  0E00               	movlw	0
 19368  00196C  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19369  00196E  0E0A               	movlw	10
 19370  001970  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19371  001972  ECBB  F027         	call	___awdiv	;wreg free
 19372  001976  0100               	movlb	0	; () banked
 19373  001978  397D               	swapf	?___awdiv& (0+255),w,b
 19374  00197A  0BF0               	andlw	240
 19375  00197C  0BF0               	andlw	240
 19376  00197E  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19377  001980  6E98               	movwf	3992,c	;volatile
 19378                           
 19379                           ;rtcc_drv.c: 409: break;
 19380  001982  0012               	return	
 19381  001984                     l446:
 19382                           
 19383                           ; BSR set to: 0
 19384                           ;rtcc_drv.c: 413: RTCCFGbits.RTCPTR1 = 0U;
 19385  001984  010F               	movlb	15	; () banked
 19386  001986  933F               	bcf	63,1,b	;volatile
 19387                           
 19388                           ;rtcc_drv.c: 414: RTCCFGbits.RTCPTR0 = 1U;
 19389  001988  813F               	bsf	63,0,b	;volatile
 19390                           
 19391                           ; BSR set to: 15
 19392                           ;rtcc_drv.c: 416: RTCVALH = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19393  00198A  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19394  00198E  0100               	movlb	0	; () banked
 19395  001990  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19396  001992  0E00               	movlw	0
 19397  001994  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19398  001996  0E0A               	movlw	10
 19399  001998  6F7F               	movwf	___awmod@divisor& (0+255),b
 19400  00199A  EC81  F028         	call	___awmod	;wreg free
 19401  00199E  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19402  0019A2  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19403  0019A6  0E0F               	movlw	15
 19404  0019A8  0100               	movlb	0	; () banked
 19405  0019AA  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19406  0019AC  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19407  0019B0  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19408  0019B2  0E00               	movlw	0
 19409  0019B4  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19410  0019B6  0E0A               	movlw	10
 19411  0019B8  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19412  0019BA  ECBB  F027         	call	___awdiv	;wreg free
 19413  0019BE  0100               	movlb	0	; () banked
 19414  0019C0  397D               	swapf	?___awdiv& (0+255),w,b
 19415  0019C2  0BF0               	andlw	240
 19416  0019C4  0BF0               	andlw	240
 19417  0019C6  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19418  0019C8  6E99               	movwf	3993,c	;volatile
 19419                           
 19420                           ;rtcc_drv.c: 417: break;
 19421  0019CA  0012               	return	
 19422  0019CC                     l447:
 19423                           
 19424                           ; BSR set to: 0
 19425                           ;rtcc_drv.c: 421: RTCCFGbits.RTCPTR1 = 0U;
 19426  0019CC  010F               	movlb	15	; () banked
 19427  0019CE  933F               	bcf	63,1,b	;volatile
 19428                           
 19429                           ;rtcc_drv.c: 422: RTCCFGbits.RTCPTR0 = 1U;
 19430  0019D0  813F               	bsf	63,0,b	;volatile
 19431                           
 19432                           ; BSR set to: 15
 19433                           ;rtcc_drv.c: 424: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19434  0019D2  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19435  0019D6  0100               	movlb	0	; () banked
 19436  0019D8  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19437  0019DA  0E00               	movlw	0
 19438  0019DC  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19439  0019DE  0E0A               	movlw	10
 19440  0019E0  6F7F               	movwf	___awmod@divisor& (0+255),b
 19441  0019E2  EC81  F028         	call	___awmod	;wreg free
 19442  0019E6  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19443  0019EA  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19444  0019EE  0E0F               	movlw	15
 19445  0019F0  0100               	movlb	0	; () banked
 19446  0019F2  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19447  0019F4  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19448  0019F8  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19449  0019FA  0E00               	movlw	0
 19450  0019FC  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19451  0019FE  0E0A               	movlw	10
 19452  001A00  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19453  001A02  ECBB  F027         	call	___awdiv	;wreg free
 19454  001A06  0100               	movlb	0	; () banked
 19455  001A08  397D               	swapf	?___awdiv& (0+255),w,b
 19456  001A0A  0BF0               	andlw	240
 19457  001A0C  0BF0               	andlw	240
 19458  001A0E  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19459  001A10  6E98               	movwf	3992,c	;volatile
 19460                           
 19461                           ;rtcc_drv.c: 425: break;
 19462  001A12  0012               	return	
 19463  001A14                     l448:
 19464                           
 19465                           ; BSR set to: 0
 19466                           ;rtcc_drv.c: 429: RTCCFGbits.RTCPTR1 = 0U;
 19467  001A14  010F               	movlb	15	; () banked
 19468  001A16  933F               	bcf	63,1,b	;volatile
 19469                           
 19470                           ;rtcc_drv.c: 430: RTCCFGbits.RTCPTR0 = 0U;
 19471  001A18  913F               	bcf	63,0,b	;volatile
 19472                           
 19473                           ; BSR set to: 15
 19474                           ;rtcc_drv.c: 432: RTCVALH = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19475  001A1A  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19476  001A1E  0100               	movlb	0	; () banked
 19477  001A20  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19478  001A22  0E00               	movlw	0
 19479  001A24  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19480  001A26  0E0A               	movlw	10
 19481  001A28  6F7F               	movwf	___awmod@divisor& (0+255),b
 19482  001A2A  EC81  F028         	call	___awmod	;wreg free
 19483  001A2E  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19484  001A32  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19485  001A36  0E0F               	movlw	15
 19486  001A38  0100               	movlb	0	; () banked
 19487  001A3A  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19488  001A3C  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19489  001A40  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19490  001A42  0E00               	movlw	0
 19491  001A44  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19492  001A46  0E0A               	movlw	10
 19493  001A48  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19494  001A4A  ECBB  F027         	call	___awdiv	;wreg free
 19495  001A4E  0100               	movlb	0	; () banked
 19496  001A50  397D               	swapf	?___awdiv& (0+255),w,b
 19497  001A52  0BF0               	andlw	240
 19498  001A54  0BF0               	andlw	240
 19499  001A56  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19500  001A58  6E99               	movwf	3993,c	;volatile
 19501                           
 19502                           ;rtcc_drv.c: 433: break;
 19503  001A5A  0012               	return	
 19504  001A5C                     l449:
 19505                           
 19506                           ; BSR set to: 0
 19507                           ;rtcc_drv.c: 437: RTCCFGbits.RTCPTR1 = 0U;
 19508  001A5C  010F               	movlb	15	; () banked
 19509  001A5E  933F               	bcf	63,1,b	;volatile
 19510                           
 19511                           ;rtcc_drv.c: 438: RTCCFGbits.RTCPTR0 = 0U;
 19512  001A60  913F               	bcf	63,0,b	;volatile
 19513                           
 19514                           ; BSR set to: 15
 19515                           ;rtcc_drv.c: 440: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19516  001A62  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19517  001A66  0100               	movlb	0	; () banked
 19518  001A68  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19519  001A6A  0E00               	movlw	0
 19520  001A6C  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19521  001A6E  0E0A               	movlw	10
 19522  001A70  6F7F               	movwf	___awmod@divisor& (0+255),b
 19523  001A72  EC81  F028         	call	___awmod	;wreg free
 19524  001A76  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19525  001A7A  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19526  001A7E  0E0F               	movlw	15
 19527  001A80  0100               	movlb	0	; () banked
 19528  001A82  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19529  001A84  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19530  001A88  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19531  001A8A  0E00               	movlw	0
 19532  001A8C  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19533  001A8E  0E0A               	movlw	10
 19534  001A90  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19535  001A92  ECBB  F027         	call	___awdiv	;wreg free
 19536  001A96  0100               	movlb	0	; () banked
 19537  001A98  397D               	swapf	?___awdiv& (0+255),w,b
 19538  001A9A  0BF0               	andlw	240
 19539  001A9C  0BF0               	andlw	240
 19540  001A9E  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19541  001AA0  6E98               	movwf	3992,c	;volatile
 19542                           
 19543                           ; BSR set to: 0
 19544                           ;rtcc_drv.c: 445: }
 19545                           
 19546                           ; BSR set to: 0
 19547                           ;rtcc_drv.c: 444: break;
 19548                           
 19549                           ;rtcc_drv.c: 443: default:
 19550                           
 19551                           ;rtcc_drv.c: 441: break;
 19552  001AA2  0012               	return	
 19553  001AA4                     l441:
 19554                           
 19555                           ; BSR set to: 0
 19556  001AA4  0100               	movlb	0	; () banked
 19557  001AA6  5188               	movf	Rtcc_SetRtccValue@RtccPtrVal& (0+255),w,b
 19558                           
 19559                           ; Switch size 1, requested type "space"
 19560                           ; Number of cases is 7, Range of values is 0 to 6
 19561                           ; switch strategies available:
 19562                           ; Name         Instructions Cycles
 19563                           ; simple_byte           22    12 (average)
 19564                           ;	Chosen strategy is simple_byte
 19565  001AA8  0A00               	xorlw	0	; case 0
 19566  001AAA  B4D8               	btfsc	status,2,c
 19567  001AAC  D6FF               	goto	l442
 19568  001AAE  0A01               	xorlw	1	; case 1
 19569  001AB0  B4D8               	btfsc	status,2,c
 19570  001AB2  D720               	goto	l444
 19571  001AB4  0A03               	xorlw	3	; case 2
 19572  001AB6  B4D8               	btfsc	status,2,c
 19573  001AB8  D741               	goto	l445
 19574  001ABA  0A01               	xorlw	1	; case 3
 19575  001ABC  B4D8               	btfsc	status,2,c
 19576  001ABE  D762               	goto	l446
 19577  001AC0  0A07               	xorlw	7	; case 4
 19578  001AC2  B4D8               	btfsc	status,2,c
 19579  001AC4  D783               	goto	l447
 19580  001AC6  0A01               	xorlw	1	; case 5
 19581  001AC8  B4D8               	btfsc	status,2,c
 19582  001ACA  D7A4               	goto	l448
 19583  001ACC  0A03               	xorlw	3	; case 6
 19584  001ACE  A4D8               	btfss	status,2,c
 19585  001AD0  0012               	return	
 19586  001AD2  D7C4               	goto	l449
 19587  001AD4                     __end_of_Rtcc_SetRtccValue:
 19588                           	opt stack 0
 19589                           tosu	equ	0xFFF
 19590                           tosh	equ	0xFFE
 19591                           tosl	equ	0xFFD
 19592                           pclath	equ	0xFFA
 19593                           tblptru	equ	0xFF8
 19594                           tblptrh	equ	0xFF7
 19595                           tblptrl	equ	0xFF6
 19596                           tablat	equ	0xFF5
 19597                           prodh	equ	0xFF4
 19598                           prodl	equ	0xFF3
 19599                           intcon	equ	0xFF2
 19600                           intcon2	equ	0xFF1
 19601                           intcon3	equ	0xFF0
 19602                           indf0	equ	0xFEF
 19603                           postinc0	equ	0xFEE
 19604                           plusw0	equ	0xFEB
 19605                           fsr0h	equ	0xFEA
 19606                           fsr0l	equ	0xFE9
 19607                           wreg	equ	0xFE8
 19608                           indf1	equ	0xFE7
 19609                           postinc1	equ	0xFE6
 19610                           postdec1	equ	0xFE5
 19611                           fsr1h	equ	0xFE2
 19612                           fsr1l	equ	0xFE1
 19613                           indf2	equ	0xFDF
 19614                           postinc2	equ	0xFDE
 19615                           postdec2	equ	0xFDD
 19616                           plusw2	equ	0xFDB
 19617                           fsr2h	equ	0xFDA
 19618                           fsr2l	equ	0xFD9
 19619                           status	equ	0xFD8
 19620                           
 19621 ;; *************** function ___awmod *****************
 19622 ;; Defined at:
 19623 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/awmod.c"
 19624 ;; Parameters:    Size  Location     Type
 19625 ;;  dividend        2   29[BANK0 ] int 
 19626 ;;  divisor         2   31[BANK0 ] int 
 19627 ;; Auto vars:     Size  Location     Type
 19628 ;;  sign            1   34[BANK0 ] unsigned char 
 19629 ;;  counter         1   33[BANK0 ] unsigned char 
 19630 ;; Return value:  Size  Location     Type
 19631 ;;                  2   29[BANK0 ] int 
 19632 ;; Registers used:
 19633 ;;		wreg, status,2, status,0
 19634 ;; Tracked objects:
 19635 ;;		On entry : 0/0
 19636 ;;		On exit  : 0/0
 19637 ;;		Unchanged: 0/0
 19638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19639 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19640 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19641 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19642 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19643 ;;Total ram usage:        6 bytes
 19644 ;; Hardware stack levels used:    1
 19645 ;; Hardware stack levels required when called:   11
 19646 ;; This function calls:
 19647 ;;		Nothing
 19648 ;; This function is called by:
 19649 ;;		_Rtcc_SetRtccValue
 19650 ;;		_Rtcc_SetRtccAlarm
 19651 ;; This function uses a non-reentrant model
 19652 ;;
 19653                           
 19654                           	psect	text81
 19655  005102                     __ptext81:
 19656                           	opt stack 0
 19657  005102                     ___awmod:
 19658                           	opt stack 14
 19659                           
 19660                           ; BSR set to: 0
 19661                           ;incstack = 0
 19662  005102  0E00               	movlw	0
 19663  005104  0100               	movlb	0	; () banked
 19664  005106  6F82               	movwf	___awmod@sign& (0+255),b
 19665                           
 19666                           ; BSR set to: 0
 19667  005108  AF7E               	btfss	(___awmod@dividend+1)& (0+255),7,b
 19668  00510A  D006               	goto	l3025
 19669                           
 19670                           ; BSR set to: 0
 19671  00510C  6D7D               	negf	___awmod@dividend& (0+255),b
 19672  00510E  1F7E               	comf	(___awmod@dividend+1)& (0+255),f,b
 19673  005110  B0D8               	btfsc	status,0,c
 19674  005112  2B7E               	incf	(___awmod@dividend+1)& (0+255),f,b
 19675                           
 19676                           ; BSR set to: 0
 19677  005114  0E01               	movlw	1
 19678  005116  6F82               	movwf	___awmod@sign& (0+255),b
 19679  005118                     l3025:
 19680                           
 19681                           ; BSR set to: 0
 19682                           
 19683                           ; BSR set to: 0
 19684  005118  AF80               	btfss	(___awmod@divisor+1)& (0+255),7,b
 19685  00511A  D004               	goto	l3026
 19686                           
 19687                           ; BSR set to: 0
 19688  00511C  6D7F               	negf	___awmod@divisor& (0+255),b
 19689  00511E  1F80               	comf	(___awmod@divisor+1)& (0+255),f,b
 19690  005120  B0D8               	btfsc	status,0,c
 19691  005122  2B80               	incf	(___awmod@divisor+1)& (0+255),f,b
 19692  005124                     l3026:
 19693                           
 19694                           ; BSR set to: 0
 19695                           
 19696                           ; BSR set to: 0
 19697  005124  517F               	movf	___awmod@divisor& (0+255),w,b
 19698  005126  1180               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 19699  005128  B4D8               	btfsc	status,2,c
 19700  00512A  D018               	goto	l3033
 19701                           
 19702                           ; BSR set to: 0
 19703  00512C  0E01               	movlw	1
 19704  00512E  6F81               	movwf	___awmod@counter& (0+255),b
 19705  005130  D004               	goto	l3028
 19706  005132                     
 19707                           ; BSR set to: 0
 19708                           
 19709                           ; BSR set to: 0
 19710  005132  90D8               	bcf	status,0,c
 19711  005134  377F               	rlcf	___awmod@divisor& (0+255),f,b
 19712  005136  3780               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 19713  005138  2B81               	incf	___awmod@counter& (0+255),f,b
 19714  00513A                     l3028:
 19715                           
 19716                           ; BSR set to: 0
 19717                           
 19718                           ; BSR set to: 0
 19719  00513A  AF80               	btfss	(___awmod@divisor+1)& (0+255),7,b
 19720  00513C  D7FA               	goto	l3029
 19721  00513E                     u13070:
 19722                           
 19723                           ; BSR set to: 0
 19724                           
 19725                           ; BSR set to: 0
 19726                           
 19727                           ; BSR set to: 0
 19728  00513E  517F               	movf	___awmod@divisor& (0+255),w,b
 19729  005140  5D7D               	subwf	___awmod@dividend& (0+255),w,b
 19730  005142  5180               	movf	(___awmod@divisor+1)& (0+255),w,b
 19731  005144  597E               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 19732  005146  A0D8               	btfss	status,0,c
 19733  005148  D004               	goto	l3032
 19734                           
 19735                           ; BSR set to: 0
 19736  00514A  517F               	movf	___awmod@divisor& (0+255),w,b
 19737  00514C  5F7D               	subwf	___awmod@dividend& (0+255),f,b
 19738  00514E  5180               	movf	(___awmod@divisor+1)& (0+255),w,b
 19739  005150  5B7E               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 19740  005152                     l3032:
 19741                           
 19742                           ; BSR set to: 0
 19743                           
 19744                           ; BSR set to: 0
 19745  005152  90D8               	bcf	status,0,c
 19746  005154  3380               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 19747  005156  337F               	rrcf	___awmod@divisor& (0+255),f,b
 19748                           
 19749                           ; BSR set to: 0
 19750  005158  2F81               	decfsz	___awmod@counter& (0+255),f,b
 19751  00515A  D7F1               	goto	u13070
 19752  00515C                     l3033:
 19753                           
 19754                           ; BSR set to: 0
 19755                           
 19756                           ; BSR set to: 0
 19757                           
 19758                           ; BSR set to: 0
 19759  00515C  5182               	movf	___awmod@sign& (0+255),w,b
 19760  00515E  B4D8               	btfsc	status,2,c
 19761  005160  D004               	goto	l3034
 19762                           
 19763                           ; BSR set to: 0
 19764  005162  6D7D               	negf	___awmod@dividend& (0+255),b
 19765  005164  1F7E               	comf	(___awmod@dividend+1)& (0+255),f,b
 19766  005166  B0D8               	btfsc	status,0,c
 19767  005168  2B7E               	incf	(___awmod@dividend+1)& (0+255),f,b
 19768  00516A                     l3034:
 19769                           
 19770                           ; BSR set to: 0
 19771                           
 19772                           ; BSR set to: 0
 19773  00516A  C07D  F07D         	movff	___awmod@dividend,?___awmod
 19774  00516E  C07E  F07E         	movff	___awmod@dividend+1,?___awmod+1
 19775  005172  0012               	return	
 19776  005174                     __end_of___awmod:
 19777                           	opt stack 0
 19778                           tosu	equ	0xFFF
 19779                           tosh	equ	0xFFE
 19780                           tosl	equ	0xFFD
 19781                           pclath	equ	0xFFA
 19782                           tblptru	equ	0xFF8
 19783                           tblptrh	equ	0xFF7
 19784                           tblptrl	equ	0xFF6
 19785                           tablat	equ	0xFF5
 19786                           prodh	equ	0xFF4
 19787                           prodl	equ	0xFF3
 19788                           intcon	equ	0xFF2
 19789                           intcon2	equ	0xFF1
 19790                           intcon3	equ	0xFF0
 19791                           indf0	equ	0xFEF
 19792                           postinc0	equ	0xFEE
 19793                           plusw0	equ	0xFEB
 19794                           fsr0h	equ	0xFEA
 19795                           fsr0l	equ	0xFE9
 19796                           wreg	equ	0xFE8
 19797                           indf1	equ	0xFE7
 19798                           postinc1	equ	0xFE6
 19799                           postdec1	equ	0xFE5
 19800                           fsr1h	equ	0xFE2
 19801                           fsr1l	equ	0xFE1
 19802                           indf2	equ	0xFDF
 19803                           postinc2	equ	0xFDE
 19804                           postdec2	equ	0xFDD
 19805                           plusw2	equ	0xFDB
 19806                           fsr2h	equ	0xFDA
 19807                           fsr2l	equ	0xFD9
 19808                           status	equ	0xFD8
 19809                           
 19810 ;; *************** function ___awdiv *****************
 19811 ;; Defined at:
 19812 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/awdiv.c"
 19813 ;; Parameters:    Size  Location     Type
 19814 ;;  dividend        2   29[BANK0 ] int 
 19815 ;;  divisor         2   31[BANK0 ] int 
 19816 ;; Auto vars:     Size  Location     Type
 19817 ;;  quotient        2   35[BANK0 ] int 
 19818 ;;  sign            1   34[BANK0 ] unsigned char 
 19819 ;;  counter         1   33[BANK0 ] unsigned char 
 19820 ;; Return value:  Size  Location     Type
 19821 ;;                  2   29[BANK0 ] int 
 19822 ;; Registers used:
 19823 ;;		wreg, status,2, status,0
 19824 ;; Tracked objects:
 19825 ;;		On entry : 0/0
 19826 ;;		On exit  : 0/0
 19827 ;;		Unchanged: 0/0
 19828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19829 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19830 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19831 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19832 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19833 ;;Total ram usage:        8 bytes
 19834 ;; Hardware stack levels used:    1
 19835 ;; Hardware stack levels required when called:   11
 19836 ;; This function calls:
 19837 ;;		Nothing
 19838 ;; This function is called by:
 19839 ;;		_Rtcc_SetRtccValue
 19840 ;;		_Rtcc_SetRtccAlarm
 19841 ;; This function uses a non-reentrant model
 19842 ;;
 19843                           
 19844                           	psect	text82
 19845  004F76                     __ptext82:
 19846                           	opt stack 0
 19847  004F76                     ___awdiv:
 19848                           	opt stack 14
 19849                           
 19850                           ; BSR set to: 0
 19851                           ;incstack = 0
 19852  004F76  0E00               	movlw	0
 19853  004F78  0100               	movlb	0	; () banked
 19854  004F7A  6F82               	movwf	___awdiv@sign& (0+255),b
 19855                           
 19856                           ; BSR set to: 0
 19857  004F7C  AF80               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 19858  004F7E  D006               	goto	l3012
 19859                           
 19860                           ; BSR set to: 0
 19861  004F80  6D7F               	negf	___awdiv@divisor& (0+255),b
 19862  004F82  1F80               	comf	(___awdiv@divisor+1)& (0+255),f,b
 19863  004F84  B0D8               	btfsc	status,0,c
 19864  004F86  2B80               	incf	(___awdiv@divisor+1)& (0+255),f,b
 19865                           
 19866                           ; BSR set to: 0
 19867  004F88  0E01               	movlw	1
 19868  004F8A  6F82               	movwf	___awdiv@sign& (0+255),b
 19869  004F8C                     l3012:
 19870                           
 19871                           ; BSR set to: 0
 19872                           
 19873                           ; BSR set to: 0
 19874  004F8C  AF7E               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 19875  004F8E  D006               	goto	l3013
 19876                           
 19877                           ; BSR set to: 0
 19878  004F90  6D7D               	negf	___awdiv@dividend& (0+255),b
 19879  004F92  1F7E               	comf	(___awdiv@dividend+1)& (0+255),f,b
 19880  004F94  B0D8               	btfsc	status,0,c
 19881  004F96  2B7E               	incf	(___awdiv@dividend+1)& (0+255),f,b
 19882                           
 19883                           ; BSR set to: 0
 19884  004F98  0E01               	movlw	1
 19885  004F9A  1B82               	xorwf	___awdiv@sign& (0+255),f,b
 19886  004F9C                     l3013:
 19887                           
 19888                           ; BSR set to: 0
 19889                           
 19890                           ; BSR set to: 0
 19891  004F9C  0E00               	movlw	0
 19892  004F9E  6F84               	movwf	(___awdiv@quotient+1)& (0+255),b
 19893  004FA0  0E00               	movlw	0
 19894  004FA2  6F83               	movwf	___awdiv@quotient& (0+255),b
 19895                           
 19896                           ; BSR set to: 0
 19897  004FA4  517F               	movf	___awdiv@divisor& (0+255),w,b
 19898  004FA6  1180               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 19899  004FA8  B4D8               	btfsc	status,2,c
 19900  004FAA  D01C               	goto	l3020
 19901                           
 19902                           ; BSR set to: 0
 19903  004FAC  0E01               	movlw	1
 19904  004FAE  6F81               	movwf	___awdiv@counter& (0+255),b
 19905  004FB0  D004               	goto	l3015
 19906  004FB2                     
 19907                           ; BSR set to: 0
 19908                           
 19909                           ; BSR set to: 0
 19910  004FB2  90D8               	bcf	status,0,c
 19911  004FB4  377F               	rlcf	___awdiv@divisor& (0+255),f,b
 19912  004FB6  3780               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 19913  004FB8  2B81               	incf	___awdiv@counter& (0+255),f,b
 19914  004FBA                     l3015:
 19915                           
 19916                           ; BSR set to: 0
 19917                           
 19918                           ; BSR set to: 0
 19919  004FBA  AF80               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 19920  004FBC  D7FA               	goto	l3016
 19921  004FBE                     u13010:
 19922                           
 19923                           ; BSR set to: 0
 19924                           
 19925                           ; BSR set to: 0
 19926                           
 19927                           ; BSR set to: 0
 19928  004FBE  90D8               	bcf	status,0,c
 19929  004FC0  3783               	rlcf	___awdiv@quotient& (0+255),f,b
 19930  004FC2  3784               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 19931                           
 19932                           ; BSR set to: 0
 19933  004FC4  517F               	movf	___awdiv@divisor& (0+255),w,b
 19934  004FC6  5D7D               	subwf	___awdiv@dividend& (0+255),w,b
 19935  004FC8  5180               	movf	(___awdiv@divisor+1)& (0+255),w,b
 19936  004FCA  597E               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 19937  004FCC  A0D8               	btfss	status,0,c
 19938  004FCE  D005               	goto	l3019
 19939                           
 19940                           ; BSR set to: 0
 19941  004FD0  517F               	movf	___awdiv@divisor& (0+255),w,b
 19942  004FD2  5F7D               	subwf	___awdiv@dividend& (0+255),f,b
 19943  004FD4  5180               	movf	(___awdiv@divisor+1)& (0+255),w,b
 19944  004FD6  5B7E               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 19945                           
 19946                           ; BSR set to: 0
 19947  004FD8  8183               	bsf	___awdiv@quotient& (0+255),0,b
 19948  004FDA                     l3019:
 19949                           
 19950                           ; BSR set to: 0
 19951                           
 19952                           ; BSR set to: 0
 19953  004FDA  90D8               	bcf	status,0,c
 19954  004FDC  3380               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 19955  004FDE  337F               	rrcf	___awdiv@divisor& (0+255),f,b
 19956                           
 19957                           ; BSR set to: 0
 19958  004FE0  2F81               	decfsz	___awdiv@counter& (0+255),f,b
 19959  004FE2  D7ED               	goto	u13010
 19960  004FE4                     l3020:
 19961                           
 19962                           ; BSR set to: 0
 19963                           
 19964                           ; BSR set to: 0
 19965                           
 19966                           ; BSR set to: 0
 19967  004FE4  5182               	movf	___awdiv@sign& (0+255),w,b
 19968  004FE6  B4D8               	btfsc	status,2,c
 19969  004FE8  D004               	goto	l3021
 19970                           
 19971                           ; BSR set to: 0
 19972  004FEA  6D83               	negf	___awdiv@quotient& (0+255),b
 19973  004FEC  1F84               	comf	(___awdiv@quotient+1)& (0+255),f,b
 19974  004FEE  B0D8               	btfsc	status,0,c
 19975  004FF0  2B84               	incf	(___awdiv@quotient+1)& (0+255),f,b
 19976  004FF2                     l3021:
 19977                           
 19978                           ; BSR set to: 0
 19979                           
 19980                           ; BSR set to: 0
 19981  004FF2  C083  F07D         	movff	___awdiv@quotient,?___awdiv
 19982  004FF6  C084  F07E         	movff	___awdiv@quotient+1,?___awdiv+1
 19983  004FFA  0012               	return	
 19984  004FFC                     __end_of___awdiv:
 19985                           	opt stack 0
 19986                           tosu	equ	0xFFF
 19987                           tosh	equ	0xFFE
 19988                           tosl	equ	0xFFD
 19989                           pclath	equ	0xFFA
 19990                           tblptru	equ	0xFF8
 19991                           tblptrh	equ	0xFF7
 19992                           tblptrl	equ	0xFF6
 19993                           tablat	equ	0xFF5
 19994                           prodh	equ	0xFF4
 19995                           prodl	equ	0xFF3
 19996                           intcon	equ	0xFF2
 19997                           intcon2	equ	0xFF1
 19998                           intcon3	equ	0xFF0
 19999                           indf0	equ	0xFEF
 20000                           postinc0	equ	0xFEE
 20001                           plusw0	equ	0xFEB
 20002                           fsr0h	equ	0xFEA
 20003                           fsr0l	equ	0xFE9
 20004                           wreg	equ	0xFE8
 20005                           indf1	equ	0xFE7
 20006                           postinc1	equ	0xFE6
 20007                           postdec1	equ	0xFE5
 20008                           fsr1h	equ	0xFE2
 20009                           fsr1l	equ	0xFE1
 20010                           indf2	equ	0xFDF
 20011                           postinc2	equ	0xFDE
 20012                           postdec2	equ	0xFDD
 20013                           plusw2	equ	0xFDB
 20014                           fsr2h	equ	0xFDA
 20015                           fsr2l	equ	0xFD9
 20016                           status	equ	0xFD8
 20017                           
 20018 ;; *************** function _Rtcc_LockRtc *****************
 20019 ;; Defined at:
 20020 ;;		line 183 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 20021 ;; Parameters:    Size  Location     Type
 20022 ;;		None
 20023 ;; Auto vars:     Size  Location     Type
 20024 ;;		None
 20025 ;; Return value:  Size  Location     Type
 20026 ;;                  1    wreg      void 
 20027 ;; Registers used:
 20028 ;;		None
 20029 ;; Tracked objects:
 20030 ;;		On entry : 0/0
 20031 ;;		On exit  : 0/0
 20032 ;;		Unchanged: 0/0
 20033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20034 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20035 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20037 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20038 ;;Total ram usage:        0 bytes
 20039 ;; Hardware stack levels used:    1
 20040 ;; Hardware stack levels required when called:   11
 20041 ;; This function calls:
 20042 ;;		Nothing
 20043 ;; This function is called by:
 20044 ;;		_Rtcm_MainTask
 20045 ;;		_Rtcm_SetRtccDate
 20046 ;;		_Rtcm_SetRtccAlarm
 20047 ;; This function uses a non-reentrant model
 20048 ;;
 20049                           
 20050                           	psect	text83
 20051  0067C8                     __ptext83:
 20052                           	opt stack 0
 20053  0067C8                     _Rtcc_LockRtc:
 20054                           	opt stack 15
 20055                           
 20056                           ; BSR set to: 0
 20057                           ;incstack = 0
 20058  0067C8  010F               	movlb	15	;# 
 20059  0067CA  0E55               	movlw	85	;# 
 20060  0067CC  6EA7               	movwf	4007,c	;# 
 20061  0067CE  0EAA               	movlw	170	;# 
 20062  0067D0  6EA7               	movwf	4007,c	;# 
 20063                           
 20064                           ;rtcc_drv.c: 192: RTCCFGbits.RTCWREN = 0u;
 20065  0067D2  010F               	movlb	15	; () banked
 20066  0067D4  9B3F               	bcf	63,5,b	;volatile
 20067                           
 20068                           ; BSR set to: 15
 20069  0067D6  0012               	return		;funcret
 20070  0067D8                     __end_of_Rtcc_LockRtc:
 20071                           	opt stack 0
 20072                           tosu	equ	0xFFF
 20073                           tosh	equ	0xFFE
 20074                           tosl	equ	0xFFD
 20075                           pclath	equ	0xFFA
 20076                           tblptru	equ	0xFF8
 20077                           tblptrh	equ	0xFF7
 20078                           tblptrl	equ	0xFF6
 20079                           tablat	equ	0xFF5
 20080                           prodh	equ	0xFF4
 20081                           prodl	equ	0xFF3
 20082                           intcon	equ	0xFF2
 20083                           intcon2	equ	0xFF1
 20084                           intcon3	equ	0xFF0
 20085                           indf0	equ	0xFEF
 20086                           postinc0	equ	0xFEE
 20087                           plusw0	equ	0xFEB
 20088                           fsr0h	equ	0xFEA
 20089                           fsr0l	equ	0xFE9
 20090                           wreg	equ	0xFE8
 20091                           indf1	equ	0xFE7
 20092                           postinc1	equ	0xFE6
 20093                           postdec1	equ	0xFE5
 20094                           fsr1h	equ	0xFE2
 20095                           fsr1l	equ	0xFE1
 20096                           indf2	equ	0xFDF
 20097                           postinc2	equ	0xFDE
 20098                           postdec2	equ	0xFDD
 20099                           plusw2	equ	0xFDB
 20100                           fsr2h	equ	0xFDA
 20101                           fsr2l	equ	0xFD9
 20102                           status	equ	0xFD8
 20103                           
 20104 ;; *************** function _Rtcm_GetRtccDate *****************
 20105 ;; Defined at:
 20106 ;;		line 202 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/rtcm.c"
 20107 ;; Parameters:    Size  Location     Type
 20108 ;;		None
 20109 ;; Auto vars:     Size  Location     Type
 20110 ;;  LocalDate       8   42[BANK0 ] struct _RtccDateType
 20111 ;; Return value:  Size  Location     Type
 20112 ;;                  8   33[BANK0 ] struct _RtccDateType
 20113 ;; Registers used:
 20114 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20115 ;; Tracked objects:
 20116 ;;		On entry : 0/0
 20117 ;;		On exit  : 0/0
 20118 ;;		Unchanged: 0/0
 20119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20120 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20121 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20122 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20123 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20124 ;;Total ram usage:       17 bytes
 20125 ;; Hardware stack levels used:    1
 20126 ;; Hardware stack levels required when called:   12
 20127 ;; This function calls:
 20128 ;;		_Rtcc_GetRtccValue
 20129 ;; This function is called by:
 20130 ;;		_Rtcm_MainTask
 20131 ;; This function uses a non-reentrant model
 20132 ;;
 20133                           
 20134                           	psect	text84
 20135  005464                     __ptext84:
 20136                           	opt stack 0
 20137  005464                     _Rtcm_GetRtccDate:
 20138                           	opt stack 15
 20139                           
 20140                           ;rtcm.c: 204: RtccDateType LocalDate;
 20141                           ;rtcm.c: 207: LocalDate.Year = 2000 + Rtcc_GetRtccValue(ValPtrYear);
 20142                           
 20143                           ; BSR set to: 15
 20144                           ;incstack = 0
 20145  005464  0E00               	movlw	0
 20146  005466  ECCA  F025         	call	_Rtcc_GetRtccValue
 20147  00546A  0100               	movlb	0	; () banked
 20148  00546C  6F89               	movwf	??_Rtcm_GetRtccDate& (0+255),b
 20149  00546E  0ED0               	movlw	208
 20150  005470  2589               	addwf	??_Rtcm_GetRtccDate& (0+255),w,b
 20151  005472  6F8A               	movwf	Rtcm_GetRtccDate@LocalDate& (0+255),b
 20152  005474  6B8B               	clrf	(Rtcm_GetRtccDate@LocalDate+1)& (0+255),b
 20153  005476  0E07               	movlw	7
 20154  005478  238B               	addwfc	(Rtcm_GetRtccDate@LocalDate+1)& (0+255),f,b
 20155                           
 20156                           ;rtcm.c: 208: LocalDate.Month = Rtcc_GetRtccValue(ValPtrMonth);
 20157  00547A  0E01               	movlw	1
 20158  00547C  ECCA  F025         	call	_Rtcc_GetRtccValue
 20159  005480  0100               	movlb	0	; () banked
 20160  005482  6F8C               	movwf	(Rtcm_GetRtccDate@LocalDate+2)& (0+255),b
 20161                           
 20162                           ;rtcm.c: 209: LocalDate.Day = Rtcc_GetRtccValue(ValPtrDay);
 20163  005484  0E02               	movlw	2
 20164  005486  ECCA  F025         	call	_Rtcc_GetRtccValue
 20165  00548A  0100               	movlb	0	; () banked
 20166  00548C  6F8D               	movwf	(Rtcm_GetRtccDate@LocalDate+3)& (0+255),b
 20167                           
 20168                           ;rtcm.c: 210: LocalDate.Weekday = Rtcc_GetRtccValue(ValPtrWeekday);
 20169  00548E  0E03               	movlw	3
 20170  005490  ECCA  F025         	call	_Rtcc_GetRtccValue
 20171  005494  0100               	movlb	0	; () banked
 20172  005496  6F8E               	movwf	(Rtcm_GetRtccDate@LocalDate+4)& (0+255),b
 20173                           
 20174                           ;rtcm.c: 211: LocalDate.Hour = Rtcc_GetRtccValue(ValPtrHours);
 20175  005498  0E04               	movlw	4
 20176  00549A  ECCA  F025         	call	_Rtcc_GetRtccValue
 20177  00549E  0100               	movlb	0	; () banked
 20178  0054A0  6F8F               	movwf	(Rtcm_GetRtccDate@LocalDate+5)& (0+255),b
 20179                           
 20180                           ;rtcm.c: 212: LocalDate.Minute = Rtcc_GetRtccValue(ValPtrMinutes);
 20181  0054A2  0E05               	movlw	5
 20182  0054A4  ECCA  F025         	call	_Rtcc_GetRtccValue
 20183  0054A8  0100               	movlb	0	; () banked
 20184  0054AA  6F90               	movwf	(Rtcm_GetRtccDate@LocalDate+6)& (0+255),b
 20185                           
 20186                           ;rtcm.c: 213: LocalDate.Second = Rtcc_GetRtccValue(ValPtrSeconds);
 20187  0054AC  0E06               	movlw	6
 20188  0054AE  ECCA  F025         	call	_Rtcc_GetRtccValue
 20189  0054B2  0100               	movlb	0	; () banked
 20190  0054B4  6F91               	movwf	(Rtcm_GetRtccDate@LocalDate+7)& (0+255),b
 20191                           
 20192                           ; BSR set to: 0
 20193                           ;rtcm.c: 216: return LocalDate;
 20194  0054B6  EE20  F08A         	lfsr	2,Rtcm_GetRtccDate@LocalDate
 20195  0054BA  EE00  F081         	lfsr	0,?_Rtcm_GetRtccDate
 20196  0054BE  0E07               	movlw	7
 20197  0054C0                     u15351:
 20198  0054C0  CFDB FFEB          	movff	plusw2,plusw0
 20199  0054C4  06E8               	decf	wreg,f,c
 20200  0054C6  E2FC               	bc	u15351
 20201  0054C8  0012               	return	
 20202  0054CA                     __end_of_Rtcm_GetRtccDate:
 20203                           	opt stack 0
 20204                           tosu	equ	0xFFF
 20205                           tosh	equ	0xFFE
 20206                           tosl	equ	0xFFD
 20207                           pclath	equ	0xFFA
 20208                           tblptru	equ	0xFF8
 20209                           tblptrh	equ	0xFF7
 20210                           tblptrl	equ	0xFF6
 20211                           tablat	equ	0xFF5
 20212                           prodh	equ	0xFF4
 20213                           prodl	equ	0xFF3
 20214                           intcon	equ	0xFF2
 20215                           intcon2	equ	0xFF1
 20216                           intcon3	equ	0xFF0
 20217                           indf0	equ	0xFEF
 20218                           postinc0	equ	0xFEE
 20219                           plusw0	equ	0xFEB
 20220                           fsr0h	equ	0xFEA
 20221                           fsr0l	equ	0xFE9
 20222                           wreg	equ	0xFE8
 20223                           indf1	equ	0xFE7
 20224                           postinc1	equ	0xFE6
 20225                           postdec1	equ	0xFE5
 20226                           fsr1h	equ	0xFE2
 20227                           fsr1l	equ	0xFE1
 20228                           indf2	equ	0xFDF
 20229                           postinc2	equ	0xFDE
 20230                           postdec2	equ	0xFDD
 20231                           plusw2	equ	0xFDB
 20232                           fsr2h	equ	0xFDA
 20233                           fsr2l	equ	0xFD9
 20234                           status	equ	0xFD8
 20235                           
 20236 ;; *************** function _Rtcc_GetRtccValue *****************
 20237 ;; Defined at:
 20238 ;;		line 205 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 20239 ;; Parameters:    Size  Location     Type
 20240 ;;  RtccPtrVal      1    wreg     enum E7757
 20241 ;; Auto vars:     Size  Location     Type
 20242 ;;  RtccPtrVal      1   30[BANK0 ] enum E7757
 20243 ;;  RegValue        1   32[BANK0 ] unsigned char 
 20244 ;;  RetValue        1   31[BANK0 ] unsigned char 
 20245 ;; Return value:  Size  Location     Type
 20246 ;;                  1    wreg      unsigned char 
 20247 ;; Registers used:
 20248 ;;		wreg, status,2, status,0, prodl, prodh
 20249 ;; Tracked objects:
 20250 ;;		On entry : 0/0
 20251 ;;		On exit  : 0/0
 20252 ;;		Unchanged: 0/0
 20253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20254 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20255 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20256 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20257 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20258 ;;Total ram usage:        4 bytes
 20259 ;; Hardware stack levels used:    1
 20260 ;; Hardware stack levels required when called:   11
 20261 ;; This function calls:
 20262 ;;		Nothing
 20263 ;; This function is called by:
 20264 ;;		_Rtcm_GetRtccDate
 20265 ;; This function uses a non-reentrant model
 20266 ;;
 20267                           
 20268                           	psect	text85
 20269  004B94                     __ptext85:
 20270                           	opt stack 0
 20271  004B94                     _Rtcc_GetRtccValue:
 20272                           	opt stack 15
 20273                           
 20274                           ; BSR set to: 0
 20275                           ;incstack = 0
 20276                           ;Rtcc_GetRtccValue@RtccPtrVal stored from wreg
 20277  004B94  0100               	movlb	0	; () banked
 20278  004B96  6F7E               	movwf	Rtcc_GetRtccValue@RtccPtrVal& (0+255),b
 20279                           
 20280                           ;rtcc_drv.c: 208: UINT8 RegValue;
 20281                           ;rtcc_drv.c: 209: UINT8 RetValue;
 20282                           ;rtcc_drv.c: 211: switch (RtccPtrVal)
 20283  004B98  D02D               	goto	l416
 20284  004B9A                     l417:
 20285                           
 20286                           ; BSR set to: 0
 20287                           ;rtcc_drv.c: 215: RTCCFGbits.RTCPTR1 = 1U;
 20288  004B9A  010F               	movlb	15	; () banked
 20289  004B9C  833F               	bsf	63,1,b	;volatile
 20290  004B9E                     
 20291                           ;rtcc_drv.c: 216: RTCCFGbits.RTCPTR0 = 1U;
 20292  004B9E  813F               	bsf	63,0,b	;volatile
 20293  004BA0  D01C               	goto	L18
 20294  004BA2                     l419:
 20295                           
 20296                           ; BSR set to: 0
 20297                           ;rtcc_drv.c: 225: RTCCFGbits.RTCPTR1 = 1U;
 20298  004BA2  010F               	movlb	15	; () banked
 20299  004BA4  833F               	bsf	63,1,b	;volatile
 20300  004BA6  D01E               	goto	L19
 20301  004BA8                     l420:
 20302                           
 20303                           ; BSR set to: 0
 20304                           ;rtcc_drv.c: 235: RTCCFGbits.RTCPTR1 = 1U;
 20305  004BA8  010F               	movlb	15	; () banked
 20306  004BAA  833F               	bsf	63,1,b	;volatile
 20307  004BAC  D021               	goto	L22
 20308  004BAE                     l14034:
 20309                           
 20310                           ; BSR set to: 15
 20311                           ;rtcc_drv.c: 240: RetValue = (((RegValue & 0xF0) >> 4U) * 10) + (RegValue & 0x0F);
 20312  004BAE  C080  F07D         	movff	Rtcc_GetRtccValue@RegValue,??_Rtcc_GetRtccValue
 20313  004BB2  0E0F               	movlw	15
 20314  004BB4  0100               	movlb	0	; () banked
 20315  004BB6  177D               	andwf	??_Rtcc_GetRtccValue& (0+255),f,b
 20316  004BB8  3980               	swapf	Rtcc_GetRtccValue@RegValue& (0+255),w,b
 20317  004BBA  0B0F               	andlw	15
 20318  004BBC  0B0F               	andlw	15
 20319  004BBE  0D0A               	mullw	10
 20320  004BC0  50F3               	movf	prodl,w,c
 20321  004BC2  257D               	addwf	??_Rtcc_GetRtccValue& (0+255),w,b
 20322  004BC4  6F7F               	movwf	Rtcc_GetRtccValue@RetValue& (0+255),b
 20323                           
 20324                           ;rtcc_drv.c: 241: break;
 20325  004BC6  D02D               	goto	l418
 20326  004BC8                     l421:
 20327                           
 20328                           ; BSR set to: 0
 20329                           ;rtcc_drv.c: 245: RTCCFGbits.RTCPTR1 = 0U;
 20330  004BC8  010F               	movlb	15	; () banked
 20331  004BCA  933F               	bcf	63,1,b	;volatile
 20332                           
 20333                           ;rtcc_drv.c: 246: RTCCFGbits.RTCPTR0 = 1U;
 20334  004BCC  813F               	bsf	63,0,b	;volatile
 20335                           
 20336                           ;rtcc_drv.c: 248: RetValue = RTCVALH;
 20337  004BCE  CF99 F07F          	movff	3993,Rtcc_GetRtccValue@RetValue	;volatile
 20338                           
 20339                           ;rtcc_drv.c: 249: break;
 20340  004BD2  D027               	goto	l418
 20341  004BD4                     l422:
 20342                           
 20343                           ; BSR set to: 0
 20344                           ;rtcc_drv.c: 253: RTCCFGbits.RTCPTR1 = 0U;
 20345  004BD4  010F               	movlb	15	; () banked
 20346  004BD6  933F               	bcf	63,1,b	;volatile
 20347  004BD8  D7E2               	goto	L20
 20348  004BDA                     L18:
 20349                           
 20350                           ;rtcc_drv.c: 256: RegValue = RTCVALL;
 20351  004BDA  CF98 F080          	movff	3992,Rtcc_GetRtccValue@RegValue	;volatile
 20352  004BDE  D7E7               	goto	l14034
 20353  004BE0                     l423:
 20354                           
 20355                           ; BSR set to: 0
 20356                           ;rtcc_drv.c: 263: RTCCFGbits.RTCPTR1 = 0U;
 20357  004BE0  010F               	movlb	15	; () banked
 20358  004BE2  933F               	bcf	63,1,b	;volatile
 20359  004BE4                     L19:
 20360                           
 20361                           ;rtcc_drv.c: 264: RTCCFGbits.RTCPTR0 = 0U;
 20362  004BE4  913F               	bcf	63,0,b	;volatile
 20363                           
 20364                           ;rtcc_drv.c: 266: RegValue = RTCVALH;
 20365  004BE6  CF99 F080          	movff	3993,Rtcc_GetRtccValue@RegValue	;volatile
 20366  004BEA  D7E1               	goto	l14034
 20367  004BEC                     l424:
 20368                           
 20369                           ; BSR set to: 0
 20370                           ;rtcc_drv.c: 273: RTCCFGbits.RTCPTR1 = 0U;
 20371  004BEC  010F               	movlb	15	; () banked
 20372  004BEE  933F               	bcf	63,1,b	;volatile
 20373  004BF0                     L22:
 20374                           
 20375                           ;rtcc_drv.c: 274: RTCCFGbits.RTCPTR0 = 0U;
 20376  004BF0  913F               	bcf	63,0,b	;volatile
 20377  004BF2  D7F3               	goto	L18
 20378  004BF4                     l416:
 20379                           
 20380                           ; BSR set to: 0
 20381  004BF4  0100               	movlb	0	; () banked
 20382  004BF6  517E               	movf	Rtcc_GetRtccValue@RtccPtrVal& (0+255),w,b
 20383                           
 20384                           ; Switch size 1, requested type "space"
 20385                           ; Number of cases is 7, Range of values is 0 to 6
 20386                           ; switch strategies available:
 20387                           ; Name         Instructions Cycles
 20388                           ; simple_byte           22    12 (average)
 20389                           ;	Chosen strategy is simple_byte
 20390  004BF8  0A00               	xorlw	0	; case 0
 20391  004BFA  B4D8               	btfsc	status,2,c
 20392  004BFC  D7CE               	goto	l417
 20393  004BFE  0A01               	xorlw	1	; case 1
 20394  004C00  B4D8               	btfsc	status,2,c
 20395  004C02  D7CF               	goto	l419
 20396  004C04  0A03               	xorlw	3	; case 2
 20397  004C06  B4D8               	btfsc	status,2,c
 20398  004C08  D7CF               	goto	l420
 20399  004C0A  0A01               	xorlw	1	; case 3
 20400  004C0C  B4D8               	btfsc	status,2,c
 20401  004C0E  D7DC               	goto	l421
 20402  004C10  0A07               	xorlw	7	; case 4
 20403  004C12  B4D8               	btfsc	status,2,c
 20404  004C14  D7DF               	goto	l422
 20405  004C16  0A01               	xorlw	1	; case 5
 20406  004C18  B4D8               	btfsc	status,2,c
 20407  004C1A  D7E2               	goto	l423
 20408  004C1C  0A03               	xorlw	3	; case 6
 20409  004C1E  B4D8               	btfsc	status,2,c
 20410  004C20  D7E5               	goto	l424
 20411  004C22                     l418:
 20412                           
 20413                           ;rtcc_drv.c: 286: return RetValue;
 20414                           
 20415                           ; BSR set to: 0
 20416  004C22  0100               	movlb	0	; () banked
 20417  004C24  517F               	movf	Rtcc_GetRtccValue@RetValue& (0+255),w,b
 20418  004C26  0012               	return	
 20419  004C28                     __end_of_Rtcc_GetRtccValue:
 20420                           	opt stack 0
 20421                           tosu	equ	0xFFF
 20422                           tosh	equ	0xFFE
 20423                           tosl	equ	0xFFD
 20424                           pclath	equ	0xFFA
 20425                           tblptru	equ	0xFF8
 20426                           tblptrh	equ	0xFF7
 20427                           tblptrl	equ	0xFF6
 20428                           tablat	equ	0xFF5
 20429                           prodh	equ	0xFF4
 20430                           prodl	equ	0xFF3
 20431                           intcon	equ	0xFF2
 20432                           intcon2	equ	0xFF1
 20433                           intcon3	equ	0xFF0
 20434                           indf0	equ	0xFEF
 20435                           postinc0	equ	0xFEE
 20436                           plusw0	equ	0xFEB
 20437                           fsr0h	equ	0xFEA
 20438                           fsr0l	equ	0xFE9
 20439                           wreg	equ	0xFE8
 20440                           indf1	equ	0xFE7
 20441                           postinc1	equ	0xFE6
 20442                           postdec1	equ	0xFE5
 20443                           fsr1h	equ	0xFE2
 20444                           fsr1l	equ	0xFE1
 20445                           indf2	equ	0xFDF
 20446                           postinc2	equ	0xFDE
 20447                           postdec2	equ	0xFDD
 20448                           plusw2	equ	0xFDB
 20449                           fsr2h	equ	0xFDA
 20450                           fsr2l	equ	0xFD9
 20451                           status	equ	0xFD8
 20452                           
 20453 ;; *************** function _Rtcc_SetRtcStatus *****************
 20454 ;; Defined at:
 20455 ;;		line 149 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 20456 ;; Parameters:    Size  Location     Type
 20457 ;;  Status          1    wreg     unsigned char 
 20458 ;; Auto vars:     Size  Location     Type
 20459 ;;  Status          1   29[BANK0 ] unsigned char 
 20460 ;; Return value:  Size  Location     Type
 20461 ;;                  1    wreg      void 
 20462 ;; Registers used:
 20463 ;;		wreg
 20464 ;; Tracked objects:
 20465 ;;		On entry : 0/0
 20466 ;;		On exit  : 0/0
 20467 ;;		Unchanged: 0/0
 20468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20469 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20470 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20472 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20473 ;;Total ram usage:        1 bytes
 20474 ;; Hardware stack levels used:    1
 20475 ;; Hardware stack levels required when called:   11
 20476 ;; This function calls:
 20477 ;;		Nothing
 20478 ;; This function is called by:
 20479 ;;		_Rtcm_MainTask
 20480 ;; This function uses a non-reentrant model
 20481 ;;
 20482                           
 20483                           	psect	text86
 20484  006716                     __ptext86:
 20485                           	opt stack 0
 20486  006716                     _Rtcc_SetRtcStatus:
 20487                           	opt stack 16
 20488                           
 20489                           ; BSR set to: 0
 20490                           ;incstack = 0
 20491                           ;Rtcc_SetRtcStatus@Status stored from wreg
 20492  006716  0100               	movlb	0	; () banked
 20493  006718  6F7D               	movwf	Rtcc_SetRtcStatus@Status& (0+255),b
 20494                           
 20495                           ;rtcc_drv.c: 152: RTCCFGbits.RTCEN = Status;
 20496  00671A  0100               	movlb	0	; () banked
 20497  00671C  B17D               	btfsc	Rtcc_SetRtcStatus@Status& (0+255),0,b
 20498  00671E  D003               	bra	u14265
 20499  006720  010F               	movlb	15	; () banked
 20500  006722  9F3F               	bcf	63,7,b	;volatile
 20501  006724  D002               	bra	u14266
 20502  006726                     u14265:
 20503  006726  010F               	movlb	15	; () banked
 20504  006728  8F3F               	bsf	63,7,b	;volatile
 20505  00672A                     u14266:
 20506                           
 20507                           ; BSR set to: 15
 20508  00672A  0012               	return		;funcret
 20509  00672C                     __end_of_Rtcc_SetRtcStatus:
 20510                           	opt stack 0
 20511                           tosu	equ	0xFFF
 20512                           tosh	equ	0xFFE
 20513                           tosl	equ	0xFFD
 20514                           pclath	equ	0xFFA
 20515                           tblptru	equ	0xFF8
 20516                           tblptrh	equ	0xFF7
 20517                           tblptrl	equ	0xFF6
 20518                           tablat	equ	0xFF5
 20519                           prodh	equ	0xFF4
 20520                           prodl	equ	0xFF3
 20521                           intcon	equ	0xFF2
 20522                           intcon2	equ	0xFF1
 20523                           intcon3	equ	0xFF0
 20524                           indf0	equ	0xFEF
 20525                           postinc0	equ	0xFEE
 20526                           plusw0	equ	0xFEB
 20527                           fsr0h	equ	0xFEA
 20528                           fsr0l	equ	0xFE9
 20529                           wreg	equ	0xFE8
 20530                           indf1	equ	0xFE7
 20531                           postinc1	equ	0xFE6
 20532                           postdec1	equ	0xFE5
 20533                           fsr1h	equ	0xFE2
 20534                           fsr1l	equ	0xFE1
 20535                           indf2	equ	0xFDF
 20536                           postinc2	equ	0xFDE
 20537                           postdec2	equ	0xFDD
 20538                           plusw2	equ	0xFDB
 20539                           fsr2h	equ	0xFDA
 20540                           fsr2l	equ	0xFD9
 20541                           status	equ	0xFD8
 20542                           
 20543 ;; *************** function _Rtcc_RtcConfig *****************
 20544 ;; Defined at:
 20545 ;;		line 106 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 20546 ;; Parameters:    Size  Location     Type
 20547 ;;  RtcConfig       2   30[BANK0 ] PTR struct _RtccConfigTy
 20548 ;;		 -> RtcConfig(4), 
 20549 ;; Auto vars:     Size  Location     Type
 20550 ;;		None
 20551 ;; Return value:  Size  Location     Type
 20552 ;;                  1    wreg      void 
 20553 ;; Registers used:
 20554 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 20555 ;; Tracked objects:
 20556 ;;		On entry : 0/0
 20557 ;;		On exit  : 0/0
 20558 ;;		Unchanged: 0/0
 20559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20560 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20561 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20562 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20563 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20564 ;;Total ram usage:        3 bytes
 20565 ;; Hardware stack levels used:    1
 20566 ;; Hardware stack levels required when called:   12
 20567 ;; This function calls:
 20568 ;;		_RtccIrqInit
 20569 ;; This function is called by:
 20570 ;;		_Rtcm_MainTask
 20571 ;; This function uses a non-reentrant model
 20572 ;;
 20573                           
 20574                           	psect	text87
 20575  0047FE                     __ptext87:
 20576                           	opt stack 0
 20577  0047FE                     _Rtcc_RtcConfig:
 20578                           	opt stack 15
 20579                           
 20580                           ;rtcc_drv.c: 109: RTCCFGbits.RTCOE = RtcConfig->RtcOutPinEnable;
 20581                           
 20582                           ; BSR set to: 15
 20583                           ;incstack = 0
 20584  0047FE  C07E  FFD9         	movff	Rtcc_RtcConfig@RtcConfig,fsr2l
 20585  004802  C07F  FFDA         	movff	Rtcc_RtcConfig@RtcConfig+1,fsr2h
 20586  004806  50DF               	movf	indf2,w,c
 20587  004808  0100               	movlb	0	; () banked
 20588  00480A  6F80               	movwf	??_Rtcc_RtcConfig& (0+255),b
 20589  00480C  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20590  00480E  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20591  004810  010F               	movlb	15	; () banked
 20592  004812  513F               	movf	63,w,b	;volatile
 20593  004814  0100               	movlb	0	; () banked
 20594  004816  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20595  004818  0BFB               	andlw	-5
 20596  00481A  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20597  00481C  010F               	movlb	15	; () banked
 20598  00481E  6F3F               	movwf	63,b	;volatile
 20599                           
 20600                           ;rtcc_drv.c: 111: PADCFG1bits.RTSECSEL0 = ((RtcConfig->RtcOutputSelectBit) & 0x01);
 20601  004820  0100               	movlb	0	; () banked
 20602  004822  EE20 F001          	lfsr	2,1
 20603  004826  517E               	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 20604  004828  26D9               	addwf	fsr2l,f,c
 20605  00482A  517F               	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 20606  00482C  22DA               	addwfc	fsr2h,f,c
 20607  00482E  50DF               	movf	indf2,w,c
 20608  004830  6F80               	movwf	??_Rtcc_RtcConfig& (0+255),b
 20609  004832  0E01               	movlw	1
 20610  004834  1780               	andwf	??_Rtcc_RtcConfig& (0+255),f,b
 20611  004836  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20612  004838  010F               	movlb	15	; () banked
 20613  00483A  513C               	movf	60,w,b	;volatile
 20614  00483C  0100               	movlb	0	; () banked
 20615  00483E  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20616  004840  0BFD               	andlw	-3
 20617  004842  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20618  004844  010F               	movlb	15	; () banked
 20619  004846  6F3C               	movwf	60,b	;volatile
 20620                           
 20621                           ;rtcc_drv.c: 112: PADCFG1bits.RTSECSEL1 = ((RtcConfig->RtcOutputSelectBit >> 1) & 0x01);
 20622  004848  0100               	movlb	0	; () banked
 20623  00484A  EE20 F001          	lfsr	2,1
 20624  00484E  517E               	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 20625  004850  26D9               	addwf	fsr2l,f,c
 20626  004852  517F               	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 20627  004854  22DA               	addwfc	fsr2h,f,c
 20628  004856  50DF               	movf	indf2,w,c
 20629  004858  6F80               	movwf	??_Rtcc_RtcConfig& (0+255),b
 20630  00485A  90D8               	bcf	status,0,c
 20631  00485C  3380               	rrcf	??_Rtcc_RtcConfig& (0+255),f,b
 20632  00485E  0E01               	movlw	1
 20633  004860  1780               	andwf	??_Rtcc_RtcConfig& (0+255),f,b
 20634  004862  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20635  004864  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20636  004866  010F               	movlb	15	; () banked
 20637  004868  513C               	movf	60,w,b	;volatile
 20638  00486A  0100               	movlb	0	; () banked
 20639  00486C  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20640  00486E  0BFB               	andlw	-5
 20641  004870  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20642  004872  010F               	movlb	15	; () banked
 20643  004874  6F3C               	movwf	60,b	;volatile
 20644                           
 20645                           ;rtcc_drv.c: 114: if (RtcConfig->IntEnable == EnableInt)
 20646  004876  0100               	movlb	0	; () banked
 20647  004878  EE20 F002          	lfsr	2,2
 20648  00487C  517E               	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 20649  00487E  26D9               	addwf	fsr2l,f,c
 20650  004880  517F               	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 20651  004882  22DA               	addwfc	fsr2h,f,c
 20652  004884  04DE               	decf	postinc2,w,c
 20653  004886  A4D8               	btfss	status,2,c
 20654  004888  0012               	return	
 20655                           
 20656                           ; BSR set to: 0
 20657                           ;rtcc_drv.c: 115: {
 20658                           ;rtcc_drv.c: 117: RtccIrqInit(RtcConfig->IntPriority);
 20659  00488A  EE20 F003          	lfsr	2,3
 20660  00488E  517E               	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 20661  004890  26D9               	addwf	fsr2l,f,c
 20662  004892  517F               	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 20663  004894  22DA               	addwfc	fsr2h,f,c
 20664  004896  50DF               	movf	indf2,w,c
 20665  004898  EC96  F033         	call	_RtccIrqInit
 20666  00489C  0012               	return	
 20667  00489E                     __end_of_Rtcc_RtcConfig:
 20668                           	opt stack 0
 20669                           tosu	equ	0xFFF
 20670                           tosh	equ	0xFFE
 20671                           tosl	equ	0xFFD
 20672                           pclath	equ	0xFFA
 20673                           tblptru	equ	0xFF8
 20674                           tblptrh	equ	0xFF7
 20675                           tblptrl	equ	0xFF6
 20676                           tablat	equ	0xFF5
 20677                           prodh	equ	0xFF4
 20678                           prodl	equ	0xFF3
 20679                           intcon	equ	0xFF2
 20680                           intcon2	equ	0xFF1
 20681                           intcon3	equ	0xFF0
 20682                           indf0	equ	0xFEF
 20683                           postinc0	equ	0xFEE
 20684                           plusw0	equ	0xFEB
 20685                           fsr0h	equ	0xFEA
 20686                           fsr0l	equ	0xFE9
 20687                           wreg	equ	0xFE8
 20688                           indf1	equ	0xFE7
 20689                           postinc1	equ	0xFE6
 20690                           postdec1	equ	0xFE5
 20691                           fsr1h	equ	0xFE2
 20692                           fsr1l	equ	0xFE1
 20693                           indf2	equ	0xFDF
 20694                           postinc2	equ	0xFDE
 20695                           postdec2	equ	0xFDD
 20696                           plusw2	equ	0xFDB
 20697                           fsr2h	equ	0xFDA
 20698                           fsr2l	equ	0xFD9
 20699                           status	equ	0xFD8
 20700                           
 20701 ;; *************** function _RtccIrqInit *****************
 20702 ;; Defined at:
 20703 ;;		line 84 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 20704 ;; Parameters:    Size  Location     Type
 20705 ;;  Priority        1    wreg     enum E7716
 20706 ;; Auto vars:     Size  Location     Type
 20707 ;;  Priority        1   29[BANK0 ] enum E7716
 20708 ;; Return value:  Size  Location     Type
 20709 ;;                  1    wreg      void 
 20710 ;; Registers used:
 20711 ;;		wreg
 20712 ;; Tracked objects:
 20713 ;;		On entry : 0/0
 20714 ;;		On exit  : 0/0
 20715 ;;		Unchanged: 0/0
 20716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20717 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20718 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20719 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20720 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20721 ;;Total ram usage:        1 bytes
 20722 ;; Hardware stack levels used:    1
 20723 ;; Hardware stack levels required when called:   11
 20724 ;; This function calls:
 20725 ;;		Nothing
 20726 ;; This function is called by:
 20727 ;;		_Rtcc_RtcConfig
 20728 ;; This function uses a non-reentrant model
 20729 ;;
 20730                           
 20731                           	psect	text88
 20732  00672C                     __ptext88:
 20733                           	opt stack 0
 20734  00672C                     _RtccIrqInit:
 20735                           	opt stack 15
 20736                           
 20737                           ;incstack = 0
 20738                           ;RtccIrqInit@Priority stored from wreg
 20739  00672C  0100               	movlb	0	; () banked
 20740  00672E  6F7D               	movwf	RtccIrqInit@Priority& (0+255),b
 20741                           
 20742                           ;rtcc_drv.c: 87: PIR3bits.RTCCIF = 0u;
 20743  006730  90A4               	bcf	4004,0,c	;volatile
 20744                           
 20745                           ;rtcc_drv.c: 89: IPR3bits.RTCCIP = Priority;
 20746  006732  0100               	movlb	0	; () banked
 20747  006734  B17D               	btfsc	RtccIrqInit@Priority& (0+255),0,b
 20748  006736  D002               	bra	u13225
 20749  006738  90A5               	bcf	4005,0,c	;volatile
 20750  00673A  D001               	bra	u13226
 20751  00673C                     u13225:
 20752  00673C  80A5               	bsf	4005,0,c	;volatile
 20753  00673E                     u13226:
 20754                           
 20755                           ;rtcc_drv.c: 91: PIE3bits.RTCCIE = 1u;
 20756  00673E  80A3               	bsf	4003,0,c	;volatile
 20757  006740  0012               	return		;funcret
 20758  006742                     __end_of_RtccIrqInit:
 20759                           	opt stack 0
 20760                           tosu	equ	0xFFF
 20761                           tosh	equ	0xFFE
 20762                           tosl	equ	0xFFD
 20763                           pclath	equ	0xFFA
 20764                           tblptru	equ	0xFF8
 20765                           tblptrh	equ	0xFF7
 20766                           tblptrl	equ	0xFF6
 20767                           tablat	equ	0xFF5
 20768                           prodh	equ	0xFF4
 20769                           prodl	equ	0xFF3
 20770                           intcon	equ	0xFF2
 20771                           intcon2	equ	0xFF1
 20772                           intcon3	equ	0xFF0
 20773                           indf0	equ	0xFEF
 20774                           postinc0	equ	0xFEE
 20775                           plusw0	equ	0xFEB
 20776                           fsr0h	equ	0xFEA
 20777                           fsr0l	equ	0xFE9
 20778                           wreg	equ	0xFE8
 20779                           indf1	equ	0xFE7
 20780                           postinc1	equ	0xFE6
 20781                           postdec1	equ	0xFE5
 20782                           fsr1h	equ	0xFE2
 20783                           fsr1l	equ	0xFE1
 20784                           indf2	equ	0xFDF
 20785                           postinc2	equ	0xFDE
 20786                           postdec2	equ	0xFDD
 20787                           plusw2	equ	0xFDB
 20788                           fsr2h	equ	0xFDA
 20789                           fsr2l	equ	0xFD9
 20790                           status	equ	0xFD8
 20791                           
 20792 ;; *************** function _Rtcc_AlarmConfig *****************
 20793 ;; Defined at:
 20794 ;;		line 129 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 20795 ;; Parameters:    Size  Location     Type
 20796 ;;  AlarmConfig     2   29[BANK0 ] PTR struct _RtccAlarmCon
 20797 ;;		 -> AlCfg(4), 
 20798 ;; Auto vars:     Size  Location     Type
 20799 ;;		None
 20800 ;; Return value:  Size  Location     Type
 20801 ;;                  1    wreg      void 
 20802 ;; Registers used:
 20803 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 20804 ;; Tracked objects:
 20805 ;;		On entry : 0/0
 20806 ;;		On exit  : 0/0
 20807 ;;		Unchanged: 0/0
 20808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20809 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20810 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20811 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20812 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20813 ;;Total ram usage:        3 bytes
 20814 ;; Hardware stack levels used:    1
 20815 ;; Hardware stack levels required when called:   11
 20816 ;; This function calls:
 20817 ;;		Nothing
 20818 ;; This function is called by:
 20819 ;;		_Rtcm_MainTask
 20820 ;; This function uses a non-reentrant model
 20821 ;;
 20822                           
 20823                           	psect	text89
 20824  0052C2                     __ptext89:
 20825                           	opt stack 0
 20826  0052C2                     _Rtcc_AlarmConfig:
 20827                           	opt stack 16
 20828                           
 20829                           ;rtcc_drv.c: 132: ALRMCFGbits.ALRMEN = AlarmConfig->RtcAlarmEnable;
 20830                           
 20831                           ;incstack = 0
 20832  0052C2  C07D  FFD9         	movff	Rtcc_AlarmConfig@AlarmConfig,fsr2l
 20833  0052C6  C07E  FFDA         	movff	Rtcc_AlarmConfig@AlarmConfig+1,fsr2h
 20834  0052CA  50DF               	movf	indf2,w,c
 20835  0052CC  0100               	movlb	0	; () banked
 20836  0052CE  6F7F               	movwf	??_Rtcc_AlarmConfig& (0+255),b
 20837  0052D0  337F               	rrcf	??_Rtcc_AlarmConfig& (0+255),f,b
 20838  0052D2  337F               	rrcf	??_Rtcc_AlarmConfig& (0+255),f,b
 20839  0052D4  5091               	movf	3985,w,c	;volatile
 20840  0052D6  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20841  0052D8  0B7F               	andlw	-129
 20842  0052DA  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20843  0052DC  6E91               	movwf	3985,c	;volatile
 20844                           
 20845                           ;rtcc_drv.c: 134: ALRMCFGbits.CHIME = AlarmConfig->RtcChimeEnable;
 20846  0052DE  EE20 F001          	lfsr	2,1
 20847  0052E2  517D               	movf	Rtcc_AlarmConfig@AlarmConfig& (0+255),w,b
 20848  0052E4  26D9               	addwf	fsr2l,f,c
 20849  0052E6  517E               	movf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),w,b
 20850  0052E8  22DA               	addwfc	fsr2h,f,c
 20851  0052EA  50DF               	movf	indf2,w,c
 20852  0052EC  6F7F               	movwf	??_Rtcc_AlarmConfig& (0+255),b
 20853  0052EE  3B7F               	swapf	??_Rtcc_AlarmConfig& (0+255),f,b
 20854  0052F0  477F               	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 20855  0052F2  477F               	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 20856  0052F4  5091               	movf	3985,w,c	;volatile
 20857  0052F6  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20858  0052F8  0BBF               	andlw	-65
 20859  0052FA  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20860  0052FC  6E91               	movwf	3985,c	;volatile
 20861                           
 20862                           ;rtcc_drv.c: 136: ALRMCFGbits.AMASK = AlarmConfig->AlarmMask;
 20863  0052FE  EE20 F002          	lfsr	2,2
 20864  005302  517D               	movf	Rtcc_AlarmConfig@AlarmConfig& (0+255),w,b
 20865  005304  26D9               	addwf	fsr2l,f,c
 20866  005306  517E               	movf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),w,b
 20867  005308  22DA               	addwfc	fsr2h,f,c
 20868  00530A  50DF               	movf	indf2,w,c
 20869  00530C  6F7F               	movwf	??_Rtcc_AlarmConfig& (0+255),b
 20870  00530E  477F               	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 20871  005310  477F               	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 20872  005312  5091               	movf	3985,w,c	;volatile
 20873  005314  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20874  005316  0BC3               	andlw	-61
 20875  005318  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20876  00531A  6E91               	movwf	3985,c	;volatile
 20877                           
 20878                           ;rtcc_drv.c: 138: ALRMRPTbits.ARPT = AlarmConfig->AlarmRepeat;
 20879  00531C  EE20 F003          	lfsr	2,3
 20880  005320  517D               	movf	Rtcc_AlarmConfig@AlarmConfig& (0+255),w,b
 20881  005322  26D9               	addwf	fsr2l,f,c
 20882  005324  517E               	movf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),w,b
 20883  005326  22DA               	addwfc	fsr2h,f,c
 20884  005328  50DF               	movf	indf2,w,c
 20885  00532A  6E90               	movwf	3984,c	;volatile
 20886                           
 20887                           ; BSR set to: 0
 20888  00532C  0012               	return		;funcret
 20889  00532E                     __end_of_Rtcc_AlarmConfig:
 20890                           	opt stack 0
 20891                           tosu	equ	0xFFF
 20892                           tosh	equ	0xFFE
 20893                           tosl	equ	0xFFD
 20894                           pclath	equ	0xFFA
 20895                           tblptru	equ	0xFF8
 20896                           tblptrh	equ	0xFF7
 20897                           tblptrl	equ	0xFF6
 20898                           tablat	equ	0xFF5
 20899                           prodh	equ	0xFF4
 20900                           prodl	equ	0xFF3
 20901                           intcon	equ	0xFF2
 20902                           intcon2	equ	0xFF1
 20903                           intcon3	equ	0xFF0
 20904                           indf0	equ	0xFEF
 20905                           postinc0	equ	0xFEE
 20906                           plusw0	equ	0xFEB
 20907                           fsr0h	equ	0xFEA
 20908                           fsr0l	equ	0xFE9
 20909                           wreg	equ	0xFE8
 20910                           indf1	equ	0xFE7
 20911                           postinc1	equ	0xFE6
 20912                           postdec1	equ	0xFE5
 20913                           fsr1h	equ	0xFE2
 20914                           fsr1l	equ	0xFE1
 20915                           indf2	equ	0xFDF
 20916                           postinc2	equ	0xFDE
 20917                           postdec2	equ	0xFDD
 20918                           plusw2	equ	0xFDB
 20919                           fsr2h	equ	0xFDA
 20920                           fsr2l	equ	0xFD9
 20921                           status	equ	0xFD8
 20922                           
 20923 ;; *************** function _waitSetupCall *****************
 20924 ;; Defined at:
 20925 ;;		line 84 in file "../Source/c/04_App/app_gate.c"
 20926 ;; Parameters:    Size  Location     Type
 20927 ;;		None
 20928 ;; Auto vars:     Size  Location     Type
 20929 ;;  isCallArrive    1   51[BANK0 ] unsigned char 
 20930 ;; Return value:  Size  Location     Type
 20931 ;;                  1    wreg      unsigned char 
 20932 ;; Registers used:
 20933 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20934 ;; Tracked objects:
 20935 ;;		On entry : 0/0
 20936 ;;		On exit  : 0/0
 20937 ;;		Unchanged: 0/0
 20938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20939 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20940 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20941 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20942 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20943 ;;Total ram usage:        1 bytes
 20944 ;; Hardware stack levels used:    1
 20945 ;; Hardware stack levels required when called:   15
 20946 ;; This function calls:
 20947 ;;		_Led_SetLedStatus
 20948 ;;		_getSetupCall
 20949 ;;		_secondsAppTimer
 20950 ;; This function is called by:
 20951 ;;		_MyApp_Task
 20952 ;; This function uses a non-reentrant model
 20953 ;;
 20954                           
 20955                           	psect	text90
 20956  005B42                     __ptext90:
 20957                           	opt stack 0
 20958  005B42                     _waitSetupCall:
 20959                           	opt stack 12
 20960                           
 20961                           ;app_gate.c: 86: bool isCallArrived = 0;
 20962                           
 20963                           ; BSR set to: 0
 20964                           ;incstack = 0
 20965  005B42  0E00               	movlw	0
 20966  005B44  0100               	movlb	0	; () banked
 20967  005B46  6F93               	movwf	waitSetupCall@isCallArrived& (0+255),b
 20968                           
 20969                           ; BSR set to: 0
 20970                           ;app_gate.c: 87: if (!secondsAppTimer(30, &setupCallTicks, 0))
 20971  005B48  0EB3               	movlw	low _setupCallTicks
 20972  005B4A  6F8A               	movwf	secondsAppTimer@counter& (0+255),b
 20973  005B4C  0E03               	movlw	high _setupCallTicks
 20974  005B4E  6F8B               	movwf	(secondsAppTimer@counter+1)& (0+255),b
 20975  005B50  0E00               	movlw	0
 20976  005B52  6F8C               	movwf	secondsAppTimer@isCyclic& (0+255),b
 20977  005B54  0E1E               	movlw	30
 20978  005B56  ECAE  F023         	call	_secondsAppTimer
 20979  005B5A  0900               	iorlw	0
 20980  005B5C  A4D8               	btfss	status,2,c
 20981  005B5E  D00F               	goto	l2762
 20982                           
 20983                           ;app_gate.c: 88: {
 20984                           ;app_gate.c: 89: Led_SetLedStatus(1u, LED_STS_BLINK);
 20985  005B60  0E03               	movlw	3
 20986  005B62  0100               	movlb	0	; () banked
 20987  005B64  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 20988  005B66  0E01               	movlw	1
 20989  005B68  EC5B  F031         	call	_Led_SetLedStatus
 20990                           
 20991                           ;app_gate.c: 90: if (getSetupCall())
 20992  005B6C  ECD9  F032         	call	_getSetupCall	;wreg free
 20993  005B70  0900               	iorlw	0
 20994  005B72  B4D8               	btfsc	status,2,c
 20995  005B74  D00A               	goto	l2764
 20996                           
 20997                           ;app_gate.c: 91: {
 20998                           ;app_gate.c: 92: isCallArrived = 1;
 20999  005B76  0E01               	movlw	1
 21000  005B78  0100               	movlb	0	; () banked
 21001  005B7A  6F93               	movwf	waitSetupCall@isCallArrived& (0+255),b
 21002                           
 21003                           ; BSR set to: 0
 21004                           ;app_gate.c: 93: }
 21005                           ;app_gate.c: 94: }
 21006  005B7C  D006               	goto	l2764
 21007  005B7E                     l2762:
 21008                           
 21009                           ;app_gate.c: 95: else
 21010                           ;app_gate.c: 96: {
 21011                           ;app_gate.c: 97: Led_SetLedStatus(1u, LED_STS_ON);
 21012                           
 21013                           ; BSR set to: 0
 21014  005B7E  0E01               	movlw	1
 21015  005B80  0100               	movlb	0	; () banked
 21016  005B82  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 21017  005B84  0E01               	movlw	1
 21018  005B86  EC5B  F031         	call	_Led_SetLedStatus
 21019  005B8A                     l2764:
 21020                           
 21021                           ;app_gate.c: 98: }
 21022                           ;app_gate.c: 99: return isCallArrived;
 21023  005B8A  0100               	movlb	0	; () banked
 21024  005B8C  5193               	movf	waitSetupCall@isCallArrived& (0+255),w,b
 21025  005B8E  0012               	return	
 21026  005B90                     __end_of_waitSetupCall:
 21027                           	opt stack 0
 21028                           tosu	equ	0xFFF
 21029                           tosh	equ	0xFFE
 21030                           tosl	equ	0xFFD
 21031                           pclath	equ	0xFFA
 21032                           tblptru	equ	0xFF8
 21033                           tblptrh	equ	0xFF7
 21034                           tblptrl	equ	0xFF6
 21035                           tablat	equ	0xFF5
 21036                           prodh	equ	0xFF4
 21037                           prodl	equ	0xFF3
 21038                           intcon	equ	0xFF2
 21039                           intcon2	equ	0xFF1
 21040                           intcon3	equ	0xFF0
 21041                           indf0	equ	0xFEF
 21042                           postinc0	equ	0xFEE
 21043                           plusw0	equ	0xFEB
 21044                           fsr0h	equ	0xFEA
 21045                           fsr0l	equ	0xFE9
 21046                           wreg	equ	0xFE8
 21047                           indf1	equ	0xFE7
 21048                           postinc1	equ	0xFE6
 21049                           postdec1	equ	0xFE5
 21050                           fsr1h	equ	0xFE2
 21051                           fsr1l	equ	0xFE1
 21052                           indf2	equ	0xFDF
 21053                           postinc2	equ	0xFDE
 21054                           postdec2	equ	0xFDD
 21055                           plusw2	equ	0xFDB
 21056                           fsr2h	equ	0xFDA
 21057                           fsr2l	equ	0xFD9
 21058                           status	equ	0xFD8
 21059                           
 21060 ;; *************** function _getSetupCall *****************
 21061 ;; Defined at:
 21062 ;;		line 65 in file "../Source/c/04_App/app_gate.c"
 21063 ;; Parameters:    Size  Location     Type
 21064 ;;		None
 21065 ;; Auto vars:     Size  Location     Type
 21066 ;;  isCalledRece    1   35[BANK0 ] unsigned char 
 21067 ;; Return value:  Size  Location     Type
 21068 ;;                  1    wreg      unsigned char 
 21069 ;; Registers used:
 21070 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21071 ;; Tracked objects:
 21072 ;;		On entry : 0/0
 21073 ;;		On exit  : 0/0
 21074 ;;		Unchanged: 0/0
 21075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21076 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21077 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21079 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21080 ;;Total ram usage:        1 bytes
 21081 ;; Hardware stack levels used:    1
 21082 ;; Hardware stack levels required when called:   14
 21083 ;; This function calls:
 21084 ;;		_Mdm_HangPhoneCall
 21085 ;;		_Mdm_IsRinging
 21086 ;; This function is called by:
 21087 ;;		_waitSetupCall
 21088 ;; This function uses a non-reentrant model
 21089 ;;
 21090                           
 21091                           	psect	text91
 21092  0065B2                     __ptext91:
 21093                           	opt stack 0
 21094  0065B2                     _getSetupCall:
 21095                           	opt stack 12
 21096                           
 21097                           ;app_gate.c: 67: bool isCalledReceived = 0;
 21098                           
 21099                           ; BSR set to: 0
 21100                           ;incstack = 0
 21101  0065B2  0E00               	movlw	0
 21102  0065B4  0100               	movlb	0	; () banked
 21103  0065B6  6F83               	movwf	getSetupCall@isCalledReceived& (0+255),b
 21104                           
 21105                           ; BSR set to: 0
 21106                           ;app_gate.c: 69: if (Mdm_IsRinging())
 21107  0065B8  EC2D  F032         	call	_Mdm_IsRinging	;wreg free
 21108  0065BC  0900               	iorlw	0
 21109  0065BE  B4D8               	btfsc	status,2,c
 21110  0065C0  D005               	goto	l2758
 21111                           
 21112                           ;app_gate.c: 70: {
 21113                           ;app_gate.c: 71: Mdm_HangPhoneCall();
 21114  0065C2  ECCA  F033         	call	_Mdm_HangPhoneCall	;wreg free
 21115                           
 21116                           ;app_gate.c: 72: isCalledReceived = 1;
 21117  0065C6  0E01               	movlw	1
 21118  0065C8  0100               	movlb	0	; () banked
 21119  0065CA  6F83               	movwf	getSetupCall@isCalledReceived& (0+255),b
 21120  0065CC                     l2758:
 21121                           
 21122                           ;app_gate.c: 73: }
 21123                           ;app_gate.c: 74: return isCalledReceived;
 21124                           
 21125                           ; BSR set to: 0
 21126  0065CC  0100               	movlb	0	; () banked
 21127  0065CE  5183               	movf	getSetupCall@isCalledReceived& (0+255),w,b
 21128  0065D0  0012               	return	
 21129  0065D2                     __end_of_getSetupCall:
 21130                           	opt stack 0
 21131                           tosu	equ	0xFFF
 21132                           tosh	equ	0xFFE
 21133                           tosl	equ	0xFFD
 21134                           pclath	equ	0xFFA
 21135                           tblptru	equ	0xFF8
 21136                           tblptrh	equ	0xFF7
 21137                           tblptrl	equ	0xFF6
 21138                           tablat	equ	0xFF5
 21139                           prodh	equ	0xFF4
 21140                           prodl	equ	0xFF3
 21141                           intcon	equ	0xFF2
 21142                           intcon2	equ	0xFF1
 21143                           intcon3	equ	0xFF0
 21144                           indf0	equ	0xFEF
 21145                           postinc0	equ	0xFEE
 21146                           plusw0	equ	0xFEB
 21147                           fsr0h	equ	0xFEA
 21148                           fsr0l	equ	0xFE9
 21149                           wreg	equ	0xFE8
 21150                           indf1	equ	0xFE7
 21151                           postinc1	equ	0xFE6
 21152                           postdec1	equ	0xFE5
 21153                           fsr1h	equ	0xFE2
 21154                           fsr1l	equ	0xFE1
 21155                           indf2	equ	0xFDF
 21156                           postinc2	equ	0xFDE
 21157                           postdec2	equ	0xFDD
 21158                           plusw2	equ	0xFDB
 21159                           fsr2h	equ	0xFDA
 21160                           fsr2l	equ	0xFD9
 21161                           status	equ	0xFD8
 21162                           
 21163 ;; *************** function _Mdm_IsRinging *****************
 21164 ;; Defined at:
 21165 ;;		line 1024 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 21166 ;; Parameters:    Size  Location     Type
 21167 ;;		None
 21168 ;; Auto vars:     Size  Location     Type
 21169 ;;  Ret             1   33[BANK0 ] enum E8924
 21170 ;; Return value:  Size  Location     Type
 21171 ;;                  1    wreg      enum E8924
 21172 ;; Registers used:
 21173 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 21174 ;; Tracked objects:
 21175 ;;		On entry : 0/0
 21176 ;;		On exit  : 0/0
 21177 ;;		Unchanged: 0/0
 21178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21179 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21180 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21182 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21183 ;;Total ram usage:        1 bytes
 21184 ;; Hardware stack levels used:    1
 21185 ;; Hardware stack levels required when called:   12
 21186 ;; This function calls:
 21187 ;;		_ReceiveEvt
 21188 ;; This function is called by:
 21189 ;;		_MyApp_Task
 21190 ;;		_getSetupCall
 21191 ;; This function uses a non-reentrant model
 21192 ;;
 21193                           
 21194                           	psect	text92
 21195  00645A                     __ptext92:
 21196                           	opt stack 0
 21197  00645A                     _Mdm_IsRinging:
 21198                           	opt stack 13
 21199                           
 21200                           ;mdm_gsm_gprs.c: 1026: RingStsType Ret = PhoneNotRinging;
 21201                           
 21202                           ; BSR set to: 0
 21203                           ;incstack = 0
 21204  00645A  0E00               	movlw	0
 21205  00645C  0100               	movlb	0	; () banked
 21206  00645E  6F81               	movwf	Mdm_IsRinging@Ret& (0+255),b
 21207                           
 21208                           ; BSR set to: 0
 21209                           ;mdm_gsm_gprs.c: 1029: if (ReceiveEvt(&RingEvent))
 21210  006460  0EDE               	movlw	low _RingEvent
 21211  006462  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 21212  006464  0E00               	movlw	high _RingEvent
 21213  006466  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 21214  006468  EC8A  F031         	call	_ReceiveEvt	;wreg free
 21215  00646C  0900               	iorlw	0
 21216  00646E  B4D8               	btfsc	status,2,c
 21217  006470  D003               	goto	l1152
 21218                           
 21219                           ;mdm_gsm_gprs.c: 1030: {
 21220                           ;mdm_gsm_gprs.c: 1031: Ret = PhoneRinging;
 21221  006472  0E01               	movlw	1
 21222  006474  0100               	movlb	0	; () banked
 21223  006476  6F81               	movwf	Mdm_IsRinging@Ret& (0+255),b
 21224  006478                     l1152:
 21225                           
 21226                           ;mdm_gsm_gprs.c: 1032: }
 21227                           ;mdm_gsm_gprs.c: 1034: return Ret;
 21228  006478  0100               	movlb	0	; () banked
 21229  00647A  5181               	movf	Mdm_IsRinging@Ret& (0+255),w,b
 21230  00647C  0012               	return	
 21231  00647E                     __end_of_Mdm_IsRinging:
 21232                           	opt stack 0
 21233                           tosu	equ	0xFFF
 21234                           tosh	equ	0xFFE
 21235                           tosl	equ	0xFFD
 21236                           pclath	equ	0xFFA
 21237                           tblptru	equ	0xFF8
 21238                           tblptrh	equ	0xFF7
 21239                           tblptrl	equ	0xFF6
 21240                           tablat	equ	0xFF5
 21241                           prodh	equ	0xFF4
 21242                           prodl	equ	0xFF3
 21243                           intcon	equ	0xFF2
 21244                           intcon2	equ	0xFF1
 21245                           intcon3	equ	0xFF0
 21246                           indf0	equ	0xFEF
 21247                           postinc0	equ	0xFEE
 21248                           plusw0	equ	0xFEB
 21249                           fsr0h	equ	0xFEA
 21250                           fsr0l	equ	0xFE9
 21251                           wreg	equ	0xFE8
 21252                           indf1	equ	0xFE7
 21253                           postinc1	equ	0xFE6
 21254                           postdec1	equ	0xFE5
 21255                           fsr1h	equ	0xFE2
 21256                           fsr1l	equ	0xFE1
 21257                           indf2	equ	0xFDF
 21258                           postinc2	equ	0xFDE
 21259                           postdec2	equ	0xFDD
 21260                           plusw2	equ	0xFDB
 21261                           fsr2h	equ	0xFDA
 21262                           fsr2l	equ	0xFD9
 21263                           status	equ	0xFD8
 21264                           
 21265 ;; *************** function _Mdm_HangPhoneCall *****************
 21266 ;; Defined at:
 21267 ;;		line 996 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 21268 ;; Parameters:    Size  Location     Type
 21269 ;;		None
 21270 ;; Auto vars:     Size  Location     Type
 21271 ;;		None
 21272 ;; Return value:  Size  Location     Type
 21273 ;;                  1    wreg      void 
 21274 ;; Registers used:
 21275 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21276 ;; Tracked objects:
 21277 ;;		On entry : 0/0
 21278 ;;		On exit  : 0/0
 21279 ;;		Unchanged: 0/0
 21280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21281 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21282 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21283 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21284 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21285 ;;Total ram usage:        0 bytes
 21286 ;; Hardware stack levels used:    1
 21287 ;; Hardware stack levels required when called:   13
 21288 ;; This function calls:
 21289 ;;		_Uart_WriteConstString
 21290 ;; This function is called by:
 21291 ;;		_MyApp_Task
 21292 ;;		_getSetupCall
 21293 ;; This function uses a non-reentrant model
 21294 ;;
 21295                           
 21296                           	psect	text93
 21297  006794                     __ptext93:
 21298                           	opt stack 0
 21299  006794                     _Mdm_HangPhoneCall:
 21300                           	opt stack 12
 21301                           
 21302                           ;mdm_gsm_gprs.c: 999: Uart_WriteConstString(1, "ATH\r");
 21303                           
 21304                           ; BSR set to: 0
 21305                           ;incstack = 0
 21306  006794  0EF0               	movlw	low STR_6
 21307  006796  0100               	movlb	0	; () banked
 21308  006798  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 21309  00679A  0EFF               	movlw	high STR_6
 21310  00679C  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 21311  00679E  0E01               	movlw	1
 21312  0067A0  EC7A  F02F         	call	_Uart_WriteConstString
 21313  0067A4  0012               	return		;funcret
 21314  0067A6                     __end_of_Mdm_HangPhoneCall:
 21315                           	opt stack 0
 21316                           tosu	equ	0xFFF
 21317                           tosh	equ	0xFFE
 21318                           tosl	equ	0xFFD
 21319                           pclath	equ	0xFFA
 21320                           tblptru	equ	0xFF8
 21321                           tblptrh	equ	0xFF7
 21322                           tblptrl	equ	0xFF6
 21323                           tablat	equ	0xFF5
 21324                           prodh	equ	0xFF4
 21325                           prodl	equ	0xFF3
 21326                           intcon	equ	0xFF2
 21327                           intcon2	equ	0xFF1
 21328                           intcon3	equ	0xFF0
 21329                           indf0	equ	0xFEF
 21330                           postinc0	equ	0xFEE
 21331                           plusw0	equ	0xFEB
 21332                           fsr0h	equ	0xFEA
 21333                           fsr0l	equ	0xFE9
 21334                           wreg	equ	0xFE8
 21335                           indf1	equ	0xFE7
 21336                           postinc1	equ	0xFE6
 21337                           postdec1	equ	0xFE5
 21338                           fsr1h	equ	0xFE2
 21339                           fsr1l	equ	0xFE1
 21340                           indf2	equ	0xFDF
 21341                           postinc2	equ	0xFDE
 21342                           postdec2	equ	0xFDD
 21343                           plusw2	equ	0xFDB
 21344                           fsr2h	equ	0xFDA
 21345                           fsr2l	equ	0xFD9
 21346                           status	equ	0xFD8
 21347                           
 21348 ;; *************** function _saveNumberInMemory *****************
 21349 ;; Defined at:
 21350 ;;		line 108 in file "../Source/c/04_App/app_gate.c"
 21351 ;; Parameters:    Size  Location     Type
 21352 ;;  address         1    wreg     unsigned char 
 21353 ;;  phoneNumber     2   46[BANK0 ] PTR unsigned char 
 21354 ;;		 -> MyApp_Task@emptyNumber(13), RAM(3775), callerNumber(13), 
 21355 ;; Auto vars:     Size  Location     Type
 21356 ;;  address         1   48[BANK0 ] unsigned char 
 21357 ;; Return value:  Size  Location     Type
 21358 ;;                  1    wreg      void 
 21359 ;; Registers used:
 21360 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21361 ;; Tracked objects:
 21362 ;;		On entry : 0/0
 21363 ;;		On exit  : 0/0
 21364 ;;		Unchanged: 0/0
 21365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21366 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21367 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21368 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21369 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21370 ;;Total ram usage:        3 bytes
 21371 ;; Hardware stack levels used:    1
 21372 ;; Hardware stack levels required when called:   14
 21373 ;; This function calls:
 21374 ;;		_Eeprom_Write
 21375 ;; This function is called by:
 21376 ;;		_MyApp_Task
 21377 ;; This function uses a non-reentrant model
 21378 ;;
 21379                           
 21380                           	psect	text94
 21381  00669A                     __ptext94:
 21382                           	opt stack 0
 21383  00669A                     _saveNumberInMemory:
 21384                           	opt stack 13
 21385                           
 21386                           ;incstack = 0
 21387                           ;saveNumberInMemory@address stored from wreg
 21388  00669A  0100               	movlb	0	; () banked
 21389  00669C  6F90               	movwf	saveNumberInMemory@address& (0+255),b
 21390                           
 21391                           ;app_gate.c: 110: Eeprom_Write(address, phoneNumber, ((UINT8)(13)));
 21392  00669E  C08E  F087         	movff	saveNumberInMemory@phoneNumber,Eeprom_Write@WriteBuffer
 21393  0066A2  C08F  F088         	movff	saveNumberInMemory@phoneNumber+1,Eeprom_Write@WriteBuffer+1
 21394  0066A6  0E0D               	movlw	13
 21395  0066A8  0100               	movlb	0	; () banked
 21396  0066AA  6F89               	movwf	Eeprom_Write@DataLength& (0+255),b
 21397  0066AC  5190               	movf	saveNumberInMemory@address& (0+255),w,b
 21398  0066AE  ECD7  F02C         	call	_Eeprom_Write
 21399  0066B2  0012               	return		;funcret
 21400  0066B4                     __end_of_saveNumberInMemory:
 21401                           	opt stack 0
 21402                           tosu	equ	0xFFF
 21403                           tosh	equ	0xFFE
 21404                           tosl	equ	0xFFD
 21405                           pclath	equ	0xFFA
 21406                           tblptru	equ	0xFF8
 21407                           tblptrh	equ	0xFF7
 21408                           tblptrl	equ	0xFF6
 21409                           tablat	equ	0xFF5
 21410                           prodh	equ	0xFF4
 21411                           prodl	equ	0xFF3
 21412                           intcon	equ	0xFF2
 21413                           intcon2	equ	0xFF1
 21414                           intcon3	equ	0xFF0
 21415                           indf0	equ	0xFEF
 21416                           postinc0	equ	0xFEE
 21417                           plusw0	equ	0xFEB
 21418                           fsr0h	equ	0xFEA
 21419                           fsr0l	equ	0xFE9
 21420                           wreg	equ	0xFE8
 21421                           indf1	equ	0xFE7
 21422                           postinc1	equ	0xFE6
 21423                           postdec1	equ	0xFE5
 21424                           fsr1h	equ	0xFE2
 21425                           fsr1l	equ	0xFE1
 21426                           indf2	equ	0xFDF
 21427                           postinc2	equ	0xFDE
 21428                           postdec2	equ	0xFDD
 21429                           plusw2	equ	0xFDB
 21430                           fsr2h	equ	0xFDA
 21431                           fsr2l	equ	0xFD9
 21432                           status	equ	0xFD8
 21433                           
 21434 ;; *************** function _parseCommand *****************
 21435 ;; Defined at:
 21436 ;;		line 90 in file "../Source/c/04_App/app.c"
 21437 ;; Parameters:    Size  Location     Type
 21438 ;;  text            2   40[BANK0 ] PTR unsigned char 
 21439 ;;		 -> smsText(20), 
 21440 ;; Auto vars:     Size  Location     Type
 21441 ;;  deleteNumber    3   45[BANK0 ] const unsigned char [3]
 21442 ;;  addNumberCmd    3   42[BANK0 ] const unsigned char [3]
 21443 ;;  state           1   48[BANK0 ] enum E8992
 21444 ;; Return value:  Size  Location     Type
 21445 ;;                  1    wreg      enum E8992
 21446 ;; Registers used:
 21447 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21448 ;; Tracked objects:
 21449 ;;		On entry : 0/0
 21450 ;;		On exit  : 0/0
 21451 ;;		Unchanged: 0/0
 21452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21453 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21454 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21455 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21456 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21457 ;;Total ram usage:        9 bytes
 21458 ;; Hardware stack levels used:    1
 21459 ;; Hardware stack levels required when called:   12
 21460 ;; This function calls:
 21461 ;;		_StringCompare
 21462 ;;		_isNumberValid
 21463 ;; This function is called by:
 21464 ;;		_MyApp_Task
 21465 ;; This function uses a non-reentrant model
 21466 ;;
 21467                           
 21468                           	psect	text95
 21469  004408                     __ptext95:
 21470                           	opt stack 0
 21471  004408                     _parseCommand:
 21472                           	opt stack 15
 21473                           
 21474                           ;app.c: 92: const uint8_t addNumberCmd[] = {'A', 'D', 'D'};
 21475                           
 21476                           ;incstack = 0
 21477  004408  0E2B               	movlw	low parseCommand@F9017
 21478  00440A  6EF6               	movwf	tblptrl,c
 21479  00440C                     	if	1	;There is more than 1 active tblptr byte
 21480  00440C  0EFC               	movlw	high parseCommand@F9017
 21481  00440E  6EF7               	movwf	tblptrh,c
 21482  004410                     	endif
 21483  004410                     	if	0	;There are less than 3 active tblptr bytes
 21484  004410                     	endif
 21485  004410  0009               	tblrd		*+
 21486  004412  CFF5 F08A          	movff	tablat,parseCommand@addNumberCmd
 21487  004416  0009               	tblrd		*+
 21488  004418  CFF5 F08B          	movff	tablat,parseCommand@addNumberCmd+1
 21489  00441C  000A               	tblrd		*-
 21490  00441E  CFF5 F08C          	movff	tablat,parseCommand@addNumberCmd+2
 21491                           
 21492                           ;app.c: 93: const uint8_t deleteNumberCmd[] = {'D', 'E', 'L'};
 21493  004422  0E28               	movlw	low parseCommand@F9019
 21494  004424  6EF6               	movwf	tblptrl,c
 21495  004426                     	if	1	;There is more than 1 active tblptr byte
 21496  004426  0EFC               	movlw	high parseCommand@F9019
 21497  004428  6EF7               	movwf	tblptrh,c
 21498  00442A                     	endif
 21499  00442A                     	if	0	;There are less than 3 active tblptr bytes
 21500  00442A                     	endif
 21501  00442A  0009               	tblrd		*+
 21502  00442C  CFF5 F08D          	movff	tablat,parseCommand@deleteNumberCmd
 21503  004430  0009               	tblrd		*+
 21504  004432  CFF5 F08E          	movff	tablat,parseCommand@deleteNumberCmd+1
 21505  004436  000A               	tblrd		*-
 21506  004438  CFF5 F08F          	movff	tablat,parseCommand@deleteNumberCmd+2
 21507                           
 21508                           ;app.c: 94: gateFsmStates state = GATE_WAIT_EVENT;
 21509  00443C  0E03               	movlw	3
 21510  00443E  0100               	movlb	0	; () banked
 21511  004440  6F90               	movwf	parseCommand@state& (0+255),b
 21512                           
 21513                           ; BSR set to: 0
 21514                           ;app.c: 96: if (StringCompare(text, addNumberCmd, sizeof(addNumberCmd)))
 21515  004442  C088  F07D         	movff	parseCommand@text,StringCompare@String1
 21516  004446  C089  F07E         	movff	parseCommand@text+1,StringCompare@String1+1
 21517  00444A  0E8A               	movlw	low parseCommand@addNumberCmd
 21518  00444C  6F7F               	movwf	StringCompare@String2& (0+255),b
 21519  00444E  0E00               	movlw	high parseCommand@addNumberCmd
 21520  004450  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 21521  004452  0E00               	movlw	0
 21522  004454  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 21523  004456  0E03               	movlw	3
 21524  004458  6F81               	movwf	StringCompare@Len& (0+255),b
 21525  00445A  EC00  F02D         	call	_StringCompare	;wreg free
 21526  00445E  0900               	iorlw	0
 21527  004460  B4D8               	btfsc	status,2,c
 21528  004462  D002               	goto	l2576
 21529                           
 21530                           ;app.c: 97: {
 21531                           ;app.c: 98: state = GATE_ADD_CMD;
 21532  004464  0E04               	movlw	4
 21533  004466  D013               	goto	L23
 21534  004468                     l2576:
 21535                           
 21536                           ;app.c: 100: else if (StringCompare(text, deleteNumberCmd, sizeof(deleteNumberCmd)))
 21537                           
 21538                           ; BSR set to: 0
 21539  004468  C088  F07D         	movff	parseCommand@text,StringCompare@String1
 21540  00446C  C089  F07E         	movff	parseCommand@text+1,StringCompare@String1+1
 21541  004470  0E8D               	movlw	low parseCommand@deleteNumberCmd
 21542  004472  0100               	movlb	0	; () banked
 21543  004474  6F7F               	movwf	StringCompare@String2& (0+255),b
 21544  004476  0E00               	movlw	high parseCommand@deleteNumberCmd
 21545  004478  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 21546  00447A  0E00               	movlw	0
 21547  00447C  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 21548  00447E  0E03               	movlw	3
 21549  004480  6F81               	movwf	StringCompare@Len& (0+255),b
 21550  004482  EC00  F02D         	call	_StringCompare	;wreg free
 21551  004486  0900               	iorlw	0
 21552  004488  B4D8               	btfsc	status,2,c
 21553  00448A  D003               	goto	l2578
 21554                           
 21555                           ;app.c: 101: {
 21556                           ;app.c: 102: state = GATE_DEL_CMD;
 21557  00448C  0E06               	movlw	6
 21558  00448E                     L23:
 21559  00448E  0100               	movlb	0	; () banked
 21560  004490  6F90               	movwf	parseCommand@state& (0+255),b
 21561  004492                     l2578:
 21562                           
 21563                           ;app.c: 107: }
 21564                           ;app.c: 109: if (!isNumberValid(text + 3))
 21565                           
 21566                           ; BSR set to: 0
 21567                           
 21568                           ; BSR set to: 0
 21569                           
 21570                           ;app.c: 104: else
 21571                           ;app.c: 105: {
 21572                           
 21573                           ; BSR set to: 0
 21574  004492  0E03               	movlw	3
 21575  004494  0100               	movlb	0	; () banked
 21576  004496  2588               	addwf	parseCommand@text& (0+255),w,b
 21577  004498  6F7D               	movwf	isNumberValid@phoneNumber& (0+255),b
 21578  00449A  0E00               	movlw	0
 21579  00449C  2189               	addwfc	(parseCommand@text+1)& (0+255),w,b
 21580  00449E  6F7E               	movwf	(isNumberValid@phoneNumber+1)& (0+255),b
 21581  0044A0  EC65  F02A         	call	_isNumberValid	;wreg free
 21582  0044A4  0900               	iorlw	0
 21583  0044A6  A4D8               	btfss	status,2,c
 21584  0044A8  D003               	goto	l2580
 21585                           
 21586                           ;app.c: 110: {
 21587                           ;app.c: 111: state = GATE_WAIT_EVENT;
 21588  0044AA  0E03               	movlw	3
 21589  0044AC  0100               	movlb	0	; () banked
 21590  0044AE  6F90               	movwf	parseCommand@state& (0+255),b
 21591  0044B0                     l2580:
 21592                           
 21593                           ;app.c: 112: }
 21594                           ;app.c: 113: return state;
 21595  0044B0  0100               	movlb	0	; () banked
 21596  0044B2  5190               	movf	parseCommand@state& (0+255),w,b
 21597  0044B4  0012               	return	
 21598  0044B6                     __end_of_parseCommand:
 21599                           	opt stack 0
 21600                           tosu	equ	0xFFF
 21601                           tosh	equ	0xFFE
 21602                           tosl	equ	0xFFD
 21603                           pclath	equ	0xFFA
 21604                           tblptru	equ	0xFF8
 21605                           tblptrh	equ	0xFF7
 21606                           tblptrl	equ	0xFF6
 21607                           tablat	equ	0xFF5
 21608                           prodh	equ	0xFF4
 21609                           prodl	equ	0xFF3
 21610                           intcon	equ	0xFF2
 21611                           intcon2	equ	0xFF1
 21612                           intcon3	equ	0xFF0
 21613                           indf0	equ	0xFEF
 21614                           postinc0	equ	0xFEE
 21615                           plusw0	equ	0xFEB
 21616                           fsr0h	equ	0xFEA
 21617                           fsr0l	equ	0xFE9
 21618                           wreg	equ	0xFE8
 21619                           indf1	equ	0xFE7
 21620                           postinc1	equ	0xFE6
 21621                           postdec1	equ	0xFE5
 21622                           fsr1h	equ	0xFE2
 21623                           fsr1l	equ	0xFE1
 21624                           indf2	equ	0xFDF
 21625                           postinc2	equ	0xFDE
 21626                           postdec2	equ	0xFDD
 21627                           plusw2	equ	0xFDB
 21628                           fsr2h	equ	0xFDA
 21629                           fsr2l	equ	0xFD9
 21630                           status	equ	0xFD8
 21631                           
 21632 ;; *************** function _isNumberInMemory *****************
 21633 ;; Defined at:
 21634 ;;		line 174 in file "../Source/c/04_App/app_gate.c"
 21635 ;; Parameters:    Size  Location     Type
 21636 ;;  phoneNumber     2    0[BANK1 ] PTR unsigned char 
 21637 ;;		 -> callerNumber(13), 
 21638 ;; Auto vars:     Size  Location     Type
 21639 ;;  readBuffer     13    2[BANK1 ] unsigned char [13]
 21640 ;;  memoryOpResu    1   18[BANK1 ] enum E8244
 21641 ;;  positionInMe    1   17[BANK1 ] unsigned char 
 21642 ;;  searchInProg    1   16[BANK1 ] const unsigned char 
 21643 ;;  searchFailed    1   15[BANK1 ] const unsigned char 
 21644 ;; Return value:  Size  Location     Type
 21645 ;;                  1    wreg      unsigned char 
 21646 ;; Registers used:
 21647 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21648 ;; Tracked objects:
 21649 ;;		On entry : 0/0
 21650 ;;		On exit  : 0/0
 21651 ;;		Unchanged: 0/0
 21652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21653 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21654 ;;      Locals:         0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21655 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21656 ;;      Totals:         0       0      19       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21657 ;;Total ram usage:       19 bytes
 21658 ;; Hardware stack levels used:    1
 21659 ;; Hardware stack levels required when called:   17
 21660 ;; This function calls:
 21661 ;;		_Eeprom_Read
 21662 ;;		_StringCompare
 21663 ;;		_isNumberValid
 21664 ;; This function is called by:
 21665 ;;		_MyApp_Task
 21666 ;; This function uses a non-reentrant model
 21667 ;;
 21668                           
 21669                           	psect	text96
 21670  004E62                     __ptext96:
 21671                           	opt stack 0
 21672  004E62                     _isNumberInMemory:
 21673                           	opt stack 10
 21674                           
 21675                           ;app_gate.c: 176: const uint8_t searchInProgress = 0;
 21676                           
 21677                           ; BSR set to: 0
 21678                           ;incstack = 0
 21679  004E62  0E00               	movlw	0
 21680  004E64  0101               	movlb	1	; () banked
 21681  004E66  6F10               	movwf	isNumberInMemory@searchInProgress& (0+255),b
 21682                           
 21683                           ;app_gate.c: 177: const uint8_t searchFailed = 1;
 21684  004E68  0E01               	movlw	1
 21685  004E6A  6F0F               	movwf	isNumberInMemory@searchFailed& (0+255),b
 21686                           
 21687                           ; BSR set to: 1
 21688                           ;app_gate.c: 178: static uint8_t currentPosition = 16;
 21689                           ;app_gate.c: 179: uint8_t positionInMemory = searchInProgress;
 21690  004E6C  C110  F111         	movff	isNumberInMemory@searchInProgress,isNumberInMemory@positionInMemory
 21691                           
 21692                           ;app_gate.c: 180: uint8_t readBuffer[((UINT8)(13))];
 21693                           ;app_gate.c: 181: EepromStsType memoryOpResult = OP_PENDING;
 21694  004E70  0E02               	movlw	2
 21695  004E72  6F12               	movwf	isNumberInMemory@memoryOpResult& (0+255),b
 21696                           
 21697                           ; BSR set to: 1
 21698                           ;app_gate.c: 183: if (currentPosition >= 16 * 10)
 21699  004E74  0E9F               	movlw	159
 21700  004E76  0100               	movlb	0	; () banked
 21701  004E78  65E2               	cpfsgt	isNumberInMemory@currentPosition& (0+255),b
 21702  004E7A  D002               	goto	l2794
 21703                           
 21704                           ; BSR set to: 0
 21705                           ;app_gate.c: 184: {
 21706                           ;app_gate.c: 185: currentPosition = 16;
 21707  004E7C  0E10               	movlw	16
 21708  004E7E  6FE2               	movwf	isNumberInMemory@currentPosition& (0+255),b
 21709  004E80                     l2794:
 21710                           
 21711                           ; BSR set to: 0
 21712                           ;app_gate.c: 186: }
 21713                           ;app_gate.c: 187: memoryOpResult = Eeprom_Read(currentPosition, readBuffer, ((UINT8)(13)
      +                          ));
 21714                           
 21715                           ; BSR set to: 0
 21716  004E80  0E02               	movlw	low isNumberInMemory@readBuffer
 21717  004E82  6FA9               	movwf	Eeprom_Read@ReadBuffer& (0+255),b
 21718  004E84  0E01               	movlw	high isNumberInMemory@readBuffer
 21719  004E86  6FAA               	movwf	(Eeprom_Read@ReadBuffer+1)& (0+255),b
 21720  004E88  0E0D               	movlw	13
 21721  004E8A  6FAB               	movwf	Eeprom_Read@DataLength& (0+255),b
 21722  004E8C  51E2               	movf	isNumberInMemory@currentPosition& (0+255),w,b
 21723  004E8E  EC59  F02C         	call	_Eeprom_Read
 21724  004E92  0101               	movlb	1	; () banked
 21725  004E94  6F12               	movwf	isNumberInMemory@memoryOpResult& (0+255),b
 21726                           
 21727                           ; BSR set to: 1
 21728                           ;app_gate.c: 188: if (memoryOpResult != OP_PENDING)
 21729  004E96  0E02               	movlw	2
 21730  004E98  1912               	xorwf	isNumberInMemory@memoryOpResult& (0+255),w,b
 21731  004E9A  B4D8               	btfsc	status,2,c
 21732  004E9C  D024               	goto	l2795
 21733                           
 21734                           ; BSR set to: 1
 21735                           ;app_gate.c: 189: {
 21736                           ;app_gate.c: 190: if (isNumberValid(readBuffer))
 21737  004E9E  0E02               	movlw	low isNumberInMemory@readBuffer
 21738  004EA0  0100               	movlb	0	; () banked
 21739  004EA2  6F7D               	movwf	isNumberValid@phoneNumber& (0+255),b
 21740  004EA4  0E01               	movlw	high isNumberInMemory@readBuffer
 21741  004EA6  6F7E               	movwf	(isNumberValid@phoneNumber+1)& (0+255),b
 21742  004EA8  EC65  F02A         	call	_isNumberValid	;wreg free
 21743  004EAC  0900               	iorlw	0
 21744  004EAE  B4D8               	btfsc	status,2,c
 21745  004EB0  D017               	goto	l2797
 21746                           
 21747                           ;app_gate.c: 191: {
 21748                           ;app_gate.c: 192: if (StringCompare(phoneNumber, readBuffer, ((UINT8)(13))))
 21749  004EB2  C100  F07D         	movff	isNumberInMemory@phoneNumber,StringCompare@String1
 21750  004EB6  C101  F07E         	movff	isNumberInMemory@phoneNumber+1,StringCompare@String1+1
 21751  004EBA  0E02               	movlw	low isNumberInMemory@readBuffer
 21752  004EBC  0100               	movlb	0	; () banked
 21753  004EBE  6F7F               	movwf	StringCompare@String2& (0+255),b
 21754  004EC0  0E01               	movlw	high isNumberInMemory@readBuffer
 21755  004EC2  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 21756  004EC4  0E00               	movlw	0
 21757  004EC6  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 21758  004EC8  0E0D               	movlw	13
 21759  004ECA  6F81               	movwf	StringCompare@Len& (0+255),b
 21760  004ECC  EC00  F02D         	call	_StringCompare	;wreg free
 21761  004ED0  0900               	iorlw	0
 21762  004ED2  B4D8               	btfsc	status,2,c
 21763  004ED4  D005               	goto	l2797
 21764                           
 21765                           ;app_gate.c: 193: {
 21766                           ;app_gate.c: 194: positionInMemory = currentPosition;
 21767  004ED6  C0E2  F111         	movff	isNumberInMemory@currentPosition,isNumberInMemory@positionInMemory
 21768                           
 21769                           ;app_gate.c: 195: currentPosition = 16 * 10;
 21770  004EDA  0EA0               	movlw	160
 21771  004EDC  0100               	movlb	0	; () banked
 21772  004EDE  6FE2               	movwf	isNumberInMemory@currentPosition& (0+255),b
 21773  004EE0                     l2797:
 21774                           
 21775                           ;app_gate.c: 200: }
 21776                           ;app_gate.c: 201: }
 21777                           ;app_gate.c: 202: currentPosition += 16;
 21778                           
 21779                           ; BSR set to: 0
 21780                           
 21781                           ; BSR set to: 0
 21782                           
 21783                           ;app_gate.c: 197: else
 21784                           ;app_gate.c: 198: {
 21785                           
 21786                           ; BSR set to: 0
 21787  004EE0  0E10               	movlw	16
 21788  004EE2  0100               	movlb	0	; () banked
 21789  004EE4  27E2               	addwf	isNumberInMemory@currentPosition& (0+255),f,b
 21790  004EE6                     l2795:
 21791                           
 21792                           ;app_gate.c: 203: }
 21793                           ;app_gate.c: 204: return positionInMemory;
 21794                           
 21795                           ; BSR set to: 0
 21796  004EE6  0101               	movlb	1	; () banked
 21797  004EE8  5111               	movf	isNumberInMemory@positionInMemory& (0+255),w,b
 21798  004EEA  0012               	return	
 21799  004EEC                     __end_of_isNumberInMemory:
 21800                           	opt stack 0
 21801                           tosu	equ	0xFFF
 21802                           tosh	equ	0xFFE
 21803                           tosl	equ	0xFFD
 21804                           pclath	equ	0xFFA
 21805                           tblptru	equ	0xFF8
 21806                           tblptrh	equ	0xFF7
 21807                           tblptrl	equ	0xFF6
 21808                           tablat	equ	0xFF5
 21809                           prodh	equ	0xFF4
 21810                           prodl	equ	0xFF3
 21811                           intcon	equ	0xFF2
 21812                           intcon2	equ	0xFF1
 21813                           intcon3	equ	0xFF0
 21814                           indf0	equ	0xFEF
 21815                           postinc0	equ	0xFEE
 21816                           plusw0	equ	0xFEB
 21817                           fsr0h	equ	0xFEA
 21818                           fsr0l	equ	0xFE9
 21819                           wreg	equ	0xFE8
 21820                           indf1	equ	0xFE7
 21821                           postinc1	equ	0xFE6
 21822                           postdec1	equ	0xFE5
 21823                           fsr1h	equ	0xFE2
 21824                           fsr1l	equ	0xFE1
 21825                           indf2	equ	0xFDF
 21826                           postinc2	equ	0xFDE
 21827                           postdec2	equ	0xFDD
 21828                           plusw2	equ	0xFDB
 21829                           fsr2h	equ	0xFDA
 21830                           fsr2l	equ	0xFD9
 21831                           status	equ	0xFD8
 21832                           
 21833 ;; *************** function _initMemorizedNumbersCount *****************
 21834 ;; Defined at:
 21835 ;;		line 117 in file "../Source/c/04_App/app_gate.c"
 21836 ;; Parameters:    Size  Location     Type
 21837 ;;		None
 21838 ;; Auto vars:     Size  Location     Type
 21839 ;;		None
 21840 ;; Return value:  Size  Location     Type
 21841 ;;                  1    wreg      void 
 21842 ;; Registers used:
 21843 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21844 ;; Tracked objects:
 21845 ;;		On entry : 0/0
 21846 ;;		On exit  : 0/0
 21847 ;;		Unchanged: 0/0
 21848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21849 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21850 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21851 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21852 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21853 ;;Total ram usage:        0 bytes
 21854 ;; Hardware stack levels used:    1
 21855 ;; Hardware stack levels required when called:   14
 21856 ;; This function calls:
 21857 ;;		_Eeprom_Write
 21858 ;;		_initPreamble
 21859 ;; This function is called by:
 21860 ;;		_MyApp_Task
 21861 ;; This function uses a non-reentrant model
 21862 ;;
 21863                           
 21864                           	psect	text97
 21865  0066B4                     __ptext97:
 21866                           	opt stack 0
 21867  0066B4                     _initMemorizedNumbersCount:
 21868                           	opt stack 13
 21869                           
 21870                           ;app_gate.c: 119: Eeprom_Write(0, initPreamble(), 5);
 21871                           
 21872                           ; BSR set to: 1
 21873                           ;incstack = 0
 21874  0066B4  ECF5  F031         	call	_initPreamble	;wreg free
 21875  0066B8  C07D  F087         	movff	?_initPreamble,Eeprom_Write@WriteBuffer
 21876  0066BC  C07E  F088         	movff	?_initPreamble+1,Eeprom_Write@WriteBuffer+1
 21877  0066C0  0E05               	movlw	5
 21878  0066C2  0100               	movlb	0	; () banked
 21879  0066C4  6F89               	movwf	Eeprom_Write@DataLength& (0+255),b
 21880  0066C6  0E00               	movlw	0
 21881  0066C8  ECD7  F02C         	call	_Eeprom_Write
 21882  0066CC  0012               	return		;funcret
 21883  0066CE                     __end_of_initMemorizedNumbersCount:
 21884                           	opt stack 0
 21885                           tosu	equ	0xFFF
 21886                           tosh	equ	0xFFE
 21887                           tosl	equ	0xFFD
 21888                           pclath	equ	0xFFA
 21889                           tblptru	equ	0xFF8
 21890                           tblptrh	equ	0xFF7
 21891                           tblptrl	equ	0xFF6
 21892                           tablat	equ	0xFF5
 21893                           prodh	equ	0xFF4
 21894                           prodl	equ	0xFF3
 21895                           intcon	equ	0xFF2
 21896                           intcon2	equ	0xFF1
 21897                           intcon3	equ	0xFF0
 21898                           indf0	equ	0xFEF
 21899                           postinc0	equ	0xFEE
 21900                           plusw0	equ	0xFEB
 21901                           fsr0h	equ	0xFEA
 21902                           fsr0l	equ	0xFE9
 21903                           wreg	equ	0xFE8
 21904                           indf1	equ	0xFE7
 21905                           postinc1	equ	0xFE6
 21906                           postdec1	equ	0xFE5
 21907                           fsr1h	equ	0xFE2
 21908                           fsr1l	equ	0xFE1
 21909                           indf2	equ	0xFDF
 21910                           postinc2	equ	0xFDE
 21911                           postdec2	equ	0xFDD
 21912                           plusw2	equ	0xFDB
 21913                           fsr2h	equ	0xFDA
 21914                           fsr2l	equ	0xFD9
 21915                           status	equ	0xFD8
 21916                           
 21917 ;; *************** function _initPreamble *****************
 21918 ;; Defined at:
 21919 ;;		line 213 in file "../Source/c/04_App/app_init.c"
 21920 ;; Parameters:    Size  Location     Type
 21921 ;;		None
 21922 ;; Auto vars:     Size  Location     Type
 21923 ;;		None
 21924 ;; Return value:  Size  Location     Type
 21925 ;;                  2   29[BANK0 ] PTR unsigned char 
 21926 ;; Registers used:
 21927 ;;		wreg, status,2, status,0
 21928 ;; Tracked objects:
 21929 ;;		On entry : 0/0
 21930 ;;		On exit  : 0/0
 21931 ;;		Unchanged: 0/0
 21932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21933 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21934 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21936 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21937 ;;Total ram usage:        2 bytes
 21938 ;; Hardware stack levels used:    1
 21939 ;; Hardware stack levels required when called:   11
 21940 ;; This function calls:
 21941 ;;		Nothing
 21942 ;; This function is called by:
 21943 ;;		_initMemorizedNumbersCount
 21944 ;; This function uses a non-reentrant model
 21945 ;;
 21946                           
 21947                           	psect	text98
 21948  0063EA                     __ptext98:
 21949                           	opt stack 0
 21950  0063EA                     _initPreamble:
 21951                           	opt stack 15
 21952                           
 21953                           ;app_init.c: 215: memoryPreamble[0] = 'U';
 21954                           
 21955                           ;incstack = 0
 21956  0063EA  0E55               	movlw	85
 21957  0063EC  0103               	movlb	3	; () banked
 21958  0063EE  6F94               	movwf	_memoryPreamble& (0+255),b
 21959                           
 21960                           ;app_init.c: 216: memoryPreamble[1] = 'S';
 21961  0063F0  0E53               	movlw	83
 21962  0063F2  6F95               	movwf	(_memoryPreamble+1)& (0+255),b
 21963                           
 21964                           ;app_init.c: 217: memoryPreamble[2] = 'I';
 21965  0063F4  0E49               	movlw	73
 21966  0063F6  6F96               	movwf	(_memoryPreamble+2)& (0+255),b
 21967                           
 21968                           ;app_init.c: 218: memoryPreamble[3] = 'M';
 21969  0063F8  0E4D               	movlw	77
 21970  0063FA  6F97               	movwf	(_memoryPreamble+3)& (0+255),b
 21971                           
 21972                           ;app_init.c: 219: memoryPreamble[4] = 1;
 21973  0063FC  0E01               	movlw	1
 21974  0063FE  6F98               	movwf	(_memoryPreamble+4)& (0+255),b
 21975                           
 21976                           ;app_init.c: 220: memorizedNumbersCount[0] = 1;
 21977  006400  0E01               	movlw	1
 21978  006402  6E38               	movwf	_memorizedNumbersCount,c
 21979                           
 21980                           ; BSR set to: 3
 21981                           ;app_init.c: 221: return memoryPreamble;
 21982  006404  0E94               	movlw	low _memoryPreamble
 21983  006406  0100               	movlb	0	; () banked
 21984  006408  6F7D               	movwf	?_initPreamble& (0+255),b
 21985  00640A  0E03               	movlw	high _memoryPreamble
 21986  00640C  6F7E               	movwf	(?_initPreamble+1)& (0+255),b
 21987  00640E  0012               	return	
 21988  006410                     __end_of_initPreamble:
 21989                           	opt stack 0
 21990                           tosu	equ	0xFFF
 21991                           tosh	equ	0xFFE
 21992                           tosl	equ	0xFFD
 21993                           pclath	equ	0xFFA
 21994                           tblptru	equ	0xFF8
 21995                           tblptrh	equ	0xFF7
 21996                           tblptrl	equ	0xFF6
 21997                           tablat	equ	0xFF5
 21998                           prodh	equ	0xFF4
 21999                           prodl	equ	0xFF3
 22000                           intcon	equ	0xFF2
 22001                           intcon2	equ	0xFF1
 22002                           intcon3	equ	0xFF0
 22003                           indf0	equ	0xFEF
 22004                           postinc0	equ	0xFEE
 22005                           plusw0	equ	0xFEB
 22006                           fsr0h	equ	0xFEA
 22007                           fsr0l	equ	0xFE9
 22008                           wreg	equ	0xFE8
 22009                           indf1	equ	0xFE7
 22010                           postinc1	equ	0xFE6
 22011                           postdec1	equ	0xFE5
 22012                           fsr1h	equ	0xFE2
 22013                           fsr1l	equ	0xFE1
 22014                           indf2	equ	0xFDF
 22015                           postinc2	equ	0xFDE
 22016                           postdec2	equ	0xFDD
 22017                           plusw2	equ	0xFDB
 22018                           fsr2h	equ	0xFDA
 22019                           fsr2l	equ	0xFD9
 22020                           status	equ	0xFD8
 22021                           
 22022 ;; *************** function _Eeprom_Write *****************
 22023 ;; Defined at:
 22024 ;;		line 78 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/05_Eeprom/eeprom_if.c"
 22025 ;; Parameters:    Size  Location     Type
 22026 ;;  MemoryAddres    1    wreg     unsigned char 
 22027 ;;  WriteBuffer     2   39[BANK0 ] PTR unsigned char 
 22028 ;;		 -> memorizedNumbersCount(1), memoryPreamble(5), MyApp_Task@emptyNumber(13), RAM(3775), 
 22029 ;;		 -> callerNumber(13), 
 22030 ;;  DataLength      1   41[BANK0 ] unsigned char 
 22031 ;; Auto vars:     Size  Location     Type
 22032 ;;  MemoryAddres    1   43[BANK0 ] unsigned char 
 22033 ;;  CommandLengt    1   45[BANK0 ] const unsigned char 
 22034 ;;  SlaveAddress    1   44[BANK0 ] const unsigned char 
 22035 ;;  WriteSts        1   42[BANK0 ] unsigned char 
 22036 ;; Return value:  Size  Location     Type
 22037 ;;                  1    wreg      unsigned char 
 22038 ;; Registers used:
 22039 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 22040 ;; Tracked objects:
 22041 ;;		On entry : 0/0
 22042 ;;		On exit  : 0/0
 22043 ;;		Unchanged: 0/0
 22044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22045 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22046 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22048 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22049 ;;Total ram usage:        7 bytes
 22050 ;; Hardware stack levels used:    1
 22051 ;; Hardware stack levels required when called:   13
 22052 ;; This function calls:
 22053 ;;		_I2cSlv_SendI2cMsg
 22054 ;;		_StringCopy
 22055 ;; This function is called by:
 22056 ;;		_saveNumberInMemory
 22057 ;;		_initMemorizedNumbersCount
 22058 ;;		_incrementMemorizedNumbersCount
 22059 ;;		_decrementMemorizedNumbersCount
 22060 ;; This function uses a non-reentrant model
 22061 ;;
 22062                           
 22063                           	psect	text99
 22064  0059AE                     __ptext99:
 22065                           	opt stack 0
 22066  0059AE                     _Eeprom_Write:
 22067                           	opt stack 13
 22068                           
 22069                           ; BSR set to: 0
 22070                           ;incstack = 0
 22071                           ;Eeprom_Write@MemoryAddress stored from wreg
 22072  0059AE  0100               	movlb	0	; () banked
 22073  0059B0  6F8B               	movwf	Eeprom_Write@MemoryAddress& (0+255),b
 22074                           
 22075                           ;eeprom_if.c: 80: const UINT8 SlaveAddress = 0x50;
 22076  0059B2  0E50               	movlw	80
 22077  0059B4  0100               	movlb	0	; () banked
 22078  0059B6  6F8C               	movwf	Eeprom_Write@SlaveAddress& (0+255),b
 22079                           
 22080                           ; BSR set to: 0
 22081                           ;eeprom_if.c: 81: const UINT8 CommandLength = DataLength + 1;
 22082  0059B8  2989               	incf	Eeprom_Write@DataLength& (0+255),w,b
 22083  0059BA  6F8D               	movwf	Eeprom_Write@CommandLength& (0+255),b
 22084                           
 22085                           ; BSR set to: 0
 22086                           ;eeprom_if.c: 82: UINT8 WriteSts = 0u;
 22087  0059BC  0E00               	movlw	0
 22088  0059BE  6F8A               	movwf	Eeprom_Write@WriteSts& (0+255),b
 22089                           
 22090                           ; BSR set to: 0
 22091                           ;eeprom_if.c: 84: if (CommandLength <= 15)
 22092  0059C0  0E10               	movlw	16
 22093  0059C2  618D               	cpfslt	Eeprom_Write@CommandLength& (0+255),b
 22094  0059C4  0012               	return	
 22095                           
 22096                           ; BSR set to: 0
 22097                           ;eeprom_if.c: 85: {
 22098                           ;eeprom_if.c: 86: EepromBuffer[0] = MemoryAddress;
 22099  0059C6  C08B  F4BD         	movff	Eeprom_Write@MemoryAddress,_EepromBuffer
 22100                           
 22101                           ; BSR set to: 0
 22102                           ;eeprom_if.c: 87: StringCopy(WriteBuffer, EepromBuffer + 1, DataLength);
 22103  0059CA  C087  F07D         	movff	Eeprom_Write@WriteBuffer,StringCopy@SourceStr
 22104  0059CE  C088  F07E         	movff	Eeprom_Write@WriteBuffer+1,StringCopy@SourceStr+1
 22105  0059D2  0EBE               	movlw	low (_EepromBuffer+1)
 22106  0059D4  6F7F               	movwf	StringCopy@DestStr& (0+255),b
 22107  0059D6  0E04               	movlw	high (_EepromBuffer+1)
 22108  0059D8  6F80               	movwf	(StringCopy@DestStr+1)& (0+255),b
 22109  0059DA  C089  F081         	movff	Eeprom_Write@DataLength,StringCopy@Len
 22110  0059DE  6B82               	clrf	(StringCopy@Len+1)& (0+255),b
 22111  0059E0  EC98  F02A         	call	_StringCopy	;wreg free
 22112                           
 22113                           ;eeprom_if.c: 89: WriteSts = I2cSlv_SendI2cMsg(EepromBuffer, SlaveAddress, CommandLength
      +                          );
 22114  0059E4  0EBD               	movlw	low _EepromBuffer
 22115  0059E6  0100               	movlb	0	; () banked
 22116  0059E8  6F80               	movwf	I2cSlv_SendI2cMsg@TxBuffer& (0+255),b
 22117  0059EA  0E04               	movlw	high _EepromBuffer
 22118  0059EC  6F81               	movwf	(I2cSlv_SendI2cMsg@TxBuffer+1)& (0+255),b
 22119  0059EE  C08C  F082         	movff	Eeprom_Write@SlaveAddress,I2cSlv_SendI2cMsg@SlaveAddr
 22120  0059F2  C08D  F083         	movff	Eeprom_Write@CommandLength,I2cSlv_SendI2cMsg@DataLenght
 22121  0059F6  ECFB  F02F         	call	_I2cSlv_SendI2cMsg	;wreg free
 22122  0059FA  0100               	movlb	0	; () banked
 22123  0059FC  6F8A               	movwf	Eeprom_Write@WriteSts& (0+255),b
 22124                           
 22125                           ; BSR set to: 0
 22126  0059FE  0012               	return	
 22127  005A00                     __end_of_Eeprom_Write:
 22128                           	opt stack 0
 22129                           tosu	equ	0xFFF
 22130                           tosh	equ	0xFFE
 22131                           tosl	equ	0xFFD
 22132                           pclath	equ	0xFFA
 22133                           tblptru	equ	0xFF8
 22134                           tblptrh	equ	0xFF7
 22135                           tblptrl	equ	0xFF6
 22136                           tablat	equ	0xFF5
 22137                           prodh	equ	0xFF4
 22138                           prodl	equ	0xFF3
 22139                           intcon	equ	0xFF2
 22140                           intcon2	equ	0xFF1
 22141                           intcon3	equ	0xFF0
 22142                           indf0	equ	0xFEF
 22143                           postinc0	equ	0xFEE
 22144                           plusw0	equ	0xFEB
 22145                           fsr0h	equ	0xFEA
 22146                           fsr0l	equ	0xFE9
 22147                           wreg	equ	0xFE8
 22148                           indf1	equ	0xFE7
 22149                           postinc1	equ	0xFE6
 22150                           postdec1	equ	0xFE5
 22151                           fsr1h	equ	0xFE2
 22152                           fsr1l	equ	0xFE1
 22153                           indf2	equ	0xFDF
 22154                           postinc2	equ	0xFDE
 22155                           postdec2	equ	0xFDD
 22156                           plusw2	equ	0xFDB
 22157                           fsr2h	equ	0xFDA
 22158                           fsr2l	equ	0xFD9
 22159                           status	equ	0xFD8
 22160                           
 22161 ;; *************** function _initFsm *****************
 22162 ;; Defined at:
 22163 ;;		line 177 in file "../Source/c/04_App/app_init.c"
 22164 ;; Parameters:    Size  Location     Type
 22165 ;;		None
 22166 ;; Auto vars:     Size  Location     Type
 22167 ;;  isInitialize    1    3[BANK1 ] unsigned char 
 22168 ;; Return value:  Size  Location     Type
 22169 ;;                  1    wreg      unsigned char 
 22170 ;; Registers used:
 22171 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22172 ;; Tracked objects:
 22173 ;;		On entry : 0/0
 22174 ;;		On exit  : 0/0
 22175 ;;		Unchanged: 0/0
 22176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22177 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22178 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22180 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22181 ;;Total ram usage:        1 bytes
 22182 ;; Hardware stack levels used:    1
 22183 ;; Hardware stack levels required when called:   18
 22184 ;; This function calls:
 22185 ;;		_initEeprom
 22186 ;;		_initGprsModem
 22187 ;; This function is called by:
 22188 ;;		_MyApp_Task
 22189 ;; This function uses a non-reentrant model
 22190 ;;
 22191                           
 22192                           	psect	text100
 22193  005D56                     __ptext100:
 22194                           	opt stack 0
 22195  005D56                     _initFsm:
 22196                           	opt stack 9
 22197                           
 22198                           ;app_init.c: 179: static initFsmStates currentState = INIT_FSM_MODEM;
 22199                           ;app_init.c: 180: bool isInitialized = 0;
 22200                           
 22201                           ; BSR set to: 0
 22202                           ;incstack = 0
 22203  005D56  0E00               	movlw	0
 22204  005D58  0101               	movlb	1	; () banked
 22205  005D5A  6F03               	movwf	initFsm@isInitialized& (0+255),b
 22206                           
 22207                           ;app_init.c: 182: switch (currentState)
 22208  005D5C  D013               	goto	l2698
 22209  005D5E                     
 22210                           ; BSR set to: 1
 22211                           ;app_init.c: 185: if (initGprsModem())
 22212                           
 22213                           ; BSR set to: 1
 22214  005D5E  EC14  F026         	call	_initGprsModem	;wreg free
 22215  005D62  0900               	iorlw	0
 22216  005D64  B4D8               	btfsc	status,2,c
 22217  005D66  D018               	goto	l2701
 22218                           
 22219                           ;app_init.c: 186: {
 22220                           ;app_init.c: 187: currentState = INIT_FSM_EEPROM;
 22221  005D68  0E01               	movlw	1
 22222  005D6A  D006               	goto	L24
 22223  005D6C                     
 22224                           ; BSR set to: 1
 22225                           ;app_init.c: 192: if (initEeprom())
 22226                           
 22227                           ; BSR set to: 1
 22228  005D6C  EC76  F027         	call	_initEeprom	;wreg free
 22229  005D70  0900               	iorlw	0
 22230  005D72  B4D8               	btfsc	status,2,c
 22231  005D74  D011               	goto	l2701
 22232                           
 22233                           ;app_init.c: 193: {
 22234                           ;app_init.c: 194: currentState = INIT_FSM_COMPLETE;
 22235  005D76  0E02               	movlw	2
 22236  005D78                     L24:
 22237  005D78  0101               	movlb	1	; () banked
 22238  005D7A  6FD3               	movwf	initFsm@currentState& (0+255),b
 22239                           
 22240                           ; BSR set to: 1
 22241                           ;app_init.c: 195: }
 22242                           ;app_init.c: 196: break;
 22243  005D7C  D00D               	goto	l2701
 22244  005D7E                     
 22245                           ; BSR set to: 1
 22246                           ;app_init.c: 199: isInitialized = 1;
 22247                           
 22248                           ; BSR set to: 1
 22249  005D7E  0E01               	movlw	1
 22250  005D80  6F03               	movwf	initFsm@isInitialized& (0+255),b
 22251                           
 22252                           ; BSR set to: 1
 22253                           ;app_init.c: 204: }
 22254                           
 22255                           ; BSR set to: 1
 22256                           ;app_init.c: 203: break;
 22257                           
 22258                           ;app_init.c: 202: default:
 22259                           
 22260                           ;app_init.c: 200: break;
 22261  005D82  D00A               	goto	l2701
 22262  005D84                     l2698:
 22263                           
 22264                           ; BSR set to: 1
 22265                           
 22266                           ; BSR set to: 1
 22267  005D84  51D3               	movf	initFsm@currentState& (0+255),w,b
 22268                           
 22269                           ; Switch size 1, requested type "space"
 22270                           ; Number of cases is 3, Range of values is 0 to 2
 22271                           ; switch strategies available:
 22272                           ; Name         Instructions Cycles
 22273                           ; simple_byte           10     6 (average)
 22274                           ;	Chosen strategy is simple_byte
 22275  005D86  0A00               	xorlw	0	; case 0
 22276  005D88  B4D8               	btfsc	status,2,c
 22277  005D8A  D7E9               	goto	l2699
 22278  005D8C  0A01               	xorlw	1	; case 1
 22279  005D8E  B4D8               	btfsc	status,2,c
 22280  005D90  D7ED               	goto	l2702
 22281  005D92  0A03               	xorlw	3	; case 2
 22282  005D94  B4D8               	btfsc	status,2,c
 22283  005D96  D7F3               	goto	l2704
 22284  005D98                     l2701:
 22285                           
 22286                           ;app_init.c: 205: return isInitialized;
 22287                           
 22288                           ; BSR set to: 1
 22289  005D98  0101               	movlb	1	; () banked
 22290  005D9A  5103               	movf	initFsm@isInitialized& (0+255),w,b
 22291  005D9C  0012               	return	
 22292  005D9E                     __end_of_initFsm:
 22293                           	opt stack 0
 22294                           tosu	equ	0xFFF
 22295                           tosh	equ	0xFFE
 22296                           tosl	equ	0xFFD
 22297                           pclath	equ	0xFFA
 22298                           tblptru	equ	0xFF8
 22299                           tblptrh	equ	0xFF7
 22300                           tblptrl	equ	0xFF6
 22301                           tablat	equ	0xFF5
 22302                           prodh	equ	0xFF4
 22303                           prodl	equ	0xFF3
 22304                           intcon	equ	0xFF2
 22305                           intcon2	equ	0xFF1
 22306                           intcon3	equ	0xFF0
 22307                           indf0	equ	0xFEF
 22308                           postinc0	equ	0xFEE
 22309                           plusw0	equ	0xFEB
 22310                           fsr0h	equ	0xFEA
 22311                           fsr0l	equ	0xFE9
 22312                           wreg	equ	0xFE8
 22313                           indf1	equ	0xFE7
 22314                           postinc1	equ	0xFE6
 22315                           postdec1	equ	0xFE5
 22316                           fsr1h	equ	0xFE2
 22317                           fsr1l	equ	0xFE1
 22318                           indf2	equ	0xFDF
 22319                           postinc2	equ	0xFDE
 22320                           postdec2	equ	0xFDD
 22321                           plusw2	equ	0xFDB
 22322                           fsr2h	equ	0xFDA
 22323                           fsr2l	equ	0xFD9
 22324                           status	equ	0xFD8
 22325                           
 22326 ;; *************** function _initGprsModem *****************
 22327 ;; Defined at:
 22328 ;;		line 84 in file "../Source/c/04_App/app_init.c"
 22329 ;; Parameters:    Size  Location     Type
 22330 ;;		None
 22331 ;; Auto vars:     Size  Location     Type
 22332 ;;  isInitialize    1   57[BANK0 ] unsigned char 
 22333 ;; Return value:  Size  Location     Type
 22334 ;;                  1    wreg      unsigned char 
 22335 ;; Registers used:
 22336 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22337 ;; Tracked objects:
 22338 ;;		On entry : 0/0
 22339 ;;		On exit  : 0/0
 22340 ;;		Unchanged: 0/0
 22341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22343 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22345 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22346 ;;Total ram usage:        1 bytes
 22347 ;; Hardware stack levels used:    1
 22348 ;; Hardware stack levels required when called:   14
 22349 ;; This function calls:
 22350 ;;		_Mdm_SetSmsFormat
 22351 ;;		_Uart_WriteConstString
 22352 ;;		_secondsAppTimer
 22353 ;; This function is called by:
 22354 ;;		_initFsm
 22355 ;; This function uses a non-reentrant model
 22356 ;;
 22357                           
 22358                           	psect	text101
 22359  004C28                     __ptext101:
 22360                           	opt stack 0
 22361  004C28                     _initGprsModem:
 22362                           	opt stack 12
 22363                           
 22364                           ;app_init.c: 86: static uint16_t modemCounter = 0;
 22365                           ;app_init.c: 87: static modemStates currentState = MODEM_INIT;
 22366                           ;app_init.c: 88: bool isInitialized = 0;
 22367                           
 22368                           ; BSR set to: 1
 22369                           ;incstack = 0
 22370  004C28  0E00               	movlw	0
 22371  004C2A  0100               	movlb	0	; () banked
 22372  004C2C  6F99               	movwf	initGprsModem@isInitialized& (0+255),b
 22373                           
 22374                           ;app_init.c: 90: switch(currentState)
 22375  004C2E  D033               	goto	l2668
 22376  004C30                     
 22377                           ;app_init.c: 93: if (MdmStatus == ModemConfigured || MdmStatus == ModemOn)
 22378                           
 22379                           ; BSR set to: 0
 22380  004C30  0E03               	movlw	3
 22381  004C32  0100               	movlb	0	; () banked
 22382  004C34  19D0               	xorwf	_MdmStatus& (0+255),w,b
 22383  004C36  B4D8               	btfsc	status,2,c
 22384  004C38  D003               	goto	u14110
 22385                           
 22386                           ; BSR set to: 0
 22387  004C3A  05D0               	decf	_MdmStatus& (0+255),w,b
 22388  004C3C  A4D8               	btfss	status,2,c
 22389  004C3E  D039               	goto	l2674
 22390  004C40                     u14110:
 22391                           
 22392                           ; BSR set to: 0
 22393                           ;app_init.c: 94: {
 22394                           ;app_init.c: 95: if (secondsAppTimer(5, &modemCounter, 0))
 22395                           
 22396                           ; BSR set to: 0
 22397  004C40  0EB5               	movlw	low initGprsModem@modemCounter
 22398  004C42  6F8A               	movwf	secondsAppTimer@counter& (0+255),b
 22399  004C44  0E03               	movlw	high initGprsModem@modemCounter
 22400  004C46  6F8B               	movwf	(secondsAppTimer@counter+1)& (0+255),b
 22401  004C48  0E00               	movlw	0
 22402  004C4A  6F8C               	movwf	secondsAppTimer@isCyclic& (0+255),b
 22403  004C4C  0E05               	movlw	5
 22404  004C4E  ECAE  F023         	call	_secondsAppTimer
 22405  004C52  0900               	iorlw	0
 22406  004C54  B4D8               	btfsc	status,2,c
 22407  004C56  D02D               	goto	l2674
 22408                           
 22409                           ;app_init.c: 96: {
 22410                           ;app_init.c: 97: Mdm_SetSmsFormat(1);
 22411  004C58  0E01               	movlw	1
 22412  004C5A  EC79  F02D         	call	_Mdm_SetSmsFormat
 22413                           
 22414                           ;app_init.c: 98: currentState = MODEM_DELETE_SMS;
 22415  004C5E  0E01               	movlw	1
 22416  004C60  D013               	goto	L26
 22417  004C62                     
 22418                           ; BSR set to: 1
 22419                           ;app_init.c: 104: Uart_WriteConstString(1,"AT+CMGDA=DEL ALL\r\n");
 22420                           
 22421                           ; BSR set to: 1
 22422  004C62  0EFA               	movlw	low STR_31
 22423  004C64  0100               	movlb	0	; () banked
 22424  004C66  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 22425  004C68  0EFE               	movlw	high STR_31
 22426  004C6A  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 22427  004C6C  0E01               	movlw	1
 22428  004C6E  EC7A  F02F         	call	_Uart_WriteConstString
 22429                           
 22430                           ;app_init.c: 105: currentState = MODEM_SET_CALLER_ID;
 22431  004C72  0E02               	movlw	2
 22432  004C74  D009               	goto	L26
 22433  004C76                     
 22434                           ; BSR set to: 1
 22435                           ;app_init.c: 109: Uart_WriteConstString(1,"AT+CLIP=1\r\n");
 22436                           
 22437                           ; BSR set to: 1
 22438  004C76  0EAA               	movlw	low STR_32
 22439  004C78  0100               	movlb	0	; () banked
 22440  004C7A  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 22441  004C7C  0EFF               	movlw	high STR_32
 22442  004C7E  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 22443  004C80  0E01               	movlw	1
 22444  004C82  EC7A  F02F         	call	_Uart_WriteConstString
 22445                           
 22446                           ;app_init.c: 110: currentState = MODEM_INIT_COMPLETE;
 22447  004C86  0E03               	movlw	3
 22448  004C88                     L26:
 22449  004C88  0101               	movlb	1	; () banked
 22450  004C8A  6FD5               	movwf	initGprsModem@currentState& (0+255),b
 22451                           
 22452                           ;app_init.c: 111: break;
 22453  004C8C  D012               	goto	l2674
 22454  004C8E                     
 22455                           ; BSR set to: 1
 22456                           ;app_init.c: 114: isInitialized = 1;
 22457                           
 22458                           ; BSR set to: 1
 22459  004C8E  0E01               	movlw	1
 22460  004C90  0100               	movlb	0	; () banked
 22461  004C92  6F99               	movwf	initGprsModem@isInitialized& (0+255),b
 22462                           
 22463                           ; BSR set to: 0
 22464                           ;app_init.c: 119: }
 22465                           
 22466                           ; BSR set to: 0
 22467                           ;app_init.c: 118: break;
 22468                           
 22469                           ;app_init.c: 117: default:
 22470                           
 22471                           ;app_init.c: 115: break;
 22472  004C94  D00E               	goto	l2674
 22473  004C96                     l2668:
 22474                           
 22475                           ; BSR set to: 0
 22476                           
 22477                           ; BSR set to: 0
 22478  004C96  0101               	movlb	1	; () banked
 22479  004C98  51D5               	movf	initGprsModem@currentState& (0+255),w,b
 22480                           
 22481                           ; Switch size 1, requested type "space"
 22482                           ; Number of cases is 4, Range of values is 0 to 3
 22483                           ; switch strategies available:
 22484                           ; Name         Instructions Cycles
 22485                           ; simple_byte           13     7 (average)
 22486                           ;	Chosen strategy is simple_byte
 22487  004C9A  0A00               	xorlw	0	; case 0
 22488  004C9C  B4D8               	btfsc	status,2,c
 22489  004C9E  D7C8               	goto	l2669
 22490  004CA0  0A01               	xorlw	1	; case 1
 22491  004CA2  B4D8               	btfsc	status,2,c
 22492  004CA4  D7DE               	goto	l2675
 22493  004CA6  0A03               	xorlw	3	; case 2
 22494  004CA8  B4D8               	btfsc	status,2,c
 22495  004CAA  D7E5               	goto	l2676
 22496  004CAC  0A01               	xorlw	1	; case 3
 22497  004CAE  B4D8               	btfsc	status,2,c
 22498  004CB0  D7EE               	goto	l2677
 22499  004CB2                     l2674:
 22500                           
 22501                           ;app_init.c: 120: return isInitialized;
 22502                           
 22503                           ; BSR set to: 1
 22504  004CB2  0100               	movlb	0	; () banked
 22505  004CB4  5199               	movf	initGprsModem@isInitialized& (0+255),w,b
 22506  004CB6  0012               	return	
 22507  004CB8                     __end_of_initGprsModem:
 22508                           	opt stack 0
 22509                           tosu	equ	0xFFF
 22510                           tosh	equ	0xFFE
 22511                           tosl	equ	0xFFD
 22512                           pclath	equ	0xFFA
 22513                           tblptru	equ	0xFF8
 22514                           tblptrh	equ	0xFF7
 22515                           tblptrl	equ	0xFF6
 22516                           tablat	equ	0xFF5
 22517                           prodh	equ	0xFF4
 22518                           prodl	equ	0xFF3
 22519                           intcon	equ	0xFF2
 22520                           intcon2	equ	0xFF1
 22521                           intcon3	equ	0xFF0
 22522                           indf0	equ	0xFEF
 22523                           postinc0	equ	0xFEE
 22524                           plusw0	equ	0xFEB
 22525                           fsr0h	equ	0xFEA
 22526                           fsr0l	equ	0xFE9
 22527                           wreg	equ	0xFE8
 22528                           indf1	equ	0xFE7
 22529                           postinc1	equ	0xFE6
 22530                           postdec1	equ	0xFE5
 22531                           fsr1h	equ	0xFE2
 22532                           fsr1l	equ	0xFE1
 22533                           indf2	equ	0xFDF
 22534                           postinc2	equ	0xFDE
 22535                           postdec2	equ	0xFDD
 22536                           plusw2	equ	0xFDB
 22537                           fsr2h	equ	0xFDA
 22538                           fsr2l	equ	0xFD9
 22539                           status	equ	0xFD8
 22540                           
 22541 ;; *************** function _secondsAppTimer *****************
 22542 ;; Defined at:
 22543 ;;		line 66 in file "../Source/c/04_App/app_utils.c"
 22544 ;; Parameters:    Size  Location     Type
 22545 ;;  seconds         1    wreg     unsigned char 
 22546 ;;  counter         2   42[BANK0 ] PTR unsigned int 
 22547 ;;		 -> setupCallTicks(2), initGprsModem@modemCounter(2), 
 22548 ;;  isCyclic        1   44[BANK0 ] unsigned char 
 22549 ;; Auto vars:     Size  Location     Type
 22550 ;;  seconds         1   47[BANK0 ] unsigned char 
 22551 ;;  destinationT    2   49[BANK0 ] unsigned int 
 22552 ;;  isExpired       1   48[BANK0 ] unsigned char 
 22553 ;; Return value:  Size  Location     Type
 22554 ;;                  1    wreg      unsigned char 
 22555 ;; Registers used:
 22556 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22557 ;; Tracked objects:
 22558 ;;		On entry : 0/0
 22559 ;;		On exit  : 0/0
 22560 ;;		Unchanged: 0/0
 22561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22562 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22563 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22564 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22565 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22566 ;;Total ram usage:        9 bytes
 22567 ;; Hardware stack levels used:    1
 22568 ;; Hardware stack levels required when called:   12
 22569 ;; This function calls:
 22570 ;;		___lwdiv
 22571 ;;		___wmul
 22572 ;; This function is called by:
 22573 ;;		_initGprsModem
 22574 ;;		_waitSetupCall
 22575 ;;		_blinkForSeconds
 22576 ;; This function uses a non-reentrant model
 22577 ;;
 22578                           
 22579                           	psect	text102
 22580  00475C                     __ptext102:
 22581                           	opt stack 0
 22582  00475C                     _secondsAppTimer:
 22583                           	opt stack 14
 22584                           
 22585                           ; BSR set to: 0
 22586                           ;incstack = 0
 22587                           ;secondsAppTimer@seconds stored from wreg
 22588  00475C  0100               	movlb	0	; () banked
 22589  00475E  6F8F               	movwf	secondsAppTimer@seconds& (0+255),b
 22590                           
 22591                           ;app_utils.c: 68: bool isExpired = 1;
 22592  004760  0E01               	movlw	1
 22593  004762  0100               	movlb	0	; () banked
 22594  004764  6F90               	movwf	secondsAppTimer@isExpired& (0+255),b
 22595                           
 22596                           ; BSR set to: 0
 22597                           ;app_utils.c: 69: uint16_t destinationTicks = (uint16_t) (seconds * 1000) / ((UINT16)(10
      +                          0));
 22598  004766  C08F  F07D         	movff	secondsAppTimer@seconds,___wmul@multiplier
 22599  00476A  6B7E               	clrf	(___wmul@multiplier+1)& (0+255),b
 22600  00476C  0E03               	movlw	3
 22601  00476E  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 22602  004770  0EE8               	movlw	232
 22603  004772  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 22604  004774  ECE1  F031         	call	___wmul	;wreg free
 22605  004778  C07D  F083         	movff	?___wmul,___lwdiv@dividend
 22606  00477C  C07E  F084         	movff	?___wmul+1,___lwdiv@dividend+1
 22607  004780  0E00               	movlw	0
 22608  004782  0100               	movlb	0	; () banked
 22609  004784  6F86               	movwf	(___lwdiv@divisor+1)& (0+255),b
 22610  004786  0E64               	movlw	100
 22611  004788  6F85               	movwf	___lwdiv@divisor& (0+255),b
 22612  00478A  ECAD  F02C         	call	___lwdiv	;wreg free
 22613  00478E  C083  F091         	movff	?___lwdiv,secondsAppTimer@destinationTicks
 22614  004792  C084  F092         	movff	?___lwdiv+1,secondsAppTimer@destinationTicks+1
 22615                           
 22616                           ;app_utils.c: 71: if (*counter < destinationTicks)
 22617  004796  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 22618  00479A  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 22619  00479E  0100               	movlb	0	; () banked
 22620  0047A0  5191               	movf	secondsAppTimer@destinationTicks& (0+255),w,b
 22621  0047A2  5CDE               	subwf	postinc2,w,c
 22622  0047A4  5192               	movf	(secondsAppTimer@destinationTicks+1)& (0+255),w,b
 22623  0047A6  58DE               	subwfb	postinc2,w,c
 22624  0047A8  B0D8               	btfsc	status,0,c
 22625  0047AA  D009               	goto	l2720
 22626                           
 22627                           ; BSR set to: 0
 22628                           ;app_utils.c: 72: {
 22629                           ;app_utils.c: 73: *counter += 1;
 22630  0047AC  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 22631  0047B0  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 22632  0047B4  2ADE               	incf	postinc2,f,c
 22633  0047B6  0E00               	movlw	0
 22634  0047B8  22DD               	addwfc	postdec2,f,c
 22635                           
 22636                           ; BSR set to: 0
 22637                           ;app_utils.c: 74: isExpired = 0;
 22638  0047BA  0E00               	movlw	0
 22639  0047BC  6F90               	movwf	secondsAppTimer@isExpired& (0+255),b
 22640  0047BE                     l2720:
 22641                           
 22642                           ; BSR set to: 0
 22643                           ;app_utils.c: 75: }
 22644                           ;app_utils.c: 76: if (*counter == destinationTicks)
 22645                           
 22646                           ; BSR set to: 0
 22647  0047BE  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 22648  0047C2  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 22649  0047C6  5191               	movf	secondsAppTimer@destinationTicks& (0+255),w,b
 22650  0047C8  18DE               	xorwf	postinc2,w,c
 22651  0047CA  E117               	bnz	l13796
 22652  0047CC  5192               	movf	(secondsAppTimer@destinationTicks+1)& (0+255),w,b
 22653  0047CE  18DE               	xorwf	postinc2,w,c
 22654  0047D0  A4D8               	btfss	status,2,c
 22655  0047D2  D013               	goto	l2723
 22656                           
 22657                           ; BSR set to: 0
 22658                           ;app_utils.c: 77: {
 22659                           ;app_utils.c: 78: if (isCyclic)
 22660  0047D4  518C               	movf	secondsAppTimer@isCyclic& (0+255),w,b
 22661  0047D6  B4D8               	btfsc	status,2,c
 22662  0047D8  D008               	goto	l2722
 22663                           
 22664                           ; BSR set to: 0
 22665                           ;app_utils.c: 79: {
 22666                           ;app_utils.c: 80: *counter = 0;
 22667  0047DA  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 22668  0047DE  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 22669  0047E2  0E00               	movlw	0
 22670  0047E4  6EDE               	movwf	postinc2,c
 22671  0047E6  0E00               	movlw	0
 22672  0047E8  D007               	goto	L27
 22673  0047EA                     l2722:
 22674                           
 22675                           ; BSR set to: 0
 22676                           ;app_utils.c: 82: else
 22677                           ;app_utils.c: 83: {
 22678                           ;app_utils.c: 84: *counter = 0xFFFF;
 22679                           
 22680                           ; BSR set to: 0
 22681  0047EA  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 22682  0047EE  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 22683  0047F2  0EFF               	movlw	255
 22684  0047F4  6EDE               	movwf	postinc2,c
 22685  0047F6  0EFF               	movlw	255
 22686  0047F8                     L27:
 22687  0047F8  6EDD               	movwf	postdec2,c
 22688  0047FA                     l2723:
 22689  0047FA                     l13796:
 22690                           
 22691                           ; BSR set to: 0
 22692                           ;app_utils.c: 85: }
 22693                           ;app_utils.c: 86: }
 22694                           ;app_utils.c: 87: return isExpired;
 22695  0047FA  5190               	movf	secondsAppTimer@isExpired& (0+255),w,b
 22696  0047FC  0012               	return	
 22697  0047FE                     __end_of_secondsAppTimer:
 22698                           	opt stack 0
 22699                           tosu	equ	0xFFF
 22700                           tosh	equ	0xFFE
 22701                           tosl	equ	0xFFD
 22702                           pclath	equ	0xFFA
 22703                           tblptru	equ	0xFF8
 22704                           tblptrh	equ	0xFF7
 22705                           tblptrl	equ	0xFF6
 22706                           tablat	equ	0xFF5
 22707                           prodh	equ	0xFF4
 22708                           prodl	equ	0xFF3
 22709                           intcon	equ	0xFF2
 22710                           intcon2	equ	0xFF1
 22711                           intcon3	equ	0xFF0
 22712                           indf0	equ	0xFEF
 22713                           postinc0	equ	0xFEE
 22714                           plusw0	equ	0xFEB
 22715                           fsr0h	equ	0xFEA
 22716                           fsr0l	equ	0xFE9
 22717                           wreg	equ	0xFE8
 22718                           indf1	equ	0xFE7
 22719                           postinc1	equ	0xFE6
 22720                           postdec1	equ	0xFE5
 22721                           fsr1h	equ	0xFE2
 22722                           fsr1l	equ	0xFE1
 22723                           indf2	equ	0xFDF
 22724                           postinc2	equ	0xFDE
 22725                           postdec2	equ	0xFDD
 22726                           plusw2	equ	0xFDB
 22727                           fsr2h	equ	0xFDA
 22728                           fsr2l	equ	0xFD9
 22729                           status	equ	0xFD8
 22730                           
 22731 ;; *************** function _Mdm_SetSmsFormat *****************
 22732 ;; Defined at:
 22733 ;;		line 837 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 22734 ;; Parameters:    Size  Location     Type
 22735 ;;  TextFormat      1    wreg     unsigned char 
 22736 ;; Auto vars:     Size  Location     Type
 22737 ;;  TextFormat      1   56[BANK0 ] unsigned char 
 22738 ;;  UartMessage    20   36[BANK0 ] unsigned char [20]
 22739 ;;  Index           1   35[BANK0 ] unsigned char 
 22740 ;; Return value:  Size  Location     Type
 22741 ;;                  1    wreg      void 
 22742 ;; Registers used:
 22743 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 22744 ;; Tracked objects:
 22745 ;;		On entry : 0/0
 22746 ;;		On exit  : 0/0
 22747 ;;		Unchanged: 0/0
 22748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22749 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22750 ;;      Locals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22751 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22752 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22753 ;;Total ram usage:       22 bytes
 22754 ;; Hardware stack levels used:    1
 22755 ;; Hardware stack levels required when called:   13
 22756 ;; This function calls:
 22757 ;;		_Uart_WriteString
 22758 ;; This function is called by:
 22759 ;;		_initGprsModem
 22760 ;; This function uses a non-reentrant model
 22761 ;;
 22762                           
 22763                           	psect	text103
 22764  005AF2                     __ptext103:
 22765                           	opt stack 0
 22766  005AF2                     _Mdm_SetSmsFormat:
 22767                           	opt stack 12
 22768                           
 22769                           ; BSR set to: 0
 22770                           ;incstack = 0
 22771                           ;Mdm_SetSmsFormat@TextFormat stored from wreg
 22772  005AF2  0100               	movlb	0	; () banked
 22773  005AF4  6F98               	movwf	Mdm_SetSmsFormat@TextFormat& (0+255),b
 22774                           
 22775                           ;mdm_gsm_gprs.c: 839: UINT8 UartMessage[20];
 22776                           ;mdm_gsm_gprs.c: 840: UINT8 Index = 0;
 22777  005AF6  0E00               	movlw	0
 22778  005AF8  0100               	movlb	0	; () banked
 22779  005AFA  6F83               	movwf	Mdm_SetSmsFormat@Index& (0+255),b
 22780                           
 22781                           ;mdm_gsm_gprs.c: 843: UartMessage[0] = 'A';
 22782  005AFC  0E41               	movlw	65
 22783  005AFE  6F84               	movwf	Mdm_SetSmsFormat@UartMessage& (0+255),b
 22784                           
 22785                           ;mdm_gsm_gprs.c: 844: UartMessage[1] = 'T';
 22786  005B00  0E54               	movlw	84
 22787  005B02  6F85               	movwf	(Mdm_SetSmsFormat@UartMessage+1)& (0+255),b
 22788                           
 22789                           ;mdm_gsm_gprs.c: 845: UartMessage[2] = '+';
 22790  005B04  0E2B               	movlw	43
 22791  005B06  6F86               	movwf	(Mdm_SetSmsFormat@UartMessage+2)& (0+255),b
 22792                           
 22793                           ;mdm_gsm_gprs.c: 846: UartMessage[3] = 'C';
 22794  005B08  0E43               	movlw	67
 22795  005B0A  6F87               	movwf	(Mdm_SetSmsFormat@UartMessage+3)& (0+255),b
 22796                           
 22797                           ;mdm_gsm_gprs.c: 847: UartMessage[4] = 'M';
 22798  005B0C  0E4D               	movlw	77
 22799  005B0E  6F88               	movwf	(Mdm_SetSmsFormat@UartMessage+4)& (0+255),b
 22800                           
 22801                           ;mdm_gsm_gprs.c: 848: UartMessage[5] = 'G';
 22802  005B10  0E47               	movlw	71
 22803  005B12  6F89               	movwf	(Mdm_SetSmsFormat@UartMessage+5)& (0+255),b
 22804                           
 22805                           ;mdm_gsm_gprs.c: 849: UartMessage[6] = 'F';
 22806  005B14  0E46               	movlw	70
 22807  005B16  6F8A               	movwf	(Mdm_SetSmsFormat@UartMessage+6)& (0+255),b
 22808                           
 22809                           ;mdm_gsm_gprs.c: 850: UartMessage[7] = '=';
 22810  005B18  0E3D               	movlw	61
 22811  005B1A  6F8B               	movwf	(Mdm_SetSmsFormat@UartMessage+7)& (0+255),b
 22812                           
 22813                           ; BSR set to: 0
 22814                           ;mdm_gsm_gprs.c: 853: if (TextFormat == 1u)
 22815  005B1C  0598               	decf	Mdm_SetSmsFormat@TextFormat& (0+255),w,b
 22816  005B1E  A4D8               	btfss	status,2,c
 22817  005B20  D002               	goto	l1121
 22818                           
 22819                           ; BSR set to: 0
 22820                           ;mdm_gsm_gprs.c: 854: {
 22821                           ;mdm_gsm_gprs.c: 855: UartMessage[8] = '1';
 22822  005B22  0E31               	movlw	49
 22823  005B24  D001               	goto	L28
 22824  005B26                     l1121:
 22825                           
 22826                           ; BSR set to: 0
 22827                           ;mdm_gsm_gprs.c: 857: else
 22828                           ;mdm_gsm_gprs.c: 858: {
 22829                           ;mdm_gsm_gprs.c: 859: UartMessage[8] = '0';
 22830                           
 22831                           ; BSR set to: 0
 22832  005B26  0E30               	movlw	48
 22833  005B28                     L28:
 22834  005B28  6F8C               	movwf	(Mdm_SetSmsFormat@UartMessage+8)& (0+255),b
 22835                           
 22836                           ; BSR set to: 0
 22837                           ;mdm_gsm_gprs.c: 860: }
 22838                           ;mdm_gsm_gprs.c: 862: UartMessage[9] = '\r';
 22839  005B2A  0E0D               	movlw	13
 22840  005B2C  6F8D               	movwf	(Mdm_SetSmsFormat@UartMessage+9)& (0+255),b
 22841                           
 22842                           ;mdm_gsm_gprs.c: 863: UartMessage[10] = (0);
 22843  005B2E  0E00               	movlw	0
 22844  005B30  6F8E               	movwf	(Mdm_SetSmsFormat@UartMessage+10)& (0+255),b
 22845                           
 22846                           ; BSR set to: 0
 22847                           ;mdm_gsm_gprs.c: 866: Uart_WriteString(1, UartMessage);
 22848  005B32  0E84               	movlw	low Mdm_SetSmsFormat@UartMessage
 22849  005B34  6F80               	movwf	Uart_WriteString@StringToWrite& (0+255),b
 22850  005B36  0E00               	movlw	high Mdm_SetSmsFormat@UartMessage
 22851  005B38  6F81               	movwf	(Uart_WriteString@StringToWrite+1)& (0+255),b
 22852  005B3A  0E01               	movlw	1
 22853  005B3C  EC1A  F030         	call	_Uart_WriteString
 22854  005B40  0012               	return		;funcret
 22855  005B42                     __end_of_Mdm_SetSmsFormat:
 22856                           	opt stack 0
 22857                           tosu	equ	0xFFF
 22858                           tosh	equ	0xFFE
 22859                           tosl	equ	0xFFD
 22860                           pclath	equ	0xFFA
 22861                           tblptru	equ	0xFF8
 22862                           tblptrh	equ	0xFF7
 22863                           tblptrl	equ	0xFF6
 22864                           tablat	equ	0xFF5
 22865                           prodh	equ	0xFF4
 22866                           prodl	equ	0xFF3
 22867                           intcon	equ	0xFF2
 22868                           intcon2	equ	0xFF1
 22869                           intcon3	equ	0xFF0
 22870                           indf0	equ	0xFEF
 22871                           postinc0	equ	0xFEE
 22872                           plusw0	equ	0xFEB
 22873                           fsr0h	equ	0xFEA
 22874                           fsr0l	equ	0xFE9
 22875                           wreg	equ	0xFE8
 22876                           indf1	equ	0xFE7
 22877                           postinc1	equ	0xFE6
 22878                           postdec1	equ	0xFE5
 22879                           fsr1h	equ	0xFE2
 22880                           fsr1l	equ	0xFE1
 22881                           indf2	equ	0xFDF
 22882                           postinc2	equ	0xFDE
 22883                           postdec2	equ	0xFDD
 22884                           plusw2	equ	0xFDB
 22885                           fsr2h	equ	0xFDA
 22886                           fsr2l	equ	0xFD9
 22887                           status	equ	0xFD8
 22888                           
 22889 ;; *************** function _initEeprom *****************
 22890 ;; Defined at:
 22891 ;;		line 127 in file "../Source/c/04_App/app_init.c"
 22892 ;; Parameters:    Size  Location     Type
 22893 ;;		None
 22894 ;; Auto vars:     Size  Location     Type
 22895 ;;  isInitialize    1    2[BANK1 ] unsigned char 
 22896 ;;  memoryOpResu    1    1[BANK1 ] enum E8244
 22897 ;;  addressToRea    1    0[BANK1 ] const unsigned char 
 22898 ;; Return value:  Size  Location     Type
 22899 ;;                  1    wreg      unsigned char 
 22900 ;; Registers used:
 22901 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 22902 ;; Tracked objects:
 22903 ;;		On entry : 0/0
 22904 ;;		On exit  : 0/0
 22905 ;;		Unchanged: 0/0
 22906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22907 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22908 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22909 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22910 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22911 ;;Total ram usage:        3 bytes
 22912 ;; Hardware stack levels used:    1
 22913 ;; Hardware stack levels required when called:   17
 22914 ;; This function calls:
 22915 ;;		_Eeprom_Read
 22916 ;; This function is called by:
 22917 ;;		_initFsm
 22918 ;; This function uses a non-reentrant model
 22919 ;;
 22920                           
 22921                           	psect	text104
 22922  004EEC                     __ptext104:
 22923                           	opt stack 0
 22924  004EEC                     _initEeprom:
 22925                           	opt stack 9
 22926                           
 22927                           ;app_init.c: 129: const uint8_t addressToRead = 0;
 22928                           
 22929                           ;incstack = 0
 22930  004EEC  0E00               	movlw	0
 22931  004EEE  0101               	movlb	1	; () banked
 22932  004EF0  6F00               	movwf	initEeprom@addressToRead& (0+255),b
 22933                           
 22934                           ;app_init.c: 130: static eepromStates currentState = EEPROM_INIT;
 22935                           ;app_init.c: 131: EepromStsType memoryOpResult = OP_PENDING;
 22936  004EF2  0E02               	movlw	2
 22937  004EF4  6F01               	movwf	initEeprom@memoryOpResult& (0+255),b
 22938                           
 22939                           ;app_init.c: 132: bool isInitialized = 0;
 22940  004EF6  0E00               	movlw	0
 22941  004EF8  6F02               	movwf	initEeprom@isInitialized& (0+255),b
 22942                           
 22943                           ;app_init.c: 134: switch (currentState)
 22944  004EFA  D031               	goto	l2684
 22945  004EFC                     
 22946                           ; BSR set to: 1
 22947                           ;app_init.c: 137: memoryOpResult = Eeprom_Read(0, memoryPreamble, 5);
 22948                           
 22949                           ; BSR set to: 1
 22950  004EFC  0E94               	movlw	low _memoryPreamble
 22951  004EFE  0100               	movlb	0	; () banked
 22952  004F00  6FA9               	movwf	Eeprom_Read@ReadBuffer& (0+255),b
 22953  004F02  0E03               	movlw	high _memoryPreamble
 22954  004F04  6FAA               	movwf	(Eeprom_Read@ReadBuffer+1)& (0+255),b
 22955  004F06  0E05               	movlw	5
 22956  004F08  6FAB               	movwf	Eeprom_Read@DataLength& (0+255),b
 22957  004F0A  0E00               	movlw	0
 22958  004F0C  EC59  F02C         	call	_Eeprom_Read
 22959  004F10  0101               	movlb	1	; () banked
 22960  004F12  6F01               	movwf	initEeprom@memoryOpResult& (0+255),b
 22961                           
 22962                           ; BSR set to: 1
 22963                           ;app_init.c: 138: if (memoryOpResult != OP_PENDING)
 22964  004F14  0E02               	movlw	2
 22965  004F16  1901               	xorwf	initEeprom@memoryOpResult& (0+255),w,b
 22966  004F18  B4D8               	btfsc	status,2,c
 22967  004F1A  D02B               	goto	l2689
 22968                           
 22969                           ; BSR set to: 1
 22970                           ;app_init.c: 139: {
 22971                           ;app_init.c: 140: if (memoryPreamble[0] == 'U' &&
 22972                           ;app_init.c: 141: memoryPreamble[1] == 'S' &&
 22973                           ;app_init.c: 142: memoryPreamble[2] == 'I' &&
 22974                           ;app_init.c: 143: memoryPreamble[3] == 'M')
 22975  004F1C  0E55               	movlw	85
 22976  004F1E  0103               	movlb	3	; () banked
 22977  004F20  1994               	xorwf	_memoryPreamble& (0+255),w,b
 22978  004F22  A4D8               	btfss	status,2,c
 22979  004F24  D00E               	goto	l2687
 22980                           
 22981                           ; BSR set to: 3
 22982  004F26  0E53               	movlw	83
 22983  004F28  1995               	xorwf	(_memoryPreamble+1)& (0+255),w,b
 22984  004F2A  A4D8               	btfss	status,2,c
 22985  004F2C  D00A               	goto	l2687
 22986                           
 22987                           ; BSR set to: 3
 22988  004F2E  0E49               	movlw	73
 22989  004F30  1996               	xorwf	(_memoryPreamble+2)& (0+255),w,b
 22990  004F32  A4D8               	btfss	status,2,c
 22991  004F34  D006               	goto	l2687
 22992                           
 22993                           ; BSR set to: 3
 22994  004F36  0E4D               	movlw	77
 22995  004F38  1997               	xorwf	(_memoryPreamble+3)& (0+255),w,b
 22996  004F3A  A4D8               	btfss	status,2,c
 22997  004F3C  D002               	goto	l2687
 22998                           
 22999                           ; BSR set to: 3
 23000                           ;app_init.c: 144: {
 23001                           ;app_init.c: 145: currentState = EEPROM_NOT_EMPTY;
 23002  004F3E  0E02               	movlw	2
 23003  004F40  D003               	goto	L29
 23004  004F42                     l2687:
 23005                           
 23006                           ; BSR set to: 3
 23007                           ;app_init.c: 147: else
 23008                           ;app_init.c: 148: {
 23009                           ;app_init.c: 149: memorizedNumbersCount[0] = memoryPreamble[4];
 23010  004F42  C398  F038         	movff	_memoryPreamble+4,_memorizedNumbersCount
 23011                           
 23012                           ; BSR set to: 3
 23013                           ;app_init.c: 150: currentState = EEPROM_EMPTY;
 23014  004F46  0E01               	movlw	1
 23015  004F48                     L29:
 23016  004F48  0101               	movlb	1	; () banked
 23017  004F4A  6FD4               	movwf	initEeprom@currentState& (0+255),b
 23018                           
 23019                           ; BSR set to: 1
 23020                           ;app_init.c: 151: }
 23021                           ;app_init.c: 152: }
 23022                           ;app_init.c: 153: break;
 23023                           
 23024                           ; BSR set to: 1
 23025  004F4C  D012               	goto	l2689
 23026  004F4E                     
 23027                           ; BSR set to: 1
 23028                           ;app_init.c: 156: isInitialized = 1;
 23029                           
 23030                           ; BSR set to: 1
 23031  004F4E  0E01               	movlw	1
 23032  004F50  6F02               	movwf	initEeprom@isInitialized& (0+255),b
 23033                           
 23034                           ;app_init.c: 157: break;
 23035  004F52  D00F               	goto	l2689
 23036  004F54                     
 23037                           ; BSR set to: 1
 23038                           ;app_init.c: 160: isInitialized = 1;
 23039                           
 23040                           ; BSR set to: 1
 23041  004F54  0E01               	movlw	1
 23042  004F56  6F02               	movwf	initEeprom@isInitialized& (0+255),b
 23043                           
 23044                           ;app_init.c: 161: isMemoryEmpty = 0;
 23045  004F58  0E00               	movlw	0
 23046  004F5A  6FFE               	movwf	_isMemoryEmpty& (0+255),b
 23047                           
 23048                           ; BSR set to: 1
 23049                           ;app_init.c: 166: }
 23050                           
 23051                           ; BSR set to: 1
 23052                           ;app_init.c: 165: break;
 23053                           
 23054                           ;app_init.c: 164: default:
 23055                           
 23056                           ;app_init.c: 162: break;
 23057  004F5C  D00A               	goto	l2689
 23058  004F5E                     l2684:
 23059                           
 23060                           ; BSR set to: 1
 23061                           
 23062                           ; BSR set to: 1
 23063  004F5E  51D4               	movf	initEeprom@currentState& (0+255),w,b
 23064                           
 23065                           ; Switch size 1, requested type "space"
 23066                           ; Number of cases is 3, Range of values is 0 to 2
 23067                           ; switch strategies available:
 23068                           ; Name         Instructions Cycles
 23069                           ; simple_byte           10     6 (average)
 23070                           ;	Chosen strategy is simple_byte
 23071  004F60  0A00               	xorlw	0	; case 0
 23072  004F62  B4D8               	btfsc	status,2,c
 23073  004F64  D7CB               	goto	l2685
 23074  004F66  0A01               	xorlw	1	; case 1
 23075  004F68  B4D8               	btfsc	status,2,c
 23076  004F6A  D7F1               	goto	l2690
 23077  004F6C  0A03               	xorlw	3	; case 2
 23078  004F6E  B4D8               	btfsc	status,2,c
 23079  004F70  D7F1               	goto	l2691
 23080  004F72                     l2689:
 23081                           
 23082                           ; BSR set to: 1
 23083                           ;app_init.c: 167: return isInitialized;
 23084                           
 23085                           ; BSR set to: 1
 23086  004F72  5102               	movf	initEeprom@isInitialized& (0+255),w,b
 23087  004F74  0012               	return	
 23088  004F76                     __end_of_initEeprom:
 23089                           	opt stack 0
 23090                           tosu	equ	0xFFF
 23091                           tosh	equ	0xFFE
 23092                           tosl	equ	0xFFD
 23093                           pclath	equ	0xFFA
 23094                           tblptru	equ	0xFF8
 23095                           tblptrh	equ	0xFF7
 23096                           tblptrl	equ	0xFF6
 23097                           tablat	equ	0xFF5
 23098                           prodh	equ	0xFF4
 23099                           prodl	equ	0xFF3
 23100                           intcon	equ	0xFF2
 23101                           intcon2	equ	0xFF1
 23102                           intcon3	equ	0xFF0
 23103                           indf0	equ	0xFEF
 23104                           postinc0	equ	0xFEE
 23105                           plusw0	equ	0xFEB
 23106                           fsr0h	equ	0xFEA
 23107                           fsr0l	equ	0xFE9
 23108                           wreg	equ	0xFE8
 23109                           indf1	equ	0xFE7
 23110                           postinc1	equ	0xFE6
 23111                           postdec1	equ	0xFE5
 23112                           fsr1h	equ	0xFE2
 23113                           fsr1l	equ	0xFE1
 23114                           indf2	equ	0xFDF
 23115                           postinc2	equ	0xFDE
 23116                           postdec2	equ	0xFDD
 23117                           plusw2	equ	0xFDB
 23118                           fsr2h	equ	0xFDA
 23119                           fsr2l	equ	0xFD9
 23120                           status	equ	0xFD8
 23121                           
 23122 ;; *************** function _findEmptySpot *****************
 23123 ;; Defined at:
 23124 ;;		line 207 in file "../Source/c/04_App/app_gate.c"
 23125 ;; Parameters:    Size  Location     Type
 23126 ;;		None
 23127 ;; Auto vars:     Size  Location     Type
 23128 ;;  readBuffer     13    0[BANK1 ] unsigned char [13]
 23129 ;;  memoryOpResu    1   16[BANK1 ] enum E8244
 23130 ;;  positionInMe    1   15[BANK1 ] unsigned char 
 23131 ;;  searchInProg    1   14[BANK1 ] const unsigned char 
 23132 ;;  searchFailed    1   13[BANK1 ] const unsigned char 
 23133 ;; Return value:  Size  Location     Type
 23134 ;;                  1    wreg      unsigned char 
 23135 ;; Registers used:
 23136 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23137 ;; Tracked objects:
 23138 ;;		On entry : 0/0
 23139 ;;		On exit  : 0/0
 23140 ;;		Unchanged: 0/0
 23141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23142 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23143 ;;      Locals:         0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23144 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23145 ;;      Totals:         0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23146 ;;Total ram usage:       17 bytes
 23147 ;; Hardware stack levels used:    1
 23148 ;; Hardware stack levels required when called:   17
 23149 ;; This function calls:
 23150 ;;		_Eeprom_Read
 23151 ;;		_isNumberValid
 23152 ;; This function is called by:
 23153 ;;		_MyApp_Task
 23154 ;; This function uses a non-reentrant model
 23155 ;;
 23156                           
 23157                           	psect	text105
 23158  00532E                     __ptext105:
 23159                           	opt stack 0
 23160  00532E                     _findEmptySpot:
 23161                           	opt stack 10
 23162                           
 23163                           ;app_gate.c: 209: const uint8_t searchInProgress = 0;
 23164                           
 23165                           ; BSR set to: 1
 23166                           ;incstack = 0
 23167  00532E  0E00               	movlw	0
 23168  005330  0101               	movlb	1	; () banked
 23169  005332  6F0E               	movwf	findEmptySpot@searchInProgress& (0+255),b
 23170                           
 23171                           ;app_gate.c: 210: const uint8_t searchFailed = 1;
 23172  005334  0E01               	movlw	1
 23173  005336  6F0D               	movwf	findEmptySpot@searchFailed& (0+255),b
 23174                           
 23175                           ; BSR set to: 1
 23176                           ;app_gate.c: 211: static uint8_t currentPosition = 16;
 23177                           ;app_gate.c: 212: uint8_t positionInMemory = searchInProgress;
 23178  005338  C10E  F10F         	movff	findEmptySpot@searchInProgress,findEmptySpot@positionInMemory
 23179                           
 23180                           ;app_gate.c: 213: uint8_t readBuffer[((UINT8)(13))];
 23181                           ;app_gate.c: 214: EepromStsType memoryOpResult = OP_PENDING;
 23182  00533C  0E02               	movlw	2
 23183  00533E  6F10               	movwf	findEmptySpot@memoryOpResult& (0+255),b
 23184                           
 23185                           ; BSR set to: 1
 23186                           ;app_gate.c: 216: if (currentPosition >= 16 * 10)
 23187  005340  0E9F               	movlw	159
 23188  005342  0100               	movlb	0	; () banked
 23189  005344  65E1               	cpfsgt	findEmptySpot@currentPosition& (0+255),b
 23190  005346  D002               	goto	l2804
 23191                           
 23192                           ; BSR set to: 0
 23193                           ;app_gate.c: 217: {
 23194                           ;app_gate.c: 218: currentPosition = 16;
 23195  005348  0E10               	movlw	16
 23196  00534A  6FE1               	movwf	findEmptySpot@currentPosition& (0+255),b
 23197  00534C                     l2804:
 23198                           
 23199                           ; BSR set to: 0
 23200                           ;app_gate.c: 219: }
 23201                           ;app_gate.c: 220: memoryOpResult = Eeprom_Read(currentPosition, readBuffer, ((UINT8)(13)
      +                          ));
 23202                           
 23203                           ; BSR set to: 0
 23204  00534C  0E00               	movlw	low findEmptySpot@readBuffer
 23205  00534E  6FA9               	movwf	Eeprom_Read@ReadBuffer& (0+255),b
 23206  005350  0E01               	movlw	high findEmptySpot@readBuffer
 23207  005352  6FAA               	movwf	(Eeprom_Read@ReadBuffer+1)& (0+255),b
 23208  005354  0E0D               	movlw	13
 23209  005356  6FAB               	movwf	Eeprom_Read@DataLength& (0+255),b
 23210  005358  51E1               	movf	findEmptySpot@currentPosition& (0+255),w,b
 23211  00535A  EC59  F02C         	call	_Eeprom_Read
 23212  00535E  0101               	movlb	1	; () banked
 23213  005360  6F10               	movwf	findEmptySpot@memoryOpResult& (0+255),b
 23214                           
 23215                           ; BSR set to: 1
 23216                           ;app_gate.c: 221: if (memoryOpResult != OP_PENDING)
 23217  005362  0E02               	movlw	2
 23218  005364  1910               	xorwf	findEmptySpot@memoryOpResult& (0+255),w,b
 23219  005366  B4D8               	btfsc	status,2,c
 23220  005368  D013               	goto	l2807
 23221                           
 23222                           ; BSR set to: 1
 23223                           ;app_gate.c: 222: {
 23224                           ;app_gate.c: 223: if (isNumberValid(readBuffer))
 23225  00536A  0E00               	movlw	low findEmptySpot@readBuffer
 23226  00536C  0100               	movlb	0	; () banked
 23227  00536E  6F7D               	movwf	isNumberValid@phoneNumber& (0+255),b
 23228  005370  0E01               	movlw	high findEmptySpot@readBuffer
 23229  005372  6F7E               	movwf	(isNumberValid@phoneNumber+1)& (0+255),b
 23230  005374  EC65  F02A         	call	_isNumberValid	;wreg free
 23231  005378  0900               	iorlw	0
 23232  00537A  B4D8               	btfsc	status,2,c
 23233  00537C  D004               	goto	l2806
 23234                           
 23235                           ;app_gate.c: 224: {
 23236                           ;app_gate.c: 225: currentPosition += 16;
 23237  00537E  0E10               	movlw	16
 23238  005380  0100               	movlb	0	; () banked
 23239  005382  27E1               	addwf	findEmptySpot@currentPosition& (0+255),f,b
 23240                           
 23241                           ;app_gate.c: 226: }
 23242  005384  D005               	goto	l2807
 23243  005386                     l2806:
 23244                           
 23245                           ;app_gate.c: 227: else
 23246                           ;app_gate.c: 228: {
 23247                           ;app_gate.c: 229: positionInMemory = currentPosition;
 23248  005386  C0E1  F10F         	movff	findEmptySpot@currentPosition,findEmptySpot@positionInMemory
 23249                           
 23250                           ;app_gate.c: 230: currentPosition = 16 * 10;
 23251  00538A  0EA0               	movlw	160
 23252  00538C  0100               	movlb	0	; () banked
 23253  00538E  6FE1               	movwf	findEmptySpot@currentPosition& (0+255),b
 23254  005390                     l2807:
 23255                           
 23256                           ;app_gate.c: 231: }
 23257                           ;app_gate.c: 232: }
 23258                           ;app_gate.c: 233: return positionInMemory;
 23259                           
 23260                           ; BSR set to: 0
 23261  005390  0101               	movlb	1	; () banked
 23262  005392  510F               	movf	findEmptySpot@positionInMemory& (0+255),w,b
 23263  005394  0012               	return	
 23264  005396                     __end_of_findEmptySpot:
 23265                           	opt stack 0
 23266                           tosu	equ	0xFFF
 23267                           tosh	equ	0xFFE
 23268                           tosl	equ	0xFFD
 23269                           pclath	equ	0xFFA
 23270                           tblptru	equ	0xFF8
 23271                           tblptrh	equ	0xFF7
 23272                           tblptrl	equ	0xFF6
 23273                           tablat	equ	0xFF5
 23274                           prodh	equ	0xFF4
 23275                           prodl	equ	0xFF3
 23276                           intcon	equ	0xFF2
 23277                           intcon2	equ	0xFF1
 23278                           intcon3	equ	0xFF0
 23279                           indf0	equ	0xFEF
 23280                           postinc0	equ	0xFEE
 23281                           plusw0	equ	0xFEB
 23282                           fsr0h	equ	0xFEA
 23283                           fsr0l	equ	0xFE9
 23284                           wreg	equ	0xFE8
 23285                           indf1	equ	0xFE7
 23286                           postinc1	equ	0xFE6
 23287                           postdec1	equ	0xFE5
 23288                           fsr1h	equ	0xFE2
 23289                           fsr1l	equ	0xFE1
 23290                           indf2	equ	0xFDF
 23291                           postinc2	equ	0xFDE
 23292                           postdec2	equ	0xFDD
 23293                           plusw2	equ	0xFDB
 23294                           fsr2h	equ	0xFDA
 23295                           fsr2l	equ	0xFD9
 23296                           status	equ	0xFD8
 23297                           
 23298 ;; *************** function _isNumberValid *****************
 23299 ;; Defined at:
 23300 ;;		line 152 in file "../Source/c/04_App/app_gate.c"
 23301 ;; Parameters:    Size  Location     Type
 23302 ;;  phoneNumber     2   29[BANK0 ] PTR unsigned char 
 23303 ;;		 -> findEmptySpot@readBuffer(13), isNumberInMemory@readBuffer(13), smsText(20), 
 23304 ;; Auto vars:     Size  Location     Type
 23305 ;;  i               1   33[BANK0 ] unsigned char 
 23306 ;;  isNumberOk      1   32[BANK0 ] unsigned char 
 23307 ;; Return value:  Size  Location     Type
 23308 ;;                  1    wreg      unsigned char 
 23309 ;; Registers used:
 23310 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 23311 ;; Tracked objects:
 23312 ;;		On entry : 0/0
 23313 ;;		On exit  : 0/0
 23314 ;;		Unchanged: 0/0
 23315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23316 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23317 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23318 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23319 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23320 ;;Total ram usage:        5 bytes
 23321 ;; Hardware stack levels used:    1
 23322 ;; Hardware stack levels required when called:   11
 23323 ;; This function calls:
 23324 ;;		Nothing
 23325 ;; This function is called by:
 23326 ;;		_parseCommand
 23327 ;;		_isNumberInMemory
 23328 ;;		_findEmptySpot
 23329 ;; This function uses a non-reentrant model
 23330 ;;
 23331                           
 23332                           	psect	text106
 23333  0054CA                     __ptext106:
 23334                           	opt stack 0
 23335  0054CA                     _isNumberValid:
 23336                           	opt stack 15
 23337                           
 23338                           ;app_gate.c: 154: bool isNumberOk = 0;
 23339                           
 23340                           ; BSR set to: 1
 23341                           ;incstack = 0
 23342  0054CA  0E00               	movlw	0
 23343  0054CC  0100               	movlb	0	; () banked
 23344  0054CE  6F80               	movwf	isNumberValid@isNumberOk& (0+255),b
 23345                           
 23346                           ;app_gate.c: 155: uint8_t i = 0;
 23347  0054D0  0E00               	movlw	0
 23348  0054D2  6F81               	movwf	isNumberValid@i& (0+255),b
 23349                           
 23350                           ; BSR set to: 0
 23351                           ;app_gate.c: 156: if (phoneNumber[0] == '+')
 23352  0054D4  C07D  FFD9         	movff	isNumberValid@phoneNumber,fsr2l
 23353  0054D8  C07E  FFDA         	movff	isNumberValid@phoneNumber+1,fsr2h
 23354  0054DC  0E2B               	movlw	43
 23355  0054DE  18DE               	xorwf	postinc2,w,c
 23356  0054E0  A4D8               	btfss	status,2,c
 23357  0054E2  D024               	goto	u14090
 23358                           
 23359                           ; BSR set to: 0
 23360                           ;app_gate.c: 157: {
 23361                           ;app_gate.c: 158: for (i = 1; i < ((UINT8)(13)); i++)
 23362  0054E4  0E01               	movlw	1
 23363  0054E6  6F81               	movwf	isNumberValid@i& (0+255),b
 23364  0054E8                     l14648:
 23365                           
 23366                           ; BSR set to: 0
 23367  0054E8  0E0C               	movlw	12
 23368  0054EA  6581               	cpfsgt	isNumberValid@i& (0+255),b
 23369  0054EC  D001               	goto	l2785
 23370  0054EE  D01E               	goto	u14090
 23371  0054F0                     l2785:
 23372                           
 23373                           ; BSR set to: 0
 23374                           ;app_gate.c: 159: {
 23375                           ;app_gate.c: 160: if (phoneNumber[i] >= '0' && phoneNumber[i] <= '9')
 23376                           
 23377                           ; BSR set to: 0
 23378  0054F0  5181               	movf	isNumberValid@i& (0+255),w,b
 23379  0054F2  0D01               	mullw	1
 23380  0054F4  50F3               	movf	prodl,w,c
 23381  0054F6  257D               	addwf	isNumberValid@phoneNumber& (0+255),w,b
 23382  0054F8  6ED9               	movwf	fsr2l,c
 23383  0054FA  50F4               	movf	prodh,w,c
 23384  0054FC  217E               	addwfc	(isNumberValid@phoneNumber+1)& (0+255),w,b
 23385  0054FE  6EDA               	movwf	fsr2h,c
 23386  005500  0E2F               	movlw	47
 23387  005502  64DF               	cpfsgt	indf2,c
 23388  005504  D00E               	goto	l2787
 23389                           
 23390                           ; BSR set to: 0
 23391  005506  5181               	movf	isNumberValid@i& (0+255),w,b
 23392  005508  0D01               	mullw	1
 23393  00550A  50F3               	movf	prodl,w,c
 23394  00550C  257D               	addwf	isNumberValid@phoneNumber& (0+255),w,b
 23395  00550E  6ED9               	movwf	fsr2l,c
 23396  005510  50F4               	movf	prodh,w,c
 23397  005512  217E               	addwfc	(isNumberValid@phoneNumber+1)& (0+255),w,b
 23398  005514  6EDA               	movwf	fsr2h,c
 23399  005516  0E3A               	movlw	58
 23400  005518  60DF               	cpfslt	indf2,c
 23401  00551A  D003               	goto	l2787
 23402                           
 23403                           ; BSR set to: 0
 23404                           ;app_gate.c: 161: {
 23405                           ;app_gate.c: 162: isNumberOk = 1;
 23406  00551C  0E01               	movlw	1
 23407  00551E  6F80               	movwf	isNumberValid@isNumberOk& (0+255),b
 23408                           
 23409                           ;app_gate.c: 163: }
 23410  005520  D003               	goto	l2788
 23411  005522                     l2787:
 23412                           
 23413                           ; BSR set to: 0
 23414                           ;app_gate.c: 164: else
 23415                           ;app_gate.c: 165: {
 23416                           ;app_gate.c: 166: isNumberOk = 0;
 23417                           
 23418                           ; BSR set to: 0
 23419  005522  0E00               	movlw	0
 23420  005524  6F80               	movwf	isNumberValid@isNumberOk& (0+255),b
 23421                           
 23422                           ;app_gate.c: 167: break;
 23423  005526  D002               	goto	u14090
 23424  005528                     l2788:
 23425                           
 23426                           ; BSR set to: 0
 23427                           
 23428                           ; BSR set to: 0
 23429  005528  2B81               	incf	isNumberValid@i& (0+255),f,b
 23430  00552A  D7DE               	goto	l14648
 23431  00552C                     u14090:
 23432                           
 23433                           ; BSR set to: 0
 23434                           ;app_gate.c: 168: }
 23435                           ;app_gate.c: 169: }
 23436                           ;app_gate.c: 170: }
 23437                           ;app_gate.c: 171: return isNumberOk;
 23438                           
 23439                           ; BSR set to: 0
 23440                           
 23441                           ; BSR set to: 0
 23442  00552C  5180               	movf	isNumberValid@isNumberOk& (0+255),w,b
 23443  00552E  0012               	return	
 23444  005530                     __end_of_isNumberValid:
 23445                           	opt stack 0
 23446                           tosu	equ	0xFFF
 23447                           tosh	equ	0xFFE
 23448                           tosl	equ	0xFFD
 23449                           pclath	equ	0xFFA
 23450                           tblptru	equ	0xFF8
 23451                           tblptrh	equ	0xFF7
 23452                           tblptrl	equ	0xFF6
 23453                           tablat	equ	0xFF5
 23454                           prodh	equ	0xFF4
 23455                           prodl	equ	0xFF3
 23456                           intcon	equ	0xFF2
 23457                           intcon2	equ	0xFF1
 23458                           intcon3	equ	0xFF0
 23459                           indf0	equ	0xFEF
 23460                           postinc0	equ	0xFEE
 23461                           plusw0	equ	0xFEB
 23462                           fsr0h	equ	0xFEA
 23463                           fsr0l	equ	0xFE9
 23464                           wreg	equ	0xFE8
 23465                           indf1	equ	0xFE7
 23466                           postinc1	equ	0xFE6
 23467                           postdec1	equ	0xFE5
 23468                           fsr1h	equ	0xFE2
 23469                           fsr1l	equ	0xFE1
 23470                           indf2	equ	0xFDF
 23471                           postinc2	equ	0xFDE
 23472                           postdec2	equ	0xFDD
 23473                           plusw2	equ	0xFDB
 23474                           fsr2h	equ	0xFDA
 23475                           fsr2l	equ	0xFD9
 23476                           status	equ	0xFD8
 23477                           
 23478 ;; *************** function _Eeprom_Read *****************
 23479 ;; Defined at:
 23480 ;;		line 104 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/05_Eeprom/eeprom_if.c"
 23481 ;; Parameters:    Size  Location     Type
 23482 ;;  MemoryAddres    1    wreg     unsigned char 
 23483 ;;  ReadBuffer      2   73[BANK0 ] PTR unsigned char 
 23484 ;;		 -> findEmptySpot@readBuffer(13), isNumberInMemory@readBuffer(13), memoryPreamble(5), 
 23485 ;;  DataLength      1   75[BANK0 ] unsigned char 
 23486 ;; Auto vars:     Size  Location     Type
 23487 ;;  MemoryAddres    1   76[BANK0 ] unsigned char 
 23488 ;;  QuerySts        1   79[BANK0 ] enum E8930
 23489 ;;  ReadSts         1   78[BANK0 ] enum E8956
 23490 ;;  SlaveAddress    1   77[BANK0 ] const unsigned char 
 23491 ;; Return value:  Size  Location     Type
 23492 ;;                  1    wreg      enum E8956
 23493 ;; Registers used:
 23494 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 23495 ;; Tracked objects:
 23496 ;;		On entry : 0/0
 23497 ;;		On exit  : 0/0
 23498 ;;		Unchanged: 0/0
 23499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23500 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23501 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23503 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23504 ;;Total ram usage:        7 bytes
 23505 ;; Hardware stack levels used:    1
 23506 ;; Hardware stack levels required when called:   16
 23507 ;; This function calls:
 23508 ;;		_I2cSlv_QueryI2cData
 23509 ;; This function is called by:
 23510 ;;		_initEeprom
 23511 ;;		_isNumberInMemory
 23512 ;;		_findEmptySpot
 23513 ;; This function uses a non-reentrant model
 23514 ;;
 23515                           
 23516                           	psect	text107
 23517  0058B2                     __ptext107:
 23518                           	opt stack 0
 23519  0058B2                     _Eeprom_Read:
 23520                           	opt stack 10
 23521                           
 23522                           ; BSR set to: 0
 23523                           ;incstack = 0
 23524                           ;Eeprom_Read@MemoryAddress stored from wreg
 23525  0058B2  0100               	movlb	0	; () banked
 23526  0058B4  6FAC               	movwf	Eeprom_Read@MemoryAddress& (0+255),b
 23527                           
 23528                           ;eeprom_if.c: 106: const UINT8 SlaveAddress = 0x50;
 23529  0058B6  0E50               	movlw	80
 23530  0058B8  0100               	movlb	0	; () banked
 23531  0058BA  6FAD               	movwf	Eeprom_Read@SlaveAddress& (0+255),b
 23532                           
 23533                           ;eeprom_if.c: 107: I2cOpStsType QuerySts = OP_IN_PROGRESS;
 23534  0058BC  0E00               	movlw	0
 23535  0058BE  6FAF               	movwf	Eeprom_Read@QuerySts& (0+255),b
 23536                           
 23537                           ;eeprom_if.c: 108: EepromStsType ReadSts = OP_PENDING;
 23538  0058C0  0E02               	movlw	2
 23539  0058C2  6FAE               	movwf	Eeprom_Read@ReadSts& (0+255),b
 23540                           
 23541                           ; BSR set to: 0
 23542                           ;eeprom_if.c: 109: ReadAddress[0] = MemoryAddress;
 23543  0058C4  C0AC  F1FC         	movff	Eeprom_Read@MemoryAddress,_ReadAddress
 23544                           
 23545                           ; BSR set to: 0
 23546                           ;eeprom_if.c: 111: QuerySts = I2cSlv_QueryI2cData(ReadAddress, 1, ReadBuffer, DataLength
      +                          , SlaveAddress);
 23547  0058C8  0EFC               	movlw	low _ReadAddress
 23548  0058CA  6FA2               	movwf	I2cSlv_QueryI2cData@TxBuffer& (0+255),b
 23549  0058CC  0E01               	movlw	high _ReadAddress
 23550  0058CE  6FA3               	movwf	(I2cSlv_QueryI2cData@TxBuffer+1)& (0+255),b
 23551  0058D0  0E01               	movlw	1
 23552  0058D2  6FA4               	movwf	I2cSlv_QueryI2cData@TxLen& (0+255),b
 23553  0058D4  C0A9  F0A5         	movff	Eeprom_Read@ReadBuffer,I2cSlv_QueryI2cData@RxBuffer
 23554  0058D8  C0AA  F0A6         	movff	Eeprom_Read@ReadBuffer+1,I2cSlv_QueryI2cData@RxBuffer+1
 23555  0058DC  C0AB  F0A7         	movff	Eeprom_Read@DataLength,I2cSlv_QueryI2cData@RxLen
 23556  0058E0  C0AD  F0A8         	movff	Eeprom_Read@SlaveAddress,I2cSlv_QueryI2cData@SlaveAddr
 23557  0058E4  EC04  F01D         	call	_I2cSlv_QueryI2cData	;wreg free
 23558  0058E8  0100               	movlb	0	; () banked
 23559  0058EA  6FAF               	movwf	Eeprom_Read@QuerySts& (0+255),b
 23560                           
 23561                           ; BSR set to: 0
 23562                           ;eeprom_if.c: 113: if (QuerySts == OP_COMPLETE)
 23563  0058EC  05AF               	decf	Eeprom_Read@QuerySts& (0+255),w,b
 23564  0058EE  A4D8               	btfss	status,2,c
 23565  0058F0  D002               	goto	l2032
 23566                           
 23567                           ; BSR set to: 0
 23568                           ;eeprom_if.c: 114: {
 23569                           ;eeprom_if.c: 115: ReadSts = OP_SUCCESS;
 23570  0058F2  0E00               	movlw	0
 23571  0058F4  D005               	goto	L30
 23572  0058F6                     l2032:
 23573                           
 23574                           ; BSR set to: 0
 23575                           ;eeprom_if.c: 117: else if (QuerySts == OP_TIMEOUT)
 23576                           
 23577                           ; BSR set to: 0
 23578  0058F6  0E02               	movlw	2
 23579  0058F8  19AF               	xorwf	Eeprom_Read@QuerySts& (0+255),w,b
 23580  0058FA  A4D8               	btfss	status,2,c
 23581  0058FC  D002               	goto	l2034
 23582                           
 23583                           ; BSR set to: 0
 23584                           ;eeprom_if.c: 118: {
 23585                           ;eeprom_if.c: 119: ReadSts = OP_FAILED;
 23586  0058FE  0E01               	movlw	1
 23587  005900                     L30:
 23588  005900  6FAE               	movwf	Eeprom_Read@ReadSts& (0+255),b
 23589  005902                     l2034:
 23590                           
 23591                           ; BSR set to: 0
 23592                           ;eeprom_if.c: 120: }
 23593                           ;eeprom_if.c: 121: return ReadSts;
 23594                           
 23595                           ; BSR set to: 0
 23596  005902  51AE               	movf	Eeprom_Read@ReadSts& (0+255),w,b
 23597  005904  0012               	return	
 23598  005906                     __end_of_Eeprom_Read:
 23599                           	opt stack 0
 23600                           tosu	equ	0xFFF
 23601                           tosh	equ	0xFFE
 23602                           tosl	equ	0xFFD
 23603                           pclath	equ	0xFFA
 23604                           tblptru	equ	0xFF8
 23605                           tblptrh	equ	0xFF7
 23606                           tblptrl	equ	0xFF6
 23607                           tablat	equ	0xFF5
 23608                           prodh	equ	0xFF4
 23609                           prodl	equ	0xFF3
 23610                           intcon	equ	0xFF2
 23611                           intcon2	equ	0xFF1
 23612                           intcon3	equ	0xFF0
 23613                           indf0	equ	0xFEF
 23614                           postinc0	equ	0xFEE
 23615                           plusw0	equ	0xFEB
 23616                           fsr0h	equ	0xFEA
 23617                           fsr0l	equ	0xFE9
 23618                           wreg	equ	0xFE8
 23619                           indf1	equ	0xFE7
 23620                           postinc1	equ	0xFE6
 23621                           postdec1	equ	0xFE5
 23622                           fsr1h	equ	0xFE2
 23623                           fsr1l	equ	0xFE1
 23624                           indf2	equ	0xFDF
 23625                           postinc2	equ	0xFDE
 23626                           postdec2	equ	0xFDD
 23627                           plusw2	equ	0xFDB
 23628                           fsr2h	equ	0xFDA
 23629                           fsr2l	equ	0xFD9
 23630                           status	equ	0xFD8
 23631                           
 23632 ;; *************** function _I2cSlv_QueryI2cData *****************
 23633 ;; Defined at:
 23634 ;;		line 381 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 23635 ;; Parameters:    Size  Location     Type
 23636 ;;  TxBuffer        2   66[BANK0 ] PTR unsigned char 
 23637 ;;		 -> ReadAddress(1), 
 23638 ;;  TxLen           1   68[BANK0 ] unsigned char 
 23639 ;;  RxBuffer        2   69[BANK0 ] PTR unsigned char 
 23640 ;;		 -> findEmptySpot@readBuffer(13), isNumberInMemory@readBuffer(13), memoryPreamble(5), 
 23641 ;;  RxLen           1   71[BANK0 ] unsigned char 
 23642 ;;  SlaveAddr       1   72[BANK0 ] unsigned char 
 23643 ;; Auto vars:     Size  Location     Type
 23644 ;;		None
 23645 ;; Return value:  Size  Location     Type
 23646 ;;                  1    wreg      enum E8943
 23647 ;; Registers used:
 23648 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 23649 ;; Tracked objects:
 23650 ;;		On entry : 0/0
 23651 ;;		On exit  : 0/0
 23652 ;;		Unchanged: 0/0
 23653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23654 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23655 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23656 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23657 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23658 ;;Total ram usage:        7 bytes
 23659 ;; Hardware stack levels used:    1
 23660 ;; Hardware stack levels required when called:   15
 23661 ;; This function calls:
 23662 ;;		_I2cSlv_I2cReadMsgSts
 23663 ;;		_I2cSlv_ReceiveI2cMsg
 23664 ;;		_I2cSlv_SendI2cMsg
 23665 ;;		_OsTmr_GetTimerStatus
 23666 ;;		_OsTmr_StartTimer
 23667 ;;		_OsTmr_Wait
 23668 ;; This function is called by:
 23669 ;;		_Eeprom_Read
 23670 ;; This function uses a non-reentrant model
 23671 ;;
 23672                           
 23673                           	psect	text108
 23674  003A08                     __ptext108:
 23675                           	opt stack 0
 23676  003A08                     _I2cSlv_QueryI2cData:
 23677                           	opt stack 10
 23678                           
 23679                           ;i2c_slv.c: 383: static I2cOpStateType I2cOpState = ASK_DATA;
 23680                           ;i2c_slv.c: 384: static SwTimerType QueryTimer;
 23681                           ;i2c_slv.c: 385: static SwTimerType TimeoutTimer;
 23682                           ;i2c_slv.c: 386: static I2cOpStsType Ret;
 23683                           ;i2c_slv.c: 388: switch(I2cOpState)
 23684                           
 23685                           ; BSR set to: 0
 23686                           ;incstack = 0
 23687  003A08  D05B               	goto	l1437
 23688  003A0A                     
 23689                           ;i2c_slv.c: 392: I2cSlv_SendI2cMsg(TxBuffer, SlaveAddr, TxLen);
 23690  003A0A  C0A2  F080         	movff	I2cSlv_QueryI2cData@TxBuffer,I2cSlv_SendI2cMsg@TxBuffer
 23691  003A0E  C0A3  F081         	movff	I2cSlv_QueryI2cData@TxBuffer+1,I2cSlv_SendI2cMsg@TxBuffer+1
 23692  003A12  C0A8  F082         	movff	I2cSlv_QueryI2cData@SlaveAddr,I2cSlv_SendI2cMsg@SlaveAddr
 23693  003A16  C0A4  F083         	movff	I2cSlv_QueryI2cData@TxLen,I2cSlv_SendI2cMsg@DataLenght
 23694  003A1A  ECFB  F02F         	call	_I2cSlv_SendI2cMsg	;wreg free
 23695                           
 23696                           ;i2c_slv.c: 394: I2cOpState = REQ_DATA;
 23697  003A1E  0E01               	movlw	1
 23698  003A20  0101               	movlb	1	; () banked
 23699  003A22  6FE5               	movwf	I2cSlv_QueryI2cData@I2cOpState& (0+255),b
 23700                           
 23701                           ; BSR set to: 1
 23702                           ;i2c_slv.c: 396: Ret = OP_IN_PROGRESS;
 23703  003A24  0E00               	movlw	0
 23704  003A26  D04A               	goto	L34
 23705  003A28                     
 23706                           ; BSR set to: 1
 23707                           ;i2c_slv.c: 401: if (OsTmr_Wait(&QueryTimer,500u) == DelayExpired)
 23708                           
 23709                           ; BSR set to: 1
 23710  003A28  0EE4               	movlw	low I2cSlv_QueryI2cData@QueryTimer
 23711  003A2A  0100               	movlb	0	; () banked
 23712  003A2C  6F9B               	movwf	OsTmr_Wait@WaitTimer& (0+255),b
 23713  003A2E  0E04               	movlw	high I2cSlv_QueryI2cData@QueryTimer
 23714  003A30  6F9C               	movwf	(OsTmr_Wait@WaitTimer+1)& (0+255),b
 23715  003A32  0EF4               	movlw	244
 23716  003A34  6F9D               	movwf	OsTmr_Wait@DelayMs& (0+255),b
 23717  003A36  0E01               	movlw	1
 23718  003A38  6F9E               	movwf	(OsTmr_Wait@DelayMs+1)& (0+255),b
 23719  003A3A  0E00               	movlw	0
 23720  003A3C  6F9F               	movwf	(OsTmr_Wait@DelayMs+2)& (0+255),b
 23721  003A3E  0E00               	movlw	0
 23722  003A40  6FA0               	movwf	(OsTmr_Wait@DelayMs+3)& (0+255),b
 23723  003A42  EC40  F028         	call	_OsTmr_Wait	;wreg free
 23724  003A46  06E8               	decf	wreg,f,c
 23725  003A48  A4D8               	btfss	status,2,c
 23726  003A4A  D036               	goto	l1445
 23727                           
 23728                           ;i2c_slv.c: 402: {
 23729                           ;i2c_slv.c: 403: OsTmr_StartTimer(&TimeoutTimer,500u * 5u);
 23730  003A4C  0E3D               	movlw	low I2cSlv_QueryI2cData@TimeoutTimer
 23731  003A4E  0100               	movlb	0	; () banked
 23732  003A50  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 23733  003A52  0E03               	movlw	high I2cSlv_QueryI2cData@TimeoutTimer
 23734  003A54  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 23735  003A56  0EC4               	movlw	196
 23736  003A58  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 23737  003A5A  0E09               	movlw	9
 23738  003A5C  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 23739  003A5E  0E00               	movlw	0
 23740  003A60  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 23741  003A62  0E00               	movlw	0
 23742  003A64  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 23743  003A66  ECF8  F02A         	call	_OsTmr_StartTimer	;wreg free
 23744                           
 23745                           ;i2c_slv.c: 404: I2cSlv_ReceiveI2cMsg(RxBuffer, SlaveAddr, RxLen);
 23746  003A6A  C0A5  F080         	movff	I2cSlv_QueryI2cData@RxBuffer,I2cSlv_ReceiveI2cMsg@RxBuffer
 23747  003A6E  C0A6  F081         	movff	I2cSlv_QueryI2cData@RxBuffer+1,I2cSlv_ReceiveI2cMsg@RxBuffer+1
 23748  003A72  C0A8  F082         	movff	I2cSlv_QueryI2cData@SlaveAddr,I2cSlv_ReceiveI2cMsg@SlaveAddr
 23749  003A76  C0A7  F083         	movff	I2cSlv_QueryI2cData@RxLen,I2cSlv_ReceiveI2cMsg@DataLenght
 23750  003A7A  EC9C  F02F         	call	_I2cSlv_ReceiveI2cMsg	;wreg free
 23751                           
 23752                           ;i2c_slv.c: 405: I2cOpState = GET_DATA;
 23753  003A7E  0E02               	movlw	2
 23754  003A80  0101               	movlb	1	; () banked
 23755  003A82  6FE5               	movwf	I2cSlv_QueryI2cData@I2cOpState& (0+255),b
 23756  003A84  D019               	goto	l1445
 23757  003A86                     
 23758                           ; BSR set to: 1
 23759                           ;i2c_slv.c: 413: if (I2cSlv_I2cReadMsgSts() == MessageReceived)
 23760                           
 23761                           ; BSR set to: 1
 23762  003A86  ECB8  F032         	call	_I2cSlv_I2cReadMsgSts	;wreg free
 23763  003A8A  06E8               	decf	wreg,f,c
 23764  003A8C  A4D8               	btfss	status,2,c
 23765  003A8E  D005               	goto	l1443
 23766                           
 23767                           ;i2c_slv.c: 414: {
 23768                           ;i2c_slv.c: 416: I2cOpState = ASK_DATA;
 23769  003A90  0E00               	movlw	0
 23770  003A92  0101               	movlb	1	; () banked
 23771  003A94  6FE5               	movwf	I2cSlv_QueryI2cData@I2cOpState& (0+255),b
 23772                           
 23773                           ;i2c_slv.c: 418: Ret = OP_COMPLETE;
 23774  003A96  0E01               	movlw	1
 23775  003A98  D011               	goto	L34
 23776  003A9A                     l1443:
 23777                           
 23778                           ;i2c_slv.c: 420: else
 23779                           ;i2c_slv.c: 421: {
 23780                           ;i2c_slv.c: 422: if (OsTmr_GetTimerStatus(&TimeoutTimer) == SwTimerExpired)
 23781                           
 23782                           ; BSR set to: 1
 23783  003A9A  0E3D               	movlw	low I2cSlv_QueryI2cData@TimeoutTimer
 23784  003A9C  0100               	movlb	0	; () banked
 23785  003A9E  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 23786  003AA0  0E03               	movlw	high I2cSlv_QueryI2cData@TimeoutTimer
 23787  003AA2  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 23788  003AA4  EC5C  F026         	call	_OsTmr_GetTimerStatus	;wreg free
 23789  003AA8  06E8               	decf	wreg,f,c
 23790  003AAA  A4D8               	btfss	status,2,c
 23791  003AAC  D005               	goto	l1445
 23792                           
 23793                           ;i2c_slv.c: 423: {
 23794                           ;i2c_slv.c: 425: I2cOpState = ASK_DATA;
 23795  003AAE  0E00               	movlw	0
 23796  003AB0  0101               	movlb	1	; () banked
 23797  003AB2  6FE5               	movwf	I2cSlv_QueryI2cData@I2cOpState& (0+255),b
 23798                           
 23799                           ;i2c_slv.c: 427: Ret = OP_TIMEOUT;
 23800  003AB4  0E02               	movlw	2
 23801  003AB6  D002               	goto	L34
 23802  003AB8                     l1445:
 23803                           
 23804                           ;i2c_slv.c: 429: else
 23805                           ;i2c_slv.c: 430: {
 23806                           ;i2c_slv.c: 432: Ret = OP_IN_PROGRESS;
 23807                           
 23808                           ; BSR set to: 1
 23809  003AB8  0E00               	movlw	0
 23810  003ABA  0101               	movlb	1	; () banked
 23811  003ABC                     L34:
 23812  003ABC  6FE4               	movwf	I2cSlv_QueryI2cData@Ret& (0+255),b
 23813                           
 23814                           ; BSR set to: 1
 23815                           ;i2c_slv.c: 439: }
 23816                           
 23817                           ; BSR set to: 1
 23818                           ;i2c_slv.c: 438: break;
 23819                           
 23820                           ;i2c_slv.c: 437: default:
 23821                           
 23822                           ; BSR set to: 1
 23823                           ;i2c_slv.c: 433: }
 23824                           ;i2c_slv.c: 434: }
 23825                           ;i2c_slv.c: 435: break;
 23826                           
 23827                           ; BSR set to: 1
 23828  003ABE  D00B               	goto	l1439
 23829  003AC0                     l1437:
 23830                           
 23831                           ; BSR set to: 1
 23832  003AC0  0101               	movlb	1	; () banked
 23833  003AC2  51E5               	movf	I2cSlv_QueryI2cData@I2cOpState& (0+255),w,b
 23834                           
 23835                           ; Switch size 1, requested type "space"
 23836                           ; Number of cases is 3, Range of values is 0 to 2
 23837                           ; switch strategies available:
 23838                           ; Name         Instructions Cycles
 23839                           ; simple_byte           10     6 (average)
 23840                           ;	Chosen strategy is simple_byte
 23841  003AC4  0A00               	xorlw	0	; case 0
 23842  003AC6  B4D8               	btfsc	status,2,c
 23843  003AC8  D7A0               	goto	l1438
 23844  003ACA  0A01               	xorlw	1	; case 1
 23845  003ACC  B4D8               	btfsc	status,2,c
 23846  003ACE  D7AC               	goto	l1440
 23847  003AD0  0A03               	xorlw	3	; case 2
 23848  003AD2  B4D8               	btfsc	status,2,c
 23849  003AD4  D7D8               	goto	l1442
 23850  003AD6                     l1439:
 23851                           
 23852                           ; BSR set to: 1
 23853                           ;i2c_slv.c: 441: return Ret;
 23854                           
 23855                           ; BSR set to: 1
 23856  003AD6  51E4               	movf	I2cSlv_QueryI2cData@Ret& (0+255),w,b
 23857  003AD8  0012               	return	
 23858  003ADA                     __end_of_I2cSlv_QueryI2cData:
 23859                           	opt stack 0
 23860                           tosu	equ	0xFFF
 23861                           tosh	equ	0xFFE
 23862                           tosl	equ	0xFFD
 23863                           pclath	equ	0xFFA
 23864                           tblptru	equ	0xFF8
 23865                           tblptrh	equ	0xFF7
 23866                           tblptrl	equ	0xFF6
 23867                           tablat	equ	0xFF5
 23868                           prodh	equ	0xFF4
 23869                           prodl	equ	0xFF3
 23870                           intcon	equ	0xFF2
 23871                           intcon2	equ	0xFF1
 23872                           intcon3	equ	0xFF0
 23873                           indf0	equ	0xFEF
 23874                           postinc0	equ	0xFEE
 23875                           plusw0	equ	0xFEB
 23876                           fsr0h	equ	0xFEA
 23877                           fsr0l	equ	0xFE9
 23878                           wreg	equ	0xFE8
 23879                           indf1	equ	0xFE7
 23880                           postinc1	equ	0xFE6
 23881                           postdec1	equ	0xFE5
 23882                           fsr1h	equ	0xFE2
 23883                           fsr1l	equ	0xFE1
 23884                           indf2	equ	0xFDF
 23885                           postinc2	equ	0xFDE
 23886                           postdec2	equ	0xFDD
 23887                           plusw2	equ	0xFDB
 23888                           fsr2h	equ	0xFDA
 23889                           fsr2l	equ	0xFD9
 23890                           status	equ	0xFD8
 23891                           
 23892 ;; *************** function _OsTmr_Wait *****************
 23893 ;; Defined at:
 23894 ;;		line 154 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 23895 ;; Parameters:    Size  Location     Type
 23896 ;;  WaitTimer       2   59[BANK0 ] PTR struct _SwTimerType
 23897 ;;		 -> Terminal@SwTimer(11), I2cSlv_QueryI2cData@QueryTimer(11), 
 23898 ;;  DelayMs         4   61[BANK0 ] unsigned long 
 23899 ;; Auto vars:     Size  Location     Type
 23900 ;;  Ret             1   65[BANK0 ] enum E7749
 23901 ;; Return value:  Size  Location     Type
 23902 ;;                  1    wreg      enum E7749
 23903 ;; Registers used:
 23904 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 23905 ;; Tracked objects:
 23906 ;;		On entry : 0/0
 23907 ;;		On exit  : 0/0
 23908 ;;		Unchanged: 0/0
 23909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23910 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23911 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23913 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23914 ;;Total ram usage:        7 bytes
 23915 ;; Hardware stack levels used:    1
 23916 ;; Hardware stack levels required when called:   14
 23917 ;; This function calls:
 23918 ;;		_OsTmr_GetTimerStatus
 23919 ;;		_OsTmr_StartTimer
 23920 ;; This function is called by:
 23921 ;;		_I2cSlv_QueryI2cData
 23922 ;;		_Terminal
 23923 ;; This function uses a non-reentrant model
 23924 ;;
 23925                           
 23926                           	psect	text109
 23927  005080                     __ptext109:
 23928                           	opt stack 0
 23929  005080                     _OsTmr_Wait:
 23930                           	opt stack 11
 23931                           
 23932                           ;os_timers.c: 156: DelayStatusType Ret = DelayNotExpired;
 23933                           
 23934                           ; BSR set to: 1
 23935                           ;incstack = 0
 23936  005080  0E00               	movlw	0
 23937  005082  0100               	movlb	0	; () banked
 23938  005084  6FA1               	movwf	OsTmr_Wait@Ret& (0+255),b
 23939                           
 23940                           ;os_timers.c: 158: switch (WaitTimer->WaitState)
 23941  005086  D02D               	goto	l855
 23942  005088                     
 23943                           ; BSR set to: 0
 23944                           ;os_timers.c: 162: OsTmr_StartTimer(WaitTimer,DelayMs);
 23945                           
 23946                           ; BSR set to: 0
 23947  005088  C09B  F081         	movff	OsTmr_Wait@WaitTimer,OsTmr_StartTimer@Timer
 23948  00508C  C09C  F082         	movff	OsTmr_Wait@WaitTimer+1,OsTmr_StartTimer@Timer+1
 23949  005090  C09D  F083         	movff	OsTmr_Wait@DelayMs,OsTmr_StartTimer@Timeout
 23950  005094  C09E  F084         	movff	OsTmr_Wait@DelayMs+1,OsTmr_StartTimer@Timeout+1
 23951  005098  C09F  F085         	movff	OsTmr_Wait@DelayMs+2,OsTmr_StartTimer@Timeout+2
 23952  00509C  C0A0  F086         	movff	OsTmr_Wait@DelayMs+3,OsTmr_StartTimer@Timeout+3
 23953  0050A0  ECF8  F02A         	call	_OsTmr_StartTimer	;wreg free
 23954                           
 23955                           ;os_timers.c: 164: WaitTimer->WaitState = WtWait;
 23956  0050A4  0100               	movlb	0	; () banked
 23957  0050A6  EE20 F00A          	lfsr	2,10
 23958  0050AA  519B               	movf	OsTmr_Wait@WaitTimer& (0+255),w,b
 23959  0050AC  26D9               	addwf	fsr2l,f,c
 23960  0050AE  519C               	movf	(OsTmr_Wait@WaitTimer+1)& (0+255),w,b
 23961  0050B0  22DA               	addwfc	fsr2h,f,c
 23962  0050B2  0E01               	movlw	1
 23963  0050B4  6EDF               	movwf	indf2,c
 23964                           
 23965                           ;os_timers.c: 165: break;
 23966  0050B6  D022               	goto	l857
 23967  0050B8                     
 23968                           ; BSR set to: 0
 23969                           ;os_timers.c: 169: if (OsTmr_GetTimerStatus(WaitTimer) == SwTimerExpired)
 23970                           
 23971                           ; BSR set to: 0
 23972  0050B8  C09B  F095         	movff	OsTmr_Wait@WaitTimer,OsTmr_GetTimerStatus@Timer
 23973  0050BC  C09C  F096         	movff	OsTmr_Wait@WaitTimer+1,OsTmr_GetTimerStatus@Timer+1
 23974  0050C0  EC5C  F026         	call	_OsTmr_GetTimerStatus	;wreg free
 23975  0050C4  06E8               	decf	wreg,f,c
 23976  0050C6  A4D8               	btfss	status,2,c
 23977  0050C8  D019               	goto	l857
 23978                           
 23979                           ;os_timers.c: 170: {
 23980                           ;os_timers.c: 172: WaitTimer->WaitState = WtStartSwTimer;
 23981  0050CA  0100               	movlb	0	; () banked
 23982  0050CC  EE20 F00A          	lfsr	2,10
 23983  0050D0  519B               	movf	OsTmr_Wait@WaitTimer& (0+255),w,b
 23984  0050D2  26D9               	addwf	fsr2l,f,c
 23985  0050D4  519C               	movf	(OsTmr_Wait@WaitTimer+1)& (0+255),w,b
 23986  0050D6  22DA               	addwfc	fsr2h,f,c
 23987  0050D8  0E00               	movlw	0
 23988  0050DA  6EDF               	movwf	indf2,c
 23989                           
 23990                           ; BSR set to: 0
 23991                           ;os_timers.c: 174: Ret = DelayExpired;
 23992  0050DC  0E01               	movlw	1
 23993  0050DE  6FA1               	movwf	OsTmr_Wait@Ret& (0+255),b
 23994                           
 23995                           ; BSR set to: 0
 23996                           ;os_timers.c: 180: }
 23997                           
 23998                           ; BSR set to: 0
 23999                           ;os_timers.c: 179: break;
 24000                           
 24001                           ;os_timers.c: 178: default:
 24002                           
 24003                           ; BSR set to: 0
 24004                           ;os_timers.c: 175: }
 24005                           ;os_timers.c: 176: break;
 24006  0050E0  D00D               	goto	l857
 24007  0050E2                     l855:
 24008                           
 24009                           ; BSR set to: 0
 24010                           
 24011                           ; BSR set to: 0
 24012  0050E2  EE20 F00A          	lfsr	2,10
 24013  0050E6  519B               	movf	OsTmr_Wait@WaitTimer& (0+255),w,b
 24014  0050E8  26D9               	addwf	fsr2l,f,c
 24015  0050EA  519C               	movf	(OsTmr_Wait@WaitTimer+1)& (0+255),w,b
 24016  0050EC  22DA               	addwfc	fsr2h,f,c
 24017  0050EE  50DF               	movf	indf2,w,c
 24018                           
 24019                           ; Switch size 1, requested type "space"
 24020                           ; Number of cases is 2, Range of values is 0 to 1
 24021                           ; switch strategies available:
 24022                           ; Name         Instructions Cycles
 24023                           ; simple_byte            7     4 (average)
 24024                           ;	Chosen strategy is simple_byte
 24025  0050F0  0A00               	xorlw	0	; case 0
 24026  0050F2  B4D8               	btfsc	status,2,c
 24027  0050F4  D7C9               	goto	l856
 24028  0050F6  0A01               	xorlw	1	; case 1
 24029  0050F8  B4D8               	btfsc	status,2,c
 24030  0050FA  D7DE               	goto	l858
 24031  0050FC                     l857:
 24032                           
 24033                           ;os_timers.c: 182: return Ret;
 24034                           
 24035                           ; BSR set to: 0
 24036  0050FC  0100               	movlb	0	; () banked
 24037  0050FE  51A1               	movf	OsTmr_Wait@Ret& (0+255),w,b
 24038  005100  0012               	return	
 24039  005102                     __end_of_OsTmr_Wait:
 24040                           	opt stack 0
 24041                           tosu	equ	0xFFF
 24042                           tosh	equ	0xFFE
 24043                           tosl	equ	0xFFD
 24044                           pclath	equ	0xFFA
 24045                           tblptru	equ	0xFF8
 24046                           tblptrh	equ	0xFF7
 24047                           tblptrl	equ	0xFF6
 24048                           tablat	equ	0xFF5
 24049                           prodh	equ	0xFF4
 24050                           prodl	equ	0xFF3
 24051                           intcon	equ	0xFF2
 24052                           intcon2	equ	0xFF1
 24053                           intcon3	equ	0xFF0
 24054                           indf0	equ	0xFEF
 24055                           postinc0	equ	0xFEE
 24056                           plusw0	equ	0xFEB
 24057                           fsr0h	equ	0xFEA
 24058                           fsr0l	equ	0xFE9
 24059                           wreg	equ	0xFE8
 24060                           indf1	equ	0xFE7
 24061                           postinc1	equ	0xFE6
 24062                           postdec1	equ	0xFE5
 24063                           fsr1h	equ	0xFE2
 24064                           fsr1l	equ	0xFE1
 24065                           indf2	equ	0xFDF
 24066                           postinc2	equ	0xFDE
 24067                           postdec2	equ	0xFDD
 24068                           plusw2	equ	0xFDB
 24069                           fsr2h	equ	0xFDA
 24070                           fsr2l	equ	0xFD9
 24071                           status	equ	0xFD8
 24072                           
 24073 ;; *************** function _I2cSlv_SendI2cMsg *****************
 24074 ;; Defined at:
 24075 ;;		line 252 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 24076 ;; Parameters:    Size  Location     Type
 24077 ;;  TxBuffer        2   32[BANK0 ] PTR unsigned char 
 24078 ;;		 -> triggerRelay@txBuffer(2), Terminal@TermTxBuffer(50), ReadAddress(1), EepromBuffer(15), 
 24079 ;;		 -> I2cDummyTx@DummyBuffer(1), 
 24080 ;;  SlaveAddr       1   34[BANK0 ] unsigned char 
 24081 ;;  DataLenght      1   35[BANK0 ] unsigned char 
 24082 ;; Auto vars:     Size  Location     Type
 24083 ;;  TxSts           1   36[BANK0 ] unsigned char 
 24084 ;; Return value:  Size  Location     Type
 24085 ;;                  1    wreg      unsigned char 
 24086 ;; Registers used:
 24087 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24088 ;; Tracked objects:
 24089 ;;		On entry : 0/0
 24090 ;;		On exit  : 0/0
 24091 ;;		Unchanged: 0/0
 24092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24093 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24094 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24095 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24096 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24097 ;;Total ram usage:        5 bytes
 24098 ;; Hardware stack levels used:    1
 24099 ;; Hardware stack levels required when called:   12
 24100 ;; This function calls:
 24101 ;;		_GenerateEvt
 24102 ;; This function is called by:
 24103 ;;		_I2cSlv_QueryI2cData
 24104 ;;		_Eeprom_Write
 24105 ;;		_Terminal
 24106 ;;		_triggerRelay
 24107 ;; This function uses a non-reentrant model
 24108 ;;
 24109                           
 24110                           	psect	text110
 24111  005FF6                     __ptext110:
 24112                           	opt stack 0
 24113  005FF6                     _I2cSlv_SendI2cMsg:
 24114                           	opt stack 13
 24115                           
 24116                           ;i2c_slv.c: 254: UINT8 TxSts = 0u;
 24117                           
 24118                           ; BSR set to: 0
 24119                           ;incstack = 0
 24120  005FF6  0E00               	movlw	0
 24121  005FF8  0100               	movlb	0	; () banked
 24122  005FFA  6F84               	movwf	I2cSlv_SendI2cMsg@TxSts& (0+255),b
 24123                           
 24124                           ; BSR set to: 0
 24125                           ;i2c_slv.c: 256: if (I2cComSts != TxInProgress)
 24126  005FFC  05CD               	decf	_I2cComSts& (0+255),w,b
 24127  005FFE  B4D8               	btfsc	status,2,c
 24128  006000  D015               	goto	l1409
 24129                           
 24130                           ; BSR set to: 0
 24131                           ;i2c_slv.c: 257: {
 24132                           ;i2c_slv.c: 259: I2cTxPacket.SlaveAddress = SlaveAddr;
 24133  006002  C082  F399         	movff	I2cSlv_SendI2cMsg@SlaveAddr,_I2cTxPacket
 24134                           
 24135                           ; BSR set to: 0
 24136                           ;i2c_slv.c: 260: I2cTxPacket.ReadWrite = ((UINT8)(0));
 24137  006006  0E00               	movlw	0
 24138  006008  0103               	movlb	3	; () banked
 24139  00600A  6F9A               	movwf	(_I2cTxPacket+1)& (0+255),b
 24140                           
 24141                           ; BSR set to: 3
 24142                           ;i2c_slv.c: 261: I2cTxPacket.Lenght = DataLenght;
 24143  00600C  C083  F39D         	movff	I2cSlv_SendI2cMsg@DataLenght,_I2cTxPacket+4
 24144                           
 24145                           ; BSR set to: 3
 24146                           ;i2c_slv.c: 262: I2cTxPacket.Buffer = TxBuffer;
 24147  006010  C080  F39B         	movff	I2cSlv_SendI2cMsg@TxBuffer,_I2cTxPacket+2
 24148  006014  C081  F39C         	movff	I2cSlv_SendI2cMsg@TxBuffer+1,_I2cTxPacket+3
 24149                           
 24150                           ; BSR set to: 3
 24151                           ;i2c_slv.c: 265: GenerateEvt(&I2cWriteDataEvt);
 24152  006018  0ED7               	movlw	low _I2cWriteDataEvt
 24153  00601A  0100               	movlb	0	; () banked
 24154  00601C  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 24155  00601E  0E00               	movlw	high _I2cWriteDataEvt
 24156  006020  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 24157  006022  EC7F  F033         	call	_GenerateEvt	;wreg free
 24158                           
 24159                           ;i2c_slv.c: 267: TxSts = 1u;
 24160  006026  0E01               	movlw	1
 24161  006028  0100               	movlb	0	; () banked
 24162  00602A  D001               	goto	L35
 24163  00602C                     l1409:
 24164                           
 24165                           ; BSR set to: 0
 24166                           ;i2c_slv.c: 269: else
 24167                           ;i2c_slv.c: 270: {
 24168                           ;i2c_slv.c: 272: TxSts = 0u;
 24169                           
 24170                           ; BSR set to: 0
 24171  00602C  0E00               	movlw	0
 24172  00602E                     L35:
 24173  00602E  6F84               	movwf	I2cSlv_SendI2cMsg@TxSts& (0+255),b
 24174                           
 24175                           ; BSR set to: 0
 24176                           ;i2c_slv.c: 273: }
 24177                           ;i2c_slv.c: 275: return TxSts;
 24178  006030  5184               	movf	I2cSlv_SendI2cMsg@TxSts& (0+255),w,b
 24179  006032  0012               	return	
 24180  006034                     __end_of_I2cSlv_SendI2cMsg:
 24181                           	opt stack 0
 24182                           tosu	equ	0xFFF
 24183                           tosh	equ	0xFFE
 24184                           tosl	equ	0xFFD
 24185                           pclath	equ	0xFFA
 24186                           tblptru	equ	0xFF8
 24187                           tblptrh	equ	0xFF7
 24188                           tblptrl	equ	0xFF6
 24189                           tablat	equ	0xFF5
 24190                           prodh	equ	0xFF4
 24191                           prodl	equ	0xFF3
 24192                           intcon	equ	0xFF2
 24193                           intcon2	equ	0xFF1
 24194                           intcon3	equ	0xFF0
 24195                           indf0	equ	0xFEF
 24196                           postinc0	equ	0xFEE
 24197                           plusw0	equ	0xFEB
 24198                           fsr0h	equ	0xFEA
 24199                           fsr0l	equ	0xFE9
 24200                           wreg	equ	0xFE8
 24201                           indf1	equ	0xFE7
 24202                           postinc1	equ	0xFE6
 24203                           postdec1	equ	0xFE5
 24204                           fsr1h	equ	0xFE2
 24205                           fsr1l	equ	0xFE1
 24206                           indf2	equ	0xFDF
 24207                           postinc2	equ	0xFDE
 24208                           postdec2	equ	0xFDD
 24209                           plusw2	equ	0xFDB
 24210                           fsr2h	equ	0xFDA
 24211                           fsr2l	equ	0xFD9
 24212                           status	equ	0xFD8
 24213                           
 24214 ;; *************** function _I2cSlv_ReceiveI2cMsg *****************
 24215 ;; Defined at:
 24216 ;;		line 289 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 24217 ;; Parameters:    Size  Location     Type
 24218 ;;  RxBuffer        2   32[BANK0 ] PTR unsigned char 
 24219 ;;		 -> findEmptySpot@readBuffer(13), isNumberInMemory@readBuffer(13), memoryPreamble(5), Terminal@TermRxBuffer(50), 
 24220 ;;  SlaveAddr       1   34[BANK0 ] unsigned char 
 24221 ;;  DataLenght      1   35[BANK0 ] unsigned char 
 24222 ;; Auto vars:     Size  Location     Type
 24223 ;;  RxSts           1   36[BANK0 ] unsigned char 
 24224 ;; Return value:  Size  Location     Type
 24225 ;;                  1    wreg      unsigned char 
 24226 ;; Registers used:
 24227 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24228 ;; Tracked objects:
 24229 ;;		On entry : 0/0
 24230 ;;		On exit  : 0/0
 24231 ;;		Unchanged: 0/0
 24232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24233 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24234 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24235 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24236 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24237 ;;Total ram usage:        5 bytes
 24238 ;; Hardware stack levels used:    1
 24239 ;; Hardware stack levels required when called:   12
 24240 ;; This function calls:
 24241 ;;		_GenerateEvt
 24242 ;; This function is called by:
 24243 ;;		_I2cSlv_QueryI2cData
 24244 ;;		_Terminal
 24245 ;; This function uses a non-reentrant model
 24246 ;;
 24247                           
 24248                           	psect	text111
 24249  005F38                     __ptext111:
 24250                           	opt stack 0
 24251  005F38                     _I2cSlv_ReceiveI2cMsg:
 24252                           	opt stack 13
 24253                           
 24254                           ;i2c_slv.c: 291: UINT8 RxSts = 0u;
 24255                           
 24256                           ; BSR set to: 0
 24257                           ;incstack = 0
 24258  005F38  0E00               	movlw	0
 24259  005F3A  0100               	movlb	0	; () banked
 24260  005F3C  6F84               	movwf	I2cSlv_ReceiveI2cMsg@RxSts& (0+255),b
 24261                           
 24262                           ; BSR set to: 0
 24263                           ;i2c_slv.c: 293: if (I2cComSts != RxInProgress)
 24264  005F3E  0E02               	movlw	2
 24265  005F40  19CD               	xorwf	_I2cComSts& (0+255),w,b
 24266  005F42  B4D8               	btfsc	status,2,c
 24267  005F44  D016               	goto	l1414
 24268                           
 24269                           ; BSR set to: 0
 24270                           ;i2c_slv.c: 294: {
 24271                           ;i2c_slv.c: 296: I2cRxPacket.SlaveAddress = SlaveAddr;
 24272  005F46  C082  F38E         	movff	I2cSlv_ReceiveI2cMsg@SlaveAddr,_I2cRxPacket
 24273                           
 24274                           ; BSR set to: 0
 24275                           ;i2c_slv.c: 297: I2cRxPacket.ReadWrite = ((UINT8)(1));
 24276  005F4A  0E01               	movlw	1
 24277  005F4C  0103               	movlb	3	; () banked
 24278  005F4E  6F8F               	movwf	(_I2cRxPacket+1)& (0+255),b
 24279                           
 24280                           ; BSR set to: 3
 24281                           ;i2c_slv.c: 298: I2cRxPacket.Lenght = DataLenght;
 24282  005F50  C083  F392         	movff	I2cSlv_ReceiveI2cMsg@DataLenght,_I2cRxPacket+4
 24283                           
 24284                           ; BSR set to: 3
 24285                           ;i2c_slv.c: 299: I2cRxPacket.Buffer = RxBuffer;
 24286  005F54  C080  F390         	movff	I2cSlv_ReceiveI2cMsg@RxBuffer,_I2cRxPacket+2
 24287  005F58  C081  F391         	movff	I2cSlv_ReceiveI2cMsg@RxBuffer+1,_I2cRxPacket+3
 24288                           
 24289                           ; BSR set to: 3
 24290                           ;i2c_slv.c: 302: GenerateEvt(&I2cReadDataEvt);
 24291  005F5C  0ED6               	movlw	low _I2cReadDataEvt
 24292  005F5E  0100               	movlb	0	; () banked
 24293  005F60  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 24294  005F62  0E00               	movlw	high _I2cReadDataEvt
 24295  005F64  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 24296  005F66  EC7F  F033         	call	_GenerateEvt	;wreg free
 24297                           
 24298                           ;i2c_slv.c: 304: RxSts = 1u;
 24299  005F6A  0E01               	movlw	1
 24300  005F6C  0100               	movlb	0	; () banked
 24301  005F6E  6F84               	movwf	I2cSlv_ReceiveI2cMsg@RxSts& (0+255),b
 24302                           
 24303                           ;i2c_slv.c: 305: }
 24304  005F70  0012               	return	
 24305  005F72                     l1414:
 24306                           
 24307                           ; BSR set to: 0
 24308                           ;i2c_slv.c: 306: else
 24309                           ;i2c_slv.c: 307: {
 24310                           ;i2c_slv.c: 309: RxSts = 0u;
 24311                           
 24312                           ; BSR set to: 0
 24313  005F72  0E00               	movlw	0
 24314  005F74  6F84               	movwf	I2cSlv_ReceiveI2cMsg@RxSts& (0+255),b
 24315                           
 24316                           ; BSR set to: 0
 24317  005F76  0012               	return	
 24318  005F78                     __end_of_I2cSlv_ReceiveI2cMsg:
 24319                           	opt stack 0
 24320                           tosu	equ	0xFFF
 24321                           tosh	equ	0xFFE
 24322                           tosl	equ	0xFFD
 24323                           pclath	equ	0xFFA
 24324                           tblptru	equ	0xFF8
 24325                           tblptrh	equ	0xFF7
 24326                           tblptrl	equ	0xFF6
 24327                           tablat	equ	0xFF5
 24328                           prodh	equ	0xFF4
 24329                           prodl	equ	0xFF3
 24330                           intcon	equ	0xFF2
 24331                           intcon2	equ	0xFF1
 24332                           intcon3	equ	0xFF0
 24333                           indf0	equ	0xFEF
 24334                           postinc0	equ	0xFEE
 24335                           plusw0	equ	0xFEB
 24336                           fsr0h	equ	0xFEA
 24337                           fsr0l	equ	0xFE9
 24338                           wreg	equ	0xFE8
 24339                           indf1	equ	0xFE7
 24340                           postinc1	equ	0xFE6
 24341                           postdec1	equ	0xFE5
 24342                           fsr1h	equ	0xFE2
 24343                           fsr1l	equ	0xFE1
 24344                           indf2	equ	0xFDF
 24345                           postinc2	equ	0xFDE
 24346                           postdec2	equ	0xFDD
 24347                           plusw2	equ	0xFDB
 24348                           fsr2h	equ	0xFDA
 24349                           fsr2l	equ	0xFD9
 24350                           status	equ	0xFD8
 24351                           
 24352 ;; *************** function _I2cSlv_I2cReadMsgSts *****************
 24353 ;; Defined at:
 24354 ;;		line 324 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 24355 ;; Parameters:    Size  Location     Type
 24356 ;;		None
 24357 ;; Auto vars:     Size  Location     Type
 24358 ;;  Result          1   33[BANK0 ] enum E8931
 24359 ;; Return value:  Size  Location     Type
 24360 ;;                  1    wreg      enum E8931
 24361 ;; Registers used:
 24362 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24363 ;; Tracked objects:
 24364 ;;		On entry : 0/0
 24365 ;;		On exit  : 0/0
 24366 ;;		Unchanged: 0/0
 24367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24368 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24369 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24370 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24371 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24372 ;;Total ram usage:        1 bytes
 24373 ;; Hardware stack levels used:    1
 24374 ;; Hardware stack levels required when called:   12
 24375 ;; This function calls:
 24376 ;;		_ReceiveEvt
 24377 ;; This function is called by:
 24378 ;;		_I2cSlv_QueryI2cData
 24379 ;;		_Terminal
 24380 ;; This function uses a non-reentrant model
 24381 ;;
 24382                           
 24383                           	psect	text112
 24384  006570                     __ptext112:
 24385                           	opt stack 0
 24386  006570                     _I2cSlv_I2cReadMsgSts:
 24387                           	opt stack 13
 24388                           
 24389                           ;i2c_slv.c: 327: I2cReadMsgStsType Result;
 24390                           ;i2c_slv.c: 330: if (ReceiveEvt(&(I2cRxPacket.ReadCompleteEvt)))
 24391                           
 24392                           ; BSR set to: 0
 24393                           ;incstack = 0
 24394  006570  0E93               	movlw	low (_I2cRxPacket+5)
 24395  006572  0100               	movlb	0	; () banked
 24396  006574  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 24397  006576  0E03               	movlw	high (_I2cRxPacket+5)
 24398  006578  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 24399  00657A  EC8A  F031         	call	_ReceiveEvt	;wreg free
 24400  00657E  0900               	iorlw	0
 24401  006580  B4D8               	btfsc	status,2,c
 24402  006582  D002               	goto	l1419
 24403                           
 24404                           ;i2c_slv.c: 331: {
 24405                           ;i2c_slv.c: 332: Result = MessageReceived;
 24406  006584  0E01               	movlw	1
 24407  006586  D001               	goto	L36
 24408  006588                     l1419:
 24409                           
 24410                           ;i2c_slv.c: 334: else
 24411                           ;i2c_slv.c: 335: {
 24412                           ;i2c_slv.c: 336: Result = MessageNotReceived;
 24413                           
 24414                           ; BSR set to: 0
 24415  006588  0E00               	movlw	0
 24416  00658A                     L36:
 24417  00658A  0100               	movlb	0	; () banked
 24418  00658C  6F81               	movwf	I2cSlv_I2cReadMsgSts@Result& (0+255),b
 24419                           
 24420                           ; BSR set to: 0
 24421                           ;i2c_slv.c: 337: }
 24422                           ;i2c_slv.c: 339: return Result;
 24423  00658E  5181               	movf	I2cSlv_I2cReadMsgSts@Result& (0+255),w,b
 24424  006590  0012               	return	
 24425  006592                     __end_of_I2cSlv_I2cReadMsgSts:
 24426                           	opt stack 0
 24427                           tosu	equ	0xFFF
 24428                           tosh	equ	0xFFE
 24429                           tosl	equ	0xFFD
 24430                           pclath	equ	0xFFA
 24431                           tblptru	equ	0xFF8
 24432                           tblptrh	equ	0xFF7
 24433                           tblptrl	equ	0xFF6
 24434                           tablat	equ	0xFF5
 24435                           prodh	equ	0xFF4
 24436                           prodl	equ	0xFF3
 24437                           intcon	equ	0xFF2
 24438                           intcon2	equ	0xFF1
 24439                           intcon3	equ	0xFF0
 24440                           indf0	equ	0xFEF
 24441                           postinc0	equ	0xFEE
 24442                           plusw0	equ	0xFEB
 24443                           fsr0h	equ	0xFEA
 24444                           fsr0l	equ	0xFE9
 24445                           wreg	equ	0xFE8
 24446                           indf1	equ	0xFE7
 24447                           postinc1	equ	0xFE6
 24448                           postdec1	equ	0xFE5
 24449                           fsr1h	equ	0xFE2
 24450                           fsr1l	equ	0xFE1
 24451                           indf2	equ	0xFDF
 24452                           postinc2	equ	0xFDE
 24453                           postdec2	equ	0xFDD
 24454                           plusw2	equ	0xFDB
 24455                           fsr2h	equ	0xFDA
 24456                           fsr2l	equ	0xFD9
 24457                           status	equ	0xFD8
 24458                           
 24459 ;; *************** function _Mdm_RequestSmsData *****************
 24460 ;; Defined at:
 24461 ;;		line 877 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 24462 ;; Parameters:    Size  Location     Type
 24463 ;;		None
 24464 ;; Auto vars:     Size  Location     Type
 24465 ;;		None
 24466 ;; Return value:  Size  Location     Type
 24467 ;;                  1    wreg      void 
 24468 ;; Registers used:
 24469 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24470 ;; Tracked objects:
 24471 ;;		On entry : 0/0
 24472 ;;		On exit  : 0/0
 24473 ;;		Unchanged: 0/0
 24474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24476 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24478 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24479 ;;Total ram usage:        0 bytes
 24480 ;; Hardware stack levels used:    1
 24481 ;; Hardware stack levels required when called:   12
 24482 ;; This function calls:
 24483 ;;		_GenerateEvt
 24484 ;; This function is called by:
 24485 ;;		_MyApp_Task
 24486 ;; This function uses a non-reentrant model
 24487 ;;
 24488                           
 24489                           	psect	text113
 24490  0067D8                     __ptext113:
 24491                           	opt stack 0
 24492  0067D8                     _Mdm_RequestSmsData:
 24493                           	opt stack 15
 24494                           
 24495                           ;mdm_gsm_gprs.c: 880: GenerateEvt(&GetSmsText);
 24496                           
 24497                           ; BSR set to: 0
 24498                           ;incstack = 0
 24499  0067D8  0EDB               	movlw	low _GetSmsText
 24500  0067DA  0100               	movlb	0	; () banked
 24501  0067DC  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 24502  0067DE  0E00               	movlw	high _GetSmsText
 24503  0067E0  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 24504  0067E2  EC7F  F033         	call	_GenerateEvt	;wreg free
 24505  0067E6  0012               	return		;funcret
 24506  0067E8                     __end_of_Mdm_RequestSmsData:
 24507                           	opt stack 0
 24508                           tosu	equ	0xFFF
 24509                           tosh	equ	0xFFE
 24510                           tosl	equ	0xFFD
 24511                           pclath	equ	0xFFA
 24512                           tblptru	equ	0xFF8
 24513                           tblptrh	equ	0xFF7
 24514                           tblptrl	equ	0xFF6
 24515                           tablat	equ	0xFF5
 24516                           prodh	equ	0xFF4
 24517                           prodl	equ	0xFF3
 24518                           intcon	equ	0xFF2
 24519                           intcon2	equ	0xFF1
 24520                           intcon3	equ	0xFF0
 24521                           indf0	equ	0xFEF
 24522                           postinc0	equ	0xFEE
 24523                           plusw0	equ	0xFEB
 24524                           fsr0h	equ	0xFEA
 24525                           fsr0l	equ	0xFE9
 24526                           wreg	equ	0xFE8
 24527                           indf1	equ	0xFE7
 24528                           postinc1	equ	0xFE6
 24529                           postdec1	equ	0xFE5
 24530                           fsr1h	equ	0xFE2
 24531                           fsr1l	equ	0xFE1
 24532                           indf2	equ	0xFDF
 24533                           postinc2	equ	0xFDE
 24534                           postdec2	equ	0xFDD
 24535                           plusw2	equ	0xFDB
 24536                           fsr2h	equ	0xFDA
 24537                           fsr2l	equ	0xFD9
 24538                           status	equ	0xFD8
 24539                           
 24540 ;; *************** function _Mdm_IsSmsReceived *****************
 24541 ;; Defined at:
 24542 ;;		line 941 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 24543 ;; Parameters:    Size  Location     Type
 24544 ;;		None
 24545 ;; Auto vars:     Size  Location     Type
 24546 ;;  Ret             1   33[BANK0 ] enum E8928
 24547 ;; Return value:  Size  Location     Type
 24548 ;;                  1    wreg      enum E8928
 24549 ;; Registers used:
 24550 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24551 ;; Tracked objects:
 24552 ;;		On entry : 0/0
 24553 ;;		On exit  : 0/0
 24554 ;;		Unchanged: 0/0
 24555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24556 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24557 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24559 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24560 ;;Total ram usage:        1 bytes
 24561 ;; Hardware stack levels used:    1
 24562 ;; Hardware stack levels required when called:   12
 24563 ;; This function calls:
 24564 ;;		_ReceiveEvt
 24565 ;; This function is called by:
 24566 ;;		_MyApp_Task
 24567 ;; This function uses a non-reentrant model
 24568 ;;
 24569                           
 24570                           	psect	text114
 24571  00647E                     __ptext114:
 24572                           	opt stack 0
 24573  00647E                     _Mdm_IsSmsReceived:
 24574                           	opt stack 15
 24575                           
 24576                           ;mdm_gsm_gprs.c: 943: SmsRxStsType Ret = SmsNotReceived;
 24577                           
 24578                           ;incstack = 0
 24579  00647E  0E00               	movlw	0
 24580  006480  0100               	movlb	0	; () banked
 24581  006482  6F81               	movwf	Mdm_IsSmsReceived@Ret& (0+255),b
 24582                           
 24583                           ; BSR set to: 0
 24584                           ;mdm_gsm_gprs.c: 946: if (ReceiveEvt(&SmsEvent))
 24585  006484  0EDC               	movlw	low _SmsEvent
 24586  006486  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 24587  006488  0E00               	movlw	high _SmsEvent
 24588  00648A  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 24589  00648C  EC8A  F031         	call	_ReceiveEvt	;wreg free
 24590  006490  0900               	iorlw	0
 24591  006492  B4D8               	btfsc	status,2,c
 24592  006494  D003               	goto	l1136
 24593                           
 24594                           ;mdm_gsm_gprs.c: 947: {
 24595                           ;mdm_gsm_gprs.c: 948: Ret = SmsReceived;
 24596  006496  0E01               	movlw	1
 24597  006498  0100               	movlb	0	; () banked
 24598  00649A  6F81               	movwf	Mdm_IsSmsReceived@Ret& (0+255),b
 24599  00649C                     l1136:
 24600                           
 24601                           ;mdm_gsm_gprs.c: 949: }
 24602                           ;mdm_gsm_gprs.c: 951: return Ret;
 24603  00649C  0100               	movlb	0	; () banked
 24604  00649E  5181               	movf	Mdm_IsSmsReceived@Ret& (0+255),w,b
 24605  0064A0  0012               	return	
 24606  0064A2                     __end_of_Mdm_IsSmsReceived:
 24607                           	opt stack 0
 24608                           tosu	equ	0xFFF
 24609                           tosh	equ	0xFFE
 24610                           tosl	equ	0xFFD
 24611                           pclath	equ	0xFFA
 24612                           tblptru	equ	0xFF8
 24613                           tblptrh	equ	0xFF7
 24614                           tblptrl	equ	0xFF6
 24615                           tablat	equ	0xFF5
 24616                           prodh	equ	0xFF4
 24617                           prodl	equ	0xFF3
 24618                           intcon	equ	0xFF2
 24619                           intcon2	equ	0xFF1
 24620                           intcon3	equ	0xFF0
 24621                           indf0	equ	0xFEF
 24622                           postinc0	equ	0xFEE
 24623                           plusw0	equ	0xFEB
 24624                           fsr0h	equ	0xFEA
 24625                           fsr0l	equ	0xFE9
 24626                           wreg	equ	0xFE8
 24627                           indf1	equ	0xFE7
 24628                           postinc1	equ	0xFE6
 24629                           postdec1	equ	0xFE5
 24630                           fsr1h	equ	0xFE2
 24631                           fsr1l	equ	0xFE1
 24632                           indf2	equ	0xFDF
 24633                           postinc2	equ	0xFDE
 24634                           postdec2	equ	0xFDD
 24635                           plusw2	equ	0xFDB
 24636                           fsr2h	equ	0xFDA
 24637                           fsr2l	equ	0xFD9
 24638                           status	equ	0xFD8
 24639                           
 24640 ;; *************** function _Mdm_GetSmsData *****************
 24641 ;; Defined at:
 24642 ;;		line 892 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 24643 ;; Parameters:    Size  Location     Type
 24644 ;;  MessageText     2   39[BANK0 ] PTR unsigned char 
 24645 ;;		 -> smsText(20), 
 24646 ;; Auto vars:     Size  Location     Type
 24647 ;;  GetSmsStatus    1   41[BANK0 ] enum E8920
 24648 ;; Return value:  Size  Location     Type
 24649 ;;                  1    wreg      enum E8920
 24650 ;; Registers used:
 24651 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 24652 ;; Tracked objects:
 24653 ;;		On entry : 0/0
 24654 ;;		On exit  : 0/0
 24655 ;;		Unchanged: 0/0
 24656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24657 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24658 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24660 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24661 ;;Total ram usage:        3 bytes
 24662 ;; Hardware stack levels used:    1
 24663 ;; Hardware stack levels required when called:   12
 24664 ;; This function calls:
 24665 ;;		_ReceiveEvt
 24666 ;;		_StringCopy
 24667 ;; This function is called by:
 24668 ;;		_MyApp_Task
 24669 ;; This function uses a non-reentrant model
 24670 ;;
 24671                           
 24672                           	psect	text115
 24673  005396                     __ptext115:
 24674                           	opt stack 0
 24675  005396                     _Mdm_GetSmsData:
 24676                           	opt stack 15
 24677                           
 24678                           ;mdm_gsm_gprs.c: 894: GetSmsStatusType GetSmsStatus = SmsDataNotReady;
 24679                           
 24680                           ; BSR set to: 0
 24681                           ;incstack = 0
 24682  005396  0E00               	movlw	0
 24683  005398  0100               	movlb	0	; () banked
 24684  00539A  6F89               	movwf	Mdm_GetSmsData@GetSmsStatus& (0+255),b
 24685                           
 24686                           ; BSR set to: 0
 24687                           ;mdm_gsm_gprs.c: 897: if (ReceiveEvt(&SmsTxtReady))
 24688  00539C  0EDA               	movlw	low _SmsTxtReady
 24689  00539E  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 24690  0053A0  0E00               	movlw	high _SmsTxtReady
 24691  0053A2  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 24692  0053A4  EC8A  F031         	call	_ReceiveEvt	;wreg free
 24693  0053A8  0900               	iorlw	0
 24694  0053AA  B4D8               	btfsc	status,2,c
 24695  0053AC  D025               	goto	l1129
 24696                           
 24697                           ;mdm_gsm_gprs.c: 898: {
 24698                           ;mdm_gsm_gprs.c: 900: StringCopy(Mdm_SmsRx.MessageBuffer, MessageText, Mdm_SmsRx.TextLen
      +                           + 1);
 24699  0053AE  0E50               	movlw	low (_Mdm_SmsRx+80)
 24700  0053B0  0100               	movlb	0	; () banked
 24701  0053B2  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 24702  0053B4  0E07               	movlw	high (_Mdm_SmsRx+80)
 24703  0053B6  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 24704  0053B8  C087  F07F         	movff	Mdm_GetSmsData@MessageText,StringCopy@DestStr
 24705  0053BC  C088  F080         	movff	Mdm_GetSmsData@MessageText+1,StringCopy@DestStr+1
 24706  0053C0  0E01               	movlw	1
 24707  0053C2  0107               	movlb	7	; () banked
 24708  0053C4  2565               	addwf	(_Mdm_SmsRx+101)& (0+255),w,b
 24709  0053C6  0100               	movlb	0	; () banked
 24710  0053C8  6F81               	movwf	StringCopy@Len& (0+255),b
 24711  0053CA  6B82               	clrf	(StringCopy@Len+1)& (0+255),b
 24712  0053CC  0E00               	movlw	0
 24713  0053CE  2382               	addwfc	(StringCopy@Len+1)& (0+255),f,b
 24714  0053D0  EC98  F02A         	call	_StringCopy	;wreg free
 24715                           
 24716                           ;mdm_gsm_gprs.c: 901: StringCopy(Mdm_SmsRx.HeaderBuffer + 21, callerNumber, ((UINT8)(13)
      +                          ) - 1);
 24717  0053D4  0E15               	movlw	low (_Mdm_SmsRx+21)
 24718  0053D6  0100               	movlb	0	; () banked
 24719  0053D8  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 24720  0053DA  0E07               	movlw	high (_Mdm_SmsRx+21)
 24721  0053DC  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 24722  0053DE  0ECC               	movlw	low _callerNumber
 24723  0053E0  6F7F               	movwf	StringCopy@DestStr& (0+255),b
 24724  0053E2  0E04               	movlw	high _callerNumber
 24725  0053E4  6F80               	movwf	(StringCopy@DestStr+1)& (0+255),b
 24726  0053E6  0E00               	movlw	0
 24727  0053E8  6F82               	movwf	(StringCopy@Len+1)& (0+255),b
 24728  0053EA  0E0C               	movlw	12
 24729  0053EC  6F81               	movwf	StringCopy@Len& (0+255),b
 24730  0053EE  EC98  F02A         	call	_StringCopy	;wreg free
 24731                           
 24732                           ;mdm_gsm_gprs.c: 903: GetSmsStatus = SmsDataReady;
 24733  0053F2  0E01               	movlw	1
 24734  0053F4  0100               	movlb	0	; () banked
 24735  0053F6  6F89               	movwf	Mdm_GetSmsData@GetSmsStatus& (0+255),b
 24736  0053F8                     l1129:
 24737                           
 24738                           ;mdm_gsm_gprs.c: 904: }
 24739                           ;mdm_gsm_gprs.c: 907: return GetSmsStatus;
 24740                           
 24741                           ; BSR set to: 0
 24742  0053F8  0100               	movlb	0	; () banked
 24743  0053FA  5189               	movf	Mdm_GetSmsData@GetSmsStatus& (0+255),w,b
 24744  0053FC  0012               	return	
 24745  0053FE                     __end_of_Mdm_GetSmsData:
 24746                           	opt stack 0
 24747                           tosu	equ	0xFFF
 24748                           tosh	equ	0xFFE
 24749                           tosl	equ	0xFFD
 24750                           pclath	equ	0xFFA
 24751                           tblptru	equ	0xFF8
 24752                           tblptrh	equ	0xFF7
 24753                           tblptrl	equ	0xFF6
 24754                           tablat	equ	0xFF5
 24755                           prodh	equ	0xFF4
 24756                           prodl	equ	0xFF3
 24757                           intcon	equ	0xFF2
 24758                           intcon2	equ	0xFF1
 24759                           intcon3	equ	0xFF0
 24760                           indf0	equ	0xFEF
 24761                           postinc0	equ	0xFEE
 24762                           plusw0	equ	0xFEB
 24763                           fsr0h	equ	0xFEA
 24764                           fsr0l	equ	0xFE9
 24765                           wreg	equ	0xFE8
 24766                           indf1	equ	0xFE7
 24767                           postinc1	equ	0xFE6
 24768                           postdec1	equ	0xFE5
 24769                           fsr1h	equ	0xFE2
 24770                           fsr1l	equ	0xFE1
 24771                           indf2	equ	0xFDF
 24772                           postinc2	equ	0xFDE
 24773                           postdec2	equ	0xFDD
 24774                           plusw2	equ	0xFDB
 24775                           fsr2h	equ	0xFDA
 24776                           fsr2l	equ	0xFD9
 24777                           status	equ	0xFD8
 24778                           
 24779 ;; *************** function _Led_SetLedBlinkTime *****************
 24780 ;; Defined at:
 24781 ;;		line 371 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 24782 ;; Parameters:    Size  Location     Type
 24783 ;;  Led             1    wreg     unsigned char 
 24784 ;;  OnTimeMs        2   29[BANK0 ] unsigned short 
 24785 ;;  OffTimeMs       2   31[BANK0 ] unsigned short 
 24786 ;; Auto vars:     Size  Location     Type
 24787 ;;  Led             1   33[BANK0 ] unsigned char 
 24788 ;; Return value:  Size  Location     Type
 24789 ;;                  1    wreg      void 
 24790 ;; Registers used:
 24791 ;;		wreg, status,2, status,0
 24792 ;; Tracked objects:
 24793 ;;		On entry : 0/0
 24794 ;;		On exit  : 0/0
 24795 ;;		Unchanged: 0/0
 24796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24797 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24798 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24800 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24801 ;;Total ram usage:        5 bytes
 24802 ;; Hardware stack levels used:    1
 24803 ;; Hardware stack levels required when called:   11
 24804 ;; This function calls:
 24805 ;;		Nothing
 24806 ;; This function is called by:
 24807 ;;		_MyApp_Task
 24808 ;; This function uses a non-reentrant model
 24809 ;;
 24810                           
 24811                           	psect	text116
 24812  005906                     __ptext116:
 24813                           	opt stack 0
 24814  005906                     _Led_SetLedBlinkTime:
 24815                           	opt stack 16
 24816                           
 24817                           ; BSR set to: 0
 24818                           ;incstack = 0
 24819                           ;Led_SetLedBlinkTime@Led stored from wreg
 24820  005906  0100               	movlb	0	; () banked
 24821  005908  6F81               	movwf	Led_SetLedBlinkTime@Led& (0+255),b
 24822                           
 24823                           ;led.c: 374: switch (Led)
 24824  00590A  D01B               	goto	l2139
 24825  00590C                     l2140:
 24826                           
 24827                           ; BSR set to: 0
 24828                           ;led.c: 377: Led1Blink.LedOnTimeMs = OnTimeMs;
 24829  00590C  C07D  F368         	movff	Led_SetLedBlinkTime@OnTimeMs,_Led1Blink+4
 24830  005910  C07E  F369         	movff	Led_SetLedBlinkTime@OnTimeMs+1,_Led1Blink+5
 24831                           
 24832                           ;led.c: 378: Led1Blink.LedOffTimeMs = OffTimeMs;
 24833  005914  C07F  F36A         	movff	Led_SetLedBlinkTime@OffTimeMs,_Led1Blink+6
 24834  005918  C080  F36B         	movff	Led_SetLedBlinkTime@OffTimeMs+1,_Led1Blink+7
 24835                           
 24836                           ;led.c: 379: break;
 24837  00591C  0012               	return	
 24838  00591E                     l2142:
 24839                           
 24840                           ; BSR set to: 0
 24841                           ;led.c: 382: Led2Blink.LedOnTimeMs = OnTimeMs;
 24842  00591E  C07D  F35F         	movff	Led_SetLedBlinkTime@OnTimeMs,_Led2Blink+4
 24843  005922  C07E  F360         	movff	Led_SetLedBlinkTime@OnTimeMs+1,_Led2Blink+5
 24844                           
 24845                           ;led.c: 383: Led2Blink.LedOffTimeMs = OffTimeMs;
 24846  005926  C07F  F361         	movff	Led_SetLedBlinkTime@OffTimeMs,_Led2Blink+6
 24847  00592A  C080  F362         	movff	Led_SetLedBlinkTime@OffTimeMs+1,_Led2Blink+7
 24848                           
 24849                           ;led.c: 384: break;
 24850  00592E  0012               	return	
 24851  005930                     l2143:
 24852                           
 24853                           ; BSR set to: 0
 24854                           ;led.c: 387: Led2Blink.LedOnTimeMs = OnTimeMs;
 24855  005930  C07D  F35F         	movff	Led_SetLedBlinkTime@OnTimeMs,_Led2Blink+4
 24856  005934  C07E  F360         	movff	Led_SetLedBlinkTime@OnTimeMs+1,_Led2Blink+5
 24857                           
 24858                           ;led.c: 388: Led2Blink.LedOffTimeMs = OffTimeMs;
 24859  005938  C07F  F361         	movff	Led_SetLedBlinkTime@OffTimeMs,_Led2Blink+6
 24860  00593C  C080  F362         	movff	Led_SetLedBlinkTime@OffTimeMs+1,_Led2Blink+7
 24861                           
 24862                           ; BSR set to: 0
 24863                           ;led.c: 393: }
 24864                           
 24865                           ; BSR set to: 0
 24866                           ;led.c: 392: break;
 24867                           
 24868                           ;led.c: 391: default:
 24869                           
 24870                           ;led.c: 389: break;
 24871  005940  0012               	return	
 24872  005942                     l2139:
 24873                           
 24874                           ; BSR set to: 0
 24875  005942  0100               	movlb	0	; () banked
 24876  005944  5181               	movf	Led_SetLedBlinkTime@Led& (0+255),w,b
 24877                           
 24878                           ; Switch size 1, requested type "space"
 24879                           ; Number of cases is 3, Range of values is 1 to 3
 24880                           ; switch strategies available:
 24881                           ; Name         Instructions Cycles
 24882                           ; simple_byte           10     6 (average)
 24883                           ;	Chosen strategy is simple_byte
 24884  005946  0A01               	xorlw	1	; case 1
 24885  005948  B4D8               	btfsc	status,2,c
 24886  00594A  D7E0               	goto	l2140
 24887  00594C  0A03               	xorlw	3	; case 2
 24888  00594E  B4D8               	btfsc	status,2,c
 24889  005950  D7E6               	goto	l2142
 24890  005952  0A01               	xorlw	1	; case 3
 24891  005954  A4D8               	btfss	status,2,c
 24892  005956  0012               	return	
 24893  005958  D7EB               	goto	l2143
 24894  00595A                     __end_of_Led_SetLedBlinkTime:
 24895                           	opt stack 0
 24896                           tosu	equ	0xFFF
 24897                           tosh	equ	0xFFE
 24898                           tosl	equ	0xFFD
 24899                           pclath	equ	0xFFA
 24900                           tblptru	equ	0xFF8
 24901                           tblptrh	equ	0xFF7
 24902                           tblptrl	equ	0xFF6
 24903                           tablat	equ	0xFF5
 24904                           prodh	equ	0xFF4
 24905                           prodl	equ	0xFF3
 24906                           intcon	equ	0xFF2
 24907                           intcon2	equ	0xFF1
 24908                           intcon3	equ	0xFF0
 24909                           indf0	equ	0xFEF
 24910                           postinc0	equ	0xFEE
 24911                           plusw0	equ	0xFEB
 24912                           fsr0h	equ	0xFEA
 24913                           fsr0l	equ	0xFE9
 24914                           wreg	equ	0xFE8
 24915                           indf1	equ	0xFE7
 24916                           postinc1	equ	0xFE6
 24917                           postdec1	equ	0xFE5
 24918                           fsr1h	equ	0xFE2
 24919                           fsr1l	equ	0xFE1
 24920                           indf2	equ	0xFDF
 24921                           postinc2	equ	0xFDE
 24922                           postdec2	equ	0xFDD
 24923                           plusw2	equ	0xFDB
 24924                           fsr2h	equ	0xFDA
 24925                           fsr2l	equ	0xFD9
 24926                           status	equ	0xFD8
 24927                           
 24928 ;; *************** function _GetCallerNumber *****************
 24929 ;; Defined at:
 24930 ;;		line 1037 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 24931 ;; Parameters:    Size  Location     Type
 24932 ;;		None
 24933 ;; Auto vars:     Size  Location     Type
 24934 ;;		None
 24935 ;; Return value:  Size  Location     Type
 24936 ;;                  2   35[BANK0 ] PTR unsigned char 
 24937 ;; Registers used:
 24938 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24939 ;; Tracked objects:
 24940 ;;		On entry : 0/0
 24941 ;;		On exit  : 0/0
 24942 ;;		Unchanged: 0/0
 24943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24944 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24945 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24946 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24947 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24948 ;;Total ram usage:        2 bytes
 24949 ;; Hardware stack levels used:    1
 24950 ;; Hardware stack levels required when called:   12
 24951 ;; This function calls:
 24952 ;;		_ClearBuffer
 24953 ;;		_ReceiveEvt
 24954 ;; This function is called by:
 24955 ;;		_MyApp_Task
 24956 ;; This function uses a non-reentrant model
 24957 ;;
 24958                           
 24959                           	psect	text117
 24960  006122                     __ptext117:
 24961                           	opt stack 0
 24962  006122                     _GetCallerNumber:
 24963                           	opt stack 15
 24964                           
 24965                           ;mdm_gsm_gprs.c: 1039: if (!ReceiveEvt(&ClipEvent))
 24966                           
 24967                           ; BSR set to: 0
 24968                           ;incstack = 0
 24969  006122  0EDD               	movlw	low _ClipEvent
 24970  006124  0100               	movlb	0	; () banked
 24971  006126  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 24972  006128  0E00               	movlw	high _ClipEvent
 24973  00612A  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 24974  00612C  EC8A  F031         	call	_ReceiveEvt	;wreg free
 24975  006130  0900               	iorlw	0
 24976  006132  A4D8               	btfss	status,2,c
 24977  006134  D00B               	goto	l1156
 24978                           
 24979                           ;mdm_gsm_gprs.c: 1040: {
 24980                           ;mdm_gsm_gprs.c: 1041: ClearBuffer(callerNumber, ((UINT8)(13)));
 24981  006136  0ECC               	movlw	low _callerNumber
 24982  006138  0100               	movlb	0	; () banked
 24983  00613A  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 24984  00613C  0E04               	movlw	high _callerNumber
 24985  00613E  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 24986  006140  0E00               	movlw	0
 24987  006142  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 24988  006144  0E0D               	movlw	13
 24989  006146  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 24990  006148  ECAC  F030         	call	_ClearBuffer	;wreg free
 24991  00614C                     l1156:
 24992                           
 24993                           ;mdm_gsm_gprs.c: 1042: }
 24994                           ;mdm_gsm_gprs.c: 1043: return callerNumber;
 24995  00614C  0ECC               	movlw	low _callerNumber
 24996  00614E  0100               	movlb	0	; () banked
 24997  006150  6F83               	movwf	?_GetCallerNumber& (0+255),b
 24998  006152  0E04               	movlw	high _callerNumber
 24999  006154  6F84               	movwf	(?_GetCallerNumber+1)& (0+255),b
 25000  006156  0012               	return	
 25001  006158                     __end_of_GetCallerNumber:
 25002                           	opt stack 0
 25003                           tosu	equ	0xFFF
 25004                           tosh	equ	0xFFE
 25005                           tosl	equ	0xFFD
 25006                           pclath	equ	0xFFA
 25007                           tblptru	equ	0xFF8
 25008                           tblptrh	equ	0xFF7
 25009                           tblptrl	equ	0xFF6
 25010                           tablat	equ	0xFF5
 25011                           prodh	equ	0xFF4
 25012                           prodl	equ	0xFF3
 25013                           intcon	equ	0xFF2
 25014                           intcon2	equ	0xFF1
 25015                           intcon3	equ	0xFF0
 25016                           indf0	equ	0xFEF
 25017                           postinc0	equ	0xFEE
 25018                           plusw0	equ	0xFEB
 25019                           fsr0h	equ	0xFEA
 25020                           fsr0l	equ	0xFE9
 25021                           wreg	equ	0xFE8
 25022                           indf1	equ	0xFE7
 25023                           postinc1	equ	0xFE6
 25024                           postdec1	equ	0xFE5
 25025                           fsr1h	equ	0xFE2
 25026                           fsr1l	equ	0xFE1
 25027                           indf2	equ	0xFDF
 25028                           postinc2	equ	0xFDE
 25029                           postdec2	equ	0xFDD
 25030                           plusw2	equ	0xFDB
 25031                           fsr2h	equ	0xFDA
 25032                           fsr2l	equ	0xFD9
 25033                           status	equ	0xFD8
 25034                           
 25035 ;; *************** function _UartSetConfig *****************
 25036 ;; Defined at:
 25037 ;;		line 190 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 25038 ;; Parameters:    Size  Location     Type
 25039 ;;		None
 25040 ;; Auto vars:     Size  Location     Type
 25041 ;;		None
 25042 ;; Return value:  Size  Location     Type
 25043 ;;                  1    wreg      void 
 25044 ;; Registers used:
 25045 ;;		wreg, status,2
 25046 ;; Tracked objects:
 25047 ;;		On entry : 0/0
 25048 ;;		On exit  : 0/0
 25049 ;;		Unchanged: 0/0
 25050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25051 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25052 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25053 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25054 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25055 ;;Total ram usage:        0 bytes
 25056 ;; Hardware stack levels used:    1
 25057 ;; Hardware stack levels required when called:   11
 25058 ;; This function calls:
 25059 ;;		Nothing
 25060 ;; This function is called by:
 25061 ;;		_Mdm_MainTask
 25062 ;; This function uses a non-reentrant model
 25063 ;;
 25064                           
 25065                           	psect	text118
 25066  0056AA                     __ptext118:
 25067                           	opt stack 0
 25068  0056AA                     _UartSetConfig:
 25069                           	opt stack 16
 25070                           
 25071                           ;mdm_gsm_gprs.c: 192: UartConfig.UartEnable = ((UINT8)(1));
 25072                           
 25073                           ; BSR set to: 0
 25074                           ;incstack = 0
 25075  0056AA  0E01               	movlw	1
 25076  0056AC  0103               	movlb	3	; () banked
 25077  0056AE  6F28               	movwf	_UartConfig& (0+255),b
 25078                           
 25079                           ;mdm_gsm_gprs.c: 193: UartConfig.UartMode = ((UINT8)(0));
 25080  0056B0  0E00               	movlw	0
 25081  0056B2  6F29               	movwf	(_UartConfig+1)& (0+255),b
 25082                           
 25083                           ;mdm_gsm_gprs.c: 195: UartConfig.BaudRateMode = ((UINT8)(0));
 25084  0056B4  0E00               	movlw	0
 25085  0056B6  6F2A               	movwf	(_UartConfig+2)& (0+255),b
 25086                           
 25087                           ;mdm_gsm_gprs.c: 200: UartConfig.HighBaudMode = ((UINT8)(0));
 25088  0056B8  0E00               	movlw	0
 25089  0056BA  6F2B               	movwf	(_UartConfig+3)& (0+255),b
 25090                           
 25091                           ;mdm_gsm_gprs.c: 204: UartConfig.Tx9bitMode = ((UINT8)(0));
 25092  0056BC  0E00               	movlw	0
 25093  0056BE  6F2C               	movwf	(_UartConfig+4)& (0+255),b
 25094                           
 25095                           ;mdm_gsm_gprs.c: 205: UartConfig.Rx9bitMode = ((UINT8)(0));
 25096  0056C0  0E00               	movlw	0
 25097  0056C2  6F2D               	movwf	(_UartConfig+5)& (0+255),b
 25098                           
 25099                           ;mdm_gsm_gprs.c: 206: UartConfig.TxEnable = ((UINT8)(1));
 25100  0056C4  0E01               	movlw	1
 25101  0056C6  6F2E               	movwf	(_UartConfig+6)& (0+255),b
 25102                           
 25103                           ;mdm_gsm_gprs.c: 207: UartConfig.RxEnable = ((UINT8)(1));
 25104  0056C8  0E01               	movlw	1
 25105  0056CA  6F2F               	movwf	(_UartConfig+7)& (0+255),b
 25106                           
 25107                           ;mdm_gsm_gprs.c: 208: UartConfig.SendBreakEnable = ((UINT8)(0));
 25108  0056CC  0E00               	movlw	0
 25109  0056CE  6F30               	movwf	(_UartConfig+8)& (0+255),b
 25110                           
 25111                           ;mdm_gsm_gprs.c: 209: UartConfig.AutobaudEnable = ((UINT8)(0));
 25112  0056D0  0E00               	movlw	0
 25113  0056D2  6F31               	movwf	(_UartConfig+9)& (0+255),b
 25114                           
 25115                           ;mdm_gsm_gprs.c: 210: UartConfig.WakeUpEnable = ((UINT8)(0));
 25116  0056D4  0E00               	movlw	0
 25117  0056D6  6F32               	movwf	(_UartConfig+10)& (0+255),b
 25118                           
 25119                           ;mdm_gsm_gprs.c: 211: UartConfig.TxInterruptEnable = ((UINT8)(0));
 25120  0056D8  0E00               	movlw	0
 25121  0056DA  6F33               	movwf	(_UartConfig+11)& (0+255),b
 25122                           
 25123                           ;mdm_gsm_gprs.c: 212: UartConfig.RxInterruptEnable = ((UINT8)(1));
 25124  0056DC  0E01               	movlw	1
 25125  0056DE  6F34               	movwf	(_UartConfig+12)& (0+255),b
 25126                           
 25127                           ;mdm_gsm_gprs.c: 213: UartConfig.McuBusClock = ((UINT32)(48000000));
 25128  0056E0  0E00               	movlw	0
 25129  0056E2  6F35               	movwf	(_UartConfig+13)& (0+255),b
 25130  0056E4  0E6C               	movlw	108
 25131  0056E6  6F36               	movwf	(_UartConfig+14)& (0+255),b
 25132  0056E8  0EDC               	movlw	220
 25133  0056EA  6F37               	movwf	(_UartConfig+15)& (0+255),b
 25134  0056EC  0E02               	movlw	2
 25135  0056EE  6F38               	movwf	(_UartConfig+16)& (0+255),b
 25136                           
 25137                           ;mdm_gsm_gprs.c: 215: UartConfig.DesiredBaudRate = ((UINT32)(9600));
 25138  0056F0  0E80               	movlw	128
 25139  0056F2  6F39               	movwf	(_UartConfig+17)& (0+255),b
 25140  0056F4  0E25               	movlw	37
 25141  0056F6  6F3A               	movwf	(_UartConfig+18)& (0+255),b
 25142  0056F8  0E00               	movlw	0
 25143  0056FA  6F3B               	movwf	(_UartConfig+19)& (0+255),b
 25144  0056FC  0E00               	movlw	0
 25145  0056FE  6F3C               	movwf	(_UartConfig+20)& (0+255),b
 25146                           
 25147                           ; BSR set to: 3
 25148  005700  0012               	return		;funcret
 25149  005702                     __end_of_UartSetConfig:
 25150                           	opt stack 0
 25151                           tosu	equ	0xFFF
 25152                           tosh	equ	0xFFE
 25153                           tosl	equ	0xFFD
 25154                           pclath	equ	0xFFA
 25155                           tblptru	equ	0xFF8
 25156                           tblptrh	equ	0xFF7
 25157                           tblptrl	equ	0xFF6
 25158                           tablat	equ	0xFF5
 25159                           prodh	equ	0xFF4
 25160                           prodl	equ	0xFF3
 25161                           intcon	equ	0xFF2
 25162                           intcon2	equ	0xFF1
 25163                           intcon3	equ	0xFF0
 25164                           indf0	equ	0xFEF
 25165                           postinc0	equ	0xFEE
 25166                           plusw0	equ	0xFEB
 25167                           fsr0h	equ	0xFEA
 25168                           fsr0l	equ	0xFE9
 25169                           wreg	equ	0xFE8
 25170                           indf1	equ	0xFE7
 25171                           postinc1	equ	0xFE6
 25172                           postdec1	equ	0xFE5
 25173                           fsr1h	equ	0xFE2
 25174                           fsr1l	equ	0xFE1
 25175                           indf2	equ	0xFDF
 25176                           postinc2	equ	0xFDE
 25177                           postdec2	equ	0xFDD
 25178                           plusw2	equ	0xFDB
 25179                           fsr2h	equ	0xFDA
 25180                           fsr2l	equ	0xFD9
 25181                           status	equ	0xFD8
 25182                           
 25183 ;; *************** function _TurnOnModem *****************
 25184 ;; Defined at:
 25185 ;;		line 376 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 25186 ;; Parameters:    Size  Location     Type
 25187 ;;		None
 25188 ;; Auto vars:     Size  Location     Type
 25189 ;;		None
 25190 ;; Return value:  Size  Location     Type
 25191 ;;                  1    wreg      void 
 25192 ;; Registers used:
 25193 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 25194 ;; Tracked objects:
 25195 ;;		On entry : 0/0
 25196 ;;		On exit  : 0/0
 25197 ;;		Unchanged: 0/0
 25198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25199 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25200 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25201 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25202 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25203 ;;Total ram usage:        0 bytes
 25204 ;; Hardware stack levels used:    1
 25205 ;; Hardware stack levels required when called:   12
 25206 ;; This function calls:
 25207 ;;		_GenerateEvt
 25208 ;; This function is called by:
 25209 ;;		_Mdm_MainTask
 25210 ;; This function uses a non-reentrant model
 25211 ;;
 25212                           
 25213                           	psect	text119
 25214  005C78                     __ptext119:
 25215                           	opt stack 0
 25216  005C78                     _TurnOnModem:
 25217                           	opt stack 15
 25218                           
 25219                           ;mdm_gsm_gprs.c: 378: static TurnOnMdmStateType TurnOnMdmState = TurnOnDelay;
 25220                           ;mdm_gsm_gprs.c: 379: static UINT16 Counter = 0;
 25221                           ;mdm_gsm_gprs.c: 381: switch (TurnOnMdmState)
 25222                           
 25223                           ; BSR set to: 3
 25224                           ;incstack = 0
 25225  005C78  D01B               	goto	l1009
 25226  005C7A                     
 25227                           ;mdm_gsm_gprs.c: 385: Counter++;
 25228  005C7A  0102               	movlb	2	; () banked
 25229  005C7C  4BD8               	infsnz	TurnOnModem@Counter& (0+255),f,b
 25230  005C7E  2BD9               	incf	(TurnOnModem@Counter+1)& (0+255),f,b
 25231                           
 25232                           ; BSR set to: 2
 25233                           ;mdm_gsm_gprs.c: 387: if (Counter >= (((UINT16)(3000))/((UINT16)(1))))
 25234  005C80  0EB8               	movlw	184
 25235  005C82  5DD8               	subwf	TurnOnModem@Counter& (0+255),w,b
 25236  005C84  0E0B               	movlw	11
 25237  005C86  59D9               	subwfb	(TurnOnModem@Counter+1)& (0+255),w,b
 25238  005C88  A0D8               	btfss	status,0,c
 25239  005C8A  0012               	return	
 25240                           
 25241                           ; BSR set to: 2
 25242                           ;mdm_gsm_gprs.c: 388: {
 25243                           ;mdm_gsm_gprs.c: 390: TurnOnMdmState = TurnOnModuleReq;
 25244  005C8C  0E01               	movlw	1
 25245  005C8E  0101               	movlb	1	; () banked
 25246  005C90  6FF4               	movwf	TurnOnModem@TurnOnMdmState& (0+255),b
 25247                           
 25248                           ; BSR set to: 1
 25249                           ;mdm_gsm_gprs.c: 391: }
 25250                           ;mdm_gsm_gprs.c: 392: break;
 25251  005C92  0012               	return	
 25252  005C94                     
 25253                           ; BSR set to: 1
 25254                           ;mdm_gsm_gprs.c: 396: GenerateEvt(&MdmOnOffPulseRequest);
 25255                           
 25256                           ; BSR set to: 1
 25257  005C94  0EE0               	movlw	low _MdmOnOffPulseRequest
 25258  005C96  0100               	movlb	0	; () banked
 25259  005C98  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 25260  005C9A  0E00               	movlw	high _MdmOnOffPulseRequest
 25261  005C9C  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 25262  005C9E  EC7F  F033         	call	_GenerateEvt	;wreg free
 25263                           
 25264                           ;mdm_gsm_gprs.c: 398: MdmStatus = ModemOn;
 25265  005CA2  0E01               	movlw	1
 25266  005CA4  0100               	movlb	0	; () banked
 25267  005CA6  6FD0               	movwf	_MdmStatus& (0+255),b
 25268                           
 25269                           ; BSR set to: 0
 25270                           ;mdm_gsm_gprs.c: 400: TurnOnMdmState = Stop;
 25271  005CA8  0E02               	movlw	2
 25272  005CAA  0101               	movlb	1	; () banked
 25273  005CAC  6FF4               	movwf	TurnOnModem@TurnOnMdmState& (0+255),b
 25274                           
 25275                           ; BSR set to: 1
 25276                           ;mdm_gsm_gprs.c: 408: }
 25277                           
 25278                           ; BSR set to: 1
 25279                           ;mdm_gsm_gprs.c: 407: break;
 25280                           
 25281                           ;mdm_gsm_gprs.c: 406: default:
 25282                           
 25283                           ; BSR set to: 1
 25284                           ;mdm_gsm_gprs.c: 404: break;
 25285                           
 25286                           ;mdm_gsm_gprs.c: 403: case Stop:
 25287                           
 25288                           ;mdm_gsm_gprs.c: 401: break;
 25289  005CAE  0012               	return	
 25290  005CB0                     l1009:
 25291                           
 25292                           ; BSR set to: 1
 25293  005CB0  0101               	movlb	1	; () banked
 25294  005CB2  51F4               	movf	TurnOnModem@TurnOnMdmState& (0+255),w,b
 25295                           
 25296                           ; Switch size 1, requested type "space"
 25297                           ; Number of cases is 3, Range of values is 0 to 2
 25298                           ; switch strategies available:
 25299                           ; Name         Instructions Cycles
 25300                           ; simple_byte           10     6 (average)
 25301                           ;	Chosen strategy is simple_byte
 25302  005CB4  0A00               	xorlw	0	; case 0
 25303  005CB6  B4D8               	btfsc	status,2,c
 25304  005CB8  D7E0               	goto	l1010
 25305  005CBA  0A01               	xorlw	1	; case 1
 25306  005CBC  B4D8               	btfsc	status,2,c
 25307  005CBE  D7EA               	goto	l1013
 25308  005CC0  0A03               	xorlw	3	; case 2
 25309  005CC2  0012               	return	
 25310  005CC4                     __end_of_TurnOnModem:
 25311                           	opt stack 0
 25312                           tosu	equ	0xFFF
 25313                           tosh	equ	0xFFE
 25314                           tosl	equ	0xFFD
 25315                           pclath	equ	0xFFA
 25316                           tblptru	equ	0xFF8
 25317                           tblptrh	equ	0xFF7
 25318                           tblptrl	equ	0xFF6
 25319                           tablat	equ	0xFF5
 25320                           prodh	equ	0xFF4
 25321                           prodl	equ	0xFF3
 25322                           intcon	equ	0xFF2
 25323                           intcon2	equ	0xFF1
 25324                           intcon3	equ	0xFF0
 25325                           indf0	equ	0xFEF
 25326                           postinc0	equ	0xFEE
 25327                           plusw0	equ	0xFEB
 25328                           fsr0h	equ	0xFEA
 25329                           fsr0l	equ	0xFE9
 25330                           wreg	equ	0xFE8
 25331                           indf1	equ	0xFE7
 25332                           postinc1	equ	0xFE6
 25333                           postdec1	equ	0xFE5
 25334                           fsr1h	equ	0xFE2
 25335                           fsr1l	equ	0xFE1
 25336                           indf2	equ	0xFDF
 25337                           postinc2	equ	0xFDE
 25338                           postdec2	equ	0xFDD
 25339                           plusw2	equ	0xFDB
 25340                           fsr2h	equ	0xFDA
 25341                           fsr2l	equ	0xFD9
 25342                           status	equ	0xFD8
 25343                           
 25344 ;; *************** function _SendSmsSm *****************
 25345 ;; Defined at:
 25346 ;;		line 656 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 25347 ;; Parameters:    Size  Location     Type
 25348 ;;		None
 25349 ;; Auto vars:     Size  Location     Type
 25350 ;;  UartMessage    50    0[BANK1 ] unsigned char [50]
 25351 ;; Return value:  Size  Location     Type
 25352 ;;                  1    wreg      void 
 25353 ;; Registers used:
 25354 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25355 ;; Tracked objects:
 25356 ;;		On entry : 0/0
 25357 ;;		On exit  : 0/0
 25358 ;;		Unchanged: 0/0
 25359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25360 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25361 ;;      Locals:         0       0      50       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25362 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25363 ;;      Totals:         0       2      50       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25364 ;;Total ram usage:       52 bytes
 25365 ;; Hardware stack levels used:    1
 25366 ;; Hardware stack levels required when called:   14
 25367 ;; This function calls:
 25368 ;;		_OsTmr_GetTimerStatus
 25369 ;;		_OsTmr_StartTimer
 25370 ;;		_ReceiveEvt
 25371 ;;		_StringCopy
 25372 ;;		_Uart_WriteStringLen
 25373 ;; This function is called by:
 25374 ;;		_Mdm_MainTask
 25375 ;; This function uses a non-reentrant model
 25376 ;;
 25377                           
 25378                           	psect	text120
 25379  001CAA                     __ptext120:
 25380                           	opt stack 0
 25381  001CAA                     _SendSmsSm:
 25382                           	opt stack 13
 25383                           
 25384                           ;mdm_gsm_gprs.c: 658: static SendSms_StateType SendSms_State = SendSms_WaitEvt;
 25385                           ;mdm_gsm_gprs.c: 659: static SendSms_StateType SendSms_NextState = SendSms_WaitEvt;
 25386                           ;mdm_gsm_gprs.c: 660: static SwTimerType SwTimer = { 1u, SwTimerExpired, 0, 0, DelayNotE
      +                          xpired, };
 25387                           ;mdm_gsm_gprs.c: 661: UINT8 UartMessage[50];
 25388                           ;mdm_gsm_gprs.c: 664: if (MdmStatus == ModemConfigured)
 25389                           
 25390                           ;incstack = 0
 25391  001CAA  0E03               	movlw	3
 25392  001CAC  0100               	movlb	0	; () banked
 25393  001CAE  19D0               	xorwf	_MdmStatus& (0+255),w,b
 25394  001CB0  A4D8               	btfss	status,2,c
 25395  001CB2  0012               	return	
 25396  001CB4  D0C1               	goto	l1091
 25397  001CB6                     
 25398                           ;mdm_gsm_gprs.c: 670: if (ReceiveEvt(&SendSmsEvent))
 25399                           
 25400                           ; BSR set to: 0
 25401  001CB6  0EDF               	movlw	low _SendSmsEvent
 25402  001CB8  0100               	movlb	0	; () banked
 25403  001CBA  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 25404  001CBC  0E00               	movlw	high _SendSmsEvent
 25405  001CBE  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 25406  001CC0  EC8A  F031         	call	_ReceiveEvt	;wreg free
 25407  001CC4  0900               	iorlw	0
 25408  001CC6  B4D8               	btfsc	status,2,c
 25409  001CC8  0012               	return	
 25410                           
 25411                           ;mdm_gsm_gprs.c: 671: {
 25412                           ;mdm_gsm_gprs.c: 673: SendSms_State = SendSms_CmgsCmd;
 25413  001CCA  0E01               	movlw	1
 25414  001CCC  0101               	movlb	1	; () banked
 25415  001CCE  6FF0               	movwf	SendSmsSm@SendSms_State& (0+255),b
 25416                           
 25417                           ; BSR set to: 1
 25418                           ;mdm_gsm_gprs.c: 674: }
 25419                           ;mdm_gsm_gprs.c: 675: break;
 25420  001CD0  0012               	return	
 25421  001CD2                     
 25422                           ; BSR set to: 1
 25423                           ;mdm_gsm_gprs.c: 679: StringCopy((void*)("AT+CMGS=\""),UartMessage,9);
 25424                           
 25425                           ; BSR set to: 1
 25426  001CD2  0ECE               	movlw	low STR_5
 25427  001CD4  0100               	movlb	0	; () banked
 25428  001CD6  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 25429  001CD8  0EFF               	movlw	high STR_5
 25430  001CDA  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 25431  001CDC  0E00               	movlw	low SendSmsSm@UartMessage
 25432  001CDE  6F7F               	movwf	StringCopy@DestStr& (0+255),b
 25433  001CE0  0E01               	movlw	high SendSmsSm@UartMessage
 25434  001CE2  6F80               	movwf	(StringCopy@DestStr+1)& (0+255),b
 25435  001CE4  0E00               	movlw	0
 25436  001CE6  6F82               	movwf	(StringCopy@Len+1)& (0+255),b
 25437  001CE8  0E09               	movlw	9
 25438  001CEA  6F81               	movwf	StringCopy@Len& (0+255),b
 25439  001CEC  EC98  F02A         	call	_StringCopy	;wreg free
 25440                           
 25441                           ;mdm_gsm_gprs.c: 681: StringCopy(PhoneNumber,&UartMessage[9],PhoneNumbLen);
 25442  001CF0  0EA9               	movlw	low _PhoneNumber
 25443  001CF2  0100               	movlb	0	; () banked
 25444  001CF4  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 25445  001CF6  0E04               	movlw	high _PhoneNumber
 25446  001CF8  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 25447  001CFA  0E09               	movlw	low (SendSmsSm@UartMessage+9)
 25448  001CFC  6F7F               	movwf	StringCopy@DestStr& (0+255),b
 25449  001CFE  0E01               	movlw	high (SendSmsSm@UartMessage+9)
 25450  001D00  6F80               	movwf	(StringCopy@DestStr+1)& (0+255),b
 25451  001D02  C0D1  F081         	movff	_PhoneNumbLen,StringCopy@Len
 25452  001D06  6B82               	clrf	(StringCopy@Len+1)& (0+255),b
 25453  001D08  EC98  F02A         	call	_StringCopy	;wreg free
 25454                           
 25455                           ;mdm_gsm_gprs.c: 683: UartMessage[PhoneNumbLen + 9] = '"';
 25456  001D0C  0100               	movlb	0	; () banked
 25457  001D0E  51D1               	movf	_PhoneNumbLen& (0+255),w,b
 25458  001D10  6F9B               	movwf	??_SendSmsSm& (0+255),b
 25459  001D12  6B9C               	clrf	(??_SendSmsSm+1)& (0+255),b
 25460  001D14  0E09               	movlw	9
 25461  001D16  279B               	addwf	??_SendSmsSm& (0+255),f,b
 25462  001D18  0E00               	movlw	0
 25463  001D1A  239C               	addwfc	(??_SendSmsSm+1)& (0+255),f,b
 25464  001D1C  0E00               	movlw	low SendSmsSm@UartMessage
 25465  001D1E  259B               	addwf	??_SendSmsSm& (0+255),w,b
 25466  001D20  6ED9               	movwf	fsr2l,c
 25467  001D22  0E01               	movlw	high SendSmsSm@UartMessage
 25468  001D24  219C               	addwfc	(??_SendSmsSm+1)& (0+255),w,b
 25469  001D26  6EDA               	movwf	fsr2h,c
 25470  001D28  0E22               	movlw	34
 25471  001D2A  6EDF               	movwf	indf2,c
 25472                           
 25473                           ; BSR set to: 0
 25474                           ;mdm_gsm_gprs.c: 684: UartMessage[PhoneNumbLen + 10] = '\r';
 25475  001D2C  51D1               	movf	_PhoneNumbLen& (0+255),w,b
 25476  001D2E  6F9B               	movwf	??_SendSmsSm& (0+255),b
 25477  001D30  6B9C               	clrf	(??_SendSmsSm+1)& (0+255),b
 25478  001D32  0E0A               	movlw	10
 25479  001D34  279B               	addwf	??_SendSmsSm& (0+255),f,b
 25480  001D36  0E00               	movlw	0
 25481  001D38  239C               	addwfc	(??_SendSmsSm+1)& (0+255),f,b
 25482  001D3A  0E00               	movlw	low SendSmsSm@UartMessage
 25483  001D3C  259B               	addwf	??_SendSmsSm& (0+255),w,b
 25484  001D3E  6ED9               	movwf	fsr2l,c
 25485  001D40  0E01               	movlw	high SendSmsSm@UartMessage
 25486  001D42  219C               	addwfc	(??_SendSmsSm+1)& (0+255),w,b
 25487  001D44  6EDA               	movwf	fsr2h,c
 25488  001D46  0E0D               	movlw	13
 25489  001D48  6EDF               	movwf	indf2,c
 25490                           
 25491                           ; BSR set to: 0
 25492                           ;mdm_gsm_gprs.c: 686: Uart_WriteStringLen(((UINT8)(1)), UartMessage,(PhoneNumbLen + 11))
      +                          ;
 25493  001D4A  0E00               	movlw	low SendSmsSm@UartMessage
 25494  001D4C  6F80               	movwf	Uart_WriteStringLen@StringToWrite& (0+255),b
 25495  001D4E  0E01               	movlw	high SendSmsSm@UartMessage
 25496  001D50  6F81               	movwf	(Uart_WriteStringLen@StringToWrite+1)& (0+255),b
 25497  001D52  51D1               	movf	_PhoneNumbLen& (0+255),w,b
 25498  001D54  0F0B               	addlw	11
 25499  001D56  6F82               	movwf	Uart_WriteStringLen@Len& (0+255),b
 25500  001D58  0E01               	movlw	1
 25501  001D5A  ECBC  F02F         	call	_Uart_WriteStringLen
 25502                           
 25503                           ;mdm_gsm_gprs.c: 688: OsTmr_StartTimer(&SwTimer,2500);
 25504  001D5E  0EEA               	movlw	low SendSmsSm@SwTimer
 25505  001D60  0100               	movlb	0	; () banked
 25506  001D62  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 25507  001D64  0E03               	movlw	high SendSmsSm@SwTimer
 25508  001D66  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 25509  001D68  0EC4               	movlw	196
 25510  001D6A  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 25511  001D6C  0E09               	movlw	9
 25512  001D6E  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 25513  001D70  0E00               	movlw	0
 25514  001D72  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 25515  001D74  0E00               	movlw	0
 25516  001D76  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 25517  001D78  ECF8  F02A         	call	_OsTmr_StartTimer	;wreg free
 25518                           
 25519                           ;mdm_gsm_gprs.c: 689: SendSms_State = SendSms_Delay;
 25520  001D7C  0E05               	movlw	5
 25521  001D7E  0101               	movlb	1	; () banked
 25522  001D80  6FF0               	movwf	SendSmsSm@SendSms_State& (0+255),b
 25523                           
 25524                           ; BSR set to: 1
 25525                           ;mdm_gsm_gprs.c: 690: SendSms_NextState = SendSms_EnterCmd;
 25526  001D82  0E02               	movlw	2
 25527  001D84  6FEF               	movwf	SendSmsSm@SendSms_NextState& (0+255),b
 25528                           
 25529                           ;mdm_gsm_gprs.c: 691: break;
 25530  001D86  0012               	return	
 25531  001D88                     
 25532                           ; BSR set to: 1
 25533                           ;mdm_gsm_gprs.c: 695: UartMessage[0] = '\n';
 25534                           
 25535                           ; BSR set to: 1
 25536  001D88  0E0A               	movlw	10
 25537  001D8A  6F00               	movwf	SendSmsSm@UartMessage& (0+255),b
 25538                           
 25539                           ;mdm_gsm_gprs.c: 696: UartMessage[1] = '\r';
 25540  001D8C  0E0D               	movlw	13
 25541  001D8E  6F01               	movwf	(SendSmsSm@UartMessage+1)& (0+255),b
 25542                           
 25543                           ; BSR set to: 1
 25544                           ;mdm_gsm_gprs.c: 698: Uart_WriteStringLen(((UINT8)(1)), UartMessage,2);
 25545  001D90  0E00               	movlw	low SendSmsSm@UartMessage
 25546  001D92  0100               	movlb	0	; () banked
 25547  001D94  6F80               	movwf	Uart_WriteStringLen@StringToWrite& (0+255),b
 25548  001D96  0E01               	movlw	high SendSmsSm@UartMessage
 25549  001D98  6F81               	movwf	(Uart_WriteStringLen@StringToWrite+1)& (0+255),b
 25550  001D9A  0E02               	movlw	2
 25551  001D9C  6F82               	movwf	Uart_WriteStringLen@Len& (0+255),b
 25552  001D9E  0E01               	movlw	1
 25553  001DA0  ECBC  F02F         	call	_Uart_WriteStringLen
 25554                           
 25555                           ;mdm_gsm_gprs.c: 700: SendSms_State = SendSms_WaitConf;
 25556  001DA4  0E03               	movlw	3
 25557  001DA6  0101               	movlb	1	; () banked
 25558  001DA8  6FF0               	movwf	SendSmsSm@SendSms_State& (0+255),b
 25559                           
 25560                           ;mdm_gsm_gprs.c: 701: break;
 25561  001DAA  0012               	return	
 25562  001DAC                     
 25563                           ; BSR set to: 1
 25564                           ;mdm_gsm_gprs.c: 705: if (ReceiveEvt(&NewStringReceived))
 25565                           
 25566                           ; BSR set to: 1
 25567  001DAC  0E3C               	movlw	low _NewStringReceived
 25568  001DAE  0100               	movlb	0	; () banked
 25569  001DB0  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 25570  001DB2  0E00               	movlw	high _NewStringReceived
 25571  001DB4  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 25572  001DB6  EC8A  F031         	call	_ReceiveEvt	;wreg free
 25573  001DBA  0900               	iorlw	0
 25574  001DBC  B4D8               	btfsc	status,2,c
 25575  001DBE  0012               	return	
 25576                           
 25577                           ;mdm_gsm_gprs.c: 706: {
 25578                           ;mdm_gsm_gprs.c: 708: if (RxBuffer[0] == '>')
 25579  001DC0  CC58  FFE8         	movff	_RxBuffer,wreg
 25580  001DC4  0A3E               	xorlw	62
 25581  001DC6  A4D8               	btfss	status,2,c
 25582  001DC8  0012               	return	
 25583                           
 25584                           ;mdm_gsm_gprs.c: 709: {
 25585                           ;mdm_gsm_gprs.c: 711: SendSms_State = SendSms_SendSmsText;
 25586  001DCA  0E04               	movlw	4
 25587  001DCC  0101               	movlb	1	; () banked
 25588  001DCE  6FF0               	movwf	SendSmsSm@SendSms_State& (0+255),b
 25589                           
 25590                           ; BSR set to: 1
 25591                           ;mdm_gsm_gprs.c: 712: }
 25592                           ;mdm_gsm_gprs.c: 713: }
 25593                           ;mdm_gsm_gprs.c: 714: break;
 25594                           
 25595                           ; BSR set to: 1
 25596  001DD0  0012               	return	
 25597  001DD2                     
 25598                           ; BSR set to: 1
 25599                           ;mdm_gsm_gprs.c: 718: StringCopy(MessageText,UartMessage,SmsLen);
 25600                           
 25601                           ; BSR set to: 1
 25602  001DD2  0E72               	movlw	low _MessageText
 25603  001DD4  0100               	movlb	0	; () banked
 25604  001DD6  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 25605  001DD8  0E05               	movlw	high _MessageText
 25606  001DDA  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 25607  001DDC  0E00               	movlw	low SendSmsSm@UartMessage
 25608  001DDE  6F7F               	movwf	StringCopy@DestStr& (0+255),b
 25609  001DE0  0E01               	movlw	high SendSmsSm@UartMessage
 25610  001DE2  6F80               	movwf	(StringCopy@DestStr+1)& (0+255),b
 25611  001DE4  C0D2  F081         	movff	_SmsLen,StringCopy@Len
 25612  001DE8  6B82               	clrf	(StringCopy@Len+1)& (0+255),b
 25613  001DEA  EC98  F02A         	call	_StringCopy	;wreg free
 25614                           
 25615                           ;mdm_gsm_gprs.c: 720: UartMessage[SmsLen] = 0x1A;
 25616  001DEE  0100               	movlb	0	; () banked
 25617  001DF0  51D2               	movf	_SmsLen& (0+255),w,b
 25618  001DF2  0D01               	mullw	1
 25619  001DF4  0E00               	movlw	low SendSmsSm@UartMessage
 25620  001DF6  24F3               	addwf	prodl,w,c
 25621  001DF8  6ED9               	movwf	fsr2l,c
 25622  001DFA  0E01               	movlw	high SendSmsSm@UartMessage
 25623  001DFC  20F4               	addwfc	prodh,w,c
 25624  001DFE  6EDA               	movwf	fsr2h,c
 25625  001E00  0E1A               	movlw	26
 25626  001E02  6EDF               	movwf	indf2,c
 25627                           
 25628                           ; BSR set to: 0
 25629                           ;mdm_gsm_gprs.c: 722: Uart_WriteStringLen(((UINT8)(1)), UartMessage,(SmsLen + 1));
 25630  001E04  0E00               	movlw	low SendSmsSm@UartMessage
 25631  001E06  6F80               	movwf	Uart_WriteStringLen@StringToWrite& (0+255),b
 25632  001E08  0E01               	movlw	high SendSmsSm@UartMessage
 25633  001E0A  6F81               	movwf	(Uart_WriteStringLen@StringToWrite+1)& (0+255),b
 25634  001E0C  29D2               	incf	_SmsLen& (0+255),w,b
 25635  001E0E  6F82               	movwf	Uart_WriteStringLen@Len& (0+255),b
 25636  001E10  0E01               	movlw	1
 25637  001E12  ECBC  F02F         	call	_Uart_WriteStringLen
 25638                           
 25639                           ;mdm_gsm_gprs.c: 724: SendSms_State = SendSms_WaitEvt;
 25640  001E16  0E00               	movlw	0
 25641  001E18  0101               	movlb	1	; () banked
 25642  001E1A  6FF0               	movwf	SendSmsSm@SendSms_State& (0+255),b
 25643                           
 25644                           ;mdm_gsm_gprs.c: 725: break;
 25645  001E1C  0012               	return	
 25646  001E1E                     
 25647                           ; BSR set to: 1
 25648                           ;mdm_gsm_gprs.c: 729: if (OsTmr_GetTimerStatus(&SwTimer) == SwTimerExpired)
 25649                           
 25650                           ; BSR set to: 1
 25651  001E1E  0EEA               	movlw	low SendSmsSm@SwTimer
 25652  001E20  0100               	movlb	0	; () banked
 25653  001E22  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 25654  001E24  0E03               	movlw	high SendSmsSm@SwTimer
 25655  001E26  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 25656  001E28  EC5C  F026         	call	_OsTmr_GetTimerStatus	;wreg free
 25657  001E2C  06E8               	decf	wreg,f,c
 25658  001E2E  A4D8               	btfss	status,2,c
 25659  001E30  0012               	return	
 25660                           
 25661                           ;mdm_gsm_gprs.c: 730: {
 25662                           ;mdm_gsm_gprs.c: 732: SendSms_State = SendSms_NextState;
 25663  001E32  C1EF  F1F0         	movff	SendSmsSm@SendSms_NextState,SendSmsSm@SendSms_State
 25664                           
 25665                           ;mdm_gsm_gprs.c: 738: }
 25666                           
 25667                           ;mdm_gsm_gprs.c: 737: break;
 25668                           
 25669                           ;mdm_gsm_gprs.c: 736: default:
 25670                           
 25671                           ;mdm_gsm_gprs.c: 733: }
 25672                           ;mdm_gsm_gprs.c: 734: break;
 25673  001E36  0012               	return	
 25674  001E38                     l1091:
 25675  001E38  0101               	movlb	1	; () banked
 25676  001E3A  51F0               	movf	SendSmsSm@SendSms_State& (0+255),w,b
 25677                           
 25678                           ; Switch size 1, requested type "space"
 25679                           ; Number of cases is 6, Range of values is 0 to 5
 25680                           ; switch strategies available:
 25681                           ; Name         Instructions Cycles
 25682                           ; simple_byte           19    10 (average)
 25683                           ;	Chosen strategy is simple_byte
 25684  001E3C  0A00               	xorlw	0	; case 0
 25685  001E3E  B4D8               	btfsc	status,2,c
 25686  001E40  D73A               	goto	l1092
 25687  001E42  0A01               	xorlw	1	; case 1
 25688  001E44  B4D8               	btfsc	status,2,c
 25689  001E46  D745               	goto	l1095
 25690  001E48  0A03               	xorlw	3	; case 2
 25691  001E4A  B4D8               	btfsc	status,2,c
 25692  001E4C  D79D               	goto	l1096
 25693  001E4E  0A01               	xorlw	1	; case 3
 25694  001E50  B4D8               	btfsc	status,2,c
 25695  001E52  D7AC               	goto	l1097
 25696  001E54  0A07               	xorlw	7	; case 4
 25697  001E56  B4D8               	btfsc	status,2,c
 25698  001E58  D7BC               	goto	l1100
 25699  001E5A  0A01               	xorlw	1	; case 5
 25700  001E5C  A4D8               	btfss	status,2,c
 25701                           
 25702                           ; BSR set to: 1
 25703  001E5E  0012               	return	
 25704  001E60  D7DE               	goto	l1101
 25705  001E62                     __end_of_SendSmsSm:
 25706                           	opt stack 0
 25707                           tosu	equ	0xFFF
 25708                           tosh	equ	0xFFE
 25709                           tosl	equ	0xFFD
 25710                           pclath	equ	0xFFA
 25711                           tblptru	equ	0xFF8
 25712                           tblptrh	equ	0xFF7
 25713                           tblptrl	equ	0xFF6
 25714                           tablat	equ	0xFF5
 25715                           prodh	equ	0xFF4
 25716                           prodl	equ	0xFF3
 25717                           intcon	equ	0xFF2
 25718                           intcon2	equ	0xFF1
 25719                           intcon3	equ	0xFF0
 25720                           indf0	equ	0xFEF
 25721                           postinc0	equ	0xFEE
 25722                           plusw0	equ	0xFEB
 25723                           fsr0h	equ	0xFEA
 25724                           fsr0l	equ	0xFE9
 25725                           wreg	equ	0xFE8
 25726                           indf1	equ	0xFE7
 25727                           postinc1	equ	0xFE6
 25728                           postdec1	equ	0xFE5
 25729                           fsr1h	equ	0xFE2
 25730                           fsr1l	equ	0xFE1
 25731                           indf2	equ	0xFDF
 25732                           postinc2	equ	0xFDE
 25733                           postdec2	equ	0xFDD
 25734                           plusw2	equ	0xFDB
 25735                           fsr2h	equ	0xFDA
 25736                           fsr2l	equ	0xFD9
 25737                           status	equ	0xFD8
 25738                           
 25739 ;; *************** function _Uart_WriteStringLen *****************
 25740 ;; Defined at:
 25741 ;;		line 542 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 25742 ;; Parameters:    Size  Location     Type
 25743 ;;  Module          1    wreg     unsigned char 
 25744 ;;  StringToWrit    2   32[BANK0 ] PTR unsigned char 
 25745 ;;		 -> GsmGprsTerminal@UartBuffer(200), SendSmsSm@UartMessage(50), 
 25746 ;;  Len             1   34[BANK0 ] unsigned char 
 25747 ;; Auto vars:     Size  Location     Type
 25748 ;;  Module          1   36[BANK0 ] unsigned char 
 25749 ;;  Index           1   35[BANK0 ] unsigned char 
 25750 ;; Return value:  Size  Location     Type
 25751 ;;                  1    wreg      void 
 25752 ;; Registers used:
 25753 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 25754 ;; Tracked objects:
 25755 ;;		On entry : 0/0
 25756 ;;		On exit  : 0/0
 25757 ;;		Unchanged: 0/0
 25758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25759 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25760 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25762 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25763 ;;Total ram usage:        5 bytes
 25764 ;; Hardware stack levels used:    1
 25765 ;; Hardware stack levels required when called:   12
 25766 ;; This function calls:
 25767 ;;		_UartTxBufferStatus
 25768 ;;		_UartWriteByte
 25769 ;; This function is called by:
 25770 ;;		_SendSmsSm
 25771 ;;		_GsmGprsTerminal
 25772 ;; This function uses a non-reentrant model
 25773 ;;
 25774                           
 25775                           	psect	text121
 25776  005F78                     __ptext121:
 25777                           	opt stack 0
 25778  005F78                     _Uart_WriteStringLen:
 25779                           	opt stack 14
 25780                           
 25781                           ;incstack = 0
 25782                           ;Uart_WriteStringLen@Module stored from wreg
 25783  005F78  0100               	movlb	0	; () banked
 25784  005F7A  6F84               	movwf	Uart_WriteStringLen@Module& (0+255),b
 25785                           
 25786                           ;uart_drv.c: 544: UINT8 Index;
 25787                           ;uart_drv.c: 546: for (Index = 0; Index < Len; Index++)
 25788  005F7C  0E00               	movlw	0
 25789  005F7E  0100               	movlb	0	; () banked
 25790  005F80  6F83               	movwf	Uart_WriteStringLen@Index& (0+255),b
 25791  005F82  D015               	goto	l715
 25792  005F84                     
 25793                           ; BSR set to: 0
 25794                           ;uart_drv.c: 547: {
 25795                           ;uart_drv.c: 549: UartWriteByte(Module, *StringToWrite);
 25796                           
 25797                           ; BSR set to: 0
 25798  005F84  C080  FFD9         	movff	Uart_WriteStringLen@StringToWrite,fsr2l
 25799  005F88  C081  FFDA         	movff	Uart_WriteStringLen@StringToWrite+1,fsr2h
 25800  005F8C  50DF               	movf	indf2,w,c
 25801  005F8E  6F7D               	movwf	UartWriteByte@ByteToWrite& (0+255),b
 25802  005F90  5184               	movf	Uart_WriteStringLen@Module& (0+255),w,b
 25803  005F92  ECE9  F032         	call	_UartWriteByte
 25804                           
 25805                           ;uart_drv.c: 551: StringToWrite++;
 25806  005F96  0100               	movlb	0	; () banked
 25807  005F98  4B80               	infsnz	Uart_WriteStringLen@StringToWrite& (0+255),f,b
 25808  005F9A  2B81               	incf	(Uart_WriteStringLen@StringToWrite+1)& (0+255),f,b
 25809  005F9C                     
 25810                           ; BSR set to: 0
 25811                           
 25812                           ; BSR set to: 0
 25813  005F9C  0100               	movlb	0	; () banked
 25814  005F9E  5184               	movf	Uart_WriteStringLen@Module& (0+255),w,b
 25815  005FA0  ECC8  F02D         	call	_UartTxBufferStatus
 25816  005FA4  06E8               	decf	wreg,f,c
 25817  005FA6  B4D8               	btfsc	status,2,c
 25818  005FA8  D7F9               	goto	l718
 25819  005FAA  0100               	movlb	0	; () banked
 25820  005FAC  2B83               	incf	Uart_WriteStringLen@Index& (0+255),f,b
 25821  005FAE                     l715:
 25822                           
 25823                           ; BSR set to: 0
 25824                           
 25825                           ; BSR set to: 0
 25826  005FAE  5182               	movf	Uart_WriteStringLen@Len& (0+255),w,b
 25827  005FB0  5D83               	subwf	Uart_WriteStringLen@Index& (0+255),w,b
 25828  005FB2  B0D8               	btfsc	status,0,c
 25829  005FB4  0012               	return	
 25830  005FB6  D7E6               	goto	l716
 25831  005FB8                     __end_of_Uart_WriteStringLen:
 25832                           	opt stack 0
 25833                           tosu	equ	0xFFF
 25834                           tosh	equ	0xFFE
 25835                           tosl	equ	0xFFD
 25836                           pclath	equ	0xFFA
 25837                           tblptru	equ	0xFF8
 25838                           tblptrh	equ	0xFF7
 25839                           tblptrl	equ	0xFF6
 25840                           tablat	equ	0xFF5
 25841                           prodh	equ	0xFF4
 25842                           prodl	equ	0xFF3
 25843                           intcon	equ	0xFF2
 25844                           intcon2	equ	0xFF1
 25845                           intcon3	equ	0xFF0
 25846                           indf0	equ	0xFEF
 25847                           postinc0	equ	0xFEE
 25848                           plusw0	equ	0xFEB
 25849                           fsr0h	equ	0xFEA
 25850                           fsr0l	equ	0xFE9
 25851                           wreg	equ	0xFE8
 25852                           indf1	equ	0xFE7
 25853                           postinc1	equ	0xFE6
 25854                           postdec1	equ	0xFE5
 25855                           fsr1h	equ	0xFE2
 25856                           fsr1l	equ	0xFE1
 25857                           indf2	equ	0xFDF
 25858                           postinc2	equ	0xFDE
 25859                           postdec2	equ	0xFDD
 25860                           plusw2	equ	0xFDB
 25861                           fsr2h	equ	0xFDA
 25862                           fsr2l	equ	0xFD9
 25863                           status	equ	0xFD8
 25864                           
 25865 ;; *************** function _ModemEvtParser *****************
 25866 ;; Defined at:
 25867 ;;		line 499 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 25868 ;; Parameters:    Size  Location     Type
 25869 ;;		None
 25870 ;; Auto vars:     Size  Location     Type
 25871 ;;  CallReadyStr   10   40[BANK0 ] unsigned char [10]
 25872 ;;  SmsString       5   55[BANK0 ] unsigned char [5]
 25873 ;;  ClipString      5   50[BANK0 ] unsigned char [5]
 25874 ;;  RingString      4   60[BANK0 ] unsigned char [4]
 25875 ;;  CompareIdx      1   65[BANK0 ] unsigned char 
 25876 ;;  Match           1   64[BANK0 ] unsigned char 
 25877 ;; Return value:  Size  Location     Type
 25878 ;;                  1    wreg      void 
 25879 ;; Registers used:
 25880 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 25881 ;; Tracked objects:
 25882 ;;		On entry : 0/0
 25883 ;;		On exit  : 0/0
 25884 ;;		Unchanged: 0/0
 25885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25886 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25887 ;;      Locals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25888 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25889 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25890 ;;Total ram usage:       26 bytes
 25891 ;; Hardware stack levels used:    1
 25892 ;; Hardware stack levels required when called:   12
 25893 ;; This function calls:
 25894 ;;		_GenerateEvt
 25895 ;;		_ReceiveEvt
 25896 ;;		_StringCompare
 25897 ;;		_StringCopy
 25898 ;;		_Uart_ClearRxBuffer
 25899 ;; This function is called by:
 25900 ;;		_Mdm_MainTask
 25901 ;; This function uses a non-reentrant model
 25902 ;;
 25903                           
 25904                           	psect	text122
 25905  001FEA                     __ptext122:
 25906                           	opt stack 0
 25907  001FEA                     _ModemEvtParser:
 25908                           	opt stack 15
 25909                           
 25910                           ;mdm_gsm_gprs.c: 501: UINT8 RingString[] = {'R','I','N','G'};
 25911                           
 25912                           ; BSR set to: 0
 25913                           ;incstack = 0
 25914  001FEA  C3CB  F09C         	movff	ModemEvtParser@F9106,ModemEvtParser@RingString
 25915  001FEE  C3CC  F09D         	movff	ModemEvtParser@F9106+1,ModemEvtParser@RingString+1
 25916  001FF2  C3CD  F09E         	movff	ModemEvtParser@F9106+2,ModemEvtParser@RingString+2
 25917  001FF6  C3CE  F09F         	movff	ModemEvtParser@F9106+3,ModemEvtParser@RingString+3
 25918                           
 25919                           ;mdm_gsm_gprs.c: 502: UINT8 ClipString[] = {'+','C','L','I', 'P'};
 25920  001FFA  EE23  F0C6         	lfsr	2,ModemEvtParser@F9108
 25921  001FFE  EE10  F092         	lfsr	1,ModemEvtParser@ClipString
 25922  002002  0E04               	movlw	4
 25923  002004                     u14391:
 25924  002004  CFDB FFE3          	movff	plusw2,plusw1
 25925  002008  06E8               	decf	wreg,f,c
 25926  00200A  E2FC               	bc	u14391
 25927                           
 25928                           ;mdm_gsm_gprs.c: 503: UINT8 SmsString[] = {'+','C','M','T','I'};
 25929  00200C  EE23  F0C1         	lfsr	2,ModemEvtParser@F9110
 25930  002010  EE10  F097         	lfsr	1,ModemEvtParser@SmsString
 25931  002014  0E04               	movlw	4
 25932  002016                     u14401:
 25933  002016  CFDB FFE3          	movff	plusw2,plusw1
 25934  00201A  06E8               	decf	wreg,f,c
 25935  00201C  E2FC               	bc	u14401
 25936                           
 25937                           ;mdm_gsm_gprs.c: 504: UINT8 CallReadyString[] = {'C','a','l','l',' ','R','e','a','d','y'
      +                          };
 25938  00201E  EE23  F0B7         	lfsr	2,ModemEvtParser@F9112
 25939  002022  EE10  F088         	lfsr	1,ModemEvtParser@CallReadyString
 25940  002026  0E09               	movlw	9
 25941  002028                     u14411:
 25942  002028  CFDB FFE3          	movff	plusw2,plusw1
 25943  00202C  06E8               	decf	wreg,f,c
 25944  00202E  E2FC               	bc	u14411
 25945                           
 25946                           ;mdm_gsm_gprs.c: 505: UINT8 CompareIdx = 0;
 25947  002030  0E00               	movlw	0
 25948  002032  0100               	movlb	0	; () banked
 25949  002034  6FA1               	movwf	ModemEvtParser@CompareIdx& (0+255),b
 25950                           
 25951                           ; BSR set to: 0
 25952                           ;mdm_gsm_gprs.c: 506: UINT8 Match = 0;
 25953  002036  0E00               	movlw	0
 25954  002038  6FA0               	movwf	ModemEvtParser@Match& (0+255),b
 25955                           
 25956                           ; BSR set to: 0
 25957                           ;mdm_gsm_gprs.c: 509: if (ReceiveEvt(&NewMdmEvtParserRequest))
 25958  00203A  0E3B               	movlw	low _NewMdmEvtParserRequest
 25959  00203C  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 25960  00203E  0E00               	movlw	high _NewMdmEvtParserRequest
 25961  002040  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 25962  002042  EC8A  F031         	call	_ReceiveEvt	;wreg free
 25963  002046  0900               	iorlw	0
 25964  002048  B4D8               	btfsc	status,2,c
 25965  00204A  0012               	return	
 25966                           
 25967                           ;mdm_gsm_gprs.c: 510: {
 25968                           ;mdm_gsm_gprs.c: 511: for (CompareIdx = 0; CompareIdx < ((UINT8)(4)); CompareIdx++)
 25969  00204C  0E00               	movlw	0
 25970  00204E  0100               	movlb	0	; () banked
 25971  002050  6FA1               	movwf	ModemEvtParser@CompareIdx& (0+255),b
 25972  002052                     l14948:
 25973                           
 25974                           ; BSR set to: 0
 25975  002052  0E03               	movlw	3
 25976  002054  65A1               	cpfsgt	ModemEvtParser@CompareIdx& (0+255),b
 25977  002056  D074               	goto	l1052
 25978  002058  D083               	goto	u14480
 25979  00205A                     
 25980                           ; BSR set to: 0
 25981                           ;mdm_gsm_gprs.c: 517: if (StringCompare(RingString, RxBuffer, sizeof(RingString)))
 25982                           
 25983                           ; BSR set to: 0
 25984  00205A  0E9C               	movlw	low ModemEvtParser@RingString
 25985  00205C  6F7D               	movwf	StringCompare@String1& (0+255),b
 25986  00205E  0E00               	movlw	high ModemEvtParser@RingString
 25987  002060  6F7E               	movwf	(StringCompare@String1+1)& (0+255),b
 25988  002062  0E58               	movlw	low _RxBuffer
 25989  002064  6F7F               	movwf	StringCompare@String2& (0+255),b
 25990  002066  0E0C               	movlw	high _RxBuffer
 25991  002068  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 25992  00206A  0E00               	movlw	0
 25993  00206C  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 25994  00206E  0E04               	movlw	4
 25995  002070  6F81               	movwf	StringCompare@Len& (0+255),b
 25996  002072  EC00  F02D         	call	_StringCompare	;wreg free
 25997  002076  0900               	iorlw	0
 25998  002078  B4D8               	btfsc	status,2,c
 25999  00207A  D06F               	goto	l1055
 26000                           
 26001                           ;mdm_gsm_gprs.c: 518: {
 26002                           ;mdm_gsm_gprs.c: 520: GenerateEvt(&RingEvent);
 26003  00207C  0EDE               	movlw	low _RingEvent
 26004  00207E  0100               	movlb	0	; () banked
 26005  002080  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 26006  002082  0E00               	movlw	high _RingEvent
 26007  002084  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 26008  002086  EC7F  F033         	call	_GenerateEvt	;wreg free
 26009  00208A  D040               	goto	l14970
 26010  00208C                     
 26011                           ; BSR set to: 0
 26012                           ;mdm_gsm_gprs.c: 528: if (StringCompare(ClipString, RxBuffer, sizeof(ClipString)))
 26013                           
 26014                           ; BSR set to: 0
 26015  00208C  0E92               	movlw	low ModemEvtParser@ClipString
 26016  00208E  6F7D               	movwf	StringCompare@String1& (0+255),b
 26017  002090  0E00               	movlw	high ModemEvtParser@ClipString
 26018  002092  6F7E               	movwf	(StringCompare@String1+1)& (0+255),b
 26019  002094  0E58               	movlw	low _RxBuffer
 26020  002096  6F7F               	movwf	StringCompare@String2& (0+255),b
 26021  002098  0E0C               	movlw	high _RxBuffer
 26022  00209A  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 26023  00209C  0E00               	movlw	0
 26024  00209E  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 26025  0020A0  0E05               	movlw	5
 26026  0020A2  6F81               	movwf	StringCompare@Len& (0+255),b
 26027  0020A4  EC00  F02D         	call	_StringCompare	;wreg free
 26028  0020A8  0900               	iorlw	0
 26029  0020AA  B4D8               	btfsc	status,2,c
 26030  0020AC  D056               	goto	l1055
 26031                           
 26032                           ;mdm_gsm_gprs.c: 529: {
 26033                           ;mdm_gsm_gprs.c: 530: StringCopy(RxBuffer + 8, callerNumber, ((UINT8)(13)));
 26034  0020AE  0E60               	movlw	low (_RxBuffer+8)
 26035  0020B0  0100               	movlb	0	; () banked
 26036  0020B2  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 26037  0020B4  0E0C               	movlw	high (_RxBuffer+8)
 26038  0020B6  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 26039  0020B8  0ECC               	movlw	low _callerNumber
 26040  0020BA  6F7F               	movwf	StringCopy@DestStr& (0+255),b
 26041  0020BC  0E04               	movlw	high _callerNumber
 26042  0020BE  6F80               	movwf	(StringCopy@DestStr+1)& (0+255),b
 26043  0020C0  0E00               	movlw	0
 26044  0020C2  6F82               	movwf	(StringCopy@Len+1)& (0+255),b
 26045  0020C4  0E0D               	movlw	13
 26046  0020C6  6F81               	movwf	StringCopy@Len& (0+255),b
 26047  0020C8  EC98  F02A         	call	_StringCopy	;wreg free
 26048                           
 26049                           ;mdm_gsm_gprs.c: 532: GenerateEvt(&ClipEvent);
 26050  0020CC  0EDD               	movlw	low _ClipEvent
 26051  0020CE  0100               	movlb	0	; () banked
 26052  0020D0  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 26053  0020D2  0E00               	movlw	high _ClipEvent
 26054  0020D4  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 26055  0020D6  EC7F  F033         	call	_GenerateEvt	;wreg free
 26056  0020DA  D018               	goto	l14970
 26057  0020DC                     
 26058                           ; BSR set to: 0
 26059                           ;mdm_gsm_gprs.c: 540: if (StringCompare(SmsString, RxBuffer, sizeof(SmsString)))
 26060                           
 26061                           ; BSR set to: 0
 26062  0020DC  0E97               	movlw	low ModemEvtParser@SmsString
 26063  0020DE  6F7D               	movwf	StringCompare@String1& (0+255),b
 26064  0020E0  0E00               	movlw	high ModemEvtParser@SmsString
 26065  0020E2  6F7E               	movwf	(StringCompare@String1+1)& (0+255),b
 26066  0020E4  0E58               	movlw	low _RxBuffer
 26067  0020E6  6F7F               	movwf	StringCompare@String2& (0+255),b
 26068  0020E8  0E0C               	movlw	high _RxBuffer
 26069  0020EA  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 26070  0020EC  0E00               	movlw	0
 26071  0020EE  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 26072  0020F0  0E05               	movlw	5
 26073  0020F2  6F81               	movwf	StringCompare@Len& (0+255),b
 26074  0020F4  EC00  F02D         	call	_StringCompare	;wreg free
 26075  0020F8  0900               	iorlw	0
 26076  0020FA  B4D8               	btfsc	status,2,c
 26077  0020FC  D02E               	goto	l1055
 26078                           
 26079                           ;mdm_gsm_gprs.c: 541: {
 26080                           ;mdm_gsm_gprs.c: 543: GenerateEvt(&SmsEvent);
 26081  0020FE  0EDC               	movlw	low _SmsEvent
 26082  002100  0100               	movlb	0	; () banked
 26083  002102  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 26084  002104  0E00               	movlw	high _SmsEvent
 26085  002106  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 26086  002108  EC7F  F033         	call	_GenerateEvt	;wreg free
 26087  00210C                     l14970:
 26088                           
 26089                           ;mdm_gsm_gprs.c: 545: Match = 1;
 26090  00210C  0E01               	movlw	1
 26091  00210E  0100               	movlb	0	; () banked
 26092  002110  D015               	goto	L37
 26093  002112                     
 26094                           ; BSR set to: 0
 26095                           ;mdm_gsm_gprs.c: 551: if (StringCompare(CallReadyString, RxBuffer, sizeof(CallReadyStrin
      +                          g)))
 26096                           
 26097                           ; BSR set to: 0
 26098  002112  0E88               	movlw	low ModemEvtParser@CallReadyString
 26099  002114  6F7D               	movwf	StringCompare@String1& (0+255),b
 26100  002116  0E00               	movlw	high ModemEvtParser@CallReadyString
 26101  002118  6F7E               	movwf	(StringCompare@String1+1)& (0+255),b
 26102  00211A  0E58               	movlw	low _RxBuffer
 26103  00211C  6F7F               	movwf	StringCompare@String2& (0+255),b
 26104  00211E  0E0C               	movlw	high _RxBuffer
 26105  002120  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 26106  002122  0E00               	movlw	0
 26107  002124  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 26108  002126  0E0A               	movlw	10
 26109  002128  6F81               	movwf	StringCompare@Len& (0+255),b
 26110  00212A  EC00  F02D         	call	_StringCompare	;wreg free
 26111  00212E  0900               	iorlw	0
 26112  002130  B4D8               	btfsc	status,2,c
 26113  002132  D013               	goto	l1055
 26114                           
 26115                           ;mdm_gsm_gprs.c: 552: {
 26116                           ;mdm_gsm_gprs.c: 554: MdmStatus = ModemReady;
 26117  002134  0E02               	movlw	2
 26118  002136  0100               	movlb	0	; () banked
 26119  002138  6FD0               	movwf	_MdmStatus& (0+255),b
 26120                           
 26121                           ;mdm_gsm_gprs.c: 556: Match = 1;
 26122  00213A  0E01               	movlw	1
 26123  00213C                     L37:
 26124  00213C  6FA0               	movwf	ModemEvtParser@Match& (0+255),b
 26125                           
 26126                           ; BSR set to: 0
 26127                           ;mdm_gsm_gprs.c: 562: }
 26128                           
 26129                           ; BSR set to: 0
 26130                           ;mdm_gsm_gprs.c: 561: break;
 26131                           
 26132                           ;mdm_gsm_gprs.c: 560: default:
 26133                           
 26134                           ; BSR set to: 0
 26135                           ;mdm_gsm_gprs.c: 557: }
 26136                           ;mdm_gsm_gprs.c: 558: break;
 26137  00213E  D00D               	goto	l1055
 26138  002140                     l1052:
 26139                           
 26140                           ; BSR set to: 0
 26141                           
 26142                           ; BSR set to: 0
 26143  002140  51A1               	movf	ModemEvtParser@CompareIdx& (0+255),w,b
 26144                           
 26145                           ; Switch size 1, requested type "space"
 26146                           ; Number of cases is 4, Range of values is 0 to 3
 26147                           ; switch strategies available:
 26148                           ; Name         Instructions Cycles
 26149                           ; simple_byte           13     7 (average)
 26150                           ;	Chosen strategy is simple_byte
 26151  002142  0A00               	xorlw	0	; case 0
 26152  002144  B4D8               	btfsc	status,2,c
 26153  002146  D789               	goto	l1053
 26154  002148  0A01               	xorlw	1	; case 1
 26155  00214A  B4D8               	btfsc	status,2,c
 26156  00214C  D7C7               	goto	l1058
 26157  00214E  0A03               	xorlw	3	; case 2
 26158  002150  B4D8               	btfsc	status,2,c
 26159  002152  D7DF               	goto	l1060
 26160  002154  0A01               	xorlw	1	; case 3
 26161  002156  B4D8               	btfsc	status,2,c
 26162  002158  D799               	goto	l1056
 26163  00215A                     l1055:
 26164                           
 26165                           ; BSR set to: 0
 26166  00215A  0100               	movlb	0	; () banked
 26167  00215C  2BA1               	incf	ModemEvtParser@CompareIdx& (0+255),f,b
 26168  00215E  D779               	goto	l14948
 26169  002160                     u14480:
 26170                           
 26171                           ; BSR set to: 0
 26172                           ;mdm_gsm_gprs.c: 563: }
 26173                           ;mdm_gsm_gprs.c: 566: if (Match == 1)
 26174                           
 26175                           ; BSR set to: 0
 26176  002160  05A0               	decf	ModemEvtParser@Match& (0+255),w,b
 26177  002162  A4D8               	btfss	status,2,c
 26178  002164  0012               	return	
 26179                           
 26180                           ; BSR set to: 0
 26181                           ;mdm_gsm_gprs.c: 567: {
 26182                           ;mdm_gsm_gprs.c: 570: Uart_ClearRxBuffer();
 26183  002166  ECC7  F030         	call	_Uart_ClearRxBuffer	;wreg free
 26184  00216A  0012               	return	
 26185  00216C                     __end_of_ModemEvtParser:
 26186                           	opt stack 0
 26187                           tosu	equ	0xFFF
 26188                           tosh	equ	0xFFE
 26189                           tosl	equ	0xFFD
 26190                           pclath	equ	0xFFA
 26191                           tblptru	equ	0xFF8
 26192                           tblptrh	equ	0xFF7
 26193                           tblptrl	equ	0xFF6
 26194                           tablat	equ	0xFF5
 26195                           prodh	equ	0xFF4
 26196                           prodl	equ	0xFF3
 26197                           intcon	equ	0xFF2
 26198                           intcon2	equ	0xFF1
 26199                           intcon3	equ	0xFF0
 26200                           indf0	equ	0xFEF
 26201                           postinc0	equ	0xFEE
 26202                           plusw0	equ	0xFEB
 26203                           fsr0h	equ	0xFEA
 26204                           fsr0l	equ	0xFE9
 26205                           wreg	equ	0xFE8
 26206                           indf1	equ	0xFE7
 26207                           postinc1	equ	0xFE6
 26208                           postdec1	equ	0xFE5
 26209                           plusw1	equ	0xFE3
 26210                           fsr1h	equ	0xFE2
 26211                           fsr1l	equ	0xFE1
 26212                           indf2	equ	0xFDF
 26213                           postinc2	equ	0xFDE
 26214                           postdec2	equ	0xFDD
 26215                           plusw2	equ	0xFDB
 26216                           fsr2h	equ	0xFDA
 26217                           fsr2l	equ	0xFD9
 26218                           status	equ	0xFD8
 26219                           
 26220 ;; *************** function _Uart_ClearRxBuffer *****************
 26221 ;; Defined at:
 26222 ;;		line 565 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 26223 ;; Parameters:    Size  Location     Type
 26224 ;;		None
 26225 ;; Auto vars:     Size  Location     Type
 26226 ;;  Index           2   29[BANK0 ] unsigned short 
 26227 ;; Return value:  Size  Location     Type
 26228 ;;                  1    wreg      void 
 26229 ;; Registers used:
 26230 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 26231 ;; Tracked objects:
 26232 ;;		On entry : 0/0
 26233 ;;		On exit  : 0/0
 26234 ;;		Unchanged: 0/0
 26235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26236 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26237 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26239 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26240 ;;Total ram usage:        2 bytes
 26241 ;; Hardware stack levels used:    1
 26242 ;; Hardware stack levels required when called:   11
 26243 ;; This function calls:
 26244 ;;		Nothing
 26245 ;; This function is called by:
 26246 ;;		_ModemEvtParser
 26247 ;; This function uses a non-reentrant model
 26248 ;;
 26249                           
 26250                           	psect	text123
 26251  00618E                     __ptext123:
 26252                           	opt stack 0
 26253  00618E                     _Uart_ClearRxBuffer:
 26254                           	opt stack 15
 26255                           
 26256                           ;uart_drv.c: 567: UINT16 Index = 0;
 26257                           
 26258                           ;incstack = 0
 26259  00618E  0E00               	movlw	0
 26260  006190  0100               	movlb	0	; () banked
 26261  006192  6F7E               	movwf	(Uart_ClearRxBuffer@Index+1)& (0+255),b
 26262  006194  0E00               	movlw	0
 26263  006196  6F7D               	movwf	Uart_ClearRxBuffer@Index& (0+255),b
 26264                           
 26265                           ;uart_drv.c: 570: for (Index = 0; Index <= (((UINT16)(400)) - 1); Index++)
 26266  006198  0E00               	movlw	0
 26267  00619A  6F7E               	movwf	(Uart_ClearRxBuffer@Index+1)& (0+255),b
 26268  00619C  0E00               	movlw	0
 26269  00619E  6F7D               	movwf	Uart_ClearRxBuffer@Index& (0+255),b
 26270  0061A0                     l14160:
 26271                           
 26272                           ; BSR set to: 0
 26273  0061A0  0E90               	movlw	144
 26274  0061A2  5D7D               	subwf	Uart_ClearRxBuffer@Index& (0+255),w,b
 26275  0061A4  0E01               	movlw	1
 26276  0061A6  597E               	subwfb	(Uart_ClearRxBuffer@Index+1)& (0+255),w,b
 26277  0061A8  B0D8               	btfsc	status,0,c
 26278  0061AA  0012               	return	
 26279                           
 26280                           ; BSR set to: 0
 26281                           ;uart_drv.c: 571: {
 26282                           ;uart_drv.c: 572: RxBuffer[Index] = 0;
 26283                           
 26284                           ; BSR set to: 0
 26285                           
 26286                           ; BSR set to: 0
 26287  0061AC  0E58               	movlw	low _RxBuffer
 26288  0061AE  257D               	addwf	Uart_ClearRxBuffer@Index& (0+255),w,b
 26289  0061B0  6ED9               	movwf	fsr2l,c
 26290  0061B2  0E0C               	movlw	high _RxBuffer
 26291  0061B4  217E               	addwfc	(Uart_ClearRxBuffer@Index+1)& (0+255),w,b
 26292  0061B6  6EDA               	movwf	fsr2h,c
 26293  0061B8  0E00               	movlw	0
 26294  0061BA  6EDF               	movwf	indf2,c
 26295                           
 26296                           ; BSR set to: 0
 26297  0061BC  4B7D               	infsnz	Uart_ClearRxBuffer@Index& (0+255),f,b
 26298  0061BE  2B7E               	incf	(Uart_ClearRxBuffer@Index+1)& (0+255),f,b
 26299  0061C0  D7EF               	goto	l14160
 26300  0061C2                     __end_of_Uart_ClearRxBuffer:
 26301                           	opt stack 0
 26302                           tosu	equ	0xFFF
 26303                           tosh	equ	0xFFE
 26304                           tosl	equ	0xFFD
 26305                           pclath	equ	0xFFA
 26306                           tblptru	equ	0xFF8
 26307                           tblptrh	equ	0xFF7
 26308                           tblptrl	equ	0xFF6
 26309                           tablat	equ	0xFF5
 26310                           prodh	equ	0xFF4
 26311                           prodl	equ	0xFF3
 26312                           intcon	equ	0xFF2
 26313                           intcon2	equ	0xFF1
 26314                           intcon3	equ	0xFF0
 26315                           indf0	equ	0xFEF
 26316                           postinc0	equ	0xFEE
 26317                           plusw0	equ	0xFEB
 26318                           fsr0h	equ	0xFEA
 26319                           fsr0l	equ	0xFE9
 26320                           wreg	equ	0xFE8
 26321                           indf1	equ	0xFE7
 26322                           postinc1	equ	0xFE6
 26323                           postdec1	equ	0xFE5
 26324                           plusw1	equ	0xFE3
 26325                           fsr1h	equ	0xFE2
 26326                           fsr1l	equ	0xFE1
 26327                           indf2	equ	0xFDF
 26328                           postinc2	equ	0xFDE
 26329                           postdec2	equ	0xFDD
 26330                           plusw2	equ	0xFDB
 26331                           fsr2h	equ	0xFDA
 26332                           fsr2l	equ	0xFD9
 26333                           status	equ	0xFD8
 26334                           
 26335 ;; *************** function _StringCompare *****************
 26336 ;; Defined at:
 26337 ;;		line 75 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/sf.c"
 26338 ;; Parameters:    Size  Location     Type
 26339 ;;  String1         2   29[BANK0 ] PTR unsigned char 
 26340 ;;		 -> smsText(20), callerNumber(13), ModemEvtParser@CallReadyString(10), ModemEvtParser@SmsString(5), 
 26341 ;;		 -> ModemEvtParser@ClipString(5), ModemEvtParser@RingString(4), 
 26342 ;;  String2         2   31[BANK0 ] PTR unsigned char 
 26343 ;;		 -> isNumberInMemory@readBuffer(13), MyApp_Task@cmdAddNumber(4), parseCommand@deleteNumberCmd(3), parseCommand@addNu
      +mberCmd(3), 
 26344 ;;		 -> RxBuffer(400), 
 26345 ;;  Len             2   33[BANK0 ] unsigned short 
 26346 ;; Auto vars:     Size  Location     Type
 26347 ;;  Index           2   38[BANK0 ] unsigned short 
 26348 ;;  Result          1   37[BANK0 ] unsigned char 
 26349 ;; Return value:  Size  Location     Type
 26350 ;;                  1    wreg      unsigned char 
 26351 ;; Registers used:
 26352 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 26353 ;; Tracked objects:
 26354 ;;		On entry : 0/0
 26355 ;;		On exit  : 0/0
 26356 ;;		Unchanged: 0/0
 26357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26358 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26359 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26360 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26361 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26362 ;;Total ram usage:       11 bytes
 26363 ;; Hardware stack levels used:    1
 26364 ;; Hardware stack levels required when called:   11
 26365 ;; This function calls:
 26366 ;;		Nothing
 26367 ;; This function is called by:
 26368 ;;		_ModemEvtParser
 26369 ;;		_parseCommand
 26370 ;;		_MyApp_Task
 26371 ;;		_isNumberInMemory
 26372 ;; This function uses a non-reentrant model
 26373 ;;
 26374                           
 26375                           	psect	text124
 26376  005A00                     __ptext124:
 26377                           	opt stack 0
 26378  005A00                     _StringCompare:
 26379                           	opt stack 15
 26380                           
 26381                           ;sf.c: 77: UINT16 Index = 0;
 26382                           
 26383                           ; BSR set to: 0
 26384                           ;incstack = 0
 26385  005A00  0E00               	movlw	0
 26386  005A02  0100               	movlb	0	; () banked
 26387  005A04  6F87               	movwf	(StringCompare@Index+1)& (0+255),b
 26388  005A06  0E00               	movlw	0
 26389  005A08  6F86               	movwf	StringCompare@Index& (0+255),b
 26390                           
 26391                           ;sf.c: 78: UINT8 Result = 1;
 26392  005A0A  0E01               	movlw	1
 26393  005A0C  6F85               	movwf	StringCompare@Result& (0+255),b
 26394                           
 26395                           ;sf.c: 81: for (Index = 0; Index < Len; Index++)
 26396  005A0E  0E00               	movlw	0
 26397  005A10  6F87               	movwf	(StringCompare@Index+1)& (0+255),b
 26398  005A12  0E00               	movlw	0
 26399  005A14  6F86               	movwf	StringCompare@Index& (0+255),b
 26400  005A16  D015               	goto	l2237
 26401  005A18                     
 26402                           ; BSR set to: 0
 26403                           ;sf.c: 82: {
 26404                           ;sf.c: 83: if (String1[Index] != String2[Index])
 26405                           
 26406                           ; BSR set to: 0
 26407  005A18  5186               	movf	StringCompare@Index& (0+255),w,b
 26408  005A1A  257F               	addwf	StringCompare@String2& (0+255),w,b
 26409  005A1C  6ED9               	movwf	fsr2l,c
 26410  005A1E  5187               	movf	(StringCompare@Index+1)& (0+255),w,b
 26411  005A20  2180               	addwfc	(StringCompare@String2+1)& (0+255),w,b
 26412  005A22  6EDA               	movwf	fsr2h,c
 26413  005A24  5186               	movf	StringCompare@Index& (0+255),w,b
 26414  005A26  257D               	addwf	StringCompare@String1& (0+255),w,b
 26415  005A28  6EE1               	movwf	fsr1l,c
 26416  005A2A  5187               	movf	(StringCompare@Index+1)& (0+255),w,b
 26417  005A2C  217E               	addwfc	(StringCompare@String1+1)& (0+255),w,b
 26418  005A2E  6EE2               	movwf	fsr1h,c
 26419  005A30  50DE               	movf	postinc2,w,c
 26420  005A32  18E6               	xorwf	postinc1,w,c
 26421  005A34  B4D8               	btfsc	status,2,c
 26422  005A36  D003               	goto	l2239
 26423                           
 26424                           ; BSR set to: 0
 26425                           ;sf.c: 84: {
 26426                           ;sf.c: 85: Result = 0;
 26427  005A38  0E00               	movlw	0
 26428  005A3A  6F85               	movwf	StringCompare@Result& (0+255),b
 26429                           
 26430                           ;sf.c: 86: break;
 26431  005A3C  D008               	goto	u13360
 26432  005A3E                     l2239:
 26433                           
 26434                           ; BSR set to: 0
 26435                           
 26436                           ; BSR set to: 0
 26437  005A3E  4B86               	infsnz	StringCompare@Index& (0+255),f,b
 26438  005A40  2B87               	incf	(StringCompare@Index+1)& (0+255),f,b
 26439  005A42                     l2237:
 26440                           
 26441                           ; BSR set to: 0
 26442                           
 26443                           ; BSR set to: 0
 26444  005A42  5181               	movf	StringCompare@Len& (0+255),w,b
 26445  005A44  5D86               	subwf	StringCompare@Index& (0+255),w,b
 26446  005A46  5182               	movf	(StringCompare@Len+1)& (0+255),w,b
 26447  005A48  5987               	subwfb	(StringCompare@Index+1)& (0+255),w,b
 26448  005A4A  A0D8               	btfss	status,0,c
 26449  005A4C  D7E5               	goto	l2238
 26450  005A4E                     u13360:
 26451                           
 26452                           ; BSR set to: 0
 26453                           ;sf.c: 87: }
 26454                           ;sf.c: 88: }
 26455                           ;sf.c: 91: return Result;
 26456                           
 26457                           ; BSR set to: 0
 26458  005A4E  5185               	movf	StringCompare@Result& (0+255),w,b
 26459  005A50  0012               	return	
 26460  005A52                     __end_of_StringCompare:
 26461                           	opt stack 0
 26462                           tosu	equ	0xFFF
 26463                           tosh	equ	0xFFE
 26464                           tosl	equ	0xFFD
 26465                           pclath	equ	0xFFA
 26466                           tblptru	equ	0xFF8
 26467                           tblptrh	equ	0xFF7
 26468                           tblptrl	equ	0xFF6
 26469                           tablat	equ	0xFF5
 26470                           prodh	equ	0xFF4
 26471                           prodl	equ	0xFF3
 26472                           intcon	equ	0xFF2
 26473                           intcon2	equ	0xFF1
 26474                           intcon3	equ	0xFF0
 26475                           indf0	equ	0xFEF
 26476                           postinc0	equ	0xFEE
 26477                           plusw0	equ	0xFEB
 26478                           fsr0h	equ	0xFEA
 26479                           fsr0l	equ	0xFE9
 26480                           wreg	equ	0xFE8
 26481                           indf1	equ	0xFE7
 26482                           postinc1	equ	0xFE6
 26483                           postdec1	equ	0xFE5
 26484                           plusw1	equ	0xFE3
 26485                           fsr1h	equ	0xFE2
 26486                           fsr1l	equ	0xFE1
 26487                           indf2	equ	0xFDF
 26488                           postinc2	equ	0xFDE
 26489                           postdec2	equ	0xFDD
 26490                           plusw2	equ	0xFDB
 26491                           fsr2h	equ	0xFDA
 26492                           fsr2l	equ	0xFD9
 26493                           status	equ	0xFD8
 26494                           
 26495 ;; *************** function _GetSmsSm *****************
 26496 ;; Defined at:
 26497 ;;		line 584 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 26498 ;; Parameters:    Size  Location     Type
 26499 ;;		None
 26500 ;; Auto vars:     Size  Location     Type
 26501 ;;		None
 26502 ;; Return value:  Size  Location     Type
 26503 ;;                  1    wreg      void 
 26504 ;; Registers used:
 26505 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 26506 ;; Tracked objects:
 26507 ;;		On entry : 0/0
 26508 ;;		On exit  : 0/0
 26509 ;;		Unchanged: 0/0
 26510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26511 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26512 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26513 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26514 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26515 ;;Total ram usage:        0 bytes
 26516 ;; Hardware stack levels used:    1
 26517 ;; Hardware stack levels required when called:   13
 26518 ;; This function calls:
 26519 ;;		_ClearBuffer
 26520 ;;		_GenerateEvt
 26521 ;;		_ReceiveEvt
 26522 ;;		_StringCopy
 26523 ;;		_Uart_WriteConstString
 26524 ;; This function is called by:
 26525 ;;		_Mdm_MainTask
 26526 ;; This function uses a non-reentrant model
 26527 ;;
 26528                           
 26529                           	psect	text125
 26530  002D4E                     __ptext125:
 26531                           	opt stack 0
 26532  002D4E                     _GetSmsSm:
 26533                           	opt stack 14
 26534                           
 26535                           ;mdm_gsm_gprs.c: 586: static GetSmsStateType GetSmsState = GetSms_CheckReq;
 26536                           ;mdm_gsm_gprs.c: 589: if (MdmStatus == ModemConfigured)
 26537                           
 26538                           ; BSR set to: 0
 26539                           ;incstack = 0
 26540  002D4E  0E03               	movlw	3
 26541  002D50  0100               	movlb	0	; () banked
 26542  002D52  19D0               	xorwf	_MdmStatus& (0+255),w,b
 26543  002D54  A4D8               	btfss	status,2,c
 26544  002D56  0012               	return	
 26545  002D58  D084               	goto	l1070
 26546  002D5A                     
 26547                           ;mdm_gsm_gprs.c: 595: if (ReceiveEvt(&GetSmsText))
 26548                           
 26549                           ; BSR set to: 0
 26550  002D5A  0EDB               	movlw	low _GetSmsText
 26551  002D5C  0100               	movlb	0	; () banked
 26552  002D5E  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 26553  002D60  0E00               	movlw	high _GetSmsText
 26554  002D62  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 26555  002D64  EC8A  F031         	call	_ReceiveEvt	;wreg free
 26556  002D68  0900               	iorlw	0
 26557  002D6A  B4D8               	btfsc	status,2,c
 26558  002D6C  0012               	return	
 26559                           
 26560                           ;mdm_gsm_gprs.c: 596: {
 26561                           ;mdm_gsm_gprs.c: 598: GetSmsState = GetSms_SendAtCmd;
 26562  002D6E  0E01               	movlw	1
 26563  002D70  0101               	movlb	1	; () banked
 26564  002D72  6FF1               	movwf	GetSmsSm@GetSmsState& (0+255),b
 26565                           
 26566                           ; BSR set to: 1
 26567                           ;mdm_gsm_gprs.c: 599: }
 26568                           ;mdm_gsm_gprs.c: 600: break;
 26569  002D74  0012               	return	
 26570  002D76                     
 26571                           ; BSR set to: 1
 26572                           ;mdm_gsm_gprs.c: 604: Uart_WriteConstString(1,"AT+CMGR=1\r\n");
 26573                           
 26574                           ; BSR set to: 1
 26575  002D76  0EC2               	movlw	low STR_4
 26576  002D78  0100               	movlb	0	; () banked
 26577  002D7A  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 26578  002D7C  0EFF               	movlw	high STR_4
 26579  002D7E  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 26580  002D80  0E01               	movlw	1
 26581  002D82  EC7A  F02F         	call	_Uart_WriteConstString
 26582                           
 26583                           ;mdm_gsm_gprs.c: 606: GetSmsState = GetSms_StoreHeader;
 26584  002D86  0E02               	movlw	2
 26585  002D88  0101               	movlb	1	; () banked
 26586  002D8A  6FF1               	movwf	GetSmsSm@GetSmsState& (0+255),b
 26587                           
 26588                           ;mdm_gsm_gprs.c: 607: break;
 26589  002D8C  0012               	return	
 26590  002D8E                     
 26591                           ; BSR set to: 1
 26592                           ;mdm_gsm_gprs.c: 611: if (ReceiveEvt(&NewStringReceived))
 26593                           
 26594                           ; BSR set to: 1
 26595  002D8E  0E3C               	movlw	low _NewStringReceived
 26596  002D90  0100               	movlb	0	; () banked
 26597  002D92  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 26598  002D94  0E00               	movlw	high _NewStringReceived
 26599  002D96  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 26600  002D98  EC8A  F031         	call	_ReceiveEvt	;wreg free
 26601  002D9C  0900               	iorlw	0
 26602  002D9E  B4D8               	btfsc	status,2,c
 26603  002DA0  0012               	return	
 26604                           
 26605                           ;mdm_gsm_gprs.c: 612: {
 26606                           ;mdm_gsm_gprs.c: 613: if ((RxBuffer[0] == '+') && (RxBuffer[1] == 'C') && (RxBuffer[2] =
      +                          = 'M'))
 26607  002DA2  CC58  FFE8         	movff	_RxBuffer,wreg
 26608  002DA6  0A2B               	xorlw	43
 26609  002DA8  A4D8               	btfss	status,2,c
 26610  002DAA  0012               	return	
 26611  002DAC  CC59  FFE8         	movff	_RxBuffer+1,wreg
 26612  002DB0  0A43               	xorlw	67
 26613  002DB2  A4D8               	btfss	status,2,c
 26614  002DB4  0012               	return	
 26615  002DB6  CC5A  FFE8         	movff	_RxBuffer+2,wreg
 26616  002DBA  0A4D               	xorlw	77
 26617  002DBC  A4D8               	btfss	status,2,c
 26618  002DBE  0012               	return	
 26619                           
 26620                           ;mdm_gsm_gprs.c: 614: {
 26621                           ;mdm_gsm_gprs.c: 616: ClearBuffer(Mdm_SmsRx.HeaderBuffer, sizeof(Mdm_SmsRx.HeaderBuffer)
      +                          );
 26622  002DC0  0E00               	movlw	low _Mdm_SmsRx
 26623  002DC2  0100               	movlb	0	; () banked
 26624  002DC4  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 26625  002DC6  0E07               	movlw	high _Mdm_SmsRx
 26626  002DC8  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 26627  002DCA  0E00               	movlw	0
 26628  002DCC  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 26629  002DCE  0E50               	movlw	80
 26630  002DD0  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 26631  002DD2  ECAC  F030         	call	_ClearBuffer	;wreg free
 26632                           
 26633                           ;mdm_gsm_gprs.c: 617: StringCopy(RxBuffer,Mdm_SmsRx.HeaderBuffer,RxLen);
 26634  002DD6  0E58               	movlw	low _RxBuffer
 26635  002DD8  0100               	movlb	0	; () banked
 26636  002DDA  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 26637  002DDC  0E0C               	movlw	high _RxBuffer
 26638  002DDE  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 26639  002DE0  0E00               	movlw	low _Mdm_SmsRx
 26640  002DE2  6F7F               	movwf	StringCopy@DestStr& (0+255),b
 26641  002DE4  0E07               	movlw	high _Mdm_SmsRx
 26642  002DE6  6F80               	movwf	(StringCopy@DestStr+1)& (0+255),b
 26643  002DE8  C0C2  F081         	movff	_RxLen,StringCopy@Len
 26644  002DEC  C0C3  F082         	movff	_RxLen+1,StringCopy@Len+1
 26645  002DF0  EC98  F02A         	call	_StringCopy	;wreg free
 26646                           
 26647                           ;mdm_gsm_gprs.c: 619: Mdm_SmsRx.HeadLen = RxLen;
 26648  002DF4  C0C2  F764         	movff	_RxLen,_Mdm_SmsRx+100
 26649                           
 26650                           ;mdm_gsm_gprs.c: 621: GetSmsState = GetSms_StoreText;
 26651  002DF8  0E03               	movlw	3
 26652  002DFA  0101               	movlb	1	; () banked
 26653  002DFC  6FF1               	movwf	GetSmsSm@GetSmsState& (0+255),b
 26654                           
 26655                           ; BSR set to: 1
 26656                           ;mdm_gsm_gprs.c: 622: }
 26657                           ;mdm_gsm_gprs.c: 623: }
 26658                           ;mdm_gsm_gprs.c: 624: break;
 26659                           
 26660                           ; BSR set to: 1
 26661  002DFE  0012               	return	
 26662  002E00                     
 26663                           ; BSR set to: 1
 26664                           ;mdm_gsm_gprs.c: 628: if (ReceiveEvt(&NewStringReceived))
 26665                           
 26666                           ; BSR set to: 1
 26667  002E00  0E3C               	movlw	low _NewStringReceived
 26668  002E02  0100               	movlb	0	; () banked
 26669  002E04  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 26670  002E06  0E00               	movlw	high _NewStringReceived
 26671  002E08  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 26672  002E0A  EC8A  F031         	call	_ReceiveEvt	;wreg free
 26673  002E0E  0900               	iorlw	0
 26674  002E10  B4D8               	btfsc	status,2,c
 26675  002E12  0012               	return	
 26676                           
 26677                           ;mdm_gsm_gprs.c: 629: {
 26678                           ;mdm_gsm_gprs.c: 631: ClearBuffer(Mdm_SmsRx.MessageBuffer, sizeof(Mdm_SmsRx.MessageBuffe
      +                          r));
 26679  002E14  0E50               	movlw	low (_Mdm_SmsRx+80)
 26680  002E16  0100               	movlb	0	; () banked
 26681  002E18  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 26682  002E1A  0E07               	movlw	high (_Mdm_SmsRx+80)
 26683  002E1C  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 26684  002E1E  0E00               	movlw	0
 26685  002E20  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 26686  002E22  0E14               	movlw	20
 26687  002E24  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 26688  002E26  ECAC  F030         	call	_ClearBuffer	;wreg free
 26689                           
 26690                           ;mdm_gsm_gprs.c: 632: StringCopy(RxBuffer,Mdm_SmsRx.MessageBuffer,RxLen);
 26691  002E2A  0E58               	movlw	low _RxBuffer
 26692  002E2C  0100               	movlb	0	; () banked
 26693  002E2E  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 26694  002E30  0E0C               	movlw	high _RxBuffer
 26695  002E32  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 26696  002E34  0E50               	movlw	low (_Mdm_SmsRx+80)
 26697  002E36  6F7F               	movwf	StringCopy@DestStr& (0+255),b
 26698  002E38  0E07               	movlw	high (_Mdm_SmsRx+80)
 26699  002E3A  6F80               	movwf	(StringCopy@DestStr+1)& (0+255),b
 26700  002E3C  C0C2  F081         	movff	_RxLen,StringCopy@Len
 26701  002E40  C0C3  F082         	movff	_RxLen+1,StringCopy@Len+1
 26702  002E44  EC98  F02A         	call	_StringCopy	;wreg free
 26703                           
 26704                           ;mdm_gsm_gprs.c: 634: Mdm_SmsRx.TextLen = RxLen;
 26705  002E48  C0C2  F765         	movff	_RxLen,_Mdm_SmsRx+101
 26706                           
 26707                           ;mdm_gsm_gprs.c: 636: GetSmsState = GetSms_CheckReq;
 26708  002E4C  0E00               	movlw	0
 26709  002E4E  0101               	movlb	1	; () banked
 26710  002E50  6FF1               	movwf	GetSmsSm@GetSmsState& (0+255),b
 26711                           
 26712                           ; BSR set to: 1
 26713                           ;mdm_gsm_gprs.c: 638: GenerateEvt(&SmsTxtReady);
 26714  002E52  0EDA               	movlw	low _SmsTxtReady
 26715  002E54  0100               	movlb	0	; () banked
 26716  002E56  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 26717  002E58  0E00               	movlw	high _SmsTxtReady
 26718  002E5A  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 26719  002E5C  EC7F  F033         	call	_GenerateEvt	;wreg free
 26720                           
 26721                           ;mdm_gsm_gprs.c: 644: }
 26722                           
 26723                           ;mdm_gsm_gprs.c: 643: break;
 26724                           
 26725                           ;mdm_gsm_gprs.c: 642: default:
 26726                           
 26727                           ;mdm_gsm_gprs.c: 639: }
 26728                           ;mdm_gsm_gprs.c: 640: break;
 26729  002E60  0012               	return	
 26730  002E62                     l1070:
 26731  002E62  0101               	movlb	1	; () banked
 26732  002E64  51F1               	movf	GetSmsSm@GetSmsState& (0+255),w,b
 26733                           
 26734                           ; Switch size 1, requested type "space"
 26735                           ; Number of cases is 4, Range of values is 0 to 3
 26736                           ; switch strategies available:
 26737                           ; Name         Instructions Cycles
 26738                           ; simple_byte           13     7 (average)
 26739                           ;	Chosen strategy is simple_byte
 26740  002E66  0A00               	xorlw	0	; case 0
 26741  002E68  B4D8               	btfsc	status,2,c
 26742  002E6A  D777               	goto	l1071
 26743  002E6C  0A01               	xorlw	1	; case 1
 26744  002E6E  B4D8               	btfsc	status,2,c
 26745  002E70  D782               	goto	l1074
 26746  002E72  0A03               	xorlw	3	; case 2
 26747  002E74  B4D8               	btfsc	status,2,c
 26748  002E76  D78B               	goto	l1075
 26749  002E78  0A01               	xorlw	1	; case 3
 26750  002E7A  A4D8               	btfss	status,2,c
 26751                           
 26752                           ; BSR set to: 1
 26753  002E7C  0012               	return	
 26754  002E7E  D7C0               	goto	l1078
 26755  002E80                     __end_of_GetSmsSm:
 26756                           	opt stack 0
 26757                           tosu	equ	0xFFF
 26758                           tosh	equ	0xFFE
 26759                           tosl	equ	0xFFD
 26760                           pclath	equ	0xFFA
 26761                           tblptru	equ	0xFF8
 26762                           tblptrh	equ	0xFF7
 26763                           tblptrl	equ	0xFF6
 26764                           tablat	equ	0xFF5
 26765                           prodh	equ	0xFF4
 26766                           prodl	equ	0xFF3
 26767                           intcon	equ	0xFF2
 26768                           intcon2	equ	0xFF1
 26769                           intcon3	equ	0xFF0
 26770                           indf0	equ	0xFEF
 26771                           postinc0	equ	0xFEE
 26772                           plusw0	equ	0xFEB
 26773                           fsr0h	equ	0xFEA
 26774                           fsr0l	equ	0xFE9
 26775                           wreg	equ	0xFE8
 26776                           indf1	equ	0xFE7
 26777                           postinc1	equ	0xFE6
 26778                           postdec1	equ	0xFE5
 26779                           plusw1	equ	0xFE3
 26780                           fsr1h	equ	0xFE2
 26781                           fsr1l	equ	0xFE1
 26782                           indf2	equ	0xFDF
 26783                           postinc2	equ	0xFDE
 26784                           postdec2	equ	0xFDD
 26785                           plusw2	equ	0xFDB
 26786                           fsr2h	equ	0xFDA
 26787                           fsr2l	equ	0xFD9
 26788                           status	equ	0xFD8
 26789                           
 26790 ;; *************** function _ConfigureModem *****************
 26791 ;; Defined at:
 26792 ;;		line 419 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 26793 ;; Parameters:    Size  Location     Type
 26794 ;;		None
 26795 ;; Auto vars:     Size  Location     Type
 26796 ;;		None
 26797 ;; Return value:  Size  Location     Type
 26798 ;;                  1    wreg      void 
 26799 ;; Registers used:
 26800 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 26801 ;; Tracked objects:
 26802 ;;		On entry : 0/0
 26803 ;;		On exit  : 0/0
 26804 ;;		Unchanged: 0/0
 26805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26807 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26809 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26810 ;;Total ram usage:        0 bytes
 26811 ;; Hardware stack levels used:    1
 26812 ;; Hardware stack levels required when called:   14
 26813 ;; This function calls:
 26814 ;;		_GenerateEvt
 26815 ;;		_UartSetConfigLow
 26816 ;;		_Uart_InitUartModule
 26817 ;;		_Uart_WriteConstString
 26818 ;; This function is called by:
 26819 ;;		_Mdm_MainTask
 26820 ;; This function uses a non-reentrant model
 26821 ;;
 26822                           
 26823                           	psect	text126
 26824  00377C                     __ptext126:
 26825                           	opt stack 0
 26826  00377C                     _ConfigureModem:
 26827                           	opt stack 13
 26828                           
 26829                           ;mdm_gsm_gprs.c: 421: static MdmConfigStateType MdmConfigState = MdmCfg_Init;
 26830                           ;mdm_gsm_gprs.c: 422: static MdmConfigStateType NextState = MdmCfg_Init;
 26831                           ;mdm_gsm_gprs.c: 423: static UINT16 DelayValueMs = 0;
 26832                           ;mdm_gsm_gprs.c: 424: static UINT16 DelayCounter = 0;
 26833                           ;mdm_gsm_gprs.c: 426: switch (MdmConfigState)
 26834                           
 26835                           ;incstack = 0
 26836  00377C  D05A               	goto	l1027
 26837  00377E                     
 26838                           ;mdm_gsm_gprs.c: 430: if (MdmStatus == ModemReady)
 26839  00377E  0E02               	movlw	2
 26840  003780  0100               	movlb	0	; () banked
 26841  003782  19D0               	xorwf	_MdmStatus& (0+255),w,b
 26842  003784  A4D8               	btfss	status,2,c
 26843  003786  0012               	return	
 26844                           
 26845                           ; BSR set to: 0
 26846                           ;mdm_gsm_gprs.c: 431: {
 26847                           ;mdm_gsm_gprs.c: 433: MdmConfigState = MdmCfg_ChangeBaud;
 26848  003788  0E01               	movlw	1
 26849  00378A  0101               	movlb	1	; () banked
 26850  00378C  6FF3               	movwf	ConfigureModem@MdmConfigState& (0+255),b
 26851                           
 26852                           ; BSR set to: 1
 26853                           ;mdm_gsm_gprs.c: 434: }
 26854                           ;mdm_gsm_gprs.c: 435: break;
 26855  00378E  0012               	return	
 26856  003790                     
 26857                           ; BSR set to: 1
 26858                           ;mdm_gsm_gprs.c: 439: Uart_WriteConstString(1,"AT+IPR=9600\r\n");
 26859                           
 26860                           ; BSR set to: 1
 26861  003790  0E75               	movlw	low STR_2
 26862  003792  0100               	movlb	0	; () banked
 26863  003794  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 26864  003796  0EFF               	movlw	high STR_2
 26865  003798  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 26866  00379A  0E01               	movlw	1
 26867  00379C  EC7A  F02F         	call	_Uart_WriteConstString
 26868                           
 26869                           ;mdm_gsm_gprs.c: 441: UartSetConfigLow();
 26870  0037A0  ECAD  F02B         	call	_UartSetConfigLow	;wreg free
 26871                           
 26872                           ;mdm_gsm_gprs.c: 443: Uart_InitUartModule(1,&UartConfig);
 26873  0037A4  0E28               	movlw	low _UartConfig
 26874  0037A6  0100               	movlb	0	; () banked
 26875  0037A8  6F9D               	movwf	Uart_InitUartModule@UartConfig& (0+255),b
 26876  0037AA  0E03               	movlw	high _UartConfig
 26877  0037AC  6F9E               	movwf	(Uart_InitUartModule@UartConfig+1)& (0+255),b
 26878  0037AE  0E01               	movlw	1
 26879  0037B0  EC5E  F005         	call	_Uart_InitUartModule
 26880                           
 26881                           ;mdm_gsm_gprs.c: 445: DelayValueMs = (((UINT16)(1000))/((UINT16)(1)));
 26882  0037B4  0E03               	movlw	3
 26883  0037B6  0102               	movlb	2	; () banked
 26884  0037B8  6FD7               	movwf	(ConfigureModem@DelayValueMs+1)& (0+255),b
 26885  0037BA  0EE8               	movlw	232
 26886  0037BC  6FD6               	movwf	ConfigureModem@DelayValueMs& (0+255),b
 26887                           
 26888                           ; BSR set to: 2
 26889                           ;mdm_gsm_gprs.c: 447: NextState = MdmCfg_SetMdmEchoMode;
 26890  0037BE  0E02               	movlw	2
 26891  0037C0  0101               	movlb	1	; () banked
 26892  0037C2  6FF2               	movwf	ConfigureModem@NextState& (0+255),b
 26893                           
 26894                           ; BSR set to: 1
 26895                           ;mdm_gsm_gprs.c: 448: MdmConfigState = MdmCfg_Delay;
 26896  0037C4  0E04               	movlw	4
 26897  0037C6  6FF3               	movwf	ConfigureModem@MdmConfigState& (0+255),b
 26898                           
 26899                           ;mdm_gsm_gprs.c: 449: break;
 26900  0037C8  0012               	return	
 26901  0037CA                     
 26902                           ; BSR set to: 1
 26903                           ;mdm_gsm_gprs.c: 453: Uart_WriteConstString(1,"ATE0\r\n");
 26904                           
 26905                           ; BSR set to: 1
 26906  0037CA  0EDF               	movlw	low STR_3
 26907  0037CC  0100               	movlb	0	; () banked
 26908  0037CE  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 26909  0037D0  0EFF               	movlw	high STR_3
 26910  0037D2  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 26911  0037D4  0E01               	movlw	1
 26912  0037D6  EC7A  F02F         	call	_Uart_WriteConstString
 26913                           
 26914                           ;mdm_gsm_gprs.c: 455: DelayValueMs = (((UINT16)(1000))/((UINT16)(1)));
 26915  0037DA  0E03               	movlw	3
 26916  0037DC  0102               	movlb	2	; () banked
 26917  0037DE  6FD7               	movwf	(ConfigureModem@DelayValueMs+1)& (0+255),b
 26918  0037E0  0EE8               	movlw	232
 26919  0037E2  6FD6               	movwf	ConfigureModem@DelayValueMs& (0+255),b
 26920                           
 26921                           ; BSR set to: 2
 26922                           ;mdm_gsm_gprs.c: 457: NextState = MdmCfg_UpdateMdmSts;
 26923  0037E4  0E05               	movlw	5
 26924  0037E6  0101               	movlb	1	; () banked
 26925  0037E8  6FF2               	movwf	ConfigureModem@NextState& (0+255),b
 26926                           
 26927                           ; BSR set to: 1
 26928                           ;mdm_gsm_gprs.c: 458: MdmConfigState = MdmCfg_Delay;
 26929  0037EA  0E04               	movlw	4
 26930  0037EC  6FF3               	movwf	ConfigureModem@MdmConfigState& (0+255),b
 26931                           
 26932                           ;mdm_gsm_gprs.c: 459: break;
 26933  0037EE  0012               	return	
 26934  0037F0                     
 26935                           ; BSR set to: 1
 26936                           ;mdm_gsm_gprs.c: 463: DelayCounter++;
 26937                           
 26938                           ; BSR set to: 1
 26939  0037F0  0103               	movlb	3	; () banked
 26940  0037F2  4B26               	infsnz	ConfigureModem@DelayCounter& (0+255),f,b
 26941  0037F4  2B27               	incf	(ConfigureModem@DelayCounter+1)& (0+255),f,b
 26942                           
 26943                           ; BSR set to: 3
 26944                           ;mdm_gsm_gprs.c: 465: if (DelayCounter >= DelayValueMs)
 26945  0037F6  0102               	movlb	2	; () banked
 26946  0037F8  51D6               	movf	ConfigureModem@DelayValueMs& (0+255),w,b
 26947  0037FA  0103               	movlb	3	; () banked
 26948  0037FC  5D26               	subwf	ConfigureModem@DelayCounter& (0+255),w,b
 26949  0037FE  0102               	movlb	2	; () banked
 26950  003800  51D7               	movf	(ConfigureModem@DelayValueMs+1)& (0+255),w,b
 26951  003802  0103               	movlb	3	; () banked
 26952  003804  5927               	subwfb	(ConfigureModem@DelayCounter+1)& (0+255),w,b
 26953  003806  A0D8               	btfss	status,0,c
 26954  003808  0012               	return	
 26955                           
 26956                           ; BSR set to: 3
 26957                           ;mdm_gsm_gprs.c: 466: {
 26958                           ;mdm_gsm_gprs.c: 468: DelayCounter = 0;
 26959  00380A  0E00               	movlw	0
 26960  00380C  6F27               	movwf	(ConfigureModem@DelayCounter+1)& (0+255),b
 26961  00380E  0E00               	movlw	0
 26962  003810  6F26               	movwf	ConfigureModem@DelayCounter& (0+255),b
 26963                           
 26964                           ; BSR set to: 3
 26965                           ;mdm_gsm_gprs.c: 470: MdmConfigState = NextState;
 26966  003812  C1F2  F1F3         	movff	ConfigureModem@NextState,ConfigureModem@MdmConfigState
 26967                           
 26968                           ; BSR set to: 3
 26969                           ;mdm_gsm_gprs.c: 471: }
 26970                           ;mdm_gsm_gprs.c: 472: break;
 26971  003816  0012               	return	
 26972  003818                     
 26973                           ;mdm_gsm_gprs.c: 476: MdmStatus = ModemConfigured;
 26974                           
 26975                           ; BSR set to: 3
 26976  003818  0E03               	movlw	3
 26977  00381A  0100               	movlb	0	; () banked
 26978  00381C  6FD0               	movwf	_MdmStatus& (0+255),b
 26979                           
 26980                           ; BSR set to: 0
 26981                           ;mdm_gsm_gprs.c: 478: GenerateEvt(&MdmStsReady);
 26982  00381E  0E39               	movlw	low _MdmStsReady
 26983  003820  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 26984  003822  0E00               	movlw	high _MdmStsReady
 26985  003824  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 26986  003826  EC7F  F033         	call	_GenerateEvt	;wreg free
 26987                           
 26988                           ;mdm_gsm_gprs.c: 480: MdmConfigState = MdmCfg_Stop;
 26989  00382A  0E06               	movlw	6
 26990  00382C  0101               	movlb	1	; () banked
 26991  00382E  6FF3               	movwf	ConfigureModem@MdmConfigState& (0+255),b
 26992                           
 26993                           ; BSR set to: 1
 26994                           ;mdm_gsm_gprs.c: 488: }
 26995                           
 26996                           ; BSR set to: 1
 26997                           ;mdm_gsm_gprs.c: 487: break;
 26998                           
 26999                           ;mdm_gsm_gprs.c: 486: default:
 27000                           
 27001                           ; BSR set to: 1
 27002                           ;mdm_gsm_gprs.c: 484: break;
 27003                           
 27004                           ;mdm_gsm_gprs.c: 483: case MdmCfg_Stop:
 27005                           
 27006                           ;mdm_gsm_gprs.c: 481: break;
 27007  003830  0012               	return	
 27008  003832                     l1027:
 27009                           
 27010                           ; BSR set to: 1
 27011  003832  0101               	movlb	1	; () banked
 27012  003834  51F3               	movf	ConfigureModem@MdmConfigState& (0+255),w,b
 27013                           
 27014                           ; Switch size 1, requested type "space"
 27015                           ; Number of cases is 6, Range of values is 0 to 6
 27016                           ; switch strategies available:
 27017                           ; Name         Instructions Cycles
 27018                           ; simple_byte           19    10 (average)
 27019                           ;	Chosen strategy is simple_byte
 27020  003836  0A00               	xorlw	0	; case 0
 27021  003838  B4D8               	btfsc	status,2,c
 27022  00383A  D7A1               	goto	l1028
 27023  00383C  0A01               	xorlw	1	; case 1
 27024  00383E  B4D8               	btfsc	status,2,c
 27025  003840  D7A7               	goto	l1031
 27026  003842  0A03               	xorlw	3	; case 2
 27027  003844  B4D8               	btfsc	status,2,c
 27028  003846  D7C1               	goto	l1032
 27029  003848  0A06               	xorlw	6	; case 4
 27030  00384A  B4D8               	btfsc	status,2,c
 27031  00384C  D7D1               	goto	l1033
 27032  00384E  0A01               	xorlw	1	; case 5
 27033  003850  B4D8               	btfsc	status,2,c
 27034  003852  D7E2               	goto	l1035
 27035  003854  0A03               	xorlw	3	; case 6
 27036  003856  0012               	return	
 27037  003858                     __end_of_ConfigureModem:
 27038                           	opt stack 0
 27039                           tosu	equ	0xFFF
 27040                           tosh	equ	0xFFE
 27041                           tosl	equ	0xFFD
 27042                           pclath	equ	0xFFA
 27043                           tblptru	equ	0xFF8
 27044                           tblptrh	equ	0xFF7
 27045                           tblptrl	equ	0xFF6
 27046                           tablat	equ	0xFF5
 27047                           prodh	equ	0xFF4
 27048                           prodl	equ	0xFF3
 27049                           intcon	equ	0xFF2
 27050                           intcon2	equ	0xFF1
 27051                           intcon3	equ	0xFF0
 27052                           indf0	equ	0xFEF
 27053                           postinc0	equ	0xFEE
 27054                           plusw0	equ	0xFEB
 27055                           fsr0h	equ	0xFEA
 27056                           fsr0l	equ	0xFE9
 27057                           wreg	equ	0xFE8
 27058                           indf1	equ	0xFE7
 27059                           postinc1	equ	0xFE6
 27060                           postdec1	equ	0xFE5
 27061                           plusw1	equ	0xFE3
 27062                           fsr1h	equ	0xFE2
 27063                           fsr1l	equ	0xFE1
 27064                           indf2	equ	0xFDF
 27065                           postinc2	equ	0xFDE
 27066                           postdec2	equ	0xFDD
 27067                           plusw2	equ	0xFDB
 27068                           fsr2h	equ	0xFDA
 27069                           fsr2l	equ	0xFD9
 27070                           status	equ	0xFD8
 27071                           
 27072 ;; *************** function _Uart_InitUartModule *****************
 27073 ;; Defined at:
 27074 ;;		line 288 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 27075 ;; Parameters:    Size  Location     Type
 27076 ;;  Module          1    wreg     unsigned char 
 27077 ;;  UartConfig      2   61[BANK0 ] PTR struct _UartConfig
 27078 ;;		 -> UartConfig(21), 
 27079 ;; Auto vars:     Size  Location     Type
 27080 ;;  Module          1   65[BANK0 ] unsigned char 
 27081 ;; Return value:  Size  Location     Type
 27082 ;;                  1    wreg      void 
 27083 ;; Registers used:
 27084 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 27085 ;; Tracked objects:
 27086 ;;		On entry : 0/0
 27087 ;;		On exit  : 0/0
 27088 ;;		Unchanged: 0/0
 27089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27090 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27091 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27092 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27093 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27094 ;;Total ram usage:        5 bytes
 27095 ;; Hardware stack levels used:    1
 27096 ;; Hardware stack levels required when called:   13
 27097 ;; This function calls:
 27098 ;;		_SetUartBaudRate
 27099 ;; This function is called by:
 27100 ;;		_ConfigureModem
 27101 ;;		_Mdm_MainTask
 27102 ;; This function uses a non-reentrant model
 27103 ;;
 27104                           
 27105                           	psect	text127
 27106  000ABC                     __ptext127:
 27107                           	opt stack 0
 27108  000ABC                     _Uart_InitUartModule:
 27109                           	opt stack 14
 27110                           
 27111                           ;incstack = 0
 27112                           ;Uart_InitUartModule@Module stored from wreg
 27113  000ABC  0100               	movlb	0	; () banked
 27114  000ABE  6FA1               	movwf	Uart_InitUartModule@Module& (0+255),b
 27115                           
 27116                           ;uart_drv.c: 290: if (Module == ((UINT8)(1)))
 27117  000AC0  0100               	movlb	0	; () banked
 27118  000AC2  05A1               	decf	Uart_InitUartModule@Module& (0+255),w,b
 27119  000AC4  A4D8               	btfss	status,2,c
 27120  000AC6  D0BE               	goto	l668
 27121                           
 27122                           ; BSR set to: 0
 27123                           ;uart_drv.c: 291: {
 27124                           ;uart_drv.c: 293: TRISCbits.TRISC6 = ((UINT8)(0));
 27125  000AC8  9C94               	bcf	3988,6,c	;volatile
 27126                           
 27127                           ;uart_drv.c: 294: TRISCbits.TRISC7 = ((UINT8)(1));
 27128  000ACA  8E94               	bsf	3988,7,c	;volatile
 27129                           
 27130                           ; BSR set to: 0
 27131                           ;uart_drv.c: 297: SetUartBaudRate(((UINT8)(1)), UartConfig);
 27132  000ACC  C09D  F096         	movff	Uart_InitUartModule@UartConfig,SetUartBaudRate@UartConfig
 27133  000AD0  C09E  F097         	movff	Uart_InitUartModule@UartConfig+1,SetUartBaudRate@UartConfig+1
 27134  000AD4  0E01               	movlw	1
 27135  000AD6  EC0B  F016         	call	_SetUartBaudRate
 27136                           
 27137                           ;uart_drv.c: 302: TXSTA1 = 0x00;
 27138  000ADA  0E00               	movlw	0
 27139  000ADC  6EAD               	movwf	4013,c	;volatile
 27140                           
 27141                           ;uart_drv.c: 303: TXSTA1 |= (UartConfig->Tx9bitMode) << ((UINT8)(6));
 27142  000ADE  0100               	movlb	0	; () banked
 27143  000AE0  EE20 F004          	lfsr	2,4
 27144  000AE4  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 27145  000AE6  26D9               	addwf	fsr2l,f,c
 27146  000AE8  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 27147  000AEA  22DA               	addwfc	fsr2h,f,c
 27148  000AEC  50DF               	movf	indf2,w,c
 27149  000AEE  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 27150  000AF0  0E06               	movlw	6
 27151  000AF2  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 27152  000AF4                     u13245:
 27153  000AF4  90D8               	bcf	status,0,c
 27154  000AF6  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 27155  000AF8  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 27156  000AFA  D7FC               	goto	u13245
 27157  000AFC  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 27158  000AFE  12AD               	iorwf	4013,f,c	;volatile
 27159                           
 27160                           ; BSR set to: 0
 27161                           ;uart_drv.c: 304: TXSTA1 |= (UartConfig->TxEnable) << ((UINT8)(5));
 27162  000B00  EE20 F006          	lfsr	2,6
 27163  000B04  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 27164  000B06  26D9               	addwf	fsr2l,f,c
 27165  000B08  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 27166  000B0A  22DA               	addwfc	fsr2h,f,c
 27167  000B0C  50DF               	movf	indf2,w,c
 27168  000B0E  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 27169  000B10  0E05               	movlw	5
 27170  000B12  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 27171  000B14                     u13255:
 27172  000B14  90D8               	bcf	status,0,c
 27173  000B16  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 27174  000B18  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 27175  000B1A  D7FC               	goto	u13255
 27176  000B1C  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 27177  000B1E  12AD               	iorwf	4013,f,c	;volatile
 27178                           
 27179                           ; BSR set to: 0
 27180                           ;uart_drv.c: 305: TXSTA1 |= (UartConfig->UartMode) << ((UINT8)(4));
 27181  000B20  EE20 F001          	lfsr	2,1
 27182  000B24  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 27183  000B26  26D9               	addwf	fsr2l,f,c
 27184  000B28  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 27185  000B2A  22DA               	addwfc	fsr2h,f,c
 27186  000B2C  50DF               	movf	indf2,w,c
 27187  000B2E  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 27188  000B30  399F               	swapf	??_Uart_InitUartModule& (0+255),w,b
 27189  000B32  0BF0               	andlw	240
 27190  000B34  12AD               	iorwf	4013,f,c	;volatile
 27191                           
 27192                           ; BSR set to: 0
 27193                           ;uart_drv.c: 306: TXSTA1 |= (UartConfig->SendBreakEnable) << ((UINT8)(3));
 27194  000B36  EE20 F008          	lfsr	2,8
 27195  000B3A  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 27196  000B3C  26D9               	addwf	fsr2l,f,c
 27197  000B3E  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 27198  000B40  22DA               	addwfc	fsr2h,f,c
 27199  000B42  50DF               	movf	indf2,w,c
 27200  000B44  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 27201  000B46  90D8               	bcf	status,0,c
 27202  000B48  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 27203  000B4A  90D8               	bcf	status,0,c
 27204  000B4C  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 27205  000B4E  90D8               	bcf	status,0,c
 27206  000B50  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 27207  000B52  12AD               	iorwf	4013,f,c	;volatile
 27208                           
 27209                           ; BSR set to: 0
 27210                           ;uart_drv.c: 307: TXSTA1 |= (UartConfig->HighBaudMode) << ((UINT8)(2));
 27211  000B54  EE20 F003          	lfsr	2,3
 27212  000B58  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 27213  000B5A  26D9               	addwf	fsr2l,f,c
 27214  000B5C  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 27215  000B5E  22DA               	addwfc	fsr2h,f,c
 27216  000B60  50DF               	movf	indf2,w,c
 27217  000B62  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 27218  000B64  90D8               	bcf	status,0,c
 27219  000B66  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 27220  000B68  90D8               	bcf	status,0,c
 27221  000B6A  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 27222  000B6C  12AD               	iorwf	4013,f,c	;volatile
 27223                           
 27224                           ; BSR set to: 0
 27225                           ;uart_drv.c: 310: RCSTA1 = 0x00;
 27226  000B6E  0E00               	movlw	0
 27227  000B70  6EAC               	movwf	4012,c	;volatile
 27228                           
 27229                           ; BSR set to: 0
 27230                           ;uart_drv.c: 311: RCSTA1 |= (UartConfig->UartEnable) << ((UINT8)(7));
 27231  000B72  C09D  FFD9         	movff	Uart_InitUartModule@UartConfig,fsr2l
 27232  000B76  C09E  FFDA         	movff	Uart_InitUartModule@UartConfig+1,fsr2h
 27233  000B7A  50DF               	movf	indf2,w,c
 27234  000B7C  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 27235  000B7E  0E00               	movlw	0
 27236  000B80  B19F               	btfsc	??_Uart_InitUartModule& (0+255),0,b
 27237  000B82  0E80               	movlw	128
 27238  000B84  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 27239  000B86  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 27240  000B88  12AC               	iorwf	4012,f,c	;volatile
 27241                           
 27242                           ; BSR set to: 0
 27243                           ;uart_drv.c: 312: RCSTA1 |= (UartConfig->Rx9bitMode) << ((UINT8)(6));
 27244  000B8A  EE20 F005          	lfsr	2,5
 27245  000B8E  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 27246  000B90  26D9               	addwf	fsr2l,f,c
 27247  000B92  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 27248  000B94  22DA               	addwfc	fsr2h,f,c
 27249  000B96  50DF               	movf	indf2,w,c
 27250  000B98  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 27251  000B9A  0E06               	movlw	6
 27252  000B9C  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 27253  000B9E                     u13265:
 27254  000B9E  90D8               	bcf	status,0,c
 27255  000BA0  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 27256  000BA2  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 27257  000BA4  D7FC               	goto	u13265
 27258  000BA6  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 27259  000BA8  12AC               	iorwf	4012,f,c	;volatile
 27260                           
 27261                           ; BSR set to: 0
 27262                           ;uart_drv.c: 313: RCSTA1 |= (UartConfig->RxEnable) << ((UINT8)(4));
 27263  000BAA  EE20 F007          	lfsr	2,7
 27264  000BAE  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 27265  000BB0  26D9               	addwf	fsr2l,f,c
 27266  000BB2  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 27267  000BB4  22DA               	addwfc	fsr2h,f,c
 27268  000BB6  50DF               	movf	indf2,w,c
 27269  000BB8  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 27270  000BBA  399F               	swapf	??_Uart_InitUartModule& (0+255),w,b
 27271  000BBC  0BF0               	andlw	240
 27272  000BBE  12AC               	iorwf	4012,f,c	;volatile
 27273                           
 27274                           ; BSR set to: 0
 27275                           ;uart_drv.c: 316: BAUDCON1 = 0x00;
 27276  000BC0  0E00               	movlw	0
 27277  000BC2  6E7E               	movwf	3966,c	;volatile
 27278                           
 27279                           ; BSR set to: 0
 27280                           ;uart_drv.c: 317: BAUDCON1 |= (UartConfig->BaudRateMode) << ((UINT8)(3));
 27281  000BC4  EE20 F002          	lfsr	2,2
 27282  000BC8  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 27283  000BCA  26D9               	addwf	fsr2l,f,c
 27284  000BCC  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 27285  000BCE  22DA               	addwfc	fsr2h,f,c
 27286  000BD0  50DF               	movf	indf2,w,c
 27287  000BD2  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 27288  000BD4  90D8               	bcf	status,0,c
 27289  000BD6  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 27290  000BD8  90D8               	bcf	status,0,c
 27291  000BDA  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 27292  000BDC  90D8               	bcf	status,0,c
 27293  000BDE  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 27294  000BE0  127E               	iorwf	3966,f,c	;volatile
 27295                           
 27296                           ; BSR set to: 0
 27297                           ;uart_drv.c: 318: BAUDCON1 |= (UartConfig->WakeUpEnable) << ((UINT8)(1));
 27298  000BE2  EE20 F00A          	lfsr	2,10
 27299  000BE6  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 27300  000BE8  26D9               	addwf	fsr2l,f,c
 27301  000BEA  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 27302  000BEC  22DA               	addwfc	fsr2h,f,c
 27303  000BEE  50DF               	movf	indf2,w,c
 27304  000BF0  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 27305  000BF2  90D8               	bcf	status,0,c
 27306  000BF4  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 27307  000BF6  127E               	iorwf	3966,f,c	;volatile
 27308                           
 27309                           ; BSR set to: 0
 27310                           ;uart_drv.c: 319: BAUDCON1 |= (UartConfig->AutobaudEnable) << ((UINT8)(0));
 27311  000BF8  EE20 F009          	lfsr	2,9
 27312  000BFC  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 27313  000BFE  26D9               	addwf	fsr2l,f,c
 27314  000C00  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 27315  000C02  22DA               	addwfc	fsr2h,f,c
 27316  000C04  50DF               	movf	indf2,w,c
 27317  000C06  127E               	iorwf	3966,f,c	;volatile
 27318                           
 27319                           ; BSR set to: 0
 27320                           ;uart_drv.c: 322: PIE1bits.TX1IE = UartConfig->TxInterruptEnable;
 27321  000C08  EE20 F00B          	lfsr	2,11
 27322  000C0C  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 27323  000C0E  26D9               	addwf	fsr2l,f,c
 27324  000C10  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 27325  000C12  22DA               	addwfc	fsr2h,f,c
 27326  000C14  50DF               	movf	indf2,w,c
 27327  000C16  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 27328  000C18  3B9F               	swapf	??_Uart_InitUartModule& (0+255),f,b
 27329  000C1A  509D               	movf	3997,w,c	;volatile
 27330  000C1C  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 27331  000C1E  0BEF               	andlw	-17
 27332  000C20  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 27333  000C22  6E9D               	movwf	3997,c	;volatile
 27334                           
 27335                           ; BSR set to: 0
 27336                           ;uart_drv.c: 323: PIE1bits.RC1IE = UartConfig->RxInterruptEnable;
 27337  000C24  EE20 F00C          	lfsr	2,12
 27338  000C28  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 27339  000C2A  26D9               	addwf	fsr2l,f,c
 27340  000C2C  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 27341  000C2E  22DA               	addwfc	fsr2h,f,c
 27342  000C30  50DF               	movf	indf2,w,c
 27343  000C32  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 27344  000C34  3B9F               	swapf	??_Uart_InitUartModule& (0+255),f,b
 27345  000C36  479F               	rlncf	??_Uart_InitUartModule& (0+255),f,b
 27346  000C38  509D               	movf	3997,w,c	;volatile
 27347  000C3A  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 27348  000C3C  0BDF               	andlw	-33
 27349  000C3E  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 27350  000C40  6E9D               	movwf	3997,c	;volatile
 27351                           
 27352                           ;uart_drv.c: 326: }
 27353  000C42  0012               	return	
 27354  000C44                     l668:
 27355                           
 27356                           ; BSR set to: 0
 27357                           ;uart_drv.c: 327: else if (Module == ((UINT8)(2)))
 27358                           
 27359                           ; BSR set to: 0
 27360  000C44  0E02               	movlw	2
 27361  000C46  19A1               	xorwf	Uart_InitUartModule@Module& (0+255),w,b
 27362  000C48  A4D8               	btfss	status,2,c
 27363  000C4A  0012               	return	
 27364                           
 27365                           ; BSR set to: 0
 27366                           ;uart_drv.c: 328: {
 27367                           ;uart_drv.c: 330: TRISCbits.TRISC0 = ((UINT8)(0));
 27368  000C4C  9094               	bcf	3988,0,c	;volatile
 27369                           
 27370                           ;uart_drv.c: 331: TRISCbits.TRISC1 = ((UINT8)(1));
 27371  000C4E  8294               	bsf	3988,1,c	;volatile
 27372                           
 27373                           ; BSR set to: 0
 27374                           ;uart_drv.c: 334: SetUartBaudRate(((UINT8)(2)), UartConfig);
 27375  000C50  C09D  F096         	movff	Uart_InitUartModule@UartConfig,SetUartBaudRate@UartConfig
 27376  000C54  C09E  F097         	movff	Uart_InitUartModule@UartConfig+1,SetUartBaudRate@UartConfig+1
 27377  000C58  0E02               	movlw	2
 27378  000C5A  EC0B  F016         	call	_SetUartBaudRate
 27379                           
 27380                           ;uart_drv.c: 339: TXSTA2 = 0x00;
 27381  000C5E  0E00               	movlw	0
 27382  000C60  6EA8               	movwf	4008,c	;volatile
 27383                           
 27384                           ;uart_drv.c: 340: TXSTA2 |= (UartConfig->Tx9bitMode) << ((UINT8)(6));
 27385  000C62  0100               	movlb	0	; () banked
 27386  000C64  EE20 F004          	lfsr	2,4
 27387  000C68  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 27388  000C6A  26D9               	addwf	fsr2l,f,c
 27389  000C6C  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 27390  000C6E  22DA               	addwfc	fsr2h,f,c
 27391  000C70  50DF               	movf	indf2,w,c
 27392  000C72  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 27393  000C74  0E06               	movlw	6
 27394  000C76  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 27395  000C78                     u13285:
 27396  000C78  90D8               	bcf	status,0,c
 27397  000C7A  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 27398  000C7C  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 27399  000C7E  D7FC               	goto	u13285
 27400  000C80  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 27401  000C82  12A8               	iorwf	4008,f,c	;volatile
 27402                           
 27403                           ; BSR set to: 0
 27404                           ;uart_drv.c: 341: TXSTA2 |= (UartConfig->TxEnable) << ((UINT8)(5));
 27405  000C84  EE20 F006          	lfsr	2,6
 27406  000C88  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 27407  000C8A  26D9               	addwf	fsr2l,f,c
 27408  000C8C  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 27409  000C8E  22DA               	addwfc	fsr2h,f,c
 27410  000C90  50DF               	movf	indf2,w,c
 27411  000C92  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 27412  000C94  0E05               	movlw	5
 27413  000C96  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 27414  000C98                     u13295:
 27415  000C98  90D8               	bcf	status,0,c
 27416  000C9A  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 27417  000C9C  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 27418  000C9E  D7FC               	goto	u13295
 27419  000CA0  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 27420  000CA2  12A8               	iorwf	4008,f,c	;volatile
 27421                           
 27422                           ; BSR set to: 0
 27423                           ;uart_drv.c: 342: TXSTA2 |= (UartConfig->UartMode) << ((UINT8)(4));
 27424  000CA4  EE20 F001          	lfsr	2,1
 27425  000CA8  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 27426  000CAA  26D9               	addwf	fsr2l,f,c
 27427  000CAC  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 27428  000CAE  22DA               	addwfc	fsr2h,f,c
 27429  000CB0  50DF               	movf	indf2,w,c
 27430  000CB2  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 27431  000CB4  399F               	swapf	??_Uart_InitUartModule& (0+255),w,b
 27432  000CB6  0BF0               	andlw	240
 27433  000CB8  12A8               	iorwf	4008,f,c	;volatile
 27434                           
 27435                           ; BSR set to: 0
 27436                           ;uart_drv.c: 343: TXSTA2 |= (UartConfig->SendBreakEnable) << ((UINT8)(3));
 27437  000CBA  EE20 F008          	lfsr	2,8
 27438  000CBE  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 27439  000CC0  26D9               	addwf	fsr2l,f,c
 27440  000CC2  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 27441  000CC4  22DA               	addwfc	fsr2h,f,c
 27442  000CC6  50DF               	movf	indf2,w,c
 27443  000CC8  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 27444  000CCA  90D8               	bcf	status,0,c
 27445  000CCC  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 27446  000CCE  90D8               	bcf	status,0,c
 27447  000CD0  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 27448  000CD2  90D8               	bcf	status,0,c
 27449  000CD4  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 27450  000CD6  12A8               	iorwf	4008,f,c	;volatile
 27451                           
 27452                           ; BSR set to: 0
 27453                           ;uart_drv.c: 344: TXSTA2 |= (UartConfig->HighBaudMode) << ((UINT8)(2));
 27454  000CD8  EE20 F003          	lfsr	2,3
 27455  000CDC  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 27456  000CDE  26D9               	addwf	fsr2l,f,c
 27457  000CE0  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 27458  000CE2  22DA               	addwfc	fsr2h,f,c
 27459  000CE4  50DF               	movf	indf2,w,c
 27460  000CE6  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 27461  000CE8  90D8               	bcf	status,0,c
 27462  000CEA  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 27463  000CEC  90D8               	bcf	status,0,c
 27464  000CEE  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 27465  000CF0  12A8               	iorwf	4008,f,c	;volatile
 27466                           
 27467                           ; BSR set to: 0
 27468                           ;uart_drv.c: 347: RCSTA2 = 0x00;
 27469  000CF2  0E00               	movlw	0
 27470  000CF4  6E9C               	movwf	3996,c	;volatile
 27471                           
 27472                           ; BSR set to: 0
 27473                           ;uart_drv.c: 348: RCSTA2 |= (UartConfig->UartEnable) << ((UINT8)(7));
 27474  000CF6  C09D  FFD9         	movff	Uart_InitUartModule@UartConfig,fsr2l
 27475  000CFA  C09E  FFDA         	movff	Uart_InitUartModule@UartConfig+1,fsr2h
 27476  000CFE  50DF               	movf	indf2,w,c
 27477  000D00  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 27478  000D02  0E00               	movlw	0
 27479  000D04  B19F               	btfsc	??_Uart_InitUartModule& (0+255),0,b
 27480  000D06  0E80               	movlw	128
 27481  000D08  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 27482  000D0A  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 27483  000D0C  129C               	iorwf	3996,f,c	;volatile
 27484                           
 27485                           ; BSR set to: 0
 27486                           ;uart_drv.c: 349: RCSTA2 |= (UartConfig->Rx9bitMode) << ((UINT8)(6));
 27487  000D0E  EE20 F005          	lfsr	2,5
 27488  000D12  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 27489  000D14  26D9               	addwf	fsr2l,f,c
 27490  000D16  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 27491  000D18  22DA               	addwfc	fsr2h,f,c
 27492  000D1A  50DF               	movf	indf2,w,c
 27493  000D1C  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 27494  000D1E  0E06               	movlw	6
 27495  000D20  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 27496  000D22                     u13305:
 27497  000D22  90D8               	bcf	status,0,c
 27498  000D24  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 27499  000D26  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 27500  000D28  D7FC               	goto	u13305
 27501  000D2A  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 27502  000D2C  129C               	iorwf	3996,f,c	;volatile
 27503                           
 27504                           ; BSR set to: 0
 27505                           ;uart_drv.c: 350: RCSTA2 |= (UartConfig->RxEnable) << ((UINT8)(4));
 27506  000D2E  EE20 F007          	lfsr	2,7
 27507  000D32  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 27508  000D34  26D9               	addwf	fsr2l,f,c
 27509  000D36  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 27510  000D38  22DA               	addwfc	fsr2h,f,c
 27511  000D3A  50DF               	movf	indf2,w,c
 27512  000D3C  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 27513  000D3E  399F               	swapf	??_Uart_InitUartModule& (0+255),w,b
 27514  000D40  0BF0               	andlw	240
 27515  000D42  129C               	iorwf	3996,f,c	;volatile
 27516                           
 27517                           ; BSR set to: 0
 27518                           ;uart_drv.c: 353: BAUDCON2 = 0x00;
 27519  000D44  0E00               	movlw	0
 27520  000D46  6E7C               	movwf	3964,c	;volatile
 27521                           
 27522                           ; BSR set to: 0
 27523                           ;uart_drv.c: 354: BAUDCON2 |= (UartConfig->BaudRateMode) << ((UINT8)(3));
 27524  000D48  EE20 F002          	lfsr	2,2
 27525  000D4C  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 27526  000D4E  26D9               	addwf	fsr2l,f,c
 27527  000D50  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 27528  000D52  22DA               	addwfc	fsr2h,f,c
 27529  000D54  50DF               	movf	indf2,w,c
 27530  000D56  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 27531  000D58  90D8               	bcf	status,0,c
 27532  000D5A  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 27533  000D5C  90D8               	bcf	status,0,c
 27534  000D5E  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 27535  000D60  90D8               	bcf	status,0,c
 27536  000D62  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 27537  000D64  127C               	iorwf	3964,f,c	;volatile
 27538                           
 27539                           ; BSR set to: 0
 27540                           ;uart_drv.c: 355: BAUDCON2 |= (UartConfig->WakeUpEnable) << ((UINT8)(1));
 27541  000D66  EE20 F00A          	lfsr	2,10
 27542  000D6A  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 27543  000D6C  26D9               	addwf	fsr2l,f,c
 27544  000D6E  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 27545  000D70  22DA               	addwfc	fsr2h,f,c
 27546  000D72  50DF               	movf	indf2,w,c
 27547  000D74  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 27548  000D76  90D8               	bcf	status,0,c
 27549  000D78  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 27550  000D7A  127C               	iorwf	3964,f,c	;volatile
 27551                           
 27552                           ; BSR set to: 0
 27553                           ;uart_drv.c: 356: BAUDCON2 |= (UartConfig->AutobaudEnable) << ((UINT8)(0));
 27554  000D7C  EE20 F009          	lfsr	2,9
 27555  000D80  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 27556  000D82  26D9               	addwf	fsr2l,f,c
 27557  000D84  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 27558  000D86  22DA               	addwfc	fsr2h,f,c
 27559  000D88  50DF               	movf	indf2,w,c
 27560  000D8A  127C               	iorwf	3964,f,c	;volatile
 27561                           
 27562                           ; BSR set to: 0
 27563                           ;uart_drv.c: 359: PIE3bits.TX2IE = UartConfig->TxInterruptEnable;
 27564  000D8C  EE20 F00B          	lfsr	2,11
 27565  000D90  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 27566  000D92  26D9               	addwf	fsr2l,f,c
 27567  000D94  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 27568  000D96  22DA               	addwfc	fsr2h,f,c
 27569  000D98  50DF               	movf	indf2,w,c
 27570  000D9A  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 27571  000D9C  3B9F               	swapf	??_Uart_InitUartModule& (0+255),f,b
 27572  000D9E  50A3               	movf	4003,w,c	;volatile
 27573  000DA0  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 27574  000DA2  0BEF               	andlw	-17
 27575  000DA4  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 27576  000DA6  6EA3               	movwf	4003,c	;volatile
 27577                           
 27578                           ; BSR set to: 0
 27579                           ;uart_drv.c: 360: PIE3bits.RC2IE = UartConfig->RxInterruptEnable;
 27580  000DA8  EE20 F00C          	lfsr	2,12
 27581  000DAC  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 27582  000DAE  26D9               	addwf	fsr2l,f,c
 27583  000DB0  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 27584  000DB2  22DA               	addwfc	fsr2h,f,c
 27585  000DB4  50DF               	movf	indf2,w,c
 27586  000DB6  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 27587  000DB8  3B9F               	swapf	??_Uart_InitUartModule& (0+255),f,b
 27588  000DBA  479F               	rlncf	??_Uart_InitUartModule& (0+255),f,b
 27589  000DBC  50A3               	movf	4003,w,c	;volatile
 27590  000DBE  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 27591  000DC0  0BDF               	andlw	-33
 27592  000DC2  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 27593  000DC4  6EA3               	movwf	4003,c	;volatile
 27594                           
 27595                           ; BSR set to: 0
 27596  000DC6  0012               	return	
 27597  000DC8                     __end_of_Uart_InitUartModule:
 27598                           	opt stack 0
 27599                           tosu	equ	0xFFF
 27600                           tosh	equ	0xFFE
 27601                           tosl	equ	0xFFD
 27602                           pclath	equ	0xFFA
 27603                           tblptru	equ	0xFF8
 27604                           tblptrh	equ	0xFF7
 27605                           tblptrl	equ	0xFF6
 27606                           tablat	equ	0xFF5
 27607                           prodh	equ	0xFF4
 27608                           prodl	equ	0xFF3
 27609                           intcon	equ	0xFF2
 27610                           intcon2	equ	0xFF1
 27611                           intcon3	equ	0xFF0
 27612                           indf0	equ	0xFEF
 27613                           postinc0	equ	0xFEE
 27614                           plusw0	equ	0xFEB
 27615                           fsr0h	equ	0xFEA
 27616                           fsr0l	equ	0xFE9
 27617                           wreg	equ	0xFE8
 27618                           indf1	equ	0xFE7
 27619                           postinc1	equ	0xFE6
 27620                           postdec1	equ	0xFE5
 27621                           plusw1	equ	0xFE3
 27622                           fsr1h	equ	0xFE2
 27623                           fsr1l	equ	0xFE1
 27624                           indf2	equ	0xFDF
 27625                           postinc2	equ	0xFDE
 27626                           postdec2	equ	0xFDD
 27627                           plusw2	equ	0xFDB
 27628                           fsr2h	equ	0xFDA
 27629                           fsr2l	equ	0xFD9
 27630                           status	equ	0xFD8
 27631                           
 27632 ;; *************** function _SetUartBaudRate *****************
 27633 ;; Defined at:
 27634 ;;		line 121 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 27635 ;; Parameters:    Size  Location     Type
 27636 ;;  Module          1    wreg     unsigned char 
 27637 ;;  UartConfig      2   54[BANK0 ] PTR struct _UartConfig
 27638 ;;		 -> UartConfig(21), 
 27639 ;; Auto vars:     Size  Location     Type
 27640 ;;  Module          1   57[BANK0 ] unsigned char 
 27641 ;;  BaudRateRegi    2   58[BANK0 ] unsigned short 
 27642 ;;  DivisionFact    1   60[BANK0 ] unsigned char 
 27643 ;; Return value:  Size  Location     Type
 27644 ;;                  1    wreg      void 
 27645 ;; Registers used:
 27646 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 27647 ;; Tracked objects:
 27648 ;;		On entry : 0/0
 27649 ;;		On exit  : 0/0
 27650 ;;		Unchanged: 0/0
 27651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27652 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27653 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27654 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27655 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27656 ;;Total ram usage:        7 bytes
 27657 ;; Hardware stack levels used:    1
 27658 ;; Hardware stack levels required when called:   12
 27659 ;; This function calls:
 27660 ;;		___lldiv
 27661 ;;		___lmul
 27662 ;; This function is called by:
 27663 ;;		_Uart_InitUartModule
 27664 ;; This function uses a non-reentrant model
 27665 ;;
 27666                           
 27667                           	psect	text128
 27668  002C16                     __ptext128:
 27669                           	opt stack 0
 27670  002C16                     _SetUartBaudRate:
 27671                           	opt stack 14
 27672                           
 27673                           ; BSR set to: 0
 27674                           ;incstack = 0
 27675                           ;SetUartBaudRate@Module stored from wreg
 27676  002C16  0100               	movlb	0	; () banked
 27677  002C18  6F99               	movwf	SetUartBaudRate@Module& (0+255),b
 27678                           
 27679                           ;uart_drv.c: 123: UINT16 BaudRateRegister = 0;
 27680  002C1A  0E00               	movlw	0
 27681  002C1C  0100               	movlb	0	; () banked
 27682  002C1E  6F9B               	movwf	(SetUartBaudRate@BaudRateRegister+1)& (0+255),b
 27683  002C20  0E00               	movlw	0
 27684  002C22  6F9A               	movwf	SetUartBaudRate@BaudRateRegister& (0+255),b
 27685                           
 27686                           ;uart_drv.c: 124: UINT8 DivisionFactor = 0;
 27687  002C24  0E00               	movlw	0
 27688  002C26  6F9C               	movwf	SetUartBaudRate@DivisionFactor& (0+255),b
 27689                           
 27690                           ; BSR set to: 0
 27691                           ;uart_drv.c: 127: if ((UartConfig->BaudRateMode == ((UINT8)(0))) && (UartConfig->BaudRat
      +                          eMode == ((UINT8)(0))))
 27692  002C28  EE20 F002          	lfsr	2,2
 27693  002C2C  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 27694  002C2E  26D9               	addwf	fsr2l,f,c
 27695  002C30  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 27696  002C32  22DA               	addwfc	fsr2h,f,c
 27697  002C34  50DF               	movf	indf2,w,c
 27698  002C36  A4D8               	btfss	status,2,c
 27699  002C38  D00B               	goto	l625
 27700                           
 27701                           ; BSR set to: 0
 27702  002C3A  EE20 F002          	lfsr	2,2
 27703  002C3E  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 27704  002C40  26D9               	addwf	fsr2l,f,c
 27705  002C42  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 27706  002C44  22DA               	addwfc	fsr2h,f,c
 27707  002C46  50DF               	movf	indf2,w,c
 27708  002C48  A4D8               	btfss	status,2,c
 27709  002C4A  D002               	goto	l625
 27710                           
 27711                           ; BSR set to: 0
 27712                           ;uart_drv.c: 128: {
 27713                           ;uart_drv.c: 129: DivisionFactor = 64;
 27714  002C4C  0E40               	movlw	64
 27715  002C4E  D039               	goto	L39
 27716  002C50                     l625:
 27717                           
 27718                           ; BSR set to: 0
 27719                           ;uart_drv.c: 131: else if ((UartConfig->BaudRateMode == ((UINT8)(1))) && (UartConfig->Ba
      +                          udRateMode == ((UINT8)(0))))
 27720                           
 27721                           ; BSR set to: 0
 27722  002C50  EE20 F002          	lfsr	2,2
 27723  002C54  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 27724  002C56  26D9               	addwf	fsr2l,f,c
 27725  002C58  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 27726  002C5A  22DA               	addwfc	fsr2h,f,c
 27727  002C5C  04DE               	decf	postinc2,w,c
 27728  002C5E  A4D8               	btfss	status,2,c
 27729  002C60  D009               	goto	l627
 27730                           
 27731                           ; BSR set to: 0
 27732  002C62  EE20 F002          	lfsr	2,2
 27733  002C66  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 27734  002C68  26D9               	addwf	fsr2l,f,c
 27735  002C6A  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 27736  002C6C  22DA               	addwfc	fsr2h,f,c
 27737  002C6E  50DF               	movf	indf2,w,c
 27738  002C70  B4D8               	btfsc	status,2,c
 27739  002C72  D012               	goto	u12400
 27740  002C74                     l627:
 27741                           
 27742                           ; BSR set to: 0
 27743                           ;uart_drv.c: 135: else if ((UartConfig->BaudRateMode == ((UINT8)(0))) && (UartConfig->Ba
      +                          udRateMode == ((UINT8)(1))))
 27744                           
 27745                           ; BSR set to: 0
 27746  002C74  EE20 F002          	lfsr	2,2
 27747  002C78  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 27748  002C7A  26D9               	addwf	fsr2l,f,c
 27749  002C7C  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 27750  002C7E  22DA               	addwfc	fsr2h,f,c
 27751  002C80  50DF               	movf	indf2,w,c
 27752  002C82  A4D8               	btfss	status,2,c
 27753  002C84  D00B               	goto	l629
 27754                           
 27755                           ; BSR set to: 0
 27756  002C86  EE20 F002          	lfsr	2,2
 27757  002C8A  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 27758  002C8C  26D9               	addwf	fsr2l,f,c
 27759  002C8E  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 27760  002C90  22DA               	addwfc	fsr2h,f,c
 27761  002C92  04DE               	decf	postinc2,w,c
 27762  002C94  A4D8               	btfss	status,2,c
 27763  002C96  D002               	goto	l629
 27764  002C98                     u12400:
 27765                           
 27766                           ; BSR set to: 0
 27767                           ;uart_drv.c: 136: {
 27768                           ;uart_drv.c: 137: DivisionFactor = 16;
 27769  002C98  0E10               	movlw	16
 27770  002C9A  D013               	goto	L39
 27771  002C9C                     l629:
 27772                           
 27773                           ; BSR set to: 0
 27774                           ;uart_drv.c: 139: else if ((UartConfig->BaudRateMode == ((UINT8)(1))) && (UartConfig->Ba
      +                          udRateMode == ((UINT8)(1))))
 27775                           
 27776                           ; BSR set to: 0
 27777  002C9C  EE20 F002          	lfsr	2,2
 27778  002CA0  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 27779  002CA2  26D9               	addwf	fsr2l,f,c
 27780  002CA4  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 27781  002CA6  22DA               	addwfc	fsr2h,f,c
 27782  002CA8  04DE               	decf	postinc2,w,c
 27783  002CAA  A4D8               	btfss	status,2,c
 27784  002CAC  D00B               	goto	l631
 27785                           
 27786                           ; BSR set to: 0
 27787  002CAE  EE20 F002          	lfsr	2,2
 27788  002CB2  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 27789  002CB4  26D9               	addwf	fsr2l,f,c
 27790  002CB6  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 27791  002CB8  22DA               	addwfc	fsr2h,f,c
 27792  002CBA  04DE               	decf	postinc2,w,c
 27793  002CBC  A4D8               	btfss	status,2,c
 27794  002CBE  D002               	goto	l631
 27795                           
 27796                           ; BSR set to: 0
 27797                           ;uart_drv.c: 140: {
 27798                           ;uart_drv.c: 141: DivisionFactor = 4;
 27799  002CC0  0E04               	movlw	4
 27800  002CC2                     L39:
 27801  002CC2  6F9C               	movwf	SetUartBaudRate@DivisionFactor& (0+255),b
 27802  002CC4                     l631:
 27803                           
 27804                           ; BSR set to: 0
 27805                           ;uart_drv.c: 146: }
 27806                           ;uart_drv.c: 149: BaudRateRegister = ((UartConfig->McuBusClock/(DivisionFactor * UartCon
      +                          fig->DesiredBaudRate)) - 1);
 27807                           
 27808                           ; BSR set to: 0
 27809                           
 27810                           ; BSR set to: 0
 27811                           
 27812                           ; BSR set to: 0
 27813                           
 27814                           ; BSR set to: 0
 27815                           
 27816                           ;uart_drv.c: 143: else
 27817                           ;uart_drv.c: 144: {
 27818                           
 27819                           ; BSR set to: 0
 27820  002CC4  EE20 F00D          	lfsr	2,13
 27821  002CC8  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 27822  002CCA  26D9               	addwf	fsr2l,f,c
 27823  002CCC  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 27824  002CCE  22DA               	addwfc	fsr2h,f,c
 27825  002CD0  CFDE F089          	movff	postinc2,___lldiv@dividend
 27826  002CD4  CFDE F08A          	movff	postinc2,___lldiv@dividend+1
 27827  002CD8  CFDE F08B          	movff	postinc2,___lldiv@dividend+2
 27828  002CDC  CFDE F08C          	movff	postinc2,___lldiv@dividend+3
 27829  002CE0  519C               	movf	SetUartBaudRate@DivisionFactor& (0+255),w,b
 27830  002CE2  6F7D               	movwf	___lmul@multiplier& (0+255),b
 27831  002CE4  6B7E               	clrf	(___lmul@multiplier+1)& (0+255),b
 27832  002CE6  6B7F               	clrf	(___lmul@multiplier+2)& (0+255),b
 27833  002CE8  6B80               	clrf	(___lmul@multiplier+3)& (0+255),b
 27834  002CEA  EE20 F011          	lfsr	2,17
 27835  002CEE  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 27836  002CF0  26D9               	addwf	fsr2l,f,c
 27837  002CF2  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 27838  002CF4  22DA               	addwfc	fsr2h,f,c
 27839  002CF6  CFDE F081          	movff	postinc2,___lmul@multiplicand
 27840  002CFA  CFDE F082          	movff	postinc2,___lmul@multiplicand+1
 27841  002CFE  CFDE F083          	movff	postinc2,___lmul@multiplicand+2
 27842  002D02  CFDE F084          	movff	postinc2,___lmul@multiplicand+3
 27843  002D06  EC81  F02B         	call	___lmul	;wreg free
 27844  002D0A  C07D  F08D         	movff	?___lmul,___lldiv@divisor
 27845  002D0E  C07E  F08E         	movff	?___lmul+1,___lldiv@divisor+1
 27846  002D12  C07F  F08F         	movff	?___lmul+2,___lldiv@divisor+2
 27847  002D16  C080  F090         	movff	?___lmul+3,___lldiv@divisor+3
 27848  002D1A  ECFE  F027         	call	___lldiv	;wreg free
 27849  002D1E  0EFF               	movlw	255
 27850  002D20  0100               	movlb	0	; () banked
 27851  002D22  2589               	addwf	?___lldiv& (0+255),w,b
 27852  002D24  6F9A               	movwf	SetUartBaudRate@BaudRateRegister& (0+255),b
 27853  002D26  0EFF               	movlw	255
 27854  002D28  218A               	addwfc	(?___lldiv+1)& (0+255),w,b
 27855  002D2A  6F9B               	movwf	(SetUartBaudRate@BaudRateRegister+1)& (0+255),b
 27856                           
 27857                           ; BSR set to: 0
 27858                           ;uart_drv.c: 151: if (Module == ((UINT8)(1)))
 27859  002D2C  0599               	decf	SetUartBaudRate@Module& (0+255),w,b
 27860  002D2E  A4D8               	btfss	status,2,c
 27861  002D30  D005               	goto	l633
 27862                           
 27863                           ; BSR set to: 0
 27864                           ;uart_drv.c: 152: {
 27865                           ;uart_drv.c: 154: SPBRGH1 = (UINT8)((BaudRateRegister & ((UINT8)(0xFF00))) >> ((UINT8)(8
      +                          )));
 27866  002D32  0E00               	movlw	0
 27867  002D34  6E7F               	movwf	3967,c	;volatile
 27868                           
 27869                           ; BSR set to: 0
 27870                           ;uart_drv.c: 155: SPBRG1 = (UINT8)((BaudRateRegister & ((UINT8)(0x00FF))));
 27871  002D36  C09A  FFB0         	movff	SetUartBaudRate@BaudRateRegister,4016	;volatile
 27872                           
 27873                           ;uart_drv.c: 156: }
 27874  002D3A  0012               	return	
 27875  002D3C                     l633:
 27876                           
 27877                           ; BSR set to: 0
 27878                           ;uart_drv.c: 157: else if (Module == ((UINT8)(2)))
 27879                           
 27880                           ; BSR set to: 0
 27881  002D3C  0E02               	movlw	2
 27882  002D3E  1999               	xorwf	SetUartBaudRate@Module& (0+255),w,b
 27883  002D40  A4D8               	btfss	status,2,c
 27884  002D42  0012               	return	
 27885                           
 27886                           ; BSR set to: 0
 27887                           ;uart_drv.c: 158: {
 27888                           ;uart_drv.c: 160: SPBRGH2 = (UINT8)((BaudRateRegister & ((UINT8)(0xFF00))) >> ((UINT8)(8
      +                          )));
 27889  002D44  0E00               	movlw	0
 27890  002D46  6E7D               	movwf	3965,c	;volatile
 27891                           
 27892                           ; BSR set to: 0
 27893                           ;uart_drv.c: 161: SPBRG2 = (UINT8)((BaudRateRegister & ((UINT8)(0x00FF))));
 27894  002D48  C09A  FFAB         	movff	SetUartBaudRate@BaudRateRegister,4011	;volatile
 27895                           
 27896                           ; BSR set to: 0
 27897  002D4C  0012               	return	
 27898  002D4E                     __end_of_SetUartBaudRate:
 27899                           	opt stack 0
 27900                           tosu	equ	0xFFF
 27901                           tosh	equ	0xFFE
 27902                           tosl	equ	0xFFD
 27903                           pclath	equ	0xFFA
 27904                           tblptru	equ	0xFF8
 27905                           tblptrh	equ	0xFF7
 27906                           tblptrl	equ	0xFF6
 27907                           tablat	equ	0xFF5
 27908                           prodh	equ	0xFF4
 27909                           prodl	equ	0xFF3
 27910                           intcon	equ	0xFF2
 27911                           intcon2	equ	0xFF1
 27912                           intcon3	equ	0xFF0
 27913                           indf0	equ	0xFEF
 27914                           postinc0	equ	0xFEE
 27915                           plusw0	equ	0xFEB
 27916                           fsr0h	equ	0xFEA
 27917                           fsr0l	equ	0xFE9
 27918                           wreg	equ	0xFE8
 27919                           indf1	equ	0xFE7
 27920                           postinc1	equ	0xFE6
 27921                           postdec1	equ	0xFE5
 27922                           plusw1	equ	0xFE3
 27923                           fsr1h	equ	0xFE2
 27924                           fsr1l	equ	0xFE1
 27925                           indf2	equ	0xFDF
 27926                           postinc2	equ	0xFDE
 27927                           postdec2	equ	0xFDD
 27928                           plusw2	equ	0xFDB
 27929                           fsr2h	equ	0xFDA
 27930                           fsr2l	equ	0xFD9
 27931                           status	equ	0xFD8
 27932                           
 27933 ;; *************** function ___lmul *****************
 27934 ;; Defined at:
 27935 ;;		line 15 in file "/opt/microchip/xc8/v1.45/sources/common/Umul32.c"
 27936 ;; Parameters:    Size  Location     Type
 27937 ;;  multiplier      4   29[BANK0 ] unsigned long 
 27938 ;;  multiplicand    4   33[BANK0 ] unsigned long 
 27939 ;; Auto vars:     Size  Location     Type
 27940 ;;  product         4   37[BANK0 ] unsigned long 
 27941 ;; Return value:  Size  Location     Type
 27942 ;;                  4   29[BANK0 ] unsigned long 
 27943 ;; Registers used:
 27944 ;;		wreg, status,2, status,0
 27945 ;; Tracked objects:
 27946 ;;		On entry : 0/0
 27947 ;;		On exit  : 0/0
 27948 ;;		Unchanged: 0/0
 27949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27950 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27951 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27952 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27953 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27954 ;;Total ram usage:       12 bytes
 27955 ;; Hardware stack levels used:    1
 27956 ;; Hardware stack levels required when called:   11
 27957 ;; This function calls:
 27958 ;;		Nothing
 27959 ;; This function is called by:
 27960 ;;		_Tmr_TmrBPrSet
 27961 ;;		_SetUartBaudRate
 27962 ;;		_strtol
 27963 ;; This function uses a non-reentrant model
 27964 ;;
 27965                           
 27966                           	psect	text129
 27967  005702                     __ptext129:
 27968                           	opt stack 0
 27969  005702                     ___lmul:
 27970                           	opt stack 15
 27971                           
 27972                           ; BSR set to: 0
 27973                           ;incstack = 0
 27974  005702  0E00               	movlw	0
 27975  005704  0100               	movlb	0	; () banked
 27976  005706  6F85               	movwf	___lmul@product& (0+255),b
 27977  005708  0E00               	movlw	0
 27978  00570A  6F86               	movwf	(___lmul@product+1)& (0+255),b
 27979  00570C  0E00               	movlw	0
 27980  00570E  6F87               	movwf	(___lmul@product+2)& (0+255),b
 27981  005710  0E00               	movlw	0
 27982  005712  6F88               	movwf	(___lmul@product+3)& (0+255),b
 27983  005714                     
 27984                           ; BSR set to: 0
 27985                           
 27986                           ; BSR set to: 0
 27987  005714  A17D               	btfss	___lmul@multiplier& (0+255),0,b
 27988  005716  D008               	goto	l2842
 27989                           
 27990                           ; BSR set to: 0
 27991  005718  5181               	movf	___lmul@multiplicand& (0+255),w,b
 27992  00571A  2785               	addwf	___lmul@product& (0+255),f,b
 27993  00571C  5182               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 27994  00571E  2386               	addwfc	(___lmul@product+1)& (0+255),f,b
 27995  005720  5183               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 27996  005722  2387               	addwfc	(___lmul@product+2)& (0+255),f,b
 27997  005724  5184               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 27998  005726  2388               	addwfc	(___lmul@product+3)& (0+255),f,b
 27999  005728                     l2842:
 28000                           
 28001                           ; BSR set to: 0
 28002                           
 28003                           ; BSR set to: 0
 28004  005728  90D8               	bcf	status,0,c
 28005  00572A  3781               	rlcf	___lmul@multiplicand& (0+255),f,b
 28006  00572C  3782               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 28007  00572E  3783               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 28008  005730  3784               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 28009                           
 28010                           ; BSR set to: 0
 28011  005732  90D8               	bcf	status,0,c
 28012  005734  3380               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 28013  005736  337F               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 28014  005738  337E               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 28015  00573A  337D               	rrcf	___lmul@multiplier& (0+255),f,b
 28016  00573C  517D               	movf	___lmul@multiplier& (0+255),w,b
 28017  00573E  117E               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 28018  005740  117F               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 28019  005742  1180               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 28020  005744  A4D8               	btfss	status,2,c
 28021  005746  D7E6               	goto	l2841
 28022                           
 28023                           ; BSR set to: 0
 28024  005748  C085  F07D         	movff	___lmul@product,?___lmul
 28025  00574C  C086  F07E         	movff	___lmul@product+1,?___lmul+1
 28026  005750  C087  F07F         	movff	___lmul@product+2,?___lmul+2
 28027  005754  C088  F080         	movff	___lmul@product+3,?___lmul+3
 28028                           
 28029                           ; BSR set to: 0
 28030  005758  0012               	return		;funcret
 28031  00575A                     __end_of___lmul:
 28032                           	opt stack 0
 28033                           tosu	equ	0xFFF
 28034                           tosh	equ	0xFFE
 28035                           tosl	equ	0xFFD
 28036                           pclath	equ	0xFFA
 28037                           tblptru	equ	0xFF8
 28038                           tblptrh	equ	0xFF7
 28039                           tblptrl	equ	0xFF6
 28040                           tablat	equ	0xFF5
 28041                           prodh	equ	0xFF4
 28042                           prodl	equ	0xFF3
 28043                           intcon	equ	0xFF2
 28044                           intcon2	equ	0xFF1
 28045                           intcon3	equ	0xFF0
 28046                           indf0	equ	0xFEF
 28047                           postinc0	equ	0xFEE
 28048                           plusw0	equ	0xFEB
 28049                           fsr0h	equ	0xFEA
 28050                           fsr0l	equ	0xFE9
 28051                           wreg	equ	0xFE8
 28052                           indf1	equ	0xFE7
 28053                           postinc1	equ	0xFE6
 28054                           postdec1	equ	0xFE5
 28055                           plusw1	equ	0xFE3
 28056                           fsr1h	equ	0xFE2
 28057                           fsr1l	equ	0xFE1
 28058                           indf2	equ	0xFDF
 28059                           postinc2	equ	0xFDE
 28060                           postdec2	equ	0xFDD
 28061                           plusw2	equ	0xFDB
 28062                           fsr2h	equ	0xFDA
 28063                           fsr2l	equ	0xFD9
 28064                           status	equ	0xFD8
 28065                           
 28066 ;; *************** function _UartSetConfigLow *****************
 28067 ;; Defined at:
 28068 ;;		line 229 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 28069 ;; Parameters:    Size  Location     Type
 28070 ;;		None
 28071 ;; Auto vars:     Size  Location     Type
 28072 ;;		None
 28073 ;; Return value:  Size  Location     Type
 28074 ;;                  1    wreg      void 
 28075 ;; Registers used:
 28076 ;;		wreg, status,2
 28077 ;; Tracked objects:
 28078 ;;		On entry : 0/0
 28079 ;;		On exit  : 0/0
 28080 ;;		Unchanged: 0/0
 28081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28082 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28083 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28085 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28086 ;;Total ram usage:        0 bytes
 28087 ;; Hardware stack levels used:    1
 28088 ;; Hardware stack levels required when called:   11
 28089 ;; This function calls:
 28090 ;;		Nothing
 28091 ;; This function is called by:
 28092 ;;		_ConfigureModem
 28093 ;; This function uses a non-reentrant model
 28094 ;;
 28095                           
 28096                           	psect	text130
 28097  00575A                     __ptext130:
 28098                           	opt stack 0
 28099  00575A                     _UartSetConfigLow:
 28100                           	opt stack 15
 28101                           
 28102                           ;mdm_gsm_gprs.c: 231: UartConfig.UartEnable = ((UINT8)(1));
 28103                           
 28104                           ; BSR set to: 0
 28105                           ;incstack = 0
 28106  00575A  0E01               	movlw	1
 28107  00575C  0103               	movlb	3	; () banked
 28108  00575E  6F28               	movwf	_UartConfig& (0+255),b
 28109                           
 28110                           ;mdm_gsm_gprs.c: 232: UartConfig.UartMode = ((UINT8)(0));
 28111  005760  0E00               	movlw	0
 28112  005762  6F29               	movwf	(_UartConfig+1)& (0+255),b
 28113                           
 28114                           ;mdm_gsm_gprs.c: 233: UartConfig.BaudRateMode = ((UINT8)(0));
 28115  005764  0E00               	movlw	0
 28116  005766  6F2A               	movwf	(_UartConfig+2)& (0+255),b
 28117                           
 28118                           ;mdm_gsm_gprs.c: 234: UartConfig.HighBaudMode = ((UINT8)(0));
 28119  005768  0E00               	movlw	0
 28120  00576A  6F2B               	movwf	(_UartConfig+3)& (0+255),b
 28121                           
 28122                           ;mdm_gsm_gprs.c: 235: UartConfig.Tx9bitMode = ((UINT8)(0));
 28123  00576C  0E00               	movlw	0
 28124  00576E  6F2C               	movwf	(_UartConfig+4)& (0+255),b
 28125                           
 28126                           ;mdm_gsm_gprs.c: 236: UartConfig.Rx9bitMode = ((UINT8)(0));
 28127  005770  0E00               	movlw	0
 28128  005772  6F2D               	movwf	(_UartConfig+5)& (0+255),b
 28129                           
 28130                           ;mdm_gsm_gprs.c: 237: UartConfig.TxEnable = ((UINT8)(1));
 28131  005774  0E01               	movlw	1
 28132  005776  6F2E               	movwf	(_UartConfig+6)& (0+255),b
 28133                           
 28134                           ;mdm_gsm_gprs.c: 238: UartConfig.RxEnable = ((UINT8)(1));
 28135  005778  0E01               	movlw	1
 28136  00577A  6F2F               	movwf	(_UartConfig+7)& (0+255),b
 28137                           
 28138                           ;mdm_gsm_gprs.c: 239: UartConfig.SendBreakEnable = ((UINT8)(0));
 28139  00577C  0E00               	movlw	0
 28140  00577E  6F30               	movwf	(_UartConfig+8)& (0+255),b
 28141                           
 28142                           ;mdm_gsm_gprs.c: 240: UartConfig.AutobaudEnable = ((UINT8)(0));
 28143  005780  0E00               	movlw	0
 28144  005782  6F31               	movwf	(_UartConfig+9)& (0+255),b
 28145                           
 28146                           ;mdm_gsm_gprs.c: 241: UartConfig.WakeUpEnable = ((UINT8)(0));
 28147  005784  0E00               	movlw	0
 28148  005786  6F32               	movwf	(_UartConfig+10)& (0+255),b
 28149                           
 28150                           ;mdm_gsm_gprs.c: 242: UartConfig.TxInterruptEnable = ((UINT8)(0));
 28151  005788  0E00               	movlw	0
 28152  00578A  6F33               	movwf	(_UartConfig+11)& (0+255),b
 28153                           
 28154                           ;mdm_gsm_gprs.c: 243: UartConfig.RxInterruptEnable = ((UINT8)(1));
 28155  00578C  0E01               	movlw	1
 28156  00578E  6F34               	movwf	(_UartConfig+12)& (0+255),b
 28157                           
 28158                           ;mdm_gsm_gprs.c: 244: UartConfig.McuBusClock = ((UINT32)(48000000));
 28159  005790  0E00               	movlw	0
 28160  005792  6F35               	movwf	(_UartConfig+13)& (0+255),b
 28161  005794  0E6C               	movlw	108
 28162  005796  6F36               	movwf	(_UartConfig+14)& (0+255),b
 28163  005798  0EDC               	movlw	220
 28164  00579A  6F37               	movwf	(_UartConfig+15)& (0+255),b
 28165  00579C  0E02               	movlw	2
 28166  00579E  6F38               	movwf	(_UartConfig+16)& (0+255),b
 28167                           
 28168                           ;mdm_gsm_gprs.c: 245: UartConfig.DesiredBaudRate = ((UINT32)(9600));
 28169  0057A0  0E80               	movlw	128
 28170  0057A2  6F39               	movwf	(_UartConfig+17)& (0+255),b
 28171  0057A4  0E25               	movlw	37
 28172  0057A6  6F3A               	movwf	(_UartConfig+18)& (0+255),b
 28173  0057A8  0E00               	movlw	0
 28174  0057AA  6F3B               	movwf	(_UartConfig+19)& (0+255),b
 28175  0057AC  0E00               	movlw	0
 28176  0057AE  6F3C               	movwf	(_UartConfig+20)& (0+255),b
 28177                           
 28178                           ; BSR set to: 3
 28179  0057B0  0012               	return		;funcret
 28180  0057B2                     __end_of_UartSetConfigLow:
 28181                           	opt stack 0
 28182                           tosu	equ	0xFFF
 28183                           tosh	equ	0xFFE
 28184                           tosl	equ	0xFFD
 28185                           pclath	equ	0xFFA
 28186                           tblptru	equ	0xFF8
 28187                           tblptrh	equ	0xFF7
 28188                           tblptrl	equ	0xFF6
 28189                           tablat	equ	0xFF5
 28190                           prodh	equ	0xFF4
 28191                           prodl	equ	0xFF3
 28192                           intcon	equ	0xFF2
 28193                           intcon2	equ	0xFF1
 28194                           intcon3	equ	0xFF0
 28195                           indf0	equ	0xFEF
 28196                           postinc0	equ	0xFEE
 28197                           plusw0	equ	0xFEB
 28198                           fsr0h	equ	0xFEA
 28199                           fsr0l	equ	0xFE9
 28200                           wreg	equ	0xFE8
 28201                           indf1	equ	0xFE7
 28202                           postinc1	equ	0xFE6
 28203                           postdec1	equ	0xFE5
 28204                           plusw1	equ	0xFE3
 28205                           fsr1h	equ	0xFE2
 28206                           fsr1l	equ	0xFE1
 28207                           indf2	equ	0xFDF
 28208                           postinc2	equ	0xFDE
 28209                           postdec2	equ	0xFDD
 28210                           plusw2	equ	0xFDB
 28211                           fsr2h	equ	0xFDA
 28212                           fsr2l	equ	0xFD9
 28213                           status	equ	0xFD8
 28214                           
 28215 ;; *************** function _CheckModem *****************
 28216 ;; Defined at:
 28217 ;;		line 283 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 28218 ;; Parameters:    Size  Location     Type
 28219 ;;		None
 28220 ;; Auto vars:     Size  Location     Type
 28221 ;;		None
 28222 ;; Return value:  Size  Location     Type
 28223 ;;                  1    wreg      void 
 28224 ;; Registers used:
 28225 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 28226 ;; Tracked objects:
 28227 ;;		On entry : 0/0
 28228 ;;		On exit  : 0/0
 28229 ;;		Unchanged: 0/0
 28230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28231 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28232 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28234 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28235 ;;Total ram usage:        0 bytes
 28236 ;; Hardware stack levels used:    1
 28237 ;; Hardware stack levels required when called:   14
 28238 ;; This function calls:
 28239 ;;		_GenerateEvt
 28240 ;;		_OsTmr_GetTimerStatus
 28241 ;;		_OsTmr_StartTimer
 28242 ;;		_ReceiveEvt
 28243 ;;		_Uart_WriteConstString
 28244 ;; This function is called by:
 28245 ;;		_Mdm_MainTask
 28246 ;; This function uses a non-reentrant model
 28247 ;;
 28248                           
 28249                           	psect	text131
 28250  002836                     __ptext131:
 28251                           	opt stack 0
 28252  002836                     _CheckModem:
 28253                           	opt stack 13
 28254                           
 28255                           ;mdm_gsm_gprs.c: 285: static CheckMdmStsType CheckMdmSts = MdmCh_SetInitialDelay;
 28256                           ;mdm_gsm_gprs.c: 286: static SwTimerType Timeout = { 0u, SwTimerExpired, 0, 0, DelayNotE
      +                          xpired, };
 28257                           ;mdm_gsm_gprs.c: 288: switch (CheckMdmSts)
 28258                           
 28259                           ; BSR set to: 3
 28260                           ;incstack = 0
 28261  002836  D096               	goto	l982
 28262  002838                     
 28263                           ;mdm_gsm_gprs.c: 292: OsTmr_StartTimer(&Timeout,2000);
 28264  002838  0EF5               	movlw	low CheckModem@Timeout
 28265  00283A  0100               	movlb	0	; () banked
 28266  00283C  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 28267  00283E  0E03               	movlw	high CheckModem@Timeout
 28268  002840  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 28269  002842  0ED0               	movlw	208
 28270  002844  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 28271  002846  0E07               	movlw	7
 28272  002848  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 28273  00284A  0E00               	movlw	0
 28274  00284C  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 28275  00284E  0E00               	movlw	0
 28276  002850  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 28277  002852  ECF8  F02A         	call	_OsTmr_StartTimer	;wreg free
 28278                           
 28279                           ;mdm_gsm_gprs.c: 294: CheckMdmSts = MdmCh_InitialDelay;
 28280  002856  0E01               	movlw	1
 28281  002858  6E29               	movwf	CheckModem@CheckMdmSts,c
 28282                           
 28283                           ;mdm_gsm_gprs.c: 295: break;
 28284  00285A  0012               	return	
 28285  00285C                     
 28286                           ;mdm_gsm_gprs.c: 299: if (OsTmr_GetTimerStatus(&Timeout) == SwTimerExpired)
 28287  00285C  0EF5               	movlw	low CheckModem@Timeout
 28288  00285E  0100               	movlb	0	; () banked
 28289  002860  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 28290  002862  0E03               	movlw	high CheckModem@Timeout
 28291  002864  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 28292  002866  EC5C  F026         	call	_OsTmr_GetTimerStatus	;wreg free
 28293  00286A  06E8               	decf	wreg,f,c
 28294  00286C  A4D8               	btfss	status,2,c
 28295  00286E  0012               	return	
 28296                           
 28297                           ;mdm_gsm_gprs.c: 300: {
 28298                           ;mdm_gsm_gprs.c: 302: CheckMdmSts = MdmCh_SendATE1;
 28299  002870  0E02               	movlw	2
 28300  002872  6E29               	movwf	CheckModem@CheckMdmSts,c
 28301                           
 28302                           ;mdm_gsm_gprs.c: 303: }
 28303                           ;mdm_gsm_gprs.c: 304: break;
 28304  002874  0012               	return	
 28305  002876                     
 28306                           ;mdm_gsm_gprs.c: 308: Uart_WriteConstString(1,"AT\r\n");
 28307  002876  0EE6               	movlw	low STR_1
 28308  002878  0100               	movlb	0	; () banked
 28309  00287A  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 28310  00287C  0EFF               	movlw	high STR_1
 28311  00287E  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 28312  002880  0E01               	movlw	1
 28313  002882  EC7A  F02F         	call	_Uart_WriteConstString
 28314                           
 28315                           ;mdm_gsm_gprs.c: 310: OsTmr_StartTimer(&Timeout,2000u);
 28316  002886  0EF5               	movlw	low CheckModem@Timeout
 28317  002888  0100               	movlb	0	; () banked
 28318  00288A  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 28319  00288C  0E03               	movlw	high CheckModem@Timeout
 28320  00288E  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 28321  002890  0ED0               	movlw	208
 28322  002892  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 28323  002894  0E07               	movlw	7
 28324  002896  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 28325  002898  0E00               	movlw	0
 28326  00289A  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 28327  00289C  0E00               	movlw	0
 28328  00289E  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 28329  0028A0  ECF8  F02A         	call	_OsTmr_StartTimer	;wreg free
 28330                           
 28331                           ;mdm_gsm_gprs.c: 312: CheckMdmSts = MdmCh_WaitEcho;
 28332  0028A4  0E03               	movlw	3
 28333  0028A6  6E29               	movwf	CheckModem@CheckMdmSts,c
 28334                           
 28335                           ;mdm_gsm_gprs.c: 313: break;
 28336  0028A8  0012               	return	
 28337  0028AA                     
 28338                           ;mdm_gsm_gprs.c: 317: if (ReceiveEvt(&NewStringReceived))
 28339  0028AA  0E3C               	movlw	low _NewStringReceived
 28340  0028AC  0100               	movlb	0	; () banked
 28341  0028AE  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 28342  0028B0  0E00               	movlw	high _NewStringReceived
 28343  0028B2  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 28344  0028B4  EC8A  F031         	call	_ReceiveEvt	;wreg free
 28345  0028B8  0900               	iorlw	0
 28346  0028BA  B4D8               	btfsc	status,2,c
 28347  0028BC  D02F               	goto	l989
 28348                           
 28349                           ;mdm_gsm_gprs.c: 318: {
 28350                           ;mdm_gsm_gprs.c: 320: if (((RxBuffer[0] == 'O') && (RxBuffer[1] == 'K')) || ((RxBuffer[1
      +                          ] == 'O') && (RxBuffer[2] == 'K')))
 28351  0028BE  CC58  FFE8         	movff	_RxBuffer,wreg
 28352  0028C2  0A4F               	xorlw	79
 28353  0028C4  A4D8               	btfss	status,2,c
 28354  0028C6  D005               	goto	u14310
 28355  0028C8  CC59  FFE8         	movff	_RxBuffer+1,wreg
 28356  0028CC  0A4B               	xorlw	75
 28357  0028CE  B4D8               	btfsc	status,2,c
 28358  0028D0  D00A               	goto	u14330
 28359  0028D2                     u14310:
 28360  0028D2  CC59  FFE8         	movff	_RxBuffer+1,wreg
 28361  0028D6  0A4F               	xorlw	79
 28362  0028D8  A4D8               	btfss	status,2,c
 28363  0028DA  0012               	return	
 28364  0028DC  CC5A  FFE8         	movff	_RxBuffer+2,wreg
 28365  0028E0  0A4B               	xorlw	75
 28366  0028E2  A4D8               	btfss	status,2,c
 28367  0028E4  0012               	return	
 28368  0028E6                     u14330:
 28369                           
 28370                           ;mdm_gsm_gprs.c: 321: {
 28371                           ;mdm_gsm_gprs.c: 322: MdmStatus = ModemReady;
 28372  0028E6  0E02               	movlw	2
 28373  0028E8  0100               	movlb	0	; () banked
 28374  0028EA  6FD0               	movwf	_MdmStatus& (0+255),b
 28375                           
 28376                           ; BSR set to: 0
 28377                           ;mdm_gsm_gprs.c: 324: GenerateEvt(&MdmOnOffPulseRequest);
 28378  0028EC  0EE0               	movlw	low _MdmOnOffPulseRequest
 28379  0028EE  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 28380  0028F0  0E00               	movlw	high _MdmOnOffPulseRequest
 28381  0028F2  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 28382  0028F4  EC7F  F033         	call	_GenerateEvt	;wreg free
 28383                           
 28384                           ;mdm_gsm_gprs.c: 326: OsTmr_StartTimer(&Timeout,1000u);
 28385  0028F8  0EF5               	movlw	low CheckModem@Timeout
 28386  0028FA  0100               	movlb	0	; () banked
 28387  0028FC  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 28388  0028FE  0E03               	movlw	high CheckModem@Timeout
 28389  002900  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 28390  002902  0EE8               	movlw	232
 28391  002904  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 28392  002906  0E03               	movlw	3
 28393  002908  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 28394  00290A  0E00               	movlw	0
 28395  00290C  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 28396  00290E  0E00               	movlw	0
 28397  002910  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 28398  002912  ECF8  F02A         	call	_OsTmr_StartTimer	;wreg free
 28399                           
 28400                           ;mdm_gsm_gprs.c: 328: CheckMdmSts = MdmCh_Delay;
 28401  002916  0E04               	movlw	4
 28402  002918  6E29               	movwf	CheckModem@CheckMdmSts,c
 28403                           
 28404                           ;mdm_gsm_gprs.c: 329: }
 28405                           ;mdm_gsm_gprs.c: 330: }
 28406  00291A  0012               	return	
 28407  00291C                     l989:
 28408                           
 28409                           ;mdm_gsm_gprs.c: 331: else if (OsTmr_GetTimerStatus(&Timeout) == SwTimerExpired)
 28410  00291C  0EF5               	movlw	low CheckModem@Timeout
 28411  00291E  0100               	movlb	0	; () banked
 28412  002920  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 28413  002922  0E03               	movlw	high CheckModem@Timeout
 28414  002924  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 28415  002926  EC5C  F026         	call	_OsTmr_GetTimerStatus	;wreg free
 28416  00292A  06E8               	decf	wreg,f,c
 28417  00292C  A4D8               	btfss	status,2,c
 28418  00292E  0012               	return	
 28419                           
 28420                           ;mdm_gsm_gprs.c: 332: {
 28421                           ;mdm_gsm_gprs.c: 334: MdmStatus = ModemOff;
 28422  002930  0E00               	movlw	0
 28423  002932  0100               	movlb	0	; () banked
 28424  002934  6FD0               	movwf	_MdmStatus& (0+255),b
 28425                           
 28426                           ;mdm_gsm_gprs.c: 336: ComChecCompleted = 1u;
 28427  002936  0E01               	movlw	1
 28428  002938  6E2A               	movwf	_ComChecCompleted,c
 28429                           
 28430                           ;mdm_gsm_gprs.c: 338: CheckMdmSts = MdmCh_Done;
 28431  00293A  0E05               	movlw	5
 28432  00293C  6E29               	movwf	CheckModem@CheckMdmSts,c
 28433                           
 28434                           ; BSR set to: 0
 28435                           ;mdm_gsm_gprs.c: 343: }
 28436                           ;mdm_gsm_gprs.c: 344: break;
 28437                           
 28438                           ; BSR set to: 0
 28439                           
 28440                           ;mdm_gsm_gprs.c: 340: else
 28441                           ;mdm_gsm_gprs.c: 341: {
 28442                           
 28443                           ; BSR set to: 0
 28444                           
 28445                           ;mdm_gsm_gprs.c: 339: }
 28446  00293E  0012               	return	
 28447  002940                     
 28448                           ;mdm_gsm_gprs.c: 348: if (OsTmr_GetTimerStatus(&Timeout) == SwTimerExpired)
 28449                           
 28450                           ; BSR set to: 0
 28451  002940  0EF5               	movlw	low CheckModem@Timeout
 28452  002942  0100               	movlb	0	; () banked
 28453  002944  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 28454  002946  0E03               	movlw	high CheckModem@Timeout
 28455  002948  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 28456  00294A  EC5C  F026         	call	_OsTmr_GetTimerStatus	;wreg free
 28457  00294E  06E8               	decf	wreg,f,c
 28458  002950  A4D8               	btfss	status,2,c
 28459  002952  0012               	return	
 28460                           
 28461                           ;mdm_gsm_gprs.c: 349: {
 28462                           ;mdm_gsm_gprs.c: 351: MdmStatus = ModemOff;
 28463  002954  0E00               	movlw	0
 28464  002956  0100               	movlb	0	; () banked
 28465  002958  6FD0               	movwf	_MdmStatus& (0+255),b
 28466                           
 28467                           ;mdm_gsm_gprs.c: 353: ComChecCompleted = 1u;
 28468  00295A  0E01               	movlw	1
 28469  00295C  6E2A               	movwf	_ComChecCompleted,c
 28470                           
 28471                           ;mdm_gsm_gprs.c: 355: CheckMdmSts = MdmCh_Done;
 28472  00295E  0E05               	movlw	5
 28473  002960  6E29               	movwf	CheckModem@CheckMdmSts,c
 28474                           
 28475                           ; BSR set to: 0
 28476                           ;mdm_gsm_gprs.c: 365: }
 28477                           
 28478                           ; BSR set to: 0
 28479                           ;mdm_gsm_gprs.c: 364: break;
 28480                           
 28481                           ;mdm_gsm_gprs.c: 363: default:
 28482                           
 28483                           ; BSR set to: 0
 28484                           ;mdm_gsm_gprs.c: 361: break;
 28485                           
 28486                           ;mdm_gsm_gprs.c: 359: case MdmCh_Done:
 28487                           
 28488                           ; BSR set to: 0
 28489                           ;mdm_gsm_gprs.c: 356: }
 28490                           ;mdm_gsm_gprs.c: 357: break;
 28491  002962  0012               	return	
 28492  002964                     l982:
 28493                           
 28494                           ; BSR set to: 0
 28495  002964  5029               	movf	CheckModem@CheckMdmSts,w,c
 28496                           
 28497                           ; Switch size 1, requested type "space"
 28498                           ; Number of cases is 6, Range of values is 0 to 5
 28499                           ; switch strategies available:
 28500                           ; Name         Instructions Cycles
 28501                           ; simple_byte           19    10 (average)
 28502                           ;	Chosen strategy is simple_byte
 28503  002966  0A00               	xorlw	0	; case 0
 28504  002968  B4D8               	btfsc	status,2,c
 28505  00296A  D766               	goto	l983
 28506  00296C  0A01               	xorlw	1	; case 1
 28507  00296E  B4D8               	btfsc	status,2,c
 28508  002970  D775               	goto	l985
 28509  002972  0A03               	xorlw	3	; case 2
 28510  002974  B4D8               	btfsc	status,2,c
 28511  002976  D77F               	goto	l987
 28512  002978  0A01               	xorlw	1	; case 3
 28513  00297A  B4D8               	btfsc	status,2,c
 28514  00297C  D796               	goto	l988
 28515  00297E  0A07               	xorlw	7	; case 4
 28516  002980  B4D8               	btfsc	status,2,c
 28517  002982  D7DE               	goto	l998
 28518  002984  0A01               	xorlw	1	; case 5
 28519  002986  0012               	return	
 28520  002988                     __end_of_CheckModem:
 28521                           	opt stack 0
 28522                           tosu	equ	0xFFF
 28523                           tosh	equ	0xFFE
 28524                           tosl	equ	0xFFD
 28525                           pclath	equ	0xFFA
 28526                           tblptru	equ	0xFF8
 28527                           tblptrh	equ	0xFF7
 28528                           tblptrl	equ	0xFF6
 28529                           tablat	equ	0xFF5
 28530                           prodh	equ	0xFF4
 28531                           prodl	equ	0xFF3
 28532                           intcon	equ	0xFF2
 28533                           intcon2	equ	0xFF1
 28534                           intcon3	equ	0xFF0
 28535                           indf0	equ	0xFEF
 28536                           postinc0	equ	0xFEE
 28537                           plusw0	equ	0xFEB
 28538                           fsr0h	equ	0xFEA
 28539                           fsr0l	equ	0xFE9
 28540                           wreg	equ	0xFE8
 28541                           indf1	equ	0xFE7
 28542                           postinc1	equ	0xFE6
 28543                           postdec1	equ	0xFE5
 28544                           plusw1	equ	0xFE3
 28545                           fsr1h	equ	0xFE2
 28546                           fsr1l	equ	0xFE1
 28547                           indf2	equ	0xFDF
 28548                           postinc2	equ	0xFDE
 28549                           postdec2	equ	0xFDD
 28550                           plusw2	equ	0xFDB
 28551                           fsr2h	equ	0xFDA
 28552                           fsr2l	equ	0xFD9
 28553                           status	equ	0xFD8
 28554                           
 28555 ;; *************** function _MdmCntSm *****************
 28556 ;; Defined at:
 28557 ;;		line 199 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mdm_drv.c"
 28558 ;; Parameters:    Size  Location     Type
 28559 ;;		None
 28560 ;; Auto vars:     Size  Location     Type
 28561 ;;		None
 28562 ;; Return value:  Size  Location     Type
 28563 ;;                  1    wreg      void 
 28564 ;; Registers used:
 28565 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 28566 ;; Tracked objects:
 28567 ;;		On entry : 0/0
 28568 ;;		On exit  : 0/0
 28569 ;;		Unchanged: 0/0
 28570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28571 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28572 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28573 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28574 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28575 ;;Total ram usage:        0 bytes
 28576 ;; Hardware stack levels used:    1
 28577 ;; Hardware stack levels required when called:   12
 28578 ;; This function calls:
 28579 ;;		_InitModemInterface
 28580 ;;		_ReceiveEvt
 28581 ;; This function is called by:
 28582 ;;		_Mdm_DrvMainFn
 28583 ;; This function uses a non-reentrant model
 28584 ;;
 28585                           
 28586                           	psect	text132
 28587  00460C                     __ptext132:
 28588                           	opt stack 0
 28589  00460C                     _MdmCntSm:
 28590                           	opt stack 15
 28591                           
 28592                           ;mdm_drv.c: 201: static MdmCntStateType MdmCntState = InitModemInt;
 28593                           ;mdm_drv.c: 202: static UINT16 Counter = 0;
 28594                           ;mdm_drv.c: 204: switch (MdmCntState)
 28595                           
 28596                           ;incstack = 0
 28597  00460C  D045               	goto	l315
 28598  00460E                     
 28599                           ;mdm_drv.c: 208: InitModemInterface();
 28600  00460E  EC37  F034         	call	_InitModemInterface	;wreg free
 28601                           
 28602                           ;mdm_drv.c: 210: MdmCntState = CheckRequest;
 28603  004612  0E01               	movlw	1
 28604  004614  6E2D               	movwf	MdmCntSm@MdmCntState,c
 28605                           
 28606                           ;mdm_drv.c: 211: break;
 28607  004616  0012               	return	
 28608  004618                     
 28609                           ;mdm_drv.c: 215: if (ReceiveEvt(&MdmOnOffPulseRequest))
 28610  004618  0EE0               	movlw	low _MdmOnOffPulseRequest
 28611  00461A  0100               	movlb	0	; () banked
 28612  00461C  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 28613  00461E  0E00               	movlw	high _MdmOnOffPulseRequest
 28614  004620  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 28615  004622  EC8A  F031         	call	_ReceiveEvt	;wreg free
 28616  004626  0900               	iorlw	0
 28617  004628  B4D8               	btfsc	status,2,c
 28618  00462A  D009               	goto	l319
 28619                           
 28620                           ;mdm_drv.c: 216: {
 28621                           ;mdm_drv.c: 218: MdmCntState = MdmOnOffPulse;
 28622  00462C  0E02               	movlw	2
 28623  00462E  6E2D               	movwf	MdmCntSm@MdmCntState,c
 28624                           
 28625                           ;mdm_drv.c: 220: PORTEbits.RE1 = ((UINT8)(1));
 28626  004630  8284               	bsf	3972,1,c	;volatile
 28627                           
 28628                           ;mdm_drv.c: 222: Counter = 0;
 28629  004632  0E00               	movlw	0
 28630  004634  0102               	movlb	2	; () banked
 28631  004636  6FDD               	movwf	(MdmCntSm@Counter+1)& (0+255),b
 28632  004638  0E00               	movlw	0
 28633  00463A  6FDC               	movwf	MdmCntSm@Counter& (0+255),b
 28634                           
 28635                           ;mdm_drv.c: 223: }
 28636  00463C  0012               	return	
 28637  00463E                     l319:
 28638                           
 28639                           ;mdm_drv.c: 224: else if (ReceiveEvt(&MdmResetRequest))
 28640                           
 28641                           ; BSR set to: 2
 28642  00463E  0E3D               	movlw	low _MdmResetRequest
 28643  004640  0100               	movlb	0	; () banked
 28644  004642  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 28645  004644  0E00               	movlw	high _MdmResetRequest
 28646  004646  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 28647  004648  EC8A  F031         	call	_ReceiveEvt	;wreg free
 28648  00464C  0900               	iorlw	0
 28649  00464E  B4D8               	btfsc	status,2,c
 28650  004650  0012               	return	
 28651                           
 28652                           ;mdm_drv.c: 225: {
 28653                           ;mdm_drv.c: 227: MdmCntState = MdmResetPulse;
 28654  004652  0E03               	movlw	3
 28655  004654  6E2D               	movwf	MdmCntSm@MdmCntState,c
 28656                           
 28657                           ;mdm_drv.c: 229: PORTEbits.RE0 = ((UINT8)(1));
 28658  004656  8084               	bsf	3972,0,c	;volatile
 28659                           
 28660                           ;mdm_drv.c: 231: Counter = 0;
 28661  004658  0E00               	movlw	0
 28662  00465A  0102               	movlb	2	; () banked
 28663  00465C  6FDD               	movwf	(MdmCntSm@Counter+1)& (0+255),b
 28664  00465E  0E00               	movlw	0
 28665  004660  6FDC               	movwf	MdmCntSm@Counter& (0+255),b
 28666                           
 28667                           ; BSR set to: 2
 28668                           ;mdm_drv.c: 236: }
 28669                           ;mdm_drv.c: 237: break;
 28670                           
 28671                           ; BSR set to: 2
 28672                           
 28673                           ;mdm_drv.c: 233: else
 28674                           ;mdm_drv.c: 234: {
 28675                           
 28676                           ; BSR set to: 2
 28677                           
 28678                           ;mdm_drv.c: 232: }
 28679  004662  0012               	return	
 28680  004664                     
 28681                           ;mdm_drv.c: 241: Counter++;
 28682                           
 28683                           ; BSR set to: 2
 28684  004664  0102               	movlb	2	; () banked
 28685  004666  4BDC               	infsnz	MdmCntSm@Counter& (0+255),f,b
 28686  004668  2BDD               	incf	(MdmCntSm@Counter+1)& (0+255),f,b
 28687                           
 28688                           ; BSR set to: 2
 28689                           ;mdm_drv.c: 243: if (Counter >= (((UINT16)(1500))/((UINT16)(10))))
 28690  00466A  51DD               	movf	(MdmCntSm@Counter+1)& (0+255),w,b
 28691  00466C  E104               	bnz	u14230
 28692  00466E  0E96               	movlw	150
 28693  004670  5DDC               	subwf	MdmCntSm@Counter& (0+255),w,b
 28694  004672  A0D8               	btfss	status,0,c
 28695  004674  0012               	return	
 28696  004676                     u14230:
 28697                           
 28698                           ; BSR set to: 2
 28699                           ;mdm_drv.c: 244: {
 28700                           ;mdm_drv.c: 246: PORTEbits.RE1 = ((UINT8)(0));
 28701  004676  9284               	bcf	3972,1,c	;volatile
 28702                           
 28703                           ; BSR set to: 2
 28704                           ;mdm_drv.c: 248: MdmCntState = CheckRequest;
 28705  004678  0E01               	movlw	1
 28706  00467A  6E2D               	movwf	MdmCntSm@MdmCntState,c
 28707                           
 28708                           ; BSR set to: 2
 28709                           ;mdm_drv.c: 249: }
 28710                           ;mdm_drv.c: 250: break;
 28711  00467C  0012               	return	
 28712  00467E                     
 28713                           ;mdm_drv.c: 254: Counter++;
 28714                           
 28715                           ; BSR set to: 2
 28716  00467E  0102               	movlb	2	; () banked
 28717  004680  4BDC               	infsnz	MdmCntSm@Counter& (0+255),f,b
 28718  004682  2BDD               	incf	(MdmCntSm@Counter+1)& (0+255),f,b
 28719                           
 28720                           ; BSR set to: 2
 28721                           ;mdm_drv.c: 256: if (Counter >= (((UINT16)(100))/((UINT16)(10))))
 28722  004684  51DD               	movf	(MdmCntSm@Counter+1)& (0+255),w,b
 28723  004686  E104               	bnz	u14240
 28724  004688  0E0A               	movlw	10
 28725  00468A  5DDC               	subwf	MdmCntSm@Counter& (0+255),w,b
 28726  00468C  A0D8               	btfss	status,0,c
 28727  00468E  0012               	return	
 28728  004690                     u14240:
 28729                           
 28730                           ; BSR set to: 2
 28731                           ;mdm_drv.c: 257: {
 28732                           ;mdm_drv.c: 259: PORTEbits.RE0 = ((UINT8)(0));
 28733  004690  9084               	bcf	3972,0,c	;volatile
 28734                           
 28735                           ; BSR set to: 2
 28736                           ;mdm_drv.c: 261: MdmCntState = CheckRequest;
 28737  004692  0E01               	movlw	1
 28738  004694  6E2D               	movwf	MdmCntSm@MdmCntState,c
 28739                           
 28740                           ; BSR set to: 2
 28741                           ;mdm_drv.c: 267: }
 28742                           
 28743                           ; BSR set to: 2
 28744                           ;mdm_drv.c: 266: break;
 28745                           
 28746                           ;mdm_drv.c: 265: default:
 28747                           
 28748                           ; BSR set to: 2
 28749                           ;mdm_drv.c: 262: }
 28750                           ;mdm_drv.c: 263: break;
 28751  004696  0012               	return	
 28752  004698                     l315:
 28753                           
 28754                           ; BSR set to: 2
 28755  004698  502D               	movf	MdmCntSm@MdmCntState,w,c
 28756                           
 28757                           ; Switch size 1, requested type "space"
 28758                           ; Number of cases is 4, Range of values is 0 to 3
 28759                           ; switch strategies available:
 28760                           ; Name         Instructions Cycles
 28761                           ; simple_byte           13     7 (average)
 28762                           ;	Chosen strategy is simple_byte
 28763  00469A  0A00               	xorlw	0	; case 0
 28764  00469C  B4D8               	btfsc	status,2,c
 28765  00469E  D7B7               	goto	l316
 28766  0046A0  0A01               	xorlw	1	; case 1
 28767  0046A2  B4D8               	btfsc	status,2,c
 28768  0046A4  D7B9               	goto	l318
 28769  0046A6  0A03               	xorlw	3	; case 2
 28770  0046A8  B4D8               	btfsc	status,2,c
 28771  0046AA  D7DC               	goto	l323
 28772  0046AC  0A01               	xorlw	1	; case 3
 28773  0046AE  A4D8               	btfss	status,2,c
 28774  0046B0  0012               	return	
 28775  0046B2  D7E5               	goto	l325
 28776  0046B4                     __end_of_MdmCntSm:
 28777                           	opt stack 0
 28778                           tosu	equ	0xFFF
 28779                           tosh	equ	0xFFE
 28780                           tosl	equ	0xFFD
 28781                           pclath	equ	0xFFA
 28782                           tblptru	equ	0xFF8
 28783                           tblptrh	equ	0xFF7
 28784                           tblptrl	equ	0xFF6
 28785                           tablat	equ	0xFF5
 28786                           prodh	equ	0xFF4
 28787                           prodl	equ	0xFF3
 28788                           intcon	equ	0xFF2
 28789                           intcon2	equ	0xFF1
 28790                           intcon3	equ	0xFF0
 28791                           indf0	equ	0xFEF
 28792                           postinc0	equ	0xFEE
 28793                           plusw0	equ	0xFEB
 28794                           fsr0h	equ	0xFEA
 28795                           fsr0l	equ	0xFE9
 28796                           wreg	equ	0xFE8
 28797                           indf1	equ	0xFE7
 28798                           postinc1	equ	0xFE6
 28799                           postdec1	equ	0xFE5
 28800                           plusw1	equ	0xFE3
 28801                           fsr1h	equ	0xFE2
 28802                           fsr1l	equ	0xFE1
 28803                           indf2	equ	0xFDF
 28804                           postinc2	equ	0xFDE
 28805                           postdec2	equ	0xFDD
 28806                           plusw2	equ	0xFDB
 28807                           fsr2h	equ	0xFDA
 28808                           fsr2l	equ	0xFD9
 28809                           status	equ	0xFD8
 28810                           
 28811 ;; *************** function _InitModemInterface *****************
 28812 ;; Defined at:
 28813 ;;		line 102 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mdm_drv.c"
 28814 ;; Parameters:    Size  Location     Type
 28815 ;;		None
 28816 ;; Auto vars:     Size  Location     Type
 28817 ;;		None
 28818 ;; Return value:  Size  Location     Type
 28819 ;;                  1    wreg      void 
 28820 ;; Registers used:
 28821 ;;		None
 28822 ;; Tracked objects:
 28823 ;;		On entry : 0/0
 28824 ;;		On exit  : 0/0
 28825 ;;		Unchanged: 0/0
 28826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28827 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28828 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28830 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28831 ;;Total ram usage:        0 bytes
 28832 ;; Hardware stack levels used:    1
 28833 ;; Hardware stack levels required when called:   11
 28834 ;; This function calls:
 28835 ;;		Nothing
 28836 ;; This function is called by:
 28837 ;;		_MdmCntSm
 28838 ;; This function uses a non-reentrant model
 28839 ;;
 28840                           
 28841                           	psect	text133
 28842  00686E                     __ptext133:
 28843                           	opt stack 0
 28844  00686E                     _InitModemInterface:
 28845                           	opt stack 15
 28846                           
 28847                           ;mdm_drv.c: 105: TRISEbits.TRISE0 = ((UINT8)(0));
 28848                           
 28849                           ;incstack = 0
 28850  00686E  9096               	bcf	3990,0,c	;volatile
 28851                           
 28852                           ;mdm_drv.c: 106: TRISEbits.TRISE1 = ((UINT8)(0));
 28853  006870  9296               	bcf	3990,1,c	;volatile
 28854                           
 28855                           ;mdm_drv.c: 107: TRISEbits.TRISE2 = ((UINT8)(1));
 28856  006872  8496               	bsf	3990,2,c	;volatile
 28857  006874  0012               	return		;funcret
 28858  006876                     __end_of_InitModemInterface:
 28859                           	opt stack 0
 28860                           tosu	equ	0xFFF
 28861                           tosh	equ	0xFFE
 28862                           tosl	equ	0xFFD
 28863                           pclath	equ	0xFFA
 28864                           tblptru	equ	0xFF8
 28865                           tblptrh	equ	0xFF7
 28866                           tblptrl	equ	0xFF6
 28867                           tablat	equ	0xFF5
 28868                           prodh	equ	0xFF4
 28869                           prodl	equ	0xFF3
 28870                           intcon	equ	0xFF2
 28871                           intcon2	equ	0xFF1
 28872                           intcon3	equ	0xFF0
 28873                           indf0	equ	0xFEF
 28874                           postinc0	equ	0xFEE
 28875                           plusw0	equ	0xFEB
 28876                           fsr0h	equ	0xFEA
 28877                           fsr0l	equ	0xFE9
 28878                           wreg	equ	0xFE8
 28879                           indf1	equ	0xFE7
 28880                           postinc1	equ	0xFE6
 28881                           postdec1	equ	0xFE5
 28882                           plusw1	equ	0xFE3
 28883                           fsr1h	equ	0xFE2
 28884                           fsr1l	equ	0xFE1
 28885                           indf2	equ	0xFDF
 28886                           postinc2	equ	0xFDE
 28887                           postdec2	equ	0xFDD
 28888                           plusw2	equ	0xFDB
 28889                           fsr2h	equ	0xFDA
 28890                           fsr2l	equ	0xFD9
 28891                           status	equ	0xFD8
 28892                           
 28893 ;; *************** function _InitGprsNetwork *****************
 28894 ;; Defined at:
 28895 ;;		line 124 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs_http.c"
 28896 ;; Parameters:    Size  Location     Type
 28897 ;;  Apn             2   59[BANK0 ] PTR unsigned char 
 28898 ;;		 -> NULL(0), 
 28899 ;;  ApnLen          1   61[BANK0 ] unsigned char 
 28900 ;; Auto vars:     Size  Location     Type
 28901 ;;  UartMessage    50    0[BANK1 ] unsigned char [50]
 28902 ;;  Index           1   50[BANK1 ] unsigned char 
 28903 ;; Return value:  Size  Location     Type
 28904 ;;                  1    wreg      enum E8921
 28905 ;; Registers used:
 28906 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28907 ;; Tracked objects:
 28908 ;;		On entry : 0/0
 28909 ;;		On exit  : 0/0
 28910 ;;		Unchanged: 0/0
 28911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28912 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28913 ;;      Locals:         0       0      51       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28914 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28915 ;;      Totals:         0       5      51       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28916 ;;Total ram usage:       56 bytes
 28917 ;; Hardware stack levels used:    1
 28918 ;; Hardware stack levels required when called:   14
 28919 ;; This function calls:
 28920 ;;		_ClearBuffer
 28921 ;;		_OsTmr_GetTimerStatus
 28922 ;;		_OsTmr_StartTimer
 28923 ;;		_ReceiveEvt
 28924 ;;		_StringCopy
 28925 ;;		_Uart_WriteConstString
 28926 ;;		_Uart_WriteString
 28927 ;; This function is called by:
 28928 ;;		_MdmHttp_MainTask
 28929 ;; This function uses a non-reentrant model
 28930 ;;
 28931                           
 28932                           	psect	text134
 28933  000DC8                     __ptext134:
 28934                           	opt stack 0
 28935  000DC8                     _InitGprsNetwork:
 28936                           	opt stack 13
 28937                           
 28938                           ;mdm_gsm_gprs_http.c: 126: static GprsNetInitType GprsNetInitState = GprsIn_Idle;
 28939                           ;mdm_gsm_gprs_http.c: 127: static GprsNetInitType GprsNetInitNextState = GprsIn_Idle;
 28940                           ;mdm_gsm_gprs_http.c: 128: static GprsOutStsType GprsInitSts = GprsSts_InProg;
 28941                           ;mdm_gsm_gprs_http.c: 129: UINT8 UartMessage[50];
 28942                           ;mdm_gsm_gprs_http.c: 130: UINT8 Index = 0;
 28943                           
 28944                           ;incstack = 0
 28945  000DC8  0E00               	movlw	0
 28946  000DCA  0101               	movlb	1	; () banked
 28947  000DCC  6F32               	movwf	InitGprsNetwork@Index& (0+255),b
 28948                           
 28949                           ;mdm_gsm_gprs_http.c: 132: switch(GprsNetInitState)
 28950  000DCE  D154               	goto	l1216
 28951  000DD0                     
 28952                           ; BSR set to: 1
 28953                           ;mdm_gsm_gprs_http.c: 136: if (ReceiveEvt(&InitNetwork))
 28954                           
 28955                           ; BSR set to: 1
 28956  000DD0  0ED9               	movlw	low _InitNetwork
 28957  000DD2  0100               	movlb	0	; () banked
 28958  000DD4  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 28959  000DD6  0E00               	movlw	high _InitNetwork
 28960  000DD8  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 28961  000DDA  EC8A  F031         	call	_ReceiveEvt	;wreg free
 28962  000DDE  0900               	iorlw	0
 28963  000DE0  B4D8               	btfsc	status,2,c
 28964  000DE2  D166               	goto	l1219
 28965                           
 28966                           ;mdm_gsm_gprs_http.c: 137: {
 28967                           ;mdm_gsm_gprs_http.c: 139: GprsNetInitState = GprsIn_SetConType;
 28968  000DE4  0E01               	movlw	1
 28969  000DE6  D141               	goto	L79
 28970  000DE8                     
 28971                           ; BSR set to: 1
 28972                           ;mdm_gsm_gprs_http.c: 144: Uart_WriteConstString(1, "AT+SAPBR=3,1,\"Contype\",\"GPRS\"\r
      +                          ");
 28973                           
 28974                           ; BSR set to: 1
 28975  000DE8  0E89               	movlw	low STR_8
 28976  000DEA  0100               	movlb	0	; () banked
 28977  000DEC  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 28978  000DEE  0EFE               	movlw	high STR_8
 28979  000DF0  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 28980  000DF2  0E01               	movlw	1
 28981  000DF4  EC7A  F02F         	call	_Uart_WriteConstString
 28982                           
 28983                           ;mdm_gsm_gprs_http.c: 146: GprsNetInitState = GprsIn_WaitMdmResp;
 28984  000DF8  0E07               	movlw	7
 28985  000DFA  0101               	movlb	1	; () banked
 28986  000DFC  6FEA               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 28987                           
 28988                           ; BSR set to: 1
 28989                           ;mdm_gsm_gprs_http.c: 147: GprsNetInitNextState = GprsIn_SetApn;
 28990  000DFE  0E02               	movlw	2
 28991  000E00  0100               	movlb	0	; () banked
 28992  000E02  6FCF               	movwf	InitGprsNetwork@GprsNetInitNextState& (0+255),b
 28993                           
 28994                           ; BSR set to: 0
 28995                           ;mdm_gsm_gprs_http.c: 149: OsTmr_StartTimer(&ConnTimeout,20000u);
 28996  000E04  0EF5               	movlw	low _ConnTimeout
 28997  000E06  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 28998  000E08  0E02               	movlw	high _ConnTimeout
 28999  000E0A  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 29000  000E0C  0E20               	movlw	32
 29001  000E0E  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 29002  000E10  0E4E               	movlw	78
 29003  000E12  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 29004  000E14  0E00               	movlw	0
 29005  000E16  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 29006  000E18  0E00               	movlw	0
 29007  000E1A  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 29008  000E1C  ECF8  F02A         	call	_OsTmr_StartTimer	;wreg free
 29009  000E20  D0C7               	goto	l15170
 29010  000E22                     
 29011                           ; BSR set to: 1
 29012                           ;mdm_gsm_gprs_http.c: 156: ClearBuffer(UartMessage, sizeof(UartMessage));
 29013                           
 29014                           ; BSR set to: 1
 29015  000E22  0E00               	movlw	low InitGprsNetwork@UartMessage
 29016  000E24  0100               	movlb	0	; () banked
 29017  000E26  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 29018  000E28  0E01               	movlw	high InitGprsNetwork@UartMessage
 29019  000E2A  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 29020  000E2C  0E00               	movlw	0
 29021  000E2E  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 29022  000E30  0E32               	movlw	50
 29023  000E32  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 29024  000E34  ECAC  F030         	call	_ClearBuffer	;wreg free
 29025                           
 29026                           ;mdm_gsm_gprs_http.c: 158: StringCopy((void*)("AT+SAPBR=3,1,\"APN\",\""),UartMessage,20)
      +                          ;
 29027  000E38  0EBD               	movlw	low STR_9
 29028  000E3A  0100               	movlb	0	; () banked
 29029  000E3C  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 29030  000E3E  0EFE               	movlw	high STR_9
 29031  000E40  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 29032  000E42  0E00               	movlw	low InitGprsNetwork@UartMessage
 29033  000E44  6F7F               	movwf	StringCopy@DestStr& (0+255),b
 29034  000E46  0E01               	movlw	high InitGprsNetwork@UartMessage
 29035  000E48  6F80               	movwf	(StringCopy@DestStr+1)& (0+255),b
 29036  000E4A  0E00               	movlw	0
 29037  000E4C  6F82               	movwf	(StringCopy@Len+1)& (0+255),b
 29038  000E4E  0E14               	movlw	20
 29039  000E50  6F81               	movwf	StringCopy@Len& (0+255),b
 29040  000E52  EC98  F02A         	call	_StringCopy	;wreg free
 29041                           
 29042                           ;mdm_gsm_gprs_http.c: 160: for (Index = 0; Index < ApnLen; Index++)
 29043  000E56  0E00               	movlw	0
 29044  000E58  0101               	movlb	1	; () banked
 29045  000E5A  6F32               	movwf	InitGprsNetwork@Index& (0+255),b
 29046  000E5C  D01C               	goto	l1222
 29047  000E5E                     
 29048                           ; BSR set to: 1
 29049                           ;mdm_gsm_gprs_http.c: 161: {
 29050                           ;mdm_gsm_gprs_http.c: 162: UartMessage[Index + 20] = *(Apn + Index);
 29051                           
 29052                           ; BSR set to: 1
 29053  000E5E  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 29054  000E60  0D01               	mullw	1
 29055  000E62  50F3               	movf	prodl,w,c
 29056  000E64  0100               	movlb	0	; () banked
 29057  000E66  259B               	addwf	InitGprsNetwork@Apn& (0+255),w,b
 29058  000E68  6ED9               	movwf	fsr2l,c
 29059  000E6A  50F4               	movf	prodh,w,c
 29060  000E6C  219C               	addwfc	(InitGprsNetwork@Apn+1)& (0+255),w,b
 29061  000E6E  6EDA               	movwf	fsr2h,c
 29062  000E70  0101               	movlb	1	; () banked
 29063  000E72  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 29064  000E74  0100               	movlb	0	; () banked
 29065  000E76  6F9E               	movwf	??_InitGprsNetwork& (0+255),b
 29066  000E78  6B9F               	clrf	(??_InitGprsNetwork+1)& (0+255),b
 29067  000E7A  0E14               	movlw	20
 29068  000E7C  279E               	addwf	??_InitGprsNetwork& (0+255),f,b
 29069  000E7E  0E00               	movlw	0
 29070  000E80  239F               	addwfc	(??_InitGprsNetwork+1)& (0+255),f,b
 29071  000E82  0E00               	movlw	low InitGprsNetwork@UartMessage
 29072  000E84  259E               	addwf	??_InitGprsNetwork& (0+255),w,b
 29073  000E86  6EE1               	movwf	fsr1l,c
 29074  000E88  0E01               	movlw	high InitGprsNetwork@UartMessage
 29075  000E8A  219F               	addwfc	(??_InitGprsNetwork+1)& (0+255),w,b
 29076  000E8C  6EE2               	movwf	fsr1h,c
 29077  000E8E  CFDF FFE7          	movff	indf2,indf1
 29078                           
 29079                           ; BSR set to: 0
 29080  000E92  0101               	movlb	1	; () banked
 29081  000E94  2B32               	incf	InitGprsNetwork@Index& (0+255),f,b
 29082  000E96                     l1222:
 29083                           
 29084                           ; BSR set to: 1
 29085                           
 29086                           ; BSR set to: 1
 29087  000E96  0100               	movlb	0	; () banked
 29088  000E98  519D               	movf	InitGprsNetwork@ApnLen& (0+255),w,b
 29089  000E9A  0101               	movlb	1	; () banked
 29090  000E9C  5D32               	subwf	InitGprsNetwork@Index& (0+255),w,b
 29091  000E9E  A0D8               	btfss	status,0,c
 29092  000EA0  D7DE               	goto	l1223
 29093                           
 29094                           ; BSR set to: 1
 29095                           ;mdm_gsm_gprs_http.c: 163: }
 29096                           ;mdm_gsm_gprs_http.c: 165: UartMessage[Index + 20] = '"';
 29097                           
 29098                           ; BSR set to: 1
 29099  000EA2  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 29100  000EA4  0100               	movlb	0	; () banked
 29101  000EA6  6F9E               	movwf	??_InitGprsNetwork& (0+255),b
 29102  000EA8  6B9F               	clrf	(??_InitGprsNetwork+1)& (0+255),b
 29103  000EAA  0E14               	movlw	20
 29104  000EAC  279E               	addwf	??_InitGprsNetwork& (0+255),f,b
 29105  000EAE  0E00               	movlw	0
 29106  000EB0  239F               	addwfc	(??_InitGprsNetwork+1)& (0+255),f,b
 29107  000EB2  0E00               	movlw	low InitGprsNetwork@UartMessage
 29108  000EB4  259E               	addwf	??_InitGprsNetwork& (0+255),w,b
 29109  000EB6  6ED9               	movwf	fsr2l,c
 29110  000EB8  0E01               	movlw	high InitGprsNetwork@UartMessage
 29111  000EBA  219F               	addwfc	(??_InitGprsNetwork+1)& (0+255),w,b
 29112  000EBC  6EDA               	movwf	fsr2h,c
 29113  000EBE  0E22               	movlw	34
 29114  000EC0  6EDF               	movwf	indf2,c
 29115                           
 29116                           ;mdm_gsm_gprs_http.c: 166: UartMessage[Index + 21] = '\r';
 29117  000EC2  0101               	movlb	1	; () banked
 29118  000EC4  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 29119  000EC6  0100               	movlb	0	; () banked
 29120  000EC8  6F9E               	movwf	??_InitGprsNetwork& (0+255),b
 29121  000ECA  6B9F               	clrf	(??_InitGprsNetwork+1)& (0+255),b
 29122  000ECC  0E15               	movlw	21
 29123  000ECE  279E               	addwf	??_InitGprsNetwork& (0+255),f,b
 29124  000ED0  0E00               	movlw	0
 29125  000ED2  239F               	addwfc	(??_InitGprsNetwork+1)& (0+255),f,b
 29126  000ED4  0E00               	movlw	low InitGprsNetwork@UartMessage
 29127  000ED6  259E               	addwf	??_InitGprsNetwork& (0+255),w,b
 29128  000ED8  6ED9               	movwf	fsr2l,c
 29129  000EDA  0E01               	movlw	high InitGprsNetwork@UartMessage
 29130  000EDC  219F               	addwfc	(??_InitGprsNetwork+1)& (0+255),w,b
 29131  000EDE  6EDA               	movwf	fsr2h,c
 29132  000EE0  0E0D               	movlw	13
 29133  000EE2  6EDF               	movwf	indf2,c
 29134                           
 29135                           ;mdm_gsm_gprs_http.c: 167: UartMessage[Index + 22] = (0);
 29136  000EE4  0101               	movlb	1	; () banked
 29137  000EE6  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 29138  000EE8  0100               	movlb	0	; () banked
 29139  000EEA  6F9E               	movwf	??_InitGprsNetwork& (0+255),b
 29140  000EEC  6B9F               	clrf	(??_InitGprsNetwork+1)& (0+255),b
 29141  000EEE  0E16               	movlw	22
 29142  000EF0  279E               	addwf	??_InitGprsNetwork& (0+255),f,b
 29143  000EF2  0E00               	movlw	0
 29144  000EF4  239F               	addwfc	(??_InitGprsNetwork+1)& (0+255),f,b
 29145  000EF6  0E00               	movlw	low InitGprsNetwork@UartMessage
 29146  000EF8  259E               	addwf	??_InitGprsNetwork& (0+255),w,b
 29147  000EFA  6ED9               	movwf	fsr2l,c
 29148  000EFC  0E01               	movlw	high InitGprsNetwork@UartMessage
 29149  000EFE  219F               	addwfc	(??_InitGprsNetwork+1)& (0+255),w,b
 29150  000F00  6EDA               	movwf	fsr2h,c
 29151  000F02  0E00               	movlw	0
 29152  000F04  6EDF               	movwf	indf2,c
 29153                           
 29154                           ; BSR set to: 0
 29155                           ;mdm_gsm_gprs_http.c: 169: Uart_WriteString(1, UartMessage);
 29156  000F06  0E00               	movlw	low InitGprsNetwork@UartMessage
 29157  000F08  6F80               	movwf	Uart_WriteString@StringToWrite& (0+255),b
 29158  000F0A  0E01               	movlw	high InitGprsNetwork@UartMessage
 29159  000F0C  6F81               	movwf	(Uart_WriteString@StringToWrite+1)& (0+255),b
 29160  000F0E  0E01               	movlw	1
 29161  000F10  EC1A  F030         	call	_Uart_WriteString
 29162                           
 29163                           ;mdm_gsm_gprs_http.c: 171: GprsNetInitState = GprsIn_WaitMdmResp;
 29164  000F14  0E07               	movlw	7
 29165  000F16  0101               	movlb	1	; () banked
 29166  000F18  6FEA               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 29167                           
 29168                           ; BSR set to: 1
 29169                           ;mdm_gsm_gprs_http.c: 172: GprsNetInitNextState = GprsIn_EnGprs;
 29170  000F1A  0E03               	movlw	3
 29171  000F1C  0100               	movlb	0	; () banked
 29172  000F1E  6FCF               	movwf	InitGprsNetwork@GprsNetInitNextState& (0+255),b
 29173                           
 29174                           ; BSR set to: 0
 29175                           ;mdm_gsm_gprs_http.c: 174: OsTmr_StartTimer(&ConnTimeout,20000u);
 29176  000F20  0EF5               	movlw	low _ConnTimeout
 29177  000F22  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 29178  000F24  0E02               	movlw	high _ConnTimeout
 29179  000F26  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 29180  000F28  0E20               	movlw	32
 29181  000F2A  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 29182  000F2C  0E4E               	movlw	78
 29183  000F2E  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 29184  000F30  0E00               	movlw	0
 29185  000F32  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 29186  000F34  0E00               	movlw	0
 29187  000F36  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 29188  000F38  ECF8  F02A         	call	_OsTmr_StartTimer	;wreg free
 29189  000F3C  D039               	goto	l15170
 29190  000F3E                     
 29191                           ; BSR set to: 1
 29192                           ;mdm_gsm_gprs_http.c: 181: Uart_WriteConstString(1, "AT+SAPBR=1,1\r");
 29193                           
 29194                           ; BSR set to: 1
 29195  000F3E  0E4B               	movlw	low STR_10
 29196  000F40  0100               	movlb	0	; () banked
 29197  000F42  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 29198  000F44  0EFF               	movlw	high STR_10
 29199  000F46  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 29200  000F48  0E01               	movlw	1
 29201  000F4A  EC7A  F02F         	call	_Uart_WriteConstString
 29202                           
 29203                           ;mdm_gsm_gprs_http.c: 183: GprsNetInitState = GprsIn_WaitMdmResp;
 29204  000F4E  0E07               	movlw	7
 29205  000F50  0101               	movlb	1	; () banked
 29206  000F52  6FEA               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 29207                           
 29208                           ; BSR set to: 1
 29209                           ;mdm_gsm_gprs_http.c: 184: GprsNetInitNextState = GprsIn_Done;
 29210  000F54  0E05               	movlw	5
 29211  000F56  0100               	movlb	0	; () banked
 29212  000F58  6FCF               	movwf	InitGprsNetwork@GprsNetInitNextState& (0+255),b
 29213                           
 29214                           ; BSR set to: 0
 29215                           ;mdm_gsm_gprs_http.c: 186: OsTmr_StartTimer(&ConnTimeout,20000u);
 29216  000F5A  0EF5               	movlw	low _ConnTimeout
 29217  000F5C  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 29218  000F5E  0E02               	movlw	high _ConnTimeout
 29219  000F60  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 29220  000F62  0E20               	movlw	32
 29221  000F64  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 29222  000F66  0E4E               	movlw	78
 29223  000F68  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 29224  000F6A  0E00               	movlw	0
 29225  000F6C  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 29226  000F6E  0E00               	movlw	0
 29227  000F70  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 29228  000F72  ECF8  F02A         	call	_OsTmr_StartTimer	;wreg free
 29229  000F76  D01C               	goto	l15170
 29230  000F78                     
 29231                           ; BSR set to: 1
 29232                           ;mdm_gsm_gprs_http.c: 193: Uart_WriteConstString(1, "AT+SAPBR=2,1\r");
 29233                           
 29234                           ; BSR set to: 1
 29235  000F78  0E59               	movlw	low STR_11
 29236  000F7A  0100               	movlb	0	; () banked
 29237  000F7C  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 29238  000F7E  0EFF               	movlw	high STR_11
 29239  000F80  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 29240  000F82  0E01               	movlw	1
 29241  000F84  EC7A  F02F         	call	_Uart_WriteConstString
 29242                           
 29243                           ;mdm_gsm_gprs_http.c: 195: GprsNetInitState = GprsIn_WaitGetIp;
 29244  000F88  0E08               	movlw	8
 29245  000F8A  0101               	movlb	1	; () banked
 29246  000F8C  6FEA               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 29247                           
 29248                           ; BSR set to: 1
 29249                           ;mdm_gsm_gprs_http.c: 196: GprsNetInitNextState = GprsIn_Done;
 29250  000F8E  0E05               	movlw	5
 29251  000F90  0100               	movlb	0	; () banked
 29252  000F92  6FCF               	movwf	InitGprsNetwork@GprsNetInitNextState& (0+255),b
 29253                           
 29254                           ; BSR set to: 0
 29255                           ;mdm_gsm_gprs_http.c: 198: OsTmr_StartTimer(&ConnTimeout,20000u);
 29256  000F94  0EF5               	movlw	low _ConnTimeout
 29257  000F96  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 29258  000F98  0E02               	movlw	high _ConnTimeout
 29259  000F9A  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 29260  000F9C  0E20               	movlw	32
 29261  000F9E  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 29262  000FA0  0E4E               	movlw	78
 29263  000FA2  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 29264  000FA4  0E00               	movlw	0
 29265  000FA6  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 29266  000FA8  0E00               	movlw	0
 29267  000FAA  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 29268  000FAC  ECF8  F02A         	call	_OsTmr_StartTimer	;wreg free
 29269  000FB0                     l15170:
 29270                           
 29271                           ;mdm_gsm_gprs_http.c: 200: GprsInitSts = GprsSts_InProg;
 29272  000FB0  0E01               	movlw	1
 29273  000FB2  0101               	movlb	1	; () banked
 29274  000FB4  6FFF               	movwf	InitGprsNetwork@GprsInitSts& (0+255),b
 29275                           
 29276                           ;mdm_gsm_gprs_http.c: 201: break;
 29277  000FB6  D07C               	goto	l1219
 29278  000FB8                     
 29279                           ; BSR set to: 1
 29280                           ;mdm_gsm_gprs_http.c: 205: GprsInitSts = GprsSts_Completed;
 29281                           
 29282                           ; BSR set to: 1
 29283  000FB8  0E02               	movlw	2
 29284  000FBA  D05A               	goto	L78
 29285  000FBC                     
 29286                           ; BSR set to: 1
 29287                           ;mdm_gsm_gprs_http.c: 211: if (ReceiveEvt(&NewStringReceived))
 29288                           
 29289                           ; BSR set to: 1
 29290  000FBC  0E3C               	movlw	low _NewStringReceived
 29291  000FBE  0100               	movlb	0	; () banked
 29292  000FC0  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 29293  000FC2  0E00               	movlw	high _NewStringReceived
 29294  000FC4  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 29295  000FC6  EC8A  F031         	call	_ReceiveEvt	;wreg free
 29296  000FCA  0900               	iorlw	0
 29297  000FCC  B4D8               	btfsc	status,2,c
 29298  000FCE  D018               	goto	l1229
 29299                           
 29300                           ;mdm_gsm_gprs_http.c: 212: {
 29301                           ;mdm_gsm_gprs_http.c: 214: if ((RxBuffer[0] == 'O') && (RxBuffer[1] == 'K'))
 29302  000FD0  CC58  FFE8         	movff	_RxBuffer,wreg
 29303  000FD4  0A4F               	xorlw	79
 29304  000FD6  A4D8               	btfss	status,2,c
 29305  000FD8  D06B               	goto	l1219
 29306  000FDA  CC59  FFE8         	movff	_RxBuffer+1,wreg
 29307  000FDE  0A4B               	xorlw	75
 29308  000FE0  A4D8               	btfss	status,2,c
 29309  000FE2  D066               	goto	l1219
 29310                           
 29311                           ;mdm_gsm_gprs_http.c: 215: {
 29312                           ;mdm_gsm_gprs_http.c: 217: GprsNetInitState = GprsNetInitNextState;
 29313  000FE4  C0CF  F1EA         	movff	InitGprsNetwork@GprsNetInitNextState,InitGprsNetwork@GprsNetInitState
 29314                           
 29315                           ;mdm_gsm_gprs_http.c: 219: ClearBuffer(RxBuffer,((UINT16)(400)));
 29316  000FE8  0E58               	movlw	low _RxBuffer
 29317  000FEA  0100               	movlb	0	; () banked
 29318  000FEC  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 29319  000FEE  0E0C               	movlw	high _RxBuffer
 29320  000FF0  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 29321  000FF2  0E01               	movlw	1
 29322  000FF4  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 29323  000FF6  0E90               	movlw	144
 29324  000FF8  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 29325  000FFA  ECAC  F030         	call	_ClearBuffer	;wreg free
 29326                           
 29327                           ;mdm_gsm_gprs_http.c: 220: }
 29328                           ;mdm_gsm_gprs_http.c: 221: }
 29329  000FFE  D058               	goto	l1219
 29330  001000                     l1229:
 29331                           
 29332                           ;mdm_gsm_gprs_http.c: 222: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 29333  001000  0EF5               	movlw	low _ConnTimeout
 29334  001002  0100               	movlb	0	; () banked
 29335  001004  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 29336  001006  0E02               	movlw	high _ConnTimeout
 29337  001008  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 29338  00100A  EC5C  F026         	call	_OsTmr_GetTimerStatus	;wreg free
 29339  00100E  D029               	goto	L43
 29340  001010                     
 29341                           ; BSR set to: 1
 29342                           ;mdm_gsm_gprs_http.c: 231: if (ReceiveEvt(&NewStringReceived))
 29343                           
 29344                           ; BSR set to: 1
 29345  001010  0E3C               	movlw	low _NewStringReceived
 29346  001012  0100               	movlb	0	; () banked
 29347  001014  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 29348  001016  0E00               	movlw	high _NewStringReceived
 29349  001018  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 29350  00101A  EC8A  F031         	call	_ReceiveEvt	;wreg free
 29351  00101E  0900               	iorlw	0
 29352  001020  B4D8               	btfsc	status,2,c
 29353  001022  D018               	goto	l1234
 29354                           
 29355                           ;mdm_gsm_gprs_http.c: 232: {
 29356                           ;mdm_gsm_gprs_http.c: 234: if ((RxBuffer[0] == '+') && (RxBuffer[1] == 'S'))
 29357  001024  CC58  FFE8         	movff	_RxBuffer,wreg
 29358  001028  0A2B               	xorlw	43
 29359  00102A  A4D8               	btfss	status,2,c
 29360  00102C  D041               	goto	l1219
 29361  00102E  CC59  FFE8         	movff	_RxBuffer+1,wreg
 29362  001032  0A53               	xorlw	83
 29363  001034  A4D8               	btfss	status,2,c
 29364  001036  D03C               	goto	l1219
 29365                           
 29366                           ;mdm_gsm_gprs_http.c: 235: {
 29367                           ;mdm_gsm_gprs_http.c: 237: GprsNetInitState = GprsNetInitNextState;
 29368  001038  C0CF  F1EA         	movff	InitGprsNetwork@GprsNetInitNextState,InitGprsNetwork@GprsNetInitState
 29369                           
 29370                           ;mdm_gsm_gprs_http.c: 239: ClearBuffer(RxBuffer,((UINT16)(400)));
 29371  00103C  0E58               	movlw	low _RxBuffer
 29372  00103E  0100               	movlb	0	; () banked
 29373  001040  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 29374  001042  0E0C               	movlw	high _RxBuffer
 29375  001044  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 29376  001046  0E01               	movlw	1
 29377  001048  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 29378  00104A  0E90               	movlw	144
 29379  00104C  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 29380  00104E  ECAC  F030         	call	_ClearBuffer	;wreg free
 29381                           
 29382                           ;mdm_gsm_gprs_http.c: 240: }
 29383                           ;mdm_gsm_gprs_http.c: 241: }
 29384  001052  D02E               	goto	l1219
 29385  001054                     l1234:
 29386                           
 29387                           ;mdm_gsm_gprs_http.c: 242: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 29388  001054  0EF5               	movlw	low _ConnTimeout
 29389  001056  0100               	movlb	0	; () banked
 29390  001058  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 29391  00105A  0E02               	movlw	high _ConnTimeout
 29392  00105C  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 29393  00105E  EC5C  F026         	call	_OsTmr_GetTimerStatus	;wreg free
 29394  001062                     L43:
 29395  001062  06E8               	decf	wreg,f,c
 29396  001064  A4D8               	btfss	status,2,c
 29397  001066  D024               	goto	l1219
 29398                           
 29399                           ;mdm_gsm_gprs_http.c: 243: {
 29400                           ;mdm_gsm_gprs_http.c: 245: GprsNetInitState = GprsIn_Fail;
 29401  001068  0E06               	movlw	6
 29402  00106A                     L79:
 29403  00106A  0101               	movlb	1	; () banked
 29404  00106C  D003               	goto	L42
 29405  00106E                     
 29406                           ; BSR set to: 1
 29407                           ;mdm_gsm_gprs_http.c: 251: GprsInitSts = GprsSts_Failed;
 29408                           
 29409                           ; BSR set to: 1
 29410  00106E  0E03               	movlw	3
 29411  001070                     L78:
 29412  001070  6FFF               	movwf	InitGprsNetwork@GprsInitSts& (0+255),b
 29413                           
 29414                           ;mdm_gsm_gprs_http.c: 252: GprsNetInitState = GprsIn_Idle;
 29415  001072  0E00               	movlw	0
 29416  001074                     L42:
 29417  001074  6FEA               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 29418                           
 29419                           ; BSR set to: 1
 29420                           ;mdm_gsm_gprs_http.c: 257: }
 29421                           
 29422                           ; BSR set to: 1
 29423                           ;mdm_gsm_gprs_http.c: 256: break;
 29424                           
 29425                           ;mdm_gsm_gprs_http.c: 255: default:
 29426                           
 29427                           ;mdm_gsm_gprs_http.c: 253: break;
 29428  001076  D01C               	goto	l1219
 29429  001078                     l1216:
 29430                           
 29431                           ; BSR set to: 1
 29432                           
 29433                           ; BSR set to: 1
 29434  001078  51EA               	movf	InitGprsNetwork@GprsNetInitState& (0+255),w,b
 29435                           
 29436                           ; Switch size 1, requested type "space"
 29437                           ; Number of cases is 9, Range of values is 0 to 8
 29438                           ; switch strategies available:
 29439                           ; Name         Instructions Cycles
 29440                           ; simple_byte           28    15 (average)
 29441                           ;	Chosen strategy is simple_byte
 29442  00107A  0A00               	xorlw	0	; case 0
 29443  00107C  B4D8               	btfsc	status,2,c
 29444  00107E  D6A8               	goto	l1217
 29445  001080  0A01               	xorlw	1	; case 1
 29446  001082  B4D8               	btfsc	status,2,c
 29447  001084  D6B1               	goto	l1220
 29448  001086  0A03               	xorlw	3	; case 2
 29449  001088  B4D8               	btfsc	status,2,c
 29450  00108A  D6CB               	goto	l1221
 29451  00108C  0A01               	xorlw	1	; case 3
 29452  00108E  B4D8               	btfsc	status,2,c
 29453  001090  D756               	goto	l1225
 29454  001092  0A07               	xorlw	7	; case 4
 29455  001094  B4D8               	btfsc	status,2,c
 29456  001096  D770               	goto	l1226
 29457  001098  0A01               	xorlw	1	; case 5
 29458  00109A  B4D8               	btfsc	status,2,c
 29459  00109C  D78D               	goto	l1227
 29460  00109E  0A03               	xorlw	3	; case 6
 29461  0010A0  B4D8               	btfsc	status,2,c
 29462  0010A2  D7E5               	goto	l1238
 29463  0010A4  0A01               	xorlw	1	; case 7
 29464  0010A6  B4D8               	btfsc	status,2,c
 29465  0010A8  D789               	goto	l1228
 29466  0010AA  0A0F               	xorlw	15	; case 8
 29467  0010AC  B4D8               	btfsc	status,2,c
 29468  0010AE  D7B0               	goto	l1233
 29469  0010B0                     l1219:
 29470                           
 29471                           ;mdm_gsm_gprs_http.c: 260: return GprsInitSts;
 29472                           
 29473                           ; BSR set to: 1
 29474  0010B0  0101               	movlb	1	; () banked
 29475  0010B2  51FF               	movf	InitGprsNetwork@GprsInitSts& (0+255),w,b
 29476  0010B4  0012               	return	
 29477  0010B6                     __end_of_InitGprsNetwork:
 29478                           	opt stack 0
 29479                           tosu	equ	0xFFF
 29480                           tosh	equ	0xFFE
 29481                           tosl	equ	0xFFD
 29482                           pclath	equ	0xFFA
 29483                           tblptru	equ	0xFF8
 29484                           tblptrh	equ	0xFF7
 29485                           tblptrl	equ	0xFF6
 29486                           tablat	equ	0xFF5
 29487                           prodh	equ	0xFF4
 29488                           prodl	equ	0xFF3
 29489                           intcon	equ	0xFF2
 29490                           intcon2	equ	0xFF1
 29491                           intcon3	equ	0xFF0
 29492                           indf0	equ	0xFEF
 29493                           postinc0	equ	0xFEE
 29494                           plusw0	equ	0xFEB
 29495                           fsr0h	equ	0xFEA
 29496                           fsr0l	equ	0xFE9
 29497                           wreg	equ	0xFE8
 29498                           indf1	equ	0xFE7
 29499                           postinc1	equ	0xFE6
 29500                           postdec1	equ	0xFE5
 29501                           plusw1	equ	0xFE3
 29502                           fsr1h	equ	0xFE2
 29503                           fsr1l	equ	0xFE1
 29504                           indf2	equ	0xFDF
 29505                           postinc2	equ	0xFDE
 29506                           postdec2	equ	0xFDD
 29507                           plusw2	equ	0xFDB
 29508                           fsr2h	equ	0xFDA
 29509                           fsr2l	equ	0xFD9
 29510                           status	equ	0xFD8
 29511                           
 29512 ;; *************** function _HttpGetMethod *****************
 29513 ;; Defined at:
 29514 ;;		line 271 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs_http.c"
 29515 ;; Parameters:    Size  Location     Type
 29516 ;;  GetData         2   59[BANK0 ] PTR struct _HttpGetDataT
 29517 ;;		 -> HttpGetDataLocal(5), 
 29518 ;; Auto vars:     Size  Location     Type
 29519 ;;  UartMessage   200    0[BANK1 ] unsigned char [200]
 29520 ;;  Index           1  200[BANK1 ] unsigned char 
 29521 ;; Return value:  Size  Location     Type
 29522 ;;                  1    wreg      enum E8921
 29523 ;; Registers used:
 29524 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29525 ;; Tracked objects:
 29526 ;;		On entry : 0/0
 29527 ;;		On exit  : 0/0
 29528 ;;		Unchanged: 0/0
 29529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29530 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29531 ;;      Locals:         0       0     201       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29532 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29533 ;;      Totals:         0       6     201       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29534 ;;Total ram usage:      207 bytes
 29535 ;; Hardware stack levels used:    1
 29536 ;; Hardware stack levels required when called:   14
 29537 ;; This function calls:
 29538 ;;		_ClearBuffer
 29539 ;;		_OsTmr_GetTimerStatus
 29540 ;;		_OsTmr_StartTimer
 29541 ;;		_ReceiveEvt
 29542 ;;		_StringCopy
 29543 ;;		_Uart_WriteConstString
 29544 ;;		_Uart_WriteString
 29545 ;; This function is called by:
 29546 ;;		_MdmHttp_MainTask
 29547 ;; This function uses a non-reentrant model
 29548 ;;
 29549                           
 29550                           	psect	text135
 29551  0005EC                     __ptext135:
 29552                           	opt stack 0
 29553  0005EC                     _HttpGetMethod:
 29554                           	opt stack 13
 29555                           
 29556                           ;mdm_gsm_gprs_http.c: 273: static GetMethodType GetMethodState = GetM_Idle;
 29557                           ;mdm_gsm_gprs_http.c: 274: static GetMethodType GetMethodNextState = GetM_Idle;
 29558                           ;mdm_gsm_gprs_http.c: 275: static GetMethodStsType GetMOutSts = GetMOut_Idle;
 29559                           ;mdm_gsm_gprs_http.c: 276: UINT8 UartMessage[200];
 29560                           ;mdm_gsm_gprs_http.c: 277: UINT8 Index = 0;
 29561                           
 29562                           ; BSR set to: 1
 29563                           ;incstack = 0
 29564  0005EC  0E00               	movlw	0
 29565  0005EE  0101               	movlb	1	; () banked
 29566  0005F0  6FC8               	movwf	HttpGetMethod@Index& (0+255),b
 29567                           
 29568                           ;mdm_gsm_gprs_http.c: 279: switch (GetMethodState)
 29569  0005F2  D230               	goto	l1249
 29570  0005F4                     
 29571                           ; BSR set to: 1
 29572                           ;mdm_gsm_gprs_http.c: 283: if (ReceiveEvt(&GetMethod))
 29573                           
 29574                           ; BSR set to: 1
 29575  0005F4  0ED8               	movlw	low _GetMethod
 29576  0005F6  0100               	movlb	0	; () banked
 29577  0005F8  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 29578  0005FA  0E00               	movlw	high _GetMethod
 29579  0005FC  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 29580  0005FE  EC8A  F031         	call	_ReceiveEvt	;wreg free
 29581  000602  0900               	iorlw	0
 29582  000604  B4D8               	btfsc	status,2,c
 29583  000606  D257               	goto	l1252
 29584                           
 29585                           ;mdm_gsm_gprs_http.c: 284: {
 29586                           ;mdm_gsm_gprs_http.c: 286: GetMethodState = GetM_HttpInit;
 29587  000608  0E01               	movlw	1
 29588  00060A  D18C               	goto	L45
 29589  00060C                     
 29590                           ; BSR set to: 1
 29591                           ;mdm_gsm_gprs_http.c: 291: Uart_WriteConstString(1, "AT+HTTPINIT\r");
 29592                           
 29593                           ; BSR set to: 1
 29594  00060C  0E9D               	movlw	low STR_12
 29595  00060E  0100               	movlb	0	; () banked
 29596  000610  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 29597  000612  0EFF               	movlw	high STR_12
 29598  000614  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 29599  000616  0E01               	movlw	1
 29600  000618  EC7A  F02F         	call	_Uart_WriteConstString
 29601                           
 29602                           ;mdm_gsm_gprs_http.c: 293: GetMethodState = GetM_WaitMdmResp;
 29603  00061C  0E0A               	movlw	10
 29604  00061E  0101               	movlb	1	; () banked
 29605  000620  6FE9               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 29606                           
 29607                           ; BSR set to: 1
 29608                           ;mdm_gsm_gprs_http.c: 294: GetMethodNextState = GetM_HttpSsl;
 29609  000622  0E02               	movlw	2
 29610  000624  0100               	movlb	0	; () banked
 29611  000626  6FCE               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 29612                           
 29613                           ; BSR set to: 0
 29614                           ;mdm_gsm_gprs_http.c: 296: OsTmr_StartTimer(&ConnTimeout,20000u);
 29615  000628  0EF5               	movlw	low _ConnTimeout
 29616  00062A  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 29617  00062C  0E02               	movlw	high _ConnTimeout
 29618  00062E  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 29619  000630  0E20               	movlw	32
 29620  000632  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 29621  000634  0E4E               	movlw	78
 29622  000636  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 29623  000638  0E00               	movlw	0
 29624  00063A  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 29625  00063C  0E00               	movlw	0
 29626  00063E  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 29627  000640  ECF8  F02A         	call	_OsTmr_StartTimer	;wreg free
 29628  000644  D1AF               	goto	l15336
 29629  000646                     
 29630                           ; BSR set to: 1
 29631                           ;mdm_gsm_gprs_http.c: 303: Uart_WriteConstString(1, "AT+HTTPSSL=1\r");
 29632                           
 29633                           ; BSR set to: 1
 29634  000646  0E67               	movlw	low STR_13
 29635  000648  0100               	movlb	0	; () banked
 29636  00064A  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 29637  00064C  0EFF               	movlw	high STR_13
 29638  00064E  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 29639  000650  0E01               	movlw	1
 29640  000652  EC7A  F02F         	call	_Uart_WriteConstString
 29641                           
 29642                           ;mdm_gsm_gprs_http.c: 305: GetMethodState = GetM_WaitMdmResp;
 29643  000656  0E0A               	movlw	10
 29644  000658  0101               	movlb	1	; () banked
 29645  00065A  6FE9               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 29646                           
 29647                           ; BSR set to: 1
 29648                           ;mdm_gsm_gprs_http.c: 306: GetMethodNextState = GetM_SetBearerProf;
 29649  00065C  0E03               	movlw	3
 29650  00065E  0100               	movlb	0	; () banked
 29651  000660  6FCE               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 29652                           
 29653                           ; BSR set to: 0
 29654                           ;mdm_gsm_gprs_http.c: 308: OsTmr_StartTimer(&ConnTimeout,20000u);
 29655  000662  0EF5               	movlw	low _ConnTimeout
 29656  000664  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 29657  000666  0E02               	movlw	high _ConnTimeout
 29658  000668  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 29659  00066A  0E20               	movlw	32
 29660  00066C  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 29661  00066E  0E4E               	movlw	78
 29662  000670  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 29663  000672  0E00               	movlw	0
 29664  000674  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 29665  000676  0E00               	movlw	0
 29666  000678  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 29667  00067A  ECF8  F02A         	call	_OsTmr_StartTimer	;wreg free
 29668  00067E  D192               	goto	l15336
 29669  000680                     
 29670                           ; BSR set to: 1
 29671                           ;mdm_gsm_gprs_http.c: 315: Uart_WriteConstString(1, "AT+HTTPPARA=\"CID\",1\r");
 29672                           
 29673                           ; BSR set to: 1
 29674  000680  0EA8               	movlw	low STR_14
 29675  000682  0100               	movlb	0	; () banked
 29676  000684  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 29677  000686  0EFE               	movlw	high STR_14
 29678  000688  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 29679  00068A  0E01               	movlw	1
 29680  00068C  EC7A  F02F         	call	_Uart_WriteConstString
 29681                           
 29682                           ;mdm_gsm_gprs_http.c: 317: GetMethodState = GetM_WaitMdmResp;
 29683  000690  0E0A               	movlw	10
 29684  000692  0101               	movlb	1	; () banked
 29685  000694  6FE9               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 29686                           
 29687                           ; BSR set to: 1
 29688                           ;mdm_gsm_gprs_http.c: 318: GetMethodNextState = GetM_SetUrlAddr;
 29689  000696  0E04               	movlw	4
 29690  000698  0100               	movlb	0	; () banked
 29691  00069A  6FCE               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 29692                           
 29693                           ; BSR set to: 0
 29694                           ;mdm_gsm_gprs_http.c: 320: OsTmr_StartTimer(&ConnTimeout,20000u);
 29695  00069C  0EF5               	movlw	low _ConnTimeout
 29696  00069E  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 29697  0006A0  0E02               	movlw	high _ConnTimeout
 29698  0006A2  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 29699  0006A4  0E20               	movlw	32
 29700  0006A6  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 29701  0006A8  0E4E               	movlw	78
 29702  0006AA  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 29703  0006AC  0E00               	movlw	0
 29704  0006AE  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 29705  0006B0  0E00               	movlw	0
 29706  0006B2  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 29707  0006B4  ECF8  F02A         	call	_OsTmr_StartTimer	;wreg free
 29708  0006B8  D175               	goto	l15336
 29709  0006BA                     
 29710                           ; BSR set to: 1
 29711                           ;mdm_gsm_gprs_http.c: 327: ClearBuffer(UartMessage, sizeof(UartMessage));
 29712                           
 29713                           ; BSR set to: 1
 29714  0006BA  0E00               	movlw	low HttpGetMethod@UartMessage
 29715  0006BC  0100               	movlb	0	; () banked
 29716  0006BE  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 29717  0006C0  0E01               	movlw	high HttpGetMethod@UartMessage
 29718  0006C2  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 29719  0006C4  0E00               	movlw	0
 29720  0006C6  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 29721  0006C8  0EC8               	movlw	200
 29722  0006CA  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 29723  0006CC  ECAC  F030         	call	_ClearBuffer	;wreg free
 29724                           
 29725                           ;mdm_gsm_gprs_http.c: 329: StringCopy((void*)("AT+HTTPPARA=\"URL\",\""),UartMessage,19);
 29726  0006D0  0EE6               	movlw	low STR_15
 29727  0006D2  0100               	movlb	0	; () banked
 29728  0006D4  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 29729  0006D6  0EFE               	movlw	high STR_15
 29730  0006D8  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 29731  0006DA  0E00               	movlw	low HttpGetMethod@UartMessage
 29732  0006DC  6F7F               	movwf	StringCopy@DestStr& (0+255),b
 29733  0006DE  0E01               	movlw	high HttpGetMethod@UartMessage
 29734  0006E0  6F80               	movwf	(StringCopy@DestStr+1)& (0+255),b
 29735  0006E2  0E00               	movlw	0
 29736  0006E4  6F82               	movwf	(StringCopy@Len+1)& (0+255),b
 29737  0006E6  0E13               	movlw	19
 29738  0006E8  6F81               	movwf	StringCopy@Len& (0+255),b
 29739  0006EA  EC98  F02A         	call	_StringCopy	;wreg free
 29740                           
 29741                           ;mdm_gsm_gprs_http.c: 331: for (Index = 0; Index < GetData->UrlLen; Index++)
 29742  0006EE  0E00               	movlw	0
 29743  0006F0  0101               	movlb	1	; () banked
 29744  0006F2  6FC8               	movwf	HttpGetMethod@Index& (0+255),b
 29745  0006F4  D024               	goto	l1257
 29746  0006F6                     
 29747                           ; BSR set to: 1
 29748                           ;mdm_gsm_gprs_http.c: 332: {
 29749                           ;mdm_gsm_gprs_http.c: 333: UartMessage[Index + 19] = *(GetData->Url + Index);
 29750                           
 29751                           ; BSR set to: 1
 29752  0006F6  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 29753  0006F8  0D01               	mullw	1
 29754  0006FA  C09B  FFD9         	movff	HttpGetMethod@GetData,fsr2l
 29755  0006FE  C09C  FFDA         	movff	HttpGetMethod@GetData+1,fsr2h
 29756  000702  CFDE F09D          	movff	postinc2,??_HttpGetMethod
 29757  000706  CFDD F09E          	movff	postdec2,??_HttpGetMethod+1
 29758  00070A  50F3               	movf	prodl,w,c
 29759  00070C  0100               	movlb	0	; () banked
 29760  00070E  259D               	addwf	??_HttpGetMethod& (0+255),w,b
 29761  000710  6ED9               	movwf	fsr2l,c
 29762  000712  50F4               	movf	prodh,w,c
 29763  000714  219E               	addwfc	(??_HttpGetMethod+1)& (0+255),w,b
 29764  000716  6EDA               	movwf	fsr2h,c
 29765  000718  0101               	movlb	1	; () banked
 29766  00071A  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 29767  00071C  0100               	movlb	0	; () banked
 29768  00071E  6F9F               	movwf	(??_HttpGetMethod+2)& (0+255),b
 29769  000720  6BA0               	clrf	(??_HttpGetMethod+3)& (0+255),b
 29770  000722  0E13               	movlw	19
 29771  000724  279F               	addwf	(??_HttpGetMethod+2)& (0+255),f,b
 29772  000726  0E00               	movlw	0
 29773  000728  23A0               	addwfc	(??_HttpGetMethod+3)& (0+255),f,b
 29774  00072A  0E00               	movlw	low HttpGetMethod@UartMessage
 29775  00072C  259F               	addwf	(??_HttpGetMethod+2)& (0+255),w,b
 29776  00072E  6EE1               	movwf	fsr1l,c
 29777  000730  0E01               	movlw	high HttpGetMethod@UartMessage
 29778  000732  21A0               	addwfc	(??_HttpGetMethod+3)& (0+255),w,b
 29779  000734  6EE2               	movwf	fsr1h,c
 29780  000736  CFDF FFE7          	movff	indf2,indf1
 29781                           
 29782                           ; BSR set to: 0
 29783  00073A  0101               	movlb	1	; () banked
 29784  00073C  2BC8               	incf	HttpGetMethod@Index& (0+255),f,b
 29785  00073E                     l1257:
 29786                           
 29787                           ; BSR set to: 1
 29788                           
 29789                           ; BSR set to: 1
 29790  00073E  0100               	movlb	0	; () banked
 29791  000740  EE20 F002          	lfsr	2,2
 29792  000744  519B               	movf	HttpGetMethod@GetData& (0+255),w,b
 29793  000746  26D9               	addwf	fsr2l,f,c
 29794  000748  519C               	movf	(HttpGetMethod@GetData+1)& (0+255),w,b
 29795  00074A  22DA               	addwfc	fsr2h,f,c
 29796  00074C  50DE               	movf	postinc2,w,c
 29797  00074E  0101               	movlb	1	; () banked
 29798  000750  5DC8               	subwf	HttpGetMethod@Index& (0+255),w,b
 29799  000752  A0D8               	btfss	status,0,c
 29800  000754  D7D0               	goto	l1258
 29801                           
 29802                           ; BSR set to: 1
 29803                           ;mdm_gsm_gprs_http.c: 334: }
 29804                           ;mdm_gsm_gprs_http.c: 336: UartMessage[Index + 19] = '"';
 29805                           
 29806                           ; BSR set to: 1
 29807  000756  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 29808  000758  0100               	movlb	0	; () banked
 29809  00075A  6F9D               	movwf	??_HttpGetMethod& (0+255),b
 29810  00075C  6B9E               	clrf	(??_HttpGetMethod+1)& (0+255),b
 29811  00075E  0E13               	movlw	19
 29812  000760  279D               	addwf	??_HttpGetMethod& (0+255),f,b
 29813  000762  0E00               	movlw	0
 29814  000764  239E               	addwfc	(??_HttpGetMethod+1)& (0+255),f,b
 29815  000766  0E00               	movlw	low HttpGetMethod@UartMessage
 29816  000768  259D               	addwf	??_HttpGetMethod& (0+255),w,b
 29817  00076A  6ED9               	movwf	fsr2l,c
 29818  00076C  0E01               	movlw	high HttpGetMethod@UartMessage
 29819  00076E  219E               	addwfc	(??_HttpGetMethod+1)& (0+255),w,b
 29820  000770  6EDA               	movwf	fsr2h,c
 29821  000772  0E22               	movlw	34
 29822  000774  6EDF               	movwf	indf2,c
 29823                           
 29824                           ;mdm_gsm_gprs_http.c: 337: UartMessage[Index + 20] = '\r';
 29825  000776  0101               	movlb	1	; () banked
 29826  000778  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 29827  00077A  0100               	movlb	0	; () banked
 29828  00077C  6F9D               	movwf	??_HttpGetMethod& (0+255),b
 29829  00077E  6B9E               	clrf	(??_HttpGetMethod+1)& (0+255),b
 29830  000780  0E14               	movlw	20
 29831  000782  279D               	addwf	??_HttpGetMethod& (0+255),f,b
 29832  000784  0E00               	movlw	0
 29833  000786  239E               	addwfc	(??_HttpGetMethod+1)& (0+255),f,b
 29834  000788  0E00               	movlw	low HttpGetMethod@UartMessage
 29835  00078A  259D               	addwf	??_HttpGetMethod& (0+255),w,b
 29836  00078C  6ED9               	movwf	fsr2l,c
 29837  00078E  0E01               	movlw	high HttpGetMethod@UartMessage
 29838  000790  219E               	addwfc	(??_HttpGetMethod+1)& (0+255),w,b
 29839  000792  6EDA               	movwf	fsr2h,c
 29840  000794  0E0D               	movlw	13
 29841  000796  6EDF               	movwf	indf2,c
 29842                           
 29843                           ;mdm_gsm_gprs_http.c: 338: UartMessage[Index + 21] = (0);
 29844  000798  0101               	movlb	1	; () banked
 29845  00079A  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 29846  00079C  0100               	movlb	0	; () banked
 29847  00079E  6F9D               	movwf	??_HttpGetMethod& (0+255),b
 29848  0007A0  6B9E               	clrf	(??_HttpGetMethod+1)& (0+255),b
 29849  0007A2  0E15               	movlw	21
 29850  0007A4  279D               	addwf	??_HttpGetMethod& (0+255),f,b
 29851  0007A6  0E00               	movlw	0
 29852  0007A8  239E               	addwfc	(??_HttpGetMethod+1)& (0+255),f,b
 29853  0007AA  0E00               	movlw	low HttpGetMethod@UartMessage
 29854  0007AC  259D               	addwf	??_HttpGetMethod& (0+255),w,b
 29855  0007AE  6ED9               	movwf	fsr2l,c
 29856  0007B0  0E01               	movlw	high HttpGetMethod@UartMessage
 29857  0007B2  219E               	addwfc	(??_HttpGetMethod+1)& (0+255),w,b
 29858  0007B4  6EDA               	movwf	fsr2h,c
 29859  0007B6  0E00               	movlw	0
 29860  0007B8  6EDF               	movwf	indf2,c
 29861                           
 29862                           ; BSR set to: 0
 29863                           ;mdm_gsm_gprs_http.c: 340: Uart_WriteString(1, UartMessage);
 29864  0007BA  0E00               	movlw	low HttpGetMethod@UartMessage
 29865  0007BC  6F80               	movwf	Uart_WriteString@StringToWrite& (0+255),b
 29866  0007BE  0E01               	movlw	high HttpGetMethod@UartMessage
 29867  0007C0  6F81               	movwf	(Uart_WriteString@StringToWrite+1)& (0+255),b
 29868  0007C2  0E01               	movlw	1
 29869  0007C4  EC1A  F030         	call	_Uart_WriteString
 29870                           
 29871                           ;mdm_gsm_gprs_http.c: 342: GetMethodState = GetM_WaitMdmResp;
 29872  0007C8  0E0A               	movlw	10
 29873  0007CA  0101               	movlb	1	; () banked
 29874  0007CC  6FE9               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 29875                           
 29876                           ; BSR set to: 1
 29877                           ;mdm_gsm_gprs_http.c: 343: GetMethodNextState = GetM_PerfGetAction;
 29878  0007CE  0E05               	movlw	5
 29879  0007D0  0100               	movlb	0	; () banked
 29880  0007D2  6FCE               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 29881                           
 29882                           ; BSR set to: 0
 29883                           ;mdm_gsm_gprs_http.c: 345: OsTmr_StartTimer(&ConnTimeout,20000u);
 29884  0007D4  0EF5               	movlw	low _ConnTimeout
 29885  0007D6  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 29886  0007D8  0E02               	movlw	high _ConnTimeout
 29887  0007DA  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 29888  0007DC  0E20               	movlw	32
 29889  0007DE  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 29890  0007E0  0E4E               	movlw	78
 29891  0007E2  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 29892  0007E4  0E00               	movlw	0
 29893  0007E6  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 29894  0007E8  0E00               	movlw	0
 29895  0007EA  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 29896  0007EC  ECF8  F02A         	call	_OsTmr_StartTimer	;wreg free
 29897  0007F0  D0D9               	goto	l15336
 29898  0007F2                     
 29899                           ; BSR set to: 1
 29900                           ;mdm_gsm_gprs_http.c: 352: Uart_WriteConstString(1, "AT+HTTPACTION=0\r");
 29901                           
 29902                           ; BSR set to: 1
 29903  0007F2  0E1E               	movlw	low STR_16
 29904  0007F4  0100               	movlb	0	; () banked
 29905  0007F6  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 29906  0007F8  0EFF               	movlw	high STR_16
 29907  0007FA  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 29908  0007FC  0E01               	movlw	1
 29909  0007FE  EC7A  F02F         	call	_Uart_WriteConstString
 29910                           
 29911                           ;mdm_gsm_gprs_http.c: 354: GetMethodState = GetM_WaitMdmResp;
 29912  000802  0E0A               	movlw	10
 29913  000804  0101               	movlb	1	; () banked
 29914  000806  6FE9               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 29915                           
 29916                           ; BSR set to: 1
 29917                           ;mdm_gsm_gprs_http.c: 355: GetMethodNextState = GetM_ReqActionConf;
 29918  000808  0E06               	movlw	6
 29919  00080A  0100               	movlb	0	; () banked
 29920  00080C  6FCE               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 29921                           
 29922                           ; BSR set to: 0
 29923                           ;mdm_gsm_gprs_http.c: 357: OsTmr_StartTimer(&ConnTimeout,20000u);
 29924  00080E  0EF5               	movlw	low _ConnTimeout
 29925  000810  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 29926  000812  0E02               	movlw	high _ConnTimeout
 29927  000814  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 29928  000816  0E20               	movlw	32
 29929  000818  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 29930  00081A  0E4E               	movlw	78
 29931  00081C  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 29932  00081E  0E00               	movlw	0
 29933  000820  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 29934  000822  0E00               	movlw	0
 29935  000824  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 29936  000826  ECF8  F02A         	call	_OsTmr_StartTimer	;wreg free
 29937                           
 29938                           ;mdm_gsm_gprs_http.c: 358: break;
 29939  00082A  D145               	goto	l1252
 29940  00082C                     
 29941                           ;mdm_gsm_gprs_http.c: 362: GetMethodState = GetM_WaitActionConf;
 29942  00082C  0E07               	movlw	7
 29943  00082E  0101               	movlb	1	; () banked
 29944  000830  6FE9               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 29945                           
 29946                           ;mdm_gsm_gprs_http.c: 365: GetMethodNextState = GetM_HttpTerminate;
 29947  000832  0E09               	movlw	9
 29948  000834  0100               	movlb	0	; () banked
 29949  000836  6FCE               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 29950                           
 29951                           ; BSR set to: 0
 29952                           ;mdm_gsm_gprs_http.c: 370: OsTmr_StartTimer(&ConnTimeout,20000u);
 29953  000838  0EF5               	movlw	low _ConnTimeout
 29954  00083A  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 29955  00083C  0E02               	movlw	high _ConnTimeout
 29956  00083E  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 29957  000840  0E20               	movlw	32
 29958  000842  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 29959  000844  0E4E               	movlw	78
 29960  000846  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 29961  000848  0E00               	movlw	0
 29962  00084A  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 29963  00084C  0E00               	movlw	0
 29964  00084E  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 29965  000850  ECF8  F02A         	call	_OsTmr_StartTimer	;wreg free
 29966                           
 29967                           ;mdm_gsm_gprs_http.c: 371: break;
 29968  000854  D130               	goto	l1252
 29969  000856                     
 29970                           ;mdm_gsm_gprs_http.c: 375: Uart_WriteConstString(1, "AT+HTTPREAD\r");
 29971  000856  0E83               	movlw	low STR_17
 29972  000858  0100               	movlb	0	; () banked
 29973  00085A  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 29974  00085C  0EFF               	movlw	high STR_17
 29975  00085E  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 29976  000860  0E01               	movlw	1
 29977  000862  EC7A  F02F         	call	_Uart_WriteConstString
 29978                           
 29979                           ;mdm_gsm_gprs_http.c: 377: GetMethodState = GetM_ReadGetData;
 29980  000866  0E0D               	movlw	13
 29981  000868  0101               	movlb	1	; () banked
 29982  00086A  6FE9               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 29983                           
 29984                           ; BSR set to: 1
 29985                           ;mdm_gsm_gprs_http.c: 378: GetMethodNextState = GetM_HttpTerminate;
 29986  00086C  0E09               	movlw	9
 29987  00086E  0100               	movlb	0	; () banked
 29988  000870  6FCE               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 29989                           
 29990                           ; BSR set to: 0
 29991                           ;mdm_gsm_gprs_http.c: 380: OsTmr_StartTimer(&ConnTimeout,20000u);
 29992  000872  0EF5               	movlw	low _ConnTimeout
 29993  000874  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 29994  000876  0E02               	movlw	high _ConnTimeout
 29995  000878  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 29996  00087A  0E20               	movlw	32
 29997  00087C  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 29998  00087E  0E4E               	movlw	78
 29999  000880  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 30000  000882  0E00               	movlw	0
 30001  000884  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 30002  000886  0E00               	movlw	0
 30003  000888  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 30004  00088A  ECF8  F02A         	call	_OsTmr_StartTimer	;wreg free
 30005  00088E  D08A               	goto	l15336
 30006  000890                     
 30007                           ; BSR set to: 1
 30008                           ;mdm_gsm_gprs_http.c: 387: Uart_WriteConstString(1, "AT+HTTPTERM\r");
 30009                           
 30010                           ; BSR set to: 1
 30011  000890  0E90               	movlw	low STR_18
 30012  000892  0100               	movlb	0	; () banked
 30013  000894  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 30014  000896  0EFF               	movlw	high STR_18
 30015  000898  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 30016  00089A  0E01               	movlw	1
 30017  00089C  EC7A  F02F         	call	_Uart_WriteConstString
 30018                           
 30019                           ;mdm_gsm_gprs_http.c: 389: GetMethodState = GetM_WaitMdmResp;
 30020  0008A0  0E0A               	movlw	10
 30021  0008A2  0101               	movlb	1	; () banked
 30022  0008A4  6FE9               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 30023                           
 30024                           ; BSR set to: 1
 30025                           ;mdm_gsm_gprs_http.c: 390: GetMethodNextState = GetM_Done;
 30026  0008A6  0E0E               	movlw	14
 30027  0008A8  0100               	movlb	0	; () banked
 30028  0008AA  6FCE               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 30029                           
 30030                           ; BSR set to: 0
 30031                           ;mdm_gsm_gprs_http.c: 392: OsTmr_StartTimer(&ConnTimeout,20000u);
 30032  0008AC  0EF5               	movlw	low _ConnTimeout
 30033  0008AE  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 30034  0008B0  0E02               	movlw	high _ConnTimeout
 30035  0008B2  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 30036  0008B4  0E20               	movlw	32
 30037  0008B6  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 30038  0008B8  0E4E               	movlw	78
 30039  0008BA  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 30040  0008BC  0E00               	movlw	0
 30041  0008BE  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 30042  0008C0  0E00               	movlw	0
 30043  0008C2  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 30044  0008C4  ECF8  F02A         	call	_OsTmr_StartTimer	;wreg free
 30045  0008C8  D06D               	goto	l15336
 30046  0008CA                     
 30047                           ; BSR set to: 1
 30048                           ;mdm_gsm_gprs_http.c: 399: if (ReceiveEvt(&NewStringReceived))
 30049                           
 30050                           ; BSR set to: 1
 30051  0008CA  0E3C               	movlw	low _NewStringReceived
 30052  0008CC  0100               	movlb	0	; () banked
 30053  0008CE  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 30054  0008D0  0E00               	movlw	high _NewStringReceived
 30055  0008D2  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 30056  0008D4  EC8A  F031         	call	_ReceiveEvt	;wreg free
 30057  0008D8  0900               	iorlw	0
 30058  0008DA  B4D8               	btfsc	status,2,c
 30059  0008DC  D018               	goto	l1265
 30060                           
 30061                           ;mdm_gsm_gprs_http.c: 400: {
 30062                           ;mdm_gsm_gprs_http.c: 402: if ((RxBuffer[0] == 'O') && (RxBuffer[1] == 'K'))
 30063  0008DE  CC58  FFE8         	movff	_RxBuffer,wreg
 30064  0008E2  0A4F               	xorlw	79
 30065  0008E4  A4D8               	btfss	status,2,c
 30066  0008E6  D0E7               	goto	l1252
 30067  0008E8  CC59  FFE8         	movff	_RxBuffer+1,wreg
 30068  0008EC  0A4B               	xorlw	75
 30069  0008EE  A4D8               	btfss	status,2,c
 30070  0008F0  D0E2               	goto	l1252
 30071                           
 30072                           ;mdm_gsm_gprs_http.c: 403: {
 30073                           ;mdm_gsm_gprs_http.c: 405: GetMethodState = GetMethodNextState;
 30074  0008F2  C0CE  F1E9         	movff	HttpGetMethod@GetMethodNextState,HttpGetMethod@GetMethodState
 30075                           
 30076                           ;mdm_gsm_gprs_http.c: 407: ClearBuffer(RxBuffer,((UINT16)(400)));
 30077  0008F6  0E58               	movlw	low _RxBuffer
 30078  0008F8  0100               	movlb	0	; () banked
 30079  0008FA  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 30080  0008FC  0E0C               	movlw	high _RxBuffer
 30081  0008FE  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 30082  000900  0E01               	movlw	1
 30083  000902  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 30084  000904  0E90               	movlw	144
 30085  000906  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 30086  000908  ECAC  F030         	call	_ClearBuffer	;wreg free
 30087                           
 30088                           ;mdm_gsm_gprs_http.c: 408: }
 30089                           ;mdm_gsm_gprs_http.c: 409: }
 30090  00090C  D0D4               	goto	l1252
 30091  00090E                     l1265:
 30092                           
 30093                           ;mdm_gsm_gprs_http.c: 410: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 30094  00090E  0EF5               	movlw	low _ConnTimeout
 30095  000910  0100               	movlb	0	; () banked
 30096  000912  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 30097  000914  0E02               	movlw	high _ConnTimeout
 30098  000916  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 30099  000918  EC5C  F026         	call	_OsTmr_GetTimerStatus	;wreg free
 30100  00091C                     L46:
 30101  00091C  06E8               	decf	wreg,f,c
 30102  00091E  A4D8               	btfss	status,2,c
 30103  000920  D0CA               	goto	l1252
 30104                           
 30105                           ;mdm_gsm_gprs_http.c: 411: {
 30106                           ;mdm_gsm_gprs_http.c: 413: GetMethodState = GetM_Fail;
 30107  000922  0E0F               	movlw	15
 30108  000924                     L45:
 30109  000924  0101               	movlb	1	; () banked
 30110  000926  6FE9               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 30111                           
 30112                           ; BSR set to: 1
 30113                           ;mdm_gsm_gprs_http.c: 414: }
 30114                           ;mdm_gsm_gprs_http.c: 415: break;
 30115                           
 30116                           ; BSR set to: 1
 30117  000928  D0C6               	goto	l1252
 30118  00092A                     
 30119                           ; BSR set to: 1
 30120                           ;mdm_gsm_gprs_http.c: 419: if (ReceiveEvt(&NewStringReceived))
 30121                           
 30122                           ; BSR set to: 1
 30123  00092A  0E3C               	movlw	low _NewStringReceived
 30124  00092C  0100               	movlb	0	; () banked
 30125  00092E  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 30126  000930  0E00               	movlw	high _NewStringReceived
 30127  000932  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 30128  000934  EC8A  F031         	call	_ReceiveEvt	;wreg free
 30129  000938  0900               	iorlw	0
 30130  00093A  B4D8               	btfsc	status,2,c
 30131  00093C  D018               	goto	l1270
 30132                           
 30133                           ;mdm_gsm_gprs_http.c: 420: {
 30134                           ;mdm_gsm_gprs_http.c: 422: if ((RxBuffer[0] == '+') && (RxBuffer[1] == 'H'))
 30135  00093E  CC58  FFE8         	movff	_RxBuffer,wreg
 30136  000942  0A2B               	xorlw	43
 30137  000944  A4D8               	btfss	status,2,c
 30138  000946  D0B7               	goto	l1252
 30139  000948  CC59  FFE8         	movff	_RxBuffer+1,wreg
 30140  00094C  0A48               	xorlw	72
 30141  00094E  A4D8               	btfss	status,2,c
 30142  000950  D0B2               	goto	l1252
 30143                           
 30144                           ;mdm_gsm_gprs_http.c: 423: {
 30145                           ;mdm_gsm_gprs_http.c: 425: GetMethodState = GetMethodNextState;
 30146  000952  C0CE  F1E9         	movff	HttpGetMethod@GetMethodNextState,HttpGetMethod@GetMethodState
 30147                           
 30148                           ;mdm_gsm_gprs_http.c: 427: ClearBuffer(RxBuffer,((UINT16)(400)));
 30149  000956  0E58               	movlw	low _RxBuffer
 30150  000958  0100               	movlb	0	; () banked
 30151  00095A  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 30152  00095C  0E0C               	movlw	high _RxBuffer
 30153  00095E  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 30154  000960  0E01               	movlw	1
 30155  000962  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 30156  000964  0E90               	movlw	144
 30157  000966  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 30158  000968  ECAC  F030         	call	_ClearBuffer	;wreg free
 30159                           
 30160                           ;mdm_gsm_gprs_http.c: 428: }
 30161                           ;mdm_gsm_gprs_http.c: 429: }
 30162  00096C  D0A4               	goto	l1252
 30163  00096E                     l1270:
 30164                           
 30165                           ;mdm_gsm_gprs_http.c: 430: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 30166  00096E  0EF5               	movlw	low _ConnTimeout
 30167  000970  0100               	movlb	0	; () banked
 30168  000972  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 30169  000974  0E02               	movlw	high _ConnTimeout
 30170  000976  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 30171  000978  EC5C  F026         	call	_OsTmr_GetTimerStatus	;wreg free
 30172  00097C  D7CF               	goto	L46
 30173  00097E                     
 30174                           ; BSR set to: 1
 30175                           ;mdm_gsm_gprs_http.c: 439: GetMethodState = GetM_Wait;
 30176                           
 30177                           ; BSR set to: 1
 30178  00097E  0E0C               	movlw	12
 30179  000980  6FE9               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 30180                           
 30181                           ;mdm_gsm_gprs_http.c: 440: GetMethodNextState = GetM_PerfGetAction;
 30182  000982  0E05               	movlw	5
 30183  000984  0100               	movlb	0	; () banked
 30184  000986  6FCE               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 30185                           
 30186                           ; BSR set to: 0
 30187                           ;mdm_gsm_gprs_http.c: 442: OsTmr_StartTimer(&ConnWait,1000);
 30188  000988  0EDF               	movlw	low _ConnWait
 30189  00098A  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 30190  00098C  0E03               	movlw	high _ConnWait
 30191  00098E  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 30192  000990  0EE8               	movlw	232
 30193  000992  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 30194  000994  0E03               	movlw	3
 30195  000996  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 30196  000998  0E00               	movlw	0
 30197  00099A  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 30198  00099C  0E00               	movlw	0
 30199  00099E  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 30200  0009A0  ECF8  F02A         	call	_OsTmr_StartTimer	;wreg free
 30201  0009A4                     l15336:
 30202                           
 30203                           ;mdm_gsm_gprs_http.c: 444: GetMOutSts = GetMOut_InProg;
 30204  0009A4  0E01               	movlw	1
 30205  0009A6  0101               	movlb	1	; () banked
 30206  0009A8  D053               	goto	L48
 30207  0009AA                     
 30208                           ; BSR set to: 1
 30209                           ;mdm_gsm_gprs_http.c: 449: if (OsTmr_GetTimerStatus(&ConnWait) == SwTimerExpired)
 30210                           
 30211                           ; BSR set to: 1
 30212  0009AA  0EDF               	movlw	low _ConnWait
 30213  0009AC  0100               	movlb	0	; () banked
 30214  0009AE  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 30215  0009B0  0E03               	movlw	high _ConnWait
 30216  0009B2  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 30217  0009B4  EC5C  F026         	call	_OsTmr_GetTimerStatus	;wreg free
 30218  0009B8  06E8               	decf	wreg,f,c
 30219  0009BA  A4D8               	btfss	status,2,c
 30220  0009BC  D07C               	goto	l1252
 30221                           
 30222                           ;mdm_gsm_gprs_http.c: 450: {
 30223                           ;mdm_gsm_gprs_http.c: 452: GetMethodState = GetMethodNextState;
 30224  0009BE  C0CE  F1E9         	movff	HttpGetMethod@GetMethodNextState,HttpGetMethod@GetMethodState
 30225                           
 30226                           ;mdm_gsm_gprs_http.c: 453: }
 30227                           ;mdm_gsm_gprs_http.c: 454: break;
 30228  0009C2  D079               	goto	l1252
 30229  0009C4                     
 30230                           ;mdm_gsm_gprs_http.c: 458: if (ReceiveEvt(&NewStringReceived))
 30231  0009C4  0E3C               	movlw	low _NewStringReceived
 30232  0009C6  0100               	movlb	0	; () banked
 30233  0009C8  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 30234  0009CA  0E00               	movlw	high _NewStringReceived
 30235  0009CC  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 30236  0009CE  EC8A  F031         	call	_ReceiveEvt	;wreg free
 30237  0009D2  0900               	iorlw	0
 30238  0009D4  B4D8               	btfsc	status,2,c
 30239  0009D6  D02D               	goto	l1278
 30240                           
 30241                           ;mdm_gsm_gprs_http.c: 459: {
 30242                           ;mdm_gsm_gprs_http.c: 461: if ((RxBuffer[0] == '+') && (RxBuffer[1] == 'H'))
 30243  0009D8  CC58  FFE8         	movff	_RxBuffer,wreg
 30244  0009DC  0A2B               	xorlw	43
 30245  0009DE  A4D8               	btfss	status,2,c
 30246  0009E0  D06A               	goto	l1252
 30247  0009E2  CC59  FFE8         	movff	_RxBuffer+1,wreg
 30248  0009E6  0A48               	xorlw	72
 30249  0009E8  A4D8               	btfss	status,2,c
 30250  0009EA  D065               	goto	l1252
 30251                           
 30252                           ;mdm_gsm_gprs_http.c: 462: {
 30253                           ;mdm_gsm_gprs_http.c: 464: GetMethodState = GetMethodNextState;
 30254  0009EC  C0CE  F1E9         	movff	HttpGetMethod@GetMethodNextState,HttpGetMethod@GetMethodState
 30255                           
 30256                           ;mdm_gsm_gprs_http.c: 466: StringCopy(RxBuffer,GetData->RespBuffer,((UINT16)(400)));
 30257  0009F0  0E58               	movlw	low _RxBuffer
 30258  0009F2  0100               	movlb	0	; () banked
 30259  0009F4  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 30260  0009F6  0E0C               	movlw	high _RxBuffer
 30261  0009F8  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 30262  0009FA  EE20 F003          	lfsr	2,3
 30263  0009FE  519B               	movf	HttpGetMethod@GetData& (0+255),w,b
 30264  000A00  26D9               	addwf	fsr2l,f,c
 30265  000A02  519C               	movf	(HttpGetMethod@GetData+1)& (0+255),w,b
 30266  000A04  22DA               	addwfc	fsr2h,f,c
 30267  000A06  CFDE F07F          	movff	postinc2,StringCopy@DestStr
 30268  000A0A  CFDD F080          	movff	postdec2,StringCopy@DestStr+1
 30269  000A0E  0E01               	movlw	1
 30270  000A10  6F82               	movwf	(StringCopy@Len+1)& (0+255),b
 30271  000A12  0E90               	movlw	144
 30272  000A14  6F81               	movwf	StringCopy@Len& (0+255),b
 30273  000A16  EC98  F02A         	call	_StringCopy	;wreg free
 30274                           
 30275                           ;mdm_gsm_gprs_http.c: 468: ClearBuffer(RxBuffer,((UINT16)(400)));
 30276  000A1A  0E58               	movlw	low _RxBuffer
 30277  000A1C  0100               	movlb	0	; () banked
 30278  000A1E  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 30279  000A20  0E0C               	movlw	high _RxBuffer
 30280  000A22  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 30281  000A24  0E01               	movlw	1
 30282  000A26  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 30283  000A28  0E90               	movlw	144
 30284  000A2A  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 30285  000A2C  ECAC  F030         	call	_ClearBuffer	;wreg free
 30286                           
 30287                           ;mdm_gsm_gprs_http.c: 469: }
 30288                           ;mdm_gsm_gprs_http.c: 470: }
 30289  000A30  D042               	goto	l1252
 30290  000A32                     l1278:
 30291                           
 30292                           ;mdm_gsm_gprs_http.c: 471: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 30293  000A32  0EF5               	movlw	low _ConnTimeout
 30294  000A34  0100               	movlb	0	; () banked
 30295  000A36  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 30296  000A38  0E02               	movlw	high _ConnTimeout
 30297  000A3A  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 30298  000A3C  EC5C  F026         	call	_OsTmr_GetTimerStatus	;wreg free
 30299  000A40  D76D               	goto	L46
 30300  000A42                     
 30301                           ; BSR set to: 1
 30302                           ;mdm_gsm_gprs_http.c: 480: GetMethodState = GetM_Idle;
 30303                           
 30304                           ; BSR set to: 1
 30305  000A42  0E00               	movlw	0
 30306  000A44  6FE9               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 30307                           
 30308                           ;mdm_gsm_gprs_http.c: 482: GetMOutSts = GetMOut_Completed;
 30309  000A46  0E02               	movlw	2
 30310  000A48  D003               	goto	L48
 30311  000A4A                     
 30312                           ; BSR set to: 1
 30313                           ;mdm_gsm_gprs_http.c: 487: GetMethodState = GetM_Idle;
 30314                           
 30315                           ; BSR set to: 1
 30316  000A4A  0E00               	movlw	0
 30317  000A4C  6FE9               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 30318                           
 30319                           ;mdm_gsm_gprs_http.c: 489: GetMOutSts = GetMOut_Failed;
 30320  000A4E  0E03               	movlw	3
 30321  000A50                     L48:
 30322  000A50  6FE8               	movwf	HttpGetMethod@GetMOutSts& (0+255),b
 30323                           
 30324                           ; BSR set to: 1
 30325                           ;mdm_gsm_gprs_http.c: 494: }
 30326                           
 30327                           ; BSR set to: 1
 30328                           ;mdm_gsm_gprs_http.c: 493: break;
 30329                           
 30330                           ;mdm_gsm_gprs_http.c: 492: default:
 30331                           
 30332                           ;mdm_gsm_gprs_http.c: 490: break;
 30333  000A52  D031               	goto	l1252
 30334  000A54                     l1249:
 30335                           
 30336                           ; BSR set to: 1
 30337                           
 30338                           ; BSR set to: 1
 30339  000A54  51E9               	movf	HttpGetMethod@GetMethodState& (0+255),w,b
 30340                           
 30341                           ; Switch size 1, requested type "space"
 30342                           ; Number of cases is 16, Range of values is 0 to 15
 30343                           ; switch strategies available:
 30344                           ; Name         Instructions Cycles
 30345                           ; simple_byte           49    25 (average)
 30346                           ;	Chosen strategy is simple_byte
 30347  000A56  0A00               	xorlw	0	; case 0
 30348  000A58  B4D8               	btfsc	status,2,c
 30349  000A5A  D5CC               	goto	l1250
 30350  000A5C  0A01               	xorlw	1	; case 1
 30351  000A5E  B4D8               	btfsc	status,2,c
 30352  000A60  D5D5               	goto	l1253
 30353  000A62  0A03               	xorlw	3	; case 2
 30354  000A64  B4D8               	btfsc	status,2,c
 30355  000A66  D5EF               	goto	l1254
 30356  000A68  0A01               	xorlw	1	; case 3
 30357  000A6A  B4D8               	btfsc	status,2,c
 30358  000A6C  D609               	goto	l1255
 30359  000A6E  0A07               	xorlw	7	; case 4
 30360  000A70  B4D8               	btfsc	status,2,c
 30361  000A72  D623               	goto	l1256
 30362  000A74  0A01               	xorlw	1	; case 5
 30363  000A76  B4D8               	btfsc	status,2,c
 30364  000A78  D6BC               	goto	l1260
 30365  000A7A  0A03               	xorlw	3	; case 6
 30366  000A7C  B4D8               	btfsc	status,2,c
 30367  000A7E  D6D6               	goto	l1261
 30368  000A80  0A01               	xorlw	1	; case 7
 30369  000A82  B4D8               	btfsc	status,2,c
 30370  000A84  D752               	goto	l1269
 30371  000A86  0A0F               	xorlw	15	; case 8
 30372  000A88  B4D8               	btfsc	status,2,c
 30373  000A8A  D6E5               	goto	l1262
 30374  000A8C  0A01               	xorlw	1	; case 9
 30375  000A8E  B4D8               	btfsc	status,2,c
 30376  000A90  D6FF               	goto	l1263
 30377  000A92  0A03               	xorlw	3	; case 10
 30378  000A94  B4D8               	btfsc	status,2,c
 30379  000A96  D719               	goto	l1264
 30380  000A98  0A01               	xorlw	1	; case 11
 30381  000A9A  B4D8               	btfsc	status,2,c
 30382  000A9C  D770               	goto	l1274
 30383  000A9E  0A07               	xorlw	7	; case 12
 30384  000AA0  B4D8               	btfsc	status,2,c
 30385  000AA2  D783               	goto	l1275
 30386  000AA4  0A01               	xorlw	1	; case 13
 30387  000AA6  B4D8               	btfsc	status,2,c
 30388  000AA8  D78D               	goto	l1277
 30389  000AAA  0A03               	xorlw	3	; case 14
 30390  000AAC  B4D8               	btfsc	status,2,c
 30391  000AAE  D7C9               	goto	l1282
 30392  000AB0  0A01               	xorlw	1	; case 15
 30393  000AB2  B4D8               	btfsc	status,2,c
 30394  000AB4  D7CA               	goto	l1283
 30395  000AB6                     l1252:
 30396                           
 30397                           ;mdm_gsm_gprs_http.c: 496: return GetMOutSts;
 30398                           
 30399                           ; BSR set to: 1
 30400  000AB6  0101               	movlb	1	; () banked
 30401  000AB8  51E8               	movf	HttpGetMethod@GetMOutSts& (0+255),w,b
 30402  000ABA  0012               	return	
 30403  000ABC                     __end_of_HttpGetMethod:
 30404                           	opt stack 0
 30405                           tosu	equ	0xFFF
 30406                           tosh	equ	0xFFE
 30407                           tosl	equ	0xFFD
 30408                           pclath	equ	0xFFA
 30409                           tblptru	equ	0xFF8
 30410                           tblptrh	equ	0xFF7
 30411                           tblptrl	equ	0xFF6
 30412                           tablat	equ	0xFF5
 30413                           prodh	equ	0xFF4
 30414                           prodl	equ	0xFF3
 30415                           intcon	equ	0xFF2
 30416                           intcon2	equ	0xFF1
 30417                           intcon3	equ	0xFF0
 30418                           indf0	equ	0xFEF
 30419                           postinc0	equ	0xFEE
 30420                           plusw0	equ	0xFEB
 30421                           fsr0h	equ	0xFEA
 30422                           fsr0l	equ	0xFE9
 30423                           wreg	equ	0xFE8
 30424                           indf1	equ	0xFE7
 30425                           postinc1	equ	0xFE6
 30426                           postdec1	equ	0xFE5
 30427                           plusw1	equ	0xFE3
 30428                           fsr1h	equ	0xFE2
 30429                           fsr1l	equ	0xFE1
 30430                           indf2	equ	0xFDF
 30431                           postinc2	equ	0xFDE
 30432                           postdec2	equ	0xFDD
 30433                           plusw2	equ	0xFDB
 30434                           fsr2h	equ	0xFDA
 30435                           fsr2l	equ	0xFD9
 30436                           status	equ	0xFD8
 30437                           
 30438 ;; *************** function _Uart_WriteString *****************
 30439 ;; Defined at:
 30440 ;;		line 518 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 30441 ;; Parameters:    Size  Location     Type
 30442 ;;  Module          1    wreg     unsigned char 
 30443 ;;  StringToWrit    2   32[BANK0 ] PTR unsigned char 
 30444 ;;		 -> HttpGetMethod@UartMessage(200), InitGprsNetwork@UartMessage(50), Mdm_MakePhoneCall@UartMessage(25), Mdm_SetSmsFo
      +rmat@UartMessage(20), 
 30445 ;;		 -> Mdm_PinUnlock@UartMessage(13), 
 30446 ;; Auto vars:     Size  Location     Type
 30447 ;;  Module          1   34[BANK0 ] unsigned char 
 30448 ;; Return value:  Size  Location     Type
 30449 ;;                  1    wreg      void 
 30450 ;; Registers used:
 30451 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 30452 ;; Tracked objects:
 30453 ;;		On entry : 0/0
 30454 ;;		On exit  : 0/0
 30455 ;;		Unchanged: 0/0
 30456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30457 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30458 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30459 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30460 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30461 ;;Total ram usage:        3 bytes
 30462 ;; Hardware stack levels used:    1
 30463 ;; Hardware stack levels required when called:   12
 30464 ;; This function calls:
 30465 ;;		_UartTxBufferStatus
 30466 ;;		_UartWriteByte
 30467 ;; This function is called by:
 30468 ;;		_Mdm_SetSmsFormat
 30469 ;;		_InitGprsNetwork
 30470 ;;		_HttpGetMethod
 30471 ;;		_Mdm_PinUnlock
 30472 ;;		_Mdm_MakePhoneCall
 30473 ;; This function uses a non-reentrant model
 30474 ;;
 30475                           
 30476                           	psect	text136
 30477  006034                     __ptext136:
 30478                           	opt stack 0
 30479  006034                     _Uart_WriteString:
 30480                           	opt stack 12
 30481                           
 30482                           ; BSR set to: 1
 30483                           ;incstack = 0
 30484                           ;Uart_WriteString@Module stored from wreg
 30485  006034  0100               	movlb	0	; () banked
 30486  006036  6F82               	movwf	Uart_WriteString@Module& (0+255),b
 30487                           
 30488                           ;uart_drv.c: 521: while (*StringToWrite)
 30489  006038  D014               	goto	u11930
 30490  00603A                     
 30491                           ;uart_drv.c: 522: {
 30492                           ;uart_drv.c: 524: UartWriteByte(Module, *StringToWrite);
 30493  00603A  C080  FFD9         	movff	Uart_WriteString@StringToWrite,fsr2l
 30494  00603E  C081  FFDA         	movff	Uart_WriteString@StringToWrite+1,fsr2h
 30495  006042  50DF               	movf	indf2,w,c
 30496  006044  0100               	movlb	0	; () banked
 30497  006046  6F7D               	movwf	UartWriteByte@ByteToWrite& (0+255),b
 30498  006048  5182               	movf	Uart_WriteString@Module& (0+255),w,b
 30499  00604A  ECE9  F032         	call	_UartWriteByte
 30500                           
 30501                           ;uart_drv.c: 526: StringToWrite++;
 30502  00604E  0100               	movlb	0	; () banked
 30503  006050  4B80               	infsnz	Uart_WriteString@StringToWrite& (0+255),f,b
 30504  006052  2B81               	incf	(Uart_WriteString@StringToWrite+1)& (0+255),f,b
 30505  006054                     
 30506                           ; BSR set to: 0
 30507                           
 30508                           ; BSR set to: 0
 30509  006054  0100               	movlb	0	; () banked
 30510  006056  5182               	movf	Uart_WriteString@Module& (0+255),w,b
 30511  006058  ECC8  F02D         	call	_UartTxBufferStatus
 30512  00605C  06E8               	decf	wreg,f,c
 30513  00605E  B4D8               	btfsc	status,2,c
 30514  006060  D7F9               	goto	l709
 30515  006062                     u11930:
 30516  006062  C080  FFD9         	movff	Uart_WriteString@StringToWrite,fsr2l
 30517  006066  C081  FFDA         	movff	Uart_WriteString@StringToWrite+1,fsr2h
 30518  00606A  50DF               	movf	indf2,w,c
 30519  00606C  B4D8               	btfsc	status,2,c
 30520  00606E  0012               	return	
 30521  006070  D7E4               	goto	l707
 30522  006072                     __end_of_Uart_WriteString:
 30523                           	opt stack 0
 30524                           tosu	equ	0xFFF
 30525                           tosh	equ	0xFFE
 30526                           tosl	equ	0xFFD
 30527                           pclath	equ	0xFFA
 30528                           tblptru	equ	0xFF8
 30529                           tblptrh	equ	0xFF7
 30530                           tblptrl	equ	0xFF6
 30531                           tablat	equ	0xFF5
 30532                           prodh	equ	0xFF4
 30533                           prodl	equ	0xFF3
 30534                           intcon	equ	0xFF2
 30535                           intcon2	equ	0xFF1
 30536                           intcon3	equ	0xFF0
 30537                           indf0	equ	0xFEF
 30538                           postinc0	equ	0xFEE
 30539                           plusw0	equ	0xFEB
 30540                           fsr0h	equ	0xFEA
 30541                           fsr0l	equ	0xFE9
 30542                           wreg	equ	0xFE8
 30543                           indf1	equ	0xFE7
 30544                           postinc1	equ	0xFE6
 30545                           postdec1	equ	0xFE5
 30546                           plusw1	equ	0xFE3
 30547                           fsr1h	equ	0xFE2
 30548                           fsr1l	equ	0xFE1
 30549                           indf2	equ	0xFDF
 30550                           postinc2	equ	0xFDE
 30551                           postdec2	equ	0xFDD
 30552                           plusw2	equ	0xFDB
 30553                           fsr2h	equ	0xFDA
 30554                           fsr2l	equ	0xFD9
 30555                           status	equ	0xFD8
 30556                           
 30557 ;; *************** function _Uart_WriteConstString *****************
 30558 ;; Defined at:
 30559 ;;		line 496 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 30560 ;; Parameters:    Size  Location     Type
 30561 ;;  Module          1    wreg     unsigned char 
 30562 ;;  ConstStringT    2   32[BANK0 ] PTR const unsigned char 
 30563 ;;		 -> STR_32(12), STR_31(19), STR_30(14), STR_29(14), 
 30564 ;;		 -> STR_20(14), STR_19(14), STR_18(13), STR_17(13), 
 30565 ;;		 -> STR_16(17), STR_14(21), STR_13(14), STR_12(13), 
 30566 ;;		 -> STR_11(14), STR_10(14), STR_8(31), STR_7(5), 
 30567 ;;		 -> STR_6(5), STR_4(12), STR_3(7), STR_2(14), 
 30568 ;;		 -> STR_1(5), 
 30569 ;; Auto vars:     Size  Location     Type
 30570 ;;  Module          1   34[BANK0 ] unsigned char 
 30571 ;; Return value:  Size  Location     Type
 30572 ;;                  1    wreg      void 
 30573 ;; Registers used:
 30574 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 30575 ;; Tracked objects:
 30576 ;;		On entry : 0/0
 30577 ;;		On exit  : 0/0
 30578 ;;		Unchanged: 0/0
 30579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30580 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30581 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30582 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30583 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30584 ;;Total ram usage:        3 bytes
 30585 ;; Hardware stack levels used:    1
 30586 ;; Hardware stack levels required when called:   12
 30587 ;; This function calls:
 30588 ;;		_UartTxBufferStatus
 30589 ;;		_UartWriteByte
 30590 ;; This function is called by:
 30591 ;;		_CheckModem
 30592 ;;		_ConfigureModem
 30593 ;;		_GetSmsSm
 30594 ;;		_Mdm_HangPhoneCall
 30595 ;;		_InitGprsNetwork
 30596 ;;		_HttpGetMethod
 30597 ;;		_MyApp_Task
 30598 ;;		_initGprsModem
 30599 ;;		_Mdm_GetPhoneCall
 30600 ;;		_MdmHttp_SetSsl
 30601 ;; This function uses a non-reentrant model
 30602 ;;
 30603                           
 30604                           	psect	text137
 30605  005EF4                     __ptext137:
 30606                           	opt stack 0
 30607  005EF4                     _Uart_WriteConstString:
 30608                           	opt stack 12
 30609                           
 30610                           ;incstack = 0
 30611                           ;Uart_WriteConstString@Module stored from wreg
 30612  005EF4  0100               	movlb	0	; () banked
 30613  005EF6  6F82               	movwf	Uart_WriteConstString@Module& (0+255),b
 30614                           
 30615                           ;uart_drv.c: 499: while (*ConstStringToWrite)
 30616  005EF8  D015               	goto	u11910
 30617  005EFA                     
 30618                           ;uart_drv.c: 500: {
 30619                           ;uart_drv.c: 502: UartWriteByte(Module, *ConstStringToWrite);
 30620  005EFA  C080  FFF6         	movff	Uart_WriteConstString@ConstStringToWrite,tblptrl
 30621  005EFE  C081  FFF7         	movff	Uart_WriteConstString@ConstStringToWrite+1,tblptrh
 30622  005F02                     	if	0	;tblptru may be non-zero
 30623  005F02                     	endif
 30624  005F02                     	if	0	;tblptru may be non-zero
 30625  005F02                     	endif
 30626  005F02  0008               	tblrd		*
 30627  005F04  CFF5 F07D          	movff	tablat,UartWriteByte@ByteToWrite
 30628  005F08  0100               	movlb	0	; () banked
 30629  005F0A  5182               	movf	Uart_WriteConstString@Module& (0+255),w,b
 30630  005F0C  ECE9  F032         	call	_UartWriteByte
 30631                           
 30632                           ;uart_drv.c: 504: ConstStringToWrite++;
 30633  005F10  0100               	movlb	0	; () banked
 30634  005F12  4B80               	infsnz	Uart_WriteConstString@ConstStringToWrite& (0+255),f,b
 30635  005F14  2B81               	incf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),f,b
 30636  005F16                     
 30637                           ; BSR set to: 0
 30638                           
 30639                           ; BSR set to: 0
 30640  005F16  0100               	movlb	0	; () banked
 30641  005F18  5182               	movf	Uart_WriteConstString@Module& (0+255),w,b
 30642  005F1A  ECC8  F02D         	call	_UartTxBufferStatus
 30643  005F1E  06E8               	decf	wreg,f,c
 30644  005F20  B4D8               	btfsc	status,2,c
 30645  005F22  D7F9               	goto	l700
 30646  005F24                     u11910:
 30647  005F24  C080  FFF6         	movff	Uart_WriteConstString@ConstStringToWrite,tblptrl
 30648  005F28  C081  FFF7         	movff	Uart_WriteConstString@ConstStringToWrite+1,tblptrh
 30649  005F2C                     	if	0	;tblptru may be non-zero
 30650  005F2C                     	endif
 30651  005F2C                     	if	0	;tblptru may be non-zero
 30652  005F2C                     	endif
 30653  005F2C  0008               	tblrd		*
 30654  005F2E  50F5               	movf	tablat,w,c
 30655  005F30  0900               	iorlw	0
 30656  005F32  B4D8               	btfsc	status,2,c
 30657  005F34  0012               	return	
 30658  005F36  D7E1               	goto	l698
 30659  005F38                     __end_of_Uart_WriteConstString:
 30660                           	opt stack 0
 30661                           tosu	equ	0xFFF
 30662                           tosh	equ	0xFFE
 30663                           tosl	equ	0xFFD
 30664                           pclath	equ	0xFFA
 30665                           tblptru	equ	0xFF8
 30666                           tblptrh	equ	0xFF7
 30667                           tblptrl	equ	0xFF6
 30668                           tablat	equ	0xFF5
 30669                           prodh	equ	0xFF4
 30670                           prodl	equ	0xFF3
 30671                           intcon	equ	0xFF2
 30672                           intcon2	equ	0xFF1
 30673                           intcon3	equ	0xFF0
 30674                           indf0	equ	0xFEF
 30675                           postinc0	equ	0xFEE
 30676                           plusw0	equ	0xFEB
 30677                           fsr0h	equ	0xFEA
 30678                           fsr0l	equ	0xFE9
 30679                           wreg	equ	0xFE8
 30680                           indf1	equ	0xFE7
 30681                           postinc1	equ	0xFE6
 30682                           postdec1	equ	0xFE5
 30683                           plusw1	equ	0xFE3
 30684                           fsr1h	equ	0xFE2
 30685                           fsr1l	equ	0xFE1
 30686                           indf2	equ	0xFDF
 30687                           postinc2	equ	0xFDE
 30688                           postdec2	equ	0xFDD
 30689                           plusw2	equ	0xFDB
 30690                           fsr2h	equ	0xFDA
 30691                           fsr2l	equ	0xFD9
 30692                           status	equ	0xFD8
 30693                           
 30694 ;; *************** function _UartWriteByte *****************
 30695 ;; Defined at:
 30696 ;;		line 173 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 30697 ;; Parameters:    Size  Location     Type
 30698 ;;  Module          1    wreg     unsigned char 
 30699 ;;  ByteToWrite     1   29[BANK0 ] unsigned char 
 30700 ;; Auto vars:     Size  Location     Type
 30701 ;;  Module          1   30[BANK0 ] unsigned char 
 30702 ;; Return value:  Size  Location     Type
 30703 ;;                  1    wreg      void 
 30704 ;; Registers used:
 30705 ;;		wreg, status,2, status,0
 30706 ;; Tracked objects:
 30707 ;;		On entry : 0/0
 30708 ;;		On exit  : 0/0
 30709 ;;		Unchanged: 0/0
 30710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30711 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30712 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30714 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30715 ;;Total ram usage:        2 bytes
 30716 ;; Hardware stack levels used:    1
 30717 ;; Hardware stack levels required when called:   11
 30718 ;; This function calls:
 30719 ;;		Nothing
 30720 ;; This function is called by:
 30721 ;;		_Uart_WriteConstString
 30722 ;;		_Uart_WriteString
 30723 ;;		_Uart_WriteStringLen
 30724 ;; This function uses a non-reentrant model
 30725 ;;
 30726                           
 30727                           	psect	text138
 30728  0065D2                     __ptext138:
 30729                           	opt stack 0
 30730  0065D2                     _UartWriteByte:
 30731                           	opt stack 12
 30732                           
 30733                           ;incstack = 0
 30734                           ;UartWriteByte@Module stored from wreg
 30735  0065D2  0100               	movlb	0	; () banked
 30736  0065D4  6F7E               	movwf	UartWriteByte@Module& (0+255),b
 30737                           
 30738                           ;uart_drv.c: 175: if (Module == ((UINT8)(1)))
 30739  0065D6  0100               	movlb	0	; () banked
 30740  0065D8  057E               	decf	UartWriteByte@Module& (0+255),w,b
 30741  0065DA  A4D8               	btfss	status,2,c
 30742  0065DC  D003               	goto	l639
 30743                           
 30744                           ; BSR set to: 0
 30745                           ;uart_drv.c: 176: {
 30746                           ;uart_drv.c: 178: TXREG1 = ByteToWrite;
 30747  0065DE  C07D  FFAE         	movff	UartWriteByte@ByteToWrite,4014	;volatile
 30748                           
 30749                           ;uart_drv.c: 179: }
 30750  0065E2  0012               	return	
 30751  0065E4                     l639:
 30752                           
 30753                           ; BSR set to: 0
 30754                           ;uart_drv.c: 180: else if (Module == ((UINT8)(2)))
 30755                           
 30756                           ; BSR set to: 0
 30757  0065E4  0E02               	movlw	2
 30758  0065E6  197E               	xorwf	UartWriteByte@Module& (0+255),w,b
 30759  0065E8  A4D8               	btfss	status,2,c
 30760  0065EA  0012               	return	
 30761                           
 30762                           ; BSR set to: 0
 30763                           ;uart_drv.c: 181: {
 30764                           ;uart_drv.c: 183: TXREG2 = ByteToWrite;
 30765  0065EC  C07D  FFA9         	movff	UartWriteByte@ByteToWrite,4009	;volatile
 30766                           
 30767                           ; BSR set to: 0
 30768  0065F0  0012               	return	
 30769  0065F2                     __end_of_UartWriteByte:
 30770                           	opt stack 0
 30771                           tosu	equ	0xFFF
 30772                           tosh	equ	0xFFE
 30773                           tosl	equ	0xFFD
 30774                           pclath	equ	0xFFA
 30775                           tblptru	equ	0xFF8
 30776                           tblptrh	equ	0xFF7
 30777                           tblptrl	equ	0xFF6
 30778                           tablat	equ	0xFF5
 30779                           prodh	equ	0xFF4
 30780                           prodl	equ	0xFF3
 30781                           intcon	equ	0xFF2
 30782                           intcon2	equ	0xFF1
 30783                           intcon3	equ	0xFF0
 30784                           indf0	equ	0xFEF
 30785                           postinc0	equ	0xFEE
 30786                           plusw0	equ	0xFEB
 30787                           fsr0h	equ	0xFEA
 30788                           fsr0l	equ	0xFE9
 30789                           wreg	equ	0xFE8
 30790                           indf1	equ	0xFE7
 30791                           postinc1	equ	0xFE6
 30792                           postdec1	equ	0xFE5
 30793                           plusw1	equ	0xFE3
 30794                           fsr1h	equ	0xFE2
 30795                           fsr1l	equ	0xFE1
 30796                           indf2	equ	0xFDF
 30797                           postinc2	equ	0xFDE
 30798                           postdec2	equ	0xFDD
 30799                           plusw2	equ	0xFDB
 30800                           fsr2h	equ	0xFDA
 30801                           fsr2l	equ	0xFD9
 30802                           status	equ	0xFD8
 30803                           
 30804 ;; *************** function _UartTxBufferStatus *****************
 30805 ;; Defined at:
 30806 ;;		line 223 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 30807 ;; Parameters:    Size  Location     Type
 30808 ;;  Module          1    wreg     unsigned char 
 30809 ;; Auto vars:     Size  Location     Type
 30810 ;;  Module          1   30[BANK0 ] unsigned char 
 30811 ;;  TxBufferStat    1   31[BANK0 ] enum E9033
 30812 ;; Return value:  Size  Location     Type
 30813 ;;                  1    wreg      enum E9033
 30814 ;; Registers used:
 30815 ;;		wreg, status,2, status,0
 30816 ;; Tracked objects:
 30817 ;;		On entry : 0/0
 30818 ;;		On exit  : 0/0
 30819 ;;		Unchanged: 0/0
 30820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30821 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30822 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30823 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30824 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30825 ;;Total ram usage:        3 bytes
 30826 ;; Hardware stack levels used:    1
 30827 ;; Hardware stack levels required when called:   11
 30828 ;; This function calls:
 30829 ;;		Nothing
 30830 ;; This function is called by:
 30831 ;;		_Uart_WriteConstString
 30832 ;;		_Uart_WriteString
 30833 ;;		_Uart_WriteStringLen
 30834 ;; This function uses a non-reentrant model
 30835 ;;
 30836                           
 30837                           	psect	text139
 30838  005B90                     __ptext139:
 30839                           	opt stack 0
 30840  005B90                     _UartTxBufferStatus:
 30841                           	opt stack 12
 30842                           
 30843                           ; BSR set to: 0
 30844                           ;incstack = 0
 30845                           ;UartTxBufferStatus@Module stored from wreg
 30846  005B90  0100               	movlb	0	; () banked
 30847  005B92  6F7E               	movwf	UartTxBufferStatus@Module& (0+255),b
 30848                           
 30849                           ;uart_drv.c: 225: TxBufferStatusType TxBufferStatus = TxBufferNotFull;
 30850  005B94  0E00               	movlw	0
 30851  005B96  0100               	movlb	0	; () banked
 30852  005B98  6F7F               	movwf	UartTxBufferStatus@TxBufferStatus& (0+255),b
 30853                           
 30854                           ; BSR set to: 0
 30855                           ;uart_drv.c: 227: if (Module == ((UINT8)(1)))
 30856  005B9A  057E               	decf	UartTxBufferStatus@Module& (0+255),w,b
 30857  005B9C  A4D8               	btfss	status,2,c
 30858  005B9E  D00B               	goto	l651
 30859                           
 30860                           ; BSR set to: 0
 30861                           ;uart_drv.c: 228: {
 30862                           ;uart_drv.c: 230: if (((TXSTA1 >> ((UINT8)(1))) & ((UINT8)(0x01))) == ((UINT8)(0)))
 30863  005BA0  CFAD F07D          	movff	4013,??_UartTxBufferStatus	;volatile
 30864  005BA4  90D8               	bcf	status,0,c
 30865  005BA6  337D               	rrcf	??_UartTxBufferStatus& (0+255),f,b
 30866  005BA8  B17D               	btfsc	??_UartTxBufferStatus& (0+255),0,b
 30867  005BAA  D002               	goto	l652
 30868  005BAC                     u11340:
 30869                           
 30870                           ; BSR set to: 0
 30871                           ;uart_drv.c: 231: {
 30872                           ;uart_drv.c: 232: TxBufferStatus = TxBufferFull;
 30873  005BAC  0E01               	movlw	1
 30874  005BAE  D014               	goto	L51
 30875  005BB0                     l652:
 30876                           
 30877                           ; BSR set to: 0
 30878                           ;uart_drv.c: 234: else if (((TXSTA1 >> ((UINT8)(1))) & ((UINT8)(0x01))) == ((UINT8)(1)))
 30879                           
 30880                           ; BSR set to: 0
 30881  005BB0  CFAD F07D          	movff	4013,??_UartTxBufferStatus	;volatile
 30882  005BB4  D00C               	goto	L80
 30883  005BB6                     l651:
 30884                           
 30885                           ; BSR set to: 0
 30886                           ;uart_drv.c: 243: else if (Module == ((UINT8)(2)))
 30887                           
 30888                           ; BSR set to: 0
 30889  005BB6  0E02               	movlw	2
 30890  005BB8  197E               	xorwf	UartTxBufferStatus@Module& (0+255),w,b
 30891  005BBA  A4D8               	btfss	status,2,c
 30892  005BBC  D00E               	goto	l660
 30893                           
 30894                           ; BSR set to: 0
 30895                           ;uart_drv.c: 244: {
 30896                           ;uart_drv.c: 246: if (((TXSTA2 >> ((UINT8)(1))) & ((UINT8)(0x01))) == ((UINT8)(0)))
 30897  005BBE  CFA8 F07D          	movff	4008,??_UartTxBufferStatus	;volatile
 30898  005BC2  90D8               	bcf	status,0,c
 30899  005BC4  337D               	rrcf	??_UartTxBufferStatus& (0+255),f,b
 30900  005BC6  A17D               	btfss	??_UartTxBufferStatus& (0+255),0,b
 30901  005BC8  D7F1               	goto	u11340
 30902                           
 30903                           ; BSR set to: 0
 30904                           ;uart_drv.c: 250: else if (((TXSTA2 >> ((UINT8)(1))) & ((UINT8)(0x01))) == ((UINT8)(1)))
 30905                           
 30906                           ; BSR set to: 0
 30907                           
 30908                           ;uart_drv.c: 249: }
 30909                           
 30910                           ; BSR set to: 0
 30911                           ;uart_drv.c: 247: {
 30912                           ;uart_drv.c: 248: TxBufferStatus = TxBufferFull;
 30913  005BCA  CFA8 F07D          	movff	4008,??_UartTxBufferStatus	;volatile
 30914  005BCE                     L80:
 30915  005BCE  90D8               	bcf	status,0,c
 30916  005BD0  337D               	rrcf	??_UartTxBufferStatus& (0+255),f,b
 30917  005BD2  A17D               	btfss	??_UartTxBufferStatus& (0+255),0,b
 30918  005BD4  D002               	goto	l660
 30919                           
 30920                           ; BSR set to: 0
 30921                           ;uart_drv.c: 251: {
 30922                           ;uart_drv.c: 252: TxBufferStatus = TxBufferEmpty;
 30923  005BD6  0E02               	movlw	2
 30924  005BD8                     L51:
 30925  005BD8  6F7F               	movwf	UartTxBufferStatus@TxBufferStatus& (0+255),b
 30926  005BDA                     l660:
 30927                           
 30928                           ; BSR set to: 0
 30929                           ;uart_drv.c: 257: }
 30930                           ;uart_drv.c: 258: }
 30931                           ;uart_drv.c: 260: return TxBufferStatus;
 30932                           
 30933                           ; BSR set to: 0
 30934                           
 30935                           ; BSR set to: 0
 30936                           
 30937                           ; BSR set to: 0
 30938                           
 30939                           ; BSR set to: 0
 30940                           
 30941                           ;uart_drv.c: 254: else
 30942                           ;uart_drv.c: 255: {
 30943                           
 30944                           ; BSR set to: 0
 30945  005BDA  517F               	movf	UartTxBufferStatus@TxBufferStatus& (0+255),w,b
 30946  005BDC  0012               	return	
 30947  005BDE                     __end_of_UartTxBufferStatus:
 30948                           	opt stack 0
 30949                           tosu	equ	0xFFF
 30950                           tosh	equ	0xFFE
 30951                           tosl	equ	0xFFD
 30952                           pclath	equ	0xFFA
 30953                           tblptru	equ	0xFF8
 30954                           tblptrh	equ	0xFF7
 30955                           tblptrl	equ	0xFF6
 30956                           tablat	equ	0xFF5
 30957                           prodh	equ	0xFF4
 30958                           prodl	equ	0xFF3
 30959                           intcon	equ	0xFF2
 30960                           intcon2	equ	0xFF1
 30961                           intcon3	equ	0xFF0
 30962                           indf0	equ	0xFEF
 30963                           postinc0	equ	0xFEE
 30964                           plusw0	equ	0xFEB
 30965                           fsr0h	equ	0xFEA
 30966                           fsr0l	equ	0xFE9
 30967                           wreg	equ	0xFE8
 30968                           indf1	equ	0xFE7
 30969                           postinc1	equ	0xFE6
 30970                           postdec1	equ	0xFE5
 30971                           plusw1	equ	0xFE3
 30972                           fsr1h	equ	0xFE2
 30973                           fsr1l	equ	0xFE1
 30974                           indf2	equ	0xFDF
 30975                           postinc2	equ	0xFDE
 30976                           postdec2	equ	0xFDD
 30977                           plusw2	equ	0xFDB
 30978                           fsr2h	equ	0xFDA
 30979                           fsr2l	equ	0xFD9
 30980                           status	equ	0xFD8
 30981                           
 30982 ;; *************** function _StringCopy *****************
 30983 ;; Defined at:
 30984 ;;		line 104 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/sf.c"
 30985 ;; Parameters:    Size  Location     Type
 30986 ;;  SourceStr       2   29[BANK0 ] PTR unsigned char 
 30987 ;;		 -> memorizedNumbersCount(1), memoryPreamble(5), MyApp_Task@emptyNumber(13), RAM(3775), 
 30988 ;;		 -> STR_15(20), STR_9(21), MessageText(50), PhoneNumber(20), 
 30989 ;;		 -> STR_5(10), Mdm_SmsRx.HeaderBuffer(80), Mdm_SmsRx(102), callerNumber(13), 
 30990 ;;		 -> RxBuffer(400), 
 30991 ;;  DestStr         2   31[BANK0 ] PTR unsigned char 
 30992 ;;		 -> smsText(20), EepromBuffer(15), HttpGetMethod@UartMessage(200), InitGprsNetwork@UartMessage(50), 
 30993 ;;		 -> MessageText(50), PhoneNumber(20), SendSmsSm@UartMessage(50), Mdm_SmsRx(102), 
 30994 ;;		 -> callerNumber(13), 
 30995 ;;  Len             2   33[BANK0 ] unsigned short 
 30996 ;; Auto vars:     Size  Location     Type
 30997 ;;  Index           2   37[BANK0 ] unsigned short 
 30998 ;; Return value:  Size  Location     Type
 30999 ;;                  1    wreg      void 
 31000 ;; Registers used:
 31001 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 31002 ;; Tracked objects:
 31003 ;;		On entry : 0/0
 31004 ;;		On exit  : 0/0
 31005 ;;		Unchanged: 0/0
 31006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31007 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31008 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31009 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31010 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31011 ;;Total ram usage:       10 bytes
 31012 ;; Hardware stack levels used:    1
 31013 ;; Hardware stack levels required when called:   11
 31014 ;; This function calls:
 31015 ;;		Nothing
 31016 ;; This function is called by:
 31017 ;;		_ModemEvtParser
 31018 ;;		_GetSmsSm
 31019 ;;		_SendSmsSm
 31020 ;;		_Mdm_GetSmsData
 31021 ;;		_InitGprsNetwork
 31022 ;;		_HttpGetMethod
 31023 ;;		_Eeprom_Write
 31024 ;;		_Mdm_SendSmsData
 31025 ;; This function uses a non-reentrant model
 31026 ;;
 31027                           
 31028                           	psect	text140
 31029  005530                     __ptext140:
 31030                           	opt stack 0
 31031  005530                     _StringCopy:
 31032                           	opt stack 14
 31033                           
 31034                           ;sf.c: 106: UINT16 Index = 0;
 31035                           
 31036                           ; BSR set to: 0
 31037                           ;incstack = 0
 31038  005530  0E00               	movlw	0
 31039  005532  0100               	movlb	0	; () banked
 31040  005534  6F86               	movwf	(StringCopy@Index+1)& (0+255),b
 31041  005536  0E00               	movlw	0
 31042  005538  6F85               	movwf	StringCopy@Index& (0+255),b
 31043                           
 31044                           ;sf.c: 109: for (Index = 0; Index < Len; Index++)
 31045  00553A  0E00               	movlw	0
 31046  00553C  6F86               	movwf	(StringCopy@Index+1)& (0+255),b
 31047  00553E  0E00               	movlw	0
 31048  005540  6F85               	movwf	StringCopy@Index& (0+255),b
 31049  005542  D020               	goto	l2244
 31050  005544                     
 31051                           ; BSR set to: 0
 31052                           ;sf.c: 110: {
 31053                           ;sf.c: 111: DestStr[Index] = SourceStr[Index];
 31054                           
 31055                           ; BSR set to: 0
 31056  005544  5185               	movf	StringCopy@Index& (0+255),w,b
 31057  005546  257D               	addwf	StringCopy@SourceStr& (0+255),w,b
 31058  005548  6F83               	movwf	??_StringCopy& (0+255),b
 31059  00554A  5186               	movf	(StringCopy@Index+1)& (0+255),w,b
 31060  00554C  217E               	addwfc	(StringCopy@SourceStr+1)& (0+255),w,b
 31061  00554E  6F84               	movwf	(??_StringCopy+1)& (0+255),b
 31062  005550  C083  FFF6         	movff	??_StringCopy,tblptrl
 31063  005554  C084  FFF7         	movff	??_StringCopy+1,tblptrh
 31064  005558  6AF8               	clrf	tblptru,c
 31065  00555A  5185               	movf	StringCopy@Index& (0+255),w,b
 31066  00555C  257F               	addwf	StringCopy@DestStr& (0+255),w,b
 31067  00555E  6ED9               	movwf	fsr2l,c
 31068  005560  5186               	movf	(StringCopy@Index+1)& (0+255),w,b
 31069  005562  2180               	addwfc	(StringCopy@DestStr+1)& (0+255),w,b
 31070  005564  6EDA               	movwf	fsr2h,c
 31071  005566  0E0E               	movlw	(high __ramtop+-1)
 31072  005568  64F7               	cpfsgt	tblptrh,c
 31073  00556A  D003               	bra	u12457
 31074  00556C  0008               	tblrd		*
 31075  00556E  50F5               	movf	tablat,w,c
 31076  005570  D005               	bra	u12450
 31077  005572                     u12457:
 31078  005572  CFF6 FFE9          	movff	tblptrl,fsr0l
 31079  005576  CFF7 FFEA          	movff	tblptrh,fsr0h
 31080  00557A  50EF               	movf	indf0,w,c
 31081  00557C                     u12450:
 31082  00557C  6EDF               	movwf	indf2,c
 31083  00557E  0100               	movlb	0	; () banked
 31084  005580  4B85               	infsnz	StringCopy@Index& (0+255),f,b
 31085  005582  2B86               	incf	(StringCopy@Index+1)& (0+255),f,b
 31086  005584                     l2244:
 31087                           
 31088                           ; BSR set to: 0
 31089                           
 31090                           ; BSR set to: 0
 31091  005584  5181               	movf	StringCopy@Len& (0+255),w,b
 31092  005586  5D85               	subwf	StringCopy@Index& (0+255),w,b
 31093  005588  5182               	movf	(StringCopy@Len+1)& (0+255),w,b
 31094  00558A  5986               	subwfb	(StringCopy@Index+1)& (0+255),w,b
 31095  00558C  B0D8               	btfsc	status,0,c
 31096  00558E  0012               	return	
 31097  005590  D7D9               	goto	l2245
 31098  005592                     __end_of_StringCopy:
 31099                           	opt stack 0
 31100                           tosu	equ	0xFFF
 31101                           tosh	equ	0xFFE
 31102                           tosl	equ	0xFFD
 31103                           pclath	equ	0xFFA
 31104                           tblptru	equ	0xFF8
 31105                           tblptrh	equ	0xFF7
 31106                           tblptrl	equ	0xFF6
 31107                           tablat	equ	0xFF5
 31108                           prodh	equ	0xFF4
 31109                           prodl	equ	0xFF3
 31110                           intcon	equ	0xFF2
 31111                           intcon2	equ	0xFF1
 31112                           intcon3	equ	0xFF0
 31113                           indf0	equ	0xFEF
 31114                           postinc0	equ	0xFEE
 31115                           plusw0	equ	0xFEB
 31116                           fsr0h	equ	0xFEA
 31117                           fsr0l	equ	0xFE9
 31118                           wreg	equ	0xFE8
 31119                           indf1	equ	0xFE7
 31120                           postinc1	equ	0xFE6
 31121                           postdec1	equ	0xFE5
 31122                           plusw1	equ	0xFE3
 31123                           fsr1h	equ	0xFE2
 31124                           fsr1l	equ	0xFE1
 31125                           indf2	equ	0xFDF
 31126                           postinc2	equ	0xFDE
 31127                           postdec2	equ	0xFDD
 31128                           plusw2	equ	0xFDB
 31129                           fsr2h	equ	0xFDA
 31130                           fsr2l	equ	0xFD9
 31131                           status	equ	0xFD8
 31132                           
 31133 ;; *************** function _OsTmr_StartTimer *****************
 31134 ;; Defined at:
 31135 ;;		line 118 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 31136 ;; Parameters:    Size  Location     Type
 31137 ;;  Timer           2   33[BANK0 ] PTR struct _SwTimerType
 31138 ;;		 -> Term_MainSm@TermDelay(11), Terminal@SwTimer(11), I2cSlv_QueryI2cData@TimeoutTimer(11), I2cSlv_QueryI2cData@Query
      +Timer(11), 
 31139 ;;		 -> ConnWait(11), ConnTimeout(11), SendSmsSm@SwTimer(11), CheckModem@Timeout(11), 
 31140 ;;  Timeout         4   35[BANK0 ] unsigned long 
 31141 ;; Auto vars:     Size  Location     Type
 31142 ;;		None
 31143 ;; Return value:  Size  Location     Type
 31144 ;;                  1    wreg      void 
 31145 ;; Registers used:
 31146 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 31147 ;; Tracked objects:
 31148 ;;		On entry : 0/0
 31149 ;;		On exit  : 0/0
 31150 ;;		Unchanged: 0/0
 31151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31152 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31153 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31155 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31156 ;;Total ram usage:        6 bytes
 31157 ;; Hardware stack levels used:    1
 31158 ;; Hardware stack levels required when called:   12
 31159 ;; This function calls:
 31160 ;;		_GetOsTickCounter
 31161 ;; This function is called by:
 31162 ;;		_OsTmr_Wait
 31163 ;;		_CheckModem
 31164 ;;		_SendSmsSm
 31165 ;;		_InitGprsNetwork
 31166 ;;		_HttpGetMethod
 31167 ;;		_I2cSlv_QueryI2cData
 31168 ;;		_Term_MainSm
 31169 ;; This function uses a non-reentrant model
 31170 ;;
 31171                           
 31172                           	psect	text141
 31173  0055F0                     __ptext141:
 31174                           	opt stack 0
 31175  0055F0                     _OsTmr_StartTimer:
 31176                           	opt stack 12
 31177                           
 31178                           ;os_timers.c: 121: Timer->Status = SwTmrNotExpired;
 31179                           
 31180                           ; BSR set to: 0
 31181                           ;incstack = 0
 31182  0055F0  0100               	movlb	0	; () banked
 31183  0055F2  EE20 F001          	lfsr	2,1
 31184  0055F6  5181               	movf	OsTmr_StartTimer@Timer& (0+255),w,b
 31185  0055F8  26D9               	addwf	fsr2l,f,c
 31186  0055FA  5182               	movf	(OsTmr_StartTimer@Timer+1)& (0+255),w,b
 31187  0055FC  22DA               	addwfc	fsr2h,f,c
 31188  0055FE  0E00               	movlw	0
 31189  005600  6EDF               	movwf	indf2,c
 31190                           
 31191                           ; BSR set to: 0
 31192                           ;os_timers.c: 123: Timer->StartTime = GetOsTickCounter();
 31193  005602  ECD3  F033         	call	_GetOsTickCounter	;wreg free
 31194  005606  0100               	movlb	0	; () banked
 31195  005608  EE20 F002          	lfsr	2,2
 31196  00560C  5181               	movf	OsTmr_StartTimer@Timer& (0+255),w,b
 31197  00560E  26D9               	addwf	fsr2l,f,c
 31198  005610  5182               	movf	(OsTmr_StartTimer@Timer+1)& (0+255),w,b
 31199  005612  22DA               	addwfc	fsr2h,f,c
 31200  005614  C07D  FFDE         	movff	?_GetOsTickCounter,postinc2
 31201  005618  C07E  FFDE         	movff	?_GetOsTickCounter+1,postinc2
 31202  00561C  C07F  FFDE         	movff	?_GetOsTickCounter+2,postinc2
 31203  005620  C080  FFDE         	movff	?_GetOsTickCounter+3,postinc2
 31204                           
 31205                           ; BSR set to: 0
 31206                           ;os_timers.c: 125: Timer->TargetTime = Timeout;
 31207  005624  EE20 F006          	lfsr	2,6
 31208  005628  5181               	movf	OsTmr_StartTimer@Timer& (0+255),w,b
 31209  00562A  26D9               	addwf	fsr2l,f,c
 31210  00562C  5182               	movf	(OsTmr_StartTimer@Timer+1)& (0+255),w,b
 31211  00562E  22DA               	addwfc	fsr2h,f,c
 31212  005630  C083  FFDE         	movff	OsTmr_StartTimer@Timeout,postinc2
 31213  005634  C084  FFDE         	movff	OsTmr_StartTimer@Timeout+1,postinc2
 31214  005638  C085  FFDE         	movff	OsTmr_StartTimer@Timeout+2,postinc2
 31215  00563C  C086  FFDE         	movff	OsTmr_StartTimer@Timeout+3,postinc2
 31216                           
 31217                           ; BSR set to: 0
 31218                           ;os_timers.c: 127: Timer->Enabled = 1u;
 31219  005640  C081  FFD9         	movff	OsTmr_StartTimer@Timer,fsr2l
 31220  005644  C082  FFDA         	movff	OsTmr_StartTimer@Timer+1,fsr2h
 31221  005648  0E01               	movlw	1
 31222  00564A  6EDF               	movwf	indf2,c
 31223                           
 31224                           ; BSR set to: 0
 31225  00564C  0012               	return		;funcret
 31226  00564E                     __end_of_OsTmr_StartTimer:
 31227                           	opt stack 0
 31228                           tosu	equ	0xFFF
 31229                           tosh	equ	0xFFE
 31230                           tosl	equ	0xFFD
 31231                           pclath	equ	0xFFA
 31232                           tblptru	equ	0xFF8
 31233                           tblptrh	equ	0xFF7
 31234                           tblptrl	equ	0xFF6
 31235                           tablat	equ	0xFF5
 31236                           prodh	equ	0xFF4
 31237                           prodl	equ	0xFF3
 31238                           intcon	equ	0xFF2
 31239                           intcon2	equ	0xFF1
 31240                           intcon3	equ	0xFF0
 31241                           indf0	equ	0xFEF
 31242                           postinc0	equ	0xFEE
 31243                           plusw0	equ	0xFEB
 31244                           fsr0h	equ	0xFEA
 31245                           fsr0l	equ	0xFE9
 31246                           wreg	equ	0xFE8
 31247                           indf1	equ	0xFE7
 31248                           postinc1	equ	0xFE6
 31249                           postdec1	equ	0xFE5
 31250                           plusw1	equ	0xFE3
 31251                           fsr1h	equ	0xFE2
 31252                           fsr1l	equ	0xFE1
 31253                           indf2	equ	0xFDF
 31254                           postinc2	equ	0xFDE
 31255                           postdec2	equ	0xFDD
 31256                           plusw2	equ	0xFDB
 31257                           fsr2h	equ	0xFDA
 31258                           fsr2l	equ	0xFD9
 31259                           status	equ	0xFD8
 31260                           
 31261 ;; *************** function _OsTmr_GetTimerStatus *****************
 31262 ;; Defined at:
 31263 ;;		line 193 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 31264 ;; Parameters:    Size  Location     Type
 31265 ;;  Timer           2   53[BANK0 ] PTR struct _SwTimerType
 31266 ;;		 -> Term_MainSm@TermDelay(11), Terminal@SwTimer(11), I2cSlv_QueryI2cData@TimeoutTimer(11), I2cSlv_QueryI2cData@Query
      +Timer(11), 
 31267 ;;		 -> ConnWait(11), ConnTimeout(11), SendSmsSm@SwTimer(11), CheckModem@Timeout(11), 
 31268 ;; Auto vars:     Size  Location     Type
 31269 ;;		None
 31270 ;; Return value:  Size  Location     Type
 31271 ;;                  1    wreg      enum E7740
 31272 ;; Registers used:
 31273 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 31274 ;; Tracked objects:
 31275 ;;		On entry : 0/0
 31276 ;;		On exit  : 0/0
 31277 ;;		Unchanged: 0/0
 31278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31279 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31281 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31282 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31283 ;;Total ram usage:        6 bytes
 31284 ;; Hardware stack levels used:    1
 31285 ;; Hardware stack levels required when called:   13
 31286 ;; This function calls:
 31287 ;;		_GetElapsedTime
 31288 ;; This function is called by:
 31289 ;;		_OsTmr_Wait
 31290 ;;		_CheckModem
 31291 ;;		_SendSmsSm
 31292 ;;		_InitGprsNetwork
 31293 ;;		_HttpGetMethod
 31294 ;;		_I2cSlv_QueryI2cData
 31295 ;;		_Term_MainSm
 31296 ;; This function uses a non-reentrant model
 31297 ;;
 31298                           
 31299                           	psect	text142
 31300  004CB8                     __ptext142:
 31301                           	opt stack 0
 31302  004CB8                     _OsTmr_GetTimerStatus:
 31303                           	opt stack 11
 31304                           
 31305                           ;os_timers.c: 196: if (Timer->Enabled == 1u)
 31306                           
 31307                           ; BSR set to: 0
 31308                           ;incstack = 0
 31309  004CB8  C095  FFD9         	movff	OsTmr_GetTimerStatus@Timer,fsr2l
 31310  004CBC  C096  FFDA         	movff	OsTmr_GetTimerStatus@Timer+1,fsr2h
 31311  004CC0  04DE               	decf	postinc2,w,c
 31312  004CC2  A4D8               	btfss	status,2,c
 31313  004CC4  D030               	goto	l864
 31314                           
 31315                           ;os_timers.c: 197: {
 31316                           ;os_timers.c: 199: if (GetElapsedTime(Timer->StartTime) >= Timer->TargetTime)
 31317  004CC6  0100               	movlb	0	; () banked
 31318  004CC8  EE20 F006          	lfsr	2,6
 31319  004CCC  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 31320  004CCE  26D9               	addwf	fsr2l,f,c
 31321  004CD0  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 31322  004CD2  22DA               	addwfc	fsr2h,f,c
 31323  004CD4  EE10 F002          	lfsr	1,2
 31324  004CD8  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 31325  004CDA  26E1               	addwf	fsr1l,f,c
 31326  004CDC  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 31327  004CDE  22E2               	addwfc	fsr1h,f,c
 31328  004CE0  CFE6 F081          	movff	postinc1,GetElapsedTime@StartTime
 31329  004CE4  CFE6 F082          	movff	postinc1,GetElapsedTime@StartTime+1
 31330  004CE8  CFE6 F083          	movff	postinc1,GetElapsedTime@StartTime+2
 31331  004CEC  CFE6 F084          	movff	postinc1,GetElapsedTime@StartTime+3
 31332  004CF0  EC69  F01F         	call	_GetElapsedTime	;wreg free
 31333  004CF4  50DE               	movf	postinc2,w,c
 31334  004CF6  0100               	movlb	0	; () banked
 31335  004CF8  5D81               	subwf	?_GetElapsedTime& (0+255),w,b
 31336  004CFA  50DE               	movf	postinc2,w,c
 31337  004CFC  5982               	subwfb	(?_GetElapsedTime+1)& (0+255),w,b
 31338  004CFE  50DE               	movf	postinc2,w,c
 31339  004D00  5983               	subwfb	(?_GetElapsedTime+2)& (0+255),w,b
 31340  004D02  50DE               	movf	postinc2,w,c
 31341  004D04  5984               	subwfb	(?_GetElapsedTime+3)& (0+255),w,b
 31342  004D06  A0D8               	btfss	status,0,c
 31343  004D08  D017               	goto	l867
 31344                           
 31345                           ; BSR set to: 0
 31346                           ;os_timers.c: 200: {
 31347                           ;os_timers.c: 202: Timer->Enabled = 0u;
 31348  004D0A  C095  FFD9         	movff	OsTmr_GetTimerStatus@Timer,fsr2l
 31349  004D0E  C096  FFDA         	movff	OsTmr_GetTimerStatus@Timer+1,fsr2h
 31350  004D12  0E00               	movlw	0
 31351  004D14  6EDF               	movwf	indf2,c
 31352                           
 31353                           ; BSR set to: 0
 31354                           ;os_timers.c: 204: Timer->Status = SwTimerExpired;
 31355  004D16  EE20 F001          	lfsr	2,1
 31356  004D1A  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 31357  004D1C  26D9               	addwf	fsr2l,f,c
 31358  004D1E  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 31359  004D20  22DA               	addwfc	fsr2h,f,c
 31360  004D22  0E01               	movlw	1
 31361  004D24  D008               	goto	L81
 31362  004D26                     l864:
 31363                           
 31364                           ;os_timers.c: 211: else
 31365                           ;os_timers.c: 212: {
 31366                           ;os_timers.c: 214: Timer->Status = SwTimerDisabled;
 31367                           
 31368                           ; BSR set to: 0
 31369  004D26  0100               	movlb	0	; () banked
 31370  004D28  EE20 F001          	lfsr	2,1
 31371  004D2C  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 31372  004D2E  26D9               	addwf	fsr2l,f,c
 31373  004D30  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 31374  004D32  22DA               	addwfc	fsr2h,f,c
 31375  004D34  0E02               	movlw	2
 31376  004D36                     L81:
 31377  004D36  6EDF               	movwf	indf2,c
 31378  004D38                     l867:
 31379                           
 31380                           ; BSR set to: 0
 31381                           ;os_timers.c: 215: }
 31382                           ;os_timers.c: 218: return Timer->Status;
 31383  004D38  EE20 F001          	lfsr	2,1
 31384  004D3C  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 31385  004D3E  26D9               	addwf	fsr2l,f,c
 31386  004D40  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 31387  004D42  22DA               	addwfc	fsr2h,f,c
 31388  004D44  50DF               	movf	indf2,w,c
 31389  004D46  0012               	return	
 31390  004D48                     __end_of_OsTmr_GetTimerStatus:
 31391                           	opt stack 0
 31392                           tosu	equ	0xFFF
 31393                           tosh	equ	0xFFE
 31394                           tosl	equ	0xFFD
 31395                           pclath	equ	0xFFA
 31396                           tblptru	equ	0xFF8
 31397                           tblptrh	equ	0xFF7
 31398                           tblptrl	equ	0xFF6
 31399                           tablat	equ	0xFF5
 31400                           prodh	equ	0xFF4
 31401                           prodl	equ	0xFF3
 31402                           intcon	equ	0xFF2
 31403                           intcon2	equ	0xFF1
 31404                           intcon3	equ	0xFF0
 31405                           indf0	equ	0xFEF
 31406                           postinc0	equ	0xFEE
 31407                           plusw0	equ	0xFEB
 31408                           fsr0h	equ	0xFEA
 31409                           fsr0l	equ	0xFE9
 31410                           wreg	equ	0xFE8
 31411                           indf1	equ	0xFE7
 31412                           postinc1	equ	0xFE6
 31413                           postdec1	equ	0xFE5
 31414                           plusw1	equ	0xFE3
 31415                           fsr1h	equ	0xFE2
 31416                           fsr1l	equ	0xFE1
 31417                           indf2	equ	0xFDF
 31418                           postinc2	equ	0xFDE
 31419                           postdec2	equ	0xFDD
 31420                           plusw2	equ	0xFDB
 31421                           fsr2h	equ	0xFDA
 31422                           fsr2l	equ	0xFD9
 31423                           status	equ	0xFD8
 31424                           
 31425 ;; *************** function _GetElapsedTime *****************
 31426 ;; Defined at:
 31427 ;;		line 84 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 31428 ;; Parameters:    Size  Location     Type
 31429 ;;  StartTime       4   33[BANK0 ] unsigned long 
 31430 ;; Auto vars:     Size  Location     Type
 31431 ;;  CurrentTimes    4   49[BANK0 ] unsigned long 
 31432 ;;  TimeValue       4   45[BANK0 ] unsigned long 
 31433 ;; Return value:  Size  Location     Type
 31434 ;;                  4   33[BANK0 ] unsigned long 
 31435 ;; Registers used:
 31436 ;;		wreg, status,2, status,0, cstack
 31437 ;; Tracked objects:
 31438 ;;		On entry : 0/0
 31439 ;;		On exit  : 0/0
 31440 ;;		Unchanged: 0/0
 31441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31442 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31443 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31444 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31445 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31446 ;;Total ram usage:       20 bytes
 31447 ;; Hardware stack levels used:    1
 31448 ;; Hardware stack levels required when called:   12
 31449 ;; This function calls:
 31450 ;;		_GetOsTickCounter
 31451 ;; This function is called by:
 31452 ;;		_OsTmr_GetTimerStatus
 31453 ;;		_OsTmr_GetRemainingTime
 31454 ;; This function uses a non-reentrant model
 31455 ;;
 31456                           
 31457                           	psect	text143
 31458  003ED2                     __ptext143:
 31459                           	opt stack 0
 31460  003ED2                     _GetElapsedTime:
 31461                           	opt stack 11
 31462                           
 31463                           ;os_timers.c: 86: UINT32 CurrentTimestamp;
 31464                           ;os_timers.c: 87: UINT32 TimeValue;
 31465                           ;os_timers.c: 90: CurrentTimestamp = GetOsTickCounter();
 31466                           
 31467                           ; BSR set to: 0
 31468                           ;incstack = 0
 31469  003ED2  ECD3  F033         	call	_GetOsTickCounter	;wreg free
 31470  003ED6  C07D  F091         	movff	?_GetOsTickCounter,GetElapsedTime@CurrentTimestamp
 31471  003EDA  C07E  F092         	movff	?_GetOsTickCounter+1,GetElapsedTime@CurrentTimestamp+1
 31472  003EDE  C07F  F093         	movff	?_GetOsTickCounter+2,GetElapsedTime@CurrentTimestamp+2
 31473  003EE2  C080  F094         	movff	?_GetOsTickCounter+3,GetElapsedTime@CurrentTimestamp+3
 31474                           
 31475                           ;os_timers.c: 93: if (CurrentTimestamp >= StartTime)
 31476  003EE6  0100               	movlb	0	; () banked
 31477  003EE8  5181               	movf	GetElapsedTime@StartTime& (0+255),w,b
 31478  003EEA  5D91               	subwf	GetElapsedTime@CurrentTimestamp& (0+255),w,b
 31479  003EEC  5182               	movf	(GetElapsedTime@StartTime+1)& (0+255),w,b
 31480  003EEE  5992               	subwfb	(GetElapsedTime@CurrentTimestamp+1)& (0+255),w,b
 31481  003EF0  5183               	movf	(GetElapsedTime@StartTime+2)& (0+255),w,b
 31482  003EF2  5993               	subwfb	(GetElapsedTime@CurrentTimestamp+2)& (0+255),w,b
 31483  003EF4  5184               	movf	(GetElapsedTime@StartTime+3)& (0+255),w,b
 31484  003EF6  5994               	subwfb	(GetElapsedTime@CurrentTimestamp+3)& (0+255),w,b
 31485  003EF8  A0D8               	btfss	status,0,c
 31486  003EFA  D01D               	goto	l844
 31487                           
 31488                           ; BSR set to: 0
 31489                           ;os_timers.c: 94: {
 31490                           ;os_timers.c: 95: TimeValue = (CurrentTimestamp - StartTime);
 31491  003EFC  C081  F085         	movff	GetElapsedTime@StartTime,??_GetElapsedTime
 31492  003F00  C082  F086         	movff	GetElapsedTime@StartTime+1,??_GetElapsedTime+1
 31493  003F04  C083  F087         	movff	GetElapsedTime@StartTime+2,??_GetElapsedTime+2
 31494  003F08  C084  F088         	movff	GetElapsedTime@StartTime+3,??_GetElapsedTime+3
 31495  003F0C  1F85               	comf	??_GetElapsedTime& (0+255),f,b
 31496  003F0E  1F86               	comf	(??_GetElapsedTime+1)& (0+255),f,b
 31497  003F10  1F87               	comf	(??_GetElapsedTime+2)& (0+255),f,b
 31498  003F12  1F88               	comf	(??_GetElapsedTime+3)& (0+255),f,b
 31499  003F14  2B85               	incf	??_GetElapsedTime& (0+255),f,b
 31500  003F16  0E00               	movlw	0
 31501  003F18  2386               	addwfc	(??_GetElapsedTime+1)& (0+255),f,b
 31502  003F1A  2387               	addwfc	(??_GetElapsedTime+2)& (0+255),f,b
 31503  003F1C  2388               	addwfc	(??_GetElapsedTime+3)& (0+255),f,b
 31504  003F1E  5191               	movf	GetElapsedTime@CurrentTimestamp& (0+255),w,b
 31505  003F20  2585               	addwf	??_GetElapsedTime& (0+255),w,b
 31506  003F22  6F8D               	movwf	GetElapsedTime@TimeValue& (0+255),b
 31507  003F24  5192               	movf	(GetElapsedTime@CurrentTimestamp+1)& (0+255),w,b
 31508  003F26  2186               	addwfc	(??_GetElapsedTime+1)& (0+255),w,b
 31509  003F28  6F8E               	movwf	(GetElapsedTime@TimeValue+1)& (0+255),b
 31510  003F2A  5193               	movf	(GetElapsedTime@CurrentTimestamp+2)& (0+255),w,b
 31511  003F2C  2187               	addwfc	(??_GetElapsedTime+2)& (0+255),w,b
 31512  003F2E  6F8F               	movwf	(GetElapsedTime@TimeValue+2)& (0+255),b
 31513  003F30  5194               	movf	(GetElapsedTime@CurrentTimestamp+3)& (0+255),w,b
 31514  003F32  2188               	addwfc	(??_GetElapsedTime+3)& (0+255),w,b
 31515  003F34  D028               	goto	L52
 31516  003F36                     l844:
 31517                           
 31518                           ; BSR set to: 0
 31519                           ;os_timers.c: 97: else
 31520                           ;os_timers.c: 98: {
 31521                           ;os_timers.c: 99: TimeValue = (CurrentTimestamp + 0xFFFFFFFF) - StartTime;
 31522                           
 31523                           ; BSR set to: 0
 31524  003F36  C081  F085         	movff	GetElapsedTime@StartTime,??_GetElapsedTime
 31525  003F3A  C082  F086         	movff	GetElapsedTime@StartTime+1,??_GetElapsedTime+1
 31526  003F3E  C083  F087         	movff	GetElapsedTime@StartTime+2,??_GetElapsedTime+2
 31527  003F42  C084  F088         	movff	GetElapsedTime@StartTime+3,??_GetElapsedTime+3
 31528  003F46  1F85               	comf	??_GetElapsedTime& (0+255),f,b
 31529  003F48  1F86               	comf	(??_GetElapsedTime+1)& (0+255),f,b
 31530  003F4A  1F87               	comf	(??_GetElapsedTime+2)& (0+255),f,b
 31531  003F4C  1F88               	comf	(??_GetElapsedTime+3)& (0+255),f,b
 31532  003F4E  2B85               	incf	??_GetElapsedTime& (0+255),f,b
 31533  003F50  0E00               	movlw	0
 31534  003F52  2386               	addwfc	(??_GetElapsedTime+1)& (0+255),f,b
 31535  003F54  2387               	addwfc	(??_GetElapsedTime+2)& (0+255),f,b
 31536  003F56  2388               	addwfc	(??_GetElapsedTime+3)& (0+255),f,b
 31537  003F58  5191               	movf	GetElapsedTime@CurrentTimestamp& (0+255),w,b
 31538  003F5A  2585               	addwf	??_GetElapsedTime& (0+255),w,b
 31539  003F5C  6F89               	movwf	(??_GetElapsedTime+4)& (0+255),b
 31540  003F5E  5192               	movf	(GetElapsedTime@CurrentTimestamp+1)& (0+255),w,b
 31541  003F60  2186               	addwfc	(??_GetElapsedTime+1)& (0+255),w,b
 31542  003F62  6F8A               	movwf	(??_GetElapsedTime+5)& (0+255),b
 31543  003F64  5193               	movf	(GetElapsedTime@CurrentTimestamp+2)& (0+255),w,b
 31544  003F66  2187               	addwfc	(??_GetElapsedTime+2)& (0+255),w,b
 31545  003F68  6F8B               	movwf	(??_GetElapsedTime+6)& (0+255),b
 31546  003F6A  5194               	movf	(GetElapsedTime@CurrentTimestamp+3)& (0+255),w,b
 31547  003F6C  2188               	addwfc	(??_GetElapsedTime+3)& (0+255),w,b
 31548  003F6E  6F8C               	movwf	(??_GetElapsedTime+7)& (0+255),b
 31549  003F70  0EFF               	movlw	255
 31550  003F72  2589               	addwf	(??_GetElapsedTime+4)& (0+255),w,b
 31551  003F74  6F8D               	movwf	GetElapsedTime@TimeValue& (0+255),b
 31552  003F76  0EFF               	movlw	255
 31553  003F78  218A               	addwfc	(??_GetElapsedTime+5)& (0+255),w,b
 31554  003F7A  6F8E               	movwf	(GetElapsedTime@TimeValue+1)& (0+255),b
 31555  003F7C  0EFF               	movlw	255
 31556  003F7E  218B               	addwfc	(??_GetElapsedTime+6)& (0+255),w,b
 31557  003F80  6F8F               	movwf	(GetElapsedTime@TimeValue+2)& (0+255),b
 31558  003F82  0EFF               	movlw	255
 31559  003F84  218C               	addwfc	(??_GetElapsedTime+7)& (0+255),w,b
 31560  003F86                     L52:
 31561  003F86  6F90               	movwf	(GetElapsedTime@TimeValue+3)& (0+255),b
 31562                           
 31563                           ; BSR set to: 0
 31564                           ;os_timers.c: 100: }
 31565                           ;os_timers.c: 102: return TimeValue;
 31566                           
 31567                           ; BSR set to: 0
 31568  003F88  C08D  F081         	movff	GetElapsedTime@TimeValue,?_GetElapsedTime
 31569  003F8C  C08E  F082         	movff	GetElapsedTime@TimeValue+1,?_GetElapsedTime+1
 31570  003F90  C08F  F083         	movff	GetElapsedTime@TimeValue+2,?_GetElapsedTime+2
 31571  003F94  C090  F084         	movff	GetElapsedTime@TimeValue+3,?_GetElapsedTime+3
 31572  003F98  0012               	return	
 31573  003F9A                     __end_of_GetElapsedTime:
 31574                           	opt stack 0
 31575                           tosu	equ	0xFFF
 31576                           tosh	equ	0xFFE
 31577                           tosl	equ	0xFFD
 31578                           pclath	equ	0xFFA
 31579                           tblptru	equ	0xFF8
 31580                           tblptrh	equ	0xFF7
 31581                           tblptrl	equ	0xFF6
 31582                           tablat	equ	0xFF5
 31583                           prodh	equ	0xFF4
 31584                           prodl	equ	0xFF3
 31585                           intcon	equ	0xFF2
 31586                           intcon2	equ	0xFF1
 31587                           intcon3	equ	0xFF0
 31588                           indf0	equ	0xFEF
 31589                           postinc0	equ	0xFEE
 31590                           plusw0	equ	0xFEB
 31591                           fsr0h	equ	0xFEA
 31592                           fsr0l	equ	0xFE9
 31593                           wreg	equ	0xFE8
 31594                           indf1	equ	0xFE7
 31595                           postinc1	equ	0xFE6
 31596                           postdec1	equ	0xFE5
 31597                           plusw1	equ	0xFE3
 31598                           fsr1h	equ	0xFE2
 31599                           fsr1l	equ	0xFE1
 31600                           indf2	equ	0xFDF
 31601                           postinc2	equ	0xFDE
 31602                           postdec2	equ	0xFDD
 31603                           plusw2	equ	0xFDB
 31604                           fsr2h	equ	0xFDA
 31605                           fsr2l	equ	0xFD9
 31606                           status	equ	0xFD8
 31607                           
 31608 ;; *************** function _GetOsTickCounter *****************
 31609 ;; Defined at:
 31610 ;;		line 70 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 31611 ;; Parameters:    Size  Location     Type
 31612 ;;		None
 31613 ;; Auto vars:     Size  Location     Type
 31614 ;;		None
 31615 ;; Return value:  Size  Location     Type
 31616 ;;                  4   29[BANK0 ] unsigned long 
 31617 ;; Registers used:
 31618 ;;		None
 31619 ;; Tracked objects:
 31620 ;;		On entry : 0/0
 31621 ;;		On exit  : 0/0
 31622 ;;		Unchanged: 0/0
 31623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31624 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31625 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31627 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31628 ;;Total ram usage:        4 bytes
 31629 ;; Hardware stack levels used:    1
 31630 ;; Hardware stack levels required when called:   11
 31631 ;; This function calls:
 31632 ;;		Nothing
 31633 ;; This function is called by:
 31634 ;;		_GetElapsedTime
 31635 ;;		_OsTmr_StartTimer
 31636 ;;		_OsTmr_GetElapsedTime
 31637 ;; This function uses a non-reentrant model
 31638 ;;
 31639                           
 31640                           	psect	text144
 31641  0067A6                     __ptext144:
 31642                           	opt stack 0
 31643  0067A6                     _GetOsTickCounter:
 31644                           	opt stack 12
 31645                           
 31646                           ;os_timers.c: 73: return OsTmr_OsTickCounter;
 31647                           
 31648                           ; BSR set to: 0
 31649                           ;incstack = 0
 31650  0067A6  C31C  F07D         	movff	_OsTmr_OsTickCounter,?_GetOsTickCounter
 31651  0067AA  C31D  F07E         	movff	_OsTmr_OsTickCounter+1,?_GetOsTickCounter+1
 31652  0067AE  C31E  F07F         	movff	_OsTmr_OsTickCounter+2,?_GetOsTickCounter+2
 31653  0067B2  C31F  F080         	movff	_OsTmr_OsTickCounter+3,?_GetOsTickCounter+3
 31654  0067B6  0012               	return		;funcret
 31655  0067B8                     __end_of_GetOsTickCounter:
 31656                           	opt stack 0
 31657                           tosu	equ	0xFFF
 31658                           tosh	equ	0xFFE
 31659                           tosl	equ	0xFFD
 31660                           pclath	equ	0xFFA
 31661                           tblptru	equ	0xFF8
 31662                           tblptrh	equ	0xFF7
 31663                           tblptrl	equ	0xFF6
 31664                           tablat	equ	0xFF5
 31665                           prodh	equ	0xFF4
 31666                           prodl	equ	0xFF3
 31667                           intcon	equ	0xFF2
 31668                           intcon2	equ	0xFF1
 31669                           intcon3	equ	0xFF0
 31670                           indf0	equ	0xFEF
 31671                           postinc0	equ	0xFEE
 31672                           plusw0	equ	0xFEB
 31673                           fsr0h	equ	0xFEA
 31674                           fsr0l	equ	0xFE9
 31675                           wreg	equ	0xFE8
 31676                           indf1	equ	0xFE7
 31677                           postinc1	equ	0xFE6
 31678                           postdec1	equ	0xFE5
 31679                           plusw1	equ	0xFE3
 31680                           fsr1h	equ	0xFE2
 31681                           fsr1l	equ	0xFE1
 31682                           indf2	equ	0xFDF
 31683                           postinc2	equ	0xFDE
 31684                           postdec2	equ	0xFDD
 31685                           plusw2	equ	0xFDB
 31686                           fsr2h	equ	0xFDA
 31687                           fsr2l	equ	0xFD9
 31688                           status	equ	0xFD8
 31689                           
 31690 ;; *************** function _ClearBuffer *****************
 31691 ;; Defined at:
 31692 ;;		line 124 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/sf.c"
 31693 ;; Parameters:    Size  Location     Type
 31694 ;;  Buffer          2   29[BANK0 ] PTR unsigned char 
 31695 ;;		 -> GsmGprsTerminal@UartBuffer(200), HttpGetMethod@UartMessage(200), InitGprsNetwork@UartMessage(50), Mdm_SmsRx(102)
      +, 
 31696 ;;		 -> callerNumber(13), RxBuffer(400), 
 31697 ;;  Len             2   31[BANK0 ] unsigned short 
 31698 ;; Auto vars:     Size  Location     Type
 31699 ;;  Index           2   33[BANK0 ] unsigned short 
 31700 ;; Return value:  Size  Location     Type
 31701 ;;                  1    wreg      void 
 31702 ;; Registers used:
 31703 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 31704 ;; Tracked objects:
 31705 ;;		On entry : 0/0
 31706 ;;		On exit  : 0/0
 31707 ;;		Unchanged: 0/0
 31708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31709 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31710 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31711 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31712 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31713 ;;Total ram usage:        6 bytes
 31714 ;; Hardware stack levels used:    1
 31715 ;; Hardware stack levels required when called:   11
 31716 ;; This function calls:
 31717 ;;		Nothing
 31718 ;; This function is called by:
 31719 ;;		_GetSmsSm
 31720 ;;		_GetCallerNumber
 31721 ;;		_InitGprsNetwork
 31722 ;;		_HttpGetMethod
 31723 ;;		_GsmGprsTerminal
 31724 ;; This function uses a non-reentrant model
 31725 ;;
 31726                           
 31727                           	psect	text145
 31728  006158                     __ptext145:
 31729                           	opt stack 0
 31730  006158                     _ClearBuffer:
 31731                           	opt stack 15
 31732                           
 31733                           ;sf.c: 126: UINT16 Index = 0;
 31734                           
 31735                           ;incstack = 0
 31736  006158  0E00               	movlw	0
 31737  00615A  0100               	movlb	0	; () banked
 31738  00615C  6F82               	movwf	(ClearBuffer@Index+1)& (0+255),b
 31739  00615E  0E00               	movlw	0
 31740  006160  6F81               	movwf	ClearBuffer@Index& (0+255),b
 31741                           
 31742                           ;sf.c: 129: for (Index = 0; Index <= Len; Index++)
 31743  006162  0E00               	movlw	0
 31744  006164  6F82               	movwf	(ClearBuffer@Index+1)& (0+255),b
 31745  006166  0E00               	movlw	0
 31746  006168  6F81               	movwf	ClearBuffer@Index& (0+255),b
 31747  00616A  D00A               	goto	l2250
 31748  00616C                     
 31749                           ; BSR set to: 0
 31750                           ;sf.c: 130: {
 31751                           ;sf.c: 131: *(Buffer + Index) = 0;
 31752                           
 31753                           ; BSR set to: 0
 31754  00616C  5181               	movf	ClearBuffer@Index& (0+255),w,b
 31755  00616E  257D               	addwf	ClearBuffer@Buffer& (0+255),w,b
 31756  006170  6ED9               	movwf	fsr2l,c
 31757  006172  5182               	movf	(ClearBuffer@Index+1)& (0+255),w,b
 31758  006174  217E               	addwfc	(ClearBuffer@Buffer+1)& (0+255),w,b
 31759  006176  6EDA               	movwf	fsr2h,c
 31760  006178  0E00               	movlw	0
 31761  00617A  6EDF               	movwf	indf2,c
 31762                           
 31763                           ; BSR set to: 0
 31764  00617C  4B81               	infsnz	ClearBuffer@Index& (0+255),f,b
 31765  00617E  2B82               	incf	(ClearBuffer@Index+1)& (0+255),f,b
 31766  006180                     l2250:
 31767                           
 31768                           ; BSR set to: 0
 31769                           
 31770                           ; BSR set to: 0
 31771  006180  5181               	movf	ClearBuffer@Index& (0+255),w,b
 31772  006182  5D7F               	subwf	ClearBuffer@Len& (0+255),w,b
 31773  006184  5182               	movf	(ClearBuffer@Index+1)& (0+255),w,b
 31774  006186  5980               	subwfb	(ClearBuffer@Len+1)& (0+255),w,b
 31775  006188  A0D8               	btfss	status,0,c
 31776  00618A  0012               	return	
 31777  00618C  D7EF               	goto	l2251
 31778  00618E                     __end_of_ClearBuffer:
 31779                           	opt stack 0
 31780                           tosu	equ	0xFFF
 31781                           tosh	equ	0xFFE
 31782                           tosl	equ	0xFFD
 31783                           pclath	equ	0xFFA
 31784                           tblptru	equ	0xFF8
 31785                           tblptrh	equ	0xFF7
 31786                           tblptrl	equ	0xFF6
 31787                           tablat	equ	0xFF5
 31788                           prodh	equ	0xFF4
 31789                           prodl	equ	0xFF3
 31790                           intcon	equ	0xFF2
 31791                           intcon2	equ	0xFF1
 31792                           intcon3	equ	0xFF0
 31793                           indf0	equ	0xFEF
 31794                           postinc0	equ	0xFEE
 31795                           plusw0	equ	0xFEB
 31796                           fsr0h	equ	0xFEA
 31797                           fsr0l	equ	0xFE9
 31798                           wreg	equ	0xFE8
 31799                           indf1	equ	0xFE7
 31800                           postinc1	equ	0xFE6
 31801                           postdec1	equ	0xFE5
 31802                           plusw1	equ	0xFE3
 31803                           fsr1h	equ	0xFE2
 31804                           fsr1l	equ	0xFE1
 31805                           indf2	equ	0xFDF
 31806                           postinc2	equ	0xFDE
 31807                           postdec2	equ	0xFDD
 31808                           plusw2	equ	0xFDB
 31809                           fsr2h	equ	0xFDA
 31810                           fsr2l	equ	0xFD9
 31811                           status	equ	0xFD8
 31812                           
 31813 ;; *************** function _LedStateMachine *****************
 31814 ;; Defined at:
 31815 ;;		line 235 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 31816 ;; Parameters:    Size  Location     Type
 31817 ;;  Led             1    wreg     unsigned char 
 31818 ;;  LedSts          2   47[BANK0 ] PTR enum E8950
 31819 ;;		 -> Led3Sts(1), Led2Sts(1), Led1Sts(1), 
 31820 ;;  LedOut          2   49[BANK0 ] PTR unsigned char 
 31821 ;;		 -> Led3OutSts(1), Led2OutSts(1), Led1OutSts(1), 
 31822 ;;  LedBlink        2   51[BANK0 ] PTR struct _LedBlinkType
 31823 ;;		 -> Led3Blink(9), Led2Blink(9), Led1Blink(9), 
 31824 ;;  LedPulse        2   53[BANK0 ] PTR struct _LedPulseType
 31825 ;;		 -> Led3Pulse(6), Led2Pulse(6), Led1Pulse(6), 
 31826 ;; Auto vars:     Size  Location     Type
 31827 ;;  Led             1   57[BANK0 ] unsigned char 
 31828 ;;  LedOutSts       1   56[BANK0 ] unsigned char 
 31829 ;; Return value:  Size  Location     Type
 31830 ;;                  1    wreg      unsigned char 
 31831 ;; Registers used:
 31832 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 31833 ;; Tracked objects:
 31834 ;;		On entry : 0/0
 31835 ;;		On exit  : 0/0
 31836 ;;		Unchanged: 0/0
 31837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31838 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31839 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31840 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31841 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31842 ;;Total ram usage:       11 bytes
 31843 ;; Hardware stack levels used:    1
 31844 ;; Hardware stack levels required when called:   13
 31845 ;; This function calls:
 31846 ;;		_LedBlinkStateMachine
 31847 ;;		_LedPulseStateMachine
 31848 ;;		_Led_SetLedStatus
 31849 ;; This function is called by:
 31850 ;;		_Led_MainTask
 31851 ;; This function uses a non-reentrant model
 31852 ;;
 31853                           
 31854                           	psect	text146
 31855  0046B4                     __ptext146:
 31856                           	opt stack 0
 31857  0046B4                     _LedStateMachine:
 31858                           	opt stack 14
 31859                           
 31860                           ; BSR set to: 0
 31861                           ;incstack = 0
 31862                           ;LedStateMachine@Led stored from wreg
 31863  0046B4  0100               	movlb	0	; () banked
 31864  0046B6  6F99               	movwf	LedStateMachine@Led& (0+255),b
 31865                           
 31866                           ;led.c: 238: UINT8 LedOutSts = 0u;
 31867  0046B8  0E00               	movlw	0
 31868  0046BA  0100               	movlb	0	; () banked
 31869  0046BC  6F98               	movwf	LedStateMachine@LedOutSts& (0+255),b
 31870                           
 31871                           ;led.c: 241: switch (*LedSts)
 31872  0046BE  D037               	goto	l2109
 31873  0046C0                     
 31874                           ; BSR set to: 0
 31875                           ;led.c: 245: LedOutSts = ((UINT8)(0));
 31876                           
 31877                           ; BSR set to: 0
 31878  0046C0  0E00               	movlw	0
 31879  0046C2  6F98               	movwf	LedStateMachine@LedOutSts& (0+255),b
 31880                           
 31881                           ; BSR set to: 0
 31882                           ;led.c: 246: *LedOut = ((UINT8)(0));
 31883  0046C4  C091  FFD9         	movff	LedStateMachine@LedOut,fsr2l
 31884  0046C8  C092  FFDA         	movff	LedStateMachine@LedOut+1,fsr2h
 31885  0046CC  0E00               	movlw	0
 31886  0046CE  D007               	goto	L53
 31887  0046D0                     
 31888                           ; BSR set to: 0
 31889                           ;led.c: 251: LedOutSts = ((UINT8)(1));
 31890                           
 31891                           ; BSR set to: 0
 31892  0046D0  0E01               	movlw	1
 31893  0046D2  6F98               	movwf	LedStateMachine@LedOutSts& (0+255),b
 31894                           
 31895                           ; BSR set to: 0
 31896                           ;led.c: 252: *LedOut = ((UINT8)(1));
 31897  0046D4  C091  FFD9         	movff	LedStateMachine@LedOut,fsr2l
 31898  0046D8  C092  FFDA         	movff	LedStateMachine@LedOut+1,fsr2h
 31899  0046DC  0E01               	movlw	1
 31900  0046DE                     L53:
 31901  0046DE  6EDF               	movwf	indf2,c
 31902                           
 31903                           ;led.c: 253: break;
 31904  0046E0  D03A               	goto	l2111
 31905  0046E2                     
 31906                           ; BSR set to: 0
 31907                           ;led.c: 257: if (*LedOut == 1)
 31908                           
 31909                           ; BSR set to: 0
 31910  0046E2  C091  FFD9         	movff	LedStateMachine@LedOut,fsr2l
 31911  0046E6  C092  FFDA         	movff	LedStateMachine@LedOut+1,fsr2h
 31912  0046EA  04DE               	decf	postinc2,w,c
 31913  0046EC  A4D8               	btfss	status,2,c
 31914  0046EE  D006               	goto	l2114
 31915                           
 31916                           ; BSR set to: 0
 31917                           ;led.c: 258: {
 31918                           ;led.c: 260: Led_SetLedStatus(Led,LED_STS_OFF);
 31919  0046F0  0E00               	movlw	0
 31920  0046F2  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 31921  0046F4  5199               	movf	LedStateMachine@Led& (0+255),w,b
 31922  0046F6  EC5B  F031         	call	_Led_SetLedStatus
 31923                           
 31924                           ;led.c: 261: }
 31925  0046FA  D02D               	goto	l2111
 31926  0046FC                     l2114:
 31927                           
 31928                           ;led.c: 262: else
 31929                           ;led.c: 263: {
 31930                           ;led.c: 265: Led_SetLedStatus(Led,LED_STS_ON);
 31931  0046FC  0E01               	movlw	1
 31932  0046FE  0100               	movlb	0	; () banked
 31933  004700  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 31934  004702  5199               	movf	LedStateMachine@Led& (0+255),w,b
 31935  004704  EC5B  F031         	call	_Led_SetLedStatus
 31936                           
 31937                           ;led.c: 266: }
 31938                           ;led.c: 267: break;
 31939  004708  D026               	goto	l2111
 31940  00470A                     
 31941                           ;led.c: 271: LedOutSts = LedBlinkStateMachine(LedBlink);
 31942  00470A  C093  F08A         	movff	LedStateMachine@LedBlink,LedBlinkStateMachine@LedBlink
 31943  00470E  C094  F08B         	movff	LedStateMachine@LedBlink+1,LedBlinkStateMachine@LedBlink+1
 31944  004712  ECC4  F014         	call	_LedBlinkStateMachine	;wreg free
 31945  004716  D008               	goto	L54
 31946  004718                     
 31947                           ; BSR set to: 0
 31948                           ;led.c: 276: LedOutSts = LedPulseStateMachine(LedPulse, Led);
 31949                           
 31950                           ; BSR set to: 0
 31951  004718  C095  F08A         	movff	LedStateMachine@LedPulse,LedPulseStateMachine@LedPulse
 31952  00471C  C096  F08B         	movff	LedStateMachine@LedPulse+1,LedPulseStateMachine@LedPulse+1
 31953  004720  C099  F08C         	movff	LedStateMachine@Led,LedPulseStateMachine@Led
 31954  004724  ECF2  F019         	call	_LedPulseStateMachine	;wreg free
 31955  004728                     L54:
 31956  004728  0100               	movlb	0	; () banked
 31957  00472A  6F98               	movwf	LedStateMachine@LedOutSts& (0+255),b
 31958                           
 31959                           ; BSR set to: 0
 31960                           ;led.c: 281: }
 31961                           
 31962                           ; BSR set to: 0
 31963                           ;led.c: 280: break;
 31964                           
 31965                           ;led.c: 279: default:
 31966                           
 31967                           ;led.c: 277: break;
 31968  00472C  D014               	goto	l2111
 31969  00472E                     l2109:
 31970                           
 31971                           ; BSR set to: 0
 31972                           
 31973                           ; BSR set to: 0
 31974  00472E  C08F  FFD9         	movff	LedStateMachine@LedSts,fsr2l
 31975  004732  C090  FFDA         	movff	LedStateMachine@LedSts+1,fsr2h
 31976  004736  50DF               	movf	indf2,w,c
 31977                           
 31978                           ; Switch size 1, requested type "space"
 31979                           ; Number of cases is 5, Range of values is 0 to 4
 31980                           ; switch strategies available:
 31981                           ; Name         Instructions Cycles
 31982                           ; simple_byte           16     9 (average)
 31983                           ;	Chosen strategy is simple_byte
 31984  004738  0A00               	xorlw	0	; case 0
 31985  00473A  B4D8               	btfsc	status,2,c
 31986  00473C  D7C1               	goto	l2110
 31987  00473E  0A01               	xorlw	1	; case 1
 31988  004740  B4D8               	btfsc	status,2,c
 31989  004742  D7C6               	goto	l2112
 31990  004744  0A03               	xorlw	3	; case 2
 31991  004746  B4D8               	btfsc	status,2,c
 31992  004748  D7CC               	goto	l2113
 31993  00474A  0A01               	xorlw	1	; case 3
 31994  00474C  B4D8               	btfsc	status,2,c
 31995  00474E  D7DD               	goto	l2116
 31996  004750  0A07               	xorlw	7	; case 4
 31997  004752  B4D8               	btfsc	status,2,c
 31998  004754  D7E1               	goto	l2117
 31999  004756                     l2111:
 32000                           
 32001                           ;led.c: 283: return LedOutSts;
 32002                           
 32003                           ; BSR set to: 0
 32004  004756  0100               	movlb	0	; () banked
 32005  004758  5198               	movf	LedStateMachine@LedOutSts& (0+255),w,b
 32006  00475A  0012               	return	
 32007  00475C                     __end_of_LedStateMachine:
 32008                           	opt stack 0
 32009                           tosu	equ	0xFFF
 32010                           tosh	equ	0xFFE
 32011                           tosl	equ	0xFFD
 32012                           pclath	equ	0xFFA
 32013                           tblptru	equ	0xFF8
 32014                           tblptrh	equ	0xFF7
 32015                           tblptrl	equ	0xFF6
 32016                           tablat	equ	0xFF5
 32017                           prodh	equ	0xFF4
 32018                           prodl	equ	0xFF3
 32019                           intcon	equ	0xFF2
 32020                           intcon2	equ	0xFF1
 32021                           intcon3	equ	0xFF0
 32022                           indf0	equ	0xFEF
 32023                           postinc0	equ	0xFEE
 32024                           plusw0	equ	0xFEB
 32025                           fsr0h	equ	0xFEA
 32026                           fsr0l	equ	0xFE9
 32027                           wreg	equ	0xFE8
 32028                           indf1	equ	0xFE7
 32029                           postinc1	equ	0xFE6
 32030                           postdec1	equ	0xFE5
 32031                           plusw1	equ	0xFE3
 32032                           fsr1h	equ	0xFE2
 32033                           fsr1l	equ	0xFE1
 32034                           indf2	equ	0xFDF
 32035                           postinc2	equ	0xFDE
 32036                           postdec2	equ	0xFDD
 32037                           plusw2	equ	0xFDB
 32038                           fsr2h	equ	0xFDA
 32039                           fsr2l	equ	0xFD9
 32040                           status	equ	0xFD8
 32041                           
 32042 ;; *************** function _LedPulseStateMachine *****************
 32043 ;; Defined at:
 32044 ;;		line 182 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 32045 ;; Parameters:    Size  Location     Type
 32046 ;;  LedPulse        2   42[BANK0 ] PTR struct _LedPulseType
 32047 ;;		 -> Led3Pulse(6), Led2Pulse(6), Led1Pulse(6), 
 32048 ;;  Led             1   44[BANK0 ] unsigned char 
 32049 ;; Auto vars:     Size  Location     Type
 32050 ;;		None
 32051 ;; Return value:  Size  Location     Type
 32052 ;;                  1    wreg      unsigned char 
 32053 ;; Registers used:
 32054 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 32055 ;; Tracked objects:
 32056 ;;		On entry : 0/0
 32057 ;;		On exit  : 0/0
 32058 ;;		Unchanged: 0/0
 32059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32060 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32061 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32062 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32063 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32064 ;;Total ram usage:        5 bytes
 32065 ;; Hardware stack levels used:    1
 32066 ;; Hardware stack levels required when called:   12
 32067 ;; This function calls:
 32068 ;;		_Led_SetLedStatus
 32069 ;;		___lwdiv
 32070 ;; This function is called by:
 32071 ;;		_LedStateMachine
 32072 ;; This function uses a non-reentrant model
 32073 ;;
 32074                           
 32075                           	psect	text147
 32076  0033E4                     __ptext147:
 32077                           	opt stack 0
 32078  0033E4                     _LedPulseStateMachine:
 32079                           	opt stack 14
 32080                           
 32081                           ;led.c: 185: switch (LedPulse->LedPulseState)
 32082                           
 32083                           ; BSR set to: 0
 32084                           ;incstack = 0
 32085  0033E4  D05C               	goto	l2099
 32086  0033E6                     
 32087                           ;led.c: 189: LedPulse->LedOutState = ((UINT8)(1));
 32088  0033E6  0100               	movlb	0	; () banked
 32089  0033E8  EE20 F001          	lfsr	2,1
 32090  0033EC  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 32091  0033EE  26D9               	addwf	fsr2l,f,c
 32092  0033F0  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 32093  0033F2  22DA               	addwfc	fsr2h,f,c
 32094  0033F4  0E01               	movlw	1
 32095  0033F6  6EDF               	movwf	indf2,c
 32096                           
 32097                           ; BSR set to: 0
 32098                           ;led.c: 191: LedPulse->LedPulseState = LedPulseDelay;
 32099  0033F8  C08A  FFD9         	movff	LedPulseStateMachine@LedPulse,fsr2l
 32100  0033FC  C08B  FFDA         	movff	LedPulseStateMachine@LedPulse+1,fsr2h
 32101  003400  0E01               	movlw	1
 32102  003402  D036               	goto	L55
 32103  003404                     
 32104                           ;led.c: 196: LedPulse->LedPulseCounter++;
 32105                           
 32106                           ; BSR set to: 0
 32107  003404  0100               	movlb	0	; () banked
 32108  003406  EE20 F002          	lfsr	2,2
 32109  00340A  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 32110  00340C  26D9               	addwf	fsr2l,f,c
 32111  00340E  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 32112  003410  22DA               	addwfc	fsr2h,f,c
 32113  003412  2ADE               	incf	postinc2,f,c
 32114  003414  0E00               	movlw	0
 32115  003416  22DD               	addwfc	postdec2,f,c
 32116                           
 32117                           ; BSR set to: 0
 32118                           ;led.c: 198: if (LedPulse->LedPulseCounter >= (LedPulse->LedPulseTimeMs/((UINT16)(50))))
 32119  003418  EE20 F004          	lfsr	2,4
 32120  00341C  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 32121  00341E  26D9               	addwf	fsr2l,f,c
 32122  003420  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 32123  003422  22DA               	addwfc	fsr2h,f,c
 32124  003424  CFDE F083          	movff	postinc2,___lwdiv@dividend
 32125  003428  CFDD F084          	movff	postdec2,___lwdiv@dividend+1
 32126  00342C  0E00               	movlw	0
 32127  00342E  6F86               	movwf	(___lwdiv@divisor+1)& (0+255),b
 32128  003430  0E32               	movlw	50
 32129  003432  6F85               	movwf	___lwdiv@divisor& (0+255),b
 32130  003434  ECAD  F02C         	call	___lwdiv	;wreg free
 32131  003438  0100               	movlb	0	; () banked
 32132  00343A  EE20 F002          	lfsr	2,2
 32133  00343E  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 32134  003440  26D9               	addwf	fsr2l,f,c
 32135  003442  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 32136  003444  22DA               	addwfc	fsr2h,f,c
 32137  003446  5183               	movf	?___lwdiv& (0+255),w,b
 32138  003448  5CDE               	subwf	postinc2,w,c
 32139  00344A  5184               	movf	(?___lwdiv+1)& (0+255),w,b
 32140  00344C  58DE               	subwfb	postinc2,w,c
 32141  00344E  A0D8               	btfss	status,0,c
 32142  003450  D034               	goto	l2101
 32143                           
 32144                           ; BSR set to: 0
 32145                           ;led.c: 199: {
 32146                           ;led.c: 201: LedPulse->LedPulseCounter = 0;
 32147  003452  EE20 F002          	lfsr	2,2
 32148  003456  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 32149  003458  26D9               	addwf	fsr2l,f,c
 32150  00345A  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 32151  00345C  22DA               	addwfc	fsr2h,f,c
 32152  00345E  0E00               	movlw	0
 32153  003460  6EDE               	movwf	postinc2,c
 32154  003462  0E00               	movlw	0
 32155  003464  6EDD               	movwf	postdec2,c
 32156                           
 32157                           ; BSR set to: 0
 32158                           ;led.c: 203: LedPulse->LedPulseState = LedPulseOff;
 32159  003466  C08A  FFD9         	movff	LedPulseStateMachine@LedPulse,fsr2l
 32160  00346A  C08B  FFDA         	movff	LedPulseStateMachine@LedPulse+1,fsr2h
 32161  00346E  0E02               	movlw	2
 32162  003470                     L55:
 32163  003470  6EDF               	movwf	indf2,c
 32164                           
 32165                           ; BSR set to: 0
 32166                           ;led.c: 204: }
 32167                           ;led.c: 205: break;
 32168  003472  D023               	goto	l2101
 32169  003474                     
 32170                           ;led.c: 209: LedPulse->LedOutState = ((UINT8)(0));
 32171                           
 32172                           ; BSR set to: 0
 32173  003474  0100               	movlb	0	; () banked
 32174  003476  EE20 F001          	lfsr	2,1
 32175  00347A  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 32176  00347C  26D9               	addwf	fsr2l,f,c
 32177  00347E  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 32178  003480  22DA               	addwfc	fsr2h,f,c
 32179  003482  0E00               	movlw	0
 32180  003484  6EDF               	movwf	indf2,c
 32181                           
 32182                           ; BSR set to: 0
 32183                           ;led.c: 211: LedPulse->LedPulseState = LedPulseOn;
 32184  003486  C08A  FFD9         	movff	LedPulseStateMachine@LedPulse,fsr2l
 32185  00348A  C08B  FFDA         	movff	LedPulseStateMachine@LedPulse+1,fsr2h
 32186  00348E  0E00               	movlw	0
 32187  003490  6EDF               	movwf	indf2,c
 32188                           
 32189                           ; BSR set to: 0
 32190                           ;led.c: 213: Led_SetLedStatus(Led,LED_STS_OFF);
 32191  003492  0E00               	movlw	0
 32192  003494  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 32193  003496  518C               	movf	LedPulseStateMachine@Led& (0+255),w,b
 32194  003498  EC5B  F031         	call	_Led_SetLedStatus
 32195                           
 32196                           ;led.c: 218: }
 32197                           
 32198                           ;led.c: 217: break;
 32199                           
 32200                           ;led.c: 216: default:
 32201                           
 32202                           ;led.c: 214: break;
 32203  00349C  D00E               	goto	l2101
 32204  00349E                     l2099:
 32205  00349E  C08A  FFD9         	movff	LedPulseStateMachine@LedPulse,fsr2l
 32206  0034A2  C08B  FFDA         	movff	LedPulseStateMachine@LedPulse+1,fsr2h
 32207  0034A6  50DF               	movf	indf2,w,c
 32208                           
 32209                           ; Switch size 1, requested type "space"
 32210                           ; Number of cases is 3, Range of values is 0 to 2
 32211                           ; switch strategies available:
 32212                           ; Name         Instructions Cycles
 32213                           ; simple_byte           10     6 (average)
 32214                           ;	Chosen strategy is simple_byte
 32215  0034A8  0A00               	xorlw	0	; case 0
 32216  0034AA  B4D8               	btfsc	status,2,c
 32217  0034AC  D79C               	goto	l2100
 32218  0034AE  0A01               	xorlw	1	; case 1
 32219  0034B0  B4D8               	btfsc	status,2,c
 32220  0034B2  D7A8               	goto	l2102
 32221  0034B4  0A03               	xorlw	3	; case 2
 32222  0034B6  B4D8               	btfsc	status,2,c
 32223  0034B8  D7DD               	goto	l2104
 32224  0034BA                     l2101:
 32225                           
 32226                           ;led.c: 221: return (LedPulse->LedOutState);
 32227  0034BA  0100               	movlb	0	; () banked
 32228  0034BC  EE20 F001          	lfsr	2,1
 32229  0034C0  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 32230  0034C2  26D9               	addwf	fsr2l,f,c
 32231  0034C4  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 32232  0034C6  22DA               	addwfc	fsr2h,f,c
 32233  0034C8  50DF               	movf	indf2,w,c
 32234  0034CA  0012               	return	
 32235  0034CC                     __end_of_LedPulseStateMachine:
 32236                           	opt stack 0
 32237                           tosu	equ	0xFFF
 32238                           tosh	equ	0xFFE
 32239                           tosl	equ	0xFFD
 32240                           pclath	equ	0xFFA
 32241                           tblptru	equ	0xFF8
 32242                           tblptrh	equ	0xFF7
 32243                           tblptrl	equ	0xFF6
 32244                           tablat	equ	0xFF5
 32245                           prodh	equ	0xFF4
 32246                           prodl	equ	0xFF3
 32247                           intcon	equ	0xFF2
 32248                           intcon2	equ	0xFF1
 32249                           intcon3	equ	0xFF0
 32250                           indf0	equ	0xFEF
 32251                           postinc0	equ	0xFEE
 32252                           plusw0	equ	0xFEB
 32253                           fsr0h	equ	0xFEA
 32254                           fsr0l	equ	0xFE9
 32255                           wreg	equ	0xFE8
 32256                           indf1	equ	0xFE7
 32257                           postinc1	equ	0xFE6
 32258                           postdec1	equ	0xFE5
 32259                           plusw1	equ	0xFE3
 32260                           fsr1h	equ	0xFE2
 32261                           fsr1l	equ	0xFE1
 32262                           indf2	equ	0xFDF
 32263                           postinc2	equ	0xFDE
 32264                           postdec2	equ	0xFDD
 32265                           plusw2	equ	0xFDB
 32266                           fsr2h	equ	0xFDA
 32267                           fsr2l	equ	0xFD9
 32268                           status	equ	0xFD8
 32269                           
 32270 ;; *************** function _Led_SetLedStatus *****************
 32271 ;; Defined at:
 32272 ;;		line 338 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 32273 ;; Parameters:    Size  Location     Type
 32274 ;;  Led             1    wreg     unsigned char 
 32275 ;;  LedSts          1   29[BANK0 ] enum E8950
 32276 ;; Auto vars:     Size  Location     Type
 32277 ;;  Led             1   30[BANK0 ] unsigned char 
 32278 ;; Return value:  Size  Location     Type
 32279 ;;                  1    wreg      void 
 32280 ;; Registers used:
 32281 ;;		wreg, status,2, status,0
 32282 ;; Tracked objects:
 32283 ;;		On entry : 0/0
 32284 ;;		On exit  : 0/0
 32285 ;;		Unchanged: 0/0
 32286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32287 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32288 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32289 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32290 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32291 ;;Total ram usage:        2 bytes
 32292 ;; Hardware stack levels used:    1
 32293 ;; Hardware stack levels required when called:   11
 32294 ;; This function calls:
 32295 ;;		Nothing
 32296 ;; This function is called by:
 32297 ;;		_LedPulseStateMachine
 32298 ;;		_LedStateMachine
 32299 ;;		_MyApp_Task
 32300 ;;		_waitSetupCall
 32301 ;;		_blinkForSeconds
 32302 ;; This function uses a non-reentrant model
 32303 ;;
 32304                           
 32305                           	psect	text148
 32306  0062B6                     __ptext148:
 32307                           	opt stack 0
 32308  0062B6                     _Led_SetLedStatus:
 32309                           	opt stack 15
 32310                           
 32311                           ; BSR set to: 0
 32312                           ;incstack = 0
 32313                           ;Led_SetLedStatus@Led stored from wreg
 32314  0062B6  0100               	movlb	0	; () banked
 32315  0062B8  6F7E               	movwf	Led_SetLedStatus@Led& (0+255),b
 32316                           
 32317                           ;led.c: 341: switch (Led)
 32318  0062BA  D009               	goto	l2130
 32319  0062BC                     l2131:
 32320                           
 32321                           ; BSR set to: 0
 32322                           ;led.c: 344: Led1Sts = LedSts;
 32323  0062BC  C07D  F1FB         	movff	Led_SetLedStatus@LedSts,_Led1Sts
 32324                           
 32325                           ;led.c: 345: break;
 32326  0062C0  0012               	return	
 32327  0062C2                     l2133:
 32328                           
 32329                           ; BSR set to: 0
 32330                           ;led.c: 348: Led2Sts = LedSts;
 32331  0062C2  C07D  F1F9         	movff	Led_SetLedStatus@LedSts,_Led2Sts
 32332                           
 32333                           ;led.c: 349: break;
 32334  0062C6  0012               	return	
 32335  0062C8                     l2134:
 32336                           
 32337                           ; BSR set to: 0
 32338                           ;led.c: 352: Led3Sts = LedSts;
 32339  0062C8  C07D  F1F7         	movff	Led_SetLedStatus@LedSts,_Led3Sts
 32340                           
 32341                           ; BSR set to: 0
 32342                           ;led.c: 357: }
 32343                           
 32344                           ; BSR set to: 0
 32345                           ;led.c: 356: break;
 32346                           
 32347                           ;led.c: 355: default:
 32348                           
 32349                           ;led.c: 353: break;
 32350  0062CC  0012               	return	
 32351  0062CE                     l2130:
 32352                           
 32353                           ; BSR set to: 0
 32354  0062CE  0100               	movlb	0	; () banked
 32355  0062D0  517E               	movf	Led_SetLedStatus@Led& (0+255),w,b
 32356                           
 32357                           ; Switch size 1, requested type "space"
 32358                           ; Number of cases is 3, Range of values is 1 to 3
 32359                           ; switch strategies available:
 32360                           ; Name         Instructions Cycles
 32361                           ; simple_byte           10     6 (average)
 32362                           ;	Chosen strategy is simple_byte
 32363  0062D2  0A01               	xorlw	1	; case 1
 32364  0062D4  B4D8               	btfsc	status,2,c
 32365  0062D6  D7F2               	goto	l2131
 32366  0062D8  0A03               	xorlw	3	; case 2
 32367  0062DA  B4D8               	btfsc	status,2,c
 32368  0062DC  D7F2               	goto	l2133
 32369  0062DE  0A01               	xorlw	1	; case 3
 32370  0062E0  A4D8               	btfss	status,2,c
 32371  0062E2  0012               	return	
 32372  0062E4  D7F1               	goto	l2134
 32373  0062E6                     __end_of_Led_SetLedStatus:
 32374                           	opt stack 0
 32375                           tosu	equ	0xFFF
 32376                           tosh	equ	0xFFE
 32377                           tosl	equ	0xFFD
 32378                           pclath	equ	0xFFA
 32379                           tblptru	equ	0xFF8
 32380                           tblptrh	equ	0xFF7
 32381                           tblptrl	equ	0xFF6
 32382                           tablat	equ	0xFF5
 32383                           prodh	equ	0xFF4
 32384                           prodl	equ	0xFF3
 32385                           intcon	equ	0xFF2
 32386                           intcon2	equ	0xFF1
 32387                           intcon3	equ	0xFF0
 32388                           indf0	equ	0xFEF
 32389                           postinc0	equ	0xFEE
 32390                           plusw0	equ	0xFEB
 32391                           fsr0h	equ	0xFEA
 32392                           fsr0l	equ	0xFE9
 32393                           wreg	equ	0xFE8
 32394                           indf1	equ	0xFE7
 32395                           postinc1	equ	0xFE6
 32396                           postdec1	equ	0xFE5
 32397                           plusw1	equ	0xFE3
 32398                           fsr1h	equ	0xFE2
 32399                           fsr1l	equ	0xFE1
 32400                           indf2	equ	0xFDF
 32401                           postinc2	equ	0xFDE
 32402                           postdec2	equ	0xFDD
 32403                           plusw2	equ	0xFDB
 32404                           fsr2h	equ	0xFDA
 32405                           fsr2l	equ	0xFD9
 32406                           status	equ	0xFD8
 32407                           
 32408 ;; *************** function _LedBlinkStateMachine *****************
 32409 ;; Defined at:
 32410 ;;		line 125 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 32411 ;; Parameters:    Size  Location     Type
 32412 ;;  LedBlink        2   42[BANK0 ] PTR struct _LedBlinkType
 32413 ;;		 -> Led3Blink(9), Led2Blink(9), Led1Blink(9), 
 32414 ;; Auto vars:     Size  Location     Type
 32415 ;;		None
 32416 ;; Return value:  Size  Location     Type
 32417 ;;                  1    wreg      unsigned char 
 32418 ;; Registers used:
 32419 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 32420 ;; Tracked objects:
 32421 ;;		On entry : 0/0
 32422 ;;		On exit  : 0/0
 32423 ;;		Unchanged: 0/0
 32424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32425 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32426 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32427 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32428 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32429 ;;Total ram usage:        4 bytes
 32430 ;; Hardware stack levels used:    1
 32431 ;; Hardware stack levels required when called:   12
 32432 ;; This function calls:
 32433 ;;		___lwdiv
 32434 ;; This function is called by:
 32435 ;;		_LedStateMachine
 32436 ;; This function uses a non-reentrant model
 32437 ;;
 32438                           
 32439                           	psect	text149
 32440  002988                     __ptext149:
 32441                           	opt stack 0
 32442  002988                     _LedBlinkStateMachine:
 32443                           	opt stack 14
 32444                           
 32445                           ;led.c: 128: switch (LedBlink->LedBlinkState)
 32446                           
 32447                           ; BSR set to: 0
 32448                           ;incstack = 0
 32449  002988  D08F               	goto	l2086
 32450  00298A                     
 32451                           ;led.c: 132: LedBlink->LedOutState = LedBlink->LedInitStatus;
 32452  00298A  0100               	movlb	0	; () banked
 32453  00298C  EE20 F008          	lfsr	2,8
 32454  002990  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 32455  002992  26D9               	addwf	fsr2l,f,c
 32456  002994  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 32457  002996  22DA               	addwfc	fsr2h,f,c
 32458  002998  EE10 F001          	lfsr	1,1
 32459  00299C  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 32460  00299E  26E1               	addwf	fsr1l,f,c
 32461  0029A0  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 32462  0029A2  22E2               	addwfc	fsr1h,f,c
 32463  0029A4  CFDF FFE7          	movff	indf2,indf1
 32464                           
 32465                           ; BSR set to: 0
 32466                           ;led.c: 134: LedBlink->LedBlinkState = LedBlinkRunning;
 32467  0029A8  C08A  FFD9         	movff	LedBlinkStateMachine@LedBlink,fsr2l
 32468  0029AC  C08B  FFDA         	movff	LedBlinkStateMachine@LedBlink+1,fsr2h
 32469  0029B0  D040               	goto	L56
 32470  0029B2                     
 32471                           ;led.c: 139: LedBlink->LedBlinkCounter++;
 32472                           
 32473                           ; BSR set to: 0
 32474  0029B2  0100               	movlb	0	; () banked
 32475  0029B4  EE20 F002          	lfsr	2,2
 32476  0029B8  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 32477  0029BA  26D9               	addwf	fsr2l,f,c
 32478  0029BC  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 32479  0029BE  22DA               	addwfc	fsr2h,f,c
 32480  0029C0  2ADE               	incf	postinc2,f,c
 32481  0029C2  0E00               	movlw	0
 32482  0029C4  22DD               	addwfc	postdec2,f,c
 32483                           
 32484                           ;led.c: 141: if (LedBlink->LedOutState == OffState)
 32485  0029C6  EE20 F001          	lfsr	2,1
 32486  0029CA  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 32487  0029CC  26D9               	addwf	fsr2l,f,c
 32488  0029CE  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 32489  0029D0  22DA               	addwfc	fsr2h,f,c
 32490  0029D2  50DF               	movf	indf2,w,c
 32491  0029D4  A4D8               	btfss	status,2,c
 32492  0029D6  D02F               	goto	l2090
 32493                           
 32494                           ; BSR set to: 0
 32495                           ;led.c: 142: {
 32496                           ;led.c: 144: if (LedBlink->LedBlinkCounter >= (LedBlink->LedOffTimeMs/((UINT16)(50))))
 32497  0029D8  EE20 F006          	lfsr	2,6
 32498  0029DC  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 32499  0029DE  26D9               	addwf	fsr2l,f,c
 32500  0029E0  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 32501  0029E2  22DA               	addwfc	fsr2h,f,c
 32502  0029E4  CFDE F083          	movff	postinc2,___lwdiv@dividend
 32503  0029E8  CFDD F084          	movff	postdec2,___lwdiv@dividend+1
 32504  0029EC  0E00               	movlw	0
 32505  0029EE  6F86               	movwf	(___lwdiv@divisor+1)& (0+255),b
 32506  0029F0  0E32               	movlw	50
 32507  0029F2  6F85               	movwf	___lwdiv@divisor& (0+255),b
 32508  0029F4  ECAD  F02C         	call	___lwdiv	;wreg free
 32509  0029F8  0100               	movlb	0	; () banked
 32510  0029FA  EE20 F002          	lfsr	2,2
 32511  0029FE  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 32512  002A00  26D9               	addwf	fsr2l,f,c
 32513  002A02  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 32514  002A04  22DA               	addwfc	fsr2h,f,c
 32515  002A06  5183               	movf	?___lwdiv& (0+255),w,b
 32516  002A08  5CDE               	subwf	postinc2,w,c
 32517  002A0A  5184               	movf	(?___lwdiv+1)& (0+255),w,b
 32518  002A0C  58DE               	subwfb	postinc2,w,c
 32519  002A0E  A0D8               	btfss	status,0,c
 32520  002A10  D056               	goto	l2088
 32521                           
 32522                           ; BSR set to: 0
 32523                           ;led.c: 145: {
 32524                           ;led.c: 147: LedBlink->LedBlinkCounter = 0;
 32525  002A12  EE20 F002          	lfsr	2,2
 32526  002A16  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 32527  002A18  26D9               	addwf	fsr2l,f,c
 32528  002A1A  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 32529  002A1C  22DA               	addwfc	fsr2h,f,c
 32530  002A1E  0E00               	movlw	0
 32531  002A20  6EDE               	movwf	postinc2,c
 32532  002A22  0E00               	movlw	0
 32533  002A24  6EDD               	movwf	postdec2,c
 32534                           
 32535                           ;led.c: 149: LedBlink->LedOutState = OnState;
 32536  002A26  EE20 F001          	lfsr	2,1
 32537  002A2A  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 32538  002A2C  26D9               	addwf	fsr2l,f,c
 32539  002A2E  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 32540  002A30  22DA               	addwfc	fsr2h,f,c
 32541  002A32                     L56:
 32542  002A32  0E01               	movlw	1
 32543  002A34  D037               	goto	L57
 32544  002A36                     l2090:
 32545                           
 32546                           ; BSR set to: 0
 32547                           ;led.c: 152: else if (LedBlink->LedOutState == OnState)
 32548                           
 32549                           ; BSR set to: 0
 32550  002A36  EE20 F001          	lfsr	2,1
 32551  002A3A  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 32552  002A3C  26D9               	addwf	fsr2l,f,c
 32553  002A3E  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 32554  002A40  22DA               	addwfc	fsr2h,f,c
 32555  002A42  04DE               	decf	postinc2,w,c
 32556  002A44  A4D8               	btfss	status,2,c
 32557  002A46  D03B               	goto	l2088
 32558                           
 32559                           ; BSR set to: 0
 32560                           ;led.c: 153: {
 32561                           ;led.c: 155: if (LedBlink->LedBlinkCounter >= (LedBlink->LedOnTimeMs/((UINT16)(50))))
 32562  002A48  EE20 F004          	lfsr	2,4
 32563  002A4C  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 32564  002A4E  26D9               	addwf	fsr2l,f,c
 32565  002A50  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 32566  002A52  22DA               	addwfc	fsr2h,f,c
 32567  002A54  CFDE F083          	movff	postinc2,___lwdiv@dividend
 32568  002A58  CFDD F084          	movff	postdec2,___lwdiv@dividend+1
 32569  002A5C  0E00               	movlw	0
 32570  002A5E  6F86               	movwf	(___lwdiv@divisor+1)& (0+255),b
 32571  002A60  0E32               	movlw	50
 32572  002A62  6F85               	movwf	___lwdiv@divisor& (0+255),b
 32573  002A64  ECAD  F02C         	call	___lwdiv	;wreg free
 32574  002A68  0100               	movlb	0	; () banked
 32575  002A6A  EE20 F002          	lfsr	2,2
 32576  002A6E  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 32577  002A70  26D9               	addwf	fsr2l,f,c
 32578  002A72  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 32579  002A74  22DA               	addwfc	fsr2h,f,c
 32580  002A76  5183               	movf	?___lwdiv& (0+255),w,b
 32581  002A78  5CDE               	subwf	postinc2,w,c
 32582  002A7A  5184               	movf	(?___lwdiv+1)& (0+255),w,b
 32583  002A7C  58DE               	subwfb	postinc2,w,c
 32584  002A7E  A0D8               	btfss	status,0,c
 32585  002A80  D01E               	goto	l2088
 32586                           
 32587                           ; BSR set to: 0
 32588                           ;led.c: 156: {
 32589                           ;led.c: 158: LedBlink->LedBlinkCounter = 0;
 32590  002A82  EE20 F002          	lfsr	2,2
 32591  002A86  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 32592  002A88  26D9               	addwf	fsr2l,f,c
 32593  002A8A  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 32594  002A8C  22DA               	addwfc	fsr2h,f,c
 32595  002A8E  0E00               	movlw	0
 32596  002A90  6EDE               	movwf	postinc2,c
 32597  002A92  0E00               	movlw	0
 32598  002A94  6EDD               	movwf	postdec2,c
 32599                           
 32600                           ;led.c: 160: LedBlink->LedOutState = OffState;
 32601  002A96  EE20 F001          	lfsr	2,1
 32602  002A9A  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 32603  002A9C  26D9               	addwf	fsr2l,f,c
 32604  002A9E  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 32605  002AA0  22DA               	addwfc	fsr2h,f,c
 32606  002AA2  0E00               	movlw	0
 32607  002AA4                     L57:
 32608  002AA4  6EDF               	movwf	indf2,c
 32609                           
 32610                           ; BSR set to: 0
 32611                           ;led.c: 167: }
 32612                           
 32613                           ; BSR set to: 0
 32614                           ;led.c: 166: break;
 32615                           
 32616                           ;led.c: 165: default:
 32617                           
 32618                           ; BSR set to: 0
 32619                           ;led.c: 161: }
 32620                           ;led.c: 162: }
 32621                           ;led.c: 163: break;
 32622                           
 32623                           ; BSR set to: 0
 32624                           
 32625                           ; BSR set to: 0
 32626  002AA6  D00B               	goto	l2088
 32627  002AA8                     l2086:
 32628                           
 32629                           ; BSR set to: 0
 32630  002AA8  C08A  FFD9         	movff	LedBlinkStateMachine@LedBlink,fsr2l
 32631  002AAC  C08B  FFDA         	movff	LedBlinkStateMachine@LedBlink+1,fsr2h
 32632  002AB0  50DF               	movf	indf2,w,c
 32633                           
 32634                           ; Switch size 1, requested type "space"
 32635                           ; Number of cases is 2, Range of values is 0 to 1
 32636                           ; switch strategies available:
 32637                           ; Name         Instructions Cycles
 32638                           ; simple_byte            7     4 (average)
 32639                           ;	Chosen strategy is simple_byte
 32640  002AB2  0A00               	xorlw	0	; case 0
 32641  002AB4  B4D8               	btfsc	status,2,c
 32642  002AB6  D769               	goto	l2087
 32643  002AB8  0A01               	xorlw	1	; case 1
 32644  002ABA  B4D8               	btfsc	status,2,c
 32645  002ABC  D77A               	goto	l2089
 32646  002ABE                     l2088:
 32647                           
 32648                           ;led.c: 170: return (LedBlink->LedOutState);
 32649  002ABE  0100               	movlb	0	; () banked
 32650  002AC0  EE20 F001          	lfsr	2,1
 32651  002AC4  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 32652  002AC6  26D9               	addwf	fsr2l,f,c
 32653  002AC8  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 32654  002ACA  22DA               	addwfc	fsr2h,f,c
 32655  002ACC  50DF               	movf	indf2,w,c
 32656  002ACE  0012               	return	
 32657  002AD0                     __end_of_LedBlinkStateMachine:
 32658                           	opt stack 0
 32659                           tosu	equ	0xFFF
 32660                           tosh	equ	0xFFE
 32661                           tosl	equ	0xFFD
 32662                           pclath	equ	0xFFA
 32663                           tblptru	equ	0xFF8
 32664                           tblptrh	equ	0xFF7
 32665                           tblptrl	equ	0xFF6
 32666                           tablat	equ	0xFF5
 32667                           prodh	equ	0xFF4
 32668                           prodl	equ	0xFF3
 32669                           intcon	equ	0xFF2
 32670                           intcon2	equ	0xFF1
 32671                           intcon3	equ	0xFF0
 32672                           indf0	equ	0xFEF
 32673                           postinc0	equ	0xFEE
 32674                           plusw0	equ	0xFEB
 32675                           fsr0h	equ	0xFEA
 32676                           fsr0l	equ	0xFE9
 32677                           wreg	equ	0xFE8
 32678                           indf1	equ	0xFE7
 32679                           postinc1	equ	0xFE6
 32680                           postdec1	equ	0xFE5
 32681                           plusw1	equ	0xFE3
 32682                           fsr1h	equ	0xFE2
 32683                           fsr1l	equ	0xFE1
 32684                           indf2	equ	0xFDF
 32685                           postinc2	equ	0xFDE
 32686                           postdec2	equ	0xFDD
 32687                           plusw2	equ	0xFDB
 32688                           fsr2h	equ	0xFDA
 32689                           fsr2l	equ	0xFD9
 32690                           status	equ	0xFD8
 32691                           
 32692 ;; *************** function ___lwdiv *****************
 32693 ;; Defined at:
 32694 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/lwdiv.c"
 32695 ;; Parameters:    Size  Location     Type
 32696 ;;  dividend        2   35[BANK0 ] unsigned int 
 32697 ;;  divisor         2   37[BANK0 ] unsigned int 
 32698 ;; Auto vars:     Size  Location     Type
 32699 ;;  quotient        2   40[BANK0 ] unsigned int 
 32700 ;;  counter         1   39[BANK0 ] unsigned char 
 32701 ;; Return value:  Size  Location     Type
 32702 ;;                  2   35[BANK0 ] unsigned int 
 32703 ;; Registers used:
 32704 ;;		wreg, status,2, status,0
 32705 ;; Tracked objects:
 32706 ;;		On entry : 0/0
 32707 ;;		On exit  : 0/0
 32708 ;;		Unchanged: 0/0
 32709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32710 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32711 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32713 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32714 ;;Total ram usage:        7 bytes
 32715 ;; Hardware stack levels used:    1
 32716 ;; Hardware stack levels required when called:   11
 32717 ;; This function calls:
 32718 ;;		Nothing
 32719 ;; This function is called by:
 32720 ;;		_LedBlinkStateMachine
 32721 ;;		_LedPulseStateMachine
 32722 ;;		_secondsAppTimer
 32723 ;;		_utoa
 32724 ;; This function uses a non-reentrant model
 32725 ;;
 32726                           
 32727                           	psect	text150
 32728  00595A                     __ptext150:
 32729                           	opt stack 0
 32730  00595A                     ___lwdiv:
 32731                           	opt stack 14
 32732                           
 32733                           ; BSR set to: 0
 32734                           ;incstack = 0
 32735  00595A  0E00               	movlw	0
 32736  00595C  0100               	movlb	0	; () banked
 32737  00595E  6F89               	movwf	(___lwdiv@quotient+1)& (0+255),b
 32738  005960  0E00               	movlw	0
 32739  005962  6F88               	movwf	___lwdiv@quotient& (0+255),b
 32740                           
 32741                           ; BSR set to: 0
 32742  005964  5185               	movf	___lwdiv@divisor& (0+255),w,b
 32743  005966  1186               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 32744  005968  B4D8               	btfsc	status,2,c
 32745  00596A  D01C               	goto	l3272
 32746                           
 32747                           ; BSR set to: 0
 32748  00596C  0E01               	movlw	1
 32749  00596E  6F87               	movwf	___lwdiv@counter& (0+255),b
 32750  005970  D004               	goto	l3267
 32751  005972                     
 32752                           ; BSR set to: 0
 32753                           
 32754                           ; BSR set to: 0
 32755  005972  90D8               	bcf	status,0,c
 32756  005974  3785               	rlcf	___lwdiv@divisor& (0+255),f,b
 32757  005976  3786               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 32758  005978  2B87               	incf	___lwdiv@counter& (0+255),f,b
 32759  00597A                     l3267:
 32760                           
 32761                           ; BSR set to: 0
 32762                           
 32763                           ; BSR set to: 0
 32764  00597A  AF86               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 32765  00597C  D7FA               	goto	l3268
 32766  00597E                     u11840:
 32767                           
 32768                           ; BSR set to: 0
 32769                           
 32770                           ; BSR set to: 0
 32771                           
 32772                           ; BSR set to: 0
 32773  00597E  90D8               	bcf	status,0,c
 32774  005980  3788               	rlcf	___lwdiv@quotient& (0+255),f,b
 32775  005982  3789               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 32776                           
 32777                           ; BSR set to: 0
 32778  005984  5185               	movf	___lwdiv@divisor& (0+255),w,b
 32779  005986  5D83               	subwf	___lwdiv@dividend& (0+255),w,b
 32780  005988  5186               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 32781  00598A  5984               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 32782  00598C  A0D8               	btfss	status,0,c
 32783  00598E  D005               	goto	l3271
 32784                           
 32785                           ; BSR set to: 0
 32786  005990  5185               	movf	___lwdiv@divisor& (0+255),w,b
 32787  005992  5F83               	subwf	___lwdiv@dividend& (0+255),f,b
 32788  005994  5186               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 32789  005996  5B84               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 32790                           
 32791                           ; BSR set to: 0
 32792  005998  8188               	bsf	___lwdiv@quotient& (0+255),0,b
 32793  00599A                     l3271:
 32794                           
 32795                           ; BSR set to: 0
 32796                           
 32797                           ; BSR set to: 0
 32798  00599A  90D8               	bcf	status,0,c
 32799  00599C  3386               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 32800  00599E  3385               	rrcf	___lwdiv@divisor& (0+255),f,b
 32801                           
 32802                           ; BSR set to: 0
 32803  0059A0  2F87               	decfsz	___lwdiv@counter& (0+255),f,b
 32804  0059A2  D7ED               	goto	u11840
 32805  0059A4                     l3272:
 32806                           
 32807                           ; BSR set to: 0
 32808                           
 32809                           ; BSR set to: 0
 32810  0059A4  C088  F083         	movff	___lwdiv@quotient,?___lwdiv
 32811  0059A8  C089  F084         	movff	___lwdiv@quotient+1,?___lwdiv+1
 32812                           
 32813                           ; BSR set to: 0
 32814  0059AC  0012               	return		;funcret
 32815  0059AE                     __end_of___lwdiv:
 32816                           	opt stack 0
 32817                           tosu	equ	0xFFF
 32818                           tosh	equ	0xFFE
 32819                           tosl	equ	0xFFD
 32820                           pclath	equ	0xFFA
 32821                           tblptru	equ	0xFF8
 32822                           tblptrh	equ	0xFF7
 32823                           tblptrl	equ	0xFF6
 32824                           tablat	equ	0xFF5
 32825                           prodh	equ	0xFF4
 32826                           prodl	equ	0xFF3
 32827                           intcon	equ	0xFF2
 32828                           intcon2	equ	0xFF1
 32829                           intcon3	equ	0xFF0
 32830                           indf0	equ	0xFEF
 32831                           postinc0	equ	0xFEE
 32832                           plusw0	equ	0xFEB
 32833                           fsr0h	equ	0xFEA
 32834                           fsr0l	equ	0xFE9
 32835                           wreg	equ	0xFE8
 32836                           indf1	equ	0xFE7
 32837                           postinc1	equ	0xFE6
 32838                           postdec1	equ	0xFE5
 32839                           plusw1	equ	0xFE3
 32840                           fsr1h	equ	0xFE2
 32841                           fsr1l	equ	0xFE1
 32842                           indf2	equ	0xFDF
 32843                           postinc2	equ	0xFDE
 32844                           postdec2	equ	0xFDD
 32845                           plusw2	equ	0xFDB
 32846                           fsr2h	equ	0xFDA
 32847                           fsr2l	equ	0xFD9
 32848                           status	equ	0xFD8
 32849                           
 32850 ;; *************** function _OsAlrm_SetOsAlarm *****************
 32851 ;; Defined at:
 32852 ;;		line 77 in file "../../MercuryFwk/Source/c/02_Osl/os_alarms.c"
 32853 ;; Parameters:    Size  Location     Type
 32854 ;;  OsAlarmId       2   35[BANK0 ] unsigned short 
 32855 ;;  OsAlarmTimeo    4   37[BANK0 ] unsigned long 
 32856 ;;  AlarmCallbac    2   41[BANK0 ] PTR FTN()void 
 32857 ;;		 -> I2cDummyTx(1), 
 32858 ;; Auto vars:     Size  Location     Type
 32859 ;;		None
 32860 ;; Return value:  Size  Location     Type
 32861 ;;                  1    wreg      void 
 32862 ;; Registers used:
 32863 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 32864 ;; Tracked objects:
 32865 ;;		On entry : 0/0
 32866 ;;		On exit  : 0/0
 32867 ;;		Unchanged: 0/0
 32868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32869 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32870 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32871 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32872 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32873 ;;Total ram usage:        8 bytes
 32874 ;; Hardware stack levels used:    1
 32875 ;; Hardware stack levels required when called:   12
 32876 ;; This function calls:
 32877 ;;		___wmul
 32878 ;; This function is called by:
 32879 ;;		_I2cSlv_MainTask
 32880 ;; This function uses a non-reentrant model
 32881 ;;
 32882                           
 32883                           	psect	text151
 32884  003F9A                     __ptext151:
 32885                           	opt stack 0
 32886  003F9A                     _OsAlrm_SetOsAlarm:
 32887                           	opt stack 15
 32888                           
 32889                           ;os_alarms.c: 80: OsAlarms[OsAlarmId].Enabled = 1u;
 32890                           
 32891                           ; BSR set to: 0
 32892                           ;incstack = 0
 32893  003F9A  C083  F07D         	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 32894  003F9E  C084  F07E         	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 32895  003FA2  0E00               	movlw	0
 32896  003FA4  0100               	movlb	0	; () banked
 32897  003FA6  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 32898  003FA8  0E0B               	movlw	11
 32899  003FAA  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 32900  003FAC  ECE1  F031         	call	___wmul	;wreg free
 32901  003FB0  0E00               	movlw	low _OsAlarms
 32902  003FB2  0100               	movlb	0	; () banked
 32903  003FB4  257D               	addwf	?___wmul& (0+255),w,b
 32904  003FB6  6ED9               	movwf	fsr2l,c
 32905  003FB8  0E06               	movlw	high _OsAlarms
 32906  003FBA  217E               	addwfc	(?___wmul+1)& (0+255),w,b
 32907  003FBC  6EDA               	movwf	fsr2h,c
 32908  003FBE  0E01               	movlw	1
 32909  003FC0  6EDF               	movwf	indf2,c
 32910                           
 32911                           ;os_alarms.c: 82: OsAlarms[OsAlarmId].Counter = 0;
 32912  003FC2  C083  F07D         	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 32913  003FC6  C084  F07E         	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 32914  003FCA  0E00               	movlw	0
 32915  003FCC  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 32916  003FCE  0E0B               	movlw	11
 32917  003FD0  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 32918  003FD2  ECE1  F031         	call	___wmul	;wreg free
 32919  003FD6  0E01               	movlw	1
 32920  003FD8  0100               	movlb	0	; () banked
 32921  003FDA  277D               	addwf	?___wmul& (0+255),f,b
 32922  003FDC  0E00               	movlw	0
 32923  003FDE  237E               	addwfc	(?___wmul+1)& (0+255),f,b
 32924  003FE0  0E00               	movlw	low _OsAlarms
 32925  003FE2  257D               	addwf	?___wmul& (0+255),w,b
 32926  003FE4  6ED9               	movwf	fsr2l,c
 32927  003FE6  0E06               	movlw	high _OsAlarms
 32928  003FE8  217E               	addwfc	(?___wmul+1)& (0+255),w,b
 32929  003FEA  6EDA               	movwf	fsr2h,c
 32930  003FEC  6ADE               	clrf	postinc2,c
 32931  003FEE  6ADE               	clrf	postinc2,c
 32932  003FF0  6ADE               	clrf	postinc2,c
 32933  003FF2  6ADD               	clrf	postdec2,c
 32934                           
 32935                           ;os_alarms.c: 84: OsAlarms[OsAlarmId].AlarmTime = OsAlarmTimeout;
 32936  003FF4  C083  F07D         	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 32937  003FF8  C084  F07E         	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 32938  003FFC  0E00               	movlw	0
 32939  003FFE  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 32940  004000  0E0B               	movlw	11
 32941  004002  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 32942  004004  ECE1  F031         	call	___wmul	;wreg free
 32943  004008  0E05               	movlw	5
 32944  00400A  0100               	movlb	0	; () banked
 32945  00400C  277D               	addwf	?___wmul& (0+255),f,b
 32946  00400E  0E00               	movlw	0
 32947  004010  237E               	addwfc	(?___wmul+1)& (0+255),f,b
 32948  004012  0E00               	movlw	low _OsAlarms
 32949  004014  257D               	addwf	?___wmul& (0+255),w,b
 32950  004016  6ED9               	movwf	fsr2l,c
 32951  004018  0E06               	movlw	high _OsAlarms
 32952  00401A  217E               	addwfc	(?___wmul+1)& (0+255),w,b
 32953  00401C  6EDA               	movwf	fsr2h,c
 32954  00401E  C085  FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout,postinc2
 32955  004022  C086  FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout+1,postinc2
 32956  004026  C087  FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout+2,postinc2
 32957  00402A  C088  FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout+3,postinc2
 32958                           
 32959                           ;os_alarms.c: 86: OsAlarms[OsAlarmId].AlrmCbk = AlarmCallback;
 32960  00402E  C083  F07D         	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 32961  004032  C084  F07E         	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 32962  004036  0E00               	movlw	0
 32963  004038  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 32964  00403A  0E0B               	movlw	11
 32965  00403C  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 32966  00403E  ECE1  F031         	call	___wmul	;wreg free
 32967  004042  0E09               	movlw	9
 32968  004044  0100               	movlb	0	; () banked
 32969  004046  277D               	addwf	?___wmul& (0+255),f,b
 32970  004048  0E00               	movlw	0
 32971  00404A  237E               	addwfc	(?___wmul+1)& (0+255),f,b
 32972  00404C  0E00               	movlw	low _OsAlarms
 32973  00404E  257D               	addwf	?___wmul& (0+255),w,b
 32974  004050  6ED9               	movwf	fsr2l,c
 32975  004052  0E06               	movlw	high _OsAlarms
 32976  004054  217E               	addwfc	(?___wmul+1)& (0+255),w,b
 32977  004056  6EDA               	movwf	fsr2h,c
 32978  004058  C089  FFDE         	movff	OsAlrm_SetOsAlarm@AlarmCallback,postinc2
 32979  00405C  C08A  FFDD         	movff	OsAlrm_SetOsAlarm@AlarmCallback+1,postdec2
 32980                           
 32981                           ; BSR set to: 0
 32982  004060  0012               	return		;funcret
 32983  004062                     __end_of_OsAlrm_SetOsAlarm:
 32984                           	opt stack 0
 32985                           tosu	equ	0xFFF
 32986                           tosh	equ	0xFFE
 32987                           tosl	equ	0xFFD
 32988                           pclath	equ	0xFFA
 32989                           tblptru	equ	0xFF8
 32990                           tblptrh	equ	0xFF7
 32991                           tblptrl	equ	0xFF6
 32992                           tablat	equ	0xFF5
 32993                           prodh	equ	0xFF4
 32994                           prodl	equ	0xFF3
 32995                           intcon	equ	0xFF2
 32996                           intcon2	equ	0xFF1
 32997                           intcon3	equ	0xFF0
 32998                           indf0	equ	0xFEF
 32999                           postinc0	equ	0xFEE
 33000                           plusw0	equ	0xFEB
 33001                           fsr0h	equ	0xFEA
 33002                           fsr0l	equ	0xFE9
 33003                           wreg	equ	0xFE8
 33004                           indf1	equ	0xFE7
 33005                           postinc1	equ	0xFE6
 33006                           postdec1	equ	0xFE5
 33007                           plusw1	equ	0xFE3
 33008                           fsr1h	equ	0xFE2
 33009                           fsr1l	equ	0xFE1
 33010                           indf2	equ	0xFDF
 33011                           postinc2	equ	0xFDE
 33012                           postdec2	equ	0xFDD
 33013                           plusw2	equ	0xFDB
 33014                           fsr2h	equ	0xFDA
 33015                           fsr2l	equ	0xFD9
 33016                           status	equ	0xFD8
 33017                           
 33018 ;; *************** function ___wmul *****************
 33019 ;; Defined at:
 33020 ;;		line 15 in file "/opt/microchip/xc8/v1.45/sources/common/Umul16.c"
 33021 ;; Parameters:    Size  Location     Type
 33022 ;;  multiplier      2   29[BANK0 ] unsigned int 
 33023 ;;  multiplicand    2   31[BANK0 ] unsigned int 
 33024 ;; Auto vars:     Size  Location     Type
 33025 ;;  product         2   33[BANK0 ] unsigned int 
 33026 ;; Return value:  Size  Location     Type
 33027 ;;                  2   29[BANK0 ] unsigned int 
 33028 ;; Registers used:
 33029 ;;		wreg, status,2, status,0, prodl, prodh
 33030 ;; Tracked objects:
 33031 ;;		On entry : 0/0
 33032 ;;		On exit  : 0/0
 33033 ;;		Unchanged: 0/0
 33034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33035 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33036 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33037 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33038 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33039 ;;Total ram usage:        6 bytes
 33040 ;; Hardware stack levels used:    1
 33041 ;; Hardware stack levels required when called:   11
 33042 ;; This function calls:
 33043 ;;		Nothing
 33044 ;; This function is called by:
 33045 ;;		_OsAlrm_SetOsAlarm
 33046 ;;		_secondsAppTimer
 33047 ;;		_atoi
 33048 ;; This function uses a non-reentrant model
 33049 ;;
 33050                           
 33051                           	psect	text152
 33052  0063C2                     __ptext152:
 33053                           	opt stack 0
 33054  0063C2                     ___wmul:
 33055                           	opt stack 13
 33056                           
 33057                           ; BSR set to: 0
 33058                           ;incstack = 0
 33059  0063C2  0100               	movlb	0	; () banked
 33060  0063C4  517D               	movf	___wmul@multiplier& (0+255),w,b
 33061  0063C6  037F               	mulwf	___wmul@multiplicand& (0+255),b
 33062  0063C8  CFF3 F081          	movff	prodl,___wmul@product
 33063  0063CC  CFF4 F082          	movff	prodh,___wmul@product+1
 33064  0063D0  517D               	movf	___wmul@multiplier& (0+255),w,b
 33065  0063D2  0380               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 33066  0063D4  50F3               	movf	prodl,w,c
 33067  0063D6  2782               	addwf	(___wmul@product+1)& (0+255),f,b
 33068  0063D8  517E               	movf	(___wmul@multiplier+1)& (0+255),w,b
 33069  0063DA  037F               	mulwf	___wmul@multiplicand& (0+255),b
 33070  0063DC  50F3               	movf	prodl,w,c
 33071  0063DE  2782               	addwf	(___wmul@product+1)& (0+255),f,b
 33072                           
 33073                           ; BSR set to: 0
 33074  0063E0  C081  F07D         	movff	___wmul@product,?___wmul
 33075  0063E4  C082  F07E         	movff	___wmul@product+1,?___wmul+1
 33076  0063E8  0012               	return	
 33077  0063EA                     __end_of___wmul:
 33078                           	opt stack 0
 33079                           tosu	equ	0xFFF
 33080                           tosh	equ	0xFFE
 33081                           tosl	equ	0xFFD
 33082                           pclath	equ	0xFFA
 33083                           tblptru	equ	0xFF8
 33084                           tblptrh	equ	0xFF7
 33085                           tblptrl	equ	0xFF6
 33086                           tablat	equ	0xFF5
 33087                           prodh	equ	0xFF4
 33088                           prodl	equ	0xFF3
 33089                           intcon	equ	0xFF2
 33090                           intcon2	equ	0xFF1
 33091                           intcon3	equ	0xFF0
 33092                           indf0	equ	0xFEF
 33093                           postinc0	equ	0xFEE
 33094                           plusw0	equ	0xFEB
 33095                           fsr0h	equ	0xFEA
 33096                           fsr0l	equ	0xFE9
 33097                           wreg	equ	0xFE8
 33098                           indf1	equ	0xFE7
 33099                           postinc1	equ	0xFE6
 33100                           postdec1	equ	0xFE5
 33101                           plusw1	equ	0xFE3
 33102                           fsr1h	equ	0xFE2
 33103                           fsr1l	equ	0xFE1
 33104                           indf2	equ	0xFDF
 33105                           postinc2	equ	0xFDE
 33106                           postdec2	equ	0xFDD
 33107                           plusw2	equ	0xFDB
 33108                           fsr2h	equ	0xFDA
 33109                           fsr2l	equ	0xFD9
 33110                           status	equ	0xFD8
 33111                           
 33112 ;; *************** function _I2c_InitI2cModule *****************
 33113 ;; Defined at:
 33114 ;;		line 228 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 33115 ;; Parameters:    Size  Location     Type
 33116 ;;  I2cConfig       2   66[BANK0 ] PTR struct _I2cConfig
 33117 ;;		 -> I2cConfig(10), 
 33118 ;; Auto vars:     Size  Location     Type
 33119 ;;		None
 33120 ;; Return value:  Size  Location     Type
 33121 ;;                  1    wreg      void 
 33122 ;; Registers used:
 33123 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 33124 ;; Tracked objects:
 33125 ;;		On entry : 0/0
 33126 ;;		On exit  : 0/0
 33127 ;;		Unchanged: 0/0
 33128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33129 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33130 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33131 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33132 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33133 ;;Total ram usage:        4 bytes
 33134 ;; Hardware stack levels used:    1
 33135 ;; Hardware stack levels required when called:   13
 33136 ;; This function calls:
 33137 ;;		_SetBaudRate
 33138 ;; This function is called by:
 33139 ;;		_I2cSlv_MainTask
 33140 ;; This function uses a non-reentrant model
 33141 ;;
 33142                           
 33143                           	psect	text153
 33144  005174                     __ptext153:
 33145                           	opt stack 0
 33146  005174                     _I2c_InitI2cModule:
 33147                           	opt stack 14
 33148                           
 33149                           ;i2c_drv.c: 231: TRISDbits.TRISD1 = ((UINT8)(1));
 33150                           
 33151                           ; BSR set to: 0
 33152                           ;incstack = 0
 33153  005174  8295               	bsf	3989,1,c	;volatile
 33154                           
 33155                           ;i2c_drv.c: 232: TRISDbits.TRISD0 = ((UINT8)(1));
 33156  005176  8095               	bsf	3989,0,c	;volatile
 33157                           
 33158                           ;i2c_drv.c: 235: SetBaudRate(I2cConfig->I2cBaudRateHz, I2cConfig->McuBusClockHz);
 33159  005178  C0A2  FFD9         	movff	I2c_InitI2cModule@I2cConfig,fsr2l
 33160  00517C  C0A3  FFDA         	movff	I2c_InitI2cModule@I2cConfig+1,fsr2h
 33161  005180  CFDE F096          	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz
 33162  005184  CFDE F097          	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz+1
 33163  005188  CFDE F098          	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz+2
 33164  00518C  CFDE F099          	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz+3
 33165  005190  0100               	movlb	0	; () banked
 33166  005192  EE20 F004          	lfsr	2,4
 33167  005196  51A2               	movf	I2c_InitI2cModule@I2cConfig& (0+255),w,b
 33168  005198  26D9               	addwf	fsr2l,f,c
 33169  00519A  51A3               	movf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),w,b
 33170  00519C  22DA               	addwfc	fsr2h,f,c
 33171  00519E  CFDE F09A          	movff	postinc2,SetBaudRate@McuClockHz
 33172  0051A2  CFDE F09B          	movff	postinc2,SetBaudRate@McuClockHz+1
 33173  0051A6  CFDE F09C          	movff	postinc2,SetBaudRate@McuClockHz+2
 33174  0051AA  CFDE F09D          	movff	postinc2,SetBaudRate@McuClockHz+3
 33175  0051AE  ECEF  F02D         	call	_SetBaudRate	;wreg free
 33176                           
 33177                           ;i2c_drv.c: 240: SSP2CON1 |= (I2cConfig->I2cModuleMode) << ((UINT8)(0));
 33178  0051B2  0100               	movlb	0	; () banked
 33179  0051B4  EE20 F008          	lfsr	2,8
 33180  0051B8  51A2               	movf	I2c_InitI2cModule@I2cConfig& (0+255),w,b
 33181  0051BA  26D9               	addwf	fsr2l,f,c
 33182  0051BC  51A3               	movf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),w,b
 33183  0051BE  22DA               	addwfc	fsr2h,f,c
 33184  0051C0  50DF               	movf	indf2,w,c
 33185  0051C2  1272               	iorwf	3954,f,c	;volatile
 33186                           
 33187                           ; BSR set to: 0
 33188                           ;i2c_drv.c: 241: SSP2CON1 |= (I2cConfig->EnableI2cModule) << ((UINT8)(5));
 33189  0051C4  EE20 F009          	lfsr	2,9
 33190  0051C8  51A2               	movf	I2c_InitI2cModule@I2cConfig& (0+255),w,b
 33191  0051CA  26D9               	addwf	fsr2l,f,c
 33192  0051CC  51A3               	movf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),w,b
 33193  0051CE  22DA               	addwfc	fsr2h,f,c
 33194  0051D0  50DF               	movf	indf2,w,c
 33195  0051D2  6FA4               	movwf	??_I2c_InitI2cModule& (0+255),b
 33196  0051D4  0E05               	movlw	5
 33197  0051D6  6FA5               	movwf	(??_I2c_InitI2cModule+1)& (0+255),b
 33198  0051D8                     u14195:
 33199  0051D8  90D8               	bcf	status,0,c
 33200  0051DA  37A4               	rlcf	??_I2c_InitI2cModule& (0+255),f,b
 33201  0051DC  2FA5               	decfsz	(??_I2c_InitI2cModule+1)& (0+255),f,b
 33202  0051DE  D7FC               	goto	u14195
 33203  0051E0  51A4               	movf	??_I2c_InitI2cModule& (0+255),w,b
 33204  0051E2  1272               	iorwf	3954,f,c	;volatile
 33205                           
 33206                           ; BSR set to: 0
 33207  0051E4  0012               	return		;funcret
 33208  0051E6                     __end_of_I2c_InitI2cModule:
 33209                           	opt stack 0
 33210                           tosu	equ	0xFFF
 33211                           tosh	equ	0xFFE
 33212                           tosl	equ	0xFFD
 33213                           pclath	equ	0xFFA
 33214                           tblptru	equ	0xFF8
 33215                           tblptrh	equ	0xFF7
 33216                           tblptrl	equ	0xFF6
 33217                           tablat	equ	0xFF5
 33218                           prodh	equ	0xFF4
 33219                           prodl	equ	0xFF3
 33220                           intcon	equ	0xFF2
 33221                           intcon2	equ	0xFF1
 33222                           intcon3	equ	0xFF0
 33223                           indf0	equ	0xFEF
 33224                           postinc0	equ	0xFEE
 33225                           plusw0	equ	0xFEB
 33226                           fsr0h	equ	0xFEA
 33227                           fsr0l	equ	0xFE9
 33228                           wreg	equ	0xFE8
 33229                           indf1	equ	0xFE7
 33230                           postinc1	equ	0xFE6
 33231                           postdec1	equ	0xFE5
 33232                           plusw1	equ	0xFE3
 33233                           fsr1h	equ	0xFE2
 33234                           fsr1l	equ	0xFE1
 33235                           indf2	equ	0xFDF
 33236                           postinc2	equ	0xFDE
 33237                           postdec2	equ	0xFDD
 33238                           plusw2	equ	0xFDB
 33239                           fsr2h	equ	0xFDA
 33240                           fsr2l	equ	0xFD9
 33241                           status	equ	0xFD8
 33242                           
 33243 ;; *************** function _SetBaudRate *****************
 33244 ;; Defined at:
 33245 ;;		line 78 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 33246 ;; Parameters:    Size  Location     Type
 33247 ;;  DesiredI2cBu    4   54[BANK0 ] unsigned long 
 33248 ;;  McuClockHz      4   58[BANK0 ] unsigned long 
 33249 ;; Auto vars:     Size  Location     Type
 33250 ;;		None
 33251 ;; Return value:  Size  Location     Type
 33252 ;;                  1    wreg      void 
 33253 ;; Registers used:
 33254 ;;		wreg, status,2, status,0, cstack
 33255 ;; Tracked objects:
 33256 ;;		On entry : 0/0
 33257 ;;		On exit  : 0/0
 33258 ;;		Unchanged: 0/0
 33259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33260 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33261 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33262 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33263 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33264 ;;Total ram usage:       12 bytes
 33265 ;; Hardware stack levels used:    1
 33266 ;; Hardware stack levels required when called:   12
 33267 ;; This function calls:
 33268 ;;		___lldiv
 33269 ;; This function is called by:
 33270 ;;		_I2c_InitI2cModule
 33271 ;; This function uses a non-reentrant model
 33272 ;;
 33273                           
 33274                           	psect	text154
 33275  005BDE                     __ptext154:
 33276                           	opt stack 0
 33277  005BDE                     _SetBaudRate:
 33278                           	opt stack 14
 33279                           
 33280                           ;i2c_drv.c: 81: SSP2ADD = ((McuClockHz/(4*DesiredI2cBusClockHz)) - 1);
 33281                           
 33282                           ; BSR set to: 0
 33283                           ;incstack = 0
 33284  005BDE  C09A  F089         	movff	SetBaudRate@McuClockHz,___lldiv@dividend
 33285  005BE2  C09B  F08A         	movff	SetBaudRate@McuClockHz+1,___lldiv@dividend+1
 33286  005BE6  C09C  F08B         	movff	SetBaudRate@McuClockHz+2,___lldiv@dividend+2
 33287  005BEA  C09D  F08C         	movff	SetBaudRate@McuClockHz+3,___lldiv@dividend+3
 33288  005BEE  C096  F09E         	movff	SetBaudRate@DesiredI2cBusClockHz,??_SetBaudRate
 33289  005BF2  C097  F09F         	movff	SetBaudRate@DesiredI2cBusClockHz+1,??_SetBaudRate+1
 33290  005BF6  C098  F0A0         	movff	SetBaudRate@DesiredI2cBusClockHz+2,??_SetBaudRate+2
 33291  005BFA  C099  F0A1         	movff	SetBaudRate@DesiredI2cBusClockHz+3,??_SetBaudRate+3
 33292  005BFE  0E02               	movlw	2
 33293  005C00                     u13105:
 33294  005C00  90D8               	bcf	status,0,c
 33295  005C02  0100               	movlb	0	; () banked
 33296  005C04  379E               	rlcf	??_SetBaudRate& (0+255),f,b
 33297  005C06  379F               	rlcf	(??_SetBaudRate+1)& (0+255),f,b
 33298  005C08  37A0               	rlcf	(??_SetBaudRate+2)& (0+255),f,b
 33299  005C0A  37A1               	rlcf	(??_SetBaudRate+3)& (0+255),f,b
 33300  005C0C  2EE8               	decfsz	wreg,f,c
 33301  005C0E  D7F8               	goto	u13105
 33302  005C10  C09E  F08D         	movff	??_SetBaudRate,___lldiv@divisor
 33303  005C14  C09F  F08E         	movff	??_SetBaudRate+1,___lldiv@divisor+1
 33304  005C18  C0A0  F08F         	movff	??_SetBaudRate+2,___lldiv@divisor+2
 33305  005C1C  C0A1  F090         	movff	??_SetBaudRate+3,___lldiv@divisor+3
 33306  005C20  ECFE  F027         	call	___lldiv	;wreg free
 33307  005C24  0100               	movlb	0	; () banked
 33308  005C26  0589               	decf	?___lldiv& (0+255),w,b
 33309  005C28  6E74               	movwf	3956,c	;volatile
 33310                           
 33311                           ; BSR set to: 0
 33312  005C2A  0012               	return		;funcret
 33313  005C2C                     __end_of_SetBaudRate:
 33314                           	opt stack 0
 33315                           tosu	equ	0xFFF
 33316                           tosh	equ	0xFFE
 33317                           tosl	equ	0xFFD
 33318                           pclath	equ	0xFFA
 33319                           tblptru	equ	0xFF8
 33320                           tblptrh	equ	0xFF7
 33321                           tblptrl	equ	0xFF6
 33322                           tablat	equ	0xFF5
 33323                           prodh	equ	0xFF4
 33324                           prodl	equ	0xFF3
 33325                           intcon	equ	0xFF2
 33326                           intcon2	equ	0xFF1
 33327                           intcon3	equ	0xFF0
 33328                           indf0	equ	0xFEF
 33329                           postinc0	equ	0xFEE
 33330                           plusw0	equ	0xFEB
 33331                           fsr0h	equ	0xFEA
 33332                           fsr0l	equ	0xFE9
 33333                           wreg	equ	0xFE8
 33334                           indf1	equ	0xFE7
 33335                           postinc1	equ	0xFE6
 33336                           postdec1	equ	0xFE5
 33337                           plusw1	equ	0xFE3
 33338                           fsr1h	equ	0xFE2
 33339                           fsr1l	equ	0xFE1
 33340                           indf2	equ	0xFDF
 33341                           postinc2	equ	0xFDE
 33342                           postdec2	equ	0xFDD
 33343                           plusw2	equ	0xFDB
 33344                           fsr2h	equ	0xFDA
 33345                           fsr2l	equ	0xFD9
 33346                           status	equ	0xFD8
 33347                           
 33348 ;; *************** function ___lldiv *****************
 33349 ;; Defined at:
 33350 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/lldiv.c"
 33351 ;; Parameters:    Size  Location     Type
 33352 ;;  dividend        4   41[BANK0 ] unsigned long 
 33353 ;;  divisor         4   45[BANK0 ] unsigned long 
 33354 ;; Auto vars:     Size  Location     Type
 33355 ;;  quotient        4   49[BANK0 ] unsigned long 
 33356 ;;  counter         1   53[BANK0 ] unsigned char 
 33357 ;; Return value:  Size  Location     Type
 33358 ;;                  4   41[BANK0 ] unsigned long 
 33359 ;; Registers used:
 33360 ;;		wreg, status,2, status,0
 33361 ;; Tracked objects:
 33362 ;;		On entry : 0/0
 33363 ;;		On exit  : 0/0
 33364 ;;		Unchanged: 0/0
 33365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33366 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33367 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33368 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33369 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33370 ;;Total ram usage:       13 bytes
 33371 ;; Hardware stack levels used:    1
 33372 ;; Hardware stack levels required when called:   11
 33373 ;; This function calls:
 33374 ;;		Nothing
 33375 ;; This function is called by:
 33376 ;;		_SetBaudRate
 33377 ;;		_Tmr_TmrBPrSet
 33378 ;;		_SetUartBaudRate
 33379 ;; This function uses a non-reentrant model
 33380 ;;
 33381                           
 33382                           	psect	text155
 33383  004FFC                     __ptext155:
 33384                           	opt stack 0
 33385  004FFC                     ___lldiv:
 33386                           	opt stack 15
 33387                           
 33388                           ; BSR set to: 0
 33389                           ;incstack = 0
 33390  004FFC  0E00               	movlw	0
 33391  004FFE  0100               	movlb	0	; () banked
 33392  005000  6F91               	movwf	___lldiv@quotient& (0+255),b
 33393  005002  0E00               	movlw	0
 33394  005004  6F92               	movwf	(___lldiv@quotient+1)& (0+255),b
 33395  005006  0E00               	movlw	0
 33396  005008  6F93               	movwf	(___lldiv@quotient+2)& (0+255),b
 33397  00500A  0E00               	movlw	0
 33398  00500C  6F94               	movwf	(___lldiv@quotient+3)& (0+255),b
 33399                           
 33400                           ; BSR set to: 0
 33401  00500E  518D               	movf	___lldiv@divisor& (0+255),w,b
 33402  005010  118E               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 33403  005012  118F               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 33404  005014  1190               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 33405  005016  B4D8               	btfsc	status,2,c
 33406  005018  D02A               	goto	l3219
 33407                           
 33408                           ; BSR set to: 0
 33409  00501A  0E01               	movlw	1
 33410  00501C  6F95               	movwf	___lldiv@counter& (0+255),b
 33411  00501E  D006               	goto	l3214
 33412  005020                     
 33413                           ; BSR set to: 0
 33414                           
 33415                           ; BSR set to: 0
 33416  005020  90D8               	bcf	status,0,c
 33417  005022  378D               	rlcf	___lldiv@divisor& (0+255),f,b
 33418  005024  378E               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 33419  005026  378F               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 33420  005028  3790               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 33421  00502A  2B95               	incf	___lldiv@counter& (0+255),f,b
 33422  00502C                     l3214:
 33423                           
 33424                           ; BSR set to: 0
 33425                           
 33426                           ; BSR set to: 0
 33427  00502C  AF90               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 33428  00502E  D7F8               	goto	l3215
 33429  005030                     u12170:
 33430                           
 33431                           ; BSR set to: 0
 33432                           
 33433                           ; BSR set to: 0
 33434                           
 33435                           ; BSR set to: 0
 33436  005030  90D8               	bcf	status,0,c
 33437  005032  3791               	rlcf	___lldiv@quotient& (0+255),f,b
 33438  005034  3792               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 33439  005036  3793               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 33440  005038  3794               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 33441                           
 33442                           ; BSR set to: 0
 33443  00503A  518D               	movf	___lldiv@divisor& (0+255),w,b
 33444  00503C  5D89               	subwf	___lldiv@dividend& (0+255),w,b
 33445  00503E  518E               	movf	(___lldiv@divisor+1)& (0+255),w,b
 33446  005040  598A               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 33447  005042  518F               	movf	(___lldiv@divisor+2)& (0+255),w,b
 33448  005044  598B               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 33449  005046  5190               	movf	(___lldiv@divisor+3)& (0+255),w,b
 33450  005048  598C               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 33451  00504A  A0D8               	btfss	status,0,c
 33452  00504C  D009               	goto	l3218
 33453                           
 33454                           ; BSR set to: 0
 33455  00504E  518D               	movf	___lldiv@divisor& (0+255),w,b
 33456  005050  5F89               	subwf	___lldiv@dividend& (0+255),f,b
 33457  005052  518E               	movf	(___lldiv@divisor+1)& (0+255),w,b
 33458  005054  5B8A               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 33459  005056  518F               	movf	(___lldiv@divisor+2)& (0+255),w,b
 33460  005058  5B8B               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 33461  00505A  5190               	movf	(___lldiv@divisor+3)& (0+255),w,b
 33462  00505C  5B8C               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 33463                           
 33464                           ; BSR set to: 0
 33465  00505E  8191               	bsf	___lldiv@quotient& (0+255),0,b
 33466  005060                     l3218:
 33467                           
 33468                           ; BSR set to: 0
 33469                           
 33470                           ; BSR set to: 0
 33471  005060  90D8               	bcf	status,0,c
 33472  005062  3390               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 33473  005064  338F               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 33474  005066  338E               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 33475  005068  338D               	rrcf	___lldiv@divisor& (0+255),f,b
 33476                           
 33477                           ; BSR set to: 0
 33478  00506A  2F95               	decfsz	___lldiv@counter& (0+255),f,b
 33479  00506C  D7E1               	goto	u12170
 33480  00506E                     l3219:
 33481                           
 33482                           ; BSR set to: 0
 33483                           
 33484                           ; BSR set to: 0
 33485  00506E  C091  F089         	movff	___lldiv@quotient,?___lldiv
 33486  005072  C092  F08A         	movff	___lldiv@quotient+1,?___lldiv+1
 33487  005076  C093  F08B         	movff	___lldiv@quotient+2,?___lldiv+2
 33488  00507A  C094  F08C         	movff	___lldiv@quotient+3,?___lldiv+3
 33489                           
 33490                           ; BSR set to: 0
 33491  00507E  0012               	return		;funcret
 33492  005080                     __end_of___lldiv:
 33493                           	opt stack 0
 33494                           tosu	equ	0xFFF
 33495                           tosh	equ	0xFFE
 33496                           tosl	equ	0xFFD
 33497                           pclath	equ	0xFFA
 33498                           tblptru	equ	0xFF8
 33499                           tblptrh	equ	0xFF7
 33500                           tblptrl	equ	0xFF6
 33501                           tablat	equ	0xFF5
 33502                           prodh	equ	0xFF4
 33503                           prodl	equ	0xFF3
 33504                           intcon	equ	0xFF2
 33505                           intcon2	equ	0xFF1
 33506                           intcon3	equ	0xFF0
 33507                           indf0	equ	0xFEF
 33508                           postinc0	equ	0xFEE
 33509                           plusw0	equ	0xFEB
 33510                           fsr0h	equ	0xFEA
 33511                           fsr0l	equ	0xFE9
 33512                           wreg	equ	0xFE8
 33513                           indf1	equ	0xFE7
 33514                           postinc1	equ	0xFE6
 33515                           postdec1	equ	0xFE5
 33516                           plusw1	equ	0xFE3
 33517                           fsr1h	equ	0xFE2
 33518                           fsr1l	equ	0xFE1
 33519                           indf2	equ	0xFDF
 33520                           postinc2	equ	0xFDE
 33521                           postdec2	equ	0xFDD
 33522                           plusw2	equ	0xFDB
 33523                           fsr2h	equ	0xFDA
 33524                           fsr2l	equ	0xFD9
 33525                           status	equ	0xFD8
 33526                           
 33527 ;; *************** function _I2cSetConfig *****************
 33528 ;; Defined at:
 33529 ;;		line 101 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 33530 ;; Parameters:    Size  Location     Type
 33531 ;;		None
 33532 ;; Auto vars:     Size  Location     Type
 33533 ;;		None
 33534 ;; Return value:  Size  Location     Type
 33535 ;;                  1    wreg      void 
 33536 ;; Registers used:
 33537 ;;		wreg, status,2
 33538 ;; Tracked objects:
 33539 ;;		On entry : 0/0
 33540 ;;		On exit  : 0/0
 33541 ;;		Unchanged: 0/0
 33542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33543 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33544 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33545 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33546 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33547 ;;Total ram usage:        0 bytes
 33548 ;; Hardware stack levels used:    1
 33549 ;; Hardware stack levels required when called:   11
 33550 ;; This function calls:
 33551 ;;		Nothing
 33552 ;; This function is called by:
 33553 ;;		_I2cSlv_MainTask
 33554 ;; This function uses a non-reentrant model
 33555 ;;
 33556                           
 33557                           	psect	text156
 33558  006342                     __ptext156:
 33559                           	opt stack 0
 33560  006342                     _I2cSetConfig:
 33561                           	opt stack 16
 33562                           
 33563                           ;i2c_slv.c: 103: I2cConfig.I2cBaudRateHz = ((UINT32)(400000));
 33564                           
 33565                           ; BSR set to: 0
 33566                           ;incstack = 0
 33567  006342  0E80               	movlw	128
 33568  006344  0103               	movlb	3	; () banked
 33569  006346  6F48               	movwf	_I2cConfig& (0+255),b
 33570  006348  0E1A               	movlw	26
 33571  00634A  6F49               	movwf	(_I2cConfig+1)& (0+255),b
 33572  00634C  0E06               	movlw	6
 33573  00634E  6F4A               	movwf	(_I2cConfig+2)& (0+255),b
 33574  006350  0E00               	movlw	0
 33575  006352  6F4B               	movwf	(_I2cConfig+3)& (0+255),b
 33576                           
 33577                           ;i2c_slv.c: 104: I2cConfig.McuBusClockHz = ((UINT32)(48000000));
 33578  006354  0E00               	movlw	0
 33579  006356  6F4C               	movwf	(_I2cConfig+4)& (0+255),b
 33580  006358  0E6C               	movlw	108
 33581  00635A  6F4D               	movwf	(_I2cConfig+5)& (0+255),b
 33582  00635C  0EDC               	movlw	220
 33583  00635E  6F4E               	movwf	(_I2cConfig+6)& (0+255),b
 33584  006360  0E02               	movlw	2
 33585  006362  6F4F               	movwf	(_I2cConfig+7)& (0+255),b
 33586                           
 33587                           ;i2c_slv.c: 105: I2cConfig.I2cModuleMode = ((UINT8)(0b1000));
 33588  006364  0E08               	movlw	8
 33589  006366  6F50               	movwf	(_I2cConfig+8)& (0+255),b
 33590                           
 33591                           ;i2c_slv.c: 106: I2cConfig.EnableI2cModule = ((UINT8)(1));
 33592  006368  0E01               	movlw	1
 33593  00636A  6F51               	movwf	(_I2cConfig+9)& (0+255),b
 33594                           
 33595                           ; BSR set to: 3
 33596  00636C  0012               	return		;funcret
 33597  00636E                     __end_of_I2cSetConfig:
 33598                           	opt stack 0
 33599                           tosu	equ	0xFFF
 33600                           tosh	equ	0xFFE
 33601                           tosl	equ	0xFFD
 33602                           pclath	equ	0xFFA
 33603                           tblptru	equ	0xFF8
 33604                           tblptrh	equ	0xFF7
 33605                           tblptrl	equ	0xFF6
 33606                           tablat	equ	0xFF5
 33607                           prodh	equ	0xFF4
 33608                           prodl	equ	0xFF3
 33609                           intcon	equ	0xFF2
 33610                           intcon2	equ	0xFF1
 33611                           intcon3	equ	0xFF0
 33612                           indf0	equ	0xFEF
 33613                           postinc0	equ	0xFEE
 33614                           plusw0	equ	0xFEB
 33615                           fsr0h	equ	0xFEA
 33616                           fsr0l	equ	0xFE9
 33617                           wreg	equ	0xFE8
 33618                           indf1	equ	0xFE7
 33619                           postinc1	equ	0xFE6
 33620                           postdec1	equ	0xFE5
 33621                           plusw1	equ	0xFE3
 33622                           fsr1h	equ	0xFE2
 33623                           fsr1l	equ	0xFE1
 33624                           indf2	equ	0xFDF
 33625                           postinc2	equ	0xFDE
 33626                           postdec2	equ	0xFDD
 33627                           plusw2	equ	0xFDB
 33628                           fsr2h	equ	0xFDA
 33629                           fsr2l	equ	0xFD9
 33630                           status	equ	0xFD8
 33631                           
 33632 ;; *************** function _I2cSendMsgSm *****************
 33633 ;; Defined at:
 33634 ;;		line 117 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 33635 ;; Parameters:    Size  Location     Type
 33636 ;;		None
 33637 ;; Auto vars:     Size  Location     Type
 33638 ;;		None
 33639 ;; Return value:  Size  Location     Type
 33640 ;;                  1    wreg      void 
 33641 ;; Registers used:
 33642 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 33643 ;; Tracked objects:
 33644 ;;		On entry : 0/0
 33645 ;;		On exit  : 0/0
 33646 ;;		Unchanged: 0/0
 33647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33648 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33649 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33651 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33652 ;;Total ram usage:        0 bytes
 33653 ;; Hardware stack levels used:    1
 33654 ;; Hardware stack levels required when called:   13
 33655 ;; This function calls:
 33656 ;;		_I2c_ReadData
 33657 ;;		_I2c_WriteData
 33658 ;;		_ReceiveEvt
 33659 ;; This function is called by:
 33660 ;;		_I2cSlv_MainTask
 33661 ;; This function uses a non-reentrant model
 33662 ;;
 33663                           
 33664                           	psect	text157
 33665  004062                     __ptext157:
 33666                           	opt stack 0
 33667  004062                     _I2cSendMsgSm:
 33668                           	opt stack 14
 33669                           
 33670                           ;i2c_slv.c: 120: static I2cComStateType I2cComState = I2cComIdle;
 33671                           ;i2c_slv.c: 122: switch(I2cComState)
 33672                           
 33673                           ; BSR set to: 3
 33674                           ;incstack = 0
 33675  004062  D04F               	goto	l1379
 33676  004064                     
 33677                           ;i2c_slv.c: 126: if (ReceiveEvt(&I2cWriteDataEvt))
 33678  004064  0ED7               	movlw	low _I2cWriteDataEvt
 33679  004066  0100               	movlb	0	; () banked
 33680  004068  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 33681  00406A  0E00               	movlw	high _I2cWriteDataEvt
 33682  00406C  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 33683  00406E  EC8A  F031         	call	_ReceiveEvt	;wreg free
 33684  004072  0900               	iorlw	0
 33685  004074  B4D8               	btfsc	status,2,c
 33686  004076  D007               	goto	l1381
 33687                           
 33688                           ;i2c_slv.c: 127: {
 33689                           ;i2c_slv.c: 129: I2cComState = I2cComWriteData;
 33690  004078  0E01               	movlw	1
 33691  00407A  0101               	movlb	1	; () banked
 33692  00407C  6FE6               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 33693                           
 33694                           ;i2c_slv.c: 131: I2cComSts = TxInProgress;
 33695  00407E  0E01               	movlw	1
 33696  004080  0100               	movlb	0	; () banked
 33697  004082  6FCD               	movwf	_I2cComSts& (0+255),b
 33698                           
 33699                           ;i2c_slv.c: 132: }
 33700  004084  0012               	return	
 33701  004086                     l1381:
 33702                           
 33703                           ;i2c_slv.c: 133: else if (ReceiveEvt(&I2cReadDataEvt))
 33704                           
 33705                           ; BSR set to: 0
 33706  004086  0ED6               	movlw	low _I2cReadDataEvt
 33707  004088  0100               	movlb	0	; () banked
 33708  00408A  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 33709  00408C  0E00               	movlw	high _I2cReadDataEvt
 33710  00408E  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 33711  004090  EC8A  F031         	call	_ReceiveEvt	;wreg free
 33712  004094  0900               	iorlw	0
 33713  004096  B4D8               	btfsc	status,2,c
 33714  004098  D007               	goto	l1383
 33715                           
 33716                           ;i2c_slv.c: 134: {
 33717                           ;i2c_slv.c: 136: I2cComState = I2cComReadData;
 33718  00409A  0E02               	movlw	2
 33719  00409C  0101               	movlb	1	; () banked
 33720  00409E  6FE6               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 33721                           
 33722                           ;i2c_slv.c: 138: I2cComSts = RxInProgress;
 33723  0040A0  0E02               	movlw	2
 33724  0040A2  0100               	movlb	0	; () banked
 33725  0040A4  6FCD               	movwf	_I2cComSts& (0+255),b
 33726                           
 33727                           ;i2c_slv.c: 139: }
 33728  0040A6  0012               	return	
 33729  0040A8                     l1383:
 33730                           
 33731                           ;i2c_slv.c: 140: else
 33732                           ;i2c_slv.c: 141: {
 33733                           ;i2c_slv.c: 143: I2cComSts = TxRxIdle;
 33734                           
 33735                           ; BSR set to: 0
 33736  0040A8  0E00               	movlw	0
 33737  0040AA  0100               	movlb	0	; () banked
 33738  0040AC  6FCD               	movwf	_I2cComSts& (0+255),b
 33739                           
 33740                           ; BSR set to: 0
 33741                           ;i2c_slv.c: 144: }
 33742                           ;i2c_slv.c: 145: break;
 33743                           
 33744                           ; BSR set to: 0
 33745  0040AE  0012               	return	
 33746  0040B0                     
 33747                           ;i2c_slv.c: 149: if (I2c_WriteData(&I2cTxPacket) != I2cWriteInProgress)
 33748                           
 33749                           ; BSR set to: 0
 33750  0040B0  0E99               	movlw	low _I2cTxPacket
 33751  0040B2  0100               	movlb	0	; () banked
 33752  0040B4  6F7E               	movwf	I2c_WriteData@WritePacket& (0+255),b
 33753  0040B6  0E03               	movlw	high _I2cTxPacket
 33754  0040B8  6F7F               	movwf	(I2c_WriteData@WritePacket+1)& (0+255),b
 33755  0040BA  ECB6  F010         	call	_I2c_WriteData	;wreg free
 33756  0040BE  0900               	iorlw	0
 33757  0040C0  B4D8               	btfsc	status,2,c
 33758  0040C2  0012               	return	
 33759                           
 33760                           ;i2c_slv.c: 150: {
 33761                           ;i2c_slv.c: 152: I2cComState = I2cComWriteComplete;
 33762  0040C4  0E03               	movlw	3
 33763  0040C6  0101               	movlb	1	; () banked
 33764  0040C8  6FE6               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 33765                           
 33766                           ; BSR set to: 1
 33767                           ;i2c_slv.c: 153: }
 33768                           ;i2c_slv.c: 154: break;
 33769  0040CA  0012               	return	
 33770  0040CC                     
 33771                           ; BSR set to: 1
 33772                           ;i2c_slv.c: 158: if (I2c_ReadData(&I2cRxPacket) != I2cReadInProgress)
 33773                           
 33774                           ; BSR set to: 1
 33775  0040CC  0E8E               	movlw	low _I2cRxPacket
 33776  0040CE  0100               	movlb	0	; () banked
 33777  0040D0  6F80               	movwf	I2c_ReadData@ReadPacket& (0+255),b
 33778  0040D2  0E03               	movlw	high _I2cRxPacket
 33779  0040D4  6F81               	movwf	(I2c_ReadData@ReadPacket+1)& (0+255),b
 33780  0040D6  EC6D  F011         	call	_I2c_ReadData	;wreg free
 33781  0040DA  0900               	iorlw	0
 33782  0040DC  B4D8               	btfsc	status,2,c
 33783  0040DE  0012               	return	
 33784                           
 33785                           ;i2c_slv.c: 159: {
 33786                           ;i2c_slv.c: 161: I2cComState = I2cComReadComplete;
 33787  0040E0  0E04               	movlw	4
 33788  0040E2  0101               	movlb	1	; () banked
 33789  0040E4  6FE6               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 33790                           
 33791                           ; BSR set to: 1
 33792                           ;i2c_slv.c: 162: }
 33793                           ;i2c_slv.c: 164: break;
 33794  0040E6  0012               	return	
 33795  0040E8                     
 33796                           ; BSR set to: 1
 33797                           ;i2c_slv.c: 168: I2cComState = I2cComIdle;
 33798                           
 33799                           ; BSR set to: 1
 33800  0040E8  0E00               	movlw	0
 33801  0040EA  6FE6               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 33802                           
 33803                           ;i2c_slv.c: 170: I2cComSts = TxRxIdle;
 33804  0040EC  0E00               	movlw	0
 33805  0040EE  0100               	movlb	0	; () banked
 33806  0040F0  6FCD               	movwf	_I2cComSts& (0+255),b
 33807                           
 33808                           ;i2c_slv.c: 171: break;
 33809  0040F2  0012               	return	
 33810  0040F4                     
 33811                           ;i2c_slv.c: 175: I2cComState = I2cComIdle;
 33812                           
 33813                           ; BSR set to: 0
 33814  0040F4  0E00               	movlw	0
 33815  0040F6  0101               	movlb	1	; () banked
 33816  0040F8  6FE6               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 33817                           
 33818                           ;i2c_slv.c: 177: I2cComSts = TxRxIdle;
 33819  0040FA  0E00               	movlw	0
 33820  0040FC  0100               	movlb	0	; () banked
 33821  0040FE  6FCD               	movwf	_I2cComSts& (0+255),b
 33822                           
 33823                           ; BSR set to: 0
 33824                           ;i2c_slv.c: 182: }
 33825                           
 33826                           ; BSR set to: 0
 33827                           ;i2c_slv.c: 181: break;
 33828                           
 33829                           ;i2c_slv.c: 180: default:
 33830                           
 33831                           ;i2c_slv.c: 178: break;
 33832  004100  0012               	return	
 33833  004102                     l1379:
 33834                           
 33835                           ; BSR set to: 0
 33836  004102  0101               	movlb	1	; () banked
 33837  004104  51E6               	movf	I2cSendMsgSm@I2cComState& (0+255),w,b
 33838                           
 33839                           ; Switch size 1, requested type "space"
 33840                           ; Number of cases is 5, Range of values is 0 to 4
 33841                           ; switch strategies available:
 33842                           ; Name         Instructions Cycles
 33843                           ; simple_byte           16     9 (average)
 33844                           ;	Chosen strategy is simple_byte
 33845  004106  0A00               	xorlw	0	; case 0
 33846  004108  B4D8               	btfsc	status,2,c
 33847  00410A  D7AC               	goto	l1380
 33848  00410C  0A01               	xorlw	1	; case 1
 33849  00410E  B4D8               	btfsc	status,2,c
 33850  004110  D7CF               	goto	l1386
 33851  004112  0A03               	xorlw	3	; case 2
 33852  004114  B4D8               	btfsc	status,2,c
 33853  004116  D7DA               	goto	l1388
 33854  004118  0A01               	xorlw	1	; case 3
 33855  00411A  B4D8               	btfsc	status,2,c
 33856  00411C  D7E5               	goto	l1390
 33857  00411E  0A07               	xorlw	7	; case 4
 33858  004120  A4D8               	btfss	status,2,c
 33859  004122  0012               	return	
 33860  004124  D7E7               	goto	l1391
 33861  004126                     __end_of_I2cSendMsgSm:
 33862                           	opt stack 0
 33863                           tosu	equ	0xFFF
 33864                           tosh	equ	0xFFE
 33865                           tosl	equ	0xFFD
 33866                           pclath	equ	0xFFA
 33867                           tblptru	equ	0xFF8
 33868                           tblptrh	equ	0xFF7
 33869                           tblptrl	equ	0xFF6
 33870                           tablat	equ	0xFF5
 33871                           prodh	equ	0xFF4
 33872                           prodl	equ	0xFF3
 33873                           intcon	equ	0xFF2
 33874                           intcon2	equ	0xFF1
 33875                           intcon3	equ	0xFF0
 33876                           indf0	equ	0xFEF
 33877                           postinc0	equ	0xFEE
 33878                           plusw0	equ	0xFEB
 33879                           fsr0h	equ	0xFEA
 33880                           fsr0l	equ	0xFE9
 33881                           wreg	equ	0xFE8
 33882                           indf1	equ	0xFE7
 33883                           postinc1	equ	0xFE6
 33884                           postdec1	equ	0xFE5
 33885                           plusw1	equ	0xFE3
 33886                           fsr1h	equ	0xFE2
 33887                           fsr1l	equ	0xFE1
 33888                           indf2	equ	0xFDF
 33889                           postinc2	equ	0xFDE
 33890                           postdec2	equ	0xFDD
 33891                           plusw2	equ	0xFDB
 33892                           fsr2h	equ	0xFDA
 33893                           fsr2l	equ	0xFD9
 33894                           status	equ	0xFD8
 33895                           
 33896 ;; *************** function _ReceiveEvt *****************
 33897 ;; Defined at:
 33898 ;;		line 99 in file "../../MercuryFwk/Source/c/02_Osl/os_ser.c"
 33899 ;; Parameters:    Size  Location     Type
 33900 ;;  Event           2   29[BANK0 ] PTR struct EventStructur
 33901 ;;		 -> I2cRxPacket(6), I2cReadDataEvt(1), I2cWriteDataEvt(1), GetMethod(1), 
 33902 ;;		 -> InitNetwork(1), SmsTxtReady(1), GetSmsText(1), SmsEvent(1), 
 33903 ;;		 -> ClipEvent(1), RingEvent(1), SendSmsEvent(1), NewStringMdmTerminal(1), 
 33904 ;;		 -> NewMdmEvtParserRequest(1), NewStringReceived(1), MdmResetRequest(1), MdmOnOffPulseRequest(1), 
 33905 ;;		 -> ActivateRiDetection(1), 
 33906 ;; Auto vars:     Size  Location     Type
 33907 ;;  EventStatus     1   32[BANK0 ] enum E7727
 33908 ;; Return value:  Size  Location     Type
 33909 ;;                  1    wreg      enum E7699
 33910 ;; Registers used:
 33911 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 33912 ;; Tracked objects:
 33913 ;;		On entry : 0/0
 33914 ;;		On exit  : 0/0
 33915 ;;		Unchanged: 0/0
 33916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33917 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33918 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33919 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33920 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33921 ;;Total ram usage:        4 bytes
 33922 ;; Hardware stack levels used:    1
 33923 ;; Hardware stack levels required when called:   11
 33924 ;; This function calls:
 33925 ;;		Nothing
 33926 ;; This function is called by:
 33927 ;;		_MdmCntSm
 33928 ;;		_CheckModem
 33929 ;;		_ModemEvtParser
 33930 ;;		_GetSmsSm
 33931 ;;		_SendSmsSm
 33932 ;;		_Mdm_GetSmsData
 33933 ;;		_Mdm_IsSmsReceived
 33934 ;;		_Mdm_IsRinging
 33935 ;;		_GetCallerNumber
 33936 ;;		_InitGprsNetwork
 33937 ;;		_HttpGetMethod
 33938 ;;		_I2cSendMsgSm
 33939 ;;		_I2cSlv_I2cReadMsgSts
 33940 ;;		_RiSm
 33941 ;;		_GsmGprsTerminal
 33942 ;; This function uses a non-reentrant model
 33943 ;;
 33944                           
 33945                           	psect	text158
 33946  006314                     __ptext158:
 33947                           	opt stack 0
 33948  006314                     _ReceiveEvt:
 33949                           	opt stack 13
 33950                           
 33951                           ;os_ser.c: 102: EventStatusType EventStatus = EventIdle;
 33952                           
 33953                           ;incstack = 0
 33954  006314  0E00               	movlw	0
 33955  006316  0100               	movlb	0	; () banked
 33956  006318  6F80               	movwf	ReceiveEvt@EventStatus& (0+255),b
 33957                           
 33958                           ; BSR set to: 0
 33959                           ;os_ser.c: 105: if (Event->EventStatus == EventSent)
 33960  00631A  C07D  FFD9         	movff	ReceiveEvt@Event,fsr2l
 33961  00631E  C07E  FFDA         	movff	ReceiveEvt@Event+1,fsr2h
 33962  006322  0E02               	movlw	2
 33963  006324  18DE               	xorwf	postinc2,w,c
 33964  006326  A4D8               	btfss	status,2,c
 33965  006328  D008               	goto	l832
 33966                           
 33967                           ; BSR set to: 0
 33968                           ;os_ser.c: 106: {
 33969                           ;os_ser.c: 108: Event->EventStatus = EventReceived;
 33970  00632A  C07D  FFD9         	movff	ReceiveEvt@Event,fsr2l
 33971  00632E  C07E  FFDA         	movff	ReceiveEvt@Event+1,fsr2h
 33972  006332  0E01               	movlw	1
 33973  006334  6EDF               	movwf	indf2,c
 33974                           
 33975                           ; BSR set to: 0
 33976                           ;os_ser.c: 110: EventStatus = EventReceived;
 33977  006336  0E01               	movlw	1
 33978  006338  D001               	goto	L58
 33979  00633A                     l832:
 33980                           
 33981                           ; BSR set to: 0
 33982                           ;os_ser.c: 112: else
 33983                           ;os_ser.c: 113: {
 33984                           ;os_ser.c: 115: EventStatus = EventIdle;
 33985                           
 33986                           ; BSR set to: 0
 33987  00633A  0E00               	movlw	0
 33988  00633C                     L58:
 33989  00633C  6F80               	movwf	ReceiveEvt@EventStatus& (0+255),b
 33990                           
 33991                           ; BSR set to: 0
 33992                           ;os_ser.c: 116: }
 33993                           ;os_ser.c: 119: return(EventStatus);
 33994  00633E  5180               	movf	ReceiveEvt@EventStatus& (0+255),w,b
 33995  006340  0012               	return	
 33996  006342                     __end_of_ReceiveEvt:
 33997                           	opt stack 0
 33998                           tosu	equ	0xFFF
 33999                           tosh	equ	0xFFE
 34000                           tosl	equ	0xFFD
 34001                           pclath	equ	0xFFA
 34002                           tblptru	equ	0xFF8
 34003                           tblptrh	equ	0xFF7
 34004                           tblptrl	equ	0xFF6
 34005                           tablat	equ	0xFF5
 34006                           prodh	equ	0xFF4
 34007                           prodl	equ	0xFF3
 34008                           intcon	equ	0xFF2
 34009                           intcon2	equ	0xFF1
 34010                           intcon3	equ	0xFF0
 34011                           indf0	equ	0xFEF
 34012                           postinc0	equ	0xFEE
 34013                           plusw0	equ	0xFEB
 34014                           fsr0h	equ	0xFEA
 34015                           fsr0l	equ	0xFE9
 34016                           wreg	equ	0xFE8
 34017                           indf1	equ	0xFE7
 34018                           postinc1	equ	0xFE6
 34019                           postdec1	equ	0xFE5
 34020                           plusw1	equ	0xFE3
 34021                           fsr1h	equ	0xFE2
 34022                           fsr1l	equ	0xFE1
 34023                           indf2	equ	0xFDF
 34024                           postinc2	equ	0xFDE
 34025                           postdec2	equ	0xFDD
 34026                           plusw2	equ	0xFDB
 34027                           fsr2h	equ	0xFDA
 34028                           fsr2l	equ	0xFD9
 34029                           status	equ	0xFD8
 34030                           
 34031 ;; *************** function _I2c_WriteData *****************
 34032 ;; Defined at:
 34033 ;;		line 252 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 34034 ;; Parameters:    Size  Location     Type
 34035 ;;  WritePacket     2   30[BANK0 ] PTR struct _I2cWritePack
 34036 ;;		 -> I2cTxPacket(5), 
 34037 ;; Auto vars:     Size  Location     Type
 34038 ;;		None
 34039 ;; Return value:  Size  Location     Type
 34040 ;;                  1    wreg      enum E7740
 34041 ;; Registers used:
 34042 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 34043 ;; Tracked objects:
 34044 ;;		On entry : 0/0
 34045 ;;		On exit  : 0/0
 34046 ;;		Unchanged: 0/0
 34047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34048 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34049 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34050 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34051 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34052 ;;Total ram usage:        4 bytes
 34053 ;; Hardware stack levels used:    1
 34054 ;; Hardware stack levels required when called:   12
 34055 ;; This function calls:
 34056 ;;		_CheckAckStatus
 34057 ;;		_CheckTxStatus
 34058 ;;		_StartCondition
 34059 ;;		_StopCondition
 34060 ;;		_WriteByte
 34061 ;; This function is called by:
 34062 ;;		_I2cSendMsgSm
 34063 ;; This function uses a non-reentrant model
 34064 ;;
 34065                           
 34066                           	psect	text159
 34067  00216C                     __ptext159:
 34068                           	opt stack 0
 34069  00216C                     _I2c_WriteData:
 34070                           	opt stack 14
 34071                           
 34072                           ;i2c_drv.c: 255: static I2cWriteStateType I2cWriteState = TxAssertStart;
 34073                           ;i2c_drv.c: 256: static I2cWriteStateType I2cNextState = TxAssertStart;
 34074                           ;i2c_drv.c: 257: static UINT8 TentativeCounter = 0;
 34075                           ;i2c_drv.c: 258: static I2cWriteStsType WriteStatus;
 34076                           ;i2c_drv.c: 260: switch (I2cWriteState)
 34077                           
 34078                           ; BSR set to: 0
 34079                           ;incstack = 0
 34080  00216C  D095               	goto	l160
 34081  00216E                     
 34082                           ;i2c_drv.c: 264: StartCondition();
 34083  00216E  EC45  F034         	call	_StartCondition	;wreg free
 34084                           
 34085                           ;i2c_drv.c: 266: WriteStatus = I2cWriteInProgress;
 34086  002172  0E00               	movlw	0
 34087  002174  6E34               	movwf	I2c_WriteData@WriteStatus,c
 34088                           
 34089                           ;i2c_drv.c: 268: I2cWriteState = TxSendSlaveAddress;
 34090  002176  0E01               	movlw	1
 34091  002178  D084               	goto	L65
 34092  00217A                     
 34093                           ;i2c_drv.c: 273: WritePacket->SlaveAddress = ((WritePacket->SlaveAddress) << 1) | WriteP
      +                          acket->ReadWrite;
 34094  00217A  0100               	movlb	0	; () banked
 34095  00217C  EE20 F001          	lfsr	2,1
 34096  002180  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 34097  002182  26D9               	addwf	fsr2l,f,c
 34098  002184  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 34099  002186  22DA               	addwfc	fsr2h,f,c
 34100  002188  50DF               	movf	indf2,w,c
 34101  00218A  6F80               	movwf	??_I2c_WriteData& (0+255),b
 34102  00218C  C07E  FFD9         	movff	I2c_WriteData@WritePacket,fsr2l
 34103  002190  C07F  FFDA         	movff	I2c_WriteData@WritePacket+1,fsr2h
 34104  002194  50DF               	movf	indf2,w,c
 34105  002196  6F81               	movwf	(??_I2c_WriteData+1)& (0+255),b
 34106  002198  90D8               	bcf	status,0,c
 34107  00219A  3581               	rlcf	(??_I2c_WriteData+1)& (0+255),w,b
 34108  00219C  1180               	iorwf	??_I2c_WriteData& (0+255),w,b
 34109  00219E  C07E  FFD9         	movff	I2c_WriteData@WritePacket,fsr2l
 34110  0021A2  C07F  FFDA         	movff	I2c_WriteData@WritePacket+1,fsr2h
 34111  0021A6  6EDF               	movwf	indf2,c
 34112                           
 34113                           ; BSR set to: 0
 34114                           ;i2c_drv.c: 275: WriteByte(WritePacket->SlaveAddress);
 34115  0021A8  C07E  FFD9         	movff	I2c_WriteData@WritePacket,fsr2l
 34116  0021AC  C07F  FFDA         	movff	I2c_WriteData@WritePacket+1,fsr2h
 34117  0021B0  50DF               	movf	indf2,w,c
 34118  0021B2  EC23  F034         	call	_WriteByte
 34119                           
 34120                           ;i2c_drv.c: 277: I2cWriteState = TxCheckTxAddr;
 34121  0021B6  0E02               	movlw	2
 34122  0021B8  6E37               	movwf	I2c_WriteData@I2cWriteState,c
 34123  0021BA                     
 34124                           ;i2c_drv.c: 281: if (CheckTxStatus() == ((UINT8)(0)))
 34125  0021BA  EC2D  F034         	call	_CheckTxStatus	;wreg free
 34126  0021BE  0900               	iorlw	0
 34127  0021C0  A4D8               	btfss	status,2,c
 34128  0021C2  D089               	goto	l162
 34129                           
 34130                           ;i2c_drv.c: 282: {
 34131                           ;i2c_drv.c: 284: I2cNextState = TxSendDataByte;
 34132  0021C4  0E03               	movlw	3
 34133  0021C6  D01A               	goto	L67
 34134  0021C8                     
 34135                           ;i2c_drv.c: 292: WriteByte(*(WritePacket->Buffer));
 34136  0021C8  0100               	movlb	0	; () banked
 34137  0021CA  EE20 F002          	lfsr	2,2
 34138  0021CE  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 34139  0021D0  26D9               	addwf	fsr2l,f,c
 34140  0021D2  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 34141  0021D4  22DA               	addwfc	fsr2h,f,c
 34142  0021D6  CFDE F080          	movff	postinc2,??_I2c_WriteData
 34143  0021DA  CFDD F081          	movff	postdec2,??_I2c_WriteData+1
 34144  0021DE  C080  FFD9         	movff	??_I2c_WriteData,fsr2l
 34145  0021E2  C081  FFDA         	movff	??_I2c_WriteData+1,fsr2h
 34146  0021E6  50DF               	movf	indf2,w,c
 34147  0021E8  EC23  F034         	call	_WriteByte
 34148                           
 34149                           ;i2c_drv.c: 294: I2cWriteState = TxCheckTxData;
 34150  0021EC  0E04               	movlw	4
 34151  0021EE  D049               	goto	L65
 34152  0021F0                     
 34153                           ;i2c_drv.c: 299: if (CheckTxStatus() == ((UINT8)(0)))
 34154  0021F0  EC2D  F034         	call	_CheckTxStatus	;wreg free
 34155  0021F4  0900               	iorlw	0
 34156  0021F6  A4D8               	btfss	status,2,c
 34157  0021F8  D06E               	goto	l162
 34158                           
 34159                           ;i2c_drv.c: 300: {
 34160                           ;i2c_drv.c: 302: I2cNextState = TxCheckLenght;
 34161  0021FA  0E05               	movlw	5
 34162  0021FC                     L67:
 34163  0021FC  6E36               	movwf	I2c_WriteData@I2cNextState,c
 34164                           
 34165                           ;i2c_drv.c: 304: I2cWriteState = TxCheckAck;
 34166  0021FE  0E08               	movlw	8
 34167  002200  D040               	goto	L65
 34168  002202                     
 34169                           ;i2c_drv.c: 309: if (WritePacket->Lenght > 0)
 34170  002202  0100               	movlb	0	; () banked
 34171  002204  EE20 F004          	lfsr	2,4
 34172  002208  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 34173  00220A  26D9               	addwf	fsr2l,f,c
 34174  00220C  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 34175  00220E  22DA               	addwfc	fsr2h,f,c
 34176  002210  50DF               	movf	indf2,w,c
 34177  002212  B4D8               	btfsc	status,2,c
 34178  002214  D010               	goto	l170
 34179                           
 34180                           ; BSR set to: 0
 34181                           ;i2c_drv.c: 310: {
 34182                           ;i2c_drv.c: 312: (WritePacket->Lenght)--;
 34183  002216  EE20 F004          	lfsr	2,4
 34184  00221A  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 34185  00221C  26D9               	addwf	fsr2l,f,c
 34186  00221E  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 34187  002220  22DA               	addwfc	fsr2h,f,c
 34188  002222  06DF               	decf	indf2,f,c
 34189                           
 34190                           ;i2c_drv.c: 314: WritePacket->Buffer++;
 34191  002224  EE20 F002          	lfsr	2,2
 34192  002228  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 34193  00222A  26D9               	addwf	fsr2l,f,c
 34194  00222C  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 34195  00222E  22DA               	addwfc	fsr2h,f,c
 34196  002230  2ADE               	incf	postinc2,f,c
 34197  002232  0E00               	movlw	0
 34198  002234  22DD               	addwfc	postdec2,f,c
 34199  002236                     l170:
 34200                           
 34201                           ; BSR set to: 0
 34202                           ;i2c_drv.c: 315: }
 34203                           ;i2c_drv.c: 318: if (WritePacket->Lenght == 0)
 34204  002236  EE20 F004          	lfsr	2,4
 34205  00223A  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 34206  00223C  26D9               	addwf	fsr2l,f,c
 34207  00223E  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 34208  002240  22DA               	addwfc	fsr2h,f,c
 34209  002242  50DF               	movf	indf2,w,c
 34210  002244  A4D8               	btfss	status,2,c
 34211  002246  D002               	goto	l171
 34212                           
 34213                           ; BSR set to: 0
 34214                           ;i2c_drv.c: 319: {
 34215                           ;i2c_drv.c: 321: I2cWriteState = TxAssertStop;
 34216  002248  0E06               	movlw	6
 34217  00224A  D01B               	goto	L65
 34218  00224C                     l171:
 34219                           
 34220                           ; BSR set to: 0
 34221                           ;i2c_drv.c: 323: else
 34222                           ;i2c_drv.c: 324: {
 34223                           ;i2c_drv.c: 326: I2cWriteState = TxSendDataByte;
 34224                           
 34225                           ; BSR set to: 0
 34226  00224C  0E03               	movlw	3
 34227  00224E  D019               	goto	L65
 34228  002250                     
 34229                           ;i2c_drv.c: 332: StopCondition();
 34230                           
 34231                           ; BSR set to: 0
 34232  002250  EC43  F034         	call	_StopCondition	;wreg free
 34233                           
 34234                           ;i2c_drv.c: 334: I2cWriteState = TxCompleted;
 34235  002254  0E07               	movlw	7
 34236  002256  D015               	goto	L65
 34237  002258                     
 34238                           ;i2c_drv.c: 339: I2cWriteState = TxAssertStart;
 34239  002258  0E00               	movlw	0
 34240  00225A  6E37               	movwf	I2c_WriteData@I2cWriteState,c
 34241                           
 34242                           ;i2c_drv.c: 340: I2cNextState = TxAssertStart;
 34243  00225C  0E00               	movlw	0
 34244  00225E  6E36               	movwf	I2c_WriteData@I2cNextState,c
 34245                           
 34246                           ;i2c_drv.c: 342: WriteStatus = I2cWriteOk;
 34247  002260  0E02               	movlw	2
 34248  002262  D018               	goto	L66
 34249  002264                     
 34250                           ;i2c_drv.c: 347: TentativeCounter++;
 34251  002264  2A35               	incf	I2c_WriteData@TentativeCounter,f,c
 34252                           
 34253                           ;i2c_drv.c: 349: if (CheckAckStatus() == ((UINT8)(0)))
 34254  002266  EC32  F034         	call	_CheckAckStatus	;wreg free
 34255  00226A  0900               	iorlw	0
 34256  00226C  A4D8               	btfss	status,2,c
 34257  00226E  D005               	goto	l176
 34258                           
 34259                           ;i2c_drv.c: 350: {
 34260                           ;i2c_drv.c: 352: TentativeCounter = 0;
 34261  002270  0E00               	movlw	0
 34262  002272  6E35               	movwf	I2c_WriteData@TentativeCounter,c
 34263                           
 34264                           ;i2c_drv.c: 354: I2cWriteState = I2cNextState;
 34265  002274  C036  F037         	movff	I2c_WriteData@I2cNextState,I2c_WriteData@I2cWriteState
 34266                           
 34267                           ;i2c_drv.c: 355: }
 34268  002278  D02E               	goto	l162
 34269  00227A                     l176:
 34270                           
 34271                           ;i2c_drv.c: 356: else
 34272                           ;i2c_drv.c: 357: {
 34273                           ;i2c_drv.c: 359: if (TentativeCounter >= ((UINT8)(3)))
 34274  00227A  0E02               	movlw	2
 34275  00227C  6435               	cpfsgt	I2c_WriteData@TentativeCounter,c
 34276  00227E  D02B               	goto	l162
 34277                           
 34278                           ;i2c_drv.c: 360: {
 34279                           ;i2c_drv.c: 362: I2cWriteState = TxErrorStatus;
 34280  002280  0E09               	movlw	9
 34281  002282                     L65:
 34282  002282  6E37               	movwf	I2c_WriteData@I2cWriteState,c
 34283                           
 34284                           ;i2c_drv.c: 363: }
 34285                           ;i2c_drv.c: 364: }
 34286                           ;i2c_drv.c: 365: break;
 34287  002284  D028               	goto	l162
 34288  002286                     
 34289                           ;i2c_drv.c: 369: I2cWriteState = TxAssertStart;
 34290  002286  0E00               	movlw	0
 34291  002288  6E37               	movwf	I2c_WriteData@I2cWriteState,c
 34292                           
 34293                           ;i2c_drv.c: 370: I2cNextState = TxAssertStart;
 34294  00228A  0E00               	movlw	0
 34295  00228C  6E36               	movwf	I2c_WriteData@I2cNextState,c
 34296                           
 34297                           ;i2c_drv.c: 372: TentativeCounter = 0;
 34298  00228E  0E00               	movlw	0
 34299  002290  6E35               	movwf	I2c_WriteData@TentativeCounter,c
 34300                           
 34301                           ;i2c_drv.c: 374: WriteStatus = I2cWriteNotOk;
 34302  002292  0E01               	movlw	1
 34303  002294                     L66:
 34304  002294  6E34               	movwf	I2c_WriteData@WriteStatus,c
 34305                           
 34306                           ;i2c_drv.c: 379: }
 34307                           
 34308                           ;i2c_drv.c: 378: break;
 34309                           
 34310                           ;i2c_drv.c: 377: default:
 34311                           
 34312                           ;i2c_drv.c: 375: break;
 34313  002296  D01F               	goto	l162
 34314  002298                     l160:
 34315  002298  5037               	movf	I2c_WriteData@I2cWriteState,w,c
 34316                           
 34317                           ; Switch size 1, requested type "space"
 34318                           ; Number of cases is 10, Range of values is 0 to 9
 34319                           ; switch strategies available:
 34320                           ; Name         Instructions Cycles
 34321                           ; simple_byte           31    16 (average)
 34322                           ;	Chosen strategy is simple_byte
 34323  00229A  0A00               	xorlw	0	; case 0
 34324  00229C  B4D8               	btfsc	status,2,c
 34325  00229E  D767               	goto	l161
 34326  0022A0  0A01               	xorlw	1	; case 1
 34327  0022A2  B4D8               	btfsc	status,2,c
 34328  0022A4  D76A               	goto	l163
 34329  0022A6  0A03               	xorlw	3	; case 2
 34330  0022A8  B4D8               	btfsc	status,2,c
 34331  0022AA  D787               	goto	l164
 34332  0022AC  0A01               	xorlw	1	; case 3
 34333  0022AE  B4D8               	btfsc	status,2,c
 34334  0022B0  D78B               	goto	l166
 34335  0022B2  0A07               	xorlw	7	; case 4
 34336  0022B4  B4D8               	btfsc	status,2,c
 34337  0022B6  D79C               	goto	l167
 34338  0022B8  0A01               	xorlw	1	; case 5
 34339  0022BA  B4D8               	btfsc	status,2,c
 34340  0022BC  D7A2               	goto	l169
 34341  0022BE  0A03               	xorlw	3	; case 6
 34342  0022C0  B4D8               	btfsc	status,2,c
 34343  0022C2  D7C6               	goto	l173
 34344  0022C4  0A01               	xorlw	1	; case 7
 34345  0022C6  B4D8               	btfsc	status,2,c
 34346  0022C8  D7C7               	goto	l174
 34347  0022CA  0A0F               	xorlw	15	; case 8
 34348  0022CC  B4D8               	btfsc	status,2,c
 34349  0022CE  D7CA               	goto	l175
 34350  0022D0  0A01               	xorlw	1	; case 9
 34351  0022D2  B4D8               	btfsc	status,2,c
 34352  0022D4  D7D8               	goto	l179
 34353  0022D6                     l162:
 34354                           
 34355                           ;i2c_drv.c: 382: return WriteStatus;
 34356  0022D6  5034               	movf	I2c_WriteData@WriteStatus,w,c
 34357  0022D8  0012               	return	
 34358  0022DA                     __end_of_I2c_WriteData:
 34359                           	opt stack 0
 34360                           tosu	equ	0xFFF
 34361                           tosh	equ	0xFFE
 34362                           tosl	equ	0xFFD
 34363                           pclath	equ	0xFFA
 34364                           tblptru	equ	0xFF8
 34365                           tblptrh	equ	0xFF7
 34366                           tblptrl	equ	0xFF6
 34367                           tablat	equ	0xFF5
 34368                           prodh	equ	0xFF4
 34369                           prodl	equ	0xFF3
 34370                           intcon	equ	0xFF2
 34371                           intcon2	equ	0xFF1
 34372                           intcon3	equ	0xFF0
 34373                           indf0	equ	0xFEF
 34374                           postinc0	equ	0xFEE
 34375                           plusw0	equ	0xFEB
 34376                           fsr0h	equ	0xFEA
 34377                           fsr0l	equ	0xFE9
 34378                           wreg	equ	0xFE8
 34379                           indf1	equ	0xFE7
 34380                           postinc1	equ	0xFE6
 34381                           postdec1	equ	0xFE5
 34382                           plusw1	equ	0xFE3
 34383                           fsr1h	equ	0xFE2
 34384                           fsr1l	equ	0xFE1
 34385                           indf2	equ	0xFDF
 34386                           postinc2	equ	0xFDE
 34387                           postdec2	equ	0xFDD
 34388                           plusw2	equ	0xFDB
 34389                           fsr2h	equ	0xFDA
 34390                           fsr2l	equ	0xFD9
 34391                           status	equ	0xFD8
 34392                           
 34393 ;; *************** function _I2c_ReadData *****************
 34394 ;; Defined at:
 34395 ;;		line 393 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 34396 ;; Parameters:    Size  Location     Type
 34397 ;;  ReadPacket      2   32[BANK0 ] PTR struct _I2cReadPacke
 34398 ;;		 -> I2cRxPacket(6), 
 34399 ;; Auto vars:     Size  Location     Type
 34400 ;;		None
 34401 ;; Return value:  Size  Location     Type
 34402 ;;                  1    wreg      enum E7787
 34403 ;; Registers used:
 34404 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 34405 ;; Tracked objects:
 34406 ;;		On entry : 0/0
 34407 ;;		On exit  : 0/0
 34408 ;;		Unchanged: 0/0
 34409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34410 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34411 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34412 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34413 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34414 ;;Total ram usage:        4 bytes
 34415 ;; Hardware stack levels used:    1
 34416 ;; Hardware stack levels required when called:   12
 34417 ;; This function calls:
 34418 ;;		_CheckAckStatus
 34419 ;;		_CheckTxStatus
 34420 ;;		_EnableReceiver
 34421 ;;		_GenerateEvt
 34422 ;;		_ReadByte
 34423 ;;		_SetAckStatus
 34424 ;;		_StartCondition
 34425 ;;		_StopCondition
 34426 ;;		_WriteByte
 34427 ;; This function is called by:
 34428 ;;		_I2cSendMsgSm
 34429 ;; This function uses a non-reentrant model
 34430 ;;
 34431                           
 34432                           	psect	text160
 34433  0022DA                     __ptext160:
 34434                           	opt stack 0
 34435  0022DA                     _I2c_ReadData:
 34436                           	opt stack 14
 34437                           
 34438                           ;i2c_drv.c: 396: static I2cReadStateType I2cReadState = RxAssertStart;
 34439                           ;i2c_drv.c: 397: static UINT8 DataCounter = 0;
 34440                           ;i2c_drv.c: 398: static UINT8 TentativeCounter = 0;
 34441                           ;i2c_drv.c: 400: static I2cReadStsType ReadStatus;
 34442                           ;i2c_drv.c: 402: switch (I2cReadState)
 34443                           
 34444                           ;incstack = 0
 34445  0022DA  D090               	goto	l192
 34446  0022DC                     
 34447                           ;i2c_drv.c: 406: StartCondition();
 34448  0022DC  EC45  F034         	call	_StartCondition	;wreg free
 34449                           
 34450                           ;i2c_drv.c: 408: ReadStatus = I2cReadInProgress;
 34451  0022E0  0E00               	movlw	0
 34452  0022E2  6E30               	movwf	I2c_ReadData@ReadStatus,c
 34453                           
 34454                           ;i2c_drv.c: 410: I2cReadState = RxSendSlaveAddr;
 34455  0022E4  0E01               	movlw	1
 34456  0022E6  D083               	goto	L75
 34457  0022E8                     
 34458                           ;i2c_drv.c: 415: ReadPacket->SlaveAddress = ((ReadPacket->SlaveAddress) << 1) | ReadPack
      +                          et->ReadWrite;
 34459  0022E8  0100               	movlb	0	; () banked
 34460  0022EA  EE20 F001          	lfsr	2,1
 34461  0022EE  5180               	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 34462  0022F0  26D9               	addwf	fsr2l,f,c
 34463  0022F2  5181               	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 34464  0022F4  22DA               	addwfc	fsr2h,f,c
 34465  0022F6  50DF               	movf	indf2,w,c
 34466  0022F8  6F82               	movwf	??_I2c_ReadData& (0+255),b
 34467  0022FA  C080  FFD9         	movff	I2c_ReadData@ReadPacket,fsr2l
 34468  0022FE  C081  FFDA         	movff	I2c_ReadData@ReadPacket+1,fsr2h
 34469  002302  50DF               	movf	indf2,w,c
 34470  002304  6F83               	movwf	(??_I2c_ReadData+1)& (0+255),b
 34471  002306  90D8               	bcf	status,0,c
 34472  002308  3583               	rlcf	(??_I2c_ReadData+1)& (0+255),w,b
 34473  00230A  1182               	iorwf	??_I2c_ReadData& (0+255),w,b
 34474  00230C  C080  FFD9         	movff	I2c_ReadData@ReadPacket,fsr2l
 34475  002310  C081  FFDA         	movff	I2c_ReadData@ReadPacket+1,fsr2h
 34476  002314  6EDF               	movwf	indf2,c
 34477                           
 34478                           ; BSR set to: 0
 34479                           ;i2c_drv.c: 417: WriteByte(ReadPacket->SlaveAddress);
 34480  002316  C080  FFD9         	movff	I2c_ReadData@ReadPacket,fsr2l
 34481  00231A  C081  FFDA         	movff	I2c_ReadData@ReadPacket+1,fsr2h
 34482  00231E  50DF               	movf	indf2,w,c
 34483  002320  EC23  F034         	call	_WriteByte
 34484                           
 34485                           ;i2c_drv.c: 419: I2cReadState = RxCheckTxAddr;
 34486  002324  0E02               	movlw	2
 34487  002326  D063               	goto	L75
 34488  002328                     
 34489                           ;i2c_drv.c: 424: if (CheckTxStatus() == ((UINT8)(0)))
 34490  002328  EC2D  F034         	call	_CheckTxStatus	;wreg free
 34491  00232C  0900               	iorlw	0
 34492  00232E  A4D8               	btfss	status,2,c
 34493  002330  D081               	goto	l194
 34494                           
 34495                           ;i2c_drv.c: 425: {
 34496                           ;i2c_drv.c: 427: I2cReadState = RxCheckAck;
 34497  002332  0E03               	movlw	3
 34498  002334  D05C               	goto	L75
 34499  002336                     
 34500                           ;i2c_drv.c: 433: TentativeCounter++;
 34501  002336  2A31               	incf	I2c_ReadData@TentativeCounter,f,c
 34502                           
 34503                           ;i2c_drv.c: 435: if (CheckAckStatus() == ((UINT8)(0)))
 34504  002338  EC32  F034         	call	_CheckAckStatus	;wreg free
 34505  00233C  0900               	iorlw	0
 34506  00233E  A4D8               	btfss	status,2,c
 34507  002340  D004               	goto	l199
 34508                           
 34509                           ;i2c_drv.c: 436: {
 34510                           ;i2c_drv.c: 438: TentativeCounter = 0;
 34511  002342  0E00               	movlw	0
 34512  002344  6E31               	movwf	I2c_ReadData@TentativeCounter,c
 34513  002346                     
 34514                           ;i2c_drv.c: 440: I2cReadState = RxGetData;
 34515  002346  0E04               	movlw	4
 34516  002348  D052               	goto	L75
 34517  00234A                     l199:
 34518                           
 34519                           ;i2c_drv.c: 442: else
 34520                           ;i2c_drv.c: 443: {
 34521                           ;i2c_drv.c: 445: if (TentativeCounter >= ((UINT8)(3)))
 34522  00234A  0E02               	movlw	2
 34523  00234C  6431               	cpfsgt	I2c_ReadData@TentativeCounter,c
 34524  00234E  D072               	goto	l194
 34525                           
 34526                           ;i2c_drv.c: 446: {
 34527                           ;i2c_drv.c: 448: I2cReadState = RxErrorStatus;
 34528  002350  0E08               	movlw	8
 34529  002352  D04D               	goto	L75
 34530  002354                     
 34531                           ;i2c_drv.c: 455: EnableReceiver();
 34532  002354  EC47  F034         	call	_EnableReceiver	;wreg free
 34533                           
 34534                           ;i2c_drv.c: 457: I2cReadState = RxReadData;
 34535  002358  0E05               	movlw	5
 34536  00235A  D049               	goto	L75
 34537  00235C                     
 34538                           ;i2c_drv.c: 462: if (CheckTxStatus() == ((UINT8)(0)))
 34539  00235C  EC2D  F034         	call	_CheckTxStatus	;wreg free
 34540  002360  0900               	iorlw	0
 34541  002362  A4D8               	btfss	status,2,c
 34542  002364  D067               	goto	l194
 34543                           
 34544                           ;i2c_drv.c: 463: {
 34545                           ;i2c_drv.c: 465: *(ReadPacket->Buffer) = ReadByte();
 34546  002366  0100               	movlb	0	; () banked
 34547  002368  EE20 F002          	lfsr	2,2
 34548  00236C  5180               	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 34549  00236E  26D9               	addwf	fsr2l,f,c
 34550  002370  5181               	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 34551  002372  22DA               	addwfc	fsr2h,f,c
 34552  002374  CFDE F082          	movff	postinc2,??_I2c_ReadData
 34553  002378  CFDD F083          	movff	postdec2,??_I2c_ReadData+1
 34554  00237C  C082  FFD9         	movff	??_I2c_ReadData,fsr2l
 34555  002380  C083  FFDA         	movff	??_I2c_ReadData+1,fsr2h
 34556  002384  EC28  F034         	call	_ReadByte	;wreg free
 34557  002388  6EDF               	movwf	indf2,c
 34558                           
 34559                           ;i2c_drv.c: 467: ReadPacket->Buffer++;
 34560  00238A  0100               	movlb	0	; () banked
 34561  00238C  EE20 F002          	lfsr	2,2
 34562  002390  5180               	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 34563  002392  26D9               	addwf	fsr2l,f,c
 34564  002394  5181               	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 34565  002396  22DA               	addwfc	fsr2h,f,c
 34566  002398  2ADE               	incf	postinc2,f,c
 34567  00239A  0E00               	movlw	0
 34568  00239C  22DD               	addwfc	postdec2,f,c
 34569                           
 34570                           ; BSR set to: 0
 34571                           ;i2c_drv.c: 469: DataCounter++;
 34572  00239E  2A32               	incf	I2c_ReadData@DataCounter,f,c
 34573                           
 34574                           ; BSR set to: 0
 34575                           ;i2c_drv.c: 471: I2cReadState = RxCheckLen;
 34576  0023A0  0E06               	movlw	6
 34577  0023A2  D025               	goto	L75
 34578  0023A4                     
 34579                           ;i2c_drv.c: 477: if (DataCounter >= ReadPacket->Lenght)
 34580                           
 34581                           ; BSR set to: 0
 34582  0023A4  0100               	movlb	0	; () banked
 34583  0023A6  EE20 F004          	lfsr	2,4
 34584  0023AA  5180               	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 34585  0023AC  26D9               	addwf	fsr2l,f,c
 34586  0023AE  5181               	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 34587  0023B0  22DA               	addwfc	fsr2h,f,c
 34588  0023B2  50DE               	movf	postinc2,w,c
 34589  0023B4  5C32               	subwf	I2c_ReadData@DataCounter,w,c
 34590  0023B6  A0D8               	btfss	status,0,c
 34591  0023B8  D008               	goto	l206
 34592                           
 34593                           ; BSR set to: 0
 34594                           ;i2c_drv.c: 478: {
 34595                           ;i2c_drv.c: 480: SetAckStatus(((UINT8)(1)));
 34596  0023BA  0E01               	movlw	1
 34597  0023BC  ECB7  F033         	call	_SetAckStatus
 34598                           
 34599                           ;i2c_drv.c: 482: I2cReadState = RxAssertStop;
 34600  0023C0  0E07               	movlw	7
 34601  0023C2  6E33               	movwf	I2c_ReadData@I2cReadState,c
 34602                           
 34603                           ;i2c_drv.c: 484: DataCounter = 0;
 34604  0023C4  0E00               	movlw	0
 34605  0023C6  6E32               	movwf	I2c_ReadData@DataCounter,c
 34606                           
 34607                           ;i2c_drv.c: 485: }
 34608  0023C8  D035               	goto	l194
 34609  0023CA                     l206:
 34610                           
 34611                           ;i2c_drv.c: 486: else
 34612                           ;i2c_drv.c: 487: {
 34613                           ;i2c_drv.c: 489: SetAckStatus(((UINT8)(0)));
 34614  0023CA  0E00               	movlw	0
 34615  0023CC  ECB7  F033         	call	_SetAckStatus
 34616  0023D0  D7BA               	goto	L76
 34617  0023D2                     
 34618                           ;i2c_drv.c: 497: StopCondition();
 34619  0023D2  EC43  F034         	call	_StopCondition	;wreg free
 34620                           
 34621                           ;i2c_drv.c: 499: ReadStatus = I2cReadOk;
 34622  0023D6  0E02               	movlw	2
 34623  0023D8  6E30               	movwf	I2c_ReadData@ReadStatus,c
 34624                           
 34625                           ;i2c_drv.c: 501: GenerateEvt(&(ReadPacket->ReadCompleteEvt));
 34626  0023DA  0E05               	movlw	5
 34627  0023DC  0100               	movlb	0	; () banked
 34628  0023DE  2580               	addwf	I2c_ReadData@ReadPacket& (0+255),w,b
 34629  0023E0  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 34630  0023E2  0E00               	movlw	0
 34631  0023E4  2181               	addwfc	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 34632  0023E6  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 34633  0023E8  EC7F  F033         	call	_GenerateEvt	;wreg free
 34634                           
 34635                           ;i2c_drv.c: 503: I2cReadState = RxAssertStart;
 34636  0023EC  0E00               	movlw	0
 34637  0023EE                     L75:
 34638  0023EE  6E33               	movwf	I2c_ReadData@I2cReadState,c
 34639                           
 34640                           ;i2c_drv.c: 504: break;
 34641  0023F0  D021               	goto	l194
 34642  0023F2                     
 34643                           ;i2c_drv.c: 508: I2cReadState = RxAssertStart;
 34644  0023F2  0E00               	movlw	0
 34645  0023F4  6E33               	movwf	I2c_ReadData@I2cReadState,c
 34646                           
 34647                           ;i2c_drv.c: 510: ReadStatus = I2cReadNotOk;
 34648  0023F6  0E01               	movlw	1
 34649  0023F8  6E30               	movwf	I2c_ReadData@ReadStatus,c
 34650                           
 34651                           ;i2c_drv.c: 515: }
 34652                           
 34653                           ;i2c_drv.c: 514: break;
 34654                           
 34655                           ;i2c_drv.c: 513: default:
 34656                           
 34657                           ;i2c_drv.c: 511: break;
 34658  0023FA  D01C               	goto	l194
 34659  0023FC                     l192:
 34660  0023FC  5033               	movf	I2c_ReadData@I2cReadState,w,c
 34661                           
 34662                           ; Switch size 1, requested type "space"
 34663                           ; Number of cases is 9, Range of values is 0 to 8
 34664                           ; switch strategies available:
 34665                           ; Name         Instructions Cycles
 34666                           ; simple_byte           28    15 (average)
 34667                           ;	Chosen strategy is simple_byte
 34668  0023FE  0A00               	xorlw	0	; case 0
 34669  002400  B4D8               	btfsc	status,2,c
 34670  002402  D76C               	goto	l193
 34671  002404  0A01               	xorlw	1	; case 1
 34672  002406  B4D8               	btfsc	status,2,c
 34673  002408  D76F               	goto	l195
 34674  00240A  0A03               	xorlw	3	; case 2
 34675  00240C  B4D8               	btfsc	status,2,c
 34676  00240E  D78C               	goto	l196
 34677  002410  0A01               	xorlw	1	; case 3
 34678  002412  B4D8               	btfsc	status,2,c
 34679  002414  D790               	goto	l198
 34680  002416  0A07               	xorlw	7	; case 4
 34681  002418  B4D8               	btfsc	status,2,c
 34682  00241A  D79C               	goto	l202
 34683  00241C  0A01               	xorlw	1	; case 5
 34684  00241E  B4D8               	btfsc	status,2,c
 34685  002420  D79D               	goto	l203
 34686  002422  0A03               	xorlw	3	; case 6
 34687  002424  B4D8               	btfsc	status,2,c
 34688  002426  D7BE               	goto	l205
 34689  002428  0A01               	xorlw	1	; case 7
 34690  00242A  B4D8               	btfsc	status,2,c
 34691  00242C  D7D2               	goto	l208
 34692  00242E  0A0F               	xorlw	15	; case 8
 34693  002430  B4D8               	btfsc	status,2,c
 34694  002432  D7DF               	goto	l209
 34695  002434                     l194:
 34696                           
 34697                           ;i2c_drv.c: 518: return ReadStatus;
 34698  002434  5030               	movf	I2c_ReadData@ReadStatus,w,c
 34699  002436  0012               	return	
 34700  002438                     __end_of_I2c_ReadData:
 34701                           	opt stack 0
 34702                           tosu	equ	0xFFF
 34703                           tosh	equ	0xFFE
 34704                           tosl	equ	0xFFD
 34705                           pclath	equ	0xFFA
 34706                           tblptru	equ	0xFF8
 34707                           tblptrh	equ	0xFF7
 34708                           tblptrl	equ	0xFF6
 34709                           tablat	equ	0xFF5
 34710                           prodh	equ	0xFF4
 34711                           prodl	equ	0xFF3
 34712                           intcon	equ	0xFF2
 34713                           intcon2	equ	0xFF1
 34714                           intcon3	equ	0xFF0
 34715                           indf0	equ	0xFEF
 34716                           postinc0	equ	0xFEE
 34717                           plusw0	equ	0xFEB
 34718                           fsr0h	equ	0xFEA
 34719                           fsr0l	equ	0xFE9
 34720                           wreg	equ	0xFE8
 34721                           indf1	equ	0xFE7
 34722                           postinc1	equ	0xFE6
 34723                           postdec1	equ	0xFE5
 34724                           plusw1	equ	0xFE3
 34725                           fsr1h	equ	0xFE2
 34726                           fsr1l	equ	0xFE1
 34727                           indf2	equ	0xFDF
 34728                           postinc2	equ	0xFDE
 34729                           postdec2	equ	0xFDD
 34730                           plusw2	equ	0xFDB
 34731                           fsr2h	equ	0xFDA
 34732                           fsr2l	equ	0xFD9
 34733                           status	equ	0xFD8
 34734                           
 34735 ;; *************** function _WriteByte *****************
 34736 ;; Defined at:
 34737 ;;		line 190 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 34738 ;; Parameters:    Size  Location     Type
 34739 ;;  Byte            1    wreg     unsigned char 
 34740 ;; Auto vars:     Size  Location     Type
 34741 ;;  Byte            1   29[BANK0 ] unsigned char 
 34742 ;; Return value:  Size  Location     Type
 34743 ;;                  1    wreg      void 
 34744 ;; Registers used:
 34745 ;;		wreg
 34746 ;; Tracked objects:
 34747 ;;		On entry : 0/0
 34748 ;;		On exit  : 0/0
 34749 ;;		Unchanged: 0/0
 34750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34751 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34752 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34753 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34754 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34755 ;;Total ram usage:        1 bytes
 34756 ;; Hardware stack levels used:    1
 34757 ;; Hardware stack levels required when called:   11
 34758 ;; This function calls:
 34759 ;;		Nothing
 34760 ;; This function is called by:
 34761 ;;		_I2c_WriteData
 34762 ;;		_I2c_ReadData
 34763 ;; This function uses a non-reentrant model
 34764 ;;
 34765                           
 34766                           	psect	text161
 34767  006846                     __ptext161:
 34768                           	opt stack 0
 34769  006846                     _WriteByte:
 34770                           	opt stack 14
 34771                           
 34772                           ;incstack = 0
 34773                           ;WriteByte@Byte stored from wreg
 34774  006846  0100               	movlb	0	; () banked
 34775  006848  6F7D               	movwf	WriteByte@Byte& (0+255),b
 34776                           
 34777                           ;i2c_drv.c: 193: SSP2BUF = Byte;
 34778  00684A  C07D  FF75         	movff	WriteByte@Byte,3957	;volatile
 34779  00684E  0012               	return		;funcret
 34780  006850                     __end_of_WriteByte:
 34781                           	opt stack 0
 34782                           tosu	equ	0xFFF
 34783                           tosh	equ	0xFFE
 34784                           tosl	equ	0xFFD
 34785                           pclath	equ	0xFFA
 34786                           tblptru	equ	0xFF8
 34787                           tblptrh	equ	0xFF7
 34788                           tblptrl	equ	0xFF6
 34789                           tablat	equ	0xFF5
 34790                           prodh	equ	0xFF4
 34791                           prodl	equ	0xFF3
 34792                           intcon	equ	0xFF2
 34793                           intcon2	equ	0xFF1
 34794                           intcon3	equ	0xFF0
 34795                           indf0	equ	0xFEF
 34796                           postinc0	equ	0xFEE
 34797                           plusw0	equ	0xFEB
 34798                           fsr0h	equ	0xFEA
 34799                           fsr0l	equ	0xFE9
 34800                           wreg	equ	0xFE8
 34801                           indf1	equ	0xFE7
 34802                           postinc1	equ	0xFE6
 34803                           postdec1	equ	0xFE5
 34804                           plusw1	equ	0xFE3
 34805                           fsr1h	equ	0xFE2
 34806                           fsr1l	equ	0xFE1
 34807                           indf2	equ	0xFDF
 34808                           postinc2	equ	0xFDE
 34809                           postdec2	equ	0xFDD
 34810                           plusw2	equ	0xFDB
 34811                           fsr2h	equ	0xFDA
 34812                           fsr2l	equ	0xFD9
 34813                           status	equ	0xFD8
 34814                           
 34815 ;; *************** function _StopCondition *****************
 34816 ;; Defined at:
 34817 ;;		line 120 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 34818 ;; Parameters:    Size  Location     Type
 34819 ;;		None
 34820 ;; Auto vars:     Size  Location     Type
 34821 ;;		None
 34822 ;; Return value:  Size  Location     Type
 34823 ;;                  1    wreg      void 
 34824 ;; Registers used:
 34825 ;;		status,2, status,0
 34826 ;; Tracked objects:
 34827 ;;		On entry : 0/0
 34828 ;;		On exit  : 0/0
 34829 ;;		Unchanged: 0/0
 34830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34831 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34832 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34833 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34834 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34835 ;;Total ram usage:        0 bytes
 34836 ;; Hardware stack levels used:    1
 34837 ;; Hardware stack levels required when called:   11
 34838 ;; This function calls:
 34839 ;;		Nothing
 34840 ;; This function is called by:
 34841 ;;		_I2c_WriteData
 34842 ;;		_I2c_ReadData
 34843 ;; This function uses a non-reentrant model
 34844 ;;
 34845                           
 34846                           	psect	text162
 34847  006886                     __ptext162:
 34848                           	opt stack 0
 34849  006886                     _StopCondition:
 34850                           	opt stack 14
 34851                           
 34852                           ;i2c_drv.c: 123: SSP2CON2 |= (((UINT8)(1)) << ((UINT8)(2)));
 34853                           
 34854                           ;incstack = 0
 34855  006886  8471               	bsf	3953,2,c	;volatile
 34856  006888  0012               	return		;funcret
 34857  00688A                     __end_of_StopCondition:
 34858                           	opt stack 0
 34859                           tosu	equ	0xFFF
 34860                           tosh	equ	0xFFE
 34861                           tosl	equ	0xFFD
 34862                           pclath	equ	0xFFA
 34863                           tblptru	equ	0xFF8
 34864                           tblptrh	equ	0xFF7
 34865                           tblptrl	equ	0xFF6
 34866                           tablat	equ	0xFF5
 34867                           prodh	equ	0xFF4
 34868                           prodl	equ	0xFF3
 34869                           intcon	equ	0xFF2
 34870                           intcon2	equ	0xFF1
 34871                           intcon3	equ	0xFF0
 34872                           indf0	equ	0xFEF
 34873                           postinc0	equ	0xFEE
 34874                           plusw0	equ	0xFEB
 34875                           fsr0h	equ	0xFEA
 34876                           fsr0l	equ	0xFE9
 34877                           wreg	equ	0xFE8
 34878                           indf1	equ	0xFE7
 34879                           postinc1	equ	0xFE6
 34880                           postdec1	equ	0xFE5
 34881                           plusw1	equ	0xFE3
 34882                           fsr1h	equ	0xFE2
 34883                           fsr1l	equ	0xFE1
 34884                           indf2	equ	0xFDF
 34885                           postinc2	equ	0xFDE
 34886                           postdec2	equ	0xFDD
 34887                           plusw2	equ	0xFDB
 34888                           fsr2h	equ	0xFDA
 34889                           fsr2l	equ	0xFD9
 34890                           status	equ	0xFD8
 34891                           
 34892 ;; *************** function _StartCondition *****************
 34893 ;; Defined at:
 34894 ;;		line 92 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 34895 ;; Parameters:    Size  Location     Type
 34896 ;;		None
 34897 ;; Auto vars:     Size  Location     Type
 34898 ;;		None
 34899 ;; Return value:  Size  Location     Type
 34900 ;;                  1    wreg      void 
 34901 ;; Registers used:
 34902 ;;		status,2, status,0
 34903 ;; Tracked objects:
 34904 ;;		On entry : 0/0
 34905 ;;		On exit  : 0/0
 34906 ;;		Unchanged: 0/0
 34907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34908 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34909 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34910 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34911 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34912 ;;Total ram usage:        0 bytes
 34913 ;; Hardware stack levels used:    1
 34914 ;; Hardware stack levels required when called:   11
 34915 ;; This function calls:
 34916 ;;		Nothing
 34917 ;; This function is called by:
 34918 ;;		_I2c_WriteData
 34919 ;;		_I2c_ReadData
 34920 ;; This function uses a non-reentrant model
 34921 ;;
 34922                           
 34923                           	psect	text163
 34924  00688A                     __ptext163:
 34925                           	opt stack 0
 34926  00688A                     _StartCondition:
 34927                           	opt stack 14
 34928                           
 34929                           ;i2c_drv.c: 95: SSP2CON2 |= (((UINT8)(1)) << ((UINT8)(0)));
 34930                           
 34931                           ;incstack = 0
 34932  00688A  8071               	bsf	3953,0,c	;volatile
 34933  00688C  0012               	return		;funcret
 34934  00688E                     __end_of_StartCondition:
 34935                           	opt stack 0
 34936                           tosu	equ	0xFFF
 34937                           tosh	equ	0xFFE
 34938                           tosl	equ	0xFFD
 34939                           pclath	equ	0xFFA
 34940                           tblptru	equ	0xFF8
 34941                           tblptrh	equ	0xFF7
 34942                           tblptrl	equ	0xFF6
 34943                           tablat	equ	0xFF5
 34944                           prodh	equ	0xFF4
 34945                           prodl	equ	0xFF3
 34946                           intcon	equ	0xFF2
 34947                           intcon2	equ	0xFF1
 34948                           intcon3	equ	0xFF0
 34949                           indf0	equ	0xFEF
 34950                           postinc0	equ	0xFEE
 34951                           plusw0	equ	0xFEB
 34952                           fsr0h	equ	0xFEA
 34953                           fsr0l	equ	0xFE9
 34954                           wreg	equ	0xFE8
 34955                           indf1	equ	0xFE7
 34956                           postinc1	equ	0xFE6
 34957                           postdec1	equ	0xFE5
 34958                           plusw1	equ	0xFE3
 34959                           fsr1h	equ	0xFE2
 34960                           fsr1l	equ	0xFE1
 34961                           indf2	equ	0xFDF
 34962                           postinc2	equ	0xFDE
 34963                           postdec2	equ	0xFDD
 34964                           plusw2	equ	0xFDB
 34965                           fsr2h	equ	0xFDA
 34966                           fsr2l	equ	0xFD9
 34967                           status	equ	0xFD8
 34968                           
 34969 ;; *************** function _SetAckStatus *****************
 34970 ;; Defined at:
 34971 ;;		line 162 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 34972 ;; Parameters:    Size  Location     Type
 34973 ;;  AckSts          1    wreg     unsigned char 
 34974 ;; Auto vars:     Size  Location     Type
 34975 ;;  AckSts          1   29[BANK0 ] unsigned char 
 34976 ;; Return value:  Size  Location     Type
 34977 ;;                  1    wreg      void 
 34978 ;; Registers used:
 34979 ;;		wreg
 34980 ;; Tracked objects:
 34981 ;;		On entry : 0/0
 34982 ;;		On exit  : 0/0
 34983 ;;		Unchanged: 0/0
 34984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34985 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34986 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34987 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34988 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34989 ;;Total ram usage:        1 bytes
 34990 ;; Hardware stack levels used:    1
 34991 ;; Hardware stack levels required when called:   11
 34992 ;; This function calls:
 34993 ;;		Nothing
 34994 ;; This function is called by:
 34995 ;;		_I2c_ReadData
 34996 ;; This function uses a non-reentrant model
 34997 ;;
 34998                           
 34999                           	psect	text164
 35000  00676E                     __ptext164:
 35001                           	opt stack 0
 35002  00676E                     _SetAckStatus:
 35003                           	opt stack 14
 35004                           
 35005                           ;incstack = 0
 35006                           ;SetAckStatus@AckSts stored from wreg
 35007  00676E  0100               	movlb	0	; () banked
 35008  006770  6F7D               	movwf	SetAckStatus@AckSts& (0+255),b
 35009                           
 35010                           ;i2c_drv.c: 165: SSP2CON2bits.ACKDT = AckSts;
 35011  006772  0100               	movlb	0	; () banked
 35012  006774  B17D               	btfsc	SetAckStatus@AckSts& (0+255),0,b
 35013  006776  D002               	bra	u12345
 35014  006778  9A71               	bcf	3953,5,c	;volatile
 35015  00677A  D001               	bra	u12346
 35016  00677C                     u12345:
 35017  00677C  8A71               	bsf	3953,5,c	;volatile
 35018  00677E                     u12346:
 35019                           
 35020                           ;i2c_drv.c: 166: SSP2CON2bits.ACKEN = ((UINT8)(1));
 35021  00677E  8871               	bsf	3953,4,c	;volatile
 35022  006780  0012               	return		;funcret
 35023  006782                     __end_of_SetAckStatus:
 35024                           	opt stack 0
 35025                           tosu	equ	0xFFF
 35026                           tosh	equ	0xFFE
 35027                           tosl	equ	0xFFD
 35028                           pclath	equ	0xFFA
 35029                           tblptru	equ	0xFF8
 35030                           tblptrh	equ	0xFF7
 35031                           tblptrl	equ	0xFF6
 35032                           tablat	equ	0xFF5
 35033                           prodh	equ	0xFF4
 35034                           prodl	equ	0xFF3
 35035                           intcon	equ	0xFF2
 35036                           intcon2	equ	0xFF1
 35037                           intcon3	equ	0xFF0
 35038                           indf0	equ	0xFEF
 35039                           postinc0	equ	0xFEE
 35040                           plusw0	equ	0xFEB
 35041                           fsr0h	equ	0xFEA
 35042                           fsr0l	equ	0xFE9
 35043                           wreg	equ	0xFE8
 35044                           indf1	equ	0xFE7
 35045                           postinc1	equ	0xFE6
 35046                           postdec1	equ	0xFE5
 35047                           plusw1	equ	0xFE3
 35048                           fsr1h	equ	0xFE2
 35049                           fsr1l	equ	0xFE1
 35050                           indf2	equ	0xFDF
 35051                           postinc2	equ	0xFDE
 35052                           postdec2	equ	0xFDD
 35053                           plusw2	equ	0xFDB
 35054                           fsr2h	equ	0xFDA
 35055                           fsr2l	equ	0xFD9
 35056                           status	equ	0xFD8
 35057                           
 35058 ;; *************** function _ReadByte *****************
 35059 ;; Defined at:
 35060 ;;		line 204 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 35061 ;; Parameters:    Size  Location     Type
 35062 ;;		None
 35063 ;; Auto vars:     Size  Location     Type
 35064 ;;  Byte            1   29[BANK0 ] unsigned char 
 35065 ;; Return value:  Size  Location     Type
 35066 ;;                  1    wreg      unsigned char 
 35067 ;; Registers used:
 35068 ;;		wreg, status,2
 35069 ;; Tracked objects:
 35070 ;;		On entry : 0/0
 35071 ;;		On exit  : 0/0
 35072 ;;		Unchanged: 0/0
 35073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35074 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35075 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35076 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35077 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35078 ;;Total ram usage:        1 bytes
 35079 ;; Hardware stack levels used:    1
 35080 ;; Hardware stack levels required when called:   11
 35081 ;; This function calls:
 35082 ;;		Nothing
 35083 ;; This function is called by:
 35084 ;;		_I2c_ReadData
 35085 ;; This function uses a non-reentrant model
 35086 ;;
 35087                           
 35088                           	psect	text165
 35089  006850                     __ptext165:
 35090                           	opt stack 0
 35091  006850                     _ReadByte:
 35092                           	opt stack 14
 35093                           
 35094                           ;i2c_drv.c: 207: UINT8 Byte;
 35095                           ;i2c_drv.c: 210: Byte = SSP2BUF;
 35096                           
 35097                           ;incstack = 0
 35098  006850  CF75 F07D          	movff	3957,ReadByte@Byte	;volatile
 35099                           
 35100                           ;i2c_drv.c: 213: return Byte;
 35101  006854  0100               	movlb	0	; () banked
 35102  006856  517D               	movf	ReadByte@Byte& (0+255),w,b
 35103  006858  0012               	return	
 35104  00685A                     __end_of_ReadByte:
 35105                           	opt stack 0
 35106                           tosu	equ	0xFFF
 35107                           tosh	equ	0xFFE
 35108                           tosl	equ	0xFFD
 35109                           pclath	equ	0xFFA
 35110                           tblptru	equ	0xFF8
 35111                           tblptrh	equ	0xFF7
 35112                           tblptrl	equ	0xFF6
 35113                           tablat	equ	0xFF5
 35114                           prodh	equ	0xFF4
 35115                           prodl	equ	0xFF3
 35116                           intcon	equ	0xFF2
 35117                           intcon2	equ	0xFF1
 35118                           intcon3	equ	0xFF0
 35119                           indf0	equ	0xFEF
 35120                           postinc0	equ	0xFEE
 35121                           plusw0	equ	0xFEB
 35122                           fsr0h	equ	0xFEA
 35123                           fsr0l	equ	0xFE9
 35124                           wreg	equ	0xFE8
 35125                           indf1	equ	0xFE7
 35126                           postinc1	equ	0xFE6
 35127                           postdec1	equ	0xFE5
 35128                           plusw1	equ	0xFE3
 35129                           fsr1h	equ	0xFE2
 35130                           fsr1l	equ	0xFE1
 35131                           indf2	equ	0xFDF
 35132                           postinc2	equ	0xFDE
 35133                           postdec2	equ	0xFDD
 35134                           plusw2	equ	0xFDB
 35135                           fsr2h	equ	0xFDA
 35136                           fsr2l	equ	0xFD9
 35137                           status	equ	0xFD8
 35138                           
 35139 ;; *************** function _GenerateEvt *****************
 35140 ;; Defined at:
 35141 ;;		line 75 in file "../../MercuryFwk/Source/c/02_Osl/os_ser.c"
 35142 ;; Parameters:    Size  Location     Type
 35143 ;;  Event           2   29[BANK0 ] PTR struct EventStructur
 35144 ;;		 -> AlarmEvent(1), I2cRxPacket(6), I2cReadDataEvt(1), I2cWriteDataEvt(1), 
 35145 ;;		 -> GetMethod(1), InitNetwork(1), MdmStsReady(1), SmsTxtReady(1), 
 35146 ;;		 -> GetSmsText(1), SmsEvent(1), ClipEvent(1), RingEvent(1), 
 35147 ;;		 -> SendSmsEvent(1), NewStringMdmTerminal(1), NewMdmEvtParserRequest(1), NewStringReceived(1), 
 35148 ;;		 -> MdmOnOffPulseRequest(1), CallClosedEvent(1), IncomingCallEvent(1), NewSmsEvent(1), 
 35149 ;; Auto vars:     Size  Location     Type
 35150 ;;  EventStatus     1   31[BANK0 ] enum E7727
 35151 ;; Return value:  Size  Location     Type
 35152 ;;                  1    wreg      enum E7699
 35153 ;; Registers used:
 35154 ;;		wreg, fsr2l, fsr2h, status,2
 35155 ;; Tracked objects:
 35156 ;;		On entry : 0/0
 35157 ;;		On exit  : 0/0
 35158 ;;		Unchanged: 0/0
 35159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35160 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35161 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35162 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35163 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35164 ;;Total ram usage:        3 bytes
 35165 ;; Hardware stack levels used:    1
 35166 ;; Hardware stack levels required when called:   11
 35167 ;; This function calls:
 35168 ;;		Nothing
 35169 ;; This function is called by:
 35170 ;;		_I2c_ReadData
 35171 ;;		_CheckModem
 35172 ;;		_TurnOnModem
 35173 ;;		_ConfigureModem
 35174 ;;		_ModemEvtParser
 35175 ;;		_GetSmsSm
 35176 ;;		_Mdm_RequestSmsData
 35177 ;;		_I2cSlv_SendI2cMsg
 35178 ;;		_I2cSlv_ReceiveI2cMsg
 35179 ;;		_RiSm
 35180 ;;		_Mdm_SendSmsData
 35181 ;;		_MdmHttp_InitGprsNetwork
 35182 ;;		_MdmHttp_GetMethod
 35183 ;;		_Alarm
 35184 ;; This function uses a non-reentrant model
 35185 ;;
 35186                           
 35187                           	psect	text166
 35188  0066FE                     __ptext166:
 35189                           	opt stack 0
 35190  0066FE                     _GenerateEvt:
 35191                           	opt stack 13
 35192                           
 35193                           ;os_ser.c: 78: EventStatusType EventStatus = EventIdle;
 35194                           
 35195                           ; BSR set to: 0
 35196                           ;incstack = 0
 35197  0066FE  0E00               	movlw	0
 35198  006700  0100               	movlb	0	; () banked
 35199  006702  6F7F               	movwf	GenerateEvt@EventStatus& (0+255),b
 35200                           
 35201                           ; BSR set to: 0
 35202                           ;os_ser.c: 81: Event->EventStatus = EventSent;
 35203  006704  C07D  FFD9         	movff	GenerateEvt@Event,fsr2l
 35204  006708  C07E  FFDA         	movff	GenerateEvt@Event+1,fsr2h
 35205  00670C  0E02               	movlw	2
 35206  00670E  6EDF               	movwf	indf2,c
 35207                           
 35208                           ; BSR set to: 0
 35209                           ;os_ser.c: 83: EventStatus = EventSent;
 35210  006710  0E02               	movlw	2
 35211  006712  6F7F               	movwf	GenerateEvt@EventStatus& (0+255),b
 35212  006714  0012               	return	
 35213  006716                     __end_of_GenerateEvt:
 35214                           	opt stack 0
 35215                           tosu	equ	0xFFF
 35216                           tosh	equ	0xFFE
 35217                           tosl	equ	0xFFD
 35218                           pclath	equ	0xFFA
 35219                           tblptru	equ	0xFF8
 35220                           tblptrh	equ	0xFF7
 35221                           tblptrl	equ	0xFF6
 35222                           tablat	equ	0xFF5
 35223                           prodh	equ	0xFF4
 35224                           prodl	equ	0xFF3
 35225                           intcon	equ	0xFF2
 35226                           intcon2	equ	0xFF1
 35227                           intcon3	equ	0xFF0
 35228                           indf0	equ	0xFEF
 35229                           postinc0	equ	0xFEE
 35230                           plusw0	equ	0xFEB
 35231                           fsr0h	equ	0xFEA
 35232                           fsr0l	equ	0xFE9
 35233                           wreg	equ	0xFE8
 35234                           indf1	equ	0xFE7
 35235                           postinc1	equ	0xFE6
 35236                           postdec1	equ	0xFE5
 35237                           plusw1	equ	0xFE3
 35238                           fsr1h	equ	0xFE2
 35239                           fsr1l	equ	0xFE1
 35240                           indf2	equ	0xFDF
 35241                           postinc2	equ	0xFDE
 35242                           postdec2	equ	0xFDD
 35243                           plusw2	equ	0xFDB
 35244                           fsr2h	equ	0xFDA
 35245                           fsr2l	equ	0xFD9
 35246                           status	equ	0xFD8
 35247                           
 35248 ;; *************** function _EnableReceiver *****************
 35249 ;; Defined at:
 35250 ;;		line 177 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 35251 ;; Parameters:    Size  Location     Type
 35252 ;;		None
 35253 ;; Auto vars:     Size  Location     Type
 35254 ;;		None
 35255 ;; Return value:  Size  Location     Type
 35256 ;;                  1    wreg      void 
 35257 ;; Registers used:
 35258 ;;		status,2, status,0
 35259 ;; Tracked objects:
 35260 ;;		On entry : 0/0
 35261 ;;		On exit  : 0/0
 35262 ;;		Unchanged: 0/0
 35263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35264 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35265 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35267 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35268 ;;Total ram usage:        0 bytes
 35269 ;; Hardware stack levels used:    1
 35270 ;; Hardware stack levels required when called:   11
 35271 ;; This function calls:
 35272 ;;		Nothing
 35273 ;; This function is called by:
 35274 ;;		_I2c_ReadData
 35275 ;; This function uses a non-reentrant model
 35276 ;;
 35277                           
 35278                           	psect	text167
 35279  00688E                     __ptext167:
 35280                           	opt stack 0
 35281  00688E                     _EnableReceiver:
 35282                           	opt stack 14
 35283                           
 35284                           ;i2c_drv.c: 179: SSP2CON2 |= ((((UINT8)(1)) << ((UINT8)(3))) & ((UINT8)(0x08)));
 35285                           
 35286                           ; BSR set to: 0
 35287                           ;incstack = 0
 35288  00688E  8671               	bsf	3953,3,c	;volatile
 35289  006890  0012               	return		;funcret
 35290  006892                     __end_of_EnableReceiver:
 35291                           	opt stack 0
 35292                           tosu	equ	0xFFF
 35293                           tosh	equ	0xFFE
 35294                           tosl	equ	0xFFD
 35295                           pclath	equ	0xFFA
 35296                           tblptru	equ	0xFF8
 35297                           tblptrh	equ	0xFF7
 35298                           tblptrl	equ	0xFF6
 35299                           tablat	equ	0xFF5
 35300                           prodh	equ	0xFF4
 35301                           prodl	equ	0xFF3
 35302                           intcon	equ	0xFF2
 35303                           intcon2	equ	0xFF1
 35304                           intcon3	equ	0xFF0
 35305                           indf0	equ	0xFEF
 35306                           postinc0	equ	0xFEE
 35307                           plusw0	equ	0xFEB
 35308                           fsr0h	equ	0xFEA
 35309                           fsr0l	equ	0xFE9
 35310                           wreg	equ	0xFE8
 35311                           indf1	equ	0xFE7
 35312                           postinc1	equ	0xFE6
 35313                           postdec1	equ	0xFE5
 35314                           plusw1	equ	0xFE3
 35315                           fsr1h	equ	0xFE2
 35316                           fsr1l	equ	0xFE1
 35317                           indf2	equ	0xFDF
 35318                           postinc2	equ	0xFDE
 35319                           postdec2	equ	0xFDD
 35320                           plusw2	equ	0xFDB
 35321                           fsr2h	equ	0xFDA
 35322                           fsr2l	equ	0xFD9
 35323                           status	equ	0xFD8
 35324                           
 35325 ;; *************** function _CheckTxStatus *****************
 35326 ;; Defined at:
 35327 ;;		line 148 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 35328 ;; Parameters:    Size  Location     Type
 35329 ;;		None
 35330 ;; Auto vars:     Size  Location     Type
 35331 ;;		None
 35332 ;; Return value:  Size  Location     Type
 35333 ;;                  1    wreg      unsigned char 
 35334 ;; Registers used:
 35335 ;;		wreg, status,2, status,0
 35336 ;; Tracked objects:
 35337 ;;		On entry : 0/0
 35338 ;;		On exit  : 0/0
 35339 ;;		Unchanged: 0/0
 35340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35341 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35342 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35343 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35344 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35345 ;;Total ram usage:        0 bytes
 35346 ;; Hardware stack levels used:    1
 35347 ;; Hardware stack levels required when called:   11
 35348 ;; This function calls:
 35349 ;;		Nothing
 35350 ;; This function is called by:
 35351 ;;		_I2c_WriteData
 35352 ;;		_I2c_ReadData
 35353 ;; This function uses a non-reentrant model
 35354 ;;
 35355                           
 35356                           	psect	text168
 35357  00685A                     __ptext168:
 35358                           	opt stack 0
 35359  00685A                     _CheckTxStatus:
 35360                           	opt stack 14
 35361                           
 35362                           ;i2c_drv.c: 151: return ((SSP2STAT & ((UINT8)(0x04))) >> ((UINT8)(2)));
 35363                           
 35364                           ;incstack = 0
 35365  00685A  4073               	rrncf	3955,w,c	;volatile
 35366  00685C  42E8               	rrncf	wreg,f,c
 35367  00685E  0B3F               	andlw	63
 35368  006860  0B01               	andlw	1
 35369  006862  0012               	return	
 35370  006864                     __end_of_CheckTxStatus:
 35371                           	opt stack 0
 35372                           tosu	equ	0xFFF
 35373                           tosh	equ	0xFFE
 35374                           tosl	equ	0xFFD
 35375                           pclath	equ	0xFFA
 35376                           tblptru	equ	0xFF8
 35377                           tblptrh	equ	0xFF7
 35378                           tblptrl	equ	0xFF6
 35379                           tablat	equ	0xFF5
 35380                           prodh	equ	0xFF4
 35381                           prodl	equ	0xFF3
 35382                           intcon	equ	0xFF2
 35383                           intcon2	equ	0xFF1
 35384                           intcon3	equ	0xFF0
 35385                           indf0	equ	0xFEF
 35386                           postinc0	equ	0xFEE
 35387                           plusw0	equ	0xFEB
 35388                           fsr0h	equ	0xFEA
 35389                           fsr0l	equ	0xFE9
 35390                           wreg	equ	0xFE8
 35391                           indf1	equ	0xFE7
 35392                           postinc1	equ	0xFE6
 35393                           postdec1	equ	0xFE5
 35394                           plusw1	equ	0xFE3
 35395                           fsr1h	equ	0xFE2
 35396                           fsr1l	equ	0xFE1
 35397                           indf2	equ	0xFDF
 35398                           postinc2	equ	0xFDE
 35399                           postdec2	equ	0xFDD
 35400                           plusw2	equ	0xFDB
 35401                           fsr2h	equ	0xFDA
 35402                           fsr2l	equ	0xFD9
 35403                           status	equ	0xFD8
 35404                           
 35405 ;; *************** function _CheckAckStatus *****************
 35406 ;; Defined at:
 35407 ;;		line 134 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 35408 ;; Parameters:    Size  Location     Type
 35409 ;;		None
 35410 ;; Auto vars:     Size  Location     Type
 35411 ;;		None
 35412 ;; Return value:  Size  Location     Type
 35413 ;;                  1    wreg      unsigned char 
 35414 ;; Registers used:
 35415 ;;		wreg, status,2, status,0
 35416 ;; Tracked objects:
 35417 ;;		On entry : 0/0
 35418 ;;		On exit  : 0/0
 35419 ;;		Unchanged: 0/0
 35420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35421 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35422 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35423 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35424 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35425 ;;Total ram usage:        0 bytes
 35426 ;; Hardware stack levels used:    1
 35427 ;; Hardware stack levels required when called:   11
 35428 ;; This function calls:
 35429 ;;		Nothing
 35430 ;; This function is called by:
 35431 ;;		_I2c_WriteData
 35432 ;;		_I2c_ReadData
 35433 ;; This function uses a non-reentrant model
 35434 ;;
 35435                           
 35436                           	psect	text169
 35437  006864                     __ptext169:
 35438                           	opt stack 0
 35439  006864                     _CheckAckStatus:
 35440                           	opt stack 14
 35441                           
 35442                           ;i2c_drv.c: 137: return ((SSP2CON2 & ((UINT8)(0x40))) >> ((UINT8)(6)));
 35443                           
 35444                           ;incstack = 0
 35445  006864  4471               	rlncf	3953,w,c	;volatile
 35446  006866  46E8               	rlncf	wreg,f,c
 35447  006868  0B03               	andlw	3
 35448  00686A  0B01               	andlw	1
 35449  00686C  0012               	return	
 35450  00686E                     __end_of_CheckAckStatus:
 35451                           	opt stack 0
 35452                           tosu	equ	0xFFF
 35453                           tosh	equ	0xFFE
 35454                           tosl	equ	0xFFD
 35455                           pclath	equ	0xFFA
 35456                           tblptru	equ	0xFF8
 35457                           tblptrh	equ	0xFF7
 35458                           tblptrl	equ	0xFF6
 35459                           tablat	equ	0xFF5
 35460                           prodh	equ	0xFF4
 35461                           prodl	equ	0xFF3
 35462                           intcon	equ	0xFF2
 35463                           intcon2	equ	0xFF1
 35464                           intcon3	equ	0xFF0
 35465                           indf0	equ	0xFEF
 35466                           postinc0	equ	0xFEE
 35467                           plusw0	equ	0xFEB
 35468                           fsr0h	equ	0xFEA
 35469                           fsr0l	equ	0xFE9
 35470                           wreg	equ	0xFE8
 35471                           indf1	equ	0xFE7
 35472                           postinc1	equ	0xFE6
 35473                           postdec1	equ	0xFE5
 35474                           plusw1	equ	0xFE3
 35475                           fsr1h	equ	0xFE2
 35476                           fsr1l	equ	0xFE1
 35477                           indf2	equ	0xFDF
 35478                           postinc2	equ	0xFDE
 35479                           postdec2	equ	0xFDD
 35480                           plusw2	equ	0xFDB
 35481                           fsr2h	equ	0xFDA
 35482                           fsr2l	equ	0xFD9
 35483                           status	equ	0xFD8
 35484                           
 35485 ;; *************** function _LowPriorityIsr *****************
 35486 ;; Defined at:
 35487 ;;		line 236 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/irq.c"
 35488 ;; Parameters:    Size  Location     Type
 35489 ;;		None
 35490 ;; Auto vars:     Size  Location     Type
 35491 ;;		None
 35492 ;; Return value:  Size  Location     Type
 35493 ;;                  1    wreg      void 
 35494 ;; Registers used:
 35495 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 35496 ;; Tracked objects:
 35497 ;;		On entry : 0/0
 35498 ;;		On exit  : 0/0
 35499 ;;		Unchanged: 0/0
 35500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35501 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35502 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35503 ;;      Temps:          0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35504 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35505 ;;Total ram usage:       21 bytes
 35506 ;; Hardware stack levels used:    1
 35507 ;; Hardware stack levels required when called:   10
 35508 ;; This function calls:
 35509 ;;		_Tmr_Tmr2Isr
 35510 ;; This function is called by:
 35511 ;;		Interrupt level 1
 35512 ;; This function uses a non-reentrant model
 35513 ;;
 35514                           
 35515                           	psect	intcodelo
 35516  000018                     __pintcodelo:
 35517                           	opt stack 0
 35518  000018                     _LowPriorityIsr:
 35519                           	opt stack 8
 35520                           
 35521                           ;incstack = 0
 35522  000018  8042               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 35523  00001A  CFD8 F068          	movff	status,??_LowPriorityIsr
 35524  00001E  CFE8 F069          	movff	wreg,??_LowPriorityIsr+1
 35525  000022  CFE0 F06A          	movff	bsr,??_LowPriorityIsr+2
 35526  000026  CFFA F06B          	movff	pclath,??_LowPriorityIsr+3
 35527  00002A  CFFB F06C          	movff	pclatu,??_LowPriorityIsr+4
 35528  00002E  CFE9 F06D          	movff	fsr0l,??_LowPriorityIsr+5
 35529  000032  CFEA F06E          	movff	fsr0h,??_LowPriorityIsr+6
 35530  000036  CFE1 F06F          	movff	fsr1l,??_LowPriorityIsr+7
 35531  00003A  CFE2 F070          	movff	fsr1h,??_LowPriorityIsr+8
 35532  00003E  CFD9 F071          	movff	fsr2l,??_LowPriorityIsr+9
 35533  000042  CFDA F072          	movff	fsr2h,??_LowPriorityIsr+10
 35534  000046  CFF3 F073          	movff	prodl,??_LowPriorityIsr+11
 35535  00004A  CFF4 F074          	movff	prodh,??_LowPriorityIsr+12
 35536  00004E  CFF6 F075          	movff	tblptrl,??_LowPriorityIsr+13
 35537  000052  CFF7 F076          	movff	tblptrh,??_LowPriorityIsr+14
 35538  000056  CFF8 F077          	movff	tblptru,??_LowPriorityIsr+15
 35539  00005A  CFF5 F078          	movff	tablat,??_LowPriorityIsr+16
 35540  00005E  C042  F079         	movff	btemp,??_LowPriorityIsr+17
 35541  000062  C043  F07A         	movff	btemp+1,??_LowPriorityIsr+18
 35542  000066  C044  F07B         	movff	btemp+2,??_LowPriorityIsr+19
 35543  00006A  C045  F07C         	movff	btemp+3,??_LowPriorityIsr+20
 35544                           
 35545                           ;irq.c: 258: if (PIR1bits.TMR2IF == ((UINT8)(1)))
 35546  00006E  B29E               	btfsc	3998,1,c	;volatile
 35547                           
 35548                           ;irq.c: 259: {
 35549                           ;irq.c: 261: Tmr_Tmr2Isr();
 35550  000070  EC51  F032         	call	_Tmr_Tmr2Isr	;wreg free
 35551  000074  C07C  F045         	movff	??_LowPriorityIsr+20,btemp+3
 35552  000078  C07B  F044         	movff	??_LowPriorityIsr+19,btemp+2
 35553  00007C  C07A  F043         	movff	??_LowPriorityIsr+18,btemp+1
 35554  000080  C079  F042         	movff	??_LowPriorityIsr+17,btemp
 35555  000084  C078  FFF5         	movff	??_LowPriorityIsr+16,tablat
 35556  000088  C077  FFF8         	movff	??_LowPriorityIsr+15,tblptru
 35557  00008C  C076  FFF7         	movff	??_LowPriorityIsr+14,tblptrh
 35558  000090  C075  FFF6         	movff	??_LowPriorityIsr+13,tblptrl
 35559  000094  C074  FFF4         	movff	??_LowPriorityIsr+12,prodh
 35560  000098  C073  FFF3         	movff	??_LowPriorityIsr+11,prodl
 35561  00009C  C072  FFDA         	movff	??_LowPriorityIsr+10,fsr2h
 35562  0000A0  C071  FFD9         	movff	??_LowPriorityIsr+9,fsr2l
 35563  0000A4  C070  FFE2         	movff	??_LowPriorityIsr+8,fsr1h
 35564  0000A8  C06F  FFE1         	movff	??_LowPriorityIsr+7,fsr1l
 35565  0000AC  C06E  FFEA         	movff	??_LowPriorityIsr+6,fsr0h
 35566  0000B0  C06D  FFE9         	movff	??_LowPriorityIsr+5,fsr0l
 35567  0000B4  C06C  FFFB         	movff	??_LowPriorityIsr+4,pclatu
 35568  0000B8  C06B  FFFA         	movff	??_LowPriorityIsr+3,pclath
 35569  0000BC  C06A  FFE0         	movff	??_LowPriorityIsr+2,bsr
 35570  0000C0  C069  FFE8         	movff	??_LowPriorityIsr+1,wreg
 35571  0000C4  C068  FFD8         	movff	??_LowPriorityIsr,status
 35572  0000C8  9042               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 35573  0000CA  0010               	retfie	
 35574  0000CC                     __end_of_LowPriorityIsr:
 35575                           	opt stack 0
 35576                           tosu	equ	0xFFF
 35577                           tosh	equ	0xFFE
 35578                           tosl	equ	0xFFD
 35579                           pclatu	equ	0xFFB
 35580                           pclath	equ	0xFFA
 35581                           tblptru	equ	0xFF8
 35582                           tblptrh	equ	0xFF7
 35583                           tblptrl	equ	0xFF6
 35584                           tablat	equ	0xFF5
 35585                           prodh	equ	0xFF4
 35586                           prodl	equ	0xFF3
 35587                           intcon	equ	0xFF2
 35588                           intcon2	equ	0xFF1
 35589                           intcon3	equ	0xFF0
 35590                           indf0	equ	0xFEF
 35591                           postinc0	equ	0xFEE
 35592                           plusw0	equ	0xFEB
 35593                           fsr0h	equ	0xFEA
 35594                           fsr0l	equ	0xFE9
 35595                           wreg	equ	0xFE8
 35596                           indf1	equ	0xFE7
 35597                           postinc1	equ	0xFE6
 35598                           postdec1	equ	0xFE5
 35599                           plusw1	equ	0xFE3
 35600                           fsr1h	equ	0xFE2
 35601                           fsr1l	equ	0xFE1
 35602                           bsr	equ	0xFE0
 35603                           indf2	equ	0xFDF
 35604                           postinc2	equ	0xFDE
 35605                           postdec2	equ	0xFDD
 35606                           plusw2	equ	0xFDB
 35607                           fsr2h	equ	0xFDA
 35608                           fsr2l	equ	0xFD9
 35609                           status	equ	0xFD8
 35610                           
 35611 ;; *************** function _Tmr_Tmr2Isr *****************
 35612 ;; Defined at:
 35613 ;;		line 308 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
 35614 ;; Parameters:    Size  Location     Type
 35615 ;;		None
 35616 ;; Auto vars:     Size  Location     Type
 35617 ;;		None
 35618 ;; Return value:  Size  Location     Type
 35619 ;;                  1    wreg      void 
 35620 ;; Registers used:
 35621 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 35622 ;; Tracked objects:
 35623 ;;		On entry : 0/0
 35624 ;;		On exit  : 0/0
 35625 ;;		Unchanged: 0/0
 35626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35627 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35628 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35629 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35630 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35631 ;;Total ram usage:        0 bytes
 35632 ;; Hardware stack levels used:    1
 35633 ;; Hardware stack levels required when called:    9
 35634 ;; This function calls:
 35635 ;;		Absolute function
 35636 ;;		_Sch_SchmIntService
 35637 ;; This function is called by:
 35638 ;;		_LowPriorityIsr
 35639 ;; This function uses a non-reentrant model
 35640 ;;
 35641                           
 35642                           	psect	text171
 35643  0064A2                     __ptext171:
 35644                           	opt stack 0
 35645  0064A2                     _Tmr_Tmr2Isr:
 35646                           	opt stack 8
 35647                           
 35648                           ;tmr_drv.c: 311: PIR1bits.TMR2IF = 0u;
 35649                           
 35650                           ;incstack = 0
 35651  0064A2  929E               	bcf	3998,1,c	;volatile
 35652                           
 35653                           ;tmr_drv.c: 314: if (Tmr2IsrCallback != (0))
 35654  0064A4  0102               	movlb	2	; () banked
 35655  0064A6  51E8               	movf	_Tmr2IsrCallback& (0+255),w,b
 35656  0064A8  11E9               	iorwf	(_Tmr2IsrCallback+1)& (0+255),w,b
 35657  0064AA  B4D8               	btfsc	status,2,c
 35658  0064AC  0012               	return	
 35659                           
 35660                           ; BSR set to: 2
 35661                           ;tmr_drv.c: 315: {
 35662                           ;tmr_drv.c: 317: Tmr2IsrCallback();
 35663  0064AE  D801               	call	i1u1602_28
 35664  0064B0  0012               	return	
 35665  0064B2                     i1u1602_28:
 35666  0064B2  0005               	push	
 35667  0064B4  6EFA               	movwf	pclath,c
 35668  0064B6  51E8               	movf	_Tmr2IsrCallback& (0+255),w,b
 35669  0064B8  6EFD               	movwf	tosl,c
 35670  0064BA  51E9               	movf	(_Tmr2IsrCallback+1)& (0+255),w,b
 35671  0064BC  6EFE               	movwf	tosh,c
 35672  0064BE  50F8               	movf	tblptru,w,c
 35673  0064C0  6EFF               	movwf	tosu,c
 35674  0064C2  50FA               	movf	pclath,w,c
 35675  0064C4  0012               	return		;indir
 35676  0064C6                     __end_of_Tmr_Tmr2Isr:
 35677                           	opt stack 0
 35678                           tosu	equ	0xFFF
 35679                           tosh	equ	0xFFE
 35680                           tosl	equ	0xFFD
 35681                           pclatu	equ	0xFFB
 35682                           pclath	equ	0xFFA
 35683                           tblptru	equ	0xFF8
 35684                           tblptrh	equ	0xFF7
 35685                           tblptrl	equ	0xFF6
 35686                           tablat	equ	0xFF5
 35687                           prodh	equ	0xFF4
 35688                           prodl	equ	0xFF3
 35689                           intcon	equ	0xFF2
 35690                           intcon2	equ	0xFF1
 35691                           intcon3	equ	0xFF0
 35692                           indf0	equ	0xFEF
 35693                           postinc0	equ	0xFEE
 35694                           plusw0	equ	0xFEB
 35695                           fsr0h	equ	0xFEA
 35696                           fsr0l	equ	0xFE9
 35697                           wreg	equ	0xFE8
 35698                           indf1	equ	0xFE7
 35699                           postinc1	equ	0xFE6
 35700                           postdec1	equ	0xFE5
 35701                           plusw1	equ	0xFE3
 35702                           fsr1h	equ	0xFE2
 35703                           fsr1l	equ	0xFE1
 35704                           bsr	equ	0xFE0
 35705                           indf2	equ	0xFDF
 35706                           postinc2	equ	0xFDE
 35707                           postdec2	equ	0xFDD
 35708                           plusw2	equ	0xFDB
 35709                           fsr2h	equ	0xFDA
 35710                           fsr2l	equ	0xFD9
 35711                           status	equ	0xFD8
 35712                           
 35713 ;; *************** function _Sch_SchmIntService *****************
 35714 ;; Defined at:
 35715 ;;		line 214 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
 35716 ;; Parameters:    Size  Location     Type
 35717 ;;		None
 35718 ;; Auto vars:     Size  Location     Type
 35719 ;;		None
 35720 ;; Return value:  Size  Location     Type
 35721 ;;                  1    wreg      void 
 35722 ;; Registers used:
 35723 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 35724 ;; Tracked objects:
 35725 ;;		On entry : 0/0
 35726 ;;		On exit  : 0/0
 35727 ;;		Unchanged: 0/0
 35728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35729 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35730 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35731 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35732 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35733 ;;Total ram usage:        0 bytes
 35734 ;; Hardware stack levels used:    1
 35735 ;; Hardware stack levels required when called:    8
 35736 ;; This function calls:
 35737 ;;		_OsAlrm_ProcessOsAlarms
 35738 ;;		_UpdateOsCounters
 35739 ;;		_UpdateSchFlag
 35740 ;; This function is called by:
 35741 ;;		_SystemInit
 35742 ;;		_Tmr_Tmr2Isr
 35743 ;; This function uses a non-reentrant model
 35744 ;;
 35745                           
 35746                           	psect	text172
 35747  006808                     __ptext172:
 35748                           	opt stack 0
 35749  006808                     _Sch_SchmIntService:
 35750                           	opt stack 8
 35751                           
 35752                           ;os_sched.c: 217: UpdateSchFlag();
 35753                           
 35754                           ;incstack = 0
 35755  006808  EC17  F033         	call	_UpdateSchFlag	;wreg free
 35756                           
 35757                           ;os_sched.c: 219: UpdateOsCounters();
 35758  00680C  ECF4  F033         	call	_UpdateOsCounters	;wreg free
 35759                           
 35760                           ;os_sched.c: 221: OsAlrm_ProcessOsAlarms();
 35761  006810  ECC7  F012         	call	_OsAlrm_ProcessOsAlarms	;wreg free
 35762  006814  0012               	return		;funcret
 35763  006816                     __end_of_Sch_SchmIntService:
 35764                           	opt stack 0
 35765                           tosu	equ	0xFFF
 35766                           tosh	equ	0xFFE
 35767                           tosl	equ	0xFFD
 35768                           pclatu	equ	0xFFB
 35769                           pclath	equ	0xFFA
 35770                           tblptru	equ	0xFF8
 35771                           tblptrh	equ	0xFF7
 35772                           tblptrl	equ	0xFF6
 35773                           tablat	equ	0xFF5
 35774                           prodh	equ	0xFF4
 35775                           prodl	equ	0xFF3
 35776                           intcon	equ	0xFF2
 35777                           intcon2	equ	0xFF1
 35778                           intcon3	equ	0xFF0
 35779                           indf0	equ	0xFEF
 35780                           postinc0	equ	0xFEE
 35781                           plusw0	equ	0xFEB
 35782                           fsr0h	equ	0xFEA
 35783                           fsr0l	equ	0xFE9
 35784                           wreg	equ	0xFE8
 35785                           indf1	equ	0xFE7
 35786                           postinc1	equ	0xFE6
 35787                           postdec1	equ	0xFE5
 35788                           plusw1	equ	0xFE3
 35789                           fsr1h	equ	0xFE2
 35790                           fsr1l	equ	0xFE1
 35791                           bsr	equ	0xFE0
 35792                           indf2	equ	0xFDF
 35793                           postinc2	equ	0xFDE
 35794                           postdec2	equ	0xFDD
 35795                           plusw2	equ	0xFDB
 35796                           fsr2h	equ	0xFDA
 35797                           fsr2l	equ	0xFD9
 35798                           status	equ	0xFD8
 35799                           
 35800 ;; *************** function _UpdateSchFlag *****************
 35801 ;; Defined at:
 35802 ;;		line 132 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
 35803 ;; Parameters:    Size  Location     Type
 35804 ;;		None
 35805 ;; Auto vars:     Size  Location     Type
 35806 ;;		None
 35807 ;; Return value:  Size  Location     Type
 35808 ;;                  1    wreg      void 
 35809 ;; Registers used:
 35810 ;;		wreg, status,2, status,0
 35811 ;; Tracked objects:
 35812 ;;		On entry : 0/0
 35813 ;;		On exit  : 0/0
 35814 ;;		Unchanged: 0/0
 35815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35816 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35817 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35818 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35819 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35820 ;;Total ram usage:        0 bytes
 35821 ;; Hardware stack levels used:    1
 35822 ;; Hardware stack levels required when called:    4
 35823 ;; This function calls:
 35824 ;;		Nothing
 35825 ;; This function is called by:
 35826 ;;		_Sch_SchmIntService
 35827 ;; This function uses a non-reentrant model
 35828 ;;
 35829                           
 35830                           	psect	text173
 35831  00662E                     __ptext173:
 35832                           	opt stack 0
 35833  00662E                     _UpdateSchFlag:
 35834                           	opt stack 11
 35835                           
 35836                           ;os_sched.c: 135: static UINT16 InterruptCounter = 0;
 35837                           ;os_sched.c: 138: InterruptCounter++;
 35838                           
 35839                           ;incstack = 0
 35840  00662E  0102               	movlb	2	; () banked
 35841  006630  4BDA               	infsnz	UpdateSchFlag@InterruptCounter& (0+255),f,b
 35842  006632  2BDB               	incf	(UpdateSchFlag@InterruptCounter+1)& (0+255),f,b
 35843                           
 35844                           ; BSR set to: 2
 35845                           ;os_sched.c: 140: if (InterruptCounter >= ((((UINT16)(1000))*((UINT16)(1)))/1000))
 35846  006634  51DA               	movf	UpdateSchFlag@InterruptCounter& (0+255),w,b
 35847  006636  11DB               	iorwf	(UpdateSchFlag@InterruptCounter+1)& (0+255),w,b
 35848  006638  B4D8               	btfsc	status,2,c
 35849  00663A  0012               	return	
 35850                           
 35851                           ; BSR set to: 2
 35852                           ;os_sched.c: 141: {
 35853                           ;os_sched.c: 143: InterruptCounter = 0;
 35854  00663C  0E00               	movlw	0
 35855  00663E  6FDB               	movwf	(UpdateSchFlag@InterruptCounter+1)& (0+255),b
 35856  006640  0E00               	movlw	0
 35857  006642  6FDA               	movwf	UpdateSchFlag@InterruptCounter& (0+255),b
 35858                           
 35859                           ;os_sched.c: 145: MainSystemTimebaseFlag = CallTaskPhase;
 35860  006644  0E00               	movlw	0
 35861  006646  6FF4               	movwf	_MainSystemTimebaseFlag& (0+255),b
 35862  006648  0012               	return	
 35863  00664A                     __end_of_UpdateSchFlag:
 35864                           	opt stack 0
 35865                           tosu	equ	0xFFF
 35866                           tosh	equ	0xFFE
 35867                           tosl	equ	0xFFD
 35868                           pclatu	equ	0xFFB
 35869                           pclath	equ	0xFFA
 35870                           tblptru	equ	0xFF8
 35871                           tblptrh	equ	0xFF7
 35872                           tblptrl	equ	0xFF6
 35873                           tablat	equ	0xFF5
 35874                           prodh	equ	0xFF4
 35875                           prodl	equ	0xFF3
 35876                           intcon	equ	0xFF2
 35877                           intcon2	equ	0xFF1
 35878                           intcon3	equ	0xFF0
 35879                           indf0	equ	0xFEF
 35880                           postinc0	equ	0xFEE
 35881                           plusw0	equ	0xFEB
 35882                           fsr0h	equ	0xFEA
 35883                           fsr0l	equ	0xFE9
 35884                           wreg	equ	0xFE8
 35885                           indf1	equ	0xFE7
 35886                           postinc1	equ	0xFE6
 35887                           postdec1	equ	0xFE5
 35888                           plusw1	equ	0xFE3
 35889                           fsr1h	equ	0xFE2
 35890                           fsr1l	equ	0xFE1
 35891                           bsr	equ	0xFE0
 35892                           indf2	equ	0xFDF
 35893                           postinc2	equ	0xFDE
 35894                           postdec2	equ	0xFDD
 35895                           plusw2	equ	0xFDB
 35896                           fsr2h	equ	0xFDA
 35897                           fsr2l	equ	0xFD9
 35898                           status	equ	0xFD8
 35899                           
 35900 ;; *************** function _UpdateOsCounters *****************
 35901 ;; Defined at:
 35902 ;;		line 157 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
 35903 ;; Parameters:    Size  Location     Type
 35904 ;;		None
 35905 ;; Auto vars:     Size  Location     Type
 35906 ;;		None
 35907 ;; Return value:  Size  Location     Type
 35908 ;;                  1    wreg      void 
 35909 ;; Registers used:
 35910 ;;		wreg, status,2, status,0
 35911 ;; Tracked objects:
 35912 ;;		On entry : 0/0
 35913 ;;		On exit  : 0/0
 35914 ;;		Unchanged: 0/0
 35915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35916 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35917 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35918 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35919 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35920 ;;Total ram usage:        0 bytes
 35921 ;; Hardware stack levels used:    1
 35922 ;; Hardware stack levels required when called:    4
 35923 ;; This function calls:
 35924 ;;		Nothing
 35925 ;; This function is called by:
 35926 ;;		_Sch_SchmIntService
 35927 ;; This function uses a non-reentrant model
 35928 ;;
 35929                           
 35930                           	psect	text174
 35931  0067E8                     __ptext174:
 35932                           	opt stack 0
 35933  0067E8                     _UpdateOsCounters:
 35934                           	opt stack 11
 35935                           
 35936                           ;os_sched.c: 160: OsTmr_OsTickCounter++;
 35937                           
 35938                           ; BSR set to: 2
 35939                           ;incstack = 0
 35940  0067E8  0E01               	movlw	1
 35941  0067EA  0103               	movlb	3	; () banked
 35942  0067EC  271C               	addwf	_OsTmr_OsTickCounter& (0+255),f,b
 35943  0067EE  0E00               	movlw	0
 35944  0067F0  231D               	addwfc	(_OsTmr_OsTickCounter+1)& (0+255),f,b
 35945  0067F2  231E               	addwfc	(_OsTmr_OsTickCounter+2)& (0+255),f,b
 35946  0067F4  231F               	addwfc	(_OsTmr_OsTickCounter+3)& (0+255),f,b
 35947                           
 35948                           ; BSR set to: 3
 35949  0067F6  0012               	return		;funcret
 35950  0067F8                     __end_of_UpdateOsCounters:
 35951                           	opt stack 0
 35952                           tosu	equ	0xFFF
 35953                           tosh	equ	0xFFE
 35954                           tosl	equ	0xFFD
 35955                           pclatu	equ	0xFFB
 35956                           pclath	equ	0xFFA
 35957                           tblptru	equ	0xFF8
 35958                           tblptrh	equ	0xFF7
 35959                           tblptrl	equ	0xFF6
 35960                           tablat	equ	0xFF5
 35961                           prodh	equ	0xFF4
 35962                           prodl	equ	0xFF3
 35963                           intcon	equ	0xFF2
 35964                           intcon2	equ	0xFF1
 35965                           intcon3	equ	0xFF0
 35966                           indf0	equ	0xFEF
 35967                           postinc0	equ	0xFEE
 35968                           plusw0	equ	0xFEB
 35969                           fsr0h	equ	0xFEA
 35970                           fsr0l	equ	0xFE9
 35971                           wreg	equ	0xFE8
 35972                           indf1	equ	0xFE7
 35973                           postinc1	equ	0xFE6
 35974                           postdec1	equ	0xFE5
 35975                           plusw1	equ	0xFE3
 35976                           fsr1h	equ	0xFE2
 35977                           fsr1l	equ	0xFE1
 35978                           bsr	equ	0xFE0
 35979                           indf2	equ	0xFDF
 35980                           postinc2	equ	0xFDE
 35981                           postdec2	equ	0xFDD
 35982                           plusw2	equ	0xFDB
 35983                           fsr2h	equ	0xFDA
 35984                           fsr2l	equ	0xFD9
 35985                           status	equ	0xFD8
 35986                           
 35987 ;; *************** function _OsAlrm_ProcessOsAlarms *****************
 35988 ;; Defined at:
 35989 ;;		line 115 in file "../../MercuryFwk/Source/c/02_Osl/os_alarms.c"
 35990 ;; Parameters:    Size  Location     Type
 35991 ;;		None
 35992 ;; Auto vars:     Size  Location     Type
 35993 ;;  AlarmIndex      2   32[COMRAM] unsigned short 
 35994 ;; Return value:  Size  Location     Type
 35995 ;;                  1    wreg      void 
 35996 ;; Registers used:
 35997 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 35998 ;; Tracked objects:
 35999 ;;		On entry : 0/0
 36000 ;;		On exit  : 0/0
 36001 ;;		Unchanged: 0/0
 36002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36003 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36004 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36005 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36006 ;;      Totals:         2       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36007 ;;Total ram usage:       10 bytes
 36008 ;; Hardware stack levels used:    1
 36009 ;; Hardware stack levels required when called:    7
 36010 ;; This function calls:
 36011 ;;		_I2cDummyTx
 36012 ;;		_OsAlrm_ClearOsAlarm
 36013 ;;		i1___wmul
 36014 ;; This function is called by:
 36015 ;;		_Sch_SchmIntService
 36016 ;; This function uses a non-reentrant model
 36017 ;;
 36018                           
 36019                           	psect	text175
 36020  00258E                     __ptext175:
 36021                           	opt stack 0
 36022  00258E                     _OsAlrm_ProcessOsAlarms:
 36023                           	opt stack 8
 36024                           
 36025                           ;os_alarms.c: 117: UINT16 AlarmIndex;
 36026                           ;os_alarms.c: 120: for (AlarmIndex = 0; AlarmIndex < ((UINT8)(20)); AlarmIndex++)
 36027                           
 36028                           ; BSR set to: 3
 36029                           ;incstack = 0
 36030  00258E  0E00               	movlw	0
 36031  002590  6E22               	movwf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,c
 36032  002592  0E00               	movlw	0
 36033  002594  6E21               	movwf	OsAlrm_ProcessOsAlarms@AlarmIndex,c
 36034  002596  5022               	movf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,w,c
 36035  002598  E105               	bnz	i1u1560_20
 36036  00259A  0E14               	movlw	20
 36037  00259C  5C21               	subwf	OsAlrm_ProcessOsAlarms@AlarmIndex,w,c
 36038  00259E  B0D8               	btfsc	status,0,c
 36039  0025A0  0012               	return	
 36040  0025A2  D001               	goto	i1l742
 36041  0025A4                     i1u1560_20:
 36042  0025A4  0012               	return	
 36043  0025A6                     i1l742:
 36044                           
 36045                           ;os_alarms.c: 121: {
 36046                           ;os_alarms.c: 123: if (OsAlarms[AlarmIndex].Enabled == 1u)
 36047  0025A6  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 36048  0025AA  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 36049  0025AE  0E00               	movlw	0
 36050  0025B0  6E1C               	movwf	i1___wmul@multiplicand+1,c
 36051  0025B2  0E0B               	movlw	11
 36052  0025B4  6E1B               	movwf	i1___wmul@multiplicand,c
 36053  0025B6  EC08  F032         	call	i1___wmul	;wreg free
 36054  0025BA  0E00               	movlw	low _OsAlarms
 36055  0025BC  2419               	addwf	?i1___wmul,w,c
 36056  0025BE  6ED9               	movwf	fsr2l,c
 36057  0025C0  0E06               	movlw	high _OsAlarms
 36058  0025C2  201A               	addwfc	?i1___wmul+1,w,c
 36059  0025C4  6EDA               	movwf	fsr2h,c
 36060  0025C6  04DE               	decf	postinc2,w,c
 36061  0025C8  A4D8               	btfss	status,2,c
 36062  0025CA  D086               	goto	i1u1564_29
 36063                           
 36064                           ;os_alarms.c: 124: {
 36065                           ;os_alarms.c: 126: OsAlarms[AlarmIndex].Counter++;
 36066  0025CC  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 36067  0025D0  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 36068  0025D4  0E00               	movlw	0
 36069  0025D6  6E1C               	movwf	i1___wmul@multiplicand+1,c
 36070  0025D8  0E0B               	movlw	11
 36071  0025DA  6E1B               	movwf	i1___wmul@multiplicand,c
 36072  0025DC  EC08  F032         	call	i1___wmul	;wreg free
 36073  0025E0  0E01               	movlw	1
 36074  0025E2  2619               	addwf	?i1___wmul,f,c
 36075  0025E4  0E00               	movlw	0
 36076  0025E6  221A               	addwfc	?i1___wmul+1,f,c
 36077  0025E8  0E00               	movlw	low _OsAlarms
 36078  0025EA  2419               	addwf	?i1___wmul,w,c
 36079  0025EC  6ED9               	movwf	fsr2l,c
 36080  0025EE  0E06               	movlw	high _OsAlarms
 36081  0025F0  201A               	addwfc	?i1___wmul+1,w,c
 36082  0025F2  6EDA               	movwf	fsr2h,c
 36083  0025F4  2ADE               	incf	postinc2,f,c
 36084  0025F6  0E00               	movlw	0
 36085  0025F8  22DE               	addwfc	postinc2,f,c
 36086  0025FA  22DE               	addwfc	postinc2,f,c
 36087  0025FC  22DE               	addwfc	postinc2,f,c
 36088                           
 36089                           ;os_alarms.c: 128: if (OsAlarms[AlarmIndex].Counter >= OsAlarms[AlarmIndex].AlarmTime)
 36090  0025FE  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 36091  002602  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 36092  002606  0E00               	movlw	0
 36093  002608  6E1C               	movwf	i1___wmul@multiplicand+1,c
 36094  00260A  0E0B               	movlw	11
 36095  00260C  6E1B               	movwf	i1___wmul@multiplicand,c
 36096  00260E  EC08  F032         	call	i1___wmul	;wreg free
 36097  002612  0E05               	movlw	5
 36098  002614  2619               	addwf	?i1___wmul,f,c
 36099  002616  0E00               	movlw	0
 36100  002618  221A               	addwfc	?i1___wmul+1,f,c
 36101  00261A  0E00               	movlw	low _OsAlarms
 36102  00261C  2419               	addwf	?i1___wmul,w,c
 36103  00261E  6ED9               	movwf	fsr2l,c
 36104  002620  0E06               	movlw	high _OsAlarms
 36105  002622  201A               	addwfc	?i1___wmul+1,w,c
 36106  002624  6EDA               	movwf	fsr2h,c
 36107  002626  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 36108  00262A  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 36109  00262E  0E00               	movlw	0
 36110  002630  6E1C               	movwf	i1___wmul@multiplicand+1,c
 36111  002632  0E0B               	movlw	11
 36112  002634  6E1B               	movwf	i1___wmul@multiplicand,c
 36113  002636  EC08  F032         	call	i1___wmul	;wreg free
 36114  00263A  0E01               	movlw	1
 36115  00263C  2619               	addwf	?i1___wmul,f,c
 36116  00263E  0E00               	movlw	0
 36117  002640  221A               	addwfc	?i1___wmul+1,f,c
 36118  002642  0E00               	movlw	low _OsAlarms
 36119  002644  2419               	addwf	?i1___wmul,w,c
 36120  002646  6EE1               	movwf	fsr1l,c
 36121  002648  0E06               	movlw	high _OsAlarms
 36122  00264A  201A               	addwfc	?i1___wmul+1,w,c
 36123  00264C  6EE2               	movwf	fsr1h,c
 36124  00264E  50DE               	movf	postinc2,w,c
 36125  002650  5CE6               	subwf	postinc1,w,c
 36126  002652  50DE               	movf	postinc2,w,c
 36127  002654  58E6               	subwfb	postinc1,w,c
 36128  002656  50DE               	movf	postinc2,w,c
 36129  002658  58E6               	subwfb	postinc1,w,c
 36130  00265A  50DE               	movf	postinc2,w,c
 36131  00265C  58E6               	subwfb	postinc1,w,c
 36132  00265E  A0D8               	btfss	status,0,c
 36133  002660  D03B               	goto	i1u1564_29
 36134                           
 36135                           ;os_alarms.c: 129: {
 36136                           ;os_alarms.c: 131: OsAlrm_ClearOsAlarm(AlarmIndex);
 36137  002662  5021               	movf	OsAlrm_ProcessOsAlarms@AlarmIndex,w,c
 36138  002664  ECD9  F02B         	call	_OsAlrm_ClearOsAlarm
 36139                           
 36140                           ;os_alarms.c: 133: if (OsAlarms[AlarmIndex].AlrmCbk != (0))
 36141  002668  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 36142  00266C  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 36143  002670  0E00               	movlw	0
 36144  002672  6E1C               	movwf	i1___wmul@multiplicand+1,c
 36145  002674  0E0B               	movlw	11
 36146  002676  6E1B               	movwf	i1___wmul@multiplicand,c
 36147  002678  EC08  F032         	call	i1___wmul	;wreg free
 36148  00267C  0E09               	movlw	9
 36149  00267E  2619               	addwf	?i1___wmul,f,c
 36150  002680  0E00               	movlw	0
 36151  002682  221A               	addwfc	?i1___wmul+1,f,c
 36152  002684  0E00               	movlw	low _OsAlarms
 36153  002686  2419               	addwf	?i1___wmul,w,c
 36154  002688  6ED9               	movwf	fsr2l,c
 36155  00268A  0E06               	movlw	high _OsAlarms
 36156  00268C  201A               	addwfc	?i1___wmul+1,w,c
 36157  00268E  6EDA               	movwf	fsr2h,c
 36158  002690  50DE               	movf	postinc2,w,c
 36159  002692  10DE               	iorwf	postinc2,w,c
 36160  002694  B4D8               	btfsc	status,2,c
 36161  002696  D020               	goto	i1u1564_29
 36162                           
 36163                           ;os_alarms.c: 134: {
 36164                           ;os_alarms.c: 136: OsAlarms[AlarmIndex].AlrmCbk();
 36165  002698  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 36166  00269C  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 36167  0026A0  0E00               	movlw	0
 36168  0026A2  6E1C               	movwf	i1___wmul@multiplicand+1,c
 36169  0026A4  0E0B               	movlw	11
 36170  0026A6  6E1B               	movwf	i1___wmul@multiplicand,c
 36171  0026A8  EC08  F032         	call	i1___wmul	;wreg free
 36172  0026AC  0E09               	movlw	9
 36173  0026AE  2619               	addwf	?i1___wmul,f,c
 36174  0026B0  0E00               	movlw	0
 36175  0026B2  221A               	addwfc	?i1___wmul+1,f,c
 36176  0026B4  0E00               	movlw	low _OsAlarms
 36177  0026B6  2419               	addwf	?i1___wmul,w,c
 36178  0026B8  6ED9               	movwf	fsr2l,c
 36179  0026BA  0E06               	movlw	high _OsAlarms
 36180  0026BC  201A               	addwfc	?i1___wmul+1,w,c
 36181  0026BE  6EDA               	movwf	fsr2h,c
 36182  0026C0  D801               	call	i1u1564_28
 36183  0026C2  D00A               	goto	i1u1564_29
 36184  0026C4                     i1u1564_28:
 36185  0026C4  0005               	push	
 36186  0026C6  6EFA               	movwf	pclath,c
 36187  0026C8  50DE               	movf	postinc2,w,c
 36188  0026CA  6EFD               	movwf	tosl,c
 36189  0026CC  50DE               	movf	postinc2,w,c
 36190  0026CE  6EFE               	movwf	tosh,c
 36191  0026D0  50F8               	movf	tblptru,w,c
 36192  0026D2  6EFF               	movwf	tosu,c
 36193  0026D4  50FA               	movf	pclath,w,c
 36194  0026D6  0012               	return		;indir
 36195  0026D8                     i1u1564_29:
 36196  0026D8  4A21               	infsnz	OsAlrm_ProcessOsAlarms@AlarmIndex,f,c
 36197  0026DA  2A22               	incf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,f,c
 36198  0026DC  5022               	movf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,w,c
 36199  0026DE  E101               	bnz	i1l747
 36200  0026E0  D75C               	goto	L77
 36201  0026E2                     i1l747:
 36202  0026E2  0012               	return		;funcret
 36203  0026E4                     __end_of_OsAlrm_ProcessOsAlarms:
 36204                           	opt stack 0
 36205                           tosu	equ	0xFFF
 36206                           tosh	equ	0xFFE
 36207                           tosl	equ	0xFFD
 36208                           pclatu	equ	0xFFB
 36209                           pclath	equ	0xFFA
 36210                           tblptru	equ	0xFF8
 36211                           tblptrh	equ	0xFF7
 36212                           tblptrl	equ	0xFF6
 36213                           tablat	equ	0xFF5
 36214                           prodh	equ	0xFF4
 36215                           prodl	equ	0xFF3
 36216                           intcon	equ	0xFF2
 36217                           intcon2	equ	0xFF1
 36218                           intcon3	equ	0xFF0
 36219                           indf0	equ	0xFEF
 36220                           postinc0	equ	0xFEE
 36221                           plusw0	equ	0xFEB
 36222                           fsr0h	equ	0xFEA
 36223                           fsr0l	equ	0xFE9
 36224                           wreg	equ	0xFE8
 36225                           indf1	equ	0xFE7
 36226                           postinc1	equ	0xFE6
 36227                           postdec1	equ	0xFE5
 36228                           plusw1	equ	0xFE3
 36229                           fsr1h	equ	0xFE2
 36230                           fsr1l	equ	0xFE1
 36231                           bsr	equ	0xFE0
 36232                           indf2	equ	0xFDF
 36233                           postinc2	equ	0xFDE
 36234                           postdec2	equ	0xFDD
 36235                           plusw2	equ	0xFDB
 36236                           fsr2h	equ	0xFDA
 36237                           fsr2l	equ	0xFD9
 36238                           status	equ	0xFD8
 36239                           
 36240 ;; *************** function i1___wmul *****************
 36241 ;; Defined at:
 36242 ;;		line 15 in file "/opt/microchip/xc8/v1.45/sources/common/Umul16.c"
 36243 ;; Parameters:    Size  Location     Type
 36244 ;;  multiplier      2   24[COMRAM] unsigned int 
 36245 ;;  multiplicand    2   26[COMRAM] unsigned int 
 36246 ;; Auto vars:     Size  Location     Type
 36247 ;;  __wmul          2   28[COMRAM] unsigned int 
 36248 ;; Return value:  Size  Location     Type
 36249 ;;                  2   24[COMRAM] unsigned int 
 36250 ;; Registers used:
 36251 ;;		wreg, status,2, status,0, prodl, prodh
 36252 ;; Tracked objects:
 36253 ;;		On entry : 0/0
 36254 ;;		On exit  : 0/0
 36255 ;;		Unchanged: 0/0
 36256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36257 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36258 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36260 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36261 ;;Total ram usage:        6 bytes
 36262 ;; Hardware stack levels used:    1
 36263 ;; Hardware stack levels required when called:    4
 36264 ;; This function calls:
 36265 ;;		Nothing
 36266 ;; This function is called by:
 36267 ;;		_OsAlrm_ProcessOsAlarms
 36268 ;; This function uses a non-reentrant model
 36269 ;;
 36270                           
 36271                           	psect	text176
 36272  006410                     __ptext176:
 36273                           	opt stack 0
 36274  006410                     i1___wmul:
 36275                           	opt stack 10
 36276                           
 36277                           ;incstack = 0
 36278  006410  5019               	movf	i1___wmul@multiplier,w,c
 36279  006412  021B               	mulwf	i1___wmul@multiplicand,c
 36280  006414  CFF3 F01D          	movff	prodl,i1___wmul@product
 36281  006418  CFF4 F01E          	movff	prodh,i1___wmul@product+1
 36282  00641C  5019               	movf	i1___wmul@multiplier,w,c
 36283  00641E  021C               	mulwf	i1___wmul@multiplicand+1,c
 36284  006420  50F3               	movf	prodl,w,c
 36285  006422  261E               	addwf	i1___wmul@product+1,f,c
 36286  006424  501A               	movf	i1___wmul@multiplier+1,w,c
 36287  006426  021B               	mulwf	i1___wmul@multiplicand,c
 36288  006428  50F3               	movf	prodl,w,c
 36289  00642A  261E               	addwf	i1___wmul@product+1,f,c
 36290  00642C  C01D  F019         	movff	i1___wmul@product,?i1___wmul
 36291  006430  C01E  F01A         	movff	i1___wmul@product+1,?i1___wmul+1
 36292  006434  0012               	return	
 36293  006436                     __end_ofi1___wmul:
 36294                           	opt stack 0
 36295                           tosu	equ	0xFFF
 36296                           tosh	equ	0xFFE
 36297                           tosl	equ	0xFFD
 36298                           pclatu	equ	0xFFB
 36299                           pclath	equ	0xFFA
 36300                           tblptru	equ	0xFF8
 36301                           tblptrh	equ	0xFF7
 36302                           tblptrl	equ	0xFF6
 36303                           tablat	equ	0xFF5
 36304                           prodh	equ	0xFF4
 36305                           prodl	equ	0xFF3
 36306                           intcon	equ	0xFF2
 36307                           intcon2	equ	0xFF1
 36308                           intcon3	equ	0xFF0
 36309                           indf0	equ	0xFEF
 36310                           postinc0	equ	0xFEE
 36311                           plusw0	equ	0xFEB
 36312                           fsr0h	equ	0xFEA
 36313                           fsr0l	equ	0xFE9
 36314                           wreg	equ	0xFE8
 36315                           indf1	equ	0xFE7
 36316                           postinc1	equ	0xFE6
 36317                           postdec1	equ	0xFE5
 36318                           plusw1	equ	0xFE3
 36319                           fsr1h	equ	0xFE2
 36320                           fsr1l	equ	0xFE1
 36321                           bsr	equ	0xFE0
 36322                           indf2	equ	0xFDF
 36323                           postinc2	equ	0xFDE
 36324                           postdec2	equ	0xFDD
 36325                           plusw2	equ	0xFDB
 36326                           fsr2h	equ	0xFDA
 36327                           fsr2l	equ	0xFD9
 36328                           status	equ	0xFD8
 36329                           
 36330 ;; *************** function _OsAlrm_ClearOsAlarm *****************
 36331 ;; Defined at:
 36332 ;;		line 97 in file "../../MercuryFwk/Source/c/02_Osl/os_alarms.c"
 36333 ;; Parameters:    Size  Location     Type
 36334 ;;  OsAlarmId       1    wreg     unsigned char 
 36335 ;; Auto vars:     Size  Location     Type
 36336 ;;  OsAlarmId       1   24[COMRAM] unsigned char 
 36337 ;; Return value:  Size  Location     Type
 36338 ;;                  1    wreg      void 
 36339 ;; Registers used:
 36340 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 36341 ;; Tracked objects:
 36342 ;;		On entry : 0/0
 36343 ;;		On exit  : 0/0
 36344 ;;		Unchanged: 0/0
 36345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36346 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36347 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36349 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36350 ;;Total ram usage:        1 bytes
 36351 ;; Hardware stack levels used:    1
 36352 ;; Hardware stack levels required when called:    4
 36353 ;; This function calls:
 36354 ;;		Nothing
 36355 ;; This function is called by:
 36356 ;;		_OsAlrm_ProcessOsAlarms
 36357 ;; This function uses a non-reentrant model
 36358 ;;
 36359                           
 36360                           	psect	text177
 36361  0057B2                     __ptext177:
 36362                           	opt stack 0
 36363  0057B2                     _OsAlrm_ClearOsAlarm:
 36364                           	opt stack 10
 36365                           
 36366                           ;incstack = 0
 36367                           ;OsAlrm_ClearOsAlarm@OsAlarmId stored from wreg
 36368  0057B2  6E19               	movwf	OsAlrm_ClearOsAlarm@OsAlarmId,c
 36369                           
 36370                           ;os_alarms.c: 100: OsAlarms[OsAlarmId].Enabled = 0u;
 36371  0057B4  5019               	movf	OsAlrm_ClearOsAlarm@OsAlarmId,w,c
 36372  0057B6  0D0B               	mullw	11
 36373  0057B8  0E00               	movlw	low _OsAlarms
 36374  0057BA  24F3               	addwf	prodl,w,c
 36375  0057BC  6ED9               	movwf	fsr2l,c
 36376  0057BE  0E06               	movlw	high _OsAlarms
 36377  0057C0  20F4               	addwfc	prodh,w,c
 36378  0057C2  6EDA               	movwf	fsr2h,c
 36379  0057C4  0E00               	movlw	0
 36380  0057C6  6EDF               	movwf	indf2,c
 36381                           
 36382                           ;os_alarms.c: 102: OsAlarms[OsAlarmId].Counter = 0;
 36383  0057C8  5019               	movf	OsAlrm_ClearOsAlarm@OsAlarmId,w,c
 36384  0057CA  0D0B               	mullw	11
 36385  0057CC  0E01               	movlw	1
 36386  0057CE  26F3               	addwf	prodl,f,c
 36387  0057D0  0E00               	movlw	0
 36388  0057D2  22F4               	addwfc	prodh,f,c
 36389  0057D4  0E00               	movlw	low _OsAlarms
 36390  0057D6  24F3               	addwf	prodl,w,c
 36391  0057D8  6ED9               	movwf	fsr2l,c
 36392  0057DA  0E06               	movlw	high _OsAlarms
 36393  0057DC  20F4               	addwfc	prodh,w,c
 36394  0057DE  6EDA               	movwf	fsr2h,c
 36395  0057E0  6ADE               	clrf	postinc2,c
 36396  0057E2  6ADE               	clrf	postinc2,c
 36397  0057E4  6ADE               	clrf	postinc2,c
 36398  0057E6  6ADD               	clrf	postdec2,c
 36399                           
 36400                           ;os_alarms.c: 104: OsAlarms[OsAlarmId].AlarmTime = 0;
 36401  0057E8  5019               	movf	OsAlrm_ClearOsAlarm@OsAlarmId,w,c
 36402  0057EA  0D0B               	mullw	11
 36403  0057EC  0E05               	movlw	5
 36404  0057EE  26F3               	addwf	prodl,f,c
 36405  0057F0  0E00               	movlw	0
 36406  0057F2  22F4               	addwfc	prodh,f,c
 36407  0057F4  0E00               	movlw	low _OsAlarms
 36408  0057F6  24F3               	addwf	prodl,w,c
 36409  0057F8  6ED9               	movwf	fsr2l,c
 36410  0057FA  0E06               	movlw	high _OsAlarms
 36411  0057FC  20F4               	addwfc	prodh,w,c
 36412  0057FE  6EDA               	movwf	fsr2h,c
 36413  005800  6ADE               	clrf	postinc2,c
 36414  005802  6ADE               	clrf	postinc2,c
 36415  005804  6ADE               	clrf	postinc2,c
 36416  005806  6ADD               	clrf	postdec2,c
 36417  005808  0012               	return		;funcret
 36418  00580A                     __end_of_OsAlrm_ClearOsAlarm:
 36419                           	opt stack 0
 36420                           tosu	equ	0xFFF
 36421                           tosh	equ	0xFFE
 36422                           tosl	equ	0xFFD
 36423                           pclatu	equ	0xFFB
 36424                           pclath	equ	0xFFA
 36425                           tblptru	equ	0xFF8
 36426                           tblptrh	equ	0xFF7
 36427                           tblptrl	equ	0xFF6
 36428                           tablat	equ	0xFF5
 36429                           prodh	equ	0xFF4
 36430                           prodl	equ	0xFF3
 36431                           intcon	equ	0xFF2
 36432                           intcon2	equ	0xFF1
 36433                           intcon3	equ	0xFF0
 36434                           indf0	equ	0xFEF
 36435                           postinc0	equ	0xFEE
 36436                           plusw0	equ	0xFEB
 36437                           fsr0h	equ	0xFEA
 36438                           fsr0l	equ	0xFE9
 36439                           wreg	equ	0xFE8
 36440                           indf1	equ	0xFE7
 36441                           postinc1	equ	0xFE6
 36442                           postdec1	equ	0xFE5
 36443                           plusw1	equ	0xFE3
 36444                           fsr1h	equ	0xFE2
 36445                           fsr1l	equ	0xFE1
 36446                           bsr	equ	0xFE0
 36447                           indf2	equ	0xFDF
 36448                           postinc2	equ	0xFDE
 36449                           postdec2	equ	0xFDD
 36450                           plusw2	equ	0xFDB
 36451                           fsr2h	equ	0xFDA
 36452                           fsr2l	equ	0xFD9
 36453                           status	equ	0xFD8
 36454                           
 36455 ;; *************** function _I2cDummyTx *****************
 36456 ;; Defined at:
 36457 ;;		line 193 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 36458 ;; Parameters:    Size  Location     Type
 36459 ;;		None
 36460 ;; Auto vars:     Size  Location     Type
 36461 ;;		None
 36462 ;; Return value:  Size  Location     Type
 36463 ;;                  1    wreg      void 
 36464 ;; Registers used:
 36465 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 36466 ;; Tracked objects:
 36467 ;;		On entry : 0/0
 36468 ;;		On exit  : 0/0
 36469 ;;		Unchanged: 0/0
 36470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36471 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36472 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36473 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36474 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36475 ;;Total ram usage:        0 bytes
 36476 ;; Hardware stack levels used:    1
 36477 ;; Hardware stack levels required when called:    6
 36478 ;; This function calls:
 36479 ;;		i1_I2cSlv_SendI2cMsg
 36480 ;; This function is called by:
 36481 ;;		_I2cSlv_MainTask
 36482 ;;		_OsAlrm_ProcessOsAlarms
 36483 ;; This function uses a non-reentrant model
 36484 ;;
 36485                           
 36486                           	psect	text178
 36487  00664A                     __ptext178:
 36488                           	opt stack 0
 36489  00664A                     _I2cDummyTx:
 36490                           	opt stack 8
 36491                           
 36492                           ;i2c_slv.c: 195: static UINT8 DummyBuffer = 0x00;
 36493                           ;i2c_slv.c: 198: I2cSlv_SendI2cMsg(&DummyBuffer,0x00,1);
 36494                           
 36495                           ;incstack = 0
 36496  00664A  0EFD               	movlw	low I2cDummyTx@DummyBuffer
 36497  00664C  6E1C               	movwf	i1I2cSlv_SendI2cMsg@TxBuffer,c
 36498  00664E  0E01               	movlw	high I2cDummyTx@DummyBuffer
 36499  006650  6E1D               	movwf	i1I2cSlv_SendI2cMsg@TxBuffer+1,c
 36500  006652  0E00               	movlw	0
 36501  006654  6E1E               	movwf	i1I2cSlv_SendI2cMsg@SlaveAddr,c
 36502  006656  0E01               	movlw	1
 36503  006658  6E1F               	movwf	i1I2cSlv_SendI2cMsg@DataLenght,c
 36504  00665A  EC74  F030         	call	i1_I2cSlv_SendI2cMsg	;wreg free
 36505                           
 36506                           ;i2c_slv.c: 200: I2cBusStatus = I2cBusReady;
 36507  00665E  0E01               	movlw	1
 36508  006660  0101               	movlb	1	; () banked
 36509  006662  6FE7               	movwf	_I2cBusStatus& (0+255),b
 36510                           
 36511                           ; BSR set to: 1
 36512  006664  0012               	return		;funcret
 36513  006666                     __end_of_I2cDummyTx:
 36514                           	opt stack 0
 36515                           tosu	equ	0xFFF
 36516                           tosh	equ	0xFFE
 36517                           tosl	equ	0xFFD
 36518                           pclatu	equ	0xFFB
 36519                           pclath	equ	0xFFA
 36520                           tblptru	equ	0xFF8
 36521                           tblptrh	equ	0xFF7
 36522                           tblptrl	equ	0xFF6
 36523                           tablat	equ	0xFF5
 36524                           prodh	equ	0xFF4
 36525                           prodl	equ	0xFF3
 36526                           intcon	equ	0xFF2
 36527                           intcon2	equ	0xFF1
 36528                           intcon3	equ	0xFF0
 36529                           indf0	equ	0xFEF
 36530                           postinc0	equ	0xFEE
 36531                           plusw0	equ	0xFEB
 36532                           fsr0h	equ	0xFEA
 36533                           fsr0l	equ	0xFE9
 36534                           wreg	equ	0xFE8
 36535                           indf1	equ	0xFE7
 36536                           postinc1	equ	0xFE6
 36537                           postdec1	equ	0xFE5
 36538                           plusw1	equ	0xFE3
 36539                           fsr1h	equ	0xFE2
 36540                           fsr1l	equ	0xFE1
 36541                           bsr	equ	0xFE0
 36542                           indf2	equ	0xFDF
 36543                           postinc2	equ	0xFDE
 36544                           postdec2	equ	0xFDD
 36545                           plusw2	equ	0xFDB
 36546                           fsr2h	equ	0xFDA
 36547                           fsr2l	equ	0xFD9
 36548                           status	equ	0xFD8
 36549                           
 36550 ;; *************** function i1_I2cSlv_SendI2cMsg *****************
 36551 ;; Defined at:
 36552 ;;		line 252 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 36553 ;; Parameters:    Size  Location     Type
 36554 ;;  TxBuffer        2   27[COMRAM] PTR unsigned char 
 36555 ;;		 -> triggerRelay@txBuffer(2), Terminal@TermTxBuffer(50), ReadAddress(1), EepromBuffer(15), 
 36556 ;;		 -> I2cDummyTx@DummyBuffer(1), 
 36557 ;;  SlaveAddr       1   29[COMRAM] unsigned char 
 36558 ;;  DataLenght      1   30[COMRAM] unsigned char 
 36559 ;; Auto vars:     Size  Location     Type
 36560 ;;  I2cSlv_SendI    1   31[COMRAM] unsigned char 
 36561 ;; Return value:  Size  Location     Type
 36562 ;;                  1    wreg      unsigned char 
 36563 ;; Registers used:
 36564 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 36565 ;; Tracked objects:
 36566 ;;		On entry : 0/0
 36567 ;;		On exit  : 0/0
 36568 ;;		Unchanged: 0/0
 36569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36570 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36571 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36572 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36573 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36574 ;;Total ram usage:        5 bytes
 36575 ;; Hardware stack levels used:    1
 36576 ;; Hardware stack levels required when called:    5
 36577 ;; This function calls:
 36578 ;;		i1_GenerateEvt
 36579 ;; This function is called by:
 36580 ;;		_I2cDummyTx
 36581 ;; This function uses a non-reentrant model
 36582 ;;
 36583                           
 36584                           	psect	text179
 36585  0060E8                     __ptext179:
 36586                           	opt stack 0
 36587  0060E8                     i1_I2cSlv_SendI2cMsg:
 36588                           	opt stack 8
 36589                           
 36590                           ;i2c_slv.c: 254: UINT8 TxSts = 0u;
 36591                           
 36592                           ; BSR set to: 1
 36593                           ;incstack = 0
 36594  0060E8  0E00               	movlw	0
 36595  0060EA  6E20               	movwf	i1I2cSlv_SendI2cMsg@TxSts,c
 36596                           
 36597                           ;i2c_slv.c: 256: if (I2cComSts != TxInProgress)
 36598  0060EC  0100               	movlb	0	; () banked
 36599  0060EE  05CD               	decf	_I2cComSts& (0+255),w,b
 36600  0060F0  B4D8               	btfsc	status,2,c
 36601  0060F2  D014               	goto	i1l1409
 36602                           
 36603                           ; BSR set to: 0
 36604                           ;i2c_slv.c: 257: {
 36605                           ;i2c_slv.c: 259: I2cTxPacket.SlaveAddress = SlaveAddr;
 36606  0060F4  C01E  F399         	movff	i1I2cSlv_SendI2cMsg@SlaveAddr,_I2cTxPacket
 36607                           
 36608                           ; BSR set to: 0
 36609                           ;i2c_slv.c: 260: I2cTxPacket.ReadWrite = ((UINT8)(0));
 36610  0060F8  0E00               	movlw	0
 36611  0060FA  0103               	movlb	3	; () banked
 36612  0060FC  6F9A               	movwf	(_I2cTxPacket+1)& (0+255),b
 36613                           
 36614                           ; BSR set to: 3
 36615                           ;i2c_slv.c: 261: I2cTxPacket.Lenght = DataLenght;
 36616  0060FE  C01F  F39D         	movff	i1I2cSlv_SendI2cMsg@DataLenght,_I2cTxPacket+4
 36617                           
 36618                           ; BSR set to: 3
 36619                           ;i2c_slv.c: 262: I2cTxPacket.Buffer = TxBuffer;
 36620  006102  C01C  F39B         	movff	i1I2cSlv_SendI2cMsg@TxBuffer,_I2cTxPacket+2
 36621  006106  C01D  F39C         	movff	i1I2cSlv_SendI2cMsg@TxBuffer+1,_I2cTxPacket+3
 36622                           
 36623                           ; BSR set to: 3
 36624                           ;i2c_slv.c: 265: GenerateEvt(&I2cWriteDataEvt);
 36625  00610A  0ED7               	movlw	low _I2cWriteDataEvt
 36626  00610C  6E19               	movwf	i1GenerateEvt@Event,c
 36627  00610E  0E00               	movlw	high _I2cWriteDataEvt
 36628  006110  6E1A               	movwf	i1GenerateEvt@Event+1,c
 36629  006112  ECA1  F033         	call	i1_GenerateEvt	;wreg free
 36630                           
 36631                           ;i2c_slv.c: 267: TxSts = 1u;
 36632  006116  0E01               	movlw	1
 36633  006118  6E20               	movwf	i1I2cSlv_SendI2cMsg@TxSts,c
 36634                           
 36635                           ;i2c_slv.c: 268: }
 36636  00611A  0012               	return	
 36637  00611C                     i1l1409:
 36638                           
 36639                           ;i2c_slv.c: 269: else
 36640                           ;i2c_slv.c: 270: {
 36641                           ;i2c_slv.c: 272: TxSts = 0u;
 36642  00611C  0E00               	movlw	0
 36643  00611E  6E20               	movwf	i1I2cSlv_SendI2cMsg@TxSts,c
 36644  006120  0012               	return	
 36645  006122                     __end_ofi1_I2cSlv_SendI2cMsg:
 36646                           	opt stack 0
 36647                           tosu	equ	0xFFF
 36648                           tosh	equ	0xFFE
 36649                           tosl	equ	0xFFD
 36650                           pclatu	equ	0xFFB
 36651                           pclath	equ	0xFFA
 36652                           tblptru	equ	0xFF8
 36653                           tblptrh	equ	0xFF7
 36654                           tblptrl	equ	0xFF6
 36655                           tablat	equ	0xFF5
 36656                           prodh	equ	0xFF4
 36657                           prodl	equ	0xFF3
 36658                           intcon	equ	0xFF2
 36659                           intcon2	equ	0xFF1
 36660                           intcon3	equ	0xFF0
 36661                           indf0	equ	0xFEF
 36662                           postinc0	equ	0xFEE
 36663                           plusw0	equ	0xFEB
 36664                           fsr0h	equ	0xFEA
 36665                           fsr0l	equ	0xFE9
 36666                           wreg	equ	0xFE8
 36667                           indf1	equ	0xFE7
 36668                           postinc1	equ	0xFE6
 36669                           postdec1	equ	0xFE5
 36670                           plusw1	equ	0xFE3
 36671                           fsr1h	equ	0xFE2
 36672                           fsr1l	equ	0xFE1
 36673                           bsr	equ	0xFE0
 36674                           indf2	equ	0xFDF
 36675                           postinc2	equ	0xFDE
 36676                           postdec2	equ	0xFDD
 36677                           plusw2	equ	0xFDB
 36678                           fsr2h	equ	0xFDA
 36679                           fsr2l	equ	0xFD9
 36680                           status	equ	0xFD8
 36681                           
 36682 ;; *************** function i1_GenerateEvt *****************
 36683 ;; Defined at:
 36684 ;;		line 75 in file "../../MercuryFwk/Source/c/02_Osl/os_ser.c"
 36685 ;; Parameters:    Size  Location     Type
 36686 ;;  Event           2   24[COMRAM] PTR struct EventStructur
 36687 ;;		 -> AlarmEvent(1), I2cRxPacket(6), I2cReadDataEvt(1), I2cWriteDataEvt(1), 
 36688 ;;		 -> GetMethod(1), InitNetwork(1), MdmStsReady(1), SmsTxtReady(1), 
 36689 ;;		 -> GetSmsText(1), SmsEvent(1), ClipEvent(1), RingEvent(1), 
 36690 ;;		 -> SendSmsEvent(1), NewStringMdmTerminal(1), NewMdmEvtParserRequest(1), NewStringReceived(1), 
 36691 ;;		 -> MdmOnOffPulseRequest(1), CallClosedEvent(1), IncomingCallEvent(1), NewSmsEvent(1), 
 36692 ;; Auto vars:     Size  Location     Type
 36693 ;;  GenerateEvt     1   26[COMRAM] enum E7727
 36694 ;; Return value:  Size  Location     Type
 36695 ;;                  1    wreg      enum E7699
 36696 ;; Registers used:
 36697 ;;		wreg, fsr2l, fsr2h, status,2
 36698 ;; Tracked objects:
 36699 ;;		On entry : 0/0
 36700 ;;		On exit  : 0/0
 36701 ;;		Unchanged: 0/0
 36702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36703 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36704 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36705 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36706 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36707 ;;Total ram usage:        3 bytes
 36708 ;; Hardware stack levels used:    1
 36709 ;; Hardware stack levels required when called:    4
 36710 ;; This function calls:
 36711 ;;		Nothing
 36712 ;; This function is called by:
 36713 ;;		i1_I2cSlv_SendI2cMsg
 36714 ;; This function uses a non-reentrant model
 36715 ;;
 36716                           
 36717                           	psect	text180
 36718  006742                     __ptext180:
 36719                           	opt stack 0
 36720  006742                     i1_GenerateEvt:
 36721                           	opt stack 8
 36722                           
 36723                           ;os_ser.c: 78: EventStatusType EventStatus = EventIdle;
 36724                           
 36725                           ;incstack = 0
 36726  006742  0E00               	movlw	0
 36727  006744  6E1B               	movwf	i1GenerateEvt@EventStatus,c
 36728                           
 36729                           ;os_ser.c: 81: Event->EventStatus = EventSent;
 36730  006746  C019  FFD9         	movff	i1GenerateEvt@Event,fsr2l
 36731  00674A  C01A  FFDA         	movff	i1GenerateEvt@Event+1,fsr2h
 36732  00674E  0E02               	movlw	2
 36733  006750  6EDF               	movwf	indf2,c
 36734                           
 36735                           ;os_ser.c: 83: EventStatus = EventSent;
 36736  006752  0E02               	movlw	2
 36737  006754  6E1B               	movwf	i1GenerateEvt@EventStatus,c
 36738  006756  0012               	return	
 36739  006758                     __end_ofi1_GenerateEvt:
 36740                           	opt stack 0
 36741                           tosu	equ	0xFFF
 36742                           tosh	equ	0xFFE
 36743                           tosl	equ	0xFFD
 36744                           pclatu	equ	0xFFB
 36745                           pclath	equ	0xFFA
 36746                           tblptru	equ	0xFF8
 36747                           tblptrh	equ	0xFF7
 36748                           tblptrl	equ	0xFF6
 36749                           tablat	equ	0xFF5
 36750                           prodh	equ	0xFF4
 36751                           prodl	equ	0xFF3
 36752                           intcon	equ	0xFF2
 36753                           intcon2	equ	0xFF1
 36754                           intcon3	equ	0xFF0
 36755                           indf0	equ	0xFEF
 36756                           postinc0	equ	0xFEE
 36757                           plusw0	equ	0xFEB
 36758                           fsr0h	equ	0xFEA
 36759                           fsr0l	equ	0xFE9
 36760                           wreg	equ	0xFE8
 36761                           indf1	equ	0xFE7
 36762                           postinc1	equ	0xFE6
 36763                           postdec1	equ	0xFE5
 36764                           plusw1	equ	0xFE3
 36765                           fsr1h	equ	0xFE2
 36766                           fsr1l	equ	0xFE1
 36767                           bsr	equ	0xFE0
 36768                           indf2	equ	0xFDF
 36769                           postinc2	equ	0xFDE
 36770                           postdec2	equ	0xFDD
 36771                           plusw2	equ	0xFDB
 36772                           fsr2h	equ	0xFDA
 36773                           fsr2l	equ	0xFD9
 36774                           status	equ	0xFD8
 36775                           
 36776 ;; *************** function _HighPriorityIsr *****************
 36777 ;; Defined at:
 36778 ;;		line 153 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/irq.c"
 36779 ;; Parameters:    Size  Location     Type
 36780 ;;		None
 36781 ;; Auto vars:     Size  Location     Type
 36782 ;;		None
 36783 ;; Return value:  Size  Location     Type
 36784 ;;                  1    wreg      void 
 36785 ;; Registers used:
 36786 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 36787 ;; Tracked objects:
 36788 ;;		On entry : 0/0
 36789 ;;		On exit  : 0/0
 36790 ;;		Unchanged: 0/0
 36791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36792 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36793 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36794 ;;      Temps:         18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36795 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36796 ;;Total ram usage:       18 bytes
 36797 ;; Hardware stack levels used:    1
 36798 ;; Hardware stack levels required when called:    3
 36799 ;; This function calls:
 36800 ;;		_Mcu_Int0Isr
 36801 ;;		_Mcu_Int1Isr
 36802 ;;		_Rtcc_RtcIsr
 36803 ;;		_Uart_Uart1RxIsr
 36804 ;; This function is called by:
 36805 ;;		Interrupt level 2
 36806 ;; This function uses a non-reentrant model
 36807 ;;
 36808                           
 36809                           	psect	intcode
 36810  000008                     __pintcode:
 36811                           	opt stack 0
 36812  000008                     _HighPriorityIsr:
 36813                           	opt stack 8
 36814                           
 36815                           ;incstack = 0
 36816  000008  8242               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 36817  00000A  EF5B  F022         	goto	int_func
 36818                           tosu	equ	0xFFF
 36819                           tosh	equ	0xFFE
 36820                           tosl	equ	0xFFD
 36821                           pclatu	equ	0xFFB
 36822                           pclath	equ	0xFFA
 36823                           tblptru	equ	0xFF8
 36824                           tblptrh	equ	0xFF7
 36825                           tblptrl	equ	0xFF6
 36826                           tablat	equ	0xFF5
 36827                           prodh	equ	0xFF4
 36828                           prodl	equ	0xFF3
 36829                           intcon	equ	0xFF2
 36830                           intcon2	equ	0xFF1
 36831                           intcon3	equ	0xFF0
 36832                           indf0	equ	0xFEF
 36833                           postinc0	equ	0xFEE
 36834                           plusw0	equ	0xFEB
 36835                           fsr0h	equ	0xFEA
 36836                           fsr0l	equ	0xFE9
 36837                           wreg	equ	0xFE8
 36838                           indf1	equ	0xFE7
 36839                           postinc1	equ	0xFE6
 36840                           postdec1	equ	0xFE5
 36841                           plusw1	equ	0xFE3
 36842                           fsr1h	equ	0xFE2
 36843                           fsr1l	equ	0xFE1
 36844                           bsr	equ	0xFE0
 36845                           indf2	equ	0xFDF
 36846                           postinc2	equ	0xFDE
 36847                           postdec2	equ	0xFDD
 36848                           plusw2	equ	0xFDB
 36849                           fsr2h	equ	0xFDA
 36850                           fsr2l	equ	0xFD9
 36851                           status	equ	0xFD8
 36852                           
 36853                           	psect	intcode_body
 36854  0044B6                     __pintcode_body:
 36855                           	opt stack 8
 36856  0044B6                     int_func:
 36857                           	opt stack 8
 36858  0044B6  CFFA F007          	movff	pclath,??_HighPriorityIsr
 36859  0044BA  CFFB F008          	movff	pclatu,??_HighPriorityIsr+1
 36860  0044BE  CFE9 F009          	movff	fsr0l,??_HighPriorityIsr+2
 36861  0044C2  CFEA F00A          	movff	fsr0h,??_HighPriorityIsr+3
 36862  0044C6  CFE1 F00B          	movff	fsr1l,??_HighPriorityIsr+4
 36863  0044CA  CFE2 F00C          	movff	fsr1h,??_HighPriorityIsr+5
 36864  0044CE  CFD9 F00D          	movff	fsr2l,??_HighPriorityIsr+6
 36865  0044D2  CFDA F00E          	movff	fsr2h,??_HighPriorityIsr+7
 36866  0044D6  CFF3 F00F          	movff	prodl,??_HighPriorityIsr+8
 36867  0044DA  CFF4 F010          	movff	prodh,??_HighPriorityIsr+9
 36868  0044DE  CFF6 F011          	movff	tblptrl,??_HighPriorityIsr+10
 36869  0044E2  CFF7 F012          	movff	tblptrh,??_HighPriorityIsr+11
 36870  0044E6  CFF8 F013          	movff	tblptru,??_HighPriorityIsr+12
 36871  0044EA  CFF5 F014          	movff	tablat,??_HighPriorityIsr+13
 36872  0044EE  C042  F015         	movff	btemp,??_HighPriorityIsr+14
 36873  0044F2  C043  F016         	movff	btemp+1,??_HighPriorityIsr+15
 36874  0044F6  C044  F017         	movff	btemp+2,??_HighPriorityIsr+16
 36875  0044FA  C045  F018         	movff	btemp+3,??_HighPriorityIsr+17
 36876                           
 36877                           ;irq.c: 157: if (INTCONbits.INT0IF == ((UINT8)(1)))
 36878  0044FE  B2F2               	btfsc	intcon,1,c	;volatile
 36879                           
 36880                           ;irq.c: 158: {
 36881                           ;irq.c: 160: Mcu_Int0Isr();
 36882  004500  EC4D  F034         	call	_Mcu_Int0Isr	;wreg free
 36883                           
 36884                           ;irq.c: 161: }
 36885                           ;irq.c: 166: if (INTCON3bits.INT1IF == ((UINT8)(1)))
 36886  004504  B0F0               	btfsc	intcon3,0,c	;volatile
 36887                           
 36888                           ;irq.c: 167: {
 36889                           ;irq.c: 169: Mcu_Int1Isr();
 36890  004506  EC4B  F034         	call	_Mcu_Int1Isr	;wreg free
 36891                           
 36892                           ;irq.c: 170: }
 36893                           ;irq.c: 202: if (PIR3bits.RTCCIF == ((UINT8)(1)))
 36894  00450A  B0A4               	btfsc	4004,0,c	;volatile
 36895                           
 36896                           ;irq.c: 203: {
 36897                           ;irq.c: 205: Rtcc_RtcIsr();
 36898  00450C  EC49  F034         	call	_Rtcc_RtcIsr	;wreg free
 36899                           
 36900                           ;irq.c: 206: }
 36901                           ;irq.c: 211: if (PIR1bits.RC1IF == ((UINT8)(1)))
 36902  004510  BA9E               	btfsc	3998,5,c	;volatile
 36903                           
 36904                           ;irq.c: 212: {
 36905                           ;irq.c: 214: Uart_Uart1RxIsr();
 36906  004512  ECFC  F033         	call	_Uart_Uart1RxIsr	;wreg free
 36907  004516  C018  F045         	movff	??_HighPriorityIsr+17,btemp+3
 36908  00451A  C017  F044         	movff	??_HighPriorityIsr+16,btemp+2
 36909  00451E  C016  F043         	movff	??_HighPriorityIsr+15,btemp+1
 36910  004522  C015  F042         	movff	??_HighPriorityIsr+14,btemp
 36911  004526  C014  FFF5         	movff	??_HighPriorityIsr+13,tablat
 36912  00452A  C013  FFF8         	movff	??_HighPriorityIsr+12,tblptru
 36913  00452E  C012  FFF7         	movff	??_HighPriorityIsr+11,tblptrh
 36914  004532  C011  FFF6         	movff	??_HighPriorityIsr+10,tblptrl
 36915  004536  C010  FFF4         	movff	??_HighPriorityIsr+9,prodh
 36916  00453A  C00F  FFF3         	movff	??_HighPriorityIsr+8,prodl
 36917  00453E  C00E  FFDA         	movff	??_HighPriorityIsr+7,fsr2h
 36918  004542  C00D  FFD9         	movff	??_HighPriorityIsr+6,fsr2l
 36919  004546  C00C  FFE2         	movff	??_HighPriorityIsr+5,fsr1h
 36920  00454A  C00B  FFE1         	movff	??_HighPriorityIsr+4,fsr1l
 36921  00454E  C00A  FFEA         	movff	??_HighPriorityIsr+3,fsr0h
 36922  004552  C009  FFE9         	movff	??_HighPriorityIsr+2,fsr0l
 36923  004556  C008  FFFB         	movff	??_HighPriorityIsr+1,pclatu
 36924  00455A  C007  FFFA         	movff	??_HighPriorityIsr,pclath
 36925  00455E  9242               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 36926  004560  0011               	retfie		f
 36927  004562                     __end_of_HighPriorityIsr:
 36928                           	opt stack 0
 36929                           tosu	equ	0xFFF
 36930                           tosh	equ	0xFFE
 36931                           tosl	equ	0xFFD
 36932                           pclatu	equ	0xFFB
 36933                           pclath	equ	0xFFA
 36934                           tblptru	equ	0xFF8
 36935                           tblptrh	equ	0xFF7
 36936                           tblptrl	equ	0xFF6
 36937                           tablat	equ	0xFF5
 36938                           prodh	equ	0xFF4
 36939                           prodl	equ	0xFF3
 36940                           intcon	equ	0xFF2
 36941                           intcon2	equ	0xFF1
 36942                           intcon3	equ	0xFF0
 36943                           indf0	equ	0xFEF
 36944                           postinc0	equ	0xFEE
 36945                           plusw0	equ	0xFEB
 36946                           fsr0h	equ	0xFEA
 36947                           fsr0l	equ	0xFE9
 36948                           wreg	equ	0xFE8
 36949                           indf1	equ	0xFE7
 36950                           postinc1	equ	0xFE6
 36951                           postdec1	equ	0xFE5
 36952                           plusw1	equ	0xFE3
 36953                           fsr1h	equ	0xFE2
 36954                           fsr1l	equ	0xFE1
 36955                           bsr	equ	0xFE0
 36956                           indf2	equ	0xFDF
 36957                           postinc2	equ	0xFDE
 36958                           postdec2	equ	0xFDD
 36959                           plusw2	equ	0xFDB
 36960                           fsr2h	equ	0xFDA
 36961                           fsr2l	equ	0xFD9
 36962                           status	equ	0xFD8
 36963                           
 36964 ;; *************** function _Uart_Uart1RxIsr *****************
 36965 ;; Defined at:
 36966 ;;		line 584 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 36967 ;; Parameters:    Size  Location     Type
 36968 ;;		None
 36969 ;; Auto vars:     Size  Location     Type
 36970 ;;		None
 36971 ;; Return value:  Size  Location     Type
 36972 ;;                  1    wreg      void 
 36973 ;; Registers used:
 36974 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 36975 ;; Tracked objects:
 36976 ;;		On entry : 0/0
 36977 ;;		On exit  : 0/0
 36978 ;;		Unchanged: 0/0
 36979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36980 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36981 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36982 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36983 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36984 ;;Total ram usage:        0 bytes
 36985 ;; Hardware stack levels used:    1
 36986 ;; Hardware stack levels required when called:    2
 36987 ;; This function calls:
 36988 ;;		_Uart_MdmGsmGprsReadService
 36989 ;; This function is called by:
 36990 ;;		_HighPriorityIsr
 36991 ;; This function uses a non-reentrant model
 36992 ;;
 36993                           
 36994                           	psect	text182
 36995  0067F8                     __ptext182:
 36996                           	opt stack 0
 36997  0067F8                     _Uart_Uart1RxIsr:
 36998                           	opt stack 8
 36999                           
 37000                           ;uart_drv.c: 587: static UINT8 UartRxData = 0;
 37001                           ;uart_drv.c: 590: UartRxData = RCREG1;
 37002                           
 37003                           ;incstack = 0
 37004  0067F8  CFAF F02B          	movff	4015,Uart_Uart1RxIsr@UartRxData	;volatile
 37005                           
 37006                           ;uart_drv.c: 594: Uart_MdmGsmGprsReadService(1,UartRxData);
 37007  0067FC  C02B  F004         	movff	Uart_Uart1RxIsr@UartRxData,Uart_MdmGsmGprsReadService@UartData
 37008  006800  0E01               	movlw	1
 37009  006802  ECA0  F01E         	call	_Uart_MdmGsmGprsReadService
 37010  006806  0012               	return		;funcret
 37011  006808                     __end_of_Uart_Uart1RxIsr:
 37012                           	opt stack 0
 37013                           tosu	equ	0xFFF
 37014                           tosh	equ	0xFFE
 37015                           tosl	equ	0xFFD
 37016                           pclatu	equ	0xFFB
 37017                           pclath	equ	0xFFA
 37018                           tblptru	equ	0xFF8
 37019                           tblptrh	equ	0xFF7
 37020                           tblptrl	equ	0xFF6
 37021                           tablat	equ	0xFF5
 37022                           prodh	equ	0xFF4
 37023                           prodl	equ	0xFF3
 37024                           intcon	equ	0xFF2
 37025                           intcon2	equ	0xFF1
 37026                           intcon3	equ	0xFF0
 37027                           indf0	equ	0xFEF
 37028                           postinc0	equ	0xFEE
 37029                           plusw0	equ	0xFEB
 37030                           fsr0h	equ	0xFEA
 37031                           fsr0l	equ	0xFE9
 37032                           wreg	equ	0xFE8
 37033                           indf1	equ	0xFE7
 37034                           postinc1	equ	0xFE6
 37035                           postdec1	equ	0xFE5
 37036                           plusw1	equ	0xFE3
 37037                           fsr1h	equ	0xFE2
 37038                           fsr1l	equ	0xFE1
 37039                           bsr	equ	0xFE0
 37040                           indf2	equ	0xFDF
 37041                           postinc2	equ	0xFDE
 37042                           postdec2	equ	0xFDD
 37043                           plusw2	equ	0xFDB
 37044                           fsr2h	equ	0xFDA
 37045                           fsr2l	equ	0xFD9
 37046                           status	equ	0xFD8
 37047                           
 37048 ;; *************** function _Uart_MdmGsmGprsReadService *****************
 37049 ;; Defined at:
 37050 ;;		line 376 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 37051 ;; Parameters:    Size  Location     Type
 37052 ;;  Module          1    wreg     unsigned char 
 37053 ;;  UartData        1    3[COMRAM] unsigned char 
 37054 ;; Auto vars:     Size  Location     Type
 37055 ;;  Module          1    0[COMRAM] unsigned char 
 37056 ;;  ServiceCount    2    4[COMRAM] unsigned short 
 37057 ;; Return value:  Size  Location     Type
 37058 ;;                  1    wreg      void 
 37059 ;; Registers used:
 37060 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 37061 ;; Tracked objects:
 37062 ;;		On entry : 0/0
 37063 ;;		On exit  : 0/0
 37064 ;;		Unchanged: 0/0
 37065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37066 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37067 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37069 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37070 ;;Total ram usage:        3 bytes
 37071 ;; Hardware stack levels used:    1
 37072 ;; Hardware stack levels required when called:    1
 37073 ;; This function calls:
 37074 ;;		i2_GenerateEvt
 37075 ;; This function is called by:
 37076 ;;		_Uart_Uart1RxIsr
 37077 ;; This function uses a non-reentrant model
 37078 ;;
 37079                           
 37080                           	psect	text183
 37081  003D40                     __ptext183:
 37082                           	opt stack 0
 37083  003D40                     _Uart_MdmGsmGprsReadService:
 37084                           	opt stack 8
 37085                           
 37086                           ;uart_drv.c: 378: static UINT16 RxCounter = 0;
 37087                           ;uart_drv.c: 379: static RxStateType RxState = ReadData;
 37088                           ;uart_drv.c: 380: static UINT8 LocalRxBuffer[((UINT16)(400))];
 37089                           ;uart_drv.c: 381: UINT16 ServiceCounter = 0;
 37090                           
 37091                           ;incstack = 0
 37092  003D40  0E00               	movlw	0
 37093  003D42  6E06               	movwf	Uart_MdmGsmGprsReadService@ServiceCounter+1,c
 37094  003D44  0E00               	movlw	0
 37095  003D46  6E05               	movwf	Uart_MdmGsmGprsReadService@ServiceCounter,c
 37096                           
 37097                           ;uart_drv.c: 383: switch (RxState)
 37098  003D48  D058               	goto	i2l680
 37099  003D4A                     
 37100                           ;uart_drv.c: 387: if (UartData == '\r')
 37101  003D4A  0E0D               	movlw	13
 37102  003D4C  1804               	xorwf	Uart_MdmGsmGprsReadService@UartData,w,c
 37103  003D4E  A4D8               	btfss	status,2,c
 37104  003D50  D003               	goto	i2l682
 37105                           
 37106                           ;uart_drv.c: 388: {
 37107                           ;uart_drv.c: 390: RxState = CheckTermSeq1;
 37108  003D52  0E01               	movlw	1
 37109  003D54  6E2C               	movwf	Uart_MdmGsmGprsReadService@RxState,c
 37110                           
 37111                           ;uart_drv.c: 391: }
 37112  003D56  0012               	return	
 37113  003D58                     i2l682:
 37114                           
 37115                           ;uart_drv.c: 392: else
 37116                           ;uart_drv.c: 393: {
 37117                           ;uart_drv.c: 394: if (RxCounter < ((UINT16)(400)))
 37118  003D58  0E90               	movlw	144
 37119  003D5A  5C23               	subwf	Uart_MdmGsmGprsReadService@RxCounter,w,c
 37120  003D5C  0E01               	movlw	1
 37121  003D5E  5824               	subwfb	Uart_MdmGsmGprsReadService@RxCounter+1,w,c
 37122  003D60  B0D8               	btfsc	status,0,c
 37123  003D62  0012               	return	
 37124                           
 37125                           ;uart_drv.c: 395: {
 37126                           ;uart_drv.c: 397: LocalRxBuffer[RxCounter] = UartData;
 37127  003D64  0EC8               	movlw	low Uart_MdmGsmGprsReadService@LocalRxBuffer
 37128  003D66  2423               	addwf	Uart_MdmGsmGprsReadService@RxCounter,w,c
 37129  003D68  6ED9               	movwf	fsr2l,c
 37130  003D6A  0E0A               	movlw	high Uart_MdmGsmGprsReadService@LocalRxBuffer
 37131  003D6C  2024               	addwfc	Uart_MdmGsmGprsReadService@RxCounter+1,w,c
 37132  003D6E  6EDA               	movwf	fsr2h,c
 37133  003D70  C004  FFDF         	movff	Uart_MdmGsmGprsReadService@UartData,indf2
 37134                           
 37135                           ;uart_drv.c: 399: RxCounter++;
 37136  003D74  4A23               	infsnz	Uart_MdmGsmGprsReadService@RxCounter,f,c
 37137  003D76  2A24               	incf	Uart_MdmGsmGprsReadService@RxCounter+1,f,c
 37138                           
 37139                           ;uart_drv.c: 400: }
 37140                           ;uart_drv.c: 401: }
 37141                           ;uart_drv.c: 402: break;
 37142  003D78  0012               	return	
 37143  003D7A                     
 37144                           ;uart_drv.c: 406: if (UartData == '\n')
 37145  003D7A  0E0A               	movlw	10
 37146  003D7C  1804               	xorwf	Uart_MdmGsmGprsReadService@UartData,w,c
 37147  003D7E  A4D8               	btfss	status,2,c
 37148  003D80  D035               	goto	i2l688
 37149                           
 37150                           ;uart_drv.c: 407: {
 37151                           ;uart_drv.c: 409: if (RxCounter > 0)
 37152  003D82  5023               	movf	Uart_MdmGsmGprsReadService@RxCounter,w,c
 37153  003D84  1024               	iorwf	Uart_MdmGsmGprsReadService@RxCounter+1,w,c
 37154  003D86  B4D8               	btfsc	status,2,c
 37155  003D88  D031               	goto	i2l688
 37156                           
 37157                           ;uart_drv.c: 410: {
 37158                           ;uart_drv.c: 412: for (ServiceCounter = 0; ServiceCounter < RxCounter; ServiceCounter++)
 37159  003D8A  0E00               	movlw	0
 37160  003D8C  6E06               	movwf	Uart_MdmGsmGprsReadService@ServiceCounter+1,c
 37161  003D8E  0E00               	movlw	0
 37162  003D90  6E05               	movwf	Uart_MdmGsmGprsReadService@ServiceCounter,c
 37163  003D92  D010               	goto	i2l689
 37164  003D94                     
 37165                           ;uart_drv.c: 413: {
 37166                           ;uart_drv.c: 414: RxBuffer[ServiceCounter] = LocalRxBuffer[ServiceCounter];
 37167  003D94  0EC8               	movlw	low Uart_MdmGsmGprsReadService@LocalRxBuffer
 37168  003D96  2405               	addwf	Uart_MdmGsmGprsReadService@ServiceCounter,w,c
 37169  003D98  6ED9               	movwf	fsr2l,c
 37170  003D9A  0E0A               	movlw	high Uart_MdmGsmGprsReadService@LocalRxBuffer
 37171  003D9C  2006               	addwfc	Uart_MdmGsmGprsReadService@ServiceCounter+1,w,c
 37172  003D9E  6EDA               	movwf	fsr2h,c
 37173  003DA0  0E58               	movlw	low _RxBuffer
 37174  003DA2  2405               	addwf	Uart_MdmGsmGprsReadService@ServiceCounter,w,c
 37175  003DA4  6EE1               	movwf	fsr1l,c
 37176  003DA6  0E0C               	movlw	high _RxBuffer
 37177  003DA8  2006               	addwfc	Uart_MdmGsmGprsReadService@ServiceCounter+1,w,c
 37178  003DAA  6EE2               	movwf	fsr1h,c
 37179  003DAC  CFDF FFE7          	movff	indf2,indf1
 37180  003DB0  4A05               	infsnz	Uart_MdmGsmGprsReadService@ServiceCounter,f,c
 37181  003DB2  2A06               	incf	Uart_MdmGsmGprsReadService@ServiceCounter+1,f,c
 37182  003DB4                     i2l689:
 37183  003DB4  5023               	movf	Uart_MdmGsmGprsReadService@RxCounter,w,c
 37184  003DB6  5C05               	subwf	Uart_MdmGsmGprsReadService@ServiceCounter,w,c
 37185  003DB8  5024               	movf	Uart_MdmGsmGprsReadService@RxCounter+1,w,c
 37186  003DBA  5806               	subwfb	Uart_MdmGsmGprsReadService@ServiceCounter+1,w,c
 37187  003DBC  A0D8               	btfss	status,0,c
 37188  003DBE  D7EA               	goto	i2l690
 37189                           
 37190                           ;uart_drv.c: 415: }
 37191                           ;uart_drv.c: 417: RxLen = RxCounter;
 37192  003DC0  C023  F0C2         	movff	Uart_MdmGsmGprsReadService@RxCounter,_RxLen
 37193  003DC4  C024  F0C3         	movff	Uart_MdmGsmGprsReadService@RxCounter+1,_RxLen+1
 37194                           
 37195                           ;uart_drv.c: 419: GenerateEvt(&NewStringReceived);
 37196  003DC8  0E3C               	movlw	low _NewStringReceived
 37197  003DCA  6E01               	movwf	i2GenerateEvt@Event,c
 37198  003DCC  0E00               	movlw	high _NewStringReceived
 37199  003DCE  6E02               	movwf	i2GenerateEvt@Event+1,c
 37200  003DD0  ECAC  F033         	call	i2_GenerateEvt	;wreg free
 37201                           
 37202                           ;uart_drv.c: 420: GenerateEvt(&NewMdmEvtParserRequest);
 37203  003DD4  0E3B               	movlw	low _NewMdmEvtParserRequest
 37204  003DD6  6E01               	movwf	i2GenerateEvt@Event,c
 37205  003DD8  0E00               	movlw	high _NewMdmEvtParserRequest
 37206  003DDA  6E02               	movwf	i2GenerateEvt@Event+1,c
 37207  003DDC  ECAC  F033         	call	i2_GenerateEvt	;wreg free
 37208                           
 37209                           ;uart_drv.c: 421: GenerateEvt(&NewStringMdmTerminal);
 37210  003DE0  0E3A               	movlw	low _NewStringMdmTerminal
 37211  003DE2  6E01               	movwf	i2GenerateEvt@Event,c
 37212  003DE4  0E00               	movlw	high _NewStringMdmTerminal
 37213  003DE6  6E02               	movwf	i2GenerateEvt@Event+1,c
 37214  003DE8  ECAC  F033         	call	i2_GenerateEvt	;wreg free
 37215  003DEC                     i2l688:
 37216                           
 37217                           ;uart_drv.c: 427: }
 37218                           ;uart_drv.c: 429: RxState = ReadData;
 37219                           
 37220                           ;uart_drv.c: 424: else
 37221                           ;uart_drv.c: 425: {
 37222                           
 37223                           ;uart_drv.c: 422: }
 37224                           ;uart_drv.c: 423: }
 37225  003DEC  0E00               	movlw	0
 37226  003DEE  6E2C               	movwf	Uart_MdmGsmGprsReadService@RxState,c
 37227                           
 37228                           ;uart_drv.c: 431: RxCounter = 0;
 37229  003DF0  0E00               	movlw	0
 37230  003DF2  6E24               	movwf	Uart_MdmGsmGprsReadService@RxCounter+1,c
 37231  003DF4  0E00               	movlw	0
 37232  003DF6  6E23               	movwf	Uart_MdmGsmGprsReadService@RxCounter,c
 37233                           
 37234                           ;uart_drv.c: 436: }
 37235                           
 37236                           ;uart_drv.c: 435: break;
 37237                           
 37238                           ;uart_drv.c: 434: default:
 37239                           
 37240                           ;uart_drv.c: 432: break;
 37241  003DF8  0012               	return	
 37242  003DFA                     i2l680:
 37243  003DFA  502C               	movf	Uart_MdmGsmGprsReadService@RxState,w,c
 37244                           
 37245                           ; Switch size 1, requested type "space"
 37246                           ; Number of cases is 2, Range of values is 0 to 1
 37247                           ; switch strategies available:
 37248                           ; Name         Instructions Cycles
 37249                           ; simple_byte            7     4 (average)
 37250                           ;	Chosen strategy is simple_byte
 37251  003DFC  0A00               	xorlw	0	; case 0
 37252  003DFE  B4D8               	btfsc	status,2,c
 37253  003E00  D7A4               	goto	i2l681
 37254  003E02  0A01               	xorlw	1	; case 1
 37255  003E04  A4D8               	btfss	status,2,c
 37256  003E06  0012               	return	
 37257  003E08  D7B8               	goto	i2l686
 37258  003E0A                     __end_of_Uart_MdmGsmGprsReadService:
 37259                           	opt stack 0
 37260                           tosu	equ	0xFFF
 37261                           tosh	equ	0xFFE
 37262                           tosl	equ	0xFFD
 37263                           pclatu	equ	0xFFB
 37264                           pclath	equ	0xFFA
 37265                           tblptru	equ	0xFF8
 37266                           tblptrh	equ	0xFF7
 37267                           tblptrl	equ	0xFF6
 37268                           tablat	equ	0xFF5
 37269                           prodh	equ	0xFF4
 37270                           prodl	equ	0xFF3
 37271                           intcon	equ	0xFF2
 37272                           intcon2	equ	0xFF1
 37273                           intcon3	equ	0xFF0
 37274                           indf0	equ	0xFEF
 37275                           postinc0	equ	0xFEE
 37276                           plusw0	equ	0xFEB
 37277                           fsr0h	equ	0xFEA
 37278                           fsr0l	equ	0xFE9
 37279                           wreg	equ	0xFE8
 37280                           indf1	equ	0xFE7
 37281                           postinc1	equ	0xFE6
 37282                           postdec1	equ	0xFE5
 37283                           plusw1	equ	0xFE3
 37284                           fsr1h	equ	0xFE2
 37285                           fsr1l	equ	0xFE1
 37286                           bsr	equ	0xFE0
 37287                           indf2	equ	0xFDF
 37288                           postinc2	equ	0xFDE
 37289                           postdec2	equ	0xFDD
 37290                           plusw2	equ	0xFDB
 37291                           fsr2h	equ	0xFDA
 37292                           fsr2l	equ	0xFD9
 37293                           status	equ	0xFD8
 37294                           
 37295 ;; *************** function i2_GenerateEvt *****************
 37296 ;; Defined at:
 37297 ;;		line 75 in file "../../MercuryFwk/Source/c/02_Osl/os_ser.c"
 37298 ;; Parameters:    Size  Location     Type
 37299 ;;  Event           2    0[COMRAM] PTR struct EventStructur
 37300 ;;		 -> AlarmEvent(1), I2cRxPacket(6), I2cReadDataEvt(1), I2cWriteDataEvt(1), 
 37301 ;;		 -> GetMethod(1), InitNetwork(1), MdmStsReady(1), SmsTxtReady(1), 
 37302 ;;		 -> GetSmsText(1), SmsEvent(1), ClipEvent(1), RingEvent(1), 
 37303 ;;		 -> SendSmsEvent(1), NewStringMdmTerminal(1), NewMdmEvtParserRequest(1), NewStringReceived(1), 
 37304 ;;		 -> MdmOnOffPulseRequest(1), CallClosedEvent(1), IncomingCallEvent(1), NewSmsEvent(1), 
 37305 ;; Auto vars:     Size  Location     Type
 37306 ;;  GenerateEvt     1    2[COMRAM] enum E7727
 37307 ;; Return value:  Size  Location     Type
 37308 ;;                  1    wreg      enum E7699
 37309 ;; Registers used:
 37310 ;;		wreg, fsr2l, fsr2h, status,2
 37311 ;; Tracked objects:
 37312 ;;		On entry : 0/0
 37313 ;;		On exit  : 0/0
 37314 ;;		Unchanged: 0/0
 37315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37316 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37317 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37319 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37320 ;;Total ram usage:        3 bytes
 37321 ;; Hardware stack levels used:    1
 37322 ;; This function calls:
 37323 ;;		Nothing
 37324 ;; This function is called by:
 37325 ;;		_Uart_MdmGsmGprsReadService
 37326 ;; This function uses a non-reentrant model
 37327 ;;
 37328                           
 37329                           	psect	text184
 37330  006758                     __ptext184:
 37331                           	opt stack 0
 37332  006758                     i2_GenerateEvt:
 37333                           	opt stack 8
 37334                           
 37335                           ;os_ser.c: 78: EventStatusType EventStatus = EventIdle;
 37336                           
 37337                           ;incstack = 0
 37338  006758  0E00               	movlw	0
 37339  00675A  6E03               	movwf	i2GenerateEvt@EventStatus,c
 37340                           
 37341                           ;os_ser.c: 81: Event->EventStatus = EventSent;
 37342  00675C  C001  FFD9         	movff	i2GenerateEvt@Event,fsr2l
 37343  006760  C002  FFDA         	movff	i2GenerateEvt@Event+1,fsr2h
 37344  006764  0E02               	movlw	2
 37345  006766  6EDF               	movwf	indf2,c
 37346                           
 37347                           ;os_ser.c: 83: EventStatus = EventSent;
 37348  006768  0E02               	movlw	2
 37349  00676A  6E03               	movwf	i2GenerateEvt@EventStatus,c
 37350  00676C  0012               	return	
 37351  00676E                     __end_ofi2_GenerateEvt:
 37352                           	opt stack 0
 37353                           tosu	equ	0xFFF
 37354                           tosh	equ	0xFFE
 37355                           tosl	equ	0xFFD
 37356                           pclatu	equ	0xFFB
 37357                           pclath	equ	0xFFA
 37358                           tblptru	equ	0xFF8
 37359                           tblptrh	equ	0xFF7
 37360                           tblptrl	equ	0xFF6
 37361                           tablat	equ	0xFF5
 37362                           prodh	equ	0xFF4
 37363                           prodl	equ	0xFF3
 37364                           intcon	equ	0xFF2
 37365                           intcon2	equ	0xFF1
 37366                           intcon3	equ	0xFF0
 37367                           indf0	equ	0xFEF
 37368                           postinc0	equ	0xFEE
 37369                           plusw0	equ	0xFEB
 37370                           fsr0h	equ	0xFEA
 37371                           fsr0l	equ	0xFE9
 37372                           wreg	equ	0xFE8
 37373                           indf1	equ	0xFE7
 37374                           postinc1	equ	0xFE6
 37375                           postdec1	equ	0xFE5
 37376                           plusw1	equ	0xFE3
 37377                           fsr1h	equ	0xFE2
 37378                           fsr1l	equ	0xFE1
 37379                           bsr	equ	0xFE0
 37380                           indf2	equ	0xFDF
 37381                           postinc2	equ	0xFDE
 37382                           postdec2	equ	0xFDD
 37383                           plusw2	equ	0xFDB
 37384                           fsr2h	equ	0xFDA
 37385                           fsr2l	equ	0xFD9
 37386                           status	equ	0xFD8
 37387                           
 37388 ;; *************** function _Rtcc_RtcIsr *****************
 37389 ;; Defined at:
 37390 ;;		line 537 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 37391 ;; Parameters:    Size  Location     Type
 37392 ;;		None
 37393 ;; Auto vars:     Size  Location     Type
 37394 ;;		None
 37395 ;; Return value:  Size  Location     Type
 37396 ;;                  1    wreg      void 
 37397 ;; Registers used:
 37398 ;;		wreg, status,2, status,0
 37399 ;; Tracked objects:
 37400 ;;		On entry : 0/0
 37401 ;;		On exit  : 0/0
 37402 ;;		Unchanged: 0/0
 37403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37404 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37405 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37406 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37407 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37408 ;;Total ram usage:        0 bytes
 37409 ;; Hardware stack levels used:    1
 37410 ;; This function calls:
 37411 ;;		Nothing
 37412 ;; This function is called by:
 37413 ;;		_HighPriorityIsr
 37414 ;; This function uses a non-reentrant model
 37415 ;;
 37416                           
 37417                           	psect	text185
 37418  006892                     __ptext185:
 37419                           	opt stack 0
 37420  006892                     _Rtcc_RtcIsr:
 37421                           	opt stack 10
 37422                           
 37423                           ;rtcc_drv.c: 540: PIR3bits.RTCCIF = 0u;
 37424                           
 37425                           ;incstack = 0
 37426  006892  90A4               	bcf	4004,0,c	;volatile
 37427  006894  0012               	return	
 37428  006896                     __end_of_Rtcc_RtcIsr:
 37429                           	opt stack 0
 37430                           tosu	equ	0xFFF
 37431                           tosh	equ	0xFFE
 37432                           tosl	equ	0xFFD
 37433                           pclatu	equ	0xFFB
 37434                           pclath	equ	0xFFA
 37435                           tblptru	equ	0xFF8
 37436                           tblptrh	equ	0xFF7
 37437                           tblptrl	equ	0xFF6
 37438                           tablat	equ	0xFF5
 37439                           prodh	equ	0xFF4
 37440                           prodl	equ	0xFF3
 37441                           intcon	equ	0xFF2
 37442                           intcon2	equ	0xFF1
 37443                           intcon3	equ	0xFF0
 37444                           indf0	equ	0xFEF
 37445                           postinc0	equ	0xFEE
 37446                           plusw0	equ	0xFEB
 37447                           fsr0h	equ	0xFEA
 37448                           fsr0l	equ	0xFE9
 37449                           wreg	equ	0xFE8
 37450                           indf1	equ	0xFE7
 37451                           postinc1	equ	0xFE6
 37452                           postdec1	equ	0xFE5
 37453                           plusw1	equ	0xFE3
 37454                           fsr1h	equ	0xFE2
 37455                           fsr1l	equ	0xFE1
 37456                           bsr	equ	0xFE0
 37457                           indf2	equ	0xFDF
 37458                           postinc2	equ	0xFDE
 37459                           postdec2	equ	0xFDD
 37460                           plusw2	equ	0xFDB
 37461                           fsr2h	equ	0xFDA
 37462                           fsr2l	equ	0xFD9
 37463                           status	equ	0xFD8
 37464                           
 37465 ;; *************** function _Mcu_Int1Isr *****************
 37466 ;; Defined at:
 37467 ;;		line 161 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
 37468 ;; Parameters:    Size  Location     Type
 37469 ;;		None
 37470 ;; Auto vars:     Size  Location     Type
 37471 ;;		None
 37472 ;; Return value:  Size  Location     Type
 37473 ;;                  1    wreg      void 
 37474 ;; Registers used:
 37475 ;;		wreg, status,2, status,0
 37476 ;; Tracked objects:
 37477 ;;		On entry : 0/0
 37478 ;;		On exit  : 0/0
 37479 ;;		Unchanged: 0/0
 37480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37481 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37482 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37484 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37485 ;;Total ram usage:        0 bytes
 37486 ;; Hardware stack levels used:    1
 37487 ;; This function calls:
 37488 ;;		Nothing
 37489 ;; This function is called by:
 37490 ;;		_HighPriorityIsr
 37491 ;; This function uses a non-reentrant model
 37492 ;;
 37493                           
 37494                           	psect	text186
 37495  006896                     __ptext186:
 37496                           	opt stack 0
 37497  006896                     _Mcu_Int1Isr:
 37498                           	opt stack 10
 37499                           
 37500                           ;mcu_drv.c: 164: INTCON3bits.INT1IF = 0u;
 37501                           
 37502                           ;incstack = 0
 37503  006896  90F0               	bcf	intcon3,0,c	;volatile
 37504  006898  0012               	return	
 37505  00689A                     __end_of_Mcu_Int1Isr:
 37506                           	opt stack 0
 37507                           tosu	equ	0xFFF
 37508                           tosh	equ	0xFFE
 37509                           tosl	equ	0xFFD
 37510                           pclatu	equ	0xFFB
 37511                           pclath	equ	0xFFA
 37512                           tblptru	equ	0xFF8
 37513                           tblptrh	equ	0xFF7
 37514                           tblptrl	equ	0xFF6
 37515                           tablat	equ	0xFF5
 37516                           prodh	equ	0xFF4
 37517                           prodl	equ	0xFF3
 37518                           intcon	equ	0xFF2
 37519                           intcon2	equ	0xFF1
 37520                           intcon3	equ	0xFF0
 37521                           indf0	equ	0xFEF
 37522                           postinc0	equ	0xFEE
 37523                           plusw0	equ	0xFEB
 37524                           fsr0h	equ	0xFEA
 37525                           fsr0l	equ	0xFE9
 37526                           wreg	equ	0xFE8
 37527                           indf1	equ	0xFE7
 37528                           postinc1	equ	0xFE6
 37529                           postdec1	equ	0xFE5
 37530                           plusw1	equ	0xFE3
 37531                           fsr1h	equ	0xFE2
 37532                           fsr1l	equ	0xFE1
 37533                           bsr	equ	0xFE0
 37534                           indf2	equ	0xFDF
 37535                           postinc2	equ	0xFDE
 37536                           postdec2	equ	0xFDD
 37537                           plusw2	equ	0xFDB
 37538                           fsr2h	equ	0xFDA
 37539                           fsr2l	equ	0xFD9
 37540                           status	equ	0xFD8
 37541                           
 37542 ;; *************** function _Mcu_Int0Isr *****************
 37543 ;; Defined at:
 37544 ;;		line 126 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
 37545 ;; Parameters:    Size  Location     Type
 37546 ;;		None
 37547 ;; Auto vars:     Size  Location     Type
 37548 ;;		None
 37549 ;; Return value:  Size  Location     Type
 37550 ;;                  1    wreg      void 
 37551 ;; Registers used:
 37552 ;;		wreg, status,2, status,0
 37553 ;; Tracked objects:
 37554 ;;		On entry : 0/0
 37555 ;;		On exit  : 0/0
 37556 ;;		Unchanged: 0/0
 37557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37561 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37562 ;;Total ram usage:        0 bytes
 37563 ;; Hardware stack levels used:    1
 37564 ;; This function calls:
 37565 ;;		Nothing
 37566 ;; This function is called by:
 37567 ;;		_HighPriorityIsr
 37568 ;; This function uses a non-reentrant model
 37569 ;;
 37570                           
 37571                           	psect	text187
 37572  00689A                     __ptext187:
 37573                           	opt stack 0
 37574  00689A                     _Mcu_Int0Isr:
 37575                           	opt stack 10
 37576                           
 37577                           ;mcu_drv.c: 129: INTCONbits.INT0IF = 0u;
 37578                           
 37579                           ;incstack = 0
 37580  00689A  92F2               	bcf	intcon,1,c	;volatile
 37581  00689C  0012               	return	
 37582  00689E                     __end_of_Mcu_Int0Isr:
 37583                           	opt stack 0
 37584                           tosu	equ	0xFFF
 37585                           tosh	equ	0xFFE
 37586                           tosl	equ	0xFFD
 37587                           pclatu	equ	0xFFB
 37588                           pclath	equ	0xFFA
 37589                           tblptru	equ	0xFF8
 37590                           tblptrh	equ	0xFF7
 37591                           tblptrl	equ	0xFF6
 37592                           tablat	equ	0xFF5
 37593                           prodh	equ	0xFF4
 37594                           prodl	equ	0xFF3
 37595                           intcon	equ	0xFF2
 37596                           intcon2	equ	0xFF1
 37597                           intcon3	equ	0xFF0
 37598                           indf0	equ	0xFEF
 37599                           postinc0	equ	0xFEE
 37600                           plusw0	equ	0xFEB
 37601                           fsr0h	equ	0xFEA
 37602                           fsr0l	equ	0xFE9
 37603                           wreg	equ	0xFE8
 37604                           indf1	equ	0xFE7
 37605                           postinc1	equ	0xFE6
 37606                           postdec1	equ	0xFE5
 37607                           plusw1	equ	0xFE3
 37608                           fsr1h	equ	0xFE2
 37609                           fsr1l	equ	0xFE1
 37610                           bsr	equ	0xFE0
 37611                           indf2	equ	0xFDF
 37612                           postinc2	equ	0xFDE
 37613                           postdec2	equ	0xFDD
 37614                           plusw2	equ	0xFDB
 37615                           fsr2h	equ	0xFDA
 37616                           fsr2l	equ	0xFD9
 37617                           status	equ	0xFD8
 37618                           tosu	equ	0xFFF
 37619                           tosh	equ	0xFFE
 37620                           tosl	equ	0xFFD
 37621                           pclatu	equ	0xFFB
 37622                           pclath	equ	0xFFA
 37623                           tblptru	equ	0xFF8
 37624                           tblptrh	equ	0xFF7
 37625                           tblptrl	equ	0xFF6
 37626                           tablat	equ	0xFF5
 37627                           prodh	equ	0xFF4
 37628                           prodl	equ	0xFF3
 37629                           intcon	equ	0xFF2
 37630                           intcon2	equ	0xFF1
 37631                           intcon3	equ	0xFF0
 37632                           indf0	equ	0xFEF
 37633                           postinc0	equ	0xFEE
 37634                           plusw0	equ	0xFEB
 37635                           fsr0h	equ	0xFEA
 37636                           fsr0l	equ	0xFE9
 37637                           wreg	equ	0xFE8
 37638                           indf1	equ	0xFE7
 37639                           postinc1	equ	0xFE6
 37640                           postdec1	equ	0xFE5
 37641                           plusw1	equ	0xFE3
 37642                           fsr1h	equ	0xFE2
 37643                           fsr1l	equ	0xFE1
 37644                           bsr	equ	0xFE0
 37645                           indf2	equ	0xFDF
 37646                           postinc2	equ	0xFDE
 37647                           postdec2	equ	0xFDD
 37648                           plusw2	equ	0xFDB
 37649                           fsr2h	equ	0xFDA
 37650                           fsr2l	equ	0xFD9
 37651                           status	equ	0xFD8
 37652                           
 37653                           	psect	text188
 37654  000000                     __ptext188:
 37655                           	opt stack 0
 37656                           tosu	equ	0xFFF
 37657                           tosh	equ	0xFFE
 37658                           tosl	equ	0xFFD
 37659                           pclatu	equ	0xFFB
 37660                           pclath	equ	0xFFA
 37661                           tblptru	equ	0xFF8
 37662                           tblptrh	equ	0xFF7
 37663                           tblptrl	equ	0xFF6
 37664                           tablat	equ	0xFF5
 37665                           prodh	equ	0xFF4
 37666                           prodl	equ	0xFF3
 37667                           intcon	equ	0xFF2
 37668                           intcon2	equ	0xFF1
 37669                           intcon3	equ	0xFF0
 37670                           indf0	equ	0xFEF
 37671                           postinc0	equ	0xFEE
 37672                           plusw0	equ	0xFEB
 37673                           fsr0h	equ	0xFEA
 37674                           fsr0l	equ	0xFE9
 37675                           wreg	equ	0xFE8
 37676                           indf1	equ	0xFE7
 37677                           postinc1	equ	0xFE6
 37678                           postdec1	equ	0xFE5
 37679                           plusw1	equ	0xFE3
 37680                           fsr1h	equ	0xFE2
 37681                           fsr1l	equ	0xFE1
 37682                           bsr	equ	0xFE0
 37683                           indf2	equ	0xFDF
 37684                           postinc2	equ	0xFDE
 37685                           postdec2	equ	0xFDD
 37686                           plusw2	equ	0xFDB
 37687                           fsr2h	equ	0xFDA
 37688                           fsr2l	equ	0xFD9
 37689                           status	equ	0xFD8
 37690                           
 37691                           	psect	rparam
 37692  0000                     tosu	equ	0xFFF
 37693                           tosh	equ	0xFFE
 37694                           tosl	equ	0xFFD
 37695                           pclatu	equ	0xFFB
 37696                           pclath	equ	0xFFA
 37697                           tblptru	equ	0xFF8
 37698                           tblptrh	equ	0xFF7
 37699                           tblptrl	equ	0xFF6
 37700                           tablat	equ	0xFF5
 37701                           prodh	equ	0xFF4
 37702                           prodl	equ	0xFF3
 37703                           intcon	equ	0xFF2
 37704                           intcon2	equ	0xFF1
 37705                           intcon3	equ	0xFF0
 37706                           indf0	equ	0xFEF
 37707                           postinc0	equ	0xFEE
 37708                           plusw0	equ	0xFEB
 37709                           fsr0h	equ	0xFEA
 37710                           fsr0l	equ	0xFE9
 37711                           wreg	equ	0xFE8
 37712                           indf1	equ	0xFE7
 37713                           postinc1	equ	0xFE6
 37714                           postdec1	equ	0xFE5
 37715                           plusw1	equ	0xFE3
 37716                           fsr1h	equ	0xFE2
 37717                           fsr1l	equ	0xFE1
 37718                           bsr	equ	0xFE0
 37719                           indf2	equ	0xFDF
 37720                           postinc2	equ	0xFDE
 37721                           postdec2	equ	0xFDD
 37722                           plusw2	equ	0xFDB
 37723                           fsr2h	equ	0xFDA
 37724                           fsr2l	equ	0xFD9
 37725                           status	equ	0xFD8
 37726                           
 37727                           	psect	temp
 37728  000042                     btemp:
 37729                           	opt stack 0
 37730  000042                     	ds	1
 37731  0000                     int$flags	set	btemp
 37732  0000                     wtemp6	set	btemp+1
 37733                           tosu	equ	0xFFF
 37734                           tosh	equ	0xFFE
 37735                           tosl	equ	0xFFD
 37736                           pclatu	equ	0xFFB
 37737                           pclath	equ	0xFFA
 37738                           tblptru	equ	0xFF8
 37739                           tblptrh	equ	0xFF7
 37740                           tblptrl	equ	0xFF6
 37741                           tablat	equ	0xFF5
 37742                           prodh	equ	0xFF4
 37743                           prodl	equ	0xFF3
 37744                           intcon	equ	0xFF2
 37745                           intcon2	equ	0xFF1
 37746                           intcon3	equ	0xFF0
 37747                           indf0	equ	0xFEF
 37748                           postinc0	equ	0xFEE
 37749                           plusw0	equ	0xFEB
 37750                           fsr0h	equ	0xFEA
 37751                           fsr0l	equ	0xFE9
 37752                           wreg	equ	0xFE8
 37753                           indf1	equ	0xFE7
 37754                           postinc1	equ	0xFE6
 37755                           postdec1	equ	0xFE5
 37756                           plusw1	equ	0xFE3
 37757                           fsr1h	equ	0xFE2
 37758                           fsr1l	equ	0xFE1
 37759                           bsr	equ	0xFE0
 37760                           indf2	equ	0xFDF
 37761                           postinc2	equ	0xFDE
 37762                           postdec2	equ	0xFDD
 37763                           plusw2	equ	0xFDB
 37764                           fsr2h	equ	0xFDA
 37765                           fsr2l	equ	0xFD9
 37766                           status	equ	0xFD8


Data Sizes:
    Strings     408
    Constant    590
    Data        183
    BSS         2364
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     34      65
    BANK0           160     80     131
    BANK1           256    201     256
    BANK2           256    200     256
    BANK3           256      0     256
    BANK4           192      4     192
    BANK5           256      1     245
    BANK6           256      0     220
    BANK7           256      0     246
    BANK8           256      0     200
    BANK9           256      0     200
    BANK10          256    200     200
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          192      0       0

Pointer List with Targets:

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 48
		 -> USTATcopy(BANK0[1]), USBActiveConfiguration(BANK0[1]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    xtoi@s	PTR const unsigned char  size(2) Largest target is 4
		 -> Terminal@Addr(BANK3[4]), 

    strtol@endptr	PTR PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strtol@s	PTR const unsigned char  size(2) Largest target is 80
		 -> Terminal@Payload(BANK7[80]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 42
		 -> STR_23(CODE[20]), STR_21(CODE[42]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 200
		 -> Term_MainSm@Data(BANK4[50]), Terminal@UsbTxBuffer(BANK2[200]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 200
		 -> Term_MainSm@Data(BANK4[50]), Terminal@UsbTxBuffer(BANK2[200]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_26(CODE[3]), STR_25(CODE[2]), STR_24(CODE[2]), Term_MainSm@FwkBuildStr(BANK1[4]), 
		 -> Term_MainSm@FwkMinorStr(BANK1[4]), Term_MainSm@FwkMajorStr(BANK1[4]), 

    strcat@to	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    strcat@cp	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    memset@p1	PTR void  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), USBAlternateInterface(BANK2[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), USBAlternateInterface(BANK2[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memcpy@d1	PTR void  size(2) Largest target is 8
		 -> SetupPkt(BIGRAMh[8]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 8
		 -> SetupPkt(BIGRAMh[8]), 

    memcpy@s1	PTR const void  size(2) Largest target is 3775
		 -> RAM(DATA[3775]), CtrlTrfData(BIGRAMh[8]), SetupPkt(BIGRAMh[8]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 3775
		 -> RAM(DATA[3775]), CtrlTrfData(BIGRAMh[8]), SetupPkt(BIGRAMh[8]), 

    utoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> Term_MainSm@FwkBuildStr(BANK1[4]), Term_MainSm@FwkMinorStr(BANK1[4]), Term_MainSm@FwkMajorStr(BANK1[4]), Terminal@Payload(BANK7[80]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> Terminal@Payload(BANK7[80]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 80
		 -> Terminal@Payload(BANK7[80]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 4
		 -> Terminal@Len(BANK3[4]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_27(CODE[17]), 

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_33(CODE[7]), STR_28(CODE[12]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    isNumberInMemory@phoneNumber	PTR unsigned char  size(2) Largest target is 13
		 -> callerNumber(BANK4[13]), 

    isNumberValid@phoneNumber	PTR unsigned char  size(2) Largest target is 20
		 -> findEmptySpot@readBuffer(BANK1[13]), isNumberInMemory@readBuffer(BANK1[13]), smsText(BANK4[20]), 

    saveNumberInMemory@phoneNumber	PTR unsigned char  size(2) Largest target is 3775
		 -> MyApp_Task@emptyNumber(BANK1[13]), RAM(DATA[3775]), callerNumber(BANK4[13]), 

    secondsAppTimer@counter	PTR unsigned int  size(2) Largest target is 2
		 -> setupCallTicks(BANK3[2]), initGprsModem@modemCounter(BANK3[2]), 

    sp__initPreamble	PTR unsigned char  size(2) Largest target is 5
		 -> memoryPreamble(BANK3[5]), 

    parseCommand@text	PTR unsigned char  size(2) Largest target is 20
		 -> smsText(BANK4[20]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 80
		 -> Term_MainSm@FwkBuildStr(BANK1[4]), Term_MainSm@FwkMinorStr(BANK1[4]), Term_MainSm@FwkMajorStr(BANK1[4]), Terminal@Payload(BANK7[80]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 200
		 -> Term_MainSm@Data(BANK4[50]), Terminal@UsbTxBuffer(BANK2[200]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 80
		 -> Terminal@Payload(BANK7[80]), 

    ClearBuffer@Buffer	PTR unsigned char  size(2) Largest target is 400
		 -> GsmGprsTerminal@UartBuffer(BANK9[200]), HttpGetMethod@UartMessage(BANK1[200]), InitGprsNetwork@UartMessage(BANK1[50]), Mdm_SmsRx(BANK7[102]), 
		 -> callerNumber(BANK4[13]), RxBuffer(BIGRAMl[400]), 

    StringCopy@SourceStr	PTR unsigned char  size(2) Largest target is 3775
		 -> memorizedNumbersCount(COMRAM[1]), memoryPreamble(BANK3[5]), MyApp_Task@emptyNumber(BANK1[13]), RAM(DATA[3775]), 
		 -> STR_15(CODE[20]), STR_9(CODE[21]), MessageText(BANK5[50]), PhoneNumber(BANK4[20]), 
		 -> STR_5(CODE[10]), Mdm_SmsRx.HeaderBuffer(BANK7[80]), Mdm_SmsRx(BANK7[102]), callerNumber(BANK4[13]), 
		 -> RxBuffer(BIGRAMl[400]), 

    StringCopy@DestStr	PTR unsigned char  size(2) Largest target is 200
		 -> smsText(BANK4[20]), EepromBuffer(BANK4[15]), HttpGetMethod@UartMessage(BANK1[200]), InitGprsNetwork@UartMessage(BANK1[50]), 
		 -> MessageText(BANK5[50]), PhoneNumber(BANK4[20]), SendSmsSm@UartMessage(BANK1[50]), Mdm_SmsRx(BANK7[102]), 
		 -> callerNumber(BANK4[13]), 

    StringCompare@String2	PTR unsigned char  size(2) Largest target is 400
		 -> isNumberInMemory@readBuffer(BANK1[13]), MyApp_Task@cmdAddNumber(BANK1[4]), parseCommand@deleteNumberCmd(BANK0[3]), parseCommand@addNumberCmd(BANK0[3]), 
		 -> RxBuffer(BIGRAMl[400]), 

    StringCompare@String1	PTR unsigned char  size(2) Largest target is 20
		 -> smsText(BANK4[20]), callerNumber(BANK4[13]), ModemEvtParser@CallReadyString(BANK0[10]), ModemEvtParser@SmsString(BANK0[5]), 
		 -> ModemEvtParser@ClipString(BANK0[5]), ModemEvtParser@RingString(BANK0[4]), 

    LedStateMachine@LedSts	PTR enum E8950 size(2) Largest target is 1
		 -> Led3Sts(BANK1[1]), Led2Sts(BANK1[1]), Led1Sts(BANK1[1]), 

    LedStateMachine@LedPulse	PTR struct _LedPulseType size(2) Largest target is 6
		 -> Led3Pulse(BANK3[6]), Led2Pulse(BANK3[6]), Led1Pulse(BANK3[6]), 

    LedStateMachine@LedBlink	PTR struct _LedBlinkType size(2) Largest target is 9
		 -> Led3Blink(BANK3[9]), Led2Blink(BANK3[9]), Led1Blink(BANK3[9]), 

    LedStateMachine@LedOut	PTR unsigned char  size(2) Largest target is 1
		 -> Led3OutSts(BANK1[1]), Led2OutSts(BANK1[1]), Led1OutSts(BANK1[1]), 

    LedPulseStateMachine@LedPulse	PTR struct _LedPulseType size(2) Largest target is 6
		 -> Led3Pulse(BANK3[6]), Led2Pulse(BANK3[6]), Led1Pulse(BANK3[6]), 

    LedBlinkStateMachine@LedBlink	PTR struct _LedBlinkType size(2) Largest target is 9
		 -> Led3Blink(BANK3[9]), Led2Blink(BANK3[9]), Led1Blink(BANK3[9]), 

    Eeprom_Read@ReadBuffer	PTR unsigned char  size(2) Largest target is 13
		 -> findEmptySpot@readBuffer(BANK1[13]), isNumberInMemory@readBuffer(BANK1[13]), memoryPreamble(BANK3[5]), 

    Eeprom_Write@WriteBuffer	PTR unsigned char  size(2) Largest target is 3775
		 -> memorizedNumbersCount(COMRAM[1]), memoryPreamble(BANK3[5]), MyApp_Task@emptyNumber(BANK1[13]), RAM(DATA[3775]), 
		 -> callerNumber(BANK4[13]), 

    putUSBUSART@data	PTR unsigned char  size(2) Largest target is 400
		 -> MsgReady(CODE[23]), Term_MainSm@Data(BANK4[50]), MsgFormat(CODE[240]), Welcome(CODE[137]), 
		 -> Terminal@UsbTxBuffer(BANK2[200]), Terminal@TermRxBuffer(BANK5[50]), Terminal@Payload(BANK7[80]), Terminal@UsbRxBuffer(BANK10[200]), 
		 -> RxBuffer(BIGRAMl[400]), 

    getsUSBUSART@buffer	PTR unsigned char  size(2) Largest target is 200
		 -> Terminal@UsbRxBuffer(BANK10[200]), GsmGprsTerminal@UsbBuffer(BANK8[200]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pCDCDst.wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S4612$wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S4612$bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S4612$wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S4612$bRam	PTR unsigned char  size(2) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    sp__memcpy	PTR void  size(2) Largest target is 8
		 -> SetupPkt(BIGRAMh[8]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pDst	PTR unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMh[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx(BANK7[64]), cdc_data_rx(BANK5[64]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    S3065$pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S3055$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S3055$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S3031$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S3031$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S3031$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S3031$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), USBAlternateInterface(BANK2[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 38
		 -> sd002(CODE[38]), sd001(CODE[30]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 

    I2cSlv_QueryI2cData@RxBuffer	PTR unsigned char  size(2) Largest target is 13
		 -> findEmptySpot@readBuffer(BANK1[13]), isNumberInMemory@readBuffer(BANK1[13]), memoryPreamble(BANK3[5]), 

    I2cSlv_QueryI2cData@TxBuffer	PTR unsigned char  size(2) Largest target is 1
		 -> ReadAddress(BANK1[1]), 

    I2cSlv_ReceiveI2cMsg@RxBuffer	PTR unsigned char  size(2) Largest target is 50
		 -> findEmptySpot@readBuffer(BANK1[13]), isNumberInMemory@readBuffer(BANK1[13]), memoryPreamble(BANK3[5]), Terminal@TermRxBuffer(BANK5[50]), 

    I2cSlv_SendI2cMsg@TxBuffer	PTR unsigned char  size(2) Largest target is 50
		 -> triggerRelay@txBuffer(COMRAM[2]), Terminal@TermTxBuffer(BANK1[50]), ReadAddress(BANK1[1]), EepromBuffer(BANK4[15]), 
		 -> I2cDummyTx@DummyBuffer(BANK1[1]), 

    I2cRxPacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> findEmptySpot@readBuffer(BANK1[13]), isNumberInMemory@readBuffer(BANK1[13]), memoryPreamble(BANK3[5]), Terminal@TermRxBuffer(BANK5[50]), 

    I2cTxPacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> triggerRelay@txBuffer(COMRAM[2]), Terminal@TermTxBuffer(BANK1[50]), ReadAddress(BANK1[1]), EepromBuffer(BANK4[15]), 
		 -> I2cDummyTx@DummyBuffer(BANK1[1]), 

    MdmHttp_GetMethod@GetData.RespBuffer	PTR unsigned char  size(2) Largest target is 0

    MdmHttp_GetMethod@GetData.Url	PTR unsigned char  size(2) Largest target is 0

    ApnLocal	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    HttpGetMethod@GetData.RespBuffer	PTR unsigned char  size(2) Largest target is 0

    HttpGetMethod@GetData.Url	PTR unsigned char  size(2) Largest target is 0

    HttpGetMethod@GetData	PTR struct _HttpGetDataType size(2) Largest target is 7
		 -> HttpGetDataLocal(BANK3[5]), 

    InitGprsNetwork@Apn	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2532_HttpGetDataType$RespBuffer	PTR unsigned char  size(2) Largest target is 0

    HttpGetDataLocal.RespBuffer	PTR unsigned char  size(2) Largest target is 0

    S2532_HttpGetDataType$Url	PTR unsigned char  size(2) Largest target is 0

    HttpGetDataLocal.Url	PTR unsigned char  size(2) Largest target is 0

    sp__GetCallerNumber	PTR unsigned char  size(2) Largest target is 13
		 -> callerNumber(BANK4[13]), 

    Mdm_GetSmsData@MessageText	PTR unsigned char  size(2) Largest target is 20
		 -> smsText(BANK4[20]), 

    OsTmr_GetTimerStatus@Timer	PTR struct _SwTimerType size(2) Largest target is 11
		 -> Term_MainSm@TermDelay(BANK3[11]), Terminal@SwTimer(BANK4[11]), I2cSlv_QueryI2cData@TimeoutTimer(BANK3[11]), I2cSlv_QueryI2cData@QueryTimer(BANK4[11]), 
		 -> ConnWait(BANK3[11]), ConnTimeout(BANK2[11]), SendSmsSm@SwTimer(BANK3[11]), CheckModem@Timeout(BANK3[11]), 

    OsTmr_Wait@WaitTimer	PTR struct _SwTimerType size(2) Largest target is 11
		 -> Terminal@SwTimer(BANK4[11]), I2cSlv_QueryI2cData@QueryTimer(BANK4[11]), 

    OsTmr_StartTimer@Timer	PTR struct _SwTimerType size(2) Largest target is 11
		 -> Term_MainSm@TermDelay(BANK3[11]), Terminal@SwTimer(BANK4[11]), I2cSlv_QueryI2cData@TimeoutTimer(BANK3[11]), I2cSlv_QueryI2cData@QueryTimer(BANK4[11]), 
		 -> ConnWait(BANK3[11]), ConnTimeout(BANK2[11]), SendSmsSm@SwTimer(BANK3[11]), CheckModem@Timeout(BANK3[11]), 

    ReceiveEvt@Event	PTR struct EventStructure size(2) Largest target is 7
		 -> I2cRxPacket(BANK3[6]), I2cReadDataEvt(BANK0[1]), I2cWriteDataEvt(BANK0[1]), GetMethod(BANK0[1]), 
		 -> InitNetwork(BANK0[1]), SmsTxtReady(BANK0[1]), GetSmsText(BANK0[1]), SmsEvent(BANK0[1]), 
		 -> ClipEvent(BANK0[1]), RingEvent(BANK0[1]), SendSmsEvent(BANK0[1]), NewStringMdmTerminal(COMRAM[1]), 
		 -> NewMdmEvtParserRequest(COMRAM[1]), NewStringReceived(COMRAM[1]), MdmResetRequest(COMRAM[1]), MdmOnOffPulseRequest(BANK0[1]), 
		 -> ActivateRiDetection(COMRAM[1]), 

    GenerateEvt@Event	PTR struct EventStructure size(2) Largest target is 7
		 -> AlarmEvent(BANK1[1]), I2cRxPacket(BANK3[6]), I2cReadDataEvt(BANK0[1]), I2cWriteDataEvt(BANK0[1]), 
		 -> GetMethod(BANK0[1]), InitNetwork(BANK0[1]), MdmStsReady(COMRAM[1]), SmsTxtReady(BANK0[1]), 
		 -> GetSmsText(BANK0[1]), SmsEvent(BANK0[1]), ClipEvent(BANK0[1]), RingEvent(BANK0[1]), 
		 -> SendSmsEvent(BANK0[1]), NewStringMdmTerminal(COMRAM[1]), NewMdmEvtParserRequest(COMRAM[1]), NewStringReceived(COMRAM[1]), 
		 -> MdmOnOffPulseRequest(BANK0[1]), CallClosedEvent(COMRAM[1]), IncomingCallEvent(COMRAM[1]), NewSmsEvent(COMRAM[1]), 

    S2049_SchedTblType$Task	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> MyApp_Task(), Term_MainTask(), Rtcm_MainTask(), Led_MainTask(), 
		 -> Wdg_MainTask(), UsbDevice_MainTask(), MdmHttp_MainTask(), Mdm_MainTask(), 
		 -> I2cSlv_MainTask(), Mdm_DrvMainFn(), 

    TaskTable.Task	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> MyApp_Task(), Term_MainTask(), Rtcm_MainTask(), Led_MainTask(), 
		 -> Wdg_MainTask(), UsbDevice_MainTask(), MdmHttp_MainTask(), Mdm_MainTask(), 
		 -> I2cSlv_MainTask(), Mdm_DrvMainFn(), 

    OsAlrm_SetOsAlarm@AlarmCallback	PTR FTN()void  size(2) Largest target is 1
		 -> I2cDummyTx(), 

    S2014_OsAlarmType$AlrmCbk	PTR FTN()void  size(2) Largest target is 1
		 -> I2cDummyTx(), 

    OsAlarms.AlrmCbk	PTR FTN()void  size(2) Largest target is 1
		 -> I2cDummyTx(), 

    Uart_WriteStringLen@StringToWrite	PTR unsigned char  size(2) Largest target is 200
		 -> GsmGprsTerminal@UartBuffer(BANK9[200]), SendSmsSm@UartMessage(BANK1[50]), 

    Uart_WriteString@StringToWrite	PTR unsigned char  size(2) Largest target is 200
		 -> HttpGetMethod@UartMessage(BANK1[200]), InitGprsNetwork@UartMessage(BANK1[50]), Mdm_MakePhoneCall@UartMessage(COMRAM[25]), Mdm_SetSmsFormat@UartMessage(BANK0[20]), 
		 -> Mdm_PinUnlock@UartMessage(COMRAM[13]), 

    Uart_WriteConstString@ConstStringToWrite	PTR const unsigned char  size(2) Largest target is 31
		 -> STR_32(CODE[12]), STR_31(CODE[19]), STR_30(CODE[14]), STR_29(CODE[14]), 
		 -> STR_20(CODE[14]), STR_19(CODE[14]), STR_18(CODE[13]), STR_17(CODE[13]), 
		 -> STR_16(CODE[17]), STR_14(CODE[21]), STR_13(CODE[14]), STR_12(CODE[13]), 
		 -> STR_11(CODE[14]), STR_10(CODE[14]), STR_8(CODE[31]), STR_7(CODE[5]), 
		 -> STR_6(CODE[5]), STR_4(CODE[12]), STR_3(CODE[7]), STR_2(CODE[14]), 
		 -> STR_1(CODE[5]), 

    Uart_InitUartModule@UartConfig	PTR struct _UartConfig size(2) Largest target is 21
		 -> UartConfig(BANK3[21]), 

    SetUartBaudRate@UartConfig	PTR struct _UartConfig size(2) Largest target is 21
		 -> UartConfig(BANK3[21]), 

    Tmr4IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Tmr_RegisterTmr2IsrCallback@IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Sch_SchmIntService(), 

    Tmr2IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Sch_SchmIntService(), Absolute function(), 

    Tmr_TmrBConfig@TmrBConfig	PTR struct _TmrBConfigType size(2) Largest target is 7
		 -> InitAuxTimer@TmrBConfig(COMRAM[7]), InitSchedTimer@TmrBConfig(BANK0[7]), 

    RtccIsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Rtcc_AlarmConfig@AlarmConfig	PTR struct _RtccAlarmConfigType size(2) Largest target is 4
		 -> AlCfg(BANK3[4]), 

    Rtcc_RtcConfig@RtcConfig	PTR struct _RtccConfigType size(2) Largest target is 4
		 -> RtcConfig(BANK3[4]), 

    ExtInt1IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    ExtInt0IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S566_I2cReadPacket$Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> findEmptySpot@readBuffer(BANK1[13]), isNumberInMemory@readBuffer(BANK1[13]), memoryPreamble(BANK3[5]), Terminal@TermRxBuffer(BANK5[50]), 

    I2c_ReadData@ReadPacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> findEmptySpot@readBuffer(BANK1[13]), isNumberInMemory@readBuffer(BANK1[13]), memoryPreamble(BANK3[5]), Terminal@TermRxBuffer(BANK5[50]), 

    I2c_ReadData@ReadPacket	PTR struct _I2cReadPacket size(2) Largest target is 7
		 -> I2cRxPacket(BANK3[6]), 

    S539_I2cWritePacket$Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> triggerRelay@txBuffer(COMRAM[2]), Terminal@TermTxBuffer(BANK1[50]), ReadAddress(BANK1[1]), EepromBuffer(BANK4[15]), 
		 -> I2cDummyTx@DummyBuffer(BANK1[1]), 

    I2c_WriteData@WritePacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> triggerRelay@txBuffer(COMRAM[2]), Terminal@TermTxBuffer(BANK1[50]), ReadAddress(BANK1[1]), EepromBuffer(BANK4[15]), 
		 -> I2cDummyTx@DummyBuffer(BANK1[1]), 

    I2c_WriteData@WritePacket	PTR struct _I2cWritePacket size(2) Largest target is 6
		 -> I2cTxPacket(BANK3[5]), 

    I2c_InitI2cModule@I2cConfig	PTR struct _I2cConfig size(2) Largest target is 10
		 -> I2cConfig(BANK3[10]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _LowPriorityIsr in COMRAM

    _Sch_SchmIntService->_OsAlrm_ProcessOsAlarms
    _I2cDummyTx->i1_I2cSlv_SendI2cMsg
    i1_I2cSlv_SendI2cMsg->i1_GenerateEvt

Critical Paths under _HighPriorityIsr in COMRAM

    _Uart_Uart1RxIsr->_Uart_MdmGsmGprsReadService
    _Uart_MdmGsmGprsReadService->i2_GenerateEvt

Critical Paths under _main in BANK0

    _SystemInit->_InitSchedTimer
    _InitSchedTimer->_Tmr_TmrBConfig
    _Tmr_TmrBConfig->_Tmr_TmrBPrSet
    _Tmr_TmrBPrSet->___lldiv
    _Wdg_MainTask->_Mcu_SetWdgSts
    _UsbDevice_MainTask->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBDeviceInit->_memset
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService
    _CDCTxService->_USBTransferOnePacket
    _Term_MainSm->_Terminal
    _Terminal->_OsTmr_Wait
    _xtoi->_isxdigit
    _isxdigit->_isdigit
    _strtol->___lmul
    _isalpha->_isupper
    _putUSBUSART->_strlen
    _itoa->_utoa
    _utoa->___lwdiv
    _getsUSBUSART->_USBTransferOnePacket
    _atoi->___wmul
    _Rtcm_MainTask->_Rtcm_GetRtccDate
    _Rtcm_SetRtccDate->_Rtcc_SetRtccValue
    _Rtcc_SetRtccValue->___awdiv
    _Rtcm_GetRtccDate->_Rtcc_GetRtccValue
    _Rtcc_RtcConfig->_RtccIrqInit
    _waitSetupCall->_secondsAppTimer
    _Mdm_IsRinging->_ReceiveEvt
    _Mdm_HangPhoneCall->_Uart_WriteConstString
    _saveNumberInMemory->_Eeprom_Write
    _parseCommand->_StringCompare
    _isNumberInMemory->_Eeprom_Read
    _initMemorizedNumbersCount->_Eeprom_Write
    _Eeprom_Write->_StringCopy
    _initGprsModem->_Mdm_SetSmsFormat
    _secondsAppTimer->___lwdiv
    _Mdm_SetSmsFormat->_Uart_WriteString
    _initEeprom->_Eeprom_Read
    _findEmptySpot->_Eeprom_Read
    _Eeprom_Read->_I2cSlv_QueryI2cData
    _I2cSlv_QueryI2cData->_OsTmr_Wait
    _OsTmr_Wait->_OsTmr_GetTimerStatus
    _I2cSlv_SendI2cMsg->_GenerateEvt
    _I2cSlv_ReceiveI2cMsg->_GenerateEvt
    _I2cSlv_I2cReadMsgSts->_ReceiveEvt
    _Mdm_RequestSmsData->_GenerateEvt
    _Mdm_IsSmsReceived->_ReceiveEvt
    _Mdm_GetSmsData->_StringCopy
    _GetCallerNumber->_ClearBuffer
    _Mdm_MainTask->_ModemEvtParser
    _Mdm_MainTask->_Uart_InitUartModule
    _TurnOnModem->_GenerateEvt
    _SendSmsSm->_OsTmr_GetTimerStatus
    _Uart_WriteStringLen->_UartTxBufferStatus
    _ModemEvtParser->_StringCompare
    _GetSmsSm->_StringCopy
    _ConfigureModem->_Uart_InitUartModule
    _Uart_InitUartModule->_SetUartBaudRate
    _SetUartBaudRate->___lldiv
    _CheckModem->_OsTmr_GetTimerStatus
    _MdmCntSm->_ReceiveEvt
    _MdmHttp_MainTask->_HttpGetMethod
    _InitGprsNetwork->_OsTmr_GetTimerStatus
    _HttpGetMethod->_OsTmr_GetTimerStatus
    _Uart_WriteString->_UartTxBufferStatus
    _Uart_WriteConstString->_UartTxBufferStatus
    _OsTmr_StartTimer->_GetOsTickCounter
    _OsTmr_GetTimerStatus->_GetElapsedTime
    _GetElapsedTime->_GetOsTickCounter
    _Led_MainTask->_LedStateMachine
    _LedStateMachine->_LedPulseStateMachine
    _LedPulseStateMachine->___lwdiv
    _LedBlinkStateMachine->___lwdiv
    ___lwdiv->___wmul
    _I2cSlv_MainTask->_I2c_InitI2cModule
    _OsAlrm_SetOsAlarm->___wmul
    _I2c_InitI2cModule->_SetBaudRate
    _SetBaudRate->___lldiv
    ___lldiv->___lmul
    _I2cSendMsgSm->_I2c_ReadData
    _I2c_WriteData->_WriteByte
    _I2c_ReadData->_GenerateEvt

Critical Paths under _LowPriorityIsr in BANK0

    _Sch_SchmIntService->_OsAlrm_ProcessOsAlarms

Critical Paths under _HighPriorityIsr in BANK0

    None.

Critical Paths under _main in BANK1

    _Term_MainTask->_Term_MainSm
    _Term_MainSm->_Terminal
    _MyApp_Task->_isNumberInMemory
    _initFsm->_initEeprom
    _Mdm_MainTask->_SendSmsSm
    _MdmHttp_MainTask->_HttpGetMethod

Critical Paths under _LowPriorityIsr in BANK1

    None.

Critical Paths under _HighPriorityIsr in BANK1

    None.

Critical Paths under _main in BANK2

    _Term_MainSm->_Terminal

Critical Paths under _LowPriorityIsr in BANK2

    None.

Critical Paths under _HighPriorityIsr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _LowPriorityIsr in BANK3

    None.

Critical Paths under _HighPriorityIsr in BANK3

    None.

Critical Paths under _main in BANK4

    _Sch_MainScheduler->_ScheduleTasks

Critical Paths under _LowPriorityIsr in BANK4

    None.

Critical Paths under _HighPriorityIsr in BANK4

    None.

Critical Paths under _main in BANK5

    _Sch_MainScheduler->_ScheduleTasks

Critical Paths under _LowPriorityIsr in BANK5

    None.

Critical Paths under _HighPriorityIsr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _LowPriorityIsr in BANK6

    None.

Critical Paths under _HighPriorityIsr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _LowPriorityIsr in BANK7

    None.

Critical Paths under _HighPriorityIsr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _LowPriorityIsr in BANK8

    None.

Critical Paths under _HighPriorityIsr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _LowPriorityIsr in BANK9

    None.

Critical Paths under _HighPriorityIsr in BANK9

    None.

Critical Paths under _main in BANK10

    _Term_MainSm->_Terminal

Critical Paths under _LowPriorityIsr in BANK10

    None.

Critical Paths under _HighPriorityIsr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _LowPriorityIsr in BANK11

    None.

Critical Paths under _HighPriorityIsr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _LowPriorityIsr in BANK12

    None.

Critical Paths under _HighPriorityIsr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _LowPriorityIsr in BANK13

    None.

Critical Paths under _HighPriorityIsr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _LowPriorityIsr in BANK14

    None.

Critical Paths under _HighPriorityIsr in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  858583
                  _Sch_MainScheduler
                         _SystemInit
 ---------------------------------------------------------------------------------
 (1) _SystemInit                                           0     0      0    4631
                     _InitSchedTimer
              _Irq_InitIntController
                   _Mcu_ConfigExtInt
                 _Mcu_StartSystemPll
             _Pm_DsReleasePinControl
        _Tmr_RegisterTmr2IsrCallback
 ---------------------------------------------------------------------------------
 (2) _Tmr_RegisterTmr2IsrCallback                          2     0      2     111
                                             29 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _Pm_DsReleasePinControl                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Mcu_StartSystemPll                                   2     2      0      23
                                             29 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _Mcu_ConfigExtInt                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Irq_InitIntController                                3     1      2     244
                                             29 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _InitSchedTimer                                       7     7      0    4253
                                             68 BANK0      7     7      0
                     _Tmr_TmrBConfig
 ---------------------------------------------------------------------------------
 (3) _Tmr_TmrBConfig                                       4     2      2    4007
                                             64 BANK0      4     2      2
                           _TmrBInit
                       _Tmr_StartTmr
                     _Tmr_TmrBIrqSet
                      _Tmr_TmrBPrSet
 ---------------------------------------------------------------------------------
 (4) _Tmr_TmrBPrSet                                       10     6      4    2589
                                             54 BANK0     10     6      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) _Tmr_TmrBIrqSet                                       3     1      2     466
                                             29 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (4) _Tmr_StartTmr                                         1     1      0      22
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _TmrBInit                                             4     2      2     288
                                             29 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _Sch_MainScheduler                                    0     0      0  853952
                    _InitializeTasks
                      _ScheduleTasks
 ---------------------------------------------------------------------------------
 (2) _ScheduleTasks                                        5     5      0  427069
                                              0 BANK4      4     4      0
                                              0 BANK5      1     1      0
                    _I2cSlv_MainTask *
                       _Led_MainTask *
                   _MdmHttp_MainTask *
                      _Mdm_DrvMainFn *
                       _Mdm_MainTask *
                         _MyApp_Task *
                      _Rtcm_MainTask *
                      _Term_MainTask *
                 _UsbDevice_MainTask *
                       _Wdg_MainTask *
 ---------------------------------------------------------------------------------
 (2) _InitializeTasks                                      3     3      0  426883
                                              0 BANK4      3     3      0
                    _I2cSlv_MainTask *
                       _Led_MainTask *
                   _MdmHttp_MainTask *
                      _Mdm_DrvMainFn *
                       _Mdm_MainTask *
                         _MyApp_Task *
                      _Rtcm_MainTask *
                      _Term_MainTask *
                 _UsbDevice_MainTask *
                       _Wdg_MainTask *
 ---------------------------------------------------------------------------------
 (3) _Wdg_MainTask                                         1     1      0      31
                       _Mcu_ClearWdg
                      _Mcu_SetWdgSts
 ---------------------------------------------------------------------------------
 (4) _Mcu_SetWdgSts                                        1     1      0      31
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Mcu_ClearWdg                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _UsbDevice_MainTask                                   1     1      0   53592
                       _CDCTxService
                      _USBDeviceInit
                     _USBDeviceTasks
 ---------------------------------------------------------------------------------
 (4) _USBDeviceTasks                                       1     1      0   49060
                                             56 BANK0      1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                      _USBDeviceInit
      _USBIncrement1msInternalTimers
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBWakeFromSuspend                                   0     0      0    6134
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBSuspend                                           0     0      0    6134
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBStallHandler                                      1     1      0       0
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _USBIncrement1msInternalTimers                        0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _USBDeviceInit                                        1     1      0    2300
                                             37 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPService                                     1     1      0   28290
                                             55 BANK0      1     1      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
                             _memcpy
 ---------------------------------------------------------------------------------
 (6) _memcpy                                              11     5      6     520
                                             29 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfSetupHandler                               0     0      0   27433
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (7) _USBCtrlEPServiceComplete                             0     0      0     136
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (8) _USBCtrlEPAllowDataStage                              0     0      0     136
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (7) _USBCheckStdRequest                                   0     0      0   21163
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (8) _USBStdSetCfgHandler                                  1     1      0    8273
                                             49 BANK0      1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                             _memset
 ---------------------------------------------------------------------------------
 (8) _USBStdGetStatusHandler                               3     3      0      68
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (8) _USBStdGetDscHandler                                  2     2      0       0
                                             29 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (8) _USBStdFeatureReqHandler                              6     6      0    6688
                                             49 BANK0      6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USER_USB_CALLBACK_EVENT_HANDLER                      8     2      6    6134
                                             41 BANK0      8     2      6
                          _CDCInitEP
                 _USBCheckCDCRequest
 ---------------------------------------------------------------------------------
 (6) _USBCheckCDCRequest                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _CDCInitEP                                            0     0      0    2983
                  _USBEnableEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (7) _USBEnableEndpoint                                    4     3      1     952
                                             37 BANK0      4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (8) _USBConfigureEndpoint                                 8     7      1     524
                                             29 BANK0      8     7      1
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfOutHandler                                 0     0      0     167
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (7) _USBCtrlTrfRxService                                  2     2      0     167
                                             29 BANK0      2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (8) _USBCtrlEPAllowStatusStage                            0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfInHandler                                  1     1      0     170
                                             30 BANK0      1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (9) _USBCtrlTrfTxService                                  1     1      0     136
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _CDCTxService                                         2     2      0    2232
                                             36 BANK0      2     2      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _Term_MainTask                                        1     1      0   59042
                        _Term_MainSm
 ---------------------------------------------------------------------------------
 (4) _Term_MainSm                                         24    24      0   59042
                                             50 BANK1     12    12      0
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                           _Terminal
                             _memset
                        _putUSBUSART
                            _sprintf
                             _strcat
                             _strcpy
                             _strlen
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _strlen                                               6     4      2     338
                                             29 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcat                                               6     2      4    1391
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) _sprintf                                             21    15      6     579
                                             29 BANK0     12     6      6
 ---------------------------------------------------------------------------------
 (6) _memset                                               8     2      6    2009
                                             29 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (5) _Terminal                                           455   455      0   41832
                                             66 BANK0      5     5      0
                                              0 BANK1     50    50      0
                                              0 BANK2    200   200      0
                                              0 BANK10   200   200      0
               _I2cSlv_I2cReadMsgSts
               _I2cSlv_ReceiveI2cMsg
                  _I2cSlv_SendI2cMsg
                         _OsTmr_Wait
                               _atoi
                       _getsUSBUSART
                               _itoa
                        _putUSBUSART
                             _strcpy
                             _strtol
                               _xtoi
 ---------------------------------------------------------------------------------
 (6) _xtoi                                                 8     6      2    1300
                                             35 BANK0      8     6      2
                            _isdigit
                            _isspace
                            _isupper
                           _isxdigit
                            _tolower
 ---------------------------------------------------------------------------------
 (7) _tolower                                              1     1      0      96
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _isxdigit                                             3     3      0     291
                                             32 BANK0      3     3      0
                            _isdigit
 ---------------------------------------------------------------------------------
 (6) _strtol                                              16    10      6    2703
                                             41 BANK0     16    10      6
                             ___lmul
                            _isalpha
                            _isdigit
                            _isspace
                            _toupper
 ---------------------------------------------------------------------------------
 (7) _toupper                                              1     1      0      96
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _isspace                                              3     3      0     130
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (7) _isalpha                                              3     3      0     229
                                             32 BANK0      3     3      0
                            _isupper
 ---------------------------------------------------------------------------------
 (7) _isupper                                              3     3      0      99
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               6     2      4     525
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) _putUSBUSART                                          3     0      3    2350
                                             35 BANK0      3     0      3
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (6) _itoa                                                 8     2      6    3910
                                             51 BANK0      8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _utoa                                                 9     3      6    3365
                                             42 BANK0      9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (6) ___lwmod                                              5     1      4     440
                                             29 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (6) _getsUSBUSART                                         4     1      3    2543
                                             36 BANK0      4     1      3
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (7) _USBTransferOnePacket                                 7     3      4    2031
                                             29 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (6) _atoi                                                 7     5      2    9683
                                             35 BANK0      7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (8) _isdigit                                              3     3      0      99
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _Rtcm_MainTask                                        1     1      0    9096
                   _Rtcc_AlarmConfig
                       _Rtcc_LockRtc
                     _Rtcc_RtcConfig
                  _Rtcc_SetRtcStatus
                     _Rtcc_UnlockRtc
                   _Rtcm_GetRtccDate
                   _Rtcm_SetRtccDate
 ---------------------------------------------------------------------------------
 (4) _Rtcm_SetRtccDate                                     8     0      8    7818
                                             41 BANK0      8     0      8
                       _Rtcc_LockRtc
                  _Rtcc_SetRtccValue
                     _Rtcc_UnlockRtc
 ---------------------------------------------------------------------------------
 (5) _Rtcc_UnlockRtc                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _Rtcc_SetRtccValue                                    4     3      1    7479
                                             37 BANK0      4     3      1
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4    3137
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4    3149
                                             29 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (5) _Rtcc_LockRtc                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _Rtcm_GetRtccDate                                    17     9      8     729
                                             33 BANK0     17     9      8
                  _Rtcc_GetRtccValue
 ---------------------------------------------------------------------------------
 (5) _Rtcc_GetRtccValue                                    4     4      0     473
                                             29 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (4) _Rtcc_SetRtcStatus                                    1     1      0      31
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Rtcc_RtcConfig                                       3     1      2     290
                                             30 BANK0      3     1      2
                        _RtccIrqInit
 ---------------------------------------------------------------------------------
 (5) _RtccIrqInit                                          1     1      0      31
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Rtcc_AlarmConfig                                     3     1      2     228
                                             29 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (3) _MyApp_Task                                          25    25      0  164739
                                             19 BANK1     24    24      0
                    _GetCallerNumber
                _Led_SetLedBlinkTime
                   _Led_SetLedStatus
                     _Mdm_GetSmsData
                  _Mdm_HangPhoneCall
                      _Mdm_IsRinging
                  _Mdm_IsSmsReceived
                 _Mdm_RequestSmsData
                      _StringCompare
              _Uart_WriteConstString
                      _findEmptySpot
                            _initFsm
          _initMemorizedNumbersCount
                   _isNumberInMemory
                       _parseCommand
                 _saveNumberInMemory
                      _waitSetupCall
 ---------------------------------------------------------------------------------
 (4) _waitSetupCall                                        1     1      0   17846
                                             51 BANK0      1     1      0
                   _Led_SetLedStatus
                       _getSetupCall
                    _secondsAppTimer
 ---------------------------------------------------------------------------------
 (5) _getSetupCall                                         1     1      0    5631
                                             35 BANK0      1     1      0
                  _Mdm_HangPhoneCall
                      _Mdm_IsRinging
 ---------------------------------------------------------------------------------
 (6) _Mdm_IsRinging                                        1     1      0    2739
                                             33 BANK0      1     1      0
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (6) _Mdm_HangPhoneCall                                    0     0      0    2855
              _Uart_WriteConstString
 ---------------------------------------------------------------------------------
 (4) _saveNumberInMemory                                   3     1      2    9716
                                             46 BANK0      3     1      2
                       _Eeprom_Write
                    _GetCallerNumber (ARG)
 ---------------------------------------------------------------------------------
 (4) _parseCommand                                         9     7      2    3620
                                             40 BANK0      9     7      2
                      _StringCompare
                      _isNumberValid
 ---------------------------------------------------------------------------------
 (4) _isNumberInMemory                                    19    17      2   28225
                                              0 BANK1     19    17      2
                        _Eeprom_Read
                    _GetCallerNumber (ARG)
                      _StringCompare
                      _isNumberValid
 ---------------------------------------------------------------------------------
 (4) _initMemorizedNumbersCount                            0     0      0    9342
                       _Eeprom_Write
                       _initPreamble
 ---------------------------------------------------------------------------------
 (5) _initPreamble                                         2     0      2       0
                                             29 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) _Eeprom_Write                                         7     4      3    9342
                                             39 BANK0      7     4      3
                  _I2cSlv_SendI2cMsg
                         _StringCopy
                       _initPreamble (ARG)
 ---------------------------------------------------------------------------------
 (4) _initFsm                                              1     1      0   40153
                                              3 BANK1      1     1      0
                         _initEeprom
                      _initGprsModem
 ---------------------------------------------------------------------------------
 (5) _initGprsModem                                        1     1      0   15682
                                             57 BANK0      1     1      0
                   _Mdm_SetSmsFormat
              _Uart_WriteConstString
                    _secondsAppTimer
 ---------------------------------------------------------------------------------
 (5) _secondsAppTimer                                      9     6      3   11118
                                             42 BANK0      9     6      3
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) _Mdm_SetSmsFormat                                    22    22      0    1672
                                             35 BANK0     22    22      0
                   _Uart_WriteString
 ---------------------------------------------------------------------------------
 (5) _initEeprom                                           3     3      0   24434
                                              0 BANK1      3     3      0
                        _Eeprom_Read
 ---------------------------------------------------------------------------------
 (4) _findEmptySpot                                       17    17      0   25120
                                              0 BANK1     17    17      0
                        _Eeprom_Read
                      _isNumberValid
 ---------------------------------------------------------------------------------
 (5) _isNumberValid                                        5     3      2     578
                                             29 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (5) _Eeprom_Read                                          7     4      3   24354
                                             73 BANK0      7     4      3
                _I2cSlv_QueryI2cData
 ---------------------------------------------------------------------------------
 (6) _I2cSlv_QueryI2cData                                  7     0      7   23495
                                             66 BANK0      7     0      7
               _I2cSlv_I2cReadMsgSts
               _I2cSlv_ReceiveI2cMsg
                  _I2cSlv_SendI2cMsg
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _OsTmr_Wait
 ---------------------------------------------------------------------------------
 (6) _OsTmr_Wait                                           7     1      6    7061
                                             59 BANK0      7     1      6
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
 ---------------------------------------------------------------------------------
 (6) _I2cSlv_SendI2cMsg                                    5     1      4    3711
                                             32 BANK0      5     1      4
                        _GenerateEvt
 ---------------------------------------------------------------------------------
 (6) _I2cSlv_ReceiveI2cMsg                                 5     1      4    2856
                                             32 BANK0      5     1      4
                        _GenerateEvt
 ---------------------------------------------------------------------------------
 (6) _I2cSlv_I2cReadMsgSts                                 1     1      0    2739
                                             33 BANK0      1     1      0
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (4) _Mdm_RequestSmsData                                   0     0      0    2123
                        _GenerateEvt
 ---------------------------------------------------------------------------------
 (4) _Mdm_IsSmsReceived                                    1     1      0    2739
                                             33 BANK0      1     1      0
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (4) _Mdm_GetSmsData                                       3     1      2    7541
                                             39 BANK0      3     1      2
                         _ReceiveEvt
                         _StringCopy
 ---------------------------------------------------------------------------------
 (4) _Led_SetLedBlinkTime                                  5     1      4     425
                                             29 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (4) _GetCallerNumber                                      2     0      2    5123
                                             35 BANK0      2     0      2
                        _ClearBuffer
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (3) _Mdm_MainTask                                         1     1      0   71700
                         _CheckModem
                     _ConfigureModem
                           _GetSmsSm
                     _ModemEvtParser
                          _SendSmsSm
                        _TurnOnModem
                      _UartSetConfig
                _Uart_InitUartModule
 ---------------------------------------------------------------------------------
 (4) _UartSetConfig                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _TurnOnModem                                          0     0      0    2123
                        _GenerateEvt
 ---------------------------------------------------------------------------------
 (4) _SendSmsSm                                           52    52      0   15573
                                             59 BANK0      2     2      0
                                              0 BANK1     50    50      0
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _ReceiveEvt
                         _StringCopy
                _Uart_WriteStringLen
 ---------------------------------------------------------------------------------
 (5) _Uart_WriteStringLen                                  5     2      3    1540
                                             32 BANK0      5     2      3
                 _UartTxBufferStatus
                      _UartWriteByte
 ---------------------------------------------------------------------------------
 (4) _ModemEvtParser                                      26    26      0   12514
                                             40 BANK0     26    26      0
                        _GenerateEvt
                         _ReceiveEvt
                      _StringCompare
                         _StringCopy
                 _Uart_ClearRxBuffer
 ---------------------------------------------------------------------------------
 (5) _Uart_ClearRxBuffer                                   2     2      0     102
                                             29 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (5) _StringCompare                                       11     5      6    2728
                                             29 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (4) _GetSmsSm                                             0     0      0   14664
                        _ClearBuffer
                        _GenerateEvt
                         _ReceiveEvt
                         _StringCopy
              _Uart_WriteConstString
 ---------------------------------------------------------------------------------
 (4) _ConfigureModem                                       0     0      0    8851
                        _GenerateEvt
                   _UartSetConfigLow
                _Uart_InitUartModule
              _Uart_WriteConstString
 ---------------------------------------------------------------------------------
 (4) _Uart_InitUartModule                                  5     3      2    3873
                                             61 BANK0      5     3      2
                    _SetUartBaudRate
 ---------------------------------------------------------------------------------
 (5) _SetUartBaudRate                                      7     5      2    2735
                                             54 BANK0      7     5      2
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (5) ___lmul                                              12     4      8     844
                                             29 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (5) _UartSetConfigLow                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _CheckModem                                           0     0      0   14102
                        _GenerateEvt
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _ReceiveEvt
              _Uart_WriteConstString
 ---------------------------------------------------------------------------------
 (3) _Mdm_DrvMainFn                                        1     1      0    2702
                           _MdmCntSm
 ---------------------------------------------------------------------------------
 (4) _MdmCntSm                                             0     0      0    2702
                 _InitModemInterface
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (5) _InitModemInterface                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _MdmHttp_MainTask                                     1     1      0   41683
                      _HttpGetMethod
                    _InitGprsNetwork
 ---------------------------------------------------------------------------------
 (4) _InitGprsNetwork                                     56    53      3   20878
                                             59 BANK0      5     2      3
                                              0 BANK1     51    51      0
                        _ClearBuffer
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _ReceiveEvt
                         _StringCopy
              _Uart_WriteConstString
                   _Uart_WriteString
 ---------------------------------------------------------------------------------
 (4) _HttpGetMethod                                      207   205      2   20805
                                             59 BANK0      6     4      2
                                              0 BANK1    201   201      0
                        _ClearBuffer
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _ReceiveEvt
                         _StringCopy
              _Uart_WriteConstString
                   _Uart_WriteString
 ---------------------------------------------------------------------------------
 (7) _Uart_WriteString                                     3     1      2    1191
                                             32 BANK0      3     1      2
                 _UartTxBufferStatus
                      _UartWriteByte
 ---------------------------------------------------------------------------------
 (7) _Uart_WriteConstString                                3     1      2    2855
                                             32 BANK0      3     1      2
                 _UartTxBufferStatus
                      _UartWriteByte
 ---------------------------------------------------------------------------------
 (8) _UartWriteByte                                        2     1      1     436
                                             29 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (8) _UartTxBufferStatus                                   3     3      0     108
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (6) _StringCopy                                          10     4      6    4563
                                             29 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (7) _OsTmr_StartTimer                                     6     0      6    4315
                                             33 BANK0      6     0      6
                   _GetOsTickCounter
 ---------------------------------------------------------------------------------
 (7) _OsTmr_GetTimerStatus                                 6     4      2    2107
                                             53 BANK0      6     4      2
                     _GetElapsedTime
 ---------------------------------------------------------------------------------
 (8) _GetElapsedTime                                      20    16      4     538
                                             33 BANK0     20    16      4
                   _GetOsTickCounter
 ---------------------------------------------------------------------------------
 (8) _GetOsTickCounter                                     4     0      4       0
                                             29 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (5) _ClearBuffer                                          6     2      4    2421
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) _Led_MainTask                                         2     2      0    7347
                                             58 BANK0      1     1      0
                    _LedStateMachine
 ---------------------------------------------------------------------------------
 (4) _LedStateMachine                                     11     3      8    7347
                                             47 BANK0     11     3      8
               _LedBlinkStateMachine
               _LedPulseStateMachine
                   _Led_SetLedStatus
 ---------------------------------------------------------------------------------
 (5) _LedPulseStateMachine                                 5     2      3    2877
                                             42 BANK0      5     2      3
                   _Led_SetLedStatus
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (5) _Led_SetLedStatus                                     2     1      1    1060
                                             29 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (5) _LedBlinkStateMachine                                 4     2      2    1837
                                             42 BANK0      4     2      2
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (6) ___lwdiv                                              7     3      4    1237
                                             35 BANK0      7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) _I2cSlv_MainTask                                      1     1      0   16818
                       _I2cSendMsgSm
                       _I2cSetConfig
                  _I2c_InitI2cModule
                  _OsAlrm_SetOsAlarm
 ---------------------------------------------------------------------------------
 (4) _OsAlrm_SetOsAlarm                                    8     0      8    9436
                                             35 BANK0      8     0      8
                             ___wmul
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4    8938
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) _I2c_InitI2cModule                                    4     2      2    1695
                                             66 BANK0      4     2      2
                        _SetBaudRate
 ---------------------------------------------------------------------------------
 (5) _SetBaudRate                                         12     4      8    1467
                                             54 BANK0     12     4      8
                            ___lldiv
 ---------------------------------------------------------------------------------
 (5) ___lldiv                                             13     5      8    1197
                                             41 BANK0     13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (4) _I2cSetConfig                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2cSendMsgSm                                         0     0      0    5687
                       _I2c_ReadData
                      _I2c_WriteData
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (7) _ReceiveEvt                                           4     2      2    2702
                                             29 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (5) _I2c_WriteData                                        4     2      2     414
                                             30 BANK0      4     2      2
                     _CheckAckStatus
                      _CheckTxStatus
                     _StartCondition
                      _StopCondition
                          _WriteByte
 ---------------------------------------------------------------------------------
 (5) _I2c_ReadData                                         4     2      2    2571
                                             32 BANK0      4     2      2
                     _CheckAckStatus
                      _CheckTxStatus
                     _EnableReceiver
                        _GenerateEvt
                           _ReadByte
                       _SetAckStatus
                     _StartCondition
                      _StopCondition
                          _WriteByte
 ---------------------------------------------------------------------------------
 (6) _WriteByte                                            1     1      0      31
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _StopCondition                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _StartCondition                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _SetAckStatus                                         1     1      0      31
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _ReadByte                                             1     1      0      34
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _GenerateEvt                                          3     1      2    2123
                                             29 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (6) _EnableReceiver                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _CheckTxStatus                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _CheckAckStatus                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _LowPriorityIsr                                     21    21      0    1029
                                              8 BANK0     21    21      0
                        _Tmr_Tmr2Isr
 ---------------------------------------------------------------------------------
 (14) _Tmr_Tmr2Isr                                         0     0      0    1029
                   Absolute function *
                 _Sch_SchmIntService *
 ---------------------------------------------------------------------------------
 (15) _Sch_SchmIntService                                  0     0      0    1029
             _OsAlrm_ProcessOsAlarms
                   _UpdateOsCounters
                      _UpdateSchFlag
 ---------------------------------------------------------------------------------
 (16) _UpdateSchFlag                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _UpdateOsCounters                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _OsAlrm_ProcessOsAlarms                             10    10      0    1029
                                             32 COMRAM     2     2      0
                                              0 BANK0      8     8      0
                         _I2cDummyTx *
                _OsAlrm_ClearOsAlarm
                           i1___wmul
 ---------------------------------------------------------------------------------
 (17) i1___wmul                                            6     2      4     469
                                             24 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (17) _OsAlrm_ClearOsAlarm                                 1     1      0      66
                                             24 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (17) _I2cDummyTx                                          0     0      0     209
                i1_I2cSlv_SendI2cMsg
 ---------------------------------------------------------------------------------
 (18) i1_I2cSlv_SendI2cMsg                                 5     1      4     209
                                             27 COMRAM     5     1      4
                      i1_GenerateEvt
 ---------------------------------------------------------------------------------
 (19) i1_GenerateEvt                                       3     1      2      56
                                             24 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (20) _HighPriorityIsr                                    18    18      0     332
                                              6 COMRAM    18    18      0
                        _Mcu_Int0Isr
                        _Mcu_Int1Isr
                        _Rtcc_RtcIsr
                    _Uart_Uart1RxIsr
 ---------------------------------------------------------------------------------
 (21) _Uart_Uart1RxIsr                                     0     0      0     332
         _Uart_MdmGsmGprsReadService
 ---------------------------------------------------------------------------------
 (22) _Uart_MdmGsmGprsReadService                          4     3      1     332
                                              3 COMRAM     3     2      1
                      i2_GenerateEvt
 ---------------------------------------------------------------------------------
 (23) i2_GenerateEvt                                       3     1      2     108
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (21) _Rtcc_RtcIsr                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (21) _Mcu_Int1Isr                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (21) _Mcu_Int0Isr                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 23
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Sch_MainScheduler
     _InitializeTasks
       _I2cSlv_MainTask *
         _I2cSendMsgSm
           _I2c_ReadData
             _CheckAckStatus
             _CheckTxStatus
             _EnableReceiver
             _GenerateEvt
             _ReadByte
             _SetAckStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _I2c_WriteData
             _CheckAckStatus
             _CheckTxStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _ReceiveEvt
         _I2cSetConfig
         _I2c_InitI2cModule
           _SetBaudRate
             ___lldiv
               ___lmul (ARG)
         _OsAlrm_SetOsAlarm
           ___wmul
       _Led_MainTask *
         _LedStateMachine
           _LedBlinkStateMachine
             ___lwdiv
               ___wmul (ARG)
           _LedPulseStateMachine
             _Led_SetLedStatus
             ___lwdiv
               ___wmul (ARG)
           _Led_SetLedStatus
       _MdmHttp_MainTask *
         _HttpGetMethod
           _ClearBuffer
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _Uart_WriteString
             _UartTxBufferStatus
             _UartWriteByte
         _InitGprsNetwork
           _ClearBuffer
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _Uart_WriteString
             _UartTxBufferStatus
             _UartWriteByte
       _Mdm_DrvMainFn *
         _MdmCntSm
           _InitModemInterface
           _ReceiveEvt
       _Mdm_MainTask *
         _CheckModem
           _GenerateEvt
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _ConfigureModem
           _GenerateEvt
           _UartSetConfigLow
           _Uart_InitUartModule
             _SetUartBaudRate
               ___lldiv
                 ___lmul (ARG)
               ___lmul
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _GetSmsSm
           _ClearBuffer
           _GenerateEvt
           _ReceiveEvt
           _StringCopy
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _ModemEvtParser
           _GenerateEvt
           _ReceiveEvt
           _StringCompare
           _StringCopy
           _Uart_ClearRxBuffer
         _SendSmsSm
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
           _Uart_WriteStringLen
             _UartTxBufferStatus
             _UartWriteByte
         _TurnOnModem
           _GenerateEvt
         _UartSetConfig
         _Uart_InitUartModule
           _SetUartBaudRate
             ___lldiv
               ___lmul (ARG)
             ___lmul
       _MyApp_Task *
         _GetCallerNumber
           _ClearBuffer
           _ReceiveEvt
         _Led_SetLedBlinkTime
         _Led_SetLedStatus
         _Mdm_GetSmsData
           _ReceiveEvt
           _StringCopy
         _Mdm_HangPhoneCall
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _Mdm_IsRinging
           _ReceiveEvt
         _Mdm_IsSmsReceived
           _ReceiveEvt
         _Mdm_RequestSmsData
           _GenerateEvt
         _StringCompare
         _Uart_WriteConstString
           _UartTxBufferStatus
           _UartWriteByte
         _findEmptySpot
           _Eeprom_Read
             _I2cSlv_QueryI2cData
               _I2cSlv_I2cReadMsgSts
                 _ReceiveEvt
               _I2cSlv_ReceiveI2cMsg
                 _GenerateEvt
               _I2cSlv_SendI2cMsg
                 _GenerateEvt
               _OsTmr_GetTimerStatus
                 _GetElapsedTime
                   _GetOsTickCounter
               _OsTmr_StartTimer
                 _GetOsTickCounter
               _OsTmr_Wait
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
           _isNumberValid
         _initFsm
           _initEeprom
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
           _initGprsModem
             _Mdm_SetSmsFormat
               _Uart_WriteString
                 _UartTxBufferStatus
                 _UartWriteByte
             _Uart_WriteConstString
               _UartTxBufferStatus
               _UartWriteByte
             _secondsAppTimer
               ___lwdiv
                 ___wmul (ARG)
               ___wmul
         _initMemorizedNumbersCount
           _Eeprom_Write
             _I2cSlv_SendI2cMsg
               _GenerateEvt
             _StringCopy
             _initPreamble (ARG)
           _initPreamble
         _isNumberInMemory
           _Eeprom_Read
             _I2cSlv_QueryI2cData
               _I2cSlv_I2cReadMsgSts
                 _ReceiveEvt
               _I2cSlv_ReceiveI2cMsg
                 _GenerateEvt
               _I2cSlv_SendI2cMsg
                 _GenerateEvt
               _OsTmr_GetTimerStatus
                 _GetElapsedTime
                   _GetOsTickCounter
               _OsTmr_StartTimer
                 _GetOsTickCounter
               _OsTmr_Wait
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
           _GetCallerNumber (ARG)
             _ClearBuffer
             _ReceiveEvt
           _StringCompare (ARG)
           _isNumberValid (ARG)
         _parseCommand
           _StringCompare
           _isNumberValid
         _saveNumberInMemory
           _Eeprom_Write
             _I2cSlv_SendI2cMsg
               _GenerateEvt
             _StringCopy
             _initPreamble (ARG)
           _GetCallerNumber (ARG)
             _ClearBuffer
             _ReceiveEvt
         _waitSetupCall
           _Led_SetLedStatus
           _getSetupCall
             _Mdm_HangPhoneCall
               _Uart_WriteConstString
                 _UartTxBufferStatus
                 _UartWriteByte
             _Mdm_IsRinging
               _ReceiveEvt
           _secondsAppTimer
             ___lwdiv
               ___wmul (ARG)
             ___wmul
       _Rtcm_MainTask *
         _Rtcc_AlarmConfig
         _Rtcc_LockRtc
         _Rtcc_RtcConfig
           _RtccIrqInit
         _Rtcc_SetRtcStatus
         _Rtcc_UnlockRtc
         _Rtcm_GetRtccDate
           _Rtcc_GetRtccValue
         _Rtcm_SetRtccDate
           _Rtcc_LockRtc
           _Rtcc_SetRtccValue
             ___awdiv
             ___awmod
           _Rtcc_UnlockRtc
       _Term_MainTask *
         _Term_MainSm
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _Terminal
             _I2cSlv_I2cReadMsgSts
               _ReceiveEvt
             _I2cSlv_ReceiveI2cMsg
               _GenerateEvt
             _I2cSlv_SendI2cMsg
               _GenerateEvt
             _OsTmr_Wait
               _OsTmr_GetTimerStatus
                 _GetElapsedTime
                   _GetOsTickCounter
               _OsTmr_StartTimer
                 _GetOsTickCounter
             _atoi
               ___wmul
               _isdigit
             _getsUSBUSART
               _USBTransferOnePacket
             _itoa
               _utoa
                 ___lwdiv
                   ___wmul (ARG)
                 ___lwmod
             _putUSBUSART
               _strlen (ARG)
             _strcpy
             _strtol
               ___lmul
               _isalpha
                 _isupper
               _isdigit
               _isspace
               _toupper
             _xtoi
               _isdigit
               _isspace
               _isupper
               _isxdigit
                 _isdigit
               _tolower
           _memset
           _putUSBUSART
             _strlen (ARG)
           _sprintf
           _strcat
           _strcpy
           _strlen
           _utoa
             ___lwdiv
               ___wmul (ARG)
             ___lwmod
       _UsbDevice_MainTask *
         _CDCTxService
           _USBTransferOnePacket
         _USBDeviceInit
           _memset
         _USBDeviceTasks
           _USBCtrlEPAllowStatusStage
           _USBCtrlEPService
             _USBCtrlTrfInHandler
               _USBCtrlTrfTxService
             _USBCtrlTrfOutHandler
               _USBCtrlTrfRxService
                 _USBCtrlEPAllowStatusStage
             _USBCtrlTrfSetupHandler
               _USBCheckStdRequest
                 _USBStdFeatureReqHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                 _USBStdGetDscHandler
                 _USBStdGetStatusHandler
                 _USBStdSetCfgHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                   _memset
                 _USER_USB_CALLBACK_EVENT_HANDLER
                   _CDCInitEP
                     _USBEnableEndpoint
                       _USBConfigureEndpoint
                     _USBTransferOnePacket
                   _USBCheckCDCRequest
               _USBCtrlEPServiceComplete
                 _USBCtrlEPAllowDataStage
                   _USBCtrlTrfTxService
                 _USBCtrlEPAllowStatusStage
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   _USBTransferOnePacket
                 _USBCheckCDCRequest
             _memcpy
           _USBDeviceInit
             _memset
           _USBIncrement1msInternalTimers
           _USBStallHandler
           _USBSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USBWakeFromSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USER_USB_CALLBACK_EVENT_HANDLER
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBTransferOnePacket
             _USBCheckCDCRequest
       _Wdg_MainTask *
         _Mcu_ClearWdg
         _Mcu_SetWdgSts
     _ScheduleTasks
       _I2cSlv_MainTask *
         _I2cSendMsgSm
           _I2c_ReadData
             _CheckAckStatus
             _CheckTxStatus
             _EnableReceiver
             _GenerateEvt
             _ReadByte
             _SetAckStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _I2c_WriteData
             _CheckAckStatus
             _CheckTxStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _ReceiveEvt
         _I2cSetConfig
         _I2c_InitI2cModule
           _SetBaudRate
             ___lldiv
               ___lmul (ARG)
         _OsAlrm_SetOsAlarm
           ___wmul
       _Led_MainTask *
         _LedStateMachine
           _LedBlinkStateMachine
             ___lwdiv
               ___wmul (ARG)
           _LedPulseStateMachine
             _Led_SetLedStatus
             ___lwdiv
               ___wmul (ARG)
           _Led_SetLedStatus
       _MdmHttp_MainTask *
         _HttpGetMethod
           _ClearBuffer
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _Uart_WriteString
             _UartTxBufferStatus
             _UartWriteByte
         _InitGprsNetwork
           _ClearBuffer
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _Uart_WriteString
             _UartTxBufferStatus
             _UartWriteByte
       _Mdm_DrvMainFn *
         _MdmCntSm
           _InitModemInterface
           _ReceiveEvt
       _Mdm_MainTask *
         _CheckModem
           _GenerateEvt
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _ConfigureModem
           _GenerateEvt
           _UartSetConfigLow
           _Uart_InitUartModule
             _SetUartBaudRate
               ___lldiv
                 ___lmul (ARG)
               ___lmul
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _GetSmsSm
           _ClearBuffer
           _GenerateEvt
           _ReceiveEvt
           _StringCopy
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _ModemEvtParser
           _GenerateEvt
           _ReceiveEvt
           _StringCompare
           _StringCopy
           _Uart_ClearRxBuffer
         _SendSmsSm
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
           _Uart_WriteStringLen
             _UartTxBufferStatus
             _UartWriteByte
         _TurnOnModem
           _GenerateEvt
         _UartSetConfig
         _Uart_InitUartModule
           _SetUartBaudRate
             ___lldiv
               ___lmul (ARG)
             ___lmul
       _MyApp_Task *
         _GetCallerNumber
           _ClearBuffer
           _ReceiveEvt
         _Led_SetLedBlinkTime
         _Led_SetLedStatus
         _Mdm_GetSmsData
           _ReceiveEvt
           _StringCopy
         _Mdm_HangPhoneCall
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _Mdm_IsRinging
           _ReceiveEvt
         _Mdm_IsSmsReceived
           _ReceiveEvt
         _Mdm_RequestSmsData
           _GenerateEvt
         _StringCompare
         _Uart_WriteConstString
           _UartTxBufferStatus
           _UartWriteByte
         _findEmptySpot
           _Eeprom_Read
             _I2cSlv_QueryI2cData
               _I2cSlv_I2cReadMsgSts
                 _ReceiveEvt
               _I2cSlv_ReceiveI2cMsg
                 _GenerateEvt
               _I2cSlv_SendI2cMsg
                 _GenerateEvt
               _OsTmr_GetTimerStatus
                 _GetElapsedTime
                   _GetOsTickCounter
               _OsTmr_StartTimer
                 _GetOsTickCounter
               _OsTmr_Wait
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
           _isNumberValid
         _initFsm
           _initEeprom
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
           _initGprsModem
             _Mdm_SetSmsFormat
               _Uart_WriteString
                 _UartTxBufferStatus
                 _UartWriteByte
             _Uart_WriteConstString
               _UartTxBufferStatus
               _UartWriteByte
             _secondsAppTimer
               ___lwdiv
                 ___wmul (ARG)
               ___wmul
         _initMemorizedNumbersCount
           _Eeprom_Write
             _I2cSlv_SendI2cMsg
               _GenerateEvt
             _StringCopy
             _initPreamble (ARG)
           _initPreamble
         _isNumberInMemory
           _Eeprom_Read
             _I2cSlv_QueryI2cData
               _I2cSlv_I2cReadMsgSts
                 _ReceiveEvt
               _I2cSlv_ReceiveI2cMsg
                 _GenerateEvt
               _I2cSlv_SendI2cMsg
                 _GenerateEvt
               _OsTmr_GetTimerStatus
                 _GetElapsedTime
                   _GetOsTickCounter
               _OsTmr_StartTimer
                 _GetOsTickCounter
               _OsTmr_Wait
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
           _GetCallerNumber (ARG)
             _ClearBuffer
             _ReceiveEvt
           _StringCompare (ARG)
           _isNumberValid (ARG)
         _parseCommand
           _StringCompare
           _isNumberValid
         _saveNumberInMemory
           _Eeprom_Write
             _I2cSlv_SendI2cMsg
               _GenerateEvt
             _StringCopy
             _initPreamble (ARG)
           _GetCallerNumber (ARG)
             _ClearBuffer
             _ReceiveEvt
         _waitSetupCall
           _Led_SetLedStatus
           _getSetupCall
             _Mdm_HangPhoneCall
               _Uart_WriteConstString
                 _UartTxBufferStatus
                 _UartWriteByte
             _Mdm_IsRinging
               _ReceiveEvt
           _secondsAppTimer
             ___lwdiv
               ___wmul (ARG)
             ___wmul
       _Rtcm_MainTask *
         _Rtcc_AlarmConfig
         _Rtcc_LockRtc
         _Rtcc_RtcConfig
           _RtccIrqInit
         _Rtcc_SetRtcStatus
         _Rtcc_UnlockRtc
         _Rtcm_GetRtccDate
           _Rtcc_GetRtccValue
         _Rtcm_SetRtccDate
           _Rtcc_LockRtc
           _Rtcc_SetRtccValue
             ___awdiv
             ___awmod
           _Rtcc_UnlockRtc
       _Term_MainTask *
         _Term_MainSm
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _Terminal
             _I2cSlv_I2cReadMsgSts
               _ReceiveEvt
             _I2cSlv_ReceiveI2cMsg
               _GenerateEvt
             _I2cSlv_SendI2cMsg
               _GenerateEvt
             _OsTmr_Wait
               _OsTmr_GetTimerStatus
                 _GetElapsedTime
                   _GetOsTickCounter
               _OsTmr_StartTimer
                 _GetOsTickCounter
             _atoi
               ___wmul
               _isdigit
             _getsUSBUSART
               _USBTransferOnePacket
             _itoa
               _utoa
                 ___lwdiv
                   ___wmul (ARG)
                 ___lwmod
             _putUSBUSART
               _strlen (ARG)
             _strcpy
             _strtol
               ___lmul
               _isalpha
                 _isupper
               _isdigit
               _isspace
               _toupper
             _xtoi
               _isdigit
               _isspace
               _isupper
               _isxdigit
                 _isdigit
               _tolower
           _memset
           _putUSBUSART
             _strlen (ARG)
           _sprintf
           _strcat
           _strcpy
           _strlen
           _utoa
             ___lwdiv
               ___wmul (ARG)
             ___lwmod
       _UsbDevice_MainTask *
         _CDCTxService
           _USBTransferOnePacket
         _USBDeviceInit
           _memset
         _USBDeviceTasks
           _USBCtrlEPAllowStatusStage
           _USBCtrlEPService
             _USBCtrlTrfInHandler
               _USBCtrlTrfTxService
             _USBCtrlTrfOutHandler
               _USBCtrlTrfRxService
                 _USBCtrlEPAllowStatusStage
             _USBCtrlTrfSetupHandler
               _USBCheckStdRequest
                 _USBStdFeatureReqHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                 _USBStdGetDscHandler
                 _USBStdGetStatusHandler
                 _USBStdSetCfgHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                   _memset
                 _USER_USB_CALLBACK_EVENT_HANDLER
                   _CDCInitEP
                     _USBEnableEndpoint
                       _USBConfigureEndpoint
                     _USBTransferOnePacket
                   _USBCheckCDCRequest
               _USBCtrlEPServiceComplete
                 _USBCtrlEPAllowDataStage
                   _USBCtrlTrfTxService
                 _USBCtrlEPAllowStatusStage
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   _USBTransferOnePacket
                 _USBCheckCDCRequest
             _memcpy
           _USBDeviceInit
             _memset
           _USBIncrement1msInternalTimers
           _USBStallHandler
           _USBSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USBWakeFromSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USER_USB_CALLBACK_EVENT_HANDLER
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBTransferOnePacket
             _USBCheckCDCRequest
       _Wdg_MainTask *
         _Mcu_ClearWdg
         _Mcu_SetWdgSts
   _SystemInit
     _InitSchedTimer
       _Tmr_TmrBConfig
         _TmrBInit
         _Tmr_StartTmr
         _Tmr_TmrBIrqSet
         _Tmr_TmrBPrSet
           ___lldiv
             ___lmul (ARG)
           ___lmul
     _Irq_InitIntController
     _Mcu_ConfigExtInt
     _Mcu_StartSystemPll
     _Pm_DsReleasePinControl
     _Tmr_RegisterTmr2IsrCallback

 _LowPriorityIsr (ROOT)
   _Tmr_Tmr2Isr
     Absolute function(Fake) *
     _Sch_SchmIntService *
       _OsAlrm_ProcessOsAlarms
         _I2cDummyTx *
           i1_I2cSlv_SendI2cMsg
             i1_GenerateEvt
         _OsAlrm_ClearOsAlarm *
         i1___wmul *
       _UpdateOsCounters
       _UpdateSchFlag

 _HighPriorityIsr (ROOT)
   _Mcu_Int0Isr
   _Mcu_Int1Isr
   _Rtcc_RtcIsr
   _Uart_Uart1RxIsr
     _Uart_MdmGsmGprsReadService
       i2_GenerateEvt

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMh            A80      0       0      35        0.0%
BIGRAMl            3FF      0     320      36       78.2%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100     C8      C8      26       78.1%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0      C8      24       78.1%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0      C8      22       78.1%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0      F6      20       96.1%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0      DC      18       85.9%
BITBANK5           100      0       0      15        0.0%
BANK5              100      1      F5      16       95.7%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0     100      12      100.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100     C8     100      10      100.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     C9     100       7      100.0%
BITBANK14           C0      0       0      33        0.0%
BANK14              C0      0       0      34        0.0%
BITBANK4            C0      0       0      13        0.0%
BANK4               C0      4      C0      14      100.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     50      83       5       81.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     22      41       1       69.1%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     9A3       8        0.0%
DATA                 0      0     CC3       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sat Mar 26 21:23:32 2022

                  __size_of_StringCompare 0052                  __end_of_UartSetConfigLow 57B2  
                              _USB_SD_Ptr FC1E                            ??_getSetupCall 0083  
               __size_of_Mdm_SetSmsFormat 0050                      __size_of_TurnOnModem 004C  
                         ??_UpdateSchFlag 0019                        _Mcu_StartSystemPll 65F2  
             Mdm_SetSmsFormat@UartMessage 0084                     ?_LedPulseStateMachine 008A  
                            ___awdiv@sign 0082                    I2c_ReadData@ReadPacket 0080  
                                      bsr 000FE0                    ??_LedBlinkStateMachine 008C  
                           _USBDeviceInit 26E4                       ___wmul@multiplicand 007F  
                        i1___wmul@product 001D                        __size_of_CDCInitEP 006C  
                      i2GenerateEvt@Event 0001                  InitSchedTimer@TmrBConfig 00A4  
                            __CFG_CP0$OFF 000000                OsAlrm_SetOsAlarm@OsAlarmId 0083  
    USER_USB_CALLBACK_EVENT_HANDLER@event 0089      USER_USB_CALLBACK_EVENT_HANDLER@pdata 008B  
                  I2c_ReadData@ReadStatus 0030                                       l202 2354  
                                     l203 235C                                       l205 23A4  
                                     l206 23CA                                       l208 23D2  
                                     l160 2298                                       l209 23F2  
                                     l161 216E                                       l162 22D6  
                                     l170 2236                                       l171 224C  
                                     l163 217A                                       l315 4698  
                                     l323 4664                                       l164 21BA  
                                     l316 460E                                       l420 4BA8  
                                     l500 4A58                                       l173 2250  
                                     l325 467E                                       l421 4BC8  
                                     l237 65FE                                       l174 2258  
                                     l166 21C8                                       l318 4618  
                                     l422 4BD4               __end_of_USBStdGetDscHandler 2FAE  
                                     l510 4A2A                                       l502 49EA  
                                     l175 2264                                       l167 21F0  
                                     l319 463E                                       l423 4BE0  
                                     l511 4A1A                                       l503 49DA  
                                     l192 23FC                                       l176 227A  
                                     l416 4BF4                                       l424 4BEC  
                                     l512 4A3E                                       l504 4A00  
                                     l520 5C66                                       l193 22DC  
                                     l169 2202                                       l417 4B9A  
                                     l441 1AA4                                       l513 4A1E  
                                     l505 49DE                                       l521 5C32  
                                     l194 2434                                       l418 4C22  
                                     l442 18AC                                       l514 4A24  
                                     l506 49E4                                       l530 3372  
                                     l195 22E8                                       l179 2286  
                                     l419 4BA2                                       l523 5C4C  
                                     l531 33D8                                       l196 2328  
                                     l700 5F16                                       l444 18F4  
                                     l532 339E                                       l445 193C  
                                     l541 659C                                       l198 2336  
                                     l446 1984                                       l199 234A  
                                     l631 2CC4                                       l447 19CC  
                                     l448 1A14                                       l528 33DE  
                                     l633 2D3C                                       l625 2C50  
                                     l449 1A5C                                       l529 33CA  
                                     l538 65A0                                       l546 3E62  
                                     l651 5BB6                                       l707 603A  
                                     l627 2C74                                       l715 5FAE  
                                     l539 6598                                       l547 3E7E  
                                     l660 5BDA                                       l652 5BB0  
                                     l716 5F84                                       l709 6054  
                                     l629 2C9C                                       l718 5F9C  
                                     l639 65E4                                       l832 633A  
                                     l844 3F36                                       l668 0C44  
                                     _BDT 000400                                       l790 661A  
                                     l855 50E2                                       l775 30D0  
                                     l864 4D26                                       l856 5088  
                                     l857 50FC                                       l698 5EFA  
                                     l858 50B8                                       l867 4D38  
                                     l982 2964                                       l983 2838  
                                     l985 285C                                       l987 2876  
                                     l988 28AA                                       l989 291C  
                                     l998 2940                   secondsAppTimer@isCyclic 008C  
                                     _PR2 000FCB                                       _PR4 000F77  
                                     _UIE 000F36                                       _UIR 000F62  
                i2GenerateEvt@EventStatus 0003                   __end_of_HighPriorityIsr 4562  
                          ??_Mdm_MainTask 00A2                       ?_Mcu_StartSystemPll 0001  
                              _USBSuspend 61C2                              ___awmod@sign 0082  
                    USBStdSetCfgHandler@i 0091                                       prod 000FF3  
                                     tosl 000FFD                                       wreg 000FE8  
            I2cSlv_ReceiveI2cMsg@RxBuffer 0080                            _USBDeviceTasks 1E62  
                            __CFG_IESO$ON 000000                            _USBDeviceState 00CC  
             Rtcc_AlarmConfig@AlarmConfig 007D              __end_of_I2cSlv_ReceiveI2cMsg 5F78  
                           ??_Mcu_Int0Isr 0001                             ??_Mcu_Int1Isr 0001  
                   ??_USBCtrlTrfRxService 007D                            ??_getsUSBUSART 0087  
                USBEnableEndpoint@options 0085                                _CheckModem 2836  
           findEmptySpot@positionInMemory 010F             ??_Tmr_RegisterTmr2IsrCallback 007F  
                                    l1010 5C7A           InitGprsNetwork@GprsNetInitState 01EA  
                                    l1100 1DD2                                      l1101 1E1E  
                                    l1013 5C94                                      l1110 5ABA  
                             RiSm@Counter 02DE                                      l1031 3790  
                                    l1111 5ACE                                      l1032 37CA  
                                    l1033 37F0                                      l1009 5CB0  
                                    l1121 5B26                                      l1027 3832  
                                    l1035 3818                                      l2003 5594  
                                    l1107 5AE0                                      l2100 33E6  
                                    l1220 0DE8                                      l1028 377E  
                                    l1052 2140                                      l1060 2112  
                                    l1108 5AA4                                      l2101 34BA  
                                    l1221 0E22                                      l1053 205A  
                                    l2005 559A                                      l2102 3404  
                                    l2110 46C0                                      l1222 0E96  
                                    l1070 2E62                                      l2111 4756  
                                    l1223 0E5E                                      l1071 2D5A  
                                    l1055 215A                                      l2104 3474  
                                    l2112 46D0                                      l1216 1078  
                                    l1056 208C                                      l1136 649C  
                                    l2032 58F6                                      l1152 6478  
                                    l3000 398C                                      l2113 46E2  
                                    l1233 1010                                      l1225 0F3E  
                                    l1217 0DD0                                      l1129 53F8  
                                    l1401 584C                                      l2130 62CE  
                                    l2114 46FC                                      l1250 05F4  
                                    l1234 1054                                      l1226 0F78  
                                    l1074 2D76                                      l1058 20DC  
                                    l2034 5902                                      l3002 39FE  
                                    l1402 580C                                      l2122 3C62  
                                    l2131 62BC                                      l1219 10B0  
                                    l1227 0FB8                                      l1075 2D8E  
                                    l1091 1E38                                      l2123 3BAA  
                                    l2211 4DB0                                      l2116 470A  
                                    l1252 0AB6                                      l1260 07F2  
                                    l1228 0FBC                                      l1092 1CB6  
                                    l1156 614C                                      l2140 590C  
                                    l3020 4FE4                                      l3012 4F8C  
                                    l1404 5846                                      l2133 62C2  
                                    l2109 472E                                      l2117 4718  
                                    l1261 082C                                      l1253 060C  
                                    l1229 1000                                      l3021 4FF2  
                                    l3013 4F9C                                      l2125 3BB8  
                                    l2134 62C8                                      l1270 096E  
                                    l1262 0856                                      l1254 0646  
                                    l1238 106E                                      l1078 2E00  
                                    l2142 591E                                      l1414 5F72  
                                    l1263 0890                                      l1255 0680  
                                    l1095 1CD2                                      l2143 5930  
                                    l3015 4FBA                                      l1264 08CA  
                                    l1256 06BA                                      l1096 1D88  
                                    l1440 3A28                                      l3016 4FB2  
                                    l3032 5152                                      l2400 01AE  
                                    l2208 4DC4                                      l1249 0A54  
                                    l1265 090E                                      l1257 073E  
                                    l1097 1DAC                                      l1409 602C  
                                    l3033 515C                                      l3025 5118  
                                    l2401 019C                                      l1601 272E  
                                    l2209 4D4A                                      l2090 2A36  
                                    l2250 6180                                      l1282 0A42  
                                    l1274 097E                                      l1258 06F6  
                                    l1442 3A86                                      l3034 516A  
                                    l3026 5124                                      l2251 616C  
                                    l1283 0A4A                                      l1275 09AA  
                                    l2139 5942                                      l1419 6588  
                                    l1443 3A9A                                      l3019 4FDA  
                                    l2411 0392                                      l1603 2756  
                                    l1291 5DA0                                      l1380 4064  
                                    l2244 5584                                      l3028 513A  
                                    l2412 0326                                      l1700 38AC  
                                    l1620 1ED8                                      l1612 1E8E  
                                    l1381 4086                                      l2245 5544  
                                    l1277 09C4                                      l1269 092A  
                                    l2237 5A42                                      l1437 3AC0  
                                    l1445 3AB8                                      l3029 5132  
                                    l2413 02B4                                      l1605 2792  
                                    l1621 1EE4                                      l1613 1E84  
                                    l2501 64D0                                      l1390 40E8  
                                    l3214 502C                                      l2086 2AA8  
                                    l1278 0A32                                      l2238 5A18  
                                    l1438 3A0A                                      l2414 0250  
                                    l2406 01D0                                      l1710 3130  
                                    l1630 1F78                                      l1614 1E82  
                                    l1391 40F4                                      l1383 40A8  
                                    l3215 5020                                      l2087 298A  
                                    l2239 5A3E                                      l1439 3AD6  
                                    l2431 045E                                      l2423 0402  
                                    l1703 3928                                      l1711 310A  
                                    l1623 1F0C                                      l2088 2ABE  
                                    l2432 0578                                      l2424 03D2  
                                    l2416 0304                                      l1704 38EE  
                                    l1640 5E3C                                      l1288 5DD2  
                                    l2600 135C                                      l2089 29B2  
                                    l2417 02C6                                      l1713 31A8  
                                    l1641 5E4C                                      l1633 1F9E  
                                    l1625 1F22                                      l1617 1EAA  
                                    l2601 1106                                      l1386 40B0  
                                    l3218 5060                                      l2434 04B4  
                                    l1714 318E                                      l1730 2F96  
                                    l1722 351A                                      l1810 36BE  
                                    l1626 1F2E                                      l1618 1EBA  
                                    l1379 4102                                      l3219 506E  
                                    l2099 349E                                      l2435 0478  
                                    l1731 2E92                                      l1811 36D2  
                                    l1635 1FC2                                      l1627 1F58  
                                    l1619 1EC2                                      l1388 40CC  
                                    l3180 5E92                                      l3500 3620  
                                    l1900 437E                                      l1724 358E  
                                    l1812 36D8                                      l1628 1F64  
                                    l2604 1324                                      l2620 123C  
              USBConfigureEndpoint@handle 0083                                      l2701 5D98  
                                    l1645 4202                                      l3501 3630  
                                    l2429 041E                                      l2453 15D6  
                                    l1733 2EA6                                      l1805 3738  
                                    l1637 1FE0                                      l2621 125C  
                                    l2605 1120                                      l2702 5D6C  
                                    l3174 6568                                      l2438 0524  
                                    l2454 1370                                      l1902 4396  
                                    l1822 1636                                      l1734 2F2E  
                                    l1750 42EA                                      l1814 36DE  
                                    l1806 36A8                                      l1670 48EE  
                                    l2614 11B2                                      l3271 599A  
                                    l1647 422C                                      l2439 0570  
                                    l3423 565E                                      l2471 15B0  
                                    l2463 13C6                                      l1903 43A4  
                                    l1831 17A2                                      l1823 163C  
                                    l1743 432C                                      l1815 36FC  
                                    l2615 11CC                                      l2607 119E  
                                    l3272 59A4                                      l2720 47BE  
                                    l2704 5D7E                                      l3184 456A  
                                    l3432 6208                                      l3504 368E  
                                    l3424 5658                                      l2456 1396  
                                    l1664 3CBC                                      l1904 43C2  
                                    l1736 2F36                                      l1744 42B2  
                                    l1816 3718                                      l1808 36B2  
                                    l1672 4908                                      l2632 12F2  
                                    l2624 126E                                      l2616 11E4  
                                    l2608 1142                                      l1649 4288  
                                    l1921 4AFA                                      l3281 5EE0  
                                    l3433 61FE                                      l2393 05D2  
                                    l2473 15D0                                      l2465 13E6  
                                    l1905 43DA                                      l1841 1828  
                                    l1833 176A                                      l1825 16AE  
                                    l1737 2F86                                      l1809 36B8  
                                    l1681 3276                                      l2481 6682  
                                    l2633 1312                                      l2625 1282  
                                    l2722 47EA                                      l3282 5EEA  
                                    l3186 45A6                                      l3530 62AC  
                                    l2394 00E2                                      l3426 5678  
                                    l2458 13B2                                      l1834 1788  
                                    l1682 321E                                      l2618 1226  
                                    l3267 597A                                      l2723 47FA  
                                    l3187 45E8                                      l3427 566E  
                                    l2467 1406                                      l1843 187E  
                                    l1827 16F6                                      l1739 2F8E  
                                    l1747 4342                                      l3291 5D42  
                                    l1771 4B82                                      l3268 5972  
                                    l2804 534C                                      l2580 44B0  
                                    l1924 4AA8                                      l3540 6524  
                                    l1676 49A2                                      l1836 17EA  
                                    l1828 16F8                                      l1748 42C4  
                                    l3292 5D20                                      l1772 4B7C  
                                    l2628 12AC                                      l1925 4AD4  
                                    l3277 5EC8                                      l2397 0152  
                                    l2821 3B06                                      l2469 1546  
                                    l1837 17F6                                      l1829 1714  
                                    l1749 42CA                                      l1757 5E24  
                                    l1765 60DC                                      l2629 12CC  
                                    l2806 5386                                      l1926 4AAE  
                                    l3278 5EC0                                      l3470 1BCC  
                                    l3454 1B14                                      l2398 01E2  
                                    l3438 5FC8                                      l1790 4158  
                                    l1782 540E                                      l1838 1872  
                                    l1686 32A0                                      l1758 5E22  
                                    l1766 60DA                                      l2478 6688  
                                    l2807 5390                                      l3535 63BA  
                                    l3471 1C38                                      l3551 66E2  
                                    l2823 3B4E                                      l3439 5FC2  
                                    l1951 2AF4                                      l1695 3878  
                                    l1791 415E                                      l2576 4468  
                                    l3464 1B90                                      l3456 1B2C  
                                    l2824 3B30                                      l2816 3AE6  
                                    l1960 2B5E                                      l1792 41DA  
                                    l1784 545C                                      l2841 5714  
                                    l3473 1C5E                                      l3465 1BA0  
                                    l3297 6272                                      l2817 3B00  
                                    l1953 2B28                                      l1697 3882  
                                    l1793 41A0                                      l2842 5728  
                                    l2690 4F4E                                      l2674 4CB2  
                                    l2578 4492                                      l2762 5B7E  
                                    l3474 1C98                                      l3458 1B80  
                                    l3298 6260                                      l2818 3B62  
                                    l2498 64D6                                      l2691 4F54  
                                    l2675 4C62                                      l3467 1BBA  
                                    l3547 60A4                                      l2827 3B82  
                                    l1963 2BD8                                      l1699 38E6  
                                    l1795 41C0                                      l2499 64C8  
                                    l2684 4F5E                                      l2668 4C96  
                                    l2676 4C76                                      l2764 5B8A  
                                    l3492 35C8                                      l1964 2BA0  
                                    l1956 2B3A                                      l2685 4EFC  
                                    l2677 4C8E                                      l2669 4C30  
                                    l3493 35C2                                      l1957 2B3E  
                                    l1949 2AE6                                      l2758 65CC  
                                    l3478 66FA                                      l1990 6438  
                                    l2687 4F42                                      l3495 35F0  
                                    l1967 2BF2                                      l1959 2B96  
              __size_of_Mdm_IsSmsReceived 0024                                      l1968 2BF6  
                                    l1992 643E                                _Led1OutSts 01FA  
                                    l2785 54F0                                      l2689 4F72  
                                    l2698 5D84                                      l2794 4E80  
                                    l3498 3650                                      l2787 5522  
                                    l2699 5D5E                                      l2795 4EE6  
                                    l3499 3608                                      l1899 43E4  
                                    l2788 5528                                      l2797 4EE0  
                                    l1997 55A0                                      l1989 6448  
                                    l2993 3938                                      l2994 3932  
                                    l2996 397A                                      l2999 39CA  
                                    STR_1 FFE6                                      STR_2 FF75  
                                    STR_3 FFDF                                      STR_4 FFC2  
                                    STR_5 FFCE                                      STR_6 FFF0  
                                    STR_7 FFEB                                      STR_8 FE89  
                                    STR_9 FEBD                                _Led2OutSts 01F8  
                              _Led3OutSts 01F6                     ??_USBCtrlTrfTxService 007D  
                                    _UCFG 000F39                                      _UEP0 000F26  
                                    _UEP1 000F27                                      _UEIE 000F37  
                __size_of_Uart_Uart1RxIsr 0010                                      u8765 5C3C  
                                    u8766 5C3E                                      u8775 5C48  
                                    u8776 5C4A                                      _UEIR 000F63  
                                    _UCON 000F65                                      u8785 5C56  
                                    u8786 5C58                                      u8795 5C62  
                                    u8796 5C64                                _AlarmEvent 01F5  
                          ?_StopCondition 0001                           ??_Mdm_DrvMainFn 0081  
                     _OsTmr_OsTickCounter 031C                             __CFG_FCMEN$ON 000000  
                      _InitModemInterface 686E                  secondsAppTimer@isExpired 0090  
                         _CDCDataInHandle 01D1              I2c_ReadData@TentativeCounter 0031  
             Led_SetLedBlinkTime@OnTimeMs 007D              findEmptySpot@currentPosition 00E1  
  USBStdFeatureReqHandler@current_ep_data 0094                                      _pDst 02D4  
                    _NewStringMdmTerminal 003A                                      _atoi 3930  
                                    _main 6830                           ??_Mdm_IsRinging 0081  
                                    _itoa 5E6C                          ?_SetUartBaudRate 0096  
                 __end_of_GetCallerNumber 6158                                      fsr0h 000FEA  
                                    fsr1h 000FE2                                      indf0 000FEF  
                                    fsr2h 000FDA                                      fsr0l 000FE9  
                                    indf1 000FE7                               _BaudRateGen 0314  
                                    indf2 000FDF                                      fsr1l 000FE1  
                                    fsr2l 000FD9                                      btemp 0042  
                                    _utoa 4562                                      _xtoi 35B2  
                           __CFG_T1DIG$ON 000000                    _Pm_DsReleasePinControl 6876  
             __size_of_Sch_SchmIntService 000E                         _Rtcc_GetRtccValue 4B94  
             I2cSlv_SendI2cMsg@DataLenght 0083                      ??_Mcu_StartSystemPll 007D  
             __end_of_Uart_WriteStringLen 5FB8                                      prodh 000FF4  
                                    prodl 000FF3                                      start 00CC  
                     __end_of_Eeprom_Read 5906   Uart_MdmGsmGprsReadService@LocalRxBuffer 0AC8  
                       ??_secondsAppTimer 008D                       __end_of_GenerateEvt 6716  
                           _isNumberValid 54CA                            ?_Mcu_SetWdgSts 0001  
                          ??_Mcu_ClearWdg 007D          isNumberInMemory@positionInMemory 0111  
              __end_of_USBCheckStdRequest 377C                           _Rtcm_SystemDate 0300  
                  ??_USBCtrlTrfOutHandler 007F                  __end_of_GetOsTickCounter 67B8  
                      ?_Rtcc_GetRtccValue 0001                       ?_InitModemInterface 0001  
                      StringCompare@Index 0086                            _GetElapsedTime 3ED2  
           I2cSlv_ReceiveI2cMsg@SlaveAddr 0082                              ___param_bank 000000  
               ??_USBStdFeatureReqHandler 0091                       StringCopy@SourceStr 007D  
             __end_of_OsAlrm_ClearOsAlarm 580A                  Eeprom_Write@SlaveAddress 008C  
                                   EECON2 000FA7                InitGprsNetwork@UartMessage 0100  
                ??_USBStdGetStatusHandler 007D                waitSetupCall@isCallArrived 0093  
                     __size_of_I2cDummyTx 001C                          ??_Mdm_GetSmsData 0089  
                          ?_USBDeviceInit 0001                             __CFG_PLLDIV$2 000000  
                        _Uart_WriteString 6034                       ??_Rtcc_GetRtccValue 007D  
                         __end_of_Welcome FDAB                         ?_UpdateOsCounters 0001  
                 Uart_ClearRxBuffer@Index 007D                                _GetSmsText 00DB  
                                   l14034 4BAE                                     l14160 61A0  
                                   l12632 3882                                     l14208 2726  
                                   l14236 278A                                     l11862 65FE  
                                   l13480 5D20                                     l15170 0FB0  
                                   l12594 6260                                     l12828 3512  
                                   l13646 39C6                                     l15336 09A4  
                                   l16084 51F0                                     l14822 33DE  
                                   l14648 54E8                                     l16096 2FB8  
                                   l16450 55BA                                     l13796 47FA  
                                   l16452 55EA                                     l15488 1F70  
                                   l14970 210C                                     l14948 2052  
                                   ?_atoi 0083                                     ?_main 0001  
                                   ?_itoa 0093                           __end_of___awdiv 4FFC  
                                   STR_10 FF4B                                     STR_11 FF59  
                                   STR_12 FF9D                                     STR_20 FF3D  
                                   STR_13 FF67                                     STR_21 FE5F  
                                   STR_30 FF2F                                     STR_14 FEA8  
                                   STR_31 FEFA                                     STR_15 FEE6  
                                   STR_23 FED2                                     STR_24 FFF5  
                                   STR_32 FFAA                                     STR_16 FF1E  
                                   STR_25 FFF5                                     STR_33 FFD8  
                                   STR_17 FF83                                     STR_26 FE86  
                                   STR_18 FF90                                     STR_27 FF0D  
                                   STR_28 FFB6                           __end_of___awmod 5174  
                                   STR_29 FF2F         __size_of_USBCtrlEPServiceComplete 00FE  
                         __end_of___lldiv 5080                                     ?_utoa 008A  
                                   u13010 4FBE                                     u12210 63B6  
                                   u11340 5BAC                                     u12300 6088  
                                   u11500 3546                           ___awdiv@divisor 007F  
                                   u12230 629C                                     u11270 38D4  
                                   u12400 2C98                                     u12320 6094  
                                   u13105 5C00                                     u12170 5030  
                                   u11290 3916                    __end_of_USBDeviceTasks 1FEA  
                                   u10475 637C                                     u11540 2EF8  
                                   u10476 637E                                     u11277 38CA  
                                   u10485 6388                                     u14110 4C40  
                                   u13070 513E                                     u11550 2F28  
                                   u10486 638A                                     u10495 6394  
                                   ?_xtoi 0083                                     u14040 3B9A  
                                   u10496 6396                                     u12345 677C  
                                   u13305 0D22                                     u13225 673C  
                                   u11297 390C                                     u12346 677E  
                                   u12450 557C                                     u13226 673E  
                                   u11570 2F7A                                     u11547 2EEE  
                                   u13420 27EE                                     u13245 0AF4  
                                   u11557 2F1E                                     u14205 6790  
                                   u11910 5F24                                     u14230 4676  
                                   u14310 28D2                                     u14206 6792  
                                   u13255 0B14                                     u11840 597E  
                                   u14240 4690                                     u13360 5A4E  
                                   u12800 1B1C                                     u12457 5572  
                                   u13265 0B9E                                     u14401 2016  
                                   u11577 2F70                                     u11930 6062  
                                   u14330 28E6                                     u14090 552C  
                                   u14411 2028                                     u15300 2BC8  
                                   u13285 0C78                                     u12590 4A84  
                                   u11870 5ECC                                     u12830 1B56  
                                   u15310 2BE0                                     u11790 180C  
                                   u13390 274A                                     u13295 0C98  
                                   u14265 6726                                     u14266 672A  
                                   u12850 1B66                 ?_USBCtrlEPServiceComplete 0001  
                                   u14195 51D8                                     u15307 2BBE  
                                   u15190 1FE6                                     u14391 2004  
                                   u15351 54C0                                     u14480 2160  
                                   u13920 04BE                                     u15280 2B86  
                                   u15701 4DBA                                     u15710 10C4  
                                   u15287 2B7C                                     u13980 56A0  
                                   u13987 5696                                     u15691 4DA2  
                         __end_of___lwdiv 59AE                                     u15948 5222  
                                   u15949 5250                                     u15988 3084  
                                   u15989 30B2                           __end_of___lwmod 5EF4  
               TurnOnModem@TurnOnMdmState 01F4                        ??_UpdateOsCounters 0019  
                                   i1l742 25A6                                     i1l747 26E2  
                                   i2l680 3DFA                                     i2l681 3D4A  
                                   i2l690 3D94                                     i2l682 3D58  
                                   i2l686 3D7A                                     i2l688 3DEC  
                                   i2l689 3DB4                                     _UADDR 000F38  
                         ___awdiv@counter 0081                                     _AlCfg 03AB  
            Led_SetLedBlinkTime@OffTimeMs 007F                   I2cSendMsgSm@I2cComState 01E6  
                                   _USTAT 000F64                   __end_of_LedStateMachine 475C  
      __size_of_USBCtrlEPAllowStatusStage 00CC                       ___lmul@multiplicand 0081  
                    ??_InitModemInterface 007D                                     _RxLen 00C2  
         __end_of_USBCtrlEPAllowDataStage 493C                             _StringCompare 5A00  
                                   _sd000 FE5B                                     _sd001 FE14  
                                   _sd002 FDEE            ?_USBIncrement1msInternalTimers 0001  
             Rtcc_GetRtccValue@RtccPtrVal 007E                      __end_of_Led_MainTask 3C74  
                             _ApnLenLocal 01EE                    ??_OsTmr_GetTimerStatus 0097  
            LedPulseStateMachine@LedPulse 008A                           __end_of_initFsm 5D9E  
                         __end_of_isalpha 62B6                           __end_of_isdigit 6570  
               saveNumberInMemory@address 0090                                     atoi@a 0088  
                                   atoi@s 0083                    Eeprom_Write@DataLength 0089  
                             _ClearBuffer 6158                           __end_of_isspace 63C2  
             I2cSlv_QueryI2cData@RxBuffer 00A5                I2c_WriteData@I2cWriteState 0037  
               Rtcc_GetRtccValue@RegValue 0080                   __size_of_Rtcc_RtcConfig 00A0  
                         __end_of_isupper 652C                                     pclath 000FFA  
                                   tablat 000FF5                          __end_ofi1___wmul 6436  
               __end_of_Rtcc_GetRtccValue 4C28               I2cSlv_QueryI2cData@TxBuffer 00A2  
                                   plusw0 000FEB                                     plusw1 000FE3  
                                   plusw2 000FDB                         __end_of_CDCInitEP 52C2  
                                   utoa@c 0092                             ??_SetBaudRate 009E  
                                   utoa@v 0090                                     status 000FD8  
                         _I2cSlv_MainTask 580A                 Rtcc_GetRtccValue@RetValue 007F  
                     i1___wmul@multiplier 0019                          parseCommand@text 0088  
                                   wtemp6 0043                           __end_of_sprintf 3BA8  
                         __end_of_tolower 66E6                       __end_of_Mcu_Int0Isr 689E  
                     __end_of_Mcu_Int1Isr 689A                                     xtoi@c 008A  
                                   xtoi@s 0083                           __end_of_toupper 66FE  
                  __end_of_GetElapsedTime 3F9A                     __end_of_UartSetConfig 5702  
                    __end_of_Eeprom_Write 5A00                    __size_of_initGprsModem 0090  
                          ?_isNumberValid 007D               Rtcc_SetRtccValue@RtccPtrVal 0088  
                Eeprom_Read@MemoryAddress 00AC                     __end_of_Term_MainTask 669A  
                 LedStateMachine@LedBlink 0093                          __end_of_GetSmsSm 2E80  
                 __CFG_DSWDTOSC$INTOSCREF 000000                           putUSBUSART@data 0083  
            __size_of_USBStdSetCfgHandler 00E6                   OsTmr_StartTimer@Timeout 0083  
                    __end_of_I2cSetConfig 636E                            _InitSchedTimer 62E6  
                         __initialization 2438               __size_of_saveNumberInMemory 001A  
                        __end_of_MdmCntSm 46B4                      __end_of_I2c_ReadData 2438  
                 Rtcc_RtcConfig@RtcConfig 007E                      __end_of_I2cSendMsgSm 4126  
                 LedStateMachine@LedPulse 0095                                _MyApp_Task 10B6  
                            __end_of_atoi 3A08                              __end_of_main 683C  
                     StringCompare@Result 0085                              __end_of_itoa 5EB0  
                  ??_LedPulseStateMachine 008D                     _control_signal_bitmap 01DE  
                            __end_of_utoa 460C                              __end_of_xtoi 3698  
                __end_of_Rtcm_SetRtccDate 58B2                   __size_of_Rtcc_UnlockRtc 0010  
                        ??_StartCondition 007D                          __end_of_ReadByte 685A  
            __size_of_I2cSlv_QueryI2cData 00D2                      Term_MainSm@TermDelay 03D4  
                          __CFG_OSC$HSPLL 000000                          __end_of_MsgReady FE49  
               __size_of_USBCtrlEPService 0094                                    ??_atoi 0085  
                                  ??_main 00B0              __size_of_Uart_InitUartModule 030C  
                                  ??_itoa 0099                                    ??_utoa 0090  
                                  ??_xtoi 0085                             __activetblptr 000002  
                         ?_USBDeviceTasks 0001                          __end_of_TmrBInit 4A6A  
                           ?_initPreamble 007D                                _ReceiveEvt 6314  
        Uart_WriteStringLen@StringToWrite 0080                               ?_USBSuspend 0001  
                       ?_Mcu_ConfigExtInt 0001                          ?_HighPriorityIsr 0001  
                      _Mdm_RequestSmsData 67D8                            ?_StringCompare 007D  
                        __end_of_Terminal 05EC                      initFsm@isInitialized 0103  
            isNumberInMemory@searchFailed 010F                             ?_SetAckStatus 0001  
                       ?_Led_SetLedStatus 007D                                _OsTmr_Wait 5080  
                            _cdc_mem_type 01DF                        ??_Mcu_ConfigExtInt 007D  
                       CheckModem@Timeout 03F5                           ReceiveEvt@Event 007D  
                             ?_CheckModem 0001                          _CDCDataOutHandle 00BC  
      __size_of_initMemorizedNumbersCount 001A                           ??_StopCondition 007D  
                      ??_Led_SetLedStatus 007E                          ___awdiv@dividend 007D  
      __end_of_Uart_MdmGsmGprsReadService 3E0A                _Uart_MdmGsmGprsReadService 3D40  
              __end_of_UsbDevice_MainTask 645A                           getsUSBUSART@len 0086  
                    __end_of_getSetupCall 65D2                       ?_Mdm_RequestSmsData 0001  
                   __end_of_UartWriteByte 65F2                          ??_LowPriorityIsr 0068  
                                  _DSGPR0 000F4E                                    _DSGPR1 000F4F  
                             _Eeprom_Read 58B2        Irq_InitIntController@IntPriorityEn 007F  
                   __size_of_CDCTxService 0146                                    i1l1409 611C  
                             _GenerateEvt 66FE                            __CFG_WDTEN$OFF 000000  
                                  _RCREG1 000FAF                                    _RCREG2 000FAA  
                                  _RCSTA1 000FAC                                    _RCSTA2 000F9C  
               Uart_Uart1RxIsr@UartRxData 002B                             CDCTxService@i 0084  
                                  _RTCCAL 000F3E                                    _SPBRG1 000FB0  
                                  _SPBRG2 000FAB                                    _RPINR1 000EE7  
                              _TaskNumber FC30                            __CFG_WPCFG$OFF 000000  
                                  _TXREG1 000FAE                                    _TXREG2 000FA9  
                        ?_GetCallerNumber 0083                                    _TXSTA1 000FAD  
                                  _TXSTA2 000FA8                               _ConnTimeout 02F5  
                    Mdm_IsSmsReceived@Ret 0081                  __end_of_Rtcc_AlarmConfig 532E  
                         ??_Mcu_SetWdgSts 007D                    __end_of_InitSchedTimer 6314  
                          __CFG_WPDIS$OFF 000000                           ?_GetElapsedTime 0081  
                          _EnableReceiver 688E                                _UartConfig 0328  
                    __end_of_Mdm_MainTask 5AF2                         ??_Uart_Uart1RxIsr 0007  
                       _shortPacketStatus 00CB                             ??_Term_MainSm 00A7  
                                  _Relay1 01D9                                    _Relay2 01D8  
                                  _Relay3 01D7                                    _Relay4 02EB  
                          __CFG_XINST$OFF 000000             __size_of_I2cSlv_I2cReadMsgSts 0022  
                __end_of_MdmHttp_MainTask 5DE4                                    _SmsLen 00D2  
                         USBDeviceTasks@i 0098               USBStdFeatureReqHandler@pUEP 0092  
                USBTransferOnePacket@data 007E                USBCtrlTrfInHandler@lastDTS 007E  
                           ??_RtccIrqInit 007D                  ??_OsAlrm_ProcessOsAlarms 0060  
                         ??_USBDeviceInit 0085                       __end_of_SetBaudRate 5C2C  
                                  ___lmul 5702                      _I2cSlv_ReceiveI2cMsg 5F38  
                      TurnOnModem@Counter 02D8                              ?_putUSBUSART 0083  
                                  ___wmul 63C2                                 ??___awdiv 0081  
          GetElapsedTime@CurrentTimestamp 0091                            __CFG_STVREN$ON 000000  
                        _Mdm_SetSmsFormat 5AF2                                 ??___awmod 0081  
                      __size_of_SendSmsSm 01B8                         ?_Rtcm_GetRtccDate 0081  
                     _Led_SetLedBlinkTime 5906                                 ??___lldiv 0091  
                    __end_of_getsUSBUSART 4B00                      ??_Mdm_RequestSmsData 0080  
                               ??___lwdiv 0087                    Tmr_TmrBPrSet@IntFreqHz 0096  
                               ??___lwmod 0081                         _USBEnableEndpoint 5E28  
         __size_of_USBStdGetStatusHandler 00B2                             ??_Rtcc_RtcIsr 0001  
                            ReadByte@Byte 007D                                    _memcpy 5D0E  
                  __size_of_HttpGetMethod 04D0                                    _memset 6256  
                                  clear_0 24F0                                    clear_1 2502  
                                  clear_2 250E                                    clear_3 251A  
                                  clear_4 2526                                    clear_5 2532  
                                  clear_6 253E                                    clear_7 254A  
                                  clear_8 2556                                    clear_9 2562  
                       parseCommand@F9017 FC2B                         parseCommand@F9019 FC28  
                        ___awdiv@quotient 0083                        ??_Rtcm_GetRtccDate 0089  
                         ___awmod@divisor 007F                        _ExtInt0IsrCallback 02E2  
                       ?_OsTmr_StartTimer 0081                                _PostMethod 01EB  
                         ___awmod@counter 0081                       UartWriteByte@Module 007E  
                     GetSmsSm@GetSmsState 01F1                        ?_USBEnableEndpoint 0085  
                          ??_initPreamble 007F                                    _strcat 564E  
                                  _strcpy 61F4                                    _strlen 5FB8  
                                  _strtol 1AD4                          ClearBuffer@Index 0081  
           __size_of_USBTransferOnePacket 00BE                          __end_of_isxdigit 60AE  
                HttpGetMethod@UartMessage 0100                                 ??_initFsm 00B0  
                           _initGprsModem 4C28                        ??_OsTmr_StartTimer 0087  
                                  itoa@cp 0099                                 ??_isalpha 0080  
                               ??_isdigit 007D                            ??_SetAckStatus 007D  
                     ModemEvtParser@F9110 03C1                       ModemEvtParser@F9112 03B7  
                     ModemEvtParser@F9106 03CB                       ModemEvtParser@F9108 03C6  
                            _CDCTxService 2AD0                       MdmCntSm@MdmCntState 002D  
              Mdm_SetSmsFormat@TextFormat 0098                          ?_LedStateMachine 008F  
                            __mediumconst FC10                                 ??_isspace 007D  
                  __size_of_CheckTxStatus 000A                              _callerNumber 04CC  
                                  tblptrh 000FF7                                 ??_isupper 007D  
                                  tblptrl 000FF6                                    tblptru 000FF8  
                    __end_of_Mcu_ClearWdg 6886                       ??_USBEnableEndpoint 0086  
                             _MdmStsReady 0039                   __end_of_I2cSlv_MainTask 585E  
                         _InitGprsNetwork 0DC8                             ??_Tmr_Tmr2Isr 0023  
                            ??_I2cDummyTx 0021                 OsTmr_GetTimerStatus@Timer 0095  
                             _Mcu_Int0Isr 689A                               _Mcu_Int1Isr 6896  
                    ?_Led_SetLedBlinkTime 007D                                 ??_sprintf 0083  
                               ??_tolower 007D                         parseCommand@state 0090  
                  __size_of_ScheduleTasks 0126                               _CtrlTrfData 000438  
                               ??_toupper 007D                       ModemEvtParser@Match 00A0  
                    _controlTransferState 00CA         __end_of_initMemorizedNumbersCount 66CE  
                   __end_ofi1_GenerateEvt 6758                   Eeprom_Read@SlaveAddress 00AD  
                   __end_of_Rtcm_MainTask 4DD6                __size_of_Rtcc_GetRtccValue 0094  
                           ?_parseCommand 0088                        _ExtInt1IsrCallback 02E0  
                              __accesstop 0060                             ?_Wdg_MainTask 0001  
                 __end_of__initialization 2580                        Eeprom_Read@ReadSts 00AE  
                  Tmr_TmrBPrSet@Prescaler 0098             findEmptySpot@searchInProgress 010E  
                            __pbssBIGRAMl 0AC8                           ??_isNumberValid 007F  
                  __end_of_EnableReceiver 6892                        __size_of_WriteByte 000A  
                 __size_of_ModemEvtParser 0182               Uart_WriteConstString@Module 0082  
               Uart_WriteStringLen@Module 0084                             ___rparam_used 000001  
                             _ReadAddress 01FC                  __size_of_USBStallHandler 0044  
                         ?_InitSchedTimer 0001                __end_of_UartTxBufferStatus 5BDE  
         I2cSlv_QueryI2cData@TimeoutTimer 033D                      Terminal@FormatOption 02ED  
                         __CFG_IOL1WAY$ON 000000                                _StringCopy 5530  
                          __pcstackBANK10 0A00                     I2cDummyTx@DummyBuffer 01FD  
                    __CFG_WPEND$PAGE_WPFP 000000                       __size_of_USBSuspend 0032  
                     initFsm@currentState 01D3  Uart_MdmGsmGprsReadService@ServiceCounter 0005  
                         MdmCntSm@Counter 02DC                     ?_I2cSlv_ReceiveI2cMsg 0080  
                          __pcstackCOMRAM 0001                 __end_of_USBEnableEndpoint 5E6C  
                             _InitNetwork 00D9                               ?_MyApp_Task 0001  
                LedStateMachine@LedOutSts 0098                             __end_of_sd000 FE5F  
                           __end_of_sd001 FE32                             __end_of_sd002 FE14  
                            __pidataBANK0 689E                              __pidataBANK1 68A0  
                            __pidataBANK2 6816                              __pidataBANK3 5CC4  
                            __pidataBANK4 6823                              __pidataBANK5 5A52  
               __end_ofparseCommand@F9017 FC2E                 __end_ofparseCommand@F9019 FC2B  
                       ?_UartSetConfigLow 0001          __size_of_USBCtrlEPAllowDataStage 009E  
                   _Uart_WriteConstString 5EF4          isNumberInMemory@searchInProgress 0110  
                     __size_of_CheckModem 0152                __end_of_Uart_ClearRxBuffer 61C2  
           __size_of_USBConfigureEndpoint 0098               parseCommand@deleteNumberCmd 008D  
                __size_of_InitializeTasks 0070                        __end_of_I2cDummyTx 6666  
             __end_of_USBCtrlTrfInHandler 41E8                           __CFG_DSWDTPS$G2 000000  
                    StringCompare@String1 007D                      StringCompare@String2 007F  
                      ??_UartSetConfigLow 007D                 __size_of_isNumberInMemory 008A  
                     __end_of_Term_MainSm 1612                 initGprsModem@currentState 01D5  
                   LedStateMachine@LedOut 0091                     LedStateMachine@LedSts 008F  
                      LedStateMachine@Led 0099                                 ?i1___wmul 0019  
                          ?_initGprsModem 0001                       __end_of_RtccIrqInit 6742  
                   __size_of_Led_MainTask 00CC                           ??_StringCompare 0083  
           I2cSlv_QueryI2cData@I2cOpState 01E5                               ?_ReceiveEvt 007D  
                             _NewSmsEvent 0040                                _SystemInit 6226  
                              _cdc_notice 0459                     __end_of_Tmr_TmrBPrSet 33E4  
                   __end_of_waitSetupCall 5B90                       __end_of_Rtcc_RtcIsr 6896  
                              _cdc_rx_len 00C6                         __end_of_MsgFormat FD22  
                              _cdc_tx_len 00C4                       Terminal@UsbRxBuffer 0A00  
                             ?_OsTmr_Wait 009B                     ??_Led_SetLedBlinkTime 0081  
                     Terminal@UsbTxBuffer 0200                     _memorizedNumbersCount 0038  
                               ?_GetSmsSm 0001               __end_ofi1_I2cSlv_SendI2cMsg 6122  
                ??_USBCtrlTrfSetupHandler 0097                   _USBTicksSinceSuspendEnd 01E0  
                          ClearBuffer@Len 007F                           _secondsAppTimer 475C  
                               ?_MdmCntSm 0001                     _Irq_InitIntController 636E  
                  _USBStdGetStatusHandler 42A6                         __end_of_SendSmsSm 1E62  
     Mcu_StartSystemPll@PllStartupCounter 007D                            _GprsNetworkSts 01ED  
                          _Rtcc_RtcConfig 47FE                     __size_of_Eeprom_Write 0052  
                              __pbssBANK0 00B0                                __pbssBANK1 01C9  
                          ??_parseCommand 008A                                __pbssBANK2 02C8  
                              __pbssBANK3 0300                                __pbssBANK4 0440  
                              __pbssBANK5 0500                                __pbssBANK6 0600  
                              __pbssBANK7 0700                                __pbssBANK8 0800  
                              __pbssBANK9 0900                             _HttpGetMethod 05EC  
                 ?_Pm_DsReleasePinControl 0001                               _MessageText 0572  
                          ??_Wdg_MainTask 007E                     __end_ofi2_GenerateEvt 676E  
             isNumberInMemory@phoneNumber 0100                  __end_of_Uart_WriteString 6072  
            getSetupCall@isCalledReceived 0083                                 ?_ReadByte 0001  
                       MyApp_Task@Options 0001                     __size_of_I2cSetConfig 002C  
                         ?_EnableReceiver 0001                     __size_of_I2c_ReadData 015E  
                   __size_of_I2cSendMsgSm 00C4                       __end_of_Tmr_Tmr2Isr 64C6  
                             _SetBaudRate 5BDE                     __end_of_findEmptySpot 5396  
               initGprsModem@modemCounter 03B5               __size_of_USBWakeFromSuspend 003A  
              SendSmsSm@SendSms_NextState 01EF                               _pBDTEntryIn 00B6  
        UartTxBufferStatus@TxBufferStatus 007F          __end_of_USBCtrlEPServiceComplete 32F6  
                               ?_TmrBInit 007D                             _CheckTxStatus 685A  
                           ??_TurnOnModem 0080                   __size_of_Tmr_TmrBConfig 00C8  
             __size_of_USBCheckCDCRequest 00B0                  Uart_WriteStringLen@Index 0083  
                       ?_GetOsTickCounter 007D                   __size_of_Tmr_TmrBIrqSet 004C  
                    USBCtrlTrfRxService@i 007D                       MyApp_Task@cmpString 0122  
                               ?_Terminal 0001                      Eeprom_Write@WriteSts 008A  
                                 ?___lmul 007D                              _Led_MainTask 3BA8  
                          _Rtcc_UnlockRtc 67B8                              _I2cBusStatus 01E7  
                                 ?___wmul 007D           __size_of_OsAlrm_ProcessOsAlarms 0156  
                           _ScheduleTasks 2FAE                 Uart_InitUartModule@Module 00A1  
                   __end_of_I2c_WriteData 22DA                        ??_GetOsTickCounter 0081  
                                 ?_memcpy 007D                                   ?_memset 007D  
                          ___lmul@product 0085                                _device_dsc FE49  
                 __size_of_CheckAckStatus 000A                          _USBCtrlEPService 4B00  
                   __end_of_UpdateSchFlag 664A                              _EepromBuffer 04BD  
                              _ep_data_in 02D1                           _I2cWriteDataEvt 00D7  
                i1GenerateEvt@EventStatus 001B                             ?_Rtcc_LockRtc 0001  
                                 ?_strcat 007D                                ??i1___wmul 001D  
                 __end_of_InitGprsNetwork 10B6                                   ?_strcpy 007D  
                                 ?_strlen 007D                                   ?_strtol 0089  
           __size_of_LedBlinkStateMachine 0148               __end_of_USBCtrlTrfRxService 31F8  
                       __end_of_WriteByte 6850                        _USBCheckStdRequest 3698  
                       _configDescriptor1 FDAB                       Wdg_MainTask@Options 0001  
                             _PhoneNumber 04A9                              _Eeprom_Write 59AE  
                   __size_of_getSetupCall 0020               __end_of_USBCtrlTrfTxService 3930  
                       triggerRelay@F9025 03D2                       _USBStdSetCfgHandler 34CC  
                 __size_of_ConfigureModem 00DC                    I2cSlv_QueryI2cData@Ret 01E4  
               Eeprom_Write@MemoryAddress 008B                           __CFG_WDTPS$2048 000000  
                            _I2cSetConfig 6342                                   _SPBRGH1 000F7F  
                                 _SPBRGH2 000F7D                    __end_of_Rtcc_RtcConfig 489E  
                                 _SSP2ADD 000F74                                ??_GetSmsSm 0087  
                                 _SSP2BUF 000F75                              _I2c_ReadData 22DA  
                                 _RTCVALH 000F99                                   _RTCVALL 000F98  
                            _I2cSendMsgSm 4062                          ?_I2cSlv_MainTask 0001  
                      GsmGprsTerminal@SMS 01DC            __end_of_Pm_DsReleasePinControl 687C  
                     ?_USBCheckStdRequest 0001                     Mdm_SetSmsFormat@Index 0083  
            __size_of_USBStdGetDscHandler 012E                                ??_MdmCntSm 0081  
                     __size_of_MyApp_Task 02B8                                   _UIEbits 000F36  
                          ?_HttpGetMethod 009B                              ?_ClearBuffer 007D  
                    _MdmOnOffPulseRequest 00E0                                   _UIRbits 000F62  
                   CheckModem@CheckMdmSts 0029                 __size_of_UpdateOsCounters 0010  
                                 _Led1Sts 01FB                       _I2cSlv_QueryI2cData 3A08  
                                 _Led2Sts 01F9                                   _Led3Sts 01F7  
              __end_of_Sch_SchmIntService 6816                     __size_of_Mdm_MainTask 0050  
           ModemEvtParser@CallReadyString 0088                             _cdc_trf_state 00C5  
                              ??_ReadByte 007D                       _Uart_InitUartModule 0ABC  
                   __end_of_Mdm_DrvMainFn 6882                      __end_of_initPreamble 6410  
                  initEeprom@currentState 01D4                          _ComChecCompleted 002A  
                          ?_CheckTxStatus 0001               __size_of_Mcu_StartSystemPll 001E  
                                 _pCDCDst 02C8                     __end_of_Mdm_IsRinging 647E  
                   InitGprsNetwork@ApnLen 009D                                   _pCDCSrc 02CB  
                   __size_of_getsUSBUSART 0096                                   _RelayB1 01DB  
                                 _RelayB2 01DA                               ?_StringCopy 007D  
                     __size_of_ReceiveEvt 002E                                   __Hparam 0000  
                              ??_TmrBInit 007F                    ??_I2cSlv_ReceiveI2cMsg 0084  
         ??_USBIncrement1msInternalTimers 007D                            _I2cReadDataEvt 00D6  
                               ?_isxdigit 0001                      ?_USBStdSetCfgHandler 0001  
                               _CDCInitEP 5256                    __end_of_Rtcc_UnlockRtc 67C8  
                                 __Lparam 0000           OsAlrm_SetOsAlarm@OsAlarmTimeout 0085  
                    __end_of_SetAckStatus 6782                                _initEeprom 4EEC  
                             _Term_MainSm 136E   Uart_WriteConstString@ConstStringToWrite 0080  
                                 _Welcome FD22                __size_of_USBEnableEndpoint 0044  
                          ?_ScheduleTasks 0001                                ??_Terminal 00A2  
                       _Sch_MainScheduler 6610                    ?_Uart_WriteConstString 0080  
                     __size_of_OsTmr_Wait 0082                      ??_USBCheckStdRequest 0097  
                             _RtccIrqInit 672C             __size_of_USBCtrlTrfOutHandler 0066  
                                 ___awdiv 4F76                      Term_MainTask@Options 0001  
                         __size_of___lmul 0058                  __size_of_SetUartBaudRate 0138  
                                 ___awmod 5102                                   ___lldiv 4FFC  
                        ??_USBDeviceTasks 0098                           __size_of___wmul 0028  
                                 ___lwdiv 595A                         ??_USBStallHandler 007D  
                                 ___lwmod 5EB0                         ?_Rtcm_SetRtccDate 0089  
            __size_of_Uart_WriteStringLen 0040                        ?_Sch_MainScheduler 0001  
                            _getSetupCall 65B2                      ?_I2cSlv_QueryI2cData 00A2  
                         ??_initGprsModem 0099                               _Rtcc_RtcIsr 6892  
                    __size_of_putUSBUSART 0022                                   __pcinit 2438  
                      getsUSBUSART@buffer 0084                           __size_of_memcpy 0048  
                               _I2cComSts 00CD                       __end_of_TurnOnModem 5CC4  
                         __size_of_memset 0030                   initEeprom@isInitialized 0102  
                               _I2cConfig 0348                            ??_Rtcc_LockRtc 007D  
               __end_of_configDescriptor1 FDEE                                   __ramtop 0F00  
              Mdm_GetSmsData@GetSmsStatus 0089                               Terminal@Len 03A7  
                      ??_Rtcm_SetRtccDate 0091                     Tmr_TmrBIrqSet@TmrNumb 007F  
                    ?_Uart_InitUartModule 009D                                   __ptext0 6830  
                                 __ptext1 6226                                   __ptext2 683C  
                                 __ptext3 6876                                   __ptext4 65F2  
                                 __ptext5 6666                                   __ptext6 636E  
                                 __ptext7 62E6                                   __ptext8 3E0A  
                                 __ptext9 32F6                                   _inPipes 00B0  
                   __size_of_Mcu_ClearWdg 0004                 GsmGprsTerminal@UartBuffer 0900  
             _USBDeferOUTDataStagePackets 0025                           __size_of_strcat 005C  
                 __end_of_secondsAppTimer 47FE                           __size_of_strcpy 0032  
                         __size_of_strlen 003E              __size_of_OsAlrm_ClearOsAlarm 0058  
                               _T1CONbits 000FCD                           __size_of_strtol 01D6  
                      InitGprsNetwork@Apn 009B                                   _initFsm 5D56  
                            ??_USBSuspend 0091                                 _T2CONbits 000FCA  
                                 _isalpha 6286                                   _isdigit 654E  
          isNumberInMemory@memoryOpResult 0112                             ?_Tmr_StartTmr 0001  
                     ??_Sch_MainScheduler 00B0                               ?_SystemInit 0001  
                                 clear_10 256E                                   clear_11 257A  
                        ___awmod@dividend 007D                         ??_InitializeTasks 04FC  
                               _T4CONbits 000F76                           _Tmr2IsrCallback 02E8  
     __end_of_Tmr_RegisterTmr2IsrCallback 6846               _Tmr_RegisterTmr2IsrCallback 683C  
               findEmptySpot@searchFailed 010D                                   _isspace 6398  
                            _Mdm_MainTask 5AA2                                   _isupper 650A  
             __size_of_InitModemInterface 0008                      HttpGetMethod@GetData 009B  
                   MyApp_Task@emptyNumber 0115                    ?_Irq_InitIntController 007D  
                                 _smsText 0495                    Term_MainSm@FwkBuildStr 013A  
                         ?_Rtcc_RtcConfig 007E                    _OsAlrm_ProcessOsAlarms 258E  
                            ??_CheckModem 009B                        __end_of_USB_CD_Ptr FC30  
                     Mcu_SetWdgSts@WdgSts 007D                               _Tmr_Tmr2Isr 64A2  
                                 _sprintf 3ADA                                   _tolower 66CE  
         __size_of_USBCtrlTrfSetupHandler 008C                           _Uart_Uart1RxIsr 67F8  
                        _HttpGetDataLocal 039E                  __end_of_Mdm_SetSmsFormat 5B42  
                  Term_MainSm@FwkMajorStr 0132                            __pintcode_body 44B6  
                                 _toupper 66E6           secondsAppTimer@destinationTicks 0091  
                       ClearBuffer@Buffer 007D                      end_of_initialization 2580  
                            _getsUSBUSART 4A6A                              ?_Eeprom_Read 00A9  
                        ??_GetElapsedTime 0085                               _SmsTxtReady 00DA  
             ?_Uart_MdmGsmGprsReadService 0004                    MyApp_Task@cmdAddNumber 0125  
           __size_of_OsTmr_GetTimerStatus 0090                              ?_GenerateEvt 007D  
                  _MainSystemTimebaseFlag 02F4             i1I2cSlv_SendI2cMsg@DataLenght 001F  
                      __end_of_USB_SD_Ptr FC24       Irq_InitIntController@PerInt_LowPInt 007E  
                                 memcpy@d 0084                                   memcpy@n 0081  
                                 memcpy@s 0086                       _pBDTEntryEP0OutNext 00BE  
                                 itoa@buf 0093                                   memset@c 007F  
                                 itoa@val 0095                                   memset@n 0081  
                  Term_MainSm@FwkMinorStr 0136                                   memset@p 0083  
                           __Lmediumconst FC10                            _ModemEvtParser 1FEA  
                                 int_func 44B6                           _USB1msTickCount 0318  
                               i1u1602_28 64B2           _dummy_encapsulated_cmd_response 036D  
                               i1u1560_20 25A4                                 i1u1564_28 26C4  
                               i1u1564_29 26D8                  ?_USBStdFeatureReqHandler 0001  
               __size_of_Mcu_ConfigExtInt 001A                __end_of_saveNumberInMemory 66B4  
                       ?_Rtcc_AlarmConfig 007D                     ??_USBStdSetCfgHandler 0091  
                         ___lldiv@divisor 008D                 __end_of_Sch_MainScheduler 662E  
               __size_of_Led_SetLedStatus 0030                                ??_isxdigit 0080  
                              ?_CDCInitEP 0001                           ___lldiv@counter 0095  
                       _Rtcc_SetRtccValue 18A6                         _Rtcc_SetRtcStatus 6716  
                     _ActivateRiDetection 0041                           ?_Rtcc_UnlockRtc 0001  
                      ??_Rtcc_AlarmConfig 007F                        __end_of_USBSuspend 61F4  
                           StringCopy@Len 0081                         ?_MdmHttp_MainTask 0001  
                I2cSlv_QueryI2cData@RxLen 00A7                   _USBCtrlEPAllowDataStage 489E  
                      _UsbDevice_MainTask 6436                  I2cSlv_QueryI2cData@TxLen 00A4  
                            _Mcu_ClearWdg 6882                                   postdec1 000FE5  
                                 postdec2 000FDD                        ?_Rtcc_SetRtccValue 0085  
                      ?_Rtcc_SetRtcStatus 0001                                   postinc0 000FEE  
                                 postinc1 000FE6                                   postinc2 000FDE  
                   ??_I2cSlv_QueryI2cData 00A9                                   utoa@buf 008A  
                      ??_MdmHttp_MainTask 00A1                  _USBCtrlEPServiceComplete 31F8  
                                 utoa@val 008C                   HttpGetMethod@GetMOutSts 01E8  
                   i1___wmul@multiplicand 001B                        __end_of_CheckModem 2988  
                         _RtccIsrCallback 02E4          OsAlrm_ProcessOsAlarms@AlarmIndex 0021  
                      Terminal@EchoOption 02F3             __size_of_LedPulseStateMachine 00E8  
                                 strlen@s 007D                          _isNumberInMemory 4E62  
                    __end_of_parseCommand 44B6                _USBStatusStageEnabledFlag1 0028  
              _USBStatusStageEnabledFlag2 0027                     ??_Uart_InitUartModule 009F  
                    __end_of_Wdg_MainTask 64E8                                   strtol@a 0094  
                                 strtol@c 0098                            _Rtcm_RtccAlarm 0308  
                                 strtol@s 0089                        USBEnableEndpoint@p 0086  
                     ?_UsbDevice_MainTask 0001                                   xtoi@val 0088  
                               _PORTDbits 000F83                                 _PORTEbits 000F84  
                     ??_Rtcc_SetRtccValue 0086                       ??_Rtcc_SetRtcStatus 007D  
                        __CFG_DSBOREN$OFF 000000                          ?_InitGprsNetwork 009B  
                       _Mdm_HangPhoneCall 6794                            ??_Tmr_StartTmr 007D  
            __end_of_I2cSlv_I2cReadMsgSts 6592                  i1I2cSlv_SendI2cMsg@TxSts 0020  
                       StringCopy@DestStr 007F                          __CFG_CPUDIV$OSC1 000000  
                      ?_Mdm_HangPhoneCall 0001                    __size_of_UartSetConfig 0058  
                         _Tmr4IsrCallback 02E6                          _HttpGetMethodSts 01EC  
                               _TRISBbits 000F93                      SendSmsSm@UartMessage 0100  
                               _TRISCbits 000F94                                 _TRISDbits 000F95  
                               _TRISEbits 000F96                       __size_of_StringCopy 0062  
                isNumberValid@phoneNumber 007D                        _BothEP0OutUOWNsSet 01E1  
                         ??_HttpGetMethod 009D                   __size_of_Mdm_GetSmsData 0068  
                            strtol@endptr 008B                    __size_of_Term_MainTask 001A  
                            ?_Mcu_Int0Isr 0001                 __size_of_Rtcm_GetRtccDate 0066  
                            ?_Mcu_Int1Isr 0001                 I2c_WriteData@I2cNextState 0036  
               USBConfigureEndpoint@EPNum 0082                ?_USBCtrlEPAllowStatusStage 0001  
                  __end_of_ModemEvtParser 216C                          ??_InitSchedTimer 00A4  
     USER_USB_CALLBACK_EVENT_HANDLER@size 008D                                 _USTATcopy 00D4  
                   __end_of_StopCondition 688A                  __size_of_HighPriorityIsr 455A  
                     ??_Mdm_HangPhoneCall 0083                 Tmr_TmrBPrSet@TmrBPrCfgSts 009A  
               __size_of_OsTmr_StartTimer 005E                    secondsAppTimer@counter 008A  
                               _Led1Blink 0364                                 _Led2Blink 035B  
                    ??_UsbDevice_MainTask 0099                                 _Led3Blink 0352  
            __end_of_USBTransferOnePacket 42A6                           ??_CheckTxStatus 007D  
                               _Led1Pulse 0388                    secondsAppTimer@seconds 008F  
                       __CFG_WPFP$PAGE_63 000000                 __end_of_Rtcc_SetRtccValue 1AD4  
               __end_of_Rtcc_SetRtcStatus 672C                                 _Led2Pulse 0382  
                               _Led3Pulse 037C                         _I2cSlv_SendI2cMsg 5FF6  
         SetBaudRate@DesiredI2cBusClockHz 0096                       Eeprom_Read@QuerySts 00AF  
                         ??_ScheduleTasks 04FC                            _Tmr_TmrBConfig 3E0A  
                 Tmr_TmrBPrSet@Postscaler 0099                         putUSBUSART@length 0085  
                 MdmHttp_MainTask@Options 0001                     __end_of_Mcu_SetWdgSts 6794  
                       _OsAlrm_SetOsAlarm 3F9A                      Terminal@TermRxBuffer 0540  
                      ?_I2cSlv_SendI2cMsg 0080                       __size_of_SystemInit 0030  
                          _Tmr_TmrBIrqSet 5C2C                               ?_initEeprom 0001  
                     __CFG_MSSP7B_EN$MSK7 000000                               _TurnOnModem 5C78  
                               _ClipEvent 00DD                              ??_MyApp_Task 0113  
                    Terminal@TermTxBuffer 0100             saveNumberInMemory@phoneNumber 008E  
                               _GetMethod 00D8                    _USBCtrlTrfSetupHandler 4DD6  
                      ?_OsAlrm_SetOsAlarm 0083                  __size_of_GetCallerNumber 0036  
                   __end_of_USBDeviceInit 2836     __end_of_USBIncrement1msInternalTimers 650A  
  __size_of_USBIncrement1msInternalTimers 0022             _USBIncrement1msInternalTimers 64E8  
             __size_of_Mdm_RequestSmsData 0010                            __end_of___lmul 575A  
                          _CheckAckStatus 6864                            __end_of___wmul 63EA  
                     ??_I2cSlv_SendI2cMsg 0084                 __end_of_Mdm_HangPhoneCall 67A6  
                  __size_of_UartWriteByte 0020                            __end_of_memcpy 5D56  
                      Terminal@PackageLen 02EF         Uart_MdmGsmGprsReadService@RxState 002C  
                          __end_of_memset 6286                        _UartTxBufferStatus 5B90  
                     ??_OsAlrm_SetOsAlarm 008B                          __CFG_DSWDTEN$OFF 000000  
                            ??_ReceiveEvt 007F                         _USBBusIsSuspended 01E2  
                               _Mdm_SmsRx 0700                          ?_secondsAppTimer 008A  
                       ??_SetUartBaudRate 0098                   __end_of_Uart_Uart1RxIsr 6808  
                               _MdmStatus 00D0                            __end_of_strcat 56AA  
                          __end_of_strcpy 6226                            __end_of_strlen 5FF6  
                          __end_of_strtol 1CAA                       start_initialization 2438  
         isNumberInMemory@currentPosition 00E2                         __size_ofi1___wmul 0026  
                 ?_USBStdGetStatusHandler 0001                            _ConfigureModem 377C  
                            ??_OsTmr_Wait 00A1                    Uart_WriteString@Module 0082  
           USBCtrlTrfRxService@byteToRead 007E                   __size_of_StartCondition 0004  
                    Rtcm_SetRtccDate@Date 0089                           _MdmResetRequest 003D  
                     ?_UartTxBufferStatus 0001                        _Uart_ClearRxBuffer 618E  
               __size_of_UartSetConfigLow 0058                          ??_EnableReceiver 007D  
                             _cdc_data_rx 0500                               _cdc_data_tx 07B6  
            __end_of_USBConfigureEndpoint 49D4                     __size_of_initPreamble 0026  
         __end_of_USBStdFeatureReqHandler 18A6                                 _MsgFormat FC32  
                      __end_of_MyApp_Task 136E                          _UpdateOsCounters 67E8  
                         ?_ModemEvtParser 0001                I2c_InitI2cModule@I2cConfig 00A2  
                       __size_of_GetSmsSm 0132         __end_of_USBCtrlEPAllowStatusStage 3D40  
               __end_of_I2cSlv_SendI2cMsg 6034                    Uart_WriteStringLen@Len 0082  
                __size_of_LedStateMachine 00A8                  __end_of_USBCtrlEPService 4B94  
                       __size_of_MdmCntSm 00A8                         ?_Uart_WriteString 0080  
                   __size_of_SetAckStatus 0014                ?_initMemorizedNumbersCount 0001  
                    __size_of_ClearBuffer 0036                      __end_of_Rtcc_LockRtc 67D8  
                     ?_Uart_ClearRxBuffer 0001                              ?_SetBaudRate 0096  
                  __end_of_Tmr_TmrBConfig 3ED2                                 _SendSmsSm 1CAA  
               __end_of_OsAlrm_SetOsAlarm 4062                    __end_of_Tmr_TmrBIrqSet 5C78  
                               _TaskTable 05A4                                 _RingEvent 00DE  
               ??_USBCtrlEPAllowDataStage 007E                        ??_Uart_WriteString 0082  
                             _SystemState 00D3                     __end_of_isNumberValid 5530  
                       __size_of_ReadByte 000A                                 _RtcConfig 03AF  
              __size_of_Sch_MainScheduler 001E             Uart_InitUartModule@UartConfig 009D  
                             ??_CDCInitEP 0089                            USBDeviceInit@i 0085  
                           _UartSetConfig 56AA                    Led_SetLedBlinkTime@Led 0081  
                      __end_of_ReceiveEvt 6342                    _pBDTEntryEP0OutCurrent 00C0  
                           _Term_MainTask 6680                   USBTransferOnePacket@dir 007D  
                    ??_UartTxBufferStatus 007D                   USBTransferOnePacket@len 0080  
                   Tmr_TmrBConfig@TmrNumb 00A3                   __size_of_LowPriorityIsr 00B4  
                  __end_of_CheckAckStatus 686E                                  ??___lmul 0085  
                           _isxdigit$6636 0081                                 Terminal@i 00A4  
                                ??___wmul 0081                         __size_of_TmrBInit 0096  
  Tmr_RegisterTmr2IsrCallback@IsrCallback 007D                       _USBStdGetDscHandler 2E80  
              I2cSlv_SendI2cMsg@SlaveAddr 0082                        __end_of_OsTmr_Wait 5102  
                      HttpGetMethod@Index 01C8                               __pdataBANK0 00E1  
                             __pdataBANK1 01FE                               __pdataBANK2 02F3  
                             __pdataBANK3 03B7                isNumberInMemory@readBuffer 0102  
                             __pdataBANK4 04EF                               __pdataBANK5 05A4  
                        __CFG_LPT1OSC$OFF 000000                         __size_of_Terminal 051C  
                                ??_memcpy 0083                                  ??_memset 0083  
                  __size_ofi1_GenerateEvt 0016                       Tmr_StartTmr@TmrNumb 007D  
                    ??_Uart_ClearRxBuffer 007D       __size_of_Uart_MdmGsmGprsReadService 00CA  
                                ??_strcat 0081                                  ??_strcpy 0081  
                                ??_strlen 007F                    __size_of_Rtcm_MainTask 008E  
                                ??_strtol 008F               __end_of_Led_SetLedBlinkTime 595A  
                  __end_of_ConfigureModem 3858                               _ALRMCFGbits 000F91  
                  _USBActiveConfiguration 00D5            __end_of_USBStdGetStatusHandler 4358  
                            _initPreamble 63EA                             WriteByte@Byte 007D  
                      __end_of_TaskNumber FC32                               __pbssCOMRAM 0023  
                 GetElapsedTime@TimeValue 008D                     __end_of_StringCompare 5A52  
               __size_of_GetOsTickCounter 0012                             __pcstackBANK0 0060  
                           __pcstackBANK1 0100                             __pcstackBANK2 0200  
            __size_of_USBCtrlTrfInHandler 00C2                             __pcstackBANK4 04FC  
                           __pcstackBANK5 05F4                           RiSm@MdmDrvState 002E  
                            _SetAckStatus 676E                              _isalpha$6626 0081  
                  GenerateEvt@EventStatus 007F                                 _WriteByte 6846  
                     __size_of_initEeprom 008A                              _isdigit$6360 007E  
                    ?_USBStdGetDscHandler 0001             UpdateSchFlag@InterruptCounter 02DA  
               SetUartBaudRate@UartConfig 0096                       _Uart_WriteStringLen 5F78  
     InitGprsNetwork@GprsNetInitNextState 00CF                   GetElapsedTime@StartTime 0081  
                           _UartWriteByte 65D2                               _ALRMRPTbits 000F90  
              __end_of_USBWakeFromSuspend 60E8              __end_of_LedBlinkStateMachine 2AD0  
                             sprintf@flag 0083                      __size_of_Eeprom_Read 0054  
                         _USBStallHandler 5DE4                                ?_SendSmsSm 0001  
                            _pBDTEntryOut 030E                __size_of_Rtcc_SetRtccValue 022E  
                    __size_of_GenerateEvt 0018                           ?_Tmr_TmrBConfig 00A0  
              __size_of_Rtcc_SetRtcStatus 0016                          _Mcu_ConfigExtInt 6666  
              __end_of_USBCheckCDCRequest 4408              __size_ofi1_I2cSlv_SendI2cMsg 003A  
                     _OsAlrm_ClearOsAlarm 57B2                           ?_Tmr_TmrBIrqSet 007D  
                 ??_Uart_WriteConstString 0082                            ?_UartSetConfig 0001  
                    __end_of_Tmr_StartTmr 65B2                              ??_StringCopy 0083  
                        _Led_SetLedStatus 62B6                         ??_HighPriorityIsr 0007  
                          ?_Term_MainTask 0001                          ___lwdiv@dividend 0083  
                            ?_Term_MainSm 0001                      _I2cSlv_I2cReadMsgSts 6570  
                        GenerateEvt@Event 007D                    __size_of_Tmr_TmrBPrSet 00EE  
                   __size_of_parseCommand 00AE                    __size_of_waitSetupCall 004E  
                   __size_of_Wdg_MainTask 0022                                 __pintcode 0008  
             findEmptySpot@memoryOpResult 0110             Uart_WriteString@StringToWrite 0080  
                           __pmediumconst FC10                              ?_RtccIrqInit 0001  
                         ?_CheckAckStatus 0001                   Tmr_TmrBIrqSet@TmrIrqSts 007E  
                       __size_of_isxdigit 003C                                  ?___awdiv 007D  
                               __ptext100 5D56                                 __ptext101 4C28  
                               __ptext110 5FF6                                 __ptext102 475C  
                               __ptext111 5F38                                 __ptext103 5AF2  
                               __ptext120 1CAA                                 __ptext112 6570  
                               __ptext104 4EEC                                 __ptext121 5F78  
                               __ptext113 67D8                                 __ptext105 532E  
                               __ptext130 575A                                 __ptext122 1FEA  
                               __ptext114 647E                                 __ptext106 54CA  
                           Terminal@Index 00A6                                 __ptext131 2836  
                               __ptext123 618E                                 __ptext115 5396  
                               __ptext107 58B2                                 __ptext140 5530  
                               __ptext132 460C                                 __ptext124 5A00  
                               __ptext116 5906                                 __ptext108 3A08  
                               __ptext141 55F0                                 __ptext133 686E  
                               __ptext125 2D4E                                 __ptext117 6122  
                               __ptext109 5080                                 __ptext150 595A  
                               __ptext142 4CB8                                 __ptext134 0DC8  
                               __ptext126 377C                                 __ptext118 56AA  
                               __ptext151 3F9A                                 __ptext143 3ED2  
                               __ptext135 05EC                                 __ptext127 0ABC  
                               __ptext119 5C78                                 __ptext160 22DA  
                               __ptext152 63C2                                 __ptext144 67A6  
                               __ptext136 6034                                 __ptext128 2C16  
                               __ptext161 6846                                 __ptext153 5174  
                               __ptext145 6158                                 __ptext137 5EF4  
                               __ptext129 5702                                 __ptext162 6886  
                               __ptext154 5BDE                                 __ptext146 46B4  
                               __ptext138 65D2                                 __ptext171 64A2  
                               __ptext163 688A                                 __ptext155 4FFC  
                               __ptext147 33E4                                 __ptext139 5B90  
                               __ptext180 6742                                 __ptext172 6808  
                               __ptext164 676E                                 __ptext156 6342  
                               __ptext148 62B6                                 __ptext173 662E  
                               __ptext165 6850                                 __ptext157 4062  
                               __ptext149 2988                                 __ptext182 67F8  
                               __ptext174 67E8                                 __ptext166 66FE  
                               __ptext158 6314                                 __ptext183 3D40  
                               __ptext175 258E                                 __ptext167 688E  
                               __ptext159 216C                                 __ptext184 6758  
                               __ptext176 6410                                 __ptext168 685A  
                               __ptext185 6892                                 __ptext177 57B2  
                               __ptext169 6864                                 __ptext186 6896  
                               __ptext178 664A                                 __ptext187 689A  
                               __ptext179 60E8                                  ?___awmod 007D  
                      _Sch_SchmIntService 6808                                 __ptext188 0000  
                         _InitializeTasks 51E6                                  ?___lldiv 0089  
                    ?_Uart_WriteStringLen 0080                                  ?___lwdiv 0083  
                                ?___lwmod 007D                   findEmptySpot@readBuffer 0100  
                         _CallClosedEvent 003E                              ?_Rtcc_RtcIsr 0001  
                             __pintcodelo 0018                __size_of_Mdm_HangPhoneCall 0012  
                 isNumberValid@isNumberOk 0080                    __size_ofi2_GenerateEvt 0016  
           I2cSlv_QueryI2cData@QueryTimer 04E4                   Eeprom_Write@WriteBuffer 0087  
                        ??_Rtcc_RtcConfig 0080                      ?_OsAlrm_ClearOsAlarm 0001  
                             _I2cRxPacket 038E                       Mdm_MainTask@Options 0001  
                     ?_Sch_SchmIntService 0001                      _USBTransferOnePacket 41E8  
                         ?_ConfigureModem 0001                   ??_Irq_InitIntController 007F  
      Uart_MdmGsmGprsReadService@UartData 0004                               _I2cTxBuffer 044F  
                                ?_initFsm 0001                   ?_OsAlrm_ProcessOsAlarms 0001  
                                _BAUDCON1 000F7E                                  _BAUDCON2 000F7C  
                        ?_Uart_Uart1RxIsr 0001                         ??_GetCallerNumber 0085  
                                ?_isalpha 0001                              ??_SystemInit 00AB  
                                ?_isdigit 0001                               _I2cTxPacket 0399  
          InitializeTasks@ActiveTaskIndex 04FE                    __size_of_findEmptySpot 0068  
                    __CFG_RTCOSC$T1OSCREF 000000                                  ?_isspace 0001  
                          _Mdm_GetSmsData 5396                      InitGprsNetwork@Index 0132  
                                ?_isupper 0001                Term_MainSm@TermMainSmState 02EC  
                         Terminal@Payload 0766                               _PADCFG1bits 000F3C  
            __end_of_USBCtrlTrfOutHandler 5464                                ?_WriteByte 0001  
                   ??_USBStdGetDscHandler 007D                          _Rtcm_GetRtccDate 5464  
              ConfigureModem@DelayCounter 0326                        __end_of_StringCopy 5592  
                             _ep_data_out 02CE                                  _ALRMVALH 000F8F  
                                _ALRMVALL 000F8E                          ___lwdiv@quotient 0088  
                            ?_Tmr_Tmr2Isr 0001                              _SendSmsEvent 00DF  
                         Terminal@SwTimer 04D9                  initEeprom@memoryOpResult 0101  
                                ?_sprintf 007D                                  ?_tolower 0001  
               __size_of_Rtcm_SetRtccDate 0054                            _setupCallTicks 03B3  
            __size_of_USBCtrlTrfRxService 0124             USBConfigureEndpoint@direction 007D  
                                ?_toupper 0001                                  _I2cReady 02EA  
                       ?_Mdm_SetSmsFormat 0001                            ?_UartWriteByte 007D  
                MyApp_Task@numberInMemory 012A                    __size_of_I2c_WriteData 016E  
              ConfigureModem@DelayValueMs 02D6                          _OsTmr_StartTimer 55F0  
                    __size_of_Mcu_Int0Isr 0004                      __size_of_Mcu_Int1Isr 0004  
 Irq_InitIntController@GlobalInt_HighPInt 007D                __size_of_I2cSlv_SendI2cMsg 003E  
                __end_of_isNumberInMemory 4EEC              __size_of_USBCtrlTrfTxService 00D8  
                        ??_Rtcc_UnlockRtc 007D                             i1_GenerateEvt 6742  
              __end_of_Mcu_StartSystemPll 6610                              _parseCommand 4408  
                            _PhoneNumbLen 00D1                        ??_Mdm_SetSmsFormat 0083  
                            _Wdg_MainTask 64C6                             _Rtcm_MainTask 4D48  
                          ___wmul@product 0081                  ModemEvtParser@ClipString 0092  
                        SendSmsSm@SwTimer 03EA                     Terminal@ReceivedBytes 00A5  
                    ??_Sch_SchmIntService 0023                    __size_of_UpdateSchFlag 001C  
              __size_of_OsAlrm_SetOsAlarm 00C8                ??_USBCtrlEPServiceComplete 007E  
                __size_of_I2cSlv_MainTask 0054                                  _IPR1bits 000F9F  
                 LedPulseStateMachine@Led 008C                                  _IPR3bits 000FA5  
                                _PIE1bits 000F9D                                  _PIE2bits 000FA0  
                                _PIE3bits 000FA3      __size_of_Tmr_RegisterTmr2IsrCallback 000A  
            ConfigureModem@MdmConfigState 01F3           HttpGetMethod@GetMethodNextState 00CE  
                   ?_I2cSlv_I2cReadMsgSts 0001                         _I2c_InitI2cModule 5174  
                       _IncomingCallEvent 003F                                  _PIR1bits 000F9E  
                                _PIR2bits 000FA1                                  _PIR3bits 000FA4  
                       ??_LedStateMachine 0097                        __end_of_SystemInit 6256  
                                _RCONbits 000FD0                             ??_putUSBUSART 0086  
                                _UEP0bits 000F26             __size_of_I2cSlv_ReceiveI2cMsg 0040  
              _USBDeferINDataStagePackets 0026                        ?_I2c_InitI2cModule 00A2  
                   ??_Uart_WriteStringLen 0083                                  _SSP2CON1 000F72  
                                _SSP2CON2 000F71               __size_of_USBCheckStdRequest 00E4  
                    Rtcm_MainTask@Options 0001              __end_of_OsTmr_GetTimerStatus 4D48  
                                _UCONbits 000F65                                  _SSP2STAT 000F73  
                ModemEvtParser@CompareIdx 00A1                      _USBConfigureEndpoint 493C  
                    _UsbMasterPhoneNumber 0440          __size_of_USBStdFeatureReqHandler 0294  
                      _saveNumberInMemory 669A                     SetUartBaudRate@Module 0099  
          __end_of_OsAlrm_ProcessOsAlarms 26E4                     ??_OsAlrm_ClearOsAlarm 0019  
                       ___wmul@multiplier 007D                     ?_USBTransferOnePacket 007D  
                                i1___wmul 6410                     __end_of_initGprsModem 4CB8  
                     ??_I2c_InitI2cModule 00A4                 __size_of_Rtcc_AlarmConfig 006C  
              __end_of_InitModemInterface 6876                    __end_of_Mdm_GetSmsData 53FE  
                           ?_CDCTxService 0001            OsAlrm_SetOsAlarm@AlarmCallback 0089  
                  __size_of_Mdm_DrvMainFn 0006                              _RemoteWakeup 01E3  
                                _ApnLocal 0324                            _StartCondition 688A  
                      SetAckStatus@AckSts 007D                 __size_of_MdmHttp_MainTask 0046  
                  __size_of_Mdm_IsRinging 0024                          StringCompare@Len 0081  
             HttpGetMethod@GetMethodState 01E9                             _Tmr_TmrBPrSet 32F6  
                           _waitSetupCall 5B42                       ?_saveNumberInMemory 008E  
                       _NewStringReceived 003C                              _isspace$6629 007E  
                        _UartSetConfigLow 575A                                  _GetSmsSm 2D4E  
                 __end_of_USBStallHandler 5E28                      Mdm_DrvMainFn@Options 0001  
                          _memoryPreamble 0394                     __size_of_Rtcc_LockRtc 0010  
                                _ConnWait 03DF                                  _MdmCntSm 460C  
                       ___lmul@multiplier 007D                               _INTCON2bits 000FF1  
                             _INTCON3bits 000FF0                    I2cSlv_MainTask@Options 0001  
                               copy_data0 244C                                 copy_data1 246C  
                               copy_data2 248C                                 copy_data3 24C4  
            __end_of_LedPulseStateMachine 34CC                    I2cSlv_SendI2cMsg@TxSts 0084  
             ??_USBCtrlEPAllowStatusStage 007D               __end_of_USBStdSetCfgHandler 35B2  
                          ?i1_GenerateEvt 0019                  Tmr_TmrBConfig@TmrBConfig 00A0  
                                _OsAlarms 0600                            ?_Rtcm_MainTask 0001  
                   OsTmr_StartTimer@Timer 0081              LedBlinkStateMachine@LedBlink 008A  
                                _ReadByte 6850                             i2_GenerateEvt 6758  
                         ??_UartSetConfig 007D                               ??_SendSmsSm 009B  
                      __end_of_device_dsc FE5B                 __end_of_I2c_InitI2cModule 51E6  
                                _MsgReady FE32                           ??_Term_MainTask 00A7  
                 __end_of_InitializeTasks 5256                initGprsModem@isInitialized 0099  
                 ?_USBCtrlTrfSetupHandler 0001                            isNumberValid@i 0081  
                           _findEmptySpot 532E               __end_of_I2cSlv_QueryI2cData 3ADA  
                              _ANCON1bits 000F49                                  _RxBuffer 0C58  
                 USBStdGetStatusHandler@p 007E                                  __Hrparam 0000  
                                _TmrBInit 49D4                      __size_of_SetBaudRate 004E  
                            ??_initEeprom 00B0                      ??_saveNumberInMemory 0090  
                            ?_TurnOnModem 0001                                  _TxBuffer 0320  
                          _LowPriorityIsr 0018                                 memcpy@tmp 0083  
                    Tmr_TmrBPrSet@Divisor 009C                                  __Lrparam 0000  
                  USBTransferOnePacket@ep 0081               __end_of_Uart_InitUartModule 0DC8  
                                _SmsEvent 00DC                           _SetUartBaudRate 2C16  
            i1I2cSlv_SendI2cMsg@SlaveAddr 001E                                  _Terminal 00D0  
                                _SetupPkt 000430                 I2cSlv_SendI2cMsg@TxBuffer 0080  
                   SetBaudRate@McuClockHz 009A                     ?_USBConfigureEndpoint 007D  
            OsAlrm_ClearOsAlarm@OsAlarmId 0019                             _I2c_WriteData 216C  
                        __size_of___awdiv 0086                          __size_of___awmod 0072  
                         MyApp_Task@F9031 FC11                           MyApp_Task@F9034 FC24  
                         MyApp_Task@F9036 03CF                  __end_of_UpdateOsCounters 67F8  
                        __size_of___lldiv 0084                         Terminal@SlaveAddr 02EE  
                     OsTmr_Wait@WaitTimer 009B                          __size_of___lwdiv 0054  
                    Tmr_TmrBPrSet@TmrNumb 009B                          __size_of___lwmod 0044  
                I2c_WriteData@WritePacket 007E                         Terminal@TermState 02F0  
                           _UpdateSchFlag 662E                       __end_of_putUSBUSART 654E  
                             _line_coding 0375                              _Rtcc_LockRtc 67C8  
            I2cSlv_QueryI2cData@SlaveAddr 00A8                      _LedBlinkStateMachine 2988  
                  __end_of_StartCondition 688E                            ??_CDCTxService 0084  
                ??_Pm_DsReleasePinControl 007D                    SendSmsSm@SendSms_State 01F0  
               Rtcm_GetRtccDate@LocalDate 008A                  parseCommand@addNumberCmd 008A  
                         ?_Mdm_GetSmsData 0087                  I2c_WriteData@WriteStatus 0034  
                            _isupper$6632 007E                                strcat@from 007F  
                 I2c_ReadData@DataCounter 0032                            ?_Tmr_TmrBPrSet 0096  
                        __size_of_initFsm 0048                  MyApp_Task@smsPhoneNumber 04EF  
                          ?_waitSetupCall 0001                          ??_ModemEvtParser 0088  
                        _GetOsTickCounter 67A6                          __size_of_isalpha 0030  
                        __size_of_isdigit 0022                   __size_of_USBDeviceTasks 0188  
                         ___lwdiv@divisor 0085                              Terminal@Addr 03A3  
                ModemEvtParser@RingString 009C                               ??_WriteByte 007D  
                        __size_of_isspace 002A                           ___lwdiv@counter 0087  
                                __ptext10 5C2C                                  __ptext11 6592  
                                __ptext20 6436                                  __ptext12 49D4  
                                __ptext21 5D9E                                  __ptext13 6610  
                         ??_UartWriteByte 007E                                  __ptext30 61C2  
                                __ptext22 5AA2                                  __ptext14 2FAE  
                                __ptext31 5DE4                                  __ptext23 580A  
                                __ptext15 51E6                                  __ptext40 34CC  
                                __ptext32 64E8                                  __ptext24 687C  
                                __ptext16 10B6                                  __ptext41 42A6  
                                __ptext33 26E4                                  __ptext25 64C6  
                                __ptext17 6680                                  __ptext50 30D4  
                                __ptext42 2E80                                  __ptext34 4B00  
                                __ptext26 6782                                  __ptext18 4D48  
                                __ptext51 3C74                                  __ptext43 1612  
                                __ptext35 5D0E                                  __ptext27 6882  
                                __ptext19 3BA8                                  __ptext60 00D0  
                                __ptext52 4126                                  __ptext44 5592  
                                __ptext36 4DD6                                  __ptext28 1E62  
                                __ptext61 35B2                                  __ptext53 3858  
                                __ptext45 4358                                  __ptext37 31F8  
                                __ptext29 60AE                                  __ptext70 652C  
                                __ptext62 66CE                                  __ptext54 2AD0  
                                __ptext46 5256                                  __ptext38 489E  
                                __ptext71 5E6C                                  __ptext63 6072  
                                __ptext55 136E                                  __ptext47 5E28  
                                __ptext39 3698                                  __ptext80 18A6  
                                __ptext72 4562                                  __ptext64 1AD4  
                                __ptext56 5FB8                                  __ptext48 493C  
                                __ptext81 5102                                  __ptext73 5EB0  
                                __ptext65 66E6                                  __ptext57 564E  
                                __ptext49 53FE                                  __ptext90 5B42  
                                __ptext82 4F76                                  __ptext74 4A6A  
                                __ptext66 6398                                  __ptext58 3ADA  
                                __ptext91 65B2                                  __ptext83 67C8  
                                __ptext75 41E8                                  __ptext67 6286  
                                __ptext59 6256                                  __ptext92 645A  
                                __ptext84 5464                                  __ptext76 3930  
                                __ptext68 650A                                  __ptext93 6794  
                                __ptext85 4B94                                  __ptext77 654E  
                                __ptext69 61F4                                  __ptext94 669A  
                                __ptext86 6716                                  __ptext78 585E  
                                __ptext95 4408                                  __ptext87 47FE  
                                __ptext79 67B8                                  __ptext96 4E62  
                                __ptext88 672C                                  __ptext97 66B4  
                                __ptext89 52C2                                  __ptext98 63EA  
                                __ptext99 59AE                          __size_of_isupper 0022  
                 initEeprom@addressToRead 0100                                _I2cDummyTx 664A  
                  Tmr_TmrBIrqSet@Priority 007D                        __end_of_initEeprom 4F76  
                   __end_of_HttpGetMethod 0ABC                  __size_of_InitGprsNetwork 02EE  
                            _SSP2CON2bits 000F71                                 isxdigit@c 0082  
                        __size_of_sprintf 00CE                          __size_of_tolower 0018  
                   __size_of_Tmr_StartTmr 0020                          __size_of_toupper 0018  
                          ?i2_GenerateEvt 0001                                _DSCONHbits 000F4D  
                              strcpy@from 007F                         _Mmd_RingIndicator 002F  
                              _DSCONLbits 000F4C                        i1GenerateEvt@Event 0019  
                       _Mdm_IsSmsReceived 647E               __size_of_UsbDevice_MainTask 0024  
                           __size_of_atoi 00D8                        TmrBInit@Postscaler 007E  
          __end_of_USBCtrlTrfSetupHandler 4E62                             __size_of_main 000C  
             ??_initMemorizedNumbersCount 008E                         ?_USBCtrlEPService 0001  
                           __size_of_itoa 0044                 Mdm_GetSmsData@MessageText 0087  
                           __size_of_utoa 00AA                       Led_MainTask@Options 0001  
                           __size_of_xtoi 00E6                    ??_I2cSlv_I2cReadMsgSts 0081  
                          ?_findEmptySpot 0001                    __end_of_LowPriorityIsr 00CC  
                   __end_of_CheckTxStatus 6864                        ?_Mdm_IsSmsReceived 0001  
                           _Mdm_DrvMainFn 687C                        ??_USBCtrlEPService 0097  
                                _isxdigit 6072                             _Mdm_IsRinging 645A  
                     _USBCtrlTrfInHandler 4126                  I2c_ReadData@I2cReadState 0033  
              __end_of_Mdm_RequestSmsData 67E8                     __end_of_ScheduleTasks 30D4  
                 __size_of_GetElapsedTime 00C8                             ?_Led_MainTask 0001  
                                _outPipes 01C9                      _USBCtrlTrfOutHandler 53FE  
                     Led_SetLedStatus@Led 007E                                  int$flags 0042  
                              strtol@base 008D                            ?_I2c_WriteData 007E  
                                atoi@sign 0087                         ??_I2cSlv_MainTask 00A6  
                         StringCopy@Index 0085                 _USBCtrlEPAllowStatusStage 3C74  
                     ??_Mdm_IsSmsReceived 0081                      __size_of_Term_MainSm 02A4  
            ScheduleTasks@ActiveTaskIndex 05F4                                strtol@sign 0093  
                         Term_MainSm@Data 0463                      __size_of_RtccIrqInit 0016  
               __size_of_Uart_WriteString 003E                    ??_USBTransferOnePacket 0081  
                          ?_UpdateSchFlag 0001                    __size_of_StopCondition 0004  
                   ?_LedBlinkStateMachine 008A                      __size_of_Rtcc_RtcIsr 0004  
                     i1_I2cSlv_SendI2cMsg 60E8                  __end_of_Mcu_ConfigExtInt 6680  
                         ?_StartCondition 0001                 _USBDeferStatusStagePacket 00C7  
                CDCTxService@byte_to_send 0085                             ?_Eeprom_Write 0087  
           I2c_WriteData@TentativeCounter 0035                               _OSCTUNEbits 000F9B  
                              _INTCONbits 000FF2                  UartWriteByte@ByteToWrite 007D  
                            _Tmr_StartTmr 6592                  __end_of_Led_SetLedStatus 62E6  
                    ?_USBCtrlTrfInHandler 0001                                  memcpy@d1 007D  
                                memcpy@s1 007F                I2cSlv_I2cReadMsgSts@Result 0081  
           USBCtrlTrfTxService@byteToSend 007D                             ?_I2cSetConfig 0001  
                                itoa@base 0097               i1I2cSlv_SendI2cMsg@TxBuffer 001C  
                           ?_I2c_ReadData 0080                             ?_I2cSendMsgSm 0001  
                                isalpha@c 0082                    __size_of_Mcu_SetWdgSts 0012  
                                isdigit@c 007F                                  memset@p1 007D  
                   Eeprom_Read@DataLength 00AB                          ?_USBStallHandler 0001  
                         ??i1_GenerateEvt 001B                          _Rtcm_SetRtccDate 585E  
                USBStdFeatureReqHandler@p 0095                          ??_Tmr_TmrBConfig 00A2  
                           ??_ClearBuffer 0081                           _HighPriorityIsr 0008  
                         ??_Rtcm_MainTask 0092                 __end_of_Mdm_IsSmsReceived 64A2  
                        ??_Tmr_TmrBIrqSet 007F                  __size_of_secondsAppTimer 00A2  
                                intlevel1 0000                                  intlevel2 0000  
                    _OsTmr_GetTimerStatus 4CB8                                 sprintf@ap 0084  
                               sprintf@cp 0087                                 sprintf@sp 007D  
                       TmrBInit@Prescaler 007D                      __size_of_Tmr_Tmr2Isr 0024  
                  __size_of_USBDeviceInit 0152   __end_of_USER_USB_CALLBACK_EVENT_HANDLER 55F0  
__size_of_USER_USB_CALLBACK_EVENT_HANDLER 005E         ??_USER_USB_CALLBACK_EVENT_HANDLER 008F  
        ?_USER_USB_CALLBACK_EVENT_HANDLER 0089           _USER_USB_CALLBACK_EVENT_HANDLER 5592  
                 Rtcc_SetRtcStatus@Status 007D                          ___lwmod@dividend 007D  
                 __end_of_SetUartBaudRate 2D4E                                  isspace@c 007F  
                        ___lldiv@dividend 0089                  GsmGprsTerminal@UsbBuffer 0800  
                    ?i1_I2cSlv_SendI2cMsg 001C                __size_of_I2c_InitI2cModule 0072  
                          ?_Mdm_DrvMainFn 0001                          ??_CheckAckStatus 007D  
                         ?_LowPriorityIsr 0001                          ?_InitializeTasks 0001  
                                isupper@c 007F                            ?_Mdm_IsRinging 0001  
                 __end_ofMyApp_Task@F9031 FC1E                   __end_ofMyApp_Task@F9034 FC28  
                              _OSCCONbits 000FD3                 I2cSlv_ReceiveI2cMsg@RxSts 0084  
                  MyApp_Task@currentState 01D6            __size_of_Uart_WriteConstString 0044  
                 ModemEvtParser@SmsString 0097                            ??_Led_MainTask 009A  
           __end_of_Uart_WriteConstString 5F38                             OsTmr_Wait@Ret 00A1  
                       OsTmr_Wait@DelayMs 009D                   __size_of_InitSchedTimer 002E  
                  ??_USBConfigureEndpoint 007E                     ?_USBCtrlTrfOutHandler 0001  
             __size_of_UartTxBufferStatus 004E                           _GetCallerNumber 6122  
                __end_of_Rtcm_GetRtccDate 54CA                               _putUSBUSART 652C  
               Eeprom_Write@CommandLength 008D                       _USBCtrlTrfRxService 30D4  
                        ??_ConfigureModem 00A2                    Rtcc_SetRtccValue@Value 0085  
                      _USBWakeFromSuspend 60AE                             ?_getSetupCall 0001  
                 _USBStdFeatureReqHandler 1612                  __end_of_OsTmr_StartTimer 564E  
                    _LedPulseStateMachine 33E4                        _USBCheckCDCRequest 4358  
                     _USBCtrlTrfTxService 3858                       RtccIrqInit@Priority 007D  
               _initMemorizedNumbersCount 66B4                                  utoa@base 008E  
                              _RTCCFGbits 000F3F               __size_of_Uart_ClearRxBuffer 0034  
                           _isMemoryEmpty 01FE                            ??_Eeprom_Write 008A  
                        _Rtcc_AlarmConfig 52C2                           ??_Tmr_TmrBPrSet 009A  
                         ??_waitSetupCall 0093                                  sprintf@c 0086  
                                sprintf@f 007F                                  tolower@c 007D  
                                strcat@cp 0081                                  strcat@to 007D  
                     ?_USBWakeFromSuspend 0001           __size_of_Pm_DsReleasePinControl 0006  
                        ___lldiv@quotient 0091                InitGprsNetwork@GprsInitSts 01FF  
                         ___lwmod@divisor 007F               GsmGprsTerminal@FirstRecFlag 01DD  
                   ??_USBCtrlTrfInHandler 007E                                  strcpy@cp 0081  
                                strlen@cp 0081                                  strcpy@to 007D  
               UsbDevice_MainTask@Options 0001                     _USBAlternateInterface 02F1  
                         ___lwmod@counter 0081                             ?_Mdm_MainTask 0001  
                          ??_I2cSetConfig 007D            __size_of_Irq_InitIntController 002A  
                                toupper@c 007D           SetUartBaudRate@BaudRateRegister 009A  
                     ?_USBCheckCDCRequest 0001                          _MdmHttp_MainTask 5D9E  
                  __size_of_isNumberValid 0066                            ??_I2c_ReadData 0082  
                          ??_I2cSendMsgSm 0084             __end_of_Irq_InitIntController 6398  
                   ReceiveEvt@EventStatus 0080              ?_Tmr_RegisterTmr2IsrCallback 007D  
                     USBEnableEndpoint@ep 0088                           _endpoint_number 00C9  
                              _WDTCONbits 000FC0                    MyApp_Task@memoryResult 0129  
                             ?_I2cDummyTx 0001                                  xtoi@sign 0087  
                  _NewMdmEvtParserRequest 003B       Uart_MdmGsmGprsReadService@RxCounter 0023  
                    ?_USBCtrlTrfRxService 0001                           ??i2_GenerateEvt 0003  
            __size_of_Led_SetLedBlinkTime 0054                             ?_getsUSBUSART 0084  
                           ??_Eeprom_Read 00AC                  UartTxBufferStatus@Module 007E  
                   ?_OsTmr_GetTimerStatus 0095             SetUartBaudRate@DivisionFactor 009C  
          I2cSlv_ReceiveI2cMsg@DataLenght 0083                             ??_GenerateEvt 007F  
                         _LedStateMachine 46B4          Uart_MdmGsmGprsReadService@Module 0001  
                         TmrBInit@TmrNumb 0080                  ?_USBCtrlEPAllowDataStage 0001  
                    ?_USBCtrlTrfTxService 0001              ??_Uart_MdmGsmGprsReadService 0005  
                         ??_findEmptySpot 00B0                             _StopCondition 6886  
                   ??i1_I2cSlv_SendI2cMsg 0020                         ?_isNumberInMemory 0100  
                  Led_SetLedStatus@LedSts 007D              _USBStatusStageTimeoutCounter 00C8  
                        Mdm_IsRinging@Ret 0081                      ??_USBWakeFromSuspend 0091  
              USBTransferOnePacket@handle 0082                         ??_InitGprsNetwork 009E  
                     __end_of_ClearBuffer 618E                      __end_of_CDCTxService 2C16  
                      ??_isNumberInMemory 00B0                      ??_USBCheckCDCRequest 007D  
                 __size_of_EnableReceiver 0004                                _USB_CD_Ptr FC2E  
                   Eeprom_Read@ReadBuffer 00A9                           ??_I2c_WriteData 0080  
                 ConfigureModem@NextState 01F2                   _UsbMasterPhoneNumberLen 0322  
                           ?_Mcu_ClearWdg 0001                             _Mcu_SetWdgSts 6782  
