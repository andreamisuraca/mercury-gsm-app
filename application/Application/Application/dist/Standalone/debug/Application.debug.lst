

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sat Apr  2 17:55:10 2022

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F46J50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK3,global,class=CODE,delta=1,noexec
     9                           	psect	idataBANK4,global,class=CODE,delta=1,noexec
    10                           	psect	idataBANK5,global,class=CODE,delta=1,noexec
    11                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
    12                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    13                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    19                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    21                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    22                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    23                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    24                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    25                           	psect	dataBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    26                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    27                           	psect	bssBANK7,global,class=BANK7,space=1,delta=1,lowdata,noexec
    28                           	psect	bssBANK8,global,class=BANK8,space=1,delta=1,lowdata,noexec
    29                           	psect	bssBANK9,global,class=BANK9,space=1,delta=1,lowdata,noexec
    30                           	psect	bssBIGRAMl,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    31                           	psect	cstackBANK10,global,class=BANK10,space=1,delta=1,noexec
    32                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
    33                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    34                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    35                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    36                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    37                           	psect	text0,global,reloc=2,class=CODE,delta=1
    38                           	psect	text1,global,reloc=2,class=CODE,delta=1
    39                           	psect	text2,global,reloc=2,class=CODE,delta=1
    40                           	psect	text3,global,reloc=2,class=CODE,delta=1
    41                           	psect	text4,global,reloc=2,class=CODE,delta=1
    42                           	psect	text5,global,reloc=2,class=CODE,delta=1
    43                           	psect	text6,global,reloc=2,class=CODE,delta=1
    44                           	psect	text7,global,reloc=2,class=CODE,delta=1
    45                           	psect	text8,global,reloc=2,class=CODE,delta=1
    46                           	psect	text9,global,reloc=2,class=CODE,delta=1
    47                           	psect	text10,global,reloc=2,class=CODE,delta=1
    48                           	psect	text11,global,reloc=2,class=CODE,delta=1
    49                           	psect	text12,global,reloc=2,class=CODE,delta=1
    50                           	psect	text13,global,reloc=2,class=CODE,delta=1
    51                           	psect	text14,global,reloc=2,class=CODE,delta=1
    52                           	psect	text15,global,reloc=2,class=CODE,delta=1
    53                           	psect	text16,global,reloc=2,class=CODE,delta=1
    54                           	psect	text17,global,reloc=2,class=CODE,delta=1
    55                           	psect	text18,global,reloc=2,class=CODE,delta=1
    56                           	psect	text19,global,reloc=2,class=CODE,delta=1
    57                           	psect	text20,global,reloc=2,class=CODE,delta=1
    58                           	psect	text21,global,reloc=2,class=CODE,delta=1
    59                           	psect	text22,global,reloc=2,class=CODE,delta=1
    60                           	psect	text23,global,reloc=2,class=CODE,delta=1
    61                           	psect	text24,global,reloc=2,class=CODE,delta=1
    62                           	psect	text25,global,reloc=2,class=CODE,delta=1
    63                           	psect	text26,global,reloc=2,class=CODE,delta=1
    64                           	psect	text27,global,reloc=2,class=CODE,delta=1
    65                           	psect	text28,global,reloc=2,class=CODE,delta=1
    66                           	psect	text29,global,reloc=2,class=CODE,delta=1
    67                           	psect	text30,global,reloc=2,class=CODE,delta=1
    68                           	psect	text31,global,reloc=2,class=CODE,delta=1
    69                           	psect	text32,global,reloc=2,class=CODE,delta=1
    70                           	psect	text33,global,reloc=2,class=CODE,delta=1
    71                           	psect	text34,global,reloc=2,class=CODE,delta=1
    72                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    73                           	psect	text36,global,reloc=2,class=CODE,delta=1
    74                           	psect	text37,global,reloc=2,class=CODE,delta=1
    75                           	psect	text38,global,reloc=2,class=CODE,delta=1
    76                           	psect	text39,global,reloc=2,class=CODE,delta=1
    77                           	psect	text40,global,reloc=2,class=CODE,delta=1
    78                           	psect	text41,global,reloc=2,class=CODE,delta=1
    79                           	psect	text42,global,reloc=2,class=CODE,delta=1
    80                           	psect	text43,global,reloc=2,class=CODE,delta=1
    81                           	psect	text44,global,reloc=2,class=CODE,delta=1
    82                           	psect	text45,global,reloc=2,class=CODE,delta=1
    83                           	psect	text46,global,reloc=2,class=CODE,delta=1
    84                           	psect	text47,global,reloc=2,class=CODE,delta=1
    85                           	psect	text48,global,reloc=2,class=CODE,delta=1
    86                           	psect	text49,global,reloc=2,class=CODE,delta=1
    87                           	psect	text50,global,reloc=2,class=CODE,delta=1
    88                           	psect	text51,global,reloc=2,class=CODE,delta=1
    89                           	psect	text52,global,reloc=2,class=CODE,delta=1
    90                           	psect	text53,global,reloc=2,class=CODE,delta=1
    91                           	psect	text54,global,reloc=2,class=CODE,delta=1
    92                           	psect	text55,global,reloc=2,class=CODE,delta=1
    93                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=1
    94                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    95                           	psect	text58,global,reloc=2,class=CODE,delta=1
    96                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    97                           	psect	text60,global,reloc=2,class=CODE,delta=1
    98                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=1
    99                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=1
   100                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=1
   101                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=1
   102                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=1
   103                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=1
   104                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=1
   105                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=1
   106                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=1
   107                           	psect	text70,global,reloc=2,class=CODE,delta=1
   108                           	psect	text71,global,reloc=2,class=CODE,delta=1,group=1
   109                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=1
   110                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=1
   111                           	psect	text74,global,reloc=2,class=CODE,delta=1
   112                           	psect	text75,global,reloc=2,class=CODE,delta=1
   113                           	psect	text76,global,reloc=2,class=CODE,delta=1,group=1
   114                           	psect	text77,global,reloc=2,class=CODE,delta=1,group=1
   115                           	psect	text78,global,reloc=2,class=CODE,delta=1
   116                           	psect	text79,global,reloc=2,class=CODE,delta=1
   117                           	psect	text80,global,reloc=2,class=CODE,delta=1
   118                           	psect	text81,global,reloc=2,class=CODE,delta=1,group=1
   119                           	psect	text82,global,reloc=2,class=CODE,delta=1,group=1
   120                           	psect	text83,global,reloc=2,class=CODE,delta=1
   121                           	psect	text84,global,reloc=2,class=CODE,delta=1
   122                           	psect	text85,global,reloc=2,class=CODE,delta=1
   123                           	psect	text86,global,reloc=2,class=CODE,delta=1
   124                           	psect	text87,global,reloc=2,class=CODE,delta=1
   125                           	psect	text88,global,reloc=2,class=CODE,delta=1
   126                           	psect	text89,global,reloc=2,class=CODE,delta=1
   127                           	psect	text90,global,reloc=2,class=CODE,delta=1
   128                           	psect	text91,global,reloc=2,class=CODE,delta=1
   129                           	psect	text92,global,reloc=2,class=CODE,delta=1
   130                           	psect	text93,global,reloc=2,class=CODE,delta=1
   131                           	psect	text94,global,reloc=2,class=CODE,delta=1
   132                           	psect	text95,global,reloc=2,class=CODE,delta=1
   133                           	psect	text96,global,reloc=2,class=CODE,delta=1
   134                           	psect	text97,global,reloc=2,class=CODE,delta=1
   135                           	psect	text98,global,reloc=2,class=CODE,delta=1
   136                           	psect	text99,global,reloc=2,class=CODE,delta=1
   137                           	psect	text100,global,reloc=2,class=CODE,delta=1
   138                           	psect	text101,global,reloc=2,class=CODE,delta=1
   139                           	psect	text102,global,reloc=2,class=CODE,delta=1
   140                           	psect	text103,global,reloc=2,class=CODE,delta=1
   141                           	psect	text104,global,reloc=2,class=CODE,delta=1
   142                           	psect	text105,global,reloc=2,class=CODE,delta=1
   143                           	psect	text106,global,reloc=2,class=CODE,delta=1
   144                           	psect	text107,global,reloc=2,class=CODE,delta=1
   145                           	psect	text108,global,reloc=2,class=CODE,delta=1
   146                           	psect	text109,global,reloc=2,class=CODE,delta=1
   147                           	psect	text110,global,reloc=2,class=CODE,delta=1
   148                           	psect	text111,global,reloc=2,class=CODE,delta=1
   149                           	psect	text112,global,reloc=2,class=CODE,delta=1
   150                           	psect	text113,global,reloc=2,class=CODE,delta=1
   151                           	psect	text114,global,reloc=2,class=CODE,delta=1
   152                           	psect	text115,global,reloc=2,class=CODE,delta=1
   153                           	psect	text116,global,reloc=2,class=CODE,delta=1
   154                           	psect	text117,global,reloc=2,class=CODE,delta=1
   155                           	psect	text118,global,reloc=2,class=CODE,delta=1
   156                           	psect	text119,global,reloc=2,class=CODE,delta=1
   157                           	psect	text120,global,reloc=2,class=CODE,delta=1
   158                           	psect	text121,global,reloc=2,class=CODE,delta=1
   159                           	psect	text122,global,reloc=2,class=CODE,delta=1
   160                           	psect	text123,global,reloc=2,class=CODE,delta=1
   161                           	psect	text124,global,reloc=2,class=CODE,delta=1
   162                           	psect	text125,global,reloc=2,class=CODE,delta=1
   163                           	psect	text126,global,reloc=2,class=CODE,delta=1
   164                           	psect	text127,global,reloc=2,class=CODE,delta=1
   165                           	psect	text128,global,reloc=2,class=CODE,delta=1
   166                           	psect	text129,global,reloc=2,class=CODE,delta=1
   167                           	psect	text130,global,reloc=2,class=CODE,delta=1
   168                           	psect	text131,global,reloc=2,class=CODE,delta=1
   169                           	psect	text132,global,reloc=2,class=CODE,delta=1
   170                           	psect	text133,global,reloc=2,class=CODE,delta=1
   171                           	psect	text134,global,reloc=2,class=CODE,delta=1
   172                           	psect	text135,global,reloc=2,class=CODE,delta=1
   173                           	psect	text136,global,reloc=2,class=CODE,delta=1
   174                           	psect	text137,global,reloc=2,class=CODE,delta=1
   175                           	psect	text138,global,reloc=2,class=CODE,delta=1
   176                           	psect	text139,global,reloc=2,class=CODE,delta=1,group=1
   177                           	psect	text140,global,reloc=2,class=CODE,delta=1
   178                           	psect	text141,global,reloc=2,class=CODE,delta=1
   179                           	psect	text142,global,reloc=2,class=CODE,delta=1
   180                           	psect	text143,global,reloc=2,class=CODE,delta=1
   181                           	psect	text144,global,reloc=2,class=CODE,delta=1
   182                           	psect	text145,global,reloc=2,class=CODE,delta=1
   183                           	psect	text146,global,reloc=2,class=CODE,delta=1
   184                           	psect	text147,global,reloc=2,class=CODE,delta=1
   185                           	psect	text148,global,reloc=2,class=CODE,delta=1
   186                           	psect	text149,global,reloc=2,class=CODE,delta=1
   187                           	psect	text150,global,reloc=2,class=CODE,delta=1
   188                           	psect	text151,global,reloc=2,class=CODE,delta=1
   189                           	psect	text152,global,reloc=2,class=CODE,delta=1
   190                           	psect	text153,global,reloc=2,class=CODE,delta=1
   191                           	psect	text154,global,reloc=2,class=CODE,delta=1
   192                           	psect	text155,global,reloc=2,class=CODE,delta=1
   193                           	psect	text156,global,reloc=2,class=CODE,delta=1
   194                           	psect	text157,global,reloc=2,class=CODE,delta=1
   195                           	psect	text158,global,reloc=2,class=CODE,delta=1
   196                           	psect	text159,global,reloc=2,class=CODE,delta=1
   197                           	psect	text160,global,reloc=2,class=CODE,delta=1,group=1
   198                           	psect	text161,global,reloc=2,class=CODE,delta=1
   199                           	psect	text162,global,reloc=2,class=CODE,delta=1,group=1
   200                           	psect	text163,global,reloc=2,class=CODE,delta=1
   201                           	psect	text164,global,reloc=2,class=CODE,delta=1
   202                           	psect	text165,global,reloc=2,class=CODE,delta=1,group=1
   203                           	psect	text166,global,reloc=2,class=CODE,delta=1
   204                           	psect	text167,global,reloc=2,class=CODE,delta=1
   205                           	psect	text168,global,reloc=2,class=CODE,delta=1
   206                           	psect	text169,global,reloc=2,class=CODE,delta=1
   207                           	psect	text170,global,reloc=2,class=CODE,delta=1
   208                           	psect	text171,global,reloc=2,class=CODE,delta=1
   209                           	psect	text172,global,reloc=2,class=CODE,delta=1
   210                           	psect	text173,global,reloc=2,class=CODE,delta=1
   211                           	psect	text174,global,reloc=2,class=CODE,delta=1
   212                           	psect	text175,global,reloc=2,class=CODE,delta=1
   213                           	psect	text176,global,reloc=2,class=CODE,delta=1
   214                           	psect	text177,global,reloc=2,class=CODE,delta=1
   215                           	psect	text178,global,reloc=2,class=CODE,delta=1
   216                           	psect	text179,global,reloc=2,class=CODE,delta=1
   217                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
   218                           	psect	text181,global,reloc=2,class=CODE,delta=1
   219                           	psect	text182,global,reloc=2,class=CODE,delta=1
   220                           	psect	text183,global,reloc=2,class=CODE,delta=1
   221                           	psect	text184,global,reloc=2,class=CODE,delta=1
   222                           	psect	text185,global,reloc=2,class=CODE,delta=1
   223                           	psect	text186,global,reloc=2,class=CODE,delta=1
   224                           	psect	text187,global,reloc=2,class=CODE,delta=1
   225                           	psect	text188,global,reloc=2,class=CODE,delta=1
   226                           	psect	text189,global,reloc=2,class=CODE,delta=1
   227                           	psect	text190,global,reloc=2,class=CODE,delta=1
   228                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   229                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   230                           	psect	text192,global,reloc=2,class=CODE,delta=1
   231                           	psect	text193,global,reloc=2,class=CODE,delta=1
   232                           	psect	text194,global,reloc=2,class=CODE,delta=1
   233                           	psect	text195,global,reloc=2,class=CODE,delta=1
   234                           	psect	text196,global,reloc=2,class=CODE,delta=1
   235                           	psect	text197,global,reloc=2,class=CODE,delta=1
   236                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   237                           	psect	text198,global,reloc=2,class=CODE,delta=1
   238                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   239                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   240                           	dabs	1,0x400,48,_BDT
   241                           	dabs	1,0x438,8,_CtrlTrfData
   242                           	dabs	1,0x430,8,_SetupPkt
   243  0000                     
   244                           ; Version 1.45
   245                           ; Generated 16/11/2017 GMT
   246                           ; 
   247                           ; Copyright © 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   248                           ; All rights reserved.
   249                           ; 
   250                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   251                           ; 
   252                           ; Redistribution and use in source and binary forms, with or without modification, are
   253                           ; permitted provided that the following conditions are met:
   254                           ; 
   255                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   256                           ;        conditions and the following disclaimer.
   257                           ; 
   258                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   259                           ;        of conditions and the following disclaimer in the documentation and/or other
   260                           ;        materials provided with the distribution.
   261                           ; 
   262                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   263                           ;        software without specific prior written permission.
   264                           ; 
   265                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   266                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   267                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   268                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   269                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   270                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   271                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   272                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   273                           ; 
   274                           ; 
   275                           ; Code-generator required, PIC18F46J50 Definitions
   276                           ; 
   277                           ; SFR Addresses
   278  0000                     
   279                           	psect	idataBANK0
   280  006CBC                     __pidataBANK0:
   281                           	opt stack 0
   282                           
   283                           ;initializer for findEmptySpot@currentPosition
   284  006CBC  20                 	db	32
   285                           
   286                           ;initializer for isNumberInMemory@currentPosition
   287  006CBD  20                 	db	32
   288                           
   289                           ;initializer for MyApp_Task@isCmdSuccessfull
   290  006CBE  01                 	db	1
   291                           
   292                           	psect	idataBANK1
   293  006CBF                     __pidataBANK1:
   294                           	opt stack 0
   295                           
   296                           ;initializer for _isMemoryEmpty
   297  006CBF  01                 	db	1
   298                           
   299                           ;initializer for InitGprsNetwork@GprsInitSts
   300  006CC0  01                 	db	1
   301                           
   302                           	psect	idataBANK2
   303  006C0E                     __pidataBANK2:
   304                           	opt stack 0
   305                           
   306                           ;initializer for Terminal@EchoOption
   307  006C0E  01                 	db	1
   308                           
   309                           ;initializer for _MainSystemTimebaseFlag
   310  006C0F  01                 	db	1
   311                           
   312                           ;initializer for _ConnTimeout
   313  006C10  00                 	db	0
   314  006C11  01                 	db	1
   315  006C12  0000               	dw	0
   316  006C14  0000               	dw	0
   317  006C16  0000               	dw	0
   318  006C18  0000               	dw	0
   319  006C1A  00                 	db	0
   320                           
   321                           ;initializer for _relayBuffer
   322  006C1B  50                 	db	80
   323  006C1C  00                 	db	0
   324                           
   325                           	psect	idataBANK3
   326  00640E                     __pidataBANK3:
   327                           	opt stack 0
   328                           
   329                           ;initializer for ModemEvtParser@F9114
   330  00640E  2B                 	db	43
   331  00640F  43                 	db	67
   332  006410  4D                 	db	77
   333  006411  54                 	db	84
   334  006412  49                 	db	73
   335                           
   336                           ;initializer for ModemEvtParser@F9112
   337  006413  2B                 	db	43
   338  006414  43                 	db	67
   339  006415  4C                 	db	76
   340  006416  49                 	db	73
   341  006417  50                 	db	80
   342                           
   343                           ;initializer for ModemEvtParser@F9110
   344  006418  52                 	db	82
   345  006419  49                 	db	73
   346  00641A  4E                 	db	78
   347  00641B  47                 	db	71
   348                           
   349                           ;initializer for Term_MainSm@TermDelay
   350  00641C  01                 	db	1
   351  00641D  01                 	db	1
   352  00641E  0000               	dw	0
   353  006420  0000               	dw	0
   354  006422  0000               	dw	0
   355  006424  0000               	dw	0
   356  006426  00                 	db	0
   357                           
   358                           ;initializer for _ConnWait
   359  006427  00                 	db	0
   360  006428  01                 	db	1
   361  006429  0000               	dw	0
   362  00642B  0000               	dw	0
   363  00642D  0000               	dw	0
   364  00642F  0000               	dw	0
   365  006431  00                 	db	0
   366                           
   367                           ;initializer for SendSmsSm@SwTimer
   368  006432  01                 	db	1
   369  006433  01                 	db	1
   370  006434  0000               	dw	0
   371  006436  0000               	dw	0
   372  006438  0000               	dw	0
   373  00643A  0000               	dw	0
   374  00643C  00                 	db	0
   375                           
   376                           ;initializer for CheckModem@Timeout
   377  00643D  00                 	db	0
   378  00643E  01                 	db	1
   379  00643F  0000               	dw	0
   380  006441  0000               	dw	0
   381  006443  0000               	dw	0
   382  006445  0000               	dw	0
   383  006447  00                 	db	0
   384                           
   385                           ;initializer for _blinkInSeconds
   386  006448  FFFF               	dw	65535
   387                           
   388                           	psect	idataBANK4
   389  006C50                     __pidataBANK4:
   390                           	opt stack 0
   391                           
   392                           ;initializer for ModemEvtParser@F9116
   393  006C50  43                 	db	67
   394  006C51  61                 	db	97
   395  006C52  6C                 	db	108
   396  006C53  6C                 	db	108
   397  006C54  20                 	db	32
   398  006C55  52                 	db	82
   399  006C56  65                 	db	101
   400  006C57  61                 	db	97
   401  006C58  64                 	db	100
   402  006C59  79                 	db	121
   403                           
   404                           	psect	idataBANK5
   405  005E38                     __pidataBANK5:
   406                           	opt stack 0
   407                           
   408                           ;initializer for _TaskTable
   409  005E38  9A                 	db	low _Mdm_DrvMainFn
   410  005E39  6C                 	db	high _Mdm_DrvMainFn
   411  005E3A  00                 	db	0
   412  005E3B  0000               	dw	0
   413  005E3D  000A               	dw	10
   414  005E3F  00                 	db	0
   415  005E40  F0                 	db	low _I2cSlv_MainTask
   416  005E41  5B                 	db	high _I2cSlv_MainTask
   417  005E42  00                 	db	0
   418  005E43  0000               	dw	0
   419  005E45  0001               	dw	1
   420  005E47  00                 	db	0
   421  005E48  88                 	db	low _Mdm_MainTask
   422  005E49  5E                 	db	high _Mdm_MainTask
   423  005E4A  00                 	db	0
   424  005E4B  0000               	dw	0
   425  005E4D  0001               	dw	1
   426  005E4F  00                 	db	0
   427  005E50  3A                 	db	low _MdmHttp_MainTask
   428  005E51  61                 	db	high _MdmHttp_MainTask
   429  005E52  00                 	db	0
   430  005E53  0000               	dw	0
   431  005E55  0001               	dw	1
   432  005E57  00                 	db	0
   433  005E58  1E                 	db	low _UsbDevice_MainTask
   434  005E59  68                 	db	high _UsbDevice_MainTask
   435  005E5A  00                 	db	0
   436  005E5B  0000               	dw	0
   437  005E5D  0001               	dw	1
   438  005E5F  00                 	db	0
   439  005E60  AE                 	db	low _Wdg_MainTask
   440  005E61  68                 	db	high _Wdg_MainTask
   441  005E62  00                 	db	0
   442  005E63  0000               	dw	0
   443  005E65  0064               	dw	100
   444  005E67  00                 	db	0
   445  005E68  C8                 	db	low _Led_MainTask
   446  005E69  3D                 	db	high _Led_MainTask
   447  005E6A  00                 	db	0
   448  005E6B  0000               	dw	0
   449  005E6D  0032               	dw	50
   450  005E6F  00                 	db	0
   451  005E70  E2                 	db	low _Rtcm_MainTask
   452  005E71  51                 	db	high _Rtcm_MainTask
   453  005E72  00                 	db	0
   454  005E73  0000               	dw	0
   455  005E75  0064               	dw	100
   456  005E77  00                 	db	0
   457  005E78  86                 	db	low _Term_MainTask
   458  005E79  6A                 	db	high _Term_MainTask
   459  005E7A  00                 	db	0
   460  005E7B  0000               	dw	0
   461  005E7D  0001               	dw	1
   462  005E7F  00                 	db	0
   463  005E80  52                 	db	low _MyApp_Task
   464  005E81  2F                 	db	high _MyApp_Task
   465  005E82  00                 	db	0
   466  005E83  0000               	dw	0
   467  005E85  0064               	dw	100
   468  005E87  00                 	db	0
   469                           
   470                           	psect	mediumconst
   471  00FC0E                     __pmediumconst:
   472                           	opt stack 0
   473  00FC0E  00                 	db	0
   474  00FC0F                     delCmdFsm@F9015:
   475                           	opt stack 0
   476  00FC0F  00                 	db	0
   477  00FC10  00                 	db	0
   478  00FC11  00                 	db	0
   479  00FC12  00                 	db	0
   480  00FC13  00                 	db	0
   481  00FC14  00                 	db	0
   482  00FC15  00                 	db	0
   483  00FC16  00                 	db	0
   484  00FC17  00                 	db	0
   485  00FC18  00                 	db	0
   486  00FC19  00                 	db	0
   487  00FC1A  00                 	db	0
   488  00FC1B  00                 	db	0
   489  00FC1C                     __end_ofdelCmdFsm@F9015:
   490                           	opt stack 0
   491  00FC1C                     _USB_SD_Ptr:
   492                           	opt stack 0
   493  00FC1C  5B                 	db	low _sd000
   494  00FC1D  FE                 	db	high _sd000
   495  00FC1E  14                 	db	low _sd001
   496  00FC1F  FE                 	db	high _sd001
   497  00FC20  EE                 	db	low _sd002
   498  00FC21  FD                 	db	high _sd002
   499  00FC22                     __end_of_USB_SD_Ptr:
   500                           	opt stack 0
   501  00FC22                     parseCommand@F9032:
   502                           	opt stack 0
   503  00FC22  52                 	db	82
   504  00FC23  45                 	db	69
   505  00FC24  53                 	db	83
   506  00FC25  3B                 	db	59
   507  00FC26                     __end_ofparseCommand@F9032:
   508                           	opt stack 0
   509  00FC26                     parseCommand@F9030:
   510                           	opt stack 0
   511  00FC26  44                 	db	68
   512  00FC27  45                 	db	69
   513  00FC28  4C                 	db	76
   514  00FC29  3B                 	db	59
   515  00FC2A                     __end_ofparseCommand@F9030:
   516                           	opt stack 0
   517  00FC2A                     parseCommand@F9028:
   518                           	opt stack 0
   519  00FC2A  41                 	db	65
   520  00FC2B  44                 	db	68
   521  00FC2C  44                 	db	68
   522  00FC2D  3B                 	db	59
   523  00FC2E                     __end_ofparseCommand@F9028:
   524                           	opt stack 0
   525  00FC2E                     _USB_CD_Ptr:
   526                           	opt stack 0
   527  00FC2E  AB                 	db	low _configDescriptor1
   528  00FC2F  FD                 	db	high _configDescriptor1
   529  00FC30                     __end_of_USB_CD_Ptr:
   530                           	opt stack 0
   531  00FC30                     _TaskNumber:
   532                           	opt stack 0
   533  00FC30  000A               	dw	10
   534  00FC32                     __end_of_TaskNumber:
   535                           	opt stack 0
   536  00FC32                     _MsgFormat:
   537                           	opt stack 0
   538  00FC32  48                 	db	72
   539  00FC33  6F                 	db	111
   540  00FC34  73                 	db	115
   541  00FC35  74                 	db	116
   542  00FC36  20                 	db	32
   543  00FC37  6D                 	db	109
   544  00FC38  65                 	db	101
   545  00FC39  73                 	db	115
   546  00FC3A  73                 	db	115
   547  00FC3B  61                 	db	97
   548  00FC3C  67                 	db	103
   549  00FC3D  65                 	db	101
   550  00FC3E  20                 	db	32
   551  00FC3F  66                 	db	102
   552  00FC40  6F                 	db	111
   553  00FC41  72                 	db	114
   554  00FC42  6D                 	db	109
   555  00FC43  61                 	db	97
   556  00FC44  74                 	db	116
   557  00FC45  3A                 	db	58
   558  00FC46  20                 	db	32
   559  00FC47  0D                 	db	13
   560  00FC48  0A                 	db	10
   561  00FC49  5B                 	db	91
   562  00FC4A  6F                 	db	111
   563  00FC4B  70                 	db	112
   564  00FC4C  5F                 	db	95
   565  00FC4D  74                 	db	116
   566  00FC4E  79                 	db	121
   567  00FC4F  70                 	db	112
   568  00FC50  65                 	db	101
   569  00FC51  5D                 	db	93
   570  00FC52  3A                 	db	58
   571  00FC53  5B                 	db	91
   572  00FC54  6F                 	db	111
   573  00FC55  70                 	db	112
   574  00FC56  5D                 	db	93
   575  00FC57  3A                 	db	58
   576  00FC58  5B                 	db	91
   577  00FC59  6C                 	db	108
   578  00FC5A  65                 	db	101
   579  00FC5B  6E                 	db	110
   580  00FC5C  5D                 	db	93
   581  00FC5D  3A                 	db	58
   582  00FC5E  5B                 	db	91
   583  00FC5F  61                 	db	97
   584  00FC60  64                 	db	100
   585  00FC61  64                 	db	100
   586  00FC62  72                 	db	114
   587  00FC63  5D                 	db	93
   588  00FC64  3A                 	db	58
   589  00FC65  5B                 	db	91
   590  00FC66  70                 	db	112
   591  00FC67  61                 	db	97
   592  00FC68  79                 	db	121
   593  00FC69  6C                 	db	108
   594  00FC6A  6F                 	db	111
   595  00FC6B  61                 	db	97
   596  00FC6C  64                 	db	100
   597  00FC6D  5D                 	db	93
   598  00FC6E  0D                 	db	13
   599  00FC6F  0A                 	db	10
   600  00FC70  0D                 	db	13
   601  00FC71  0A                 	db	10
   602  00FC72  5B                 	db	91
   603  00FC73  6F                 	db	111
   604  00FC74  70                 	db	112
   605  00FC75  5F                 	db	95
   606  00FC76  74                 	db	116
   607  00FC77  79                 	db	121
   608  00FC78  70                 	db	112
   609  00FC79  65                 	db	101
   610  00FC7A  5D                 	db	93
   611  00FC7B  20                 	db	32
   612  00FC7C  3D                 	db	61
   613  00FC7D  20                 	db	32
   614  00FC7E  53                 	db	83
   615  00FC7F  4F                 	db	79
   616  00FC80  2C                 	db	44
   617  00FC81  53                 	db	83
   618  00FC82  42                 	db	66
   619  00FC83  0D                 	db	13
   620  00FC84  0A                 	db	10
   621  00FC85  5B                 	db	91
   622  00FC86  6F                 	db	111
   623  00FC87  70                 	db	112
   624  00FC88  5D                 	db	93
   625  00FC89  20                 	db	32
   626  00FC8A  3D                 	db	61
   627  00FC8B  20                 	db	32
   628  00FC8C  52                 	db	82
   629  00FC8D  3A                 	db	58
   630  00FC8E  20                 	db	32
   631  00FC8F  72                 	db	114
   632  00FC90  65                 	db	101
   633  00FC91  61                 	db	97
   634  00FC92  64                 	db	100
   635  00FC93  2C                 	db	44
   636  00FC94  57                 	db	87
   637  00FC95  3A                 	db	58
   638  00FC96  20                 	db	32
   639  00FC97  77                 	db	119
   640  00FC98  72                 	db	114
   641  00FC99  69                 	db	105
   642  00FC9A  74                 	db	116
   643  00FC9B  65                 	db	101
   644  00FC9C  0D                 	db	13
   645  00FC9D  0A                 	db	10
   646  00FC9E  5B                 	db	91
   647  00FC9F  6C                 	db	108
   648  00FCA0  65                 	db	101
   649  00FCA1  6E                 	db	110
   650  00FCA2  5D                 	db	93
   651  00FCA3  20                 	db	32
   652  00FCA4  3D                 	db	61
   653  00FCA5  20                 	db	32
   654  00FCA6  32                 	db	50
   655  00FCA7  20                 	db	32
   656  00FCA8  62                 	db	98
   657  00FCA9  79                 	db	121
   658  00FCAA  74                 	db	116
   659  00FCAB  65                 	db	101
   660  00FCAC  20                 	db	32
   661  00FCAD  41                 	db	65
   662  00FCAE  53                 	db	83
   663  00FCAF  43                 	db	67
   664  00FCB0  49                 	db	73
   665  00FCB1  49                 	db	73
   666  00FCB2  0D                 	db	13
   667  00FCB3  0A                 	db	10
   668  00FCB4  5B                 	db	91
   669  00FCB5  61                 	db	97
   670  00FCB6  64                 	db	100
   671  00FCB7  64                 	db	100
   672  00FCB8  72                 	db	114
   673  00FCB9  5D                 	db	93
   674  00FCBA  20                 	db	32
   675  00FCBB  3D                 	db	61
   676  00FCBC  20                 	db	32
   677  00FCBD  32                 	db	50
   678  00FCBE  20                 	db	32
   679  00FCBF  62                 	db	98
   680  00FCC0  79                 	db	121
   681  00FCC1  74                 	db	116
   682  00FCC2  65                 	db	101
   683  00FCC3  20                 	db	32
   684  00FCC4  41                 	db	65
   685  00FCC5  53                 	db	83
   686  00FCC6  43                 	db	67
   687  00FCC7  49                 	db	73
   688  00FCC8  49                 	db	73
   689  00FCC9  0D                 	db	13
   690  00FCCA  0A                 	db	10
   691  00FCCB  5B                 	db	91
   692  00FCCC  70                 	db	112
   693  00FCCD  61                 	db	97
   694  00FCCE  79                 	db	121
   695  00FCCF  6C                 	db	108
   696  00FCD0  6F                 	db	111
   697  00FCD1  61                 	db	97
   698  00FCD2  64                 	db	100
   699  00FCD3  5D                 	db	93
   700  00FCD4  20                 	db	32
   701  00FCD5  3D                 	db	61
   702  00FCD6  20                 	db	32
   703  00FCD7  6D                 	db	109
   704  00FCD8  61                 	db	97
   705  00FCD9  78                 	db	120
   706  00FCDA  20                 	db	32
   707  00FCDB  32                 	db	50
   708  00FCDC  30                 	db	48
   709  00FCDD  20                 	db	32
   710  00FCDE  62                 	db	98
   711  00FCDF  79                 	db	121
   712  00FCE0  74                 	db	116
   713  00FCE1  65                 	db	101
   714  00FCE2  20                 	db	32
   715  00FCE3  41                 	db	65
   716  00FCE4  53                 	db	83
   717  00FCE5  43                 	db	67
   718  00FCE6  49                 	db	73
   719  00FCE7  49                 	db	73
   720  00FCE8  0D                 	db	13
   721  00FCE9  0A                 	db	10
   722  00FCEA  0D                 	db	13
   723  00FCEB  0A                 	db	10
   724  00FCEC  54                 	db	84
   725  00FCED  65                 	db	101
   726  00FCEE  72                 	db	114
   727  00FCEF  6D                 	db	109
   728  00FCF0  69                 	db	105
   729  00FCF1  6E                 	db	110
   730  00FCF2  61                 	db	97
   731  00FCF3  6C                 	db	108
   732  00FCF4  20                 	db	32
   733  00FCF5  4D                 	db	77
   734  00FCF6  6F                 	db	111
   735  00FCF7  64                 	db	100
   736  00FCF8  65                 	db	101
   737  00FCF9  3A                 	db	58
   738  00FCFA  20                 	db	32
   739  00FCFB  43                 	db	67
   740  00FCFC  4F                 	db	79
   741  00FCFD  4D                 	db	77
   742  00FCFE  4D                 	db	77
   743  00FCFF  41                 	db	65
   744  00FD00  4E                 	db	78
   745  00FD01  44                 	db	68
   746  00FD02  20                 	db	32
   747  00FD03  4D                 	db	77
   748  00FD04  4F                 	db	79
   749  00FD05  44                 	db	68
   750  00FD06  45                 	db	69
   751  00FD07  0D                 	db	13
   752  00FD08  0A                 	db	10
   753  00FD09  4D                 	db	77
   754  00FD0A  6F                 	db	111
   755  00FD0B  64                 	db	100
   756  00FD0C  65                 	db	101
   757  00FD0D  6D                 	db	109
   758  00FD0E  20                 	db	32
   759  00FD0F  54                 	db	84
   760  00FD10  79                 	db	121
   761  00FD11  70                 	db	112
   762  00FD12  65                 	db	101
   763  00FD13  3A                 	db	58
   764  00FD14  20                 	db	32
   765  00FD15  47                 	db	71
   766  00FD16  53                 	db	83
   767  00FD17  4D                 	db	77
   768  00FD18  2F                 	db	47
   769  00FD19  47                 	db	71
   770  00FD1A  50                 	db	80
   771  00FD1B  52                 	db	82
   772  00FD1C  53                 	db	83
   773  00FD1D  0D                 	db	13
   774  00FD1E  0A                 	db	10
   775  00FD1F  0D                 	db	13
   776  00FD20  0A                 	db	10
   777  00FD21  00                 	db	0
   778  00FD22                     __end_of_MsgFormat:
   779                           	opt stack 0
   780  00FD22                     _Welcome:
   781                           	opt stack 0
   782  00FD22  2A                 	db	42
   783  00FD23  2A                 	db	42
   784  00FD24  2A                 	db	42
   785  00FD25  2A                 	db	42
   786  00FD26  2A                 	db	42
   787  00FD27  2A                 	db	42
   788  00FD28  2A                 	db	42
   789  00FD29  2A                 	db	42
   790  00FD2A  2A                 	db	42
   791  00FD2B  2A                 	db	42
   792  00FD2C  2A                 	db	42
   793  00FD2D  2A                 	db	42
   794  00FD2E  2A                 	db	42
   795  00FD2F  2A                 	db	42
   796  00FD30  2A                 	db	42
   797  00FD31  2A                 	db	42
   798  00FD32  2A                 	db	42
   799  00FD33  2A                 	db	42
   800  00FD34  2A                 	db	42
   801  00FD35  2A                 	db	42
   802  00FD36  2A                 	db	42
   803  00FD37  2A                 	db	42
   804  00FD38  2A                 	db	42
   805  00FD39  2A                 	db	42
   806  00FD3A  2A                 	db	42
   807  00FD3B  2A                 	db	42
   808  00FD3C  2A                 	db	42
   809  00FD3D  2A                 	db	42
   810  00FD3E  2A                 	db	42
   811  00FD3F  2A                 	db	42
   812  00FD40  2A                 	db	42
   813  00FD41  2A                 	db	42
   814  00FD42  2A                 	db	42
   815  00FD43  2A                 	db	42
   816  00FD44  2A                 	db	42
   817  00FD45  2A                 	db	42
   818  00FD46  2A                 	db	42
   819  00FD47  2A                 	db	42
   820  00FD48  2A                 	db	42
   821  00FD49  2A                 	db	42
   822  00FD4A  2A                 	db	42
   823  00FD4B  2A                 	db	42
   824  00FD4C  2A                 	db	42
   825  00FD4D  2A                 	db	42
   826  00FD4E  2A                 	db	42
   827  00FD4F  2A                 	db	42
   828  00FD50  2A                 	db	42
   829  00FD51  2A                 	db	42
   830  00FD52  2A                 	db	42
   831  00FD53  0D                 	db	13
   832  00FD54  0A                 	db	10
   833  00FD55  20                 	db	32
   834  00FD56  20                 	db	32
   835  00FD57  20                 	db	32
   836  00FD58  20                 	db	32
   837  00FD59  20                 	db	32
   838  00FD5A  20                 	db	32
   839  00FD5B  20                 	db	32
   840  00FD5C  20                 	db	32
   841  00FD5D  20                 	db	32
   842  00FD5E  20                 	db	32
   843  00FD5F  20                 	db	32
   844  00FD60  20                 	db	32
   845  00FD61  20                 	db	32
   846  00FD62  20                 	db	32
   847  00FD63  20                 	db	32
   848  00FD64  20                 	db	32
   849  00FD65  20                 	db	32
   850  00FD66  20                 	db	32
   851  00FD67  4D                 	db	77
   852  00FD68  45                 	db	69
   853  00FD69  52                 	db	82
   854  00FD6A  43                 	db	67
   855  00FD6B  55                 	db	85
   856  00FD6C  52                 	db	82
   857  00FD6D  59                 	db	89
   858  00FD6E  20                 	db	32
   859  00FD6F  53                 	db	83
   860  00FD70  59                 	db	89
   861  00FD71  53                 	db	83
   862  00FD72  54                 	db	84
   863  00FD73  45                 	db	69
   864  00FD74  4D                 	db	77
   865  00FD75  0D                 	db	13
   866  00FD76  0A                 	db	10
   867  00FD77  2A                 	db	42
   868  00FD78  2A                 	db	42
   869  00FD79  2A                 	db	42
   870  00FD7A  2A                 	db	42
   871  00FD7B  2A                 	db	42
   872  00FD7C  2A                 	db	42
   873  00FD7D  2A                 	db	42
   874  00FD7E  2A                 	db	42
   875  00FD7F  2A                 	db	42
   876  00FD80  2A                 	db	42
   877  00FD81  2A                 	db	42
   878  00FD82  2A                 	db	42
   879  00FD83  2A                 	db	42
   880  00FD84  2A                 	db	42
   881  00FD85  2A                 	db	42
   882  00FD86  2A                 	db	42
   883  00FD87  2A                 	db	42
   884  00FD88  2A                 	db	42
   885  00FD89  2A                 	db	42
   886  00FD8A  2A                 	db	42
   887  00FD8B  2A                 	db	42
   888  00FD8C  2A                 	db	42
   889  00FD8D  2A                 	db	42
   890  00FD8E  2A                 	db	42
   891  00FD8F  2A                 	db	42
   892  00FD90  2A                 	db	42
   893  00FD91  2A                 	db	42
   894  00FD92  2A                 	db	42
   895  00FD93  2A                 	db	42
   896  00FD94  2A                 	db	42
   897  00FD95  2A                 	db	42
   898  00FD96  2A                 	db	42
   899  00FD97  2A                 	db	42
   900  00FD98  2A                 	db	42
   901  00FD99  2A                 	db	42
   902  00FD9A  2A                 	db	42
   903  00FD9B  2A                 	db	42
   904  00FD9C  2A                 	db	42
   905  00FD9D  2A                 	db	42
   906  00FD9E  2A                 	db	42
   907  00FD9F  2A                 	db	42
   908  00FDA0  2A                 	db	42
   909  00FDA1  2A                 	db	42
   910  00FDA2  2A                 	db	42
   911  00FDA3  2A                 	db	42
   912  00FDA4  2A                 	db	42
   913  00FDA5  2A                 	db	42
   914  00FDA6  2A                 	db	42
   915  00FDA7  2A                 	db	42
   916  00FDA8  0D                 	db	13
   917  00FDA9  0A                 	db	10
   918  00FDAA  00                 	db	0
   919  00FDAB                     __end_of_Welcome:
   920                           	opt stack 0
   921  00FDAB                     _configDescriptor1:
   922                           	opt stack 0
   923  00FDAB  09                 	db	9
   924  00FDAC  02                 	db	2
   925  00FDAD  43                 	db	67
   926  00FDAE  00                 	db	0
   927  00FDAF  02                 	db	2
   928  00FDB0  01                 	db	1
   929  00FDB1  00                 	db	0
   930  00FDB2  C0                 	db	192
   931  00FDB3  32                 	db	50
   932  00FDB4  09                 	db	9
   933  00FDB5  04                 	db	4
   934  00FDB6  00                 	db	0
   935  00FDB7  00                 	db	0
   936  00FDB8  01                 	db	1
   937  00FDB9  02                 	db	2
   938  00FDBA  02                 	db	2
   939  00FDBB  01                 	db	1
   940  00FDBC  00                 	db	0
   941  00FDBD  05                 	db	5
   942  00FDBE  24                 	db	36
   943  00FDBF  00                 	db	0
   944  00FDC0  10                 	db	16
   945  00FDC1  01                 	db	1
   946  00FDC2  04                 	db	4
   947  00FDC3  24                 	db	36
   948  00FDC4  02                 	db	2
   949  00FDC5  02                 	db	2
   950  00FDC6  05                 	db	5
   951  00FDC7  24                 	db	36
   952  00FDC8  06                 	db	6
   953  00FDC9  00                 	db	0
   954  00FDCA  01                 	db	1
   955  00FDCB  05                 	db	5
   956  00FDCC  24                 	db	36
   957  00FDCD  01                 	db	1
   958  00FDCE  00                 	db	0
   959  00FDCF  01                 	db	1
   960  00FDD0  07                 	db	7
   961  00FDD1  05                 	db	5
   962  00FDD2  81                 	db	129
   963  00FDD3  03                 	db	3
   964  00FDD4  08                 	db	8
   965  00FDD5  00                 	db	0
   966  00FDD6  02                 	db	2
   967  00FDD7  09                 	db	9
   968  00FDD8  04                 	db	4
   969  00FDD9  01                 	db	1
   970  00FDDA  00                 	db	0
   971  00FDDB  02                 	db	2
   972  00FDDC  0A                 	db	10
   973  00FDDD  00                 	db	0
   974  00FDDE  00                 	db	0
   975  00FDDF  00                 	db	0
   976  00FDE0  07                 	db	7
   977  00FDE1  05                 	db	5
   978  00FDE2  02                 	db	2
   979  00FDE3  02                 	db	2
   980  00FDE4  40                 	db	64
   981  00FDE5  00                 	db	0
   982  00FDE6  00                 	db	0
   983  00FDE7  07                 	db	7
   984  00FDE8  05                 	db	5
   985  00FDE9  82                 	db	130
   986  00FDEA  02                 	db	2
   987  00FDEB  40                 	db	64
   988  00FDEC  00                 	db	0
   989  00FDED  00                 	db	0
   990  00FDEE                     __end_of_configDescriptor1:
   991                           	opt stack 0
   992  00FDEE                     _sd002:
   993                           	opt stack 0
   994  00FDEE  26                 	db	38
   995  00FDEF  03                 	db	3
   996  00FDF0  0054               	dw	84
   997  00FDF2  0065               	dw	101
   998  00FDF4  0072               	dw	114
   999  00FDF6  006D               	dw	109
  1000  00FDF8  0069               	dw	105
  1001  00FDFA  006E               	dw	110
  1002  00FDFC  0061               	dw	97
  1003  00FDFE  006C               	dw	108
  1004  00FE00  0020               	dw	32
  1005  00FE02  0049               	dw	73
  1006  00FE04  006E               	dw	110
  1007  00FE06  0074               	dw	116
  1008  00FE08  0065               	dw	101
  1009  00FE0A  0072               	dw	114
  1010  00FE0C  0066               	dw	102
  1011  00FE0E  0061               	dw	97
  1012  00FE10  0063               	dw	99
  1013  00FE12  0065               	dw	101
  1014  00FE14                     __end_of_sd002:
  1015                           	opt stack 0
  1016  00FE14                     _sd001:
  1017                           	opt stack 0
  1018  00FE14  1E                 	db	30
  1019  00FE15  03                 	db	3
  1020  00FE16  004D               	dw	77
  1021  00FE18  0065               	dw	101
  1022  00FE1A  0072               	dw	114
  1023  00FE1C  0063               	dw	99
  1024  00FE1E  0075               	dw	117
  1025  00FE20  0072               	dw	114
  1026  00FE22  0079               	dw	121
  1027  00FE24  0020               	dw	32
  1028  00FE26  0053               	dw	83
  1029  00FE28  0079               	dw	121
  1030  00FE2A  0073               	dw	115
  1031  00FE2C  0074               	dw	116
  1032  00FE2E  0065               	dw	101
  1033  00FE30  006D               	dw	109
  1034  00FE32                     __end_of_sd001:
  1035                           	opt stack 0
  1036  00FE32                     _MsgReady:
  1037                           	opt stack 0
  1038  00FE32  0D                 	db	13
  1039  00FE33  0A                 	db	10
  1040  00FE34  53                 	db	83
  1041  00FE35  79                 	db	121
  1042  00FE36  73                 	db	115
  1043  00FE37  74                 	db	116
  1044  00FE38  65                 	db	101
  1045  00FE39  6D                 	db	109
  1046  00FE3A  20                 	db	32
  1047  00FE3B  52                 	db	82
  1048  00FE3C  65                 	db	101
  1049  00FE3D  61                 	db	97
  1050  00FE3E  64                 	db	100
  1051  00FE3F  79                 	db	121
  1052  00FE40  2E                 	db	46
  1053  00FE41  2E                 	db	46
  1054  00FE42  2E                 	db	46
  1055  00FE43  20                 	db	32
  1056  00FE44  0D                 	db	13
  1057  00FE45  0A                 	db	10
  1058  00FE46  0D                 	db	13
  1059  00FE47  0A                 	db	10
  1060  00FE48  00                 	db	0
  1061  00FE49                     __end_of_MsgReady:
  1062                           	opt stack 0
  1063  00FE49                     _device_dsc:
  1064                           	opt stack 0
  1065  00FE49  12                 	db	18
  1066  00FE4A  01                 	db	1
  1067  00FE4B  0200               	dw	512
  1068  00FE4D  02                 	db	2
  1069  00FE4E  00                 	db	0
  1070  00FE4F  00                 	db	0
  1071  00FE50  08                 	db	8
  1072  00FE51  04D8               	dw	1240
  1073  00FE53  000A               	dw	10
  1074  00FE55  0100               	dw	256
  1075  00FE57  01                 	db	1
  1076  00FE58  02                 	db	2
  1077  00FE59  00                 	db	0
  1078  00FE5A  01                 	db	1
  1079  00FE5B                     __end_of_device_dsc:
  1080                           	opt stack 0
  1081  00FE5B                     _sd000:
  1082                           	opt stack 0
  1083  00FE5B  04                 	db	4
  1084  00FE5C  03                 	db	3
  1085  00FE5D  0409               	dw	1033
  1086  00FE5F                     __end_of_sd000:
  1087                           	opt stack 0
  1088  0000                     _RPINR1	set	3815
  1089  0000                     _UEP0bits	set	3878
  1090  0000                     _UIEbits	set	3894
  1091  0000                     _UADDR	set	3896
  1092  0000                     _UIE	set	3894
  1093  0000                     _UEIE	set	3895
  1094  0000                     _UCFG	set	3897
  1095  0000                     _RTCCAL	set	3902
  1096  0000                     _PADCFG1bits	set	3900
  1097  0000                     _RTCCFGbits	set	3903
  1098  0000                     _DSCONLbits	set	3916
  1099  0000                     _DSGPR1	set	3919
  1100  0000                     _DSGPR0	set	3918
  1101  0000                     _DSCONHbits	set	3917
  1102  0000                     _ANCON1bits	set	3913
  1103  0000                     _UEP1	set	3879
  1104  0000                     _UEP0	set	3878
  1105  0000                     _T1CONbits	set	4045
  1106  0000                     _PORTDbits	set	3971
  1107  0000                     _USTAT	set	3940
  1108  0000                     _PIR2bits	set	4001
  1109  0000                     _UCON	set	3941
  1110  0000                     _UIRbits	set	3938
  1111  0000                     _UCONbits	set	3941
  1112  0000                     _UIR	set	3938
  1113  0000                     _UEIR	set	3939
  1114  0000                     _PIE2bits	set	4000
  1115  0000                     _BAUDCON2	set	3964
  1116  0000                     _RCSTA2	set	3996
  1117  0000                     _BAUDCON1	set	3966
  1118  0000                     _RCSTA1	set	4012
  1119  0000                     _TRISCbits	set	3988
  1120  0000                     _TXSTA2	set	4008
  1121  0000                     _TXSTA1	set	4013
  1122  0000                     _RCREG2	set	4010
  1123  0000                     _RCREG1	set	4015
  1124  0000                     _TXREG2	set	4009
  1125  0000                     _TXREG1	set	4014
  1126  0000                     _SPBRG2	set	4011
  1127  0000                     _SPBRGH2	set	3965
  1128  0000                     _SPBRG1	set	4016
  1129  0000                     _SPBRGH1	set	3967
  1130  0000                     _PR4	set	3959
  1131  0000                     _PR2	set	4043
  1132  0000                     _PIE1bits	set	3997
  1133  0000                     _IPR1bits	set	3999
  1134  0000                     _T4CONbits	set	3958
  1135  0000                     _T2CONbits	set	4042
  1136  0000                     _ALRMVALL	set	3982
  1137  0000                     _ALRMVALH	set	3983
  1138  0000                     _RTCVALH	set	3993
  1139  0000                     _RTCVALL	set	3992
  1140  0000                     _ALRMRPTbits	set	3984
  1141  0000                     _ALRMCFGbits	set	3985
  1142  0000                     _PIE3bits	set	4003
  1143  0000                     _IPR3bits	set	4005
  1144  0000                     _OSCCONbits	set	4051
  1145  0000                     _PORTEbits	set	3972
  1146  0000                     _TRISEbits	set	3990
  1147  0000                     _WDTCONbits	set	4032
  1148  0000                     _INTCON2bits	set	4081
  1149  0000                     _TRISBbits	set	3987
  1150  0000                     _OSCTUNEbits	set	3995
  1151  0000                     _SSP2CON1	set	3954
  1152  0000                     _TRISDbits	set	3989
  1153  0000                     _SSP2BUF	set	3957
  1154  0000                     _SSP2CON2bits	set	3953
  1155  0000                     _SSP2STAT	set	3955
  1156  0000                     _SSP2CON2	set	3953
  1157  0000                     _SSP2ADD	set	3956
  1158  0000                     _PIR1bits	set	3998
  1159  0000                     _PIR3bits	set	4004
  1160  0000                     _INTCON3bits	set	4080
  1161  0000                     _INTCONbits	set	4082
  1162  0000                     _RCONbits	set	4048
  1163  00FE5F                     STR_21:
  1164  00FE5F  20                 	db	32
  1165  00FE60  4C                 	db	76	;'L'
  1166  00FE61  61                 	db	97	;'a'
  1167  00FE62  7A                 	db	122	;'z'
  1168  00FE63  79                 	db	121	;'y'
  1169  00FE64  20                 	db	32
  1170  00FE65  64                 	db	100	;'d'
  1171  00FE66  65                 	db	101	;'e'
  1172  00FE67  76                 	db	118	;'v'
  1173  00FE68  69                 	db	105	;'i'
  1174  00FE69  63                 	db	99	;'c'
  1175  00FE6A  65                 	db	101	;'e'
  1176  00FE6B  2E                 	db	46
  1177  00FE6C  2E                 	db	46
  1178  00FE6D  2E                 	db	46
  1179  00FE6E  79                 	db	121	;'y'
  1180  00FE6F  6F                 	db	111	;'o'
  1181  00FE70  75                 	db	117	;'u'
  1182  00FE71  27                 	db	39
  1183  00FE72  76                 	db	118	;'v'
  1184  00FE73  65                 	db	101	;'e'
  1185  00FE74  20                 	db	32
  1186  00FE75  62                 	db	98	;'b'
  1187  00FE76  65                 	db	101	;'e'
  1188  00FE77  65                 	db	101	;'e'
  1189  00FE78  6E                 	db	110	;'n'
  1190  00FE79  20                 	db	32
  1191  00FE7A  74                 	db	116	;'t'
  1192  00FE7B  69                 	db	105	;'i'
  1193  00FE7C  6D                 	db	109	;'m'
  1194  00FE7D  65                 	db	101	;'e'
  1195  00FE7E  64                 	db	100	;'d'
  1196  00FE7F  2D                 	db	45
  1197  00FE80  6F                 	db	111	;'o'
  1198  00FE81  75                 	db	117	;'u'
  1199  00FE82  74                 	db	116	;'t'
  1200  00FE83  21                 	db	33
  1201  00FE84  21                 	db	33
  1202  00FE85  21                 	db	33
  1203  00FE86  0D                 	db	13
  1204  00FE87  0A                 	db	10
  1205  00FE88  00                 	db	0
  1206  00FE89                     STR_8:
  1207  00FE89  41                 	db	65	;'A'
  1208  00FE8A  54                 	db	84	;'T'
  1209  00FE8B  2B                 	db	43
  1210  00FE8C  53                 	db	83	;'S'
  1211  00FE8D  41                 	db	65	;'A'
  1212  00FE8E  50                 	db	80	;'P'
  1213  00FE8F  42                 	db	66	;'B'
  1214  00FE90  52                 	db	82	;'R'
  1215  00FE91  3D                 	db	61	;'='
  1216  00FE92  33                 	db	51	;'3'
  1217  00FE93  2C                 	db	44
  1218  00FE94  31                 	db	49	;'1'
  1219  00FE95  2C                 	db	44
  1220  00FE96  22                 	db	34
  1221  00FE97  43                 	db	67	;'C'
  1222  00FE98  6F                 	db	111	;'o'
  1223  00FE99  6E                 	db	110	;'n'
  1224  00FE9A  74                 	db	116	;'t'
  1225  00FE9B  79                 	db	121	;'y'
  1226  00FE9C  70                 	db	112	;'p'
  1227  00FE9D  65                 	db	101	;'e'
  1228  00FE9E  22                 	db	34
  1229  00FE9F  2C                 	db	44
  1230  00FEA0  22                 	db	34
  1231  00FEA1  47                 	db	71	;'G'
  1232  00FEA2  50                 	db	80	;'P'
  1233  00FEA3  52                 	db	82	;'R'
  1234  00FEA4  53                 	db	83	;'S'
  1235  00FEA5  22                 	db	34
  1236  00FEA6  0D                 	db	13
  1237  00FEA7  00                 	db	0
  1238  00FEA8                     STR_14:
  1239  00FEA8  41                 	db	65	;'A'
  1240  00FEA9  54                 	db	84	;'T'
  1241  00FEAA  2B                 	db	43
  1242  00FEAB  48                 	db	72	;'H'
  1243  00FEAC  54                 	db	84	;'T'
  1244  00FEAD  54                 	db	84	;'T'
  1245  00FEAE  50                 	db	80	;'P'
  1246  00FEAF  50                 	db	80	;'P'
  1247  00FEB0  41                 	db	65	;'A'
  1248  00FEB1  52                 	db	82	;'R'
  1249  00FEB2  41                 	db	65	;'A'
  1250  00FEB3  3D                 	db	61	;'='
  1251  00FEB4  22                 	db	34
  1252  00FEB5  43                 	db	67	;'C'
  1253  00FEB6  49                 	db	73	;'I'
  1254  00FEB7  44                 	db	68	;'D'
  1255  00FEB8  22                 	db	34
  1256  00FEB9  2C                 	db	44
  1257  00FEBA  31                 	db	49	;'1'
  1258  00FEBB  0D                 	db	13
  1259  00FEBC  00                 	db	0
  1260  00FEBD                     STR_9:
  1261  00FEBD  41                 	db	65	;'A'
  1262  00FEBE  54                 	db	84	;'T'
  1263  00FEBF  2B                 	db	43
  1264  00FEC0  53                 	db	83	;'S'
  1265  00FEC1  41                 	db	65	;'A'
  1266  00FEC2  50                 	db	80	;'P'
  1267  00FEC3  42                 	db	66	;'B'
  1268  00FEC4  52                 	db	82	;'R'
  1269  00FEC5  3D                 	db	61	;'='
  1270  00FEC6  33                 	db	51	;'3'
  1271  00FEC7  2C                 	db	44
  1272  00FEC8  31                 	db	49	;'1'
  1273  00FEC9  2C                 	db	44
  1274  00FECA  22                 	db	34
  1275  00FECB  41                 	db	65	;'A'
  1276  00FECC  50                 	db	80	;'P'
  1277  00FECD  4E                 	db	78	;'N'
  1278  00FECE  22                 	db	34
  1279  00FECF  2C                 	db	44
  1280  00FED0  22                 	db	34
  1281  00FED1  00                 	db	0
  1282  00FED2                     STR_23:
  1283  00FED2  46                 	db	70	;'F'
  1284  00FED3  72                 	db	114	;'r'
  1285  00FED4  61                 	db	97	;'a'
  1286  00FED5  6D                 	db	109	;'m'
  1287  00FED6  65                 	db	101	;'e'
  1288  00FED7  77                 	db	119	;'w'
  1289  00FED8  6F                 	db	111	;'o'
  1290  00FED9  72                 	db	114	;'r'
  1291  00FEDA  6B                 	db	107	;'k'
  1292  00FEDB  20                 	db	32
  1293  00FEDC  56                 	db	86	;'V'
  1294  00FEDD  65                 	db	101	;'e'
  1295  00FEDE  72                 	db	114	;'r'
  1296  00FEDF  73                 	db	115	;'s'
  1297  00FEE0  69                 	db	105	;'i'
  1298  00FEE1  6F                 	db	111	;'o'
  1299  00FEE2  6E                 	db	110	;'n'
  1300  00FEE3  3A                 	db	58	;':'
  1301  00FEE4  20                 	db	32
  1302  00FEE5  00                 	db	0
  1303  00FEE6                     STR_15:
  1304  00FEE6  41                 	db	65	;'A'
  1305  00FEE7  54                 	db	84	;'T'
  1306  00FEE8  2B                 	db	43
  1307  00FEE9  48                 	db	72	;'H'
  1308  00FEEA  54                 	db	84	;'T'
  1309  00FEEB  54                 	db	84	;'T'
  1310  00FEEC  50                 	db	80	;'P'
  1311  00FEED  50                 	db	80	;'P'
  1312  00FEEE  41                 	db	65	;'A'
  1313  00FEEF  52                 	db	82	;'R'
  1314  00FEF0  41                 	db	65	;'A'
  1315  00FEF1  3D                 	db	61	;'='
  1316  00FEF2  22                 	db	34
  1317  00FEF3  55                 	db	85	;'U'
  1318  00FEF4  52                 	db	82	;'R'
  1319  00FEF5  4C                 	db	76	;'L'
  1320  00FEF6  22                 	db	34
  1321  00FEF7  2C                 	db	44
  1322  00FEF8  22                 	db	34
  1323  00FEF9  00                 	db	0
  1324  00FEFA                     STR_30:
  1325  00FEFA  41                 	db	65	;'A'
  1326  00FEFB  54                 	db	84	;'T'
  1327  00FEFC  2B                 	db	43
  1328  00FEFD  43                 	db	67	;'C'
  1329  00FEFE  4D                 	db	77	;'M'
  1330  00FEFF  47                 	db	71	;'G'
  1331  00FF00  44                 	db	68	;'D'
  1332  00FF01  41                 	db	65	;'A'
  1333  00FF02  3D                 	db	61	;'='
  1334  00FF03  44                 	db	68	;'D'
  1335  00FF04  45                 	db	69	;'E'
  1336  00FF05  4C                 	db	76	;'L'
  1337  00FF06  20                 	db	32
  1338  00FF07  41                 	db	65	;'A'
  1339  00FF08  4C                 	db	76	;'L'
  1340  00FF09  4C                 	db	76	;'L'
  1341  00FF0A  0D                 	db	13
  1342  00FF0B  0A                 	db	10
  1343  00FF0C  00                 	db	0
  1344  00FF0D                     STR_27:
  1345  00FF0D  42                 	db	66	;'B'
  1346  00FF0E  75                 	db	117	;'u'
  1347  00FF0F  69                 	db	105	;'i'
  1348  00FF10  6C                 	db	108	;'l'
  1349  00FF11  64                 	db	100	;'d'
  1350  00FF12  20                 	db	32
  1351  00FF13  44                 	db	68	;'D'
  1352  00FF14  61                 	db	97	;'a'
  1353  00FF15  74                 	db	116	;'t'
  1354  00FF16  65                 	db	101	;'e'
  1355  00FF17  3A                 	db	58	;':'
  1356  00FF18  20                 	db	32
  1357  00FF19  25                 	db	37
  1358  00FF1A  73                 	db	115	;'s'
  1359  00FF1B  0D                 	db	13
  1360  00FF1C  0A                 	db	10
  1361  00FF1D  00                 	db	0
  1362  00FF1E                     STR_16:
  1363  00FF1E  41                 	db	65	;'A'
  1364  00FF1F  54                 	db	84	;'T'
  1365  00FF20  2B                 	db	43
  1366  00FF21  48                 	db	72	;'H'
  1367  00FF22  54                 	db	84	;'T'
  1368  00FF23  54                 	db	84	;'T'
  1369  00FF24  50                 	db	80	;'P'
  1370  00FF25  41                 	db	65	;'A'
  1371  00FF26  43                 	db	67	;'C'
  1372  00FF27  54                 	db	84	;'T'
  1373  00FF28  49                 	db	73	;'I'
  1374  00FF29  4F                 	db	79	;'O'
  1375  00FF2A  4E                 	db	78	;'N'
  1376  00FF2B  3D                 	db	61	;'='
  1377  00FF2C  30                 	db	48	;'0'
  1378  00FF2D  0D                 	db	13
  1379  00FF2E  00                 	db	0
  1380  00FF2F                     STR_29:
  1381  00FF2F  41                 	db	65	;'A'
  1382  00FF30  54                 	db	84	;'T'
  1383  00FF31  2B                 	db	43
  1384  00FF32  43                 	db	67	;'C'
  1385  00FF33  4D                 	db	77	;'M'
  1386  00FF34  47                 	db	71	;'G'
  1387  00FF35  44                 	db	68	;'D'
  1388  00FF36  3D                 	db	61	;'='
  1389  00FF37  31                 	db	49	;'1'
  1390  00FF38  2C                 	db	44
  1391  00FF39  30                 	db	48	;'0'
  1392  00FF3A  0D                 	db	13
  1393  00FF3B  0A                 	db	10
  1394  00FF3C  00                 	db	0
  1395  00FF3D  41                 	db	65	;'A'
  1396  00FF3E  54                 	db	84	;'T'
  1397  00FF3F  2B                 	db	43
  1398  00FF40  48                 	db	72	;'H'
  1399  00FF41  54                 	db	84	;'T'
  1400  00FF42  54                 	db	84	;'T'
  1401  00FF43  50                 	db	80	;'P'
  1402  00FF44  53                 	db	83	;'S'
  1403  00FF45  53                 	db	83	;'S'
  1404  00FF46  4C                 	db	76	;'L'
  1405  00FF47  3D                 	db	61	;'='
  1406  00FF48  30                 	db	48	;'0'
  1407  00FF49  0D                 	db	13
  1408  00FF4A  00                 	db	0
  1409  00FF4B                     STR_10:
  1410  00FF4B  41                 	db	65	;'A'
  1411  00FF4C  54                 	db	84	;'T'
  1412  00FF4D  2B                 	db	43
  1413  00FF4E  53                 	db	83	;'S'
  1414  00FF4F  41                 	db	65	;'A'
  1415  00FF50  50                 	db	80	;'P'
  1416  00FF51  42                 	db	66	;'B'
  1417  00FF52  52                 	db	82	;'R'
  1418  00FF53  3D                 	db	61	;'='
  1419  00FF54  31                 	db	49	;'1'
  1420  00FF55  2C                 	db	44
  1421  00FF56  31                 	db	49	;'1'
  1422  00FF57  0D                 	db	13
  1423  00FF58  00                 	db	0
  1424  00FF59                     STR_11:
  1425  00FF59  41                 	db	65	;'A'
  1426  00FF5A  54                 	db	84	;'T'
  1427  00FF5B  2B                 	db	43
  1428  00FF5C  53                 	db	83	;'S'
  1429  00FF5D  41                 	db	65	;'A'
  1430  00FF5E  50                 	db	80	;'P'
  1431  00FF5F  42                 	db	66	;'B'
  1432  00FF60  52                 	db	82	;'R'
  1433  00FF61  3D                 	db	61	;'='
  1434  00FF62  32                 	db	50	;'2'
  1435  00FF63  2C                 	db	44
  1436  00FF64  31                 	db	49	;'1'
  1437  00FF65  0D                 	db	13
  1438  00FF66  00                 	db	0
  1439  00FF67                     STR_13:
  1440  00FF67  41                 	db	65	;'A'
  1441  00FF68  54                 	db	84	;'T'
  1442  00FF69  2B                 	db	43
  1443  00FF6A  48                 	db	72	;'H'
  1444  00FF6B  54                 	db	84	;'T'
  1445  00FF6C  54                 	db	84	;'T'
  1446  00FF6D  50                 	db	80	;'P'
  1447  00FF6E  53                 	db	83	;'S'
  1448  00FF6F  53                 	db	83	;'S'
  1449  00FF70  4C                 	db	76	;'L'
  1450  00FF71  3D                 	db	61	;'='
  1451  00FF72  31                 	db	49	;'1'
  1452  00FF73  0D                 	db	13
  1453  00FF74  00                 	db	0
  1454  00FF75                     STR_2:
  1455  00FF75  41                 	db	65	;'A'
  1456  00FF76  54                 	db	84	;'T'
  1457  00FF77  2B                 	db	43
  1458  00FF78  49                 	db	73	;'I'
  1459  00FF79  50                 	db	80	;'P'
  1460  00FF7A  52                 	db	82	;'R'
  1461  00FF7B  3D                 	db	61	;'='
  1462  00FF7C  39                 	db	57	;'9'
  1463  00FF7D  36                 	db	54	;'6'
  1464  00FF7E  30                 	db	48	;'0'
  1465  00FF7F  30                 	db	48	;'0'
  1466  00FF80  0D                 	db	13
  1467  00FF81  0A                 	db	10
  1468  00FF82  00                 	db	0
  1469  00FF83                     STR_17:
  1470  00FF83  41                 	db	65	;'A'
  1471  00FF84  54                 	db	84	;'T'
  1472  00FF85  2B                 	db	43
  1473  00FF86  48                 	db	72	;'H'
  1474  00FF87  54                 	db	84	;'T'
  1475  00FF88  54                 	db	84	;'T'
  1476  00FF89  50                 	db	80	;'P'
  1477  00FF8A  52                 	db	82	;'R'
  1478  00FF8B  45                 	db	69	;'E'
  1479  00FF8C  41                 	db	65	;'A'
  1480  00FF8D  44                 	db	68	;'D'
  1481  00FF8E  0D                 	db	13
  1482  00FF8F  00                 	db	0
  1483  00FF90                     STR_18:
  1484  00FF90  41                 	db	65	;'A'
  1485  00FF91  54                 	db	84	;'T'
  1486  00FF92  2B                 	db	43
  1487  00FF93  48                 	db	72	;'H'
  1488  00FF94  54                 	db	84	;'T'
  1489  00FF95  54                 	db	84	;'T'
  1490  00FF96  50                 	db	80	;'P'
  1491  00FF97  54                 	db	84	;'T'
  1492  00FF98  45                 	db	69	;'E'
  1493  00FF99  52                 	db	82	;'R'
  1494  00FF9A  4D                 	db	77	;'M'
  1495  00FF9B  0D                 	db	13
  1496  00FF9C  00                 	db	0
  1497  00FF9D                     STR_12:
  1498  00FF9D  41                 	db	65	;'A'
  1499  00FF9E  54                 	db	84	;'T'
  1500  00FF9F  2B                 	db	43
  1501  00FFA0  48                 	db	72	;'H'
  1502  00FFA1  54                 	db	84	;'T'
  1503  00FFA2  54                 	db	84	;'T'
  1504  00FFA3  50                 	db	80	;'P'
  1505  00FFA4  49                 	db	73	;'I'
  1506  00FFA5  4E                 	db	78	;'N'
  1507  00FFA6  49                 	db	73	;'I'
  1508  00FFA7  54                 	db	84	;'T'
  1509  00FFA8  0D                 	db	13
  1510  00FFA9  00                 	db	0
  1511  00FFAA                     STR_31:
  1512  00FFAA  41                 	db	65	;'A'
  1513  00FFAB  54                 	db	84	;'T'
  1514  00FFAC  2B                 	db	43
  1515  00FFAD  43                 	db	67	;'C'
  1516  00FFAE  4C                 	db	76	;'L'
  1517  00FFAF  49                 	db	73	;'I'
  1518  00FFB0  50                 	db	80	;'P'
  1519  00FFB1  3D                 	db	61	;'='
  1520  00FFB2  31                 	db	49	;'1'
  1521  00FFB3  0D                 	db	13
  1522  00FFB4  0A                 	db	10
  1523  00FFB5  00                 	db	0
  1524  00FFB6                     STR_28:
  1525  00FFB6  41                 	db	65	;'A'
  1526  00FFB7  70                 	db	112	;'p'
  1527  00FFB8  72                 	db	114	;'r'
  1528  00FFB9  20                 	db	32
  1529  00FFBA  20                 	db	32
  1530  00FFBB  32                 	db	50	;'2'
  1531  00FFBC  20                 	db	32
  1532  00FFBD  32                 	db	50	;'2'
  1533  00FFBE  30                 	db	48	;'0'
  1534  00FFBF  32                 	db	50	;'2'
  1535  00FFC0  32                 	db	50	;'2'
  1536  00FFC1  00                 	db	0
  1537  00FFC2                     STR_4:
  1538  00FFC2  41                 	db	65	;'A'
  1539  00FFC3  54                 	db	84	;'T'
  1540  00FFC4  2B                 	db	43
  1541  00FFC5  43                 	db	67	;'C'
  1542  00FFC6  4D                 	db	77	;'M'
  1543  00FFC7  47                 	db	71	;'G'
  1544  00FFC8  52                 	db	82	;'R'
  1545  00FFC9  3D                 	db	61	;'='
  1546  00FFCA  31                 	db	49	;'1'
  1547  00FFCB  0D                 	db	13
  1548  00FFCC  0A                 	db	10
  1549  00FFCD  00                 	db	0
  1550  00FFCE                     STR_5:
  1551  00FFCE  41                 	db	65	;'A'
  1552  00FFCF  54                 	db	84	;'T'
  1553  00FFD0  2B                 	db	43
  1554  00FFD1  43                 	db	67	;'C'
  1555  00FFD2  4D                 	db	77	;'M'
  1556  00FFD3  47                 	db	71	;'G'
  1557  00FFD4  53                 	db	83	;'S'
  1558  00FFD5  3D                 	db	61	;'='
  1559  00FFD6  22                 	db	34
  1560  00FFD7  00                 	db	0
  1561  00FFD8                     STR_32:
  1562  00FFD8  28                 	db	40
  1563  00FFD9  6E                 	db	110	;'n'
  1564  00FFDA  75                 	db	117	;'u'
  1565  00FFDB  6C                 	db	108	;'l'
  1566  00FFDC  6C                 	db	108	;'l'
  1567  00FFDD  29                 	db	41
  1568  00FFDE  00                 	db	0
  1569  00FFDF                     STR_3:
  1570  00FFDF  41                 	db	65	;'A'
  1571  00FFE0  54                 	db	84	;'T'
  1572  00FFE1  45                 	db	69	;'E'
  1573  00FFE2  30                 	db	48	;'0'
  1574  00FFE3  0D                 	db	13
  1575  00FFE4  0A                 	db	10
  1576  00FFE5  00                 	db	0
  1577  00FFE6                     STR_1:
  1578  00FFE6  41                 	db	65	;'A'
  1579  00FFE7  54                 	db	84	;'T'
  1580  00FFE8  0D                 	db	13
  1581  00FFE9  0A                 	db	10
  1582  00FFEA  00                 	db	0
  1583  00FFEB  41                 	db	65	;'A'
  1584  00FFEC  54                 	db	84	;'T'
  1585  00FFED  41                 	db	65	;'A'
  1586  00FFEE  0D                 	db	13
  1587  00FFEF  00                 	db	0
  1588  00FFF0                     STR_6:
  1589  00FFF0  41                 	db	65	;'A'
  1590  00FFF1  54                 	db	84	;'T'
  1591  00FFF2  48                 	db	72	;'H'
  1592  00FFF3  0D                 	db	13
  1593  00FFF4  00                 	db	0
  1594  00FFF5                     STR_24:
  1595  00FFF5  2E                 	db	46
  1596  00FFF6  00                 	db	0
  1597  0000                     
  1598                           ; #config settings
  1599  00FFF7  00                 	db	0	; dummy byte at the end
  1600  0000                     
  1601                           	psect	cinit
  1602  0022DE                     __pcinit:
  1603                           	opt stack 0
  1604  0022DE                     start_initialization:
  1605                           	opt stack 0
  1606  0022DE                     __initialization:
  1607                           	opt stack 0
  1608                           
  1609                           ; Initialize objects allocated to BANK5 (80 bytes)
  1610                           ; load TBLPTR registers with __pidataBANK5
  1611  0022DE  0E38               	movlw	low __pidataBANK5
  1612  0022E0  6EF6               	movwf	tblptrl,c
  1613  0022E2  0E5E               	movlw	high __pidataBANK5
  1614  0022E4  6EF7               	movwf	tblptrh,c
  1615  0022E6  0E00               	movlw	low (__pidataBANK5 shr (0+16))
  1616  0022E8  6EF8               	movwf	tblptru,c
  1617  0022EA  EE05  F086         	lfsr	0,__pdataBANK5
  1618  0022EE  EE10 F050          	lfsr	1,80
  1619  0022F2                     copy_data0:
  1620  0022F2  0009               	tblrd		*+
  1621  0022F4  CFF5 FFEE          	movff	tablat,postinc0
  1622  0022F8  50E5               	movf	postdec1,w,c
  1623  0022FA  50E1               	movf	fsr1l,w,c
  1624  0022FC  E1FA               	bnz	copy_data0
  1625                           
  1626                           ; Initialize objects allocated to BANK3 (60 bytes)
  1627                           ; load TBLPTR registers with __pidataBANK3
  1628  0022FE  0E0E               	movlw	low __pidataBANK3
  1629  002300  6EF6               	movwf	tblptrl,c
  1630  002302  0E64               	movlw	high __pidataBANK3
  1631  002304  6EF7               	movwf	tblptrh,c
  1632  002306  0E00               	movlw	low (__pidataBANK3 shr (0+16))
  1633  002308  6EF8               	movwf	tblptru,c
  1634  00230A  EE03  F0BD         	lfsr	0,__pdataBANK3
  1635  00230E  EE10 F03C          	lfsr	1,60
  1636  002312                     copy_data1:
  1637  002312  0009               	tblrd		*+
  1638  002314  CFF5 FFEE          	movff	tablat,postinc0
  1639  002318  50E5               	movf	postdec1,w,c
  1640  00231A  50E1               	movf	fsr1l,w,c
  1641  00231C  E1FA               	bnz	copy_data1
  1642                           
  1643                           ; Initialize objects allocated to BANK2 (15 bytes)
  1644                           ; load TBLPTR registers with __pidataBANK2
  1645  00231E  0E0E               	movlw	low __pidataBANK2
  1646  002320  6EF6               	movwf	tblptrl,c
  1647  002322  0E6C               	movlw	high __pidataBANK2
  1648  002324  6EF7               	movwf	tblptrh,c
  1649  002326  0E00               	movlw	low (__pidataBANK2 shr (0+16))
  1650  002328  6EF8               	movwf	tblptru,c
  1651  00232A  EE02  F0F1         	lfsr	0,__pdataBANK2
  1652  00232E  EE10 F00F          	lfsr	1,15
  1653  002332                     copy_data2:
  1654  002332  0009               	tblrd		*+
  1655  002334  CFF5 FFEE          	movff	tablat,postinc0
  1656  002338  50E5               	movf	postdec1,w,c
  1657  00233A  50E1               	movf	fsr1l,w,c
  1658  00233C  E1FA               	bnz	copy_data2
  1659                           
  1660                           ; Initialize objects allocated to BANK1 (2 bytes)
  1661                           ; load TBLPTR registers with __pidataBANK1
  1662  00233E  0EBF               	movlw	low __pidataBANK1
  1663  002340  6EF6               	movwf	tblptrl,c
  1664  002342  0E6C               	movlw	high __pidataBANK1
  1665  002344  6EF7               	movwf	tblptrh,c
  1666  002346  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1667  002348  6EF8               	movwf	tblptru,c
  1668  00234A  0009               	tblrd		*+	;fetch initializer
  1669  00234C  CFF5 F1FE          	movff	tablat,__pdataBANK1
  1670  002350  0009               	tblrd		*+	;fetch initializer
  1671  002352  CFF5 F1FF          	movff	tablat,__pdataBANK1+1
  1672                           
  1673                           ; Initialize objects allocated to BANK4 (10 bytes)
  1674                           ; load TBLPTR registers with __pidataBANK4
  1675  002356  0E50               	movlw	low __pidataBANK4
  1676  002358  6EF6               	movwf	tblptrl,c
  1677  00235A  0E6C               	movlw	high __pidataBANK4
  1678  00235C  6EF7               	movwf	tblptrh,c
  1679  00235E  0E00               	movlw	low (__pidataBANK4 shr (0+16))
  1680  002360  6EF8               	movwf	tblptru,c
  1681  002362  EE04  F0E6         	lfsr	0,__pdataBANK4
  1682  002366  EE10 F00A          	lfsr	1,10
  1683  00236A                     copy_data3:
  1684  00236A  0009               	tblrd		*+
  1685  00236C  CFF5 FFEE          	movff	tablat,postinc0
  1686  002370  50E5               	movf	postdec1,w,c
  1687  002372  50E1               	movf	fsr1l,w,c
  1688  002374  E1FA               	bnz	copy_data3
  1689                           
  1690                           ; Initialize objects allocated to BANK0 (3 bytes)
  1691                           ; load TBLPTR registers with __pidataBANK0
  1692  002376  0EBC               	movlw	low __pidataBANK0
  1693  002378  6EF6               	movwf	tblptrl,c
  1694  00237A  0E6C               	movlw	high __pidataBANK0
  1695  00237C  6EF7               	movwf	tblptrh,c
  1696  00237E  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1697  002380  6EF8               	movwf	tblptru,c
  1698  002382  0009               	tblrd		*+	;fetch initializer
  1699  002384  CFF5 F0E0          	movff	tablat,__pdataBANK0
  1700  002388  0009               	tblrd		*+	;fetch initializer
  1701  00238A  CFF5 F0E1          	movff	tablat,__pdataBANK0+1
  1702  00238E  0009               	tblrd		*+	;fetch initializer
  1703  002390  CFF5 F0E2          	movff	tablat,__pdataBANK0+2
  1704                           
  1705                           ; Clear objects allocated to BIGRAMl (800 bytes)
  1706  002394  EE0A  F0C8         	lfsr	0,__pbssBIGRAMl
  1707  002398  EE13 F020          	lfsr	1,800
  1708  00239C                     clear_0:
  1709  00239C  6AEE               	clrf	postinc0,c
  1710  00239E  50E5               	movf	postdec1,w,c
  1711  0023A0  50E1               	movf	fsr1l,w,c
  1712  0023A2  E1FC               	bnz	clear_0
  1713  0023A4  50E2               	movf	fsr1h,w,c
  1714  0023A6  E1FA               	bnz	clear_0
  1715                           
  1716                           ; Clear objects allocated to BANK9 (200 bytes)
  1717  0023A8  EE09  F000         	lfsr	0,__pbssBANK9
  1718  0023AC  0EC8               	movlw	200
  1719  0023AE                     clear_1:
  1720  0023AE  6AEE               	clrf	postinc0,c
  1721  0023B0  06E8               	decf	wreg,f,c
  1722  0023B2  E1FD               	bnz	clear_1
  1723                           
  1724                           ; Clear objects allocated to BANK8 (250 bytes)
  1725  0023B4  EE08  F000         	lfsr	0,__pbssBANK8
  1726  0023B8  0EFA               	movlw	250
  1727  0023BA                     clear_2:
  1728  0023BA  6AEE               	clrf	postinc0,c
  1729  0023BC  06E8               	decf	wreg,f,c
  1730  0023BE  E1FD               	bnz	clear_2
  1731                           
  1732                           ; Clear objects allocated to BANK7 (246 bytes)
  1733  0023C0  EE07  F000         	lfsr	0,__pbssBANK7
  1734  0023C4  0EF6               	movlw	246
  1735  0023C6                     clear_3:
  1736  0023C6  6AEE               	clrf	postinc0,c
  1737  0023C8  06E8               	decf	wreg,f,c
  1738  0023CA  E1FD               	bnz	clear_3
  1739                           
  1740                           ; Clear objects allocated to BANK6 (220 bytes)
  1741  0023CC  EE06  F000         	lfsr	0,__pbssBANK6
  1742  0023D0  0EDC               	movlw	220
  1743  0023D2                     clear_4:
  1744  0023D2  6AEE               	clrf	postinc0,c
  1745  0023D4  06E8               	decf	wreg,f,c
  1746  0023D6  E1FD               	bnz	clear_4
  1747                           
  1748                           ; Clear objects allocated to BANK5 (134 bytes)
  1749  0023D8  EE05  F000         	lfsr	0,__pbssBANK5
  1750  0023DC  0E86               	movlw	134
  1751  0023DE                     clear_5:
  1752  0023DE  6AEE               	clrf	postinc0,c
  1753  0023E0  06E8               	decf	wreg,f,c
  1754  0023E2  E1FD               	bnz	clear_5
  1755                           
  1756                           ; Clear objects allocated to BANK3 (189 bytes)
  1757  0023E4  EE03  F000         	lfsr	0,__pbssBANK3
  1758  0023E8  0EBD               	movlw	189
  1759  0023EA                     clear_6:
  1760  0023EA  6AEE               	clrf	postinc0,c
  1761  0023EC  06E8               	decf	wreg,f,c
  1762  0023EE  E1FD               	bnz	clear_6
  1763                           
  1764                           ; Clear objects allocated to BANK2 (40 bytes)
  1765  0023F0  EE02  F0C9         	lfsr	0,__pbssBANK2
  1766  0023F4  0E28               	movlw	40
  1767  0023F6                     clear_7:
  1768  0023F6  6AEE               	clrf	postinc0,c
  1769  0023F8  06E8               	decf	wreg,f,c
  1770  0023FA  E1FD               	bnz	clear_7
  1771                           
  1772                           ; Clear objects allocated to BANK1 (53 bytes)
  1773  0023FC  EE01  F0C9         	lfsr	0,__pbssBANK1
  1774  002400  0E35               	movlw	53
  1775  002402                     clear_8:
  1776  002402  6AEE               	clrf	postinc0,c
  1777  002404  06E8               	decf	wreg,f,c
  1778  002406  E1FD               	bnz	clear_8
  1779                           
  1780                           ; Clear objects allocated to BANK4 (166 bytes)
  1781  002408  EE04  F040         	lfsr	0,__pbssBANK4
  1782  00240C  0EA6               	movlw	166
  1783  00240E                     clear_9:
  1784  00240E  6AEE               	clrf	postinc0,c
  1785  002410  06E8               	decf	wreg,f,c
  1786  002412  E1FD               	bnz	clear_9
  1787                           
  1788                           ; Clear objects allocated to BANK0 (48 bytes)
  1789  002414  EE00  F0B0         	lfsr	0,__pbssBANK0
  1790  002418  0E30               	movlw	48
  1791  00241A                     clear_10:
  1792  00241A  6AEE               	clrf	postinc0,c
  1793  00241C  06E8               	decf	wreg,f,c
  1794  00241E  E1FD               	bnz	clear_10
  1795                           
  1796                           ; Clear objects allocated to COMRAM (31 bytes)
  1797  002420  EE00  F023         	lfsr	0,__pbssCOMRAM
  1798  002424  0E1F               	movlw	31
  1799  002426                     clear_11:
  1800  002426  6AEE               	clrf	postinc0,c
  1801  002428  06E8               	decf	wreg,f,c
  1802  00242A  E1FD               	bnz	clear_11
  1803  00242C                     end_of_initialization:
  1804                           	opt stack 0
  1805  00242C                     __end_of__initialization:
  1806                           	opt stack 0
  1807  00242C  9042               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1808  00242E  9242               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1809  002430  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1810  002432  6EF8               	movwf	tblptru,c
  1811  002434  0100               	movlb	0
  1812  002436  EF16  F036         	goto	_main	;jump to C main() function
  1813                           tblptru	equ	0xFF8
  1814                           tblptrh	equ	0xFF7
  1815                           tblptrl	equ	0xFF6
  1816                           tablat	equ	0xFF5
  1817                           postinc0	equ	0xFEE
  1818                           wreg	equ	0xFE8
  1819                           postdec1	equ	0xFE5
  1820                           fsr1h	equ	0xFE2
  1821                           fsr1l	equ	0xFE1
  1822                           
  1823                           	psect	bssCOMRAM
  1824  000023                     __pbssCOMRAM:
  1825                           	opt stack 0
  1826  000023                     Uart_MdmGsmGprsReadService@RxCounter:
  1827                           	opt stack 0
  1828  000023                     	ds	2
  1829  000025                     _USBDeferOUTDataStagePackets:
  1830                           	opt stack 0
  1831  000025                     	ds	1
  1832  000026                     _USBDeferINDataStagePackets:
  1833                           	opt stack 0
  1834  000026                     	ds	1
  1835  000027                     _USBStatusStageEnabledFlag2:
  1836                           	opt stack 0
  1837  000027                     	ds	1
  1838  000028                     _USBStatusStageEnabledFlag1:
  1839                           	opt stack 0
  1840  000028                     	ds	1
  1841  000029                     _USBStatusStageTimeoutCounter:
  1842                           	opt stack 0
  1843  000029                     	ds	1
  1844  00002A                     InitGprsNetwork@GprsNetInitNextState:
  1845                           	opt stack 0
  1846  00002A                     	ds	1
  1847  00002B                     _ComChecCompleted:
  1848                           	opt stack 0
  1849  00002B                     	ds	1
  1850  00002C                     Uart_Uart1RxIsr@UartRxData:
  1851                           	opt stack 0
  1852  00002C                     	ds	1
  1853  00002D                     Uart_MdmGsmGprsReadService@RxState:
  1854                           	opt stack 0
  1855  00002D                     	ds	1
  1856  00002E                     MdmCntSm@MdmCntState:
  1857                           	opt stack 0
  1858  00002E                     	ds	1
  1859  00002F                     RiSm@MdmDrvState:
  1860                           	opt stack 0
  1861  00002F                     	ds	1
  1862  000030                     _Mmd_RingIndicator:
  1863                           	opt stack 0
  1864  000030                     	ds	1
  1865  000031                     I2c_ReadData@ReadStatus:
  1866                           	opt stack 0
  1867  000031                     	ds	1
  1868  000032                     I2c_ReadData@TentativeCounter:
  1869                           	opt stack 0
  1870  000032                     	ds	1
  1871  000033                     I2c_ReadData@DataCounter:
  1872                           	opt stack 0
  1873  000033                     	ds	1
  1874  000034                     I2c_ReadData@I2cReadState:
  1875                           	opt stack 0
  1876  000034                     	ds	1
  1877  000035                     I2c_WriteData@WriteStatus:
  1878                           	opt stack 0
  1879  000035                     	ds	1
  1880  000036                     I2c_WriteData@TentativeCounter:
  1881                           	opt stack 0
  1882  000036                     	ds	1
  1883  000037                     I2c_WriteData@I2cNextState:
  1884                           	opt stack 0
  1885  000037                     	ds	1
  1886  000038                     I2c_WriteData@I2cWriteState:
  1887                           	opt stack 0
  1888  000038                     	ds	1
  1889  000039                     _I2cReadDataEvt:
  1890                           	opt stack 0
  1891  000039                     	ds	1
  1892  00003A                     _NewStringMdmTerminal:
  1893                           	opt stack 0
  1894  00003A                     	ds	1
  1895  00003B                     _NewMdmEvtParserRequest:
  1896                           	opt stack 0
  1897  00003B                     	ds	1
  1898  00003C                     _NewStringReceived:
  1899                           	opt stack 0
  1900  00003C                     	ds	1
  1901  00003D                     _MdmResetRequest:
  1902                           	opt stack 0
  1903  00003D                     	ds	1
  1904  00003E                     _CallClosedEvent:
  1905                           	opt stack 0
  1906  00003E                     	ds	1
  1907  00003F                     _IncomingCallEvent:
  1908                           	opt stack 0
  1909  00003F                     	ds	1
  1910  000040                     _NewSmsEvent:
  1911                           	opt stack 0
  1912  000040                     	ds	1
  1913  000041                     _ActivateRiDetection:
  1914                           	opt stack 0
  1915  000041                     	ds	1
  1916                           tblptru	equ	0xFF8
  1917                           tblptrh	equ	0xFF7
  1918                           tblptrl	equ	0xFF6
  1919                           tablat	equ	0xFF5
  1920                           postinc0	equ	0xFEE
  1921                           wreg	equ	0xFE8
  1922                           postdec1	equ	0xFE5
  1923                           fsr1h	equ	0xFE2
  1924                           fsr1l	equ	0xFE1
  1925                           
  1926                           	psect	bssBANK0
  1927  0000B0                     __pbssBANK0:
  1928                           	opt stack 0
  1929  0000B0                     _inPipes:
  1930                           	opt stack 0
  1931  0000B0                     	ds	6
  1932  0000B6                     _pBDTEntryIn:
  1933                           	opt stack 0
  1934  0000B6                     	ds	6
  1935  0000BC                     _CDCDataOutHandle:
  1936                           	opt stack 0
  1937  0000BC                     	ds	2
  1938  0000BE                     _pBDTEntryEP0OutNext:
  1939                           	opt stack 0
  1940  0000BE                     	ds	2
  1941  0000C0                     _pBDTEntryEP0OutCurrent:
  1942                           	opt stack 0
  1943  0000C0                     	ds	2
  1944  0000C2                     _RxLen:
  1945                           	opt stack 0
  1946  0000C2                     	ds	2
  1947  0000C4                     findEmptySpot@currentState:
  1948                           	opt stack 0
  1949  0000C4                     	ds	1
  1950  0000C5                     isNumberInMemory@currentState:
  1951                           	opt stack 0
  1952  0000C5                     	ds	1
  1953  0000C6                     Eeprom_Reset@memoryAddress:
  1954                           	opt stack 0
  1955  0000C6                     	ds	1
  1956  0000C7                     _cdc_tx_len:
  1957                           	opt stack 0
  1958  0000C7                     	ds	1
  1959  0000C8                     _cdc_trf_state:
  1960                           	opt stack 0
  1961  0000C8                     	ds	1
  1962  0000C9                     _cdc_rx_len:
  1963                           	opt stack 0
  1964  0000C9                     	ds	1
  1965  0000CA                     _USBDeferStatusStagePacket:
  1966                           	opt stack 0
  1967  0000CA                     	ds	1
  1968  0000CB                     _endpoint_number:
  1969                           	opt stack 0
  1970  0000CB                     	ds	1
  1971  0000CC                     _controlTransferState:
  1972                           	opt stack 0
  1973  0000CC                     	ds	1
  1974  0000CD                     _shortPacketStatus:
  1975                           	opt stack 0
  1976  0000CD                     	ds	1
  1977  0000CE                     _USBDeviceState:
  1978                           	opt stack 0
  1979  0000CE                     	ds	1
  1980  0000CF                     _I2cComSts:
  1981                           	opt stack 0
  1982  0000CF                     	ds	1
  1983  0000D0                     HttpGetMethod@GetMethodNextState:
  1984                           	opt stack 0
  1985  0000D0                     	ds	1
  1986  0000D1                     _MdmStatus:
  1987                           	opt stack 0
  1988  0000D1                     	ds	1
  1989  0000D2                     _PhoneNumbLen:
  1990                           	opt stack 0
  1991  0000D2                     	ds	1
  1992  0000D3                     _SmsLen:
  1993                           	opt stack 0
  1994  0000D3                     	ds	1
  1995  0000D4                     _SystemState:
  1996                           	opt stack 0
  1997  0000D4                     	ds	1
  1998  0000D5                     _USTATcopy:
  1999                           	opt stack 0
  2000  0000D5                     	ds	1
  2001  0000D6                     _USBActiveConfiguration:
  2002                           	opt stack 0
  2003  0000D6                     	ds	1
  2004  0000D7                     _I2cWriteDataEvt:
  2005                           	opt stack 0
  2006  0000D7                     	ds	1
  2007  0000D8                     _InitNetwork:
  2008                           	opt stack 0
  2009  0000D8                     	ds	1
  2010  0000D9                     _SmsTxtReady:
  2011                           	opt stack 0
  2012  0000D9                     	ds	1
  2013  0000DA                     _GetSmsText:
  2014                           	opt stack 0
  2015  0000DA                     	ds	1
  2016  0000DB                     _SmsEvent:
  2017                           	opt stack 0
  2018  0000DB                     	ds	1
  2019  0000DC                     _ClipEvent:
  2020                           	opt stack 0
  2021  0000DC                     	ds	1
  2022  0000DD                     _RingEvent:
  2023                           	opt stack 0
  2024  0000DD                     	ds	1
  2025  0000DE                     _SendSmsEvent:
  2026                           	opt stack 0
  2027  0000DE                     	ds	1
  2028  0000DF                     _MdmOnOffPulseRequest:
  2029                           	opt stack 0
  2030  0000DF                     	ds	1
  2031                           tblptru	equ	0xFF8
  2032                           tblptrh	equ	0xFF7
  2033                           tblptrl	equ	0xFF6
  2034                           tablat	equ	0xFF5
  2035                           postinc0	equ	0xFEE
  2036                           wreg	equ	0xFE8
  2037                           postdec1	equ	0xFE5
  2038                           fsr1h	equ	0xFE2
  2039                           fsr1l	equ	0xFE1
  2040                           
  2041                           	psect	dataBANK0
  2042  0000E0                     __pdataBANK0:
  2043                           	opt stack 0
  2044  0000E0                     findEmptySpot@currentPosition:
  2045                           	opt stack 0
  2046  0000E0                     	ds	1
  2047  0000E1                     isNumberInMemory@currentPosition:
  2048                           	opt stack 0
  2049  0000E1                     	ds	1
  2050  0000E2                     MyApp_Task@isCmdSuccessfull:
  2051                           	opt stack 0
  2052  0000E2                     	ds	1
  2053                           tblptru	equ	0xFF8
  2054                           tblptrh	equ	0xFF7
  2055                           tblptrl	equ	0xFF6
  2056                           tablat	equ	0xFF5
  2057                           postinc0	equ	0xFEE
  2058                           wreg	equ	0xFE8
  2059                           postdec1	equ	0xFE5
  2060                           fsr1h	equ	0xFE2
  2061                           fsr1l	equ	0xFE1
  2062                           
  2063                           	psect	bssBANK1
  2064  0001C9                     __pbssBANK1:
  2065                           	opt stack 0
  2066  0001C9                     _outPipes:
  2067                           	opt stack 0
  2068  0001C9                     	ds	8
  2069  0001D1                     _CDCDataInHandle:
  2070                           	opt stack 0
  2071  0001D1                     	ds	2
  2072  0001D3                     triggerCmdFsm@currentState:
  2073                           	opt stack 0
  2074  0001D3                     	ds	1
  2075  0001D4                     delCmdFsm@currentState:
  2076                           	opt stack 0
  2077  0001D4                     	ds	1
  2078  0001D5                     addCmdFsm@currentState:
  2079                           	opt stack 0
  2080  0001D5                     	ds	1
  2081  0001D6                     initFsm@currentState:
  2082                           	opt stack 0
  2083  0001D6                     	ds	1
  2084  0001D7                     initEeprom@currentState:
  2085                           	opt stack 0
  2086  0001D7                     	ds	1
  2087  0001D8                     initGprsModem@currentState:
  2088                           	opt stack 0
  2089  0001D8                     	ds	1
  2090  0001D9                     MyApp_Task@currentState:
  2091                           	opt stack 0
  2092  0001D9                     	ds	1
  2093  0001DA                     GsmGprsTerminal@SMS:
  2094                           	opt stack 0
  2095  0001DA                     	ds	1
  2096  0001DB                     _control_signal_bitmap:
  2097                           	opt stack 0
  2098  0001DB                     	ds	1
  2099  0001DC                     _cdc_mem_type:
  2100                           	opt stack 0
  2101  0001DC                     	ds	1
  2102  0001DD                     _USBTicksSinceSuspendEnd:
  2103                           	opt stack 0
  2104  0001DD                     	ds	1
  2105  0001DE                     _BothEP0OutUOWNsSet:
  2106                           	opt stack 0
  2107  0001DE                     	ds	1
  2108  0001DF                     _USBBusIsSuspended:
  2109                           	opt stack 0
  2110  0001DF                     	ds	1
  2111  0001E0                     _RemoteWakeup:
  2112                           	opt stack 0
  2113  0001E0                     	ds	1
  2114  0001E1                     I2cSlv_QueryI2cData@Ret:
  2115                           	opt stack 0
  2116  0001E1                     	ds	1
  2117  0001E2                     I2cSlv_QueryI2cData@I2cOpState:
  2118                           	opt stack 0
  2119  0001E2                     	ds	1
  2120  0001E3                     I2cSendMsgSm@I2cComState:
  2121                           	opt stack 0
  2122  0001E3                     	ds	1
  2123  0001E4                     _I2cBusStatus:
  2124                           	opt stack 0
  2125  0001E4                     	ds	1
  2126  0001E5                     HttpGetMethod@GetMOutSts:
  2127                           	opt stack 0
  2128  0001E5                     	ds	1
  2129  0001E6                     HttpGetMethod@GetMethodState:
  2130                           	opt stack 0
  2131  0001E6                     	ds	1
  2132  0001E7                     InitGprsNetwork@GprsNetInitState:
  2133                           	opt stack 0
  2134  0001E7                     	ds	1
  2135  0001E8                     _PostMethod:
  2136                           	opt stack 0
  2137  0001E8                     	ds	1
  2138  0001E9                     _HttpGetMethodSts:
  2139                           	opt stack 0
  2140  0001E9                     	ds	1
  2141  0001EA                     _GprsNetworkSts:
  2142                           	opt stack 0
  2143  0001EA                     	ds	1
  2144  0001EB                     _ApnLenLocal:
  2145                           	opt stack 0
  2146  0001EB                     	ds	1
  2147  0001EC                     SendSmsSm@SendSms_NextState:
  2148                           	opt stack 0
  2149  0001EC                     	ds	1
  2150  0001ED                     SendSmsSm@SendSms_State:
  2151                           	opt stack 0
  2152  0001ED                     	ds	1
  2153  0001EE                     GetSmsSm@GetSmsState:
  2154                           	opt stack 0
  2155  0001EE                     	ds	1
  2156  0001EF                     ConfigureModem@NextState:
  2157                           	opt stack 0
  2158  0001EF                     	ds	1
  2159  0001F0                     ConfigureModem@MdmConfigState:
  2160                           	opt stack 0
  2161  0001F0                     	ds	1
  2162  0001F1                     TurnOnModem@TurnOnMdmState:
  2163                           	opt stack 0
  2164  0001F1                     	ds	1
  2165  0001F2                     CheckModem@CheckMdmSts:
  2166                           	opt stack 0
  2167  0001F2                     	ds	1
  2168  0001F3                     _AlarmEvent:
  2169                           	opt stack 0
  2170  0001F3                     	ds	1
  2171  0001F4                     _Led3OutSts:
  2172                           	opt stack 0
  2173  0001F4                     	ds	1
  2174  0001F5                     _Led3Sts:
  2175                           	opt stack 0
  2176  0001F5                     	ds	1
  2177  0001F6                     _Led2OutSts:
  2178                           	opt stack 0
  2179  0001F6                     	ds	1
  2180  0001F7                     _Led2Sts:
  2181                           	opt stack 0
  2182  0001F7                     	ds	1
  2183  0001F8                     _Led1OutSts:
  2184                           	opt stack 0
  2185  0001F8                     	ds	1
  2186  0001F9                     _Led1Sts:
  2187                           	opt stack 0
  2188  0001F9                     	ds	1
  2189  0001FA                     _ReadAddress:
  2190                           	opt stack 0
  2191  0001FA                     	ds	1
  2192  0001FB                     I2cDummyTx@DummyBuffer:
  2193                           	opt stack 0
  2194  0001FB                     	ds	1
  2195  0001FC                     _GetMethod:
  2196                           	opt stack 0
  2197  0001FC                     	ds	1
  2198  0001FD                     _MdmStsReady:
  2199                           	opt stack 0
  2200  0001FD                     	ds	1
  2201                           tblptru	equ	0xFF8
  2202                           tblptrh	equ	0xFF7
  2203                           tblptrl	equ	0xFF6
  2204                           tablat	equ	0xFF5
  2205                           postinc0	equ	0xFEE
  2206                           wreg	equ	0xFE8
  2207                           postdec1	equ	0xFE5
  2208                           fsr1h	equ	0xFE2
  2209                           fsr1l	equ	0xFE1
  2210                           
  2211                           	psect	dataBANK1
  2212  0001FE                     __pdataBANK1:
  2213                           	opt stack 0
  2214  0001FE                     _isMemoryEmpty:
  2215                           	opt stack 0
  2216  0001FE                     	ds	1
  2217  0001FF                     InitGprsNetwork@GprsInitSts:
  2218                           	opt stack 0
  2219  0001FF                     	ds	1
  2220                           tblptru	equ	0xFF8
  2221                           tblptrh	equ	0xFF7
  2222                           tblptrl	equ	0xFF6
  2223                           tablat	equ	0xFF5
  2224                           postinc0	equ	0xFEE
  2225                           wreg	equ	0xFE8
  2226                           postdec1	equ	0xFE5
  2227                           fsr1h	equ	0xFE2
  2228                           fsr1l	equ	0xFE1
  2229                           
  2230                           	psect	bssBANK2
  2231  0002C9                     __pbssBANK2:
  2232                           	opt stack 0
  2233  0002C9                     _pCDCDst:
  2234                           	opt stack 0
  2235  0002C9                     	ds	3
  2236  0002CC                     _pCDCSrc:
  2237                           	opt stack 0
  2238  0002CC                     	ds	3
  2239  0002CF                     _ep_data_out:
  2240                           	opt stack 0
  2241  0002CF                     	ds	3
  2242  0002D2                     _ep_data_in:
  2243                           	opt stack 0
  2244  0002D2                     	ds	3
  2245  0002D5                     _pDst:
  2246                           	opt stack 0
  2247  0002D5                     	ds	2
  2248  0002D7                     TurnOnModem@Counter:
  2249                           	opt stack 0
  2250  0002D7                     	ds	2
  2251  0002D9                     UpdateSchFlag@InterruptCounter:
  2252                           	opt stack 0
  2253  0002D9                     	ds	2
  2254  0002DB                     MdmCntSm@Counter:
  2255                           	opt stack 0
  2256  0002DB                     	ds	2
  2257  0002DD                     RiSm@Counter:
  2258                           	opt stack 0
  2259  0002DD                     	ds	2
  2260  0002DF                     _ExtInt1IsrCallback:
  2261                           	opt stack 0
  2262  0002DF                     	ds	2
  2263  0002E1                     _ExtInt0IsrCallback:
  2264                           	opt stack 0
  2265  0002E1                     	ds	2
  2266  0002E3                     _RtccIsrCallback:
  2267                           	opt stack 0
  2268  0002E3                     	ds	2
  2269  0002E5                     _Tmr4IsrCallback:
  2270                           	opt stack 0
  2271  0002E5                     	ds	2
  2272  0002E7                     _Tmr2IsrCallback:
  2273                           	opt stack 0
  2274  0002E7                     	ds	2
  2275  0002E9                     Term_MainSm@TermMainSmState:
  2276                           	opt stack 0
  2277  0002E9                     	ds	1
  2278  0002EA                     Terminal@FormatOption:
  2279                           	opt stack 0
  2280  0002EA                     	ds	1
  2281  0002EB                     Terminal@SlaveAddr:
  2282                           	opt stack 0
  2283  0002EB                     	ds	1
  2284  0002EC                     Terminal@PackageLen:
  2285                           	opt stack 0
  2286  0002EC                     	ds	1
  2287  0002ED                     Terminal@TermState:
  2288                           	opt stack 0
  2289  0002ED                     	ds	1
  2290  0002EE                     	ds	1
  2291  0002EF                     _USBAlternateInterface:
  2292                           	opt stack 0
  2293  0002EF                     	ds	2
  2294                           tblptru	equ	0xFF8
  2295                           tblptrh	equ	0xFF7
  2296                           tblptrl	equ	0xFF6
  2297                           tablat	equ	0xFF5
  2298                           postinc0	equ	0xFEE
  2299                           wreg	equ	0xFE8
  2300                           postdec1	equ	0xFE5
  2301                           fsr1h	equ	0xFE2
  2302                           fsr1l	equ	0xFE1
  2303                           
  2304                           	psect	dataBANK2
  2305  0002F1                     __pdataBANK2:
  2306                           	opt stack 0
  2307  0002F1                     Terminal@EchoOption:
  2308                           	opt stack 0
  2309  0002F1                     	ds	1
  2310  0002F2                     _MainSystemTimebaseFlag:
  2311                           	opt stack 0
  2312  0002F2                     	ds	1
  2313  0002F3                     _ConnTimeout:
  2314                           	opt stack 0
  2315  0002F3                     	ds	11
  2316  0002FE                     _relayBuffer:
  2317                           	opt stack 0
  2318  0002FE                     	ds	2
  2319                           tblptru	equ	0xFF8
  2320                           tblptrh	equ	0xFF7
  2321                           tblptrl	equ	0xFF6
  2322                           tablat	equ	0xFF5
  2323                           postinc0	equ	0xFEE
  2324                           wreg	equ	0xFE8
  2325                           postdec1	equ	0xFE5
  2326                           fsr1h	equ	0xFE2
  2327                           fsr1l	equ	0xFE1
  2328                           
  2329                           	psect	bssBANK3
  2330  000300                     __pbssBANK3:
  2331                           	opt stack 0
  2332  000300                     _Rtcm_RtccAlarm:
  2333                           	opt stack 0
  2334  000300                     	ds	6
  2335  000306                     _pBDTEntryOut:
  2336                           	opt stack 0
  2337  000306                     	ds	6
  2338  00030C                     _BaudRateGen:
  2339                           	opt stack 0
  2340  00030C                     	ds	4
  2341  000310                     _USB1msTickCount:
  2342                           	opt stack 0
  2343  000310                     	ds	4
  2344  000314                     _OsTmr_OsTickCounter:
  2345                           	opt stack 0
  2346  000314                     	ds	4
  2347  000318                     _secondCounter:
  2348                           	opt stack 0
  2349  000318                     	ds	2
  2350  00031A                     _UsbMasterPhoneNumberLen:
  2351                           	opt stack 0
  2352  00031A                     	ds	2
  2353  00031C                     _ApnLocal:
  2354                           	opt stack 0
  2355  00031C                     	ds	2
  2356  00031E                     ConfigureModem@DelayCounter:
  2357                           	opt stack 0
  2358  00031E                     	ds	2
  2359  000320                     ConfigureModem@DelayValueMs:
  2360                           	opt stack 0
  2361  000320                     	ds	2
  2362  000322                     _UartConfig:
  2363                           	opt stack 0
  2364  000322                     	ds	21
  2365  000337                     _readBuffer:
  2366                           	opt stack 0
  2367  000337                     	ds	13
  2368  000344                     I2cSlv_QueryI2cData@TimeoutTimer:
  2369                           	opt stack 0
  2370  000344                     	ds	11
  2371  00034F                     _I2cConfig:
  2372                           	opt stack 0
  2373  00034F                     	ds	10
  2374  000359                     _Led3Blink:
  2375                           	opt stack 0
  2376  000359                     	ds	9
  2377  000362                     _Led2Blink:
  2378                           	opt stack 0
  2379  000362                     	ds	9
  2380  00036B                     _Led1Blink:
  2381                           	opt stack 0
  2382  00036B                     	ds	9
  2383  000374                     _dummy_encapsulated_cmd_response:
  2384                           	opt stack 0
  2385  000374                     	ds	8
  2386  00037C                     _line_coding:
  2387                           	opt stack 0
  2388  00037C                     	ds	7
  2389  000383                     _Led3Pulse:
  2390                           	opt stack 0
  2391  000383                     	ds	6
  2392  000389                     _Led2Pulse:
  2393                           	opt stack 0
  2394  000389                     	ds	6
  2395  00038F                     _Led1Pulse:
  2396                           	opt stack 0
  2397  00038F                     	ds	6
  2398  000395                     _I2cRxPacket:
  2399                           	opt stack 0
  2400  000395                     	ds	6
  2401  00039B                     _I2cTxPacket:
  2402                           	opt stack 0
  2403  00039B                     	ds	5
  2404  0003A0                     _HttpGetDataLocal:
  2405                           	opt stack 0
  2406  0003A0                     	ds	5
  2407  0003A5                     _memoryPreamble:
  2408                           	opt stack 0
  2409  0003A5                     	ds	4
  2410  0003A9                     Terminal@Addr:
  2411                           	opt stack 0
  2412  0003A9                     	ds	4
  2413  0003AD                     Terminal@Len:
  2414                           	opt stack 0
  2415  0003AD                     	ds	4
  2416  0003B1                     _AlCfg:
  2417                           	opt stack 0
  2418  0003B1                     	ds	4
  2419  0003B5                     _RtcConfig:
  2420                           	opt stack 0
  2421  0003B5                     	ds	4
  2422  0003B9                     initGprsModem@modemCounter:
  2423                           	opt stack 0
  2424  0003B9                     	ds	2
  2425  0003BB                     _setupCallTicks:
  2426                           	opt stack 0
  2427  0003BB                     	ds	2
  2428                           tblptru	equ	0xFF8
  2429                           tblptrh	equ	0xFF7
  2430                           tblptrl	equ	0xFF6
  2431                           tablat	equ	0xFF5
  2432                           postinc0	equ	0xFEE
  2433                           wreg	equ	0xFE8
  2434                           postdec1	equ	0xFE5
  2435                           fsr1h	equ	0xFE2
  2436                           fsr1l	equ	0xFE1
  2437                           
  2438                           	psect	dataBANK3
  2439  0003BD                     __pdataBANK3:
  2440                           	opt stack 0
  2441  0003BD                     ModemEvtParser@F9114:
  2442                           	opt stack 0
  2443  0003BD                     	ds	5
  2444  0003C2                     ModemEvtParser@F9112:
  2445                           	opt stack 0
  2446  0003C2                     	ds	5
  2447  0003C7                     ModemEvtParser@F9110:
  2448                           	opt stack 0
  2449  0003C7                     	ds	4
  2450  0003CB                     Term_MainSm@TermDelay:
  2451                           	opt stack 0
  2452  0003CB                     	ds	11
  2453  0003D6                     _ConnWait:
  2454                           	opt stack 0
  2455  0003D6                     	ds	11
  2456  0003E1                     SendSmsSm@SwTimer:
  2457                           	opt stack 0
  2458  0003E1                     	ds	11
  2459  0003EC                     CheckModem@Timeout:
  2460                           	opt stack 0
  2461  0003EC                     	ds	11
  2462  0003F7                     _blinkInSeconds:
  2463                           	opt stack 0
  2464  0003F7                     	ds	2
  2465                           tblptru	equ	0xFF8
  2466                           tblptrh	equ	0xFF7
  2467                           tblptrl	equ	0xFF6
  2468                           tablat	equ	0xFF5
  2469                           postinc0	equ	0xFEE
  2470                           wreg	equ	0xFE8
  2471                           postdec1	equ	0xFE5
  2472                           fsr1h	equ	0xFE2
  2473                           fsr1l	equ	0xFE1
  2474                           
  2475                           	psect	bssBANK4
  2476  000440                     __pbssBANK4:
  2477                           	opt stack 0
  2478  000440                     _UsbMasterPhoneNumber:
  2479                           	opt stack 0
  2480  000440                     	ds	15
  2481  00044F                     _cdc_notice:
  2482                           	opt stack 0
  2483  00044F                     	ds	10
  2484  000459                     _Rtcm_SystemDate:
  2485                           	opt stack 0
  2486  000459                     	ds	8
  2487  000461                     Term_MainSm@Data:
  2488                           	opt stack 0
  2489  000461                     	ds	50
  2490  000493                     _smsText:
  2491                           	opt stack 0
  2492  000493                     	ds	20
  2493  0004A7                     _EepromBuffer:
  2494                           	opt stack 0
  2495  0004A7                     	ds	15
  2496  0004B6                     _receivedNumber:
  2497                           	opt stack 0
  2498  0004B6                     	ds	13
  2499  0004C3                     _callerNumber:
  2500                           	opt stack 0
  2501  0004C3                     	ds	13
  2502  0004D0                     Terminal@SwTimer:
  2503                           	opt stack 0
  2504  0004D0                     	ds	11
  2505  0004DB                     I2cSlv_QueryI2cData@QueryTimer:
  2506                           	opt stack 0
  2507  0004DB                     	ds	11
  2508                           tblptru	equ	0xFF8
  2509                           tblptrh	equ	0xFF7
  2510                           tblptrl	equ	0xFF6
  2511                           tablat	equ	0xFF5
  2512                           postinc0	equ	0xFEE
  2513                           wreg	equ	0xFE8
  2514                           postdec1	equ	0xFE5
  2515                           fsr1h	equ	0xFE2
  2516                           fsr1l	equ	0xFE1
  2517                           
  2518                           	psect	dataBANK4
  2519  0004E6                     __pdataBANK4:
  2520                           	opt stack 0
  2521  0004E6                     ModemEvtParser@F9116:
  2522                           	opt stack 0
  2523  0004E6                     	ds	10
  2524                           tblptru	equ	0xFF8
  2525                           tblptrh	equ	0xFF7
  2526                           tblptrl	equ	0xFF6
  2527                           tablat	equ	0xFF5
  2528                           postinc0	equ	0xFEE
  2529                           wreg	equ	0xFE8
  2530                           postdec1	equ	0xFE5
  2531                           fsr1h	equ	0xFE2
  2532                           fsr1l	equ	0xFE1
  2533                           
  2534                           	psect	bssBANK5
  2535  000500                     __pbssBANK5:
  2536                           	opt stack 0
  2537  000500                     _cdc_data_rx:
  2538                           	opt stack 0
  2539  000500                     	ds	64
  2540  000540                     Terminal@TermRxBuffer:
  2541                           	opt stack 0
  2542  000540                     	ds	50
  2543  000572                     _PhoneNumber:
  2544                           	opt stack 0
  2545  000572                     	ds	20
  2546                           tblptru	equ	0xFF8
  2547                           tblptrh	equ	0xFF7
  2548                           tblptrl	equ	0xFF6
  2549                           tablat	equ	0xFF5
  2550                           postinc0	equ	0xFEE
  2551                           wreg	equ	0xFE8
  2552                           postdec1	equ	0xFE5
  2553                           fsr1h	equ	0xFE2
  2554                           fsr1l	equ	0xFE1
  2555                           
  2556                           	psect	dataBANK5
  2557  000586                     __pdataBANK5:
  2558                           	opt stack 0
  2559  000586                     _TaskTable:
  2560                           	opt stack 0
  2561  000586                     	ds	80
  2562                           tblptru	equ	0xFF8
  2563                           tblptrh	equ	0xFF7
  2564                           tblptrl	equ	0xFF6
  2565                           tablat	equ	0xFF5
  2566                           postinc0	equ	0xFEE
  2567                           wreg	equ	0xFE8
  2568                           postdec1	equ	0xFE5
  2569                           fsr1h	equ	0xFE2
  2570                           fsr1l	equ	0xFE1
  2571                           
  2572                           	psect	bssBANK6
  2573  000600                     __pbssBANK6:
  2574                           	opt stack 0
  2575  000600                     _OsAlarms:
  2576                           	opt stack 0
  2577  000600                     	ds	220
  2578                           tblptru	equ	0xFF8
  2579                           tblptrh	equ	0xFF7
  2580                           tblptrl	equ	0xFF6
  2581                           tablat	equ	0xFF5
  2582                           postinc0	equ	0xFEE
  2583                           wreg	equ	0xFE8
  2584                           postdec1	equ	0xFE5
  2585                           fsr1h	equ	0xFE2
  2586                           fsr1l	equ	0xFE1
  2587                           
  2588                           	psect	bssBANK7
  2589  000700                     __pbssBANK7:
  2590                           	opt stack 0
  2591  000700                     _Mdm_SmsRx:
  2592                           	opt stack 0
  2593  000700                     	ds	102
  2594  000766                     Terminal@Payload:
  2595                           	opt stack 0
  2596  000766                     	ds	80
  2597  0007B6                     _cdc_data_tx:
  2598                           	opt stack 0
  2599  0007B6                     	ds	64
  2600                           tblptru	equ	0xFF8
  2601                           tblptrh	equ	0xFF7
  2602                           tblptrl	equ	0xFF6
  2603                           tablat	equ	0xFF5
  2604                           postinc0	equ	0xFEE
  2605                           wreg	equ	0xFE8
  2606                           postdec1	equ	0xFE5
  2607                           fsr1h	equ	0xFE2
  2608                           fsr1l	equ	0xFE1
  2609                           
  2610                           	psect	bssBANK8
  2611  000800                     __pbssBANK8:
  2612                           	opt stack 0
  2613  000800                     GsmGprsTerminal@UsbBuffer:
  2614                           	opt stack 0
  2615  000800                     	ds	200
  2616  0008C8                     _MessageText:
  2617                           	opt stack 0
  2618  0008C8                     	ds	50
  2619                           tblptru	equ	0xFF8
  2620                           tblptrh	equ	0xFF7
  2621                           tblptrl	equ	0xFF6
  2622                           tablat	equ	0xFF5
  2623                           postinc0	equ	0xFEE
  2624                           wreg	equ	0xFE8
  2625                           postdec1	equ	0xFE5
  2626                           fsr1h	equ	0xFE2
  2627                           fsr1l	equ	0xFE1
  2628                           
  2629                           	psect	bssBANK9
  2630  000900                     __pbssBANK9:
  2631                           	opt stack 0
  2632  000900                     GsmGprsTerminal@UartBuffer:
  2633                           	opt stack 0
  2634  000900                     	ds	200
  2635                           tblptru	equ	0xFF8
  2636                           tblptrh	equ	0xFF7
  2637                           tblptrl	equ	0xFF6
  2638                           tablat	equ	0xFF5
  2639                           postinc0	equ	0xFEE
  2640                           wreg	equ	0xFE8
  2641                           postdec1	equ	0xFE5
  2642                           fsr1h	equ	0xFE2
  2643                           fsr1l	equ	0xFE1
  2644                           
  2645                           	psect	bssBIGRAMl
  2646  000AC8                     __pbssBIGRAMl:
  2647                           	opt stack 0
  2648  000AC8                     Uart_MdmGsmGprsReadService@LocalRxBuffer:
  2649                           	opt stack 0
  2650  000AC8                     	ds	400
  2651  000C58                     _RxBuffer:
  2652                           	opt stack 0
  2653  000C58                     	ds	400
  2654                           tblptru	equ	0xFF8
  2655                           tblptrh	equ	0xFF7
  2656                           tblptrl	equ	0xFF6
  2657                           tablat	equ	0xFF5
  2658                           postinc0	equ	0xFEE
  2659                           wreg	equ	0xFE8
  2660                           postdec1	equ	0xFE5
  2661                           fsr1h	equ	0xFE2
  2662                           fsr1l	equ	0xFE1
  2663                           
  2664                           	psect	cstackBANK10
  2665  000A00                     __pcstackBANK10:
  2666                           	opt stack 0
  2667  000A00                     Terminal@UsbRxBuffer:
  2668                           	opt stack 0
  2669                           
  2670                           ; 200 bytes @ 0x0
  2671  000A00                     	ds	200
  2672                           tblptru	equ	0xFF8
  2673                           tblptrh	equ	0xFF7
  2674                           tblptrl	equ	0xFF6
  2675                           tablat	equ	0xFF5
  2676                           postinc0	equ	0xFEE
  2677                           wreg	equ	0xFE8
  2678                           postdec1	equ	0xFE5
  2679                           fsr1h	equ	0xFE2
  2680                           fsr1l	equ	0xFE1
  2681                           
  2682                           	psect	cstackBANK3
  2683  0003F9                     __pcstackBANK3:
  2684                           	opt stack 0
  2685  0003F9                     ??_InitializeTasks:
  2686  0003F9                     ??_ScheduleTasks:
  2687                           
  2688                           ; 1 bytes @ 0x0
  2689  0003F9                     	ds	4
  2690                           tblptru	equ	0xFF8
  2691                           tblptrh	equ	0xFF7
  2692                           tblptrl	equ	0xFF6
  2693                           tablat	equ	0xFF5
  2694                           postinc0	equ	0xFEE
  2695                           wreg	equ	0xFE8
  2696                           postdec1	equ	0xFE5
  2697                           fsr1h	equ	0xFE2
  2698                           fsr1l	equ	0xFE1
  2699                           
  2700                           	psect	cstackBANK2
  2701  000200                     __pcstackBANK2:
  2702                           	opt stack 0
  2703  000200                     Terminal@UsbTxBuffer:
  2704                           	opt stack 0
  2705                           
  2706                           ; 200 bytes @ 0x0
  2707  000200                     	ds	200
  2708  0002C8                     InitializeTasks@ActiveTaskIndex:
  2709                           	opt stack 0
  2710  0002C8                     ScheduleTasks@ActiveTaskIndex:
  2711                           	opt stack 0
  2712                           
  2713                           ; 1 bytes @ 0xC8
  2714  0002C8                     	ds	1
  2715                           tblptru	equ	0xFF8
  2716                           tblptrh	equ	0xFF7
  2717                           tblptrl	equ	0xFF6
  2718                           tablat	equ	0xFF5
  2719                           postinc0	equ	0xFEE
  2720                           wreg	equ	0xFE8
  2721                           postdec1	equ	0xFE5
  2722                           fsr1h	equ	0xFE2
  2723                           fsr1l	equ	0xFE1
  2724                           
  2725                           	psect	cstackBANK1
  2726  000100                     __pcstackBANK1:
  2727                           	opt stack 0
  2728  000100                     initEeprom@addressToRead:
  2729                           	opt stack 0
  2730  000100                     isNumberInMemory@phoneNumber:
  2731                           	opt stack 0
  2732  000100                     isMasterNumber@phoneNumber:
  2733                           	opt stack 0
  2734  000100                     findEmptySpot@positionInMemory:
  2735                           	opt stack 0
  2736  000100                     SendSmsSm@UartMessage:
  2737                           	opt stack 0
  2738  000100                     InitGprsNetwork@UartMessage:
  2739                           	opt stack 0
  2740  000100                     Terminal@TermTxBuffer:
  2741                           	opt stack 0
  2742  000100                     HttpGetMethod@UartMessage:
  2743                           	opt stack 0
  2744                           
  2745                           ; 200 bytes @ 0x0
  2746  000100                     	ds	1
  2747  000101                     initEeprom@memoryOpResult:
  2748                           	opt stack 0
  2749                           
  2750                           ; 1 bytes @ 0x1
  2751  000101                     	ds	1
  2752  000102                     initEeprom@isInitialized:
  2753                           	opt stack 0
  2754  000102                     isMasterNumber@memoryOpResult:
  2755                           	opt stack 0
  2756  000102                     findEmptySpot@memoryOpResult:
  2757                           	opt stack 0
  2758  000102                     isNumberInMemory@positionInMemory:
  2759                           	opt stack 0
  2760                           
  2761                           ; 2 bytes @ 0x2
  2762  000102                     	ds	1
  2763  000103                     initFsm@isInitialized:
  2764                           	opt stack 0
  2765                           
  2766                           ; 1 bytes @ 0x3
  2767  000103                     	ds	1
  2768  000104                     isNumberInMemory@memoryOpResult:
  2769                           	opt stack 0
  2770                           
  2771                           ; 1 bytes @ 0x4
  2772  000104                     	ds	1
  2773  000105                     addCmdFsm@receivedNumber:
  2774                           	opt stack 0
  2775  000105                     delCmdFsm@receivedNumber:
  2776                           	opt stack 0
  2777  000105                     triggerCmdFsm@receivedNumber:
  2778                           	opt stack 0
  2779                           
  2780                           ; 2 bytes @ 0x5
  2781  000105                     	ds	2
  2782  000107                     triggerCmdFsm@isComplete:
  2783                           	opt stack 0
  2784  000107                     addCmdFsm@smsText:
  2785                           	opt stack 0
  2786  000107                     delCmdFsm@smsText:
  2787                           	opt stack 0
  2788                           
  2789                           ; 2 bytes @ 0x7
  2790  000107                     	ds	1
  2791  000108                     triggerCmdFsm@numberInMemory:
  2792                           	opt stack 0
  2793                           
  2794                           ; 1 bytes @ 0x8
  2795  000108                     	ds	1
  2796  000109                     triggerCmdFsm@masterOpResult:
  2797                           	opt stack 0
  2798  000109                     addCmdFsm@isCmdSuccessfull:
  2799                           	opt stack 0
  2800  000109                     delCmdFsm@isCmdSuccessfull:
  2801                           	opt stack 0
  2802                           
  2803                           ; 2 bytes @ 0x9
  2804  000109                     	ds	1
  2805  00010A                     triggerCmdFsm@searchNumber:
  2806                           	opt stack 0
  2807                           
  2808                           ; 1 bytes @ 0xA
  2809  00010A                     	ds	1
  2810  00010B                     addCmdFsm@isComplete:
  2811                           	opt stack 0
  2812  00010B                     delCmdFsm@emptyNumber:
  2813                           	opt stack 0
  2814                           
  2815                           ; 13 bytes @ 0xB
  2816  00010B                     	ds	1
  2817  00010C                     addCmdFsm@masterOpResult:
  2818                           	opt stack 0
  2819                           
  2820                           ; 1 bytes @ 0xC
  2821  00010C                     	ds	1
  2822  00010D                     addCmdFsm@numberInMemory:
  2823                           	opt stack 0
  2824                           
  2825                           ; 1 bytes @ 0xD
  2826  00010D                     	ds	1
  2827  00010E                     addCmdFsm@searchNumber:
  2828                           	opt stack 0
  2829                           
  2830                           ; 1 bytes @ 0xE
  2831  00010E                     	ds	10
  2832  000118                     delCmdFsm@isComplete:
  2833                           	opt stack 0
  2834                           
  2835                           ; 1 bytes @ 0x18
  2836  000118                     	ds	1
  2837  000119                     delCmdFsm@masterOpResult:
  2838                           	opt stack 0
  2839                           
  2840                           ; 1 bytes @ 0x19
  2841  000119                     	ds	1
  2842  00011A                     delCmdFsm@numberInMemory:
  2843                           	opt stack 0
  2844                           
  2845                           ; 1 bytes @ 0x1A
  2846  00011A                     	ds	1
  2847  00011B                     delCmdFsm@searchNumber:
  2848                           	opt stack 0
  2849                           
  2850                           ; 1 bytes @ 0x1B
  2851  00011B                     	ds	23
  2852  000132                     InitGprsNetwork@Index:
  2853                           	opt stack 0
  2854  000132                     Term_MainSm@FwkMajorStr:
  2855                           	opt stack 0
  2856                           
  2857                           ; 4 bytes @ 0x32
  2858  000132                     	ds	4
  2859  000136                     Term_MainSm@FwkMinorStr:
  2860                           	opt stack 0
  2861                           
  2862                           ; 4 bytes @ 0x36
  2863  000136                     	ds	4
  2864  00013A                     Term_MainSm@FwkBuildStr:
  2865                           	opt stack 0
  2866                           
  2867                           ; 4 bytes @ 0x3A
  2868  00013A                     	ds	142
  2869  0001C8                     HttpGetMethod@Index:
  2870                           	opt stack 0
  2871                           
  2872                           ; 1 bytes @ 0xC8
  2873  0001C8                     	ds	1
  2874                           tblptru	equ	0xFF8
  2875                           tblptrh	equ	0xFF7
  2876                           tblptrl	equ	0xFF6
  2877                           tablat	equ	0xFF5
  2878                           postinc0	equ	0xFEE
  2879                           wreg	equ	0xFE8
  2880                           postdec1	equ	0xFE5
  2881                           fsr1h	equ	0xFE2
  2882                           fsr1l	equ	0xFE1
  2883                           
  2884                           	psect	cstackBANK0
  2885  000060                     __pcstackBANK0:
  2886                           	opt stack 0
  2887  000060                     
  2888                           ; 1 bytes @ 0x0
  2889  000060                     	ds	8
  2890  000068                     ??_LowPriorityIsr:
  2891                           
  2892                           ; 1 bytes @ 0x8
  2893  000068                     	ds	21
  2894  00007D                     ??_isdigit:
  2895  00007D                     ??_isspace:
  2896  00007D                     ??_isupper:
  2897  00007D                     ??_Rtcc_GetRtccValue:
  2898  00007D                     ??_UartTxBufferStatus:
  2899  00007D                     ??_USBStdGetDscHandler:
  2900  00007D                     ??_USBStdGetStatusHandler:
  2901  00007D                     ?_GetLastInteractionNumber:
  2902                           	opt stack 0
  2903  00007D                     ?_USBTransferOnePacket:
  2904                           	opt stack 0
  2905  00007D                     ?_strlen:
  2906                           	opt stack 0
  2907  00007D                     ?_sprintf:
  2908                           	opt stack 0
  2909  00007D                     ?_initPreamble:
  2910                           	opt stack 0
  2911  00007D                     ?___wmul:
  2912                           	opt stack 0
  2913  00007D                     ?___awdiv:
  2914                           	opt stack 0
  2915  00007D                     ?___awmod:
  2916                           	opt stack 0
  2917  00007D                     ?___lwmod:
  2918                           	opt stack 0
  2919  00007D                     ?_GetOsTickCounter:
  2920                           	opt stack 0
  2921  00007D                     ?___lmul:
  2922                           	opt stack 0
  2923  00007D                     Irq_InitIntController@GlobalInt_HighPInt:
  2924                           	opt stack 0
  2925  00007D                     SetAckStatus@AckSts:
  2926                           	opt stack 0
  2927  00007D                     WriteByte@Byte:
  2928                           	opt stack 0
  2929  00007D                     ReadByte@Byte:
  2930                           	opt stack 0
  2931  00007D                     Mcu_SetWdgSts@WdgSts:
  2932                           	opt stack 0
  2933  00007D                     RtccIrqInit@Priority:
  2934                           	opt stack 0
  2935  00007D                     Rtcc_SetRtcStatus@Status:
  2936                           	opt stack 0
  2937  00007D                     TmrBInit@Prescaler:
  2938                           	opt stack 0
  2939  00007D                     Tmr_TmrBIrqSet@Priority:
  2940                           	opt stack 0
  2941  00007D                     Tmr_StartTmr@TmrNumb:
  2942                           	opt stack 0
  2943  00007D                     UartWriteByte@ByteToWrite:
  2944                           	opt stack 0
  2945  00007D                     USBTransferOnePacket@dir:
  2946                           	opt stack 0
  2947  00007D                     USBConfigureEndpoint@direction:
  2948                           	opt stack 0
  2949  00007D                     USBCtrlTrfTxService@byteToSend:
  2950                           	opt stack 0
  2951  00007D                     USBCtrlTrfRxService@i:
  2952                           	opt stack 0
  2953  00007D                     Led_SetLedStatus@LedSts:
  2954                           	opt stack 0
  2955  00007D                     toupper@c:
  2956                           	opt stack 0
  2957  00007D                     tolower@c:
  2958                           	opt stack 0
  2959  00007D                     Mcu_StartSystemPll@PllStartupCounter:
  2960                           	opt stack 0
  2961  00007D                     Rtcc_AlarmConfig@AlarmConfig:
  2962                           	opt stack 0
  2963  00007D                     Tmr_RegisterTmr2IsrCallback@IsrCallback:
  2964                           	opt stack 0
  2965  00007D                     Uart_ClearRxBuffer@Index:
  2966                           	opt stack 0
  2967  00007D                     GenerateEvt@Event:
  2968                           	opt stack 0
  2969  00007D                     ReceiveEvt@Event:
  2970                           	opt stack 0
  2971  00007D                     Led_SetLedBlinkTime@OnTimeMs:
  2972                           	opt stack 0
  2973  00007D                     StringCompare@String1:
  2974                           	opt stack 0
  2975  00007D                     ClearBuffer@Buffer:
  2976                           	opt stack 0
  2977  00007D                     isNumberValid@phoneNumber:
  2978                           	opt stack 0
  2979  00007D                     sprintf@sp:
  2980                           	opt stack 0
  2981  00007D                     ___wmul@multiplier:
  2982                           	opt stack 0
  2983  00007D                     ___awdiv@dividend:
  2984                           	opt stack 0
  2985  00007D                     ___awmod@dividend:
  2986                           	opt stack 0
  2987  00007D                     ___lwmod@dividend:
  2988                           	opt stack 0
  2989  00007D                     memcpy@d1:
  2990                           	opt stack 0
  2991  00007D                     memset@p1:
  2992                           	opt stack 0
  2993  00007D                     strcat@to:
  2994                           	opt stack 0
  2995  00007D                     strcpy@to:
  2996                           	opt stack 0
  2997  00007D                     strlen@s:
  2998                           	opt stack 0
  2999  00007D                     ___lmul@multiplier:
  3000                           	opt stack 0
  3001                           
  3002                           ; 4 bytes @ 0x1D
  3003  00007D                     	ds	1
  3004  00007E                     ??_USBConfigureEndpoint:
  3005  00007E                     Irq_InitIntController@PerInt_LowPInt:
  3006                           	opt stack 0
  3007  00007E                     Rtcc_GetRtccValue@RtccPtrVal:
  3008                           	opt stack 0
  3009  00007E                     TmrBInit@Postscaler:
  3010                           	opt stack 0
  3011  00007E                     Tmr_TmrBIrqSet@TmrIrqSts:
  3012                           	opt stack 0
  3013  00007E                     UartWriteByte@Module:
  3014                           	opt stack 0
  3015  00007E                     UartTxBufferStatus@Module:
  3016                           	opt stack 0
  3017  00007E                     USBCtrlTrfRxService@byteToRead:
  3018                           	opt stack 0
  3019  00007E                     USBCtrlTrfInHandler@lastDTS:
  3020                           	opt stack 0
  3021  00007E                     Led_SetLedStatus@Led:
  3022                           	opt stack 0
  3023  00007E                     _isdigit$6457:
  3024                           	opt stack 0
  3025  00007E                     _isspace$6726:
  3026                           	opt stack 0
  3027  00007E                     _isupper$6729:
  3028                           	opt stack 0
  3029  00007E                     I2c_WriteData@WritePacket:
  3030                           	opt stack 0
  3031  00007E                     Rtcc_RtcConfig@RtcConfig:
  3032                           	opt stack 0
  3033  00007E                     USBTransferOnePacket@data:
  3034                           	opt stack 0
  3035  00007E                     USBStdGetStatusHandler@p:
  3036                           	opt stack 0
  3037                           
  3038                           ; 2 bytes @ 0x1E
  3039  00007E                     	ds	1
  3040  00007F                     ??_strlen:
  3041  00007F                     ??_Rtcc_AlarmConfig:
  3042  00007F                     ??_TmrBInit:
  3043  00007F                     Irq_InitIntController@IntPriorityEn:
  3044                           	opt stack 0
  3045  00007F                     Rtcc_GetRtccValue@RetValue:
  3046                           	opt stack 0
  3047  00007F                     Tmr_TmrBIrqSet@TmrNumb:
  3048                           	opt stack 0
  3049  00007F                     UartTxBufferStatus@TxBufferStatus:
  3050                           	opt stack 0
  3051  00007F                     GenerateEvt@EventStatus:
  3052                           	opt stack 0
  3053  00007F                     isdigit@c:
  3054                           	opt stack 0
  3055  00007F                     isspace@c:
  3056                           	opt stack 0
  3057  00007F                     isupper@c:
  3058                           	opt stack 0
  3059  00007F                     Led_SetLedBlinkTime@OffTimeMs:
  3060                           	opt stack 0
  3061  00007F                     StringCompare@String2:
  3062                           	opt stack 0
  3063  00007F                     ClearBuffer@Len:
  3064                           	opt stack 0
  3065  00007F                     sprintf@f:
  3066                           	opt stack 0
  3067  00007F                     ___wmul@multiplicand:
  3068                           	opt stack 0
  3069  00007F                     ___awdiv@divisor:
  3070                           	opt stack 0
  3071  00007F                     ___awmod@divisor:
  3072                           	opt stack 0
  3073  00007F                     ___lwmod@divisor:
  3074                           	opt stack 0
  3075  00007F                     memcpy@s1:
  3076                           	opt stack 0
  3077  00007F                     memset@c:
  3078                           	opt stack 0
  3079  00007F                     strcat@from:
  3080                           	opt stack 0
  3081  00007F                     strcpy@from:
  3082                           	opt stack 0
  3083                           
  3084                           ; 2 bytes @ 0x1F
  3085  00007F                     	ds	1
  3086  000080                     ??_isalpha:
  3087  000080                     ??_isxdigit:
  3088  000080                     ??_I2c_WriteData:
  3089  000080                     ??_Rtcc_RtcConfig:
  3090  000080                     Rtcc_GetRtccValue@RegValue:
  3091                           	opt stack 0
  3092  000080                     TmrBInit@TmrNumb:
  3093                           	opt stack 0
  3094  000080                     ReceiveEvt@EventStatus:
  3095                           	opt stack 0
  3096  000080                     USBTransferOnePacket@len:
  3097                           	opt stack 0
  3098  000080                     isNumberValid@isNumberOk:
  3099                           	opt stack 0
  3100  000080                     I2c_ReadData@ReadPacket:
  3101                           	opt stack 0
  3102  000080                     Uart_WriteConstString@ConstStringToWrite:
  3103                           	opt stack 0
  3104  000080                     Uart_WriteString@StringToWrite:
  3105                           	opt stack 0
  3106  000080                     Uart_WriteStringLen@StringToWrite:
  3107                           	opt stack 0
  3108  000080                     I2cSlv_SendI2cMsg@TxBuffer:
  3109                           	opt stack 0
  3110  000080                     I2cSlv_ReceiveI2cMsg@RxBuffer:
  3111                           	opt stack 0
  3112                           
  3113                           ; 2 bytes @ 0x20
  3114  000080                     	ds	1
  3115  000081                     ?_GetElapsedTime:
  3116                           	opt stack 0
  3117  000081                     ?_Rtcm_GetRtccDate:
  3118                           	opt stack 0
  3119  000081                     Mdm_IsSmsReceived@Ret:
  3120                           	opt stack 0
  3121  000081                     Mdm_IsRinging@Ret:
  3122                           	opt stack 0
  3123  000081                     I2cSlv_I2cReadMsgSts@Result:
  3124                           	opt stack 0
  3125  000081                     USBTransferOnePacket@ep:
  3126                           	opt stack 0
  3127  000081                     Led_SetLedBlinkTime@Led:
  3128                           	opt stack 0
  3129  000081                     isNumberValid@i:
  3130                           	opt stack 0
  3131  000081                     ___awdiv@counter:
  3132                           	opt stack 0
  3133  000081                     ___awmod@counter:
  3134                           	opt stack 0
  3135  000081                     ___lwmod@counter:
  3136                           	opt stack 0
  3137  000081                     _isalpha$6723:
  3138                           	opt stack 0
  3139  000081                     _isxdigit$6733:
  3140                           	opt stack 0
  3141  000081                     OsTmr_StartTimer@Timer:
  3142                           	opt stack 0
  3143  000081                     StringCompare@Len:
  3144                           	opt stack 0
  3145  000081                     ClearBuffer@Index:
  3146                           	opt stack 0
  3147  000081                     ___wmul@product:
  3148                           	opt stack 0
  3149  000081                     memcpy@n:
  3150                           	opt stack 0
  3151  000081                     memset@n:
  3152                           	opt stack 0
  3153  000081                     strcat@cp:
  3154                           	opt stack 0
  3155  000081                     strcpy@cp:
  3156                           	opt stack 0
  3157  000081                     strlen@cp:
  3158                           	opt stack 0
  3159  000081                     GetElapsedTime@StartTime:
  3160                           	opt stack 0
  3161  000081                     ___lmul@multiplicand:
  3162                           	opt stack 0
  3163                           
  3164                           ; 4 bytes @ 0x21
  3165  000081                     	ds	1
  3166  000082                     ??_I2c_ReadData:
  3167  000082                     Uart_WriteConstString@Module:
  3168                           	opt stack 0
  3169  000082                     Uart_WriteString@Module:
  3170                           	opt stack 0
  3171  000082                     Uart_WriteStringLen@Len:
  3172                           	opt stack 0
  3173  000082                     I2cSlv_SendI2cMsg@SlaveAddr:
  3174                           	opt stack 0
  3175  000082                     I2cSlv_ReceiveI2cMsg@SlaveAddr:
  3176                           	opt stack 0
  3177  000082                     USBConfigureEndpoint@EPNum:
  3178                           	opt stack 0
  3179  000082                     ___awdiv@sign:
  3180                           	opt stack 0
  3181  000082                     ___awmod@sign:
  3182                           	opt stack 0
  3183  000082                     isalpha@c:
  3184                           	opt stack 0
  3185  000082                     isxdigit@c:
  3186                           	opt stack 0
  3187  000082                     USBTransferOnePacket@handle:
  3188                           	opt stack 0
  3189                           
  3190                           ; 2 bytes @ 0x22
  3191  000082                     	ds	1
  3192  000083                     ?_GetCallerNumber:
  3193                           	opt stack 0
  3194  000083                     ?_atoi:
  3195                           	opt stack 0
  3196  000083                     ?_xtoi:
  3197                           	opt stack 0
  3198  000083                     ?___lwdiv:
  3199                           	opt stack 0
  3200  000083                     Uart_WriteStringLen@Index:
  3201                           	opt stack 0
  3202  000083                     Mdm_SetSmsFormat@Index:
  3203                           	opt stack 0
  3204  000083                     I2cSlv_SendI2cMsg@DataLenght:
  3205                           	opt stack 0
  3206  000083                     I2cSlv_ReceiveI2cMsg@DataLenght:
  3207                           	opt stack 0
  3208  000083                     getSetupCall@isCalledReceived:
  3209                           	opt stack 0
  3210  000083                     sprintf@flag:
  3211                           	opt stack 0
  3212  000083                     memcpy@tmp:
  3213                           	opt stack 0
  3214  000083                     OsAlrm_SetOsAlarm@OsAlarmId:
  3215                           	opt stack 0
  3216  000083                     USBConfigureEndpoint@handle:
  3217                           	opt stack 0
  3218  000083                     putUSBUSART@data:
  3219                           	opt stack 0
  3220  000083                     atoi@s:
  3221                           	opt stack 0
  3222  000083                     ___awdiv@quotient:
  3223                           	opt stack 0
  3224  000083                     ___lwdiv@dividend:
  3225                           	opt stack 0
  3226  000083                     memset@p:
  3227                           	opt stack 0
  3228  000083                     xtoi@s:
  3229                           	opt stack 0
  3230  000083                     OsTmr_StartTimer@Timeout:
  3231                           	opt stack 0
  3232                           
  3233                           ; 4 bytes @ 0x23
  3234  000083                     	ds	1
  3235  000084                     Uart_WriteStringLen@Module:
  3236                           	opt stack 0
  3237  000084                     I2cSlv_SendI2cMsg@TxSts:
  3238                           	opt stack 0
  3239  000084                     I2cSlv_ReceiveI2cMsg@RxSts:
  3240                           	opt stack 0
  3241  000084                     CDCTxService@i:
  3242                           	opt stack 0
  3243  000084                     getsUSBUSART@buffer:
  3244                           	opt stack 0
  3245  000084                     sprintf@ap:
  3246                           	opt stack 0
  3247  000084                     memcpy@d:
  3248                           	opt stack 0
  3249  000084                     Mdm_SetSmsFormat@UartMessage:
  3250                           	opt stack 0
  3251                           
  3252                           ; 20 bytes @ 0x24
  3253  000084                     	ds	1
  3254  000085                     ??_atoi:
  3255  000085                     ??_xtoi:
  3256  000085                     ??_GetElapsedTime:
  3257  000085                     Rtcc_SetRtccValue@Value:
  3258                           	opt stack 0
  3259  000085                     USBDeviceInit@i:
  3260                           	opt stack 0
  3261  000085                     USBEnableEndpoint@options:
  3262                           	opt stack 0
  3263  000085                     putUSBUSART@length:
  3264                           	opt stack 0
  3265  000085                     CDCTxService@byte_to_send:
  3266                           	opt stack 0
  3267  000085                     Eeprom_Reset@SlaveAddress:
  3268                           	opt stack 0
  3269  000085                     StringCompare@Result:
  3270                           	opt stack 0
  3271  000085                     triggerRelay@res:
  3272                           	opt stack 0
  3273  000085                     StringCopy@SourceStr:
  3274                           	opt stack 0
  3275  000085                     ___lwdiv@divisor:
  3276                           	opt stack 0
  3277  000085                     OsAlrm_SetOsAlarm@OsAlarmTimeout:
  3278                           	opt stack 0
  3279  000085                     ___lmul@product:
  3280                           	opt stack 0
  3281                           
  3282                           ; 4 bytes @ 0x25
  3283  000085                     	ds	1
  3284  000086                     ??_Rtcc_SetRtccValue:
  3285  000086                     getsUSBUSART@len:
  3286                           	opt stack 0
  3287  000086                     triggerRelay@isRelayOn:
  3288                           	opt stack 0
  3289  000086                     sprintf@c:
  3290                           	opt stack 0
  3291  000086                     USBEnableEndpoint@p:
  3292                           	opt stack 0
  3293  000086                     StringCompare@Index:
  3294                           	opt stack 0
  3295  000086                     memcpy@s:
  3296                           	opt stack 0
  3297                           
  3298                           ; 2 bytes @ 0x26
  3299  000086                     	ds	1
  3300  000087                     atoi@sign:
  3301                           	opt stack 0
  3302  000087                     ___lwdiv@counter:
  3303                           	opt stack 0
  3304  000087                     xtoi@sign:
  3305                           	opt stack 0
  3306  000087                     StringCopy@DestStr:
  3307                           	opt stack 0
  3308  000087                     sprintf@cp:
  3309                           	opt stack 0
  3310                           
  3311                           ; 2 bytes @ 0x27
  3312  000087                     	ds	1
  3313  000088                     Rtcc_SetRtccValue@RtccPtrVal:
  3314                           	opt stack 0
  3315  000088                     USBEnableEndpoint@ep:
  3316                           	opt stack 0
  3317  000088                     atoi@a:
  3318                           	opt stack 0
  3319  000088                     ___lwdiv@quotient:
  3320                           	opt stack 0
  3321  000088                     xtoi@val:
  3322                           	opt stack 0
  3323  000088                     parseCommand@addNumberCmd:
  3324                           	opt stack 0
  3325                           
  3326                           ; 4 bytes @ 0x28
  3327  000088                     	ds	1
  3328  000089                     ??_Rtcm_GetRtccDate:
  3329  000089                     ?_strtol:
  3330                           	opt stack 0
  3331  000089                     ?___lldiv:
  3332                           	opt stack 0
  3333  000089                     OsAlrm_SetOsAlarm@AlarmCallback:
  3334                           	opt stack 0
  3335  000089                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  3336                           	opt stack 0
  3337  000089                     StringCopy@Len:
  3338                           	opt stack 0
  3339  000089                     strtol@s:
  3340                           	opt stack 0
  3341  000089                     ___lldiv@dividend:
  3342                           	opt stack 0
  3343  000089                     Rtcm_SetRtccDate@Date:
  3344                           	opt stack 0
  3345                           
  3346                           ; 8 bytes @ 0x29
  3347  000089                     	ds	1
  3348  00008A                     xtoi@c:
  3349                           	opt stack 0
  3350  00008A                     LedBlinkStateMachine@LedBlink:
  3351                           	opt stack 0
  3352  00008A                     LedPulseStateMachine@LedPulse:
  3353                           	opt stack 0
  3354  00008A                     secondsAppTimer@counter:
  3355                           	opt stack 0
  3356  00008A                     utoa@buf:
  3357                           	opt stack 0
  3358  00008A                     Rtcm_GetRtccDate@LocalDate:
  3359                           	opt stack 0
  3360                           
  3361                           ; 8 bytes @ 0x2A
  3362  00008A                     	ds	1
  3363  00008B                     ??_StringCopy:
  3364  00008B                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  3365                           	opt stack 0
  3366  00008B                     strtol@endptr:
  3367                           	opt stack 0
  3368                           
  3369                           ; 2 bytes @ 0x2B
  3370  00008B                     	ds	1
  3371  00008C                     LedPulseStateMachine@Led:
  3372                           	opt stack 0
  3373  00008C                     secondsAppTimer@isCyclic:
  3374                           	opt stack 0
  3375  00008C                     utoa@val:
  3376                           	opt stack 0
  3377  00008C                     parseCommand@deleteNumberCmd:
  3378                           	opt stack 0
  3379                           
  3380                           ; 4 bytes @ 0x2C
  3381  00008C                     	ds	1
  3382  00008D                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  3383                           	opt stack 0
  3384  00008D                     StringCopy@Index:
  3385                           	opt stack 0
  3386  00008D                     strtol@base:
  3387                           	opt stack 0
  3388  00008D                     GetElapsedTime@TimeValue:
  3389                           	opt stack 0
  3390  00008D                     ___lldiv@divisor:
  3391                           	opt stack 0
  3392                           
  3393                           ; 4 bytes @ 0x2D
  3394  00008D                     	ds	1
  3395  00008E                     utoa@base:
  3396                           	opt stack 0
  3397                           
  3398                           ; 2 bytes @ 0x2E
  3399  00008E                     	ds	1
  3400  00008F                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  3401  00008F                     ??_strtol:
  3402  00008F                     secondsAppTimer@seconds:
  3403                           	opt stack 0
  3404  00008F                     Mdm_GetSmsData@MessageText:
  3405                           	opt stack 0
  3406  00008F                     Eeprom_Write@WriteBuffer:
  3407                           	opt stack 0
  3408  00008F                     LedStateMachine@LedSts:
  3409                           	opt stack 0
  3410  00008F                     ModemEvtParser@CallReadyString:
  3411                           	opt stack 0
  3412                           
  3413                           ; 10 bytes @ 0x2F
  3414  00008F                     	ds	1
  3415  000090                     secondsAppTimer@isExpired:
  3416                           	opt stack 0
  3417  000090                     utoa@v:
  3418                           	opt stack 0
  3419  000090                     parseCommand@resetCmd:
  3420                           	opt stack 0
  3421                           
  3422                           ; 4 bytes @ 0x30
  3423  000090                     	ds	1
  3424  000091                     ??_USBStdFeatureReqHandler:
  3425  000091                     Mdm_GetSmsData@GetSmsStatus:
  3426                           	opt stack 0
  3427  000091                     USBStdSetCfgHandler@i:
  3428                           	opt stack 0
  3429  000091                     Eeprom_Write@DataLength:
  3430                           	opt stack 0
  3431  000091                     LedStateMachine@LedOut:
  3432                           	opt stack 0
  3433  000091                     secondsAppTimer@destinationTicks:
  3434                           	opt stack 0
  3435  000091                     GetElapsedTime@CurrentTimestamp:
  3436                           	opt stack 0
  3437  000091                     ___lldiv@quotient:
  3438                           	opt stack 0
  3439                           
  3440                           ; 4 bytes @ 0x31
  3441  000091                     	ds	1
  3442  000092                     Eeprom_Write@WriteSts:
  3443                           	opt stack 0
  3444  000092                     utoa@c:
  3445                           	opt stack 0
  3446  000092                     USBStdFeatureReqHandler@pUEP:
  3447                           	opt stack 0
  3448                           
  3449                           ; 2 bytes @ 0x32
  3450  000092                     	ds	1
  3451  000093                     Eeprom_Write@MemoryAddress:
  3452                           	opt stack 0
  3453  000093                     waitSetupCall@isCallArrived:
  3454                           	opt stack 0
  3455  000093                     cmdVisualEffet@isCmdSuccessfull:
  3456                           	opt stack 0
  3457  000093                     strtol@sign:
  3458                           	opt stack 0
  3459  000093                     LedStateMachine@LedBlink:
  3460                           	opt stack 0
  3461  000093                     itoa@buf:
  3462                           	opt stack 0
  3463                           
  3464                           ; 2 bytes @ 0x33
  3465  000093                     	ds	1
  3466  000094                     USBStdFeatureReqHandler@current_ep_data:
  3467                           	opt stack 0
  3468  000094                     Eeprom_Write@SlaveAddress:
  3469                           	opt stack 0
  3470  000094                     parseCommand@state:
  3471                           	opt stack 0
  3472  000094                     cmdVisualEffet@seconds:
  3473                           	opt stack 0
  3474  000094                     strtol@a:
  3475                           	opt stack 0
  3476                           
  3477                           ; 4 bytes @ 0x34
  3478  000094                     	ds	1
  3479  000095                     Eeprom_Write@CommandLength:
  3480                           	opt stack 0
  3481  000095                     detectCmd@currentState:
  3482                           	opt stack 0
  3483  000095                     ___lldiv@counter:
  3484                           	opt stack 0
  3485  000095                     OsTmr_GetTimerStatus@Timer:
  3486                           	opt stack 0
  3487  000095                     USBStdFeatureReqHandler@p:
  3488                           	opt stack 0
  3489  000095                     LedStateMachine@LedPulse:
  3490                           	opt stack 0
  3491  000095                     itoa@val:
  3492                           	opt stack 0
  3493                           
  3494                           ; 2 bytes @ 0x35
  3495  000095                     	ds	1
  3496  000096                     Tmr_TmrBPrSet@IntFreqHz:
  3497                           	opt stack 0
  3498  000096                     SetUartBaudRate@UartConfig:
  3499                           	opt stack 0
  3500  000096                     saveNumberInMemory@phoneNumber:
  3501                           	opt stack 0
  3502  000096                     SetBaudRate@DesiredI2cBusClockHz:
  3503                           	opt stack 0
  3504                           
  3505                           ; 4 bytes @ 0x36
  3506  000096                     	ds	1
  3507  000097                     ??_USBCtrlEPService:
  3508  000097                     itoa@base:
  3509                           	opt stack 0
  3510                           
  3511                           ; 2 bytes @ 0x37
  3512  000097                     	ds	1
  3513  000098                     Tmr_TmrBPrSet@Prescaler:
  3514                           	opt stack 0
  3515  000098                     Mdm_SetSmsFormat@TextFormat:
  3516                           	opt stack 0
  3517  000098                     USBDeviceTasks@i:
  3518                           	opt stack 0
  3519  000098                     LedStateMachine@LedOutSts:
  3520                           	opt stack 0
  3521  000098                     saveNumberInMemory@address:
  3522                           	opt stack 0
  3523  000098                     strtol@c:
  3524                           	opt stack 0
  3525                           
  3526                           ; 1 bytes @ 0x38
  3527  000098                     	ds	1
  3528  000099                     Tmr_TmrBPrSet@Postscaler:
  3529                           	opt stack 0
  3530  000099                     SetUartBaudRate@Module:
  3531                           	opt stack 0
  3532  000099                     LedStateMachine@Led:
  3533                           	opt stack 0
  3534  000099                     initGprsModem@isInitialized:
  3535                           	opt stack 0
  3536  000099                     itoa@cp:
  3537                           	opt stack 0
  3538  000099                     ModemEvtParser@ClipString:
  3539                           	opt stack 0
  3540                           
  3541                           ; 5 bytes @ 0x39
  3542  000099                     	ds	1
  3543  00009A                     ??_Led_MainTask:
  3544  00009A                     Tmr_TmrBPrSet@TmrBPrCfgSts:
  3545                           	opt stack 0
  3546  00009A                     SetUartBaudRate@BaudRateRegister:
  3547                           	opt stack 0
  3548  00009A                     SetBaudRate@McuClockHz:
  3549                           	opt stack 0
  3550                           
  3551                           ; 4 bytes @ 0x3A
  3552  00009A                     	ds	1
  3553  00009B                     ??_SendSmsSm:
  3554  00009B                     Tmr_TmrBPrSet@TmrNumb:
  3555                           	opt stack 0
  3556  00009B                     OsTmr_Wait@WaitTimer:
  3557                           	opt stack 0
  3558  00009B                     InitGprsNetwork@Apn:
  3559                           	opt stack 0
  3560  00009B                     HttpGetMethod@GetData:
  3561                           	opt stack 0
  3562                           
  3563                           ; 2 bytes @ 0x3B
  3564  00009B                     	ds	1
  3565  00009C                     SetUartBaudRate@DivisionFactor:
  3566                           	opt stack 0
  3567  00009C                     Tmr_TmrBPrSet@Divisor:
  3568                           	opt stack 0
  3569                           
  3570                           ; 4 bytes @ 0x3C
  3571  00009C                     	ds	1
  3572  00009D                     ??_HttpGetMethod:
  3573  00009D                     InitGprsNetwork@ApnLen:
  3574                           	opt stack 0
  3575  00009D                     Uart_InitUartModule@UartConfig:
  3576                           	opt stack 0
  3577  00009D                     OsTmr_Wait@DelayMs:
  3578                           	opt stack 0
  3579                           
  3580                           ; 4 bytes @ 0x3D
  3581  00009D                     	ds	1
  3582  00009E                     ??_SetBaudRate:
  3583  00009E                     ??_InitGprsNetwork:
  3584  00009E                     ModemEvtParser@SmsString:
  3585                           	opt stack 0
  3586                           
  3587                           ; 5 bytes @ 0x3E
  3588  00009E                     	ds	1
  3589  00009F                     ??_Uart_InitUartModule:
  3590                           
  3591                           ; 1 bytes @ 0x3F
  3592  00009F                     	ds	1
  3593  0000A0                     Tmr_TmrBConfig@TmrBConfig:
  3594                           	opt stack 0
  3595                           
  3596                           ; 2 bytes @ 0x40
  3597  0000A0                     	ds	1
  3598  0000A1                     Uart_InitUartModule@Module:
  3599                           	opt stack 0
  3600  0000A1                     OsTmr_Wait@Ret:
  3601                           	opt stack 0
  3602                           
  3603                           ; 1 bytes @ 0x41
  3604  0000A1                     	ds	1
  3605  0000A2                     ??_Terminal:
  3606  0000A2                     I2c_InitI2cModule@I2cConfig:
  3607                           	opt stack 0
  3608  0000A2                     I2cSlv_QueryI2cData@TxBuffer:
  3609                           	opt stack 0
  3610                           
  3611                           ; 2 bytes @ 0x42
  3612  0000A2                     	ds	1
  3613  0000A3                     Tmr_TmrBConfig@TmrNumb:
  3614                           	opt stack 0
  3615  0000A3                     ModemEvtParser@RingString:
  3616                           	opt stack 0
  3617                           
  3618                           ; 4 bytes @ 0x43
  3619  0000A3                     	ds	1
  3620  0000A4                     ??_I2c_InitI2cModule:
  3621  0000A4                     I2cSlv_QueryI2cData@TxLen:
  3622                           	opt stack 0
  3623  0000A4                     Terminal@i:
  3624                           	opt stack 0
  3625  0000A4                     InitSchedTimer@TmrBConfig:
  3626                           	opt stack 0
  3627                           
  3628                           ; 7 bytes @ 0x44
  3629  0000A4                     	ds	1
  3630  0000A5                     Terminal@ReceivedBytes:
  3631                           	opt stack 0
  3632  0000A5                     I2cSlv_QueryI2cData@RxBuffer:
  3633                           	opt stack 0
  3634                           
  3635                           ; 2 bytes @ 0x45
  3636  0000A5                     	ds	1
  3637  0000A6                     Terminal@Index:
  3638                           	opt stack 0
  3639                           
  3640                           ; 1 bytes @ 0x46
  3641  0000A6                     	ds	1
  3642  0000A7                     ModemEvtParser@Match:
  3643                           	opt stack 0
  3644  0000A7                     I2cSlv_QueryI2cData@RxLen:
  3645                           	opt stack 0
  3646                           
  3647                           ; 1 bytes @ 0x47
  3648  0000A7                     	ds	1
  3649  0000A8                     ModemEvtParser@CompareIdx:
  3650                           	opt stack 0
  3651  0000A8                     I2cSlv_QueryI2cData@SlaveAddr:
  3652                           	opt stack 0
  3653                           
  3654                           ; 1 bytes @ 0x48
  3655  0000A8                     	ds	1
  3656  0000A9                     Eeprom_Read@ReadBuffer:
  3657                           	opt stack 0
  3658                           
  3659                           ; 2 bytes @ 0x49
  3660  0000A9                     	ds	2
  3661  0000AB                     Eeprom_Read@DataLength:
  3662                           	opt stack 0
  3663                           
  3664                           ; 1 bytes @ 0x4B
  3665  0000AB                     	ds	1
  3666  0000AC                     Eeprom_Read@MemoryAddress:
  3667                           	opt stack 0
  3668                           
  3669                           ; 1 bytes @ 0x4C
  3670  0000AC                     	ds	1
  3671  0000AD                     Eeprom_Read@SlaveAddress:
  3672                           	opt stack 0
  3673                           
  3674                           ; 1 bytes @ 0x4D
  3675  0000AD                     	ds	1
  3676  0000AE                     Eeprom_Read@ReadSts:
  3677                           	opt stack 0
  3678                           
  3679                           ; 1 bytes @ 0x4E
  3680  0000AE                     	ds	1
  3681  0000AF                     Eeprom_Read@QuerySts:
  3682                           	opt stack 0
  3683                           
  3684                           ; 1 bytes @ 0x4F
  3685  0000AF                     	ds	1
  3686  0000B0                     tblptru	equ	0xFF8
  3687                           tblptrh	equ	0xFF7
  3688                           tblptrl	equ	0xFF6
  3689                           tablat	equ	0xFF5
  3690                           postinc0	equ	0xFEE
  3691                           wreg	equ	0xFE8
  3692                           postdec1	equ	0xFE5
  3693                           fsr1h	equ	0xFE2
  3694                           fsr1l	equ	0xFE1
  3695                           
  3696                           ; 1 bytes @ 0x50
  3697                           
  3698                           	psect	cstackCOMRAM
  3699  000001                     __pcstackCOMRAM:
  3700                           	opt stack 0
  3701  000001                     i2GenerateEvt@Event:
  3702                           	opt stack 0
  3703                           
  3704                           ; 2 bytes @ 0x0
  3705  000001                     	ds	2
  3706  000003                     i2GenerateEvt@EventStatus:
  3707                           	opt stack 0
  3708                           
  3709                           ; 1 bytes @ 0x2
  3710  000003                     	ds	1
  3711  000004                     Uart_MdmGsmGprsReadService@UartData:
  3712                           	opt stack 0
  3713                           
  3714                           ; 1 bytes @ 0x3
  3715  000004                     	ds	1
  3716  000005                     Uart_MdmGsmGprsReadService@ServiceCounter:
  3717                           	opt stack 0
  3718                           
  3719                           ; 2 bytes @ 0x4
  3720  000005                     	ds	2
  3721  000007                     ??_HighPriorityIsr:
  3722                           
  3723                           ; 1 bytes @ 0x6
  3724  000007                     	ds	18
  3725  000019                     ?i1___wmul:
  3726                           	opt stack 0
  3727  000019                     OsAlrm_ClearOsAlarm@OsAlarmId:
  3728                           	opt stack 0
  3729  000019                     i1GenerateEvt@Event:
  3730                           	opt stack 0
  3731  000019                     i1___wmul@multiplier:
  3732                           	opt stack 0
  3733                           
  3734                           ; 2 bytes @ 0x18
  3735  000019                     	ds	2
  3736  00001B                     i1GenerateEvt@EventStatus:
  3737                           	opt stack 0
  3738  00001B                     i1___wmul@multiplicand:
  3739                           	opt stack 0
  3740                           
  3741                           ; 2 bytes @ 0x1A
  3742  00001B                     	ds	1
  3743  00001C                     i1I2cSlv_SendI2cMsg@TxBuffer:
  3744                           	opt stack 0
  3745                           
  3746                           ; 2 bytes @ 0x1B
  3747  00001C                     	ds	1
  3748  00001D                     i1___wmul@product:
  3749                           	opt stack 0
  3750                           
  3751                           ; 2 bytes @ 0x1C
  3752  00001D                     	ds	1
  3753  00001E                     i1I2cSlv_SendI2cMsg@SlaveAddr:
  3754                           	opt stack 0
  3755                           
  3756                           ; 1 bytes @ 0x1D
  3757  00001E                     	ds	1
  3758  00001F                     i1I2cSlv_SendI2cMsg@DataLenght:
  3759                           	opt stack 0
  3760                           
  3761                           ; 1 bytes @ 0x1E
  3762  00001F                     	ds	1
  3763  000020                     i1I2cSlv_SendI2cMsg@TxSts:
  3764                           	opt stack 0
  3765                           
  3766                           ; 1 bytes @ 0x1F
  3767  000020                     	ds	1
  3768  000021                     OsAlrm_ProcessOsAlarms@AlarmIndex:
  3769                           	opt stack 0
  3770                           
  3771                           ; 2 bytes @ 0x20
  3772  000021                     	ds	2
  3773  000023                     tblptru	equ	0xFF8
  3774                           tblptrh	equ	0xFF7
  3775                           tblptrl	equ	0xFF6
  3776                           tablat	equ	0xFF5
  3777                           postinc0	equ	0xFEE
  3778                           wreg	equ	0xFE8
  3779                           postdec1	equ	0xFE5
  3780                           fsr1h	equ	0xFE2
  3781                           fsr1l	equ	0xFE1
  3782                           
  3783                           ; 1 bytes @ 0x22
  3784 ;;
  3785 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3786 ;;
  3787 ;; *************** function _main *****************
  3788 ;; Defined at:
  3789 ;;		line 58 in file "../../MercuryFwk/Source/c/00_Main/main.c"
  3790 ;; Parameters:    Size  Location     Type
  3791 ;;		None
  3792 ;; Auto vars:     Size  Location     Type
  3793 ;;		None
  3794 ;; Return value:  Size  Location     Type
  3795 ;;                  2   14[None  ] short 
  3796 ;; Registers used:
  3797 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  3798 ;; Tracked objects:
  3799 ;;		On entry : 0/0
  3800 ;;		On exit  : 0/0
  3801 ;;		Unchanged: 0/0
  3802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3804 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3806 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3807 ;;Total ram usage:        0 bytes
  3808 ;; Hardware stack levels required when called:   23
  3809 ;; This function calls:
  3810 ;;		_Sch_MainScheduler
  3811 ;;		_SystemInit
  3812 ;; This function is called by:
  3813 ;;		Startup code after reset
  3814 ;; This function uses a non-reentrant model
  3815 ;;
  3816                           
  3817                           	psect	text0
  3818  006C2C                     __ptext0:
  3819                           	opt stack 0
  3820  006C2C                     _main:
  3821                           	opt stack 8
  3822                           
  3823                           ;main.c: 61: SystemInit();
  3824                           
  3825                           ;incstack = 0
  3826  006C2C  EC1A  F033         	call	_SystemInit	;wreg free
  3827                           
  3828                           ;main.c: 64: Sch_MainScheduler();
  3829  006C30  ECFC  F034         	call	_Sch_MainScheduler	;wreg free
  3830                           
  3831                           ;main.c: 67: return 0;
  3832                           ;	Return value of _main is never used
  3833  006C34  EF66  F000         	goto	start
  3834  006C38                     __end_of_main:
  3835                           	opt stack 0
  3836                           tblptru	equ	0xFF8
  3837                           tblptrh	equ	0xFF7
  3838                           tblptrl	equ	0xFF6
  3839                           tablat	equ	0xFF5
  3840                           postinc0	equ	0xFEE
  3841                           wreg	equ	0xFE8
  3842                           postdec1	equ	0xFE5
  3843                           fsr1h	equ	0xFE2
  3844                           fsr1l	equ	0xFE1
  3845                           
  3846 ;; *************** function _SystemInit *****************
  3847 ;; Defined at:
  3848 ;;		line 121 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/sys_init.c"
  3849 ;; Parameters:    Size  Location     Type
  3850 ;;		None
  3851 ;; Auto vars:     Size  Location     Type
  3852 ;;		None
  3853 ;; Return value:  Size  Location     Type
  3854 ;;                  1    wreg      void 
  3855 ;; Registers used:
  3856 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3857 ;; Tracked objects:
  3858 ;;		On entry : 0/0
  3859 ;;		On exit  : 0/0
  3860 ;;		Unchanged: 0/0
  3861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3862 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3863 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3864 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3865 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3866 ;;Total ram usage:        0 bytes
  3867 ;; Hardware stack levels used:    1
  3868 ;; Hardware stack levels required when called:   15
  3869 ;; This function calls:
  3870 ;;		_InitSchedTimer
  3871 ;;		_Irq_InitIntController
  3872 ;;		_Mcu_ConfigExtInt
  3873 ;;		_Mcu_StartSystemPll
  3874 ;;		_Pm_DsReleasePinControl
  3875 ;;		_Tmr_RegisterTmr2IsrCallback
  3876 ;; This function is called by:
  3877 ;;		_main
  3878 ;; This function uses a non-reentrant model
  3879 ;;
  3880                           
  3881                           	psect	text1
  3882  006634                     __ptext1:
  3883                           	opt stack 0
  3884  006634                     _SystemInit:
  3885                           	opt stack 15
  3886                           
  3887                           ;sys_init.c: 124: Pm_DsReleasePinControl();
  3888                           
  3889                           ;incstack = 0
  3890  006634  EC4A  F036         	call	_Pm_DsReleasePinControl	;wreg free
  3891                           
  3892                           ;sys_init.c: 126: Mcu_StartSystemPll();
  3893  006638  ECED  F034         	call	_Mcu_StartSystemPll	;wreg free
  3894                           
  3895                           ;sys_init.c: 128: Irq_InitIntController(IntPriorityMode,1u,1u);
  3896  00663C  0E01               	movlw	1
  3897  00663E  0100               	movlb	0	; () banked
  3898  006640  6F7D               	movwf	Irq_InitIntController@GlobalInt_HighPInt& (0+255),b
  3899  006642  0E01               	movlw	1
  3900  006644  6F7E               	movwf	Irq_InitIntController@PerInt_LowPInt& (0+255),b
  3901  006646  0E01               	movlw	1
  3902  006648  ECBE  F033         	call	_Irq_InitIntController
  3903                           
  3904                           ;sys_init.c: 130: Tmr_RegisterTmr2IsrCallback(&Sch_SchmIntService);
  3905  00664C  0E1E               	movlw	low _Sch_SchmIntService
  3906  00664E  0100               	movlb	0	; () banked
  3907  006650  6F7D               	movwf	Tmr_RegisterTmr2IsrCallback@IsrCallback& (0+255),b
  3908  006652  0E6C               	movlw	high _Sch_SchmIntService
  3909  006654  6F7E               	movwf	(Tmr_RegisterTmr2IsrCallback@IsrCallback+1)& (0+255),b
  3910  006656  EC2D  F036         	call	_Tmr_RegisterTmr2IsrCallback	;wreg free
  3911                           
  3912                           ;sys_init.c: 132: InitSchedTimer();
  3913  00665A  EC7A  F033         	call	_InitSchedTimer	;wreg free
  3914                           
  3915                           ;sys_init.c: 134: Mcu_ConfigExtInt();
  3916  00665E  EC36  F035         	call	_Mcu_ConfigExtInt	;wreg free
  3917  006662  0012               	return		;funcret
  3918  006664                     __end_of_SystemInit:
  3919                           	opt stack 0
  3920                           tblptru	equ	0xFF8
  3921                           tblptrh	equ	0xFF7
  3922                           tblptrl	equ	0xFF6
  3923                           tablat	equ	0xFF5
  3924                           postinc0	equ	0xFEE
  3925                           wreg	equ	0xFE8
  3926                           postdec1	equ	0xFE5
  3927                           fsr1h	equ	0xFE2
  3928                           fsr1l	equ	0xFE1
  3929                           
  3930 ;; *************** function _Tmr_RegisterTmr2IsrCallback *****************
  3931 ;; Defined at:
  3932 ;;		line 329 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  3933 ;; Parameters:    Size  Location     Type
  3934 ;;  IsrCallback     2   29[BANK0 ] PTR FTN()void 
  3935 ;;		 -> Sch_SchmIntService(1), 
  3936 ;; Auto vars:     Size  Location     Type
  3937 ;;		None
  3938 ;; Return value:  Size  Location     Type
  3939 ;;                  1    wreg      void 
  3940 ;; Registers used:
  3941 ;;		wreg, status,2, status,0
  3942 ;; Tracked objects:
  3943 ;;		On entry : 0/0
  3944 ;;		On exit  : 0/0
  3945 ;;		Unchanged: 0/0
  3946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3947 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3948 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3950 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3951 ;;Total ram usage:        2 bytes
  3952 ;; Hardware stack levels used:    1
  3953 ;; Hardware stack levels required when called:   11
  3954 ;; This function calls:
  3955 ;;		Nothing
  3956 ;; This function is called by:
  3957 ;;		_SystemInit
  3958 ;; This function uses a non-reentrant model
  3959 ;;
  3960                           
  3961                           	psect	text2
  3962  006C5A                     __ptext2:
  3963                           	opt stack 0
  3964  006C5A                     _Tmr_RegisterTmr2IsrCallback:
  3965                           	opt stack 18
  3966                           
  3967                           ;tmr_drv.c: 332: Tmr2IsrCallback = IsrCallback;
  3968                           
  3969                           ;incstack = 0
  3970  006C5A  C07D  F2E7         	movff	Tmr_RegisterTmr2IsrCallback@IsrCallback,_Tmr2IsrCallback
  3971  006C5E  C07E  F2E8         	movff	Tmr_RegisterTmr2IsrCallback@IsrCallback+1,_Tmr2IsrCallback+1
  3972  006C62  0012               	return		;funcret
  3973  006C64                     __end_of_Tmr_RegisterTmr2IsrCallback:
  3974                           	opt stack 0
  3975                           tblptru	equ	0xFF8
  3976                           tblptrh	equ	0xFF7
  3977                           tblptrl	equ	0xFF6
  3978                           tablat	equ	0xFF5
  3979                           postinc0	equ	0xFEE
  3980                           wreg	equ	0xFE8
  3981                           postdec1	equ	0xFE5
  3982                           fsr1h	equ	0xFE2
  3983                           fsr1l	equ	0xFE1
  3984                           
  3985 ;; *************** function _Pm_DsReleasePinControl *****************
  3986 ;; Defined at:
  3987 ;;		line 166 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/pm_drv.c"
  3988 ;; Parameters:    Size  Location     Type
  3989 ;;		None
  3990 ;; Auto vars:     Size  Location     Type
  3991 ;;		None
  3992 ;; Return value:  Size  Location     Type
  3993 ;;                  1    wreg      void 
  3994 ;; Registers used:
  3995 ;;		None
  3996 ;; Tracked objects:
  3997 ;;		On entry : 0/0
  3998 ;;		On exit  : 0/0
  3999 ;;		Unchanged: 0/0
  4000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4001 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4002 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4003 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4004 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4005 ;;Total ram usage:        0 bytes
  4006 ;; Hardware stack levels used:    1
  4007 ;; Hardware stack levels required when called:   11
  4008 ;; This function calls:
  4009 ;;		Nothing
  4010 ;; This function is called by:
  4011 ;;		_SystemInit
  4012 ;; This function uses a non-reentrant model
  4013 ;;
  4014                           
  4015                           	psect	text3
  4016  006C94                     __ptext3:
  4017                           	opt stack 0
  4018  006C94                     _Pm_DsReleasePinControl:
  4019                           	opt stack 18
  4020                           
  4021                           ;pm_drv.c: 169: DSCONLbits.RELEASE = 0u;
  4022                           
  4023                           ;incstack = 0
  4024  006C94  010F               	movlb	15	; () banked
  4025  006C96  914C               	bcf	76,0,b	;volatile
  4026                           
  4027                           ; BSR set to: 15
  4028  006C98  0012               	return		;funcret
  4029  006C9A                     __end_of_Pm_DsReleasePinControl:
  4030                           	opt stack 0
  4031                           tblptru	equ	0xFF8
  4032                           tblptrh	equ	0xFF7
  4033                           tblptrl	equ	0xFF6
  4034                           tablat	equ	0xFF5
  4035                           postinc0	equ	0xFEE
  4036                           wreg	equ	0xFE8
  4037                           postdec1	equ	0xFE5
  4038                           fsr1h	equ	0xFE2
  4039                           fsr1l	equ	0xFE1
  4040                           
  4041 ;; *************** function _Mcu_StartSystemPll *****************
  4042 ;; Defined at:
  4043 ;;		line 81 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
  4044 ;; Parameters:    Size  Location     Type
  4045 ;;		None
  4046 ;; Auto vars:     Size  Location     Type
  4047 ;;  PllStartupCo    2   29[BANK0 ] volatile unsigned short 
  4048 ;; Return value:  Size  Location     Type
  4049 ;;                  1    wreg      void 
  4050 ;; Registers used:
  4051 ;;		wreg, status,2, status,0
  4052 ;; Tracked objects:
  4053 ;;		On entry : 0/0
  4054 ;;		On exit  : 0/0
  4055 ;;		Unchanged: 0/0
  4056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4057 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4058 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4060 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4061 ;;Total ram usage:        2 bytes
  4062 ;; Hardware stack levels used:    1
  4063 ;; Hardware stack levels required when called:   11
  4064 ;; This function calls:
  4065 ;;		Nothing
  4066 ;; This function is called by:
  4067 ;;		_SystemInit
  4068 ;; This function uses a non-reentrant model
  4069 ;;
  4070                           
  4071                           	psect	text4
  4072  0069DA                     __ptext4:
  4073                           	opt stack 0
  4074  0069DA                     _Mcu_StartSystemPll:
  4075                           	opt stack 18
  4076                           
  4077                           ;mcu_drv.c: 83: volatile UINT16 PllStartupCounter = ((UINT16)(1000));
  4078                           
  4079                           ; BSR set to: 15
  4080                           ;incstack = 0
  4081  0069DA  0E03               	movlw	3
  4082  0069DC  0100               	movlb	0	; () banked
  4083  0069DE  6F7E               	movwf	(Mcu_StartSystemPll@PllStartupCounter+1)& (0+255),b	;volatile
  4084  0069E0  0EE8               	movlw	232
  4085  0069E2  6F7D               	movwf	Mcu_StartSystemPll@PllStartupCounter& (0+255),b	;volatile
  4086                           
  4087                           ; BSR set to: 0
  4088                           ;mcu_drv.c: 86: OSCTUNEbits.PLLEN = ((UINT8)(1));
  4089  0069E4  8C9B               	bsf	3995,6,c	;volatile
  4090  0069E6                     l12351:
  4091                           
  4092                           ; BSR set to: 0
  4093  0069E6  077D               	decf	Mcu_StartSystemPll@PllStartupCounter& (0+255),f,b	;volatile
  4094  0069E8  A0D8               	btfss	status,0,c
  4095  0069EA  077E               	decf	(Mcu_StartSystemPll@PllStartupCounter+1)& (0+255),f,b	;volatile
  4096  0069EC  297D               	incf	Mcu_StartSystemPll@PllStartupCounter& (0+255),w,b	;volatile
  4097  0069EE  E1FB               	bnz	l12351
  4098  0069F0  297E               	incf	(Mcu_StartSystemPll@PllStartupCounter+1)& (0+255),w,b	;volatile
  4099  0069F2  B4D8               	btfsc	status,2,c
  4100  0069F4  0012               	return	
  4101  0069F6  D7F7               	goto	l237
  4102  0069F8                     __end_of_Mcu_StartSystemPll:
  4103                           	opt stack 0
  4104                           tblptru	equ	0xFF8
  4105                           tblptrh	equ	0xFF7
  4106                           tblptrl	equ	0xFF6
  4107                           tablat	equ	0xFF5
  4108                           postinc0	equ	0xFEE
  4109                           wreg	equ	0xFE8
  4110                           postdec1	equ	0xFE5
  4111                           fsr1h	equ	0xFE2
  4112                           fsr1l	equ	0xFE1
  4113                           status	equ	0xFD8
  4114                           
  4115 ;; *************** function _Mcu_ConfigExtInt *****************
  4116 ;; Defined at:
  4117 ;;		line 99 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
  4118 ;; Parameters:    Size  Location     Type
  4119 ;;		None
  4120 ;; Auto vars:     Size  Location     Type
  4121 ;;		None
  4122 ;; Return value:  Size  Location     Type
  4123 ;;                  1    wreg      void 
  4124 ;; Registers used:
  4125 ;;		wreg, status,2
  4126 ;; Tracked objects:
  4127 ;;		On entry : 0/0
  4128 ;;		On exit  : 0/0
  4129 ;;		Unchanged: 0/0
  4130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4131 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4132 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4133 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4134 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4135 ;;Total ram usage:        0 bytes
  4136 ;; Hardware stack levels used:    1
  4137 ;; Hardware stack levels required when called:   11
  4138 ;; This function calls:
  4139 ;;		Nothing
  4140 ;; This function is called by:
  4141 ;;		_SystemInit
  4142 ;; This function uses a non-reentrant model
  4143 ;;
  4144                           
  4145                           	psect	text5
  4146  006A6C                     __ptext5:
  4147                           	opt stack 0
  4148  006A6C                     _Mcu_ConfigExtInt:
  4149                           	opt stack 18
  4150                           
  4151                           ;mcu_drv.c: 102: TRISBbits.TRISB0 = ((UINT8)(1));
  4152                           
  4153                           ; BSR set to: 0
  4154                           ;incstack = 0
  4155  006A6C  8093               	bsf	3987,0,c	;volatile
  4156                           
  4157                           ;mcu_drv.c: 103: TRISDbits.TRISD3 = ((UINT8)(1));
  4158  006A6E  8695               	bsf	3989,3,c	;volatile
  4159                           
  4160                           ;mcu_drv.c: 106: ANCON1bits.PCFG12 = 1u;
  4161  006A70  010F               	movlb	15	; () banked
  4162  006A72  8949               	bsf	73,4,b	;volatile
  4163                           
  4164                           ; BSR set to: 15
  4165                           ;mcu_drv.c: 108: RPINR1 = 20;
  4166  006A74  0E14               	movlw	20
  4167  006A76  010E               	movlb	14	; () banked
  4168  006A78  6FE7               	movwf	231,b	;volatile
  4169                           
  4170                           ; BSR set to: 14
  4171                           ;mcu_drv.c: 111: INTCONbits.INT0IE = 1u;
  4172  006A7A  88F2               	bsf	intcon,4,c	;volatile
  4173                           
  4174                           ; BSR set to: 14
  4175                           ;mcu_drv.c: 112: INTCON3bits.INT1IE = 1u;
  4176  006A7C  86F0               	bsf	intcon3,3,c	;volatile
  4177                           
  4178                           ; BSR set to: 14
  4179                           ;mcu_drv.c: 113: INTCON3bits.INT1IP = 1u;
  4180  006A7E  8CF0               	bsf	intcon3,6,c	;volatile
  4181                           
  4182                           ; BSR set to: 14
  4183                           ;mcu_drv.c: 114: INTCON2bits.INTEDG0 = 0u;
  4184  006A80  9CF1               	bcf	intcon2,6,c	;volatile
  4185                           
  4186                           ; BSR set to: 14
  4187                           ;mcu_drv.c: 115: INTCON2bits.INTEDG1 = 0u;
  4188  006A82  9AF1               	bcf	intcon2,5,c	;volatile
  4189                           
  4190                           ; BSR set to: 14
  4191  006A84  0012               	return		;funcret
  4192  006A86                     __end_of_Mcu_ConfigExtInt:
  4193                           	opt stack 0
  4194                           tblptru	equ	0xFF8
  4195                           tblptrh	equ	0xFF7
  4196                           tblptrl	equ	0xFF6
  4197                           tablat	equ	0xFF5
  4198                           intcon	equ	0xFF2
  4199                           intcon2	equ	0xFF1
  4200                           intcon3	equ	0xFF0
  4201                           postinc0	equ	0xFEE
  4202                           wreg	equ	0xFE8
  4203                           postdec1	equ	0xFE5
  4204                           fsr1h	equ	0xFE2
  4205                           fsr1l	equ	0xFE1
  4206                           status	equ	0xFD8
  4207                           
  4208 ;; *************** function _Irq_InitIntController *****************
  4209 ;; Defined at:
  4210 ;;		line 75 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/irq.c"
  4211 ;; Parameters:    Size  Location     Type
  4212 ;;  IntPriorityE    1    wreg     enum E7720
  4213 ;;  GlobalInt_Hi    1   29[BANK0 ] unsigned char 
  4214 ;;  PerInt_LowPI    1   30[BANK0 ] unsigned char 
  4215 ;; Auto vars:     Size  Location     Type
  4216 ;;  IntPriorityE    1   31[BANK0 ] enum E7720
  4217 ;; Return value:  Size  Location     Type
  4218 ;;                  1    wreg      void 
  4219 ;; Registers used:
  4220 ;;		wreg
  4221 ;; Tracked objects:
  4222 ;;		On entry : 0/0
  4223 ;;		On exit  : 0/0
  4224 ;;		Unchanged: 0/0
  4225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4226 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4227 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4229 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4230 ;;Total ram usage:        3 bytes
  4231 ;; Hardware stack levels used:    1
  4232 ;; Hardware stack levels required when called:   11
  4233 ;; This function calls:
  4234 ;;		Nothing
  4235 ;; This function is called by:
  4236 ;;		_SystemInit
  4237 ;; This function uses a non-reentrant model
  4238 ;;
  4239                           
  4240                           	psect	text6
  4241  00677C                     __ptext6:
  4242                           	opt stack 0
  4243  00677C                     _Irq_InitIntController:
  4244                           	opt stack 18
  4245                           
  4246                           ; BSR set to: 14
  4247                           ;incstack = 0
  4248                           ;Irq_InitIntController@IntPriorityEn stored from wreg
  4249  00677C  0100               	movlb	0	; () banked
  4250  00677E  6F7F               	movwf	Irq_InitIntController@IntPriorityEn& (0+255),b
  4251                           
  4252                           ;irq.c: 78: RCONbits.IPEN = IntPriorityEn;
  4253  006780  0100               	movlb	0	; () banked
  4254  006782  B17F               	btfsc	Irq_InitIntController@IntPriorityEn& (0+255),0,b
  4255  006784  D002               	bra	u10875
  4256  006786  9ED0               	bcf	4048,7,c	;volatile
  4257  006788  D001               	bra	u10876
  4258  00678A                     u10875:
  4259  00678A  8ED0               	bsf	4048,7,c	;volatile
  4260  00678C                     u10876:
  4261                           
  4262                           ;irq.c: 80: INTCONbits.GIE_GIEH = GlobalInt_HighPInt;
  4263  00678C  0100               	movlb	0	; () banked
  4264  00678E  B17D               	btfsc	Irq_InitIntController@GlobalInt_HighPInt& (0+255),0,b
  4265  006790  D002               	bra	u10885
  4266  006792  9EF2               	bcf	intcon,7,c	;volatile
  4267  006794  D001               	bra	u10886
  4268  006796                     u10885:
  4269  006796  8EF2               	bsf	intcon,7,c	;volatile
  4270  006798                     u10886:
  4271                           
  4272                           ;irq.c: 82: INTCONbits.PEIE_GIEL = PerInt_LowPInt;
  4273  006798  0100               	movlb	0	; () banked
  4274  00679A  B17E               	btfsc	Irq_InitIntController@PerInt_LowPInt& (0+255),0,b
  4275  00679C  D002               	bra	u10895
  4276  00679E  9CF2               	bcf	intcon,6,c	;volatile
  4277  0067A0  D001               	bra	u10896
  4278  0067A2                     u10895:
  4279  0067A2  8CF2               	bsf	intcon,6,c	;volatile
  4280  0067A4                     u10896:
  4281  0067A4  0012               	return		;funcret
  4282  0067A6                     __end_of_Irq_InitIntController:
  4283                           	opt stack 0
  4284                           tblptru	equ	0xFF8
  4285                           tblptrh	equ	0xFF7
  4286                           tblptrl	equ	0xFF6
  4287                           tablat	equ	0xFF5
  4288                           intcon	equ	0xFF2
  4289                           intcon2	equ	0xFF1
  4290                           intcon3	equ	0xFF0
  4291                           postinc0	equ	0xFEE
  4292                           wreg	equ	0xFE8
  4293                           postdec1	equ	0xFE5
  4294                           fsr1h	equ	0xFE2
  4295                           fsr1l	equ	0xFE1
  4296                           status	equ	0xFD8
  4297                           
  4298 ;; *************** function _InitSchedTimer *****************
  4299 ;; Defined at:
  4300 ;;		line 69 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/sys_init.c"
  4301 ;; Parameters:    Size  Location     Type
  4302 ;;		None
  4303 ;; Auto vars:     Size  Location     Type
  4304 ;;  TmrBConfig      7   68[BANK0 ] struct _TmrBConfigType
  4305 ;; Return value:  Size  Location     Type
  4306 ;;                  1    wreg      void 
  4307 ;; Registers used:
  4308 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4309 ;; Tracked objects:
  4310 ;;		On entry : 0/0
  4311 ;;		On exit  : 0/0
  4312 ;;		Unchanged: 0/0
  4313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4314 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4315 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4317 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4318 ;;Total ram usage:        7 bytes
  4319 ;; Hardware stack levels used:    1
  4320 ;; Hardware stack levels required when called:   14
  4321 ;; This function calls:
  4322 ;;		_Tmr_TmrBConfig
  4323 ;; This function is called by:
  4324 ;;		_SystemInit
  4325 ;; This function uses a non-reentrant model
  4326 ;;
  4327                           
  4328                           	psect	text7
  4329  0066F4                     __ptext7:
  4330                           	opt stack 0
  4331  0066F4                     _InitSchedTimer:
  4332                           	opt stack 15
  4333                           
  4334                           ;sys_init.c: 71: TmrBConfigType TmrBConfig;
  4335                           ;sys_init.c: 74: TmrBConfig.PreScaler = 4;
  4336                           
  4337                           ;incstack = 0
  4338  0066F4  0E04               	movlw	4
  4339  0066F6  0100               	movlb	0	; () banked
  4340  0066F8  6FA4               	movwf	InitSchedTimer@TmrBConfig& (0+255),b
  4341                           
  4342                           ;sys_init.c: 75: TmrBConfig.PostScaler = 12;
  4343  0066FA  0E0C               	movlw	12
  4344  0066FC  6FA5               	movwf	(InitSchedTimer@TmrBConfig+1)& (0+255),b
  4345                           
  4346                           ;sys_init.c: 76: TmrBConfig.IntPriority = 0u;
  4347  0066FE  0E00               	movlw	0
  4348  006700  6FA7               	movwf	(InitSchedTimer@TmrBConfig+3)& (0+255),b
  4349                           
  4350                           ;sys_init.c: 77: TmrBConfig.IntEnable = 1u;
  4351  006702  0E01               	movlw	1
  4352  006704  6FA6               	movwf	(InitSchedTimer@TmrBConfig+2)& (0+255),b
  4353                           
  4354                           ;sys_init.c: 78: TmrBConfig.IntFreqHz = ((UINT16)(1000));
  4355  006706  0E03               	movlw	3
  4356  006708  6FA9               	movwf	(InitSchedTimer@TmrBConfig+5)& (0+255),b
  4357  00670A  0EE8               	movlw	232
  4358  00670C  6FA8               	movwf	(InitSchedTimer@TmrBConfig+4)& (0+255),b
  4359                           
  4360                           ;sys_init.c: 79: TmrBConfig.StartTmrRequest = StartTmrReq;
  4361  00670E  0E01               	movlw	1
  4362  006710  6FAA               	movwf	(InitSchedTimer@TmrBConfig+6)& (0+255),b
  4363                           
  4364                           ; BSR set to: 0
  4365                           ;sys_init.c: 82: Tmr_TmrBConfig(((UINT8)(2)),&TmrBConfig);
  4366  006712  0EA4               	movlw	low InitSchedTimer@TmrBConfig
  4367  006714  6FA0               	movwf	Tmr_TmrBConfig@TmrBConfig& (0+255),b
  4368  006716  0E00               	movlw	high InitSchedTimer@TmrBConfig
  4369  006718  6FA1               	movwf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),b
  4370  00671A  0E02               	movlw	2
  4371  00671C  EC15  F020         	call	_Tmr_TmrBConfig
  4372  006720  0012               	return		;funcret
  4373  006722                     __end_of_InitSchedTimer:
  4374                           	opt stack 0
  4375                           tblptru	equ	0xFF8
  4376                           tblptrh	equ	0xFF7
  4377                           tblptrl	equ	0xFF6
  4378                           tablat	equ	0xFF5
  4379                           intcon	equ	0xFF2
  4380                           intcon2	equ	0xFF1
  4381                           intcon3	equ	0xFF0
  4382                           postinc0	equ	0xFEE
  4383                           wreg	equ	0xFE8
  4384                           postdec1	equ	0xFE5
  4385                           fsr1h	equ	0xFE2
  4386                           fsr1l	equ	0xFE1
  4387                           status	equ	0xFD8
  4388                           
  4389 ;; *************** function _Tmr_TmrBConfig *****************
  4390 ;; Defined at:
  4391 ;;		line 271 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  4392 ;; Parameters:    Size  Location     Type
  4393 ;;  TmrNumb         1    wreg     unsigned char 
  4394 ;;  TmrBConfig      2   64[BANK0 ] PTR struct _TmrBConfigTy
  4395 ;;		 -> InitAuxTimer@TmrBConfig(7), InitSchedTimer@TmrBConfig(7), 
  4396 ;; Auto vars:     Size  Location     Type
  4397 ;;  TmrNumb         1   67[BANK0 ] unsigned char 
  4398 ;; Return value:  Size  Location     Type
  4399 ;;                  1    wreg      void 
  4400 ;; Registers used:
  4401 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4402 ;; Tracked objects:
  4403 ;;		On entry : 0/0
  4404 ;;		On exit  : 0/0
  4405 ;;		Unchanged: 0/0
  4406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4407 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4408 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4409 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4410 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4411 ;;Total ram usage:        4 bytes
  4412 ;; Hardware stack levels used:    1
  4413 ;; Hardware stack levels required when called:   13
  4414 ;; This function calls:
  4415 ;;		_TmrBInit
  4416 ;;		_Tmr_StartTmr
  4417 ;;		_Tmr_TmrBIrqSet
  4418 ;;		_Tmr_TmrBPrSet
  4419 ;; This function is called by:
  4420 ;;		_InitSchedTimer
  4421 ;;		_InitAuxTimer
  4422 ;; This function uses a non-reentrant model
  4423 ;;
  4424                           
  4425                           	psect	text8
  4426  00402A                     __ptext8:
  4427                           	opt stack 0
  4428  00402A                     _Tmr_TmrBConfig:
  4429                           	opt stack 15
  4430                           
  4431                           ;incstack = 0
  4432                           ;Tmr_TmrBConfig@TmrNumb stored from wreg
  4433  00402A  0100               	movlb	0	; () banked
  4434  00402C  6FA3               	movwf	Tmr_TmrBConfig@TmrNumb& (0+255),b
  4435                           
  4436                           ;tmr_drv.c: 274: TmrBInit(TmrNumb,TmrBConfig->PreScaler,TmrBConfig->PostScaler);
  4437  00402E  C0A0  FFD9         	movff	Tmr_TmrBConfig@TmrBConfig,fsr2l
  4438  004032  C0A1  FFDA         	movff	Tmr_TmrBConfig@TmrBConfig+1,fsr2h
  4439  004036  50DF               	movf	indf2,w,c
  4440  004038  0100               	movlb	0	; () banked
  4441  00403A  6F7D               	movwf	TmrBInit@Prescaler& (0+255),b
  4442  00403C  EE20 F001          	lfsr	2,1
  4443  004040  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4444  004042  26D9               	addwf	fsr2l,f,c
  4445  004044  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4446  004046  22DA               	addwfc	fsr2h,f,c
  4447  004048  50DF               	movf	indf2,w,c
  4448  00404A  6F7E               	movwf	TmrBInit@Postscaler& (0+255),b
  4449  00404C  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4450  00404E  ECA2  F026         	call	_TmrBInit
  4451                           
  4452                           ;tmr_drv.c: 276: if (TmrBConfig->IntEnable == EnableInt)
  4453  004052  0100               	movlb	0	; () banked
  4454  004054  EE20 F002          	lfsr	2,2
  4455  004058  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4456  00405A  26D9               	addwf	fsr2l,f,c
  4457  00405C  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4458  00405E  22DA               	addwfc	fsr2h,f,c
  4459  004060  04DE               	decf	postinc2,w,c
  4460  004062  A4D8               	btfss	status,2,c
  4461  004064  D00E               	goto	l546
  4462                           
  4463                           ; BSR set to: 0
  4464                           ;tmr_drv.c: 277: {
  4465                           ;tmr_drv.c: 279: Tmr_TmrBIrqSet(TmrNumb,TmrBConfig->IntPriority,1u);
  4466  004066  EE20 F003          	lfsr	2,3
  4467  00406A  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4468  00406C  26D9               	addwf	fsr2l,f,c
  4469  00406E  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4470  004070  22DA               	addwfc	fsr2h,f,c
  4471  004072  50DF               	movf	indf2,w,c
  4472  004074  6F7D               	movwf	Tmr_TmrBIrqSet@Priority& (0+255),b
  4473  004076  0E01               	movlw	1
  4474  004078  6F7E               	movwf	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),b
  4475  00407A  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4476  00407C  EC09  F030         	call	_Tmr_TmrBIrqSet
  4477                           
  4478                           ;tmr_drv.c: 280: }
  4479  004080  D00E               	goto	l547
  4480  004082                     l546:
  4481                           
  4482                           ;tmr_drv.c: 281: else
  4483                           ;tmr_drv.c: 282: {
  4484                           ;tmr_drv.c: 284: Tmr_TmrBIrqSet(TmrNumb,TmrBConfig->IntPriority,0u);
  4485  004082  0100               	movlb	0	; () banked
  4486  004084  EE20 F003          	lfsr	2,3
  4487  004088  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4488  00408A  26D9               	addwf	fsr2l,f,c
  4489  00408C  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4490  00408E  22DA               	addwfc	fsr2h,f,c
  4491  004090  50DF               	movf	indf2,w,c
  4492  004092  6F7D               	movwf	Tmr_TmrBIrqSet@Priority& (0+255),b
  4493  004094  0E00               	movlw	0
  4494  004096  6F7E               	movwf	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),b
  4495  004098  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4496  00409A  EC09  F030         	call	_Tmr_TmrBIrqSet
  4497  00409E                     l547:
  4498                           
  4499                           ;tmr_drv.c: 285: }
  4500                           ;tmr_drv.c: 287: Tmr_TmrBPrSet(TmrNumb,TmrBConfig->IntFreqHz,TmrBConfig->PreScaler,TmrBC
      +                          onfig->PostScaler);
  4501  00409E  0100               	movlb	0	; () banked
  4502  0040A0  EE20 F004          	lfsr	2,4
  4503  0040A4  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4504  0040A6  26D9               	addwf	fsr2l,f,c
  4505  0040A8  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4506  0040AA  22DA               	addwfc	fsr2h,f,c
  4507  0040AC  CFDE F096          	movff	postinc2,Tmr_TmrBPrSet@IntFreqHz
  4508  0040B0  CFDD F097          	movff	postdec2,Tmr_TmrBPrSet@IntFreqHz+1
  4509  0040B4  C0A0  FFD9         	movff	Tmr_TmrBConfig@TmrBConfig,fsr2l
  4510  0040B8  C0A1  FFDA         	movff	Tmr_TmrBConfig@TmrBConfig+1,fsr2h
  4511  0040BC  50DF               	movf	indf2,w,c
  4512  0040BE  6F98               	movwf	Tmr_TmrBPrSet@Prescaler& (0+255),b
  4513  0040C0  EE20 F001          	lfsr	2,1
  4514  0040C4  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4515  0040C6  26D9               	addwf	fsr2l,f,c
  4516  0040C8  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4517  0040CA  22DA               	addwfc	fsr2h,f,c
  4518  0040CC  50DF               	movf	indf2,w,c
  4519  0040CE  6F99               	movwf	Tmr_TmrBPrSet@Postscaler& (0+255),b
  4520  0040D0  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4521  0040D2  EC40  F019         	call	_Tmr_TmrBPrSet
  4522                           
  4523                           ;tmr_drv.c: 289: if (TmrBConfig->StartTmrRequest == StartTmrReq)
  4524  0040D6  0100               	movlb	0	; () banked
  4525  0040D8  EE20 F006          	lfsr	2,6
  4526  0040DC  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4527  0040DE  26D9               	addwf	fsr2l,f,c
  4528  0040E0  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4529  0040E2  22DA               	addwfc	fsr2h,f,c
  4530  0040E4  04DE               	decf	postinc2,w,c
  4531  0040E6  A4D8               	btfss	status,2,c
  4532  0040E8  0012               	return	
  4533                           
  4534                           ; BSR set to: 0
  4535                           ;tmr_drv.c: 290: {
  4536                           ;tmr_drv.c: 292: Tmr_StartTmr(TmrNumb);
  4537  0040EA  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4538  0040EC  ECBD  F034         	call	_Tmr_StartTmr
  4539                           
  4540                           ;tmr_drv.c: 293: }
  4541  0040F0  0012               	return	
  4542  0040F2                     __end_of_Tmr_TmrBConfig:
  4543                           	opt stack 0
  4544                           tblptru	equ	0xFF8
  4545                           tblptrh	equ	0xFF7
  4546                           tblptrl	equ	0xFF6
  4547                           tablat	equ	0xFF5
  4548                           intcon	equ	0xFF2
  4549                           intcon2	equ	0xFF1
  4550                           intcon3	equ	0xFF0
  4551                           postinc0	equ	0xFEE
  4552                           wreg	equ	0xFE8
  4553                           postdec1	equ	0xFE5
  4554                           fsr1h	equ	0xFE2
  4555                           fsr1l	equ	0xFE1
  4556                           indf2	equ	0xFDF
  4557                           postinc2	equ	0xFDE
  4558                           postdec2	equ	0xFDD
  4559                           fsr2h	equ	0xFDA
  4560                           fsr2l	equ	0xFD9
  4561                           status	equ	0xFD8
  4562                           
  4563 ;; *************** function _Tmr_TmrBPrSet *****************
  4564 ;; Defined at:
  4565 ;;		line 193 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  4566 ;; Parameters:    Size  Location     Type
  4567 ;;  TmrNumb         1    wreg     unsigned char 
  4568 ;;  IntFreqHz       2   54[BANK0 ] unsigned short 
  4569 ;;  Prescaler       1   56[BANK0 ] unsigned char 
  4570 ;;  Postscaler      1   57[BANK0 ] unsigned char 
  4571 ;; Auto vars:     Size  Location     Type
  4572 ;;  TmrNumb         1   59[BANK0 ] unsigned char 
  4573 ;;  Divisor         4   60[BANK0 ] unsigned long 
  4574 ;;  TmrBPrCfgSts    1   58[BANK0 ] enum E7736
  4575 ;; Return value:  Size  Location     Type
  4576 ;;                  1    wreg      enum E7736
  4577 ;; Registers used:
  4578 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4579 ;; Tracked objects:
  4580 ;;		On entry : 0/0
  4581 ;;		On exit  : 0/0
  4582 ;;		Unchanged: 0/0
  4583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4584 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4585 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4587 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4588 ;;Total ram usage:       10 bytes
  4589 ;; Hardware stack levels used:    1
  4590 ;; Hardware stack levels required when called:   12
  4591 ;; This function calls:
  4592 ;;		___lldiv
  4593 ;;		___lmul
  4594 ;; This function is called by:
  4595 ;;		_Tmr_TmrBConfig
  4596 ;; This function uses a non-reentrant model
  4597 ;;
  4598                           
  4599                           	psect	text9
  4600  003280                     __ptext9:
  4601                           	opt stack 0
  4602  003280                     _Tmr_TmrBPrSet:
  4603                           	opt stack 15
  4604                           
  4605                           ;incstack = 0
  4606                           ;Tmr_TmrBPrSet@TmrNumb stored from wreg
  4607  003280  0100               	movlb	0	; () banked
  4608  003282  6F9B               	movwf	Tmr_TmrBPrSet@TmrNumb& (0+255),b
  4609                           
  4610                           ;tmr_drv.c: 195: CfgStsType TmrBPrCfgSts;
  4611                           ;tmr_drv.c: 196: UINT32 Divisor = 0;
  4612  003284  0E00               	movlw	0
  4613  003286  0100               	movlb	0	; () banked
  4614  003288  6F9C               	movwf	Tmr_TmrBPrSet@Divisor& (0+255),b
  4615  00328A  0E00               	movlw	0
  4616  00328C  6F9D               	movwf	(Tmr_TmrBPrSet@Divisor+1)& (0+255),b
  4617  00328E  0E00               	movlw	0
  4618  003290  6F9E               	movwf	(Tmr_TmrBPrSet@Divisor+2)& (0+255),b
  4619  003292  0E00               	movlw	0
  4620  003294  6F9F               	movwf	(Tmr_TmrBPrSet@Divisor+3)& (0+255),b
  4621                           
  4622                           ; BSR set to: 0
  4623                           ;tmr_drv.c: 199: Divisor = (UINT32)Prescaler*(UINT32)Postscaler*(UINT32)IntFreqHz;
  4624  003296  5198               	movf	Tmr_TmrBPrSet@Prescaler& (0+255),w,b
  4625  003298  0399               	mulwf	Tmr_TmrBPrSet@Postscaler& (0+255),b
  4626  00329A  CFF3 F07D          	movff	prodl,___lmul@multiplier
  4627  00329E  CFF4 F07E          	movff	prodh,___lmul@multiplier+1
  4628  0032A2  6B7F               	clrf	(___lmul@multiplier+2)& (0+255),b
  4629  0032A4  6B80               	clrf	(___lmul@multiplier+3)& (0+255),b
  4630  0032A6  C096  F081         	movff	Tmr_TmrBPrSet@IntFreqHz,___lmul@multiplicand
  4631  0032AA  C097  F082         	movff	Tmr_TmrBPrSet@IntFreqHz+1,___lmul@multiplicand+1
  4632  0032AE  6B83               	clrf	(___lmul@multiplicand+2)& (0+255),b
  4633  0032B0  6B84               	clrf	(___lmul@multiplicand+3)& (0+255),b
  4634  0032B2  EC49  F02D         	call	___lmul	;wreg free
  4635  0032B6  C07D  F09C         	movff	?___lmul,Tmr_TmrBPrSet@Divisor
  4636  0032BA  C07E  F09D         	movff	?___lmul+1,Tmr_TmrBPrSet@Divisor+1
  4637  0032BE  C07F  F09E         	movff	?___lmul+2,Tmr_TmrBPrSet@Divisor+2
  4638  0032C2  C080  F09F         	movff	?___lmul+3,Tmr_TmrBPrSet@Divisor+3
  4639                           
  4640                           ;tmr_drv.c: 202: if (((((UINT32)(48000000))/(UINT32)(4))/Divisor) <= 255)
  4641  0032C6  0E00               	movlw	0
  4642  0032C8  0100               	movlb	0	; () banked
  4643  0032CA  6F89               	movwf	___lldiv@dividend& (0+255),b
  4644  0032CC  0E1B               	movlw	27
  4645  0032CE  6F8A               	movwf	(___lldiv@dividend+1)& (0+255),b
  4646  0032D0  0EB7               	movlw	183
  4647  0032D2  6F8B               	movwf	(___lldiv@dividend+2)& (0+255),b
  4648  0032D4  0E00               	movlw	0
  4649  0032D6  6F8C               	movwf	(___lldiv@dividend+3)& (0+255),b
  4650  0032D8  C09C  F08D         	movff	Tmr_TmrBPrSet@Divisor,___lldiv@divisor
  4651  0032DC  C09D  F08E         	movff	Tmr_TmrBPrSet@Divisor+1,___lldiv@divisor+1
  4652  0032E0  C09E  F08F         	movff	Tmr_TmrBPrSet@Divisor+2,___lldiv@divisor+2
  4653  0032E4  C09F  F090         	movff	Tmr_TmrBPrSet@Divisor+3,___lldiv@divisor+3
  4654  0032E8  ECC1  F029         	call	___lldiv	;wreg free
  4655  0032EC  0100               	movlb	0	; () banked
  4656  0032EE  518C               	movf	(?___lldiv+3)& (0+255),w,b
  4657  0032F0  118B               	iorwf	(?___lldiv+2)& (0+255),w,b
  4658  0032F2  E13A               	bnz	l15457
  4659  0032F4  058A               	decf	(?___lldiv+1)& (0+255),w,b
  4660  0032F6  A0D8               	btfss	status,0,c
  4661  0032F8  D02D               	goto	l529
  4662  0032FA  D036               	goto	l528
  4663  0032FC                     
  4664                           ; BSR set to: 0
  4665                           ;tmr_drv.c: 209: PR2 = (((UINT32)(48000000))/(UINT32)(4))/Divisor;
  4666                           
  4667                           ; BSR set to: 0
  4668  0032FC  0E00               	movlw	0
  4669  0032FE  6F89               	movwf	___lldiv@dividend& (0+255),b
  4670  003300  0E1B               	movlw	27
  4671  003302  6F8A               	movwf	(___lldiv@dividend+1)& (0+255),b
  4672  003304  0EB7               	movlw	183
  4673  003306  6F8B               	movwf	(___lldiv@dividend+2)& (0+255),b
  4674  003308  0E00               	movlw	0
  4675  00330A  6F8C               	movwf	(___lldiv@dividend+3)& (0+255),b
  4676  00330C  C09C  F08D         	movff	Tmr_TmrBPrSet@Divisor,___lldiv@divisor
  4677  003310  C09D  F08E         	movff	Tmr_TmrBPrSet@Divisor+1,___lldiv@divisor+1
  4678  003314  C09E  F08F         	movff	Tmr_TmrBPrSet@Divisor+2,___lldiv@divisor+2
  4679  003318  C09F  F090         	movff	Tmr_TmrBPrSet@Divisor+3,___lldiv@divisor+3
  4680  00331C  ECC1  F029         	call	___lldiv	;wreg free
  4681  003320  0100               	movlb	0	; () banked
  4682  003322  5189               	movf	?___lldiv& (0+255),w,b
  4683  003324  6ECB               	movwf	4043,c	;volatile
  4684                           
  4685                           ;tmr_drv.c: 210: break;
  4686  003326  D01D               	goto	l531
  4687  003328                     
  4688                           ; BSR set to: 0
  4689                           ;tmr_drv.c: 214: PR4 = (((UINT32)(48000000))/(UINT32)(4))/Divisor;
  4690                           
  4691                           ; BSR set to: 0
  4692  003328  0E00               	movlw	0
  4693  00332A  6F89               	movwf	___lldiv@dividend& (0+255),b
  4694  00332C  0E1B               	movlw	27
  4695  00332E  6F8A               	movwf	(___lldiv@dividend+1)& (0+255),b
  4696  003330  0EB7               	movlw	183
  4697  003332  6F8B               	movwf	(___lldiv@dividend+2)& (0+255),b
  4698  003334  0E00               	movlw	0
  4699  003336  6F8C               	movwf	(___lldiv@dividend+3)& (0+255),b
  4700  003338  C09C  F08D         	movff	Tmr_TmrBPrSet@Divisor,___lldiv@divisor
  4701  00333C  C09D  F08E         	movff	Tmr_TmrBPrSet@Divisor+1,___lldiv@divisor+1
  4702  003340  C09E  F08F         	movff	Tmr_TmrBPrSet@Divisor+2,___lldiv@divisor+2
  4703  003344  C09F  F090         	movff	Tmr_TmrBPrSet@Divisor+3,___lldiv@divisor+3
  4704  003348  ECC1  F029         	call	___lldiv	;wreg free
  4705  00334C  0100               	movlb	0	; () banked
  4706  00334E  5189               	movf	?___lldiv& (0+255),w,b
  4707  003350  6E77               	movwf	3959,c	;volatile
  4708                           
  4709                           ; BSR set to: 0
  4710                           ;tmr_drv.c: 219: }
  4711                           
  4712                           ; BSR set to: 0
  4713                           ;tmr_drv.c: 218: break;
  4714                           
  4715                           ;tmr_drv.c: 217: default:
  4716                           
  4717                           ;tmr_drv.c: 215: break;
  4718  003352  D007               	goto	l531
  4719  003354                     l529:
  4720                           
  4721                           ; BSR set to: 0
  4722                           
  4723                           ; BSR set to: 0
  4724  003354  519B               	movf	Tmr_TmrBPrSet@TmrNumb& (0+255),w,b
  4725                           
  4726                           ; Switch size 1, requested type "space"
  4727                           ; Number of cases is 2, Range of values is 2 to 4
  4728                           ; switch strategies available:
  4729                           ; Name         Instructions Cycles
  4730                           ; simple_byte            7     4 (average)
  4731                           ;	Chosen strategy is simple_byte
  4732  003356  0A02               	xorlw	2	; case 2
  4733  003358  B4D8               	btfsc	status,2,c
  4734  00335A  D7D0               	goto	l530
  4735  00335C  0A06               	xorlw	6	; case 4
  4736  00335E  B4D8               	btfsc	status,2,c
  4737  003360  D7E3               	goto	l532
  4738  003362                     l531:
  4739                           
  4740                           ; BSR set to: 0
  4741                           ;tmr_drv.c: 222: TmrBPrCfgSts = CfgOk;
  4742                           
  4743                           ; BSR set to: 0
  4744  003362  0E00               	movlw	0
  4745  003364  6F9A               	movwf	Tmr_TmrBPrSet@TmrBPrCfgSts& (0+255),b
  4746                           
  4747                           ;tmr_drv.c: 223: }
  4748  003366  0012               	return	
  4749  003368                     l528:
  4750  003368                     l15457:
  4751                           
  4752                           ; BSR set to: 0
  4753                           ;tmr_drv.c: 224: else
  4754                           ;tmr_drv.c: 225: {
  4755                           ;tmr_drv.c: 227: TmrBPrCfgSts = CfgError;
  4756  003368  0E01               	movlw	1
  4757  00336A  6F9A               	movwf	Tmr_TmrBPrSet@TmrBPrCfgSts& (0+255),b
  4758                           
  4759                           ; BSR set to: 0
  4760  00336C  0012               	return	
  4761  00336E                     __end_of_Tmr_TmrBPrSet:
  4762                           	opt stack 0
  4763                           tblptru	equ	0xFF8
  4764                           tblptrh	equ	0xFF7
  4765                           tblptrl	equ	0xFF6
  4766                           tablat	equ	0xFF5
  4767                           prodh	equ	0xFF4
  4768                           prodl	equ	0xFF3
  4769                           intcon	equ	0xFF2
  4770                           intcon2	equ	0xFF1
  4771                           intcon3	equ	0xFF0
  4772                           postinc0	equ	0xFEE
  4773                           wreg	equ	0xFE8
  4774                           postdec1	equ	0xFE5
  4775                           fsr1h	equ	0xFE2
  4776                           fsr1l	equ	0xFE1
  4777                           indf2	equ	0xFDF
  4778                           postinc2	equ	0xFDE
  4779                           postdec2	equ	0xFDD
  4780                           fsr2h	equ	0xFDA
  4781                           fsr2l	equ	0xFD9
  4782                           status	equ	0xFD8
  4783                           
  4784 ;; *************** function _Tmr_TmrBIrqSet *****************
  4785 ;; Defined at:
  4786 ;;		line 153 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  4787 ;; Parameters:    Size  Location     Type
  4788 ;;  TmrNumb         1    wreg     unsigned char 
  4789 ;;  Priority        1   29[BANK0 ] enum E7716
  4790 ;;  TmrIrqSts       1   30[BANK0 ] unsigned char 
  4791 ;; Auto vars:     Size  Location     Type
  4792 ;;  TmrNumb         1   31[BANK0 ] unsigned char 
  4793 ;; Return value:  Size  Location     Type
  4794 ;;                  1    wreg      void 
  4795 ;; Registers used:
  4796 ;;		wreg, status,2, status,0
  4797 ;; Tracked objects:
  4798 ;;		On entry : 0/0
  4799 ;;		On exit  : 0/0
  4800 ;;		Unchanged: 0/0
  4801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4802 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4803 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4805 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4806 ;;Total ram usage:        3 bytes
  4807 ;; Hardware stack levels used:    1
  4808 ;; Hardware stack levels required when called:   11
  4809 ;; This function calls:
  4810 ;;		Nothing
  4811 ;; This function is called by:
  4812 ;;		_Tmr_TmrBConfig
  4813 ;; This function uses a non-reentrant model
  4814 ;;
  4815                           
  4816                           	psect	text10
  4817  006012                     __ptext10:
  4818                           	opt stack 0
  4819  006012                     _Tmr_TmrBIrqSet:
  4820                           	opt stack 16
  4821                           
  4822                           ; BSR set to: 0
  4823                           ;incstack = 0
  4824                           ;Tmr_TmrBIrqSet@TmrNumb stored from wreg
  4825  006012  0100               	movlb	0	; () banked
  4826  006014  6F7F               	movwf	Tmr_TmrBIrqSet@TmrNumb& (0+255),b
  4827                           
  4828                           ;tmr_drv.c: 156: switch (TmrNumb)
  4829  006016  D01A               	goto	l520
  4830  006018                     l521:
  4831                           
  4832                           ; BSR set to: 0
  4833                           ;tmr_drv.c: 160: PIR1bits.TMR2IF = 0u;
  4834  006018  929E               	bcf	3998,1,c	;volatile
  4835                           
  4836                           ;tmr_drv.c: 162: IPR1bits.TMR2IP = Priority;
  4837  00601A  B17D               	btfsc	Tmr_TmrBIrqSet@Priority& (0+255),0,b
  4838  00601C  D002               	bra	u9195
  4839  00601E  929F               	bcf	3999,1,c	;volatile
  4840  006020  D001               	bra	u9196
  4841  006022                     u9195:
  4842  006022  829F               	bsf	3999,1,c	;volatile
  4843  006024                     u9196:
  4844                           
  4845                           ;tmr_drv.c: 164: PIE1bits.TMR2IE = TmrIrqSts;
  4846  006024  0100               	movlb	0	; () banked
  4847  006026  B17E               	btfsc	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),0,b
  4848  006028  D002               	bra	u9205
  4849  00602A  929D               	bcf	3997,1,c	;volatile
  4850  00602C  D001               	bra	u9206
  4851  00602E                     u9205:
  4852  00602E  829D               	bsf	3997,1,c	;volatile
  4853  006030                     u9206:
  4854                           
  4855                           ;tmr_drv.c: 165: break;
  4856  006030  0012               	return	
  4857  006032                     l523:
  4858                           
  4859                           ; BSR set to: 0
  4860                           ;tmr_drv.c: 169: PIR3bits.TMR4IF = 0u;
  4861  006032  96A4               	bcf	4004,3,c	;volatile
  4862                           
  4863                           ;tmr_drv.c: 171: IPR3bits.TMR4IP = Priority;
  4864  006034  B17D               	btfsc	Tmr_TmrBIrqSet@Priority& (0+255),0,b
  4865  006036  D002               	bra	u9215
  4866  006038  96A5               	bcf	4005,3,c	;volatile
  4867  00603A  D001               	bra	u9216
  4868  00603C                     u9215:
  4869  00603C  86A5               	bsf	4005,3,c	;volatile
  4870  00603E                     u9216:
  4871                           
  4872                           ;tmr_drv.c: 173: PIE3bits.TMR4IE = TmrIrqSts;
  4873  00603E  0100               	movlb	0	; () banked
  4874  006040  B17E               	btfsc	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),0,b
  4875  006042  D002               	bra	u9225
  4876  006044  96A3               	bcf	4003,3,c	;volatile
  4877  006046  D001               	bra	u9226
  4878  006048                     u9225:
  4879  006048  86A3               	bsf	4003,3,c	;volatile
  4880  00604A                     u9226:
  4881                           
  4882                           ;tmr_drv.c: 178: }
  4883                           
  4884                           ;tmr_drv.c: 177: break;
  4885                           
  4886                           ;tmr_drv.c: 176: default:
  4887                           
  4888                           ;tmr_drv.c: 174: break;
  4889  00604A  0012               	return	
  4890  00604C                     l520:
  4891  00604C  0100               	movlb	0	; () banked
  4892  00604E  517F               	movf	Tmr_TmrBIrqSet@TmrNumb& (0+255),w,b
  4893                           
  4894                           ; Switch size 1, requested type "space"
  4895                           ; Number of cases is 2, Range of values is 2 to 4
  4896                           ; switch strategies available:
  4897                           ; Name         Instructions Cycles
  4898                           ; simple_byte            7     4 (average)
  4899                           ;	Chosen strategy is simple_byte
  4900  006050  0A02               	xorlw	2	; case 2
  4901  006052  B4D8               	btfsc	status,2,c
  4902  006054  D7E1               	goto	l521
  4903  006056  0A06               	xorlw	6	; case 4
  4904  006058  A4D8               	btfss	status,2,c
  4905  00605A  0012               	return	
  4906  00605C  D7EA               	goto	l523
  4907  00605E                     __end_of_Tmr_TmrBIrqSet:
  4908                           	opt stack 0
  4909                           tblptru	equ	0xFF8
  4910                           tblptrh	equ	0xFF7
  4911                           tblptrl	equ	0xFF6
  4912                           tablat	equ	0xFF5
  4913                           prodh	equ	0xFF4
  4914                           prodl	equ	0xFF3
  4915                           intcon	equ	0xFF2
  4916                           intcon2	equ	0xFF1
  4917                           intcon3	equ	0xFF0
  4918                           postinc0	equ	0xFEE
  4919                           wreg	equ	0xFE8
  4920                           postdec1	equ	0xFE5
  4921                           fsr1h	equ	0xFE2
  4922                           fsr1l	equ	0xFE1
  4923                           indf2	equ	0xFDF
  4924                           postinc2	equ	0xFDE
  4925                           postdec2	equ	0xFDD
  4926                           fsr2h	equ	0xFDA
  4927                           fsr2l	equ	0xFD9
  4928                           status	equ	0xFD8
  4929                           
  4930 ;; *************** function _Tmr_StartTmr *****************
  4931 ;; Defined at:
  4932 ;;		line 242 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  4933 ;; Parameters:    Size  Location     Type
  4934 ;;  TmrNumb         1    wreg     unsigned char 
  4935 ;; Auto vars:     Size  Location     Type
  4936 ;;  TmrNumb         1   29[BANK0 ] unsigned char 
  4937 ;; Return value:  Size  Location     Type
  4938 ;;                  1    wreg      void 
  4939 ;; Registers used:
  4940 ;;		wreg, status,2, status,0
  4941 ;; Tracked objects:
  4942 ;;		On entry : 0/0
  4943 ;;		On exit  : 0/0
  4944 ;;		Unchanged: 0/0
  4945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4946 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4947 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4948 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4949 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4950 ;;Total ram usage:        1 bytes
  4951 ;; Hardware stack levels used:    1
  4952 ;; Hardware stack levels required when called:   11
  4953 ;; This function calls:
  4954 ;;		Nothing
  4955 ;; This function is called by:
  4956 ;;		_Tmr_TmrBConfig
  4957 ;; This function uses a non-reentrant model
  4958 ;;
  4959                           
  4960                           	psect	text11
  4961  00697A                     __ptext11:
  4962                           	opt stack 0
  4963  00697A                     _Tmr_StartTmr:
  4964                           	opt stack 16
  4965                           
  4966                           ;incstack = 0
  4967                           ;Tmr_StartTmr@TmrNumb stored from wreg
  4968  00697A  0100               	movlb	0	; () banked
  4969  00697C  6F7D               	movwf	Tmr_StartTmr@TmrNumb& (0+255),b
  4970                           
  4971                           ;tmr_drv.c: 245: switch (TmrNumb)
  4972  00697E  D004               	goto	l538
  4973  006980                     l539:
  4974                           
  4975                           ; BSR set to: 0
  4976                           ;tmr_drv.c: 249: T2CONbits.TMR2ON = 1u;
  4977  006980  84CA               	bsf	4042,2,c	;volatile
  4978                           
  4979                           ;tmr_drv.c: 250: break;
  4980  006982  0012               	return	
  4981  006984                     l541:
  4982                           
  4983                           ; BSR set to: 0
  4984                           ;tmr_drv.c: 254: T4CONbits.TMR4ON = 1u;
  4985  006984  8476               	bsf	3958,2,c	;volatile
  4986                           
  4987                           ; BSR set to: 0
  4988                           ;tmr_drv.c: 259: }
  4989                           
  4990                           ; BSR set to: 0
  4991                           ;tmr_drv.c: 258: break;
  4992                           
  4993                           ;tmr_drv.c: 257: default:
  4994                           
  4995                           ;tmr_drv.c: 255: break;
  4996  006986  0012               	return	
  4997  006988                     l538:
  4998                           
  4999                           ; BSR set to: 0
  5000  006988  0100               	movlb	0	; () banked
  5001  00698A  517D               	movf	Tmr_StartTmr@TmrNumb& (0+255),w,b
  5002                           
  5003                           ; Switch size 1, requested type "space"
  5004                           ; Number of cases is 2, Range of values is 2 to 4
  5005                           ; switch strategies available:
  5006                           ; Name         Instructions Cycles
  5007                           ; simple_byte            7     4 (average)
  5008                           ;	Chosen strategy is simple_byte
  5009  00698C  0A02               	xorlw	2	; case 2
  5010  00698E  B4D8               	btfsc	status,2,c
  5011  006990  D7F7               	goto	l539
  5012  006992  0A06               	xorlw	6	; case 4
  5013  006994  A4D8               	btfss	status,2,c
  5014  006996  0012               	return	
  5015  006998  D7F5               	goto	l541
  5016  00699A                     __end_of_Tmr_StartTmr:
  5017                           	opt stack 0
  5018                           tblptru	equ	0xFF8
  5019                           tblptrh	equ	0xFF7
  5020                           tblptrl	equ	0xFF6
  5021                           tablat	equ	0xFF5
  5022                           prodh	equ	0xFF4
  5023                           prodl	equ	0xFF3
  5024                           intcon	equ	0xFF2
  5025                           intcon2	equ	0xFF1
  5026                           intcon3	equ	0xFF0
  5027                           postinc0	equ	0xFEE
  5028                           wreg	equ	0xFE8
  5029                           postdec1	equ	0xFE5
  5030                           fsr1h	equ	0xFE2
  5031                           fsr1l	equ	0xFE1
  5032                           indf2	equ	0xFDF
  5033                           postinc2	equ	0xFDE
  5034                           postdec2	equ	0xFDD
  5035                           fsr2h	equ	0xFDA
  5036                           fsr2l	equ	0xFD9
  5037                           status	equ	0xFD8
  5038                           
  5039 ;; *************** function _TmrBInit *****************
  5040 ;; Defined at:
  5041 ;;		line 72 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  5042 ;; Parameters:    Size  Location     Type
  5043 ;;  TmrNumb         1    wreg     unsigned char 
  5044 ;;  Prescaler       1   29[BANK0 ] unsigned char 
  5045 ;;  Postscaler      1   30[BANK0 ] unsigned char 
  5046 ;; Auto vars:     Size  Location     Type
  5047 ;;  TmrNumb         1   32[BANK0 ] unsigned char 
  5048 ;; Return value:  Size  Location     Type
  5049 ;;                  1    wreg      void 
  5050 ;; Registers used:
  5051 ;;		wreg, status,2, status,0
  5052 ;; Tracked objects:
  5053 ;;		On entry : 0/0
  5054 ;;		On exit  : 0/0
  5055 ;;		Unchanged: 0/0
  5056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5057 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5058 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5059 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5060 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5061 ;;Total ram usage:        4 bytes
  5062 ;; Hardware stack levels used:    1
  5063 ;; Hardware stack levels required when called:   11
  5064 ;; This function calls:
  5065 ;;		Nothing
  5066 ;; This function is called by:
  5067 ;;		_Tmr_TmrBConfig
  5068 ;; This function uses a non-reentrant model
  5069 ;;
  5070                           
  5071                           	psect	text12
  5072  004D44                     __ptext12:
  5073                           	opt stack 0
  5074  004D44                     _TmrBInit:
  5075                           	opt stack 16
  5076                           
  5077                           ; BSR set to: 0
  5078                           ;incstack = 0
  5079                           ;TmrBInit@TmrNumb stored from wreg
  5080  004D44  0100               	movlb	0	; () banked
  5081  004D46  6F80               	movwf	TmrBInit@TmrNumb& (0+255),b
  5082                           
  5083                           ;tmr_drv.c: 75: switch (TmrNumb)
  5084  004D48  D03F               	goto	l500
  5085  004D4A                     l503:
  5086                           
  5087                           ; BSR set to: 0
  5088                           ;tmr_drv.c: 83: T2CONbits.T2CKPS0 = 0u;
  5089  004D4A  90CA               	bcf	4042,0,c	;volatile
  5090  004D4C  D001               	goto	L1
  5091  004D4E                     l505:
  5092                           
  5093                           ; BSR set to: 0
  5094                           ;tmr_drv.c: 89: T2CONbits.T2CKPS0 = 1u;
  5095  004D4E  80CA               	bsf	4042,0,c	;volatile
  5096  004D50                     L1:
  5097                           
  5098                           ;tmr_drv.c: 90: T2CONbits.T2CKPS1 = 0u;
  5099  004D50  92CA               	bcf	4042,1,c	;volatile
  5100                           
  5101                           ;tmr_drv.c: 91: break;
  5102  004D52  D00E               	goto	l504
  5103  004D54                     l506:
  5104                           
  5105                           ; BSR set to: 0
  5106                           ;tmr_drv.c: 94: T2CONbits.T2CKPS0 = 1u;
  5107  004D54  80CA               	bsf	4042,0,c	;volatile
  5108                           
  5109                           ;tmr_drv.c: 95: T2CONbits.T2CKPS1 = 1u;
  5110  004D56  82CA               	bsf	4042,1,c	;volatile
  5111                           
  5112                           ; BSR set to: 0
  5113                           ;tmr_drv.c: 100: }
  5114                           
  5115                           ; BSR set to: 0
  5116                           ;tmr_drv.c: 99: break;
  5117                           
  5118                           ;tmr_drv.c: 98: default:
  5119                           
  5120                           ;tmr_drv.c: 96: break;
  5121  004D58  D00B               	goto	l504
  5122  004D5A                     
  5123                           ; BSR set to: 0
  5124  004D5A  0100               	movlb	0	; () banked
  5125  004D5C  517D               	movf	TmrBInit@Prescaler& (0+255),w,b
  5126                           
  5127                           ; Switch size 1, requested type "space"
  5128                           ; Number of cases is 3, Range of values is 1 to 16
  5129                           ; switch strategies available:
  5130                           ; Name         Instructions Cycles
  5131                           ; simple_byte           10     6 (average)
  5132                           ;	Chosen strategy is simple_byte
  5133  004D5E  0A01               	xorlw	1	; case 1
  5134  004D60  B4D8               	btfsc	status,2,c
  5135  004D62  D7F3               	goto	l503
  5136  004D64  0A05               	xorlw	5	; case 4
  5137  004D66  B4D8               	btfsc	status,2,c
  5138  004D68  D7F2               	goto	l505
  5139  004D6A  0A14               	xorlw	20	; case 16
  5140  004D6C  B4D8               	btfsc	status,2,c
  5141  004D6E  D7F2               	goto	l506
  5142  004D70                     l504:
  5143                           
  5144                           ; BSR set to: 0
  5145                           ;tmr_drv.c: 103: T2CONbits.T2OUTPS = (Postscaler - 1);
  5146                           
  5147                           ; BSR set to: 0
  5148  004D70  C07E  F07F         	movff	TmrBInit@Postscaler,??_TmrBInit
  5149  004D74  0EFF               	movlw	255
  5150  004D76  277F               	addwf	??_TmrBInit& (0+255),f,b
  5151  004D78  477F               	rlncf	??_TmrBInit& (0+255),f,b
  5152  004D7A  477F               	rlncf	??_TmrBInit& (0+255),f,b
  5153  004D7C  477F               	rlncf	??_TmrBInit& (0+255),f,b
  5154  004D7E  50CA               	movf	4042,w,c	;volatile
  5155  004D80  197F               	xorwf	??_TmrBInit& (0+255),w,b
  5156  004D82  0B87               	andlw	-121
  5157  004D84  197F               	xorwf	??_TmrBInit& (0+255),w,b
  5158  004D86  6ECA               	movwf	4042,c	;volatile
  5159                           
  5160                           ;tmr_drv.c: 104: break;
  5161  004D88  0012               	return	
  5162  004D8A                     l511:
  5163                           
  5164                           ; BSR set to: 0
  5165                           ;tmr_drv.c: 112: T4CONbits.T4CKPS0 = 0u;
  5166  004D8A  9076               	bcf	3958,0,c	;volatile
  5167  004D8C  D001               	goto	L2
  5168  004D8E                     l513:
  5169                           
  5170                           ; BSR set to: 0
  5171                           ;tmr_drv.c: 118: T4CONbits.T4CKPS0 = 1u;
  5172  004D8E  8076               	bsf	3958,0,c	;volatile
  5173  004D90                     L2:
  5174                           
  5175                           ;tmr_drv.c: 119: T4CONbits.T4CKPS1 = 0u;
  5176  004D90  9276               	bcf	3958,1,c	;volatile
  5177                           
  5178                           ;tmr_drv.c: 120: break;
  5179  004D92  D00D               	goto	l512
  5180  004D94                     l514:
  5181                           
  5182                           ; BSR set to: 0
  5183                           ;tmr_drv.c: 123: T4CONbits.T4CKPS0 = 1u;
  5184  004D94  8076               	bsf	3958,0,c	;volatile
  5185                           
  5186                           ;tmr_drv.c: 124: T4CONbits.T4CKPS1 = 1u;
  5187  004D96  8276               	bsf	3958,1,c	;volatile
  5188                           
  5189                           ; BSR set to: 0
  5190                           ;tmr_drv.c: 129: }
  5191                           
  5192                           ; BSR set to: 0
  5193                           ;tmr_drv.c: 128: break;
  5194                           
  5195                           ;tmr_drv.c: 127: default:
  5196                           
  5197                           ;tmr_drv.c: 125: break;
  5198  004D98  D00A               	goto	l512
  5199  004D9A                     
  5200                           ; BSR set to: 0
  5201                           
  5202                           ; BSR set to: 0
  5203  004D9A  517D               	movf	TmrBInit@Prescaler& (0+255),w,b
  5204                           
  5205                           ; Switch size 1, requested type "space"
  5206                           ; Number of cases is 3, Range of values is 1 to 16
  5207                           ; switch strategies available:
  5208                           ; Name         Instructions Cycles
  5209                           ; simple_byte           10     6 (average)
  5210                           ;	Chosen strategy is simple_byte
  5211  004D9C  0A01               	xorlw	1	; case 1
  5212  004D9E  B4D8               	btfsc	status,2,c
  5213  004DA0  D7F4               	goto	l511
  5214  004DA2  0A05               	xorlw	5	; case 4
  5215  004DA4  B4D8               	btfsc	status,2,c
  5216  004DA6  D7F3               	goto	l513
  5217  004DA8  0A14               	xorlw	20	; case 16
  5218  004DAA  B4D8               	btfsc	status,2,c
  5219  004DAC  D7F3               	goto	l514
  5220  004DAE                     l512:
  5221                           
  5222                           ; BSR set to: 0
  5223                           ;tmr_drv.c: 132: T4CONbits.T4OUTPS = (Postscaler - 1);
  5224                           
  5225                           ; BSR set to: 0
  5226  004DAE  C07E  F07F         	movff	TmrBInit@Postscaler,??_TmrBInit
  5227  004DB2  0EFF               	movlw	255
  5228  004DB4  277F               	addwf	??_TmrBInit& (0+255),f,b
  5229  004DB6  477F               	rlncf	??_TmrBInit& (0+255),f,b
  5230  004DB8  477F               	rlncf	??_TmrBInit& (0+255),f,b
  5231  004DBA  477F               	rlncf	??_TmrBInit& (0+255),f,b
  5232  004DBC  5076               	movf	3958,w,c	;volatile
  5233  004DBE  197F               	xorwf	??_TmrBInit& (0+255),w,b
  5234  004DC0  0B87               	andlw	-121
  5235  004DC2  197F               	xorwf	??_TmrBInit& (0+255),w,b
  5236  004DC4  6E76               	movwf	3958,c	;volatile
  5237                           
  5238                           ; BSR set to: 0
  5239                           ;tmr_drv.c: 137: }
  5240                           
  5241                           ; BSR set to: 0
  5242                           ;tmr_drv.c: 136: break;
  5243                           
  5244                           ;tmr_drv.c: 135: default:
  5245                           
  5246                           ;tmr_drv.c: 133: break;
  5247  004DC6  0012               	return	
  5248  004DC8                     l500:
  5249                           
  5250                           ; BSR set to: 0
  5251  004DC8  0100               	movlb	0	; () banked
  5252  004DCA  5180               	movf	TmrBInit@TmrNumb& (0+255),w,b
  5253                           
  5254                           ; Switch size 1, requested type "space"
  5255                           ; Number of cases is 2, Range of values is 2 to 4
  5256                           ; switch strategies available:
  5257                           ; Name         Instructions Cycles
  5258                           ; simple_byte            7     4 (average)
  5259                           ;	Chosen strategy is simple_byte
  5260  004DCC  0A02               	xorlw	2	; case 2
  5261  004DCE  B4D8               	btfsc	status,2,c
  5262  004DD0  D7C4               	goto	l502
  5263  004DD2  0A06               	xorlw	6	; case 4
  5264  004DD4  A4D8               	btfss	status,2,c
  5265  004DD6  0012               	return	
  5266  004DD8  D7E0               	goto	l510
  5267  004DDA                     __end_of_TmrBInit:
  5268                           	opt stack 0
  5269                           tblptru	equ	0xFF8
  5270                           tblptrh	equ	0xFF7
  5271                           tblptrl	equ	0xFF6
  5272                           tablat	equ	0xFF5
  5273                           prodh	equ	0xFF4
  5274                           prodl	equ	0xFF3
  5275                           intcon	equ	0xFF2
  5276                           intcon2	equ	0xFF1
  5277                           intcon3	equ	0xFF0
  5278                           postinc0	equ	0xFEE
  5279                           wreg	equ	0xFE8
  5280                           postdec1	equ	0xFE5
  5281                           fsr1h	equ	0xFE2
  5282                           fsr1l	equ	0xFE1
  5283                           indf2	equ	0xFDF
  5284                           postinc2	equ	0xFDE
  5285                           postdec2	equ	0xFDD
  5286                           fsr2h	equ	0xFDA
  5287                           fsr2l	equ	0xFD9
  5288                           status	equ	0xFD8
  5289                           
  5290 ;; *************** function _Sch_MainScheduler *****************
  5291 ;; Defined at:
  5292 ;;		line 175 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
  5293 ;; Parameters:    Size  Location     Type
  5294 ;;		None
  5295 ;; Auto vars:     Size  Location     Type
  5296 ;;		None
  5297 ;; Return value:  Size  Location     Type
  5298 ;;                  1    wreg      void 
  5299 ;; Registers used:
  5300 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  5301 ;; Tracked objects:
  5302 ;;		On entry : 0/0
  5303 ;;		On exit  : 0/0
  5304 ;;		Unchanged: 0/0
  5305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5307 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5309 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5310 ;;Total ram usage:        0 bytes
  5311 ;; Hardware stack levels used:    1
  5312 ;; Hardware stack levels required when called:   22
  5313 ;; This function calls:
  5314 ;;		_InitializeTasks
  5315 ;;		_ScheduleTasks
  5316 ;; This function is called by:
  5317 ;;		_main
  5318 ;; This function uses a non-reentrant model
  5319 ;;
  5320                           
  5321                           	psect	text13
  5322  0069F8                     __ptext13:
  5323                           	opt stack 0
  5324  0069F8                     _Sch_MainScheduler:
  5325                           	opt stack 8
  5326                           
  5327                           ;os_sched.c: 178: InitializeTasks();
  5328                           
  5329                           ; BSR set to: 0
  5330                           ;incstack = 0
  5331  0069F8  EC44  F02A         	call	_InitializeTasks	;wreg free
  5332                           
  5333                           ;os_sched.c: 180: SystemState = RunningState;
  5334  0069FC  0E01               	movlw	1
  5335  0069FE  0100               	movlb	0	; () banked
  5336  006A00  6FD4               	movwf	_SystemState& (0+255),b
  5337  006A02                     
  5338                           ;os_sched.c: 188: {
  5339                           ;os_sched.c: 190: if (MainSystemTimebaseFlag == CallTaskPhase)
  5340                           
  5341                           ; BSR set to: 0
  5342  006A02  0102               	movlb	2	; () banked
  5343  006A04  51F2               	movf	_MainSystemTimebaseFlag& (0+255),w,b
  5344  006A06  A4D8               	btfss	status,2,c
  5345  006A08  D7FC               	goto	l790
  5346                           
  5347                           ; BSR set to: 2
  5348                           ;os_sched.c: 191: {
  5349                           ;os_sched.c: 196: ScheduleTasks();
  5350  006A0A  EC84  F016         	call	_ScheduleTasks	;wreg free
  5351                           
  5352                           ;os_sched.c: 201: MainSystemTimebaseFlag = WaitTriggerPhase;
  5353  006A0E  0E01               	movlw	1
  5354  006A10  0102               	movlb	2	; () banked
  5355  006A12  6FF2               	movwf	_MainSystemTimebaseFlag& (0+255),b
  5356                           
  5357                           ; BSR set to: 2
  5358                           
  5359                           ; BSR set to: 2
  5360  006A14  D7F6               	goto	l790
  5361  006A16                     __end_of_Sch_MainScheduler:
  5362                           	opt stack 0
  5363                           tblptru	equ	0xFF8
  5364                           tblptrh	equ	0xFF7
  5365                           tblptrl	equ	0xFF6
  5366                           tablat	equ	0xFF5
  5367                           prodh	equ	0xFF4
  5368                           prodl	equ	0xFF3
  5369                           intcon	equ	0xFF2
  5370                           intcon2	equ	0xFF1
  5371                           intcon3	equ	0xFF0
  5372                           postinc0	equ	0xFEE
  5373                           wreg	equ	0xFE8
  5374                           postdec1	equ	0xFE5
  5375                           fsr1h	equ	0xFE2
  5376                           fsr1l	equ	0xFE1
  5377                           indf2	equ	0xFDF
  5378                           postinc2	equ	0xFDE
  5379                           postdec2	equ	0xFDD
  5380                           fsr2h	equ	0xFDA
  5381                           fsr2l	equ	0xFD9
  5382                           status	equ	0xFD8
  5383                           
  5384 ;; *************** function _ScheduleTasks *****************
  5385 ;; Defined at:
  5386 ;;		line 99 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
  5387 ;; Parameters:    Size  Location     Type
  5388 ;;		None
  5389 ;; Auto vars:     Size  Location     Type
  5390 ;;  ActiveTaskIn    1  200[BANK2 ] unsigned char 
  5391 ;; Return value:  Size  Location     Type
  5392 ;;                  1    wreg      void 
  5393 ;; Registers used:
  5394 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  5395 ;; Tracked objects:
  5396 ;;		On entry : 0/0
  5397 ;;		On exit  : 0/0
  5398 ;;		Unchanged: 0/0
  5399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5400 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5401 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5402 ;;      Temps:          0       0       0       0       4       0       0       0       0       0       0       0       
      +0       0       0       0
  5403 ;;      Totals:         0       0       0       1       4       0       0       0       0       0       0       0       
      +0       0       0       0
  5404 ;;Total ram usage:        5 bytes
  5405 ;; Hardware stack levels used:    1
  5406 ;; Hardware stack levels required when called:   21
  5407 ;; This function calls:
  5408 ;;		_I2cSlv_MainTask
  5409 ;;		_Led_MainTask
  5410 ;;		_MdmHttp_MainTask
  5411 ;;		_Mdm_DrvMainFn
  5412 ;;		_Mdm_MainTask
  5413 ;;		_MyApp_Task
  5414 ;;		_Rtcm_MainTask
  5415 ;;		_Term_MainTask
  5416 ;;		_UsbDevice_MainTask
  5417 ;;		_Wdg_MainTask
  5418 ;; This function is called by:
  5419 ;;		_Sch_MainScheduler
  5420 ;; This function uses a non-reentrant model
  5421 ;;
  5422                           
  5423                           	psect	text14
  5424  002D08                     __ptext14:
  5425                           	opt stack 0
  5426  002D08                     _ScheduleTasks:
  5427                           	opt stack 8
  5428                           
  5429                           ;os_sched.c: 102: UINT8 ActiveTaskIndex = 0u;
  5430                           
  5431                           ; BSR set to: 2
  5432                           ;incstack = 0
  5433  002D08  0E00               	movlw	0
  5434  002D0A  0102               	movlb	2	; () banked
  5435  002D0C  6FC8               	movwf	ScheduleTasks@ActiveTaskIndex& (0+255),b
  5436                           
  5437                           ;os_sched.c: 105: for (ActiveTaskIndex = 0u; ActiveTaskIndex < TaskNumber; ActiveTaskInd
      +                          ex++)
  5438  002D0E  0E00               	movlw	0
  5439  002D10  6FC8               	movwf	ScheduleTasks@ActiveTaskIndex& (0+255),b
  5440  002D12                     l16751:
  5441                           
  5442                           ; BSR set to: 2
  5443  002D12  0E30               	movlw	low _TaskNumber
  5444  002D14  6EF6               	movwf	tblptrl,c
  5445  002D16                     	if	1	;There is more than 1 active tblptr byte
  5446  002D16  0EFC               	movlw	high _TaskNumber
  5447  002D18  6EF7               	movwf	tblptrh,c
  5448  002D1A                     	endif
  5449  002D1A                     	if	0	;There are less than 3 active tblptr bytes
  5450  002D1A                     	endif
  5451  002D1A  51C8               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5452  002D1C  0103               	movlb	3	; () banked
  5453  002D1E  6FF9               	movwf	??_ScheduleTasks& (0+255),b
  5454  002D20  6BFA               	clrf	(??_ScheduleTasks+1)& (0+255),b
  5455  002D22  0009               	tblrd		*+
  5456  002D24  50F5               	movf	tablat,w,c
  5457  002D26  5DF9               	subwf	??_ScheduleTasks& (0+255),w,b
  5458  002D28  0009               	tblrd		*+
  5459  002D2A  50F5               	movf	tablat,w,c
  5460  002D2C  59FA               	subwfb	(??_ScheduleTasks+1)& (0+255),w,b
  5461  002D2E  B0D8               	btfsc	status,0,c
  5462  002D30  0012               	return	
  5463                           
  5464                           ; BSR set to: 3
  5465                           ;os_sched.c: 106: {
  5466                           ;os_sched.c: 108: TaskTable[ActiveTaskIndex].Counter++;
  5467                           
  5468                           ; BSR set to: 3
  5469                           
  5470                           ; BSR set to: 3
  5471  002D32  0102               	movlb	2	; () banked
  5472  002D34  51C8               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5473  002D36  0D08               	mullw	8
  5474  002D38  0E03               	movlw	3
  5475  002D3A  26F3               	addwf	prodl,f,c
  5476  002D3C  0E00               	movlw	0
  5477  002D3E  22F4               	addwfc	prodh,f,c
  5478  002D40  0E86               	movlw	low _TaskTable
  5479  002D42  24F3               	addwf	prodl,w,c
  5480  002D44  6ED9               	movwf	fsr2l,c
  5481  002D46  0E05               	movlw	high _TaskTable
  5482  002D48  20F4               	addwfc	prodh,w,c
  5483  002D4A  6EDA               	movwf	fsr2h,c
  5484  002D4C  2ADE               	incf	postinc2,f,c
  5485  002D4E  0E00               	movlw	0
  5486  002D50  22DD               	addwfc	postdec2,f,c
  5487                           
  5488                           ; BSR set to: 2
  5489                           ;os_sched.c: 110: if (TaskTable[ActiveTaskIndex].Counter >= (TaskTable[ActiveTaskIndex].
      +                          TimeoutMs/((((UINT16)(1000))*((UINT16)(1)))/1000)))
  5490  002D52  51C8               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5491  002D54  0D08               	mullw	8
  5492  002D56  0E05               	movlw	5
  5493  002D58  26F3               	addwf	prodl,f,c
  5494  002D5A  0E00               	movlw	0
  5495  002D5C  22F4               	addwfc	prodh,f,c
  5496  002D5E  0E86               	movlw	low _TaskTable
  5497  002D60  24F3               	addwf	prodl,w,c
  5498  002D62  6ED9               	movwf	fsr2l,c
  5499  002D64  0E05               	movlw	high _TaskTable
  5500  002D66  20F4               	addwfc	prodh,w,c
  5501  002D68  6EDA               	movwf	fsr2h,c
  5502  002D6A  51C8               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5503  002D6C  0D08               	mullw	8
  5504  002D6E  0E03               	movlw	3
  5505  002D70  26F3               	addwf	prodl,f,c
  5506  002D72  0E00               	movlw	0
  5507  002D74  22F4               	addwfc	prodh,f,c
  5508  002D76  0E86               	movlw	low _TaskTable
  5509  002D78  24F3               	addwf	prodl,w,c
  5510  002D7A  6EE1               	movwf	fsr1l,c
  5511  002D7C  0E05               	movlw	high _TaskTable
  5512  002D7E  20F4               	addwfc	prodh,w,c
  5513  002D80  6EE2               	movwf	fsr1h,c
  5514  002D82  50DE               	movf	postinc2,w,c
  5515  002D84  5CE6               	subwf	postinc1,w,c
  5516  002D86  50DE               	movf	postinc2,w,c
  5517  002D88  58E6               	subwfb	postinc1,w,c
  5518  002D8A  A0D8               	btfss	status,0,c
  5519  002D8C  D04E               	goto	l775
  5520                           
  5521                           ; BSR set to: 2
  5522                           ;os_sched.c: 111: {
  5523                           ;os_sched.c: 112: TaskTable[ActiveTaskIndex].Counter = ((UINT8)(0));
  5524  002D8E  51C8               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5525  002D90  0D08               	mullw	8
  5526  002D92  0E03               	movlw	3
  5527  002D94  26F3               	addwf	prodl,f,c
  5528  002D96  0E00               	movlw	0
  5529  002D98  22F4               	addwfc	prodh,f,c
  5530  002D9A  0E86               	movlw	low _TaskTable
  5531  002D9C  24F3               	addwf	prodl,w,c
  5532  002D9E  6ED9               	movwf	fsr2l,c
  5533  002DA0  0E05               	movlw	high _TaskTable
  5534  002DA2  20F4               	addwfc	prodh,w,c
  5535  002DA4  6EDA               	movwf	fsr2h,c
  5536  002DA6  0E00               	movlw	0
  5537  002DA8  6EDE               	movwf	postinc2,c
  5538  002DAA  0E00               	movlw	0
  5539  002DAC  6EDD               	movwf	postdec2,c
  5540                           
  5541                           ;os_sched.c: 113: TaskTable[ActiveTaskIndex].State = TaskRunning;
  5542  002DAE  51C8               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5543  002DB0  0D08               	mullw	8
  5544  002DB2  0E02               	movlw	2
  5545  002DB4  26F3               	addwf	prodl,f,c
  5546  002DB6  0E00               	movlw	0
  5547  002DB8  22F4               	addwfc	prodh,f,c
  5548  002DBA  0E86               	movlw	low _TaskTable
  5549  002DBC  24F3               	addwf	prodl,w,c
  5550  002DBE  6ED9               	movwf	fsr2l,c
  5551  002DC0  0E05               	movlw	high _TaskTable
  5552  002DC2  20F4               	addwfc	prodh,w,c
  5553  002DC4  6EDA               	movwf	fsr2h,c
  5554  002DC6  0E01               	movlw	1
  5555  002DC8  6EDF               	movwf	indf2,c
  5556                           
  5557                           ; BSR set to: 2
  5558                           ;os_sched.c: 114: TaskTable[ActiveTaskIndex].Task(TaskTable[ActiveTaskIndex].Options);
  5559  002DCA  51C8               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5560  002DCC  0D08               	mullw	8
  5561  002DCE  0E86               	movlw	low _TaskTable
  5562  002DD0  24F3               	addwf	prodl,w,c
  5563  002DD2  6ED9               	movwf	fsr2l,c
  5564  002DD4  0E05               	movlw	high _TaskTable
  5565  002DD6  20F4               	addwfc	prodh,w,c
  5566  002DD8  6EDA               	movwf	fsr2h,c
  5567  002DDA  D801               	call	u16568
  5568  002DDC  D017               	goto	u16569
  5569  002DDE                     u16568:
  5570  002DDE  0005               	push	
  5571  002DE0  6EFA               	movwf	pclath,c
  5572  002DE2  50DE               	movf	postinc2,w,c
  5573  002DE4  6EFD               	movwf	tosl,c
  5574  002DE6  50DE               	movf	postinc2,w,c
  5575  002DE8  6EFE               	movwf	tosh,c
  5576  002DEA  50F8               	movf	tblptru,w,c
  5577  002DEC  6EFF               	movwf	tosu,c
  5578  002DEE  50FA               	movf	pclath,w,c
  5579  002DF0  51C8               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5580  002DF2  0D08               	mullw	8
  5581  002DF4  0E07               	movlw	7
  5582  002DF6  26F3               	addwf	prodl,f,c
  5583  002DF8  0E00               	movlw	0
  5584  002DFA  22F4               	addwfc	prodh,f,c
  5585  002DFC  0E86               	movlw	low _TaskTable
  5586  002DFE  24F3               	addwf	prodl,w,c
  5587  002E00  6ED9               	movwf	fsr2l,c
  5588  002E02  0E05               	movlw	high _TaskTable
  5589  002E04  20F4               	addwfc	prodh,w,c
  5590  002E06  6EDA               	movwf	fsr2h,c
  5591  002E08  50DF               	movf	indf2,w,c
  5592  002E0A  0012               	return		;indir
  5593  002E0C                     u16569:
  5594                           
  5595                           ;os_sched.c: 115: TaskTable[ActiveTaskIndex].State = TaskIdle;
  5596  002E0C  0102               	movlb	2	; () banked
  5597  002E0E  51C8               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5598  002E10  0D08               	mullw	8
  5599  002E12  0E02               	movlw	2
  5600  002E14  26F3               	addwf	prodl,f,c
  5601  002E16  0E00               	movlw	0
  5602  002E18  22F4               	addwfc	prodh,f,c
  5603  002E1A  0E86               	movlw	low _TaskTable
  5604  002E1C  24F3               	addwf	prodl,w,c
  5605  002E1E  6ED9               	movwf	fsr2l,c
  5606  002E20  0E05               	movlw	high _TaskTable
  5607  002E22  20F4               	addwfc	prodh,w,c
  5608  002E24  6EDA               	movwf	fsr2h,c
  5609  002E26  0E00               	movlw	0
  5610  002E28  6EDF               	movwf	indf2,c
  5611  002E2A                     l775:
  5612                           
  5613                           ; BSR set to: 2
  5614                           
  5615                           ; BSR set to: 2
  5616                           
  5617                           ;os_sched.c: 117: else
  5618                           ;os_sched.c: 118: {
  5619                           
  5620                           ; BSR set to: 2
  5621  002E2A  2BC8               	incf	ScheduleTasks@ActiveTaskIndex& (0+255),f,b
  5622  002E2C  D772               	goto	l16751
  5623  002E2E                     __end_of_ScheduleTasks:
  5624                           	opt stack 0
  5625                           tosu	equ	0xFFF
  5626                           tosh	equ	0xFFE
  5627                           tosl	equ	0xFFD
  5628                           pclath	equ	0xFFA
  5629                           tblptru	equ	0xFF8
  5630                           tblptrh	equ	0xFF7
  5631                           tblptrl	equ	0xFF6
  5632                           tablat	equ	0xFF5
  5633                           prodh	equ	0xFF4
  5634                           prodl	equ	0xFF3
  5635                           intcon	equ	0xFF2
  5636                           intcon2	equ	0xFF1
  5637                           intcon3	equ	0xFF0
  5638                           postinc0	equ	0xFEE
  5639                           wreg	equ	0xFE8
  5640                           postinc1	equ	0xFE6
  5641                           postdec1	equ	0xFE5
  5642                           fsr1h	equ	0xFE2
  5643                           fsr1l	equ	0xFE1
  5644                           indf2	equ	0xFDF
  5645                           postinc2	equ	0xFDE
  5646                           postdec2	equ	0xFDD
  5647                           fsr2h	equ	0xFDA
  5648                           fsr2l	equ	0xFD9
  5649                           status	equ	0xFD8
  5650                           
  5651 ;; *************** function _InitializeTasks *****************
  5652 ;; Defined at:
  5653 ;;		line 79 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
  5654 ;; Parameters:    Size  Location     Type
  5655 ;;		None
  5656 ;; Auto vars:     Size  Location     Type
  5657 ;;  ActiveTaskIn    1  200[BANK2 ] unsigned char 
  5658 ;; Return value:  Size  Location     Type
  5659 ;;                  1    wreg      void 
  5660 ;; Registers used:
  5661 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  5662 ;; Tracked objects:
  5663 ;;		On entry : 0/0
  5664 ;;		On exit  : 0/0
  5665 ;;		Unchanged: 0/0
  5666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5667 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5668 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5669 ;;      Temps:          0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0       0       0
  5670 ;;      Totals:         0       0       0       1       2       0       0       0       0       0       0       0       
      +0       0       0       0
  5671 ;;Total ram usage:        3 bytes
  5672 ;; Hardware stack levels used:    1
  5673 ;; Hardware stack levels required when called:   21
  5674 ;; This function calls:
  5675 ;;		_I2cSlv_MainTask
  5676 ;;		_Led_MainTask
  5677 ;;		_MdmHttp_MainTask
  5678 ;;		_Mdm_DrvMainFn
  5679 ;;		_Mdm_MainTask
  5680 ;;		_MyApp_Task
  5681 ;;		_Rtcm_MainTask
  5682 ;;		_Term_MainTask
  5683 ;;		_UsbDevice_MainTask
  5684 ;;		_Wdg_MainTask
  5685 ;; This function is called by:
  5686 ;;		_Sch_MainScheduler
  5687 ;; This function uses a non-reentrant model
  5688 ;;
  5689                           
  5690                           	psect	text15
  5691  005488                     __ptext15:
  5692                           	opt stack 0
  5693  005488                     _InitializeTasks:
  5694                           	opt stack 8
  5695                           
  5696                           ;os_sched.c: 82: UINT8 ActiveTaskIndex = 0u;
  5697                           
  5698                           ; BSR set to: 3
  5699                           ;incstack = 0
  5700  005488  0E00               	movlw	0
  5701  00548A  0102               	movlb	2	; () banked
  5702  00548C  6FC8               	movwf	InitializeTasks@ActiveTaskIndex& (0+255),b
  5703                           
  5704                           ;os_sched.c: 85: for (ActiveTaskIndex = 0u; ActiveTaskIndex < TaskNumber; ActiveTaskInde
      +                          x++)
  5705  00548E  0E00               	movlw	0
  5706  005490  6FC8               	movwf	InitializeTasks@ActiveTaskIndex& (0+255),b
  5707  005492                     l16739:
  5708                           
  5709                           ; BSR set to: 2
  5710  005492  0E30               	movlw	low _TaskNumber
  5711  005494  6EF6               	movwf	tblptrl,c
  5712  005496                     	if	1	;There is more than 1 active tblptr byte
  5713  005496  0EFC               	movlw	high _TaskNumber
  5714  005498  6EF7               	movwf	tblptrh,c
  5715  00549A                     	endif
  5716  00549A                     	if	0	;There are less than 3 active tblptr bytes
  5717  00549A                     	endif
  5718  00549A  51C8               	movf	InitializeTasks@ActiveTaskIndex& (0+255),w,b
  5719  00549C  0103               	movlb	3	; () banked
  5720  00549E  6FF9               	movwf	??_InitializeTasks& (0+255),b
  5721  0054A0  6BFA               	clrf	(??_InitializeTasks+1)& (0+255),b
  5722  0054A2  0009               	tblrd		*+
  5723  0054A4  50F5               	movf	tablat,w,c
  5724  0054A6  5DF9               	subwf	??_InitializeTasks& (0+255),w,b
  5725  0054A8  0009               	tblrd		*+
  5726  0054AA  50F5               	movf	tablat,w,c
  5727  0054AC  59FA               	subwfb	(??_InitializeTasks+1)& (0+255),w,b
  5728  0054AE  B0D8               	btfsc	status,0,c
  5729  0054B0  0012               	return	
  5730                           
  5731                           ; BSR set to: 3
  5732                           ;os_sched.c: 86: {
  5733                           ;os_sched.c: 87: TaskTable[ActiveTaskIndex].Task(TaskTable[ActiveTaskIndex].Options);
  5734                           
  5735                           ; BSR set to: 3
  5736                           
  5737                           ; BSR set to: 3
  5738  0054B2  0102               	movlb	2	; () banked
  5739  0054B4  51C8               	movf	InitializeTasks@ActiveTaskIndex& (0+255),w,b
  5740  0054B6  0D08               	mullw	8
  5741  0054B8  0E86               	movlw	low _TaskTable
  5742  0054BA  24F3               	addwf	prodl,w,c
  5743  0054BC  6ED9               	movwf	fsr2l,c
  5744  0054BE  0E05               	movlw	high _TaskTable
  5745  0054C0  20F4               	addwfc	prodh,w,c
  5746  0054C2  6EDA               	movwf	fsr2h,c
  5747  0054C4  D801               	call	u16528
  5748  0054C6  D017               	goto	u16529
  5749  0054C8                     u16528:
  5750  0054C8  0005               	push	
  5751  0054CA  6EFA               	movwf	pclath,c
  5752  0054CC  50DE               	movf	postinc2,w,c
  5753  0054CE  6EFD               	movwf	tosl,c
  5754  0054D0  50DE               	movf	postinc2,w,c
  5755  0054D2  6EFE               	movwf	tosh,c
  5756  0054D4  50F8               	movf	tblptru,w,c
  5757  0054D6  6EFF               	movwf	tosu,c
  5758  0054D8  50FA               	movf	pclath,w,c
  5759  0054DA  51C8               	movf	InitializeTasks@ActiveTaskIndex& (0+255),w,b
  5760  0054DC  0D08               	mullw	8
  5761  0054DE  0E07               	movlw	7
  5762  0054E0  26F3               	addwf	prodl,f,c
  5763  0054E2  0E00               	movlw	0
  5764  0054E4  22F4               	addwfc	prodh,f,c
  5765  0054E6  0E86               	movlw	low _TaskTable
  5766  0054E8  24F3               	addwf	prodl,w,c
  5767  0054EA  6ED9               	movwf	fsr2l,c
  5768  0054EC  0E05               	movlw	high _TaskTable
  5769  0054EE  20F4               	addwfc	prodh,w,c
  5770  0054F0  6EDA               	movwf	fsr2h,c
  5771  0054F2  50DF               	movf	indf2,w,c
  5772  0054F4  0012               	return		;indir
  5773  0054F6                     u16529:
  5774  0054F6  0102               	movlb	2	; () banked
  5775  0054F8  2BC8               	incf	InitializeTasks@ActiveTaskIndex& (0+255),f,b
  5776  0054FA  D7CB               	goto	l16739
  5777  0054FC                     __end_of_InitializeTasks:
  5778                           	opt stack 0
  5779                           tosu	equ	0xFFF
  5780                           tosh	equ	0xFFE
  5781                           tosl	equ	0xFFD
  5782                           pclath	equ	0xFFA
  5783                           tblptru	equ	0xFF8
  5784                           tblptrh	equ	0xFF7
  5785                           tblptrl	equ	0xFF6
  5786                           tablat	equ	0xFF5
  5787                           prodh	equ	0xFF4
  5788                           prodl	equ	0xFF3
  5789                           intcon	equ	0xFF2
  5790                           intcon2	equ	0xFF1
  5791                           intcon3	equ	0xFF0
  5792                           postinc0	equ	0xFEE
  5793                           wreg	equ	0xFE8
  5794                           postinc1	equ	0xFE6
  5795                           postdec1	equ	0xFE5
  5796                           fsr1h	equ	0xFE2
  5797                           fsr1l	equ	0xFE1
  5798                           indf2	equ	0xFDF
  5799                           postinc2	equ	0xFDE
  5800                           postdec2	equ	0xFDD
  5801                           fsr2h	equ	0xFDA
  5802                           fsr2l	equ	0xFD9
  5803                           status	equ	0xFD8
  5804                           
  5805 ;; *************** function _MyApp_Task *****************
  5806 ;; Defined at:
  5807 ;;		line 148 in file "../Source/c/04_App/app.c"
  5808 ;; Parameters:    Size  Location     Type
  5809 ;;  Options         1    wreg     unsigned char 
  5810 ;; Auto vars:     Size  Location     Type
  5811 ;;  Options         1    0[COMRAM] unsigned char 
  5812 ;; Return value:  Size  Location     Type
  5813 ;;                  1    wreg      void 
  5814 ;; Registers used:
  5815 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5816 ;; Tracked objects:
  5817 ;;		On entry : 0/0
  5818 ;;		On exit  : 0/0
  5819 ;;		Unchanged: 0/0
  5820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5821 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5822 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5823 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5824 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5825 ;;Total ram usage:        0 bytes
  5826 ;; Hardware stack levels used:    1
  5827 ;; Hardware stack levels required when called:   19
  5828 ;; This function calls:
  5829 ;;		_Eeprom_Reset
  5830 ;;		_Led_SetLedBlinkTime
  5831 ;;		_addCmdFsm
  5832 ;;		_cmdVisualEffet
  5833 ;;		_delCmdFsm
  5834 ;;		_detectCmd
  5835 ;;		_initFsm
  5836 ;;		_triggerCmdFsm
  5837 ;;		_triggerVisualEffect
  5838 ;; This function is called by:
  5839 ;;		_InitializeTasks
  5840 ;;		_ScheduleTasks
  5841 ;; This function uses a non-reentrant model
  5842 ;;
  5843                           
  5844                           	psect	text16
  5845  002F52                     __ptext16:
  5846                           	opt stack 0
  5847  002F52                     _MyApp_Task:
  5848                           	opt stack 9
  5849                           
  5850                           ;app.c: 150: static gateFsmStates currentState = GATE_INIT;
  5851                           ;app.c: 151: static bool isCmdSuccessfull = 1;
  5852                           ;app.c: 153: cmdVisualEffet(isCmdSuccessfull);
  5853                           
  5854                           ; BSR set to: 3
  5855                           ;incstack = 0
  5856  002F52  0100               	movlb	0	; () banked
  5857  002F54  51E2               	movf	MyApp_Task@isCmdSuccessfull& (0+255),w,b
  5858  002F56  EC79  F030         	call	_cmdVisualEffet
  5859                           
  5860                           ;app.c: 155: switch (SystemState)
  5861  002F5A  D082               	goto	l2597
  5862  002F5C                     
  5863                           ;app.c: 160: Led_SetLedBlinkTime(1u,100,900);
  5864  002F5C  0E00               	movlw	0
  5865  002F5E  0100               	movlb	0	; () banked
  5866  002F60  6F7E               	movwf	(Led_SetLedBlinkTime@OnTimeMs+1)& (0+255),b
  5867  002F62  0E64               	movlw	100
  5868  002F64  6F7D               	movwf	Led_SetLedBlinkTime@OnTimeMs& (0+255),b
  5869  002F66  0E03               	movlw	3
  5870  002F68  6F80               	movwf	(Led_SetLedBlinkTime@OffTimeMs+1)& (0+255),b
  5871  002F6A  0E84               	movlw	132
  5872  002F6C  6F7F               	movwf	Led_SetLedBlinkTime@OffTimeMs& (0+255),b
  5873  002F6E  0E01               	movlw	1
  5874  002F70  EC76  F02E         	call	_Led_SetLedBlinkTime
  5875                           
  5876                           ;app.c: 161: Led_SetLedBlinkTime(2u,100,900);
  5877  002F74  0E00               	movlw	0
  5878  002F76  0100               	movlb	0	; () banked
  5879  002F78  6F7E               	movwf	(Led_SetLedBlinkTime@OnTimeMs+1)& (0+255),b
  5880  002F7A  0E64               	movlw	100
  5881  002F7C  6F7D               	movwf	Led_SetLedBlinkTime@OnTimeMs& (0+255),b
  5882  002F7E  0E03               	movlw	3
  5883  002F80  6F80               	movwf	(Led_SetLedBlinkTime@OffTimeMs+1)& (0+255),b
  5884  002F82  0E84               	movlw	132
  5885  002F84  6F7F               	movwf	Led_SetLedBlinkTime@OffTimeMs& (0+255),b
  5886  002F86  0E02               	movlw	2
  5887  002F88  EC76  F02E         	call	_Led_SetLedBlinkTime
  5888                           
  5889                           ;app.c: 162: break;
  5890  002F8C  0012               	return	
  5891  002F8E                     
  5892                           ;app.c: 169: if (initFsm())
  5893  002F8E  EC1C  F024         	call	_initFsm	;wreg free
  5894  002F92  0900               	iorlw	0
  5895  002F94  B4D8               	btfsc	status,2,c
  5896  002F96  0012               	return	
  5897                           
  5898                           ;app.c: 170: {
  5899                           ;app.c: 171: currentState = GATE_WAIT_EVENT;
  5900  002F98  0E01               	movlw	1
  5901  002F9A  0101               	movlb	1	; () banked
  5902  002F9C  6FD9               	movwf	MyApp_Task@currentState& (0+255),b
  5903                           
  5904                           ; BSR set to: 1
  5905                           ;app.c: 172: }
  5906                           ;app.c: 173: break;
  5907  002F9E  0012               	return	
  5908  002FA0                     
  5909                           ; BSR set to: 1
  5910                           ;app.c: 176: currentState = detectCmd();
  5911                           
  5912                           ; BSR set to: 1
  5913  002FA0  EC08  F026         	call	_detectCmd	;wreg free
  5914  002FA4  0101               	movlb	1	; () banked
  5915  002FA6  6FD9               	movwf	MyApp_Task@currentState& (0+255),b
  5916                           
  5917                           ;app.c: 177: break;
  5918  002FA8  0012               	return	
  5919  002FAA                     
  5920                           ; BSR set to: 1
  5921                           ;app.c: 180: if (addCmdFsm(receivedNumber, smsText, &isCmdSuccessfull))
  5922                           
  5923                           ; BSR set to: 1
  5924  002FAA  0EB6               	movlw	low _receivedNumber
  5925  002FAC  6F05               	movwf	addCmdFsm@receivedNumber& (0+255),b
  5926  002FAE  0E04               	movlw	high _receivedNumber
  5927  002FB0  6F06               	movwf	(addCmdFsm@receivedNumber+1)& (0+255),b
  5928  002FB2  0E93               	movlw	low _smsText
  5929  002FB4  6F07               	movwf	addCmdFsm@smsText& (0+255),b
  5930  002FB6  0E04               	movlw	high _smsText
  5931  002FB8  6F08               	movwf	(addCmdFsm@smsText+1)& (0+255),b
  5932  002FBA  0EE2               	movlw	low MyApp_Task@isCmdSuccessfull
  5933  002FBC  6F09               	movwf	addCmdFsm@isCmdSuccessfull& (0+255),b
  5934  002FBE  0E00               	movlw	high MyApp_Task@isCmdSuccessfull
  5935  002FC0  6F0A               	movwf	(addCmdFsm@isCmdSuccessfull+1)& (0+255),b
  5936  002FC2  ECB7  F019         	call	_addCmdFsm	;wreg free
  5937  002FC6  0900               	iorlw	0
  5938  002FC8  B4D8               	btfsc	status,2,c
  5939  002FCA  0012               	return	
  5940                           
  5941                           ;app.c: 181: {
  5942                           ;app.c: 182: currentState = GATE_WAIT_EVENT;
  5943  002FCC  0E01               	movlw	1
  5944  002FCE  0101               	movlb	1	; () banked
  5945  002FD0  6FD9               	movwf	MyApp_Task@currentState& (0+255),b
  5946                           
  5947                           ; BSR set to: 1
  5948                           ;app.c: 183: triggerVisualEffect();
  5949  002FD2  EC1C  F036         	call	_triggerVisualEffect	;wreg free
  5950                           
  5951                           ;app.c: 184: }
  5952                           ;app.c: 185: break;
  5953  002FD6  0012               	return	
  5954  002FD8                     
  5955                           ;app.c: 188: if (delCmdFsm(receivedNumber, smsText, &isCmdSuccessfull))
  5956  002FD8  0EB6               	movlw	low _receivedNumber
  5957  002FDA  0101               	movlb	1	; () banked
  5958  002FDC  6F05               	movwf	delCmdFsm@receivedNumber& (0+255),b
  5959  002FDE  0E04               	movlw	high _receivedNumber
  5960  002FE0  6F06               	movwf	(delCmdFsm@receivedNumber+1)& (0+255),b
  5961  002FE2  0E93               	movlw	low _smsText
  5962  002FE4  6F07               	movwf	delCmdFsm@smsText& (0+255),b
  5963  002FE6  0E04               	movlw	high _smsText
  5964  002FE8  6F08               	movwf	(delCmdFsm@smsText+1)& (0+255),b
  5965  002FEA  0EE2               	movlw	low MyApp_Task@isCmdSuccessfull
  5966  002FEC  6F09               	movwf	delCmdFsm@isCmdSuccessfull& (0+255),b
  5967  002FEE  0E00               	movlw	high MyApp_Task@isCmdSuccessfull
  5968  002FF0  6F0A               	movwf	(delCmdFsm@isCmdSuccessfull+1)& (0+255),b
  5969  002FF2  EC3E  F01D         	call	_delCmdFsm	;wreg free
  5970  002FF6  0900               	iorlw	0
  5971  002FF8  B4D8               	btfsc	status,2,c
  5972  002FFA  0012               	return	
  5973                           
  5974                           ;app.c: 189: {
  5975                           ;app.c: 190: currentState = GATE_WAIT_EVENT;
  5976  002FFC  0E01               	movlw	1
  5977  002FFE  0101               	movlb	1	; () banked
  5978  003000  6FD9               	movwf	MyApp_Task@currentState& (0+255),b
  5979                           
  5980                           ; BSR set to: 1
  5981                           ;app.c: 191: triggerVisualEffect();
  5982  003002  EC1C  F036         	call	_triggerVisualEffect	;wreg free
  5983                           
  5984                           ;app.c: 192: }
  5985                           ;app.c: 193: break;
  5986  003006  0012               	return	
  5987  003008                     
  5988                           ;app.c: 196: if (triggerCmdFsm(receivedNumber))
  5989  003008  0EB6               	movlw	low _receivedNumber
  5990  00300A  0101               	movlb	1	; () banked
  5991  00300C  6F05               	movwf	triggerCmdFsm@receivedNumber& (0+255),b
  5992  00300E  0E04               	movlw	high _receivedNumber
  5993  003010  6F06               	movwf	(triggerCmdFsm@receivedNumber+1)& (0+255),b
  5994  003012  ECD2  F01C         	call	_triggerCmdFsm	;wreg free
  5995  003016  0900               	iorlw	0
  5996  003018  B4D8               	btfsc	status,2,c
  5997  00301A  0012               	return	
  5998                           
  5999                           ;app.c: 197: {
  6000                           ;app.c: 198: currentState = GATE_WAIT_EVENT;
  6001  00301C  0E01               	movlw	1
  6002  00301E  0101               	movlb	1	; () banked
  6003  003020  6FD9               	movwf	MyApp_Task@currentState& (0+255),b
  6004                           
  6005                           ; BSR set to: 1
  6006                           ;app.c: 199: }
  6007                           ;app.c: 200: break;
  6008  003022  0012               	return	
  6009  003024                     
  6010                           ; BSR set to: 1
  6011                           ;app.c: 203: if (Eeprom_Reset() == 0)
  6012                           
  6013                           ; BSR set to: 1
  6014  003024  ECCD  F02D         	call	_Eeprom_Reset	;wreg free
  6015  003028  0900               	iorlw	0
  6016  00302A  A4D8               	btfss	status,2,c
  6017  00302C  0012               	return	
  6018                           
  6019                           ;app.c: 204: {
  6020                           ;app.c: 205: currentState = GATE_INIT;
  6021  00302E  0E00               	movlw	0
  6022  003030  0101               	movlb	1	; () banked
  6023  003032  6FD9               	movwf	MyApp_Task@currentState& (0+255),b
  6024                           
  6025                           ; BSR set to: 1
  6026                           ;app.c: 211: }
  6027                           
  6028                           ; BSR set to: 1
  6029                           ;app.c: 210: break;
  6030                           
  6031                           ;app.c: 209: default:
  6032                           
  6033                           ; BSR set to: 1
  6034                           ;app.c: 206: }
  6035                           ;app.c: 207: break;
  6036  003034  0012               	return	
  6037  003036                     
  6038                           ; BSR set to: 1
  6039  003036  0101               	movlb	1	; () banked
  6040  003038  51D9               	movf	MyApp_Task@currentState& (0+255),w,b
  6041                           
  6042                           ; Switch size 1, requested type "space"
  6043                           ; Number of cases is 6, Range of values is 0 to 5
  6044                           ; switch strategies available:
  6045                           ; Name         Instructions Cycles
  6046                           ; simple_byte           19    10 (average)
  6047                           ;	Chosen strategy is simple_byte
  6048  00303A  0A00               	xorlw	0	; case 0
  6049  00303C  B4D8               	btfsc	status,2,c
  6050  00303E  D7A7               	goto	l2602
  6051  003040  0A01               	xorlw	1	; case 1
  6052  003042  B4D8               	btfsc	status,2,c
  6053  003044  D7AD               	goto	l2605
  6054  003046  0A03               	xorlw	3	; case 2
  6055  003048  B4D8               	btfsc	status,2,c
  6056  00304A  D7AF               	goto	l2606
  6057  00304C  0A01               	xorlw	1	; case 3
  6058  00304E  B4D8               	btfsc	status,2,c
  6059  003050  D7C3               	goto	l2608
  6060  003052  0A07               	xorlw	7	; case 4
  6061  003054  B4D8               	btfsc	status,2,c
  6062  003056  D7D8               	goto	l2610
  6063  003058  0A01               	xorlw	1	; case 5
  6064  00305A  A4D8               	btfss	status,2,c
  6065                           
  6066                           ; BSR set to: 1
  6067                           ;app.c: 217: }
  6068                           
  6069                           ; BSR set to: 1
  6070                           ;app.c: 216: break;
  6071                           
  6072                           ;app.c: 215: default:
  6073                           
  6074                           ; BSR set to: 1
  6075                           ;app.c: 212: break;
  6076  00305C  0012               	return	
  6077  00305E  D7E2               	goto	l2612
  6078  003060                     l2597:
  6079                           
  6080                           ; BSR set to: 1
  6081  003060  0100               	movlb	0	; () banked
  6082  003062  51D4               	movf	_SystemState& (0+255),w,b
  6083                           
  6084                           ; Switch size 1, requested type "space"
  6085                           ; Number of cases is 2, Range of values is 0 to 1
  6086                           ; switch strategies available:
  6087                           ; Name         Instructions Cycles
  6088                           ; simple_byte            7     4 (average)
  6089                           ;	Chosen strategy is simple_byte
  6090  003064  0A00               	xorlw	0	; case 0
  6091  003066  B4D8               	btfsc	status,2,c
  6092  003068  D779               	goto	l2598
  6093  00306A  0A01               	xorlw	1	; case 1
  6094  00306C  A4D8               	btfss	status,2,c
  6095  00306E  0012               	return	
  6096  003070  D7E2               	goto	l2601
  6097  003072                     __end_of_MyApp_Task:
  6098                           	opt stack 0
  6099                           tosu	equ	0xFFF
  6100                           tosh	equ	0xFFE
  6101                           tosl	equ	0xFFD
  6102                           pclath	equ	0xFFA
  6103                           tblptru	equ	0xFF8
  6104                           tblptrh	equ	0xFF7
  6105                           tblptrl	equ	0xFF6
  6106                           tablat	equ	0xFF5
  6107                           prodh	equ	0xFF4
  6108                           prodl	equ	0xFF3
  6109                           intcon	equ	0xFF2
  6110                           intcon2	equ	0xFF1
  6111                           intcon3	equ	0xFF0
  6112                           postinc0	equ	0xFEE
  6113                           wreg	equ	0xFE8
  6114                           postinc1	equ	0xFE6
  6115                           postdec1	equ	0xFE5
  6116                           fsr1h	equ	0xFE2
  6117                           fsr1l	equ	0xFE1
  6118                           indf2	equ	0xFDF
  6119                           postinc2	equ	0xFDE
  6120                           postdec2	equ	0xFDD
  6121                           fsr2h	equ	0xFDA
  6122                           fsr2l	equ	0xFD9
  6123                           status	equ	0xFD8
  6124                           
  6125 ;; *************** function _Term_MainTask *****************
  6126 ;; Defined at:
  6127 ;;		line 845 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/term.c"
  6128 ;; Parameters:    Size  Location     Type
  6129 ;;  Options         1    wreg     unsigned char 
  6130 ;; Auto vars:     Size  Location     Type
  6131 ;;  Options         1    0[COMRAM] unsigned char 
  6132 ;; Return value:  Size  Location     Type
  6133 ;;                  1    wreg      void 
  6134 ;; Registers used:
  6135 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6136 ;; Tracked objects:
  6137 ;;		On entry : 0/0
  6138 ;;		On exit  : 0/0
  6139 ;;		Unchanged: 0/0
  6140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6141 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6142 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6143 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6144 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6145 ;;Total ram usage:        0 bytes
  6146 ;; Hardware stack levels used:    1
  6147 ;; Hardware stack levels required when called:   17
  6148 ;; This function calls:
  6149 ;;		_Term_MainSm
  6150 ;; This function is called by:
  6151 ;;		_InitializeTasks
  6152 ;;		_ScheduleTasks
  6153 ;; This function uses a non-reentrant model
  6154 ;;
  6155                           
  6156                           	psect	text17
  6157  006A86                     __ptext17:
  6158                           	opt stack 0
  6159  006A86                     _Term_MainTask:
  6160                           	opt stack 11
  6161                           
  6162                           ;term.c: 847: switch (SystemState)
  6163                           
  6164                           ;incstack = 0
  6165  006A86  D003               	goto	l2490
  6166  006A88                     
  6167                           ;term.c: 858: Term_MainSm();
  6168  006A88  EC5B  F008         	call	_Term_MainSm	;wreg free
  6169                           
  6170                           ;term.c: 865: }
  6171                           
  6172                           ;term.c: 864: break;
  6173                           
  6174                           ;term.c: 863: default:
  6175                           
  6176                           ;term.c: 860: break;
  6177  006A8C  0012               	return	
  6178  006A8E                     l2490:
  6179  006A8E  0100               	movlb	0	; () banked
  6180  006A90  51D4               	movf	_SystemState& (0+255),w,b
  6181                           
  6182                           ; Switch size 1, requested type "space"
  6183                           ; Number of cases is 2, Range of values is 0 to 1
  6184                           ; switch strategies available:
  6185                           ; Name         Instructions Cycles
  6186                           ; simple_byte            7     4 (average)
  6187                           ;	Chosen strategy is simple_byte
  6188  006A92  0A00               	xorlw	0	; case 0
  6189  006A94  B4D8               	btfsc	status,2,c
  6190  006A96  0012               	return	
  6191  006A98  0A01               	xorlw	1	; case 1
  6192  006A9A  A4D8               	btfss	status,2,c
  6193  006A9C  0012               	return	
  6194  006A9E  D7F4               	goto	l2493
  6195  006AA0                     __end_of_Term_MainTask:
  6196                           	opt stack 0
  6197                           tosu	equ	0xFFF
  6198                           tosh	equ	0xFFE
  6199                           tosl	equ	0xFFD
  6200                           pclath	equ	0xFFA
  6201                           tblptru	equ	0xFF8
  6202                           tblptrh	equ	0xFF7
  6203                           tblptrl	equ	0xFF6
  6204                           tablat	equ	0xFF5
  6205                           prodh	equ	0xFF4
  6206                           prodl	equ	0xFF3
  6207                           intcon	equ	0xFF2
  6208                           intcon2	equ	0xFF1
  6209                           intcon3	equ	0xFF0
  6210                           postinc0	equ	0xFEE
  6211                           wreg	equ	0xFE8
  6212                           postinc1	equ	0xFE6
  6213                           postdec1	equ	0xFE5
  6214                           fsr1h	equ	0xFE2
  6215                           fsr1l	equ	0xFE1
  6216                           indf2	equ	0xFDF
  6217                           postinc2	equ	0xFDE
  6218                           postdec2	equ	0xFDD
  6219                           fsr2h	equ	0xFDA
  6220                           fsr2l	equ	0xFD9
  6221                           status	equ	0xFD8
  6222                           
  6223 ;; *************** function _Rtcm_MainTask *****************
  6224 ;; Defined at:
  6225 ;;		line 99 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/rtcm.c"
  6226 ;; Parameters:    Size  Location     Type
  6227 ;;  Options         1    wreg     unsigned char 
  6228 ;; Auto vars:     Size  Location     Type
  6229 ;;  Options         1    0[COMRAM] unsigned char 
  6230 ;; Return value:  Size  Location     Type
  6231 ;;                  1    wreg      void 
  6232 ;; Registers used:
  6233 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6234 ;; Tracked objects:
  6235 ;;		On entry : 0/0
  6236 ;;		On exit  : 0/0
  6237 ;;		Unchanged: 0/0
  6238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6239 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6240 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6242 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6243 ;;Total ram usage:        0 bytes
  6244 ;; Hardware stack levels used:    1
  6245 ;; Hardware stack levels required when called:   14
  6246 ;; This function calls:
  6247 ;;		_Rtcc_AlarmConfig
  6248 ;;		_Rtcc_LockRtc
  6249 ;;		_Rtcc_RtcConfig
  6250 ;;		_Rtcc_SetRtcStatus
  6251 ;;		_Rtcc_UnlockRtc
  6252 ;;		_Rtcm_GetRtccDate
  6253 ;;		_Rtcm_SetRtccDate
  6254 ;; This function is called by:
  6255 ;;		_InitializeTasks
  6256 ;;		_ScheduleTasks
  6257 ;; This function uses a non-reentrant model
  6258 ;;
  6259                           
  6260                           	psect	text18
  6261  0051E2                     __ptext18:
  6262                           	opt stack 0
  6263  0051E2                     _Rtcm_MainTask:
  6264                           	opt stack 14
  6265                           
  6266                           ;rtcm.c: 101: switch (SystemState)
  6267                           
  6268                           ;incstack = 0
  6269  0051E2  D03D               	goto	l2220
  6270  0051E4                     l2221:
  6271                           
  6272                           ; BSR set to: 0
  6273                           ;rtcm.c: 106: T1CONbits.T1OSCEN = 1u;
  6274  0051E4  86CD               	bsf	4045,3,c	;volatile
  6275                           
  6276                           ; BSR set to: 0
  6277                           ;rtcm.c: 108: RtcConfig.RtcOutPinEnable = 0u;
  6278  0051E6  0E00               	movlw	0
  6279  0051E8  0103               	movlb	3	; () banked
  6280  0051EA  6FB5               	movwf	_RtcConfig& (0+255),b
  6281                           
  6282                           ;rtcm.c: 109: RtcConfig.RtcOutputSelectBit = RtccAlarmPulseOnRtccPin;
  6283  0051EC  0E00               	movlw	0
  6284  0051EE  6FB6               	movwf	(_RtcConfig+1)& (0+255),b
  6285                           
  6286                           ;rtcm.c: 110: RtcConfig.IntEnable = EnableInt;
  6287  0051F0  0E01               	movlw	1
  6288  0051F2  6FB7               	movwf	(_RtcConfig+2)& (0+255),b
  6289                           
  6290                           ;rtcm.c: 111: RtcConfig.IntPriority = 1u;
  6291  0051F4  0E01               	movlw	1
  6292  0051F6  6FB8               	movwf	(_RtcConfig+3)& (0+255),b
  6293                           
  6294                           ;rtcm.c: 114: AlCfg.RtcAlarmEnable = 1u;
  6295  0051F8  0E01               	movlw	1
  6296  0051FA  6FB1               	movwf	_AlCfg& (0+255),b
  6297                           
  6298                           ;rtcm.c: 115: AlCfg.RtcChimeEnable = 1u;
  6299  0051FC  0E01               	movlw	1
  6300  0051FE  6FB2               	movwf	(_AlCfg+1)& (0+255),b
  6301                           
  6302                           ;rtcm.c: 116: AlCfg.AlarmMask = EverySecond;
  6303  005200  0E01               	movlw	1
  6304  005202  6FB3               	movwf	(_AlCfg+2)& (0+255),b
  6305                           
  6306                           ;rtcm.c: 117: AlCfg.AlarmRepeat = 0;
  6307  005204  0E00               	movlw	0
  6308  005206  6FB4               	movwf	(_AlCfg+3)& (0+255),b
  6309                           
  6310                           ; BSR set to: 3
  6311                           ;rtcm.c: 120: Rtcc_UnlockRtc();
  6312  005208  ECDF  F035         	call	_Rtcc_UnlockRtc	;wreg free
  6313                           
  6314                           ;rtcm.c: 122: Rtcc_RtcConfig(&RtcConfig);
  6315  00520C  0EB5               	movlw	low _RtcConfig
  6316  00520E  0100               	movlb	0	; () banked
  6317  005210  6F7E               	movwf	Rtcc_RtcConfig@RtcConfig& (0+255),b
  6318  005212  0E03               	movlw	high _RtcConfig
  6319  005214  6F7F               	movwf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),b
  6320  005216  EC69  F025         	call	_Rtcc_RtcConfig	;wreg free
  6321                           
  6322                           ;rtcm.c: 123: Rtcc_AlarmConfig(&AlCfg);
  6323  00521A  0EB1               	movlw	low _AlCfg
  6324  00521C  0100               	movlb	0	; () banked
  6325  00521E  6F7D               	movwf	Rtcc_AlarmConfig@AlarmConfig& (0+255),b
  6326  005220  0E03               	movlw	high _AlCfg
  6327  005222  6F7E               	movwf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),b
  6328  005224  EC5D  F02B         	call	_Rtcc_AlarmConfig	;wreg free
  6329                           
  6330                           ;rtcm.c: 125: Rtcc_SetRtcStatus(1u);
  6331  005228  0E01               	movlw	1
  6332  00522A  EC8E  F035         	call	_Rtcc_SetRtcStatus
  6333                           
  6334                           ;rtcm.c: 127: Rtcc_LockRtc();
  6335  00522E  ECE7  F035         	call	_Rtcc_LockRtc	;wreg free
  6336                           
  6337                           ;rtcm.c: 129: Rtcm_SetRtccDate(Rtcm_SystemDate);
  6338  005232  EE24  F059         	lfsr	2,_Rtcm_SystemDate
  6339  005236  EE00  F089         	lfsr	0,Rtcm_SetRtccDate@Date
  6340  00523A  0E07               	movlw	7
  6341  00523C                     u16441:
  6342  00523C  CFDB FFEB          	movff	plusw2,plusw0
  6343  005240  06E8               	decf	wreg,f,c
  6344  005242  E2FC               	bc	u16441
  6345  005244  EC22  F02E         	call	_Rtcm_SetRtccDate	;wreg free
  6346                           
  6347                           ;rtcm.c: 154: break;
  6348  005248  0012               	return	
  6349  00524A                     
  6350                           ;rtcm.c: 159: Rtcm_SystemDate = Rtcm_GetRtccDate();
  6351  00524A  ECFA  F02B         	call	_Rtcm_GetRtccDate	;wreg free
  6352  00524E  EE24  F059         	lfsr	2,_Rtcm_SystemDate
  6353  005252  0E07               	movlw	7
  6354  005254                     u16451:
  6355  005254  CFEB FFDB          	movff	plusw0,plusw2
  6356  005258  06E8               	decf	wreg,f,c
  6357  00525A  E2FC               	bc	u16451
  6358                           
  6359                           ;rtcm.c: 165: }
  6360                           
  6361                           ;rtcm.c: 164: break;
  6362                           
  6363                           ;rtcm.c: 163: default:
  6364                           
  6365                           ;rtcm.c: 160: break;
  6366  00525C  0012               	return	
  6367  00525E                     l2220:
  6368  00525E  0100               	movlb	0	; () banked
  6369  005260  51D4               	movf	_SystemState& (0+255),w,b
  6370                           
  6371                           ; Switch size 1, requested type "space"
  6372                           ; Number of cases is 2, Range of values is 0 to 1
  6373                           ; switch strategies available:
  6374                           ; Name         Instructions Cycles
  6375                           ; simple_byte            7     4 (average)
  6376                           ;	Chosen strategy is simple_byte
  6377  005262  0A00               	xorlw	0	; case 0
  6378  005264  B4D8               	btfsc	status,2,c
  6379  005266  D7BE               	goto	l2221
  6380  005268  0A01               	xorlw	1	; case 1
  6381  00526A  A4D8               	btfss	status,2,c
  6382  00526C  0012               	return	
  6383  00526E  D7ED               	goto	l2223
  6384  005270                     __end_of_Rtcm_MainTask:
  6385                           	opt stack 0
  6386                           tosu	equ	0xFFF
  6387                           tosh	equ	0xFFE
  6388                           tosl	equ	0xFFD
  6389                           pclath	equ	0xFFA
  6390                           tblptru	equ	0xFF8
  6391                           tblptrh	equ	0xFF7
  6392                           tblptrl	equ	0xFF6
  6393                           tablat	equ	0xFF5
  6394                           prodh	equ	0xFF4
  6395                           prodl	equ	0xFF3
  6396                           intcon	equ	0xFF2
  6397                           intcon2	equ	0xFF1
  6398                           intcon3	equ	0xFF0
  6399                           postinc0	equ	0xFEE
  6400                           plusw0	equ	0xFEB
  6401                           wreg	equ	0xFE8
  6402                           postinc1	equ	0xFE6
  6403                           postdec1	equ	0xFE5
  6404                           fsr1h	equ	0xFE2
  6405                           fsr1l	equ	0xFE1
  6406                           indf2	equ	0xFDF
  6407                           postinc2	equ	0xFDE
  6408                           postdec2	equ	0xFDD
  6409                           plusw2	equ	0xFDB
  6410                           fsr2h	equ	0xFDA
  6411                           fsr2l	equ	0xFD9
  6412                           status	equ	0xFD8
  6413                           
  6414 ;; *************** function _Led_MainTask *****************
  6415 ;; Defined at:
  6416 ;;		line 298 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
  6417 ;; Parameters:    Size  Location     Type
  6418 ;;  Options         1    wreg     unsigned char 
  6419 ;; Auto vars:     Size  Location     Type
  6420 ;;  Options         1    0[COMRAM] unsigned char 
  6421 ;; Return value:  Size  Location     Type
  6422 ;;                  1    wreg      void 
  6423 ;; Registers used:
  6424 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6425 ;; Tracked objects:
  6426 ;;		On entry : 0/0
  6427 ;;		On exit  : 0/0
  6428 ;;		Unchanged: 0/0
  6429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6430 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6431 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6432 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6433 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6434 ;;Total ram usage:        1 bytes
  6435 ;; Hardware stack levels used:    1
  6436 ;; Hardware stack levels required when called:   14
  6437 ;; This function calls:
  6438 ;;		_LedStateMachine
  6439 ;; This function is called by:
  6440 ;;		_InitializeTasks
  6441 ;;		_ScheduleTasks
  6442 ;; This function uses a non-reentrant model
  6443 ;;
  6444                           
  6445                           	psect	text19
  6446  003DC8                     __ptext19:
  6447                           	opt stack 0
  6448  003DC8                     _Led_MainTask:
  6449                           	opt stack 14
  6450                           
  6451                           ;led.c: 300: switch (SystemState)
  6452                           
  6453                           ;incstack = 0
  6454  003DC8  D05C               	goto	l2134
  6455  003DCA                     l2135:
  6456                           
  6457                           ; BSR set to: 0
  6458                           ;led.c: 305: TRISDbits.TRISD4 = ((UINT8)(0));
  6459  003DCA  9895               	bcf	3989,4,c	;volatile
  6460                           
  6461                           ;led.c: 306: TRISDbits.TRISD5 = ((UINT8)(0));
  6462  003DCC  9A95               	bcf	3989,5,c	;volatile
  6463                           
  6464                           ;led.c: 307: TRISDbits.TRISD6 = ((UINT8)(0));
  6465  003DCE  9C95               	bcf	3989,6,c	;volatile
  6466                           
  6467                           ;led.c: 308: PORTDbits.RD4 = ((UINT8)(0));
  6468  003DD0  9883               	bcf	3971,4,c	;volatile
  6469                           
  6470                           ;led.c: 309: PORTDbits.RD5 = ((UINT8)(0));
  6471  003DD2  9A83               	bcf	3971,5,c	;volatile
  6472                           
  6473                           ;led.c: 310: PORTDbits.RD6 = ((UINT8)(0));
  6474  003DD4  9C83               	bcf	3971,6,c	;volatile
  6475                           
  6476                           ;led.c: 311: break;
  6477  003DD6  0012               	return	
  6478  003DD8                     
  6479                           ; BSR set to: 0
  6480                           ;led.c: 316: PORTDbits.RD4 = LedStateMachine(1u,&Led1Sts,&Led1OutSts,&Led1Blink,&Led1Pul
      +                          se);
  6481                           
  6482                           ; BSR set to: 0
  6483  003DD8  0EF9               	movlw	low _Led1Sts
  6484  003DDA  6F8F               	movwf	LedStateMachine@LedSts& (0+255),b
  6485  003DDC  0E01               	movlw	high _Led1Sts
  6486  003DDE  6F90               	movwf	(LedStateMachine@LedSts+1)& (0+255),b
  6487  003DE0  0EF8               	movlw	low _Led1OutSts
  6488  003DE2  6F91               	movwf	LedStateMachine@LedOut& (0+255),b
  6489  003DE4  0E01               	movlw	high _Led1OutSts
  6490  003DE6  6F92               	movwf	(LedStateMachine@LedOut+1)& (0+255),b
  6491  003DE8  0E6B               	movlw	low _Led1Blink
  6492  003DEA  6F93               	movwf	LedStateMachine@LedBlink& (0+255),b
  6493  003DEC  0E03               	movlw	high _Led1Blink
  6494  003DEE  6F94               	movwf	(LedStateMachine@LedBlink+1)& (0+255),b
  6495  003DF0  0E8F               	movlw	low _Led1Pulse
  6496  003DF2  6F95               	movwf	LedStateMachine@LedPulse& (0+255),b
  6497  003DF4  0E03               	movlw	high _Led1Pulse
  6498  003DF6  6F96               	movwf	(LedStateMachine@LedPulse+1)& (0+255),b
  6499  003DF8  0E01               	movlw	1
  6500  003DFA  ECC4  F024         	call	_LedStateMachine
  6501  003DFE  0100               	movlb	0	; () banked
  6502  003E00  6F9A               	movwf	??_Led_MainTask& (0+255),b
  6503  003E02  3B9A               	swapf	??_Led_MainTask& (0+255),f,b
  6504  003E04  5083               	movf	3971,w,c	;volatile
  6505  003E06  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6506  003E08  0BEF               	andlw	-17
  6507  003E0A  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6508  003E0C  6E83               	movwf	3971,c	;volatile
  6509                           
  6510                           ;led.c: 318: PORTDbits.RD5 = LedStateMachine(2u,&Led2Sts,&Led2OutSts,&Led2Blink,&Led2Pul
      +                          se);
  6511  003E0E  0EF7               	movlw	low _Led2Sts
  6512  003E10  6F8F               	movwf	LedStateMachine@LedSts& (0+255),b
  6513  003E12  0E01               	movlw	high _Led2Sts
  6514  003E14  6F90               	movwf	(LedStateMachine@LedSts+1)& (0+255),b
  6515  003E16  0EF6               	movlw	low _Led2OutSts
  6516  003E18  6F91               	movwf	LedStateMachine@LedOut& (0+255),b
  6517  003E1A  0E01               	movlw	high _Led2OutSts
  6518  003E1C  6F92               	movwf	(LedStateMachine@LedOut+1)& (0+255),b
  6519  003E1E  0E62               	movlw	low _Led2Blink
  6520  003E20  6F93               	movwf	LedStateMachine@LedBlink& (0+255),b
  6521  003E22  0E03               	movlw	high _Led2Blink
  6522  003E24  6F94               	movwf	(LedStateMachine@LedBlink+1)& (0+255),b
  6523  003E26  0E89               	movlw	low _Led2Pulse
  6524  003E28  6F95               	movwf	LedStateMachine@LedPulse& (0+255),b
  6525  003E2A  0E03               	movlw	high _Led2Pulse
  6526  003E2C  6F96               	movwf	(LedStateMachine@LedPulse+1)& (0+255),b
  6527  003E2E  0E02               	movlw	2
  6528  003E30  ECC4  F024         	call	_LedStateMachine
  6529  003E34  0100               	movlb	0	; () banked
  6530  003E36  6F9A               	movwf	??_Led_MainTask& (0+255),b
  6531  003E38  3B9A               	swapf	??_Led_MainTask& (0+255),f,b
  6532  003E3A  479A               	rlncf	??_Led_MainTask& (0+255),f,b
  6533  003E3C  5083               	movf	3971,w,c	;volatile
  6534  003E3E  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6535  003E40  0BDF               	andlw	-33
  6536  003E42  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6537  003E44  6E83               	movwf	3971,c	;volatile
  6538                           
  6539                           ;led.c: 320: PORTDbits.RD6 = LedStateMachine(3u,&Led3Sts,&Led3OutSts,&Led3Blink,&Led3Pul
      +                          se);
  6540  003E46  0EF5               	movlw	low _Led3Sts
  6541  003E48  6F8F               	movwf	LedStateMachine@LedSts& (0+255),b
  6542  003E4A  0E01               	movlw	high _Led3Sts
  6543  003E4C  6F90               	movwf	(LedStateMachine@LedSts+1)& (0+255),b
  6544  003E4E  0EF4               	movlw	low _Led3OutSts
  6545  003E50  6F91               	movwf	LedStateMachine@LedOut& (0+255),b
  6546  003E52  0E01               	movlw	high _Led3OutSts
  6547  003E54  6F92               	movwf	(LedStateMachine@LedOut+1)& (0+255),b
  6548  003E56  0E59               	movlw	low _Led3Blink
  6549  003E58  6F93               	movwf	LedStateMachine@LedBlink& (0+255),b
  6550  003E5A  0E03               	movlw	high _Led3Blink
  6551  003E5C  6F94               	movwf	(LedStateMachine@LedBlink+1)& (0+255),b
  6552  003E5E  0E83               	movlw	low _Led3Pulse
  6553  003E60  6F95               	movwf	LedStateMachine@LedPulse& (0+255),b
  6554  003E62  0E03               	movlw	high _Led3Pulse
  6555  003E64  6F96               	movwf	(LedStateMachine@LedPulse+1)& (0+255),b
  6556  003E66  0E03               	movlw	3
  6557  003E68  ECC4  F024         	call	_LedStateMachine
  6558  003E6C  0100               	movlb	0	; () banked
  6559  003E6E  6F9A               	movwf	??_Led_MainTask& (0+255),b
  6560  003E70  3B9A               	swapf	??_Led_MainTask& (0+255),f,b
  6561  003E72  479A               	rlncf	??_Led_MainTask& (0+255),f,b
  6562  003E74  479A               	rlncf	??_Led_MainTask& (0+255),f,b
  6563  003E76  5083               	movf	3971,w,c	;volatile
  6564  003E78  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6565  003E7A  0BBF               	andlw	-65
  6566  003E7C  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6567  003E7E  6E83               	movwf	3971,c	;volatile
  6568                           
  6569                           ; BSR set to: 0
  6570                           ;led.c: 326: }
  6571                           
  6572                           ; BSR set to: 0
  6573                           ;led.c: 325: break;
  6574                           
  6575                           ;led.c: 324: default:
  6576                           
  6577                           ;led.c: 321: break;
  6578  003E80  0012               	return	
  6579  003E82                     l2134:
  6580                           
  6581                           ; BSR set to: 0
  6582  003E82  0100               	movlb	0	; () banked
  6583  003E84  51D4               	movf	_SystemState& (0+255),w,b
  6584                           
  6585                           ; Switch size 1, requested type "space"
  6586                           ; Number of cases is 2, Range of values is 0 to 1
  6587                           ; switch strategies available:
  6588                           ; Name         Instructions Cycles
  6589                           ; simple_byte            7     4 (average)
  6590                           ;	Chosen strategy is simple_byte
  6591  003E86  0A00               	xorlw	0	; case 0
  6592  003E88  B4D8               	btfsc	status,2,c
  6593  003E8A  D79F               	goto	l2135
  6594  003E8C  0A01               	xorlw	1	; case 1
  6595  003E8E  A4D8               	btfss	status,2,c
  6596  003E90  0012               	return	
  6597  003E92  D7A2               	goto	l2137
  6598  003E94                     __end_of_Led_MainTask:
  6599                           	opt stack 0
  6600                           tosu	equ	0xFFF
  6601                           tosh	equ	0xFFE
  6602                           tosl	equ	0xFFD
  6603                           pclath	equ	0xFFA
  6604                           tblptru	equ	0xFF8
  6605                           tblptrh	equ	0xFF7
  6606                           tblptrl	equ	0xFF6
  6607                           tablat	equ	0xFF5
  6608                           prodh	equ	0xFF4
  6609                           prodl	equ	0xFF3
  6610                           intcon	equ	0xFF2
  6611                           intcon2	equ	0xFF1
  6612                           intcon3	equ	0xFF0
  6613                           postinc0	equ	0xFEE
  6614                           plusw0	equ	0xFEB
  6615                           wreg	equ	0xFE8
  6616                           postinc1	equ	0xFE6
  6617                           postdec1	equ	0xFE5
  6618                           fsr1h	equ	0xFE2
  6619                           fsr1l	equ	0xFE1
  6620                           indf2	equ	0xFDF
  6621                           postinc2	equ	0xFDE
  6622                           postdec2	equ	0xFDD
  6623                           plusw2	equ	0xFDB
  6624                           fsr2h	equ	0xFDA
  6625                           fsr2l	equ	0xFD9
  6626                           status	equ	0xFD8
  6627                           
  6628 ;; *************** function _UsbDevice_MainTask *****************
  6629 ;; Defined at:
  6630 ;;		line 72 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_mgr.c"
  6631 ;; Parameters:    Size  Location     Type
  6632 ;;  Options         1    wreg     unsigned char 
  6633 ;; Auto vars:     Size  Location     Type
  6634 ;;  Options         1    0[COMRAM] unsigned char 
  6635 ;; Return value:  Size  Location     Type
  6636 ;;                  1    wreg      void 
  6637 ;; Registers used:
  6638 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6639 ;; Tracked objects:
  6640 ;;		On entry : 0/0
  6641 ;;		On exit  : 0/0
  6642 ;;		Unchanged: 0/0
  6643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6644 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6645 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6646 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6647 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6648 ;;Total ram usage:        0 bytes
  6649 ;; Hardware stack levels used:    1
  6650 ;; Hardware stack levels required when called:   20
  6651 ;; This function calls:
  6652 ;;		_CDCTxService
  6653 ;;		_USBDeviceInit
  6654 ;;		_USBDeviceTasks
  6655 ;; This function is called by:
  6656 ;;		_InitializeTasks
  6657 ;;		_ScheduleTasks
  6658 ;; This function uses a non-reentrant model
  6659 ;;
  6660                           
  6661                           	psect	text20
  6662  00681E                     __ptext20:
  6663                           	opt stack 0
  6664  00681E                     _UsbDevice_MainTask:
  6665                           	opt stack 8
  6666                           
  6667                           ;usb_device_mgr.c: 74: switch (SystemState)
  6668                           
  6669                           ; BSR set to: 0
  6670                           ;incstack = 0
  6671  00681E  D008               	goto	l1992
  6672  006820                     
  6673                           ;usb_device_mgr.c: 79: USBDeviceInit();
  6674  006820  ECC8  F012         	call	_USBDeviceInit	;wreg free
  6675                           
  6676                           ;usb_device_mgr.c: 80: ;
  6677                           ;usb_device_mgr.c: 81: break;
  6678  006824  0012               	return	
  6679  006826                     
  6680                           ;usb_device_mgr.c: 86: USBDeviceTasks();
  6681  006826  ECD5  F00D         	call	_USBDeviceTasks	;wreg free
  6682                           
  6683                           ;usb_device_mgr.c: 90: CDCTxService();
  6684  00682A  EC15  F014         	call	_CDCTxService	;wreg free
  6685                           
  6686                           ;usb_device_mgr.c: 101: }
  6687                           
  6688                           ;usb_device_mgr.c: 100: break;
  6689                           
  6690                           ;usb_device_mgr.c: 99: default:
  6691                           
  6692                           ;usb_device_mgr.c: 96: break;
  6693  00682E  0012               	return	
  6694  006830                     l1992:
  6695  006830  0100               	movlb	0	; () banked
  6696  006832  51D4               	movf	_SystemState& (0+255),w,b
  6697                           
  6698                           ; Switch size 1, requested type "space"
  6699                           ; Number of cases is 2, Range of values is 0 to 1
  6700                           ; switch strategies available:
  6701                           ; Name         Instructions Cycles
  6702                           ; simple_byte            7     4 (average)
  6703                           ;	Chosen strategy is simple_byte
  6704  006834  0A00               	xorlw	0	; case 0
  6705  006836  B4D8               	btfsc	status,2,c
  6706  006838  D7F3               	goto	l1993
  6707  00683A  0A01               	xorlw	1	; case 1
  6708  00683C  A4D8               	btfss	status,2,c
  6709  00683E  0012               	return	
  6710  006840  D7F2               	goto	l1995
  6711  006842                     __end_of_UsbDevice_MainTask:
  6712                           	opt stack 0
  6713                           tosu	equ	0xFFF
  6714                           tosh	equ	0xFFE
  6715                           tosl	equ	0xFFD
  6716                           pclath	equ	0xFFA
  6717                           tblptru	equ	0xFF8
  6718                           tblptrh	equ	0xFF7
  6719                           tblptrl	equ	0xFF6
  6720                           tablat	equ	0xFF5
  6721                           prodh	equ	0xFF4
  6722                           prodl	equ	0xFF3
  6723                           intcon	equ	0xFF2
  6724                           intcon2	equ	0xFF1
  6725                           intcon3	equ	0xFF0
  6726                           postinc0	equ	0xFEE
  6727                           plusw0	equ	0xFEB
  6728                           wreg	equ	0xFE8
  6729                           postinc1	equ	0xFE6
  6730                           postdec1	equ	0xFE5
  6731                           fsr1h	equ	0xFE2
  6732                           fsr1l	equ	0xFE1
  6733                           indf2	equ	0xFDF
  6734                           postinc2	equ	0xFDE
  6735                           postdec2	equ	0xFDD
  6736                           plusw2	equ	0xFDB
  6737                           fsr2h	equ	0xFDA
  6738                           fsr2l	equ	0xFD9
  6739                           status	equ	0xFD8
  6740                           
  6741 ;; *************** function _MdmHttp_MainTask *****************
  6742 ;; Defined at:
  6743 ;;		line 557 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs_http.c"
  6744 ;; Parameters:    Size  Location     Type
  6745 ;;  Options         1    wreg     unsigned char 
  6746 ;; Auto vars:     Size  Location     Type
  6747 ;;  Options         1    0[COMRAM] unsigned char 
  6748 ;; Return value:  Size  Location     Type
  6749 ;;                  1    wreg      void 
  6750 ;; Registers used:
  6751 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6752 ;; Tracked objects:
  6753 ;;		On entry : 0/0
  6754 ;;		On exit  : 0/0
  6755 ;;		Unchanged: 0/0
  6756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6757 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6758 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6760 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6761 ;;Total ram usage:        0 bytes
  6762 ;; Hardware stack levels used:    1
  6763 ;; Hardware stack levels required when called:   15
  6764 ;; This function calls:
  6765 ;;		_HttpGetMethod
  6766 ;;		_InitGprsNetwork
  6767 ;; This function is called by:
  6768 ;;		_InitializeTasks
  6769 ;;		_ScheduleTasks
  6770 ;; This function uses a non-reentrant model
  6771 ;;
  6772                           
  6773                           	psect	text21
  6774  00613A                     __ptext21:
  6775                           	opt stack 0
  6776  00613A                     _MdmHttp_MainTask:
  6777                           	opt stack 13
  6778                           
  6779                           ;mdm_gsm_gprs_http.c: 559: switch (SystemState)
  6780                           
  6781                           ;incstack = 0
  6782  00613A  D019               	goto	l1291
  6783  00613C                     
  6784                           ;mdm_gsm_gprs_http.c: 569: if (MdmStatus == ModemConfigured)
  6785  00613C  0E03               	movlw	3
  6786  00613E  0100               	movlb	0	; () banked
  6787  006140  19D1               	xorwf	_MdmStatus& (0+255),w,b
  6788  006142  A4D8               	btfss	status,2,c
  6789  006144  0012               	return	
  6790                           
  6791                           ; BSR set to: 0
  6792                           ;mdm_gsm_gprs_http.c: 570: {
  6793                           ;mdm_gsm_gprs_http.c: 572: GprsNetworkSts = InitGprsNetwork(ApnLocal,ApnLenLocal);
  6794  006146  C31C  F09B         	movff	_ApnLocal,InitGprsNetwork@Apn
  6795  00614A  C31D  F09C         	movff	_ApnLocal+1,InitGprsNetwork@Apn+1
  6796  00614E  C1EB  F09D         	movff	_ApnLenLocal,InitGprsNetwork@ApnLen
  6797  006152  ECE4  F006         	call	_InitGprsNetwork	;wreg free
  6798  006156  0101               	movlb	1	; () banked
  6799  006158  6FEA               	movwf	_GprsNetworkSts& (0+255),b
  6800                           
  6801                           ;mdm_gsm_gprs_http.c: 574: HttpGetMethodSts = HttpGetMethod(&HttpGetDataLocal);
  6802  00615A  0EA0               	movlw	low _HttpGetDataLocal
  6803  00615C  0100               	movlb	0	; () banked
  6804  00615E  6F9B               	movwf	HttpGetMethod@GetData& (0+255),b
  6805  006160  0E03               	movlw	high _HttpGetDataLocal
  6806  006162  6F9C               	movwf	(HttpGetMethod@GetData+1)& (0+255),b
  6807  006164  ECF6  F002         	call	_HttpGetMethod	;wreg free
  6808  006168  0101               	movlb	1	; () banked
  6809  00616A  6FE9               	movwf	_HttpGetMethodSts& (0+255),b
  6810                           
  6811                           ; BSR set to: 1
  6812                           ;mdm_gsm_gprs_http.c: 581: }
  6813                           
  6814                           ; BSR set to: 1
  6815                           ;mdm_gsm_gprs_http.c: 580: break;
  6816                           
  6817                           ;mdm_gsm_gprs_http.c: 579: default:
  6818                           
  6819                           ; BSR set to: 1
  6820                           ;mdm_gsm_gprs_http.c: 575: }
  6821                           ;mdm_gsm_gprs_http.c: 576: break;
  6822  00616C  0012               	return	
  6823  00616E                     l1291:
  6824                           
  6825                           ; BSR set to: 1
  6826  00616E  0100               	movlb	0	; () banked
  6827  006170  51D4               	movf	_SystemState& (0+255),w,b
  6828                           
  6829                           ; Switch size 1, requested type "space"
  6830                           ; Number of cases is 2, Range of values is 0 to 1
  6831                           ; switch strategies available:
  6832                           ; Name         Instructions Cycles
  6833                           ; simple_byte            7     4 (average)
  6834                           ;	Chosen strategy is simple_byte
  6835  006172  0A00               	xorlw	0	; case 0
  6836  006174  B4D8               	btfsc	status,2,c
  6837  006176  0012               	return	
  6838  006178  0A01               	xorlw	1	; case 1
  6839  00617A  A4D8               	btfss	status,2,c
  6840  00617C  0012               	return	
  6841  00617E  D7DE               	goto	l1294
  6842  006180                     __end_of_MdmHttp_MainTask:
  6843                           	opt stack 0
  6844                           tosu	equ	0xFFF
  6845                           tosh	equ	0xFFE
  6846                           tosl	equ	0xFFD
  6847                           pclath	equ	0xFFA
  6848                           tblptru	equ	0xFF8
  6849                           tblptrh	equ	0xFF7
  6850                           tblptrl	equ	0xFF6
  6851                           tablat	equ	0xFF5
  6852                           prodh	equ	0xFF4
  6853                           prodl	equ	0xFF3
  6854                           intcon	equ	0xFF2
  6855                           intcon2	equ	0xFF1
  6856                           intcon3	equ	0xFF0
  6857                           postinc0	equ	0xFEE
  6858                           plusw0	equ	0xFEB
  6859                           wreg	equ	0xFE8
  6860                           postinc1	equ	0xFE6
  6861                           postdec1	equ	0xFE5
  6862                           fsr1h	equ	0xFE2
  6863                           fsr1l	equ	0xFE1
  6864                           indf2	equ	0xFDF
  6865                           postinc2	equ	0xFDE
  6866                           postdec2	equ	0xFDD
  6867                           plusw2	equ	0xFDB
  6868                           fsr2h	equ	0xFDA
  6869                           fsr2l	equ	0xFD9
  6870                           status	equ	0xFD8
  6871                           
  6872 ;; *************** function _Mdm_MainTask *****************
  6873 ;; Defined at:
  6874 ;;		line 754 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
  6875 ;; Parameters:    Size  Location     Type
  6876 ;;  Options         1    wreg     unsigned char 
  6877 ;; Auto vars:     Size  Location     Type
  6878 ;;  Options         1    0[COMRAM] unsigned char 
  6879 ;; Return value:  Size  Location     Type
  6880 ;;                  1    wreg      void 
  6881 ;; Registers used:
  6882 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6883 ;; Tracked objects:
  6884 ;;		On entry : 0/0
  6885 ;;		On exit  : 0/0
  6886 ;;		Unchanged: 0/0
  6887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6888 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6889 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6890 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6891 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6892 ;;Total ram usage:        0 bytes
  6893 ;; Hardware stack levels used:    1
  6894 ;; Hardware stack levels required when called:   15
  6895 ;; This function calls:
  6896 ;;		_CheckModem
  6897 ;;		_ConfigureModem
  6898 ;;		_GetSmsSm
  6899 ;;		_ModemEvtParser
  6900 ;;		_SendSmsSm
  6901 ;;		_TurnOnModem
  6902 ;;		_UartSetConfig
  6903 ;;		_Uart_InitUartModule
  6904 ;; This function is called by:
  6905 ;;		_InitializeTasks
  6906 ;;		_ScheduleTasks
  6907 ;; This function uses a non-reentrant model
  6908 ;;
  6909                           
  6910                           	psect	text22
  6911  005E88                     __ptext22:
  6912                           	opt stack 0
  6913  005E88                     _Mdm_MainTask:
  6914                           	opt stack 13
  6915                           
  6916                           ;mdm_gsm_gprs.c: 756: switch (SystemState)
  6917                           
  6918                           ;incstack = 0
  6919  005E88  D01E               	goto	l1107
  6920  005E8A                     
  6921                           ;mdm_gsm_gprs.c: 761: UartSetConfig();
  6922  005E8A  EC1D  F02D         	call	_UartSetConfig	;wreg free
  6923                           
  6924                           ;mdm_gsm_gprs.c: 763: Uart_InitUartModule(1,&UartConfig);
  6925  005E8E  0E22               	movlw	low _UartConfig
  6926  005E90  0100               	movlb	0	; () banked
  6927  005E92  6F9D               	movwf	Uart_InitUartModule@UartConfig& (0+255),b
  6928  005E94  0E03               	movlw	high _UartConfig
  6929  005E96  6F9E               	movwf	(Uart_InitUartModule@UartConfig+1)& (0+255),b
  6930  005E98  0E01               	movlw	1
  6931  005E9A  EC5E  F005         	call	_Uart_InitUartModule
  6932                           
  6933                           ;mdm_gsm_gprs.c: 764: break;
  6934  005E9E  0012               	return	
  6935  005EA0                     
  6936                           ;mdm_gsm_gprs.c: 769: CheckModem();
  6937  005EA0  EC10  F010         	call	_CheckModem	;wreg free
  6938                           
  6939                           ;mdm_gsm_gprs.c: 771: if ((ComChecCompleted == 1u) && (MdmStatus == ModemOff))
  6940  005EA4  042B               	decf	_ComChecCompleted,w,c
  6941  005EA6  A4D8               	btfss	status,2,c
  6942  005EA8  D005               	goto	l1111
  6943  005EAA  0100               	movlb	0	; () banked
  6944  005EAC  51D1               	movf	_MdmStatus& (0+255),w,b
  6945  005EAE  B4D8               	btfsc	status,2,c
  6946                           
  6947                           ; BSR set to: 0
  6948                           ;mdm_gsm_gprs.c: 772: {
  6949                           ;mdm_gsm_gprs.c: 774: TurnOnModem();
  6950  005EB0  EC2F  F030         	call	_TurnOnModem	;wreg free
  6951  005EB4                     l1111:
  6952                           
  6953                           ;mdm_gsm_gprs.c: 775: }
  6954                           ;mdm_gsm_gprs.c: 777: ConfigureModem();
  6955  005EB4  ECAA  F01D         	call	_ConfigureModem	;wreg free
  6956                           
  6957                           ;mdm_gsm_gprs.c: 779: ModemEvtParser();
  6958  005EB8  EC98  F00E         	call	_ModemEvtParser	;wreg free
  6959                           
  6960                           ;mdm_gsm_gprs.c: 781: GetSmsSm();
  6961  005EBC  EC54  F015         	call	_GetSmsSm	;wreg free
  6962                           
  6963                           ;mdm_gsm_gprs.c: 783: SendSmsSm();
  6964  005EC0  ECF9  F00C         	call	_SendSmsSm	;wreg free
  6965                           
  6966                           ;mdm_gsm_gprs.c: 789: }
  6967                           
  6968                           ;mdm_gsm_gprs.c: 788: break;
  6969                           
  6970                           ;mdm_gsm_gprs.c: 787: default:
  6971                           
  6972                           ;mdm_gsm_gprs.c: 784: break;
  6973  005EC4  0012               	return	
  6974  005EC6                     l1107:
  6975  005EC6  0100               	movlb	0	; () banked
  6976  005EC8  51D4               	movf	_SystemState& (0+255),w,b
  6977                           
  6978                           ; Switch size 1, requested type "space"
  6979                           ; Number of cases is 2, Range of values is 0 to 1
  6980                           ; switch strategies available:
  6981                           ; Name         Instructions Cycles
  6982                           ; simple_byte            7     4 (average)
  6983                           ;	Chosen strategy is simple_byte
  6984  005ECA  0A00               	xorlw	0	; case 0
  6985  005ECC  B4D8               	btfsc	status,2,c
  6986  005ECE  D7DD               	goto	l1108
  6987  005ED0  0A01               	xorlw	1	; case 1
  6988  005ED2  A4D8               	btfss	status,2,c
  6989  005ED4  0012               	return	
  6990  005ED6  D7E4               	goto	l1110
  6991  005ED8                     __end_of_Mdm_MainTask:
  6992                           	opt stack 0
  6993                           tosu	equ	0xFFF
  6994                           tosh	equ	0xFFE
  6995                           tosl	equ	0xFFD
  6996                           pclath	equ	0xFFA
  6997                           tblptru	equ	0xFF8
  6998                           tblptrh	equ	0xFF7
  6999                           tblptrl	equ	0xFF6
  7000                           tablat	equ	0xFF5
  7001                           prodh	equ	0xFF4
  7002                           prodl	equ	0xFF3
  7003                           intcon	equ	0xFF2
  7004                           intcon2	equ	0xFF1
  7005                           intcon3	equ	0xFF0
  7006                           postinc0	equ	0xFEE
  7007                           plusw0	equ	0xFEB
  7008                           wreg	equ	0xFE8
  7009                           postinc1	equ	0xFE6
  7010                           postdec1	equ	0xFE5
  7011                           fsr1h	equ	0xFE2
  7012                           fsr1l	equ	0xFE1
  7013                           indf2	equ	0xFDF
  7014                           postinc2	equ	0xFDE
  7015                           postdec2	equ	0xFDD
  7016                           plusw2	equ	0xFDB
  7017                           fsr2h	equ	0xFDA
  7018                           fsr2l	equ	0xFD9
  7019                           status	equ	0xFD8
  7020                           
  7021 ;; *************** function _I2cSlv_MainTask *****************
  7022 ;; Defined at:
  7023 ;;		line 215 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
  7024 ;; Parameters:    Size  Location     Type
  7025 ;;  Options         1    wreg     unsigned char 
  7026 ;; Auto vars:     Size  Location     Type
  7027 ;;  Options         1    0[COMRAM] unsigned char 
  7028 ;; Return value:  Size  Location     Type
  7029 ;;                  1    wreg      void 
  7030 ;; Registers used:
  7031 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7032 ;; Tracked objects:
  7033 ;;		On entry : 0/0
  7034 ;;		On exit  : 0/0
  7035 ;;		Unchanged: 0/0
  7036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7037 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7038 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7040 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7041 ;;Total ram usage:        0 bytes
  7042 ;; Hardware stack levels used:    1
  7043 ;; Hardware stack levels required when called:   14
  7044 ;; This function calls:
  7045 ;;		_I2cSendMsgSm
  7046 ;;		_I2cSetConfig
  7047 ;;		_I2c_InitI2cModule
  7048 ;;		_OsAlrm_SetOsAlarm
  7049 ;; This function is called by:
  7050 ;;		_InitializeTasks
  7051 ;;		_ScheduleTasks
  7052 ;; This function uses a non-reentrant model
  7053 ;;
  7054                           
  7055                           	psect	text23
  7056  005BF0                     __ptext23:
  7057                           	opt stack 0
  7058  005BF0                     _I2cSlv_MainTask:
  7059                           	opt stack 14
  7060                           
  7061                           ;i2c_slv.c: 217: switch (SystemState)
  7062                           
  7063                           ;incstack = 0
  7064  005BF0  D020               	goto	l1404
  7065  005BF2                     
  7066                           ;i2c_slv.c: 222: I2cSetConfig();
  7067  005BF2  ECA8  F033         	call	_I2cSetConfig	;wreg free
  7068                           
  7069                           ;i2c_slv.c: 224: I2c_InitI2cModule(&I2cConfig);
  7070  005BF6  0E4F               	movlw	low _I2cConfig
  7071  005BF8  0100               	movlb	0	; () banked
  7072  005BFA  6FA2               	movwf	I2c_InitI2cModule@I2cConfig& (0+255),b
  7073  005BFC  0E03               	movlw	high _I2cConfig
  7074  005BFE  6FA3               	movwf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),b
  7075  005C00  ECB7  F02A         	call	_I2c_InitI2cModule	;wreg free
  7076                           
  7077                           ;i2c_slv.c: 226: OsAlrm_SetOsAlarm(0x00,50,&I2cDummyTx);
  7078  005C04  0E00               	movlw	0
  7079  005C06  0100               	movlb	0	; () banked
  7080  005C08  6F84               	movwf	(OsAlrm_SetOsAlarm@OsAlarmId+1)& (0+255),b
  7081  005C0A  0E00               	movlw	0
  7082  005C0C  6F83               	movwf	OsAlrm_SetOsAlarm@OsAlarmId& (0+255),b
  7083  005C0E  0E32               	movlw	50
  7084  005C10  6F85               	movwf	OsAlrm_SetOsAlarm@OsAlarmTimeout& (0+255),b
  7085  005C12  0E00               	movlw	0
  7086  005C14  6F86               	movwf	(OsAlrm_SetOsAlarm@OsAlarmTimeout+1)& (0+255),b
  7087  005C16  0E00               	movlw	0
  7088  005C18  6F87               	movwf	(OsAlrm_SetOsAlarm@OsAlarmTimeout+2)& (0+255),b
  7089  005C1A  0E00               	movlw	0
  7090  005C1C  6F88               	movwf	(OsAlrm_SetOsAlarm@OsAlarmTimeout+3)& (0+255),b
  7091  005C1E  0E50               	movlw	low _I2cDummyTx
  7092  005C20  6F89               	movwf	OsAlrm_SetOsAlarm@AlarmCallback& (0+255),b
  7093  005C22  0E6A               	movlw	high _I2cDummyTx
  7094  005C24  6F8A               	movwf	(OsAlrm_SetOsAlarm@AlarmCallback+1)& (0+255),b
  7095  005C26  ECDD  F020         	call	_OsAlrm_SetOsAlarm	;wreg free
  7096                           
  7097                           ;i2c_slv.c: 227: break;
  7098  005C2A  0012               	return	
  7099  005C2C                     
  7100                           ;i2c_slv.c: 232: I2cSendMsgSm();
  7101  005C2C  EC41  F021         	call	_I2cSendMsgSm	;wreg free
  7102                           
  7103                           ;i2c_slv.c: 238: }
  7104                           
  7105                           ;i2c_slv.c: 237: break;
  7106                           
  7107                           ;i2c_slv.c: 236: default:
  7108                           
  7109                           ;i2c_slv.c: 233: break;
  7110  005C30  0012               	return	
  7111  005C32                     l1404:
  7112  005C32  0100               	movlb	0	; () banked
  7113  005C34  51D4               	movf	_SystemState& (0+255),w,b
  7114                           
  7115                           ; Switch size 1, requested type "space"
  7116                           ; Number of cases is 2, Range of values is 0 to 1
  7117                           ; switch strategies available:
  7118                           ; Name         Instructions Cycles
  7119                           ; simple_byte            7     4 (average)
  7120                           ;	Chosen strategy is simple_byte
  7121  005C36  0A00               	xorlw	0	; case 0
  7122  005C38  B4D8               	btfsc	status,2,c
  7123  005C3A  D7DB               	goto	l1405
  7124  005C3C  0A01               	xorlw	1	; case 1
  7125  005C3E  A4D8               	btfss	status,2,c
  7126  005C40  0012               	return	
  7127  005C42  D7F4               	goto	l1407
  7128  005C44                     __end_of_I2cSlv_MainTask:
  7129                           	opt stack 0
  7130                           tosu	equ	0xFFF
  7131                           tosh	equ	0xFFE
  7132                           tosl	equ	0xFFD
  7133                           pclath	equ	0xFFA
  7134                           tblptru	equ	0xFF8
  7135                           tblptrh	equ	0xFF7
  7136                           tblptrl	equ	0xFF6
  7137                           tablat	equ	0xFF5
  7138                           prodh	equ	0xFF4
  7139                           prodl	equ	0xFF3
  7140                           intcon	equ	0xFF2
  7141                           intcon2	equ	0xFF1
  7142                           intcon3	equ	0xFF0
  7143                           postinc0	equ	0xFEE
  7144                           plusw0	equ	0xFEB
  7145                           wreg	equ	0xFE8
  7146                           postinc1	equ	0xFE6
  7147                           postdec1	equ	0xFE5
  7148                           fsr1h	equ	0xFE2
  7149                           fsr1l	equ	0xFE1
  7150                           indf2	equ	0xFDF
  7151                           postinc2	equ	0xFDE
  7152                           postdec2	equ	0xFDD
  7153                           plusw2	equ	0xFDB
  7154                           fsr2h	equ	0xFDA
  7155                           fsr2l	equ	0xFD9
  7156                           status	equ	0xFD8
  7157                           
  7158 ;; *************** function _Mdm_DrvMainFn *****************
  7159 ;; Defined at:
  7160 ;;		line 304 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mdm_drv.c"
  7161 ;; Parameters:    Size  Location     Type
  7162 ;;  Options         1    wreg     unsigned char 
  7163 ;; Auto vars:     Size  Location     Type
  7164 ;;  Options         1    0[COMRAM] unsigned char 
  7165 ;; Return value:  Size  Location     Type
  7166 ;;                  1    wreg      void 
  7167 ;; Registers used:
  7168 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7169 ;; Tracked objects:
  7170 ;;		On entry : 0/0
  7171 ;;		On exit  : 0/0
  7172 ;;		Unchanged: 0/0
  7173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7174 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7175 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7176 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7177 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7178 ;;Total ram usage:        0 bytes
  7179 ;; Hardware stack levels used:    1
  7180 ;; Hardware stack levels required when called:   13
  7181 ;; This function calls:
  7182 ;;		_MdmCntSm
  7183 ;; This function is called by:
  7184 ;;		_InitializeTasks
  7185 ;;		_ScheduleTasks
  7186 ;; This function uses a non-reentrant model
  7187 ;;
  7188                           
  7189                           	psect	text24
  7190  006C9A                     __ptext24:
  7191                           	opt stack 0
  7192  006C9A                     _Mdm_DrvMainFn:
  7193                           	opt stack 15
  7194                           
  7195                           ;mdm_drv.c: 307: MdmCntSm();
  7196                           
  7197                           ;incstack = 0
  7198  006C9A  EC70  F024         	call	_MdmCntSm	;wreg free
  7199  006C9E  0012               	return		;funcret
  7200  006CA0                     __end_of_Mdm_DrvMainFn:
  7201                           	opt stack 0
  7202                           tosu	equ	0xFFF
  7203                           tosh	equ	0xFFE
  7204                           tosl	equ	0xFFD
  7205                           pclath	equ	0xFFA
  7206                           tblptru	equ	0xFF8
  7207                           tblptrh	equ	0xFF7
  7208                           tblptrl	equ	0xFF6
  7209                           tablat	equ	0xFF5
  7210                           prodh	equ	0xFF4
  7211                           prodl	equ	0xFF3
  7212                           intcon	equ	0xFF2
  7213                           intcon2	equ	0xFF1
  7214                           intcon3	equ	0xFF0
  7215                           postinc0	equ	0xFEE
  7216                           plusw0	equ	0xFEB
  7217                           wreg	equ	0xFE8
  7218                           postinc1	equ	0xFE6
  7219                           postdec1	equ	0xFE5
  7220                           fsr1h	equ	0xFE2
  7221                           fsr1l	equ	0xFE1
  7222                           indf2	equ	0xFDF
  7223                           postinc2	equ	0xFDE
  7224                           postdec2	equ	0xFDD
  7225                           plusw2	equ	0xFDB
  7226                           fsr2h	equ	0xFDA
  7227                           fsr2l	equ	0xFD9
  7228                           status	equ	0xFD8
  7229                           
  7230 ;; *************** function _Wdg_MainTask *****************
  7231 ;; Defined at:
  7232 ;;		line 73 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/wdg.c"
  7233 ;; Parameters:    Size  Location     Type
  7234 ;;  Options         1    wreg     unsigned char 
  7235 ;; Auto vars:     Size  Location     Type
  7236 ;;  Options         1    0[COMRAM] unsigned char 
  7237 ;; Return value:  Size  Location     Type
  7238 ;;                  1    wreg      void 
  7239 ;; Registers used:
  7240 ;;		wreg, status,2, status,0, cstack
  7241 ;; Tracked objects:
  7242 ;;		On entry : 0/0
  7243 ;;		On exit  : 0/0
  7244 ;;		Unchanged: 0/0
  7245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7246 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7247 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7248 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7249 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7250 ;;Total ram usage:        0 bytes
  7251 ;; Hardware stack levels used:    1
  7252 ;; Hardware stack levels required when called:   12
  7253 ;; This function calls:
  7254 ;;		_Mcu_ClearWdg
  7255 ;;		_Mcu_SetWdgSts
  7256 ;; This function is called by:
  7257 ;;		_InitializeTasks
  7258 ;;		_ScheduleTasks
  7259 ;; This function uses a non-reentrant model
  7260 ;;
  7261                           
  7262                           	psect	text25
  7263  0068AE                     __ptext25:
  7264                           	opt stack 0
  7265  0068AE                     _Wdg_MainTask:
  7266                           	opt stack 16
  7267                           
  7268                           ;wdg.c: 75: switch (SystemState)
  7269                           
  7270                           ;incstack = 0
  7271  0068AE  D007               	goto	l2510
  7272  0068B0                     
  7273                           ;wdg.c: 80: Mcu_SetWdgSts(1u);
  7274  0068B0  0E01               	movlw	1
  7275  0068B2  ECC4  F035         	call	_Mcu_SetWdgSts
  7276                           
  7277                           ;wdg.c: 81: break;
  7278  0068B6  0012               	return	
  7279  0068B8                     
  7280                           ;wdg.c: 86: Mcu_ClearWdg();
  7281  0068B8  EC50  F036         	call	_Mcu_ClearWdg	;wreg free
  7282                           
  7283                           ;wdg.c: 92: }
  7284                           
  7285                           ;wdg.c: 91: break;
  7286                           
  7287                           ;wdg.c: 90: default:
  7288                           
  7289                           ;wdg.c: 87: break;
  7290  0068BC  0012               	return	
  7291  0068BE                     l2510:
  7292  0068BE  0100               	movlb	0	; () banked
  7293  0068C0  51D4               	movf	_SystemState& (0+255),w,b
  7294                           
  7295                           ; Switch size 1, requested type "space"
  7296                           ; Number of cases is 2, Range of values is 0 to 1
  7297                           ; switch strategies available:
  7298                           ; Name         Instructions Cycles
  7299                           ; simple_byte            7     4 (average)
  7300                           ;	Chosen strategy is simple_byte
  7301  0068C2  0A00               	xorlw	0	; case 0
  7302  0068C4  B4D8               	btfsc	status,2,c
  7303  0068C6  D7F4               	goto	l2511
  7304  0068C8  0A01               	xorlw	1	; case 1
  7305  0068CA  A4D8               	btfss	status,2,c
  7306  0068CC  0012               	return	
  7307  0068CE  D7F4               	goto	l2513
  7308  0068D0                     __end_of_Wdg_MainTask:
  7309                           	opt stack 0
  7310                           tosu	equ	0xFFF
  7311                           tosh	equ	0xFFE
  7312                           tosl	equ	0xFFD
  7313                           pclath	equ	0xFFA
  7314                           tblptru	equ	0xFF8
  7315                           tblptrh	equ	0xFF7
  7316                           tblptrl	equ	0xFF6
  7317                           tablat	equ	0xFF5
  7318                           prodh	equ	0xFF4
  7319                           prodl	equ	0xFF3
  7320                           intcon	equ	0xFF2
  7321                           intcon2	equ	0xFF1
  7322                           intcon3	equ	0xFF0
  7323                           postinc0	equ	0xFEE
  7324                           plusw0	equ	0xFEB
  7325                           wreg	equ	0xFE8
  7326                           postinc1	equ	0xFE6
  7327                           postdec1	equ	0xFE5
  7328                           fsr1h	equ	0xFE2
  7329                           fsr1l	equ	0xFE1
  7330                           indf2	equ	0xFDF
  7331                           postinc2	equ	0xFDE
  7332                           postdec2	equ	0xFDD
  7333                           plusw2	equ	0xFDB
  7334                           fsr2h	equ	0xFDA
  7335                           fsr2l	equ	0xFD9
  7336                           status	equ	0xFD8
  7337                           
  7338 ;; *************** function _Mcu_SetWdgSts *****************
  7339 ;; Defined at:
  7340 ;;		line 196 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
  7341 ;; Parameters:    Size  Location     Type
  7342 ;;  WdgSts          1    wreg     unsigned char 
  7343 ;; Auto vars:     Size  Location     Type
  7344 ;;  WdgSts          1   29[BANK0 ] unsigned char 
  7345 ;; Return value:  Size  Location     Type
  7346 ;;                  1    wreg      void 
  7347 ;; Registers used:
  7348 ;;		wreg
  7349 ;; Tracked objects:
  7350 ;;		On entry : 0/0
  7351 ;;		On exit  : 0/0
  7352 ;;		Unchanged: 0/0
  7353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7354 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7355 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7356 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7357 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7358 ;;Total ram usage:        1 bytes
  7359 ;; Hardware stack levels used:    1
  7360 ;; Hardware stack levels required when called:   11
  7361 ;; This function calls:
  7362 ;;		Nothing
  7363 ;; This function is called by:
  7364 ;;		_Wdg_MainTask
  7365 ;; This function uses a non-reentrant model
  7366 ;;
  7367                           
  7368                           	psect	text26
  7369  006B88                     __ptext26:
  7370                           	opt stack 0
  7371  006B88                     _Mcu_SetWdgSts:
  7372                           	opt stack 16
  7373                           
  7374                           ;incstack = 0
  7375                           ;Mcu_SetWdgSts@WdgSts stored from wreg
  7376  006B88  0100               	movlb	0	; () banked
  7377  006B8A  6F7D               	movwf	Mcu_SetWdgSts@WdgSts& (0+255),b
  7378                           
  7379                           ;mcu_drv.c: 199: WDTCONbits.SWDTEN = WdgSts;
  7380  006B8C  0100               	movlb	0	; () banked
  7381  006B8E  B17D               	btfsc	Mcu_SetWdgSts@WdgSts& (0+255),0,b
  7382  006B90  D002               	bra	u14815
  7383  006B92  90C0               	bcf	4032,0,c	;volatile
  7384  006B94  D001               	bra	u14816
  7385  006B96                     u14815:
  7386  006B96  80C0               	bsf	4032,0,c	;volatile
  7387  006B98                     u14816:
  7388  006B98  0012               	return		;funcret
  7389  006B9A                     __end_of_Mcu_SetWdgSts:
  7390                           	opt stack 0
  7391                           tosu	equ	0xFFF
  7392                           tosh	equ	0xFFE
  7393                           tosl	equ	0xFFD
  7394                           pclath	equ	0xFFA
  7395                           tblptru	equ	0xFF8
  7396                           tblptrh	equ	0xFF7
  7397                           tblptrl	equ	0xFF6
  7398                           tablat	equ	0xFF5
  7399                           prodh	equ	0xFF4
  7400                           prodl	equ	0xFF3
  7401                           intcon	equ	0xFF2
  7402                           intcon2	equ	0xFF1
  7403                           intcon3	equ	0xFF0
  7404                           postinc0	equ	0xFEE
  7405                           plusw0	equ	0xFEB
  7406                           wreg	equ	0xFE8
  7407                           postinc1	equ	0xFE6
  7408                           postdec1	equ	0xFE5
  7409                           fsr1h	equ	0xFE2
  7410                           fsr1l	equ	0xFE1
  7411                           indf2	equ	0xFDF
  7412                           postinc2	equ	0xFDE
  7413                           postdec2	equ	0xFDD
  7414                           plusw2	equ	0xFDB
  7415                           fsr2h	equ	0xFDA
  7416                           fsr2l	equ	0xFD9
  7417                           status	equ	0xFD8
  7418                           
  7419 ;; *************** function _Mcu_ClearWdg *****************
  7420 ;; Defined at:
  7421 ;;		line 210 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
  7422 ;; Parameters:    Size  Location     Type
  7423 ;;		None
  7424 ;; Auto vars:     Size  Location     Type
  7425 ;;		None
  7426 ;; Return value:  Size  Location     Type
  7427 ;;                  1    wreg      void 
  7428 ;; Registers used:
  7429 ;;		None
  7430 ;; Tracked objects:
  7431 ;;		On entry : 0/0
  7432 ;;		On exit  : 0/0
  7433 ;;		Unchanged: 0/0
  7434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7435 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7436 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7438 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7439 ;;Total ram usage:        0 bytes
  7440 ;; Hardware stack levels used:    1
  7441 ;; Hardware stack levels required when called:   11
  7442 ;; This function calls:
  7443 ;;		Nothing
  7444 ;; This function is called by:
  7445 ;;		_Wdg_MainTask
  7446 ;; This function uses a non-reentrant model
  7447 ;;
  7448                           
  7449                           	psect	text27
  7450  006CA0                     __ptext27:
  7451                           	opt stack 0
  7452  006CA0                     _Mcu_ClearWdg:
  7453                           	opt stack 16
  7454                           
  7455                           ;incstack = 0
  7456  006CA0  0004               	clrwdt		;# 
  7457  006CA2  0012               	return		;funcret
  7458  006CA4                     __end_of_Mcu_ClearWdg:
  7459                           	opt stack 0
  7460                           tosu	equ	0xFFF
  7461                           tosh	equ	0xFFE
  7462                           tosl	equ	0xFFD
  7463                           pclath	equ	0xFFA
  7464                           tblptru	equ	0xFF8
  7465                           tblptrh	equ	0xFF7
  7466                           tblptrl	equ	0xFF6
  7467                           tablat	equ	0xFF5
  7468                           prodh	equ	0xFF4
  7469                           prodl	equ	0xFF3
  7470                           intcon	equ	0xFF2
  7471                           intcon2	equ	0xFF1
  7472                           intcon3	equ	0xFF0
  7473                           postinc0	equ	0xFEE
  7474                           plusw0	equ	0xFEB
  7475                           wreg	equ	0xFE8
  7476                           postinc1	equ	0xFE6
  7477                           postdec1	equ	0xFE5
  7478                           fsr1h	equ	0xFE2
  7479                           fsr1l	equ	0xFE1
  7480                           indf2	equ	0xFDF
  7481                           postinc2	equ	0xFDE
  7482                           postdec2	equ	0xFDD
  7483                           plusw2	equ	0xFDB
  7484                           fsr2h	equ	0xFDA
  7485                           fsr2l	equ	0xFD9
  7486                           status	equ	0xFD8
  7487                           
  7488 ;; *************** function _USBDeviceTasks *****************
  7489 ;; Defined at:
  7490 ;;		line 495 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  7491 ;; Parameters:    Size  Location     Type
  7492 ;;		None
  7493 ;; Auto vars:     Size  Location     Type
  7494 ;;  i               1   56[BANK0 ] unsigned char 
  7495 ;; Return value:  Size  Location     Type
  7496 ;;                  1    wreg      void 
  7497 ;; Registers used:
  7498 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7499 ;; Tracked objects:
  7500 ;;		On entry : 0/0
  7501 ;;		On exit  : 0/0
  7502 ;;		Unchanged: 0/0
  7503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7504 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7505 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7507 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7508 ;;Total ram usage:        1 bytes
  7509 ;; Hardware stack levels used:    1
  7510 ;; Hardware stack levels required when called:   19
  7511 ;; This function calls:
  7512 ;;		_USBCtrlEPAllowStatusStage
  7513 ;;		_USBCtrlEPService
  7514 ;;		_USBDeviceInit
  7515 ;;		_USBIncrement1msInternalTimers
  7516 ;;		_USBStallHandler
  7517 ;;		_USBSuspend
  7518 ;;		_USBWakeFromSuspend
  7519 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7520 ;; This function is called by:
  7521 ;;		_UsbDevice_MainTask
  7522 ;; This function uses a non-reentrant model
  7523 ;;
  7524                           
  7525                           	psect	text28
  7526  001BAA                     __ptext28:
  7527                           	opt stack 0
  7528  001BAA                     _USBDeviceTasks:
  7529                           	opt stack 8
  7530                           
  7531                           ;usb_device.c: 562: }
  7532                           ;usb_device.c: 584: if(USBDeviceState == DETACHED_STATE)
  7533                           
  7534                           ; BSR set to: 0
  7535                           
  7536                           ; BSR set to: 0
  7537                           ;usb_device.c: 561: return;
  7538                           
  7539                           ; BSR set to: 0
  7540                           ;usb_device.c: 560: {PIR2bits.USBIF = 0;};
  7541                           
  7542                           ;usb_device.c: 532: USBDeviceState = DETACHED_STATE;
  7543                           
  7544                           ;usb_device.c: 529: UIE = 0;
  7545                           
  7546                           ;usb_device.c: 524: {
  7547                           ;usb_device.c: 526: UCON = 0;
  7548                           
  7549                           ;usb_device.c: 497: uint8_t i;
  7550                           ;usb_device.c: 523: if (1 != 1)
  7551                           
  7552                           ;incstack = 0
  7553  001BAA  0100               	movlb	0	; () banked
  7554  001BAC  51CE               	movf	_USBDeviceState& (0+255),w,b
  7555  001BAE  A4D8               	btfss	status,2,c
  7556  001BB0  D012               	goto	l1615
  7557                           
  7558                           ; BSR set to: 0
  7559                           ;usb_device.c: 585: {
  7560                           ;usb_device.c: 587: UCON = 0;
  7561  001BB2  0E00               	movlw	0
  7562  001BB4  6E65               	movwf	3941,c	;volatile
  7563                           
  7564                           ;usb_device.c: 590: UIE = 0;
  7565  001BB6  0E00               	movlw	0
  7566  001BB8  010F               	movlb	15	; () banked
  7567  001BBA  6F36               	movwf	54,b	;volatile
  7568                           
  7569                           ;usb_device.c: 594: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  7570  001BBC  0E16               	movlw	22
  7571  001BBE  6F39               	movwf	57,b	;volatile
  7572  001BC0  0E9F               	movlw	159
  7573  001BC2  6F37               	movwf	55,b	;volatile
  7574  001BC4  0E7B               	movlw	123
  7575  001BC6  6F36               	movwf	54,b	;volatile
  7576                           
  7577                           ;usb_device.c: 597: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
  7578  001BC8  D001               	goto	l1616
  7579  001BCA                     l1617:
  7580  001BCA  8665               	bsf	3941,3,c	;volatile
  7581  001BCC                     l1616:
  7582  001BCC  A665               	btfss	3941,3,c	;volatile
  7583  001BCE  D7FD               	goto	l1617
  7584                           
  7585                           ;usb_device.c: 600: USBDeviceState = ATTACHED_STATE;
  7586  001BD0  0E01               	movlw	1
  7587  001BD2  0100               	movlb	0	; () banked
  7588  001BD4  6FCE               	movwf	_USBDeviceState& (0+255),b
  7589  001BD6                     l1615:
  7590                           
  7591                           ; BSR set to: 0
  7592                           ;usb_device.c: 605: }
  7593                           ;usb_device.c: 608: if(USBDeviceState == ATTACHED_STATE)
  7594                           
  7595                           ; BSR set to: 0
  7596  001BD6  05CE               	decf	_USBDeviceState& (0+255),w,b
  7597  001BD8  B4D8               	btfsc	status,2,c
  7598                           
  7599                           ; BSR set to: 0
  7600                           ;usb_device.c: 609: {
  7601                           ;usb_device.c: 619: if(!UCONbits.SE0)
  7602  001BDA  BA65               	btfsc	3941,5,c	;volatile
  7603  001BDC  D00A               	goto	l1620
  7604                           
  7605                           ; BSR set to: 0
  7606                           ;usb_device.c: 620: {
  7607                           ;usb_device.c: 626: {UIR = 0;};
  7608  001BDE  0E00               	movlw	0
  7609  001BE0  6E62               	movwf	3938,c	;volatile
  7610                           
  7611                           ;usb_device.c: 630: UIE=0;
  7612  001BE2  0E00               	movlw	0
  7613  001BE4  010F               	movlb	15	; () banked
  7614  001BE6  6F36               	movwf	54,b	;volatile
  7615                           
  7616                           ; BSR set to: 15
  7617                           ;usb_device.c: 632: UIEbits.URSTIE = 1;
  7618  001BE8  8136               	bsf	54,0,b	;volatile
  7619                           
  7620                           ; BSR set to: 15
  7621                           ;usb_device.c: 633: UIEbits.IDLEIE = 1;
  7622  001BEA  8936               	bsf	54,4,b	;volatile
  7623                           
  7624                           ;usb_device.c: 634: USBDeviceState = POWERED_STATE;
  7625  001BEC  0E02               	movlw	2
  7626  001BEE  0100               	movlb	0	; () banked
  7627  001BF0  6FCE               	movwf	_USBDeviceState& (0+255),b
  7628  001BF2                     l1620:
  7629                           
  7630                           ; BSR set to: 0
  7631                           ;usb_device.c: 635: }
  7632                           ;usb_device.c: 636: }
  7633                           ;usb_device.c: 652: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
  7634                           
  7635                           ; BSR set to: 0
  7636                           
  7637                           ; BSR set to: 0
  7638  001BF2  A462               	btfss	3938,2,c	;volatile
  7639  001BF4  D006               	goto	l1621
  7640                           
  7641                           ; BSR set to: 0
  7642  001BF6  010F               	movlb	15	; () banked
  7643  001BF8  A536               	btfss	54,2,b	;volatile
  7644  001BFA  D003               	goto	l1621
  7645                           
  7646                           ; BSR set to: 15
  7647                           ;usb_device.c: 653: {
  7648                           ;usb_device.c: 654: (UIR &= 0xFB);
  7649  001BFC  9462               	bcf	3938,2,c	;volatile
  7650                           
  7651                           ; BSR set to: 15
  7652                           ;usb_device.c: 658: USBWakeFromSuspend();
  7653  001BFE  EC43  F032         	call	_USBWakeFromSuspend	;wreg free
  7654  001C02                     l1621:
  7655                           
  7656                           ;usb_device.c: 660: }
  7657                           ;usb_device.c: 665: if(UCONbits.SUSPND==1)
  7658  001C02  A265               	btfss	3941,1,c	;volatile
  7659  001C04  D002               	goto	l1622
  7660                           
  7661                           ;usb_device.c: 666: {
  7662                           ;usb_device.c: 667: {PIR2bits.USBIF = 0;};
  7663  001C06  98A1               	bcf	4001,4,c	;volatile
  7664                           
  7665                           ;usb_device.c: 668: return;
  7666  001C08  0012               	return	
  7667  001C0A                     l1622:
  7668                           
  7669                           ;usb_device.c: 669: }
  7670                           ;usb_device.c: 681: if(UIRbits.URSTIF && UIEbits.URSTIE)
  7671  001C0A  A062               	btfss	3938,0,c	;volatile
  7672  001C0C  D009               	goto	l1623
  7673  001C0E  010F               	movlb	15	; () banked
  7674  001C10  A136               	btfss	54,0,b	;volatile
  7675  001C12  D006               	goto	l1623
  7676                           
  7677                           ; BSR set to: 15
  7678                           ;usb_device.c: 682: {
  7679                           ;usb_device.c: 683: USBDeviceInit();
  7680  001C14  ECC8  F012         	call	_USBDeviceInit	;wreg free
  7681                           
  7682                           ;usb_device.c: 687: ;
  7683                           ;usb_device.c: 689: USBDeviceState = DEFAULT_STATE;
  7684  001C18  0E04               	movlw	4
  7685  001C1A  0100               	movlb	0	; () banked
  7686  001C1C  6FCE               	movwf	_USBDeviceState& (0+255),b
  7687                           
  7688                           ; BSR set to: 0
  7689                           ;usb_device.c: 699: (UIR &= 0xFE);
  7690  001C1E  9062               	bcf	3938,0,c	;volatile
  7691  001C20                     l1623:
  7692                           
  7693                           ;usb_device.c: 700: }
  7694                           ;usb_device.c: 705: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
  7695                           
  7696                           ; BSR set to: 0
  7697  001C20  A862               	btfss	3938,4,c	;volatile
  7698  001C22  D004               	goto	l1624
  7699  001C24  010F               	movlb	15	; () banked
  7700  001C26  B936               	btfsc	54,4,b	;volatile
  7701                           
  7702                           ; BSR set to: 15
  7703                           ;usb_device.c: 706: {
  7704                           ;usb_device.c: 712: USBSuspend();
  7705  001C28  ECE8  F032         	call	_USBSuspend	;wreg free
  7706  001C2C                     l1624:
  7707                           
  7708                           ;usb_device.c: 714: }
  7709                           ;usb_device.c: 726: if(UIRbits.SOFIF)
  7710  001C2C  AC62               	btfss	3938,6,c	;volatile
  7711  001C2E  D01C               	goto	l1628
  7712                           
  7713                           ;usb_device.c: 727: {
  7714                           ;usb_device.c: 729: if(UIEbits.SOFIE)
  7715  001C30  010F               	movlb	15	; () banked
  7716  001C32  AD36               	btfss	54,6,b	;volatile
  7717  001C34  D00F               	goto	l1626
  7718                           
  7719                           ; BSR set to: 15
  7720                           ;usb_device.c: 730: {
  7721                           ;usb_device.c: 731: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
  7722  001C36  0E00               	movlw	0
  7723  001C38  0100               	movlb	0	; () banked
  7724  001C3A  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  7725  001C3C  0E73               	movlw	115
  7726  001C3E  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  7727  001C40  0E00               	movlw	0
  7728  001C42  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  7729  001C44  0E00               	movlw	0
  7730  001C46  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  7731  001C48  0E00               	movlw	0
  7732  001C4A  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  7733  001C4C  0E01               	movlw	1
  7734  001C4E  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  7735  001C50  EC91  F02C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7736  001C54                     l1626:
  7737                           
  7738                           ;usb_device.c: 732: }
  7739                           ;usb_device.c: 733: (UIR &= 0xBF);
  7740  001C54  9C62               	bcf	3938,6,c	;volatile
  7741                           
  7742                           ;usb_device.c: 736: USBIncrement1msInternalTimers();
  7743  001C56  EC68  F034         	call	_USBIncrement1msInternalTimers	;wreg free
  7744                           
  7745                           ;usb_device.c: 753: if(USBStatusStageTimeoutCounter != 0u)
  7746  001C5A  5029               	movf	_USBStatusStageTimeoutCounter,w,c
  7747  001C5C  A4D8               	btfss	status,2,c
  7748                           
  7749                           ;usb_device.c: 754: {
  7750                           ;usb_device.c: 755: USBStatusStageTimeoutCounter--;
  7751  001C5E  0629               	decf	_USBStatusStageTimeoutCounter,f,c
  7752                           
  7753                           ;usb_device.c: 756: }
  7754                           ;usb_device.c: 762: if(USBStatusStageTimeoutCounter == 0)
  7755  001C60  5029               	movf	_USBStatusStageTimeoutCounter,w,c
  7756  001C62  B4D8               	btfsc	status,2,c
  7757                           
  7758                           ;usb_device.c: 763: {
  7759                           ;usb_device.c: 764: USBCtrlEPAllowStatusStage();
  7760  001C64  EC4A  F01F         	call	_USBCtrlEPAllowStatusStage	;wreg free
  7761  001C68                     l1628:
  7762                           
  7763                           ;usb_device.c: 765: }
  7764                           ;usb_device.c: 767: }
  7765                           ;usb_device.c: 769: if(UIRbits.STALLIF && UIEbits.STALLIE)
  7766  001C68  AA62               	btfss	3938,5,c	;volatile
  7767  001C6A  D004               	goto	l1629
  7768  001C6C  010F               	movlb	15	; () banked
  7769  001C6E  BB36               	btfsc	54,5,b	;volatile
  7770                           
  7771                           ; BSR set to: 15
  7772                           ;usb_device.c: 770: {
  7773                           ;usb_device.c: 771: USBStallHandler();
  7774  001C70  ECC0  F030         	call	_USBStallHandler	;wreg free
  7775  001C74                     l1629:
  7776                           
  7777                           ;usb_device.c: 772: }
  7778                           ;usb_device.c: 774: if(UIRbits.UERRIF && UIEbits.UERRIE)
  7779  001C74  A262               	btfss	3938,1,c	;volatile
  7780  001C76  D013               	goto	l1630
  7781  001C78  010F               	movlb	15	; () banked
  7782  001C7A  A336               	btfss	54,1,b	;volatile
  7783  001C7C  D010               	goto	l1630
  7784                           
  7785                           ; BSR set to: 15
  7786                           ;usb_device.c: 775: {
  7787                           ;usb_device.c: 776: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
  7788  001C7E  0E7F               	movlw	127
  7789  001C80  0100               	movlb	0	; () banked
  7790  001C82  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  7791  001C84  6989               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  7792  001C86  0E00               	movlw	0
  7793  001C88  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  7794  001C8A  0E00               	movlw	0
  7795  001C8C  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  7796  001C8E  0E00               	movlw	0
  7797  001C90  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  7798  001C92  0E01               	movlw	1
  7799  001C94  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  7800  001C96  EC91  F02C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7801                           
  7802                           ;usb_device.c: 777: {UEIR = 0;};
  7803  001C9A  0E00               	movlw	0
  7804  001C9C  6E63               	movwf	3939,c	;volatile
  7805  001C9E                     l1630:
  7806                           
  7807                           ;usb_device.c: 785: }
  7808                           ;usb_device.c: 792: if(USBDeviceState < DEFAULT_STATE)
  7809  001C9E  0E04               	movlw	4
  7810  001CA0  0100               	movlb	0	; () banked
  7811  001CA2  61CE               	cpfslt	_USBDeviceState& (0+255),b
  7812  001CA4  D002               	goto	l1631
  7813                           
  7814                           ; BSR set to: 0
  7815                           ;usb_device.c: 793: {
  7816                           ;usb_device.c: 794: {PIR2bits.USBIF = 0;};
  7817  001CA6  98A1               	bcf	4001,4,c	;volatile
  7818                           
  7819                           ;usb_device.c: 795: return;
  7820  001CA8  0012               	return	
  7821  001CAA                     l1631:
  7822                           
  7823                           ; BSR set to: 0
  7824                           ;usb_device.c: 796: }
  7825                           ;usb_device.c: 801: if(UIEbits.TRNIE)
  7826  001CAA  010F               	movlb	15	; () banked
  7827  001CAC  A736               	btfss	54,3,b	;volatile
  7828  001CAE  D03E               	goto	u15770
  7829                           
  7830                           ; BSR set to: 15
  7831                           ;usb_device.c: 802: {
  7832                           ;usb_device.c: 803: for(i = 0; i < 4u; i++)
  7833  001CB0  0E00               	movlw	0
  7834  001CB2  0100               	movlb	0	; () banked
  7835  001CB4  6F98               	movwf	USBDeviceTasks@i& (0+255),b
  7836  001CB6                     l16093:
  7837                           
  7838                           ; BSR set to: 0
  7839  001CB6  0E03               	movlw	3
  7840  001CB8  6598               	cpfsgt	USBDeviceTasks@i& (0+255),b
  7841  001CBA  D001               	goto	l1633
  7842  001CBC  D037               	goto	u15770
  7843  001CBE                     l1633:
  7844                           
  7845                           ; BSR set to: 0
  7846                           ;usb_device.c: 804: {
  7847                           ;usb_device.c: 805: if(UIRbits.TRNIF)
  7848  001CBE  A662               	btfss	3938,3,c	;volatile
  7849  001CC0  D035               	goto	u15770
  7850                           
  7851                           ; BSR set to: 0
  7852                           ;usb_device.c: 806: {
  7853                           ;usb_device.c: 808: USTATcopy.Val = USTAT;
  7854  001CC2  CF64 F0D5          	movff	3940,_USTATcopy	;volatile
  7855                           
  7856                           ; BSR set to: 0
  7857                           ;usb_device.c: 809: endpoint_number = USTATcopy.endpoint_number;
  7858  001CC6  31D5               	rrcf	_USTATcopy& (0+255),w,b
  7859  001CC8  32E8               	rrcf	wreg,f,c
  7860  001CCA  32E8               	rrcf	wreg,f,c
  7861  001CCC  0B0F               	andlw	15
  7862  001CCE  6FCB               	movwf	_endpoint_number& (0+255),b
  7863                           
  7864                           ; BSR set to: 0
  7865                           ;usb_device.c: 811: (UIR &= 0xF7);
  7866  001CD0  9662               	bcf	3938,3,c	;volatile
  7867                           
  7868                           ; BSR set to: 0
  7869                           ;usb_device.c: 816: if(USTATcopy.direction == 0)
  7870  001CD2  B5D5               	btfsc	_USTATcopy& (0+255),2,b
  7871  001CD4  D007               	goto	l1636
  7872                           
  7873                           ; BSR set to: 0
  7874                           ;usb_device.c: 817: {
  7875                           ;usb_device.c: 818: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
  7876  001CD6  51CB               	movf	_endpoint_number& (0+255),w,b
  7877  001CD8  0D01               	mullw	1
  7878  001CDA  0ECF               	movlw	low _ep_data_out
  7879  001CDC  24F3               	addwf	prodl,w,c
  7880  001CDE  6ED9               	movwf	fsr2l,c
  7881  001CE0  0E02               	movlw	high _ep_data_out
  7882  001CE2  D007               	goto	L3
  7883  001CE4                     l1636:
  7884                           
  7885                           ;usb_device.c: 820: else
  7886                           ;usb_device.c: 821: {
  7887                           ;usb_device.c: 822: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
  7888                           
  7889                           ; BSR set to: 2
  7890  001CE4  0100               	movlb	0	; () banked
  7891  001CE6  51CB               	movf	_endpoint_number& (0+255),w,b
  7892  001CE8  0D01               	mullw	1
  7893  001CEA  0ED2               	movlw	low _ep_data_in
  7894  001CEC  24F3               	addwf	prodl,w,c
  7895  001CEE  6ED9               	movwf	fsr2l,c
  7896  001CF0  0E02               	movlw	high _ep_data_in
  7897  001CF2                     L3:
  7898  001CF2  20F4               	addwfc	prodh,w,c
  7899  001CF4  6EDA               	movwf	fsr2h,c
  7900  001CF6  0102               	movlb	2	; () banked
  7901  001CF8  70DF               	btg	indf2,0,c
  7902                           
  7903                           ; BSR set to: 2
  7904                           ;usb_device.c: 823: }
  7905                           ;usb_device.c: 828: if(endpoint_number == 0)
  7906                           
  7907                           ; BSR set to: 2
  7908  001CFA  0100               	movlb	0	; () banked
  7909  001CFC  51CB               	movf	_endpoint_number& (0+255),w,b
  7910  001CFE  A4D8               	btfss	status,2,c
  7911  001D00  D003               	goto	l1638
  7912                           
  7913                           ; BSR set to: 0
  7914                           ;usb_device.c: 829: {
  7915                           ;usb_device.c: 830: USBCtrlEPService();
  7916  001D02  EC83  F027         	call	_USBCtrlEPService	;wreg free
  7917                           
  7918                           ;usb_device.c: 831: }
  7919  001D06  D00F               	goto	l1640
  7920  001D08                     l1638:
  7921                           
  7922                           ;usb_device.c: 832: else
  7923                           ;usb_device.c: 833: {
  7924                           ;usb_device.c: 834: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
  7925  001D08  0E00               	movlw	0
  7926  001D0A  0100               	movlb	0	; () banked
  7927  001D0C  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  7928  001D0E  0E72               	movlw	114
  7929  001D10  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  7930  001D12  0ED5               	movlw	low _USTATcopy
  7931  001D14  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  7932  001D16  0E00               	movlw	high _USTATcopy
  7933  001D18  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  7934  001D1A  0E00               	movlw	0
  7935  001D1C  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  7936  001D1E  0E00               	movlw	0
  7937  001D20  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  7938  001D22  EC91  F02C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7939  001D26                     l1640:
  7940  001D26  0100               	movlb	0	; () banked
  7941  001D28  2B98               	incf	USBDeviceTasks@i& (0+255),f,b
  7942  001D2A  D7C5               	goto	l16093
  7943  001D2C                     u15770:
  7944                           
  7945                           ;usb_device.c: 840: }
  7946                           ;usb_device.c: 841: }
  7947                           ;usb_device.c: 842: }
  7948                           ;usb_device.c: 844: {PIR2bits.USBIF = 0;};
  7949                           
  7950                           ; BSR set to: 0
  7951  001D2C  98A1               	bcf	4001,4,c	;volatile
  7952  001D2E  0012               	return		;funcret
  7953  001D30                     __end_of_USBDeviceTasks:
  7954                           	opt stack 0
  7955                           tosu	equ	0xFFF
  7956                           tosh	equ	0xFFE
  7957                           tosl	equ	0xFFD
  7958                           pclath	equ	0xFFA
  7959                           tblptru	equ	0xFF8
  7960                           tblptrh	equ	0xFF7
  7961                           tblptrl	equ	0xFF6
  7962                           tablat	equ	0xFF5
  7963                           prodh	equ	0xFF4
  7964                           prodl	equ	0xFF3
  7965                           intcon	equ	0xFF2
  7966                           intcon2	equ	0xFF1
  7967                           intcon3	equ	0xFF0
  7968                           postinc0	equ	0xFEE
  7969                           plusw0	equ	0xFEB
  7970                           wreg	equ	0xFE8
  7971                           postinc1	equ	0xFE6
  7972                           postdec1	equ	0xFE5
  7973                           fsr1h	equ	0xFE2
  7974                           fsr1l	equ	0xFE1
  7975                           indf2	equ	0xFDF
  7976                           postinc2	equ	0xFDE
  7977                           postdec2	equ	0xFDD
  7978                           plusw2	equ	0xFDB
  7979                           fsr2h	equ	0xFDA
  7980                           fsr2l	equ	0xFD9
  7981                           status	equ	0xFD8
  7982                           
  7983 ;; *************** function _USBWakeFromSuspend *****************
  7984 ;; Defined at:
  7985 ;;		line 2321 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  7986 ;; Parameters:    Size  Location     Type
  7987 ;;		None
  7988 ;; Auto vars:     Size  Location     Type
  7989 ;;		None
  7990 ;; Return value:  Size  Location     Type
  7991 ;;                  1    wreg      void 
  7992 ;; Registers used:
  7993 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7994 ;; Tracked objects:
  7995 ;;		On entry : 0/0
  7996 ;;		On exit  : 0/0
  7997 ;;		Unchanged: 0/0
  7998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7999 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8000 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8002 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8003 ;;Total ram usage:        0 bytes
  8004 ;; Hardware stack levels used:    1
  8005 ;; Hardware stack levels required when called:   15
  8006 ;; This function calls:
  8007 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  8008 ;; This function is called by:
  8009 ;;		_USBDeviceTasks
  8010 ;; This function uses a non-reentrant model
  8011 ;;
  8012                           
  8013                           	psect	text29
  8014  006486                     __ptext29:
  8015                           	opt stack 0
  8016  006486                     _USBWakeFromSuspend:
  8017                           	opt stack 11
  8018                           
  8019                           ;usb_device.c: 2323: USBBusIsSuspended = 0;
  8020                           
  8021                           ;incstack = 0
  8022  006486  0E00               	movlw	0
  8023  006488  0101               	movlb	1	; () banked
  8024  00648A  6FDF               	movwf	_USBBusIsSuspended& (0+255),b
  8025                           
  8026                           ; BSR set to: 1
  8027                           ;usb_device.c: 2329: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
  8028  00648C  0E00               	movlw	0
  8029  00648E  0100               	movlb	0	; () banked
  8030  006490  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  8031  006492  0E74               	movlw	116
  8032  006494  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  8033  006496  0E00               	movlw	0
  8034  006498  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  8035  00649A  0E00               	movlw	0
  8036  00649C  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  8037  00649E  0E00               	movlw	0
  8038  0064A0  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  8039  0064A2  0E00               	movlw	0
  8040  0064A4  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  8041  0064A6  EC91  F02C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  8042                           
  8043                           ;usb_device.c: 2336: UCONbits.SUSPND = 0;
  8044  0064AA  9265               	bcf	3941,1,c	;volatile
  8045                           
  8046                           ;usb_device.c: 2341: UIEbits.ACTVIE = 0;
  8047  0064AC  010F               	movlb	15	; () banked
  8048  0064AE  9536               	bcf	54,2,b	;volatile
  8049                           
  8050                           ;usb_device.c: 2359: while(UIRbits.ACTVIF)
  8051  0064B0  D001               	goto	l1768
  8052  0064B2                     
  8053                           ;usb_device.c: 2361: {
  8054                           ;usb_device.c: 2362: (UIR &= 0xFB);
  8055                           
  8056                           ; BSR set to: 15
  8057  0064B2  9462               	bcf	3938,2,c	;volatile
  8058  0064B4                     l1768:
  8059  0064B4  B462               	btfsc	3938,2,c	;volatile
  8060  0064B6  D7FD               	goto	l1769
  8061                           
  8062                           ;usb_device.c: 2363: }
  8063                           ;usb_device.c: 2365: USBTicksSinceSuspendEnd = 0;
  8064  0064B8  0E00               	movlw	0
  8065  0064BA  0101               	movlb	1	; () banked
  8066  0064BC  6FDD               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
  8067                           
  8068                           ; BSR set to: 1
  8069  0064BE  0012               	return		;funcret
  8070  0064C0                     __end_of_USBWakeFromSuspend:
  8071                           	opt stack 0
  8072                           tosu	equ	0xFFF
  8073                           tosh	equ	0xFFE
  8074                           tosl	equ	0xFFD
  8075                           pclath	equ	0xFFA
  8076                           tblptru	equ	0xFF8
  8077                           tblptrh	equ	0xFF7
  8078                           tblptrl	equ	0xFF6
  8079                           tablat	equ	0xFF5
  8080                           prodh	equ	0xFF4
  8081                           prodl	equ	0xFF3
  8082                           intcon	equ	0xFF2
  8083                           intcon2	equ	0xFF1
  8084                           intcon3	equ	0xFF0
  8085                           postinc0	equ	0xFEE
  8086                           plusw0	equ	0xFEB
  8087                           wreg	equ	0xFE8
  8088                           postinc1	equ	0xFE6
  8089                           postdec1	equ	0xFE5
  8090                           fsr1h	equ	0xFE2
  8091                           fsr1l	equ	0xFE1
  8092                           indf2	equ	0xFDF
  8093                           postinc2	equ	0xFDE
  8094                           postdec2	equ	0xFDD
  8095                           plusw2	equ	0xFDB
  8096                           fsr2h	equ	0xFDA
  8097                           fsr2l	equ	0xFD9
  8098                           status	equ	0xFD8
  8099                           
  8100 ;; *************** function _USBSuspend *****************
  8101 ;; Defined at:
  8102 ;;		line 2263 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8103 ;; Parameters:    Size  Location     Type
  8104 ;;		None
  8105 ;; Auto vars:     Size  Location     Type
  8106 ;;		None
  8107 ;; Return value:  Size  Location     Type
  8108 ;;                  1    wreg      void 
  8109 ;; Registers used:
  8110 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8111 ;; Tracked objects:
  8112 ;;		On entry : 0/0
  8113 ;;		On exit  : 0/0
  8114 ;;		Unchanged: 0/0
  8115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8116 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8117 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8118 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8119 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8120 ;;Total ram usage:        0 bytes
  8121 ;; Hardware stack levels used:    1
  8122 ;; Hardware stack levels required when called:   15
  8123 ;; This function calls:
  8124 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  8125 ;; This function is called by:
  8126 ;;		_USBDeviceTasks
  8127 ;; This function uses a non-reentrant model
  8128 ;;
  8129                           
  8130                           	psect	text30
  8131  0065D0                     __ptext30:
  8132                           	opt stack 0
  8133  0065D0                     _USBSuspend:
  8134                           	opt stack 11
  8135                           
  8136                           ;usb_device.c: 2288: UIEbits.ACTVIE = 1;
  8137                           
  8138                           ; BSR set to: 1
  8139                           ;incstack = 0
  8140  0065D0  010F               	movlb	15	; () banked
  8141  0065D2  8536               	bsf	54,2,b	;volatile
  8142                           
  8143                           ; BSR set to: 15
  8144                           ;usb_device.c: 2289: (UIR &= 0xEF);
  8145  0065D4  9862               	bcf	3938,4,c	;volatile
  8146                           
  8147                           ; BSR set to: 15
  8148                           ;usb_device.c: 2292: UCONbits.SUSPND = 1;
  8149  0065D6  8265               	bsf	3941,1,c	;volatile
  8150                           
  8151                           ; BSR set to: 15
  8152                           ;usb_device.c: 2295: USBBusIsSuspended = 1;
  8153  0065D8  0E01               	movlw	1
  8154  0065DA  0101               	movlb	1	; () banked
  8155  0065DC  6FDF               	movwf	_USBBusIsSuspended& (0+255),b
  8156                           
  8157                           ; BSR set to: 1
  8158                           ;usb_device.c: 2296: USBTicksSinceSuspendEnd = 0;
  8159  0065DE  0E00               	movlw	0
  8160  0065E0  6FDD               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
  8161                           
  8162                           ; BSR set to: 1
  8163                           ;usb_device.c: 2303: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
  8164  0065E2  0E00               	movlw	0
  8165  0065E4  0100               	movlb	0	; () banked
  8166  0065E6  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  8167  0065E8  0E75               	movlw	117
  8168  0065EA  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  8169  0065EC  0E00               	movlw	0
  8170  0065EE  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  8171  0065F0  0E00               	movlw	0
  8172  0065F2  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  8173  0065F4  0E00               	movlw	0
  8174  0065F6  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  8175  0065F8  0E00               	movlw	0
  8176  0065FA  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  8177  0065FC  EC91  F02C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  8178  006600  0012               	return		;funcret
  8179  006602                     __end_of_USBSuspend:
  8180                           	opt stack 0
  8181                           tosu	equ	0xFFF
  8182                           tosh	equ	0xFFE
  8183                           tosl	equ	0xFFD
  8184                           pclath	equ	0xFFA
  8185                           tblptru	equ	0xFF8
  8186                           tblptrh	equ	0xFF7
  8187                           tblptrl	equ	0xFF6
  8188                           tablat	equ	0xFF5
  8189                           prodh	equ	0xFF4
  8190                           prodl	equ	0xFF3
  8191                           intcon	equ	0xFF2
  8192                           intcon2	equ	0xFF1
  8193                           intcon3	equ	0xFF0
  8194                           postinc0	equ	0xFEE
  8195                           plusw0	equ	0xFEB
  8196                           wreg	equ	0xFE8
  8197                           postinc1	equ	0xFE6
  8198                           postdec1	equ	0xFE5
  8199                           fsr1h	equ	0xFE2
  8200                           fsr1l	equ	0xFE1
  8201                           indf2	equ	0xFDF
  8202                           postinc2	equ	0xFDE
  8203                           postdec2	equ	0xFDD
  8204                           plusw2	equ	0xFDB
  8205                           fsr2h	equ	0xFDA
  8206                           fsr2l	equ	0xFD9
  8207                           status	equ	0xFD8
  8208                           
  8209 ;; *************** function _USBStallHandler *****************
  8210 ;; Defined at:
  8211 ;;		line 2220 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8212 ;; Parameters:    Size  Location     Type
  8213 ;;		None
  8214 ;; Auto vars:     Size  Location     Type
  8215 ;;		None
  8216 ;; Return value:  Size  Location     Type
  8217 ;;                  1    wreg      void 
  8218 ;; Registers used:
  8219 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8220 ;; Tracked objects:
  8221 ;;		On entry : 0/0
  8222 ;;		On exit  : 0/0
  8223 ;;		Unchanged: 0/0
  8224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8225 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8226 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8227 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8228 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8229 ;;Total ram usage:        1 bytes
  8230 ;; Hardware stack levels used:    1
  8231 ;; Hardware stack levels required when called:   11
  8232 ;; This function calls:
  8233 ;;		Nothing
  8234 ;; This function is called by:
  8235 ;;		_USBDeviceTasks
  8236 ;; This function uses a non-reentrant model
  8237 ;;
  8238                           
  8239                           	psect	text31
  8240  006180                     __ptext31:
  8241                           	opt stack 0
  8242  006180                     _USBStallHandler:
  8243                           	opt stack 15
  8244                           
  8245                           ;usb_device.c: 2232: if(UEP0bits.EPSTALL == 1)
  8246                           
  8247                           ;incstack = 0
  8248  006180  010F               	movlb	15	; () banked
  8249  006182  A126               	btfss	38,0,b	;volatile
  8250  006184  D01D               	goto	l1760
  8251                           
  8252                           ; BSR set to: 15
  8253                           ;usb_device.c: 2233: {
  8254                           ;usb_device.c: 2235: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
  8255  006186  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  8256  00618A  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  8257  00618E  0E80               	movlw	128
  8258  006190  18DE               	xorwf	postinc2,w,c
  8259  006192  A4D8               	btfss	status,2,c
  8260  006194  D014               	goto	l1761
  8261                           
  8262                           ; BSR set to: 15
  8263  006196  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
  8264  00619A  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  8265  00619E  0E84               	movlw	132
  8266  0061A0  18DE               	xorwf	postinc2,w,c
  8267  0061A2  A4D8               	btfss	status,2,c
  8268  0061A4  D00C               	goto	l1761
  8269                           
  8270                           ; BSR set to: 15
  8271                           ;usb_device.c: 2236: {
  8272                           ;usb_device.c: 2238: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  8273  0061A6  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  8274  0061AA  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  8275  0061AE  0E0C               	movlw	12
  8276  0061B0  6EDF               	movwf	indf2,c
  8277                           
  8278                           ; BSR set to: 15
  8279                           ;usb_device.c: 2239: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
  8280  0061B2  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  8281  0061B6  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  8282  0061BA  0E00               	movlw	0
  8283  0061BC  8EDB               	bsf	plusw2,7,c
  8284  0061BE                     l1761:
  8285                           
  8286                           ; BSR set to: 15
  8287                           ;usb_device.c: 2240: }
  8288                           ;usb_device.c: 2241: UEP0bits.EPSTALL = 0;
  8289                           
  8290                           ; BSR set to: 15
  8291  0061BE  9126               	bcf	38,0,b	;volatile
  8292  0061C0                     l1760:
  8293                           
  8294                           ; BSR set to: 15
  8295                           ;usb_device.c: 2242: }
  8296                           ;usb_device.c: 2244: (UIR &= 0xDF);
  8297  0061C0  9A62               	bcf	3938,5,c	;volatile
  8298                           
  8299                           ; BSR set to: 15
  8300  0061C2  0012               	return		;funcret
  8301  0061C4                     __end_of_USBStallHandler:
  8302                           	opt stack 0
  8303                           tosu	equ	0xFFF
  8304                           tosh	equ	0xFFE
  8305                           tosl	equ	0xFFD
  8306                           pclath	equ	0xFFA
  8307                           tblptru	equ	0xFF8
  8308                           tblptrh	equ	0xFF7
  8309                           tblptrl	equ	0xFF6
  8310                           tablat	equ	0xFF5
  8311                           prodh	equ	0xFF4
  8312                           prodl	equ	0xFF3
  8313                           intcon	equ	0xFF2
  8314                           intcon2	equ	0xFF1
  8315                           intcon3	equ	0xFF0
  8316                           postinc0	equ	0xFEE
  8317                           plusw0	equ	0xFEB
  8318                           wreg	equ	0xFE8
  8319                           postinc1	equ	0xFE6
  8320                           postdec1	equ	0xFE5
  8321                           fsr1h	equ	0xFE2
  8322                           fsr1l	equ	0xFE1
  8323                           indf2	equ	0xFDF
  8324                           postinc2	equ	0xFDE
  8325                           postdec2	equ	0xFDD
  8326                           plusw2	equ	0xFDB
  8327                           fsr2h	equ	0xFDA
  8328                           fsr2l	equ	0xFD9
  8329                           status	equ	0xFD8
  8330                           
  8331 ;; *************** function _USBIncrement1msInternalTimers *****************
  8332 ;; Defined at:
  8333 ;;		line 3042 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8334 ;; Parameters:    Size  Location     Type
  8335 ;;		None
  8336 ;; Auto vars:     Size  Location     Type
  8337 ;;		None
  8338 ;; Return value:  Size  Location     Type
  8339 ;;                  1    wreg      void 
  8340 ;; Registers used:
  8341 ;;		wreg, status,2, status,0
  8342 ;; Tracked objects:
  8343 ;;		On entry : 0/0
  8344 ;;		On exit  : 0/0
  8345 ;;		Unchanged: 0/0
  8346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8347 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8348 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8349 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8350 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8351 ;;Total ram usage:        0 bytes
  8352 ;; Hardware stack levels used:    1
  8353 ;; Hardware stack levels required when called:   11
  8354 ;; This function calls:
  8355 ;;		Nothing
  8356 ;; This function is called by:
  8357 ;;		_USBDeviceTasks
  8358 ;; This function uses a non-reentrant model
  8359 ;;
  8360                           
  8361                           	psect	text32
  8362  0068D0                     __ptext32:
  8363                           	opt stack 0
  8364  0068D0                     _USBIncrement1msInternalTimers:
  8365                           	opt stack 15
  8366                           
  8367                           ;usb_device.c: 3050: USB1msTickCount++;
  8368                           
  8369                           ; BSR set to: 15
  8370                           ;incstack = 0
  8371  0068D0  0E01               	movlw	1
  8372  0068D2  0103               	movlb	3	; () banked
  8373  0068D4  2710               	addwf	_USB1msTickCount& (0+255),f,b
  8374  0068D6  0E00               	movlw	0
  8375  0068D8  2311               	addwfc	(_USB1msTickCount+1)& (0+255),f,b
  8376  0068DA  2312               	addwfc	(_USB1msTickCount+2)& (0+255),f,b
  8377  0068DC  2313               	addwfc	(_USB1msTickCount+3)& (0+255),f,b
  8378                           
  8379                           ; BSR set to: 3
  8380                           ;usb_device.c: 3051: if(USBBusIsSuspended == 0)
  8381  0068DE  0101               	movlb	1	; () banked
  8382  0068E0  51DF               	movf	_USBBusIsSuspended& (0+255),w,b
  8383  0068E2  A4D8               	btfss	status,2,c
  8384  0068E4  0012               	return	
  8385                           
  8386                           ; BSR set to: 1
  8387                           ;usb_device.c: 3052: {
  8388                           ;usb_device.c: 3053: USBTicksSinceSuspendEnd++;
  8389  0068E6  2BDD               	incf	_USBTicksSinceSuspendEnd& (0+255),f,b
  8390                           
  8391                           ; BSR set to: 1
  8392                           ;usb_device.c: 3055: if(USBTicksSinceSuspendEnd == 0)
  8393  0068E8  51DD               	movf	_USBTicksSinceSuspendEnd& (0+255),w,b
  8394  0068EA  A4D8               	btfss	status,2,c
  8395  0068EC  0012               	return	
  8396                           
  8397                           ; BSR set to: 1
  8398                           ;usb_device.c: 3056: {
  8399                           ;usb_device.c: 3057: USBTicksSinceSuspendEnd = 255;
  8400  0068EE  69DD               	setf	_USBTicksSinceSuspendEnd& (0+255),b
  8401                           
  8402                           ; BSR set to: 1
  8403  0068F0  0012               	return	
  8404  0068F2                     __end_of_USBIncrement1msInternalTimers:
  8405                           	opt stack 0
  8406                           tosu	equ	0xFFF
  8407                           tosh	equ	0xFFE
  8408                           tosl	equ	0xFFD
  8409                           pclath	equ	0xFFA
  8410                           tblptru	equ	0xFF8
  8411                           tblptrh	equ	0xFF7
  8412                           tblptrl	equ	0xFF6
  8413                           tablat	equ	0xFF5
  8414                           prodh	equ	0xFF4
  8415                           prodl	equ	0xFF3
  8416                           intcon	equ	0xFF2
  8417                           intcon2	equ	0xFF1
  8418                           intcon3	equ	0xFF0
  8419                           postinc0	equ	0xFEE
  8420                           plusw0	equ	0xFEB
  8421                           wreg	equ	0xFE8
  8422                           postinc1	equ	0xFE6
  8423                           postdec1	equ	0xFE5
  8424                           fsr1h	equ	0xFE2
  8425                           fsr1l	equ	0xFE1
  8426                           indf2	equ	0xFDF
  8427                           postinc2	equ	0xFDE
  8428                           postdec2	equ	0xFDD
  8429                           plusw2	equ	0xFDB
  8430                           fsr2h	equ	0xFDA
  8431                           fsr2l	equ	0xFD9
  8432                           status	equ	0xFD8
  8433                           
  8434 ;; *************** function _USBDeviceInit *****************
  8435 ;; Defined at:
  8436 ;;		line 295 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8437 ;; Parameters:    Size  Location     Type
  8438 ;;		None
  8439 ;; Auto vars:     Size  Location     Type
  8440 ;;  i               1   37[BANK0 ] unsigned char 
  8441 ;; Return value:  Size  Location     Type
  8442 ;;                  1    wreg      void 
  8443 ;; Registers used:
  8444 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8445 ;; Tracked objects:
  8446 ;;		On entry : 0/0
  8447 ;;		On exit  : 0/0
  8448 ;;		Unchanged: 0/0
  8449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8450 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8451 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8453 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8454 ;;Total ram usage:        1 bytes
  8455 ;; Hardware stack levels used:    1
  8456 ;; Hardware stack levels required when called:   12
  8457 ;; This function calls:
  8458 ;;		_memset
  8459 ;; This function is called by:
  8460 ;;		_USBDeviceTasks
  8461 ;;		_UsbDevice_MainTask
  8462 ;; This function uses a non-reentrant model
  8463 ;;
  8464                           
  8465                           	psect	text33
  8466  002590                     __ptext33:
  8467                           	opt stack 0
  8468  002590                     _USBDeviceInit:
  8469                           	opt stack 14
  8470                           
  8471                           ;usb_device.c: 297: uint8_t i;
  8472                           ;usb_device.c: 299: {PIE2bits.USBIE = 0;};
  8473                           
  8474                           ; BSR set to: 1
  8475                           ;incstack = 0
  8476  002590  98A0               	bcf	4000,4,c	;volatile
  8477                           
  8478                           ;usb_device.c: 303: ;
  8479                           ;usb_device.c: 306: {UEIR = 0;};
  8480  002592  0E00               	movlw	0
  8481  002594  6E63               	movwf	3939,c	;volatile
  8482                           
  8483                           ;usb_device.c: 309: {UIR = 0;};
  8484  002596  0E00               	movlw	0
  8485  002598  6E62               	movwf	3938,c	;volatile
  8486                           
  8487                           ;usb_device.c: 312: UEP0 = 0;
  8488  00259A  0E00               	movlw	0
  8489  00259C  010F               	movlb	15	; () banked
  8490  00259E  6F26               	movwf	38,b	;volatile
  8491                           
  8492                           ; BSR set to: 15
  8493                           ;usb_device.c: 314: memset((void*)&UEP1,0x00,(2));;
  8494  0025A0  0E27               	movlw	39
  8495  0025A2  0100               	movlb	0	; () banked
  8496  0025A4  6F7D               	movwf	memset@p1& (0+255),b
  8497  0025A6  0E0F               	movlw	15
  8498  0025A8  6F7E               	movwf	(memset@p1+1)& (0+255),b
  8499  0025AA  0E00               	movlw	0
  8500  0025AC  6F80               	movwf	(memset@c+1)& (0+255),b
  8501  0025AE  0E00               	movlw	0
  8502  0025B0  6F7F               	movwf	memset@c& (0+255),b
  8503  0025B2  0E00               	movlw	0
  8504  0025B4  6F82               	movwf	(memset@n+1)& (0+255),b
  8505  0025B6  0E02               	movlw	2
  8506  0025B8  6F81               	movwf	memset@n& (0+255),b
  8507  0025BA  EC32  F033         	call	_memset	;wreg free
  8508                           
  8509                           ;usb_device.c: 316: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  8510  0025BE  0E16               	movlw	22
  8511  0025C0  010F               	movlb	15	; () banked
  8512  0025C2  6F39               	movwf	57,b	;volatile
  8513                           
  8514                           ; BSR set to: 15
  8515  0025C4  0E9F               	movlw	159
  8516  0025C6  6F37               	movwf	55,b	;volatile
  8517                           
  8518                           ; BSR set to: 15
  8519  0025C8  0E7B               	movlw	123
  8520  0025CA  6F36               	movwf	54,b	;volatile
  8521                           
  8522                           ; BSR set to: 15
  8523                           ;usb_device.c: 319: ;
  8524                           ;usb_device.c: 322: ;
  8525                           ;usb_device.c: 325: for(i = 0; i < (sizeof(BDT)/sizeof(BDT_ENTRY)); i++)
  8526  0025CC  0E00               	movlw	0
  8527  0025CE  0100               	movlb	0	; () banked
  8528  0025D0  6F85               	movwf	USBDeviceInit@i& (0+255),b
  8529  0025D2                     l14749:
  8530                           
  8531                           ; BSR set to: 0
  8532  0025D2  0E0B               	movlw	11
  8533  0025D4  6585               	cpfsgt	USBDeviceInit@i& (0+255),b
  8534  0025D6  D001               	goto	l1604
  8535  0025D8  D00E               	goto	u13850
  8536  0025DA                     l1604:
  8537                           
  8538                           ; BSR set to: 0
  8539                           ;usb_device.c: 326: {
  8540                           ;usb_device.c: 327: BDT[i].Val = 0x00;
  8541                           
  8542                           ; BSR set to: 0
  8543  0025DA  5185               	movf	USBDeviceInit@i& (0+255),w,b
  8544  0025DC  0D04               	mullw	4
  8545  0025DE  0E00               	movlw	0
  8546  0025E0  24F3               	addwf	prodl,w,c
  8547  0025E2  6ED9               	movwf	fsr2l,c
  8548  0025E4  0E04               	movlw	4
  8549  0025E6  20F4               	addwfc	prodh,w,c
  8550  0025E8  6EDA               	movwf	fsr2h,c
  8551  0025EA  6ADE               	clrf	postinc2,c
  8552  0025EC  6ADE               	clrf	postinc2,c
  8553  0025EE  6ADE               	clrf	postinc2,c
  8554  0025F0  6ADD               	clrf	postdec2,c
  8555                           
  8556                           ; BSR set to: 0
  8557  0025F2  2B85               	incf	USBDeviceInit@i& (0+255),f,b
  8558  0025F4  D7EE               	goto	l14749
  8559  0025F6                     u13850:
  8560                           
  8561                           ; BSR set to: 0
  8562                           ;usb_device.c: 328: }
  8563                           ;usb_device.c: 331: UCONbits.PPBRST = 1;
  8564  0025F6  8C65               	bsf	3941,6,c	;volatile
  8565                           
  8566                           ; BSR set to: 0
  8567                           ;usb_device.c: 334: UADDR = 0x00;
  8568  0025F8  0E00               	movlw	0
  8569  0025FA  010F               	movlb	15	; () banked
  8570  0025FC  6F38               	movwf	56,b	;volatile
  8571                           
  8572                           ; BSR set to: 15
  8573                           ;usb_device.c: 337: UCONbits.PKTDIS = 0;
  8574  0025FE  9865               	bcf	3941,4,c	;volatile
  8575                           
  8576                           ; BSR set to: 15
  8577                           ;usb_device.c: 340: UCONbits.PPBRST = 0;
  8578  002600  9C65               	bcf	3941,6,c	;volatile
  8579  002602                     
  8580                           ;usb_device.c: 344: {
  8581                           ;usb_device.c: 345: (UIR &= 0xF7);
  8582                           
  8583                           ; BSR set to: 15
  8584  002602  9662               	bcf	3938,3,c	;volatile
  8585                           
  8586                           ;usb_device.c: 347: inPipes[0].info.Val = 0;
  8587  002604  0E00               	movlw	0
  8588  002606  0100               	movlb	0	; () banked
  8589  002608  6FB3               	movwf	(_inPipes+3)& (0+255),b
  8590                           
  8591                           ; BSR set to: 0
  8592                           ;usb_device.c: 348: outPipes[0].info.Val = 0;
  8593  00260A  0E00               	movlw	0
  8594  00260C  0101               	movlb	1	; () banked
  8595  00260E  6FCC               	movwf	(_outPipes+3)& (0+255),b
  8596                           
  8597                           ; BSR set to: 1
  8598                           ;usb_device.c: 349: outPipes[0].wCount.Val = 0;
  8599  002610  0E00               	movlw	0
  8600  002612  6FCE               	movwf	(_outPipes+5)& (0+255),b
  8601  002614  0E00               	movlw	0
  8602  002616  6FCD               	movwf	(_outPipes+4)& (0+255),b
  8603                           
  8604                           ; BSR set to: 1
  8605                           ;usb_device.c: 350: }while(UIRbits.TRNIF == 1);
  8606  002618  B662               	btfsc	3938,3,c	;volatile
  8607  00261A  D7F3               	goto	l1606
  8608                           
  8609                           ; BSR set to: 1
  8610                           ;usb_device.c: 354: USBStatusStageEnabledFlag1 = 1;
  8611                           
  8612                           ; BSR set to: 1
  8613  00261C  0E01               	movlw	1
  8614  00261E  6E28               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
  8615                           
  8616                           ;usb_device.c: 355: USBStatusStageEnabledFlag2 = 1;
  8617  002620  0E01               	movlw	1
  8618  002622  6E27               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  8619                           
  8620                           ;usb_device.c: 357: USBDeferINDataStagePackets = 0;
  8621  002624  0E00               	movlw	0
  8622  002626  6E26               	movwf	_USBDeferINDataStagePackets,c	;volatile
  8623                           
  8624                           ;usb_device.c: 358: USBDeferOUTDataStagePackets = 0;
  8625  002628  0E00               	movlw	0
  8626  00262A  6E25               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
  8627                           
  8628                           ;usb_device.c: 359: USBBusIsSuspended = 0;
  8629  00262C  0E00               	movlw	0
  8630  00262E  6FDF               	movwf	_USBBusIsSuspended& (0+255),b
  8631                           
  8632                           ;usb_device.c: 363: for(i = 0; i < (uint8_t)(2+1u); i++)
  8633  002630  0E00               	movlw	0
  8634  002632  0100               	movlb	0	; () banked
  8635  002634  6F85               	movwf	USBDeviceInit@i& (0+255),b
  8636  002636                     l14777:
  8637                           
  8638                           ; BSR set to: 0
  8639  002636  0E02               	movlw	2
  8640  002638  6585               	cpfsgt	USBDeviceInit@i& (0+255),b
  8641  00263A  D001               	goto	l1608
  8642  00263C  D02E               	goto	u13880
  8643  00263E                     l1608:
  8644                           
  8645                           ; BSR set to: 0
  8646                           ;usb_device.c: 364: {
  8647                           ;usb_device.c: 365: pBDTEntryIn[i] = 0u;
  8648                           
  8649                           ; BSR set to: 0
  8650  00263E  5185               	movf	USBDeviceInit@i& (0+255),w,b
  8651  002640  0D02               	mullw	2
  8652  002642  0EB6               	movlw	low _pBDTEntryIn
  8653  002644  24F3               	addwf	prodl,w,c
  8654  002646  6ED9               	movwf	fsr2l,c
  8655  002648  0E00               	movlw	high _pBDTEntryIn
  8656  00264A  20F4               	addwfc	prodh,w,c
  8657  00264C  6EDA               	movwf	fsr2h,c
  8658  00264E  0E00               	movlw	0
  8659  002650  6EDE               	movwf	postinc2,c
  8660  002652  0E00               	movlw	0
  8661  002654  6EDD               	movwf	postdec2,c
  8662                           
  8663                           ;usb_device.c: 366: pBDTEntryOut[i] = 0u;
  8664  002656  5185               	movf	USBDeviceInit@i& (0+255),w,b
  8665  002658  0D02               	mullw	2
  8666  00265A  0E06               	movlw	low _pBDTEntryOut
  8667  00265C  24F3               	addwf	prodl,w,c
  8668  00265E  6ED9               	movwf	fsr2l,c
  8669  002660  0E03               	movlw	high _pBDTEntryOut
  8670  002662  20F4               	addwfc	prodh,w,c
  8671  002664  6EDA               	movwf	fsr2h,c
  8672  002666  0E00               	movlw	0
  8673  002668  6EDE               	movwf	postinc2,c
  8674  00266A  0E00               	movlw	0
  8675  00266C  6EDD               	movwf	postdec2,c
  8676                           
  8677                           ;usb_device.c: 367: ep_data_in[i].Val = 0u;
  8678  00266E  5185               	movf	USBDeviceInit@i& (0+255),w,b
  8679  002670  0D01               	mullw	1
  8680  002672  0ED2               	movlw	low _ep_data_in
  8681  002674  24F3               	addwf	prodl,w,c
  8682  002676  6ED9               	movwf	fsr2l,c
  8683  002678  0E02               	movlw	high _ep_data_in
  8684  00267A  20F4               	addwfc	prodh,w,c
  8685  00267C  6EDA               	movwf	fsr2h,c
  8686  00267E  0E00               	movlw	0
  8687  002680  6EDF               	movwf	indf2,c
  8688                           
  8689                           ;usb_device.c: 368: ep_data_out[i].Val = 0u;
  8690  002682  5185               	movf	USBDeviceInit@i& (0+255),w,b
  8691  002684  0D01               	mullw	1
  8692  002686  0ECF               	movlw	low _ep_data_out
  8693  002688  24F3               	addwf	prodl,w,c
  8694  00268A  6ED9               	movwf	fsr2l,c
  8695  00268C  0E02               	movlw	high _ep_data_out
  8696  00268E  20F4               	addwfc	prodh,w,c
  8697  002690  6EDA               	movwf	fsr2h,c
  8698  002692  0E00               	movlw	0
  8699  002694  6EDF               	movwf	indf2,c
  8700                           
  8701                           ; BSR set to: 0
  8702  002696  2B85               	incf	USBDeviceInit@i& (0+255),f,b
  8703  002698  D7CE               	goto	l14777
  8704  00269A                     u13880:
  8705                           
  8706                           ; BSR set to: 0
  8707                           ;usb_device.c: 369: }
  8708                           ;usb_device.c: 372: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  8709                           
  8710                           ; BSR set to: 0
  8711  00269A  0E08               	movlw	8
  8712  00269C  6FB6               	movwf	_pBDTEntryIn& (0+255),b
  8713  00269E  0E04               	movlw	4
  8714  0026A0  6FB7               	movwf	(_pBDTEntryIn+1)& (0+255),b
  8715                           
  8716                           ; BSR set to: 0
  8717                           ;usb_device.c: 374: UEP0 = 0x06|0x10;
  8718  0026A2  0E16               	movlw	22
  8719  0026A4  010F               	movlb	15	; () banked
  8720  0026A6  6F26               	movwf	38,b	;volatile
  8721                           
  8722                           ; BSR set to: 15
  8723                           ;usb_device.c: 376: BDT[0].ADR = ((uint16_t)(&SetupPkt));
  8724  0026A8  0E04               	movlw	4
  8725  0026AA  0104               	movlb	4	; () banked
  8726  0026AC  6F03               	movwf	3,b	;volatile
  8727  0026AE  0E30               	movlw	48
  8728  0026B0  6F02               	movwf	2,b	;volatile
  8729                           
  8730                           ; BSR set to: 4
  8731                           ;usb_device.c: 377: BDT[0].CNT = 8;
  8732  0026B2  0E08               	movlw	8
  8733  0026B4  6F01               	movwf	1,b	;volatile
  8734                           
  8735                           ; BSR set to: 4
  8736                           ;usb_device.c: 378: BDT[0].STAT.Val = 0x00|0x04;
  8737  0026B6  0E04               	movlw	4
  8738  0026B8  6F00               	movwf	0,b	;volatile
  8739                           
  8740                           ; BSR set to: 4
  8741                           ;usb_device.c: 379: BDT[0].STAT.Val |= 0x80;
  8742  0026BA  8F00               	bsf	0,7,b	;volatile
  8743                           
  8744                           ; BSR set to: 4
  8745                           ;usb_device.c: 382: USBActiveConfiguration = 0;
  8746  0026BC  0E00               	movlw	0
  8747  0026BE  0100               	movlb	0	; () banked
  8748  0026C0  6FD6               	movwf	_USBActiveConfiguration& (0+255),b
  8749                           
  8750                           ; BSR set to: 0
  8751                           ;usb_device.c: 384: USB1msTickCount = 0;
  8752  0026C2  0E00               	movlw	0
  8753  0026C4  0103               	movlb	3	; () banked
  8754  0026C6  6F10               	movwf	_USB1msTickCount& (0+255),b
  8755  0026C8  0E00               	movlw	0
  8756  0026CA  6F11               	movwf	(_USB1msTickCount+1)& (0+255),b
  8757  0026CC  0E00               	movlw	0
  8758  0026CE  6F12               	movwf	(_USB1msTickCount+2)& (0+255),b
  8759  0026D0  0E00               	movlw	0
  8760  0026D2  6F13               	movwf	(_USB1msTickCount+3)& (0+255),b
  8761                           
  8762                           ; BSR set to: 3
  8763                           ;usb_device.c: 385: USBTicksSinceSuspendEnd = 0;
  8764  0026D4  0E00               	movlw	0
  8765  0026D6  0101               	movlb	1	; () banked
  8766  0026D8  6FDD               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
  8767                           
  8768                           ; BSR set to: 1
  8769                           ;usb_device.c: 388: USBDeviceState = DETACHED_STATE;
  8770  0026DA  0E00               	movlw	0
  8771  0026DC  0100               	movlb	0	; () banked
  8772  0026DE  6FCE               	movwf	_USBDeviceState& (0+255),b
  8773                           
  8774                           ; BSR set to: 0
  8775  0026E0  0012               	return		;funcret
  8776  0026E2                     __end_of_USBDeviceInit:
  8777                           	opt stack 0
  8778                           tosu	equ	0xFFF
  8779                           tosh	equ	0xFFE
  8780                           tosl	equ	0xFFD
  8781                           pclath	equ	0xFFA
  8782                           tblptru	equ	0xFF8
  8783                           tblptrh	equ	0xFF7
  8784                           tblptrl	equ	0xFF6
  8785                           tablat	equ	0xFF5
  8786                           prodh	equ	0xFF4
  8787                           prodl	equ	0xFF3
  8788                           intcon	equ	0xFF2
  8789                           intcon2	equ	0xFF1
  8790                           intcon3	equ	0xFF0
  8791                           postinc0	equ	0xFEE
  8792                           plusw0	equ	0xFEB
  8793                           wreg	equ	0xFE8
  8794                           postinc1	equ	0xFE6
  8795                           postdec1	equ	0xFE5
  8796                           fsr1h	equ	0xFE2
  8797                           fsr1l	equ	0xFE1
  8798                           indf2	equ	0xFDF
  8799                           postinc2	equ	0xFDE
  8800                           postdec2	equ	0xFDD
  8801                           plusw2	equ	0xFDB
  8802                           fsr2h	equ	0xFDA
  8803                           fsr2l	equ	0xFD9
  8804                           status	equ	0xFD8
  8805                           
  8806 ;; *************** function _USBCtrlEPService *****************
  8807 ;; Defined at:
  8808 ;;		line 2390 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8809 ;; Parameters:    Size  Location     Type
  8810 ;;		None
  8811 ;; Auto vars:     Size  Location     Type
  8812 ;;		None
  8813 ;; Return value:  Size  Location     Type
  8814 ;;                  1    wreg      void 
  8815 ;; Registers used:
  8816 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8817 ;; Tracked objects:
  8818 ;;		On entry : 0/0
  8819 ;;		On exit  : 0/0
  8820 ;;		Unchanged: 0/0
  8821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8822 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8823 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8824 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8825 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8826 ;;Total ram usage:        1 bytes
  8827 ;; Hardware stack levels used:    1
  8828 ;; Hardware stack levels required when called:   18
  8829 ;; This function calls:
  8830 ;;		_USBCtrlTrfInHandler
  8831 ;;		_USBCtrlTrfOutHandler
  8832 ;;		_USBCtrlTrfSetupHandler
  8833 ;;		_memcpy
  8834 ;; This function is called by:
  8835 ;;		_USBDeviceTasks
  8836 ;; This function uses a non-reentrant model
  8837 ;;
  8838                           
  8839                           	psect	text34
  8840  004F06                     __ptext34:
  8841                           	opt stack 0
  8842  004F06                     _USBCtrlEPService:
  8843                           	opt stack 8
  8844                           
  8845                           ;usb_device.c: 2396: USBStatusStageTimeoutCounter = (uint8_t)45;
  8846                           
  8847                           ; BSR set to: 0
  8848                           ;incstack = 0
  8849  004F06  0E2D               	movlw	45
  8850  004F08  6E29               	movwf	_USBStatusStageTimeoutCounter,c
  8851                           
  8852                           ;usb_device.c: 2400: if((USTATcopy.Val & ~0x02) == 0x00)
  8853  004F0A  C0D5  F097         	movff	_USTATcopy,??_USBCtrlEPService
  8854  004F0E  0EFD               	movlw	253
  8855  004F10  0100               	movlb	0	; () banked
  8856  004F12  1797               	andwf	??_USBCtrlEPService& (0+255),f,b
  8857  004F14  A4D8               	btfss	status,2,c
  8858  004F16  D038               	goto	l1774
  8859                           
  8860                           ; BSR set to: 0
  8861                           ;usb_device.c: 2401: {
  8862                           ;usb_device.c: 2404: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
  8863  004F18  C0D5  F097         	movff	_USTATcopy,??_USBCtrlEPService
  8864  004F1C  90D8               	bcf	status,0,c
  8865  004F1E  3397               	rrcf	??_USBCtrlEPService& (0+255),f,b
  8866  004F20  0E3F               	movlw	63
  8867  004F22  1797               	andwf	??_USBCtrlEPService& (0+255),f,b
  8868  004F24  5197               	movf	??_USBCtrlEPService& (0+255),w,b
  8869  004F26  0D04               	mullw	4
  8870  004F28  0E00               	movlw	0
  8871  004F2A  24F3               	addwf	prodl,w,c
  8872  004F2C  6FC0               	movwf	_pBDTEntryEP0OutCurrent& (0+255),b
  8873  004F2E  0E04               	movlw	4
  8874  004F30  20F4               	addwfc	prodh,w,c
  8875  004F32  6FC1               	movwf	(_pBDTEntryEP0OutCurrent+1)& (0+255),b
  8876                           
  8877                           ; BSR set to: 0
  8878                           ;usb_device.c: 2412: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  8879  004F34  C0C0  F0BE         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
  8880  004F38  C0C1  F0BF         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
  8881                           
  8882                           ; BSR set to: 0
  8883                           ;usb_device.c: 2414: ((uint8_t_VAL*)&pBDTEntryEP0OutNext)->Val ^= 0x0004;
  8884  004F3C  0E04               	movlw	4
  8885  004F3E  1BBE               	xorwf	_pBDTEntryEP0OutNext& (0+255),f,b
  8886                           
  8887                           ; BSR set to: 0
  8888                           ;usb_device.c: 2417: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
  8889  004F40  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  8890  004F44  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  8891  004F48  30DF               	rrcf	223,w,c
  8892  004F4A  32E8               	rrcf	wreg,f,c
  8893  004F4C  0B0F               	andlw	15
  8894  004F4E  0A0D               	xorlw	13
  8895  004F50  A4D8               	btfss	status,2,c
  8896  004F52  D017               	goto	l1775
  8897                           
  8898                           ; BSR set to: 0
  8899                           ;usb_device.c: 2418: {
  8900                           ;usb_device.c: 2423: memcpy((uint8_t*)&SetupPkt, (uint8_t*)((void *)(pBDTEntryEP0OutCurr
      +                          ent->ADR)), 8);
  8901  004F54  0E30               	movlw	48
  8902  004F56  6F7D               	movwf	memcpy@d1& (0+255),b
  8903  004F58  0E04               	movlw	4
  8904  004F5A  6F7E               	movwf	(memcpy@d1+1)& (0+255),b
  8905  004F5C  EE20 F002          	lfsr	2,2
  8906  004F60  51C0               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
  8907  004F62  26D9               	addwf	fsr2l,f,c
  8908  004F64  51C1               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
  8909  004F66  22DA               	addwfc	fsr2h,f,c
  8910  004F68  CFDE F07F          	movff	postinc2,memcpy@s1
  8911  004F6C  CFDD F080          	movff	postdec2,memcpy@s1+1
  8912  004F70  0E00               	movlw	0
  8913  004F72  6F82               	movwf	(memcpy@n+1)& (0+255),b
  8914  004F74  0E08               	movlw	8
  8915  004F76  6F81               	movwf	memcpy@n& (0+255),b
  8916  004F78  EC55  F030         	call	_memcpy	;wreg free
  8917                           
  8918                           ;usb_device.c: 2426: USBCtrlTrfSetupHandler();
  8919  004F7C  EC38  F029         	call	_USBCtrlTrfSetupHandler	;wreg free
  8920                           
  8921                           ;usb_device.c: 2427: }
  8922  004F80  0012               	return	
  8923  004F82                     l1775:
  8924                           
  8925                           ;usb_device.c: 2428: else
  8926                           ;usb_device.c: 2429: {
  8927                           ;usb_device.c: 2431: USBCtrlTrfOutHandler();
  8928  004F82  ECC7  F02B         	call	_USBCtrlTrfOutHandler	;wreg free
  8929                           
  8930                           ;usb_device.c: 2432: }
  8931                           ;usb_device.c: 2433: }
  8932  004F86  0012               	return	
  8933  004F88                     l1774:
  8934                           
  8935                           ;usb_device.c: 2434: else if((USTATcopy.Val & ~0x02) == 0x04)
  8936  004F88  0100               	movlb	0	; () banked
  8937  004F8A  51D5               	movf	_USTATcopy& (0+255),w,b
  8938  004F8C  0BFD               	andlw	253
  8939  004F8E  0A04               	xorlw	4
  8940  004F90  A4D8               	btfss	status,2,c
  8941  004F92  0012               	return	
  8942                           
  8943                           ; BSR set to: 0
  8944                           ;usb_device.c: 2435: {
  8945                           ;usb_device.c: 2438: USBCtrlTrfInHandler();
  8946  004F94  ECA3  F021         	call	_USBCtrlTrfInHandler	;wreg free
  8947  004F98  0012               	return	
  8948  004F9A                     __end_of_USBCtrlEPService:
  8949                           	opt stack 0
  8950                           tosu	equ	0xFFF
  8951                           tosh	equ	0xFFE
  8952                           tosl	equ	0xFFD
  8953                           pclath	equ	0xFFA
  8954                           tblptru	equ	0xFF8
  8955                           tblptrh	equ	0xFF7
  8956                           tblptrl	equ	0xFF6
  8957                           tablat	equ	0xFF5
  8958                           prodh	equ	0xFF4
  8959                           prodl	equ	0xFF3
  8960                           intcon	equ	0xFF2
  8961                           intcon2	equ	0xFF1
  8962                           intcon3	equ	0xFF0
  8963                           postinc0	equ	0xFEE
  8964                           plusw0	equ	0xFEB
  8965                           wreg	equ	0xFE8
  8966                           postinc1	equ	0xFE6
  8967                           postdec1	equ	0xFE5
  8968                           fsr1h	equ	0xFE2
  8969                           fsr1l	equ	0xFE1
  8970                           indf2	equ	0xFDF
  8971                           postinc2	equ	0xFDE
  8972                           postdec2	equ	0xFDD
  8973                           plusw2	equ	0xFDB
  8974                           fsr2h	equ	0xFDA
  8975                           fsr2l	equ	0xFD9
  8976                           status	equ	0xFD8
  8977                           
  8978 ;; *************** function _memcpy *****************
  8979 ;; Defined at:
  8980 ;;		line 27 in file "/opt/microchip/xc8/v1.45/sources/common/memcpy.c"
  8981 ;; Parameters:    Size  Location     Type
  8982 ;;  d1              2   29[BANK0 ] PTR void 
  8983 ;;		 -> SetupPkt(8), 
  8984 ;;  s1              2   31[BANK0 ] PTR const void 
  8985 ;;		 -> RAM(3775), CtrlTrfData(8), SetupPkt(8), 
  8986 ;;  n               2   33[BANK0 ] unsigned int 
  8987 ;; Auto vars:     Size  Location     Type
  8988 ;;  s               2   38[BANK0 ] PTR const unsigned char 
  8989 ;;		 -> RAM(3775), CtrlTrfData(8), SetupPkt(8), 
  8990 ;;  d               2   36[BANK0 ] PTR unsigned char 
  8991 ;;		 -> SetupPkt(8), 
  8992 ;;  tmp             1   35[BANK0 ] unsigned char 
  8993 ;; Return value:  Size  Location     Type
  8994 ;;                  2   29[BANK0 ] PTR void 
  8995 ;; Registers used:
  8996 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8997 ;; Tracked objects:
  8998 ;;		On entry : 0/0
  8999 ;;		On exit  : 0/0
  9000 ;;		Unchanged: 0/0
  9001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9002 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9003 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9004 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9005 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9006 ;;Total ram usage:       11 bytes
  9007 ;; Hardware stack levels used:    1
  9008 ;; Hardware stack levels required when called:   11
  9009 ;; This function calls:
  9010 ;;		Nothing
  9011 ;; This function is called by:
  9012 ;;		_USBCtrlEPService
  9013 ;; This function uses a non-reentrant model
  9014 ;;
  9015                           
  9016                           	psect	text35
  9017  0060AA                     __ptext35:
  9018                           	opt stack 0
  9019  0060AA                     _memcpy:
  9020                           	opt stack 14
  9021                           
  9022                           ;incstack = 0
  9023  0060AA  C07F  F086         	movff	memcpy@s1,memcpy@s
  9024  0060AE  C080  F087         	movff	memcpy@s1+1,memcpy@s+1
  9025  0060B2  C07D  F084         	movff	memcpy@d1,memcpy@d
  9026  0060B6  C07E  F085         	movff	memcpy@d1+1,memcpy@d+1
  9027  0060BA  D011               	goto	l3408
  9028  0060BC                     l13949:
  9029  0060BC  C086  FFD9         	movff	memcpy@s,fsr2l
  9030  0060C0  C087  FFDA         	movff	memcpy@s+1,fsr2h
  9031  0060C4  50DF               	movf	indf2,w,c
  9032  0060C6  0100               	movlb	0	; () banked
  9033  0060C8  6F83               	movwf	memcpy@tmp& (0+255),b
  9034                           
  9035                           ; BSR set to: 0
  9036  0060CA  4B86               	infsnz	memcpy@s& (0+255),f,b
  9037  0060CC  2B87               	incf	(memcpy@s+1)& (0+255),f,b
  9038                           
  9039                           ; BSR set to: 0
  9040  0060CE  C084  FFD9         	movff	memcpy@d,fsr2l
  9041  0060D2  C085  FFDA         	movff	memcpy@d+1,fsr2h
  9042  0060D6  C083  FFDF         	movff	memcpy@tmp,indf2
  9043                           
  9044                           ; BSR set to: 0
  9045  0060DA  4B84               	infsnz	memcpy@d& (0+255),f,b
  9046  0060DC  2B85               	incf	(memcpy@d+1)& (0+255),f,b
  9047  0060DE                     l3408:
  9048                           
  9049                           ; BSR set to: 0
  9050  0060DE  0100               	movlb	0	; () banked
  9051  0060E0  0781               	decf	memcpy@n& (0+255),f,b
  9052  0060E2  A0D8               	btfss	status,0,c
  9053  0060E4  0782               	decf	(memcpy@n+1)& (0+255),f,b
  9054  0060E6  2981               	incf	memcpy@n& (0+255),w,b
  9055  0060E8  E1E9               	bnz	l13949
  9056  0060EA  2982               	incf	(memcpy@n+1)& (0+255),w,b
  9057  0060EC  B4D8               	btfsc	status,2,c
  9058  0060EE  0012               	return	
  9059  0060F0  D7E5               	goto	l3409
  9060  0060F2                     __end_of_memcpy:
  9061                           	opt stack 0
  9062                           tosu	equ	0xFFF
  9063                           tosh	equ	0xFFE
  9064                           tosl	equ	0xFFD
  9065                           pclath	equ	0xFFA
  9066                           tblptru	equ	0xFF8
  9067                           tblptrh	equ	0xFF7
  9068                           tblptrl	equ	0xFF6
  9069                           tablat	equ	0xFF5
  9070                           prodh	equ	0xFF4
  9071                           prodl	equ	0xFF3
  9072                           intcon	equ	0xFF2
  9073                           intcon2	equ	0xFF1
  9074                           intcon3	equ	0xFF0
  9075                           postinc0	equ	0xFEE
  9076                           plusw0	equ	0xFEB
  9077                           wreg	equ	0xFE8
  9078                           postinc1	equ	0xFE6
  9079                           postdec1	equ	0xFE5
  9080                           fsr1h	equ	0xFE2
  9081                           fsr1l	equ	0xFE1
  9082                           indf2	equ	0xFDF
  9083                           postinc2	equ	0xFDE
  9084                           postdec2	equ	0xFDD
  9085                           plusw2	equ	0xFDB
  9086                           fsr2h	equ	0xFDA
  9087                           fsr2l	equ	0xFD9
  9088                           status	equ	0xFD8
  9089                           
  9090 ;; *************** function _USBCtrlTrfSetupHandler *****************
  9091 ;; Defined at:
  9092 ;;		line 2483 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  9093 ;; Parameters:    Size  Location     Type
  9094 ;;		None
  9095 ;; Auto vars:     Size  Location     Type
  9096 ;;		None
  9097 ;; Return value:  Size  Location     Type
  9098 ;;                  1    wreg      void 
  9099 ;; Registers used:
  9100 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9101 ;; Tracked objects:
  9102 ;;		On entry : 0/0
  9103 ;;		On exit  : 0/0
  9104 ;;		Unchanged: 0/0
  9105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9106 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9107 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9108 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9109 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9110 ;;Total ram usage:        0 bytes
  9111 ;; Hardware stack levels used:    1
  9112 ;; Hardware stack levels required when called:   17
  9113 ;; This function calls:
  9114 ;;		_USBCheckStdRequest
  9115 ;;		_USBCtrlEPServiceComplete
  9116 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  9117 ;; This function is called by:
  9118 ;;		_USBCtrlEPService
  9119 ;; This function uses a non-reentrant model
  9120 ;;
  9121                           
  9122                           	psect	text36
  9123  005270                     __ptext36:
  9124                           	opt stack 0
  9125  005270                     _USBCtrlTrfSetupHandler:
  9126                           	opt stack 8
  9127                           
  9128                           ;usb_device.c: 2488: shortPacketStatus = 0;
  9129                           
  9130                           ; BSR set to: 0
  9131                           ;incstack = 0
  9132  005270  0E00               	movlw	0
  9133  005272  0100               	movlb	0	; () banked
  9134  005274  6FCD               	movwf	_shortPacketStatus& (0+255),b
  9135                           
  9136                           ;usb_device.c: 2489: USBDeferStatusStagePacket = 0;
  9137  005276  0E00               	movlw	0
  9138  005278  6FCA               	movwf	_USBDeferStatusStagePacket& (0+255),b	;volatile
  9139                           
  9140                           ;usb_device.c: 2490: USBDeferINDataStagePackets = 0;
  9141  00527A  0E00               	movlw	0
  9142  00527C  6E26               	movwf	_USBDeferINDataStagePackets,c	;volatile
  9143                           
  9144                           ;usb_device.c: 2491: USBDeferOUTDataStagePackets = 0;
  9145  00527E  0E00               	movlw	0
  9146  005280  6E25               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
  9147                           
  9148                           ;usb_device.c: 2492: BothEP0OutUOWNsSet = 0;
  9149  005282  0E00               	movlw	0
  9150  005284  0101               	movlb	1	; () banked
  9151  005286  6FDE               	movwf	_BothEP0OutUOWNsSet& (0+255),b
  9152                           
  9153                           ;usb_device.c: 2493: controlTransferState = 0;
  9154  005288  0E00               	movlw	0
  9155  00528A  0100               	movlb	0	; () banked
  9156  00528C  6FCC               	movwf	_controlTransferState& (0+255),b
  9157                           
  9158                           ; BSR set to: 0
  9159                           ;usb_device.c: 2502: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  9160  00528E  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
  9161  005292  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9162  005296  0E7F               	movlw	127
  9163  005298  16DF               	andwf	indf2,f,c
  9164                           
  9165                           ; BSR set to: 0
  9166                           ;usb_device.c: 2503: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  9167  00529A  0E04               	movlw	4
  9168  00529C  1BB6               	xorwf	_pBDTEntryIn& (0+255),f,b
  9169                           
  9170                           ; BSR set to: 0
  9171                           ;usb_device.c: 2504: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  9172  00529E  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
  9173  0052A2  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9174  0052A6  0E7F               	movlw	127
  9175  0052A8  16DF               	andwf	indf2,f,c
  9176                           
  9177                           ; BSR set to: 0
  9178                           ;usb_device.c: 2505: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  9179  0052AA  0E04               	movlw	4
  9180  0052AC  1BB6               	xorwf	_pBDTEntryIn& (0+255),f,b
  9181                           
  9182                           ; BSR set to: 0
  9183                           ;usb_device.c: 2506: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
  9184  0052AE  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9185  0052B2  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9186  0052B6  0E7F               	movlw	127
  9187  0052B8  16DF               	andwf	indf2,f,c
  9188                           
  9189                           ; BSR set to: 0
  9190                           ;usb_device.c: 2508: inPipes[0].info.Val = 0;
  9191  0052BA  0E00               	movlw	0
  9192  0052BC  6FB3               	movwf	(_inPipes+3)& (0+255),b
  9193                           
  9194                           ; BSR set to: 0
  9195                           ;usb_device.c: 2509: inPipes[0].wCount.Val = 0;
  9196  0052BE  0E00               	movlw	0
  9197  0052C0  6FB5               	movwf	(_inPipes+5)& (0+255),b
  9198  0052C2  0E00               	movlw	0
  9199  0052C4  6FB4               	movwf	(_inPipes+4)& (0+255),b
  9200                           
  9201                           ; BSR set to: 0
  9202                           ;usb_device.c: 2510: outPipes[0].info.Val = 0;
  9203  0052C6  0E00               	movlw	0
  9204  0052C8  0101               	movlb	1	; () banked
  9205  0052CA  6FCC               	movwf	(_outPipes+3)& (0+255),b
  9206                           
  9207                           ; BSR set to: 1
  9208                           ;usb_device.c: 2511: outPipes[0].wCount.Val = 0;
  9209  0052CC  0E00               	movlw	0
  9210  0052CE  6FCE               	movwf	(_outPipes+5)& (0+255),b
  9211  0052D0  0E00               	movlw	0
  9212  0052D2  6FCD               	movwf	(_outPipes+4)& (0+255),b
  9213                           
  9214                           ; BSR set to: 1
  9215                           ;usb_device.c: 2517: USBCheckStdRequest();
  9216  0052D4  EC88  F01B         	call	_USBCheckStdRequest	;wreg free
  9217                           
  9218                           ;usb_device.c: 2518: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
  9219  0052D8  0E00               	movlw	0
  9220  0052DA  0100               	movlb	0	; () banked
  9221  0052DC  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  9222  0052DE  0E03               	movlw	3
  9223  0052E0  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  9224  0052E2  0E00               	movlw	0
  9225  0052E4  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  9226  0052E6  0E00               	movlw	0
  9227  0052E8  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  9228  0052EA  0E00               	movlw	0
  9229  0052EC  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  9230  0052EE  0E00               	movlw	0
  9231  0052F0  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  9232  0052F2  EC91  F02C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  9233                           
  9234                           ;usb_device.c: 2531: USBCtrlEPServiceComplete();
  9235  0052F6  ECC1  F018         	call	_USBCtrlEPServiceComplete	;wreg free
  9236  0052FA  0012               	return		;funcret
  9237  0052FC                     __end_of_USBCtrlTrfSetupHandler:
  9238                           	opt stack 0
  9239                           tosu	equ	0xFFF
  9240                           tosh	equ	0xFFE
  9241                           tosl	equ	0xFFD
  9242                           pclath	equ	0xFFA
  9243                           tblptru	equ	0xFF8
  9244                           tblptrh	equ	0xFF7
  9245                           tblptrl	equ	0xFF6
  9246                           tablat	equ	0xFF5
  9247                           prodh	equ	0xFF4
  9248                           prodl	equ	0xFF3
  9249                           intcon	equ	0xFF2
  9250                           intcon2	equ	0xFF1
  9251                           intcon3	equ	0xFF0
  9252                           postinc0	equ	0xFEE
  9253                           plusw0	equ	0xFEB
  9254                           wreg	equ	0xFE8
  9255                           postinc1	equ	0xFE6
  9256                           postdec1	equ	0xFE5
  9257                           fsr1h	equ	0xFE2
  9258                           fsr1l	equ	0xFE1
  9259                           indf2	equ	0xFDF
  9260                           postinc2	equ	0xFDE
  9261                           postdec2	equ	0xFDD
  9262                           plusw2	equ	0xFDB
  9263                           fsr2h	equ	0xFDA
  9264                           fsr2l	equ	0xFD9
  9265                           status	equ	0xFD8
  9266                           
  9267 ;; *************** function _USBCtrlEPServiceComplete *****************
  9268 ;; Defined at:
  9269 ;;		line 1634 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  9270 ;; Parameters:    Size  Location     Type
  9271 ;;		None
  9272 ;; Auto vars:     Size  Location     Type
  9273 ;;		None
  9274 ;; Return value:  Size  Location     Type
  9275 ;;                  1    wreg      void 
  9276 ;; Registers used:
  9277 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9278 ;; Tracked objects:
  9279 ;;		On entry : 0/0
  9280 ;;		On exit  : 0/0
  9281 ;;		Unchanged: 0/0
  9282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9283 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9284 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9286 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9287 ;;Total ram usage:        0 bytes
  9288 ;; Hardware stack levels used:    1
  9289 ;; Hardware stack levels required when called:   13
  9290 ;; This function calls:
  9291 ;;		_USBCtrlEPAllowDataStage
  9292 ;;		_USBCtrlEPAllowStatusStage
  9293 ;; This function is called by:
  9294 ;;		_USBCtrlTrfSetupHandler
  9295 ;; This function uses a non-reentrant model
  9296 ;;
  9297                           
  9298                           	psect	text37
  9299  003182                     __ptext37:
  9300                           	opt stack 0
  9301  003182                     _USBCtrlEPServiceComplete:
  9302                           	opt stack 11
  9303                           
  9304                           ;usb_device.c: 1640: UCONbits.PKTDIS = 0;
  9305                           
  9306                           ;incstack = 0
  9307  003182  9865               	bcf	3941,4,c	;volatile
  9308                           
  9309                           ;usb_device.c: 1646: if(inPipes[0].info.bits.busy == 0)
  9310  003184  0100               	movlb	0	; () banked
  9311  003186  BFB3               	btfsc	(_inPipes+3)& (0+255),7,b
  9312  003188  D03B               	goto	l1684
  9313                           
  9314                           ; BSR set to: 0
  9315                           ;usb_device.c: 1647: {
  9316                           ;usb_device.c: 1648: if(outPipes[0].info.bits.busy == 1)
  9317  00318A  0101               	movlb	1	; () banked
  9318  00318C  AFCC               	btfss	(_outPipes+3)& (0+255),7,b
  9319  00318E  D00C               	goto	l1685
  9320                           
  9321                           ; BSR set to: 1
  9322                           ;usb_device.c: 1649: {
  9323                           ;usb_device.c: 1650: controlTransferState = 2;
  9324  003190  0E02               	movlw	2
  9325  003192  0100               	movlb	0	; () banked
  9326  003194  6FCC               	movwf	_controlTransferState& (0+255),b
  9327                           
  9328                           ;usb_device.c: 1661: if(USBDeferOUTDataStagePackets == 0)
  9329  003196  5025               	movf	_USBDeferOUTDataStagePackets,w,c	;volatile
  9330  003198  B4D8               	btfsc	status,2,c
  9331                           
  9332                           ; BSR set to: 0
  9333                           ;usb_device.c: 1662: {
  9334                           ;usb_device.c: 1663: USBCtrlEPAllowDataStage();
  9335  00319A  ECB9  F025         	call	_USBCtrlEPAllowDataStage	;wreg free
  9336                           
  9337                           ;usb_device.c: 1664: }
  9338                           ;usb_device.c: 1668: USBStatusStageEnabledFlag2 = 0;
  9339  00319E  0E00               	movlw	0
  9340  0031A0  6E27               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  9341                           
  9342                           ;usb_device.c: 1669: USBStatusStageEnabledFlag1 = 0;
  9343  0031A2  0E00               	movlw	0
  9344  0031A4  6E28               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
  9345                           
  9346                           ;usb_device.c: 1670: }
  9347  0031A6  0012               	return	
  9348  0031A8                     l1685:
  9349                           
  9350                           ;usb_device.c: 1671: else
  9351                           ;usb_device.c: 1672: {
  9352                           ;usb_device.c: 1677: pBDTEntryEP0OutNext->CNT = 8;
  9353  0031A8  0100               	movlb	0	; () banked
  9354  0031AA  EE20 F001          	lfsr	2,1
  9355  0031AE  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9356  0031B0  26D9               	addwf	fsr2l,f,c
  9357  0031B2  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9358  0031B4  22DA               	addwfc	fsr2h,f,c
  9359  0031B6  0E08               	movlw	8
  9360  0031B8  6EDF               	movwf	indf2,c
  9361                           
  9362                           ;usb_device.c: 1678: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
  9363  0031BA  EE20 F002          	lfsr	2,2
  9364  0031BE  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9365  0031C0  26D9               	addwf	fsr2l,f,c
  9366  0031C2  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9367  0031C4  22DA               	addwfc	fsr2h,f,c
  9368  0031C6  0E30               	movlw	48
  9369  0031C8  6EDE               	movwf	postinc2,c
  9370  0031CA  0E04               	movlw	4
  9371  0031CC  6EDD               	movwf	postdec2,c
  9372                           
  9373                           ; BSR set to: 0
  9374                           ;usb_device.c: 1679: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  9375  0031CE  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9376  0031D2  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9377  0031D6  0E0C               	movlw	12
  9378  0031D8  6EDF               	movwf	indf2,c
  9379                           
  9380                           ; BSR set to: 0
  9381                           ;usb_device.c: 1680: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  9382  0031DA  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9383  0031DE  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9384  0031E2  0E00               	movlw	0
  9385  0031E4  8EDB               	bsf	plusw2,7,c
  9386                           
  9387                           ;usb_device.c: 1681: pBDTEntryIn[0]->STAT.Val = 0x04;
  9388  0031E6  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
  9389  0031EA  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9390  0031EE  0E04               	movlw	4
  9391  0031F0  6EDF               	movwf	indf2,c
  9392                           
  9393                           ; BSR set to: 0
  9394                           ;usb_device.c: 1682: pBDTEntryIn[0]->STAT.Val |= 0x80;
  9395  0031F2  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
  9396  0031F6  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9397  0031FA  0E00               	movlw	0
  9398  0031FC  8EDB               	bsf	plusw2,7,c
  9399                           
  9400                           ; BSR set to: 0
  9401                           ;usb_device.c: 1683: }
  9402                           ;usb_device.c: 1684: }
  9403  0031FE  0012               	return	
  9404  003200                     l1684:
  9405                           
  9406                           ; BSR set to: 0
  9407                           ;usb_device.c: 1685: else
  9408                           ;usb_device.c: 1686: {
  9409                           ;usb_device.c: 1687: if(SetupPkt.DataDir == (0x80>>7))
  9410  003200  0104               	movlb	4	; () banked
  9411  003202  AF30               	btfss	48,7,b	;volatile
  9412  003204  D012               	goto	l1689
  9413                           
  9414                           ; BSR set to: 4
  9415                           ;usb_device.c: 1688: {
  9416                           ;usb_device.c: 1689: controlTransferState = 1;
  9417  003206  0E01               	movlw	1
  9418  003208  0100               	movlb	0	; () banked
  9419  00320A  6FCC               	movwf	_controlTransferState& (0+255),b
  9420                           
  9421                           ;usb_device.c: 1703: if(USBDeferINDataStagePackets == 0)
  9422  00320C  5026               	movf	_USBDeferINDataStagePackets,w,c	;volatile
  9423  00320E  B4D8               	btfsc	status,2,c
  9424                           
  9425                           ; BSR set to: 0
  9426                           ;usb_device.c: 1704: {
  9427                           ;usb_device.c: 1705: USBCtrlEPAllowDataStage();
  9428  003210  ECB9  F025         	call	_USBCtrlEPAllowDataStage	;wreg free
  9429                           
  9430                           ;usb_device.c: 1706: }
  9431                           ;usb_device.c: 1728: USBStatusStageEnabledFlag2 = 0;
  9432  003214  0E00               	movlw	0
  9433  003216  6E27               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  9434                           
  9435                           ;usb_device.c: 1729: USBStatusStageEnabledFlag1 = 0;
  9436  003218  0E00               	movlw	0
  9437  00321A  6E28               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
  9438                           
  9439                           ;usb_device.c: 1730: if(USBDeferStatusStagePacket == 0)
  9440  00321C  0100               	movlb	0	; () banked
  9441  00321E  51CA               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
  9442  003220  A4D8               	btfss	status,2,c
  9443  003222  0012               	return	
  9444                           
  9445                           ; BSR set to: 0
  9446                           ;usb_device.c: 1731: {
  9447                           ;usb_device.c: 1732: USBCtrlEPAllowStatusStage();
  9448  003224  EC4A  F01F         	call	_USBCtrlEPAllowStatusStage	;wreg free
  9449                           
  9450                           ;usb_device.c: 1733: }
  9451                           ;usb_device.c: 1734: }
  9452  003228  0012               	return	
  9453  00322A                     l1689:
  9454                           
  9455                           ;usb_device.c: 1735: else
  9456                           ;usb_device.c: 1736: {
  9457                           ;usb_device.c: 1747: controlTransferState = 2;
  9458  00322A  0E02               	movlw	2
  9459  00322C  0100               	movlb	0	; () banked
  9460  00322E  6FCC               	movwf	_controlTransferState& (0+255),b
  9461                           
  9462                           ; BSR set to: 0
  9463                           ;usb_device.c: 1750: pBDTEntryEP0OutNext->CNT = 8;
  9464  003230  EE20 F001          	lfsr	2,1
  9465  003234  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9466  003236  26D9               	addwf	fsr2l,f,c
  9467  003238  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9468  00323A  22DA               	addwfc	fsr2h,f,c
  9469  00323C  0E08               	movlw	8
  9470  00323E  6EDF               	movwf	indf2,c
  9471                           
  9472                           ; BSR set to: 0
  9473                           ;usb_device.c: 1751: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
  9474  003240  EE20 F002          	lfsr	2,2
  9475  003244  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9476  003246  26D9               	addwf	fsr2l,f,c
  9477  003248  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9478  00324A  22DA               	addwfc	fsr2h,f,c
  9479  00324C  0E30               	movlw	48
  9480  00324E  6EDE               	movwf	postinc2,c
  9481  003250  0E04               	movlw	4
  9482  003252  6EDD               	movwf	postdec2,c
  9483                           
  9484                           ; BSR set to: 0
  9485                           ;usb_device.c: 1752: pBDTEntryEP0OutNext->STAT.Val = 0x04;
  9486  003254  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9487  003258  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9488  00325C  0E04               	movlw	4
  9489  00325E  6EDF               	movwf	indf2,c
  9490                           
  9491                           ; BSR set to: 0
  9492                           ;usb_device.c: 1753: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  9493  003260  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9494  003264  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9495  003268  0E00               	movlw	0
  9496  00326A  8EDB               	bsf	plusw2,7,c
  9497                           
  9498                           ; BSR set to: 0
  9499                           ;usb_device.c: 1756: USBStatusStageEnabledFlag2 = 0;
  9500  00326C  0E00               	movlw	0
  9501  00326E  6E27               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  9502                           
  9503                           ; BSR set to: 0
  9504                           ;usb_device.c: 1757: USBStatusStageEnabledFlag1 = 0;
  9505  003270  0E00               	movlw	0
  9506  003272  6E28               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
  9507                           
  9508                           ; BSR set to: 0
  9509                           ;usb_device.c: 1758: if(USBDeferStatusStagePacket == 0)
  9510  003274  51CA               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
  9511  003276  A4D8               	btfss	status,2,c
  9512  003278  0012               	return	
  9513                           
  9514                           ; BSR set to: 0
  9515                           ;usb_device.c: 1759: {
  9516                           ;usb_device.c: 1760: USBCtrlEPAllowStatusStage();
  9517  00327A  EC4A  F01F         	call	_USBCtrlEPAllowStatusStage	;wreg free
  9518  00327E  0012               	return	
  9519  003280                     __end_of_USBCtrlEPServiceComplete:
  9520                           	opt stack 0
  9521                           tosu	equ	0xFFF
  9522                           tosh	equ	0xFFE
  9523                           tosl	equ	0xFFD
  9524                           pclath	equ	0xFFA
  9525                           tblptru	equ	0xFF8
  9526                           tblptrh	equ	0xFF7
  9527                           tblptrl	equ	0xFF6
  9528                           tablat	equ	0xFF5
  9529                           prodh	equ	0xFF4
  9530                           prodl	equ	0xFF3
  9531                           intcon	equ	0xFF2
  9532                           intcon2	equ	0xFF1
  9533                           intcon3	equ	0xFF0
  9534                           postinc0	equ	0xFEE
  9535                           plusw0	equ	0xFEB
  9536                           wreg	equ	0xFE8
  9537                           postinc1	equ	0xFE6
  9538                           postdec1	equ	0xFE5
  9539                           fsr1h	equ	0xFE2
  9540                           fsr1l	equ	0xFE1
  9541                           indf2	equ	0xFDF
  9542                           postinc2	equ	0xFDE
  9543                           postdec2	equ	0xFDD
  9544                           plusw2	equ	0xFDB
  9545                           fsr2h	equ	0xFDA
  9546                           fsr2l	equ	0xFD9
  9547                           status	equ	0xFD8
  9548                           
  9549 ;; *************** function _USBCtrlEPAllowDataStage *****************
  9550 ;; Defined at:
  9551 ;;		line 1506 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  9552 ;; Parameters:    Size  Location     Type
  9553 ;;		None
  9554 ;; Auto vars:     Size  Location     Type
  9555 ;;		None
  9556 ;; Return value:  Size  Location     Type
  9557 ;;                  1    wreg      void 
  9558 ;; Registers used:
  9559 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9560 ;; Tracked objects:
  9561 ;;		On entry : 0/0
  9562 ;;		On exit  : 0/0
  9563 ;;		Unchanged: 0/0
  9564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9565 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9566 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9568 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9569 ;;Total ram usage:        0 bytes
  9570 ;; Hardware stack levels used:    1
  9571 ;; Hardware stack levels required when called:   12
  9572 ;; This function calls:
  9573 ;;		_USBCtrlTrfTxService
  9574 ;; This function is called by:
  9575 ;;		_USBCtrlEPServiceComplete
  9576 ;; This function uses a non-reentrant model
  9577 ;;
  9578                           
  9579                           	psect	text38
  9580  004B72                     __ptext38:
  9581                           	opt stack 0
  9582  004B72                     _USBCtrlEPAllowDataStage:
  9583                           	opt stack 11
  9584                           
  9585                           ;usb_device.c: 1508: USBDeferINDataStagePackets = 0;
  9586                           
  9587                           ;incstack = 0
  9588  004B72  0E00               	movlw	0
  9589  004B74  6E26               	movwf	_USBDeferINDataStagePackets,c	;volatile
  9590                           
  9591                           ;usb_device.c: 1509: USBDeferOUTDataStagePackets = 0;
  9592  004B76  0E00               	movlw	0
  9593  004B78  6E25               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
  9594                           
  9595                           ;usb_device.c: 1511: if(controlTransferState == 2)
  9596  004B7A  0E02               	movlw	2
  9597  004B7C  0100               	movlb	0	; () banked
  9598  004B7E  19CC               	xorwf	_controlTransferState& (0+255),w,b
  9599  004B80  A4D8               	btfss	status,2,c
  9600  004B82  D01F               	goto	l1673
  9601                           
  9602                           ; BSR set to: 0
  9603                           ;usb_device.c: 1512: {
  9604                           ;usb_device.c: 1514: pBDTEntryEP0OutNext->CNT = 8;
  9605  004B84  EE20 F001          	lfsr	2,1
  9606  004B88  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9607  004B8A  26D9               	addwf	fsr2l,f,c
  9608  004B8C  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9609  004B8E  22DA               	addwfc	fsr2h,f,c
  9610  004B90  0E08               	movlw	8
  9611  004B92  6EDF               	movwf	indf2,c
  9612                           
  9613                           ;usb_device.c: 1515: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
  9614  004B94  EE20 F002          	lfsr	2,2
  9615  004B98  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9616  004B9A  26D9               	addwf	fsr2l,f,c
  9617  004B9C  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9618  004B9E  22DA               	addwfc	fsr2h,f,c
  9619  004BA0  0E38               	movlw	56
  9620  004BA2  6EDE               	movwf	postinc2,c
  9621  004BA4  0E04               	movlw	4
  9622  004BA6  6EDD               	movwf	postdec2,c
  9623                           
  9624                           ; BSR set to: 0
  9625                           ;usb_device.c: 1516: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
  9626  004BA8  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9627  004BAC  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9628  004BB0  0E48               	movlw	72
  9629  004BB2  6EDF               	movwf	indf2,c
  9630                           
  9631                           ; BSR set to: 0
  9632                           ;usb_device.c: 1517: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  9633  004BB4  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9634  004BB8  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9635  004BBC  0E00               	movlw	0
  9636  004BBE  8EDB               	bsf	plusw2,7,c
  9637                           
  9638                           ;usb_device.c: 1518: }
  9639  004BC0  0012               	return	
  9640  004BC2                     l1673:
  9641                           
  9642                           ; BSR set to: 0
  9643                           ;usb_device.c: 1519: else
  9644                           ;usb_device.c: 1520: {
  9645                           ;usb_device.c: 1523: if(SetupPkt.wLength < inPipes[0].wCount.Val)
  9646                           
  9647                           ; BSR set to: 0
  9648  004BC2  51B4               	movf	(_inPipes+4)& (0+255),w,b
  9649  004BC4  0104               	movlb	4	; () banked
  9650  004BC6  5D36               	subwf	54,w,b	;volatile
  9651  004BC8  0100               	movlb	0	; () banked
  9652  004BCA  51B5               	movf	(_inPipes+5)& (0+255),w,b
  9653  004BCC  0104               	movlb	4	; () banked
  9654  004BCE  5937               	subwfb	55,w,b	;volatile
  9655  004BD0  B0D8               	btfsc	status,0,c
  9656  004BD2  D004               	goto	l1675
  9657                           
  9658                           ; BSR set to: 4
  9659                           ;usb_device.c: 1524: {
  9660                           ;usb_device.c: 1525: inPipes[0].wCount.Val = SetupPkt.wLength;
  9661  004BD4  C436 F0B4          	movff	1078,_inPipes+4	;volatile
  9662  004BD8  C437 F0B5          	movff	1079,_inPipes+5	;volatile
  9663  004BDC                     l1675:
  9664                           
  9665                           ; BSR set to: 4
  9666                           ;usb_device.c: 1526: }
  9667                           ;usb_device.c: 1527: USBCtrlTrfTxService();
  9668                           
  9669                           ; BSR set to: 4
  9670  004BDC  ECFA  F01B         	call	_USBCtrlTrfTxService	;wreg free
  9671                           
  9672                           ;usb_device.c: 1532: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
  9673  004BE0  0100               	movlb	0	; () banked
  9674  004BE2  EE20 F002          	lfsr	2,2
  9675  004BE6  51B6               	movf	_pBDTEntryIn& (0+255),w,b
  9676  004BE8  26D9               	addwf	fsr2l,f,c
  9677  004BEA  51B7               	movf	(_pBDTEntryIn+1)& (0+255),w,b
  9678  004BEC  22DA               	addwfc	fsr2h,f,c
  9679  004BEE  0E38               	movlw	56
  9680  004BF0  6EDE               	movwf	postinc2,c
  9681  004BF2  0E04               	movlw	4
  9682  004BF4  6EDD               	movwf	postdec2,c
  9683                           
  9684                           ; BSR set to: 0
  9685                           ;usb_device.c: 1533: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  9686  004BF6  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
  9687  004BFA  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9688  004BFE  0E48               	movlw	72
  9689  004C00  6EDF               	movwf	indf2,c
  9690                           
  9691                           ; BSR set to: 0
  9692                           ;usb_device.c: 1534: pBDTEntryIn[0]->STAT.Val |= 0x80;
  9693  004C02  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
  9694  004C06  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9695  004C0A  0E00               	movlw	0
  9696  004C0C  8EDB               	bsf	plusw2,7,c
  9697  004C0E  0012               	return	
  9698  004C10                     __end_of_USBCtrlEPAllowDataStage:
  9699                           	opt stack 0
  9700                           tosu	equ	0xFFF
  9701                           tosh	equ	0xFFE
  9702                           tosl	equ	0xFFD
  9703                           pclath	equ	0xFFA
  9704                           tblptru	equ	0xFF8
  9705                           tblptrh	equ	0xFF7
  9706                           tblptrl	equ	0xFF6
  9707                           tablat	equ	0xFF5
  9708                           prodh	equ	0xFF4
  9709                           prodl	equ	0xFF3
  9710                           intcon	equ	0xFF2
  9711                           intcon2	equ	0xFF1
  9712                           intcon3	equ	0xFF0
  9713                           postinc0	equ	0xFEE
  9714                           plusw0	equ	0xFEB
  9715                           wreg	equ	0xFE8
  9716                           postinc1	equ	0xFE6
  9717                           postdec1	equ	0xFE5
  9718                           fsr1h	equ	0xFE2
  9719                           fsr1l	equ	0xFE1
  9720                           indf2	equ	0xFDF
  9721                           postinc2	equ	0xFDE
  9722                           postdec2	equ	0xFDD
  9723                           plusw2	equ	0xFDB
  9724                           fsr2h	equ	0xFDA
  9725                           fsr2l	equ	0xFD9
  9726                           status	equ	0xFD8
  9727                           
  9728 ;; *************** function _USBCheckStdRequest *****************
  9729 ;; Defined at:
  9730 ;;		line 2703 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  9731 ;; Parameters:    Size  Location     Type
  9732 ;;		None
  9733 ;; Auto vars:     Size  Location     Type
  9734 ;;		None
  9735 ;; Return value:  Size  Location     Type
  9736 ;;                  1    wreg      void 
  9737 ;; Registers used:
  9738 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9739 ;; Tracked objects:
  9740 ;;		On entry : 0/0
  9741 ;;		On exit  : 0/0
  9742 ;;		Unchanged: 0/0
  9743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9744 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9745 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9746 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9747 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9748 ;;Total ram usage:        0 bytes
  9749 ;; Hardware stack levels used:    1
  9750 ;; Hardware stack levels required when called:   16
  9751 ;; This function calls:
  9752 ;;		_USBStdFeatureReqHandler
  9753 ;;		_USBStdGetDscHandler
  9754 ;;		_USBStdGetStatusHandler
  9755 ;;		_USBStdSetCfgHandler
  9756 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  9757 ;; This function is called by:
  9758 ;;		_USBCtrlTrfSetupHandler
  9759 ;; This function uses a non-reentrant model
  9760 ;;
  9761                           
  9762                           	psect	text39
  9763  003710                     __ptext39:
  9764                           	opt stack 0
  9765  003710                     _USBCheckStdRequest:
  9766                           	opt stack 8
  9767                           
  9768                           ;usb_device.c: 2705: if(SetupPkt.RequestType != (0x00>>5)) return;
  9769                           
  9770                           ; BSR set to: 0
  9771                           ;incstack = 0
  9772  003710  0104               	movlb	4	; () banked
  9773  003712  3930               	swapf	48,w,b	;volatile
  9774  003714  32E8               	rrcf	wreg,f,c
  9775  003716  0B03               	andlw	3
  9776  003718  0900               	iorlw	0
  9777  00371A  A4D8               	btfss	status,2,c
  9778  00371C  0012               	return	
  9779  00371E  D048               	goto	l1808
  9780  003720                     l1809:
  9781                           
  9782                           ; BSR set to: 4
  9783                           ;usb_device.c: 2710: inPipes[0].info.bits.busy = 1;
  9784  003720  0100               	movlb	0	; () banked
  9785  003722  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
  9786                           
  9787                           ; BSR set to: 0
  9788                           ;usb_device.c: 2711: USBDeviceState = ADR_PENDING_STATE;
  9789  003724  0E08               	movlw	8
  9790  003726  6FCE               	movwf	_USBDeviceState& (0+255),b
  9791                           
  9792                           ;usb_device.c: 2713: break;
  9793  003728  0012               	return	
  9794  00372A                     
  9795                           ;usb_device.c: 2715: USBStdGetDscHandler();
  9796                           
  9797                           ; BSR set to: 0
  9798  00372A  ECED  F015         	call	_USBStdGetDscHandler	;wreg free
  9799                           
  9800                           ;usb_device.c: 2716: break;
  9801  00372E  0012               	return	
  9802  003730                     
  9803                           ;usb_device.c: 2718: USBStdSetCfgHandler();
  9804  003730  ECA2  F01A         	call	_USBStdSetCfgHandler	;wreg free
  9805                           
  9806                           ;usb_device.c: 2719: break;
  9807  003734  0012               	return	
  9808  003736                     
  9809                           ;usb_device.c: 2721: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
  9810  003736  0ED6               	movlw	low _USBActiveConfiguration
  9811  003738  0100               	movlb	0	; () banked
  9812  00373A  6FB0               	movwf	_inPipes& (0+255),b
  9813  00373C  0E00               	movlw	high _USBActiveConfiguration
  9814  00373E  6FB1               	movwf	(_inPipes+1)& (0+255),b
  9815                           
  9816                           ; BSR set to: 0
  9817                           ;usb_device.c: 2722: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  9818  003740  81B3               	bsf	(_inPipes+3)& (0+255),0,b
  9819                           
  9820                           ; BSR set to: 0
  9821                           ;usb_device.c: 2723: inPipes[0].wCount.v[0] = 1;
  9822  003742  0E01               	movlw	1
  9823  003744  6FB4               	movwf	(_inPipes+4)& (0+255),b
  9824                           
  9825                           ; BSR set to: 0
  9826                           ;usb_device.c: 2724: inPipes[0].info.bits.busy = 1;
  9827  003746  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
  9828                           
  9829                           ;usb_device.c: 2725: break;
  9830  003748  0012               	return	
  9831  00374A                     
  9832                           ;usb_device.c: 2727: USBStdGetStatusHandler();
  9833                           
  9834                           ; BSR set to: 0
  9835  00374A  ECC0  F022         	call	_USBStdGetStatusHandler	;wreg free
  9836                           
  9837                           ;usb_device.c: 2728: break;
  9838  00374E  0012               	return	
  9839  003750                     
  9840                           ;usb_device.c: 2730: case 3:
  9841                           ;usb_device.c: 2731: USBStdFeatureReqHandler();
  9842  003750  ECAD  F009         	call	_USBStdFeatureReqHandler	;wreg free
  9843                           
  9844                           ;usb_device.c: 2732: break;
  9845  003754  0012               	return	
  9846  003756                     
  9847                           ;usb_device.c: 2734: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
  9848  003756  0104               	movlb	4	; () banked
  9849  003758  5134               	movf	52,w,b	;volatile
  9850  00375A  0D01               	mullw	1
  9851  00375C  0EEF               	movlw	low _USBAlternateInterface
  9852  00375E  24F3               	addwf	prodl,w,c
  9853  003760  0100               	movlb	0	; () banked
  9854  003762  6FB0               	movwf	_inPipes& (0+255),b
  9855  003764  0E02               	movlw	high _USBAlternateInterface
  9856  003766  20F4               	addwfc	prodh,w,c
  9857  003768  6FB1               	movwf	(_inPipes+1)& (0+255),b
  9858                           
  9859                           ; BSR set to: 0
  9860                           ;usb_device.c: 2735: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  9861  00376A  81B3               	bsf	(_inPipes+3)& (0+255),0,b
  9862                           
  9863                           ; BSR set to: 0
  9864                           ;usb_device.c: 2736: inPipes[0].wCount.v[0] = 1;
  9865  00376C  0E01               	movlw	1
  9866  00376E  6FB4               	movwf	(_inPipes+4)& (0+255),b
  9867                           
  9868                           ; BSR set to: 0
  9869                           ;usb_device.c: 2737: inPipes[0].info.bits.busy = 1;
  9870  003770  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
  9871                           
  9872                           ;usb_device.c: 2738: break;
  9873  003772  0012               	return	
  9874  003774                     l1818:
  9875                           
  9876                           ; BSR set to: 4
  9877                           ;usb_device.c: 2740: inPipes[0].info.bits.busy = 1;
  9878  003774  0100               	movlb	0	; () banked
  9879  003776  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
  9880                           
  9881                           ; BSR set to: 0
  9882                           ;usb_device.c: 2741: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
  9883  003778  0104               	movlb	4	; () banked
  9884  00377A  5134               	movf	52,w,b	;volatile
  9885  00377C  0D01               	mullw	1
  9886  00377E  0EEF               	movlw	low _USBAlternateInterface
  9887  003780  24F3               	addwf	prodl,w,c
  9888  003782  6ED9               	movwf	fsr2l,c
  9889  003784  0E02               	movlw	high _USBAlternateInterface
  9890  003786  20F4               	addwfc	prodh,w,c
  9891  003788  6EDA               	movwf	fsr2h,c
  9892  00378A  C432 FFDF          	movff	1074,indf2	;volatile
  9893                           
  9894                           ;usb_device.c: 2742: break;
  9895  00378E  0012               	return	
  9896  003790                     
  9897                           ; BSR set to: 4
  9898                           ;usb_device.c: 2744: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
  9899                           
  9900                           ; BSR set to: 4
  9901  003790  0E00               	movlw	0
  9902  003792  0100               	movlb	0	; () banked
  9903  003794  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  9904  003796  0E02               	movlw	2
  9905  003798  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  9906  00379A  0E00               	movlw	0
  9907  00379C  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  9908  00379E  0E00               	movlw	0
  9909  0037A0  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  9910  0037A2  0E00               	movlw	0
  9911  0037A4  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  9912  0037A6  0E00               	movlw	0
  9913  0037A8  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  9914  0037AA  EC91  F02C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  9915                           
  9916                           ;usb_device.c: 2749: }
  9917                           
  9918                           ;usb_device.c: 2748: break;
  9919                           
  9920                           ;usb_device.c: 2747: default:
  9921                           
  9922                           ;usb_device.c: 2746: case 12:
  9923                           
  9924                           ;usb_device.c: 2745: break;
  9925  0037AE  0012               	return	
  9926  0037B0                     l1808:
  9927  0037B0  0104               	movlb	4	; () banked
  9928  0037B2  5131               	movf	49,w,b	;volatile
  9929                           
  9930                           ; Switch size 1, requested type "space"
  9931                           ; Number of cases is 11, Range of values is 0 to 12
  9932                           ; switch strategies available:
  9933                           ; Name         Instructions Cycles
  9934                           ; simple_byte           34    18 (average)
  9935                           ;	Chosen strategy is simple_byte
  9936  0037B4  0A00               	xorlw	0	; case 0
  9937  0037B6  B4D8               	btfsc	status,2,c
  9938  0037B8  D7C8               	goto	l1814
  9939  0037BA  0A01               	xorlw	1	; case 1
  9940  0037BC  B4D8               	btfsc	status,2,c
  9941  0037BE  D7C8               	goto	l1815
  9942  0037C0  0A02               	xorlw	2	; case 3
  9943  0037C2  B4D8               	btfsc	status,2,c
  9944  0037C4  D7C5               	goto	l1815
  9945  0037C6  0A06               	xorlw	6	; case 5
  9946  0037C8  B4D8               	btfsc	status,2,c
  9947  0037CA  D7AA               	goto	l1809
  9948  0037CC  0A03               	xorlw	3	; case 6
  9949  0037CE  B4D8               	btfsc	status,2,c
  9950  0037D0  D7AC               	goto	l1811
  9951  0037D2  0A01               	xorlw	1	; case 7
  9952  0037D4  B4D8               	btfsc	status,2,c
  9953  0037D6  D7DC               	goto	l1819
  9954  0037D8  0A0F               	xorlw	15	; case 8
  9955  0037DA  B4D8               	btfsc	status,2,c
  9956  0037DC  D7AC               	goto	l1813
  9957  0037DE  0A01               	xorlw	1	; case 9
  9958  0037E0  B4D8               	btfsc	status,2,c
  9959  0037E2  D7A6               	goto	l1812
  9960  0037E4  0A03               	xorlw	3	; case 10
  9961  0037E6  B4D8               	btfsc	status,2,c
  9962  0037E8  D7B6               	goto	l1817
  9963  0037EA  0A01               	xorlw	1	; case 11
  9964  0037EC  B4D8               	btfsc	status,2,c
  9965  0037EE  D7C2               	goto	l1818
  9966  0037F0  0A07               	xorlw	7	; case 12
  9967  0037F2  0012               	return	
  9968  0037F4                     __end_of_USBCheckStdRequest:
  9969                           	opt stack 0
  9970                           tosu	equ	0xFFF
  9971                           tosh	equ	0xFFE
  9972                           tosl	equ	0xFFD
  9973                           pclath	equ	0xFFA
  9974                           tblptru	equ	0xFF8
  9975                           tblptrh	equ	0xFF7
  9976                           tblptrl	equ	0xFF6
  9977                           tablat	equ	0xFF5
  9978                           prodh	equ	0xFF4
  9979                           prodl	equ	0xFF3
  9980                           intcon	equ	0xFF2
  9981                           intcon2	equ	0xFF1
  9982                           intcon3	equ	0xFF0
  9983                           postinc0	equ	0xFEE
  9984                           plusw0	equ	0xFEB
  9985                           wreg	equ	0xFE8
  9986                           postinc1	equ	0xFE6
  9987                           postdec1	equ	0xFE5
  9988                           fsr1h	equ	0xFE2
  9989                           fsr1l	equ	0xFE1
  9990                           indf2	equ	0xFDF
  9991                           postinc2	equ	0xFDE
  9992                           postdec2	equ	0xFDD
  9993                           plusw2	equ	0xFDB
  9994                           fsr2h	equ	0xFDA
  9995                           fsr2l	equ	0xFD9
  9996                           status	equ	0xFD8
  9997                           
  9998 ;; *************** function _USBStdSetCfgHandler *****************
  9999 ;; Defined at:
 10000 ;;		line 1986 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 10001 ;; Parameters:    Size  Location     Type
 10002 ;;		None
 10003 ;; Auto vars:     Size  Location     Type
 10004 ;;  i               1   49[BANK0 ] unsigned char 
 10005 ;; Return value:  Size  Location     Type
 10006 ;;                  1    wreg      void 
 10007 ;; Registers used:
 10008 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10009 ;; Tracked objects:
 10010 ;;		On entry : 0/0
 10011 ;;		On exit  : 0/0
 10012 ;;		Unchanged: 0/0
 10013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10014 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10015 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10017 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10018 ;;Total ram usage:        1 bytes
 10019 ;; Hardware stack levels used:    1
 10020 ;; Hardware stack levels required when called:   15
 10021 ;; This function calls:
 10022 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 10023 ;;		_memset
 10024 ;; This function is called by:
 10025 ;;		_USBCheckStdRequest
 10026 ;; This function uses a non-reentrant model
 10027 ;;
 10028                           
 10029                           	psect	text40
 10030  003544                     __ptext40:
 10031                           	opt stack 0
 10032  003544                     _USBStdSetCfgHandler:
 10033                           	opt stack 8
 10034                           
 10035                           ;usb_device.c: 1988: uint8_t i;
 10036                           ;usb_device.c: 1991: inPipes[0].info.bits.busy = 1;
 10037                           
 10038                           ;incstack = 0
 10039  003544  0100               	movlb	0	; () banked
 10040  003546  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 10041                           
 10042                           ; BSR set to: 0
 10043                           ;usb_device.c: 1994: memset((void*)&UEP1,0x00,(2));;
 10044  003548  0E27               	movlw	39
 10045  00354A  6F7D               	movwf	memset@p1& (0+255),b
 10046  00354C  0E0F               	movlw	15
 10047  00354E  6F7E               	movwf	(memset@p1+1)& (0+255),b
 10048  003550  0E00               	movlw	0
 10049  003552  6F80               	movwf	(memset@c+1)& (0+255),b
 10050  003554  0E00               	movlw	0
 10051  003556  6F7F               	movwf	memset@c& (0+255),b
 10052  003558  0E00               	movlw	0
 10053  00355A  6F82               	movwf	(memset@n+1)& (0+255),b
 10054  00355C  0E02               	movlw	2
 10055  00355E  6F81               	movwf	memset@n& (0+255),b
 10056  003560  EC32  F033         	call	_memset	;wreg free
 10057                           
 10058                           ;usb_device.c: 1997: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 10059  003564  0E00               	movlw	0
 10060  003566  0100               	movlb	0	; () banked
 10061  003568  6F7D               	movwf	memset@p1& (0+255),b
 10062  00356A  0E04               	movlw	4
 10063  00356C  6F7E               	movwf	(memset@p1+1)& (0+255),b
 10064  00356E  0E00               	movlw	0
 10065  003570  6F80               	movwf	(memset@c+1)& (0+255),b
 10066  003572  0E00               	movlw	0
 10067  003574  6F7F               	movwf	memset@c& (0+255),b
 10068  003576  0E00               	movlw	0
 10069  003578  6F82               	movwf	(memset@n+1)& (0+255),b
 10070  00357A  0E30               	movlw	48
 10071  00357C  6F81               	movwf	memset@n& (0+255),b
 10072  00357E  EC32  F033         	call	_memset	;wreg free
 10073                           
 10074                           ;usb_device.c: 2000: UCONbits.PPBRST = 1;
 10075  003582  8C65               	bsf	3941,6,c	;volatile
 10076                           
 10077                           ;usb_device.c: 2005: for(i = 0; i < (uint8_t)(2+1u); i++)
 10078  003584  0E00               	movlw	0
 10079  003586  0100               	movlb	0	; () banked
 10080  003588  6F91               	movwf	USBStdSetCfgHandler@i& (0+255),b
 10081  00358A                     l13285:
 10082                           
 10083                           ; BSR set to: 0
 10084  00358A  0E02               	movlw	2
 10085  00358C  6591               	cpfsgt	USBStdSetCfgHandler@i& (0+255),b
 10086  00358E  D001               	goto	l1725
 10087  003590  D016               	goto	u11880
 10088  003592                     l1725:
 10089                           
 10090                           ; BSR set to: 0
 10091                           ;usb_device.c: 2006: {
 10092                           ;usb_device.c: 2007: ep_data_in[i].Val = 0u;
 10093                           
 10094                           ; BSR set to: 0
 10095  003592  5191               	movf	USBStdSetCfgHandler@i& (0+255),w,b
 10096  003594  0D01               	mullw	1
 10097  003596  0ED2               	movlw	low _ep_data_in
 10098  003598  24F3               	addwf	prodl,w,c
 10099  00359A  6ED9               	movwf	fsr2l,c
 10100  00359C  0E02               	movlw	high _ep_data_in
 10101  00359E  20F4               	addwfc	prodh,w,c
 10102  0035A0  6EDA               	movwf	fsr2h,c
 10103  0035A2  0E00               	movlw	0
 10104  0035A4  6EDF               	movwf	indf2,c
 10105                           
 10106                           ;usb_device.c: 2008: ep_data_out[i].Val = 0u;
 10107  0035A6  5191               	movf	USBStdSetCfgHandler@i& (0+255),w,b
 10108  0035A8  0D01               	mullw	1
 10109  0035AA  0ECF               	movlw	low _ep_data_out
 10110  0035AC  24F3               	addwf	prodl,w,c
 10111  0035AE  6ED9               	movwf	fsr2l,c
 10112  0035B0  0E02               	movlw	high _ep_data_out
 10113  0035B2  20F4               	addwfc	prodh,w,c
 10114  0035B4  6EDA               	movwf	fsr2h,c
 10115  0035B6  0E00               	movlw	0
 10116  0035B8  6EDF               	movwf	indf2,c
 10117                           
 10118                           ; BSR set to: 0
 10119  0035BA  2B91               	incf	USBStdSetCfgHandler@i& (0+255),f,b
 10120  0035BC  D7E6               	goto	l13285
 10121  0035BE                     u11880:
 10122                           
 10123                           ; BSR set to: 0
 10124                           ;usb_device.c: 2009: }
 10125                           ;usb_device.c: 2012: memset((void*)&USBAlternateInterface,0x00,2);
 10126                           
 10127                           ; BSR set to: 0
 10128  0035BE  0EEF               	movlw	low _USBAlternateInterface
 10129  0035C0  6F7D               	movwf	memset@p1& (0+255),b
 10130  0035C2  0E02               	movlw	high _USBAlternateInterface
 10131  0035C4  6F7E               	movwf	(memset@p1+1)& (0+255),b
 10132  0035C6  0E00               	movlw	0
 10133  0035C8  6F80               	movwf	(memset@c+1)& (0+255),b
 10134  0035CA  0E00               	movlw	0
 10135  0035CC  6F7F               	movwf	memset@c& (0+255),b
 10136  0035CE  0E00               	movlw	0
 10137  0035D0  6F82               	movwf	(memset@n+1)& (0+255),b
 10138  0035D2  0E02               	movlw	2
 10139  0035D4  6F81               	movwf	memset@n& (0+255),b
 10140  0035D6  EC32  F033         	call	_memset	;wreg free
 10141                           
 10142                           ;usb_device.c: 2015: UCONbits.PPBRST = 0;
 10143  0035DA  9C65               	bcf	3941,6,c	;volatile
 10144                           
 10145                           ;usb_device.c: 2017: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 10146  0035DC  0E08               	movlw	8
 10147  0035DE  0100               	movlb	0	; () banked
 10148  0035E0  6FB6               	movwf	_pBDTEntryIn& (0+255),b
 10149  0035E2  0E04               	movlw	4
 10150  0035E4  6FB7               	movwf	(_pBDTEntryIn+1)& (0+255),b
 10151                           
 10152                           ; BSR set to: 0
 10153                           ;usb_device.c: 2020: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 10154  0035E6  0E00               	movlw	0
 10155  0035E8  6FC0               	movwf	_pBDTEntryEP0OutCurrent& (0+255),b
 10156  0035EA  0E04               	movlw	4
 10157  0035EC  6FC1               	movwf	(_pBDTEntryEP0OutCurrent+1)& (0+255),b
 10158                           
 10159                           ; BSR set to: 0
 10160                           ;usb_device.c: 2021: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 10161  0035EE  C0C0  F0BE         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 10162  0035F2  C0C1  F0BF         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 10163                           
 10164                           ; BSR set to: 0
 10165                           ;usb_device.c: 2024: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 10166  0035F6  C432 F0D6          	movff	1074,_USBActiveConfiguration	;volatile
 10167                           
 10168                           ; BSR set to: 0
 10169                           ;usb_device.c: 2027: if(USBActiveConfiguration == 0)
 10170  0035FA  51D6               	movf	_USBActiveConfiguration& (0+255),w,b
 10171  0035FC  A4D8               	btfss	status,2,c
 10172  0035FE  D003               	goto	l1727
 10173                           
 10174                           ; BSR set to: 0
 10175                           ;usb_device.c: 2028: {
 10176                           ;usb_device.c: 2030: USBDeviceState = ADDRESS_STATE;
 10177  003600  0E10               	movlw	16
 10178  003602  6FCE               	movwf	_USBDeviceState& (0+255),b
 10179                           
 10180                           ;usb_device.c: 2031: }
 10181  003604  0012               	return	
 10182  003606                     l1727:
 10183                           
 10184                           ; BSR set to: 0
 10185                           ;usb_device.c: 2032: else
 10186                           ;usb_device.c: 2033: {
 10187                           ;usb_device.c: 2035: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
 10188                           
 10189                           ; BSR set to: 0
 10190  003606  0E00               	movlw	0
 10191  003608  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
 10192  00360A  0E01               	movlw	1
 10193  00360C  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
 10194  00360E  0ED6               	movlw	low _USBActiveConfiguration
 10195  003610  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
 10196  003612  0E00               	movlw	high _USBActiveConfiguration
 10197  003614  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
 10198  003616  0E00               	movlw	0
 10199  003618  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
 10200  00361A  0E01               	movlw	1
 10201  00361C  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
 10202  00361E  EC91  F02C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 10203                           
 10204                           ;usb_device.c: 2040: USBDeviceState = CONFIGURED_STATE;
 10205  003622  0E20               	movlw	32
 10206  003624  0100               	movlb	0	; () banked
 10207  003626  6FCE               	movwf	_USBDeviceState& (0+255),b
 10208  003628  0012               	return	
 10209  00362A                     __end_of_USBStdSetCfgHandler:
 10210                           	opt stack 0
 10211                           tosu	equ	0xFFF
 10212                           tosh	equ	0xFFE
 10213                           tosl	equ	0xFFD
 10214                           pclath	equ	0xFFA
 10215                           tblptru	equ	0xFF8
 10216                           tblptrh	equ	0xFF7
 10217                           tblptrl	equ	0xFF6
 10218                           tablat	equ	0xFF5
 10219                           prodh	equ	0xFF4
 10220                           prodl	equ	0xFF3
 10221                           intcon	equ	0xFF2
 10222                           intcon2	equ	0xFF1
 10223                           intcon3	equ	0xFF0
 10224                           postinc0	equ	0xFEE
 10225                           plusw0	equ	0xFEB
 10226                           wreg	equ	0xFE8
 10227                           postinc1	equ	0xFE6
 10228                           postdec1	equ	0xFE5
 10229                           fsr1h	equ	0xFE2
 10230                           fsr1l	equ	0xFE1
 10231                           indf2	equ	0xFDF
 10232                           postinc2	equ	0xFDE
 10233                           postdec2	equ	0xFDD
 10234                           plusw2	equ	0xFDB
 10235                           fsr2h	equ	0xFDA
 10236                           fsr2l	equ	0xFD9
 10237                           status	equ	0xFD8
 10238                           
 10239 ;; *************** function _USBStdGetStatusHandler *****************
 10240 ;; Defined at:
 10241 ;;		line 2147 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 10242 ;; Parameters:    Size  Location     Type
 10243 ;;		None
 10244 ;; Auto vars:     Size  Location     Type
 10245 ;;  p               2   30[BANK0 ] PTR struct __BDT
 10246 ;;		 -> NULL(0), BDT(48), 
 10247 ;; Return value:  Size  Location     Type
 10248 ;;                  1    wreg      void 
 10249 ;; Registers used:
 10250 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10251 ;; Tracked objects:
 10252 ;;		On entry : 0/0
 10253 ;;		On exit  : 0/0
 10254 ;;		Unchanged: 0/0
 10255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10256 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10257 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10258 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10259 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10260 ;;Total ram usage:        3 bytes
 10261 ;; Hardware stack levels used:    1
 10262 ;; Hardware stack levels required when called:   11
 10263 ;; This function calls:
 10264 ;;		Nothing
 10265 ;; This function is called by:
 10266 ;;		_USBCheckStdRequest
 10267 ;; This function uses a non-reentrant model
 10268 ;;
 10269                           
 10270                           	psect	text41
 10271  004580                     __ptext41:
 10272                           	opt stack 0
 10273  004580                     _USBStdGetStatusHandler:
 10274                           	opt stack 12
 10275                           
 10276                           ;usb_device.c: 2149: CtrlTrfData[0] = 0;
 10277                           
 10278                           ; BSR set to: 0
 10279                           ;incstack = 0
 10280  004580  0E00               	movlw	0
 10281  004582  0104               	movlb	4	; () banked
 10282  004584  6F38               	movwf	56,b	;volatile
 10283                           
 10284                           ;usb_device.c: 2150: CtrlTrfData[1] = 0;
 10285  004586  0E00               	movlw	0
 10286  004588  6F39               	movwf	57,b	;volatile
 10287                           
 10288                           ;usb_device.c: 2152: switch(SetupPkt.Recipient)
 10289  00458A  D03D               	goto	l1746
 10290  00458C                     l1747:
 10291                           
 10292                           ; BSR set to: 4
 10293                           ;usb_device.c: 2155: inPipes[0].info.bits.busy = 1;
 10294  00458C  0100               	movlb	0	; () banked
 10295  00458E  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 10296                           
 10297                           ;usb_device.c: 2163: }
 10298                           ;usb_device.c: 2165: if(RemoteWakeup == 1)
 10299                           
 10300                           ; BSR set to: 4
 10301                           
 10302                           ; BSR set to: 0
 10303                           ;usb_device.c: 2161: {
 10304                           ;usb_device.c: 2162: CtrlTrfData[0]|=0x01;
 10305                           
 10306                           ;usb_device.c: 2160: if(0 == 1)
 10307  004590  0101               	movlb	1	; () banked
 10308  004592  05E0               	decf	_RemoteWakeup& (0+255),w,b
 10309  004594  A4D8               	btfss	status,2,c
 10310  004596  D042               	goto	l1750
 10311                           
 10312                           ; BSR set to: 1
 10313                           ;usb_device.c: 2166: {
 10314                           ;usb_device.c: 2167: CtrlTrfData[0]|=0x02;
 10315  004598  0104               	movlb	4	; () banked
 10316  00459A  8338               	bsf	56,1,b	;volatile
 10317                           
 10318                           ; BSR set to: 4
 10319                           ;usb_device.c: 2168: }
 10320                           ;usb_device.c: 2169: break;
 10321  00459C  D03F               	goto	l1750
 10322  00459E                     l1751:
 10323                           
 10324                           ; BSR set to: 4
 10325                           ;usb_device.c: 2171: inPipes[0].info.bits.busy = 1;
 10326  00459E  0100               	movlb	0	; () banked
 10327  0045A0  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 10328                           
 10329                           ;usb_device.c: 2172: break;
 10330  0045A2  D03C               	goto	l1750
 10331  0045A4                     l1752:
 10332                           
 10333                           ; BSR set to: 4
 10334                           ;usb_device.c: 2174: inPipes[0].info.bits.busy = 1;
 10335  0045A4  0100               	movlb	0	; () banked
 10336  0045A6  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 10337                           
 10338                           ;usb_device.c: 2178: {
 10339                           ;usb_device.c: 2179: BDT_ENTRY *p;
 10340                           ;usb_device.c: 2181: if(SetupPkt.EPDir == 0)
 10341  0045A8  0104               	movlb	4	; () banked
 10342  0045AA  BF34               	btfsc	52,7,b	;volatile
 10343  0045AC  D00B               	goto	l1753
 10344                           
 10345                           ; BSR set to: 4
 10346                           ;usb_device.c: 2182: {
 10347                           ;usb_device.c: 2183: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 10348  0045AE  5134               	movf	52,w,b	;volatile
 10349  0045B0  0B0F               	andlw	15
 10350  0045B2  0100               	movlb	0	; () banked
 10351  0045B4  6F7D               	movwf	??_USBStdGetStatusHandler& (0+255),b
 10352  0045B6  517D               	movf	??_USBStdGetStatusHandler& (0+255),w,b
 10353  0045B8  0D02               	mullw	2
 10354  0045BA  0E06               	movlw	low _pBDTEntryOut
 10355  0045BC  24F3               	addwf	prodl,w,c
 10356  0045BE  6ED9               	movwf	fsr2l,c
 10357  0045C0  0E03               	movlw	high _pBDTEntryOut
 10358  0045C2  D00B               	goto	L4
 10359  0045C4                     l1753:
 10360                           
 10361                           ;usb_device.c: 2185: else
 10362                           ;usb_device.c: 2186: {
 10363                           ;usb_device.c: 2187: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 10364                           
 10365                           ; BSR set to: 0
 10366  0045C4  0104               	movlb	4	; () banked
 10367  0045C6  5134               	movf	52,w,b	;volatile
 10368  0045C8  0B0F               	andlw	15
 10369  0045CA  0100               	movlb	0	; () banked
 10370  0045CC  6F7D               	movwf	??_USBStdGetStatusHandler& (0+255),b
 10371  0045CE  517D               	movf	??_USBStdGetStatusHandler& (0+255),w,b
 10372  0045D0  0D02               	mullw	2
 10373  0045D2  0EB6               	movlw	low _pBDTEntryIn
 10374  0045D4  24F3               	addwf	prodl,w,c
 10375  0045D6  6ED9               	movwf	fsr2l,c
 10376  0045D8  0E00               	movlw	high _pBDTEntryIn
 10377  0045DA                     L4:
 10378  0045DA  20F4               	addwfc	prodh,w,c
 10379  0045DC  6EDA               	movwf	fsr2h,c
 10380  0045DE  CFDE F07E          	movff	postinc2,USBStdGetStatusHandler@p
 10381  0045E2  CFDD F07F          	movff	postdec2,USBStdGetStatusHandler@p+1
 10382                           
 10383                           ; BSR set to: 0
 10384                           ;usb_device.c: 2188: }
 10385                           ;usb_device.c: 2190: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
 10386                           
 10387                           ; BSR set to: 0
 10388  0045E6  C07E  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 10389  0045EA  C07F  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 10390  0045EE  AEDF               	btfss	indf2,7,c
 10391  0045F0  D015               	goto	l1750
 10392                           
 10393                           ; BSR set to: 0
 10394  0045F2  C07E  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 10395  0045F6  C07F  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 10396  0045FA  A4DF               	btfss	indf2,2,c
 10397  0045FC  D00F               	goto	l1750
 10398                           
 10399                           ; BSR set to: 0
 10400                           ;usb_device.c: 2191: CtrlTrfData[0]=0x01;
 10401  0045FE  0E01               	movlw	1
 10402  004600  0104               	movlb	4	; () banked
 10403  004602  6F38               	movwf	56,b	;volatile
 10404                           
 10405                           ; BSR set to: 4
 10406                           ;usb_device.c: 2193: }
 10407                           ;usb_device.c: 2194: }
 10408                           
 10409                           ; BSR set to: 4
 10410                           ;usb_device.c: 2192: break;
 10411  004604  D00B               	goto	l1750
 10412  004606                     l1746:
 10413                           
 10414                           ; BSR set to: 4
 10415                           
 10416                           ; BSR set to: 4
 10417  004606  5130               	movf	48,w,b	;volatile
 10418  004608  0B1F               	andlw	31
 10419                           
 10420                           ; Switch size 1, requested type "space"
 10421                           ; Number of cases is 3, Range of values is 0 to 2
 10422                           ; switch strategies available:
 10423                           ; Name         Instructions Cycles
 10424                           ; simple_byte           10     6 (average)
 10425                           ;	Chosen strategy is simple_byte
 10426  00460A  0A00               	xorlw	0	; case 0
 10427  00460C  B4D8               	btfsc	status,2,c
 10428  00460E  D7BE               	goto	l1747
 10429  004610  0A01               	xorlw	1	; case 1
 10430  004612  B4D8               	btfsc	status,2,c
 10431  004614  D7C4               	goto	l1751
 10432  004616  0A03               	xorlw	3	; case 2
 10433  004618  B4D8               	btfsc	status,2,c
 10434  00461A  D7C4               	goto	l1752
 10435  00461C                     l1750:
 10436                           
 10437                           ;usb_device.c: 2196: if(inPipes[0].info.bits.busy == 1)
 10438  00461C  0100               	movlb	0	; () banked
 10439  00461E  AFB3               	btfss	(_inPipes+3)& (0+255),7,b
 10440  004620  0012               	return	
 10441                           
 10442                           ; BSR set to: 0
 10443                           ;usb_device.c: 2197: {
 10444                           ;usb_device.c: 2198: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
 10445  004622  0E38               	movlw	56
 10446  004624  6FB0               	movwf	_inPipes& (0+255),b
 10447  004626  0E04               	movlw	4
 10448  004628  6FB1               	movwf	(_inPipes+1)& (0+255),b
 10449                           
 10450                           ; BSR set to: 0
 10451                           ;usb_device.c: 2199: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 10452  00462A  81B3               	bsf	(_inPipes+3)& (0+255),0,b
 10453                           
 10454                           ; BSR set to: 0
 10455                           ;usb_device.c: 2200: inPipes[0].wCount.v[0] = 2;
 10456  00462C  0E02               	movlw	2
 10457  00462E  6FB4               	movwf	(_inPipes+4)& (0+255),b
 10458  004630  0012               	return	
 10459  004632                     __end_of_USBStdGetStatusHandler:
 10460                           	opt stack 0
 10461                           tosu	equ	0xFFF
 10462                           tosh	equ	0xFFE
 10463                           tosl	equ	0xFFD
 10464                           pclath	equ	0xFFA
 10465                           tblptru	equ	0xFF8
 10466                           tblptrh	equ	0xFF7
 10467                           tblptrl	equ	0xFF6
 10468                           tablat	equ	0xFF5
 10469                           prodh	equ	0xFF4
 10470                           prodl	equ	0xFF3
 10471                           intcon	equ	0xFF2
 10472                           intcon2	equ	0xFF1
 10473                           intcon3	equ	0xFF0
 10474                           postinc0	equ	0xFEE
 10475                           plusw0	equ	0xFEB
 10476                           wreg	equ	0xFE8
 10477                           postinc1	equ	0xFE6
 10478                           postdec1	equ	0xFE5
 10479                           fsr1h	equ	0xFE2
 10480                           fsr1l	equ	0xFE1
 10481                           indf2	equ	0xFDF
 10482                           postinc2	equ	0xFDE
 10483                           postdec2	equ	0xFDD
 10484                           plusw2	equ	0xFDB
 10485                           fsr2h	equ	0xFDA
 10486                           fsr2l	equ	0xFD9
 10487                           status	equ	0xFD8
 10488                           
 10489 ;; *************** function _USBStdGetDscHandler *****************
 10490 ;; Defined at:
 10491 ;;		line 2061 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 10492 ;; Parameters:    Size  Location     Type
 10493 ;;		None
 10494 ;; Auto vars:     Size  Location     Type
 10495 ;;		None
 10496 ;; Return value:  Size  Location     Type
 10497 ;;                  1    wreg      void 
 10498 ;; Registers used:
 10499 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 10500 ;; Tracked objects:
 10501 ;;		On entry : 0/0
 10502 ;;		On exit  : 0/0
 10503 ;;		Unchanged: 0/0
 10504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10505 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10506 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10507 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10508 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10509 ;;Total ram usage:        2 bytes
 10510 ;; Hardware stack levels used:    1
 10511 ;; Hardware stack levels required when called:   11
 10512 ;; This function calls:
 10513 ;;		Nothing
 10514 ;; This function is called by:
 10515 ;;		_USBCheckStdRequest
 10516 ;; This function uses a non-reentrant model
 10517 ;;
 10518                           
 10519                           	psect	text42
 10520  002BDA                     __ptext42:
 10521                           	opt stack 0
 10522  002BDA                     _USBStdGetDscHandler:
 10523                           	opt stack 12
 10524                           
 10525                           ;usb_device.c: 2063: if(SetupPkt.bmRequestType == 0x80)
 10526                           
 10527                           ; BSR set to: 0
 10528                           ;incstack = 0
 10529  002BDA  0E80               	movlw	128
 10530  002BDC  0104               	movlb	4	; () banked
 10531  002BDE  1930               	xorwf	48,w,b	;volatile
 10532  002BE0  A4D8               	btfss	status,2,c
 10533  002BE2  0012               	return	
 10534                           
 10535                           ; BSR set to: 4
 10536                           ;usb_device.c: 2064: {
 10537                           ;usb_device.c: 2065: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 10538  002BE4  0EC0               	movlw	192
 10539  002BE6  0100               	movlb	0	; () banked
 10540  002BE8  6FB3               	movwf	(_inPipes+3)& (0+255),b
 10541                           
 10542                           ;usb_device.c: 2067: switch(SetupPkt.bDescriptorType)
 10543  002BEA  D082               	goto	l1733
 10544  002BEC                     
 10545                           ;usb_device.c: 2073: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 10546                           
 10547                           ; BSR set to: 0
 10548  002BEC  0E49               	movlw	low _device_dsc
 10549  002BEE  0100               	movlb	0	; () banked
 10550  002BF0  6FB0               	movwf	_inPipes& (0+255),b
 10551  002BF2  0EFE               	movlw	high _device_dsc
 10552  002BF4  6FB1               	movwf	(_inPipes+1)& (0+255),b
 10553                           
 10554                           ; BSR set to: 0
 10555                           ;usb_device.c: 2075: inPipes[0].wCount.Val = sizeof(device_dsc);
 10556  002BF6  0E00               	movlw	0
 10557  002BF8  6FB5               	movwf	(_inPipes+5)& (0+255),b
 10558  002BFA  0E12               	movlw	18
 10559  002BFC  6FB4               	movwf	(_inPipes+4)& (0+255),b
 10560                           
 10561                           ;usb_device.c: 2076: break;
 10562  002BFE  0012               	return	
 10563  002C00                     
 10564                           ;usb_device.c: 2081: if(SetupPkt.bDscIndex < 1)
 10565                           
 10566                           ; BSR set to: 0
 10567  002C00  0104               	movlb	4	; () banked
 10568  002C02  5132               	movf	50,w,b	;volatile
 10569  002C04  A4D8               	btfss	status,2,c
 10570  002C06  D040               	goto	l1737
 10571                           
 10572                           ; BSR set to: 4
 10573                           ;usb_device.c: 2082: {
 10574                           ;usb_device.c: 2086: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
 10575  002C08  5132               	movf	50,w,b	;volatile
 10576  002C0A  0D02               	mullw	2
 10577  002C0C  0E2E               	movlw	low _USB_CD_Ptr
 10578  002C0E  24F3               	addwf	prodl,w,c
 10579  002C10  6EF6               	movwf	tblptrl,c
 10580  002C12  0EFC               	movlw	high _USB_CD_Ptr
 10581  002C14  20F4               	addwfc	prodh,w,c
 10582  002C16  6EF7               	movwf	tblptrh,c
 10583  002C18                     	if	0	;There are less than 3 active tblptr bytes
 10584  002C18                     	endif
 10585  002C18  0009               	tblrd		*+
 10586  002C1A  CFF5 F0B0          	movff	tablat,_inPipes
 10587  002C1E  000A               	tblrd		*-
 10588  002C20  CFF5 F0B1          	movff	tablat,_inPipes+1
 10589                           
 10590                           ; BSR set to: 4
 10591                           ;usb_device.c: 2092: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 10592  002C24  0E02               	movlw	2
 10593  002C26  0100               	movlb	0	; () banked
 10594  002C28  25B0               	addwf	_inPipes& (0+255),w,b
 10595  002C2A  6F7D               	movwf	??_USBStdGetDscHandler& (0+255),b
 10596  002C2C  0E00               	movlw	0
 10597  002C2E  21B1               	addwfc	(_inPipes+1)& (0+255),w,b
 10598  002C30  6F7E               	movwf	(??_USBStdGetDscHandler+1)& (0+255),b
 10599  002C32  C07D  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 10600  002C36  C07E  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 10601  002C3A  6AF8               	clrf	tblptru,c
 10602  002C3C  0E0E               	movlw	(high __ramtop+-1)
 10603  002C3E  64F7               	cpfsgt	tblptrh,c
 10604  002C40  D003               	bra	u11927
 10605  002C42  0008               	tblrd		*
 10606  002C44  50F5               	movf	tablat,w,c
 10607  002C46  D005               	bra	u11920
 10608  002C48                     u11927:
 10609  002C48  CFF6 FFE9          	movff	tblptrl,fsr0l
 10610  002C4C  CFF7 FFEA          	movff	tblptrh,fsr0h
 10611  002C50  50EF               	movf	indf0,w,c
 10612  002C52                     u11920:
 10613  002C52  0100               	movlb	0	; () banked
 10614  002C54  6FB4               	movwf	(_inPipes+4)& (0+255),b
 10615                           
 10616                           ; BSR set to: 0
 10617                           ;usb_device.c: 2093: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 10618  002C56  0E03               	movlw	3
 10619  002C58  25B0               	addwf	_inPipes& (0+255),w,b
 10620  002C5A  6F7D               	movwf	??_USBStdGetDscHandler& (0+255),b
 10621  002C5C  0E00               	movlw	0
 10622  002C5E  21B1               	addwfc	(_inPipes+1)& (0+255),w,b
 10623  002C60  6F7E               	movwf	(??_USBStdGetDscHandler+1)& (0+255),b
 10624  002C62  C07D  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 10625  002C66  C07E  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 10626  002C6A  6AF8               	clrf	tblptru,c
 10627  002C6C  0E0E               	movlw	(high __ramtop+-1)
 10628  002C6E  64F7               	cpfsgt	tblptrh,c
 10629  002C70  D003               	bra	u11937
 10630  002C72  0008               	tblrd		*
 10631  002C74  50F5               	movf	tablat,w,c
 10632  002C76  D005               	bra	u11930
 10633  002C78                     u11937:
 10634  002C78  CFF6 FFE9          	movff	tblptrl,fsr0l
 10635  002C7C  CFF7 FFEA          	movff	tblptrh,fsr0h
 10636  002C80  50EF               	movf	indf0,w,c
 10637  002C82                     u11930:
 10638  002C82  0100               	movlb	0	; () banked
 10639  002C84  6FB5               	movwf	(_inPipes+5)& (0+255),b
 10640                           
 10641                           ;usb_device.c: 2094: }
 10642  002C86  0012               	return	
 10643  002C88                     l1737:
 10644                           
 10645                           ;usb_device.c: 2095: else
 10646                           ;usb_device.c: 2096: {
 10647                           ;usb_device.c: 2097: inPipes[0].info.Val = 0;
 10648                           
 10649                           ; BSR set to: 0
 10650  002C88  0E00               	movlw	0
 10651  002C8A  0100               	movlb	0	; () banked
 10652  002C8C  6FB3               	movwf	(_inPipes+3)& (0+255),b
 10653                           
 10654                           ; BSR set to: 0
 10655                           ;usb_device.c: 2098: }
 10656                           ;usb_device.c: 2099: break;
 10657  002C8E  0012               	return	
 10658  002C90                     
 10659                           ;usb_device.c: 2104: if(SetupPkt.bDscIndex<3)
 10660                           
 10661                           ; BSR set to: 0
 10662  002C90  0E03               	movlw	3
 10663  002C92  0104               	movlb	4	; () banked
 10664  002C94  6132               	cpfslt	50,b	;volatile
 10665  002C96  D024               	goto	l1740
 10666                           
 10667                           ; BSR set to: 4
 10668                           ;usb_device.c: 2105: {
 10669                           ;usb_device.c: 2107: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
 10670  002C98  5132               	movf	50,w,b	;volatile
 10671  002C9A  0D02               	mullw	2
 10672  002C9C  0E1C               	movlw	low _USB_SD_Ptr
 10673  002C9E  24F3               	addwf	prodl,w,c
 10674  002CA0  6EF6               	movwf	tblptrl,c
 10675  002CA2  0EFC               	movlw	high _USB_SD_Ptr
 10676  002CA4  20F4               	addwfc	prodh,w,c
 10677  002CA6  6EF7               	movwf	tblptrh,c
 10678  002CA8                     	if	0	;There are less than 3 active tblptr bytes
 10679  002CA8                     	endif
 10680  002CA8  0009               	tblrd		*+
 10681  002CAA  CFF5 F0B0          	movff	tablat,_inPipes
 10682  002CAE  000A               	tblrd		*-
 10683  002CB0  CFF5 F0B1          	movff	tablat,_inPipes+1
 10684                           
 10685                           ; BSR set to: 4
 10686                           ;usb_device.c: 2109: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 10687  002CB4  C0B0  FFF6         	movff	_inPipes,tblptrl
 10688  002CB8  C0B1  FFF7         	movff	_inPipes+1,tblptrh
 10689  002CBC  6AF8               	clrf	tblptru,c
 10690  002CBE  0E0E               	movlw	(high __ramtop+-1)
 10691  002CC0  64F7               	cpfsgt	tblptrh,c
 10692  002CC2  D003               	bra	u11957
 10693  002CC4  0008               	tblrd		*
 10694  002CC6  50F5               	movf	tablat,w,c
 10695  002CC8  D005               	bra	u11950
 10696  002CCA                     u11957:
 10697  002CCA  CFF6 FFE9          	movff	tblptrl,fsr0l
 10698  002CCE  CFF7 FFEA          	movff	tblptrh,fsr0h
 10699  002CD2  50EF               	movf	indf0,w,c
 10700  002CD4                     u11950:
 10701  002CD4  0100               	movlb	0	; () banked
 10702  002CD6  6F7D               	movwf	??_USBStdGetDscHandler& (0+255),b
 10703  002CD8  517D               	movf	??_USBStdGetDscHandler& (0+255),w,b
 10704  002CDA  6FB4               	movwf	(_inPipes+4)& (0+255),b
 10705  002CDC  6BB5               	clrf	(_inPipes+5)& (0+255),b
 10706                           
 10707                           ;usb_device.c: 2110: }
 10708  002CDE  0012               	return	
 10709  002CE0                     l1740:
 10710                           
 10711                           ;usb_device.c: 2120: else
 10712                           ;usb_device.c: 2121: {
 10713                           ;usb_device.c: 2122: inPipes[0].info.Val = 0;
 10714                           
 10715                           ; BSR set to: 0
 10716  002CE0  0E00               	movlw	0
 10717  002CE2  0100               	movlb	0	; () banked
 10718  002CE4  6FB3               	movwf	(_inPipes+3)& (0+255),b
 10719                           
 10720                           ; BSR set to: 0
 10721                           ;usb_device.c: 2123: }
 10722                           ;usb_device.c: 2124: break;
 10723  002CE6  0012               	return	
 10724  002CE8                     
 10725                           ;usb_device.c: 2126: inPipes[0].info.Val = 0;
 10726                           
 10727                           ; BSR set to: 0
 10728  002CE8  0E00               	movlw	0
 10729  002CEA  0100               	movlb	0	; () banked
 10730  002CEC  6FB3               	movwf	(_inPipes+3)& (0+255),b
 10731                           
 10732                           ; BSR set to: 0
 10733                           ;usb_device.c: 2128: }
 10734                           
 10735                           ;usb_device.c: 2127: break;
 10736  002CEE  0012               	return	
 10737  002CF0                     l1733:
 10738                           
 10739                           ; BSR set to: 0
 10740                           
 10741                           ; BSR set to: 0
 10742  002CF0  0104               	movlb	4	; () banked
 10743  002CF2  5133               	movf	51,w,b	;volatile
 10744                           
 10745                           ; Switch size 1, requested type "space"
 10746                           ; Number of cases is 3, Range of values is 1 to 3
 10747                           ; switch strategies available:
 10748                           ; Name         Instructions Cycles
 10749                           ; simple_byte           10     6 (average)
 10750                           ;	Chosen strategy is simple_byte
 10751  002CF4  0A01               	xorlw	1	; case 1
 10752  002CF6  B4D8               	btfsc	status,2,c
 10753  002CF8  D779               	goto	l1734
 10754  002CFA  0A03               	xorlw	3	; case 2
 10755  002CFC  B4D8               	btfsc	status,2,c
 10756  002CFE  D780               	goto	l1736
 10757  002D00  0A01               	xorlw	1	; case 3
 10758  002D02  B4D8               	btfsc	status,2,c
 10759  002D04  D7C5               	goto	l1739
 10760  002D06  D7F0               	goto	l1742
 10761  002D08                     __end_of_USBStdGetDscHandler:
 10762                           	opt stack 0
 10763                           tosu	equ	0xFFF
 10764                           tosh	equ	0xFFE
 10765                           tosl	equ	0xFFD
 10766                           pclath	equ	0xFFA
 10767                           tblptru	equ	0xFF8
 10768                           tblptrh	equ	0xFF7
 10769                           tblptrl	equ	0xFF6
 10770                           tablat	equ	0xFF5
 10771                           prodh	equ	0xFF4
 10772                           prodl	equ	0xFF3
 10773                           intcon	equ	0xFF2
 10774                           intcon2	equ	0xFF1
 10775                           intcon3	equ	0xFF0
 10776                           indf0	equ	0xFEF
 10777                           postinc0	equ	0xFEE
 10778                           plusw0	equ	0xFEB
 10779                           fsr0h	equ	0xFEA
 10780                           fsr0l	equ	0xFE9
 10781                           wreg	equ	0xFE8
 10782                           postinc1	equ	0xFE6
 10783                           postdec1	equ	0xFE5
 10784                           fsr1h	equ	0xFE2
 10785                           fsr1l	equ	0xFE1
 10786                           indf2	equ	0xFDF
 10787                           postinc2	equ	0xFDE
 10788                           postdec2	equ	0xFDD
 10789                           plusw2	equ	0xFDB
 10790                           fsr2h	equ	0xFDA
 10791                           fsr2l	equ	0xFD9
 10792                           status	equ	0xFD8
 10793                           
 10794 ;; *************** function _USBStdFeatureReqHandler *****************
 10795 ;; Defined at:
 10796 ;;		line 2771 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 10797 ;; Parameters:    Size  Location     Type
 10798 ;;		None
 10799 ;; Auto vars:     Size  Location     Type
 10800 ;;  p               2   53[BANK0 ] PTR struct __BDT
 10801 ;;		 -> NULL(0), BDT(48), 
 10802 ;;  pUEP            2   50[BANK0 ] PTR unsigned char 
 10803 ;;		 -> UEP0(1), 
 10804 ;;  current_ep_d    1   52[BANK0 ] struct .
 10805 ;; Return value:  Size  Location     Type
 10806 ;;                  1    wreg      void 
 10807 ;; Registers used:
 10808 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10809 ;; Tracked objects:
 10810 ;;		On entry : 0/0
 10811 ;;		On exit  : 0/0
 10812 ;;		Unchanged: 0/0
 10813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10814 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10815 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10816 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10817 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10818 ;;Total ram usage:        6 bytes
 10819 ;; Hardware stack levels used:    1
 10820 ;; Hardware stack levels required when called:   15
 10821 ;; This function calls:
 10822 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 10823 ;; This function is called by:
 10824 ;;		_USBCheckStdRequest
 10825 ;; This function uses a non-reentrant model
 10826 ;;
 10827                           
 10828                           	psect	text43
 10829  00135A                     __ptext43:
 10830                           	opt stack 0
 10831  00135A                     _USBStdFeatureReqHandler:
 10832                           	opt stack 8
 10833                           
 10834                           ;usb_device.c: 2773: BDT_ENTRY *p;
 10835                           ;usb_device.c: 2774: EP_STATUS current_ep_data;
 10836                           ;usb_device.c: 2778: unsigned char* pUEP;
 10837                           ;usb_device.c: 2816: if((SetupPkt.bFeature == 1)&&
 10838                           ;usb_device.c: 2817: (SetupPkt.Recipient == (0x00)))
 10839                           
 10840                           ;incstack = 0
 10841  00135A  0104               	movlb	4	; () banked
 10842  00135C  0532               	decf	50,w,b	;volatile
 10843  00135E  A4D8               	btfss	status,2,c
 10844  001360  D011               	goto	l1826
 10845                           
 10846                           ; BSR set to: 4
 10847  001362  5130               	movf	48,w,b	;volatile
 10848  001364  0B1F               	andlw	31
 10849  001366  0900               	iorlw	0
 10850  001368  A4D8               	btfss	status,2,c
 10851  00136A  D00C               	goto	l1826
 10852                           
 10853                           ; BSR set to: 4
 10854                           ;usb_device.c: 2818: {
 10855                           ;usb_device.c: 2819: inPipes[0].info.bits.busy = 1;
 10856  00136C  0100               	movlb	0	; () banked
 10857  00136E  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 10858                           
 10859                           ; BSR set to: 0
 10860                           ;usb_device.c: 2820: if(SetupPkt.bRequest == 3)
 10861  001370  0E03               	movlw	3
 10862  001372  0104               	movlb	4	; () banked
 10863  001374  1931               	xorwf	49,w,b	;volatile
 10864  001376  A4D8               	btfss	status,2,c
 10865  001378  D002               	goto	l1825
 10866                           
 10867                           ; BSR set to: 4
 10868                           ;usb_device.c: 2821: RemoteWakeup = 1;
 10869  00137A  0E01               	movlw	1
 10870  00137C  D001               	goto	L5
 10871  00137E                     l1825:
 10872                           
 10873                           ;usb_device.c: 2822: else
 10874                           ;usb_device.c: 2823: RemoteWakeup = 0;
 10875                           
 10876                           ; BSR set to: 1
 10877  00137E  0E00               	movlw	0
 10878  001380                     L5:
 10879  001380  0101               	movlb	1	; () banked
 10880  001382  6FE0               	movwf	_RemoteWakeup& (0+255),b
 10881  001384                     l1826:
 10882                           
 10883                           ;usb_device.c: 2824: }
 10884                           ;usb_device.c: 2827: if((SetupPkt.bFeature == 0)&&
 10885                           ;usb_device.c: 2828: (SetupPkt.Recipient == (0x02))&&
 10886                           ;usb_device.c: 2829: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
 10887                           ;usb_device.c: 2830: (USBDeviceState == CONFIGURED_STATE))
 10888                           
 10889                           ; BSR set to: 1
 10890  001384  0104               	movlb	4	; () banked
 10891  001386  5132               	movf	50,w,b	;volatile
 10892  001388  A4D8               	btfss	status,2,c
 10893  00138A  0012               	return	
 10894                           
 10895                           ; BSR set to: 4
 10896  00138C  5130               	movf	48,w,b	;volatile
 10897  00138E  0B1F               	andlw	31
 10898  001390  0A02               	xorlw	2
 10899  001392  A4D8               	btfss	status,2,c
 10900  001394  0012               	return	
 10901                           
 10902                           ; BSR set to: 4
 10903  001396  5134               	movf	52,w,b	;volatile
 10904  001398  0B0F               	andlw	15
 10905  00139A  0900               	iorlw	0
 10906  00139C  B4D8               	btfsc	status,2,c
 10907  00139E  0012               	return	
 10908                           
 10909                           ; BSR set to: 4
 10910  0013A0  5134               	movf	52,w,b	;volatile
 10911  0013A2  0B0F               	andlw	15
 10912  0013A4  0100               	movlb	0	; () banked
 10913  0013A6  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10914  0013A8  0E03               	movlw	3
 10915  0013AA  6191               	cpfslt	??_USBStdFeatureReqHandler& (0+255),b
 10916  0013AC  0012               	return	
 10917                           
 10918                           ; BSR set to: 0
 10919  0013AE  0E20               	movlw	32
 10920  0013B0  19CE               	xorwf	_USBDeviceState& (0+255),w,b
 10921  0013B2  A4D8               	btfss	status,2,c
 10922  0013B4  0012               	return	
 10923                           
 10924                           ; BSR set to: 0
 10925                           ;usb_device.c: 2831: {
 10926                           ;usb_device.c: 2834: inPipes[0].info.bits.busy = 1;
 10927  0013B6  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 10928                           
 10929                           ;usb_device.c: 2837: if(SetupPkt.EPDir == 0)
 10930  0013B8  0104               	movlb	4	; () banked
 10931  0013BA  BF34               	btfsc	52,7,b	;volatile
 10932  0013BC  D01C               	goto	l1828
 10933                           
 10934                           ; BSR set to: 4
 10935                           ;usb_device.c: 2838: {
 10936                           ;usb_device.c: 2839: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 10937  0013BE  5134               	movf	52,w,b	;volatile
 10938  0013C0  0B0F               	andlw	15
 10939  0013C2  0100               	movlb	0	; () banked
 10940  0013C4  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10941  0013C6  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10942  0013C8  0D02               	mullw	2
 10943  0013CA  0E06               	movlw	low _pBDTEntryOut
 10944  0013CC  24F3               	addwf	prodl,w,c
 10945  0013CE  6ED9               	movwf	fsr2l,c
 10946  0013D0  0E03               	movlw	high _pBDTEntryOut
 10947  0013D2  20F4               	addwfc	prodh,w,c
 10948  0013D4  6EDA               	movwf	fsr2h,c
 10949  0013D6  CFDE F095          	movff	postinc2,USBStdFeatureReqHandler@p
 10950  0013DA  CFDD F096          	movff	postdec2,USBStdFeatureReqHandler@p+1
 10951                           
 10952                           ;usb_device.c: 2840: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 10953  0013DE  0104               	movlb	4	; () banked
 10954  0013E0  5134               	movf	52,w,b	;volatile
 10955  0013E2  0B0F               	andlw	15
 10956  0013E4  0100               	movlb	0	; () banked
 10957  0013E6  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10958  0013E8  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10959  0013EA  0D01               	mullw	1
 10960  0013EC  0ECF               	movlw	low _ep_data_out
 10961  0013EE  24F3               	addwf	prodl,w,c
 10962  0013F0  6ED9               	movwf	fsr2l,c
 10963  0013F2  0E02               	movlw	high _ep_data_out
 10964  0013F4  D01C               	goto	L6
 10965  0013F6                     l1828:
 10966                           
 10967                           ;usb_device.c: 2842: else
 10968                           ;usb_device.c: 2843: {
 10969                           ;usb_device.c: 2844: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 10970                           
 10971                           ; BSR set to: 0
 10972  0013F6  0104               	movlb	4	; () banked
 10973  0013F8  5134               	movf	52,w,b	;volatile
 10974  0013FA  0B0F               	andlw	15
 10975  0013FC  0100               	movlb	0	; () banked
 10976  0013FE  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10977  001400  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10978  001402  0D02               	mullw	2
 10979  001404  0EB6               	movlw	low _pBDTEntryIn
 10980  001406  24F3               	addwf	prodl,w,c
 10981  001408  6ED9               	movwf	fsr2l,c
 10982  00140A  0E00               	movlw	high _pBDTEntryIn
 10983  00140C  20F4               	addwfc	prodh,w,c
 10984  00140E  6EDA               	movwf	fsr2h,c
 10985  001410  CFDE F095          	movff	postinc2,USBStdFeatureReqHandler@p
 10986  001414  CFDD F096          	movff	postdec2,USBStdFeatureReqHandler@p+1
 10987                           
 10988                           ;usb_device.c: 2845: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 10989  001418  0104               	movlb	4	; () banked
 10990  00141A  5134               	movf	52,w,b	;volatile
 10991  00141C  0B0F               	andlw	15
 10992  00141E  0100               	movlb	0	; () banked
 10993  001420  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10994  001422  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10995  001424  0D01               	mullw	1
 10996  001426  0ED2               	movlw	low _ep_data_in
 10997  001428  24F3               	addwf	prodl,w,c
 10998  00142A  6ED9               	movwf	fsr2l,c
 10999  00142C  0E02               	movlw	high _ep_data_in
 11000  00142E                     L6:
 11001  00142E  20F4               	addwfc	prodh,w,c
 11002  001430  6EDA               	movwf	fsr2h,c
 11003  001432  50DF               	movf	indf2,w,c
 11004  001434  6F94               	movwf	USBStdFeatureReqHandler@current_ep_data& (0+255),b
 11005                           
 11006                           ; BSR set to: 0
 11007                           ;usb_device.c: 2846: }
 11008                           ;usb_device.c: 2852: if(current_ep_data.bits.ping_pong_state == 0)
 11009                           
 11010                           ; BSR set to: 0
 11011  001436  B194               	btfsc	USBStdFeatureReqHandler@current_ep_data& (0+255),0,b
 11012  001438  D002               	goto	l1830
 11013                           
 11014                           ; BSR set to: 0
 11015                           ;usb_device.c: 2853: {
 11016                           ;usb_device.c: 2854: {((uint8_t_VAL*)&p)->Val &= ~0x0004;};
 11017  00143A  9595               	bcf	USBStdFeatureReqHandler@p& (0+255),2,b
 11018                           
 11019                           ;usb_device.c: 2855: }
 11020  00143C  D001               	goto	l1831
 11021  00143E                     l1830:
 11022                           
 11023                           ; BSR set to: 0
 11024                           ;usb_device.c: 2856: else
 11025                           ;usb_device.c: 2857: {
 11026                           ;usb_device.c: 2858: {((uint8_t_VAL*)&p)->Val |= 0x0004;};
 11027                           
 11028                           ; BSR set to: 0
 11029  00143E  8595               	bsf	USBStdFeatureReqHandler@p& (0+255),2,b
 11030  001440                     l1831:
 11031                           
 11032                           ; BSR set to: 0
 11033                           ;usb_device.c: 2859: }
 11034                           ;usb_device.c: 2864: if(SetupPkt.EPDir == 0)
 11035                           
 11036                           ; BSR set to: 0
 11037  001440  0104               	movlb	4	; () banked
 11038  001442  BF34               	btfsc	52,7,b	;volatile
 11039  001444  D00B               	goto	l1832
 11040                           
 11041                           ; BSR set to: 4
 11042                           ;usb_device.c: 2865: {
 11043                           ;usb_device.c: 2866: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 11044  001446  5134               	movf	52,w,b	;volatile
 11045  001448  0B0F               	andlw	15
 11046  00144A  0100               	movlb	0	; () banked
 11047  00144C  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11048  00144E  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11049  001450  0D02               	mullw	2
 11050  001452  0E06               	movlw	low _pBDTEntryOut
 11051  001454  24F3               	addwf	prodl,w,c
 11052  001456  6ED9               	movwf	fsr2l,c
 11053  001458  0E03               	movlw	high _pBDTEntryOut
 11054  00145A  D00B               	goto	L7
 11055  00145C                     l1832:
 11056                           
 11057                           ;usb_device.c: 2868: else
 11058                           ;usb_device.c: 2869: {
 11059                           ;usb_device.c: 2870: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 11060                           
 11061                           ; BSR set to: 0
 11062  00145C  0104               	movlb	4	; () banked
 11063  00145E  5134               	movf	52,w,b	;volatile
 11064  001460  0B0F               	andlw	15
 11065  001462  0100               	movlb	0	; () banked
 11066  001464  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11067  001466  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11068  001468  0D02               	mullw	2
 11069  00146A  0EB6               	movlw	low _pBDTEntryIn
 11070  00146C  24F3               	addwf	prodl,w,c
 11071  00146E  6ED9               	movwf	fsr2l,c
 11072  001470  0E00               	movlw	high _pBDTEntryIn
 11073  001472                     L7:
 11074  001472  20F4               	addwfc	prodh,w,c
 11075  001474  6EDA               	movwf	fsr2h,c
 11076  001476  C095  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 11077  00147A  C096  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 11078                           
 11079                           ; BSR set to: 0
 11080                           ;usb_device.c: 2871: }
 11081                           ;usb_device.c: 2874: if(SetupPkt.bRequest == 3)
 11082                           
 11083                           ; BSR set to: 0
 11084  00147E  0E03               	movlw	3
 11085  001480  0104               	movlb	4	; () banked
 11086  001482  1931               	xorwf	49,w,b	;volatile
 11087  001484  A4D8               	btfss	status,2,c
 11088  001486  D031               	goto	l1834
 11089                           
 11090                           ; BSR set to: 4
 11091                           ;usb_device.c: 2875: {
 11092                           ;usb_device.c: 2876: if(p->STAT.UOWN == 1)
 11093  001488  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11094  00148C  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11095  001490  0100               	movlb	0	; () banked
 11096  001492  AEDF               	btfss	indf2,7,c
 11097  001494  D01D               	goto	l1837
 11098                           
 11099                           ; BSR set to: 0
 11100                           ;usb_device.c: 2877: {
 11101                           ;usb_device.c: 2880: if(SetupPkt.EPDir == 0)
 11102  001496  0104               	movlb	4	; () banked
 11103  001498  BF34               	btfsc	52,7,b	;volatile
 11104  00149A  D00B               	goto	l1836
 11105                           
 11106                           ; BSR set to: 4
 11107                           ;usb_device.c: 2881: {
 11108                           ;usb_device.c: 2882: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
 11109  00149C  5134               	movf	52,w,b	;volatile
 11110  00149E  0B0F               	andlw	15
 11111  0014A0  0100               	movlb	0	; () banked
 11112  0014A2  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11113  0014A4  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11114  0014A6  0D01               	mullw	1
 11115  0014A8  0ECF               	movlw	low _ep_data_out
 11116  0014AA  24F3               	addwf	prodl,w,c
 11117  0014AC  6ED9               	movwf	fsr2l,c
 11118  0014AE  0E02               	movlw	high _ep_data_out
 11119  0014B0  D00B               	goto	L8
 11120  0014B2                     l1836:
 11121                           
 11122                           ;usb_device.c: 2884: else
 11123                           ;usb_device.c: 2885: {
 11124                           ;usb_device.c: 2886: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
 11125                           
 11126                           ; BSR set to: 2
 11127  0014B2  0104               	movlb	4	; () banked
 11128  0014B4  5134               	movf	52,w,b	;volatile
 11129  0014B6  0B0F               	andlw	15
 11130  0014B8  0100               	movlb	0	; () banked
 11131  0014BA  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11132  0014BC  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11133  0014BE  0D01               	mullw	1
 11134  0014C0  0ED2               	movlw	low _ep_data_in
 11135  0014C2  24F3               	addwf	prodl,w,c
 11136  0014C4  6ED9               	movwf	fsr2l,c
 11137  0014C6  0E02               	movlw	high _ep_data_in
 11138  0014C8                     L8:
 11139  0014C8  20F4               	addwfc	prodh,w,c
 11140  0014CA  6EDA               	movwf	fsr2h,c
 11141  0014CC  0102               	movlb	2	; () banked
 11142  0014CE  82DF               	bsf	indf2,1,c
 11143  0014D0                     l1837:
 11144                           
 11145                           ;usb_device.c: 2887: }
 11146                           ;usb_device.c: 2888: }
 11147                           ;usb_device.c: 2891: p->STAT.Val |= 0x04;
 11148                           
 11149                           ; BSR set to: 2
 11150                           
 11151                           ; BSR set to: 2
 11152  0014D0  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11153  0014D4  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11154  0014D8  0E00               	movlw	0
 11155  0014DA  84DB               	bsf	plusw2,2,c
 11156                           
 11157                           ;usb_device.c: 2892: p->STAT.Val |= 0x80;
 11158  0014DC  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11159  0014E0  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11160  0014E4  0E00               	movlw	0
 11161  0014E6  8EDB               	bsf	plusw2,7,c
 11162                           
 11163                           ;usb_device.c: 2893: }
 11164  0014E8  0012               	return	
 11165  0014EA                     l1834:
 11166                           
 11167                           ;usb_device.c: 2894: else
 11168                           ;usb_device.c: 2895: {
 11169                           ;usb_device.c: 2899: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 11170  0014EA  0E04               	movlw	4
 11171  0014EC  0100               	movlb	0	; () banked
 11172  0014EE  1B95               	xorwf	USBStdFeatureReqHandler@p& (0+255),f,b
 11173                           
 11174                           ; BSR set to: 0
 11175                           ;usb_device.c: 2901: if(p->STAT.UOWN == 1)
 11176  0014F0  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11177  0014F4  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11178  0014F8  AEDF               	btfss	indf2,7,c
 11179  0014FA  D01B               	goto	l1839
 11180                           
 11181                           ; BSR set to: 0
 11182                           ;usb_device.c: 2902: {
 11183                           ;usb_device.c: 2905: p->STAT.Val &= (~0x80);
 11184  0014FC  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11185  001500  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11186  001504  0E7F               	movlw	127
 11187  001506  16DF               	andwf	indf2,f,c
 11188                           
 11189                           ; BSR set to: 0
 11190                           ;usb_device.c: 2906: p->STAT.Val |= 0x40;
 11191  001508  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11192  00150C  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11193  001510  0E00               	movlw	0
 11194  001512  8CDB               	bsf	plusw2,6,c
 11195                           
 11196                           ; BSR set to: 0
 11197                           ;usb_device.c: 2907: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 11198  001514  0E00               	movlw	0
 11199  001516  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
 11200  001518  0E05               	movlw	5
 11201  00151A  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
 11202  00151C  C095  F08B         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 11203  001520  C096  F08C         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 11204  001524  0E00               	movlw	0
 11205  001526  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
 11206  001528  0E02               	movlw	2
 11207  00152A  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
 11208  00152C  EC91  F02C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 11209                           
 11210                           ;usb_device.c: 2908: }
 11211  001530  D006               	goto	l1840
 11212  001532                     l1839:
 11213                           
 11214                           ;usb_device.c: 2909: else
 11215                           ;usb_device.c: 2910: {
 11216                           ;usb_device.c: 2912: p->STAT.Val |= 0x40;
 11217  001532  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11218  001536  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11219  00153A  0E00               	movlw	0
 11220  00153C  8CDB               	bsf	plusw2,6,c
 11221  00153E                     l1840:
 11222                           
 11223                           ;usb_device.c: 2913: }
 11224                           ;usb_device.c: 2917: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 11225  00153E  0E04               	movlw	4
 11226  001540  0100               	movlb	0	; () banked
 11227  001542  1B95               	xorwf	USBStdFeatureReqHandler@p& (0+255),f,b
 11228                           
 11229                           ; BSR set to: 0
 11230                           ;usb_device.c: 2923: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 11231  001544  B394               	btfsc	USBStdFeatureReqHandler@current_ep_data& (0+255),1,b
 11232  001546  D006               	goto	u12170
 11233                           
 11234                           ; BSR set to: 0
 11235  001548  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11236  00154C  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11237  001550  AEDF               	btfss	indf2,7,c
 11238  001552  D033               	goto	l1841
 11239  001554                     u12170:
 11240                           
 11241                           ; BSR set to: 0
 11242                           ;usb_device.c: 2924: {
 11243                           ;usb_device.c: 2925: if(SetupPkt.EPDir == 0)
 11244  001554  0104               	movlb	4	; () banked
 11245  001556  BF34               	btfsc	52,7,b	;volatile
 11246  001558  D00B               	goto	l1844
 11247                           
 11248                           ; BSR set to: 4
 11249                           ;usb_device.c: 2926: {
 11250                           ;usb_device.c: 2927: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
 11251  00155A  5134               	movf	52,w,b	;volatile
 11252  00155C  0B0F               	andlw	15
 11253  00155E  0100               	movlb	0	; () banked
 11254  001560  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11255  001562  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11256  001564  0D01               	mullw	1
 11257  001566  0ECF               	movlw	low _ep_data_out
 11258  001568  24F3               	addwf	prodl,w,c
 11259  00156A  6ED9               	movwf	fsr2l,c
 11260  00156C  0E02               	movlw	high _ep_data_out
 11261  00156E  D00B               	goto	L9
 11262  001570                     l1844:
 11263                           
 11264                           ;usb_device.c: 2929: else
 11265                           ;usb_device.c: 2930: {
 11266                           ;usb_device.c: 2931: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
 11267                           
 11268                           ; BSR set to: 2
 11269  001570  0104               	movlb	4	; () banked
 11270  001572  5134               	movf	52,w,b	;volatile
 11271  001574  0B0F               	andlw	15
 11272  001576  0100               	movlb	0	; () banked
 11273  001578  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11274  00157A  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11275  00157C  0D01               	mullw	1
 11276  00157E  0ED2               	movlw	low _ep_data_in
 11277  001580  24F3               	addwf	prodl,w,c
 11278  001582  6ED9               	movwf	fsr2l,c
 11279  001584  0E02               	movlw	high _ep_data_in
 11280  001586                     L9:
 11281  001586  20F4               	addwfc	prodh,w,c
 11282  001588  6EDA               	movwf	fsr2h,c
 11283  00158A  0102               	movlb	2	; () banked
 11284  00158C  92DF               	bcf	indf2,1,c
 11285                           
 11286                           ; BSR set to: 2
 11287                           ;usb_device.c: 2932: }
 11288                           ;usb_device.c: 2934: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 11289                           
 11290                           ; BSR set to: 2
 11291  00158E  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11292  001592  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11293  001596  0E3B               	movlw	59
 11294  001598  16DF               	andwf	indf2,f,c
 11295                           
 11296                           ; BSR set to: 2
 11297                           ;usb_device.c: 2937: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 11298  00159A  0E00               	movlw	0
 11299  00159C  0100               	movlb	0	; () banked
 11300  00159E  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
 11301  0015A0  0E05               	movlw	5
 11302  0015A2  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
 11303  0015A4  C095  F08B         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 11304  0015A8  C096  F08C         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 11305  0015AC  0E00               	movlw	0
 11306  0015AE  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
 11307  0015B0  0E02               	movlw	2
 11308  0015B2  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
 11309  0015B4  EC91  F02C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 11310                           
 11311                           ;usb_device.c: 2938: }
 11312  0015B8  D006               	goto	l1846
 11313  0015BA                     l1841:
 11314                           
 11315                           ;usb_device.c: 2939: else
 11316                           ;usb_device.c: 2940: {
 11317                           ;usb_device.c: 2942: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 11318  0015BA  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11319  0015BE  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11320  0015C2  0E3B               	movlw	59
 11321  0015C4  16DF               	andwf	indf2,f,c
 11322  0015C6                     l1846:
 11323                           
 11324                           ;usb_device.c: 2943: }
 11325                           ;usb_device.c: 2990: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
 11326  0015C6  0104               	movlb	4	; () banked
 11327  0015C8  5134               	movf	52,w,b	;volatile
 11328  0015CA  0B0F               	andlw	15
 11329  0015CC  0100               	movlb	0	; () banked
 11330  0015CE  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11331  0015D0  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11332  0015D2  0D01               	mullw	1
 11333  0015D4  0E26               	movlw	38
 11334  0015D6  24F3               	addwf	prodl,w,c
 11335  0015D8  6F92               	movwf	USBStdFeatureReqHandler@pUEP& (0+255),b
 11336  0015DA  0E0F               	movlw	15
 11337  0015DC  20F4               	addwfc	prodh,w,c
 11338  0015DE  6F93               	movwf	(USBStdFeatureReqHandler@pUEP+1)& (0+255),b
 11339                           
 11340                           ; BSR set to: 0
 11341                           ;usb_device.c: 2994: *pUEP &= ~0x0001;
 11342  0015E0  C092  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 11343  0015E4  C093  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 11344  0015E8  0EFE               	movlw	254
 11345  0015EA  16DF               	andwf	indf2,f,c
 11346                           
 11347                           ; BSR set to: 0
 11348  0015EC  0012               	return	
 11349  0015EE                     __end_of_USBStdFeatureReqHandler:
 11350                           	opt stack 0
 11351                           tosu	equ	0xFFF
 11352                           tosh	equ	0xFFE
 11353                           tosl	equ	0xFFD
 11354                           pclath	equ	0xFFA
 11355                           tblptru	equ	0xFF8
 11356                           tblptrh	equ	0xFF7
 11357                           tblptrl	equ	0xFF6
 11358                           tablat	equ	0xFF5
 11359                           prodh	equ	0xFF4
 11360                           prodl	equ	0xFF3
 11361                           intcon	equ	0xFF2
 11362                           intcon2	equ	0xFF1
 11363                           intcon3	equ	0xFF0
 11364                           indf0	equ	0xFEF
 11365                           postinc0	equ	0xFEE
 11366                           plusw0	equ	0xFEB
 11367                           fsr0h	equ	0xFEA
 11368                           fsr0l	equ	0xFE9
 11369                           wreg	equ	0xFE8
 11370                           postinc1	equ	0xFE6
 11371                           postdec1	equ	0xFE5
 11372                           fsr1h	equ	0xFE2
 11373                           fsr1l	equ	0xFE1
 11374                           indf2	equ	0xFDF
 11375                           postinc2	equ	0xFDE
 11376                           postdec2	equ	0xFDD
 11377                           plusw2	equ	0xFDB
 11378                           fsr2h	equ	0xFDA
 11379                           fsr2l	equ	0xFD9
 11380                           status	equ	0xFD8
 11381                           
 11382 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 11383 ;; Defined at:
 11384 ;;		line 104 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_mgr.c"
 11385 ;; Parameters:    Size  Location     Type
 11386 ;;  event           2   41[BANK0 ] enum E8366
 11387 ;;  pdata           2   43[BANK0 ] PTR void 
 11388 ;;		 -> USTATcopy(1), USBActiveConfiguration(1), NULL(0), BDT(48), 
 11389 ;;  size            2   45[BANK0 ] unsigned int 
 11390 ;; Auto vars:     Size  Location     Type
 11391 ;;		None
 11392 ;; Return value:  Size  Location     Type
 11393 ;;                  1    wreg      unsigned char 
 11394 ;; Registers used:
 11395 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11396 ;; Tracked objects:
 11397 ;;		On entry : 0/0
 11398 ;;		On exit  : 0/0
 11399 ;;		Unchanged: 0/0
 11400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11401 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11402 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11403 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11404 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11405 ;;Total ram usage:        8 bytes
 11406 ;; Hardware stack levels used:    1
 11407 ;; Hardware stack levels required when called:   14
 11408 ;; This function calls:
 11409 ;;		_CDCInitEP
 11410 ;;		_USBCheckCDCRequest
 11411 ;; This function is called by:
 11412 ;;		_USBDeviceTasks
 11413 ;;		_USBStdSetCfgHandler
 11414 ;;		_USBSuspend
 11415 ;;		_USBWakeFromSuspend
 11416 ;;		_USBCtrlTrfSetupHandler
 11417 ;;		_USBCheckStdRequest
 11418 ;;		_USBStdFeatureReqHandler
 11419 ;; This function uses a non-reentrant model
 11420 ;;
 11421                           
 11422                           	psect	text44
 11423  005922                     __ptext44:
 11424                           	opt stack 0
 11425  005922                     _USER_USB_CALLBACK_EVENT_HANDLER:
 11426                           	opt stack 12
 11427                           
 11428                           ;usb_device_mgr.c: 106: switch( (int) event )
 11429                           
 11430                           ;incstack = 0
 11431  005922  D006               	goto	l2000
 11432  005924                     
 11433                           ;usb_device_mgr.c: 134: CDCInitEP();
 11434  005924  EC27  F02B         	call	_CDCInitEP	;wreg free
 11435                           
 11436                           ;usb_device_mgr.c: 142: break;
 11437                           
 11438                           ;usb_device_mgr.c: 141: case EVENT_SET_DESCRIPTOR:
 11439                           
 11440                           ;usb_device_mgr.c: 139: break;
 11441  005928  0012               	return	
 11442  00592A                     
 11443                           ;usb_device_mgr.c: 148: USBCheckCDCRequest();
 11444  00592A  EC19  F023         	call	_USBCheckCDCRequest	;wreg free
 11445                           
 11446                           ;usb_device_mgr.c: 163: }
 11447                           
 11448                           ;usb_device_mgr.c: 162: break;
 11449                           
 11450                           ;usb_device_mgr.c: 161: default:
 11451                           
 11452                           ;usb_device_mgr.c: 159: break;
 11453                           
 11454                           ;usb_device_mgr.c: 158: case EVENT_TRANSFER_TERMINATED:
 11455                           
 11456                           ;usb_device_mgr.c: 156: break;
 11457                           
 11458                           ;usb_device_mgr.c: 155: case EVENT_BUS_ERROR:
 11459                           
 11460                           ;usb_device_mgr.c: 153: break;
 11461  00592E  0012               	return	
 11462  005930                     l2000:
 11463  005930  C089  F08F         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 11464  005934  C08A  F090         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 11465                           
 11466                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 11467                           ; Switch size 1, requested type "space"
 11468                           ; Number of cases is 2, Range of values is 0 to 127
 11469                           ; switch strategies available:
 11470                           ; Name         Instructions Cycles
 11471                           ; simple_byte            7     4 (average)
 11472                           ;	Chosen strategy is simple_byte
 11473  005938  0100               	movlb	0	; () banked
 11474  00593A  5190               	movf	(??_USER_USB_CALLBACK_EVENT_HANDLER+1)& (0+255),w,b
 11475  00593C  0A00               	xorlw	0	; case 0
 11476  00593E  B4D8               	btfsc	status,2,c
 11477  005940  D004               	goto	l17063
 11478  005942  0A7F               	xorlw	127	; case 127
 11479  005944  A4D8               	btfss	status,2,c
 11480  005946  0012               	return	
 11481  005948  D018               	goto	l17065
 11482  00594A                     l17063:
 11483                           
 11484                           ; BSR set to: 0
 11485                           ; Switch size 1, requested type "space"
 11486                           ; Number of cases is 8, Range of values is 1 to 117
 11487                           ; switch strategies available:
 11488                           ; Name         Instructions Cycles
 11489                           ; simple_byte           25    13 (average)
 11490                           ;	Chosen strategy is simple_byte
 11491  00594A  518F               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER& (0+255),w,b
 11492  00594C  0A01               	xorlw	1	; case 1
 11493  00594E  B4D8               	btfsc	status,2,c
 11494  005950  D7E9               	goto	l2006
 11495  005952  0A03               	xorlw	3	; case 2
 11496  005954  B4D8               	btfsc	status,2,c
 11497  005956  0012               	return	
 11498  005958  0A01               	xorlw	1	; case 3
 11499  00595A  B4D8               	btfsc	status,2,c
 11500  00595C  D7E6               	goto	l2008
 11501  00595E  0A06               	xorlw	6	; case 5
 11502  005960  B4D8               	btfsc	status,2,c
 11503  005962  0012               	return	
 11504  005964  0A77               	xorlw	119	; case 114
 11505  005966  B4D8               	btfsc	status,2,c
 11506  005968  0012               	return	
 11507  00596A  0A01               	xorlw	1	; case 115
 11508  00596C  B4D8               	btfsc	status,2,c
 11509  00596E  0012               	return	
 11510  005970  0A07               	xorlw	7	; case 116
 11511  005972  B4D8               	btfsc	status,2,c
 11512  005974  0012               	return	
 11513  005976  0A01               	xorlw	1	; case 117
 11514  005978  0012               	return	
 11515  00597A                     l17065:
 11516                           
 11517                           ; BSR set to: 0
 11518                           ; Switch size 1, requested type "space"
 11519                           ; Number of cases is 1, Range of values is 255 to 255
 11520                           ; switch strategies available:
 11521                           ; Name         Instructions Cycles
 11522                           ; simple_byte            4     3 (average)
 11523                           ;	Chosen strategy is simple_byte
 11524  00597A  518F               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER& (0+255),w,b
 11525  00597C  0AFF               	xorlw	255	; case 255
 11526  00597E  0012               	return	
 11527  005980                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 11528                           	opt stack 0
 11529                           tosu	equ	0xFFF
 11530                           tosh	equ	0xFFE
 11531                           tosl	equ	0xFFD
 11532                           pclath	equ	0xFFA
 11533                           tblptru	equ	0xFF8
 11534                           tblptrh	equ	0xFF7
 11535                           tblptrl	equ	0xFF6
 11536                           tablat	equ	0xFF5
 11537                           prodh	equ	0xFF4
 11538                           prodl	equ	0xFF3
 11539                           intcon	equ	0xFF2
 11540                           intcon2	equ	0xFF1
 11541                           intcon3	equ	0xFF0
 11542                           indf0	equ	0xFEF
 11543                           postinc0	equ	0xFEE
 11544                           plusw0	equ	0xFEB
 11545                           fsr0h	equ	0xFEA
 11546                           fsr0l	equ	0xFE9
 11547                           wreg	equ	0xFE8
 11548                           postinc1	equ	0xFE6
 11549                           postdec1	equ	0xFE5
 11550                           fsr1h	equ	0xFE2
 11551                           fsr1l	equ	0xFE1
 11552                           indf2	equ	0xFDF
 11553                           postinc2	equ	0xFDE
 11554                           postdec2	equ	0xFDD
 11555                           plusw2	equ	0xFDB
 11556                           fsr2h	equ	0xFDA
 11557                           fsr2l	equ	0xFD9
 11558                           status	equ	0xFD8
 11559                           
 11560 ;; *************** function _USBCheckCDCRequest *****************
 11561 ;; Defined at:
 11562 ;;		line 150 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 11563 ;; Parameters:    Size  Location     Type
 11564 ;;		None
 11565 ;; Auto vars:     Size  Location     Type
 11566 ;;		None
 11567 ;; Return value:  Size  Location     Type
 11568 ;;                  1    wreg      void 
 11569 ;; Registers used:
 11570 ;;		wreg, status,2, status,0
 11571 ;; Tracked objects:
 11572 ;;		On entry : 0/0
 11573 ;;		On exit  : 0/0
 11574 ;;		Unchanged: 0/0
 11575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11576 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11577 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11578 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11579 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11580 ;;Total ram usage:        0 bytes
 11581 ;; Hardware stack levels used:    1
 11582 ;; Hardware stack levels required when called:   11
 11583 ;; This function calls:
 11584 ;;		Nothing
 11585 ;; This function is called by:
 11586 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 11587 ;; This function uses a non-reentrant model
 11588 ;;
 11589                           
 11590                           	psect	text45
 11591  004632                     __ptext45:
 11592                           	opt stack 0
 11593  004632                     _USBCheckCDCRequest:
 11594                           	opt stack 14
 11595                           
 11596                           ;usb_device_cdc.c: 155: if(SetupPkt.Recipient != (0x01)) return;
 11597                           
 11598                           ;incstack = 0
 11599  004632  0104               	movlb	4	; () banked
 11600  004634  5130               	movf	48,w,b	;volatile
 11601  004636  0B1F               	andlw	31
 11602  004638  06E8               	decf	wreg,f,c
 11603  00463A  A4D8               	btfss	status,2,c
 11604  00463C  0012               	return	
 11605                           
 11606                           ; BSR set to: 4
 11607                           ;usb_device_cdc.c: 160: if(SetupPkt.RequestType != (0x20>>5)) return;
 11608                           
 11609                           ; BSR set to: 4
 11610                           
 11611                           ; BSR set to: 4
 11612  00463E  3930               	swapf	48,w,b	;volatile
 11613  004640  32E8               	rrcf	wreg,f,c
 11614  004642  0B03               	andlw	3
 11615  004644  06E8               	decf	wreg,f,c
 11616  004646  A4D8               	btfss	status,2,c
 11617  004648  0012               	return	
 11618                           
 11619                           ; BSR set to: 4
 11620                           ;usb_device_cdc.c: 166: if((SetupPkt.bIntfID != 0x0)&&
 11621                           ;usb_device_cdc.c: 167: (SetupPkt.bIntfID != 0x01)) return;
 11622                           
 11623                           ; BSR set to: 4
 11624                           
 11625                           ; BSR set to: 4
 11626  00464A  5134               	movf	52,w,b	;volatile
 11627  00464C  B4D8               	btfsc	status,2,c
 11628  00464E  D037               	goto	l1902
 11629                           
 11630                           ; BSR set to: 4
 11631  004650  0534               	decf	52,w,b	;volatile
 11632  004652  A4D8               	btfss	status,2,c
 11633  004654  0012               	return	
 11634  004656  D033               	goto	l1902
 11635  004658                     
 11636                           ; BSR set to: 4
 11637                           ;usb_device_cdc.c: 174: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 11638                           
 11639                           ; BSR set to: 4
 11640  004658  0E74               	movlw	low _dummy_encapsulated_cmd_response
 11641  00465A  0100               	movlb	0	; () banked
 11642  00465C  6FB0               	movwf	_inPipes& (0+255),b
 11643  00465E  0E03               	movlw	high _dummy_encapsulated_cmd_response
 11644  004660  6FB1               	movwf	(_inPipes+1)& (0+255),b
 11645                           
 11646                           ; BSR set to: 0
 11647                           ;usb_device_cdc.c: 175: inPipes[0].wCount.Val = 0x08;
 11648  004662  0E00               	movlw	0
 11649  004664  6FB5               	movwf	(_inPipes+5)& (0+255),b
 11650  004666  0E08               	movlw	8
 11651  004668  6FB4               	movwf	(_inPipes+4)& (0+255),b
 11652                           
 11653                           ; BSR set to: 0
 11654                           ;usb_device_cdc.c: 176: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 11655  00466A  81B3               	bsf	(_inPipes+3)& (0+255),0,b
 11656                           
 11657                           ; BSR set to: 0
 11658                           ;usb_device_cdc.c: 177: inPipes[0].info.bits.busy = 1;
 11659  00466C  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 11660                           
 11661                           ;usb_device_cdc.c: 178: break;
 11662  00466E  0012               	return	
 11663  004670                     
 11664                           ;usb_device_cdc.c: 181: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 11665                           
 11666                           ; BSR set to: 0
 11667  004670  0E74               	movlw	low _dummy_encapsulated_cmd_response
 11668  004672  0100               	movlb	0	; () banked
 11669  004674  6FB0               	movwf	_inPipes& (0+255),b
 11670  004676  0E03               	movlw	high _dummy_encapsulated_cmd_response
 11671  004678  6FB1               	movwf	(_inPipes+1)& (0+255),b
 11672                           
 11673                           ; BSR set to: 0
 11674                           ;usb_device_cdc.c: 182: inPipes[0].info.bits.busy = 1;
 11675  00467A  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 11676                           
 11677                           ;usb_device_cdc.c: 183: break;
 11678  00467C  0012               	return	
 11679  00467E                     l1906:
 11680                           
 11681                           ; BSR set to: 4
 11682                           ;usb_device_cdc.c: 188: outPipes[0].wCount.Val = SetupPkt.wLength;
 11683  00467E  C436 F1CD          	movff	1078,_outPipes+4	;volatile
 11684  004682  C437 F1CE          	movff	1079,_outPipes+5	;volatile
 11685                           
 11686                           ; BSR set to: 4
 11687                           ;usb_device_cdc.c: 189: outPipes[0].pDst.bRam = (uint8_t*)&line_coding._byte[0];
 11688  004686  0E7C               	movlw	low _line_coding
 11689  004688  0101               	movlb	1	; () banked
 11690  00468A  6FC9               	movwf	_outPipes& (0+255),b
 11691  00468C  0E03               	movlw	high _line_coding
 11692  00468E  6FCA               	movwf	(_outPipes+1)& (0+255),b
 11693                           
 11694                           ;usb_device_cdc.c: 190: outPipes[0].pFunc = (0);
 11695  004690  0E00               	movlw	0
 11696  004692  6FCF               	movwf	(_outPipes+6)& (0+255),b
 11697  004694  0E00               	movlw	0
 11698  004696  6FD0               	movwf	(_outPipes+7)& (0+255),b
 11699                           
 11700                           ; BSR set to: 1
 11701                           ;usb_device_cdc.c: 191: outPipes[0].info.bits.busy = 1;
 11702  004698  8FCC               	bsf	(_outPipes+3)& (0+255),7,b
 11703                           
 11704                           ;usb_device_cdc.c: 192: break;
 11705  00469A  0012               	return	
 11706  00469C                     
 11707                           ;usb_device_cdc.c: 195: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 11708                           
 11709                           ; BSR set to: 1
 11710  00469C  0E7C               	movlw	low _line_coding
 11711  00469E  0100               	movlb	0	; () banked
 11712  0046A0  6FB0               	movwf	_inPipes& (0+255),b
 11713  0046A2  0E03               	movlw	high _line_coding
 11714  0046A4  6FB1               	movwf	(_inPipes+1)& (0+255),b
 11715                           
 11716                           ; BSR set to: 0
 11717  0046A6  0E00               	movlw	0
 11718  0046A8  6FB5               	movwf	(_inPipes+5)& (0+255),b
 11719  0046AA  0E07               	movlw	7
 11720  0046AC  6FB4               	movwf	(_inPipes+4)& (0+255),b
 11721                           
 11722                           ; BSR set to: 0
 11723  0046AE  0EC1               	movlw	193
 11724  0046B0  6FB3               	movwf	(_inPipes+3)& (0+255),b
 11725                           
 11726                           ;usb_device_cdc.c: 199: break;
 11727  0046B2  0012               	return	
 11728  0046B4                     l1908:
 11729                           
 11730                           ; BSR set to: 4
 11731                           ;usb_device_cdc.c: 202: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
 11732  0046B4  C432 F1DB          	movff	1074,_control_signal_bitmap	;volatile
 11733                           
 11734                           ;usb_device_cdc.c: 234: inPipes[0].info.bits.busy = 1;
 11735  0046B8  0100               	movlb	0	; () banked
 11736  0046BA  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 11737                           
 11738                           ; BSR set to: 0
 11739                           ;usb_device_cdc.c: 261: }
 11740                           
 11741                           ; BSR set to: 0
 11742                           ;usb_device_cdc.c: 260: break;
 11743                           
 11744                           ;usb_device_cdc.c: 259: default:
 11745                           
 11746                           ;usb_device_cdc.c: 235: break;
 11747  0046BC  0012               	return	
 11748  0046BE                     l1902:
 11749                           
 11750                           ; BSR set to: 0
 11751  0046BE  0104               	movlb	4	; () banked
 11752  0046C0  5131               	movf	49,w,b	;volatile
 11753                           
 11754                           ; Switch size 1, requested type "space"
 11755                           ; Number of cases is 5, Range of values is 0 to 34
 11756                           ; switch strategies available:
 11757                           ; Name         Instructions Cycles
 11758                           ; simple_byte           16     9 (average)
 11759                           ;	Chosen strategy is simple_byte
 11760  0046C2  0A00               	xorlw	0	; case 0
 11761  0046C4  B4D8               	btfsc	status,2,c
 11762  0046C6  D7C8               	goto	l1903
 11763  0046C8  0A01               	xorlw	1	; case 1
 11764  0046CA  B4D8               	btfsc	status,2,c
 11765  0046CC  D7D1               	goto	l1905
 11766  0046CE  0A21               	xorlw	33	; case 32
 11767  0046D0  B4D8               	btfsc	status,2,c
 11768  0046D2  D7D5               	goto	l1906
 11769  0046D4  0A01               	xorlw	1	; case 33
 11770  0046D6  B4D8               	btfsc	status,2,c
 11771  0046D8  D7E1               	goto	l1907
 11772  0046DA  0A03               	xorlw	3	; case 34
 11773  0046DC  A4D8               	btfss	status,2,c
 11774  0046DE  0012               	return	
 11775  0046E0  D7E9               	goto	l1908
 11776  0046E2                     __end_of_USBCheckCDCRequest:
 11777                           	opt stack 0
 11778                           tosu	equ	0xFFF
 11779                           tosh	equ	0xFFE
 11780                           tosl	equ	0xFFD
 11781                           pclath	equ	0xFFA
 11782                           tblptru	equ	0xFF8
 11783                           tblptrh	equ	0xFF7
 11784                           tblptrl	equ	0xFF6
 11785                           tablat	equ	0xFF5
 11786                           prodh	equ	0xFF4
 11787                           prodl	equ	0xFF3
 11788                           intcon	equ	0xFF2
 11789                           intcon2	equ	0xFF1
 11790                           intcon3	equ	0xFF0
 11791                           indf0	equ	0xFEF
 11792                           postinc0	equ	0xFEE
 11793                           plusw0	equ	0xFEB
 11794                           fsr0h	equ	0xFEA
 11795                           fsr0l	equ	0xFE9
 11796                           wreg	equ	0xFE8
 11797                           postinc1	equ	0xFE6
 11798                           postdec1	equ	0xFE5
 11799                           fsr1h	equ	0xFE2
 11800                           fsr1l	equ	0xFE1
 11801                           indf2	equ	0xFDF
 11802                           postinc2	equ	0xFDE
 11803                           postdec2	equ	0xFDD
 11804                           plusw2	equ	0xFDB
 11805                           fsr2h	equ	0xFDA
 11806                           fsr2l	equ	0xFD9
 11807                           status	equ	0xFD8
 11808                           
 11809 ;; *************** function _CDCInitEP *****************
 11810 ;; Defined at:
 11811 ;;		line 297 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 11812 ;; Parameters:    Size  Location     Type
 11813 ;;		None
 11814 ;; Auto vars:     Size  Location     Type
 11815 ;;		None
 11816 ;; Return value:  Size  Location     Type
 11817 ;;                  1    wreg      void 
 11818 ;; Registers used:
 11819 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11820 ;; Tracked objects:
 11821 ;;		On entry : 0/0
 11822 ;;		On exit  : 0/0
 11823 ;;		Unchanged: 0/0
 11824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11825 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11826 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11828 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11829 ;;Total ram usage:        0 bytes
 11830 ;; Hardware stack levels used:    1
 11831 ;; Hardware stack levels required when called:   13
 11832 ;; This function calls:
 11833 ;;		_USBEnableEndpoint
 11834 ;;		_USBTransferOnePacket
 11835 ;; This function is called by:
 11836 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 11837 ;; This function uses a non-reentrant model
 11838 ;;
 11839                           
 11840                           	psect	text46
 11841  00564E                     __ptext46:
 11842                           	opt stack 0
 11843  00564E                     _CDCInitEP:
 11844                           	opt stack 12
 11845                           
 11846                           ;usb_device_cdc.c: 300: line_coding.dwDTERate = 9600;
 11847                           
 11848                           ;incstack = 0
 11849  00564E  0E80               	movlw	128
 11850  005650  0103               	movlb	3	; () banked
 11851  005652  6F7C               	movwf	_line_coding& (0+255),b
 11852  005654  0E25               	movlw	37
 11853  005656  6F7D               	movwf	(_line_coding+1)& (0+255),b
 11854  005658  0E00               	movlw	0
 11855  00565A  6F7E               	movwf	(_line_coding+2)& (0+255),b
 11856  00565C  0E00               	movlw	0
 11857  00565E  6F7F               	movwf	(_line_coding+3)& (0+255),b
 11858                           
 11859                           ;usb_device_cdc.c: 301: line_coding.bCharFormat = 0x00;
 11860  005660  0E00               	movlw	0
 11861  005662  6F80               	movwf	(_line_coding+4)& (0+255),b
 11862                           
 11863                           ;usb_device_cdc.c: 302: line_coding.bParityType = 0x00;
 11864  005664  0E00               	movlw	0
 11865  005666  6F81               	movwf	(_line_coding+5)& (0+255),b
 11866                           
 11867                           ;usb_device_cdc.c: 303: line_coding.bDataBits = 0x08;
 11868  005668  0E08               	movlw	8
 11869  00566A  6F82               	movwf	(_line_coding+6)& (0+255),b
 11870                           
 11871                           ;usb_device_cdc.c: 305: cdc_rx_len = 0;
 11872  00566C  0E00               	movlw	0
 11873  00566E  0100               	movlb	0	; () banked
 11874  005670  6FC9               	movwf	_cdc_rx_len& (0+255),b
 11875                           
 11876                           ; BSR set to: 0
 11877                           ;usb_device_cdc.c: 318: USBEnableEndpoint(1,0x02|0x10|0x08);
 11878  005672  0E1A               	movlw	26
 11879  005674  6F85               	movwf	USBEnableEndpoint@options& (0+255),b
 11880  005676  0E01               	movlw	1
 11881  005678  ECE2  F030         	call	_USBEnableEndpoint
 11882                           
 11883                           ;usb_device_cdc.c: 319: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
 11884  00567C  0E1E               	movlw	30
 11885  00567E  0100               	movlb	0	; () banked
 11886  005680  6F85               	movwf	USBEnableEndpoint@options& (0+255),b
 11887  005682  0E02               	movlw	2
 11888  005684  ECE2  F030         	call	_USBEnableEndpoint
 11889                           
 11890                           ;usb_device_cdc.c: 321: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 11891  005688  0E00               	movlw	0
 11892  00568A  0100               	movlb	0	; () banked
 11893  00568C  6F7D               	movwf	USBTransferOnePacket@dir& (0+255),b
 11894  00568E  0E00               	movlw	low _cdc_data_rx
 11895  005690  6F7E               	movwf	USBTransferOnePacket@data& (0+255),b
 11896  005692  0E05               	movlw	high _cdc_data_rx
 11897  005694  6F7F               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 11898  005696  0E40               	movlw	64
 11899  005698  6F80               	movwf	USBTransferOnePacket@len& (0+255),b
 11900  00569A  0E02               	movlw	2
 11901  00569C  EC04  F022         	call	_USBTransferOnePacket
 11902  0056A0  C07D  F0BC         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
 11903  0056A4  C07E  F0BD         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
 11904                           
 11905                           ;usb_device_cdc.c: 322: CDCDataInHandle = (0);
 11906  0056A8  0E00               	movlw	0
 11907  0056AA  0101               	movlb	1	; () banked
 11908  0056AC  6FD1               	movwf	_CDCDataInHandle& (0+255),b
 11909  0056AE  0E00               	movlw	0
 11910  0056B0  6FD2               	movwf	(_CDCDataInHandle+1)& (0+255),b
 11911                           
 11912                           ; BSR set to: 1
 11913                           ;usb_device_cdc.c: 349: cdc_trf_state = 0;
 11914  0056B2  0E00               	movlw	0
 11915  0056B4  0100               	movlb	0	; () banked
 11916  0056B6  6FC8               	movwf	_cdc_trf_state& (0+255),b
 11917                           
 11918                           ; BSR set to: 0
 11919  0056B8  0012               	return		;funcret
 11920  0056BA                     __end_of_CDCInitEP:
 11921                           	opt stack 0
 11922                           tosu	equ	0xFFF
 11923                           tosh	equ	0xFFE
 11924                           tosl	equ	0xFFD
 11925                           pclath	equ	0xFFA
 11926                           tblptru	equ	0xFF8
 11927                           tblptrh	equ	0xFF7
 11928                           tblptrl	equ	0xFF6
 11929                           tablat	equ	0xFF5
 11930                           prodh	equ	0xFF4
 11931                           prodl	equ	0xFF3
 11932                           intcon	equ	0xFF2
 11933                           intcon2	equ	0xFF1
 11934                           intcon3	equ	0xFF0
 11935                           indf0	equ	0xFEF
 11936                           postinc0	equ	0xFEE
 11937                           plusw0	equ	0xFEB
 11938                           fsr0h	equ	0xFEA
 11939                           fsr0l	equ	0xFE9
 11940                           wreg	equ	0xFE8
 11941                           postinc1	equ	0xFE6
 11942                           postdec1	equ	0xFE5
 11943                           fsr1h	equ	0xFE2
 11944                           fsr1l	equ	0xFE1
 11945                           indf2	equ	0xFDF
 11946                           postinc2	equ	0xFDE
 11947                           postdec2	equ	0xFDD
 11948                           plusw2	equ	0xFDB
 11949                           fsr2h	equ	0xFDA
 11950                           fsr2l	equ	0xFD9
 11951                           status	equ	0xFD8
 11952                           
 11953 ;; *************** function _USBEnableEndpoint *****************
 11954 ;; Defined at:
 11955 ;;		line 896 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 11956 ;; Parameters:    Size  Location     Type
 11957 ;;  ep              1    wreg     unsigned char 
 11958 ;;  options         1   37[BANK0 ] unsigned char 
 11959 ;; Auto vars:     Size  Location     Type
 11960 ;;  ep              1   40[BANK0 ] unsigned char 
 11961 ;;  p               2   38[BANK0 ] PTR unsigned char 
 11962 ;;		 -> UEP0(1), 
 11963 ;; Return value:  Size  Location     Type
 11964 ;;                  1    wreg      void 
 11965 ;; Registers used:
 11966 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11967 ;; Tracked objects:
 11968 ;;		On entry : 0/0
 11969 ;;		On exit  : 0/0
 11970 ;;		Unchanged: 0/0
 11971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11972 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11973 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11974 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11975 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11976 ;;Total ram usage:        4 bytes
 11977 ;; Hardware stack levels used:    1
 11978 ;; Hardware stack levels required when called:   12
 11979 ;; This function calls:
 11980 ;;		_USBConfigureEndpoint
 11981 ;; This function is called by:
 11982 ;;		_CDCInitEP
 11983 ;; This function uses a non-reentrant model
 11984 ;;
 11985                           
 11986                           	psect	text47
 11987  0061C4                     __ptext47:
 11988                           	opt stack 0
 11989  0061C4                     _USBEnableEndpoint:
 11990                           	opt stack 12
 11991                           
 11992                           ; BSR set to: 0
 11993                           ;incstack = 0
 11994                           ;USBEnableEndpoint@ep stored from wreg
 11995  0061C4  0100               	movlb	0	; () banked
 11996  0061C6  6F88               	movwf	USBEnableEndpoint@ep& (0+255),b
 11997                           
 11998                           ;usb_device.c: 898: unsigned char* p;
 11999                           ;usb_device.c: 902: if(options & 0x04)
 12000  0061C8  0100               	movlb	0	; () banked
 12001  0061CA  A585               	btfss	USBEnableEndpoint@options& (0+255),2,b
 12002  0061CC  D005               	goto	l1643
 12003                           
 12004                           ; BSR set to: 0
 12005                           ;usb_device.c: 903: {
 12006                           ;usb_device.c: 904: USBConfigureEndpoint(ep, 0);
 12007  0061CE  0E00               	movlw	0
 12008  0061D0  6F7D               	movwf	USBConfigureEndpoint@direction& (0+255),b
 12009  0061D2  5188               	movf	USBEnableEndpoint@ep& (0+255),w,b
 12010  0061D4  EC56  F026         	call	_USBConfigureEndpoint
 12011  0061D8                     l1643:
 12012                           
 12013                           ;usb_device.c: 905: }
 12014                           ;usb_device.c: 906: if(options & 0x02)
 12015  0061D8  0100               	movlb	0	; () banked
 12016  0061DA  A385               	btfss	USBEnableEndpoint@options& (0+255),1,b
 12017  0061DC  D005               	goto	l1644
 12018                           
 12019                           ; BSR set to: 0
 12020                           ;usb_device.c: 907: {
 12021                           ;usb_device.c: 908: USBConfigureEndpoint(ep, 1);
 12022  0061DE  0E01               	movlw	1
 12023  0061E0  6F7D               	movwf	USBConfigureEndpoint@direction& (0+255),b
 12024  0061E2  5188               	movf	USBEnableEndpoint@ep& (0+255),w,b
 12025  0061E4  EC56  F026         	call	_USBConfigureEndpoint
 12026  0061E8                     l1644:
 12027                           
 12028                           ;usb_device.c: 909: }
 12029                           ;usb_device.c: 917: p = (unsigned char*)(&UEP0+ep);
 12030  0061E8  0100               	movlb	0	; () banked
 12031  0061EA  5188               	movf	USBEnableEndpoint@ep& (0+255),w,b
 12032  0061EC  0D01               	mullw	1
 12033  0061EE  0E26               	movlw	38
 12034  0061F0  24F3               	addwf	prodl,w,c
 12035  0061F2  6F86               	movwf	USBEnableEndpoint@p& (0+255),b
 12036  0061F4  0E0F               	movlw	15
 12037  0061F6  20F4               	addwfc	prodh,w,c
 12038  0061F8  6F87               	movwf	(USBEnableEndpoint@p+1)& (0+255),b
 12039                           
 12040                           ; BSR set to: 0
 12041                           ;usb_device.c: 919: *p = options;
 12042  0061FA  C086  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 12043  0061FE  C087  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 12044  006202  C085  FFDF         	movff	USBEnableEndpoint@options,indf2
 12045                           
 12046                           ; BSR set to: 0
 12047  006206  0012               	return		;funcret
 12048  006208                     __end_of_USBEnableEndpoint:
 12049                           	opt stack 0
 12050                           tosu	equ	0xFFF
 12051                           tosh	equ	0xFFE
 12052                           tosl	equ	0xFFD
 12053                           pclath	equ	0xFFA
 12054                           tblptru	equ	0xFF8
 12055                           tblptrh	equ	0xFF7
 12056                           tblptrl	equ	0xFF6
 12057                           tablat	equ	0xFF5
 12058                           prodh	equ	0xFF4
 12059                           prodl	equ	0xFF3
 12060                           intcon	equ	0xFF2
 12061                           intcon2	equ	0xFF1
 12062                           intcon3	equ	0xFF0
 12063                           indf0	equ	0xFEF
 12064                           postinc0	equ	0xFEE
 12065                           plusw0	equ	0xFEB
 12066                           fsr0h	equ	0xFEA
 12067                           fsr0l	equ	0xFE9
 12068                           wreg	equ	0xFE8
 12069                           postinc1	equ	0xFE6
 12070                           postdec1	equ	0xFE5
 12071                           fsr1h	equ	0xFE2
 12072                           fsr1l	equ	0xFE1
 12073                           indf2	equ	0xFDF
 12074                           postinc2	equ	0xFDE
 12075                           postdec2	equ	0xFDD
 12076                           plusw2	equ	0xFDB
 12077                           fsr2h	equ	0xFDA
 12078                           fsr2l	equ	0xFD9
 12079                           status	equ	0xFD8
 12080                           
 12081 ;; *************** function _USBConfigureEndpoint *****************
 12082 ;; Defined at:
 12083 ;;		line 1561 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 12084 ;; Parameters:    Size  Location     Type
 12085 ;;  EPNum           1    wreg     unsigned char 
 12086 ;;  direction       1   29[BANK0 ] unsigned char 
 12087 ;; Auto vars:     Size  Location     Type
 12088 ;;  EPNum           1   34[BANK0 ] unsigned char 
 12089 ;;  handle          2   35[BANK0 ] PTR volatile struct __BD
 12090 ;;		 -> BDT(48), 
 12091 ;; Return value:  Size  Location     Type
 12092 ;;                  1    wreg      void 
 12093 ;; Registers used:
 12094 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 12095 ;; Tracked objects:
 12096 ;;		On entry : 0/0
 12097 ;;		On exit  : 0/0
 12098 ;;		Unchanged: 0/0
 12099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12100 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12101 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12102 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12103 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12104 ;;Total ram usage:        8 bytes
 12105 ;; Hardware stack levels used:    1
 12106 ;; Hardware stack levels required when called:   11
 12107 ;; This function calls:
 12108 ;;		Nothing
 12109 ;; This function is called by:
 12110 ;;		_USBEnableEndpoint
 12111 ;; This function uses a non-reentrant model
 12112 ;;
 12113                           
 12114                           	psect	text48
 12115  004CAC                     __ptext48:
 12116                           	opt stack 0
 12117  004CAC                     _USBConfigureEndpoint:
 12118                           	opt stack 12
 12119                           
 12120                           ; BSR set to: 0
 12121                           ;incstack = 0
 12122                           ;USBConfigureEndpoint@EPNum stored from wreg
 12123  004CAC  0100               	movlb	0	; () banked
 12124  004CAE  6F82               	movwf	USBConfigureEndpoint@EPNum& (0+255),b
 12125                           
 12126                           ;usb_device.c: 1563: volatile BDT_ENTRY* handle;
 12127                           ;usb_device.c: 1567: handle = (volatile BDT_ENTRY*)&BDT[0];
 12128  004CB0  0E00               	movlw	0
 12129  004CB2  0100               	movlb	0	; () banked
 12130  004CB4  6F83               	movwf	USBConfigureEndpoint@handle& (0+255),b
 12131  004CB6  0E04               	movlw	4
 12132  004CB8  6F84               	movwf	(USBConfigureEndpoint@handle+1)& (0+255),b
 12133                           
 12134                           ; BSR set to: 0
 12135                           ;usb_device.c: 1568: handle += (4*EPNum+2*direction+0u);
 12136  004CBA  517D               	movf	USBConfigureEndpoint@direction& (0+255),w,b
 12137  004CBC  6F7E               	movwf	??_USBConfigureEndpoint& (0+255),b
 12138  004CBE  6B7F               	clrf	(??_USBConfigureEndpoint+1)& (0+255),b
 12139  004CC0  90D8               	bcf	status,0,c
 12140  004CC2  377E               	rlcf	??_USBConfigureEndpoint& (0+255),f,b
 12141  004CC4  377F               	rlcf	(??_USBConfigureEndpoint+1)& (0+255),f,b
 12142  004CC6  5182               	movf	USBConfigureEndpoint@EPNum& (0+255),w,b
 12143  004CC8  6F80               	movwf	(??_USBConfigureEndpoint+2)& (0+255),b
 12144  004CCA  6B81               	clrf	(??_USBConfigureEndpoint+3)& (0+255),b
 12145  004CCC  90D8               	bcf	status,0,c
 12146  004CCE  3780               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 12147  004CD0  3781               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 12148  004CD2  90D8               	bcf	status,0,c
 12149  004CD4  3780               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 12150  004CD6  3781               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 12151  004CD8  517E               	movf	??_USBConfigureEndpoint& (0+255),w,b
 12152  004CDA  2780               	addwf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 12153  004CDC  517F               	movf	(??_USBConfigureEndpoint+1)& (0+255),w,b
 12154  004CDE  2381               	addwfc	(??_USBConfigureEndpoint+3)& (0+255),f,b
 12155  004CE0  90D8               	bcf	status,0,c
 12156  004CE2  3780               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 12157  004CE4  3781               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 12158  004CE6  90D8               	bcf	status,0,c
 12159  004CE8  3780               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 12160  004CEA  3781               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 12161  004CEC  5180               	movf	(??_USBConfigureEndpoint+2)& (0+255),w,b
 12162  004CEE  2783               	addwf	USBConfigureEndpoint@handle& (0+255),f,b
 12163  004CF0  5181               	movf	(??_USBConfigureEndpoint+3)& (0+255),w,b
 12164  004CF2  2384               	addwfc	(USBConfigureEndpoint@handle+1)& (0+255),f,b
 12165                           
 12166                           ; BSR set to: 0
 12167                           ;usb_device.c: 1570: handle->STAT.UOWN = 0;
 12168  004CF4  C083  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 12169  004CF8  C084  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 12170  004CFC  9EDF               	bcf	indf2,7,c
 12171                           
 12172                           ; BSR set to: 0
 12173                           ;usb_device.c: 1575: if(direction == 0)
 12174  004CFE  517D               	movf	USBConfigureEndpoint@direction& (0+255),w,b
 12175  004D00  A4D8               	btfss	status,2,c
 12176  004D02  D007               	goto	l1679
 12177                           
 12178                           ; BSR set to: 0
 12179                           ;usb_device.c: 1576: {
 12180                           ;usb_device.c: 1577: pBDTEntryOut[EPNum] = handle;
 12181  004D04  5182               	movf	USBConfigureEndpoint@EPNum& (0+255),w,b
 12182  004D06  0D02               	mullw	2
 12183  004D08  0E06               	movlw	low _pBDTEntryOut
 12184  004D0A  24F3               	addwf	prodl,w,c
 12185  004D0C  6ED9               	movwf	fsr2l,c
 12186  004D0E  0E03               	movlw	high _pBDTEntryOut
 12187  004D10  D006               	goto	L10
 12188  004D12                     l1679:
 12189                           
 12190                           ; BSR set to: 0
 12191                           ;usb_device.c: 1579: else
 12192                           ;usb_device.c: 1580: {
 12193                           ;usb_device.c: 1581: pBDTEntryIn[EPNum] = handle;
 12194                           
 12195                           ; BSR set to: 0
 12196  004D12  5182               	movf	USBConfigureEndpoint@EPNum& (0+255),w,b
 12197  004D14  0D02               	mullw	2
 12198  004D16  0EB6               	movlw	low _pBDTEntryIn
 12199  004D18  24F3               	addwf	prodl,w,c
 12200  004D1A  6ED9               	movwf	fsr2l,c
 12201  004D1C  0E00               	movlw	high _pBDTEntryIn
 12202  004D1E                     L10:
 12203  004D1E  20F4               	addwfc	prodh,w,c
 12204  004D20  6EDA               	movwf	fsr2h,c
 12205  004D22  C083  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 12206  004D26  C084  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 12207                           
 12208                           ; BSR set to: 0
 12209                           ;usb_device.c: 1582: }
 12210                           ;usb_device.c: 1585: handle->STAT.DTS = 0;
 12211                           
 12212                           ; BSR set to: 0
 12213  004D2A  C083  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 12214  004D2E  C084  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 12215  004D32  9CDF               	bcf	indf2,6,c
 12216                           
 12217                           ; BSR set to: 0
 12218                           ;usb_device.c: 1586: (handle+1)->STAT.DTS = 1;
 12219  004D34  EE20 F004          	lfsr	2,4
 12220  004D38  5183               	movf	USBConfigureEndpoint@handle& (0+255),w,b
 12221  004D3A  26D9               	addwf	fsr2l,f,c
 12222  004D3C  5184               	movf	(USBConfigureEndpoint@handle+1)& (0+255),w,b
 12223  004D3E  22DA               	addwfc	fsr2h,f,c
 12224  004D40  8CDF               	bsf	indf2,6,c
 12225                           
 12226                           ; BSR set to: 0
 12227  004D42  0012               	return		;funcret
 12228  004D44                     __end_of_USBConfigureEndpoint:
 12229                           	opt stack 0
 12230                           tosu	equ	0xFFF
 12231                           tosh	equ	0xFFE
 12232                           tosl	equ	0xFFD
 12233                           pclath	equ	0xFFA
 12234                           tblptru	equ	0xFF8
 12235                           tblptrh	equ	0xFF7
 12236                           tblptrl	equ	0xFF6
 12237                           tablat	equ	0xFF5
 12238                           prodh	equ	0xFF4
 12239                           prodl	equ	0xFF3
 12240                           intcon	equ	0xFF2
 12241                           intcon2	equ	0xFF1
 12242                           intcon3	equ	0xFF0
 12243                           indf0	equ	0xFEF
 12244                           postinc0	equ	0xFEE
 12245                           plusw0	equ	0xFEB
 12246                           fsr0h	equ	0xFEA
 12247                           fsr0l	equ	0xFE9
 12248                           wreg	equ	0xFE8
 12249                           postinc1	equ	0xFE6
 12250                           postdec1	equ	0xFE5
 12251                           fsr1h	equ	0xFE2
 12252                           fsr1l	equ	0xFE1
 12253                           indf2	equ	0xFDF
 12254                           postinc2	equ	0xFDE
 12255                           postdec2	equ	0xFDD
 12256                           plusw2	equ	0xFDB
 12257                           fsr2h	equ	0xFDA
 12258                           fsr2l	equ	0xFD9
 12259                           status	equ	0xFD8
 12260                           
 12261 ;; *************** function _USBCtrlTrfOutHandler *****************
 12262 ;; Defined at:
 12263 ;;		line 2555 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 12264 ;; Parameters:    Size  Location     Type
 12265 ;;		None
 12266 ;; Auto vars:     Size  Location     Type
 12267 ;;		None
 12268 ;; Return value:  Size  Location     Type
 12269 ;;                  1    wreg      void 
 12270 ;; Registers used:
 12271 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12272 ;; Tracked objects:
 12273 ;;		On entry : 0/0
 12274 ;;		On exit  : 0/0
 12275 ;;		Unchanged: 0/0
 12276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12277 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12278 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12279 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12280 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12281 ;;Total ram usage:        0 bytes
 12282 ;; Hardware stack levels used:    1
 12283 ;; Hardware stack levels required when called:   13
 12284 ;; This function calls:
 12285 ;;		_USBCtrlTrfRxService
 12286 ;; This function is called by:
 12287 ;;		_USBCtrlEPService
 12288 ;; This function uses a non-reentrant model
 12289 ;;
 12290                           
 12291                           	psect	text49
 12292  00578E                     __ptext49:
 12293                           	opt stack 0
 12294  00578E                     _USBCtrlTrfOutHandler:
 12295                           	opt stack 12
 12296                           
 12297                           ;usb_device.c: 2557: if(controlTransferState == 2)
 12298                           
 12299                           ; BSR set to: 0
 12300                           ;incstack = 0
 12301  00578E  0E02               	movlw	2
 12302  005790  0100               	movlb	0	; () banked
 12303  005792  19CC               	xorwf	_controlTransferState& (0+255),w,b
 12304  005794  A4D8               	btfss	status,2,c
 12305  005796  D003               	goto	l1785
 12306                           
 12307                           ; BSR set to: 0
 12308                           ;usb_device.c: 2558: {
 12309                           ;usb_device.c: 2559: USBCtrlTrfRxService();
 12310  005798  EC17  F017         	call	_USBCtrlTrfRxService	;wreg free
 12311                           
 12312                           ;usb_device.c: 2560: }
 12313  00579C  0012               	return	
 12314  00579E                     l1785:
 12315                           
 12316                           ;usb_device.c: 2561: else
 12317                           ;usb_device.c: 2562: {
 12318                           ;usb_device.c: 2565: controlTransferState = 0;
 12319  00579E  0E00               	movlw	0
 12320  0057A0  0100               	movlb	0	; () banked
 12321  0057A2  6FCC               	movwf	_controlTransferState& (0+255),b
 12322                           
 12323                           ;usb_device.c: 2572: if(BothEP0OutUOWNsSet == 0)
 12324  0057A4  0101               	movlb	1	; () banked
 12325  0057A6  51DE               	movf	_BothEP0OutUOWNsSet& (0+255),w,b
 12326  0057A8  A4D8               	btfss	status,2,c
 12327  0057AA  D020               	goto	l1787
 12328                           
 12329                           ; BSR set to: 1
 12330                           ;usb_device.c: 2573: {
 12331                           ;usb_device.c: 2574: pBDTEntryEP0OutNext->CNT = 8;
 12332  0057AC  0100               	movlb	0	; () banked
 12333  0057AE  EE20 F001          	lfsr	2,1
 12334  0057B2  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12335  0057B4  26D9               	addwf	fsr2l,f,c
 12336  0057B6  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12337  0057B8  22DA               	addwfc	fsr2h,f,c
 12338  0057BA  0E08               	movlw	8
 12339  0057BC  6EDF               	movwf	indf2,c
 12340                           
 12341                           ;usb_device.c: 2575: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 12342  0057BE  EE20 F002          	lfsr	2,2
 12343  0057C2  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12344  0057C4  26D9               	addwf	fsr2l,f,c
 12345  0057C6  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12346  0057C8  22DA               	addwfc	fsr2h,f,c
 12347  0057CA  0E30               	movlw	48
 12348  0057CC  6EDE               	movwf	postinc2,c
 12349  0057CE  0E04               	movlw	4
 12350  0057D0  6EDD               	movwf	postdec2,c
 12351                           
 12352                           ; BSR set to: 0
 12353                           ;usb_device.c: 2576: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 12354  0057D2  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12355  0057D6  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12356  0057DA  0E0C               	movlw	12
 12357  0057DC  6EDF               	movwf	indf2,c
 12358                           
 12359                           ; BSR set to: 0
 12360                           ;usb_device.c: 2577: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 12361  0057DE  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12362  0057E2  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12363  0057E6  0E00               	movlw	0
 12364  0057E8  8EDB               	bsf	plusw2,7,c
 12365                           
 12366                           ;usb_device.c: 2578: }
 12367  0057EA  0012               	return	
 12368  0057EC                     l1787:
 12369                           
 12370                           ;usb_device.c: 2579: else
 12371                           ;usb_device.c: 2580: {
 12372                           ;usb_device.c: 2581: BothEP0OutUOWNsSet = 0;
 12373                           
 12374                           ; BSR set to: 0
 12375  0057EC  0E00               	movlw	0
 12376  0057EE  0101               	movlb	1	; () banked
 12377  0057F0  6FDE               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 12378                           
 12379                           ; BSR set to: 1
 12380  0057F2  0012               	return	
 12381  0057F4                     __end_of_USBCtrlTrfOutHandler:
 12382                           	opt stack 0
 12383                           tosu	equ	0xFFF
 12384                           tosh	equ	0xFFE
 12385                           tosl	equ	0xFFD
 12386                           pclath	equ	0xFFA
 12387                           tblptru	equ	0xFF8
 12388                           tblptrh	equ	0xFF7
 12389                           tblptrl	equ	0xFF6
 12390                           tablat	equ	0xFF5
 12391                           prodh	equ	0xFF4
 12392                           prodl	equ	0xFF3
 12393                           intcon	equ	0xFF2
 12394                           intcon2	equ	0xFF1
 12395                           intcon3	equ	0xFF0
 12396                           indf0	equ	0xFEF
 12397                           postinc0	equ	0xFEE
 12398                           plusw0	equ	0xFEB
 12399                           fsr0h	equ	0xFEA
 12400                           fsr0l	equ	0xFE9
 12401                           wreg	equ	0xFE8
 12402                           postinc1	equ	0xFE6
 12403                           postdec1	equ	0xFE5
 12404                           fsr1h	equ	0xFE2
 12405                           fsr1l	equ	0xFE1
 12406                           indf2	equ	0xFDF
 12407                           postinc2	equ	0xFDE
 12408                           postdec2	equ	0xFDD
 12409                           plusw2	equ	0xFDB
 12410                           fsr2h	equ	0xFDA
 12411                           fsr2l	equ	0xFD9
 12412                           status	equ	0xFD8
 12413                           
 12414 ;; *************** function _USBCtrlTrfRxService *****************
 12415 ;; Defined at:
 12416 ;;		line 1870 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 12417 ;; Parameters:    Size  Location     Type
 12418 ;;		None
 12419 ;; Auto vars:     Size  Location     Type
 12420 ;;  byteToRead      1   30[BANK0 ] unsigned char 
 12421 ;;  i               1   29[BANK0 ] unsigned char 
 12422 ;; Return value:  Size  Location     Type
 12423 ;;                  1    wreg      void 
 12424 ;; Registers used:
 12425 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12426 ;; Tracked objects:
 12427 ;;		On entry : 0/0
 12428 ;;		On exit  : 0/0
 12429 ;;		Unchanged: 0/0
 12430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12431 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12432 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12433 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12434 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12435 ;;Total ram usage:        2 bytes
 12436 ;; Hardware stack levels used:    1
 12437 ;; Hardware stack levels required when called:   12
 12438 ;; This function calls:
 12439 ;;		_USBCtrlEPAllowStatusStage
 12440 ;; This function is called by:
 12441 ;;		_USBCtrlTrfOutHandler
 12442 ;; This function uses a non-reentrant model
 12443 ;;
 12444                           
 12445                           	psect	text50
 12446  002E2E                     __ptext50:
 12447                           	opt stack 0
 12448  002E2E                     _USBCtrlTrfRxService:
 12449                           	opt stack 12
 12450                           
 12451                           ;usb_device.c: 1872: uint8_t byteToRead;
 12452                           ;usb_device.c: 1873: uint8_t i;
 12453                           ;usb_device.c: 1877: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 12454                           
 12455                           ;incstack = 0
 12456  002E2E  0100               	movlb	0	; () banked
 12457  002E30  EE20 F001          	lfsr	2,1
 12458  002E34  51C0               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 12459  002E36  26D9               	addwf	fsr2l,f,c
 12460  002E38  51C1               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 12461  002E3A  22DA               	addwfc	fsr2h,f,c
 12462  002E3C  50DF               	movf	indf2,w,c
 12463  002E3E  6F7E               	movwf	USBCtrlTrfRxService@byteToRead& (0+255),b
 12464                           
 12465                           ; BSR set to: 0
 12466                           ;usb_device.c: 1883: if(byteToRead > outPipes[0].wCount.Val)
 12467  002E40  517E               	movf	USBCtrlTrfRxService@byteToRead& (0+255),w,b
 12468  002E42  0101               	movlb	1	; () banked
 12469  002E44  5DCD               	subwf	(_outPipes+4)& (0+255),w,b
 12470  002E46  0E00               	movlw	0
 12471  002E48  59CE               	subwfb	(_outPipes+5)& (0+255),w,b
 12472  002E4A  A0D8               	btfss	status,0,c
 12473                           
 12474                           ; BSR set to: 1
 12475                           ;usb_device.c: 1884: {
 12476                           ;usb_device.c: 1885: byteToRead = outPipes[0].wCount.Val;
 12477  002E4C  C1CD  F07E         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead
 12478                           
 12479                           ; BSR set to: 1
 12480                           ;usb_device.c: 1886: }
 12481                           ;usb_device.c: 1888: outPipes[0].wCount.Val -= byteToRead;
 12482                           
 12483                           ; BSR set to: 1
 12484  002E50  0100               	movlb	0	; () banked
 12485  002E52  517E               	movf	USBCtrlTrfRxService@byteToRead& (0+255),w,b
 12486  002E54  0101               	movlb	1	; () banked
 12487  002E56  5FCD               	subwf	(_outPipes+4)& (0+255),f,b
 12488  002E58  0E00               	movlw	0
 12489  002E5A  5BCE               	subwfb	(_outPipes+5)& (0+255),f,b
 12490                           
 12491                           ; BSR set to: 1
 12492                           ;usb_device.c: 1892: for(i=0;i<byteToRead;i++)
 12493  002E5C  0E00               	movlw	0
 12494  002E5E  0100               	movlb	0	; () banked
 12495  002E60  6F7D               	movwf	USBCtrlTrfRxService@i& (0+255),b
 12496  002E62  D013               	goto	l1713
 12497  002E64                     
 12498                           ; BSR set to: 0
 12499                           ;usb_device.c: 1893: {
 12500                           ;usb_device.c: 1894: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 12501                           
 12502                           ; BSR set to: 0
 12503  002E64  517D               	movf	USBCtrlTrfRxService@i& (0+255),w,b
 12504  002E66  0D01               	mullw	1
 12505  002E68  0E38               	movlw	56
 12506  002E6A  24F3               	addwf	prodl,w,c
 12507  002E6C  6ED9               	movwf	fsr2l,c
 12508  002E6E  0E04               	movlw	4
 12509  002E70  20F4               	addwfc	prodh,w,c
 12510  002E72  6EDA               	movwf	fsr2h,c
 12511  002E74  C1C9  FFE1         	movff	_outPipes,fsr1l
 12512  002E78  C1CA  FFE2         	movff	_outPipes+1,fsr1h
 12513  002E7C  CFDF FFE7          	movff	indf2,indf1
 12514                           
 12515                           ; BSR set to: 0
 12516  002E80  0101               	movlb	1	; () banked
 12517  002E82  4BC9               	infsnz	_outPipes& (0+255),f,b
 12518  002E84  2BCA               	incf	(_outPipes+1)& (0+255),f,b
 12519                           
 12520                           ; BSR set to: 1
 12521  002E86  0100               	movlb	0	; () banked
 12522  002E88  2B7D               	incf	USBCtrlTrfRxService@i& (0+255),f,b
 12523  002E8A                     l1713:
 12524                           
 12525                           ; BSR set to: 0
 12526                           
 12527                           ; BSR set to: 0
 12528  002E8A  517E               	movf	USBCtrlTrfRxService@byteToRead& (0+255),w,b
 12529  002E8C  5D7D               	subwf	USBCtrlTrfRxService@i& (0+255),w,b
 12530  002E8E  A0D8               	btfss	status,0,c
 12531  002E90  D7E9               	goto	l1714
 12532                           
 12533                           ; BSR set to: 0
 12534                           ;usb_device.c: 1895: }
 12535                           ;usb_device.c: 1899: if(outPipes[0].wCount.Val > 0)
 12536                           
 12537                           ; BSR set to: 0
 12538  002E92  0101               	movlb	1	; () banked
 12539  002E94  51CD               	movf	(_outPipes+4)& (0+255),w,b
 12540  002E96  11CE               	iorwf	(_outPipes+5)& (0+255),w,b
 12541  002E98  B4D8               	btfsc	status,2,c
 12542  002E9A  D033               	goto	l1716
 12543                           
 12544                           ; BSR set to: 1
 12545                           ;usb_device.c: 1900: {
 12546                           ;usb_device.c: 1901: pBDTEntryEP0OutNext->CNT = 8;
 12547  002E9C  0100               	movlb	0	; () banked
 12548  002E9E  EE20 F001          	lfsr	2,1
 12549  002EA2  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12550  002EA4  26D9               	addwf	fsr2l,f,c
 12551  002EA6  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12552  002EA8  22DA               	addwfc	fsr2h,f,c
 12553  002EAA  0E08               	movlw	8
 12554  002EAC  6EDF               	movwf	indf2,c
 12555                           
 12556                           ;usb_device.c: 1902: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 12557  002EAE  EE20 F002          	lfsr	2,2
 12558  002EB2  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12559  002EB4  26D9               	addwf	fsr2l,f,c
 12560  002EB6  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12561  002EB8  22DA               	addwfc	fsr2h,f,c
 12562  002EBA  0E38               	movlw	56
 12563  002EBC  6EDE               	movwf	postinc2,c
 12564  002EBE  0E04               	movlw	4
 12565  002EC0  6EDD               	movwf	postdec2,c
 12566                           
 12567                           ; BSR set to: 0
 12568                           ;usb_device.c: 1903: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 12569  002EC2  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 12570  002EC6  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 12571  002ECA  BCDF               	btfsc	indf2,6,c
 12572  002ECC  D00D               	goto	l1717
 12573                           
 12574                           ; BSR set to: 0
 12575                           ;usb_device.c: 1904: {
 12576                           ;usb_device.c: 1905: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 12577  002ECE  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12578  002ED2  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12579  002ED6  0E48               	movlw	72
 12580  002ED8  6EDF               	movwf	indf2,c
 12581                           
 12582                           ; BSR set to: 0
 12583                           ;usb_device.c: 1906: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 12584  002EDA  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12585  002EDE  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12586  002EE2  0E00               	movlw	0
 12587  002EE4  8EDB               	bsf	plusw2,7,c
 12588                           
 12589                           ;usb_device.c: 1907: }
 12590  002EE6  0012               	return	
 12591  002EE8                     l1717:
 12592                           
 12593                           ; BSR set to: 0
 12594                           ;usb_device.c: 1908: else
 12595                           ;usb_device.c: 1909: {
 12596                           ;usb_device.c: 1910: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
 12597                           
 12598                           ; BSR set to: 0
 12599  002EE8  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12600  002EEC  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12601  002EF0  0E08               	movlw	8
 12602  002EF2  6EDF               	movwf	indf2,c
 12603                           
 12604                           ; BSR set to: 0
 12605                           ;usb_device.c: 1911: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 12606  002EF4  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12607  002EF8  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12608  002EFC  0E00               	movlw	0
 12609  002EFE  8EDB               	bsf	plusw2,7,c
 12610                           
 12611                           ; BSR set to: 0
 12612                           ;usb_device.c: 1912: }
 12613                           ;usb_device.c: 1913: }
 12614  002F00  0012               	return	
 12615  002F02                     l1716:
 12616                           
 12617                           ;usb_device.c: 1914: else
 12618                           ;usb_device.c: 1915: {
 12619                           ;usb_device.c: 1919: pBDTEntryEP0OutNext->CNT = 8;
 12620                           
 12621                           ; BSR set to: 0
 12622  002F02  0100               	movlb	0	; () banked
 12623  002F04  EE20 F001          	lfsr	2,1
 12624  002F08  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12625  002F0A  26D9               	addwf	fsr2l,f,c
 12626  002F0C  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12627  002F0E  22DA               	addwfc	fsr2h,f,c
 12628  002F10  0E08               	movlw	8
 12629  002F12  6EDF               	movwf	indf2,c
 12630                           
 12631                           ;usb_device.c: 1920: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 12632  002F14  EE20 F002          	lfsr	2,2
 12633  002F18  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12634  002F1A  26D9               	addwf	fsr2l,f,c
 12635  002F1C  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12636  002F1E  22DA               	addwfc	fsr2h,f,c
 12637  002F20  0E30               	movlw	48
 12638  002F22  6EDE               	movwf	postinc2,c
 12639  002F24  0E04               	movlw	4
 12640  002F26  6EDD               	movwf	postdec2,c
 12641                           
 12642                           ; BSR set to: 0
 12643                           ;usb_device.c: 1924: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 12644  002F28  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12645  002F2C  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12646  002F30  0E04               	movlw	4
 12647  002F32  6EDF               	movwf	indf2,c
 12648                           
 12649                           ; BSR set to: 0
 12650                           ;usb_device.c: 1925: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 12651  002F34  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12652  002F38  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12653  002F3C  0E00               	movlw	0
 12654  002F3E  8EDB               	bsf	plusw2,7,c
 12655                           
 12656                           ; BSR set to: 0
 12657                           ;usb_device.c: 1944: }
 12658                           ;usb_device.c: 1945: outPipes[0].info.bits.busy = 0;
 12659                           
 12660                           ; BSR set to: 0
 12661  002F40  0101               	movlb	1	; () banked
 12662  002F42  9FCC               	bcf	(_outPipes+3)& (0+255),7,b
 12663                           
 12664                           ; BSR set to: 1
 12665                           ;usb_device.c: 1959: if(USBDeferStatusStagePacket == 0)
 12666  002F44  0100               	movlb	0	; () banked
 12667  002F46  51CA               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 12668  002F48  A4D8               	btfss	status,2,c
 12669  002F4A  0012               	return	
 12670                           
 12671                           ; BSR set to: 0
 12672                           ;usb_device.c: 1960: {
 12673                           ;usb_device.c: 1961: USBCtrlEPAllowStatusStage();
 12674  002F4C  EC4A  F01F         	call	_USBCtrlEPAllowStatusStage	;wreg free
 12675  002F50  0012               	return	
 12676  002F52                     __end_of_USBCtrlTrfRxService:
 12677                           	opt stack 0
 12678                           tosu	equ	0xFFF
 12679                           tosh	equ	0xFFE
 12680                           tosl	equ	0xFFD
 12681                           pclath	equ	0xFFA
 12682                           tblptru	equ	0xFF8
 12683                           tblptrh	equ	0xFF7
 12684                           tblptrl	equ	0xFF6
 12685                           tablat	equ	0xFF5
 12686                           prodh	equ	0xFF4
 12687                           prodl	equ	0xFF3
 12688                           intcon	equ	0xFF2
 12689                           intcon2	equ	0xFF1
 12690                           intcon3	equ	0xFF0
 12691                           indf0	equ	0xFEF
 12692                           postinc0	equ	0xFEE
 12693                           plusw0	equ	0xFEB
 12694                           fsr0h	equ	0xFEA
 12695                           fsr0l	equ	0xFE9
 12696                           wreg	equ	0xFE8
 12697                           indf1	equ	0xFE7
 12698                           postinc1	equ	0xFE6
 12699                           postdec1	equ	0xFE5
 12700                           fsr1h	equ	0xFE2
 12701                           fsr1l	equ	0xFE1
 12702                           indf2	equ	0xFDF
 12703                           postinc2	equ	0xFDE
 12704                           postdec2	equ	0xFDD
 12705                           plusw2	equ	0xFDB
 12706                           fsr2h	equ	0xFDA
 12707                           fsr2l	equ	0xFD9
 12708                           status	equ	0xFD8
 12709                           
 12710 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 12711 ;; Defined at:
 12712 ;;		line 1434 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 12713 ;; Parameters:    Size  Location     Type
 12714 ;;		None
 12715 ;; Auto vars:     Size  Location     Type
 12716 ;;		None
 12717 ;; Return value:  Size  Location     Type
 12718 ;;                  1    wreg      void 
 12719 ;; Registers used:
 12720 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12721 ;; Tracked objects:
 12722 ;;		On entry : 0/0
 12723 ;;		On exit  : 0/0
 12724 ;;		Unchanged: 0/0
 12725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12726 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12727 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12728 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12729 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12730 ;;Total ram usage:        0 bytes
 12731 ;; Hardware stack levels used:    1
 12732 ;; Hardware stack levels required when called:   11
 12733 ;; This function calls:
 12734 ;;		Nothing
 12735 ;; This function is called by:
 12736 ;;		_USBDeviceTasks
 12737 ;;		_USBCtrlEPServiceComplete
 12738 ;;		_USBCtrlTrfRxService
 12739 ;; This function uses a non-reentrant model
 12740 ;;
 12741                           
 12742                           	psect	text51
 12743  003E94                     __ptext51:
 12744                           	opt stack 0
 12745  003E94                     _USBCtrlEPAllowStatusStage:
 12746                           	opt stack 12
 12747                           
 12748                           ;usb_device.c: 1441: if(USBStatusStageEnabledFlag1 == 0)
 12749                           
 12750                           ;incstack = 0
 12751  003E94  5028               	movf	_USBStatusStageEnabledFlag1,w,c	;volatile
 12752  003E96  A4D8               	btfss	status,2,c
 12753  003E98  0012               	return	
 12754                           
 12755                           ;usb_device.c: 1442: {
 12756                           ;usb_device.c: 1443: USBStatusStageEnabledFlag1 = 1;
 12757  003E9A  0E01               	movlw	1
 12758  003E9C  6E28               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 12759                           
 12760                           ;usb_device.c: 1444: if(USBStatusStageEnabledFlag2 == 0)
 12761  003E9E  5027               	movf	_USBStatusStageEnabledFlag2,w,c	;volatile
 12762  003EA0  A4D8               	btfss	status,2,c
 12763  003EA2  0012               	return	
 12764                           
 12765                           ;usb_device.c: 1445: {
 12766                           ;usb_device.c: 1446: USBStatusStageEnabledFlag2 = 1;
 12767  003EA4  0E01               	movlw	1
 12768  003EA6  6E27               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 12769                           
 12770                           ;usb_device.c: 1450: if(controlTransferState == 2)
 12771  003EA8  0E02               	movlw	2
 12772  003EAA  0100               	movlb	0	; () banked
 12773  003EAC  19CC               	xorwf	_controlTransferState& (0+255),w,b
 12774  003EAE  A4D8               	btfss	status,2,c
 12775  003EB0  D015               	goto	l1667
 12776                           
 12777                           ; BSR set to: 0
 12778                           ;usb_device.c: 1451: {
 12779                           ;usb_device.c: 1452: pBDTEntryIn[0]->CNT = 0;
 12780  003EB2  EE20 F001          	lfsr	2,1
 12781  003EB6  51B6               	movf	_pBDTEntryIn& (0+255),w,b
 12782  003EB8  26D9               	addwf	fsr2l,f,c
 12783  003EBA  51B7               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 12784  003EBC  22DA               	addwfc	fsr2h,f,c
 12785  003EBE  0E00               	movlw	0
 12786  003EC0  6EDF               	movwf	indf2,c
 12787                           
 12788                           ; BSR set to: 0
 12789                           ;usb_device.c: 1453: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 12790  003EC2  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 12791  003EC6  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12792  003ECA  0E48               	movlw	72
 12793  003ECC  6EDF               	movwf	indf2,c
 12794                           
 12795                           ; BSR set to: 0
 12796                           ;usb_device.c: 1454: pBDTEntryIn[0]->STAT.Val |= 0x80;
 12797  003ECE  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 12798  003ED2  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12799  003ED6  0E00               	movlw	0
 12800  003ED8  8EDB               	bsf	plusw2,7,c
 12801                           
 12802                           ;usb_device.c: 1455: }
 12803  003EDA  0012               	return	
 12804  003EDC                     l1667:
 12805                           
 12806                           ; BSR set to: 0
 12807                           ;usb_device.c: 1456: else if(controlTransferState == 1)
 12808                           
 12809                           ; BSR set to: 0
 12810  003EDC  05CC               	decf	_controlTransferState& (0+255),w,b
 12811  003EDE  A4D8               	btfss	status,2,c
 12812  003EE0  0012               	return	
 12813                           
 12814                           ; BSR set to: 0
 12815                           ;usb_device.c: 1457: {
 12816                           ;usb_device.c: 1458: BothEP0OutUOWNsSet = 0;
 12817  003EE2  0E00               	movlw	0
 12818  003EE4  0101               	movlb	1	; () banked
 12819  003EE6  6FDE               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 12820                           
 12821                           ; BSR set to: 1
 12822                           ;usb_device.c: 1463: pBDTEntryEP0OutCurrent->CNT = 8;
 12823  003EE8  0100               	movlb	0	; () banked
 12824  003EEA  EE20 F001          	lfsr	2,1
 12825  003EEE  51C0               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 12826  003EF0  26D9               	addwf	fsr2l,f,c
 12827  003EF2  51C1               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 12828  003EF4  22DA               	addwfc	fsr2h,f,c
 12829  003EF6  0E08               	movlw	8
 12830  003EF8  6EDF               	movwf	indf2,c
 12831                           
 12832                           ; BSR set to: 0
 12833                           ;usb_device.c: 1464: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 12834  003EFA  EE20 F002          	lfsr	2,2
 12835  003EFE  51C0               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 12836  003F00  26D9               	addwf	fsr2l,f,c
 12837  003F02  51C1               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 12838  003F04  22DA               	addwfc	fsr2h,f,c
 12839  003F06  0E30               	movlw	48
 12840  003F08  6EDE               	movwf	postinc2,c
 12841  003F0A  0E04               	movlw	4
 12842  003F0C  6EDD               	movwf	postdec2,c
 12843                           
 12844                           ; BSR set to: 0
 12845                           ;usb_device.c: 1465: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 12846  003F0E  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 12847  003F12  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 12848  003F16  0E04               	movlw	4
 12849  003F18  6EDF               	movwf	indf2,c
 12850                           
 12851                           ; BSR set to: 0
 12852                           ;usb_device.c: 1466: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 12853  003F1A  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 12854  003F1E  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 12855  003F22  0E00               	movlw	0
 12856  003F24  8EDB               	bsf	plusw2,7,c
 12857                           
 12858                           ; BSR set to: 0
 12859                           ;usb_device.c: 1467: BothEP0OutUOWNsSet = 1;
 12860  003F26  0E01               	movlw	1
 12861  003F28  0101               	movlb	1	; () banked
 12862  003F2A  6FDE               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 12863                           
 12864                           ; BSR set to: 1
 12865                           ;usb_device.c: 1471: pBDTEntryEP0OutNext->CNT = 8;
 12866  003F2C  0100               	movlb	0	; () banked
 12867  003F2E  EE20 F001          	lfsr	2,1
 12868  003F32  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12869  003F34  26D9               	addwf	fsr2l,f,c
 12870  003F36  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12871  003F38  22DA               	addwfc	fsr2h,f,c
 12872  003F3A  0E08               	movlw	8
 12873  003F3C  6EDF               	movwf	indf2,c
 12874                           
 12875                           ; BSR set to: 0
 12876                           ;usb_device.c: 1472: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 12877  003F3E  EE20 F002          	lfsr	2,2
 12878  003F42  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12879  003F44  26D9               	addwf	fsr2l,f,c
 12880  003F46  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12881  003F48  22DA               	addwfc	fsr2h,f,c
 12882  003F4A  0E30               	movlw	48
 12883  003F4C  6EDE               	movwf	postinc2,c
 12884  003F4E  0E04               	movlw	4
 12885  003F50  6EDD               	movwf	postdec2,c
 12886                           
 12887                           ; BSR set to: 0
 12888                           ;usb_device.c: 1473: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 12889  003F52  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12890  003F56  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12891  003F5A  0E80               	movlw	128
 12892  003F5C  6EDF               	movwf	indf2,c
 12893                           
 12894                           ; BSR set to: 0
 12895                           
 12896                           ; BSR set to: 0
 12897                           
 12898                           ; BSR set to: 0
 12899  003F5E  0012               	return	
 12900  003F60                     __end_of_USBCtrlEPAllowStatusStage:
 12901                           	opt stack 0
 12902                           tosu	equ	0xFFF
 12903                           tosh	equ	0xFFE
 12904                           tosl	equ	0xFFD
 12905                           pclath	equ	0xFFA
 12906                           tblptru	equ	0xFF8
 12907                           tblptrh	equ	0xFF7
 12908                           tblptrl	equ	0xFF6
 12909                           tablat	equ	0xFF5
 12910                           prodh	equ	0xFF4
 12911                           prodl	equ	0xFF3
 12912                           intcon	equ	0xFF2
 12913                           intcon2	equ	0xFF1
 12914                           intcon3	equ	0xFF0
 12915                           indf0	equ	0xFEF
 12916                           postinc0	equ	0xFEE
 12917                           plusw0	equ	0xFEB
 12918                           fsr0h	equ	0xFEA
 12919                           fsr0l	equ	0xFE9
 12920                           wreg	equ	0xFE8
 12921                           indf1	equ	0xFE7
 12922                           postinc1	equ	0xFE6
 12923                           postdec1	equ	0xFE5
 12924                           fsr1h	equ	0xFE2
 12925                           fsr1l	equ	0xFE1
 12926                           indf2	equ	0xFDF
 12927                           postinc2	equ	0xFDE
 12928                           postdec2	equ	0xFDD
 12929                           plusw2	equ	0xFDB
 12930                           fsr2h	equ	0xFDA
 12931                           fsr2l	equ	0xFD9
 12932                           status	equ	0xFD8
 12933                           
 12934 ;; *************** function _USBCtrlTrfInHandler *****************
 12935 ;; Defined at:
 12936 ;;		line 2609 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 12937 ;; Parameters:    Size  Location     Type
 12938 ;;		None
 12939 ;; Auto vars:     Size  Location     Type
 12940 ;;  lastDTS         1   30[BANK0 ] unsigned char 
 12941 ;; Return value:  Size  Location     Type
 12942 ;;                  1    wreg      void 
 12943 ;; Registers used:
 12944 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12945 ;; Tracked objects:
 12946 ;;		On entry : 0/0
 12947 ;;		On exit  : 0/0
 12948 ;;		Unchanged: 0/0
 12949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12950 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12951 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12952 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12953 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12954 ;;Total ram usage:        1 bytes
 12955 ;; Hardware stack levels used:    1
 12956 ;; Hardware stack levels required when called:   12
 12957 ;; This function calls:
 12958 ;;		_USBCtrlTrfTxService
 12959 ;; This function is called by:
 12960 ;;		_USBCtrlEPService
 12961 ;; This function uses a non-reentrant model
 12962 ;;
 12963                           
 12964                           	psect	text52
 12965  004346                     __ptext52:
 12966                           	opt stack 0
 12967  004346                     _USBCtrlTrfInHandler:
 12968                           	opt stack 13
 12969                           
 12970                           ;usb_device.c: 2611: uint8_t lastDTS;
 12971                           ;usb_device.c: 2613: lastDTS = pBDTEntryIn[0]->STAT.DTS;
 12972                           
 12973                           ;incstack = 0
 12974  004346  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 12975  00434A  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12976  00434E  0100               	movlb	0	; () banked
 12977  004350  0E00               	movlw	0
 12978  004352  BCDF               	btfsc	indf2,6,c
 12979  004354  0E01               	movlw	1
 12980  004356  6F7E               	movwf	USBCtrlTrfInHandler@lastDTS& (0+255),b
 12981                           
 12982                           ; BSR set to: 0
 12983                           ;usb_device.c: 2616: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 12984  004358  0E04               	movlw	4
 12985  00435A  1BB6               	xorwf	_pBDTEntryIn& (0+255),f,b
 12986                           
 12987                           ; BSR set to: 0
 12988                           ;usb_device.c: 2621: if(USBDeviceState == ADR_PENDING_STATE)
 12989  00435C  0E08               	movlw	8
 12990  00435E  19CE               	xorwf	_USBDeviceState& (0+255),w,b
 12991  004360  A4D8               	btfss	status,2,c
 12992  004362  D00D               	goto	l1794
 12993                           
 12994                           ; BSR set to: 0
 12995                           ;usb_device.c: 2622: {
 12996                           ;usb_device.c: 2623: UADDR = (SetupPkt.bDevADR & 0x7F);
 12997  004364  0104               	movlb	4	; () banked
 12998  004366  5132               	movf	50,w,b	;volatile
 12999  004368  0B7F               	andlw	127
 13000  00436A  010F               	movlb	15	; () banked
 13001  00436C  6F38               	movwf	56,b	;volatile
 13002                           
 13003                           ; BSR set to: 15
 13004                           ;usb_device.c: 2624: if(UADDR != 0u)
 13005  00436E  5138               	movf	56,w,b	;volatile
 13006  004370  B4D8               	btfsc	status,2,c
 13007  004372  D002               	goto	l1793
 13008                           
 13009                           ; BSR set to: 15
 13010                           ;usb_device.c: 2625: {
 13011                           ;usb_device.c: 2626: USBDeviceState=ADDRESS_STATE;
 13012  004374  0E10               	movlw	16
 13013  004376  D001               	goto	L11
 13014  004378                     l1793:
 13015                           
 13016                           ;usb_device.c: 2628: else
 13017                           ;usb_device.c: 2629: {
 13018                           ;usb_device.c: 2630: USBDeviceState=DEFAULT_STATE;
 13019                           
 13020                           ; BSR set to: 0
 13021  004378  0E04               	movlw	4
 13022  00437A                     L11:
 13023  00437A  0100               	movlb	0	; () banked
 13024  00437C  6FCE               	movwf	_USBDeviceState& (0+255),b
 13025  00437E                     l1794:
 13026                           
 13027                           ; BSR set to: 0
 13028                           ;usb_device.c: 2631: }
 13029                           ;usb_device.c: 2632: }
 13030                           ;usb_device.c: 2635: if(controlTransferState == 1)
 13031                           
 13032                           ; BSR set to: 0
 13033                           
 13034                           ; BSR set to: 0
 13035  00437E  05CC               	decf	_controlTransferState& (0+255),w,b
 13036  004380  A4D8               	btfss	status,2,c
 13037  004382  D03B               	goto	l1795
 13038                           
 13039                           ; BSR set to: 0
 13040                           ;usb_device.c: 2636: {
 13041                           ;usb_device.c: 2637: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData));
 13042  004384  EE20 F002          	lfsr	2,2
 13043  004388  51B6               	movf	_pBDTEntryIn& (0+255),w,b
 13044  00438A  26D9               	addwf	fsr2l,f,c
 13045  00438C  51B7               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 13046  00438E  22DA               	addwfc	fsr2h,f,c
 13047  004390  0E38               	movlw	56
 13048  004392  6EDE               	movwf	postinc2,c
 13049  004394  0E04               	movlw	4
 13050  004396  6EDD               	movwf	postdec2,c
 13051                           
 13052                           ; BSR set to: 0
 13053                           ;usb_device.c: 2638: USBCtrlTrfTxService();
 13054  004398  ECFA  F01B         	call	_USBCtrlTrfTxService	;wreg free
 13055                           
 13056                           ;usb_device.c: 2644: if(shortPacketStatus == 2)
 13057  00439C  0E02               	movlw	2
 13058  00439E  0100               	movlb	0	; () banked
 13059  0043A0  19CD               	xorwf	_shortPacketStatus& (0+255),w,b
 13060  0043A2  A4D8               	btfss	status,2,c
 13061  0043A4  D00D               	goto	l1796
 13062                           
 13063                           ; BSR set to: 0
 13064                           ;usb_device.c: 2645: {
 13065                           ;usb_device.c: 2648: pBDTEntryIn[0]->STAT.Val = 0x04;
 13066  0043A6  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 13067  0043AA  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13068  0043AE  0E04               	movlw	4
 13069  0043B0  6EDF               	movwf	indf2,c
 13070                           
 13071                           ; BSR set to: 0
 13072                           ;usb_device.c: 2649: pBDTEntryIn[0]->STAT.Val |= 0x80;
 13073  0043B2  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 13074  0043B6  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13075  0043BA  0E00               	movlw	0
 13076  0043BC  8EDB               	bsf	plusw2,7,c
 13077                           
 13078                           ;usb_device.c: 2650: }
 13079  0043BE  0012               	return	
 13080  0043C0                     l1796:
 13081                           
 13082                           ; BSR set to: 0
 13083                           ;usb_device.c: 2651: else
 13084                           ;usb_device.c: 2652: {
 13085                           ;usb_device.c: 2653: if(lastDTS == 0)
 13086                           
 13087                           ; BSR set to: 0
 13088  0043C0  517E               	movf	USBCtrlTrfInHandler@lastDTS& (0+255),w,b
 13089  0043C2  A4D8               	btfss	status,2,c
 13090  0043C4  D00D               	goto	l1798
 13091                           
 13092                           ; BSR set to: 0
 13093                           ;usb_device.c: 2654: {
 13094                           ;usb_device.c: 2655: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 13095  0043C6  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 13096  0043CA  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13097  0043CE  0E48               	movlw	72
 13098  0043D0  6EDF               	movwf	indf2,c
 13099                           
 13100                           ; BSR set to: 0
 13101                           ;usb_device.c: 2656: pBDTEntryIn[0]->STAT.Val |= 0x80;
 13102  0043D2  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 13103  0043D6  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13104  0043DA  0E00               	movlw	0
 13105  0043DC  8EDB               	bsf	plusw2,7,c
 13106                           
 13107                           ;usb_device.c: 2657: }
 13108  0043DE  0012               	return	
 13109  0043E0                     l1798:
 13110                           
 13111                           ; BSR set to: 0
 13112                           ;usb_device.c: 2658: else
 13113                           ;usb_device.c: 2659: {
 13114                           ;usb_device.c: 2660: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
 13115                           
 13116                           ; BSR set to: 0
 13117  0043E0  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 13118  0043E4  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13119  0043E8  0E08               	movlw	8
 13120  0043EA  6EDF               	movwf	indf2,c
 13121                           
 13122                           ; BSR set to: 0
 13123                           ;usb_device.c: 2661: pBDTEntryIn[0]->STAT.Val |= 0x80;
 13124  0043EC  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 13125  0043F0  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13126  0043F4  0E00               	movlw	0
 13127  0043F6  8EDB               	bsf	plusw2,7,c
 13128                           
 13129                           ; BSR set to: 0
 13130                           ;usb_device.c: 2662: }
 13131                           ;usb_device.c: 2663: }
 13132                           ;usb_device.c: 2664: }
 13133                           
 13134                           ; BSR set to: 0
 13135  0043F8  0012               	return	
 13136  0043FA                     l1795:
 13137                           
 13138                           ; BSR set to: 0
 13139                           ;usb_device.c: 2665: else
 13140                           ;usb_device.c: 2666: {
 13141                           ;usb_device.c: 2670: if(outPipes[0].info.bits.busy == 1)
 13142  0043FA  0101               	movlb	1	; () banked
 13143  0043FC  BFCC               	btfsc	(_outPipes+3)& (0+255),7,b
 13144                           
 13145                           ; BSR set to: 1
 13146                           ;usb_device.c: 2675: }
 13147                           ;usb_device.c: 2676: outPipes[0].info.bits.busy = 0;
 13148                           
 13149                           ; BSR set to: 1
 13150  0043FE  9FCC               	bcf	(_outPipes+3)& (0+255),7,b
 13151                           
 13152                           ; BSR set to: 1
 13153                           ;usb_device.c: 2677: }
 13154                           ;usb_device.c: 2679: controlTransferState = 0;
 13155                           
 13156                           ; BSR set to: 1
 13157  004400  0E00               	movlw	0
 13158  004402  0100               	movlb	0	; () banked
 13159  004404  6FCC               	movwf	_controlTransferState& (0+255),b
 13160  004406  0012               	return	
 13161  004408                     __end_of_USBCtrlTrfInHandler:
 13162                           	opt stack 0
 13163                           tosu	equ	0xFFF
 13164                           tosh	equ	0xFFE
 13165                           tosl	equ	0xFFD
 13166                           pclath	equ	0xFFA
 13167                           tblptru	equ	0xFF8
 13168                           tblptrh	equ	0xFF7
 13169                           tblptrl	equ	0xFF6
 13170                           tablat	equ	0xFF5
 13171                           prodh	equ	0xFF4
 13172                           prodl	equ	0xFF3
 13173                           intcon	equ	0xFF2
 13174                           intcon2	equ	0xFF1
 13175                           intcon3	equ	0xFF0
 13176                           indf0	equ	0xFEF
 13177                           postinc0	equ	0xFEE
 13178                           plusw0	equ	0xFEB
 13179                           fsr0h	equ	0xFEA
 13180                           fsr0l	equ	0xFE9
 13181                           wreg	equ	0xFE8
 13182                           indf1	equ	0xFE7
 13183                           postinc1	equ	0xFE6
 13184                           postdec1	equ	0xFE5
 13185                           fsr1h	equ	0xFE2
 13186                           fsr1l	equ	0xFE1
 13187                           indf2	equ	0xFDF
 13188                           postinc2	equ	0xFDE
 13189                           postdec2	equ	0xFDD
 13190                           plusw2	equ	0xFDB
 13191                           fsr2h	equ	0xFDA
 13192                           fsr2l	equ	0xFD9
 13193                           status	equ	0xFD8
 13194                           
 13195 ;; *************** function _USBCtrlTrfTxService *****************
 13196 ;; Defined at:
 13197 ;;		line 1789 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 13198 ;; Parameters:    Size  Location     Type
 13199 ;;		None
 13200 ;; Auto vars:     Size  Location     Type
 13201 ;;  byteToSend      1   29[BANK0 ] unsigned char 
 13202 ;; Return value:  Size  Location     Type
 13203 ;;                  1    wreg      void 
 13204 ;; Registers used:
 13205 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 13206 ;; Tracked objects:
 13207 ;;		On entry : 0/0
 13208 ;;		On exit  : 0/0
 13209 ;;		Unchanged: 0/0
 13210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13212 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13214 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13215 ;;Total ram usage:        1 bytes
 13216 ;; Hardware stack levels used:    1
 13217 ;; Hardware stack levels required when called:   11
 13218 ;; This function calls:
 13219 ;;		Nothing
 13220 ;; This function is called by:
 13221 ;;		_USBCtrlEPAllowDataStage
 13222 ;;		_USBCtrlTrfInHandler
 13223 ;; This function uses a non-reentrant model
 13224 ;;
 13225                           
 13226                           	psect	text53
 13227  0037F4                     __ptext53:
 13228                           	opt stack 0
 13229  0037F4                     _USBCtrlTrfTxService:
 13230                           	opt stack 11
 13231                           
 13232                           ;usb_device.c: 1791: uint8_t byteToSend;
 13233                           ;usb_device.c: 1795: byteToSend = 8;
 13234                           
 13235                           ; BSR set to: 0
 13236                           ;incstack = 0
 13237  0037F4  0E08               	movlw	8
 13238  0037F6  0100               	movlb	0	; () banked
 13239  0037F8  6F7D               	movwf	USBCtrlTrfTxService@byteToSend& (0+255),b
 13240                           
 13241                           ; BSR set to: 0
 13242                           ;usb_device.c: 1796: if(inPipes[0].wCount.Val < (uint8_t)8)
 13243  0037FA  51B5               	movf	(_inPipes+5)& (0+255),w,b
 13244  0037FC  E110               	bnz	l13113
 13245  0037FE  0E08               	movlw	8
 13246  003800  5DB4               	subwf	(_inPipes+4)& (0+255),w,b
 13247  003802  B0D8               	btfsc	status,0,c
 13248  003804  D00C               	goto	l1700
 13249                           
 13250                           ; BSR set to: 0
 13251                           ;usb_device.c: 1797: {
 13252                           ;usb_device.c: 1798: byteToSend = inPipes[0].wCount.Val;
 13253  003806  C0B4  F07D         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend
 13254                           
 13255                           ; BSR set to: 0
 13256                           ;usb_device.c: 1805: if(shortPacketStatus == 0)
 13257  00380A  51CD               	movf	_shortPacketStatus& (0+255),w,b
 13258  00380C  A4D8               	btfss	status,2,c
 13259  00380E  D002               	goto	l1698
 13260                           
 13261                           ; BSR set to: 0
 13262                           ;usb_device.c: 1806: {
 13263                           ;usb_device.c: 1807: shortPacketStatus = 1;
 13264  003810  0E01               	movlw	1
 13265  003812  D004               	goto	L12
 13266  003814                     l1698:
 13267                           
 13268                           ; BSR set to: 0
 13269                           ;usb_device.c: 1809: else if(shortPacketStatus == 1)
 13270                           
 13271                           ; BSR set to: 0
 13272  003814  05CD               	decf	_shortPacketStatus& (0+255),w,b
 13273  003816  A4D8               	btfss	status,2,c
 13274  003818  D002               	goto	l1700
 13275                           
 13276                           ; BSR set to: 0
 13277                           ;usb_device.c: 1810: {
 13278                           ;usb_device.c: 1811: shortPacketStatus = 2;
 13279  00381A  0E02               	movlw	2
 13280  00381C                     L12:
 13281  00381C  6FCD               	movwf	_shortPacketStatus& (0+255),b
 13282  00381E                     l1700:
 13283  00381E                     l13113:
 13284                           
 13285                           ; BSR set to: 0
 13286                           ;usb_device.c: 1812: }
 13287                           ;usb_device.c: 1813: }
 13288                           ;usb_device.c: 1817: inPipes[0].wCount.Val -= byteToSend;
 13289  00381E  517D               	movf	USBCtrlTrfTxService@byteToSend& (0+255),w,b
 13290  003820  5FB4               	subwf	(_inPipes+4)& (0+255),f,b
 13291  003822  0E00               	movlw	0
 13292  003824  5BB5               	subwfb	(_inPipes+5)& (0+255),f,b
 13293                           
 13294                           ; BSR set to: 0
 13295                           ;usb_device.c: 1822: pBDTEntryIn[0]->CNT = byteToSend;
 13296  003826  EE20 F001          	lfsr	2,1
 13297  00382A  51B6               	movf	_pBDTEntryIn& (0+255),w,b
 13298  00382C  26D9               	addwf	fsr2l,f,c
 13299  00382E  51B7               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 13300  003830  22DA               	addwfc	fsr2h,f,c
 13301  003832  C07D  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 13302                           
 13303                           ; BSR set to: 0
 13304                           ;usb_device.c: 1826: pDst = ( uint8_t*)CtrlTrfData;
 13305  003836  0E38               	movlw	56
 13306  003838  0102               	movlb	2	; () banked
 13307  00383A  6FD5               	movwf	_pDst& (0+255),b
 13308  00383C  0E04               	movlw	4
 13309  00383E  6FD6               	movwf	(_pDst+1)& (0+255),b
 13310                           
 13311                           ; BSR set to: 2
 13312                           ;usb_device.c: 1827: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 13313  003840  0100               	movlb	0	; () banked
 13314  003842  A1B3               	btfss	(_inPipes+3)& (0+255),0,b
 13315  003844  D01E               	goto	l1702
 13316  003846  D03E               	goto	l1706
 13317  003848                     
 13318                           ; BSR set to: 0
 13319                           ;usb_device.c: 1830: {
 13320                           ;usb_device.c: 1831: *pDst++ = *inPipes[0].pSrc.bRom++;
 13321                           
 13322                           ; BSR set to: 0
 13323  003848  C0B0  FFF6         	movff	_inPipes,tblptrl
 13324  00384C  C0B1  FFF7         	movff	_inPipes+1,tblptrh
 13325  003850  6AF8               	clrf	tblptru,c
 13326  003852  C2D5  FFD9         	movff	_pDst,fsr2l
 13327  003856  C2D6  FFDA         	movff	_pDst+1,fsr2h
 13328  00385A  0E0E               	movlw	(high __ramtop+-1)
 13329  00385C  64F7               	cpfsgt	tblptrh,c
 13330  00385E  D003               	bra	u11717
 13331  003860  0008               	tblrd		*
 13332  003862  50F5               	movf	tablat,w,c
 13333  003864  D005               	bra	u11710
 13334  003866                     u11717:
 13335  003866  CFF6 FFE9          	movff	tblptrl,fsr0l
 13336  00386A  CFF7 FFEA          	movff	tblptrh,fsr0h
 13337  00386E  50EF               	movf	indf0,w,c
 13338  003870                     u11710:
 13339  003870  6EDF               	movwf	indf2,c
 13340  003872  0100               	movlb	0	; () banked
 13341  003874  4BB0               	infsnz	_inPipes& (0+255),f,b
 13342  003876  2BB1               	incf	(_inPipes+1)& (0+255),f,b
 13343                           
 13344                           ; BSR set to: 0
 13345  003878  0102               	movlb	2	; () banked
 13346  00387A  4BD5               	infsnz	_pDst& (0+255),f,b
 13347  00387C  2BD6               	incf	(_pDst+1)& (0+255),f,b
 13348                           
 13349                           ; BSR set to: 2
 13350                           ;usb_device.c: 1832: byteToSend--;
 13351  00387E  0100               	movlb	0	; () banked
 13352  003880  077D               	decf	USBCtrlTrfTxService@byteToSend& (0+255),f,b
 13353  003882                     l1702:
 13354                           
 13355                           ; BSR set to: 0
 13356                           
 13357                           ; BSR set to: 0
 13358  003882  517D               	movf	USBCtrlTrfTxService@byteToSend& (0+255),w,b
 13359  003884  B4D8               	btfsc	status,2,c
 13360  003886  0012               	return	
 13361  003888  D7DF               	goto	l1703
 13362  00388A                     
 13363                           ; BSR set to: 0
 13364                           ;usb_device.c: 1838: {
 13365                           ;usb_device.c: 1839: *pDst++ = *inPipes[0].pSrc.bRam++;
 13366                           
 13367                           ; BSR set to: 0
 13368  00388A  C0B0  FFF6         	movff	_inPipes,tblptrl
 13369  00388E  C0B1  FFF7         	movff	_inPipes+1,tblptrh
 13370  003892  6AF8               	clrf	tblptru,c
 13371  003894  C2D5  FFD9         	movff	_pDst,fsr2l
 13372  003898  C2D6  FFDA         	movff	_pDst+1,fsr2h
 13373  00389C  0E0E               	movlw	(high __ramtop+-1)
 13374  00389E  64F7               	cpfsgt	tblptrh,c
 13375  0038A0  D003               	bra	u11737
 13376  0038A2  0008               	tblrd		*
 13377  0038A4  50F5               	movf	tablat,w,c
 13378  0038A6  D005               	bra	u11730
 13379  0038A8                     u11737:
 13380  0038A8  CFF6 FFE9          	movff	tblptrl,fsr0l
 13381  0038AC  CFF7 FFEA          	movff	tblptrh,fsr0h
 13382  0038B0  50EF               	movf	indf0,w,c
 13383  0038B2                     u11730:
 13384  0038B2  6EDF               	movwf	indf2,c
 13385  0038B4  0100               	movlb	0	; () banked
 13386  0038B6  4BB0               	infsnz	_inPipes& (0+255),f,b
 13387  0038B8  2BB1               	incf	(_inPipes+1)& (0+255),f,b
 13388                           
 13389                           ; BSR set to: 0
 13390  0038BA  0102               	movlb	2	; () banked
 13391  0038BC  4BD5               	infsnz	_pDst& (0+255),f,b
 13392  0038BE  2BD6               	incf	(_pDst+1)& (0+255),f,b
 13393                           
 13394                           ; BSR set to: 2
 13395                           ;usb_device.c: 1840: byteToSend--;
 13396  0038C0  0100               	movlb	0	; () banked
 13397  0038C2  077D               	decf	USBCtrlTrfTxService@byteToSend& (0+255),f,b
 13398  0038C4                     l1706:
 13399                           
 13400                           ; BSR set to: 0
 13401                           
 13402                           ; BSR set to: 0
 13403  0038C4  517D               	movf	USBCtrlTrfTxService@byteToSend& (0+255),w,b
 13404  0038C6  B4D8               	btfsc	status,2,c
 13405  0038C8  0012               	return	
 13406  0038CA  D7DF               	goto	l1707
 13407  0038CC                     __end_of_USBCtrlTrfTxService:
 13408                           	opt stack 0
 13409                           tosu	equ	0xFFF
 13410                           tosh	equ	0xFFE
 13411                           tosl	equ	0xFFD
 13412                           pclath	equ	0xFFA
 13413                           tblptru	equ	0xFF8
 13414                           tblptrh	equ	0xFF7
 13415                           tblptrl	equ	0xFF6
 13416                           tablat	equ	0xFF5
 13417                           prodh	equ	0xFF4
 13418                           prodl	equ	0xFF3
 13419                           intcon	equ	0xFF2
 13420                           intcon2	equ	0xFF1
 13421                           intcon3	equ	0xFF0
 13422                           indf0	equ	0xFEF
 13423                           postinc0	equ	0xFEE
 13424                           plusw0	equ	0xFEB
 13425                           fsr0h	equ	0xFEA
 13426                           fsr0l	equ	0xFE9
 13427                           wreg	equ	0xFE8
 13428                           indf1	equ	0xFE7
 13429                           postinc1	equ	0xFE6
 13430                           postdec1	equ	0xFE5
 13431                           fsr1h	equ	0xFE2
 13432                           fsr1l	equ	0xFE1
 13433                           indf2	equ	0xFDF
 13434                           postinc2	equ	0xFDE
 13435                           postdec2	equ	0xFDD
 13436                           plusw2	equ	0xFDB
 13437                           fsr2h	equ	0xFDA
 13438                           fsr2l	equ	0xFD9
 13439                           status	equ	0xFD8
 13440                           
 13441 ;; *************** function _CDCTxService *****************
 13442 ;; Defined at:
 13443 ;;		line 839 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 13444 ;; Parameters:    Size  Location     Type
 13445 ;;		None
 13446 ;; Auto vars:     Size  Location     Type
 13447 ;;  byte_to_send    1   37[BANK0 ] unsigned char 
 13448 ;;  i               1   36[BANK0 ] unsigned char 
 13449 ;; Return value:  Size  Location     Type
 13450 ;;                  1    wreg      void 
 13451 ;; Registers used:
 13452 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13453 ;; Tracked objects:
 13454 ;;		On entry : 0/0
 13455 ;;		On exit  : 0/0
 13456 ;;		Unchanged: 0/0
 13457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13458 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13459 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13461 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13462 ;;Total ram usage:        2 bytes
 13463 ;; Hardware stack levels used:    1
 13464 ;; Hardware stack levels required when called:   12
 13465 ;; This function calls:
 13466 ;;		_USBTransferOnePacket
 13467 ;; This function is called by:
 13468 ;;		_UsbDevice_MainTask
 13469 ;; This function uses a non-reentrant model
 13470 ;;
 13471                           
 13472                           	psect	text54
 13473  00282A                     __ptext54:
 13474                           	opt stack 0
 13475  00282A                     _CDCTxService:
 13476                           	opt stack 15
 13477                           
 13478                           ;usb_device_cdc.c: 841: uint8_t byte_to_send;
 13479                           ;usb_device_cdc.c: 842: uint8_t i;
 13480                           ;usb_device_cdc.c: 844: ;
 13481                           ;usb_device_cdc.c: 846: {};
 13482                           ;usb_device_cdc.c: 848: if(((CDCDataInHandle != 0x0000) && ((*(volatile uint8_t*)CDCData
      +                          InHandle & 0x80) != 0x00)))
 13483                           
 13484                           ; BSR set to: 0
 13485                           ;incstack = 0
 13486  00282A  0101               	movlb	1	; () banked
 13487  00282C  51D1               	movf	_CDCDataInHandle& (0+255),w,b
 13488  00282E  11D2               	iorwf	(_CDCDataInHandle+1)& (0+255),w,b
 13489  002830  B4D8               	btfsc	status,2,c
 13490  002832  D006               	goto	l1952
 13491                           
 13492                           ; BSR set to: 1
 13493  002834  C1D1  FFD9         	movff	_CDCDataInHandle,fsr2l
 13494  002838  C1D2  FFDA         	movff	_CDCDataInHandle+1,fsr2h
 13495  00283C  BEDF               	btfsc	indf2,7,c
 13496  00283E  0012               	return	
 13497  002840                     l1952:
 13498                           
 13499                           ; BSR set to: 1
 13500                           ;usb_device_cdc.c: 852: }
 13501                           ;usb_device_cdc.c: 859: if(cdc_trf_state == 3)
 13502                           
 13503                           ; BSR set to: 1
 13504  002840  0E03               	movlw	3
 13505  002842  0100               	movlb	0	; () banked
 13506  002844  19C8               	xorwf	_cdc_trf_state& (0+255),w,b
 13507  002846  A4D8               	btfss	status,2,c
 13508  002848  D002               	goto	l1954
 13509                           
 13510                           ; BSR set to: 0
 13511                           ;usb_device_cdc.c: 860: cdc_trf_state = 0;
 13512  00284A  0E00               	movlw	0
 13513  00284C  6FC8               	movwf	_cdc_trf_state& (0+255),b
 13514  00284E                     l1954:
 13515                           
 13516                           ; BSR set to: 0
 13517                           ;usb_device_cdc.c: 865: if(cdc_trf_state == 0)
 13518  00284E  51C8               	movf	_cdc_trf_state& (0+255),w,b
 13519  002850  B4D8               	btfsc	status,2,c
 13520  002852  0012               	return	
 13521                           
 13522                           ; BSR set to: 0
 13523                           ;usb_device_cdc.c: 869: }
 13524                           ;usb_device_cdc.c: 874: if(cdc_trf_state == 2)
 13525                           
 13526                           ; BSR set to: 0
 13527                           
 13528                           ; BSR set to: 0
 13529                           ;usb_device_cdc.c: 866: {
 13530                           ;usb_device_cdc.c: 867: ;
 13531                           ;usb_device_cdc.c: 868: return;
 13532  002854  0E02               	movlw	2
 13533  002856  19C8               	xorwf	_cdc_trf_state& (0+255),w,b
 13534  002858  A4D8               	btfss	status,2,c
 13535  00285A  D013               	goto	l1956
 13536                           
 13537                           ; BSR set to: 0
 13538                           ;usb_device_cdc.c: 875: {
 13539                           ;usb_device_cdc.c: 876: CDCDataInHandle = USBTransferOnePacket(2,1,(0),0);
 13540  00285C  0E01               	movlw	1
 13541  00285E  6F7D               	movwf	USBTransferOnePacket@dir& (0+255),b
 13542  002860  0E00               	movlw	0
 13543  002862  6F7E               	movwf	USBTransferOnePacket@data& (0+255),b
 13544  002864  0E00               	movlw	0
 13545  002866  6F7F               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 13546  002868  0E00               	movlw	0
 13547  00286A  6F80               	movwf	USBTransferOnePacket@len& (0+255),b
 13548  00286C  0E02               	movlw	2
 13549  00286E  EC04  F022         	call	_USBTransferOnePacket
 13550  002872  C07D  F1D1         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 13551  002876  C07E  F1D2         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 13552                           
 13553                           ;usb_device_cdc.c: 878: cdc_trf_state = 3;
 13554  00287A  0E03               	movlw	3
 13555  00287C  0100               	movlb	0	; () banked
 13556  00287E  6FC8               	movwf	_cdc_trf_state& (0+255),b
 13557                           
 13558                           ;usb_device_cdc.c: 879: }
 13559  002880  0012               	return	
 13560  002882                     l1956:
 13561                           
 13562                           ; BSR set to: 0
 13563                           ;usb_device_cdc.c: 880: else if(cdc_trf_state == 1)
 13564                           
 13565                           ; BSR set to: 0
 13566  002882  05C8               	decf	_cdc_trf_state& (0+255),w,b
 13567  002884  A4D8               	btfss	status,2,c
 13568  002886  0012               	return	
 13569                           
 13570                           ; BSR set to: 0
 13571                           ;usb_device_cdc.c: 881: {
 13572                           ;usb_device_cdc.c: 885: if(cdc_tx_len > sizeof(cdc_data_tx))
 13573  002888  0E40               	movlw	64
 13574  00288A  65C7               	cpfsgt	_cdc_tx_len& (0+255),b
 13575  00288C  D003               	goto	l1959
 13576                           
 13577                           ; BSR set to: 0
 13578                           ;usb_device_cdc.c: 886: byte_to_send = sizeof(cdc_data_tx);
 13579  00288E  0E40               	movlw	64
 13580  002890  6F85               	movwf	CDCTxService@byte_to_send& (0+255),b
 13581  002892  D002               	goto	l1960
 13582  002894                     l1959:
 13583                           
 13584                           ; BSR set to: 0
 13585                           ;usb_device_cdc.c: 887: else
 13586                           ;usb_device_cdc.c: 888: byte_to_send = cdc_tx_len;
 13587  002894  C0C7  F085         	movff	_cdc_tx_len,CDCTxService@byte_to_send
 13588  002898                     l1960:
 13589                           
 13590                           ; BSR set to: 0
 13591                           ;usb_device_cdc.c: 893: cdc_tx_len = cdc_tx_len - byte_to_send;
 13592                           
 13593                           ; BSR set to: 0
 13594  002898  5185               	movf	CDCTxService@byte_to_send& (0+255),w,b
 13595  00289A  0800               	sublw	0
 13596  00289C  25C7               	addwf	_cdc_tx_len& (0+255),w,b
 13597  00289E  6FC7               	movwf	_cdc_tx_len& (0+255),b
 13598                           
 13599                           ;usb_device_cdc.c: 895: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
 13600  0028A0  0EB6               	movlw	low _cdc_data_tx
 13601  0028A2  0102               	movlb	2	; () banked
 13602  0028A4  6FC9               	movwf	_pCDCDst& (0+255),b
 13603  0028A6  0E07               	movlw	high _cdc_data_tx
 13604  0028A8  6FCA               	movwf	(_pCDCDst+1)& (0+255),b
 13605                           
 13606                           ; BSR set to: 2
 13607                           ;usb_device_cdc.c: 897: i = byte_to_send;
 13608  0028AA  C085  F084         	movff	CDCTxService@byte_to_send,CDCTxService@i
 13609                           
 13610                           ; BSR set to: 2
 13611                           ;usb_device_cdc.c: 898: if(cdc_mem_type == 0x00)
 13612  0028AE  0101               	movlb	1	; () banked
 13613  0028B0  51DC               	movf	_cdc_mem_type& (0+255),w,b
 13614  0028B2  B4D8               	btfsc	status,2,c
 13615  0028B4  D01D               	goto	l1962
 13616  0028B6  D03D               	goto	l1966
 13617  0028B8                     
 13618                           ;usb_device_cdc.c: 901: {
 13619                           ;usb_device_cdc.c: 902: *pCDCDst.bRam = *pCDCSrc.bRom;
 13620                           
 13621                           ; BSR set to: 1
 13622  0028B8  C2CC  FFF6         	movff	_pCDCSrc,tblptrl
 13623  0028BC  C2CD  FFF7         	movff	_pCDCSrc+1,tblptrh
 13624  0028C0  6AF8               	clrf	tblptru,c
 13625  0028C2  C2C9  FFD9         	movff	_pCDCDst,fsr2l
 13626  0028C6  C2CA  FFDA         	movff	_pCDCDst+1,fsr2h
 13627  0028CA  0E0E               	movlw	(high __ramtop+-1)
 13628  0028CC  64F7               	cpfsgt	tblptrh,c
 13629  0028CE  D003               	bra	u15867
 13630  0028D0  0008               	tblrd		*
 13631  0028D2  50F5               	movf	tablat,w,c
 13632  0028D4  D005               	bra	u15860
 13633  0028D6                     u15867:
 13634  0028D6  CFF6 FFE9          	movff	tblptrl,fsr0l
 13635  0028DA  CFF7 FFEA          	movff	tblptrh,fsr0h
 13636  0028DE  50EF               	movf	indf0,w,c
 13637  0028E0                     u15860:
 13638  0028E0  6EDF               	movwf	indf2,c
 13639                           
 13640                           ;usb_device_cdc.c: 903: pCDCDst.bRam++;
 13641  0028E2  0102               	movlb	2	; () banked
 13642  0028E4  4BC9               	infsnz	_pCDCDst& (0+255),f,b
 13643  0028E6  2BCA               	incf	(_pCDCDst+1)& (0+255),f,b
 13644                           
 13645                           ; BSR set to: 2
 13646                           ;usb_device_cdc.c: 904: pCDCSrc.bRom++;
 13647  0028E8  4BCC               	infsnz	_pCDCSrc& (0+255),f,b
 13648  0028EA  2BCD               	incf	(_pCDCSrc+1)& (0+255),f,b
 13649                           
 13650                           ; BSR set to: 2
 13651                           ;usb_device_cdc.c: 905: i--;
 13652  0028EC  0100               	movlb	0	; () banked
 13653  0028EE  0784               	decf	CDCTxService@i& (0+255),f,b
 13654  0028F0                     l1962:
 13655                           
 13656                           ; BSR set to: 0
 13657  0028F0  0100               	movlb	0	; () banked
 13658  0028F2  5184               	movf	CDCTxService@i& (0+255),w,b
 13659  0028F4  B4D8               	btfsc	status,2,c
 13660  0028F6  D021               	goto	u15890
 13661  0028F8  D7DF               	goto	l1963
 13662  0028FA                     
 13663                           ; BSR set to: 0
 13664                           ;usb_device_cdc.c: 911: {
 13665                           ;usb_device_cdc.c: 912: *pCDCDst.bRam = *pCDCSrc.bRam;
 13666                           
 13667                           ; BSR set to: 0
 13668  0028FA  C2CC  FFF6         	movff	_pCDCSrc,tblptrl
 13669  0028FE  C2CD  FFF7         	movff	_pCDCSrc+1,tblptrh
 13670  002902  6AF8               	clrf	tblptru,c
 13671  002904  C2C9  FFD9         	movff	_pCDCDst,fsr2l
 13672  002908  C2CA  FFDA         	movff	_pCDCDst+1,fsr2h
 13673  00290C  0E0E               	movlw	(high __ramtop+-1)
 13674  00290E  64F7               	cpfsgt	tblptrh,c
 13675  002910  D003               	bra	u15887
 13676  002912  0008               	tblrd		*
 13677  002914  50F5               	movf	tablat,w,c
 13678  002916  D005               	bra	u15880
 13679  002918                     u15887:
 13680  002918  CFF6 FFE9          	movff	tblptrl,fsr0l
 13681  00291C  CFF7 FFEA          	movff	tblptrh,fsr0h
 13682  002920  50EF               	movf	indf0,w,c
 13683  002922                     u15880:
 13684  002922  6EDF               	movwf	indf2,c
 13685                           
 13686                           ;usb_device_cdc.c: 913: pCDCDst.bRam++;
 13687  002924  0102               	movlb	2	; () banked
 13688  002926  4BC9               	infsnz	_pCDCDst& (0+255),f,b
 13689  002928  2BCA               	incf	(_pCDCDst+1)& (0+255),f,b
 13690                           
 13691                           ; BSR set to: 2
 13692                           ;usb_device_cdc.c: 914: pCDCSrc.bRam++;
 13693  00292A  4BCC               	infsnz	_pCDCSrc& (0+255),f,b
 13694  00292C  2BCD               	incf	(_pCDCSrc+1)& (0+255),f,b
 13695                           
 13696                           ; BSR set to: 2
 13697                           ;usb_device_cdc.c: 915: i--;
 13698  00292E  0100               	movlb	0	; () banked
 13699  002930  0784               	decf	CDCTxService@i& (0+255),f,b
 13700  002932                     l1966:
 13701                           
 13702                           ; BSR set to: 0
 13703  002932  0100               	movlb	0	; () banked
 13704  002934  5184               	movf	CDCTxService@i& (0+255),w,b
 13705  002936  A4D8               	btfss	status,2,c
 13706  002938  D7E0               	goto	l1967
 13707  00293A                     u15890:
 13708                           
 13709                           ; BSR set to: 0
 13710                           ;usb_device_cdc.c: 916: }
 13711                           ;usb_device_cdc.c: 917: }
 13712                           ;usb_device_cdc.c: 923: if(cdc_tx_len == 0)
 13713                           
 13714                           ; BSR set to: 0
 13715                           
 13716                           ; BSR set to: 0
 13717  00293A  51C7               	movf	_cdc_tx_len& (0+255),w,b
 13718  00293C  A4D8               	btfss	status,2,c
 13719  00293E  D008               	goto	l1971
 13720                           
 13721                           ; BSR set to: 0
 13722                           ;usb_device_cdc.c: 924: {
 13723                           ;usb_device_cdc.c: 925: if(byte_to_send == 64)
 13724  002940  0E40               	movlw	64
 13725  002942  1985               	xorwf	CDCTxService@byte_to_send& (0+255),w,b
 13726  002944  A4D8               	btfss	status,2,c
 13727  002946  D002               	goto	l1970
 13728                           
 13729                           ; BSR set to: 0
 13730                           ;usb_device_cdc.c: 926: cdc_trf_state = 2;
 13731  002948  0E02               	movlw	2
 13732  00294A  D001               	goto	L13
 13733  00294C                     l1970:
 13734                           
 13735                           ; BSR set to: 0
 13736                           ;usb_device_cdc.c: 927: else
 13737                           ;usb_device_cdc.c: 928: cdc_trf_state = 3;
 13738                           
 13739                           ; BSR set to: 0
 13740  00294C  0E03               	movlw	3
 13741  00294E                     L13:
 13742  00294E  6FC8               	movwf	_cdc_trf_state& (0+255),b
 13743  002950                     l1971:
 13744                           
 13745                           ; BSR set to: 0
 13746                           ;usb_device_cdc.c: 929: }
 13747                           ;usb_device_cdc.c: 930: CDCDataInHandle = USBTransferOnePacket(2,1,(uint8_t*)&cdc_data_t
      +                          x,byte_to_send);
 13748                           
 13749                           ; BSR set to: 0
 13750                           
 13751                           ; BSR set to: 0
 13752  002950  0E01               	movlw	1
 13753  002952  6F7D               	movwf	USBTransferOnePacket@dir& (0+255),b
 13754  002954  0EB6               	movlw	low _cdc_data_tx
 13755  002956  6F7E               	movwf	USBTransferOnePacket@data& (0+255),b
 13756  002958  0E07               	movlw	high _cdc_data_tx
 13757  00295A  6F7F               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 13758  00295C  C085  F080         	movff	CDCTxService@byte_to_send,USBTransferOnePacket@len
 13759  002960  0E02               	movlw	2
 13760  002962  EC04  F022         	call	_USBTransferOnePacket
 13761  002966  C07D  F1D1         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 13762  00296A  C07E  F1D2         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 13763  00296E  0012               	return	
 13764  002970                     __end_of_CDCTxService:
 13765                           	opt stack 0
 13766                           tosu	equ	0xFFF
 13767                           tosh	equ	0xFFE
 13768                           tosl	equ	0xFFD
 13769                           pclath	equ	0xFFA
 13770                           tblptru	equ	0xFF8
 13771                           tblptrh	equ	0xFF7
 13772                           tblptrl	equ	0xFF6
 13773                           tablat	equ	0xFF5
 13774                           prodh	equ	0xFF4
 13775                           prodl	equ	0xFF3
 13776                           intcon	equ	0xFF2
 13777                           intcon2	equ	0xFF1
 13778                           intcon3	equ	0xFF0
 13779                           indf0	equ	0xFEF
 13780                           postinc0	equ	0xFEE
 13781                           plusw0	equ	0xFEB
 13782                           fsr0h	equ	0xFEA
 13783                           fsr0l	equ	0xFE9
 13784                           wreg	equ	0xFE8
 13785                           indf1	equ	0xFE7
 13786                           postinc1	equ	0xFE6
 13787                           postdec1	equ	0xFE5
 13788                           fsr1h	equ	0xFE2
 13789                           fsr1l	equ	0xFE1
 13790                           indf2	equ	0xFDF
 13791                           postinc2	equ	0xFDE
 13792                           postdec2	equ	0xFDD
 13793                           plusw2	equ	0xFDB
 13794                           fsr2h	equ	0xFDA
 13795                           fsr2l	equ	0xFD9
 13796                           status	equ	0xFD8
 13797                           
 13798 ;; *************** function _Term_MainSm *****************
 13799 ;; Defined at:
 13800 ;;		line 707 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/term.c"
 13801 ;; Parameters:    Size  Location     Type
 13802 ;;		None
 13803 ;; Auto vars:     Size  Location     Type
 13804 ;;  FwkBuildStr     4   58[BANK1 ] unsigned char [4]
 13805 ;;  FwkMinorStr     4   54[BANK1 ] unsigned char [4]
 13806 ;;  FwkMajorStr     4   50[BANK1 ] unsigned char [4]
 13807 ;;  FwkBuildYear    4    0        unsigned char [4]
 13808 ;;  FwkBuildMont    4    0        unsigned char [4]
 13809 ;;  FwkBuildDayS    4    0        unsigned char [4]
 13810 ;; Return value:  Size  Location     Type
 13811 ;;                  1    wreg      void 
 13812 ;; Registers used:
 13813 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13814 ;; Tracked objects:
 13815 ;;		On entry : 0/0
 13816 ;;		On exit  : 0/0
 13817 ;;		Unchanged: 0/0
 13818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13819 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13820 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13822 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13823 ;;Total ram usage:       12 bytes
 13824 ;; Hardware stack levels used:    1
 13825 ;; Hardware stack levels required when called:   16
 13826 ;; This function calls:
 13827 ;;		_OsTmr_GetTimerStatus
 13828 ;;		_OsTmr_StartTimer
 13829 ;;		_Terminal
 13830 ;;		_memset
 13831 ;;		_putUSBUSART
 13832 ;;		_sprintf
 13833 ;;		_strcat
 13834 ;;		_strcpy
 13835 ;;		_strlen
 13836 ;;		_utoa
 13837 ;; This function is called by:
 13838 ;;		_Term_MainTask
 13839 ;; This function uses a non-reentrant model
 13840 ;;
 13841                           
 13842                           	psect	text55
 13843  0010B6                     __ptext55:
 13844                           	opt stack 0
 13845  0010B6                     _Term_MainSm:
 13846                           	opt stack 11
 13847                           
 13848                           ;term.c: 709: static TermMainSmStateType TermMainSmState = Term_StartTmr;
 13849                           ;term.c: 710: static SwTimerType TermDelay = { 1u, SwTimerExpired, 0, 0, DelayNotExpired
      +                          , };
 13850                           ;term.c: 711: static UINT8 Data[50];
 13851                           ;term.c: 712: UINT8 FwkMajorStr[4];
 13852                           ;term.c: 713: UINT8 FwkMinorStr[4];
 13853                           ;term.c: 714: UINT8 FwkBuildStr[4];
 13854                           ;term.c: 715: UINT8 FwkBuildDayStr[4];
 13855                           ;term.c: 716: UINT8 FwkBuildMonthStr[4];
 13856                           ;term.c: 717: UINT8 FwkBuildYearStr[4];
 13857                           ;term.c: 719: switch (TermMainSmState)
 13858                           
 13859                           ;incstack = 0
 13860  0010B6  D133               	goto	l2465
 13861  0010B8                     
 13862                           ;term.c: 723: OsTmr_StartTimer(&TermDelay,2000);
 13863  0010B8  0ECB               	movlw	low Term_MainSm@TermDelay
 13864  0010BA  0100               	movlb	0	; () banked
 13865  0010BC  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 13866  0010BE  0E03               	movlw	high Term_MainSm@TermDelay
 13867  0010C0  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 13868  0010C2  0ED0               	movlw	208
 13869  0010C4  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 13870  0010C6  0E07               	movlw	7
 13871  0010C8  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 13872  0010CA  0E00               	movlw	0
 13873  0010CC  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 13874  0010CE  0E00               	movlw	0
 13875  0010D0  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 13876  0010D2  ECC0  F02C         	call	_OsTmr_StartTimer	;wreg free
 13877                           
 13878                           ;term.c: 725: TermMainSmState = Term_InitDelay;
 13879  0010D6  0E01               	movlw	1
 13880  0010D8  0102               	movlb	2	; () banked
 13881  0010DA  6FE9               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13882                           
 13883                           ;term.c: 726: break;
 13884  0010DC  0012               	return	
 13885  0010DE                     
 13886                           ; BSR set to: 2
 13887                           ;term.c: 730: if (OsTmr_GetTimerStatus(&TermDelay) == SwTimerExpired)
 13888                           
 13889                           ; BSR set to: 2
 13890  0010DE  0ECB               	movlw	low Term_MainSm@TermDelay
 13891  0010E0  0100               	movlb	0	; () banked
 13892  0010E2  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 13893  0010E4  0E03               	movlw	high Term_MainSm@TermDelay
 13894  0010E6  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 13895  0010E8  ECA9  F028         	call	_OsTmr_GetTimerStatus	;wreg free
 13896  0010EC  06E8               	decf	wreg,f,c
 13897  0010EE  A4D8               	btfss	status,2,c
 13898  0010F0  0012               	return	
 13899                           
 13900                           ;term.c: 731: {
 13901                           ;term.c: 733: TermMainSmState = Term_InitState;
 13902  0010F2  0E02               	movlw	2
 13903  0010F4  0102               	movlb	2	; () banked
 13904  0010F6  6FE9               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13905                           
 13906                           ; BSR set to: 2
 13907                           ;term.c: 734: }
 13908                           ;term.c: 735: break;
 13909  0010F8  0012               	return	
 13910  0010FA                     
 13911                           ; BSR set to: 2
 13912                           ;term.c: 739: if((USBDeviceState < CONFIGURED_STATE)||(UCONbits.SUSPND == 1))
 13913                           
 13914                           ; BSR set to: 2
 13915  0010FA  0E1F               	movlw	31
 13916  0010FC  0100               	movlb	0	; () banked
 13917  0010FE  65CE               	cpfsgt	_USBDeviceState& (0+255),b
 13918  001100  0012               	return	
 13919                           
 13920                           ; BSR set to: 0
 13921  001102  B265               	btfsc	3941,1,c	;volatile
 13922  001104  0012               	return	
 13923                           
 13924                           ; BSR set to: 0
 13925                           ;term.c: 743: else
 13926                           ;term.c: 744: {
 13927                           ;term.c: 746: TermMainSmState = Term_WelcomeState;
 13928                           
 13929                           ; BSR set to: 0
 13930                           
 13931                           ; BSR set to: 0
 13932                           ;term.c: 740: {
 13933                           ;term.c: 742: }
 13934  001106  0E03               	movlw	3
 13935  001108  0102               	movlb	2	; () banked
 13936  00110A  6FE9               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13937                           
 13938                           ; BSR set to: 2
 13939                           ;term.c: 747: }
 13940                           ;term.c: 748: break;
 13941  00110C  0012               	return	
 13942  00110E                     
 13943                           ; BSR set to: 2
 13944                           ;term.c: 752: if((cdc_trf_state == 0))
 13945                           
 13946                           ; BSR set to: 2
 13947  00110E  0100               	movlb	0	; () banked
 13948  001110  51C8               	movf	_cdc_trf_state& (0+255),w,b
 13949  001112  A4D8               	btfss	status,2,c
 13950  001114  0012               	return	
 13951                           
 13952                           ; BSR set to: 0
 13953                           ;term.c: 753: {
 13954                           ;term.c: 755: putUSBUSART((void*)Welcome,(sizeof(Welcome) - 1));
 13955  001116  0E22               	movlw	low _Welcome
 13956  001118  6F83               	movwf	putUSBUSART@data& (0+255),b
 13957  00111A  0EFD               	movlw	high _Welcome
 13958  00111C  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 13959  00111E  0E88               	movlw	136
 13960  001120  6F85               	movwf	putUSBUSART@length& (0+255),b
 13961  001122  EC8A  F034         	call	_putUSBUSART	;wreg free
 13962                           
 13963                           ;term.c: 757: TermMainSmState = Term_InstDescState;
 13964  001126  0E04               	movlw	4
 13965  001128  0102               	movlb	2	; () banked
 13966  00112A  6FE9               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13967                           
 13968                           ; BSR set to: 2
 13969                           ;term.c: 758: }
 13970                           ;term.c: 759: break;
 13971  00112C  0012               	return	
 13972  00112E                     
 13973                           ; BSR set to: 2
 13974                           ;term.c: 763: if((cdc_trf_state == 0))
 13975                           
 13976                           ; BSR set to: 2
 13977  00112E  0100               	movlb	0	; () banked
 13978  001130  51C8               	movf	_cdc_trf_state& (0+255),w,b
 13979  001132  A4D8               	btfss	status,2,c
 13980  001134  0012               	return	
 13981                           
 13982                           ; BSR set to: 0
 13983                           ;term.c: 764: {
 13984                           ;term.c: 766: putUSBUSART((void*)MsgFormat,(sizeof(MsgFormat) - 1));
 13985  001136  0E32               	movlw	low _MsgFormat
 13986  001138  6F83               	movwf	putUSBUSART@data& (0+255),b
 13987  00113A  0EFC               	movlw	high _MsgFormat
 13988  00113C  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 13989  00113E  0EEF               	movlw	239
 13990  001140  6F85               	movwf	putUSBUSART@length& (0+255),b
 13991  001142  EC8A  F034         	call	_putUSBUSART	;wreg free
 13992                           
 13993                           ;term.c: 768: TermMainSmState = Term_FwkVerState;
 13994  001146  0E05               	movlw	5
 13995  001148  0102               	movlb	2	; () banked
 13996  00114A  6FE9               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13997                           
 13998                           ; BSR set to: 2
 13999                           ;term.c: 769: }
 14000                           ;term.c: 770: break;
 14001  00114C  0012               	return	
 14002  00114E                     
 14003                           ; BSR set to: 2
 14004                           ;term.c: 774: if((cdc_trf_state == 0))
 14005                           
 14006                           ; BSR set to: 2
 14007  00114E  0100               	movlb	0	; () banked
 14008  001150  51C8               	movf	_cdc_trf_state& (0+255),w,b
 14009  001152  A4D8               	btfss	status,2,c
 14010  001154  0012               	return	
 14011                           
 14012                           ; BSR set to: 0
 14013                           ;term.c: 775: {
 14014                           ;term.c: 777: memset(Data,0,50);
 14015  001156  0E61               	movlw	low Term_MainSm@Data
 14016  001158  6F7D               	movwf	memset@p1& (0+255),b
 14017  00115A  0E04               	movlw	high Term_MainSm@Data
 14018  00115C  6F7E               	movwf	(memset@p1+1)& (0+255),b
 14019  00115E  0E00               	movlw	0
 14020  001160  6F80               	movwf	(memset@c+1)& (0+255),b
 14021  001162  0E00               	movlw	0
 14022  001164  6F7F               	movwf	memset@c& (0+255),b
 14023  001166  0E00               	movlw	0
 14024  001168  6F82               	movwf	(memset@n+1)& (0+255),b
 14025  00116A  0E32               	movlw	50
 14026  00116C  6F81               	movwf	memset@n& (0+255),b
 14027  00116E  EC32  F033         	call	_memset	;wreg free
 14028                           
 14029                           ;term.c: 779: utoa(FwkMajorStr,1,10);
 14030  001172  0E32               	movlw	low Term_MainSm@FwkMajorStr
 14031  001174  0100               	movlb	0	; () banked
 14032  001176  6F8A               	movwf	utoa@buf& (0+255),b
 14033  001178  0E01               	movlw	high Term_MainSm@FwkMajorStr
 14034  00117A  6F8B               	movwf	(utoa@buf+1)& (0+255),b
 14035  00117C  0E00               	movlw	0
 14036  00117E  6F8D               	movwf	(utoa@val+1)& (0+255),b
 14037  001180  0E01               	movlw	1
 14038  001182  6F8C               	movwf	utoa@val& (0+255),b
 14039  001184  0E00               	movlw	0
 14040  001186  6F8F               	movwf	(utoa@base+1)& (0+255),b
 14041  001188  0E0A               	movlw	10
 14042  00118A  6F8E               	movwf	utoa@base& (0+255),b
 14043  00118C  ECC7  F023         	call	_utoa	;wreg free
 14044                           
 14045                           ;term.c: 780: utoa(FwkMinorStr,2,10);
 14046  001190  0E36               	movlw	low Term_MainSm@FwkMinorStr
 14047  001192  0100               	movlb	0	; () banked
 14048  001194  6F8A               	movwf	utoa@buf& (0+255),b
 14049  001196  0E01               	movlw	high Term_MainSm@FwkMinorStr
 14050  001198  6F8B               	movwf	(utoa@buf+1)& (0+255),b
 14051  00119A  0E00               	movlw	0
 14052  00119C  6F8D               	movwf	(utoa@val+1)& (0+255),b
 14053  00119E  0E02               	movlw	2
 14054  0011A0  6F8C               	movwf	utoa@val& (0+255),b
 14055  0011A2  0E00               	movlw	0
 14056  0011A4  6F8F               	movwf	(utoa@base+1)& (0+255),b
 14057  0011A6  0E0A               	movlw	10
 14058  0011A8  6F8E               	movwf	utoa@base& (0+255),b
 14059  0011AA  ECC7  F023         	call	_utoa	;wreg free
 14060                           
 14061                           ;term.c: 781: utoa(FwkBuildStr,0,10);
 14062  0011AE  0E3A               	movlw	low Term_MainSm@FwkBuildStr
 14063  0011B0  0100               	movlb	0	; () banked
 14064  0011B2  6F8A               	movwf	utoa@buf& (0+255),b
 14065  0011B4  0E01               	movlw	high Term_MainSm@FwkBuildStr
 14066  0011B6  6F8B               	movwf	(utoa@buf+1)& (0+255),b
 14067  0011B8  0E00               	movlw	0
 14068  0011BA  6F8D               	movwf	(utoa@val+1)& (0+255),b
 14069  0011BC  0E00               	movlw	0
 14070  0011BE  6F8C               	movwf	utoa@val& (0+255),b
 14071  0011C0  0E00               	movlw	0
 14072  0011C2  6F8F               	movwf	(utoa@base+1)& (0+255),b
 14073  0011C4  0E0A               	movlw	10
 14074  0011C6  6F8E               	movwf	utoa@base& (0+255),b
 14075  0011C8  ECC7  F023         	call	_utoa	;wreg free
 14076                           
 14077                           ;term.c: 782: strcpy(Data,"Framework Version: ");
 14078  0011CC  0E61               	movlw	low Term_MainSm@Data
 14079  0011CE  0100               	movlb	0	; () banked
 14080  0011D0  6F7D               	movwf	strcpy@to& (0+255),b
 14081  0011D2  0E04               	movlw	high Term_MainSm@Data
 14082  0011D4  6F7E               	movwf	(strcpy@to+1)& (0+255),b
 14083  0011D6  0ED2               	movlw	low STR_23
 14084  0011D8  6F7F               	movwf	strcpy@from& (0+255),b
 14085  0011DA  0EFE               	movlw	high STR_23
 14086  0011DC  6F80               	movwf	(strcpy@from+1)& (0+255),b
 14087  0011DE  EC01  F033         	call	_strcpy	;wreg free
 14088                           
 14089                           ;term.c: 783: strcat(Data,FwkMajorStr);
 14090  0011E2  0E61               	movlw	low Term_MainSm@Data
 14091  0011E4  0100               	movlb	0	; () banked
 14092  0011E6  6F7D               	movwf	strcat@to& (0+255),b
 14093  0011E8  0E04               	movlw	high Term_MainSm@Data
 14094  0011EA  6F7E               	movwf	(strcat@to+1)& (0+255),b
 14095  0011EC  0E32               	movlw	low Term_MainSm@FwkMajorStr
 14096  0011EE  6F7F               	movwf	strcat@from& (0+255),b
 14097  0011F0  0E01               	movlw	high Term_MainSm@FwkMajorStr
 14098  0011F2  6F80               	movwf	(strcat@from+1)& (0+255),b
 14099  0011F4  ECEF  F02C         	call	_strcat	;wreg free
 14100                           
 14101                           ;term.c: 784: strcat(Data,".");
 14102  0011F8  0E61               	movlw	low Term_MainSm@Data
 14103  0011FA  0100               	movlb	0	; () banked
 14104  0011FC  6F7D               	movwf	strcat@to& (0+255),b
 14105  0011FE  0E04               	movlw	high Term_MainSm@Data
 14106  001200  6F7E               	movwf	(strcat@to+1)& (0+255),b
 14107  001202  0EF5               	movlw	low STR_24
 14108  001204  6F7F               	movwf	strcat@from& (0+255),b
 14109  001206  0EFF               	movlw	high STR_24
 14110  001208  6F80               	movwf	(strcat@from+1)& (0+255),b
 14111  00120A  ECEF  F02C         	call	_strcat	;wreg free
 14112                           
 14113                           ;term.c: 785: strcat(Data,FwkMinorStr);
 14114  00120E  0E61               	movlw	low Term_MainSm@Data
 14115  001210  0100               	movlb	0	; () banked
 14116  001212  6F7D               	movwf	strcat@to& (0+255),b
 14117  001214  0E04               	movlw	high Term_MainSm@Data
 14118  001216  6F7E               	movwf	(strcat@to+1)& (0+255),b
 14119  001218  0E36               	movlw	low Term_MainSm@FwkMinorStr
 14120  00121A  6F7F               	movwf	strcat@from& (0+255),b
 14121  00121C  0E01               	movlw	high Term_MainSm@FwkMinorStr
 14122  00121E  6F80               	movwf	(strcat@from+1)& (0+255),b
 14123  001220  ECEF  F02C         	call	_strcat	;wreg free
 14124                           
 14125                           ;term.c: 786: strcat(Data,".");
 14126  001224  0E61               	movlw	low Term_MainSm@Data
 14127  001226  0100               	movlb	0	; () banked
 14128  001228  6F7D               	movwf	strcat@to& (0+255),b
 14129  00122A  0E04               	movlw	high Term_MainSm@Data
 14130  00122C  6F7E               	movwf	(strcat@to+1)& (0+255),b
 14131  00122E  0EF5               	movlw	low STR_24
 14132  001230  6F7F               	movwf	strcat@from& (0+255),b
 14133  001232  0EFF               	movlw	high STR_24
 14134  001234  6F80               	movwf	(strcat@from+1)& (0+255),b
 14135  001236  ECEF  F02C         	call	_strcat	;wreg free
 14136                           
 14137                           ;term.c: 787: strcat(Data,FwkBuildStr);
 14138  00123A  0E61               	movlw	low Term_MainSm@Data
 14139  00123C  0100               	movlb	0	; () banked
 14140  00123E  6F7D               	movwf	strcat@to& (0+255),b
 14141  001240  0E04               	movlw	high Term_MainSm@Data
 14142  001242  6F7E               	movwf	(strcat@to+1)& (0+255),b
 14143  001244  0E3A               	movlw	low Term_MainSm@FwkBuildStr
 14144  001246  6F7F               	movwf	strcat@from& (0+255),b
 14145  001248  0E01               	movlw	high Term_MainSm@FwkBuildStr
 14146  00124A  6F80               	movwf	(strcat@from+1)& (0+255),b
 14147  00124C  ECEF  F02C         	call	_strcat	;wreg free
 14148                           
 14149                           ;term.c: 788: strcat(Data,"\r\n");
 14150  001250  0E61               	movlw	low Term_MainSm@Data
 14151  001252  0100               	movlb	0	; () banked
 14152  001254  6F7D               	movwf	strcat@to& (0+255),b
 14153  001256  0E04               	movlw	high Term_MainSm@Data
 14154  001258  6F7E               	movwf	(strcat@to+1)& (0+255),b
 14155  00125A  0E86               	movlw	low (STR_21+39)
 14156  00125C  6F7F               	movwf	strcat@from& (0+255),b
 14157  00125E  0EFE               	movlw	high (STR_21+39)
 14158  001260  6F80               	movwf	(strcat@from+1)& (0+255),b
 14159  001262  ECEF  F02C         	call	_strcat	;wreg free
 14160                           
 14161                           ;term.c: 790: putUSBUSART((void*)Data,strlen(Data));
 14162  001266  0E61               	movlw	low Term_MainSm@Data
 14163  001268  0100               	movlb	0	; () banked
 14164  00126A  6F83               	movwf	putUSBUSART@data& (0+255),b
 14165  00126C  0E04               	movlw	high Term_MainSm@Data
 14166  00126E  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 14167  001270  0E61               	movlw	low Term_MainSm@Data
 14168  001272  6F7D               	movwf	strlen@s& (0+255),b
 14169  001274  0E04               	movlw	high Term_MainSm@Data
 14170  001276  6F7E               	movwf	(strlen@s+1)& (0+255),b
 14171  001278  ECAA  F031         	call	_strlen	;wreg free
 14172  00127C  0100               	movlb	0	; () banked
 14173  00127E  517D               	movf	?_strlen& (0+255),w,b
 14174  001280  6F85               	movwf	putUSBUSART@length& (0+255),b
 14175  001282  EC8A  F034         	call	_putUSBUSART	;wreg free
 14176                           
 14177                           ;term.c: 792: TermMainSmState = Term_FwkBuildDateState;
 14178  001286  0E06               	movlw	6
 14179  001288  0102               	movlb	2	; () banked
 14180  00128A  6FE9               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 14181                           
 14182                           ; BSR set to: 2
 14183                           ;term.c: 793: }
 14184                           ;term.c: 794: break;
 14185  00128C  0012               	return	
 14186  00128E                     
 14187                           ; BSR set to: 2
 14188                           ;term.c: 798: if((cdc_trf_state == 0))
 14189                           
 14190                           ; BSR set to: 2
 14191  00128E  0100               	movlb	0	; () banked
 14192  001290  51C8               	movf	_cdc_trf_state& (0+255),w,b
 14193  001292  A4D8               	btfss	status,2,c
 14194  001294  0012               	return	
 14195                           
 14196                           ; BSR set to: 0
 14197                           ;term.c: 799: {
 14198                           ;term.c: 801: memset(Data,0,50);
 14199  001296  0E61               	movlw	low Term_MainSm@Data
 14200  001298  6F7D               	movwf	memset@p1& (0+255),b
 14201  00129A  0E04               	movlw	high Term_MainSm@Data
 14202  00129C  6F7E               	movwf	(memset@p1+1)& (0+255),b
 14203  00129E  0E00               	movlw	0
 14204  0012A0  6F80               	movwf	(memset@c+1)& (0+255),b
 14205  0012A2  0E00               	movlw	0
 14206  0012A4  6F7F               	movwf	memset@c& (0+255),b
 14207  0012A6  0E00               	movlw	0
 14208  0012A8  6F82               	movwf	(memset@n+1)& (0+255),b
 14209  0012AA  0E32               	movlw	50
 14210  0012AC  6F81               	movwf	memset@n& (0+255),b
 14211  0012AE  EC32  F033         	call	_memset	;wreg free
 14212                           
 14213                           ;term.c: 803: sprintf(Data,"Build Date: %s\r\n","Apr  2 2022");
 14214  0012B2  0E61               	movlw	low Term_MainSm@Data
 14215  0012B4  0100               	movlb	0	; () banked
 14216  0012B6  6F7D               	movwf	sprintf@sp& (0+255),b
 14217  0012B8  0E04               	movlw	high Term_MainSm@Data
 14218  0012BA  6F7E               	movwf	(sprintf@sp+1)& (0+255),b
 14219  0012BC  0E0D               	movlw	low STR_27
 14220  0012BE  6F7F               	movwf	sprintf@f& (0+255),b
 14221  0012C0  0EFF               	movlw	high STR_27
 14222  0012C2  6F80               	movwf	(sprintf@f+1)& (0+255),b
 14223  0012C4  0EB6               	movlw	low STR_28
 14224  0012C6  6F81               	movwf	(?_sprintf+4)& (0+255),b
 14225  0012C8  0EFF               	movlw	high STR_28
 14226  0012CA  6F82               	movwf	(?_sprintf+5)& (0+255),b
 14227  0012CC  EC7D  F01E         	call	_sprintf	;wreg free
 14228                           
 14229                           ;term.c: 805: putUSBUSART((void*)Data,strlen(Data));
 14230  0012D0  0E61               	movlw	low Term_MainSm@Data
 14231  0012D2  0100               	movlb	0	; () banked
 14232  0012D4  6F83               	movwf	putUSBUSART@data& (0+255),b
 14233  0012D6  0E04               	movlw	high Term_MainSm@Data
 14234  0012D8  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 14235  0012DA  0E61               	movlw	low Term_MainSm@Data
 14236  0012DC  6F7D               	movwf	strlen@s& (0+255),b
 14237  0012DE  0E04               	movlw	high Term_MainSm@Data
 14238  0012E0  6F7E               	movwf	(strlen@s+1)& (0+255),b
 14239  0012E2  ECAA  F031         	call	_strlen	;wreg free
 14240  0012E6  0100               	movlb	0	; () banked
 14241  0012E8  517D               	movf	?_strlen& (0+255),w,b
 14242  0012EA  6F85               	movwf	putUSBUSART@length& (0+255),b
 14243  0012EC  EC8A  F034         	call	_putUSBUSART	;wreg free
 14244                           
 14245                           ;term.c: 807: TermMainSmState = Term_SysInitState;
 14246  0012F0  0E07               	movlw	7
 14247  0012F2  0102               	movlb	2	; () banked
 14248  0012F4  6FE9               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 14249                           
 14250                           ; BSR set to: 2
 14251                           ;term.c: 808: }
 14252                           ;term.c: 809: break;
 14253  0012F6  0012               	return	
 14254  0012F8                     
 14255                           ; BSR set to: 2
 14256                           ;term.c: 813: if((cdc_trf_state == 0))
 14257                           
 14258                           ; BSR set to: 2
 14259  0012F8  0100               	movlb	0	; () banked
 14260  0012FA  51C8               	movf	_cdc_trf_state& (0+255),w,b
 14261  0012FC  A4D8               	btfss	status,2,c
 14262  0012FE  0012               	return	
 14263                           
 14264                           ; BSR set to: 0
 14265                           ;term.c: 814: {
 14266                           ;term.c: 816: putUSBUSART((void*)MsgReady,(sizeof(MsgReady) - 1));
 14267  001300  0E32               	movlw	low _MsgReady
 14268  001302  6F83               	movwf	putUSBUSART@data& (0+255),b
 14269  001304  0EFE               	movlw	high _MsgReady
 14270  001306  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 14271  001308  0E16               	movlw	22
 14272  00130A  6F85               	movwf	putUSBUSART@length& (0+255),b
 14273  00130C  EC8A  F034         	call	_putUSBUSART	;wreg free
 14274                           
 14275                           ;term.c: 818: TermMainSmState = Term_FinalState;
 14276  001310  0E08               	movlw	8
 14277  001312  0102               	movlb	2	; () banked
 14278  001314  6FE9               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 14279                           
 14280                           ; BSR set to: 2
 14281                           ;term.c: 819: }
 14282                           ;term.c: 820: break;
 14283  001316  0012               	return	
 14284  001318                     
 14285                           ; BSR set to: 2
 14286                           ;term.c: 824: Terminal();
 14287                           
 14288                           ; BSR set to: 2
 14289  001318  EC68  F000         	call	_Terminal	;wreg free
 14290                           
 14291                           ;term.c: 829: }
 14292                           
 14293                           ;term.c: 828: break;
 14294                           
 14295                           ;term.c: 827: default:
 14296                           
 14297                           ;term.c: 825: break;
 14298  00131C  0012               	return	
 14299  00131E                     l2465:
 14300  00131E  0102               	movlb	2	; () banked
 14301  001320  51E9               	movf	Term_MainSm@TermMainSmState& (0+255),w,b
 14302                           
 14303                           ; Switch size 1, requested type "space"
 14304                           ; Number of cases is 9, Range of values is 0 to 8
 14305                           ; switch strategies available:
 14306                           ; Name         Instructions Cycles
 14307                           ; simple_byte           28    15 (average)
 14308                           ;	Chosen strategy is simple_byte
 14309  001322  0A00               	xorlw	0	; case 0
 14310  001324  B4D8               	btfsc	status,2,c
 14311  001326  D6C8               	goto	l2466
 14312  001328  0A01               	xorlw	1	; case 1
 14313  00132A  B4D8               	btfsc	status,2,c
 14314  00132C  D6D8               	goto	l2468
 14315  00132E  0A03               	xorlw	3	; case 2
 14316  001330  B4D8               	btfsc	status,2,c
 14317  001332  D6E3               	goto	l2470
 14318  001334  0A01               	xorlw	1	; case 3
 14319  001336  B4D8               	btfsc	status,2,c
 14320  001338  D6EA               	goto	l2475
 14321  00133A  0A07               	xorlw	7	; case 4
 14322  00133C  B4D8               	btfsc	status,2,c
 14323  00133E  D6F7               	goto	l2477
 14324  001340  0A01               	xorlw	1	; case 5
 14325  001342  B4D8               	btfsc	status,2,c
 14326  001344  D704               	goto	l2479
 14327  001346  0A03               	xorlw	3	; case 6
 14328  001348  B4D8               	btfsc	status,2,c
 14329  00134A  D7A1               	goto	l2481
 14330  00134C  0A01               	xorlw	1	; case 7
 14331  00134E  B4D8               	btfsc	status,2,c
 14332  001350  D7D3               	goto	l2483
 14333  001352  0A0F               	xorlw	15	; case 8
 14334  001354  A4D8               	btfss	status,2,c
 14335  001356  0012               	return	
 14336  001358  D7DF               	goto	l2485
 14337  00135A                     __end_of_Term_MainSm:
 14338                           	opt stack 0
 14339                           tosu	equ	0xFFF
 14340                           tosh	equ	0xFFE
 14341                           tosl	equ	0xFFD
 14342                           pclath	equ	0xFFA
 14343                           tblptru	equ	0xFF8
 14344                           tblptrh	equ	0xFF7
 14345                           tblptrl	equ	0xFF6
 14346                           tablat	equ	0xFF5
 14347                           prodh	equ	0xFF4
 14348                           prodl	equ	0xFF3
 14349                           intcon	equ	0xFF2
 14350                           intcon2	equ	0xFF1
 14351                           intcon3	equ	0xFF0
 14352                           indf0	equ	0xFEF
 14353                           postinc0	equ	0xFEE
 14354                           plusw0	equ	0xFEB
 14355                           fsr0h	equ	0xFEA
 14356                           fsr0l	equ	0xFE9
 14357                           wreg	equ	0xFE8
 14358                           indf1	equ	0xFE7
 14359                           postinc1	equ	0xFE6
 14360                           postdec1	equ	0xFE5
 14361                           fsr1h	equ	0xFE2
 14362                           fsr1l	equ	0xFE1
 14363                           indf2	equ	0xFDF
 14364                           postinc2	equ	0xFDE
 14365                           postdec2	equ	0xFDD
 14366                           plusw2	equ	0xFDB
 14367                           fsr2h	equ	0xFDA
 14368                           fsr2l	equ	0xFD9
 14369                           status	equ	0xFD8
 14370                           
 14371 ;; *************** function _strlen *****************
 14372 ;; Defined at:
 14373 ;;		line 4 in file "/opt/microchip/xc8/v1.45/sources/common/strlen.c"
 14374 ;; Parameters:    Size  Location     Type
 14375 ;;  s               2   29[BANK0 ] PTR const unsigned char 
 14376 ;;		 -> Term_MainSm@Data(50), 
 14377 ;; Auto vars:     Size  Location     Type
 14378 ;;  cp              2   33[BANK0 ] PTR const unsigned char 
 14379 ;;		 -> Term_MainSm@Data(50), 
 14380 ;; Return value:  Size  Location     Type
 14381 ;;                  2   29[BANK0 ] unsigned int 
 14382 ;; Registers used:
 14383 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14384 ;; Tracked objects:
 14385 ;;		On entry : 0/0
 14386 ;;		On exit  : 0/0
 14387 ;;		Unchanged: 0/0
 14388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14389 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14390 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14391 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14392 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14393 ;;Total ram usage:        6 bytes
 14394 ;; Hardware stack levels used:    1
 14395 ;; Hardware stack levels required when called:   11
 14396 ;; This function calls:
 14397 ;;		Nothing
 14398 ;; This function is called by:
 14399 ;;		_Term_MainSm
 14400 ;; This function uses a non-reentrant model
 14401 ;;
 14402                           
 14403                           	psect	text56
 14404  006354                     __ptext56:
 14405                           	opt stack 0
 14406  006354                     _strlen:
 14407                           	opt stack 15
 14408                           
 14409                           ;incstack = 0
 14410  006354  C07D  F081         	movff	strlen@s,strlen@cp
 14411  006358  C07E  F082         	movff	strlen@s+1,strlen@cp+1
 14412  00635C  D003               	goto	l3555
 14413  00635E  0100               	movlb	0	; () banked
 14414  006360  4B81               	infsnz	strlen@cp& (0+255),f,b
 14415  006362  2B82               	incf	(strlen@cp+1)& (0+255),f,b
 14416  006364                     l3555:
 14417                           
 14418                           ; BSR set to: 0
 14419  006364  C081  FFD9         	movff	strlen@cp,fsr2l
 14420  006368  C082  FFDA         	movff	strlen@cp+1,fsr2h
 14421  00636C  50DF               	movf	indf2,w,c
 14422  00636E  A4D8               	btfss	status,2,c
 14423  006370  D7F6               	goto	l3556
 14424  006372  C07D  F07F         	movff	strlen@s,??_strlen
 14425  006376  C07E  F080         	movff	strlen@s+1,??_strlen+1
 14426  00637A  0100               	movlb	0	; () banked
 14427  00637C  1F7F               	comf	??_strlen& (0+255),f,b
 14428  00637E  1F80               	comf	(??_strlen+1)& (0+255),f,b
 14429  006380  4B7F               	infsnz	??_strlen& (0+255),f,b
 14430  006382  2B80               	incf	(??_strlen+1)& (0+255),f,b
 14431  006384  5181               	movf	strlen@cp& (0+255),w,b
 14432  006386  257F               	addwf	??_strlen& (0+255),w,b
 14433  006388  6F7D               	movwf	?_strlen& (0+255),b
 14434  00638A  5182               	movf	(strlen@cp+1)& (0+255),w,b
 14435  00638C  2180               	addwfc	(??_strlen+1)& (0+255),w,b
 14436  00638E  6F7E               	movwf	(?_strlen+1)& (0+255),b
 14437  006390  0012               	return	
 14438  006392                     __end_of_strlen:
 14439                           	opt stack 0
 14440                           tosu	equ	0xFFF
 14441                           tosh	equ	0xFFE
 14442                           tosl	equ	0xFFD
 14443                           pclath	equ	0xFFA
 14444                           tblptru	equ	0xFF8
 14445                           tblptrh	equ	0xFF7
 14446                           tblptrl	equ	0xFF6
 14447                           tablat	equ	0xFF5
 14448                           prodh	equ	0xFF4
 14449                           prodl	equ	0xFF3
 14450                           intcon	equ	0xFF2
 14451                           intcon2	equ	0xFF1
 14452                           intcon3	equ	0xFF0
 14453                           indf0	equ	0xFEF
 14454                           postinc0	equ	0xFEE
 14455                           plusw0	equ	0xFEB
 14456                           fsr0h	equ	0xFEA
 14457                           fsr0l	equ	0xFE9
 14458                           wreg	equ	0xFE8
 14459                           indf1	equ	0xFE7
 14460                           postinc1	equ	0xFE6
 14461                           postdec1	equ	0xFE5
 14462                           fsr1h	equ	0xFE2
 14463                           fsr1l	equ	0xFE1
 14464                           indf2	equ	0xFDF
 14465                           postinc2	equ	0xFDE
 14466                           postdec2	equ	0xFDD
 14467                           plusw2	equ	0xFDB
 14468                           fsr2h	equ	0xFDA
 14469                           fsr2l	equ	0xFD9
 14470                           status	equ	0xFD8
 14471                           
 14472 ;; *************** function _strcat *****************
 14473 ;; Defined at:
 14474 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/strcat.c"
 14475 ;; Parameters:    Size  Location     Type
 14476 ;;  to              2   29[BANK0 ] PTR unsigned char 
 14477 ;;		 -> Term_MainSm@Data(50), 
 14478 ;;  from            2   31[BANK0 ] PTR const unsigned char 
 14479 ;;		 -> STR_26(3), STR_25(2), STR_24(2), Term_MainSm@FwkBuildStr(4), 
 14480 ;;		 -> Term_MainSm@FwkMinorStr(4), Term_MainSm@FwkMajorStr(4), 
 14481 ;; Auto vars:     Size  Location     Type
 14482 ;;  cp              2   33[BANK0 ] PTR unsigned char 
 14483 ;;		 -> Term_MainSm@Data(50), 
 14484 ;; Return value:  Size  Location     Type
 14485 ;;                  2   29[BANK0 ] PTR unsigned char 
 14486 ;; Registers used:
 14487 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 14488 ;; Tracked objects:
 14489 ;;		On entry : 0/0
 14490 ;;		On exit  : 0/0
 14491 ;;		Unchanged: 0/0
 14492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14493 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14494 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14496 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14497 ;;Total ram usage:        6 bytes
 14498 ;; Hardware stack levels used:    1
 14499 ;; Hardware stack levels required when called:   11
 14500 ;; This function calls:
 14501 ;;		Nothing
 14502 ;; This function is called by:
 14503 ;;		_Term_MainSm
 14504 ;; This function uses a non-reentrant model
 14505 ;;
 14506                           
 14507                           	psect	text57
 14508  0059DE                     __ptext57:
 14509                           	opt stack 0
 14510  0059DE                     _strcat:
 14511                           	opt stack 15
 14512                           
 14513                           ; BSR set to: 0
 14514                           ;incstack = 0
 14515  0059DE  C07D  F081         	movff	strcat@to,strcat@cp
 14516  0059E2  C07E  F082         	movff	strcat@to+1,strcat@cp+1
 14517  0059E6  D003               	goto	l3540
 14518  0059E8  0100               	movlb	0	; () banked
 14519  0059EA  4B81               	infsnz	strcat@cp& (0+255),f,b
 14520  0059EC  2B82               	incf	(strcat@cp+1)& (0+255),f,b
 14521  0059EE                     l3540:
 14522                           
 14523                           ; BSR set to: 0
 14524  0059EE  C081  FFD9         	movff	strcat@cp,fsr2l
 14525  0059F2  C082  FFDA         	movff	strcat@cp+1,fsr2h
 14526  0059F6  50DF               	movf	indf2,w,c
 14527  0059F8  B4D8               	btfsc	status,2,c
 14528  0059FA  D006               	goto	l3543
 14529  0059FC  D7F5               	goto	l3541
 14530  0059FE  0100               	movlb	0	; () banked
 14531  005A00  4B81               	infsnz	strcat@cp& (0+255),f,b
 14532  005A02  2B82               	incf	(strcat@cp+1)& (0+255),f,b
 14533  005A04  4B7F               	infsnz	strcat@from& (0+255),f,b
 14534  005A06  2B80               	incf	(strcat@from+1)& (0+255),f,b
 14535  005A08                     l3543:
 14536                           
 14537                           ; BSR set to: 0
 14538  005A08  C07F  FFF6         	movff	strcat@from,tblptrl
 14539  005A0C  C080  FFF7         	movff	strcat@from+1,tblptrh
 14540  005A10  6AF8               	clrf	tblptru,c
 14541  005A12  C081  FFD9         	movff	strcat@cp,fsr2l
 14542  005A16  C082  FFDA         	movff	strcat@cp+1,fsr2h
 14543  005A1A  0E0E               	movlw	(high __ramtop+-1)
 14544  005A1C  64F7               	cpfsgt	tblptrh,c
 14545  005A1E  D003               	bra	u14437
 14546  005A20  0008               	tblrd		*
 14547  005A22  50F5               	movf	tablat,w,c
 14548  005A24  D005               	bra	u14430
 14549  005A26                     u14437:
 14550  005A26  CFF6 FFE9          	movff	tblptrl,fsr0l
 14551  005A2A  CFF7 FFEA          	movff	tblptrh,fsr0h
 14552  005A2E  50EF               	movf	indf0,w,c
 14553  005A30                     u14430:
 14554  005A30  6EDF               	movwf	indf2,c
 14555  005A32  50DF               	movf	indf2,w,c
 14556  005A34  B4D8               	btfsc	status,2,c
 14557  005A36  0012               	return	
 14558  005A38  D7E2               	goto	l3544
 14559  005A3A                     __end_of_strcat:
 14560                           	opt stack 0
 14561                           tosu	equ	0xFFF
 14562                           tosh	equ	0xFFE
 14563                           tosl	equ	0xFFD
 14564                           pclath	equ	0xFFA
 14565                           tblptru	equ	0xFF8
 14566                           tblptrh	equ	0xFF7
 14567                           tblptrl	equ	0xFF6
 14568                           tablat	equ	0xFF5
 14569                           prodh	equ	0xFF4
 14570                           prodl	equ	0xFF3
 14571                           intcon	equ	0xFF2
 14572                           intcon2	equ	0xFF1
 14573                           intcon3	equ	0xFF0
 14574                           indf0	equ	0xFEF
 14575                           postinc0	equ	0xFEE
 14576                           plusw0	equ	0xFEB
 14577                           fsr0h	equ	0xFEA
 14578                           fsr0l	equ	0xFE9
 14579                           wreg	equ	0xFE8
 14580                           indf1	equ	0xFE7
 14581                           postinc1	equ	0xFE6
 14582                           postdec1	equ	0xFE5
 14583                           fsr1h	equ	0xFE2
 14584                           fsr1l	equ	0xFE1
 14585                           indf2	equ	0xFDF
 14586                           postinc2	equ	0xFDE
 14587                           postdec2	equ	0xFDD
 14588                           plusw2	equ	0xFDB
 14589                           fsr2h	equ	0xFDA
 14590                           fsr2l	equ	0xFD9
 14591                           status	equ	0xFD8
 14592                           
 14593 ;; *************** function _sprintf *****************
 14594 ;; Defined at:
 14595 ;;		line 492 in file "/opt/microchip/xc8/v1.45/sources/common/doprnt.c"
 14596 ;; Parameters:    Size  Location     Type
 14597 ;;  sp              2   29[BANK0 ] PTR unsigned char 
 14598 ;;		 -> Term_MainSm@Data(50), 
 14599 ;;  f               2   31[BANK0 ] PTR const unsigned char 
 14600 ;;		 -> STR_27(17), 
 14601 ;; Auto vars:     Size  Location     Type
 14602 ;;  tmpval          4    0        struct .
 14603 ;;  cp              2   39[BANK0 ] PTR const unsigned char 
 14604 ;;		 -> STR_32(7), STR_28(12), 
 14605 ;;  ap              2   36[BANK0 ] PTR void [1]
 14606 ;;		 -> ?_sprintf(2), 
 14607 ;;  len             2    0        unsigned int 
 14608 ;;  val             2    0        unsigned int 
 14609 ;;  c               1   38[BANK0 ] char 
 14610 ;;  flag            1   35[BANK0 ] unsigned char 
 14611 ;;  prec            1    0        char 
 14612 ;; Return value:  Size  Location     Type
 14613 ;;                  2   29[BANK0 ] int 
 14614 ;; Registers used:
 14615 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 14616 ;; Tracked objects:
 14617 ;;		On entry : 0/0
 14618 ;;		On exit  : 0/0
 14619 ;;		Unchanged: 0/0
 14620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14621 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14622 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14624 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14625 ;;Total ram usage:       12 bytes
 14626 ;; Hardware stack levels used:    1
 14627 ;; Hardware stack levels required when called:   11
 14628 ;; This function calls:
 14629 ;;		Nothing
 14630 ;; This function is called by:
 14631 ;;		_Term_MainSm
 14632 ;; This function uses a non-reentrant model
 14633 ;;
 14634                           
 14635                           	psect	text58
 14636  003CFA                     __ptext58:
 14637                           	opt stack 0
 14638  003CFA                     _sprintf:
 14639                           	opt stack 15
 14640                           
 14641                           ;doprnt.c: 494: va_list ap;
 14642                           ;doprnt.c: 499: signed char c;
 14643                           ;doprnt.c: 506: signed char prec;
 14644                           ;doprnt.c: 508: unsigned char flag;
 14645                           ;doprnt.c: 523: union {
 14646                           ;doprnt.c: 524: unsigned long vd;
 14647                           ;doprnt.c: 525: double integ;
 14648                           ;doprnt.c: 526: } tmpval;
 14649                           ;doprnt.c: 528: unsigned int val;
 14650                           ;doprnt.c: 529: unsigned len;
 14651                           ;doprnt.c: 530: const char * cp;
 14652                           ;doprnt.c: 533: *ap = __va_start();
 14653                           
 14654                           ;incstack = 0
 14655  003CFA  0E81               	movlw	low (?_sprintf+4)
 14656  003CFC  0100               	movlb	0	; () banked
 14657  003CFE  6F84               	movwf	sprintf@ap& (0+255),b
 14658  003D00  0E00               	movlw	high (?_sprintf+4)
 14659  003D02  6F85               	movwf	(sprintf@ap+1)& (0+255),b
 14660                           
 14661                           ;doprnt.c: 536: while(c = *f++) {
 14662  003D04  D04E               	goto	l2944
 14663  003D06                     
 14664                           ; BSR set to: 0
 14665                           ;doprnt.c: 538: if(c != '%')
 14666                           
 14667                           ; BSR set to: 0
 14668  003D06  0E25               	movlw	37
 14669  003D08  1986               	xorwf	sprintf@c& (0+255),w,b
 14670  003D0A  B4D8               	btfsc	status,2,c
 14671  003D0C  D009               	goto	l2934
 14672                           
 14673                           ; BSR set to: 0
 14674                           ;doprnt.c: 540: {
 14675                           ;doprnt.c: 541: ((*sp++ = (c)));
 14676  003D0E  C07D  FFD9         	movff	sprintf@sp,fsr2l
 14677  003D12  C07E  FFDA         	movff	sprintf@sp+1,fsr2h
 14678  003D16  C086  FFDF         	movff	sprintf@c,indf2
 14679                           
 14680                           ; BSR set to: 0
 14681  003D1A  4B7D               	infsnz	sprintf@sp& (0+255),f,b
 14682  003D1C  2B7E               	incf	(sprintf@sp+1)& (0+255),f,b
 14683                           
 14684                           ;doprnt.c: 542: continue;
 14685  003D1E  D041               	goto	l2944
 14686  003D20                     l2934:
 14687                           
 14688                           ; BSR set to: 0
 14689                           ;doprnt.c: 543: }
 14690                           ;doprnt.c: 548: flag = 0;
 14691                           
 14692                           ; BSR set to: 0
 14693  003D20  0E00               	movlw	0
 14694  003D22  6F83               	movwf	sprintf@flag& (0+255),b
 14695                           
 14696                           ;doprnt.c: 635: switch(c = *f++) {
 14697  003D24  D02E               	goto	l2935
 14698  003D26                     
 14699                           ; BSR set to: 0
 14700                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
 14701                           
 14702                           ; BSR set to: 0
 14703  003D26  C084  FFD9         	movff	sprintf@ap,fsr2l
 14704  003D2A  C085  FFDA         	movff	sprintf@ap+1,fsr2h
 14705  003D2E  CFDE F087          	movff	postinc2,sprintf@cp
 14706  003D32  CFDD F088          	movff	postdec2,sprintf@cp+1
 14707                           
 14708                           ; BSR set to: 0
 14709  003D36  0E02               	movlw	2
 14710  003D38  2784               	addwf	sprintf@ap& (0+255),f,b
 14711  003D3A  0E00               	movlw	0
 14712  003D3C  2385               	addwfc	(sprintf@ap+1)& (0+255),f,b
 14713                           
 14714                           ; BSR set to: 0
 14715                           ;doprnt.c: 740: if(!cp)
 14716  003D3E  5187               	movf	sprintf@cp& (0+255),w,b
 14717  003D40  1188               	iorwf	(sprintf@cp+1)& (0+255),w,b
 14718  003D42  A4D8               	btfss	status,2,c
 14719  003D44  D014               	goto	l2940
 14720                           
 14721                           ; BSR set to: 0
 14722                           ;doprnt.c: 741: cp = "(null)";
 14723  003D46  0ED8               	movlw	low STR_32
 14724  003D48  6F87               	movwf	sprintf@cp& (0+255),b
 14725  003D4A  0EFF               	movlw	high STR_32
 14726  003D4C  6F88               	movwf	(sprintf@cp+1)& (0+255),b
 14727                           
 14728                           ; BSR set to: 0
 14729                           ;doprnt.c: 777: while(*cp)
 14730  003D4E  D00F               	goto	l2940
 14731  003D50                     
 14732                           ; BSR set to: 0
 14733                           ;doprnt.c: 778: ((*sp++ = (*cp++)));
 14734                           
 14735                           ; BSR set to: 0
 14736  003D50  C087  FFF6         	movff	sprintf@cp,tblptrl
 14737  003D54  C088  FFF7         	movff	sprintf@cp+1,tblptrh
 14738  003D58                     	if	0	;tblptru may be non-zero
 14739  003D58                     	endif
 14740  003D58                     	if	0	;tblptru may be non-zero
 14741  003D58                     	endif
 14742  003D58  C07D  FFD9         	movff	sprintf@sp,fsr2l
 14743  003D5C  C07E  FFDA         	movff	sprintf@sp+1,fsr2h
 14744  003D60  0008               	tblrd		*
 14745  003D62  CFF5 FFDF          	movff	tablat,indf2
 14746                           
 14747                           ; BSR set to: 0
 14748  003D66  4B87               	infsnz	sprintf@cp& (0+255),f,b
 14749  003D68  2B88               	incf	(sprintf@cp+1)& (0+255),f,b
 14750                           
 14751                           ; BSR set to: 0
 14752  003D6A  4B7D               	infsnz	sprintf@sp& (0+255),f,b
 14753  003D6C  2B7E               	incf	(sprintf@sp+1)& (0+255),f,b
 14754  003D6E                     l2940:
 14755                           
 14756                           ; BSR set to: 0
 14757                           
 14758                           ; BSR set to: 0
 14759  003D6E  C087  FFF6         	movff	sprintf@cp,tblptrl
 14760  003D72  C088  FFF7         	movff	sprintf@cp+1,tblptrh
 14761  003D76                     	if	0	;tblptru may be non-zero
 14762  003D76                     	endif
 14763  003D76                     	if	0	;tblptru may be non-zero
 14764  003D76                     	endif
 14765  003D76  0008               	tblrd		*
 14766  003D78  50F5               	movf	tablat,w,c
 14767  003D7A  0900               	iorlw	0
 14768  003D7C  B4D8               	btfsc	status,2,c
 14769  003D7E  D011               	goto	l2944
 14770  003D80  D7E7               	goto	l2941
 14771  003D82                     l2935:
 14772                           
 14773                           ; BSR set to: 0
 14774                           
 14775                           ; BSR set to: 0
 14776  003D82  C07F  FFF6         	movff	sprintf@f,tblptrl
 14777  003D86  C080  FFF7         	movff	sprintf@f+1,tblptrh
 14778  003D8A  4B7F               	infsnz	sprintf@f& (0+255),f,b
 14779  003D8C  2B80               	incf	(sprintf@f+1)& (0+255),f,b
 14780  003D8E                     	if	0	;tblptru may be non-zero
 14781  003D8E                     	endif
 14782  003D8E                     	if	0	;tblptru may be non-zero
 14783  003D8E                     	endif
 14784  003D8E  0008               	tblrd		*
 14785  003D90  CFF5 F086          	movff	tablat,sprintf@c
 14786  003D94  5186               	movf	sprintf@c& (0+255),w,b
 14787                           
 14788                           ; Switch size 1, requested type "space"
 14789                           ; Number of cases is 2, Range of values is 0 to 115
 14790                           ; switch strategies available:
 14791                           ; Name         Instructions Cycles
 14792                           ; simple_byte            7     4 (average)
 14793                           ;	Chosen strategy is simple_byte
 14794  003D96  0A00               	xorlw	0	; case 0
 14795  003D98  B4D8               	btfsc	status,2,c
 14796  003D9A  D00F               	goto	u14490
 14797  003D9C  0A73               	xorlw	115	; case 115
 14798  003D9E  B4D8               	btfsc	status,2,c
 14799  003DA0  D7C2               	goto	l2938
 14800  003DA2                     l2944:
 14801                           
 14802                           ; BSR set to: 0
 14803                           
 14804                           ; BSR set to: 0
 14805                           
 14806                           ;doprnt.c: 1422: {
 14807                           
 14808                           ; BSR set to: 0
 14809  003DA2  C07F  FFF6         	movff	sprintf@f,tblptrl
 14810  003DA6  C080  FFF7         	movff	sprintf@f+1,tblptrh
 14811  003DAA  4B7F               	infsnz	sprintf@f& (0+255),f,b
 14812  003DAC  2B80               	incf	(sprintf@f+1)& (0+255),f,b
 14813  003DAE                     	if	0	;tblptru may be non-zero
 14814  003DAE                     	endif
 14815  003DAE                     	if	0	;tblptru may be non-zero
 14816  003DAE                     	endif
 14817  003DAE  0008               	tblrd		*
 14818  003DB0  CFF5 F086          	movff	tablat,sprintf@c
 14819  003DB4  5186               	movf	sprintf@c& (0+255),w,b
 14820  003DB6  A4D8               	btfss	status,2,c
 14821  003DB8  D7A6               	goto	l2933
 14822  003DBA                     u14490:
 14823                           
 14824                           ; BSR set to: 0
 14825                           ;doprnt.c: 1538: *sp = 0;
 14826                           
 14827                           ; BSR set to: 0
 14828                           
 14829                           ;doprnt.c: 1469: }
 14830                           ;doprnt.c: 1533: }
 14831                           ;doprnt.c: 1535: alldone:
 14832                           
 14833                           ; BSR set to: 0
 14834  003DBA  C07D  FFD9         	movff	sprintf@sp,fsr2l
 14835  003DBE  C07E  FFDA         	movff	sprintf@sp+1,fsr2h
 14836  003DC2  0E00               	movlw	0
 14837  003DC4  6EDF               	movwf	indf2,c
 14838  003DC6  0012               	return	
 14839  003DC8                     __end_of_sprintf:
 14840                           	opt stack 0
 14841                           tosu	equ	0xFFF
 14842                           tosh	equ	0xFFE
 14843                           tosl	equ	0xFFD
 14844                           pclath	equ	0xFFA
 14845                           tblptru	equ	0xFF8
 14846                           tblptrh	equ	0xFF7
 14847                           tblptrl	equ	0xFF6
 14848                           tablat	equ	0xFF5
 14849                           prodh	equ	0xFF4
 14850                           prodl	equ	0xFF3
 14851                           intcon	equ	0xFF2
 14852                           intcon2	equ	0xFF1
 14853                           intcon3	equ	0xFF0
 14854                           indf0	equ	0xFEF
 14855                           postinc0	equ	0xFEE
 14856                           plusw0	equ	0xFEB
 14857                           fsr0h	equ	0xFEA
 14858                           fsr0l	equ	0xFE9
 14859                           wreg	equ	0xFE8
 14860                           indf1	equ	0xFE7
 14861                           postinc1	equ	0xFE6
 14862                           postdec1	equ	0xFE5
 14863                           fsr1h	equ	0xFE2
 14864                           fsr1l	equ	0xFE1
 14865                           indf2	equ	0xFDF
 14866                           postinc2	equ	0xFDE
 14867                           postdec2	equ	0xFDD
 14868                           plusw2	equ	0xFDB
 14869                           fsr2h	equ	0xFDA
 14870                           fsr2l	equ	0xFD9
 14871                           status	equ	0xFD8
 14872                           
 14873 ;; *************** function _memset *****************
 14874 ;; Defined at:
 14875 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/memset.c"
 14876 ;; Parameters:    Size  Location     Type
 14877 ;;  p1              2   29[BANK0 ] PTR void 
 14878 ;;		 -> Term_MainSm@Data(50), USBAlternateInterface(2), BDT(48), UEP1(1), 
 14879 ;;  c               2   31[BANK0 ] int 
 14880 ;;  n               2   33[BANK0 ] unsigned int 
 14881 ;; Auto vars:     Size  Location     Type
 14882 ;;  p               2   35[BANK0 ] PTR unsigned char 
 14883 ;;		 -> Term_MainSm@Data(50), USBAlternateInterface(2), BDT(48), UEP1(1), 
 14884 ;; Return value:  Size  Location     Type
 14885 ;;                  2   29[BANK0 ] PTR void 
 14886 ;; Registers used:
 14887 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14888 ;; Tracked objects:
 14889 ;;		On entry : 0/0
 14890 ;;		On exit  : 0/0
 14891 ;;		Unchanged: 0/0
 14892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14893 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14894 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14895 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14896 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14897 ;;Total ram usage:        8 bytes
 14898 ;; Hardware stack levels used:    1
 14899 ;; Hardware stack levels required when called:   11
 14900 ;; This function calls:
 14901 ;;		Nothing
 14902 ;; This function is called by:
 14903 ;;		_USBDeviceInit
 14904 ;;		_USBStdSetCfgHandler
 14905 ;;		_Term_MainSm
 14906 ;; This function uses a non-reentrant model
 14907 ;;
 14908                           
 14909                           	psect	text59
 14910  006664                     __ptext59:
 14911                           	opt stack 0
 14912  006664                     _memset:
 14913                           	opt stack 14
 14914                           
 14915                           ; BSR set to: 0
 14916                           ;incstack = 0
 14917  006664  C07D  F083         	movff	memset@p1,memset@p
 14918  006668  C07E  F084         	movff	memset@p1+1,memset@p+1
 14919  00666C  D009               	goto	l3414
 14920  00666E                     l13075:
 14921  00666E  C083  FFD9         	movff	memset@p,fsr2l
 14922  006672  C084  FFDA         	movff	memset@p+1,fsr2h
 14923  006676  C07F  FFDF         	movff	memset@c,indf2
 14924  00667A  0100               	movlb	0	; () banked
 14925  00667C  4B83               	infsnz	memset@p& (0+255),f,b
 14926  00667E  2B84               	incf	(memset@p+1)& (0+255),f,b
 14927  006680                     l3414:
 14928                           
 14929                           ; BSR set to: 0
 14930  006680  0100               	movlb	0	; () banked
 14931  006682  0781               	decf	memset@n& (0+255),f,b
 14932  006684  A0D8               	btfss	status,0,c
 14933  006686  0782               	decf	(memset@n+1)& (0+255),f,b
 14934  006688  2981               	incf	memset@n& (0+255),w,b
 14935  00668A  E1F1               	bnz	l13075
 14936  00668C  2982               	incf	(memset@n+1)& (0+255),w,b
 14937  00668E  B4D8               	btfsc	status,2,c
 14938  006690  0012               	return	
 14939  006692  D7ED               	goto	l3415
 14940  006694                     __end_of_memset:
 14941                           	opt stack 0
 14942                           tosu	equ	0xFFF
 14943                           tosh	equ	0xFFE
 14944                           tosl	equ	0xFFD
 14945                           pclath	equ	0xFFA
 14946                           tblptru	equ	0xFF8
 14947                           tblptrh	equ	0xFF7
 14948                           tblptrl	equ	0xFF6
 14949                           tablat	equ	0xFF5
 14950                           prodh	equ	0xFF4
 14951                           prodl	equ	0xFF3
 14952                           intcon	equ	0xFF2
 14953                           intcon2	equ	0xFF1
 14954                           intcon3	equ	0xFF0
 14955                           indf0	equ	0xFEF
 14956                           postinc0	equ	0xFEE
 14957                           plusw0	equ	0xFEB
 14958                           fsr0h	equ	0xFEA
 14959                           fsr0l	equ	0xFE9
 14960                           wreg	equ	0xFE8
 14961                           indf1	equ	0xFE7
 14962                           postinc1	equ	0xFE6
 14963                           postdec1	equ	0xFE5
 14964                           fsr1h	equ	0xFE2
 14965                           fsr1l	equ	0xFE1
 14966                           indf2	equ	0xFDF
 14967                           postinc2	equ	0xFDE
 14968                           postdec2	equ	0xFDD
 14969                           plusw2	equ	0xFDB
 14970                           fsr2h	equ	0xFDA
 14971                           fsr2l	equ	0xFD9
 14972                           status	equ	0xFD8
 14973                           
 14974 ;; *************** function _Terminal *****************
 14975 ;; Defined at:
 14976 ;;		line 428 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/term.c"
 14977 ;; Parameters:    Size  Location     Type
 14978 ;;		None
 14979 ;; Auto vars:     Size  Location     Type
 14980 ;;  i               1   68[BANK0 ] unsigned char 
 14981 ;;  UsbRxBuffer   200    0[BANK10] unsigned char [200]
 14982 ;;  UsbTxBuffer   200    0[BANK2 ] unsigned char [200]
 14983 ;;  TermTxBuffer   50    0[BANK1 ] unsigned char [50]
 14984 ;;  Index           1   70[BANK0 ] unsigned char 
 14985 ;;  ReceivedByte    1   69[BANK0 ] unsigned char 
 14986 ;; Return value:  Size  Location     Type
 14987 ;;                  1    wreg      void 
 14988 ;; Registers used:
 14989 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14990 ;; Tracked objects:
 14991 ;;		On entry : 0/0
 14992 ;;		On exit  : 0/0
 14993 ;;		Unchanged: 0/0
 14994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14995 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14996 ;;      Locals:         0       3      50     200       0       0       0       0       0       0       0     200       
      +0       0       0       0
 14997 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14998 ;;      Totals:         0       5      50     200       0       0       0       0       0       0       0     200       
      +0       0       0       0
 14999 ;;Total ram usage:      455 bytes
 15000 ;; Hardware stack levels used:    1
 15001 ;; Hardware stack levels required when called:   15
 15002 ;; This function calls:
 15003 ;;		_I2cSlv_I2cReadMsgSts
 15004 ;;		_I2cSlv_ReceiveI2cMsg
 15005 ;;		_I2cSlv_SendI2cMsg
 15006 ;;		_OsTmr_Wait
 15007 ;;		_atoi
 15008 ;;		_getsUSBUSART
 15009 ;;		_itoa
 15010 ;;		_putUSBUSART
 15011 ;;		_strcpy
 15012 ;;		_strtol
 15013 ;;		_xtoi
 15014 ;; This function is called by:
 15015 ;;		_Term_MainSm
 15016 ;; This function uses a non-reentrant model
 15017 ;;
 15018                           
 15019                           	psect	text60
 15020  0000D0                     __ptext60:
 15021                           	opt stack 0
 15022  0000D0                     _Terminal:
 15023                           	opt stack 11
 15024                           
 15025                           ;term.c: 430: static TermStateType TermState = Term_GetData;
 15026                           ;term.c: 431: UINT8 UsbRxBuffer[200u];
 15027                           ;term.c: 432: UINT8 UsbTxBuffer[200u];
 15028                           ;term.c: 433: UINT8 TermTxBuffer[50u];
 15029                           ;term.c: 434: static UINT8 TermRxBuffer[50u];
 15030                           ;term.c: 435: UINT8 Index;
 15031                           ;term.c: 436: static UINT8 Len[4];
 15032                           ;term.c: 437: static UINT8 PackageLen;
 15033                           ;term.c: 438: static UINT8 Addr[4];
 15034                           ;term.c: 439: static UINT8 SlaveAddr;
 15035                           ;term.c: 440: static PayloadType Payload[20u];
 15036                           ;term.c: 441: UINT8 ReceivedBytes = 0;
 15037                           
 15038                           ; BSR set to: 0
 15039                           ;incstack = 0
 15040  0000D0  0E00               	movlw	0
 15041  0000D2  0100               	movlb	0	; () banked
 15042  0000D4  6FA5               	movwf	Terminal@ReceivedBytes& (0+255),b
 15043                           
 15044                           ; BSR set to: 0
 15045                           ;term.c: 443: static UINT8 FormatOption = 0u;
 15046                           ;term.c: 444: static UINT8 EchoOption = 1u;
 15047                           ;term.c: 445: static SwTimerType SwTimer;
 15048                           ;term.c: 448: if((USBDeviceState < CONFIGURED_STATE)||(UCONbits.SUSPND==1)) return;
 15049  0000D6  0E1F               	movlw	31
 15050  0000D8  65CE               	cpfsgt	_USBDeviceState& (0+255),b
 15051  0000DA  0012               	return	
 15052                           
 15053                           ; BSR set to: 0
 15054  0000DC  B265               	btfsc	3941,1,c	;volatile
 15055  0000DE  0012               	return	
 15056  0000E0  D278               	goto	l2405
 15057  0000E2                     
 15058                           ;term.c: 455: ReceivedBytes = getsUSBUSART(UsbRxBuffer,200u);
 15059                           
 15060                           ; BSR set to: 0
 15061  0000E2  0E00               	movlw	low Terminal@UsbRxBuffer
 15062  0000E4  0100               	movlb	0	; () banked
 15063  0000E6  6F84               	movwf	getsUSBUSART@buffer& (0+255),b
 15064  0000E8  0E0A               	movlw	high Terminal@UsbRxBuffer
 15065  0000EA  6F85               	movwf	(getsUSBUSART@buffer+1)& (0+255),b
 15066  0000EC  0EC8               	movlw	200
 15067  0000EE  6F86               	movwf	getsUSBUSART@len& (0+255),b
 15068  0000F0  ECED  F026         	call	_getsUSBUSART	;wreg free
 15069  0000F4  0100               	movlb	0	; () banked
 15070  0000F6  6FA5               	movwf	Terminal@ReceivedBytes& (0+255),b
 15071                           
 15072                           ; BSR set to: 0
 15073                           ;term.c: 458: if (ReceivedBytes > 0)
 15074  0000F8  51A5               	movf	Terminal@ReceivedBytes& (0+255),w,b
 15075  0000FA  B4D8               	btfsc	status,2,c
 15076  0000FC  0012               	return	
 15077                           
 15078                           ; BSR set to: 0
 15079                           ;term.c: 459: {
 15080                           ;term.c: 461: if (EchoOption == 1u)
 15081  0000FE  0102               	movlb	2	; () banked
 15082  000100  05F1               	decf	Terminal@EchoOption& (0+255),w,b
 15083  000102  A4D8               	btfss	status,2,c
 15084  000104  D026               	goto	l2409
 15085                           
 15086                           ; BSR set to: 2
 15087                           ;term.c: 462: {
 15088                           ;term.c: 464: if((cdc_trf_state == 0))
 15089  000106  0100               	movlb	0	; () banked
 15090  000108  51C8               	movf	_cdc_trf_state& (0+255),w,b
 15091  00010A  A4D8               	btfss	status,2,c
 15092  00010C  D022               	goto	l2409
 15093                           
 15094                           ; BSR set to: 0
 15095                           ;term.c: 465: {
 15096                           ;term.c: 466: UsbRxBuffer[ReceivedBytes] = '\r';
 15097  00010E  51A5               	movf	Terminal@ReceivedBytes& (0+255),w,b
 15098  000110  0D01               	mullw	1
 15099  000112  0E00               	movlw	low Terminal@UsbRxBuffer
 15100  000114  24F3               	addwf	prodl,w,c
 15101  000116  6ED9               	movwf	fsr2l,c
 15102  000118  0E0A               	movlw	high Terminal@UsbRxBuffer
 15103  00011A  20F4               	addwfc	prodh,w,c
 15104  00011C  6EDA               	movwf	fsr2h,c
 15105  00011E  0E0D               	movlw	13
 15106  000120  6EDF               	movwf	indf2,c
 15107                           
 15108                           ; BSR set to: 0
 15109                           ;term.c: 467: UsbRxBuffer[ReceivedBytes + 1] = '\n';
 15110  000122  51A5               	movf	Terminal@ReceivedBytes& (0+255),w,b
 15111  000124  6FA2               	movwf	??_Terminal& (0+255),b
 15112  000126  6BA3               	clrf	(??_Terminal+1)& (0+255),b
 15113  000128  0E01               	movlw	1
 15114  00012A  27A2               	addwf	??_Terminal& (0+255),f,b
 15115  00012C  0E00               	movlw	0
 15116  00012E  23A3               	addwfc	(??_Terminal+1)& (0+255),f,b
 15117  000130  0E00               	movlw	low Terminal@UsbRxBuffer
 15118  000132  25A2               	addwf	??_Terminal& (0+255),w,b
 15119  000134  6ED9               	movwf	fsr2l,c
 15120  000136  0E0A               	movlw	high Terminal@UsbRxBuffer
 15121  000138  21A3               	addwfc	(??_Terminal+1)& (0+255),w,b
 15122  00013A  6EDA               	movwf	fsr2h,c
 15123  00013C  0E0A               	movlw	10
 15124  00013E  6EDF               	movwf	indf2,c
 15125                           
 15126                           ; BSR set to: 0
 15127                           ;term.c: 468: putUSBUSART(UsbRxBuffer,ReceivedBytes + 2);
 15128  000140  0E00               	movlw	low Terminal@UsbRxBuffer
 15129  000142  6F83               	movwf	putUSBUSART@data& (0+255),b
 15130  000144  0E0A               	movlw	high Terminal@UsbRxBuffer
 15131  000146  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 15132  000148  51A5               	movf	Terminal@ReceivedBytes& (0+255),w,b
 15133  00014A  0F02               	addlw	2
 15134  00014C  6F85               	movwf	putUSBUSART@length& (0+255),b
 15135  00014E  EC8A  F034         	call	_putUSBUSART	;wreg free
 15136  000152                     l2409:
 15137                           
 15138                           ;term.c: 469: }
 15139                           ;term.c: 470: }
 15140                           ;term.c: 473: if ((UsbRxBuffer[0u] == 'S') &&
 15141                           ;term.c: 474: (UsbRxBuffer[0u + 1u] == 'O') &&
 15142                           ;term.c: 475: (UsbRxBuffer[0u + 1u + 1u] == ':'))
 15143  000152  0E53               	movlw	83
 15144  000154  010A               	movlb	10	; () banked
 15145  000156  1900               	xorwf	Terminal@UsbRxBuffer& (0+255),w,b
 15146  000158  A4D8               	btfss	status,2,c
 15147  00015A  D043               	goto	l2410
 15148                           
 15149                           ; BSR set to: 10
 15150  00015C  0E4F               	movlw	79
 15151  00015E  1901               	xorwf	(Terminal@UsbRxBuffer+1)& (0+255),w,b
 15152  000160  A4D8               	btfss	status,2,c
 15153  000162  D03F               	goto	l2410
 15154                           
 15155                           ; BSR set to: 10
 15156  000164  0E3A               	movlw	58
 15157  000166  1902               	xorwf	(Terminal@UsbRxBuffer+2)& (0+255),w,b
 15158  000168  A4D8               	btfss	status,2,c
 15159  00016A  D03B               	goto	l2410
 15160                           
 15161                           ; BSR set to: 10
 15162                           ;term.c: 476: {
 15163                           ;term.c: 478: if ((UsbRxBuffer[0u + 1u + 1u + 1u] == 'G') && (UsbRxBuffer[0u + 1u + 1u +
      +                           1u + 1] == ':'))
 15164  00016C  0E47               	movlw	71
 15165  00016E  1903               	xorwf	(Terminal@UsbRxBuffer+3)& (0+255),w,b
 15166  000170  A4D8               	btfss	status,2,c
 15167  000172  0012               	return	
 15168                           
 15169                           ; BSR set to: 10
 15170  000174  0E3A               	movlw	58
 15171  000176  1904               	xorwf	(Terminal@UsbRxBuffer+4)& (0+255),w,b
 15172  000178  A4D8               	btfss	status,2,c
 15173  00017A  0012               	return	
 15174                           
 15175                           ; BSR set to: 10
 15176                           ;term.c: 479: {
 15177                           ;term.c: 481: if ((UsbRxBuffer[0u + 1u + 1u + 1u + 2u] == 'D') && (UsbRxBuffer[0u + 1u +
      +                           1u + 1u + 2u + 1] == 'F'))
 15178  00017C  0E44               	movlw	68
 15179  00017E  1905               	xorwf	(Terminal@UsbRxBuffer+5)& (0+255),w,b
 15180  000180  A4D8               	btfss	status,2,c
 15181  000182  D015               	goto	l2412
 15182                           
 15183                           ; BSR set to: 10
 15184  000184  0E46               	movlw	70
 15185  000186  1906               	xorwf	(Terminal@UsbRxBuffer+6)& (0+255),w,b
 15186  000188  A4D8               	btfss	status,2,c
 15187  00018A  D011               	goto	l2412
 15188                           
 15189                           ; BSR set to: 10
 15190                           ;term.c: 482: {
 15191                           ;term.c: 483: if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == 'A')
 15192  00018C  0E41               	movlw	65
 15193  00018E  1908               	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 15194  000190  A4D8               	btfss	status,2,c
 15195  000192  D004               	goto	l2413
 15196                           
 15197                           ; BSR set to: 10
 15198                           ;term.c: 484: {
 15199                           ;term.c: 485: FormatOption = 1u;
 15200  000194  0E01               	movlw	1
 15201  000196  0102               	movlb	2	; () banked
 15202  000198  6FEA               	movwf	Terminal@FormatOption& (0+255),b
 15203                           
 15204                           ;term.c: 486: }
 15205  00019A  0012               	return	
 15206  00019C                     l2413:
 15207                           
 15208                           ;term.c: 487: else if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == 'B')
 15209                           
 15210                           ; BSR set to: 2
 15211  00019C  0E42               	movlw	66
 15212  00019E  010A               	movlb	10	; () banked
 15213  0001A0  1908               	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 15214  0001A2  A4D8               	btfss	status,2,c
 15215  0001A4  0012               	return	
 15216                           
 15217                           ; BSR set to: 10
 15218                           ;term.c: 488: {
 15219                           ;term.c: 489: FormatOption = 0u;
 15220  0001A6  0E00               	movlw	0
 15221  0001A8  0102               	movlb	2	; () banked
 15222  0001AA  6FEA               	movwf	Terminal@FormatOption& (0+255),b
 15223                           
 15224                           ; BSR set to: 2
 15225                           ;term.c: 490: }
 15226                           ;term.c: 491: }
 15227                           
 15228                           ; BSR set to: 2
 15229  0001AC  0012               	return	
 15230  0001AE                     l2412:
 15231                           
 15232                           ;term.c: 493: else if ((UsbRxBuffer[0u + 1u + 1u + 1u + 2u] == 'E') && (UsbRxBuffer[0u +
      +                           1u + 1u + 1u + 2u + 1] == 'M'))
 15233                           
 15234                           ; BSR set to: 2
 15235  0001AE  0E45               	movlw	69
 15236  0001B0  010A               	movlb	10	; () banked
 15237  0001B2  1905               	xorwf	(Terminal@UsbRxBuffer+5)& (0+255),w,b
 15238  0001B4  A4D8               	btfss	status,2,c
 15239  0001B6  0012               	return	
 15240                           
 15241                           ; BSR set to: 10
 15242  0001B8  0E4D               	movlw	77
 15243  0001BA  1906               	xorwf	(Terminal@UsbRxBuffer+6)& (0+255),w,b
 15244  0001BC  A4D8               	btfss	status,2,c
 15245  0001BE  0012               	return	
 15246                           
 15247                           ; BSR set to: 10
 15248                           ;term.c: 494: {
 15249                           ;term.c: 495: if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == '1')
 15250  0001C0  0E31               	movlw	49
 15251  0001C2  1908               	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 15252  0001C4  A4D8               	btfss	status,2,c
 15253  0001C6  D004               	goto	l2418
 15254                           
 15255                           ; BSR set to: 10
 15256                           ;term.c: 496: {
 15257                           ;term.c: 497: EchoOption = 1u;
 15258  0001C8  0E01               	movlw	1
 15259  0001CA  0102               	movlb	2	; () banked
 15260  0001CC  6FF1               	movwf	Terminal@EchoOption& (0+255),b
 15261                           
 15262                           ;term.c: 498: }
 15263  0001CE  0012               	return	
 15264  0001D0                     l2418:
 15265                           
 15266                           ;term.c: 499: else if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == '0')
 15267                           
 15268                           ; BSR set to: 2
 15269  0001D0  0E30               	movlw	48
 15270  0001D2  010A               	movlb	10	; () banked
 15271  0001D4  1908               	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 15272  0001D6  A4D8               	btfss	status,2,c
 15273  0001D8  0012               	return	
 15274                           
 15275                           ; BSR set to: 10
 15276                           ;term.c: 500: {
 15277                           ;term.c: 501: EchoOption = 0u;
 15278  0001DA  0E00               	movlw	0
 15279  0001DC  0102               	movlb	2	; () banked
 15280  0001DE  6FF1               	movwf	Terminal@EchoOption& (0+255),b
 15281                           
 15282                           ; BSR set to: 2
 15283                           ;term.c: 507: }
 15284                           ;term.c: 508: }
 15285                           ;term.c: 509: }
 15286                           
 15287                           ; BSR set to: 2
 15288                           
 15289                           ; BSR set to: 2
 15290                           
 15291                           ;term.c: 504: else
 15292                           ;term.c: 505: {
 15293                           
 15294                           ; BSR set to: 2
 15295                           
 15296                           ; BSR set to: 2
 15297                           ;term.c: 502: }
 15298                           ;term.c: 503: }
 15299                           
 15300                           ; BSR set to: 2
 15301  0001E0  0012               	return	
 15302  0001E2                     l2410:
 15303                           
 15304                           ;term.c: 510: else if ((UsbRxBuffer[0u] == 'S') &&
 15305                           ;term.c: 511: (UsbRxBuffer[0u + 1u] == 'B') &&
 15306                           ;term.c: 512: (UsbRxBuffer[0u + 1u + 1u] == ':'))
 15307                           
 15308                           ; BSR set to: 2
 15309  0001E2  0E53               	movlw	83
 15310  0001E4  010A               	movlb	10	; () banked
 15311  0001E6  1900               	xorwf	Terminal@UsbRxBuffer& (0+255),w,b
 15312  0001E8  A4D8               	btfss	status,2,c
 15313  0001EA  D0D3               	goto	l2423
 15314                           
 15315                           ; BSR set to: 10
 15316  0001EC  0E42               	movlw	66
 15317  0001EE  1901               	xorwf	(Terminal@UsbRxBuffer+1)& (0+255),w,b
 15318  0001F0  A4D8               	btfss	status,2,c
 15319  0001F2  D0CF               	goto	l2423
 15320                           
 15321                           ; BSR set to: 10
 15322  0001F4  0E3A               	movlw	58
 15323  0001F6  1902               	xorwf	(Terminal@UsbRxBuffer+2)& (0+255),w,b
 15324  0001F8  A4D8               	btfss	status,2,c
 15325  0001FA  D0CB               	goto	l2423
 15326                           
 15327                           ; BSR set to: 10
 15328                           ;term.c: 513: {
 15329                           ;term.c: 514: if ((UsbRxBuffer[0u + 1u + 1u + 1u] == 'W') && (UsbRxBuffer[0u + 1u + 1u +
      +                           1u + 1] == ':'))
 15330  0001FC  0E57               	movlw	87
 15331  0001FE  1903               	xorwf	(Terminal@UsbRxBuffer+3)& (0+255),w,b
 15332  000200  A4D8               	btfss	status,2,c
 15333  000202  D091               	goto	l2424
 15334                           
 15335                           ; BSR set to: 10
 15336  000204  0E3A               	movlw	58
 15337  000206  1904               	xorwf	(Terminal@UsbRxBuffer+4)& (0+255),w,b
 15338  000208  A4D8               	btfss	status,2,c
 15339  00020A  D08D               	goto	l2424
 15340                           
 15341                           ; BSR set to: 10
 15342                           ;term.c: 515: {
 15343                           ;term.c: 517: Len[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u];
 15344  00020C  CA05  F3AD         	movff	Terminal@UsbRxBuffer+5,Terminal@Len
 15345                           
 15346                           ;term.c: 518: Len[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 1];
 15347  000210  CA06  F3AE         	movff	Terminal@UsbRxBuffer+6,Terminal@Len+1
 15348                           
 15349                           ;term.c: 520: Addr[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u];
 15350  000214  CA08  F3A9         	movff	Terminal@UsbRxBuffer+8,Terminal@Addr
 15351                           
 15352                           ;term.c: 521: Addr[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u + 1];
 15353  000218  CA09  F3AA         	movff	Terminal@UsbRxBuffer+9,Terminal@Addr+1
 15354                           
 15355                           ; BSR set to: 10
 15356                           ;term.c: 523: PackageLen = atoi((void*)Len);
 15357  00021C  0EAD               	movlw	low Terminal@Len
 15358  00021E  0100               	movlb	0	; () banked
 15359  000220  6F83               	movwf	atoi@s& (0+255),b
 15360  000222  0E03               	movlw	high Terminal@Len
 15361  000224  6F84               	movwf	(atoi@s+1)& (0+255),b
 15362  000226  EC66  F01C         	call	_atoi	;wreg free
 15363  00022A  0100               	movlb	0	; () banked
 15364  00022C  5183               	movf	?_atoi& (0+255),w,b
 15365  00022E  0102               	movlb	2	; () banked
 15366  000230  6FEC               	movwf	Terminal@PackageLen& (0+255),b
 15367                           
 15368                           ; BSR set to: 2
 15369                           ;term.c: 524: SlaveAddr = xtoi((void*)Addr);
 15370  000232  0EA9               	movlw	low Terminal@Addr
 15371  000234  0100               	movlb	0	; () banked
 15372  000236  6F83               	movwf	xtoi@s& (0+255),b
 15373  000238  0E03               	movlw	high Terminal@Addr
 15374  00023A  6F84               	movwf	(xtoi@s+1)& (0+255),b
 15375  00023C  EC15  F01B         	call	_xtoi	;wreg free
 15376  000240  0100               	movlb	0	; () banked
 15377  000242  5183               	movf	?_xtoi& (0+255),w,b
 15378  000244  0102               	movlb	2	; () banked
 15379  000246  6FEB               	movwf	Terminal@SlaveAddr& (0+255),b
 15380                           
 15381                           ; BSR set to: 2
 15382                           ;term.c: 526: for (Index = 0; Index <= PackageLen; Index++)
 15383  000248  0E00               	movlw	0
 15384  00024A  0100               	movlb	0	; () banked
 15385  00024C  6FA6               	movwf	Terminal@Index& (0+255),b
 15386  00024E  D032               	goto	l2425
 15387  000250                     
 15388                           ;term.c: 527: {
 15389                           ;term.c: 528: Payload[Index].Byte[0] = UsbRxBuffer[2*Index + 0u + 1u + 1u + 1u + 2u + 3u
      +                           + 3u];
 15390                           
 15391                           ; BSR set to: 0
 15392  000250  0100               	movlb	0	; () banked
 15393  000252  51A6               	movf	Terminal@Index& (0+255),w,b
 15394  000254  0D02               	mullw	2
 15395  000256  0E0B               	movlw	11
 15396  000258  26F3               	addwf	prodl,f,c
 15397  00025A  0E00               	movlw	0
 15398  00025C  22F4               	addwfc	prodh,f,c
 15399  00025E  0E00               	movlw	low Terminal@UsbRxBuffer
 15400  000260  24F3               	addwf	prodl,w,c
 15401  000262  6ED9               	movwf	fsr2l,c
 15402  000264  0E0A               	movlw	high Terminal@UsbRxBuffer
 15403  000266  20F4               	addwfc	prodh,w,c
 15404  000268  6EDA               	movwf	fsr2h,c
 15405  00026A  51A6               	movf	Terminal@Index& (0+255),w,b
 15406  00026C  0D04               	mullw	4
 15407  00026E  0E66               	movlw	low Terminal@Payload
 15408  000270  24F3               	addwf	prodl,w,c
 15409  000272  6EE1               	movwf	fsr1l,c
 15410  000274  0E07               	movlw	high Terminal@Payload
 15411  000276  20F4               	addwfc	prodh,w,c
 15412  000278  6EE2               	movwf	fsr1h,c
 15413  00027A  CFDF FFE7          	movff	indf2,indf1
 15414                           
 15415                           ;term.c: 529: Payload[Index].Byte[1] = UsbRxBuffer[2*Index + 0u + 1u + 1u + 1u + 2u + 3u
      +                           + 3u + 1];
 15416  00027E  51A6               	movf	Terminal@Index& (0+255),w,b
 15417  000280  0D02               	mullw	2
 15418  000282  0E0C               	movlw	12
 15419  000284  26F3               	addwf	prodl,f,c
 15420  000286  0E00               	movlw	0
 15421  000288  22F4               	addwfc	prodh,f,c
 15422  00028A  0E00               	movlw	low Terminal@UsbRxBuffer
 15423  00028C  24F3               	addwf	prodl,w,c
 15424  00028E  6ED9               	movwf	fsr2l,c
 15425  000290  0E0A               	movlw	high Terminal@UsbRxBuffer
 15426  000292  20F4               	addwfc	prodh,w,c
 15427  000294  6EDA               	movwf	fsr2h,c
 15428  000296  51A6               	movf	Terminal@Index& (0+255),w,b
 15429  000298  0D04               	mullw	4
 15430  00029A  0E01               	movlw	1
 15431  00029C  26F3               	addwf	prodl,f,c
 15432  00029E  0E00               	movlw	0
 15433  0002A0  22F4               	addwfc	prodh,f,c
 15434  0002A2  0E66               	movlw	low Terminal@Payload
 15435  0002A4  24F3               	addwf	prodl,w,c
 15436  0002A6  6EE1               	movwf	fsr1l,c
 15437  0002A8  0E07               	movlw	high Terminal@Payload
 15438  0002AA  20F4               	addwfc	prodh,w,c
 15439  0002AC  6EE2               	movwf	fsr1h,c
 15440  0002AE  CFDF FFE7          	movff	indf2,indf1
 15441                           
 15442                           ; BSR set to: 0
 15443  0002B2  2BA6               	incf	Terminal@Index& (0+255),f,b
 15444  0002B4                     l2425:
 15445                           
 15446                           ; BSR set to: 0
 15447                           
 15448                           ; BSR set to: 0
 15449  0002B4  51A6               	movf	Terminal@Index& (0+255),w,b
 15450  0002B6  0102               	movlb	2	; () banked
 15451  0002B8  5DEC               	subwf	Terminal@PackageLen& (0+255),w,b
 15452  0002BA  B0D8               	btfsc	status,0,c
 15453  0002BC  D7C9               	goto	l2426
 15454                           
 15455                           ; BSR set to: 2
 15456                           ;term.c: 530: }
 15457                           ;term.c: 532: for (Index = 0; Index <= PackageLen; Index++)
 15458                           
 15459                           ; BSR set to: 2
 15460  0002BE  0E00               	movlw	0
 15461  0002C0  0100               	movlb	0	; () banked
 15462  0002C2  6FA6               	movwf	Terminal@Index& (0+255),b
 15463  0002C4  D01F               	goto	l2428
 15464  0002C6                     
 15465                           ;term.c: 533: {
 15466                           ;term.c: 537: TermTxBuffer[Index] = strtol((void*)&(Payload[Index]), (0), 16);
 15467                           
 15468                           ; BSR set to: 0
 15469  0002C6  0100               	movlb	0	; () banked
 15470  0002C8  51A6               	movf	Terminal@Index& (0+255),w,b
 15471  0002CA  0D04               	mullw	4
 15472  0002CC  0E66               	movlw	low Terminal@Payload
 15473  0002CE  24F3               	addwf	prodl,w,c
 15474  0002D0  6F89               	movwf	strtol@s& (0+255),b
 15475  0002D2  0E07               	movlw	high Terminal@Payload
 15476  0002D4  20F4               	addwfc	prodh,w,c
 15477  0002D6  6F8A               	movwf	(strtol@s+1)& (0+255),b
 15478  0002D8  0E00               	movlw	0
 15479  0002DA  6F8B               	movwf	strtol@endptr& (0+255),b
 15480  0002DC  0E00               	movlw	0
 15481  0002DE  6F8C               	movwf	(strtol@endptr+1)& (0+255),b
 15482  0002E0  0E00               	movlw	0
 15483  0002E2  6F8E               	movwf	(strtol@base+1)& (0+255),b
 15484  0002E4  0E10               	movlw	16
 15485  0002E6  6F8D               	movwf	strtol@base& (0+255),b
 15486  0002E8  EC0E  F00C         	call	_strtol	;wreg free
 15487  0002EC  0100               	movlb	0	; () banked
 15488  0002EE  51A6               	movf	Terminal@Index& (0+255),w,b
 15489  0002F0  0D01               	mullw	1
 15490  0002F2  0E00               	movlw	low Terminal@TermTxBuffer
 15491  0002F4  24F3               	addwf	prodl,w,c
 15492  0002F6  6ED9               	movwf	fsr2l,c
 15493  0002F8  0E01               	movlw	high Terminal@TermTxBuffer
 15494  0002FA  20F4               	addwfc	prodh,w,c
 15495  0002FC  6EDA               	movwf	fsr2h,c
 15496  0002FE  C089  FFDF         	movff	?_strtol,indf2
 15497                           
 15498                           ; BSR set to: 0
 15499  000302  2BA6               	incf	Terminal@Index& (0+255),f,b
 15500  000304                     l2428:
 15501                           
 15502                           ; BSR set to: 0
 15503                           
 15504                           ; BSR set to: 0
 15505  000304  51A6               	movf	Terminal@Index& (0+255),w,b
 15506  000306  0102               	movlb	2	; () banked
 15507  000308  5DEC               	subwf	Terminal@PackageLen& (0+255),w,b
 15508  00030A  B0D8               	btfsc	status,0,c
 15509  00030C  D7DC               	goto	l2429
 15510                           
 15511                           ; BSR set to: 2
 15512                           ;term.c: 539: }
 15513                           ;term.c: 542: I2cSlv_SendI2cMsg(TermTxBuffer, SlaveAddr, PackageLen);
 15514                           
 15515                           ; BSR set to: 2
 15516  00030E  0E00               	movlw	low Terminal@TermTxBuffer
 15517  000310  0100               	movlb	0	; () banked
 15518  000312  6F80               	movwf	I2cSlv_SendI2cMsg@TxBuffer& (0+255),b
 15519  000314  0E01               	movlw	high Terminal@TermTxBuffer
 15520  000316  6F81               	movwf	(I2cSlv_SendI2cMsg@TxBuffer+1)& (0+255),b
 15521  000318  C2EB  F082         	movff	Terminal@SlaveAddr,I2cSlv_SendI2cMsg@SlaveAddr
 15522  00031C  C2EC  F083         	movff	Terminal@PackageLen,I2cSlv_SendI2cMsg@DataLenght
 15523  000320  ECC9  F031         	call	_I2cSlv_SendI2cMsg	;wreg free
 15524                           
 15525                           ;term.c: 543: }
 15526  000324  0012               	return	
 15527  000326                     l2424:
 15528                           
 15529                           ;term.c: 544: else if ((UsbRxBuffer[0u + 1u + 1u + 1u] == 'R') && (UsbRxBuffer[0u + 1u +
      +                           1u + 1u + 1] == ':'))
 15530  000326  0E52               	movlw	82
 15531  000328  010A               	movlb	10	; () banked
 15532  00032A  1903               	xorwf	(Terminal@UsbRxBuffer+3)& (0+255),w,b
 15533  00032C  A4D8               	btfss	status,2,c
 15534  00032E  0012               	return	
 15535                           
 15536                           ; BSR set to: 10
 15537  000330  0E3A               	movlw	58
 15538  000332  1904               	xorwf	(Terminal@UsbRxBuffer+4)& (0+255),w,b
 15539  000334  A4D8               	btfss	status,2,c
 15540  000336  0012               	return	
 15541                           
 15542                           ; BSR set to: 10
 15543                           ;term.c: 545: {
 15544                           ;term.c: 547: Len[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u];
 15545  000338  CA05  F3AD         	movff	Terminal@UsbRxBuffer+5,Terminal@Len
 15546                           
 15547                           ;term.c: 548: Len[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 1];
 15548  00033C  CA06  F3AE         	movff	Terminal@UsbRxBuffer+6,Terminal@Len+1
 15549                           
 15550                           ;term.c: 550: Addr[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u];
 15551  000340  CA08  F3A9         	movff	Terminal@UsbRxBuffer+8,Terminal@Addr
 15552                           
 15553                           ;term.c: 551: Addr[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u + 1];
 15554  000344  CA09  F3AA         	movff	Terminal@UsbRxBuffer+9,Terminal@Addr+1
 15555                           
 15556                           ; BSR set to: 10
 15557                           ;term.c: 553: PackageLen = atoi((void*)Len);
 15558  000348  0EAD               	movlw	low Terminal@Len
 15559  00034A  0100               	movlb	0	; () banked
 15560  00034C  6F83               	movwf	atoi@s& (0+255),b
 15561  00034E  0E03               	movlw	high Terminal@Len
 15562  000350  6F84               	movwf	(atoi@s+1)& (0+255),b
 15563  000352  EC66  F01C         	call	_atoi	;wreg free
 15564  000356  0100               	movlb	0	; () banked
 15565  000358  5183               	movf	?_atoi& (0+255),w,b
 15566  00035A  0102               	movlb	2	; () banked
 15567  00035C  6FEC               	movwf	Terminal@PackageLen& (0+255),b
 15568                           
 15569                           ; BSR set to: 2
 15570                           ;term.c: 554: SlaveAddr = xtoi((void*)Addr);
 15571  00035E  0EA9               	movlw	low Terminal@Addr
 15572  000360  0100               	movlb	0	; () banked
 15573  000362  6F83               	movwf	xtoi@s& (0+255),b
 15574  000364  0E03               	movlw	high Terminal@Addr
 15575  000366  6F84               	movwf	(xtoi@s+1)& (0+255),b
 15576  000368  EC15  F01B         	call	_xtoi	;wreg free
 15577  00036C  0100               	movlb	0	; () banked
 15578  00036E  5183               	movf	?_xtoi& (0+255),w,b
 15579  000370  0102               	movlb	2	; () banked
 15580  000372  6FEB               	movwf	Terminal@SlaveAddr& (0+255),b
 15581                           
 15582                           ; BSR set to: 2
 15583                           ;term.c: 557: I2cSlv_ReceiveI2cMsg(TermRxBuffer, SlaveAddr, PackageLen);
 15584  000374  0E40               	movlw	low Terminal@TermRxBuffer
 15585  000376  0100               	movlb	0	; () banked
 15586  000378  6F80               	movwf	I2cSlv_ReceiveI2cMsg@RxBuffer& (0+255),b
 15587  00037A  0E05               	movlw	high Terminal@TermRxBuffer
 15588  00037C  6F81               	movwf	(I2cSlv_ReceiveI2cMsg@RxBuffer+1)& (0+255),b
 15589  00037E  C2EB  F082         	movff	Terminal@SlaveAddr,I2cSlv_ReceiveI2cMsg@SlaveAddr
 15590  000382  C2EC  F083         	movff	Terminal@PackageLen,I2cSlv_ReceiveI2cMsg@DataLenght
 15591  000386  EC6A  F031         	call	_I2cSlv_ReceiveI2cMsg	;wreg free
 15592                           
 15593                           ;term.c: 560: TermState = Term_PrepSlvI2cResp;
 15594  00038A  0E01               	movlw	1
 15595  00038C  0102               	movlb	2	; () banked
 15596  00038E  6FED               	movwf	Terminal@TermState& (0+255),b
 15597                           
 15598                           ; BSR set to: 2
 15599                           ;term.c: 561: }
 15600                           ;term.c: 562: }
 15601                           
 15602                           ; BSR set to: 2
 15603  000390  0012               	return	
 15604  000392                     l2423:
 15605                           
 15606                           ;term.c: 563: else if ((UsbRxBuffer[0u] == 'T') &&
 15607                           ;term.c: 564: (UsbRxBuffer[0u + 1u] == 'E') &&
 15608                           ;term.c: 565: (UsbRxBuffer[0u + 1u + 1u] == 'L'))
 15609                           
 15610                           ; BSR set to: 2
 15611  000392  0E54               	movlw	84
 15612  000394  010A               	movlb	10	; () banked
 15613  000396  1900               	xorwf	Terminal@UsbRxBuffer& (0+255),w,b
 15614  000398  A4D8               	btfss	status,2,c
 15615  00039A  0012               	return	
 15616                           
 15617                           ; BSR set to: 10
 15618  00039C  0E45               	movlw	69
 15619  00039E  1901               	xorwf	(Terminal@UsbRxBuffer+1)& (0+255),w,b
 15620  0003A0  A4D8               	btfss	status,2,c
 15621  0003A2  0012               	return	
 15622                           
 15623                           ; BSR set to: 10
 15624  0003A4  0E4C               	movlw	76
 15625  0003A6  1902               	xorwf	(Terminal@UsbRxBuffer+2)& (0+255),w,b
 15626  0003A8  A4D8               	btfss	status,2,c
 15627  0003AA  0012               	return	
 15628                           
 15629                           ; BSR set to: 10
 15630                           ;term.c: 566: {
 15631                           ;term.c: 568: Len[0] = UsbRxBuffer[0u + 1u + 1u + 1u];
 15632  0003AC  CA03  F3AD         	movff	Terminal@UsbRxBuffer+3,Terminal@Len
 15633                           
 15634                           ;term.c: 569: Len[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 1];
 15635  0003B0  CA04  F3AE         	movff	Terminal@UsbRxBuffer+4,Terminal@Len+1
 15636                           
 15637                           ; BSR set to: 10
 15638                           ;term.c: 570: UsbMasterPhoneNumberLen = atoi(Len);
 15639  0003B4  0EAD               	movlw	low Terminal@Len
 15640  0003B6  0100               	movlb	0	; () banked
 15641  0003B8  6F83               	movwf	atoi@s& (0+255),b
 15642  0003BA  0E03               	movlw	high Terminal@Len
 15643  0003BC  6F84               	movwf	(atoi@s+1)& (0+255),b
 15644  0003BE  EC66  F01C         	call	_atoi	;wreg free
 15645  0003C2  C083  F31A         	movff	?_atoi,_UsbMasterPhoneNumberLen
 15646  0003C6  C084  F31B         	movff	?_atoi+1,_UsbMasterPhoneNumberLen+1
 15647                           
 15648                           ;term.c: 572: for (UINT8 i = 0; i < UsbMasterPhoneNumberLen; i++)
 15649  0003CA  0E00               	movlw	0
 15650  0003CC  0100               	movlb	0	; () banked
 15651  0003CE  6FA4               	movwf	Terminal@i& (0+255),b
 15652  0003D0  D018               	goto	l2435
 15653  0003D2                     
 15654                           ; BSR set to: 0
 15655                           ;term.c: 573: {
 15656                           ;term.c: 574: UsbMasterPhoneNumber[i] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + i];
 15657                           
 15658                           ; BSR set to: 0
 15659  0003D2  51A4               	movf	Terminal@i& (0+255),w,b
 15660  0003D4  6FA2               	movwf	??_Terminal& (0+255),b
 15661  0003D6  6BA3               	clrf	(??_Terminal+1)& (0+255),b
 15662  0003D8  0E05               	movlw	5
 15663  0003DA  27A2               	addwf	??_Terminal& (0+255),f,b
 15664  0003DC  0E00               	movlw	0
 15665  0003DE  23A3               	addwfc	(??_Terminal+1)& (0+255),f,b
 15666  0003E0  0E00               	movlw	low Terminal@UsbRxBuffer
 15667  0003E2  25A2               	addwf	??_Terminal& (0+255),w,b
 15668  0003E4  6ED9               	movwf	fsr2l,c
 15669  0003E6  0E0A               	movlw	high Terminal@UsbRxBuffer
 15670  0003E8  21A3               	addwfc	(??_Terminal+1)& (0+255),w,b
 15671  0003EA  6EDA               	movwf	fsr2h,c
 15672  0003EC  51A4               	movf	Terminal@i& (0+255),w,b
 15673  0003EE  0D01               	mullw	1
 15674  0003F0  0E40               	movlw	low _UsbMasterPhoneNumber
 15675  0003F2  24F3               	addwf	prodl,w,c
 15676  0003F4  6EE1               	movwf	fsr1l,c
 15677  0003F6  0E04               	movlw	high _UsbMasterPhoneNumber
 15678  0003F8  20F4               	addwfc	prodh,w,c
 15679  0003FA  6EE2               	movwf	fsr1h,c
 15680  0003FC  CFDF FFE7          	movff	indf2,indf1
 15681                           
 15682                           ; BSR set to: 0
 15683  000400  2BA4               	incf	Terminal@i& (0+255),f,b
 15684  000402                     l2435:
 15685                           
 15686                           ; BSR set to: 0
 15687                           
 15688                           ; BSR set to: 0
 15689  000402  51A4               	movf	Terminal@i& (0+255),w,b
 15690  000404  6FA2               	movwf	??_Terminal& (0+255),b
 15691  000406  6BA3               	clrf	(??_Terminal+1)& (0+255),b
 15692  000408  0103               	movlb	3	; () banked
 15693  00040A  511A               	movf	_UsbMasterPhoneNumberLen& (0+255),w,b
 15694  00040C  0100               	movlb	0	; () banked
 15695  00040E  5DA2               	subwf	??_Terminal& (0+255),w,b
 15696  000410  0103               	movlb	3	; () banked
 15697  000412  511B               	movf	(_UsbMasterPhoneNumberLen+1)& (0+255),w,b
 15698  000414  0100               	movlb	0	; () banked
 15699  000416  59A3               	subwfb	(??_Terminal+1)& (0+255),w,b
 15700  000418  B0D8               	btfsc	status,0,c
 15701  00041A  0012               	return	
 15702  00041C  D7DA               	goto	l2436
 15703  00041E                     
 15704                           ;term.c: 619: if((cdc_trf_state == 0))
 15705                           
 15706                           ; BSR set to: 0
 15707  00041E  0100               	movlb	0	; () banked
 15708  000420  51C8               	movf	_cdc_trf_state& (0+255),w,b
 15709  000422  A4D8               	btfss	status,2,c
 15710  000424  0012               	return	
 15711                           
 15712                           ; BSR set to: 0
 15713                           ;term.c: 620: {
 15714                           ;term.c: 621: UsbTxBuffer[0] = 'S';
 15715  000426  0E53               	movlw	83
 15716  000428  0102               	movlb	2	; () banked
 15717  00042A  6F00               	movwf	Terminal@UsbTxBuffer& (0+255),b
 15718                           
 15719                           ;term.c: 622: UsbTxBuffer[1] = 'B';
 15720  00042C  0E42               	movlw	66
 15721  00042E  6F01               	movwf	(Terminal@UsbTxBuffer+1)& (0+255),b
 15722                           
 15723                           ;term.c: 623: UsbTxBuffer[2] = '[';
 15724  000430  0E5B               	movlw	91
 15725  000432  6F02               	movwf	(Terminal@UsbTxBuffer+2)& (0+255),b
 15726                           
 15727                           ; BSR set to: 2
 15728                           ;term.c: 624: UsbTxBuffer[3] = Addr[0];
 15729  000434  C3A9  F203         	movff	Terminal@Addr,Terminal@UsbTxBuffer+3
 15730                           
 15731                           ; BSR set to: 2
 15732                           ;term.c: 625: UsbTxBuffer[4] = Addr[1];
 15733  000438  C3AA  F204         	movff	Terminal@Addr+1,Terminal@UsbTxBuffer+4
 15734                           
 15735                           ;term.c: 626: UsbTxBuffer[5] = ']';
 15736  00043C  0E5D               	movlw	93
 15737  00043E  6F05               	movwf	(Terminal@UsbTxBuffer+5)& (0+255),b
 15738                           
 15739                           ;term.c: 627: UsbTxBuffer[6] = ':';
 15740  000440  0E3A               	movlw	58
 15741  000442  6F06               	movwf	(Terminal@UsbTxBuffer+6)& (0+255),b
 15742                           
 15743                           ; BSR set to: 2
 15744                           ;term.c: 628: putUSBUSART(UsbTxBuffer,7);
 15745  000444  0E00               	movlw	low Terminal@UsbTxBuffer
 15746  000446  0100               	movlb	0	; () banked
 15747  000448  6F83               	movwf	putUSBUSART@data& (0+255),b
 15748  00044A  0E02               	movlw	high Terminal@UsbTxBuffer
 15749  00044C  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 15750  00044E  0E07               	movlw	7
 15751  000450  6F85               	movwf	putUSBUSART@length& (0+255),b
 15752  000452  EC8A  F034         	call	_putUSBUSART	;wreg free
 15753                           
 15754                           ;term.c: 631: TermState = Term_ReadSlvI2cData;
 15755  000456  0E02               	movlw	2
 15756  000458  0102               	movlb	2	; () banked
 15757  00045A  6FED               	movwf	Terminal@TermState& (0+255),b
 15758                           
 15759                           ; BSR set to: 2
 15760                           ;term.c: 632: }
 15761                           ;term.c: 633: break;
 15762  00045C  0012               	return	
 15763  00045E                     
 15764                           ; BSR set to: 2
 15765                           ;term.c: 637: if (I2cSlv_I2cReadMsgSts() == MessageReceived)
 15766                           
 15767                           ; BSR set to: 2
 15768  00045E  ECAC  F034         	call	_I2cSlv_I2cReadMsgSts	;wreg free
 15769  000462  06E8               	decf	wreg,f,c
 15770  000464  A4D8               	btfss	status,2,c
 15771  000466  D088               	goto	l2444
 15772                           
 15773                           ;term.c: 638: {
 15774                           ;term.c: 640: if (FormatOption == 1u)
 15775  000468  0102               	movlb	2	; () banked
 15776  00046A  05EA               	decf	Terminal@FormatOption& (0+255),w,b
 15777  00046C  A4D8               	btfss	status,2,c
 15778  00046E  D027               	goto	u14370
 15779                           
 15780                           ; BSR set to: 2
 15781                           ;term.c: 641: {
 15782                           ;term.c: 643: for (Index = 0; Index <= PackageLen; Index++)
 15783  000470  0E00               	movlw	0
 15784  000472  0100               	movlb	0	; () banked
 15785  000474  6FA6               	movwf	Terminal@Index& (0+255),b
 15786  000476  D01E               	goto	l2446
 15787  000478                     
 15788                           ;term.c: 644: {
 15789                           ;term.c: 645: itoa(((void*)&(Payload[Index])),TermRxBuffer[Index],10);
 15790                           
 15791                           ; BSR set to: 0
 15792  000478  0100               	movlb	0	; () banked
 15793  00047A  51A6               	movf	Terminal@Index& (0+255),w,b
 15794  00047C  0D04               	mullw	4
 15795  00047E  0E66               	movlw	low Terminal@Payload
 15796  000480  24F3               	addwf	prodl,w,c
 15797  000482  6F93               	movwf	itoa@buf& (0+255),b
 15798  000484  0E07               	movlw	high Terminal@Payload
 15799  000486  20F4               	addwfc	prodh,w,c
 15800  000488  6F94               	movwf	(itoa@buf+1)& (0+255),b
 15801  00048A  51A6               	movf	Terminal@Index& (0+255),w,b
 15802  00048C  0D01               	mullw	1
 15803  00048E  0E40               	movlw	low Terminal@TermRxBuffer
 15804  000490  24F3               	addwf	prodl,w,c
 15805  000492  6ED9               	movwf	fsr2l,c
 15806  000494  0E05               	movlw	high Terminal@TermRxBuffer
 15807  000496  20F4               	addwfc	prodh,w,c
 15808  000498  6EDA               	movwf	fsr2h,c
 15809  00049A  50DF               	movf	indf2,w,c
 15810  00049C  6FA2               	movwf	??_Terminal& (0+255),b
 15811  00049E  51A2               	movf	??_Terminal& (0+255),w,b
 15812  0004A0  6F95               	movwf	itoa@val& (0+255),b
 15813  0004A2  6B96               	clrf	(itoa@val+1)& (0+255),b
 15814  0004A4  0E00               	movlw	0
 15815  0004A6  6F98               	movwf	(itoa@base+1)& (0+255),b
 15816  0004A8  0E0A               	movlw	10
 15817  0004AA  6F97               	movwf	itoa@base& (0+255),b
 15818  0004AC  EC04  F031         	call	_itoa	;wreg free
 15819  0004B0  0100               	movlb	0	; () banked
 15820  0004B2  2BA6               	incf	Terminal@Index& (0+255),f,b
 15821  0004B4                     l2446:
 15822                           
 15823                           ; BSR set to: 0
 15824                           
 15825                           ; BSR set to: 0
 15826  0004B4  51A6               	movf	Terminal@Index& (0+255),w,b
 15827  0004B6  0102               	movlb	2	; () banked
 15828  0004B8  5DEC               	subwf	Terminal@PackageLen& (0+255),w,b
 15829  0004BA  B0D8               	btfsc	status,0,c
 15830  0004BC  D7DD               	goto	l2447
 15831  0004BE                     u14370:
 15832                           
 15833                           ; BSR set to: 2
 15834                           ;term.c: 646: }
 15835                           ;term.c: 647: }
 15836                           ;term.c: 650: if((cdc_trf_state == 0))
 15837                           
 15838                           ; BSR set to: 2
 15839                           
 15840                           ; BSR set to: 2
 15841  0004BE  0100               	movlb	0	; () banked
 15842  0004C0  51C8               	movf	_cdc_trf_state& (0+255),w,b
 15843  0004C2  A4D8               	btfss	status,2,c
 15844  0004C4  0012               	return	
 15845                           
 15846                           ; BSR set to: 0
 15847                           ;term.c: 651: {
 15848                           ;term.c: 653: if (FormatOption == 1u)
 15849  0004C6  0102               	movlb	2	; () banked
 15850  0004C8  05EA               	decf	Terminal@FormatOption& (0+255),w,b
 15851  0004CA  A4D8               	btfss	status,2,c
 15852  0004CC  D02B               	goto	l2450
 15853                           
 15854                           ; BSR set to: 2
 15855                           ;term.c: 654: {
 15856                           ;term.c: 655: Payload[(2*PackageLen)].Byte[3] = '\r';
 15857  0004CE  51EC               	movf	Terminal@PackageLen& (0+255),w,b
 15858  0004D0  0D08               	mullw	8
 15859  0004D2  0E03               	movlw	3
 15860  0004D4  26F3               	addwf	prodl,f,c
 15861  0004D6  0E00               	movlw	0
 15862  0004D8  22F4               	addwfc	prodh,f,c
 15863  0004DA  0E66               	movlw	low Terminal@Payload
 15864  0004DC  24F3               	addwf	prodl,w,c
 15865  0004DE  6ED9               	movwf	fsr2l,c
 15866  0004E0  0E07               	movlw	high Terminal@Payload
 15867  0004E2  20F4               	addwfc	prodh,w,c
 15868  0004E4  6EDA               	movwf	fsr2h,c
 15869  0004E6  0E0D               	movlw	13
 15870  0004E8  6EDF               	movwf	indf2,c
 15871                           
 15872                           ;term.c: 656: Payload[(2*PackageLen)].Byte[2] = '\n';
 15873  0004EA  51EC               	movf	Terminal@PackageLen& (0+255),w,b
 15874  0004EC  0D08               	mullw	8
 15875  0004EE  0E02               	movlw	2
 15876  0004F0  26F3               	addwf	prodl,f,c
 15877  0004F2  0E00               	movlw	0
 15878  0004F4  22F4               	addwfc	prodh,f,c
 15879  0004F6  0E66               	movlw	low Terminal@Payload
 15880  0004F8  24F3               	addwf	prodl,w,c
 15881  0004FA  6ED9               	movwf	fsr2l,c
 15882  0004FC  0E07               	movlw	high Terminal@Payload
 15883  0004FE  20F4               	addwfc	prodh,w,c
 15884  000500  6EDA               	movwf	fsr2h,c
 15885  000502  0E0A               	movlw	10
 15886  000504  6EDF               	movwf	indf2,c
 15887                           
 15888                           ; BSR set to: 2
 15889                           ;term.c: 658: putUSBUSART((void*)Payload,(2*PackageLen) + 4);
 15890  000506  0E66               	movlw	low Terminal@Payload
 15891  000508  0100               	movlb	0	; () banked
 15892  00050A  6F83               	movwf	putUSBUSART@data& (0+255),b
 15893  00050C  0E07               	movlw	high Terminal@Payload
 15894  00050E  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 15895  000510  0102               	movlb	2	; () banked
 15896  000512  51EC               	movf	Terminal@PackageLen& (0+255),w,b
 15897  000514  0D02               	mullw	2
 15898  000516  50F3               	movf	prodl,w,c
 15899  000518  0F04               	addlw	4
 15900  00051A  0100               	movlb	0	; () banked
 15901  00051C  6F85               	movwf	putUSBUSART@length& (0+255),b
 15902  00051E  EC8A  F034         	call	_putUSBUSART	;wreg free
 15903                           
 15904                           ;term.c: 659: }
 15905  000522  D026               	goto	l2451
 15906  000524                     l2450:
 15907                           
 15908                           ;term.c: 660: else
 15909                           ;term.c: 661: {
 15910                           ;term.c: 662: TermRxBuffer[PackageLen] = '\r';
 15911  000524  0102               	movlb	2	; () banked
 15912  000526  51EC               	movf	Terminal@PackageLen& (0+255),w,b
 15913  000528  0D01               	mullw	1
 15914  00052A  0E40               	movlw	low Terminal@TermRxBuffer
 15915  00052C  24F3               	addwf	prodl,w,c
 15916  00052E  6ED9               	movwf	fsr2l,c
 15917  000530  0E05               	movlw	high Terminal@TermRxBuffer
 15918  000532  20F4               	addwfc	prodh,w,c
 15919  000534  6EDA               	movwf	fsr2h,c
 15920  000536  0E0D               	movlw	13
 15921  000538  6EDF               	movwf	indf2,c
 15922                           
 15923                           ; BSR set to: 2
 15924                           ;term.c: 663: TermRxBuffer[PackageLen + 1] = '\n';
 15925  00053A  51EC               	movf	Terminal@PackageLen& (0+255),w,b
 15926  00053C  0100               	movlb	0	; () banked
 15927  00053E  6FA2               	movwf	??_Terminal& (0+255),b
 15928  000540  6BA3               	clrf	(??_Terminal+1)& (0+255),b
 15929  000542  0E01               	movlw	1
 15930  000544  27A2               	addwf	??_Terminal& (0+255),f,b
 15931  000546  0E00               	movlw	0
 15932  000548  23A3               	addwfc	(??_Terminal+1)& (0+255),f,b
 15933  00054A  0E40               	movlw	low Terminal@TermRxBuffer
 15934  00054C  25A2               	addwf	??_Terminal& (0+255),w,b
 15935  00054E  6ED9               	movwf	fsr2l,c
 15936  000550  0E05               	movlw	high Terminal@TermRxBuffer
 15937  000552  21A3               	addwfc	(??_Terminal+1)& (0+255),w,b
 15938  000554  6EDA               	movwf	fsr2h,c
 15939  000556  0E0A               	movlw	10
 15940  000558  6EDF               	movwf	indf2,c
 15941                           
 15942                           ; BSR set to: 0
 15943                           ;term.c: 665: putUSBUSART(TermRxBuffer,PackageLen + 2);
 15944  00055A  0E40               	movlw	low Terminal@TermRxBuffer
 15945  00055C  6F83               	movwf	putUSBUSART@data& (0+255),b
 15946  00055E  0E05               	movlw	high Terminal@TermRxBuffer
 15947  000560  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 15948  000562  0102               	movlb	2	; () banked
 15949  000564  51EC               	movf	Terminal@PackageLen& (0+255),w,b
 15950  000566  0F02               	addlw	2
 15951  000568  0100               	movlb	0	; () banked
 15952  00056A  6F85               	movwf	putUSBUSART@length& (0+255),b
 15953  00056C  EC8A  F034         	call	_putUSBUSART	;wreg free
 15954  000570                     l2451:
 15955                           
 15956                           ;term.c: 666: }
 15957                           ;term.c: 668: TermState = Term_GetData;
 15958  000570  0E00               	movlw	0
 15959  000572  0102               	movlb	2	; () banked
 15960  000574  6FED               	movwf	Terminal@TermState& (0+255),b
 15961                           
 15962                           ; BSR set to: 2
 15963                           ;term.c: 669: }
 15964                           ;term.c: 670: }
 15965  000576  0012               	return	
 15966  000578                     l2444:
 15967                           
 15968                           ;term.c: 671: else
 15969                           ;term.c: 672: {
 15970                           ;term.c: 674: if (OsTmr_Wait(&SwTimer,3000u) == DelayExpired)
 15971                           
 15972                           ; BSR set to: 2
 15973  000578  0ED0               	movlw	low Terminal@SwTimer
 15974  00057A  0100               	movlb	0	; () banked
 15975  00057C  6F9B               	movwf	OsTmr_Wait@WaitTimer& (0+255),b
 15976  00057E  0E04               	movlw	high Terminal@SwTimer
 15977  000580  6F9C               	movwf	(OsTmr_Wait@WaitTimer+1)& (0+255),b
 15978  000582  0EB8               	movlw	184
 15979  000584  6F9D               	movwf	OsTmr_Wait@DelayMs& (0+255),b
 15980  000586  0E0B               	movlw	11
 15981  000588  6F9E               	movwf	(OsTmr_Wait@DelayMs+1)& (0+255),b
 15982  00058A  0E00               	movlw	0
 15983  00058C  6F9F               	movwf	(OsTmr_Wait@DelayMs+2)& (0+255),b
 15984  00058E  0E00               	movlw	0
 15985  000590  6FA0               	movwf	(OsTmr_Wait@DelayMs+3)& (0+255),b
 15986  000592  EC03  F02A         	call	_OsTmr_Wait	;wreg free
 15987  000596  06E8               	decf	wreg,f,c
 15988  000598  A4D8               	btfss	status,2,c
 15989  00059A  0012               	return	
 15990                           
 15991                           ;term.c: 675: {
 15992                           ;term.c: 677: if((cdc_trf_state == 0))
 15993  00059C  0100               	movlb	0	; () banked
 15994  00059E  51C8               	movf	_cdc_trf_state& (0+255),w,b
 15995  0005A0  A4D8               	btfss	status,2,c
 15996  0005A2  0012               	return	
 15997                           
 15998                           ; BSR set to: 0
 15999                           ;term.c: 678: {
 16000                           ;term.c: 679: strcpy(UsbTxBuffer," Lazy device...you've been timed-out!!!\r\n");
 16001  0005A4  0E00               	movlw	low Terminal@UsbTxBuffer
 16002  0005A6  6F7D               	movwf	strcpy@to& (0+255),b
 16003  0005A8  0E02               	movlw	high Terminal@UsbTxBuffer
 16004  0005AA  6F7E               	movwf	(strcpy@to+1)& (0+255),b
 16005  0005AC  0E5F               	movlw	low STR_21
 16006  0005AE  6F7F               	movwf	strcpy@from& (0+255),b
 16007  0005B0  0EFE               	movlw	high STR_21
 16008  0005B2  6F80               	movwf	(strcpy@from+1)& (0+255),b
 16009  0005B4  EC01  F033         	call	_strcpy	;wreg free
 16010                           
 16011                           ;term.c: 680: putUSBUSART(UsbTxBuffer,sizeof(" Lazy device...you've been timed-out!!!\r\
      +                          n")-1);
 16012  0005B8  0E00               	movlw	low Terminal@UsbTxBuffer
 16013  0005BA  0100               	movlb	0	; () banked
 16014  0005BC  6F83               	movwf	putUSBUSART@data& (0+255),b
 16015  0005BE  0E02               	movlw	high Terminal@UsbTxBuffer
 16016  0005C0  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 16017  0005C2  0E29               	movlw	41
 16018  0005C4  6F85               	movwf	putUSBUSART@length& (0+255),b
 16019  0005C6  EC8A  F034         	call	_putUSBUSART	;wreg free
 16020                           
 16021                           ;term.c: 682: TermState = Term_GetData;
 16022  0005CA  0E00               	movlw	0
 16023  0005CC  0102               	movlb	2	; () banked
 16024  0005CE  6FED               	movwf	Terminal@TermState& (0+255),b
 16025                           
 16026                           ; BSR set to: 2
 16027                           ;term.c: 693: }
 16028                           
 16029                           ; BSR set to: 2
 16030                           ;term.c: 692: break;
 16031                           
 16032                           ;term.c: 691: default:
 16033                           
 16034                           ; BSR set to: 2
 16035                           ;term.c: 689: break;
 16036                           
 16037                           ;term.c: 688: case Term_ReadSlvUartData:
 16038                           
 16039                           ; BSR set to: 2
 16040                           ;term.c: 683: }
 16041                           ;term.c: 684: }
 16042                           ;term.c: 685: }
 16043                           ;term.c: 686: break;
 16044                           
 16045                           ; BSR set to: 2
 16046                           
 16047                           ; BSR set to: 2
 16048  0005D0  0012               	return	
 16049  0005D2                     l2405:
 16050                           
 16051                           ; BSR set to: 2
 16052  0005D2  0102               	movlb	2	; () banked
 16053  0005D4  51ED               	movf	Terminal@TermState& (0+255),w,b
 16054                           
 16055                           ; Switch size 1, requested type "space"
 16056                           ; Number of cases is 4, Range of values is 0 to 3
 16057                           ; switch strategies available:
 16058                           ; Name         Instructions Cycles
 16059                           ; simple_byte           13     7 (average)
 16060                           ;	Chosen strategy is simple_byte
 16061  0005D6  0A00               	xorlw	0	; case 0
 16062  0005D8  B4D8               	btfsc	status,2,c
 16063  0005DA  D583               	goto	l2406
 16064  0005DC  0A01               	xorlw	1	; case 1
 16065  0005DE  B4D8               	btfsc	status,2,c
 16066  0005E0  D71E               	goto	l2441
 16067  0005E2  0A03               	xorlw	3	; case 2
 16068  0005E4  B4D8               	btfsc	status,2,c
 16069  0005E6  D73B               	goto	l2443
 16070  0005E8  0A01               	xorlw	1	; case 3
 16071  0005EA  0012               	return	
 16072  0005EC                     __end_of_Terminal:
 16073                           	opt stack 0
 16074                           tosu	equ	0xFFF
 16075                           tosh	equ	0xFFE
 16076                           tosl	equ	0xFFD
 16077                           pclath	equ	0xFFA
 16078                           tblptru	equ	0xFF8
 16079                           tblptrh	equ	0xFF7
 16080                           tblptrl	equ	0xFF6
 16081                           tablat	equ	0xFF5
 16082                           prodh	equ	0xFF4
 16083                           prodl	equ	0xFF3
 16084                           intcon	equ	0xFF2
 16085                           intcon2	equ	0xFF1
 16086                           intcon3	equ	0xFF0
 16087                           indf0	equ	0xFEF
 16088                           postinc0	equ	0xFEE
 16089                           plusw0	equ	0xFEB
 16090                           fsr0h	equ	0xFEA
 16091                           fsr0l	equ	0xFE9
 16092                           wreg	equ	0xFE8
 16093                           indf1	equ	0xFE7
 16094                           postinc1	equ	0xFE6
 16095                           postdec1	equ	0xFE5
 16096                           fsr1h	equ	0xFE2
 16097                           fsr1l	equ	0xFE1
 16098                           indf2	equ	0xFDF
 16099                           postinc2	equ	0xFDE
 16100                           postdec2	equ	0xFDD
 16101                           plusw2	equ	0xFDB
 16102                           fsr2h	equ	0xFDA
 16103                           fsr2l	equ	0xFD9
 16104                           status	equ	0xFD8
 16105                           
 16106 ;; *************** function _xtoi *****************
 16107 ;; Defined at:
 16108 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/xtoi.c"
 16109 ;; Parameters:    Size  Location     Type
 16110 ;;  s               2   35[BANK0 ] PTR const unsigned char 
 16111 ;;		 -> Terminal@Addr(4), 
 16112 ;; Auto vars:     Size  Location     Type
 16113 ;;  val             2   40[BANK0 ] unsigned int 
 16114 ;;  c               1   42[BANK0 ] unsigned char 
 16115 ;;  sign            1   39[BANK0 ] unsigned char 
 16116 ;; Return value:  Size  Location     Type
 16117 ;;                  2   35[BANK0 ] unsigned int 
 16118 ;; Registers used:
 16119 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16120 ;; Tracked objects:
 16121 ;;		On entry : 0/0
 16122 ;;		On exit  : 0/0
 16123 ;;		Unchanged: 0/0
 16124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16125 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16126 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16127 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16128 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16129 ;;Total ram usage:        8 bytes
 16130 ;; Hardware stack levels used:    1
 16131 ;; Hardware stack levels required when called:   13
 16132 ;; This function calls:
 16133 ;;		_isdigit
 16134 ;;		_isspace
 16135 ;;		_isupper
 16136 ;;		_isxdigit
 16137 ;;		_tolower
 16138 ;; This function is called by:
 16139 ;;		_Terminal
 16140 ;; This function uses a non-reentrant model
 16141 ;;
 16142                           
 16143                           	psect	text61
 16144  00362A                     __ptext61:
 16145                           	opt stack 0
 16146  00362A                     _xtoi:
 16147                           	opt stack 12
 16148                           
 16149                           ;incstack = 0
 16150  00362A  0E00               	movlw	0
 16151  00362C  0100               	movlb	0	; () banked
 16152  00362E  6F87               	movwf	xtoi@sign& (0+255),b
 16153  003630  0E00               	movlw	0
 16154  003632  6F89               	movwf	(xtoi@val+1)& (0+255),b
 16155  003634  0E00               	movlw	0
 16156  003636  6F88               	movwf	xtoi@val& (0+255),b
 16157  003638  D003               	goto	l3609
 16158  00363A                     
 16159                           ; BSR set to: 0
 16160  00363A  0100               	movlb	0	; () banked
 16161  00363C  4B83               	infsnz	xtoi@s& (0+255),f,b
 16162  00363E  2B84               	incf	(xtoi@s+1)& (0+255),f,b
 16163  003640                     l3609:
 16164                           
 16165                           ; BSR set to: 0
 16166                           
 16167                           ; BSR set to: 0
 16168  003640  C083  FFD9         	movff	xtoi@s,fsr2l
 16169  003644  C084  FFDA         	movff	xtoi@s+1,fsr2h
 16170  003648  50DF               	movf	indf2,w,c
 16171  00364A  ECD3  F033         	call	_isspace
 16172  00364E  B0D8               	btfsc	status,0,c
 16173  003650  D7F4               	goto	l3610
 16174  003652  C083  FFD9         	movff	xtoi@s,fsr2l
 16175  003656  C084  FFDA         	movff	xtoi@s+1,fsr2h
 16176  00365A  0E2D               	movlw	45
 16177  00365C  18DE               	xorwf	postinc2,w,c
 16178  00365E  A4D8               	btfss	status,2,c
 16179  003660  D003               	goto	l3612
 16180  003662  0100               	movlb	0	; () banked
 16181  003664  2B87               	incf	xtoi@sign& (0+255),f,b
 16182  003666  D009               	goto	L15
 16183  003668                     l3612:
 16184                           
 16185                           ; BSR set to: 0
 16186  003668  C083  FFD9         	movff	xtoi@s,fsr2l
 16187  00366C  C084  FFDA         	movff	xtoi@s+1,fsr2h
 16188  003670  0E2B               	movlw	43
 16189  003672  18DE               	xorwf	postinc2,w,c
 16190  003674  A4D8               	btfss	status,2,c
 16191  003676  D028               	goto	l3615
 16192  003678  0100               	movlb	0	; () banked
 16193  00367A                     L15:
 16194  00367A  4B83               	infsnz	xtoi@s& (0+255),f,b
 16195  00367C  2B84               	incf	(xtoi@s+1)& (0+255),f,b
 16196                           
 16197                           ; BSR set to: 0
 16198                           
 16199                           ; BSR set to: 0
 16200  00367E  D024               	goto	l3615
 16201  003680                     
 16202                           ; BSR set to: 0
 16203  003680  0100               	movlb	0	; () banked
 16204  003682  518A               	movf	xtoi@c& (0+255),w,b
 16205  003684  EC79  F034         	call	_isupper
 16206  003688  A0D8               	btfss	status,0,c
 16207  00368A  D006               	goto	l3617
 16208  00368C  0100               	movlb	0	; () banked
 16209  00368E  518A               	movf	xtoi@c& (0+255),w,b
 16210  003690  EC6A  F035         	call	_tolower
 16211  003694  0100               	movlb	0	; () banked
 16212  003696  6F8A               	movwf	xtoi@c& (0+255),b
 16213  003698                     l3617:
 16214  003698  0100               	movlb	0	; () banked
 16215  00369A  518A               	movf	xtoi@c& (0+255),w,b
 16216  00369C  EC9B  F034         	call	_isdigit
 16217  0036A0  A0D8               	btfss	status,0,c
 16218  0036A2  D002               	goto	l3618
 16219  0036A4  0E30               	movlw	48
 16220  0036A6  D001               	goto	L14
 16221  0036A8                     l3618:
 16222                           
 16223                           ; BSR set to: 0
 16224  0036A8  0E57               	movlw	87
 16225  0036AA                     L14:
 16226  0036AA  0100               	movlb	0	; () banked
 16227  0036AC  5F8A               	subwf	xtoi@c& (0+255),f,b
 16228                           
 16229                           ; BSR set to: 0
 16230  0036AE  3B88               	swapf	xtoi@val& (0+255),f,b
 16231  0036B0  3B89               	swapf	(xtoi@val+1)& (0+255),f,b
 16232  0036B2  0EF0               	movlw	240
 16233  0036B4  1789               	andwf	(xtoi@val+1)& (0+255),f,b
 16234  0036B6  5188               	movf	xtoi@val& (0+255),w,b
 16235  0036B8  0B0F               	andlw	15
 16236  0036BA  1389               	iorwf	(xtoi@val+1)& (0+255),f,b
 16237  0036BC  0EF0               	movlw	240
 16238  0036BE  1788               	andwf	xtoi@val& (0+255),f,b
 16239  0036C0  518A               	movf	xtoi@c& (0+255),w,b
 16240  0036C2  2788               	addwf	xtoi@val& (0+255),f,b
 16241  0036C4  0E00               	movlw	0
 16242  0036C6  2389               	addwfc	(xtoi@val+1)& (0+255),f,b
 16243  0036C8                     l3615:
 16244                           
 16245                           ; BSR set to: 0
 16246  0036C8  C083  FFD9         	movff	xtoi@s,fsr2l
 16247  0036CC  C084  FFDA         	movff	xtoi@s+1,fsr2h
 16248  0036D0  0100               	movlb	0	; () banked
 16249  0036D2  4B83               	infsnz	xtoi@s& (0+255),f,b
 16250  0036D4  2B84               	incf	(xtoi@s+1)& (0+255),f,b
 16251  0036D6  50DF               	movf	indf2,w,c
 16252  0036D8  6F8A               	movwf	xtoi@c& (0+255),b
 16253  0036DA  518A               	movf	xtoi@c& (0+255),w,b
 16254  0036DC  EC25  F032         	call	_isxdigit
 16255  0036E0  B0D8               	btfsc	status,0,c
 16256  0036E2  D7CE               	goto	l3616
 16257  0036E4  0100               	movlb	0	; () banked
 16258  0036E6  5187               	movf	xtoi@sign& (0+255),w,b
 16259  0036E8  B4D8               	btfsc	status,2,c
 16260  0036EA  D00D               	goto	l3621
 16261                           
 16262                           ; BSR set to: 0
 16263  0036EC  C088  F085         	movff	xtoi@val,??_xtoi
 16264  0036F0  C089  F086         	movff	xtoi@val+1,??_xtoi+1
 16265  0036F4  1F85               	comf	??_xtoi& (0+255),f,b
 16266  0036F6  1F86               	comf	(??_xtoi+1)& (0+255),f,b
 16267  0036F8  4B85               	infsnz	??_xtoi& (0+255),f,b
 16268  0036FA  2B86               	incf	(??_xtoi+1)& (0+255),f,b
 16269  0036FC  C085  F083         	movff	??_xtoi,?_xtoi
 16270  003700  C086  F084         	movff	??_xtoi+1,?_xtoi+1
 16271  003704  0012               	return	
 16272  003706                     l3621:
 16273                           
 16274                           ; BSR set to: 0
 16275  003706  C088  F083         	movff	xtoi@val,?_xtoi
 16276  00370A  C089  F084         	movff	xtoi@val+1,?_xtoi+1
 16277                           
 16278                           ; BSR set to: 0
 16279  00370E  0012               	return		;funcret
 16280  003710                     __end_of_xtoi:
 16281                           	opt stack 0
 16282                           tosu	equ	0xFFF
 16283                           tosh	equ	0xFFE
 16284                           tosl	equ	0xFFD
 16285                           pclath	equ	0xFFA
 16286                           tblptru	equ	0xFF8
 16287                           tblptrh	equ	0xFF7
 16288                           tblptrl	equ	0xFF6
 16289                           tablat	equ	0xFF5
 16290                           prodh	equ	0xFF4
 16291                           prodl	equ	0xFF3
 16292                           intcon	equ	0xFF2
 16293                           intcon2	equ	0xFF1
 16294                           intcon3	equ	0xFF0
 16295                           indf0	equ	0xFEF
 16296                           postinc0	equ	0xFEE
 16297                           plusw0	equ	0xFEB
 16298                           fsr0h	equ	0xFEA
 16299                           fsr0l	equ	0xFE9
 16300                           wreg	equ	0xFE8
 16301                           indf1	equ	0xFE7
 16302                           postinc1	equ	0xFE6
 16303                           postdec1	equ	0xFE5
 16304                           fsr1h	equ	0xFE2
 16305                           fsr1l	equ	0xFE1
 16306                           indf2	equ	0xFDF
 16307                           postinc2	equ	0xFDE
 16308                           postdec2	equ	0xFDD
 16309                           plusw2	equ	0xFDB
 16310                           fsr2h	equ	0xFDA
 16311                           fsr2l	equ	0xFD9
 16312                           status	equ	0xFD8
 16313                           
 16314 ;; *************** function _tolower *****************
 16315 ;; Defined at:
 16316 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/tolower.c"
 16317 ;; Parameters:    Size  Location     Type
 16318 ;;  c               1    wreg     unsigned char 
 16319 ;; Auto vars:     Size  Location     Type
 16320 ;;  c               1   29[BANK0 ] unsigned char 
 16321 ;; Return value:  Size  Location     Type
 16322 ;;                  1    wreg      unsigned char 
 16323 ;; Registers used:
 16324 ;;		wreg, status,2, status,0
 16325 ;; Tracked objects:
 16326 ;;		On entry : 0/0
 16327 ;;		On exit  : 0/0
 16328 ;;		Unchanged: 0/0
 16329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16330 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16331 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16333 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16334 ;;Total ram usage:        1 bytes
 16335 ;; Hardware stack levels used:    1
 16336 ;; Hardware stack levels required when called:   11
 16337 ;; This function calls:
 16338 ;;		Nothing
 16339 ;; This function is called by:
 16340 ;;		_xtoi
 16341 ;; This function uses a non-reentrant model
 16342 ;;
 16343                           
 16344                           	psect	text62
 16345  006AD4                     __ptext62:
 16346                           	opt stack 0
 16347  006AD4                     _tolower:
 16348                           	opt stack 13
 16349                           
 16350                           ; BSR set to: 0
 16351                           ;incstack = 0
 16352                           ;tolower@c stored from wreg
 16353  006AD4  0100               	movlb	0	; () banked
 16354  006AD6  6F7D               	movwf	tolower@c& (0+255),b
 16355  006AD8  0E5B               	movlw	91
 16356  006ADA  0100               	movlb	0	; () banked
 16357  006ADC  617D               	cpfslt	tolower@c& (0+255),b
 16358  006ADE  D004               	goto	l3668
 16359                           
 16360                           ; BSR set to: 0
 16361  006AE0  0E40               	movlw	64
 16362  006AE2  657D               	cpfsgt	tolower@c& (0+255),b
 16363  006AE4  D001               	goto	l3668
 16364                           
 16365                           ; BSR set to: 0
 16366  006AE6  8B7D               	bsf	tolower@c& (0+255),5,b
 16367  006AE8                     l3668:
 16368                           
 16369                           ; BSR set to: 0
 16370                           
 16371                           ; BSR set to: 0
 16372  006AE8  517D               	movf	tolower@c& (0+255),w,b
 16373  006AEA  0012               	return	
 16374  006AEC                     __end_of_tolower:
 16375                           	opt stack 0
 16376                           tosu	equ	0xFFF
 16377                           tosh	equ	0xFFE
 16378                           tosl	equ	0xFFD
 16379                           pclath	equ	0xFFA
 16380                           tblptru	equ	0xFF8
 16381                           tblptrh	equ	0xFF7
 16382                           tblptrl	equ	0xFF6
 16383                           tablat	equ	0xFF5
 16384                           prodh	equ	0xFF4
 16385                           prodl	equ	0xFF3
 16386                           intcon	equ	0xFF2
 16387                           intcon2	equ	0xFF1
 16388                           intcon3	equ	0xFF0
 16389                           indf0	equ	0xFEF
 16390                           postinc0	equ	0xFEE
 16391                           plusw0	equ	0xFEB
 16392                           fsr0h	equ	0xFEA
 16393                           fsr0l	equ	0xFE9
 16394                           wreg	equ	0xFE8
 16395                           indf1	equ	0xFE7
 16396                           postinc1	equ	0xFE6
 16397                           postdec1	equ	0xFE5
 16398                           fsr1h	equ	0xFE2
 16399                           fsr1l	equ	0xFE1
 16400                           indf2	equ	0xFDF
 16401                           postinc2	equ	0xFDE
 16402                           postdec2	equ	0xFDD
 16403                           plusw2	equ	0xFDB
 16404                           fsr2h	equ	0xFDA
 16405                           fsr2l	equ	0xFD9
 16406                           status	equ	0xFD8
 16407                           
 16408 ;; *************** function _isxdigit *****************
 16409 ;; Defined at:
 16410 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isxdigit.c"
 16411 ;; Parameters:    Size  Location     Type
 16412 ;;  c               1    wreg     unsigned char 
 16413 ;; Auto vars:     Size  Location     Type
 16414 ;;  c               1   34[BANK0 ] unsigned char 
 16415 ;; Return value:  Size  Location     Type
 16416 ;;		None               void
 16417 ;; Registers used:
 16418 ;;		wreg, status,2, status,0, cstack
 16419 ;; Tracked objects:
 16420 ;;		On entry : 0/0
 16421 ;;		On exit  : 0/0
 16422 ;;		Unchanged: 0/0
 16423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16424 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16425 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16426 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16427 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16428 ;;Total ram usage:        3 bytes
 16429 ;; Hardware stack levels used:    1
 16430 ;; Hardware stack levels required when called:   12
 16431 ;; This function calls:
 16432 ;;		_isdigit
 16433 ;; This function is called by:
 16434 ;;		_xtoi
 16435 ;; This function uses a non-reentrant model
 16436 ;;
 16437                           
 16438                           	psect	text63
 16439  00644A                     __ptext63:
 16440                           	opt stack 0
 16441  00644A                     _isxdigit:
 16442                           	opt stack 12
 16443                           
 16444                           ; BSR set to: 0
 16445                           ;incstack = 0
 16446                           ;isxdigit@c stored from wreg
 16447  00644A  0100               	movlb	0	; () banked
 16448  00644C  6F82               	movwf	isxdigit@c& (0+255),b
 16449  00644E  0E01               	movlw	1
 16450  006450  0100               	movlb	0	; () banked
 16451  006452  6F81               	movwf	_isxdigit$6733& (0+255),b
 16452                           
 16453                           ; BSR set to: 0
 16454  006454  0E67               	movlw	103
 16455  006456  6182               	cpfslt	isxdigit@c& (0+255),b
 16456  006458  D003               	goto	u12690
 16457                           
 16458                           ; BSR set to: 0
 16459  00645A  0E61               	movlw	97
 16460  00645C  6182               	cpfslt	isxdigit@c& (0+255),b
 16461  00645E  D00E               	goto	l3664
 16462  006460                     u12690:
 16463                           
 16464                           ; BSR set to: 0
 16465                           
 16466                           ; BSR set to: 0
 16467  006460  0E47               	movlw	71
 16468  006462  6182               	cpfslt	isxdigit@c& (0+255),b
 16469  006464  D003               	goto	u12710
 16470                           
 16471                           ; BSR set to: 0
 16472  006466  0E41               	movlw	65
 16473  006468  6182               	cpfslt	isxdigit@c& (0+255),b
 16474  00646A  D008               	goto	l3664
 16475  00646C                     u12710:
 16476                           
 16477                           ; BSR set to: 0
 16478                           
 16479                           ; BSR set to: 0
 16480  00646C  5182               	movf	isxdigit@c& (0+255),w,b
 16481  00646E  EC9B  F034         	call	_isdigit
 16482  006472  B0D8               	btfsc	status,0,c
 16483  006474  D003               	goto	l3664
 16484  006476  0E00               	movlw	0
 16485  006478  0100               	movlb	0	; () banked
 16486  00647A  6F81               	movwf	_isxdigit$6733& (0+255),b
 16487  00647C                     l3664:
 16488                           
 16489                           ; BSR set to: 0
 16490  00647C  C081  F080         	movff	_isxdigit$6733,??_isxdigit
 16491  006480  0100               	movlb	0	; () banked
 16492  006482  3180               	rrcf	??_isxdigit& (0+255),w,b
 16493  006484  0012               	return	
 16494  006486                     __end_of_isxdigit:
 16495                           	opt stack 0
 16496                           tosu	equ	0xFFF
 16497                           tosh	equ	0xFFE
 16498                           tosl	equ	0xFFD
 16499                           pclath	equ	0xFFA
 16500                           tblptru	equ	0xFF8
 16501                           tblptrh	equ	0xFF7
 16502                           tblptrl	equ	0xFF6
 16503                           tablat	equ	0xFF5
 16504                           prodh	equ	0xFF4
 16505                           prodl	equ	0xFF3
 16506                           intcon	equ	0xFF2
 16507                           intcon2	equ	0xFF1
 16508                           intcon3	equ	0xFF0
 16509                           indf0	equ	0xFEF
 16510                           postinc0	equ	0xFEE
 16511                           plusw0	equ	0xFEB
 16512                           fsr0h	equ	0xFEA
 16513                           fsr0l	equ	0xFE9
 16514                           wreg	equ	0xFE8
 16515                           indf1	equ	0xFE7
 16516                           postinc1	equ	0xFE6
 16517                           postdec1	equ	0xFE5
 16518                           fsr1h	equ	0xFE2
 16519                           fsr1l	equ	0xFE1
 16520                           indf2	equ	0xFDF
 16521                           postinc2	equ	0xFDE
 16522                           postdec2	equ	0xFDD
 16523                           plusw2	equ	0xFDB
 16524                           fsr2h	equ	0xFDA
 16525                           fsr2l	equ	0xFD9
 16526                           status	equ	0xFD8
 16527                           
 16528 ;; *************** function _strtol *****************
 16529 ;; Defined at:
 16530 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/strtol.c"
 16531 ;; Parameters:    Size  Location     Type
 16532 ;;  s               2   41[BANK0 ] PTR const unsigned char 
 16533 ;;		 -> Terminal@Payload(80), 
 16534 ;;  endptr          2   43[BANK0 ] PTR PTR unsigned char 
 16535 ;;		 -> NULL(0), 
 16536 ;;  base            2   45[BANK0 ] int 
 16537 ;; Auto vars:     Size  Location     Type
 16538 ;;  a               4   52[BANK0 ] long 
 16539 ;;  c               1   56[BANK0 ] unsigned char 
 16540 ;;  sign            1   51[BANK0 ] unsigned char 
 16541 ;; Return value:  Size  Location     Type
 16542 ;;                  4   41[BANK0 ] long 
 16543 ;; Registers used:
 16544 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16545 ;; Tracked objects:
 16546 ;;		On entry : 0/0
 16547 ;;		On exit  : 0/0
 16548 ;;		Unchanged: 0/0
 16549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16550 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16551 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16552 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16553 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16554 ;;Total ram usage:       16 bytes
 16555 ;; Hardware stack levels used:    1
 16556 ;; Hardware stack levels required when called:   13
 16557 ;; This function calls:
 16558 ;;		___lmul
 16559 ;;		_isalpha
 16560 ;;		_isdigit
 16561 ;;		_isspace
 16562 ;;		_toupper
 16563 ;; This function is called by:
 16564 ;;		_Terminal
 16565 ;; This function uses a non-reentrant model
 16566 ;;
 16567                           
 16568                           	psect	text64
 16569  00181C                     __ptext64:
 16570                           	opt stack 0
 16571  00181C                     _strtol:
 16572                           	opt stack 12
 16573                           
 16574                           ; BSR set to: 0
 16575                           ;incstack = 0
 16576  00181C  C089  FFD9         	movff	strtol@s,fsr2l
 16577  001820  C08A  FFDA         	movff	strtol@s+1,fsr2h
 16578  001824  50DF               	movf	indf2,w,c
 16579  001826  0100               	movlb	0	; () banked
 16580  001828  6F98               	movwf	strtol@c& (0+255),b
 16581                           
 16582                           ; BSR set to: 0
 16583  00182A  4B89               	infsnz	strtol@s& (0+255),f,b
 16584  00182C  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 16585                           
 16586                           ; BSR set to: 0
 16587  00182E  5198               	movf	strtol@c& (0+255),w,b
 16588  001830  ECD3  F033         	call	_isspace
 16589  001834  B0D8               	btfsc	status,0,c
 16590  001836  D7F2               	goto	_strtol
 16591  001838  0E00               	movlw	0
 16592  00183A  0100               	movlb	0	; () banked
 16593  00183C  6F94               	movwf	strtol@a& (0+255),b
 16594  00183E  0E00               	movlw	0
 16595  001840  6F95               	movwf	(strtol@a+1)& (0+255),b
 16596  001842  0E00               	movlw	0
 16597  001844  6F96               	movwf	(strtol@a+2)& (0+255),b
 16598  001846  0E00               	movlw	0
 16599  001848  6F97               	movwf	(strtol@a+3)& (0+255),b
 16600  00184A  0E00               	movlw	0
 16601  00184C  6F93               	movwf	strtol@sign& (0+255),b
 16602                           
 16603                           ; BSR set to: 0
 16604  00184E  0E2D               	movlw	45
 16605  001850  1998               	xorwf	strtol@c& (0+255),w,b
 16606  001852  A4D8               	btfss	status,2,c
 16607  001854  D003               	goto	l3571
 16608                           
 16609                           ; BSR set to: 0
 16610  001856  0E01               	movlw	1
 16611  001858  6F93               	movwf	strtol@sign& (0+255),b
 16612  00185A  D004               	goto	u13200
 16613  00185C                     l3571:
 16614                           
 16615                           ; BSR set to: 0
 16616                           
 16617                           ; BSR set to: 0
 16618  00185C  0E2B               	movlw	43
 16619  00185E  1998               	xorwf	strtol@c& (0+255),w,b
 16620  001860  A4D8               	btfss	status,2,c
 16621  001862  D008               	goto	l3573
 16622  001864                     u13200:
 16623                           
 16624                           ; BSR set to: 0
 16625  001864  C089  FFD9         	movff	strtol@s,fsr2l
 16626  001868  C08A  FFDA         	movff	strtol@s+1,fsr2h
 16627  00186C  50DF               	movf	indf2,w,c
 16628  00186E  6F98               	movwf	strtol@c& (0+255),b
 16629                           
 16630                           ; BSR set to: 0
 16631  001870  4B89               	infsnz	strtol@s& (0+255),f,b
 16632  001872  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 16633  001874                     l3573:
 16634                           
 16635                           ; BSR set to: 0
 16636                           
 16637                           ; BSR set to: 0
 16638                           
 16639                           ; BSR set to: 0
 16640  001874  0E30               	movlw	48
 16641  001876  1998               	xorwf	strtol@c& (0+255),w,b
 16642  001878  A4D8               	btfss	status,2,c
 16643  00187A  D02E               	goto	l3581
 16644                           
 16645                           ; BSR set to: 0
 16646  00187C  C089  FFD9         	movff	strtol@s,fsr2l
 16647  001880  C08A  FFDA         	movff	strtol@s+1,fsr2h
 16648  001884  50DF               	movf	indf2,w,c
 16649  001886  6F98               	movwf	strtol@c& (0+255),b
 16650                           
 16651                           ; BSR set to: 0
 16652  001888  4B89               	infsnz	strtol@s& (0+255),f,b
 16653  00188A  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 16654                           
 16655                           ; BSR set to: 0
 16656  00188C  518D               	movf	strtol@base& (0+255),w,b
 16657  00188E  118E               	iorwf	(strtol@base+1)& (0+255),w,b
 16658  001890  B4D8               	btfsc	status,2,c
 16659  001892  D005               	goto	u13230
 16660                           
 16661                           ; BSR set to: 0
 16662  001894  0E10               	movlw	16
 16663  001896  198D               	xorwf	strtol@base& (0+255),w,b
 16664  001898  118E               	iorwf	(strtol@base+1)& (0+255),w,b
 16665  00189A  A4D8               	btfss	status,2,c
 16666  00189C  D015               	goto	l3575
 16667  00189E                     u13230:
 16668                           
 16669                           ; BSR set to: 0
 16670                           
 16671                           ; BSR set to: 0
 16672  00189E  0E78               	movlw	120
 16673  0018A0  1998               	xorwf	strtol@c& (0+255),w,b
 16674  0018A2  B4D8               	btfsc	status,2,c
 16675  0018A4  D004               	goto	u13250
 16676                           
 16677                           ; BSR set to: 0
 16678  0018A6  0E58               	movlw	88
 16679  0018A8  1998               	xorwf	strtol@c& (0+255),w,b
 16680  0018AA  A4D8               	btfss	status,2,c
 16681  0018AC  D00D               	goto	l3575
 16682  0018AE                     u13250:
 16683                           
 16684                           ; BSR set to: 0
 16685                           
 16686                           ; BSR set to: 0
 16687  0018AE  0E00               	movlw	0
 16688  0018B0  6F8E               	movwf	(strtol@base+1)& (0+255),b
 16689  0018B2  0E10               	movlw	16
 16690  0018B4  6F8D               	movwf	strtol@base& (0+255),b
 16691                           
 16692                           ; BSR set to: 0
 16693  0018B6  C089  FFD9         	movff	strtol@s,fsr2l
 16694  0018BA  C08A  FFDA         	movff	strtol@s+1,fsr2h
 16695  0018BE  50DF               	movf	indf2,w,c
 16696  0018C0  6F98               	movwf	strtol@c& (0+255),b
 16697                           
 16698                           ; BSR set to: 0
 16699  0018C2  4B89               	infsnz	strtol@s& (0+255),f,b
 16700  0018C4  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 16701  0018C6  D008               	goto	l3581
 16702  0018C8                     l3575:
 16703                           
 16704                           ; BSR set to: 0
 16705                           
 16706                           ; BSR set to: 0
 16707  0018C8  518D               	movf	strtol@base& (0+255),w,b
 16708  0018CA  118E               	iorwf	(strtol@base+1)& (0+255),w,b
 16709  0018CC  A4D8               	btfss	status,2,c
 16710  0018CE  D004               	goto	l3581
 16711                           
 16712                           ; BSR set to: 0
 16713  0018D0  0E00               	movlw	0
 16714  0018D2  6F8E               	movwf	(strtol@base+1)& (0+255),b
 16715  0018D4  0E08               	movlw	8
 16716  0018D6  6F8D               	movwf	strtol@base& (0+255),b
 16717  0018D8                     l3581:
 16718                           
 16719                           ; BSR set to: 0
 16720                           
 16721                           ; BSR set to: 0
 16722                           
 16723                           ; BSR set to: 0
 16724                           
 16725                           ; BSR set to: 0
 16726  0018D8  518D               	movf	strtol@base& (0+255),w,b
 16727  0018DA  118E               	iorwf	(strtol@base+1)& (0+255),w,b
 16728  0018DC  A4D8               	btfss	status,2,c
 16729  0018DE  D004               	goto	l3582
 16730                           
 16731                           ; BSR set to: 0
 16732  0018E0  0E00               	movlw	0
 16733  0018E2  6F8E               	movwf	(strtol@base+1)& (0+255),b
 16734  0018E4  0E0A               	movlw	10
 16735  0018E6  6F8D               	movwf	strtol@base& (0+255),b
 16736  0018E8                     l3582:
 16737                           
 16738                           ; BSR set to: 0
 16739                           
 16740                           ; BSR set to: 0
 16741                           
 16742                           ; BSR set to: 0
 16743  0018E8  5198               	movf	strtol@c& (0+255),w,b
 16744  0018EA  EC4A  F033         	call	_isalpha
 16745  0018EE  A0D8               	btfss	status,0,c
 16746  0018F0  D008               	goto	l3584
 16747  0018F2  0100               	movlb	0	; () banked
 16748  0018F4  5198               	movf	strtol@c& (0+255),w,b
 16749  0018F6  EC76  F035         	call	_toupper
 16750  0018FA  0FC9               	addlw	201
 16751  0018FC  0100               	movlb	0	; () banked
 16752  0018FE  6F98               	movwf	strtol@c& (0+255),b
 16753  001900  D009               	goto	l3587
 16754  001902                     l3584:
 16755                           
 16756                           ; BSR set to: 0
 16757  001902  0100               	movlb	0	; () banked
 16758  001904  5198               	movf	strtol@c& (0+255),w,b
 16759  001906  EC9B  F034         	call	_isdigit
 16760  00190A  A0D8               	btfss	status,0,c
 16761  00190C  D039               	goto	l3588
 16762  00190E  0E30               	movlw	48
 16763  001910  0100               	movlb	0	; () banked
 16764  001912  5F98               	subwf	strtol@c& (0+255),f,b
 16765  001914                     l3587:
 16766                           
 16767                           ; BSR set to: 0
 16768                           
 16769                           ; BSR set to: 0
 16770                           
 16771                           ; BSR set to: 0
 16772  001914  5198               	movf	strtol@c& (0+255),w,b
 16773  001916  6F8F               	movwf	??_strtol& (0+255),b
 16774  001918  6B90               	clrf	(??_strtol+1)& (0+255),b
 16775  00191A  518D               	movf	strtol@base& (0+255),w,b
 16776  00191C  5D8F               	subwf	??_strtol& (0+255),w,b
 16777  00191E  5190               	movf	(??_strtol+1)& (0+255),w,b
 16778  001920  0A80               	xorlw	128
 16779  001922  6F91               	movwf	(??_strtol+2)& (0+255),b
 16780  001924  518E               	movf	(strtol@base+1)& (0+255),w,b
 16781  001926  0A80               	xorlw	128
 16782  001928  5991               	subwfb	(??_strtol+2)& (0+255),w,b
 16783  00192A  B0D8               	btfsc	status,0,c
 16784  00192C  D029               	goto	l3588
 16785                           
 16786                           ; BSR set to: 0
 16787                           
 16788                           ; BSR set to: 0
 16789                           
 16790                           ; BSR set to: 0
 16791  00192E  C08D  F07D         	movff	strtol@base,___lmul@multiplier
 16792  001932  C08E  F07E         	movff	strtol@base+1,___lmul@multiplier+1
 16793  001936  0E00               	movlw	0
 16794  001938  BF7E               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
 16795  00193A  0EFF               	movlw	-1
 16796  00193C  6F7F               	movwf	(___lmul@multiplier+2)& (0+255),b
 16797  00193E  6F80               	movwf	(___lmul@multiplier+3)& (0+255),b
 16798  001940  C094  F081         	movff	strtol@a,___lmul@multiplicand
 16799  001944  C095  F082         	movff	strtol@a+1,___lmul@multiplicand+1
 16800  001948  C096  F083         	movff	strtol@a+2,___lmul@multiplicand+2
 16801  00194C  C097  F084         	movff	strtol@a+3,___lmul@multiplicand+3
 16802  001950  EC49  F02D         	call	___lmul	;wreg free
 16803  001954  0100               	movlb	0	; () banked
 16804  001956  5198               	movf	strtol@c& (0+255),w,b
 16805  001958  257D               	addwf	?___lmul& (0+255),w,b
 16806  00195A  6F94               	movwf	strtol@a& (0+255),b
 16807  00195C  0E00               	movlw	0
 16808  00195E  217E               	addwfc	(?___lmul+1)& (0+255),w,b
 16809  001960  6F95               	movwf	(strtol@a+1)& (0+255),b
 16810  001962  0E00               	movlw	0
 16811  001964  217F               	addwfc	(?___lmul+2)& (0+255),w,b
 16812  001966  6F96               	movwf	(strtol@a+2)& (0+255),b
 16813  001968  0E00               	movlw	0
 16814  00196A  2180               	addwfc	(?___lmul+3)& (0+255),w,b
 16815  00196C  6F97               	movwf	(strtol@a+3)& (0+255),b
 16816                           
 16817                           ; BSR set to: 0
 16818  00196E  C089  FFD9         	movff	strtol@s,fsr2l
 16819  001972  C08A  FFDA         	movff	strtol@s+1,fsr2h
 16820  001976  50DF               	movf	indf2,w,c
 16821  001978  6F98               	movwf	strtol@c& (0+255),b
 16822                           
 16823                           ; BSR set to: 0
 16824  00197A  4B89               	infsnz	strtol@s& (0+255),f,b
 16825  00197C  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 16826  00197E  D7B4               	goto	l3582
 16827  001980                     l3588:
 16828                           
 16829                           ; BSR set to: 0
 16830  001980  0100               	movlb	0	; () banked
 16831  001982  518B               	movf	strtol@endptr& (0+255),w,b
 16832  001984  118C               	iorwf	(strtol@endptr+1)& (0+255),w,b
 16833  001986  B4D8               	btfsc	status,2,c
 16834  001988  D00E               	goto	l3590
 16835                           
 16836                           ; BSR set to: 0
 16837  00198A  0EFF               	movlw	255
 16838  00198C  2589               	addwf	strtol@s& (0+255),w,b
 16839  00198E  6F8F               	movwf	??_strtol& (0+255),b
 16840  001990  0EFF               	movlw	255
 16841  001992  218A               	addwfc	(strtol@s+1)& (0+255),w,b
 16842  001994  6F90               	movwf	(??_strtol+1)& (0+255),b
 16843  001996  C08B  FFD9         	movff	strtol@endptr,fsr2l
 16844  00199A  C08C  FFDA         	movff	strtol@endptr+1,fsr2h
 16845  00199E  C08F  FFDE         	movff	??_strtol,postinc2
 16846  0019A2  C090  FFDD         	movff	??_strtol+1,postdec2
 16847  0019A6                     l3590:
 16848                           
 16849                           ; BSR set to: 0
 16850                           
 16851                           ; BSR set to: 0
 16852  0019A6  5193               	movf	strtol@sign& (0+255),w,b
 16853  0019A8  B4D8               	btfsc	status,2,c
 16854  0019AA  D01A               	goto	l3591
 16855                           
 16856                           ; BSR set to: 0
 16857  0019AC  C094  F08F         	movff	strtol@a,??_strtol
 16858  0019B0  C095  F090         	movff	strtol@a+1,??_strtol+1
 16859  0019B4  C096  F091         	movff	strtol@a+2,??_strtol+2
 16860  0019B8  C097  F092         	movff	strtol@a+3,??_strtol+3
 16861  0019BC  1F8F               	comf	??_strtol& (0+255),f,b
 16862  0019BE  1F90               	comf	(??_strtol+1)& (0+255),f,b
 16863  0019C0  1F91               	comf	(??_strtol+2)& (0+255),f,b
 16864  0019C2  1F92               	comf	(??_strtol+3)& (0+255),f,b
 16865  0019C4  2B8F               	incf	??_strtol& (0+255),f,b
 16866  0019C6  0E00               	movlw	0
 16867  0019C8  2390               	addwfc	(??_strtol+1)& (0+255),f,b
 16868  0019CA  2391               	addwfc	(??_strtol+2)& (0+255),f,b
 16869  0019CC  2392               	addwfc	(??_strtol+3)& (0+255),f,b
 16870  0019CE  C08F  F089         	movff	??_strtol,?_strtol
 16871  0019D2  C090  F08A         	movff	??_strtol+1,?_strtol+1
 16872  0019D6  C091  F08B         	movff	??_strtol+2,?_strtol+2
 16873  0019DA  C092  F08C         	movff	??_strtol+3,?_strtol+3
 16874                           
 16875                           ; BSR set to: 0
 16876  0019DE  0012               	return	
 16877  0019E0                     l3591:
 16878                           
 16879                           ; BSR set to: 0
 16880  0019E0  C094  F089         	movff	strtol@a,?_strtol
 16881  0019E4  C095  F08A         	movff	strtol@a+1,?_strtol+1
 16882  0019E8  C096  F08B         	movff	strtol@a+2,?_strtol+2
 16883  0019EC  C097  F08C         	movff	strtol@a+3,?_strtol+3
 16884                           
 16885                           ; BSR set to: 0
 16886  0019F0  0012               	return		;funcret
 16887  0019F2                     __end_of_strtol:
 16888                           	opt stack 0
 16889                           tosu	equ	0xFFF
 16890                           tosh	equ	0xFFE
 16891                           tosl	equ	0xFFD
 16892                           pclath	equ	0xFFA
 16893                           tblptru	equ	0xFF8
 16894                           tblptrh	equ	0xFF7
 16895                           tblptrl	equ	0xFF6
 16896                           tablat	equ	0xFF5
 16897                           prodh	equ	0xFF4
 16898                           prodl	equ	0xFF3
 16899                           intcon	equ	0xFF2
 16900                           intcon2	equ	0xFF1
 16901                           intcon3	equ	0xFF0
 16902                           indf0	equ	0xFEF
 16903                           postinc0	equ	0xFEE
 16904                           plusw0	equ	0xFEB
 16905                           fsr0h	equ	0xFEA
 16906                           fsr0l	equ	0xFE9
 16907                           wreg	equ	0xFE8
 16908                           indf1	equ	0xFE7
 16909                           postinc1	equ	0xFE6
 16910                           postdec1	equ	0xFE5
 16911                           fsr1h	equ	0xFE2
 16912                           fsr1l	equ	0xFE1
 16913                           indf2	equ	0xFDF
 16914                           postinc2	equ	0xFDE
 16915                           postdec2	equ	0xFDD
 16916                           plusw2	equ	0xFDB
 16917                           fsr2h	equ	0xFDA
 16918                           fsr2l	equ	0xFD9
 16919                           status	equ	0xFD8
 16920                           
 16921 ;; *************** function _toupper *****************
 16922 ;; Defined at:
 16923 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/toupper.c"
 16924 ;; Parameters:    Size  Location     Type
 16925 ;;  c               1    wreg     unsigned char 
 16926 ;; Auto vars:     Size  Location     Type
 16927 ;;  c               1   29[BANK0 ] unsigned char 
 16928 ;; Return value:  Size  Location     Type
 16929 ;;                  1    wreg      unsigned char 
 16930 ;; Registers used:
 16931 ;;		wreg, status,2, status,0
 16932 ;; Tracked objects:
 16933 ;;		On entry : 0/0
 16934 ;;		On exit  : 0/0
 16935 ;;		Unchanged: 0/0
 16936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16937 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16938 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16939 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16940 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16941 ;;Total ram usage:        1 bytes
 16942 ;; Hardware stack levels used:    1
 16943 ;; Hardware stack levels required when called:   11
 16944 ;; This function calls:
 16945 ;;		Nothing
 16946 ;; This function is called by:
 16947 ;;		_strtol
 16948 ;; This function uses a non-reentrant model
 16949 ;;
 16950                           
 16951                           	psect	text65
 16952  006AEC                     __ptext65:
 16953                           	opt stack 0
 16954  006AEC                     _toupper:
 16955                           	opt stack 13
 16956                           
 16957                           ; BSR set to: 0
 16958                           ;incstack = 0
 16959                           ;toupper@c stored from wreg
 16960  006AEC  0100               	movlb	0	; () banked
 16961  006AEE  6F7D               	movwf	toupper@c& (0+255),b
 16962  006AF0  0E7B               	movlw	123
 16963  006AF2  0100               	movlb	0	; () banked
 16964  006AF4  617D               	cpfslt	toupper@c& (0+255),b
 16965  006AF6  D004               	goto	l3595
 16966                           
 16967                           ; BSR set to: 0
 16968  006AF8  0E60               	movlw	96
 16969  006AFA  657D               	cpfsgt	toupper@c& (0+255),b
 16970  006AFC  D001               	goto	l3595
 16971                           
 16972                           ; BSR set to: 0
 16973  006AFE  9B7D               	bcf	toupper@c& (0+255),5,b
 16974  006B00                     l3595:
 16975                           
 16976                           ; BSR set to: 0
 16977                           
 16978                           ; BSR set to: 0
 16979  006B00  517D               	movf	toupper@c& (0+255),w,b
 16980  006B02  0012               	return	
 16981  006B04                     __end_of_toupper:
 16982                           	opt stack 0
 16983                           tosu	equ	0xFFF
 16984                           tosh	equ	0xFFE
 16985                           tosl	equ	0xFFD
 16986                           pclath	equ	0xFFA
 16987                           tblptru	equ	0xFF8
 16988                           tblptrh	equ	0xFF7
 16989                           tblptrl	equ	0xFF6
 16990                           tablat	equ	0xFF5
 16991                           prodh	equ	0xFF4
 16992                           prodl	equ	0xFF3
 16993                           intcon	equ	0xFF2
 16994                           intcon2	equ	0xFF1
 16995                           intcon3	equ	0xFF0
 16996                           indf0	equ	0xFEF
 16997                           postinc0	equ	0xFEE
 16998                           plusw0	equ	0xFEB
 16999                           fsr0h	equ	0xFEA
 17000                           fsr0l	equ	0xFE9
 17001                           wreg	equ	0xFE8
 17002                           indf1	equ	0xFE7
 17003                           postinc1	equ	0xFE6
 17004                           postdec1	equ	0xFE5
 17005                           fsr1h	equ	0xFE2
 17006                           fsr1l	equ	0xFE1
 17007                           indf2	equ	0xFDF
 17008                           postinc2	equ	0xFDE
 17009                           postdec2	equ	0xFDD
 17010                           plusw2	equ	0xFDB
 17011                           fsr2h	equ	0xFDA
 17012                           fsr2l	equ	0xFD9
 17013                           status	equ	0xFD8
 17014                           
 17015 ;; *************** function _isspace *****************
 17016 ;; Defined at:
 17017 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isspace.c"
 17018 ;; Parameters:    Size  Location     Type
 17019 ;;  c               1    wreg     unsigned char 
 17020 ;; Auto vars:     Size  Location     Type
 17021 ;;  c               1   31[BANK0 ] unsigned char 
 17022 ;; Return value:  Size  Location     Type
 17023 ;;		None               void
 17024 ;; Registers used:
 17025 ;;		wreg, status,2, status,0
 17026 ;; Tracked objects:
 17027 ;;		On entry : 0/0
 17028 ;;		On exit  : 0/0
 17029 ;;		Unchanged: 0/0
 17030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17031 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17032 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17033 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17034 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17035 ;;Total ram usage:        3 bytes
 17036 ;; Hardware stack levels used:    1
 17037 ;; Hardware stack levels required when called:   11
 17038 ;; This function calls:
 17039 ;;		Nothing
 17040 ;; This function is called by:
 17041 ;;		_strtol
 17042 ;;		_xtoi
 17043 ;; This function uses a non-reentrant model
 17044 ;;
 17045                           
 17046                           	psect	text66
 17047  0067A6                     __ptext66:
 17048                           	opt stack 0
 17049  0067A6                     _isspace:
 17050                           	opt stack 13
 17051                           
 17052                           ; BSR set to: 0
 17053                           ;incstack = 0
 17054                           ;isspace@c stored from wreg
 17055  0067A6  0100               	movlb	0	; () banked
 17056  0067A8  6F7F               	movwf	isspace@c& (0+255),b
 17057  0067AA  0E01               	movlw	1
 17058  0067AC  0100               	movlb	0	; () banked
 17059  0067AE  6F7E               	movwf	_isspace$6726& (0+255),b
 17060                           
 17061                           ; BSR set to: 0
 17062  0067B0  0E20               	movlw	32
 17063  0067B2  197F               	xorwf	isspace@c& (0+255),w,b
 17064  0067B4  B4D8               	btfsc	status,2,c
 17065  0067B6  D008               	goto	l3652
 17066                           
 17067                           ; BSR set to: 0
 17068  0067B8  0E0E               	movlw	14
 17069  0067BA  617F               	cpfslt	isspace@c& (0+255),b
 17070  0067BC  D003               	goto	u12600
 17071                           
 17072                           ; BSR set to: 0
 17073  0067BE  0E09               	movlw	9
 17074  0067C0  617F               	cpfslt	isspace@c& (0+255),b
 17075  0067C2  D002               	goto	l3652
 17076  0067C4                     u12600:
 17077                           
 17078                           ; BSR set to: 0
 17079                           
 17080                           ; BSR set to: 0
 17081  0067C4  0E00               	movlw	0
 17082  0067C6  6F7E               	movwf	_isspace$6726& (0+255),b
 17083  0067C8                     l3652:
 17084                           
 17085                           ; BSR set to: 0
 17086                           
 17087                           ; BSR set to: 0
 17088  0067C8  C07E  F07D         	movff	_isspace$6726,??_isspace
 17089  0067CC  317D               	rrcf	??_isspace& (0+255),w,b
 17090  0067CE  0012               	return	
 17091  0067D0                     __end_of_isspace:
 17092                           	opt stack 0
 17093                           tosu	equ	0xFFF
 17094                           tosh	equ	0xFFE
 17095                           tosl	equ	0xFFD
 17096                           pclath	equ	0xFFA
 17097                           tblptru	equ	0xFF8
 17098                           tblptrh	equ	0xFF7
 17099                           tblptrl	equ	0xFF6
 17100                           tablat	equ	0xFF5
 17101                           prodh	equ	0xFF4
 17102                           prodl	equ	0xFF3
 17103                           intcon	equ	0xFF2
 17104                           intcon2	equ	0xFF1
 17105                           intcon3	equ	0xFF0
 17106                           indf0	equ	0xFEF
 17107                           postinc0	equ	0xFEE
 17108                           plusw0	equ	0xFEB
 17109                           fsr0h	equ	0xFEA
 17110                           fsr0l	equ	0xFE9
 17111                           wreg	equ	0xFE8
 17112                           indf1	equ	0xFE7
 17113                           postinc1	equ	0xFE6
 17114                           postdec1	equ	0xFE5
 17115                           fsr1h	equ	0xFE2
 17116                           fsr1l	equ	0xFE1
 17117                           indf2	equ	0xFDF
 17118                           postinc2	equ	0xFDE
 17119                           postdec2	equ	0xFDD
 17120                           plusw2	equ	0xFDB
 17121                           fsr2h	equ	0xFDA
 17122                           fsr2l	equ	0xFD9
 17123                           status	equ	0xFD8
 17124                           
 17125 ;; *************** function _isalpha *****************
 17126 ;; Defined at:
 17127 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isalpha.c"
 17128 ;; Parameters:    Size  Location     Type
 17129 ;;  c               1    wreg     unsigned char 
 17130 ;; Auto vars:     Size  Location     Type
 17131 ;;  c               1   34[BANK0 ] unsigned char 
 17132 ;; Return value:  Size  Location     Type
 17133 ;;		None               void
 17134 ;; Registers used:
 17135 ;;		wreg, status,2, status,0, cstack
 17136 ;; Tracked objects:
 17137 ;;		On entry : 0/0
 17138 ;;		On exit  : 0/0
 17139 ;;		Unchanged: 0/0
 17140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17141 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17142 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17143 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17144 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17145 ;;Total ram usage:        3 bytes
 17146 ;; Hardware stack levels used:    1
 17147 ;; Hardware stack levels required when called:   12
 17148 ;; This function calls:
 17149 ;;		_isupper
 17150 ;; This function is called by:
 17151 ;;		_strtol
 17152 ;; This function uses a non-reentrant model
 17153 ;;
 17154                           
 17155                           	psect	text67
 17156  006694                     __ptext67:
 17157                           	opt stack 0
 17158  006694                     _isalpha:
 17159                           	opt stack 12
 17160                           
 17161                           ; BSR set to: 0
 17162                           ;incstack = 0
 17163                           ;isalpha@c stored from wreg
 17164  006694  0100               	movlb	0	; () banked
 17165  006696  6F82               	movwf	isalpha@c& (0+255),b
 17166  006698  0E01               	movlw	1
 17167  00669A  0100               	movlb	0	; () banked
 17168  00669C  6F81               	movwf	_isalpha$6723& (0+255),b
 17169                           
 17170                           ; BSR set to: 0
 17171  00669E  0E7B               	movlw	123
 17172  0066A0  6182               	cpfslt	isalpha@c& (0+255),b
 17173  0066A2  D003               	goto	u12620
 17174                           
 17175                           ; BSR set to: 0
 17176  0066A4  0E61               	movlw	97
 17177  0066A6  6182               	cpfslt	isalpha@c& (0+255),b
 17178  0066A8  D008               	goto	l3647
 17179  0066AA                     u12620:
 17180                           
 17181                           ; BSR set to: 0
 17182                           
 17183                           ; BSR set to: 0
 17184  0066AA  5182               	movf	isalpha@c& (0+255),w,b
 17185  0066AC  EC79  F034         	call	_isupper
 17186  0066B0  B0D8               	btfsc	status,0,c
 17187  0066B2  D003               	goto	l3647
 17188  0066B4  0E00               	movlw	0
 17189  0066B6  0100               	movlb	0	; () banked
 17190  0066B8  6F81               	movwf	_isalpha$6723& (0+255),b
 17191  0066BA                     l3647:
 17192                           
 17193                           ; BSR set to: 0
 17194  0066BA  C081  F080         	movff	_isalpha$6723,??_isalpha
 17195  0066BE  0100               	movlb	0	; () banked
 17196  0066C0  3180               	rrcf	??_isalpha& (0+255),w,b
 17197  0066C2  0012               	return	
 17198  0066C4                     __end_of_isalpha:
 17199                           	opt stack 0
 17200                           tosu	equ	0xFFF
 17201                           tosh	equ	0xFFE
 17202                           tosl	equ	0xFFD
 17203                           pclath	equ	0xFFA
 17204                           tblptru	equ	0xFF8
 17205                           tblptrh	equ	0xFF7
 17206                           tblptrl	equ	0xFF6
 17207                           tablat	equ	0xFF5
 17208                           prodh	equ	0xFF4
 17209                           prodl	equ	0xFF3
 17210                           intcon	equ	0xFF2
 17211                           intcon2	equ	0xFF1
 17212                           intcon3	equ	0xFF0
 17213                           indf0	equ	0xFEF
 17214                           postinc0	equ	0xFEE
 17215                           plusw0	equ	0xFEB
 17216                           fsr0h	equ	0xFEA
 17217                           fsr0l	equ	0xFE9
 17218                           wreg	equ	0xFE8
 17219                           indf1	equ	0xFE7
 17220                           postinc1	equ	0xFE6
 17221                           postdec1	equ	0xFE5
 17222                           fsr1h	equ	0xFE2
 17223                           fsr1l	equ	0xFE1
 17224                           indf2	equ	0xFDF
 17225                           postinc2	equ	0xFDE
 17226                           postdec2	equ	0xFDD
 17227                           plusw2	equ	0xFDB
 17228                           fsr2h	equ	0xFDA
 17229                           fsr2l	equ	0xFD9
 17230                           status	equ	0xFD8
 17231                           
 17232 ;; *************** function _isupper *****************
 17233 ;; Defined at:
 17234 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isupper.c"
 17235 ;; Parameters:    Size  Location     Type
 17236 ;;  c               1    wreg     unsigned char 
 17237 ;; Auto vars:     Size  Location     Type
 17238 ;;  c               1   31[BANK0 ] unsigned char 
 17239 ;; Return value:  Size  Location     Type
 17240 ;;		None               void
 17241 ;; Registers used:
 17242 ;;		wreg, status,2, status,0
 17243 ;; Tracked objects:
 17244 ;;		On entry : 0/0
 17245 ;;		On exit  : 0/0
 17246 ;;		Unchanged: 0/0
 17247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17248 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17249 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17250 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17251 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17252 ;;Total ram usage:        3 bytes
 17253 ;; Hardware stack levels used:    1
 17254 ;; Hardware stack levels required when called:   11
 17255 ;; This function calls:
 17256 ;;		Nothing
 17257 ;; This function is called by:
 17258 ;;		_xtoi
 17259 ;;		_isalpha
 17260 ;; This function uses a non-reentrant model
 17261 ;;
 17262                           
 17263                           	psect	text68
 17264  0068F2                     __ptext68:
 17265                           	opt stack 0
 17266  0068F2                     _isupper:
 17267                           	opt stack 13
 17268                           
 17269                           ; BSR set to: 0
 17270                           ;incstack = 0
 17271                           ;isupper@c stored from wreg
 17272  0068F2  0100               	movlb	0	; () banked
 17273  0068F4  6F7F               	movwf	isupper@c& (0+255),b
 17274  0068F6  0E00               	movlw	0
 17275  0068F8  0100               	movlb	0	; () banked
 17276  0068FA  6F7E               	movwf	_isupper$6729& (0+255),b
 17277                           
 17278                           ; BSR set to: 0
 17279  0068FC  0E5B               	movlw	91
 17280  0068FE  617F               	cpfslt	isupper@c& (0+255),b
 17281  006900  D005               	goto	l3657
 17282                           
 17283                           ; BSR set to: 0
 17284  006902  0E40               	movlw	64
 17285  006904  657F               	cpfsgt	isupper@c& (0+255),b
 17286  006906  D002               	goto	l3657
 17287                           
 17288                           ; BSR set to: 0
 17289  006908  0E01               	movlw	1
 17290  00690A  6F7E               	movwf	_isupper$6729& (0+255),b
 17291  00690C                     l3657:
 17292                           
 17293                           ; BSR set to: 0
 17294                           
 17295                           ; BSR set to: 0
 17296  00690C  C07E  F07D         	movff	_isupper$6729,??_isupper
 17297  006910  317D               	rrcf	??_isupper& (0+255),w,b
 17298  006912  0012               	return	
 17299  006914                     __end_of_isupper:
 17300                           	opt stack 0
 17301                           tosu	equ	0xFFF
 17302                           tosh	equ	0xFFE
 17303                           tosl	equ	0xFFD
 17304                           pclath	equ	0xFFA
 17305                           tblptru	equ	0xFF8
 17306                           tblptrh	equ	0xFF7
 17307                           tblptrl	equ	0xFF6
 17308                           tablat	equ	0xFF5
 17309                           prodh	equ	0xFF4
 17310                           prodl	equ	0xFF3
 17311                           intcon	equ	0xFF2
 17312                           intcon2	equ	0xFF1
 17313                           intcon3	equ	0xFF0
 17314                           indf0	equ	0xFEF
 17315                           postinc0	equ	0xFEE
 17316                           plusw0	equ	0xFEB
 17317                           fsr0h	equ	0xFEA
 17318                           fsr0l	equ	0xFE9
 17319                           wreg	equ	0xFE8
 17320                           indf1	equ	0xFE7
 17321                           postinc1	equ	0xFE6
 17322                           postdec1	equ	0xFE5
 17323                           fsr1h	equ	0xFE2
 17324                           fsr1l	equ	0xFE1
 17325                           indf2	equ	0xFDF
 17326                           postinc2	equ	0xFDE
 17327                           postdec2	equ	0xFDD
 17328                           plusw2	equ	0xFDB
 17329                           fsr2h	equ	0xFDA
 17330                           fsr2l	equ	0xFD9
 17331                           status	equ	0xFD8
 17332                           
 17333 ;; *************** function _strcpy *****************
 17334 ;; Defined at:
 17335 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/strcpy.c"
 17336 ;; Parameters:    Size  Location     Type
 17337 ;;  to              2   29[BANK0 ] PTR unsigned char 
 17338 ;;		 -> Term_MainSm@Data(50), Terminal@UsbTxBuffer(200), 
 17339 ;;  from            2   31[BANK0 ] PTR const unsigned char 
 17340 ;;		 -> STR_23(20), STR_21(42), 
 17341 ;; Auto vars:     Size  Location     Type
 17342 ;;  cp              2   33[BANK0 ] PTR unsigned char 
 17343 ;;		 -> Term_MainSm@Data(50), Terminal@UsbTxBuffer(200), 
 17344 ;; Return value:  Size  Location     Type
 17345 ;;                  2   29[BANK0 ] PTR unsigned char 
 17346 ;; Registers used:
 17347 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 17348 ;; Tracked objects:
 17349 ;;		On entry : 0/0
 17350 ;;		On exit  : 0/0
 17351 ;;		Unchanged: 0/0
 17352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17353 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17354 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17355 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17356 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17357 ;;Total ram usage:        6 bytes
 17358 ;; Hardware stack levels used:    1
 17359 ;; Hardware stack levels required when called:   11
 17360 ;; This function calls:
 17361 ;;		Nothing
 17362 ;; This function is called by:
 17363 ;;		_Terminal
 17364 ;;		_Term_MainSm
 17365 ;; This function uses a non-reentrant model
 17366 ;;
 17367                           
 17368                           	psect	text69
 17369  006602                     __ptext69:
 17370                           	opt stack 0
 17371  006602                     _strcpy:
 17372                           	opt stack 15
 17373                           
 17374                           ; BSR set to: 0
 17375                           ;incstack = 0
 17376  006602  C07D  F081         	movff	strcpy@to,strcpy@cp
 17377  006606  C07E  F082         	movff	strcpy@to+1,strcpy@cp+1
 17378  00660A  D005               	goto	l3549
 17379  00660C  0100               	movlb	0	; () banked
 17380  00660E  4B81               	infsnz	strcpy@cp& (0+255),f,b
 17381  006610  2B82               	incf	(strcpy@cp+1)& (0+255),f,b
 17382  006612  4B7F               	infsnz	strcpy@from& (0+255),f,b
 17383  006614  2B80               	incf	(strcpy@from+1)& (0+255),f,b
 17384  006616                     l3549:
 17385                           
 17386                           ; BSR set to: 0
 17387  006616  C07F  FFF6         	movff	strcpy@from,tblptrl
 17388  00661A  C080  FFF7         	movff	strcpy@from+1,tblptrh
 17389  00661E                     	if	0	;tblptru may be non-zero
 17390  00661E                     	endif
 17391  00661E                     	if	0	;tblptru may be non-zero
 17392  00661E                     	endif
 17393  00661E  C081  FFD9         	movff	strcpy@cp,fsr2l
 17394  006622  C082  FFDA         	movff	strcpy@cp+1,fsr2h
 17395  006626  0008               	tblrd		*
 17396  006628  CFF5 FFDF          	movff	tablat,indf2
 17397  00662C  50DF               	movf	indf2,w,c
 17398  00662E  B4D8               	btfsc	status,2,c
 17399  006630  0012               	return	
 17400  006632  D7EC               	goto	l3550
 17401  006634                     __end_of_strcpy:
 17402                           	opt stack 0
 17403                           tosu	equ	0xFFF
 17404                           tosh	equ	0xFFE
 17405                           tosl	equ	0xFFD
 17406                           pclath	equ	0xFFA
 17407                           tblptru	equ	0xFF8
 17408                           tblptrh	equ	0xFF7
 17409                           tblptrl	equ	0xFF6
 17410                           tablat	equ	0xFF5
 17411                           prodh	equ	0xFF4
 17412                           prodl	equ	0xFF3
 17413                           intcon	equ	0xFF2
 17414                           intcon2	equ	0xFF1
 17415                           intcon3	equ	0xFF0
 17416                           indf0	equ	0xFEF
 17417                           postinc0	equ	0xFEE
 17418                           plusw0	equ	0xFEB
 17419                           fsr0h	equ	0xFEA
 17420                           fsr0l	equ	0xFE9
 17421                           wreg	equ	0xFE8
 17422                           indf1	equ	0xFE7
 17423                           postinc1	equ	0xFE6
 17424                           postdec1	equ	0xFE5
 17425                           fsr1h	equ	0xFE2
 17426                           fsr1l	equ	0xFE1
 17427                           indf2	equ	0xFDF
 17428                           postinc2	equ	0xFDE
 17429                           postdec2	equ	0xFDD
 17430                           plusw2	equ	0xFDB
 17431                           fsr2h	equ	0xFDA
 17432                           fsr2l	equ	0xFD9
 17433                           status	equ	0xFD8
 17434                           
 17435 ;; *************** function _putUSBUSART *****************
 17436 ;; Defined at:
 17437 ;;		line 559 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 17438 ;; Parameters:    Size  Location     Type
 17439 ;;  data            2   35[BANK0 ] PTR unsigned char 
 17440 ;;		 -> MsgReady(23), Term_MainSm@Data(50), MsgFormat(240), Welcome(137), 
 17441 ;;		 -> Terminal@UsbTxBuffer(200), Terminal@TermRxBuffer(50), Terminal@Payload(80), Terminal@UsbRxBuffer(200), 
 17442 ;;		 -> RxBuffer(400), 
 17443 ;;  length          1   37[BANK0 ] unsigned char 
 17444 ;; Auto vars:     Size  Location     Type
 17445 ;;		None
 17446 ;; Return value:  Size  Location     Type
 17447 ;;                  1    wreg      void 
 17448 ;; Registers used:
 17449 ;;		wreg, status,2, status,0
 17450 ;; Tracked objects:
 17451 ;;		On entry : 0/0
 17452 ;;		On exit  : 0/0
 17453 ;;		Unchanged: 0/0
 17454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17455 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17456 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17458 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17459 ;;Total ram usage:        3 bytes
 17460 ;; Hardware stack levels used:    1
 17461 ;; Hardware stack levels required when called:   11
 17462 ;; This function calls:
 17463 ;;		Nothing
 17464 ;; This function is called by:
 17465 ;;		_Terminal
 17466 ;;		_Term_MainSm
 17467 ;;		_GsmGprsTerminal
 17468 ;; This function uses a non-reentrant model
 17469 ;;
 17470                           
 17471                           	psect	text70
 17472  006914                     __ptext70:
 17473                           	opt stack 0
 17474  006914                     _putUSBUSART:
 17475                           	opt stack 15
 17476                           
 17477                           ;usb_device_cdc.c: 584: ;
 17478                           ;usb_device_cdc.c: 585: if(cdc_trf_state == 0)
 17479                           
 17480                           ;incstack = 0
 17481  006914  0100               	movlb	0	; () banked
 17482  006916  51C8               	movf	_cdc_trf_state& (0+255),w,b
 17483  006918  A4D8               	btfss	status,2,c
 17484  00691A  0012               	return	
 17485                           
 17486                           ; BSR set to: 0
 17487                           ;usb_device_cdc.c: 586: {
 17488                           ;usb_device_cdc.c: 587: { pCDCSrc.bRam = (uint8_t*)data; cdc_tx_len = length; cdc_mem_ty
      +                          pe = 0x01; cdc_trf_state = 1; };
 17489  00691C  C083  F2CC         	movff	putUSBUSART@data,_pCDCSrc
 17490  006920  C084  F2CD         	movff	putUSBUSART@data+1,_pCDCSrc+1
 17491                           
 17492                           ; BSR set to: 0
 17493  006924  C085  F0C7         	movff	putUSBUSART@length,_cdc_tx_len
 17494                           
 17495                           ; BSR set to: 0
 17496  006928  0E01               	movlw	1
 17497  00692A  0101               	movlb	1	; () banked
 17498  00692C  6FDC               	movwf	_cdc_mem_type& (0+255),b
 17499                           
 17500                           ; BSR set to: 1
 17501  00692E  0E01               	movlw	1
 17502  006930  0100               	movlb	0	; () banked
 17503  006932  6FC8               	movwf	_cdc_trf_state& (0+255),b
 17504  006934  0012               	return	
 17505  006936                     __end_of_putUSBUSART:
 17506                           	opt stack 0
 17507                           tosu	equ	0xFFF
 17508                           tosh	equ	0xFFE
 17509                           tosl	equ	0xFFD
 17510                           pclath	equ	0xFFA
 17511                           tblptru	equ	0xFF8
 17512                           tblptrh	equ	0xFF7
 17513                           tblptrl	equ	0xFF6
 17514                           tablat	equ	0xFF5
 17515                           prodh	equ	0xFF4
 17516                           prodl	equ	0xFF3
 17517                           intcon	equ	0xFF2
 17518                           intcon2	equ	0xFF1
 17519                           intcon3	equ	0xFF0
 17520                           indf0	equ	0xFEF
 17521                           postinc0	equ	0xFEE
 17522                           plusw0	equ	0xFEB
 17523                           fsr0h	equ	0xFEA
 17524                           fsr0l	equ	0xFE9
 17525                           wreg	equ	0xFE8
 17526                           indf1	equ	0xFE7
 17527                           postinc1	equ	0xFE6
 17528                           postdec1	equ	0xFE5
 17529                           fsr1h	equ	0xFE2
 17530                           fsr1l	equ	0xFE1
 17531                           indf2	equ	0xFDF
 17532                           postinc2	equ	0xFDE
 17533                           postdec2	equ	0xFDD
 17534                           plusw2	equ	0xFDB
 17535                           fsr2h	equ	0xFDA
 17536                           fsr2l	equ	0xFD9
 17537                           status	equ	0xFD8
 17538                           
 17539 ;; *************** function _itoa *****************
 17540 ;; Defined at:
 17541 ;;		line 4 in file "/opt/microchip/xc8/v1.45/sources/common/itoa.c"
 17542 ;; Parameters:    Size  Location     Type
 17543 ;;  buf             2   51[BANK0 ] PTR unsigned char 
 17544 ;;		 -> Terminal@Payload(80), 
 17545 ;;  val             2   53[BANK0 ] int 
 17546 ;;  base            2   55[BANK0 ] int 
 17547 ;; Auto vars:     Size  Location     Type
 17548 ;;  cp              2   57[BANK0 ] PTR unsigned char 
 17549 ;;		 -> Terminal@Payload(80), 
 17550 ;; Return value:  Size  Location     Type
 17551 ;;                  2   51[BANK0 ] PTR unsigned char 
 17552 ;; Registers used:
 17553 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17554 ;; Tracked objects:
 17555 ;;		On entry : 0/0
 17556 ;;		On exit  : 0/0
 17557 ;;		Unchanged: 0/0
 17558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17559 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17560 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17562 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17563 ;;Total ram usage:        8 bytes
 17564 ;; Hardware stack levels used:    1
 17565 ;; Hardware stack levels required when called:   13
 17566 ;; This function calls:
 17567 ;;		_utoa
 17568 ;; This function is called by:
 17569 ;;		_Terminal
 17570 ;; This function uses a non-reentrant model
 17571 ;;
 17572                           
 17573                           	psect	text71
 17574  006208                     __ptext71:
 17575                           	opt stack 0
 17576  006208                     _itoa:
 17577                           	opt stack 12
 17578                           
 17579                           ; BSR set to: 0
 17580                           ;incstack = 0
 17581  006208  C093  F099         	movff	itoa@buf,itoa@cp
 17582  00620C  C094  F09A         	movff	itoa@buf+1,itoa@cp+1
 17583  006210  0100               	movlb	0	; () banked
 17584  006212  AF96               	btfss	(itoa@val+1)& (0+255),7,b
 17585  006214  D00C               	goto	l3297
 17586                           
 17587                           ; BSR set to: 0
 17588  006216  C093  FFD9         	movff	itoa@buf,fsr2l
 17589  00621A  C094  FFDA         	movff	itoa@buf+1,fsr2h
 17590  00621E  0E2D               	movlw	45
 17591  006220  6EDF               	movwf	indf2,c
 17592                           
 17593                           ; BSR set to: 0
 17594  006222  4B93               	infsnz	itoa@buf& (0+255),f,b
 17595  006224  2B94               	incf	(itoa@buf+1)& (0+255),f,b
 17596                           
 17597                           ; BSR set to: 0
 17598  006226  6D95               	negf	itoa@val& (0+255),b
 17599  006228  1F96               	comf	(itoa@val+1)& (0+255),f,b
 17600  00622A  B0D8               	btfsc	status,0,c
 17601  00622C  2B96               	incf	(itoa@val+1)& (0+255),f,b
 17602  00622E                     l3297:
 17603                           
 17604                           ; BSR set to: 0
 17605                           
 17606                           ; BSR set to: 0
 17607  00622E  C093  F08A         	movff	itoa@buf,utoa@buf
 17608  006232  C094  F08B         	movff	itoa@buf+1,utoa@buf+1
 17609  006236  C095  F08C         	movff	itoa@val,utoa@val
 17610  00623A  C096  F08D         	movff	itoa@val+1,utoa@val+1
 17611  00623E  C097  F08E         	movff	itoa@base,utoa@base
 17612  006242  C098  F08F         	movff	itoa@base+1,utoa@base+1
 17613  006246  ECC7  F023         	call	_utoa	;wreg free
 17614  00624A  0012               	return	
 17615  00624C                     __end_of_itoa:
 17616                           	opt stack 0
 17617                           tosu	equ	0xFFF
 17618                           tosh	equ	0xFFE
 17619                           tosl	equ	0xFFD
 17620                           pclath	equ	0xFFA
 17621                           tblptru	equ	0xFF8
 17622                           tblptrh	equ	0xFF7
 17623                           tblptrl	equ	0xFF6
 17624                           tablat	equ	0xFF5
 17625                           prodh	equ	0xFF4
 17626                           prodl	equ	0xFF3
 17627                           intcon	equ	0xFF2
 17628                           intcon2	equ	0xFF1
 17629                           intcon3	equ	0xFF0
 17630                           indf0	equ	0xFEF
 17631                           postinc0	equ	0xFEE
 17632                           plusw0	equ	0xFEB
 17633                           fsr0h	equ	0xFEA
 17634                           fsr0l	equ	0xFE9
 17635                           wreg	equ	0xFE8
 17636                           indf1	equ	0xFE7
 17637                           postinc1	equ	0xFE6
 17638                           postdec1	equ	0xFE5
 17639                           fsr1h	equ	0xFE2
 17640                           fsr1l	equ	0xFE1
 17641                           indf2	equ	0xFDF
 17642                           postinc2	equ	0xFDE
 17643                           postdec2	equ	0xFDD
 17644                           plusw2	equ	0xFDB
 17645                           fsr2h	equ	0xFDA
 17646                           fsr2l	equ	0xFD9
 17647                           status	equ	0xFD8
 17648                           
 17649 ;; *************** function _utoa *****************
 17650 ;; Defined at:
 17651 ;;		line 17 in file "/opt/microchip/xc8/v1.45/sources/common/itoa.c"
 17652 ;; Parameters:    Size  Location     Type
 17653 ;;  buf             2   42[BANK0 ] PTR unsigned char 
 17654 ;;		 -> Term_MainSm@FwkBuildStr(4), Term_MainSm@FwkMinorStr(4), Term_MainSm@FwkMajorStr(4), Terminal@Payload(80), 
 17655 ;;  val             2   44[BANK0 ] unsigned int 
 17656 ;;  base            2   46[BANK0 ] int 
 17657 ;; Auto vars:     Size  Location     Type
 17658 ;;  v               2   48[BANK0 ] unsigned int 
 17659 ;;  c               1   50[BANK0 ] unsigned char 
 17660 ;; Return value:  Size  Location     Type
 17661 ;;                  2   42[BANK0 ] PTR unsigned char 
 17662 ;; Registers used:
 17663 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17664 ;; Tracked objects:
 17665 ;;		On entry : 0/0
 17666 ;;		On exit  : 0/0
 17667 ;;		Unchanged: 0/0
 17668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17669 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17670 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17672 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17673 ;;Total ram usage:        9 bytes
 17674 ;; Hardware stack levels used:    1
 17675 ;; Hardware stack levels required when called:   12
 17676 ;; This function calls:
 17677 ;;		___lwdiv
 17678 ;;		___lwmod
 17679 ;; This function is called by:
 17680 ;;		_Term_MainSm
 17681 ;;		_itoa
 17682 ;; This function uses a non-reentrant model
 17683 ;;
 17684                           
 17685                           	psect	text72
 17686  00478E                     __ptext72:
 17687                           	opt stack 0
 17688  00478E                     _utoa:
 17689                           	opt stack 14
 17690                           
 17691                           ;incstack = 0
 17692  00478E  C08C  F090         	movff	utoa@val,utoa@v
 17693  004792  C08D  F091         	movff	utoa@val+1,utoa@v+1
 17694  004796  C090  F083         	movff	utoa@v,___lwdiv@dividend
 17695  00479A  C091  F084         	movff	utoa@v+1,___lwdiv@dividend+1
 17696  00479E  C08E  F085         	movff	utoa@base,___lwdiv@divisor
 17697  0047A2  C08F  F086         	movff	utoa@base+1,___lwdiv@divisor+1
 17698  0047A6  ECA0  F02E         	call	___lwdiv	;wreg free
 17699  0047AA  C083  F090         	movff	?___lwdiv,utoa@v
 17700  0047AE  C084  F091         	movff	?___lwdiv+1,utoa@v+1
 17701  0047B2  0100               	movlb	0	; () banked
 17702  0047B4  4B8A               	infsnz	utoa@buf& (0+255),f,b
 17703  0047B6  2B8B               	incf	(utoa@buf+1)& (0+255),f,b
 17704                           
 17705                           ; BSR set to: 0
 17706  0047B8  5190               	movf	utoa@v& (0+255),w,b
 17707  0047BA  1191               	iorwf	(utoa@v+1)& (0+255),w,b
 17708  0047BC  A4D8               	btfss	status,2,c
 17709  0047BE  D7EB               	goto	l3301
 17710                           
 17711                           ; BSR set to: 0
 17712                           
 17713                           ; BSR set to: 0
 17714  0047C0  C08A  FFD9         	movff	utoa@buf,fsr2l
 17715  0047C4  C08B  FFDA         	movff	utoa@buf+1,fsr2h
 17716  0047C8  0E00               	movlw	0
 17717  0047CA  6EDF               	movwf	indf2,c
 17718                           
 17719                           ; BSR set to: 0
 17720  0047CC  078A               	decf	utoa@buf& (0+255),f,b
 17721  0047CE  A0D8               	btfss	status,0,c
 17722  0047D0  078B               	decf	(utoa@buf+1)& (0+255),f,b
 17723  0047D2                     
 17724                           ; BSR set to: 0
 17725                           
 17726                           ; BSR set to: 0
 17727  0047D2  C08C  F07D         	movff	utoa@val,___lwmod@dividend
 17728  0047D6  C08D  F07E         	movff	utoa@val+1,___lwmod@dividend+1
 17729  0047DA  C08E  F07F         	movff	utoa@base,___lwmod@divisor
 17730  0047DE  C08F  F080         	movff	utoa@base+1,___lwmod@divisor+1
 17731  0047E2  EC26  F031         	call	___lwmod	;wreg free
 17732  0047E6  0100               	movlb	0	; () banked
 17733  0047E8  517D               	movf	?___lwmod& (0+255),w,b
 17734  0047EA  6F92               	movwf	utoa@c& (0+255),b
 17735                           
 17736                           ; BSR set to: 0
 17737  0047EC  C08C  F083         	movff	utoa@val,___lwdiv@dividend
 17738  0047F0  C08D  F084         	movff	utoa@val+1,___lwdiv@dividend+1
 17739  0047F4  C08E  F085         	movff	utoa@base,___lwdiv@divisor
 17740  0047F8  C08F  F086         	movff	utoa@base+1,___lwdiv@divisor+1
 17741  0047FC  ECA0  F02E         	call	___lwdiv	;wreg free
 17742  004800  C083  F08C         	movff	?___lwdiv,utoa@val
 17743  004804  C084  F08D         	movff	?___lwdiv+1,utoa@val+1
 17744  004808  0E09               	movlw	9
 17745  00480A  0100               	movlb	0	; () banked
 17746  00480C  6592               	cpfsgt	utoa@c& (0+255),b
 17747  00480E  D002               	goto	l3304
 17748                           
 17749                           ; BSR set to: 0
 17750  004810  0E07               	movlw	7
 17751  004812  2792               	addwf	utoa@c& (0+255),f,b
 17752  004814                     l3304:
 17753                           
 17754                           ; BSR set to: 0
 17755  004814  0E30               	movlw	48
 17756  004816  2792               	addwf	utoa@c& (0+255),f,b
 17757                           
 17758                           ; BSR set to: 0
 17759  004818  C08A  FFD9         	movff	utoa@buf,fsr2l
 17760  00481C  C08B  FFDA         	movff	utoa@buf+1,fsr2h
 17761  004820  C092  FFDF         	movff	utoa@c,indf2
 17762                           
 17763                           ; BSR set to: 0
 17764  004824  078A               	decf	utoa@buf& (0+255),f,b
 17765  004826  A0D8               	btfss	status,0,c
 17766  004828  078B               	decf	(utoa@buf+1)& (0+255),f,b
 17767                           
 17768                           ; BSR set to: 0
 17769  00482A  518C               	movf	utoa@val& (0+255),w,b
 17770  00482C  118D               	iorwf	(utoa@val+1)& (0+255),w,b
 17771  00482E  A4D8               	btfss	status,2,c
 17772  004830  D7D0               	goto	l3303
 17773                           
 17774                           ; BSR set to: 0
 17775                           ;	Return value of _utoa is never used
 17776                           
 17777                           ; BSR set to: 0
 17778  004832  4B8A               	infsnz	utoa@buf& (0+255),f,b
 17779  004834  2B8B               	incf	(utoa@buf+1)& (0+255),f,b
 17780  004836  0012               	return	
 17781  004838                     __end_of_utoa:
 17782                           	opt stack 0
 17783                           tosu	equ	0xFFF
 17784                           tosh	equ	0xFFE
 17785                           tosl	equ	0xFFD
 17786                           pclath	equ	0xFFA
 17787                           tblptru	equ	0xFF8
 17788                           tblptrh	equ	0xFF7
 17789                           tblptrl	equ	0xFF6
 17790                           tablat	equ	0xFF5
 17791                           prodh	equ	0xFF4
 17792                           prodl	equ	0xFF3
 17793                           intcon	equ	0xFF2
 17794                           intcon2	equ	0xFF1
 17795                           intcon3	equ	0xFF0
 17796                           indf0	equ	0xFEF
 17797                           postinc0	equ	0xFEE
 17798                           plusw0	equ	0xFEB
 17799                           fsr0h	equ	0xFEA
 17800                           fsr0l	equ	0xFE9
 17801                           wreg	equ	0xFE8
 17802                           indf1	equ	0xFE7
 17803                           postinc1	equ	0xFE6
 17804                           postdec1	equ	0xFE5
 17805                           fsr1h	equ	0xFE2
 17806                           fsr1l	equ	0xFE1
 17807                           indf2	equ	0xFDF
 17808                           postinc2	equ	0xFDE
 17809                           postdec2	equ	0xFDD
 17810                           plusw2	equ	0xFDB
 17811                           fsr2h	equ	0xFDA
 17812                           fsr2l	equ	0xFD9
 17813                           status	equ	0xFD8
 17814                           
 17815 ;; *************** function ___lwmod *****************
 17816 ;; Defined at:
 17817 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/lwmod.c"
 17818 ;; Parameters:    Size  Location     Type
 17819 ;;  dividend        2   29[BANK0 ] unsigned int 
 17820 ;;  divisor         2   31[BANK0 ] unsigned int 
 17821 ;; Auto vars:     Size  Location     Type
 17822 ;;  counter         1   33[BANK0 ] unsigned char 
 17823 ;; Return value:  Size  Location     Type
 17824 ;;                  2   29[BANK0 ] unsigned int 
 17825 ;; Registers used:
 17826 ;;		wreg, status,2, status,0
 17827 ;; Tracked objects:
 17828 ;;		On entry : 0/0
 17829 ;;		On exit  : 0/0
 17830 ;;		Unchanged: 0/0
 17831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17832 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17833 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17834 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17835 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17836 ;;Total ram usage:        5 bytes
 17837 ;; Hardware stack levels used:    1
 17838 ;; Hardware stack levels required when called:   11
 17839 ;; This function calls:
 17840 ;;		Nothing
 17841 ;; This function is called by:
 17842 ;;		_utoa
 17843 ;; This function uses a non-reentrant model
 17844 ;;
 17845                           
 17846                           	psect	text73
 17847  00624C                     __ptext73:
 17848                           	opt stack 0
 17849  00624C                     ___lwmod:
 17850                           	opt stack 14
 17851                           
 17852                           ; BSR set to: 0
 17853                           ;incstack = 0
 17854  00624C  0100               	movlb	0	; () banked
 17855  00624E  517F               	movf	___lwmod@divisor& (0+255),w,b
 17856  006250  1180               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 17857  006252  B4D8               	btfsc	status,2,c
 17858  006254  D018               	goto	l3399
 17859                           
 17860                           ; BSR set to: 0
 17861  006256  0E01               	movlw	1
 17862  006258  6F81               	movwf	___lwmod@counter& (0+255),b
 17863  00625A  D004               	goto	l3394
 17864  00625C                     
 17865                           ; BSR set to: 0
 17866                           
 17867                           ; BSR set to: 0
 17868  00625C  90D8               	bcf	status,0,c
 17869  00625E  377F               	rlcf	___lwmod@divisor& (0+255),f,b
 17870  006260  3780               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 17871  006262  2B81               	incf	___lwmod@counter& (0+255),f,b
 17872  006264                     l3394:
 17873                           
 17874                           ; BSR set to: 0
 17875                           
 17876                           ; BSR set to: 0
 17877  006264  AF80               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 17878  006266  D7FA               	goto	l3395
 17879  006268                     u12250:
 17880                           
 17881                           ; BSR set to: 0
 17882                           
 17883                           ; BSR set to: 0
 17884                           
 17885                           ; BSR set to: 0
 17886  006268  517F               	movf	___lwmod@divisor& (0+255),w,b
 17887  00626A  5D7D               	subwf	___lwmod@dividend& (0+255),w,b
 17888  00626C  5180               	movf	(___lwmod@divisor+1)& (0+255),w,b
 17889  00626E  597E               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 17890  006270  A0D8               	btfss	status,0,c
 17891  006272  D004               	goto	l3398
 17892                           
 17893                           ; BSR set to: 0
 17894  006274  517F               	movf	___lwmod@divisor& (0+255),w,b
 17895  006276  5F7D               	subwf	___lwmod@dividend& (0+255),f,b
 17896  006278  5180               	movf	(___lwmod@divisor+1)& (0+255),w,b
 17897  00627A  5B7E               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 17898  00627C                     l3398:
 17899                           
 17900                           ; BSR set to: 0
 17901                           
 17902                           ; BSR set to: 0
 17903  00627C  90D8               	bcf	status,0,c
 17904  00627E  3380               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 17905  006280  337F               	rrcf	___lwmod@divisor& (0+255),f,b
 17906                           
 17907                           ; BSR set to: 0
 17908  006282  2F81               	decfsz	___lwmod@counter& (0+255),f,b
 17909  006284  D7F1               	goto	u12250
 17910  006286                     l3399:
 17911                           
 17912                           ; BSR set to: 0
 17913                           
 17914                           ; BSR set to: 0
 17915  006286  C07D  F07D         	movff	___lwmod@dividend,?___lwmod
 17916  00628A  C07E  F07E         	movff	___lwmod@dividend+1,?___lwmod+1
 17917                           
 17918                           ; BSR set to: 0
 17919  00628E  0012               	return		;funcret
 17920  006290                     __end_of___lwmod:
 17921                           	opt stack 0
 17922                           tosu	equ	0xFFF
 17923                           tosh	equ	0xFFE
 17924                           tosl	equ	0xFFD
 17925                           pclath	equ	0xFFA
 17926                           tblptru	equ	0xFF8
 17927                           tblptrh	equ	0xFF7
 17928                           tblptrl	equ	0xFF6
 17929                           tablat	equ	0xFF5
 17930                           prodh	equ	0xFF4
 17931                           prodl	equ	0xFF3
 17932                           intcon	equ	0xFF2
 17933                           intcon2	equ	0xFF1
 17934                           intcon3	equ	0xFF0
 17935                           indf0	equ	0xFEF
 17936                           postinc0	equ	0xFEE
 17937                           plusw0	equ	0xFEB
 17938                           fsr0h	equ	0xFEA
 17939                           fsr0l	equ	0xFE9
 17940                           wreg	equ	0xFE8
 17941                           indf1	equ	0xFE7
 17942                           postinc1	equ	0xFE6
 17943                           postdec1	equ	0xFE5
 17944                           fsr1h	equ	0xFE2
 17945                           fsr1l	equ	0xFE1
 17946                           indf2	equ	0xFDF
 17947                           postinc2	equ	0xFDE
 17948                           postdec2	equ	0xFDD
 17949                           plusw2	equ	0xFDB
 17950                           fsr2h	equ	0xFDA
 17951                           fsr2l	equ	0xFD9
 17952                           status	equ	0xFD8
 17953                           
 17954 ;; *************** function _getsUSBUSART *****************
 17955 ;; Defined at:
 17956 ;;		line 488 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 17957 ;; Parameters:    Size  Location     Type
 17958 ;;  buffer          2   36[BANK0 ] PTR unsigned char 
 17959 ;;		 -> Terminal@UsbRxBuffer(200), GsmGprsTerminal@UsbBuffer(200), 
 17960 ;;  len             1   38[BANK0 ] unsigned char 
 17961 ;; Auto vars:     Size  Location     Type
 17962 ;;		None
 17963 ;; Return value:  Size  Location     Type
 17964 ;;                  1    wreg      unsigned char 
 17965 ;; Registers used:
 17966 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17967 ;; Tracked objects:
 17968 ;;		On entry : 0/0
 17969 ;;		On exit  : 0/0
 17970 ;;		Unchanged: 0/0
 17971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17972 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17973 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17974 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17975 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17976 ;;Total ram usage:        4 bytes
 17977 ;; Hardware stack levels used:    1
 17978 ;; Hardware stack levels required when called:   12
 17979 ;; This function calls:
 17980 ;;		_USBTransferOnePacket
 17981 ;; This function is called by:
 17982 ;;		_Terminal
 17983 ;;		_GsmGprsTerminal
 17984 ;; This function uses a non-reentrant model
 17985 ;;
 17986                           
 17987                           	psect	text74
 17988  004DDA                     __ptext74:
 17989                           	opt stack 0
 17990  004DDA                     _getsUSBUSART:
 17991                           	opt stack 13
 17992                           
 17993                           ;usb_device_cdc.c: 490: cdc_rx_len = 0;
 17994                           
 17995                           ; BSR set to: 0
 17996                           ;incstack = 0
 17997  004DDA  0E00               	movlw	0
 17998  004DDC  0100               	movlb	0	; () banked
 17999  004DDE  6FC9               	movwf	_cdc_rx_len& (0+255),b
 18000                           
 18001                           ; BSR set to: 0
 18002                           ;usb_device_cdc.c: 492: if(!((CDCDataOutHandle != 0x0000) && ((*(volatile uint8_t*)CDCDa
      +                          taOutHandle & 0x80) != 0x00)))
 18003  004DE0  51BC               	movf	_CDCDataOutHandle& (0+255),w,b
 18004  004DE2  11BD               	iorwf	(_CDCDataOutHandle+1)& (0+255),w,b
 18005  004DE4  B4D8               	btfsc	status,2,c
 18006  004DE6  D006               	goto	u12980
 18007                           
 18008                           ; BSR set to: 0
 18009  004DE8  C0BC  FFD9         	movff	_CDCDataOutHandle,fsr2l
 18010  004DEC  C0BD  FFDA         	movff	_CDCDataOutHandle+1,fsr2h
 18011  004DF0  BEDF               	btfsc	indf2,7,c
 18012  004DF2  D03B               	goto	l1924
 18013  004DF4                     u12980:
 18014                           
 18015                           ; BSR set to: 0
 18016                           ;usb_device_cdc.c: 493: {
 18017                           ;usb_device_cdc.c: 498: if(len > (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT))
 18018                           
 18019                           ; BSR set to: 0
 18020  004DF4  EE20 F001          	lfsr	2,1
 18021  004DF8  51BC               	movf	_CDCDataOutHandle& (0+255),w,b
 18022  004DFA  26D9               	addwf	fsr2l,f,c
 18023  004DFC  51BD               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 18024  004DFE  22DA               	addwfc	fsr2h,f,c
 18025  004E00  5186               	movf	getsUSBUSART@len& (0+255),w,b
 18026  004E02  5CDE               	subwf	postinc2,w,c
 18027  004E04  B0D8               	btfsc	status,0,c
 18028  004E06  D008               	goto	l1927
 18029                           
 18030                           ; BSR set to: 0
 18031                           ;usb_device_cdc.c: 499: len = (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT);
 18032  004E08  EE20 F001          	lfsr	2,1
 18033  004E0C  51BC               	movf	_CDCDataOutHandle& (0+255),w,b
 18034  004E0E  26D9               	addwf	fsr2l,f,c
 18035  004E10  51BD               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 18036  004E12  22DA               	addwfc	fsr2h,f,c
 18037  004E14  50DF               	movf	indf2,w,c
 18038  004E16  6F86               	movwf	getsUSBUSART@len& (0+255),b
 18039  004E18                     l1927:
 18040                           
 18041                           ; BSR set to: 0
 18042                           ;usb_device_cdc.c: 504: for(cdc_rx_len = 0; cdc_rx_len < len; cdc_rx_len++)
 18043                           
 18044                           ; BSR set to: 0
 18045  004E18  0E00               	movlw	0
 18046  004E1A  6FC9               	movwf	_cdc_rx_len& (0+255),b
 18047  004E1C  D013               	goto	l1928
 18048  004E1E                     
 18049                           ; BSR set to: 0
 18050                           ;usb_device_cdc.c: 505: buffer[cdc_rx_len] = cdc_data_rx[cdc_rx_len];
 18051                           
 18052                           ; BSR set to: 0
 18053  004E1E  51C9               	movf	_cdc_rx_len& (0+255),w,b
 18054  004E20  0D01               	mullw	1
 18055  004E22  0E00               	movlw	low _cdc_data_rx
 18056  004E24  24F3               	addwf	prodl,w,c
 18057  004E26  6ED9               	movwf	fsr2l,c
 18058  004E28  0E05               	movlw	high _cdc_data_rx
 18059  004E2A  20F4               	addwfc	prodh,w,c
 18060  004E2C  6EDA               	movwf	fsr2h,c
 18061  004E2E  51C9               	movf	_cdc_rx_len& (0+255),w,b
 18062  004E30  0D01               	mullw	1
 18063  004E32  50F3               	movf	prodl,w,c
 18064  004E34  2584               	addwf	getsUSBUSART@buffer& (0+255),w,b
 18065  004E36  6EE1               	movwf	fsr1l,c
 18066  004E38  50F4               	movf	prodh,w,c
 18067  004E3A  2185               	addwfc	(getsUSBUSART@buffer+1)& (0+255),w,b
 18068  004E3C  6EE2               	movwf	fsr1h,c
 18069  004E3E  CFDF FFE7          	movff	indf2,indf1
 18070                           
 18071                           ; BSR set to: 0
 18072  004E42  2BC9               	incf	_cdc_rx_len& (0+255),f,b
 18073  004E44                     l1928:
 18074                           
 18075                           ; BSR set to: 0
 18076                           
 18077                           ; BSR set to: 0
 18078  004E44  5186               	movf	getsUSBUSART@len& (0+255),w,b
 18079  004E46  5DC9               	subwf	_cdc_rx_len& (0+255),w,b
 18080  004E48  A0D8               	btfss	status,0,c
 18081  004E4A  D7E9               	goto	l1929
 18082                           
 18083                           ; BSR set to: 0
 18084                           ;usb_device_cdc.c: 511: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 18085                           
 18086                           ; BSR set to: 0
 18087  004E4C  0E00               	movlw	0
 18088  004E4E  6F7D               	movwf	USBTransferOnePacket@dir& (0+255),b
 18089  004E50  0E00               	movlw	low _cdc_data_rx
 18090  004E52  6F7E               	movwf	USBTransferOnePacket@data& (0+255),b
 18091  004E54  0E05               	movlw	high _cdc_data_rx
 18092  004E56  6F7F               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 18093  004E58  0E40               	movlw	64
 18094  004E5A  6F80               	movwf	USBTransferOnePacket@len& (0+255),b
 18095  004E5C  0E02               	movlw	2
 18096  004E5E  EC04  F022         	call	_USBTransferOnePacket
 18097  004E62  C07D  F0BC         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
 18098  004E66  C07E  F0BD         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
 18099  004E6A                     l1924:
 18100                           
 18101                           ;usb_device_cdc.c: 513: }
 18102                           ;usb_device_cdc.c: 515: return cdc_rx_len;
 18103  004E6A  0100               	movlb	0	; () banked
 18104  004E6C  51C9               	movf	_cdc_rx_len& (0+255),w,b
 18105  004E6E  0012               	return	
 18106  004E70                     __end_of_getsUSBUSART:
 18107                           	opt stack 0
 18108                           tosu	equ	0xFFF
 18109                           tosh	equ	0xFFE
 18110                           tosl	equ	0xFFD
 18111                           pclath	equ	0xFFA
 18112                           tblptru	equ	0xFF8
 18113                           tblptrh	equ	0xFF7
 18114                           tblptrl	equ	0xFF6
 18115                           tablat	equ	0xFF5
 18116                           prodh	equ	0xFF4
 18117                           prodl	equ	0xFF3
 18118                           intcon	equ	0xFF2
 18119                           intcon2	equ	0xFF1
 18120                           intcon3	equ	0xFF0
 18121                           indf0	equ	0xFEF
 18122                           postinc0	equ	0xFEE
 18123                           plusw0	equ	0xFEB
 18124                           fsr0h	equ	0xFEA
 18125                           fsr0l	equ	0xFE9
 18126                           wreg	equ	0xFE8
 18127                           indf1	equ	0xFE7
 18128                           postinc1	equ	0xFE6
 18129                           postdec1	equ	0xFE5
 18130                           fsr1h	equ	0xFE2
 18131                           fsr1l	equ	0xFE1
 18132                           indf2	equ	0xFDF
 18133                           postinc2	equ	0xFDE
 18134                           postdec2	equ	0xFDD
 18135                           plusw2	equ	0xFDB
 18136                           fsr2h	equ	0xFDA
 18137                           fsr2l	equ	0xFD9
 18138                           status	equ	0xFD8
 18139                           
 18140 ;; *************** function _USBTransferOnePacket *****************
 18141 ;; Defined at:
 18142 ;;		line 1013 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 18143 ;; Parameters:    Size  Location     Type
 18144 ;;  ep              1    wreg     unsigned char 
 18145 ;;  dir             1   29[BANK0 ] unsigned char 
 18146 ;;  data            2   30[BANK0 ] PTR unsigned char 
 18147 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 18148 ;;  len             1   32[BANK0 ] unsigned char 
 18149 ;; Auto vars:     Size  Location     Type
 18150 ;;  ep              1   33[BANK0 ] unsigned char 
 18151 ;;  handle          2   34[BANK0 ] PTR volatile struct __BD
 18152 ;;		 -> NULL(0), BDT(48), 
 18153 ;; Return value:  Size  Location     Type
 18154 ;;                  2   29[BANK0 ] PTR void 
 18155 ;; Registers used:
 18156 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 18157 ;; Tracked objects:
 18158 ;;		On entry : 0/0
 18159 ;;		On exit  : 0/0
 18160 ;;		Unchanged: 0/0
 18161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18162 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18163 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18164 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18165 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18166 ;;Total ram usage:        7 bytes
 18167 ;; Hardware stack levels used:    1
 18168 ;; Hardware stack levels required when called:   11
 18169 ;; This function calls:
 18170 ;;		Nothing
 18171 ;; This function is called by:
 18172 ;;		_CDCInitEP
 18173 ;;		_getsUSBUSART
 18174 ;;		_CDCTxService
 18175 ;;		_USBCDCEventHandler
 18176 ;; This function uses a non-reentrant model
 18177 ;;
 18178                           
 18179                           	psect	text75
 18180  004408                     __ptext75:
 18181                           	opt stack 0
 18182  004408                     _USBTransferOnePacket:
 18183                           	opt stack 13
 18184                           
 18185                           ; BSR set to: 0
 18186                           ;incstack = 0
 18187                           ;USBTransferOnePacket@ep stored from wreg
 18188  004408  0100               	movlb	0	; () banked
 18189  00440A  6F81               	movwf	USBTransferOnePacket@ep& (0+255),b
 18190                           
 18191                           ;usb_device.c: 1015: volatile BDT_ENTRY* handle;
 18192                           ;usb_device.c: 1018: if(dir != 0)
 18193  00440C  0100               	movlb	0	; () banked
 18194  00440E  517D               	movf	USBTransferOnePacket@dir& (0+255),w,b
 18195  004410  B4D8               	btfsc	status,2,c
 18196  004412  D007               	goto	l1648
 18197                           
 18198                           ; BSR set to: 0
 18199                           ;usb_device.c: 1019: {
 18200                           ;usb_device.c: 1021: handle = pBDTEntryIn[ep];
 18201  004414  5181               	movf	USBTransferOnePacket@ep& (0+255),w,b
 18202  004416  0D02               	mullw	2
 18203  004418  0EB6               	movlw	low _pBDTEntryIn
 18204  00441A  24F3               	addwf	prodl,w,c
 18205  00441C  6ED9               	movwf	fsr2l,c
 18206  00441E  0E00               	movlw	high _pBDTEntryIn
 18207  004420  D006               	goto	L16
 18208  004422                     l1648:
 18209                           
 18210                           ; BSR set to: 0
 18211                           ;usb_device.c: 1023: else
 18212                           ;usb_device.c: 1024: {
 18213                           ;usb_device.c: 1026: handle = pBDTEntryOut[ep];
 18214                           
 18215                           ; BSR set to: 0
 18216  004422  5181               	movf	USBTransferOnePacket@ep& (0+255),w,b
 18217  004424  0D02               	mullw	2
 18218  004426  0E06               	movlw	low _pBDTEntryOut
 18219  004428  24F3               	addwf	prodl,w,c
 18220  00442A  6ED9               	movwf	fsr2l,c
 18221  00442C  0E03               	movlw	high _pBDTEntryOut
 18222  00442E                     L16:
 18223  00442E  20F4               	addwfc	prodh,w,c
 18224  004430  6EDA               	movwf	fsr2h,c
 18225  004432  CFDE F082          	movff	postinc2,USBTransferOnePacket@handle
 18226  004436  CFDD F083          	movff	postdec2,USBTransferOnePacket@handle+1
 18227                           
 18228                           ; BSR set to: 0
 18229                           ;usb_device.c: 1027: }
 18230                           ;usb_device.c: 1031: if(handle == 0)
 18231                           
 18232                           ; BSR set to: 0
 18233  00443A  5182               	movf	USBTransferOnePacket@handle& (0+255),w,b
 18234  00443C  1183               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 18235  00443E  A4D8               	btfss	status,2,c
 18236  004440  D005               	goto	l1650
 18237                           
 18238                           ; BSR set to: 0
 18239                           ;usb_device.c: 1032: {
 18240                           ;usb_device.c: 1033: return 0;
 18241  004442  0E00               	movlw	0
 18242  004444  6F7D               	movwf	?_USBTransferOnePacket& (0+255),b
 18243  004446  0E00               	movlw	0
 18244  004448  6F7E               	movwf	(?_USBTransferOnePacket+1)& (0+255),b
 18245                           
 18246                           ; BSR set to: 0
 18247  00444A  0012               	return	
 18248  00444C                     l1650:
 18249                           
 18250                           ; BSR set to: 0
 18251                           ;usb_device.c: 1034: }
 18252                           ;usb_device.c: 1047: handle->ADR = ((uint16_t)(data));
 18253                           
 18254                           ; BSR set to: 0
 18255  00444C  EE20 F002          	lfsr	2,2
 18256  004450  5182               	movf	USBTransferOnePacket@handle& (0+255),w,b
 18257  004452  26D9               	addwf	fsr2l,f,c
 18258  004454  5183               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 18259  004456  22DA               	addwfc	fsr2h,f,c
 18260  004458  C07E  FFDE         	movff	USBTransferOnePacket@data,postinc2
 18261  00445C  C07F  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 18262                           
 18263                           ;usb_device.c: 1048: handle->CNT = len;
 18264  004460  EE20 F001          	lfsr	2,1
 18265  004464  5182               	movf	USBTransferOnePacket@handle& (0+255),w,b
 18266  004466  26D9               	addwf	fsr2l,f,c
 18267  004468  5183               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 18268  00446A  22DA               	addwfc	fsr2h,f,c
 18269  00446C  C080  FFDF         	movff	USBTransferOnePacket@len,indf2
 18270                           
 18271                           ; BSR set to: 0
 18272                           ;usb_device.c: 1049: handle->STAT.Val &= 0x40;
 18273  004470  C082  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 18274  004474  C083  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 18275  004478  0E40               	movlw	64
 18276  00447A  16DF               	andwf	indf2,f,c
 18277                           
 18278                           ; BSR set to: 0
 18279                           ;usb_device.c: 1050: handle->STAT.Val |= (0x08 & 0x08);
 18280  00447C  C082  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 18281  004480  C083  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 18282  004484  0E00               	movlw	0
 18283  004486  86DB               	bsf	plusw2,3,c
 18284                           
 18285                           ; BSR set to: 0
 18286                           ;usb_device.c: 1051: handle->STAT.Val |= 0x80;
 18287  004488  C082  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 18288  00448C  C083  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 18289  004490  0E00               	movlw	0
 18290  004492  8EDB               	bsf	plusw2,7,c
 18291                           
 18292                           ; BSR set to: 0
 18293                           ;usb_device.c: 1054: if(dir != 0)
 18294  004494  517D               	movf	USBTransferOnePacket@dir& (0+255),w,b
 18295  004496  B4D8               	btfsc	status,2,c
 18296  004498  D007               	goto	l1652
 18297                           
 18298                           ; BSR set to: 0
 18299                           ;usb_device.c: 1055: {
 18300                           ;usb_device.c: 1057: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 18301  00449A  5181               	movf	USBTransferOnePacket@ep& (0+255),w,b
 18302  00449C  0D02               	mullw	2
 18303  00449E  0EB6               	movlw	low _pBDTEntryIn
 18304  0044A0  24F3               	addwf	prodl,w,c
 18305  0044A2  6ED9               	movwf	fsr2l,c
 18306  0044A4  0E00               	movlw	high _pBDTEntryIn
 18307  0044A6  D006               	goto	L17
 18308  0044A8                     l1652:
 18309                           
 18310                           ; BSR set to: 0
 18311                           ;usb_device.c: 1059: else
 18312                           ;usb_device.c: 1060: {
 18313                           ;usb_device.c: 1062: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 18314                           
 18315                           ; BSR set to: 0
 18316  0044A8  5181               	movf	USBTransferOnePacket@ep& (0+255),w,b
 18317  0044AA  0D02               	mullw	2
 18318  0044AC  0E06               	movlw	low _pBDTEntryOut
 18319  0044AE  24F3               	addwf	prodl,w,c
 18320  0044B0  6ED9               	movwf	fsr2l,c
 18321  0044B2  0E03               	movlw	high _pBDTEntryOut
 18322  0044B4                     L17:
 18323  0044B4  20F4               	addwfc	prodh,w,c
 18324  0044B6  6EDA               	movwf	fsr2h,c
 18325  0044B8  0E04               	movlw	4
 18326  0044BA  1ADF               	xorwf	indf2,f,c
 18327                           
 18328                           ; BSR set to: 0
 18329                           ;usb_device.c: 1063: }
 18330                           ;usb_device.c: 1064: return (void*)handle;
 18331                           
 18332                           ; BSR set to: 0
 18333  0044BC  C082  F07D         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 18334  0044C0  C083  F07E         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 18335  0044C4  0012               	return	
 18336  0044C6                     __end_of_USBTransferOnePacket:
 18337                           	opt stack 0
 18338                           tosu	equ	0xFFF
 18339                           tosh	equ	0xFFE
 18340                           tosl	equ	0xFFD
 18341                           pclath	equ	0xFFA
 18342                           tblptru	equ	0xFF8
 18343                           tblptrh	equ	0xFF7
 18344                           tblptrl	equ	0xFF6
 18345                           tablat	equ	0xFF5
 18346                           prodh	equ	0xFF4
 18347                           prodl	equ	0xFF3
 18348                           intcon	equ	0xFF2
 18349                           intcon2	equ	0xFF1
 18350                           intcon3	equ	0xFF0
 18351                           indf0	equ	0xFEF
 18352                           postinc0	equ	0xFEE
 18353                           plusw0	equ	0xFEB
 18354                           fsr0h	equ	0xFEA
 18355                           fsr0l	equ	0xFE9
 18356                           wreg	equ	0xFE8
 18357                           indf1	equ	0xFE7
 18358                           postinc1	equ	0xFE6
 18359                           postdec1	equ	0xFE5
 18360                           fsr1h	equ	0xFE2
 18361                           fsr1l	equ	0xFE1
 18362                           indf2	equ	0xFDF
 18363                           postinc2	equ	0xFDE
 18364                           postdec2	equ	0xFDD
 18365                           plusw2	equ	0xFDB
 18366                           fsr2h	equ	0xFDA
 18367                           fsr2l	equ	0xFD9
 18368                           status	equ	0xFD8
 18369                           
 18370 ;; *************** function _atoi *****************
 18371 ;; Defined at:
 18372 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/atoi.c"
 18373 ;; Parameters:    Size  Location     Type
 18374 ;;  s               2   35[BANK0 ] PTR const unsigned char 
 18375 ;;		 -> Terminal@Len(4), 
 18376 ;; Auto vars:     Size  Location     Type
 18377 ;;  a               2   40[BANK0 ] int 
 18378 ;;  sign            1   39[BANK0 ] unsigned char 
 18379 ;; Return value:  Size  Location     Type
 18380 ;;                  2   35[BANK0 ] int 
 18381 ;; Registers used:
 18382 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18383 ;; Tracked objects:
 18384 ;;		On entry : 0/0
 18385 ;;		On exit  : 0/0
 18386 ;;		Unchanged: 0/0
 18387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18388 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18389 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18390 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18391 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18392 ;;Total ram usage:        7 bytes
 18393 ;; Hardware stack levels used:    1
 18394 ;; Hardware stack levels required when called:   12
 18395 ;; This function calls:
 18396 ;;		___wmul
 18397 ;;		_isdigit
 18398 ;; This function is called by:
 18399 ;;		_Terminal
 18400 ;; This function uses a non-reentrant model
 18401 ;;
 18402                           
 18403                           	psect	text76
 18404  0038CC                     __ptext76:
 18405                           	opt stack 0
 18406  0038CC                     _atoi:
 18407                           	opt stack 13
 18408                           
 18409                           ; BSR set to: 0
 18410                           ;incstack = 0
 18411  0038CC  D003               	goto	l3110
 18412  0038CE  0100               	movlb	0	; () banked
 18413  0038D0  4B83               	infsnz	atoi@s& (0+255),f,b
 18414  0038D2  2B84               	incf	(atoi@s+1)& (0+255),f,b
 18415  0038D4                     l3110:
 18416                           
 18417                           ; BSR set to: 0
 18418  0038D4  C083  FFD9         	movff	atoi@s,fsr2l
 18419  0038D8  C084  FFDA         	movff	atoi@s+1,fsr2h
 18420  0038DC  0E20               	movlw	32
 18421  0038DE  18DE               	xorwf	postinc2,w,c
 18422  0038E0  B4D8               	btfsc	status,2,c
 18423  0038E2  D7F5               	goto	l3111
 18424  0038E4  C083  FFD9         	movff	atoi@s,fsr2l
 18425  0038E8  C084  FFDA         	movff	atoi@s+1,fsr2h
 18426  0038EC  0E09               	movlw	9
 18427  0038EE  18DE               	xorwf	postinc2,w,c
 18428  0038F0  B4D8               	btfsc	status,2,c
 18429  0038F2  D7ED               	goto	l3111
 18430  0038F4  0E00               	movlw	0
 18431  0038F6  0100               	movlb	0	; () banked
 18432  0038F8  6F89               	movwf	(atoi@a+1)& (0+255),b
 18433  0038FA  0E00               	movlw	0
 18434  0038FC  6F88               	movwf	atoi@a& (0+255),b
 18435  0038FE  0E00               	movlw	0
 18436  003900  6F87               	movwf	atoi@sign& (0+255),b
 18437                           
 18438                           ; BSR set to: 0
 18439  003902  C083  FFD9         	movff	atoi@s,fsr2l
 18440  003906  C084  FFDA         	movff	atoi@s+1,fsr2h
 18441  00390A  0E2D               	movlw	45
 18442  00390C  18DE               	xorwf	postinc2,w,c
 18443  00390E  A4D8               	btfss	status,2,c
 18444  003910  D002               	goto	l3113
 18445                           
 18446                           ; BSR set to: 0
 18447  003912  2B87               	incf	atoi@sign& (0+255),f,b
 18448  003914  D026               	goto	l14131
 18449  003916                     l3113:
 18450                           
 18451                           ; BSR set to: 0
 18452                           
 18453                           ; BSR set to: 0
 18454  003916  C083  FFD9         	movff	atoi@s,fsr2l
 18455  00391A  C084  FFDA         	movff	atoi@s+1,fsr2h
 18456  00391E  0E2B               	movlw	43
 18457  003920  18DE               	xorwf	postinc2,w,c
 18458  003922  A4D8               	btfss	status,2,c
 18459  003924  D020               	goto	l3116
 18460  003926  D01D               	goto	l14131
 18461  003928                     
 18462                           ; BSR set to: 0
 18463  003928  C088  F07D         	movff	atoi@a,___wmul@multiplier
 18464  00392C  C089  F07E         	movff	atoi@a+1,___wmul@multiplier+1
 18465  003930  0E00               	movlw	0
 18466  003932  0100               	movlb	0	; () banked
 18467  003934  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 18468  003936  0E0A               	movlw	10
 18469  003938  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 18470  00393A  ECE8  F033         	call	___wmul	;wreg free
 18471  00393E  C083  FFD9         	movff	atoi@s,fsr2l
 18472  003942  C084  FFDA         	movff	atoi@s+1,fsr2h
 18473  003946  50DF               	movf	indf2,w,c
 18474  003948  0100               	movlb	0	; () banked
 18475  00394A  6F85               	movwf	??_atoi& (0+255),b
 18476  00394C  6B86               	clrf	(??_atoi+1)& (0+255),b
 18477  00394E  517D               	movf	?___wmul& (0+255),w,b
 18478  003950  2785               	addwf	??_atoi& (0+255),f,b
 18479  003952  517E               	movf	(?___wmul+1)& (0+255),w,b
 18480  003954  2386               	addwfc	(??_atoi+1)& (0+255),f,b
 18481  003956  0ED0               	movlw	208
 18482  003958  2585               	addwf	??_atoi& (0+255),w,b
 18483  00395A  6F88               	movwf	atoi@a& (0+255),b
 18484  00395C  0EFF               	movlw	255
 18485  00395E  2186               	addwfc	(??_atoi+1)& (0+255),w,b
 18486  003960  6F89               	movwf	(atoi@a+1)& (0+255),b
 18487  003962                     l14131:
 18488                           
 18489                           ; BSR set to: 0
 18490  003962  4B83               	infsnz	atoi@s& (0+255),f,b
 18491  003964  2B84               	incf	(atoi@s+1)& (0+255),f,b
 18492  003966                     l3116:
 18493                           
 18494                           ; BSR set to: 0
 18495                           
 18496                           ; BSR set to: 0
 18497  003966  C083  FFD9         	movff	atoi@s,fsr2l
 18498  00396A  C084  FFDA         	movff	atoi@s+1,fsr2h
 18499  00396E  50DF               	movf	indf2,w,c
 18500  003970  EC9B  F034         	call	_isdigit
 18501  003974  B0D8               	btfsc	status,0,c
 18502  003976  D7D8               	goto	l3117
 18503  003978  0100               	movlb	0	; () banked
 18504  00397A  5187               	movf	atoi@sign& (0+255),w,b
 18505  00397C  B4D8               	btfsc	status,2,c
 18506  00397E  D00D               	goto	l3119
 18507                           
 18508                           ; BSR set to: 0
 18509  003980  C088  F085         	movff	atoi@a,??_atoi
 18510  003984  C089  F086         	movff	atoi@a+1,??_atoi+1
 18511  003988  1F85               	comf	??_atoi& (0+255),f,b
 18512  00398A  1F86               	comf	(??_atoi+1)& (0+255),f,b
 18513  00398C  4B85               	infsnz	??_atoi& (0+255),f,b
 18514  00398E  2B86               	incf	(??_atoi+1)& (0+255),f,b
 18515  003990  C085  F083         	movff	??_atoi,?_atoi
 18516  003994  C086  F084         	movff	??_atoi+1,?_atoi+1
 18517  003998  0012               	return	
 18518  00399A                     l3119:
 18519                           
 18520                           ; BSR set to: 0
 18521  00399A  C088  F083         	movff	atoi@a,?_atoi
 18522  00399E  C089  F084         	movff	atoi@a+1,?_atoi+1
 18523                           
 18524                           ; BSR set to: 0
 18525  0039A2  0012               	return		;funcret
 18526  0039A4                     __end_of_atoi:
 18527                           	opt stack 0
 18528                           tosu	equ	0xFFF
 18529                           tosh	equ	0xFFE
 18530                           tosl	equ	0xFFD
 18531                           pclath	equ	0xFFA
 18532                           tblptru	equ	0xFF8
 18533                           tblptrh	equ	0xFF7
 18534                           tblptrl	equ	0xFF6
 18535                           tablat	equ	0xFF5
 18536                           prodh	equ	0xFF4
 18537                           prodl	equ	0xFF3
 18538                           intcon	equ	0xFF2
 18539                           intcon2	equ	0xFF1
 18540                           intcon3	equ	0xFF0
 18541                           indf0	equ	0xFEF
 18542                           postinc0	equ	0xFEE
 18543                           plusw0	equ	0xFEB
 18544                           fsr0h	equ	0xFEA
 18545                           fsr0l	equ	0xFE9
 18546                           wreg	equ	0xFE8
 18547                           indf1	equ	0xFE7
 18548                           postinc1	equ	0xFE6
 18549                           postdec1	equ	0xFE5
 18550                           fsr1h	equ	0xFE2
 18551                           fsr1l	equ	0xFE1
 18552                           indf2	equ	0xFDF
 18553                           postinc2	equ	0xFDE
 18554                           postdec2	equ	0xFDD
 18555                           plusw2	equ	0xFDB
 18556                           fsr2h	equ	0xFDA
 18557                           fsr2l	equ	0xFD9
 18558                           status	equ	0xFD8
 18559                           
 18560 ;; *************** function _isdigit *****************
 18561 ;; Defined at:
 18562 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isdigit.c"
 18563 ;; Parameters:    Size  Location     Type
 18564 ;;  c               1    wreg     unsigned char 
 18565 ;; Auto vars:     Size  Location     Type
 18566 ;;  c               1   31[BANK0 ] unsigned char 
 18567 ;; Return value:  Size  Location     Type
 18568 ;;		None               void
 18569 ;; Registers used:
 18570 ;;		wreg, status,2, status,0
 18571 ;; Tracked objects:
 18572 ;;		On entry : 0/0
 18573 ;;		On exit  : 0/0
 18574 ;;		Unchanged: 0/0
 18575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18576 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18577 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18578 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18579 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18580 ;;Total ram usage:        3 bytes
 18581 ;; Hardware stack levels used:    1
 18582 ;; Hardware stack levels required when called:   11
 18583 ;; This function calls:
 18584 ;;		Nothing
 18585 ;; This function is called by:
 18586 ;;		_atoi
 18587 ;;		_strtol
 18588 ;;		_xtoi
 18589 ;;		_isxdigit
 18590 ;; This function uses a non-reentrant model
 18591 ;;
 18592                           
 18593                           	psect	text77
 18594  006936                     __ptext77:
 18595                           	opt stack 0
 18596  006936                     _isdigit:
 18597                           	opt stack 12
 18598                           
 18599                           ; BSR set to: 0
 18600                           ;incstack = 0
 18601                           ;isdigit@c stored from wreg
 18602  006936  0100               	movlb	0	; () banked
 18603  006938  6F7F               	movwf	isdigit@c& (0+255),b
 18604  00693A  0E00               	movlw	0
 18605  00693C  0100               	movlb	0	; () banked
 18606  00693E  6F7E               	movwf	_isdigit$6457& (0+255),b
 18607                           
 18608                           ; BSR set to: 0
 18609  006940  0E3A               	movlw	58
 18610  006942  617F               	cpfslt	isdigit@c& (0+255),b
 18611  006944  D005               	goto	l3291
 18612                           
 18613                           ; BSR set to: 0
 18614  006946  0E2F               	movlw	47
 18615  006948  657F               	cpfsgt	isdigit@c& (0+255),b
 18616  00694A  D002               	goto	l3291
 18617                           
 18618                           ; BSR set to: 0
 18619  00694C  0E01               	movlw	1
 18620  00694E  6F7E               	movwf	_isdigit$6457& (0+255),b
 18621  006950                     l3291:
 18622                           
 18623                           ; BSR set to: 0
 18624                           
 18625                           ; BSR set to: 0
 18626  006950  C07E  F07D         	movff	_isdigit$6457,??_isdigit
 18627  006954  317D               	rrcf	??_isdigit& (0+255),w,b
 18628  006956  0012               	return	
 18629  006958                     __end_of_isdigit:
 18630                           	opt stack 0
 18631                           tosu	equ	0xFFF
 18632                           tosh	equ	0xFFE
 18633                           tosl	equ	0xFFD
 18634                           pclath	equ	0xFFA
 18635                           tblptru	equ	0xFF8
 18636                           tblptrh	equ	0xFF7
 18637                           tblptrl	equ	0xFF6
 18638                           tablat	equ	0xFF5
 18639                           prodh	equ	0xFF4
 18640                           prodl	equ	0xFF3
 18641                           intcon	equ	0xFF2
 18642                           intcon2	equ	0xFF1
 18643                           intcon3	equ	0xFF0
 18644                           indf0	equ	0xFEF
 18645                           postinc0	equ	0xFEE
 18646                           plusw0	equ	0xFEB
 18647                           fsr0h	equ	0xFEA
 18648                           fsr0l	equ	0xFE9
 18649                           wreg	equ	0xFE8
 18650                           indf1	equ	0xFE7
 18651                           postinc1	equ	0xFE6
 18652                           postdec1	equ	0xFE5
 18653                           fsr1h	equ	0xFE2
 18654                           fsr1l	equ	0xFE1
 18655                           indf2	equ	0xFDF
 18656                           postinc2	equ	0xFDE
 18657                           postdec2	equ	0xFDD
 18658                           plusw2	equ	0xFDB
 18659                           fsr2h	equ	0xFDA
 18660                           fsr2l	equ	0xFD9
 18661                           status	equ	0xFD8
 18662                           
 18663 ;; *************** function _Rtcm_SetRtccDate *****************
 18664 ;; Defined at:
 18665 ;;		line 176 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/rtcm.c"
 18666 ;; Parameters:    Size  Location     Type
 18667 ;;  Date            8   41[BANK0 ] struct _RtccDateType
 18668 ;; Auto vars:     Size  Location     Type
 18669 ;;		None
 18670 ;; Return value:  Size  Location     Type
 18671 ;;                  1    wreg      void 
 18672 ;; Registers used:
 18673 ;;		wreg, status,2, status,0, cstack
 18674 ;; Tracked objects:
 18675 ;;		On entry : 0/0
 18676 ;;		On exit  : 0/0
 18677 ;;		Unchanged: 0/0
 18678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18679 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18680 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18681 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18682 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18683 ;;Total ram usage:        8 bytes
 18684 ;; Hardware stack levels used:    1
 18685 ;; Hardware stack levels required when called:   13
 18686 ;; This function calls:
 18687 ;;		_Rtcc_LockRtc
 18688 ;;		_Rtcc_SetRtccValue
 18689 ;;		_Rtcc_UnlockRtc
 18690 ;; This function is called by:
 18691 ;;		_Rtcm_MainTask
 18692 ;; This function uses a non-reentrant model
 18693 ;;
 18694                           
 18695                           	psect	text78
 18696  005C44                     __ptext78:
 18697                           	opt stack 0
 18698  005C44                     _Rtcm_SetRtccDate:
 18699                           	opt stack 14
 18700                           
 18701                           ;rtcm.c: 179: Rtcc_UnlockRtc();
 18702                           
 18703                           ; BSR set to: 0
 18704                           ;incstack = 0
 18705  005C44  ECDF  F035         	call	_Rtcc_UnlockRtc	;wreg free
 18706                           
 18707                           ;rtcm.c: 182: Rtcc_SetRtccValue(ValPtrYear,(Date.Year - 2000));
 18708  005C48  0100               	movlb	0	; () banked
 18709  005C4A  5189               	movf	Rtcm_SetRtccDate@Date& (0+255),w,b
 18710  005C4C  0F30               	addlw	48
 18711  005C4E  6F85               	movwf	Rtcc_SetRtccValue@Value& (0+255),b
 18712  005C50  0E00               	movlw	0
 18713  005C52  ECF7  F00A         	call	_Rtcc_SetRtccValue
 18714                           
 18715                           ;rtcm.c: 183: Rtcc_SetRtccValue(ValPtrMonth,Date.Month);
 18716  005C56  C08B  F085         	movff	Rtcm_SetRtccDate@Date+2,Rtcc_SetRtccValue@Value
 18717  005C5A  0E01               	movlw	1
 18718  005C5C  ECF7  F00A         	call	_Rtcc_SetRtccValue
 18719                           
 18720                           ;rtcm.c: 184: Rtcc_SetRtccValue(ValPtrDay,Date.Day);
 18721  005C60  C08C  F085         	movff	Rtcm_SetRtccDate@Date+3,Rtcc_SetRtccValue@Value
 18722  005C64  0E02               	movlw	2
 18723  005C66  ECF7  F00A         	call	_Rtcc_SetRtccValue
 18724                           
 18725                           ;rtcm.c: 185: Rtcc_SetRtccValue(ValPtrWeekday,Date.Weekday);
 18726  005C6A  C08D  F085         	movff	Rtcm_SetRtccDate@Date+4,Rtcc_SetRtccValue@Value
 18727  005C6E  0E03               	movlw	3
 18728  005C70  ECF7  F00A         	call	_Rtcc_SetRtccValue
 18729                           
 18730                           ;rtcm.c: 186: Rtcc_SetRtccValue(ValPtrHours,Date.Hour);
 18731  005C74  C08E  F085         	movff	Rtcm_SetRtccDate@Date+5,Rtcc_SetRtccValue@Value
 18732  005C78  0E04               	movlw	4
 18733  005C7A  ECF7  F00A         	call	_Rtcc_SetRtccValue
 18734                           
 18735                           ;rtcm.c: 187: Rtcc_SetRtccValue(ValPtrMinutes,Date.Minute);
 18736  005C7E  C08F  F085         	movff	Rtcm_SetRtccDate@Date+6,Rtcc_SetRtccValue@Value
 18737  005C82  0E05               	movlw	5
 18738  005C84  ECF7  F00A         	call	_Rtcc_SetRtccValue
 18739                           
 18740                           ;rtcm.c: 188: Rtcc_SetRtccValue(ValPtrSeconds,Date.Second);
 18741  005C88  C090  F085         	movff	Rtcm_SetRtccDate@Date+7,Rtcc_SetRtccValue@Value
 18742  005C8C  0E06               	movlw	6
 18743  005C8E  ECF7  F00A         	call	_Rtcc_SetRtccValue
 18744                           
 18745                           ;rtcm.c: 191: Rtcc_LockRtc();
 18746  005C92  ECE7  F035         	call	_Rtcc_LockRtc	;wreg free
 18747  005C96  0012               	return		;funcret
 18748  005C98                     __end_of_Rtcm_SetRtccDate:
 18749                           	opt stack 0
 18750                           tosu	equ	0xFFF
 18751                           tosh	equ	0xFFE
 18752                           tosl	equ	0xFFD
 18753                           pclath	equ	0xFFA
 18754                           tblptru	equ	0xFF8
 18755                           tblptrh	equ	0xFF7
 18756                           tblptrl	equ	0xFF6
 18757                           tablat	equ	0xFF5
 18758                           prodh	equ	0xFF4
 18759                           prodl	equ	0xFF3
 18760                           intcon	equ	0xFF2
 18761                           intcon2	equ	0xFF1
 18762                           intcon3	equ	0xFF0
 18763                           indf0	equ	0xFEF
 18764                           postinc0	equ	0xFEE
 18765                           plusw0	equ	0xFEB
 18766                           fsr0h	equ	0xFEA
 18767                           fsr0l	equ	0xFE9
 18768                           wreg	equ	0xFE8
 18769                           indf1	equ	0xFE7
 18770                           postinc1	equ	0xFE6
 18771                           postdec1	equ	0xFE5
 18772                           fsr1h	equ	0xFE2
 18773                           fsr1l	equ	0xFE1
 18774                           indf2	equ	0xFDF
 18775                           postinc2	equ	0xFDE
 18776                           postdec2	equ	0xFDD
 18777                           plusw2	equ	0xFDB
 18778                           fsr2h	equ	0xFDA
 18779                           fsr2l	equ	0xFD9
 18780                           status	equ	0xFD8
 18781                           
 18782 ;; *************** function _Rtcc_UnlockRtc *****************
 18783 ;; Defined at:
 18784 ;;		line 163 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 18785 ;; Parameters:    Size  Location     Type
 18786 ;;		None
 18787 ;; Auto vars:     Size  Location     Type
 18788 ;;		None
 18789 ;; Return value:  Size  Location     Type
 18790 ;;                  1    wreg      void 
 18791 ;; Registers used:
 18792 ;;		None
 18793 ;; Tracked objects:
 18794 ;;		On entry : 0/0
 18795 ;;		On exit  : 0/0
 18796 ;;		Unchanged: 0/0
 18797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18798 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18799 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18801 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18802 ;;Total ram usage:        0 bytes
 18803 ;; Hardware stack levels used:    1
 18804 ;; Hardware stack levels required when called:   11
 18805 ;; This function calls:
 18806 ;;		Nothing
 18807 ;; This function is called by:
 18808 ;;		_Rtcm_MainTask
 18809 ;;		_Rtcm_SetRtccDate
 18810 ;;		_Rtcm_SetRtccAlarm
 18811 ;; This function uses a non-reentrant model
 18812 ;;
 18813                           
 18814                           	psect	text79
 18815  006BBE                     __ptext79:
 18816                           	opt stack 0
 18817  006BBE                     _Rtcc_UnlockRtc:
 18818                           	opt stack 15
 18819                           
 18820                           ;incstack = 0
 18821  006BBE  010F               	movlb	15	;# 
 18822  006BC0  0E55               	movlw	85	;# 
 18823  006BC2  6EA7               	movwf	4007,c	;# 
 18824  006BC4  0EAA               	movlw	170	;# 
 18825  006BC6  6EA7               	movwf	4007,c	;# 
 18826                           
 18827                           ;rtcc_drv.c: 172: RTCCFGbits.RTCWREN = 1u;
 18828  006BC8  010F               	movlb	15	; () banked
 18829  006BCA  8B3F               	bsf	63,5,b	;volatile
 18830                           
 18831                           ; BSR set to: 15
 18832  006BCC  0012               	return		;funcret
 18833  006BCE                     __end_of_Rtcc_UnlockRtc:
 18834                           	opt stack 0
 18835                           tosu	equ	0xFFF
 18836                           tosh	equ	0xFFE
 18837                           tosl	equ	0xFFD
 18838                           pclath	equ	0xFFA
 18839                           tblptru	equ	0xFF8
 18840                           tblptrh	equ	0xFF7
 18841                           tblptrl	equ	0xFF6
 18842                           tablat	equ	0xFF5
 18843                           prodh	equ	0xFF4
 18844                           prodl	equ	0xFF3
 18845                           intcon	equ	0xFF2
 18846                           intcon2	equ	0xFF1
 18847                           intcon3	equ	0xFF0
 18848                           indf0	equ	0xFEF
 18849                           postinc0	equ	0xFEE
 18850                           plusw0	equ	0xFEB
 18851                           fsr0h	equ	0xFEA
 18852                           fsr0l	equ	0xFE9
 18853                           wreg	equ	0xFE8
 18854                           indf1	equ	0xFE7
 18855                           postinc1	equ	0xFE6
 18856                           postdec1	equ	0xFE5
 18857                           fsr1h	equ	0xFE2
 18858                           fsr1l	equ	0xFE1
 18859                           indf2	equ	0xFDF
 18860                           postinc2	equ	0xFDE
 18861                           postdec2	equ	0xFDD
 18862                           plusw2	equ	0xFDB
 18863                           fsr2h	equ	0xFDA
 18864                           fsr2l	equ	0xFD9
 18865                           status	equ	0xFD8
 18866                           
 18867 ;; *************** function _Rtcc_SetRtccValue *****************
 18868 ;; Defined at:
 18869 ;;		line 383 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 18870 ;; Parameters:    Size  Location     Type
 18871 ;;  RtccPtrVal      1    wreg     enum E7757
 18872 ;;  Value           1   37[BANK0 ] unsigned char 
 18873 ;; Auto vars:     Size  Location     Type
 18874 ;;  RtccPtrVal      1   40[BANK0 ] enum E7757
 18875 ;; Return value:  Size  Location     Type
 18876 ;;                  1    wreg      void 
 18877 ;; Registers used:
 18878 ;;		wreg, status,2, status,0, cstack
 18879 ;; Tracked objects:
 18880 ;;		On entry : 0/0
 18881 ;;		On exit  : 0/0
 18882 ;;		Unchanged: 0/0
 18883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18884 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18885 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18886 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18887 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18888 ;;Total ram usage:        4 bytes
 18889 ;; Hardware stack levels used:    1
 18890 ;; Hardware stack levels required when called:   12
 18891 ;; This function calls:
 18892 ;;		___awdiv
 18893 ;;		___awmod
 18894 ;; This function is called by:
 18895 ;;		_Rtcm_SetRtccDate
 18896 ;; This function uses a non-reentrant model
 18897 ;;
 18898                           
 18899                           	psect	text80
 18900  0015EE                     __ptext80:
 18901                           	opt stack 0
 18902  0015EE                     _Rtcc_SetRtccValue:
 18903                           	opt stack 14
 18904                           
 18905                           ; BSR set to: 15
 18906                           ;incstack = 0
 18907                           ;Rtcc_SetRtccValue@RtccPtrVal stored from wreg
 18908  0015EE  0100               	movlb	0	; () banked
 18909  0015F0  6F88               	movwf	Rtcc_SetRtccValue@RtccPtrVal& (0+255),b
 18910                           
 18911                           ;rtcc_drv.c: 385: switch (RtccPtrVal)
 18912  0015F2  D0FC               	goto	l441
 18913  0015F4                     l442:
 18914                           
 18915                           ; BSR set to: 0
 18916                           ;rtcc_drv.c: 389: RTCCFGbits.RTCPTR1 = 1U;
 18917  0015F4  010F               	movlb	15	; () banked
 18918  0015F6  833F               	bsf	63,1,b	;volatile
 18919                           
 18920                           ;rtcc_drv.c: 390: RTCCFGbits.RTCPTR0 = 1U;
 18921  0015F8  813F               	bsf	63,0,b	;volatile
 18922                           
 18923                           ; BSR set to: 15
 18924                           ;rtcc_drv.c: 392: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 18925  0015FA  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 18926  0015FE  0100               	movlb	0	; () banked
 18927  001600  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 18928  001602  0E00               	movlw	0
 18929  001604  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 18930  001606  0E0A               	movlw	10
 18931  001608  6F7F               	movwf	___awmod@divisor& (0+255),b
 18932  00160A  EC7E  F02A         	call	___awmod	;wreg free
 18933  00160E  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 18934  001612  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 18935  001616  0E0F               	movlw	15
 18936  001618  0100               	movlb	0	; () banked
 18937  00161A  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 18938  00161C  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 18939  001620  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 18940  001622  0E00               	movlw	0
 18941  001624  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 18942  001626  0E0A               	movlw	10
 18943  001628  6F7F               	movwf	___awdiv@divisor& (0+255),b
 18944  00162A  EC7E  F029         	call	___awdiv	;wreg free
 18945  00162E  0100               	movlb	0	; () banked
 18946  001630  397D               	swapf	?___awdiv& (0+255),w,b
 18947  001632  0BF0               	andlw	240
 18948  001634  0BF0               	andlw	240
 18949  001636  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 18950  001638  6E98               	movwf	3992,c	;volatile
 18951                           
 18952                           ;rtcc_drv.c: 393: break;
 18953  00163A  0012               	return	
 18954  00163C                     l444:
 18955                           
 18956                           ; BSR set to: 0
 18957                           ;rtcc_drv.c: 397: RTCCFGbits.RTCPTR1 = 1U;
 18958  00163C  010F               	movlb	15	; () banked
 18959  00163E  833F               	bsf	63,1,b	;volatile
 18960                           
 18961                           ;rtcc_drv.c: 398: RTCCFGbits.RTCPTR0 = 0U;
 18962  001640  913F               	bcf	63,0,b	;volatile
 18963                           
 18964                           ; BSR set to: 15
 18965                           ;rtcc_drv.c: 400: RTCVALH = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 18966  001642  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 18967  001646  0100               	movlb	0	; () banked
 18968  001648  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 18969  00164A  0E00               	movlw	0
 18970  00164C  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 18971  00164E  0E0A               	movlw	10
 18972  001650  6F7F               	movwf	___awmod@divisor& (0+255),b
 18973  001652  EC7E  F02A         	call	___awmod	;wreg free
 18974  001656  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 18975  00165A  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 18976  00165E  0E0F               	movlw	15
 18977  001660  0100               	movlb	0	; () banked
 18978  001662  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 18979  001664  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 18980  001668  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 18981  00166A  0E00               	movlw	0
 18982  00166C  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 18983  00166E  0E0A               	movlw	10
 18984  001670  6F7F               	movwf	___awdiv@divisor& (0+255),b
 18985  001672  EC7E  F029         	call	___awdiv	;wreg free
 18986  001676  0100               	movlb	0	; () banked
 18987  001678  397D               	swapf	?___awdiv& (0+255),w,b
 18988  00167A  0BF0               	andlw	240
 18989  00167C  0BF0               	andlw	240
 18990  00167E  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 18991  001680  6E99               	movwf	3993,c	;volatile
 18992                           
 18993                           ;rtcc_drv.c: 401: break;
 18994  001682  0012               	return	
 18995  001684                     l445:
 18996                           
 18997                           ; BSR set to: 0
 18998                           ;rtcc_drv.c: 405: RTCCFGbits.RTCPTR1 = 1U;
 18999  001684  010F               	movlb	15	; () banked
 19000  001686  833F               	bsf	63,1,b	;volatile
 19001                           
 19002                           ;rtcc_drv.c: 406: RTCCFGbits.RTCPTR0 = 0U;
 19003  001688  913F               	bcf	63,0,b	;volatile
 19004                           
 19005                           ; BSR set to: 15
 19006                           ;rtcc_drv.c: 408: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19007  00168A  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19008  00168E  0100               	movlb	0	; () banked
 19009  001690  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19010  001692  0E00               	movlw	0
 19011  001694  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19012  001696  0E0A               	movlw	10
 19013  001698  6F7F               	movwf	___awmod@divisor& (0+255),b
 19014  00169A  EC7E  F02A         	call	___awmod	;wreg free
 19015  00169E  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19016  0016A2  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19017  0016A6  0E0F               	movlw	15
 19018  0016A8  0100               	movlb	0	; () banked
 19019  0016AA  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19020  0016AC  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19021  0016B0  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19022  0016B2  0E00               	movlw	0
 19023  0016B4  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19024  0016B6  0E0A               	movlw	10
 19025  0016B8  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19026  0016BA  EC7E  F029         	call	___awdiv	;wreg free
 19027  0016BE  0100               	movlb	0	; () banked
 19028  0016C0  397D               	swapf	?___awdiv& (0+255),w,b
 19029  0016C2  0BF0               	andlw	240
 19030  0016C4  0BF0               	andlw	240
 19031  0016C6  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19032  0016C8  6E98               	movwf	3992,c	;volatile
 19033                           
 19034                           ;rtcc_drv.c: 409: break;
 19035  0016CA  0012               	return	
 19036  0016CC                     l446:
 19037                           
 19038                           ; BSR set to: 0
 19039                           ;rtcc_drv.c: 413: RTCCFGbits.RTCPTR1 = 0U;
 19040  0016CC  010F               	movlb	15	; () banked
 19041  0016CE  933F               	bcf	63,1,b	;volatile
 19042                           
 19043                           ;rtcc_drv.c: 414: RTCCFGbits.RTCPTR0 = 1U;
 19044  0016D0  813F               	bsf	63,0,b	;volatile
 19045                           
 19046                           ; BSR set to: 15
 19047                           ;rtcc_drv.c: 416: RTCVALH = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19048  0016D2  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19049  0016D6  0100               	movlb	0	; () banked
 19050  0016D8  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19051  0016DA  0E00               	movlw	0
 19052  0016DC  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19053  0016DE  0E0A               	movlw	10
 19054  0016E0  6F7F               	movwf	___awmod@divisor& (0+255),b
 19055  0016E2  EC7E  F02A         	call	___awmod	;wreg free
 19056  0016E6  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19057  0016EA  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19058  0016EE  0E0F               	movlw	15
 19059  0016F0  0100               	movlb	0	; () banked
 19060  0016F2  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19061  0016F4  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19062  0016F8  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19063  0016FA  0E00               	movlw	0
 19064  0016FC  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19065  0016FE  0E0A               	movlw	10
 19066  001700  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19067  001702  EC7E  F029         	call	___awdiv	;wreg free
 19068  001706  0100               	movlb	0	; () banked
 19069  001708  397D               	swapf	?___awdiv& (0+255),w,b
 19070  00170A  0BF0               	andlw	240
 19071  00170C  0BF0               	andlw	240
 19072  00170E  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19073  001710  6E99               	movwf	3993,c	;volatile
 19074                           
 19075                           ;rtcc_drv.c: 417: break;
 19076  001712  0012               	return	
 19077  001714                     l447:
 19078                           
 19079                           ; BSR set to: 0
 19080                           ;rtcc_drv.c: 421: RTCCFGbits.RTCPTR1 = 0U;
 19081  001714  010F               	movlb	15	; () banked
 19082  001716  933F               	bcf	63,1,b	;volatile
 19083                           
 19084                           ;rtcc_drv.c: 422: RTCCFGbits.RTCPTR0 = 1U;
 19085  001718  813F               	bsf	63,0,b	;volatile
 19086                           
 19087                           ; BSR set to: 15
 19088                           ;rtcc_drv.c: 424: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19089  00171A  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19090  00171E  0100               	movlb	0	; () banked
 19091  001720  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19092  001722  0E00               	movlw	0
 19093  001724  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19094  001726  0E0A               	movlw	10
 19095  001728  6F7F               	movwf	___awmod@divisor& (0+255),b
 19096  00172A  EC7E  F02A         	call	___awmod	;wreg free
 19097  00172E  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19098  001732  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19099  001736  0E0F               	movlw	15
 19100  001738  0100               	movlb	0	; () banked
 19101  00173A  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19102  00173C  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19103  001740  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19104  001742  0E00               	movlw	0
 19105  001744  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19106  001746  0E0A               	movlw	10
 19107  001748  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19108  00174A  EC7E  F029         	call	___awdiv	;wreg free
 19109  00174E  0100               	movlb	0	; () banked
 19110  001750  397D               	swapf	?___awdiv& (0+255),w,b
 19111  001752  0BF0               	andlw	240
 19112  001754  0BF0               	andlw	240
 19113  001756  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19114  001758  6E98               	movwf	3992,c	;volatile
 19115                           
 19116                           ;rtcc_drv.c: 425: break;
 19117  00175A  0012               	return	
 19118  00175C                     l448:
 19119                           
 19120                           ; BSR set to: 0
 19121                           ;rtcc_drv.c: 429: RTCCFGbits.RTCPTR1 = 0U;
 19122  00175C  010F               	movlb	15	; () banked
 19123  00175E  933F               	bcf	63,1,b	;volatile
 19124                           
 19125                           ;rtcc_drv.c: 430: RTCCFGbits.RTCPTR0 = 0U;
 19126  001760  913F               	bcf	63,0,b	;volatile
 19127                           
 19128                           ; BSR set to: 15
 19129                           ;rtcc_drv.c: 432: RTCVALH = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19130  001762  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19131  001766  0100               	movlb	0	; () banked
 19132  001768  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19133  00176A  0E00               	movlw	0
 19134  00176C  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19135  00176E  0E0A               	movlw	10
 19136  001770  6F7F               	movwf	___awmod@divisor& (0+255),b
 19137  001772  EC7E  F02A         	call	___awmod	;wreg free
 19138  001776  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19139  00177A  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19140  00177E  0E0F               	movlw	15
 19141  001780  0100               	movlb	0	; () banked
 19142  001782  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19143  001784  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19144  001788  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19145  00178A  0E00               	movlw	0
 19146  00178C  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19147  00178E  0E0A               	movlw	10
 19148  001790  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19149  001792  EC7E  F029         	call	___awdiv	;wreg free
 19150  001796  0100               	movlb	0	; () banked
 19151  001798  397D               	swapf	?___awdiv& (0+255),w,b
 19152  00179A  0BF0               	andlw	240
 19153  00179C  0BF0               	andlw	240
 19154  00179E  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19155  0017A0  6E99               	movwf	3993,c	;volatile
 19156                           
 19157                           ;rtcc_drv.c: 433: break;
 19158  0017A2  0012               	return	
 19159  0017A4                     l449:
 19160                           
 19161                           ; BSR set to: 0
 19162                           ;rtcc_drv.c: 437: RTCCFGbits.RTCPTR1 = 0U;
 19163  0017A4  010F               	movlb	15	; () banked
 19164  0017A6  933F               	bcf	63,1,b	;volatile
 19165                           
 19166                           ;rtcc_drv.c: 438: RTCCFGbits.RTCPTR0 = 0U;
 19167  0017A8  913F               	bcf	63,0,b	;volatile
 19168                           
 19169                           ; BSR set to: 15
 19170                           ;rtcc_drv.c: 440: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19171  0017AA  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19172  0017AE  0100               	movlb	0	; () banked
 19173  0017B0  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19174  0017B2  0E00               	movlw	0
 19175  0017B4  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19176  0017B6  0E0A               	movlw	10
 19177  0017B8  6F7F               	movwf	___awmod@divisor& (0+255),b
 19178  0017BA  EC7E  F02A         	call	___awmod	;wreg free
 19179  0017BE  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19180  0017C2  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19181  0017C6  0E0F               	movlw	15
 19182  0017C8  0100               	movlb	0	; () banked
 19183  0017CA  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19184  0017CC  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19185  0017D0  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19186  0017D2  0E00               	movlw	0
 19187  0017D4  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19188  0017D6  0E0A               	movlw	10
 19189  0017D8  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19190  0017DA  EC7E  F029         	call	___awdiv	;wreg free
 19191  0017DE  0100               	movlb	0	; () banked
 19192  0017E0  397D               	swapf	?___awdiv& (0+255),w,b
 19193  0017E2  0BF0               	andlw	240
 19194  0017E4  0BF0               	andlw	240
 19195  0017E6  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19196  0017E8  6E98               	movwf	3992,c	;volatile
 19197                           
 19198                           ; BSR set to: 0
 19199                           ;rtcc_drv.c: 445: }
 19200                           
 19201                           ; BSR set to: 0
 19202                           ;rtcc_drv.c: 444: break;
 19203                           
 19204                           ;rtcc_drv.c: 443: default:
 19205                           
 19206                           ;rtcc_drv.c: 441: break;
 19207  0017EA  0012               	return	
 19208  0017EC                     l441:
 19209                           
 19210                           ; BSR set to: 0
 19211  0017EC  0100               	movlb	0	; () banked
 19212  0017EE  5188               	movf	Rtcc_SetRtccValue@RtccPtrVal& (0+255),w,b
 19213                           
 19214                           ; Switch size 1, requested type "space"
 19215                           ; Number of cases is 7, Range of values is 0 to 6
 19216                           ; switch strategies available:
 19217                           ; Name         Instructions Cycles
 19218                           ; simple_byte           22    12 (average)
 19219                           ;	Chosen strategy is simple_byte
 19220  0017F0  0A00               	xorlw	0	; case 0
 19221  0017F2  B4D8               	btfsc	status,2,c
 19222  0017F4  D6FF               	goto	l442
 19223  0017F6  0A01               	xorlw	1	; case 1
 19224  0017F8  B4D8               	btfsc	status,2,c
 19225  0017FA  D720               	goto	l444
 19226  0017FC  0A03               	xorlw	3	; case 2
 19227  0017FE  B4D8               	btfsc	status,2,c
 19228  001800  D741               	goto	l445
 19229  001802  0A01               	xorlw	1	; case 3
 19230  001804  B4D8               	btfsc	status,2,c
 19231  001806  D762               	goto	l446
 19232  001808  0A07               	xorlw	7	; case 4
 19233  00180A  B4D8               	btfsc	status,2,c
 19234  00180C  D783               	goto	l447
 19235  00180E  0A01               	xorlw	1	; case 5
 19236  001810  B4D8               	btfsc	status,2,c
 19237  001812  D7A4               	goto	l448
 19238  001814  0A03               	xorlw	3	; case 6
 19239  001816  A4D8               	btfss	status,2,c
 19240  001818  0012               	return	
 19241  00181A  D7C4               	goto	l449
 19242  00181C                     __end_of_Rtcc_SetRtccValue:
 19243                           	opt stack 0
 19244                           tosu	equ	0xFFF
 19245                           tosh	equ	0xFFE
 19246                           tosl	equ	0xFFD
 19247                           pclath	equ	0xFFA
 19248                           tblptru	equ	0xFF8
 19249                           tblptrh	equ	0xFF7
 19250                           tblptrl	equ	0xFF6
 19251                           tablat	equ	0xFF5
 19252                           prodh	equ	0xFF4
 19253                           prodl	equ	0xFF3
 19254                           intcon	equ	0xFF2
 19255                           intcon2	equ	0xFF1
 19256                           intcon3	equ	0xFF0
 19257                           indf0	equ	0xFEF
 19258                           postinc0	equ	0xFEE
 19259                           plusw0	equ	0xFEB
 19260                           fsr0h	equ	0xFEA
 19261                           fsr0l	equ	0xFE9
 19262                           wreg	equ	0xFE8
 19263                           indf1	equ	0xFE7
 19264                           postinc1	equ	0xFE6
 19265                           postdec1	equ	0xFE5
 19266                           fsr1h	equ	0xFE2
 19267                           fsr1l	equ	0xFE1
 19268                           indf2	equ	0xFDF
 19269                           postinc2	equ	0xFDE
 19270                           postdec2	equ	0xFDD
 19271                           plusw2	equ	0xFDB
 19272                           fsr2h	equ	0xFDA
 19273                           fsr2l	equ	0xFD9
 19274                           status	equ	0xFD8
 19275                           
 19276 ;; *************** function ___awmod *****************
 19277 ;; Defined at:
 19278 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/awmod.c"
 19279 ;; Parameters:    Size  Location     Type
 19280 ;;  dividend        2   29[BANK0 ] int 
 19281 ;;  divisor         2   31[BANK0 ] int 
 19282 ;; Auto vars:     Size  Location     Type
 19283 ;;  sign            1   34[BANK0 ] unsigned char 
 19284 ;;  counter         1   33[BANK0 ] unsigned char 
 19285 ;; Return value:  Size  Location     Type
 19286 ;;                  2   29[BANK0 ] int 
 19287 ;; Registers used:
 19288 ;;		wreg, status,2, status,0
 19289 ;; Tracked objects:
 19290 ;;		On entry : 0/0
 19291 ;;		On exit  : 0/0
 19292 ;;		Unchanged: 0/0
 19293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19294 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19295 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19297 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19298 ;;Total ram usage:        6 bytes
 19299 ;; Hardware stack levels used:    1
 19300 ;; Hardware stack levels required when called:   11
 19301 ;; This function calls:
 19302 ;;		Nothing
 19303 ;; This function is called by:
 19304 ;;		_Rtcc_SetRtccValue
 19305 ;;		_Rtcc_SetRtccAlarm
 19306 ;; This function uses a non-reentrant model
 19307 ;;
 19308                           
 19309                           	psect	text81
 19310  0054FC                     __ptext81:
 19311                           	opt stack 0
 19312  0054FC                     ___awmod:
 19313                           	opt stack 14
 19314                           
 19315                           ; BSR set to: 0
 19316                           ;incstack = 0
 19317  0054FC  0E00               	movlw	0
 19318  0054FE  0100               	movlb	0	; () banked
 19319  005500  6F82               	movwf	___awmod@sign& (0+255),b
 19320                           
 19321                           ; BSR set to: 0
 19322  005502  AF7E               	btfss	(___awmod@dividend+1)& (0+255),7,b
 19323  005504  D006               	goto	l3142
 19324                           
 19325                           ; BSR set to: 0
 19326  005506  6D7D               	negf	___awmod@dividend& (0+255),b
 19327  005508  1F7E               	comf	(___awmod@dividend+1)& (0+255),f,b
 19328  00550A  B0D8               	btfsc	status,0,c
 19329  00550C  2B7E               	incf	(___awmod@dividend+1)& (0+255),f,b
 19330                           
 19331                           ; BSR set to: 0
 19332  00550E  0E01               	movlw	1
 19333  005510  6F82               	movwf	___awmod@sign& (0+255),b
 19334  005512                     l3142:
 19335                           
 19336                           ; BSR set to: 0
 19337                           
 19338                           ; BSR set to: 0
 19339  005512  AF80               	btfss	(___awmod@divisor+1)& (0+255),7,b
 19340  005514  D004               	goto	l3143
 19341                           
 19342                           ; BSR set to: 0
 19343  005516  6D7F               	negf	___awmod@divisor& (0+255),b
 19344  005518  1F80               	comf	(___awmod@divisor+1)& (0+255),f,b
 19345  00551A  B0D8               	btfsc	status,0,c
 19346  00551C  2B80               	incf	(___awmod@divisor+1)& (0+255),f,b
 19347  00551E                     l3143:
 19348                           
 19349                           ; BSR set to: 0
 19350                           
 19351                           ; BSR set to: 0
 19352  00551E  517F               	movf	___awmod@divisor& (0+255),w,b
 19353  005520  1180               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 19354  005522  B4D8               	btfsc	status,2,c
 19355  005524  D018               	goto	l3150
 19356                           
 19357                           ; BSR set to: 0
 19358  005526  0E01               	movlw	1
 19359  005528  6F81               	movwf	___awmod@counter& (0+255),b
 19360  00552A  D004               	goto	l3145
 19361  00552C                     
 19362                           ; BSR set to: 0
 19363                           
 19364                           ; BSR set to: 0
 19365  00552C  90D8               	bcf	status,0,c
 19366  00552E  377F               	rlcf	___awmod@divisor& (0+255),f,b
 19367  005530  3780               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 19368  005532  2B81               	incf	___awmod@counter& (0+255),f,b
 19369  005534                     l3145:
 19370                           
 19371                           ; BSR set to: 0
 19372                           
 19373                           ; BSR set to: 0
 19374  005534  AF80               	btfss	(___awmod@divisor+1)& (0+255),7,b
 19375  005536  D7FA               	goto	l3146
 19376  005538                     u13530:
 19377                           
 19378                           ; BSR set to: 0
 19379                           
 19380                           ; BSR set to: 0
 19381                           
 19382                           ; BSR set to: 0
 19383  005538  517F               	movf	___awmod@divisor& (0+255),w,b
 19384  00553A  5D7D               	subwf	___awmod@dividend& (0+255),w,b
 19385  00553C  5180               	movf	(___awmod@divisor+1)& (0+255),w,b
 19386  00553E  597E               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 19387  005540  A0D8               	btfss	status,0,c
 19388  005542  D004               	goto	l3149
 19389                           
 19390                           ; BSR set to: 0
 19391  005544  517F               	movf	___awmod@divisor& (0+255),w,b
 19392  005546  5F7D               	subwf	___awmod@dividend& (0+255),f,b
 19393  005548  5180               	movf	(___awmod@divisor+1)& (0+255),w,b
 19394  00554A  5B7E               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 19395  00554C                     l3149:
 19396                           
 19397                           ; BSR set to: 0
 19398                           
 19399                           ; BSR set to: 0
 19400  00554C  90D8               	bcf	status,0,c
 19401  00554E  3380               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 19402  005550  337F               	rrcf	___awmod@divisor& (0+255),f,b
 19403                           
 19404                           ; BSR set to: 0
 19405  005552  2F81               	decfsz	___awmod@counter& (0+255),f,b
 19406  005554  D7F1               	goto	u13530
 19407  005556                     l3150:
 19408                           
 19409                           ; BSR set to: 0
 19410                           
 19411                           ; BSR set to: 0
 19412                           
 19413                           ; BSR set to: 0
 19414  005556  5182               	movf	___awmod@sign& (0+255),w,b
 19415  005558  B4D8               	btfsc	status,2,c
 19416  00555A  D004               	goto	l3151
 19417                           
 19418                           ; BSR set to: 0
 19419  00555C  6D7D               	negf	___awmod@dividend& (0+255),b
 19420  00555E  1F7E               	comf	(___awmod@dividend+1)& (0+255),f,b
 19421  005560  B0D8               	btfsc	status,0,c
 19422  005562  2B7E               	incf	(___awmod@dividend+1)& (0+255),f,b
 19423  005564                     l3151:
 19424                           
 19425                           ; BSR set to: 0
 19426                           
 19427                           ; BSR set to: 0
 19428  005564  C07D  F07D         	movff	___awmod@dividend,?___awmod
 19429  005568  C07E  F07E         	movff	___awmod@dividend+1,?___awmod+1
 19430  00556C  0012               	return	
 19431  00556E                     __end_of___awmod:
 19432                           	opt stack 0
 19433                           tosu	equ	0xFFF
 19434                           tosh	equ	0xFFE
 19435                           tosl	equ	0xFFD
 19436                           pclath	equ	0xFFA
 19437                           tblptru	equ	0xFF8
 19438                           tblptrh	equ	0xFF7
 19439                           tblptrl	equ	0xFF6
 19440                           tablat	equ	0xFF5
 19441                           prodh	equ	0xFF4
 19442                           prodl	equ	0xFF3
 19443                           intcon	equ	0xFF2
 19444                           intcon2	equ	0xFF1
 19445                           intcon3	equ	0xFF0
 19446                           indf0	equ	0xFEF
 19447                           postinc0	equ	0xFEE
 19448                           plusw0	equ	0xFEB
 19449                           fsr0h	equ	0xFEA
 19450                           fsr0l	equ	0xFE9
 19451                           wreg	equ	0xFE8
 19452                           indf1	equ	0xFE7
 19453                           postinc1	equ	0xFE6
 19454                           postdec1	equ	0xFE5
 19455                           fsr1h	equ	0xFE2
 19456                           fsr1l	equ	0xFE1
 19457                           indf2	equ	0xFDF
 19458                           postinc2	equ	0xFDE
 19459                           postdec2	equ	0xFDD
 19460                           plusw2	equ	0xFDB
 19461                           fsr2h	equ	0xFDA
 19462                           fsr2l	equ	0xFD9
 19463                           status	equ	0xFD8
 19464                           
 19465 ;; *************** function ___awdiv *****************
 19466 ;; Defined at:
 19467 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/awdiv.c"
 19468 ;; Parameters:    Size  Location     Type
 19469 ;;  dividend        2   29[BANK0 ] int 
 19470 ;;  divisor         2   31[BANK0 ] int 
 19471 ;; Auto vars:     Size  Location     Type
 19472 ;;  quotient        2   35[BANK0 ] int 
 19473 ;;  sign            1   34[BANK0 ] unsigned char 
 19474 ;;  counter         1   33[BANK0 ] unsigned char 
 19475 ;; Return value:  Size  Location     Type
 19476 ;;                  2   29[BANK0 ] int 
 19477 ;; Registers used:
 19478 ;;		wreg, status,2, status,0
 19479 ;; Tracked objects:
 19480 ;;		On entry : 0/0
 19481 ;;		On exit  : 0/0
 19482 ;;		Unchanged: 0/0
 19483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19484 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19485 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19486 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19487 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19488 ;;Total ram usage:        8 bytes
 19489 ;; Hardware stack levels used:    1
 19490 ;; Hardware stack levels required when called:   11
 19491 ;; This function calls:
 19492 ;;		Nothing
 19493 ;; This function is called by:
 19494 ;;		_Rtcc_SetRtccValue
 19495 ;;		_Rtcc_SetRtccAlarm
 19496 ;; This function uses a non-reentrant model
 19497 ;;
 19498                           
 19499                           	psect	text82
 19500  0052FC                     __ptext82:
 19501                           	opt stack 0
 19502  0052FC                     ___awdiv:
 19503                           	opt stack 14
 19504                           
 19505                           ; BSR set to: 0
 19506                           ;incstack = 0
 19507  0052FC  0E00               	movlw	0
 19508  0052FE  0100               	movlb	0	; () banked
 19509  005300  6F82               	movwf	___awdiv@sign& (0+255),b
 19510                           
 19511                           ; BSR set to: 0
 19512  005302  AF80               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 19513  005304  D006               	goto	l3129
 19514                           
 19515                           ; BSR set to: 0
 19516  005306  6D7F               	negf	___awdiv@divisor& (0+255),b
 19517  005308  1F80               	comf	(___awdiv@divisor+1)& (0+255),f,b
 19518  00530A  B0D8               	btfsc	status,0,c
 19519  00530C  2B80               	incf	(___awdiv@divisor+1)& (0+255),f,b
 19520                           
 19521                           ; BSR set to: 0
 19522  00530E  0E01               	movlw	1
 19523  005310  6F82               	movwf	___awdiv@sign& (0+255),b
 19524  005312                     l3129:
 19525                           
 19526                           ; BSR set to: 0
 19527                           
 19528                           ; BSR set to: 0
 19529  005312  AF7E               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 19530  005314  D006               	goto	l3130
 19531                           
 19532                           ; BSR set to: 0
 19533  005316  6D7D               	negf	___awdiv@dividend& (0+255),b
 19534  005318  1F7E               	comf	(___awdiv@dividend+1)& (0+255),f,b
 19535  00531A  B0D8               	btfsc	status,0,c
 19536  00531C  2B7E               	incf	(___awdiv@dividend+1)& (0+255),f,b
 19537                           
 19538                           ; BSR set to: 0
 19539  00531E  0E01               	movlw	1
 19540  005320  1B82               	xorwf	___awdiv@sign& (0+255),f,b
 19541  005322                     l3130:
 19542                           
 19543                           ; BSR set to: 0
 19544                           
 19545                           ; BSR set to: 0
 19546  005322  0E00               	movlw	0
 19547  005324  6F84               	movwf	(___awdiv@quotient+1)& (0+255),b
 19548  005326  0E00               	movlw	0
 19549  005328  6F83               	movwf	___awdiv@quotient& (0+255),b
 19550                           
 19551                           ; BSR set to: 0
 19552  00532A  517F               	movf	___awdiv@divisor& (0+255),w,b
 19553  00532C  1180               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 19554  00532E  B4D8               	btfsc	status,2,c
 19555  005330  D01C               	goto	l3137
 19556                           
 19557                           ; BSR set to: 0
 19558  005332  0E01               	movlw	1
 19559  005334  6F81               	movwf	___awdiv@counter& (0+255),b
 19560  005336  D004               	goto	l3132
 19561  005338                     
 19562                           ; BSR set to: 0
 19563                           
 19564                           ; BSR set to: 0
 19565  005338  90D8               	bcf	status,0,c
 19566  00533A  377F               	rlcf	___awdiv@divisor& (0+255),f,b
 19567  00533C  3780               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 19568  00533E  2B81               	incf	___awdiv@counter& (0+255),f,b
 19569  005340                     l3132:
 19570                           
 19571                           ; BSR set to: 0
 19572                           
 19573                           ; BSR set to: 0
 19574  005340  AF80               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 19575  005342  D7FA               	goto	l3133
 19576  005344                     u13470:
 19577                           
 19578                           ; BSR set to: 0
 19579                           
 19580                           ; BSR set to: 0
 19581                           
 19582                           ; BSR set to: 0
 19583  005344  90D8               	bcf	status,0,c
 19584  005346  3783               	rlcf	___awdiv@quotient& (0+255),f,b
 19585  005348  3784               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 19586                           
 19587                           ; BSR set to: 0
 19588  00534A  517F               	movf	___awdiv@divisor& (0+255),w,b
 19589  00534C  5D7D               	subwf	___awdiv@dividend& (0+255),w,b
 19590  00534E  5180               	movf	(___awdiv@divisor+1)& (0+255),w,b
 19591  005350  597E               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 19592  005352  A0D8               	btfss	status,0,c
 19593  005354  D005               	goto	l3136
 19594                           
 19595                           ; BSR set to: 0
 19596  005356  517F               	movf	___awdiv@divisor& (0+255),w,b
 19597  005358  5F7D               	subwf	___awdiv@dividend& (0+255),f,b
 19598  00535A  5180               	movf	(___awdiv@divisor+1)& (0+255),w,b
 19599  00535C  5B7E               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 19600                           
 19601                           ; BSR set to: 0
 19602  00535E  8183               	bsf	___awdiv@quotient& (0+255),0,b
 19603  005360                     l3136:
 19604                           
 19605                           ; BSR set to: 0
 19606                           
 19607                           ; BSR set to: 0
 19608  005360  90D8               	bcf	status,0,c
 19609  005362  3380               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 19610  005364  337F               	rrcf	___awdiv@divisor& (0+255),f,b
 19611                           
 19612                           ; BSR set to: 0
 19613  005366  2F81               	decfsz	___awdiv@counter& (0+255),f,b
 19614  005368  D7ED               	goto	u13470
 19615  00536A                     l3137:
 19616                           
 19617                           ; BSR set to: 0
 19618                           
 19619                           ; BSR set to: 0
 19620                           
 19621                           ; BSR set to: 0
 19622  00536A  5182               	movf	___awdiv@sign& (0+255),w,b
 19623  00536C  B4D8               	btfsc	status,2,c
 19624  00536E  D004               	goto	l3138
 19625                           
 19626                           ; BSR set to: 0
 19627  005370  6D83               	negf	___awdiv@quotient& (0+255),b
 19628  005372  1F84               	comf	(___awdiv@quotient+1)& (0+255),f,b
 19629  005374  B0D8               	btfsc	status,0,c
 19630  005376  2B84               	incf	(___awdiv@quotient+1)& (0+255),f,b
 19631  005378                     l3138:
 19632                           
 19633                           ; BSR set to: 0
 19634                           
 19635                           ; BSR set to: 0
 19636  005378  C083  F07D         	movff	___awdiv@quotient,?___awdiv
 19637  00537C  C084  F07E         	movff	___awdiv@quotient+1,?___awdiv+1
 19638  005380  0012               	return	
 19639  005382                     __end_of___awdiv:
 19640                           	opt stack 0
 19641                           tosu	equ	0xFFF
 19642                           tosh	equ	0xFFE
 19643                           tosl	equ	0xFFD
 19644                           pclath	equ	0xFFA
 19645                           tblptru	equ	0xFF8
 19646                           tblptrh	equ	0xFF7
 19647                           tblptrl	equ	0xFF6
 19648                           tablat	equ	0xFF5
 19649                           prodh	equ	0xFF4
 19650                           prodl	equ	0xFF3
 19651                           intcon	equ	0xFF2
 19652                           intcon2	equ	0xFF1
 19653                           intcon3	equ	0xFF0
 19654                           indf0	equ	0xFEF
 19655                           postinc0	equ	0xFEE
 19656                           plusw0	equ	0xFEB
 19657                           fsr0h	equ	0xFEA
 19658                           fsr0l	equ	0xFE9
 19659                           wreg	equ	0xFE8
 19660                           indf1	equ	0xFE7
 19661                           postinc1	equ	0xFE6
 19662                           postdec1	equ	0xFE5
 19663                           fsr1h	equ	0xFE2
 19664                           fsr1l	equ	0xFE1
 19665                           indf2	equ	0xFDF
 19666                           postinc2	equ	0xFDE
 19667                           postdec2	equ	0xFDD
 19668                           plusw2	equ	0xFDB
 19669                           fsr2h	equ	0xFDA
 19670                           fsr2l	equ	0xFD9
 19671                           status	equ	0xFD8
 19672                           
 19673 ;; *************** function _Rtcc_LockRtc *****************
 19674 ;; Defined at:
 19675 ;;		line 183 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 19676 ;; Parameters:    Size  Location     Type
 19677 ;;		None
 19678 ;; Auto vars:     Size  Location     Type
 19679 ;;		None
 19680 ;; Return value:  Size  Location     Type
 19681 ;;                  1    wreg      void 
 19682 ;; Registers used:
 19683 ;;		None
 19684 ;; Tracked objects:
 19685 ;;		On entry : 0/0
 19686 ;;		On exit  : 0/0
 19687 ;;		Unchanged: 0/0
 19688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19690 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19692 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19693 ;;Total ram usage:        0 bytes
 19694 ;; Hardware stack levels used:    1
 19695 ;; Hardware stack levels required when called:   11
 19696 ;; This function calls:
 19697 ;;		Nothing
 19698 ;; This function is called by:
 19699 ;;		_Rtcm_MainTask
 19700 ;;		_Rtcm_SetRtccDate
 19701 ;;		_Rtcm_SetRtccAlarm
 19702 ;; This function uses a non-reentrant model
 19703 ;;
 19704                           
 19705                           	psect	text83
 19706  006BCE                     __ptext83:
 19707                           	opt stack 0
 19708  006BCE                     _Rtcc_LockRtc:
 19709                           	opt stack 15
 19710                           
 19711                           ; BSR set to: 0
 19712                           ;incstack = 0
 19713  006BCE  010F               	movlb	15	;# 
 19714  006BD0  0E55               	movlw	85	;# 
 19715  006BD2  6EA7               	movwf	4007,c	;# 
 19716  006BD4  0EAA               	movlw	170	;# 
 19717  006BD6  6EA7               	movwf	4007,c	;# 
 19718                           
 19719                           ;rtcc_drv.c: 192: RTCCFGbits.RTCWREN = 0u;
 19720  006BD8  010F               	movlb	15	; () banked
 19721  006BDA  9B3F               	bcf	63,5,b	;volatile
 19722                           
 19723                           ; BSR set to: 15
 19724  006BDC  0012               	return		;funcret
 19725  006BDE                     __end_of_Rtcc_LockRtc:
 19726                           	opt stack 0
 19727                           tosu	equ	0xFFF
 19728                           tosh	equ	0xFFE
 19729                           tosl	equ	0xFFD
 19730                           pclath	equ	0xFFA
 19731                           tblptru	equ	0xFF8
 19732                           tblptrh	equ	0xFF7
 19733                           tblptrl	equ	0xFF6
 19734                           tablat	equ	0xFF5
 19735                           prodh	equ	0xFF4
 19736                           prodl	equ	0xFF3
 19737                           intcon	equ	0xFF2
 19738                           intcon2	equ	0xFF1
 19739                           intcon3	equ	0xFF0
 19740                           indf0	equ	0xFEF
 19741                           postinc0	equ	0xFEE
 19742                           plusw0	equ	0xFEB
 19743                           fsr0h	equ	0xFEA
 19744                           fsr0l	equ	0xFE9
 19745                           wreg	equ	0xFE8
 19746                           indf1	equ	0xFE7
 19747                           postinc1	equ	0xFE6
 19748                           postdec1	equ	0xFE5
 19749                           fsr1h	equ	0xFE2
 19750                           fsr1l	equ	0xFE1
 19751                           indf2	equ	0xFDF
 19752                           postinc2	equ	0xFDE
 19753                           postdec2	equ	0xFDD
 19754                           plusw2	equ	0xFDB
 19755                           fsr2h	equ	0xFDA
 19756                           fsr2l	equ	0xFD9
 19757                           status	equ	0xFD8
 19758                           
 19759 ;; *************** function _Rtcm_GetRtccDate *****************
 19760 ;; Defined at:
 19761 ;;		line 202 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/rtcm.c"
 19762 ;; Parameters:    Size  Location     Type
 19763 ;;		None
 19764 ;; Auto vars:     Size  Location     Type
 19765 ;;  LocalDate       8   42[BANK0 ] struct _RtccDateType
 19766 ;; Return value:  Size  Location     Type
 19767 ;;                  8   33[BANK0 ] struct _RtccDateType
 19768 ;; Registers used:
 19769 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19770 ;; Tracked objects:
 19771 ;;		On entry : 0/0
 19772 ;;		On exit  : 0/0
 19773 ;;		Unchanged: 0/0
 19774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19775 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19776 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19777 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19778 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19779 ;;Total ram usage:       17 bytes
 19780 ;; Hardware stack levels used:    1
 19781 ;; Hardware stack levels required when called:   12
 19782 ;; This function calls:
 19783 ;;		_Rtcc_GetRtccValue
 19784 ;; This function is called by:
 19785 ;;		_Rtcm_MainTask
 19786 ;; This function uses a non-reentrant model
 19787 ;;
 19788                           
 19789                           	psect	text84
 19790  0057F4                     __ptext84:
 19791                           	opt stack 0
 19792  0057F4                     _Rtcm_GetRtccDate:
 19793                           	opt stack 15
 19794                           
 19795                           ;rtcm.c: 204: RtccDateType LocalDate;
 19796                           ;rtcm.c: 207: LocalDate.Year = 2000 + Rtcc_GetRtccValue(ValPtrYear);
 19797                           
 19798                           ; BSR set to: 15
 19799                           ;incstack = 0
 19800  0057F4  0E00               	movlw	0
 19801  0057F6  ECCD  F027         	call	_Rtcc_GetRtccValue
 19802  0057FA  0100               	movlb	0	; () banked
 19803  0057FC  6F89               	movwf	??_Rtcm_GetRtccDate& (0+255),b
 19804  0057FE  0ED0               	movlw	208
 19805  005800  2589               	addwf	??_Rtcm_GetRtccDate& (0+255),w,b
 19806  005802  6F8A               	movwf	Rtcm_GetRtccDate@LocalDate& (0+255),b
 19807  005804  6B8B               	clrf	(Rtcm_GetRtccDate@LocalDate+1)& (0+255),b
 19808  005806  0E07               	movlw	7
 19809  005808  238B               	addwfc	(Rtcm_GetRtccDate@LocalDate+1)& (0+255),f,b
 19810                           
 19811                           ;rtcm.c: 208: LocalDate.Month = Rtcc_GetRtccValue(ValPtrMonth);
 19812  00580A  0E01               	movlw	1
 19813  00580C  ECCD  F027         	call	_Rtcc_GetRtccValue
 19814  005810  0100               	movlb	0	; () banked
 19815  005812  6F8C               	movwf	(Rtcm_GetRtccDate@LocalDate+2)& (0+255),b
 19816                           
 19817                           ;rtcm.c: 209: LocalDate.Day = Rtcc_GetRtccValue(ValPtrDay);
 19818  005814  0E02               	movlw	2
 19819  005816  ECCD  F027         	call	_Rtcc_GetRtccValue
 19820  00581A  0100               	movlb	0	; () banked
 19821  00581C  6F8D               	movwf	(Rtcm_GetRtccDate@LocalDate+3)& (0+255),b
 19822                           
 19823                           ;rtcm.c: 210: LocalDate.Weekday = Rtcc_GetRtccValue(ValPtrWeekday);
 19824  00581E  0E03               	movlw	3
 19825  005820  ECCD  F027         	call	_Rtcc_GetRtccValue
 19826  005824  0100               	movlb	0	; () banked
 19827  005826  6F8E               	movwf	(Rtcm_GetRtccDate@LocalDate+4)& (0+255),b
 19828                           
 19829                           ;rtcm.c: 211: LocalDate.Hour = Rtcc_GetRtccValue(ValPtrHours);
 19830  005828  0E04               	movlw	4
 19831  00582A  ECCD  F027         	call	_Rtcc_GetRtccValue
 19832  00582E  0100               	movlb	0	; () banked
 19833  005830  6F8F               	movwf	(Rtcm_GetRtccDate@LocalDate+5)& (0+255),b
 19834                           
 19835                           ;rtcm.c: 212: LocalDate.Minute = Rtcc_GetRtccValue(ValPtrMinutes);
 19836  005832  0E05               	movlw	5
 19837  005834  ECCD  F027         	call	_Rtcc_GetRtccValue
 19838  005838  0100               	movlb	0	; () banked
 19839  00583A  6F90               	movwf	(Rtcm_GetRtccDate@LocalDate+6)& (0+255),b
 19840                           
 19841                           ;rtcm.c: 213: LocalDate.Second = Rtcc_GetRtccValue(ValPtrSeconds);
 19842  00583C  0E06               	movlw	6
 19843  00583E  ECCD  F027         	call	_Rtcc_GetRtccValue
 19844  005842  0100               	movlb	0	; () banked
 19845  005844  6F91               	movwf	(Rtcm_GetRtccDate@LocalDate+7)& (0+255),b
 19846                           
 19847                           ; BSR set to: 0
 19848                           ;rtcm.c: 216: return LocalDate;
 19849  005846  EE20  F08A         	lfsr	2,Rtcm_GetRtccDate@LocalDate
 19850  00584A  EE00  F081         	lfsr	0,?_Rtcm_GetRtccDate
 19851  00584E  0E07               	movlw	7
 19852  005850                     u15951:
 19853  005850  CFDB FFEB          	movff	plusw2,plusw0
 19854  005854  06E8               	decf	wreg,f,c
 19855  005856  E2FC               	bc	u15951
 19856  005858  0012               	return	
 19857  00585A                     __end_of_Rtcm_GetRtccDate:
 19858                           	opt stack 0
 19859                           tosu	equ	0xFFF
 19860                           tosh	equ	0xFFE
 19861                           tosl	equ	0xFFD
 19862                           pclath	equ	0xFFA
 19863                           tblptru	equ	0xFF8
 19864                           tblptrh	equ	0xFF7
 19865                           tblptrl	equ	0xFF6
 19866                           tablat	equ	0xFF5
 19867                           prodh	equ	0xFF4
 19868                           prodl	equ	0xFF3
 19869                           intcon	equ	0xFF2
 19870                           intcon2	equ	0xFF1
 19871                           intcon3	equ	0xFF0
 19872                           indf0	equ	0xFEF
 19873                           postinc0	equ	0xFEE
 19874                           plusw0	equ	0xFEB
 19875                           fsr0h	equ	0xFEA
 19876                           fsr0l	equ	0xFE9
 19877                           wreg	equ	0xFE8
 19878                           indf1	equ	0xFE7
 19879                           postinc1	equ	0xFE6
 19880                           postdec1	equ	0xFE5
 19881                           fsr1h	equ	0xFE2
 19882                           fsr1l	equ	0xFE1
 19883                           indf2	equ	0xFDF
 19884                           postinc2	equ	0xFDE
 19885                           postdec2	equ	0xFDD
 19886                           plusw2	equ	0xFDB
 19887                           fsr2h	equ	0xFDA
 19888                           fsr2l	equ	0xFD9
 19889                           status	equ	0xFD8
 19890                           
 19891 ;; *************** function _Rtcc_GetRtccValue *****************
 19892 ;; Defined at:
 19893 ;;		line 205 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 19894 ;; Parameters:    Size  Location     Type
 19895 ;;  RtccPtrVal      1    wreg     enum E7757
 19896 ;; Auto vars:     Size  Location     Type
 19897 ;;  RtccPtrVal      1   30[BANK0 ] enum E7757
 19898 ;;  RegValue        1   32[BANK0 ] unsigned char 
 19899 ;;  RetValue        1   31[BANK0 ] unsigned char 
 19900 ;; Return value:  Size  Location     Type
 19901 ;;                  1    wreg      unsigned char 
 19902 ;; Registers used:
 19903 ;;		wreg, status,2, status,0, prodl, prodh
 19904 ;; Tracked objects:
 19905 ;;		On entry : 0/0
 19906 ;;		On exit  : 0/0
 19907 ;;		Unchanged: 0/0
 19908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19909 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19910 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19911 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19912 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19913 ;;Total ram usage:        4 bytes
 19914 ;; Hardware stack levels used:    1
 19915 ;; Hardware stack levels required when called:   11
 19916 ;; This function calls:
 19917 ;;		Nothing
 19918 ;; This function is called by:
 19919 ;;		_Rtcm_GetRtccDate
 19920 ;; This function uses a non-reentrant model
 19921 ;;
 19922                           
 19923                           	psect	text85
 19924  004F9A                     __ptext85:
 19925                           	opt stack 0
 19926  004F9A                     _Rtcc_GetRtccValue:
 19927                           	opt stack 15
 19928                           
 19929                           ; BSR set to: 0
 19930                           ;incstack = 0
 19931                           ;Rtcc_GetRtccValue@RtccPtrVal stored from wreg
 19932  004F9A  0100               	movlb	0	; () banked
 19933  004F9C  6F7E               	movwf	Rtcc_GetRtccValue@RtccPtrVal& (0+255),b
 19934                           
 19935                           ;rtcc_drv.c: 208: UINT8 RegValue;
 19936                           ;rtcc_drv.c: 209: UINT8 RetValue;
 19937                           ;rtcc_drv.c: 211: switch (RtccPtrVal)
 19938  004F9E  D02D               	goto	l416
 19939  004FA0                     l417:
 19940                           
 19941                           ; BSR set to: 0
 19942                           ;rtcc_drv.c: 215: RTCCFGbits.RTCPTR1 = 1U;
 19943  004FA0  010F               	movlb	15	; () banked
 19944  004FA2  833F               	bsf	63,1,b	;volatile
 19945  004FA4                     
 19946                           ;rtcc_drv.c: 216: RTCCFGbits.RTCPTR0 = 1U;
 19947  004FA4  813F               	bsf	63,0,b	;volatile
 19948  004FA6  D01C               	goto	L18
 19949  004FA8                     l419:
 19950                           
 19951                           ; BSR set to: 0
 19952                           ;rtcc_drv.c: 225: RTCCFGbits.RTCPTR1 = 1U;
 19953  004FA8  010F               	movlb	15	; () banked
 19954  004FAA  833F               	bsf	63,1,b	;volatile
 19955  004FAC  D01E               	goto	L19
 19956  004FAE                     l420:
 19957                           
 19958                           ; BSR set to: 0
 19959                           ;rtcc_drv.c: 235: RTCCFGbits.RTCPTR1 = 1U;
 19960  004FAE  010F               	movlb	15	; () banked
 19961  004FB0  833F               	bsf	63,1,b	;volatile
 19962  004FB2  D021               	goto	L22
 19963  004FB4                     l14563:
 19964                           
 19965                           ; BSR set to: 15
 19966                           ;rtcc_drv.c: 240: RetValue = (((RegValue & 0xF0) >> 4U) * 10) + (RegValue & 0x0F);
 19967  004FB4  C080  F07D         	movff	Rtcc_GetRtccValue@RegValue,??_Rtcc_GetRtccValue
 19968  004FB8  0E0F               	movlw	15
 19969  004FBA  0100               	movlb	0	; () banked
 19970  004FBC  177D               	andwf	??_Rtcc_GetRtccValue& (0+255),f,b
 19971  004FBE  3980               	swapf	Rtcc_GetRtccValue@RegValue& (0+255),w,b
 19972  004FC0  0B0F               	andlw	15
 19973  004FC2  0B0F               	andlw	15
 19974  004FC4  0D0A               	mullw	10
 19975  004FC6  50F3               	movf	prodl,w,c
 19976  004FC8  257D               	addwf	??_Rtcc_GetRtccValue& (0+255),w,b
 19977  004FCA  6F7F               	movwf	Rtcc_GetRtccValue@RetValue& (0+255),b
 19978                           
 19979                           ;rtcc_drv.c: 241: break;
 19980  004FCC  D02D               	goto	l418
 19981  004FCE                     l421:
 19982                           
 19983                           ; BSR set to: 0
 19984                           ;rtcc_drv.c: 245: RTCCFGbits.RTCPTR1 = 0U;
 19985  004FCE  010F               	movlb	15	; () banked
 19986  004FD0  933F               	bcf	63,1,b	;volatile
 19987                           
 19988                           ;rtcc_drv.c: 246: RTCCFGbits.RTCPTR0 = 1U;
 19989  004FD2  813F               	bsf	63,0,b	;volatile
 19990                           
 19991                           ;rtcc_drv.c: 248: RetValue = RTCVALH;
 19992  004FD4  CF99 F07F          	movff	3993,Rtcc_GetRtccValue@RetValue	;volatile
 19993                           
 19994                           ;rtcc_drv.c: 249: break;
 19995  004FD8  D027               	goto	l418
 19996  004FDA                     l422:
 19997                           
 19998                           ; BSR set to: 0
 19999                           ;rtcc_drv.c: 253: RTCCFGbits.RTCPTR1 = 0U;
 20000  004FDA  010F               	movlb	15	; () banked
 20001  004FDC  933F               	bcf	63,1,b	;volatile
 20002  004FDE  D7E2               	goto	L20
 20003  004FE0                     L18:
 20004                           
 20005                           ;rtcc_drv.c: 256: RegValue = RTCVALL;
 20006  004FE0  CF98 F080          	movff	3992,Rtcc_GetRtccValue@RegValue	;volatile
 20007  004FE4  D7E7               	goto	l14563
 20008  004FE6                     l423:
 20009                           
 20010                           ; BSR set to: 0
 20011                           ;rtcc_drv.c: 263: RTCCFGbits.RTCPTR1 = 0U;
 20012  004FE6  010F               	movlb	15	; () banked
 20013  004FE8  933F               	bcf	63,1,b	;volatile
 20014  004FEA                     L19:
 20015                           
 20016                           ;rtcc_drv.c: 264: RTCCFGbits.RTCPTR0 = 0U;
 20017  004FEA  913F               	bcf	63,0,b	;volatile
 20018                           
 20019                           ;rtcc_drv.c: 266: RegValue = RTCVALH;
 20020  004FEC  CF99 F080          	movff	3993,Rtcc_GetRtccValue@RegValue	;volatile
 20021  004FF0  D7E1               	goto	l14563
 20022  004FF2                     l424:
 20023                           
 20024                           ; BSR set to: 0
 20025                           ;rtcc_drv.c: 273: RTCCFGbits.RTCPTR1 = 0U;
 20026  004FF2  010F               	movlb	15	; () banked
 20027  004FF4  933F               	bcf	63,1,b	;volatile
 20028  004FF6                     L22:
 20029                           
 20030                           ;rtcc_drv.c: 274: RTCCFGbits.RTCPTR0 = 0U;
 20031  004FF6  913F               	bcf	63,0,b	;volatile
 20032  004FF8  D7F3               	goto	L18
 20033  004FFA                     l416:
 20034                           
 20035                           ; BSR set to: 0
 20036  004FFA  0100               	movlb	0	; () banked
 20037  004FFC  517E               	movf	Rtcc_GetRtccValue@RtccPtrVal& (0+255),w,b
 20038                           
 20039                           ; Switch size 1, requested type "space"
 20040                           ; Number of cases is 7, Range of values is 0 to 6
 20041                           ; switch strategies available:
 20042                           ; Name         Instructions Cycles
 20043                           ; simple_byte           22    12 (average)
 20044                           ;	Chosen strategy is simple_byte
 20045  004FFE  0A00               	xorlw	0	; case 0
 20046  005000  B4D8               	btfsc	status,2,c
 20047  005002  D7CE               	goto	l417
 20048  005004  0A01               	xorlw	1	; case 1
 20049  005006  B4D8               	btfsc	status,2,c
 20050  005008  D7CF               	goto	l419
 20051  00500A  0A03               	xorlw	3	; case 2
 20052  00500C  B4D8               	btfsc	status,2,c
 20053  00500E  D7CF               	goto	l420
 20054  005010  0A01               	xorlw	1	; case 3
 20055  005012  B4D8               	btfsc	status,2,c
 20056  005014  D7DC               	goto	l421
 20057  005016  0A07               	xorlw	7	; case 4
 20058  005018  B4D8               	btfsc	status,2,c
 20059  00501A  D7DF               	goto	l422
 20060  00501C  0A01               	xorlw	1	; case 5
 20061  00501E  B4D8               	btfsc	status,2,c
 20062  005020  D7E2               	goto	l423
 20063  005022  0A03               	xorlw	3	; case 6
 20064  005024  B4D8               	btfsc	status,2,c
 20065  005026  D7E5               	goto	l424
 20066  005028                     l418:
 20067                           
 20068                           ;rtcc_drv.c: 286: return RetValue;
 20069                           
 20070                           ; BSR set to: 0
 20071  005028  0100               	movlb	0	; () banked
 20072  00502A  517F               	movf	Rtcc_GetRtccValue@RetValue& (0+255),w,b
 20073  00502C  0012               	return	
 20074  00502E                     __end_of_Rtcc_GetRtccValue:
 20075                           	opt stack 0
 20076                           tosu	equ	0xFFF
 20077                           tosh	equ	0xFFE
 20078                           tosl	equ	0xFFD
 20079                           pclath	equ	0xFFA
 20080                           tblptru	equ	0xFF8
 20081                           tblptrh	equ	0xFF7
 20082                           tblptrl	equ	0xFF6
 20083                           tablat	equ	0xFF5
 20084                           prodh	equ	0xFF4
 20085                           prodl	equ	0xFF3
 20086                           intcon	equ	0xFF2
 20087                           intcon2	equ	0xFF1
 20088                           intcon3	equ	0xFF0
 20089                           indf0	equ	0xFEF
 20090                           postinc0	equ	0xFEE
 20091                           plusw0	equ	0xFEB
 20092                           fsr0h	equ	0xFEA
 20093                           fsr0l	equ	0xFE9
 20094                           wreg	equ	0xFE8
 20095                           indf1	equ	0xFE7
 20096                           postinc1	equ	0xFE6
 20097                           postdec1	equ	0xFE5
 20098                           fsr1h	equ	0xFE2
 20099                           fsr1l	equ	0xFE1
 20100                           indf2	equ	0xFDF
 20101                           postinc2	equ	0xFDE
 20102                           postdec2	equ	0xFDD
 20103                           plusw2	equ	0xFDB
 20104                           fsr2h	equ	0xFDA
 20105                           fsr2l	equ	0xFD9
 20106                           status	equ	0xFD8
 20107                           
 20108 ;; *************** function _Rtcc_SetRtcStatus *****************
 20109 ;; Defined at:
 20110 ;;		line 149 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 20111 ;; Parameters:    Size  Location     Type
 20112 ;;  Status          1    wreg     unsigned char 
 20113 ;; Auto vars:     Size  Location     Type
 20114 ;;  Status          1   29[BANK0 ] unsigned char 
 20115 ;; Return value:  Size  Location     Type
 20116 ;;                  1    wreg      void 
 20117 ;; Registers used:
 20118 ;;		wreg
 20119 ;; Tracked objects:
 20120 ;;		On entry : 0/0
 20121 ;;		On exit  : 0/0
 20122 ;;		Unchanged: 0/0
 20123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20124 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20125 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20126 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20127 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20128 ;;Total ram usage:        1 bytes
 20129 ;; Hardware stack levels used:    1
 20130 ;; Hardware stack levels required when called:   11
 20131 ;; This function calls:
 20132 ;;		Nothing
 20133 ;; This function is called by:
 20134 ;;		_Rtcm_MainTask
 20135 ;; This function uses a non-reentrant model
 20136 ;;
 20137                           
 20138                           	psect	text86
 20139  006B1C                     __ptext86:
 20140                           	opt stack 0
 20141  006B1C                     _Rtcc_SetRtcStatus:
 20142                           	opt stack 16
 20143                           
 20144                           ; BSR set to: 0
 20145                           ;incstack = 0
 20146                           ;Rtcc_SetRtcStatus@Status stored from wreg
 20147  006B1C  0100               	movlb	0	; () banked
 20148  006B1E  6F7D               	movwf	Rtcc_SetRtcStatus@Status& (0+255),b
 20149                           
 20150                           ;rtcc_drv.c: 152: RTCCFGbits.RTCEN = Status;
 20151  006B20  0100               	movlb	0	; () banked
 20152  006B22  B17D               	btfsc	Rtcc_SetRtcStatus@Status& (0+255),0,b
 20153  006B24  D003               	bra	u14875
 20154  006B26  010F               	movlb	15	; () banked
 20155  006B28  9F3F               	bcf	63,7,b	;volatile
 20156  006B2A  D002               	bra	u14876
 20157  006B2C                     u14875:
 20158  006B2C  010F               	movlb	15	; () banked
 20159  006B2E  8F3F               	bsf	63,7,b	;volatile
 20160  006B30                     u14876:
 20161                           
 20162                           ; BSR set to: 15
 20163  006B30  0012               	return		;funcret
 20164  006B32                     __end_of_Rtcc_SetRtcStatus:
 20165                           	opt stack 0
 20166                           tosu	equ	0xFFF
 20167                           tosh	equ	0xFFE
 20168                           tosl	equ	0xFFD
 20169                           pclath	equ	0xFFA
 20170                           tblptru	equ	0xFF8
 20171                           tblptrh	equ	0xFF7
 20172                           tblptrl	equ	0xFF6
 20173                           tablat	equ	0xFF5
 20174                           prodh	equ	0xFF4
 20175                           prodl	equ	0xFF3
 20176                           intcon	equ	0xFF2
 20177                           intcon2	equ	0xFF1
 20178                           intcon3	equ	0xFF0
 20179                           indf0	equ	0xFEF
 20180                           postinc0	equ	0xFEE
 20181                           plusw0	equ	0xFEB
 20182                           fsr0h	equ	0xFEA
 20183                           fsr0l	equ	0xFE9
 20184                           wreg	equ	0xFE8
 20185                           indf1	equ	0xFE7
 20186                           postinc1	equ	0xFE6
 20187                           postdec1	equ	0xFE5
 20188                           fsr1h	equ	0xFE2
 20189                           fsr1l	equ	0xFE1
 20190                           indf2	equ	0xFDF
 20191                           postinc2	equ	0xFDE
 20192                           postdec2	equ	0xFDD
 20193                           plusw2	equ	0xFDB
 20194                           fsr2h	equ	0xFDA
 20195                           fsr2l	equ	0xFD9
 20196                           status	equ	0xFD8
 20197                           
 20198 ;; *************** function _Rtcc_RtcConfig *****************
 20199 ;; Defined at:
 20200 ;;		line 106 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 20201 ;; Parameters:    Size  Location     Type
 20202 ;;  RtcConfig       2   30[BANK0 ] PTR struct _RtccConfigTy
 20203 ;;		 -> RtcConfig(4), 
 20204 ;; Auto vars:     Size  Location     Type
 20205 ;;		None
 20206 ;; Return value:  Size  Location     Type
 20207 ;;                  1    wreg      void 
 20208 ;; Registers used:
 20209 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 20210 ;; Tracked objects:
 20211 ;;		On entry : 0/0
 20212 ;;		On exit  : 0/0
 20213 ;;		Unchanged: 0/0
 20214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20215 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20216 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20217 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20218 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20219 ;;Total ram usage:        3 bytes
 20220 ;; Hardware stack levels used:    1
 20221 ;; Hardware stack levels required when called:   12
 20222 ;; This function calls:
 20223 ;;		_RtccIrqInit
 20224 ;; This function is called by:
 20225 ;;		_Rtcm_MainTask
 20226 ;; This function uses a non-reentrant model
 20227 ;;
 20228                           
 20229                           	psect	text87
 20230  004AD2                     __ptext87:
 20231                           	opt stack 0
 20232  004AD2                     _Rtcc_RtcConfig:
 20233                           	opt stack 15
 20234                           
 20235                           ;rtcc_drv.c: 109: RTCCFGbits.RTCOE = RtcConfig->RtcOutPinEnable;
 20236                           
 20237                           ; BSR set to: 15
 20238                           ;incstack = 0
 20239  004AD2  C07E  FFD9         	movff	Rtcc_RtcConfig@RtcConfig,fsr2l
 20240  004AD6  C07F  FFDA         	movff	Rtcc_RtcConfig@RtcConfig+1,fsr2h
 20241  004ADA  50DF               	movf	indf2,w,c
 20242  004ADC  0100               	movlb	0	; () banked
 20243  004ADE  6F80               	movwf	??_Rtcc_RtcConfig& (0+255),b
 20244  004AE0  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20245  004AE2  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20246  004AE4  010F               	movlb	15	; () banked
 20247  004AE6  513F               	movf	63,w,b	;volatile
 20248  004AE8  0100               	movlb	0	; () banked
 20249  004AEA  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20250  004AEC  0BFB               	andlw	-5
 20251  004AEE  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20252  004AF0  010F               	movlb	15	; () banked
 20253  004AF2  6F3F               	movwf	63,b	;volatile
 20254                           
 20255                           ;rtcc_drv.c: 111: PADCFG1bits.RTSECSEL0 = ((RtcConfig->RtcOutputSelectBit) & 0x01);
 20256  004AF4  0100               	movlb	0	; () banked
 20257  004AF6  EE20 F001          	lfsr	2,1
 20258  004AFA  517E               	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 20259  004AFC  26D9               	addwf	fsr2l,f,c
 20260  004AFE  517F               	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 20261  004B00  22DA               	addwfc	fsr2h,f,c
 20262  004B02  50DF               	movf	indf2,w,c
 20263  004B04  6F80               	movwf	??_Rtcc_RtcConfig& (0+255),b
 20264  004B06  0E01               	movlw	1
 20265  004B08  1780               	andwf	??_Rtcc_RtcConfig& (0+255),f,b
 20266  004B0A  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20267  004B0C  010F               	movlb	15	; () banked
 20268  004B0E  513C               	movf	60,w,b	;volatile
 20269  004B10  0100               	movlb	0	; () banked
 20270  004B12  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20271  004B14  0BFD               	andlw	-3
 20272  004B16  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20273  004B18  010F               	movlb	15	; () banked
 20274  004B1A  6F3C               	movwf	60,b	;volatile
 20275                           
 20276                           ;rtcc_drv.c: 112: PADCFG1bits.RTSECSEL1 = ((RtcConfig->RtcOutputSelectBit >> 1) & 0x01);
 20277  004B1C  0100               	movlb	0	; () banked
 20278  004B1E  EE20 F001          	lfsr	2,1
 20279  004B22  517E               	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 20280  004B24  26D9               	addwf	fsr2l,f,c
 20281  004B26  517F               	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 20282  004B28  22DA               	addwfc	fsr2h,f,c
 20283  004B2A  50DF               	movf	indf2,w,c
 20284  004B2C  6F80               	movwf	??_Rtcc_RtcConfig& (0+255),b
 20285  004B2E  90D8               	bcf	status,0,c
 20286  004B30  3380               	rrcf	??_Rtcc_RtcConfig& (0+255),f,b
 20287  004B32  0E01               	movlw	1
 20288  004B34  1780               	andwf	??_Rtcc_RtcConfig& (0+255),f,b
 20289  004B36  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20290  004B38  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20291  004B3A  010F               	movlb	15	; () banked
 20292  004B3C  513C               	movf	60,w,b	;volatile
 20293  004B3E  0100               	movlb	0	; () banked
 20294  004B40  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20295  004B42  0BFB               	andlw	-5
 20296  004B44  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20297  004B46  010F               	movlb	15	; () banked
 20298  004B48  6F3C               	movwf	60,b	;volatile
 20299                           
 20300                           ;rtcc_drv.c: 114: if (RtcConfig->IntEnable == EnableInt)
 20301  004B4A  0100               	movlb	0	; () banked
 20302  004B4C  EE20 F002          	lfsr	2,2
 20303  004B50  517E               	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 20304  004B52  26D9               	addwf	fsr2l,f,c
 20305  004B54  517F               	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 20306  004B56  22DA               	addwfc	fsr2h,f,c
 20307  004B58  04DE               	decf	postinc2,w,c
 20308  004B5A  A4D8               	btfss	status,2,c
 20309  004B5C  0012               	return	
 20310                           
 20311                           ; BSR set to: 0
 20312                           ;rtcc_drv.c: 115: {
 20313                           ;rtcc_drv.c: 117: RtccIrqInit(RtcConfig->IntPriority);
 20314  004B5E  EE20 F003          	lfsr	2,3
 20315  004B62  517E               	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 20316  004B64  26D9               	addwf	fsr2l,f,c
 20317  004B66  517F               	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 20318  004B68  22DA               	addwfc	fsr2h,f,c
 20319  004B6A  50DF               	movf	indf2,w,c
 20320  004B6C  EC99  F035         	call	_RtccIrqInit
 20321  004B70  0012               	return	
 20322  004B72                     __end_of_Rtcc_RtcConfig:
 20323                           	opt stack 0
 20324                           tosu	equ	0xFFF
 20325                           tosh	equ	0xFFE
 20326                           tosl	equ	0xFFD
 20327                           pclath	equ	0xFFA
 20328                           tblptru	equ	0xFF8
 20329                           tblptrh	equ	0xFF7
 20330                           tblptrl	equ	0xFF6
 20331                           tablat	equ	0xFF5
 20332                           prodh	equ	0xFF4
 20333                           prodl	equ	0xFF3
 20334                           intcon	equ	0xFF2
 20335                           intcon2	equ	0xFF1
 20336                           intcon3	equ	0xFF0
 20337                           indf0	equ	0xFEF
 20338                           postinc0	equ	0xFEE
 20339                           plusw0	equ	0xFEB
 20340                           fsr0h	equ	0xFEA
 20341                           fsr0l	equ	0xFE9
 20342                           wreg	equ	0xFE8
 20343                           indf1	equ	0xFE7
 20344                           postinc1	equ	0xFE6
 20345                           postdec1	equ	0xFE5
 20346                           fsr1h	equ	0xFE2
 20347                           fsr1l	equ	0xFE1
 20348                           indf2	equ	0xFDF
 20349                           postinc2	equ	0xFDE
 20350                           postdec2	equ	0xFDD
 20351                           plusw2	equ	0xFDB
 20352                           fsr2h	equ	0xFDA
 20353                           fsr2l	equ	0xFD9
 20354                           status	equ	0xFD8
 20355                           
 20356 ;; *************** function _RtccIrqInit *****************
 20357 ;; Defined at:
 20358 ;;		line 84 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 20359 ;; Parameters:    Size  Location     Type
 20360 ;;  Priority        1    wreg     enum E7716
 20361 ;; Auto vars:     Size  Location     Type
 20362 ;;  Priority        1   29[BANK0 ] enum E7716
 20363 ;; Return value:  Size  Location     Type
 20364 ;;                  1    wreg      void 
 20365 ;; Registers used:
 20366 ;;		wreg
 20367 ;; Tracked objects:
 20368 ;;		On entry : 0/0
 20369 ;;		On exit  : 0/0
 20370 ;;		Unchanged: 0/0
 20371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20372 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20373 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20374 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20375 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20376 ;;Total ram usage:        1 bytes
 20377 ;; Hardware stack levels used:    1
 20378 ;; Hardware stack levels required when called:   11
 20379 ;; This function calls:
 20380 ;;		Nothing
 20381 ;; This function is called by:
 20382 ;;		_Rtcc_RtcConfig
 20383 ;; This function uses a non-reentrant model
 20384 ;;
 20385                           
 20386                           	psect	text88
 20387  006B32                     __ptext88:
 20388                           	opt stack 0
 20389  006B32                     _RtccIrqInit:
 20390                           	opt stack 15
 20391                           
 20392                           ;incstack = 0
 20393                           ;RtccIrqInit@Priority stored from wreg
 20394  006B32  0100               	movlb	0	; () banked
 20395  006B34  6F7D               	movwf	RtccIrqInit@Priority& (0+255),b
 20396                           
 20397                           ;rtcc_drv.c: 87: PIR3bits.RTCCIF = 0u;
 20398  006B36  90A4               	bcf	4004,0,c	;volatile
 20399                           
 20400                           ;rtcc_drv.c: 89: IPR3bits.RTCCIP = Priority;
 20401  006B38  0100               	movlb	0	; () banked
 20402  006B3A  B17D               	btfsc	RtccIrqInit@Priority& (0+255),0,b
 20403  006B3C  D002               	bra	u13685
 20404  006B3E  90A5               	bcf	4005,0,c	;volatile
 20405  006B40  D001               	bra	u13686
 20406  006B42                     u13685:
 20407  006B42  80A5               	bsf	4005,0,c	;volatile
 20408  006B44                     u13686:
 20409                           
 20410                           ;rtcc_drv.c: 91: PIE3bits.RTCCIE = 1u;
 20411  006B44  80A3               	bsf	4003,0,c	;volatile
 20412  006B46  0012               	return		;funcret
 20413  006B48                     __end_of_RtccIrqInit:
 20414                           	opt stack 0
 20415                           tosu	equ	0xFFF
 20416                           tosh	equ	0xFFE
 20417                           tosl	equ	0xFFD
 20418                           pclath	equ	0xFFA
 20419                           tblptru	equ	0xFF8
 20420                           tblptrh	equ	0xFF7
 20421                           tblptrl	equ	0xFF6
 20422                           tablat	equ	0xFF5
 20423                           prodh	equ	0xFF4
 20424                           prodl	equ	0xFF3
 20425                           intcon	equ	0xFF2
 20426                           intcon2	equ	0xFF1
 20427                           intcon3	equ	0xFF0
 20428                           indf0	equ	0xFEF
 20429                           postinc0	equ	0xFEE
 20430                           plusw0	equ	0xFEB
 20431                           fsr0h	equ	0xFEA
 20432                           fsr0l	equ	0xFE9
 20433                           wreg	equ	0xFE8
 20434                           indf1	equ	0xFE7
 20435                           postinc1	equ	0xFE6
 20436                           postdec1	equ	0xFE5
 20437                           fsr1h	equ	0xFE2
 20438                           fsr1l	equ	0xFE1
 20439                           indf2	equ	0xFDF
 20440                           postinc2	equ	0xFDE
 20441                           postdec2	equ	0xFDD
 20442                           plusw2	equ	0xFDB
 20443                           fsr2h	equ	0xFDA
 20444                           fsr2l	equ	0xFD9
 20445                           status	equ	0xFD8
 20446                           
 20447 ;; *************** function _Rtcc_AlarmConfig *****************
 20448 ;; Defined at:
 20449 ;;		line 129 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 20450 ;; Parameters:    Size  Location     Type
 20451 ;;  AlarmConfig     2   29[BANK0 ] PTR struct _RtccAlarmCon
 20452 ;;		 -> AlCfg(4), 
 20453 ;; Auto vars:     Size  Location     Type
 20454 ;;		None
 20455 ;; Return value:  Size  Location     Type
 20456 ;;                  1    wreg      void 
 20457 ;; Registers used:
 20458 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 20459 ;; Tracked objects:
 20460 ;;		On entry : 0/0
 20461 ;;		On exit  : 0/0
 20462 ;;		Unchanged: 0/0
 20463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20464 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20465 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20466 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20467 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20468 ;;Total ram usage:        3 bytes
 20469 ;; Hardware stack levels used:    1
 20470 ;; Hardware stack levels required when called:   11
 20471 ;; This function calls:
 20472 ;;		Nothing
 20473 ;; This function is called by:
 20474 ;;		_Rtcm_MainTask
 20475 ;; This function uses a non-reentrant model
 20476 ;;
 20477                           
 20478                           	psect	text89
 20479  0056BA                     __ptext89:
 20480                           	opt stack 0
 20481  0056BA                     _Rtcc_AlarmConfig:
 20482                           	opt stack 16
 20483                           
 20484                           ;rtcc_drv.c: 132: ALRMCFGbits.ALRMEN = AlarmConfig->RtcAlarmEnable;
 20485                           
 20486                           ;incstack = 0
 20487  0056BA  C07D  FFD9         	movff	Rtcc_AlarmConfig@AlarmConfig,fsr2l
 20488  0056BE  C07E  FFDA         	movff	Rtcc_AlarmConfig@AlarmConfig+1,fsr2h
 20489  0056C2  50DF               	movf	indf2,w,c
 20490  0056C4  0100               	movlb	0	; () banked
 20491  0056C6  6F7F               	movwf	??_Rtcc_AlarmConfig& (0+255),b
 20492  0056C8  337F               	rrcf	??_Rtcc_AlarmConfig& (0+255),f,b
 20493  0056CA  337F               	rrcf	??_Rtcc_AlarmConfig& (0+255),f,b
 20494  0056CC  5091               	movf	3985,w,c	;volatile
 20495  0056CE  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20496  0056D0  0B7F               	andlw	-129
 20497  0056D2  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20498  0056D4  6E91               	movwf	3985,c	;volatile
 20499                           
 20500                           ;rtcc_drv.c: 134: ALRMCFGbits.CHIME = AlarmConfig->RtcChimeEnable;
 20501  0056D6  EE20 F001          	lfsr	2,1
 20502  0056DA  517D               	movf	Rtcc_AlarmConfig@AlarmConfig& (0+255),w,b
 20503  0056DC  26D9               	addwf	fsr2l,f,c
 20504  0056DE  517E               	movf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),w,b
 20505  0056E0  22DA               	addwfc	fsr2h,f,c
 20506  0056E2  50DF               	movf	indf2,w,c
 20507  0056E4  6F7F               	movwf	??_Rtcc_AlarmConfig& (0+255),b
 20508  0056E6  3B7F               	swapf	??_Rtcc_AlarmConfig& (0+255),f,b
 20509  0056E8  477F               	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 20510  0056EA  477F               	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 20511  0056EC  5091               	movf	3985,w,c	;volatile
 20512  0056EE  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20513  0056F0  0BBF               	andlw	-65
 20514  0056F2  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20515  0056F4  6E91               	movwf	3985,c	;volatile
 20516                           
 20517                           ;rtcc_drv.c: 136: ALRMCFGbits.AMASK = AlarmConfig->AlarmMask;
 20518  0056F6  EE20 F002          	lfsr	2,2
 20519  0056FA  517D               	movf	Rtcc_AlarmConfig@AlarmConfig& (0+255),w,b
 20520  0056FC  26D9               	addwf	fsr2l,f,c
 20521  0056FE  517E               	movf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),w,b
 20522  005700  22DA               	addwfc	fsr2h,f,c
 20523  005702  50DF               	movf	indf2,w,c
 20524  005704  6F7F               	movwf	??_Rtcc_AlarmConfig& (0+255),b
 20525  005706  477F               	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 20526  005708  477F               	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 20527  00570A  5091               	movf	3985,w,c	;volatile
 20528  00570C  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20529  00570E  0BC3               	andlw	-61
 20530  005710  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20531  005712  6E91               	movwf	3985,c	;volatile
 20532                           
 20533                           ;rtcc_drv.c: 138: ALRMRPTbits.ARPT = AlarmConfig->AlarmRepeat;
 20534  005714  EE20 F003          	lfsr	2,3
 20535  005718  517D               	movf	Rtcc_AlarmConfig@AlarmConfig& (0+255),w,b
 20536  00571A  26D9               	addwf	fsr2l,f,c
 20537  00571C  517E               	movf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),w,b
 20538  00571E  22DA               	addwfc	fsr2h,f,c
 20539  005720  50DF               	movf	indf2,w,c
 20540  005722  6E90               	movwf	3984,c	;volatile
 20541                           
 20542                           ; BSR set to: 0
 20543  005724  0012               	return		;funcret
 20544  005726                     __end_of_Rtcc_AlarmConfig:
 20545                           	opt stack 0
 20546                           tosu	equ	0xFFF
 20547                           tosh	equ	0xFFE
 20548                           tosl	equ	0xFFD
 20549                           pclath	equ	0xFFA
 20550                           tblptru	equ	0xFF8
 20551                           tblptrh	equ	0xFF7
 20552                           tblptrl	equ	0xFF6
 20553                           tablat	equ	0xFF5
 20554                           prodh	equ	0xFF4
 20555                           prodl	equ	0xFF3
 20556                           intcon	equ	0xFF2
 20557                           intcon2	equ	0xFF1
 20558                           intcon3	equ	0xFF0
 20559                           indf0	equ	0xFEF
 20560                           postinc0	equ	0xFEE
 20561                           plusw0	equ	0xFEB
 20562                           fsr0h	equ	0xFEA
 20563                           fsr0l	equ	0xFE9
 20564                           wreg	equ	0xFE8
 20565                           indf1	equ	0xFE7
 20566                           postinc1	equ	0xFE6
 20567                           postdec1	equ	0xFE5
 20568                           fsr1h	equ	0xFE2
 20569                           fsr1l	equ	0xFE1
 20570                           indf2	equ	0xFDF
 20571                           postinc2	equ	0xFDE
 20572                           postdec2	equ	0xFDD
 20573                           plusw2	equ	0xFDB
 20574                           fsr2h	equ	0xFDA
 20575                           fsr2l	equ	0xFD9
 20576                           status	equ	0xFD8
 20577                           
 20578 ;; *************** function _triggerVisualEffect *****************
 20579 ;; Defined at:
 20580 ;;		line 93 in file "../Source/c/04_App/app_utils.c"
 20581 ;; Parameters:    Size  Location     Type
 20582 ;;		None
 20583 ;; Auto vars:     Size  Location     Type
 20584 ;;		None
 20585 ;; Return value:  Size  Location     Type
 20586 ;;                  1    wreg      void 
 20587 ;; Registers used:
 20588 ;;		wreg, status,2
 20589 ;; Tracked objects:
 20590 ;;		On entry : 0/0
 20591 ;;		On exit  : 0/0
 20592 ;;		Unchanged: 0/0
 20593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20594 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20595 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20597 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20598 ;;Total ram usage:        0 bytes
 20599 ;; Hardware stack levels used:    1
 20600 ;; Hardware stack levels required when called:   11
 20601 ;; This function calls:
 20602 ;;		Nothing
 20603 ;; This function is called by:
 20604 ;;		_MyApp_Task
 20605 ;; This function uses a non-reentrant model
 20606 ;;
 20607                           
 20608                           	psect	text90
 20609  006C38                     __ptext90:
 20610                           	opt stack 0
 20611  006C38                     _triggerVisualEffect:
 20612                           	opt stack 16
 20613                           
 20614                           ;app_utils.c: 95: blinkInSeconds = 0;
 20615                           
 20616                           ; BSR set to: 0
 20617                           ;incstack = 0
 20618  006C38  0E00               	movlw	0
 20619  006C3A  0103               	movlb	3	; () banked
 20620  006C3C  6FF8               	movwf	(_blinkInSeconds+1)& (0+255),b
 20621  006C3E  0E00               	movlw	0
 20622  006C40  6FF7               	movwf	_blinkInSeconds& (0+255),b
 20623                           
 20624                           ; BSR set to: 3
 20625  006C42  0012               	return		;funcret
 20626  006C44                     __end_of_triggerVisualEffect:
 20627                           	opt stack 0
 20628                           tosu	equ	0xFFF
 20629                           tosh	equ	0xFFE
 20630                           tosl	equ	0xFFD
 20631                           pclath	equ	0xFFA
 20632                           tblptru	equ	0xFF8
 20633                           tblptrh	equ	0xFF7
 20634                           tblptrl	equ	0xFF6
 20635                           tablat	equ	0xFF5
 20636                           prodh	equ	0xFF4
 20637                           prodl	equ	0xFF3
 20638                           intcon	equ	0xFF2
 20639                           intcon2	equ	0xFF1
 20640                           intcon3	equ	0xFF0
 20641                           indf0	equ	0xFEF
 20642                           postinc0	equ	0xFEE
 20643                           plusw0	equ	0xFEB
 20644                           fsr0h	equ	0xFEA
 20645                           fsr0l	equ	0xFE9
 20646                           wreg	equ	0xFE8
 20647                           indf1	equ	0xFE7
 20648                           postinc1	equ	0xFE6
 20649                           postdec1	equ	0xFE5
 20650                           fsr1h	equ	0xFE2
 20651                           fsr1l	equ	0xFE1
 20652                           indf2	equ	0xFDF
 20653                           postinc2	equ	0xFDE
 20654                           postdec2	equ	0xFDD
 20655                           plusw2	equ	0xFDB
 20656                           fsr2h	equ	0xFDA
 20657                           fsr2l	equ	0xFD9
 20658                           status	equ	0xFD8
 20659                           
 20660 ;; *************** function _triggerCmdFsm *****************
 20661 ;; Defined at:
 20662 ;;		line 89 in file "../Source/c/04_App/app_triggerCmd.c"
 20663 ;; Parameters:    Size  Location     Type
 20664 ;;  receivedNumb    2    5[BANK1 ] PTR unsigned char 
 20665 ;;		 -> receivedNumber(13), 
 20666 ;; Auto vars:     Size  Location     Type
 20667 ;;  searchNumber    1   10[BANK1 ] unsigned char 
 20668 ;;  masterOpResu    1    9[BANK1 ] unsigned char 
 20669 ;;  numberInMemo    1    8[BANK1 ] unsigned char 
 20670 ;;  isComplete      1    7[BANK1 ] unsigned char 
 20671 ;; Return value:  Size  Location     Type
 20672 ;;                  1    wreg      unsigned char 
 20673 ;; Registers used:
 20674 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20675 ;; Tracked objects:
 20676 ;;		On entry : 0/0
 20677 ;;		On exit  : 0/0
 20678 ;;		Unchanged: 0/0
 20679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20680 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20681 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20683 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20684 ;;Total ram usage:        6 bytes
 20685 ;; Hardware stack levels used:    1
 20686 ;; Hardware stack levels required when called:   18
 20687 ;; This function calls:
 20688 ;;		_isMasterNumber
 20689 ;;		_isNumberInMemory
 20690 ;;		_secondsAppTimer
 20691 ;;		_triggerRelay
 20692 ;; This function is called by:
 20693 ;;		_MyApp_Task
 20694 ;; This function uses a non-reentrant model
 20695 ;;
 20696                           
 20697                           	psect	text91
 20698  0039A4                     __ptext91:
 20699                           	opt stack 0
 20700  0039A4                     _triggerCmdFsm:
 20701                           	opt stack 9
 20702                           
 20703                           ;app_triggerCmd.c: 91: static triggerFsmStates currentState = TRIGGER_FSM_CHECK_MASTER;
 20704                           ;app_triggerCmd.c: 92: bool isComplete = 0;
 20705                           
 20706                           ; BSR set to: 3
 20707                           ;incstack = 0
 20708  0039A4  0E00               	movlw	0
 20709  0039A6  0101               	movlb	1	; () banked
 20710  0039A8  6F07               	movwf	triggerCmdFsm@isComplete& (0+255),b
 20711                           
 20712                           ;app_triggerCmd.c: 93: uint8_t numberInMemory = 0;
 20713  0039AA  0E00               	movlw	0
 20714  0039AC  6F08               	movwf	triggerCmdFsm@numberInMemory& (0+255),b
 20715                           
 20716                           ;app_triggerCmd.c: 94: uint8_t masterOpResult = OP_FAILED;
 20717  0039AE  0E01               	movlw	1
 20718  0039B0  6F09               	movwf	triggerCmdFsm@masterOpResult& (0+255),b
 20719                           
 20720                           ;app_triggerCmd.c: 95: uint8_t searchNumber = OP_FAILED;
 20721  0039B2  0E01               	movlw	1
 20722  0039B4  6F0A               	movwf	triggerCmdFsm@searchNumber& (0+255),b
 20723                           
 20724                           ;app_triggerCmd.c: 97: switch (currentState)
 20725  0039B6  D04F               	goto	l2908
 20726  0039B8                     
 20727                           ; BSR set to: 1
 20728                           ;app_triggerCmd.c: 100: masterOpResult = isMasterNumber(receivedNumber);
 20729                           
 20730                           ; BSR set to: 1
 20731  0039B8  C105  F100         	movff	triggerCmdFsm@receivedNumber,isMasterNumber@phoneNumber
 20732  0039BC  C106  F101         	movff	triggerCmdFsm@receivedNumber+1,isMasterNumber@phoneNumber+1
 20733  0039C0  ECF0  F02A         	call	_isMasterNumber	;wreg free
 20734  0039C4  0101               	movlb	1	; () banked
 20735  0039C6  6F09               	movwf	triggerCmdFsm@masterOpResult& (0+255),b
 20736                           
 20737                           ; BSR set to: 1
 20738                           ;app_triggerCmd.c: 101: if (masterOpResult == OP_SUCCESS)
 20739  0039C8  5109               	movf	triggerCmdFsm@masterOpResult& (0+255),w,b
 20740  0039CA  A4D8               	btfss	status,2,c
 20741  0039CC  D002               	goto	l2910
 20742  0039CE                     u16270:
 20743                           
 20744                           ; BSR set to: 1
 20745                           ;app_triggerCmd.c: 102: {
 20746                           ;app_triggerCmd.c: 103: currentState = TRIGGER_FSM_ACTIVATE_RELAY;
 20747  0039CE  0E02               	movlw	2
 20748  0039D0  D029               	goto	L26
 20749  0039D2                     l2910:
 20750                           
 20751                           ; BSR set to: 1
 20752                           ;app_triggerCmd.c: 105: else if (masterOpResult == OP_FAILED)
 20753                           
 20754                           ; BSR set to: 1
 20755  0039D2  0509               	decf	triggerCmdFsm@masterOpResult& (0+255),w,b
 20756  0039D4  A4D8               	btfss	status,2,c
 20757  0039D6  D04F               	goto	l2913
 20758                           
 20759                           ; BSR set to: 1
 20760                           ;app_triggerCmd.c: 106: {
 20761                           ;app_triggerCmd.c: 107: currentState = TRIGGER_FSM_CHECK_NUMBER;
 20762  0039D8  0E01               	movlw	1
 20763  0039DA  D024               	goto	L26
 20764  0039DC                     
 20765                           ; BSR set to: 1
 20766                           ;app_triggerCmd.c: 112: searchNumber = isNumberInMemory(receivedNumber, &numberInMemory)
      +                          ;
 20767                           
 20768                           ; BSR set to: 1
 20769  0039DC  C105  F100         	movff	triggerCmdFsm@receivedNumber,isNumberInMemory@phoneNumber
 20770  0039E0  C106  F101         	movff	triggerCmdFsm@receivedNumber+1,isNumberInMemory@phoneNumber+1
 20771  0039E4  0E08               	movlw	low triggerCmdFsm@numberInMemory
 20772  0039E6  6F02               	movwf	isNumberInMemory@positionInMemory& (0+255),b
 20773  0039E8  0E01               	movlw	high triggerCmdFsm@numberInMemory
 20774  0039EA  6F03               	movwf	(isNumberInMemory@positionInMemory+1)& (0+255),b
 20775  0039EC  EC63  F022         	call	_isNumberInMemory	;wreg free
 20776  0039F0  0101               	movlb	1	; () banked
 20777  0039F2  6F0A               	movwf	triggerCmdFsm@searchNumber& (0+255),b
 20778                           
 20779                           ; BSR set to: 1
 20780                           ;app_triggerCmd.c: 113: if (searchNumber == SEARCH_FSM_FOUND)
 20781  0039F4  0E03               	movlw	3
 20782  0039F6  190A               	xorwf	triggerCmdFsm@searchNumber& (0+255),w,b
 20783  0039F8  B4D8               	btfsc	status,2,c
 20784  0039FA  D7E9               	goto	u16270
 20785                           
 20786                           ; BSR set to: 1
 20787                           ;app_triggerCmd.c: 117: else if (searchNumber == SEARCH_FSM_NOT_FOUND || searchNumber ==
      +                           SEARCH_FSM_ERROR)
 20788                           
 20789                           ; BSR set to: 1
 20790                           
 20791                           ;app_triggerCmd.c: 116: }
 20792                           
 20793                           ; BSR set to: 1
 20794                           ;app_triggerCmd.c: 114: {
 20795                           ;app_triggerCmd.c: 115: currentState = TRIGGER_FSM_ACTIVATE_RELAY;
 20796  0039FC  0E04               	movlw	4
 20797  0039FE  190A               	xorwf	triggerCmdFsm@searchNumber& (0+255),w,b
 20798  003A00  B4D8               	btfsc	status,2,c
 20799  003A02  D004               	goto	u16310
 20800                           
 20801                           ; BSR set to: 1
 20802  003A04  0E02               	movlw	2
 20803  003A06  190A               	xorwf	triggerCmdFsm@searchNumber& (0+255),w,b
 20804  003A08  A4D8               	btfss	status,2,c
 20805  003A0A  D035               	goto	l2913
 20806  003A0C                     u16310:
 20807                           
 20808                           ; BSR set to: 1
 20809                           ;app_triggerCmd.c: 118: {
 20810                           ;app_triggerCmd.c: 119: currentState = TRIGGER_FSM_COMPLETE;
 20811                           
 20812                           ; BSR set to: 1
 20813  003A0C  0E04               	movlw	4
 20814  003A0E  D00A               	goto	L26
 20815  003A10                     
 20816                           ; BSR set to: 1
 20817                           ;app_triggerCmd.c: 124: triggerRelay(1);
 20818                           
 20819                           ; BSR set to: 1
 20820  003A10  0E01               	movlw	1
 20821  003A12  EC7D  F032         	call	_triggerRelay
 20822                           
 20823                           ;app_triggerCmd.c: 125: secondCounter = 0;
 20824  003A16  0E00               	movlw	0
 20825  003A18  0103               	movlb	3	; () banked
 20826  003A1A  6F19               	movwf	(_secondCounter+1)& (0+255),b
 20827  003A1C  0E00               	movlw	0
 20828  003A1E  6F18               	movwf	_secondCounter& (0+255),b
 20829                           
 20830                           ; BSR set to: 3
 20831                           ;app_triggerCmd.c: 126: currentState = TRIGGER_FSM_DEACTIVATE_RELAY;
 20832  003A20  0E03               	movlw	3
 20833  003A22  D013               	goto	L27
 20834  003A24                     L26:
 20835  003A24  6FD3               	movwf	triggerCmdFsm@currentState& (0+255),b
 20836                           
 20837                           ;app_triggerCmd.c: 127: break;
 20838  003A26  D027               	goto	l2913
 20839  003A28                     
 20840                           ; BSR set to: 1
 20841                           ;app_triggerCmd.c: 130: if (secondsAppTimer(1, secondCounter, 0))
 20842                           
 20843                           ; BSR set to: 1
 20844  003A28  C318  F08A         	movff	_secondCounter,secondsAppTimer@counter
 20845  003A2C  C319  F08B         	movff	_secondCounter+1,secondsAppTimer@counter+1
 20846  003A30  0E00               	movlw	0
 20847  003A32  0100               	movlb	0	; () banked
 20848  003A34  6F8C               	movwf	secondsAppTimer@isCyclic& (0+255),b
 20849  003A36  0E01               	movlw	1
 20850  003A38  EC18  F025         	call	_secondsAppTimer
 20851  003A3C  0900               	iorlw	0
 20852  003A3E  B4D8               	btfsc	status,2,c
 20853  003A40  D01A               	goto	l2913
 20854                           
 20855                           ;app_triggerCmd.c: 131: {
 20856                           ;app_triggerCmd.c: 132: triggerRelay(0);
 20857  003A42  0E00               	movlw	0
 20858  003A44  EC7D  F032         	call	_triggerRelay
 20859                           
 20860                           ;app_triggerCmd.c: 133: currentState = TRIGGER_FSM_COMPLETE;
 20861  003A48  0E04               	movlw	4
 20862  003A4A                     L27:
 20863  003A4A  0101               	movlb	1	; () banked
 20864  003A4C  D7EB               	goto	L26
 20865  003A4E                     
 20866                           ; BSR set to: 1
 20867                           ;app_triggerCmd.c: 138: isComplete = 1;
 20868                           
 20869                           ; BSR set to: 1
 20870  003A4E  0E01               	movlw	1
 20871  003A50  6F07               	movwf	triggerCmdFsm@isComplete& (0+255),b
 20872                           
 20873                           ;app_triggerCmd.c: 139: currentState = TRIGGER_FSM_CHECK_MASTER;
 20874  003A52  0E00               	movlw	0
 20875  003A54  D7E7               	goto	L26
 20876  003A56                     l2908:
 20877                           
 20878                           ; BSR set to: 1
 20879                           
 20880                           ; BSR set to: 1
 20881  003A56  51D3               	movf	triggerCmdFsm@currentState& (0+255),w,b
 20882                           
 20883                           ; Switch size 1, requested type "space"
 20884                           ; Number of cases is 5, Range of values is 0 to 4
 20885                           ; switch strategies available:
 20886                           ; Name         Instructions Cycles
 20887                           ; simple_byte           16     9 (average)
 20888                           ;	Chosen strategy is simple_byte
 20889  003A58  0A00               	xorlw	0	; case 0
 20890  003A5A  B4D8               	btfsc	status,2,c
 20891  003A5C  D7AD               	goto	l2909
 20892  003A5E  0A01               	xorlw	1	; case 1
 20893  003A60  B4D8               	btfsc	status,2,c
 20894  003A62  D7BC               	goto	l2914
 20895  003A64  0A03               	xorlw	3	; case 2
 20896  003A66  B4D8               	btfsc	status,2,c
 20897  003A68  D7D3               	goto	l2920
 20898  003A6A  0A01               	xorlw	1	; case 3
 20899  003A6C  B4D8               	btfsc	status,2,c
 20900  003A6E  D7DC               	goto	l2921
 20901  003A70  0A07               	xorlw	7	; case 4
 20902  003A72  B4D8               	btfsc	status,2,c
 20903  003A74  D7EC               	goto	l2923
 20904  003A76                     l2913:
 20905                           
 20906                           ;app_triggerCmd.c: 145: return isComplete;
 20907                           
 20908                           ; BSR set to: 1
 20909  003A76  0101               	movlb	1	; () banked
 20910  003A78  5107               	movf	triggerCmdFsm@isComplete& (0+255),w,b
 20911  003A7A  0012               	return	
 20912  003A7C                     __end_of_triggerCmdFsm:
 20913                           	opt stack 0
 20914                           tosu	equ	0xFFF
 20915                           tosh	equ	0xFFE
 20916                           tosl	equ	0xFFD
 20917                           pclath	equ	0xFFA
 20918                           tblptru	equ	0xFF8
 20919                           tblptrh	equ	0xFF7
 20920                           tblptrl	equ	0xFF6
 20921                           tablat	equ	0xFF5
 20922                           prodh	equ	0xFF4
 20923                           prodl	equ	0xFF3
 20924                           intcon	equ	0xFF2
 20925                           intcon2	equ	0xFF1
 20926                           intcon3	equ	0xFF0
 20927                           indf0	equ	0xFEF
 20928                           postinc0	equ	0xFEE
 20929                           plusw0	equ	0xFEB
 20930                           fsr0h	equ	0xFEA
 20931                           fsr0l	equ	0xFE9
 20932                           wreg	equ	0xFE8
 20933                           indf1	equ	0xFE7
 20934                           postinc1	equ	0xFE6
 20935                           postdec1	equ	0xFE5
 20936                           fsr1h	equ	0xFE2
 20937                           fsr1l	equ	0xFE1
 20938                           indf2	equ	0xFDF
 20939                           postinc2	equ	0xFDE
 20940                           postdec2	equ	0xFDD
 20941                           plusw2	equ	0xFDB
 20942                           fsr2h	equ	0xFDA
 20943                           fsr2l	equ	0xFD9
 20944                           status	equ	0xFD8
 20945                           
 20946 ;; *************** function _triggerRelay *****************
 20947 ;; Defined at:
 20948 ;;		line 67 in file "../Source/c/04_App/app_triggerCmd.c"
 20949 ;; Parameters:    Size  Location     Type
 20950 ;;  isRelayOn       1    wreg     unsigned char 
 20951 ;; Auto vars:     Size  Location     Type
 20952 ;;  isRelayOn       1   38[BANK0 ] unsigned char 
 20953 ;;  res             1   37[BANK0 ] unsigned char 
 20954 ;; Return value:  Size  Location     Type
 20955 ;;                  1    wreg      unsigned char 
 20956 ;; Registers used:
 20957 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 20958 ;; Tracked objects:
 20959 ;;		On entry : 0/0
 20960 ;;		On exit  : 0/0
 20961 ;;		Unchanged: 0/0
 20962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20963 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20964 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20966 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20967 ;;Total ram usage:        2 bytes
 20968 ;; Hardware stack levels used:    1
 20969 ;; Hardware stack levels required when called:   13
 20970 ;; This function calls:
 20971 ;;		_I2cSlv_SendI2cMsg
 20972 ;; This function is called by:
 20973 ;;		_triggerCmdFsm
 20974 ;; This function uses a non-reentrant model
 20975 ;;
 20976                           
 20977                           	psect	text92
 20978  0064FA                     __ptext92:
 20979                           	opt stack 0
 20980  0064FA                     _triggerRelay:
 20981                           	opt stack 13
 20982                           
 20983                           ; BSR set to: 1
 20984                           ;incstack = 0
 20985                           ;triggerRelay@isRelayOn stored from wreg
 20986  0064FA  0100               	movlb	0	; () banked
 20987  0064FC  6F86               	movwf	triggerRelay@isRelayOn& (0+255),b
 20988                           
 20989                           ;app_triggerCmd.c: 69: uint8_t res = 0u;
 20990  0064FE  0E00               	movlw	0
 20991  006500  0100               	movlb	0	; () banked
 20992  006502  6F85               	movwf	triggerRelay@res& (0+255),b
 20993                           
 20994                           ; BSR set to: 0
 20995                           ;app_triggerCmd.c: 70: if (isRelayOn)
 20996  006504  5186               	movf	triggerRelay@isRelayOn& (0+255),w,b
 20997  006506  B4D8               	btfsc	status,2,c
 20998  006508  D002               	goto	l2901
 20999                           
 21000                           ; BSR set to: 0
 21001                           ;app_triggerCmd.c: 71: {
 21002                           ;app_triggerCmd.c: 72: relayBuffer[1] = 0x01;
 21003  00650A  0E01               	movlw	1
 21004  00650C  D001               	goto	L28
 21005  00650E                     l2901:
 21006                           
 21007                           ;app_triggerCmd.c: 74: else
 21008                           ;app_triggerCmd.c: 75: {
 21009                           ;app_triggerCmd.c: 76: relayBuffer[1] = 0x00;
 21010                           
 21011                           ; BSR set to: 2
 21012  00650E  0E00               	movlw	0
 21013  006510                     L28:
 21014  006510  0102               	movlb	2	; () banked
 21015  006512  6FFF               	movwf	(_relayBuffer+1)& (0+255),b
 21016                           
 21017                           ; BSR set to: 2
 21018                           ;app_triggerCmd.c: 77: }
 21019                           ;app_triggerCmd.c: 78: res = I2cSlv_SendI2cMsg(relayBuffer, 1, 2);
 21020                           
 21021                           ; BSR set to: 2
 21022  006514  0EFE               	movlw	low _relayBuffer
 21023  006516  0100               	movlb	0	; () banked
 21024  006518  6F80               	movwf	I2cSlv_SendI2cMsg@TxBuffer& (0+255),b
 21025  00651A  0E02               	movlw	high _relayBuffer
 21026  00651C  6F81               	movwf	(I2cSlv_SendI2cMsg@TxBuffer+1)& (0+255),b
 21027  00651E  0E01               	movlw	1
 21028  006520  6F82               	movwf	I2cSlv_SendI2cMsg@SlaveAddr& (0+255),b
 21029  006522  0E02               	movlw	2
 21030  006524  6F83               	movwf	I2cSlv_SendI2cMsg@DataLenght& (0+255),b
 21031  006526  ECC9  F031         	call	_I2cSlv_SendI2cMsg	;wreg free
 21032  00652A  0100               	movlb	0	; () banked
 21033  00652C  6F85               	movwf	triggerRelay@res& (0+255),b
 21034  00652E  0012               	return	
 21035  006530                     __end_of_triggerRelay:
 21036                           	opt stack 0
 21037                           tosu	equ	0xFFF
 21038                           tosh	equ	0xFFE
 21039                           tosl	equ	0xFFD
 21040                           pclath	equ	0xFFA
 21041                           tblptru	equ	0xFF8
 21042                           tblptrh	equ	0xFF7
 21043                           tblptrl	equ	0xFF6
 21044                           tablat	equ	0xFF5
 21045                           prodh	equ	0xFF4
 21046                           prodl	equ	0xFF3
 21047                           intcon	equ	0xFF2
 21048                           intcon2	equ	0xFF1
 21049                           intcon3	equ	0xFF0
 21050                           indf0	equ	0xFEF
 21051                           postinc0	equ	0xFEE
 21052                           plusw0	equ	0xFEB
 21053                           fsr0h	equ	0xFEA
 21054                           fsr0l	equ	0xFE9
 21055                           wreg	equ	0xFE8
 21056                           indf1	equ	0xFE7
 21057                           postinc1	equ	0xFE6
 21058                           postdec1	equ	0xFE5
 21059                           fsr1h	equ	0xFE2
 21060                           fsr1l	equ	0xFE1
 21061                           indf2	equ	0xFDF
 21062                           postinc2	equ	0xFDE
 21063                           postdec2	equ	0xFDD
 21064                           plusw2	equ	0xFDB
 21065                           fsr2h	equ	0xFDA
 21066                           fsr2l	equ	0xFD9
 21067                           status	equ	0xFD8
 21068                           
 21069 ;; *************** function _initFsm *****************
 21070 ;; Defined at:
 21071 ;;		line 225 in file "../Source/c/04_App/app_init.c"
 21072 ;; Parameters:    Size  Location     Type
 21073 ;;		None
 21074 ;; Auto vars:     Size  Location     Type
 21075 ;;  isInitialize    1    3[BANK1 ] unsigned char 
 21076 ;; Return value:  Size  Location     Type
 21077 ;;                  1    wreg      unsigned char 
 21078 ;; Registers used:
 21079 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21080 ;; Tracked objects:
 21081 ;;		On entry : 0/0
 21082 ;;		On exit  : 0/0
 21083 ;;		Unchanged: 0/0
 21084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21086 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21088 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21089 ;;Total ram usage:        1 bytes
 21090 ;; Hardware stack levels used:    1
 21091 ;; Hardware stack levels required when called:   18
 21092 ;; This function calls:
 21093 ;;		_GetCallerNumber
 21094 ;;		_Led_SetLedStatus
 21095 ;;		_initEeprom
 21096 ;;		_initGprsModem
 21097 ;;		_saveNumberInMemory
 21098 ;;		_savePreamble
 21099 ;;		_waitSetupCall
 21100 ;; This function is called by:
 21101 ;;		_MyApp_Task
 21102 ;; This function uses a non-reentrant model
 21103 ;;
 21104                           
 21105                           	psect	text93
 21106  004838                     __ptext93:
 21107                           	opt stack 0
 21108  004838                     _initFsm:
 21109                           	opt stack 9
 21110                           
 21111                           ;app_init.c: 227: static initFsmStates currentState = INIT_FSM_MODEM;
 21112                           ;app_init.c: 228: bool isInitialized = 0;
 21113                           
 21114                           ; BSR set to: 0
 21115                           ;incstack = 0
 21116  004838  0E00               	movlw	0
 21117  00483A  0101               	movlb	1	; () banked
 21118  00483C  6F03               	movwf	initFsm@isInitialized& (0+255),b
 21119                           
 21120                           ;app_init.c: 230: switch (currentState)
 21121  00483E  D03D               	goto	l2702
 21122  004840                     
 21123                           ; BSR set to: 1
 21124                           ;app_init.c: 233: if (initGprsModem())
 21125                           
 21126                           ; BSR set to: 1
 21127  004840  EC17  F028         	call	_initGprsModem	;wreg free
 21128  004844  0900               	iorlw	0
 21129  004846  B4D8               	btfsc	status,2,c
 21130  004848  D048               	goto	l2705
 21131                           
 21132                           ;app_init.c: 234: {
 21133                           ;app_init.c: 235: currentState = INIT_FSM_EEPROM;
 21134  00484A  0E01               	movlw	1
 21135  00484C  D027               	goto	L32
 21136  00484E                     
 21137                           ; BSR set to: 1
 21138                           ;app_init.c: 240: if (initEeprom())
 21139                           
 21140                           ; BSR set to: 1
 21141  00484E  EC61  F028         	call	_initEeprom	;wreg free
 21142  004852  0900               	iorlw	0
 21143  004854  B4D8               	btfsc	status,2,c
 21144  004856  D041               	goto	l2705
 21145                           
 21146                           ;app_init.c: 241: {
 21147                           ;app_init.c: 242: currentState = INIT_FSM_WAIT_CMD;
 21148  004858  0E02               	movlw	2
 21149  00485A  0101               	movlb	1	; () banked
 21150  00485C  6FD6               	movwf	initFsm@currentState& (0+255),b
 21151                           
 21152                           ;app_init.c: 243: setupCallTicks = 0;
 21153  00485E  0E00               	movlw	0
 21154  004860  0103               	movlb	3	; () banked
 21155  004862  6FBC               	movwf	(_setupCallTicks+1)& (0+255),b
 21156  004864  0E00               	movlw	0
 21157  004866  6FBB               	movwf	_setupCallTicks& (0+255),b
 21158                           
 21159                           ; BSR set to: 3
 21160                           ;app_init.c: 244: }
 21161                           ;app_init.c: 245: break;
 21162  004868  D038               	goto	l2705
 21163  00486A                     
 21164                           ;app_init.c: 248: if (isMemoryEmpty)
 21165                           
 21166                           ; BSR set to: 3
 21167  00486A  0101               	movlb	1	; () banked
 21168  00486C  51FE               	movf	_isMemoryEmpty& (0+255),w,b
 21169  00486E  B4D8               	btfsc	status,2,c
 21170  004870  D010               	goto	l2709
 21171                           
 21172                           ; BSR set to: 1
 21173                           ;app_init.c: 249: {
 21174                           ;app_init.c: 250: if (waitSetupCall())
 21175  004872  EC94  F02F         	call	_waitSetupCall	;wreg free
 21176  004876  0900               	iorlw	0
 21177  004878  B4D8               	btfsc	status,2,c
 21178  00487A  D02F               	goto	l2705
 21179                           
 21180                           ;app_init.c: 251: {
 21181                           ;app_init.c: 252: saveNumberInMemory(16, GetCallerNumber());
 21182  00487C  EC98  F032         	call	_GetCallerNumber	;wreg free
 21183  004880  C083  F096         	movff	?_GetCallerNumber,saveNumberInMemory@phoneNumber
 21184  004884  C084  F097         	movff	?_GetCallerNumber+1,saveNumberInMemory@phoneNumber+1
 21185  004888  0E10               	movlw	16
 21186  00488A  EC5D  F035         	call	_saveNumberInMemory
 21187                           
 21188                           ;app_init.c: 253: currentState = INIT_FSM_PREAMBLE;
 21189  00488E  0E03               	movlw	3
 21190  004890  D005               	goto	L32
 21191  004892                     l2709:
 21192                           
 21193                           ; BSR set to: 1
 21194                           ;app_init.c: 257: else
 21195                           ;app_init.c: 258: {
 21196                           ;app_init.c: 259: currentState = INIT_FSM_COMPLETE;
 21197                           
 21198                           ; BSR set to: 1
 21199  004892  0E04               	movlw	4
 21200  004894  D004               	goto	L31
 21201  004896                     
 21202                           ; BSR set to: 1
 21203                           ;app_init.c: 264: savePreamble();
 21204                           
 21205                           ; BSR set to: 1
 21206  004896  EC50  F035         	call	_savePreamble	;wreg free
 21207                           
 21208                           ;app_init.c: 265: currentState = INIT_FSM_COMPLETE;
 21209  00489A  0E04               	movlw	4
 21210  00489C                     L32:
 21211  00489C  0101               	movlb	1	; () banked
 21212  00489E                     L31:
 21213  00489E  6FD6               	movwf	initFsm@currentState& (0+255),b
 21214                           
 21215                           ;app_init.c: 266: break;
 21216  0048A0  D01C               	goto	l2705
 21217  0048A2                     
 21218                           ; BSR set to: 1
 21219                           ;app_init.c: 269: Led_SetLedStatus(1u, LED_STS_ON);
 21220                           
 21221                           ; BSR set to: 1
 21222  0048A2  0E01               	movlw	1
 21223  0048A4  0100               	movlb	0	; () banked
 21224  0048A6  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 21225  0048A8  0E01               	movlw	1
 21226  0048AA  EC62  F033         	call	_Led_SetLedStatus
 21227                           
 21228                           ;app_init.c: 270: currentState = INIT_FSM_MODEM;
 21229  0048AE  0E00               	movlw	0
 21230  0048B0  0101               	movlb	1	; () banked
 21231  0048B2  6FD6               	movwf	initFsm@currentState& (0+255),b
 21232                           
 21233                           ; BSR set to: 1
 21234                           ;app_init.c: 271: isInitialized = 1;
 21235  0048B4  0E01               	movlw	1
 21236  0048B6  6F03               	movwf	initFsm@isInitialized& (0+255),b
 21237                           
 21238                           ; BSR set to: 1
 21239                           ;app_init.c: 276: }
 21240                           
 21241                           ; BSR set to: 1
 21242                           ;app_init.c: 275: break;
 21243                           
 21244                           ;app_init.c: 274: default:
 21245                           
 21246                           ;app_init.c: 272: break;
 21247  0048B8  D010               	goto	l2705
 21248  0048BA                     l2702:
 21249                           
 21250                           ; BSR set to: 1
 21251                           
 21252                           ; BSR set to: 1
 21253  0048BA  51D6               	movf	initFsm@currentState& (0+255),w,b
 21254                           
 21255                           ; Switch size 1, requested type "space"
 21256                           ; Number of cases is 5, Range of values is 0 to 4
 21257                           ; switch strategies available:
 21258                           ; Name         Instructions Cycles
 21259                           ; simple_byte           16     9 (average)
 21260                           ;	Chosen strategy is simple_byte
 21261  0048BC  0A00               	xorlw	0	; case 0
 21262  0048BE  B4D8               	btfsc	status,2,c
 21263  0048C0  D7BF               	goto	l2703
 21264  0048C2  0A01               	xorlw	1	; case 1
 21265  0048C4  B4D8               	btfsc	status,2,c
 21266  0048C6  D7C3               	goto	l2706
 21267  0048C8  0A03               	xorlw	3	; case 2
 21268  0048CA  B4D8               	btfsc	status,2,c
 21269  0048CC  D7CE               	goto	l2708
 21270  0048CE  0A01               	xorlw	1	; case 3
 21271  0048D0  B4D8               	btfsc	status,2,c
 21272  0048D2  D7E1               	goto	l2712
 21273  0048D4  0A07               	xorlw	7	; case 4
 21274  0048D6  B4D8               	btfsc	status,2,c
 21275  0048D8  D7E4               	goto	l2713
 21276  0048DA                     l2705:
 21277                           
 21278                           ;app_init.c: 277: return isInitialized;
 21279                           
 21280                           ; BSR set to: 1
 21281  0048DA  0101               	movlb	1	; () banked
 21282  0048DC  5103               	movf	initFsm@isInitialized& (0+255),w,b
 21283  0048DE  0012               	return	
 21284  0048E0                     __end_of_initFsm:
 21285                           	opt stack 0
 21286                           tosu	equ	0xFFF
 21287                           tosh	equ	0xFFE
 21288                           tosl	equ	0xFFD
 21289                           pclath	equ	0xFFA
 21290                           tblptru	equ	0xFF8
 21291                           tblptrh	equ	0xFF7
 21292                           tblptrl	equ	0xFF6
 21293                           tablat	equ	0xFF5
 21294                           prodh	equ	0xFF4
 21295                           prodl	equ	0xFF3
 21296                           intcon	equ	0xFF2
 21297                           intcon2	equ	0xFF1
 21298                           intcon3	equ	0xFF0
 21299                           indf0	equ	0xFEF
 21300                           postinc0	equ	0xFEE
 21301                           plusw0	equ	0xFEB
 21302                           fsr0h	equ	0xFEA
 21303                           fsr0l	equ	0xFE9
 21304                           wreg	equ	0xFE8
 21305                           indf1	equ	0xFE7
 21306                           postinc1	equ	0xFE6
 21307                           postdec1	equ	0xFE5
 21308                           fsr1h	equ	0xFE2
 21309                           fsr1l	equ	0xFE1
 21310                           indf2	equ	0xFDF
 21311                           postinc2	equ	0xFDE
 21312                           postdec2	equ	0xFDD
 21313                           plusw2	equ	0xFDB
 21314                           fsr2h	equ	0xFDA
 21315                           fsr2l	equ	0xFD9
 21316                           status	equ	0xFD8
 21317                           
 21318 ;; *************** function _waitSetupCall *****************
 21319 ;; Defined at:
 21320 ;;		line 195 in file "../Source/c/04_App/app_init.c"
 21321 ;; Parameters:    Size  Location     Type
 21322 ;;		None
 21323 ;; Auto vars:     Size  Location     Type
 21324 ;;  isCallArrive    1   51[BANK0 ] unsigned char 
 21325 ;; Return value:  Size  Location     Type
 21326 ;;                  1    wreg      unsigned char 
 21327 ;; Registers used:
 21328 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21329 ;; Tracked objects:
 21330 ;;		On entry : 0/0
 21331 ;;		On exit  : 0/0
 21332 ;;		Unchanged: 0/0
 21333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21334 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21335 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21336 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21337 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21338 ;;Total ram usage:        1 bytes
 21339 ;; Hardware stack levels used:    1
 21340 ;; Hardware stack levels required when called:   15
 21341 ;; This function calls:
 21342 ;;		_Led_SetLedStatus
 21343 ;;		_getSetupCall
 21344 ;;		_secondsAppTimer
 21345 ;; This function is called by:
 21346 ;;		_initFsm
 21347 ;; This function uses a non-reentrant model
 21348 ;;
 21349                           
 21350                           	psect	text94
 21351  005F28                     __ptext94:
 21352                           	opt stack 0
 21353  005F28                     _waitSetupCall:
 21354                           	opt stack 11
 21355                           
 21356                           ;app_init.c: 197: bool isCallArrived = 0;
 21357                           
 21358                           ; BSR set to: 1
 21359                           ;incstack = 0
 21360  005F28  0E00               	movlw	0
 21361  005F2A  0100               	movlb	0	; () banked
 21362  005F2C  6F93               	movwf	waitSetupCall@isCallArrived& (0+255),b
 21363                           
 21364                           ; BSR set to: 0
 21365                           ;app_init.c: 198: if (!secondsAppTimer(30, &setupCallTicks, 0))
 21366  005F2E  0EBB               	movlw	low _setupCallTicks
 21367  005F30  6F8A               	movwf	secondsAppTimer@counter& (0+255),b
 21368  005F32  0E03               	movlw	high _setupCallTicks
 21369  005F34  6F8B               	movwf	(secondsAppTimer@counter+1)& (0+255),b
 21370  005F36  0E00               	movlw	0
 21371  005F38  6F8C               	movwf	secondsAppTimer@isCyclic& (0+255),b
 21372  005F3A  0E1E               	movlw	30
 21373  005F3C  EC18  F025         	call	_secondsAppTimer
 21374  005F40  0900               	iorlw	0
 21375  005F42  A4D8               	btfss	status,2,c
 21376  005F44  D00F               	goto	l2691
 21377                           
 21378                           ;app_init.c: 199: {
 21379                           ;app_init.c: 200: Led_SetLedStatus(1u, LED_STS_BLINK);
 21380  005F46  0E03               	movlw	3
 21381  005F48  0100               	movlb	0	; () banked
 21382  005F4A  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 21383  005F4C  0E01               	movlw	1
 21384  005F4E  EC62  F033         	call	_Led_SetLedStatus
 21385                           
 21386                           ;app_init.c: 201: if (getSetupCall())
 21387  005F52  ECCD  F034         	call	_getSetupCall	;wreg free
 21388  005F56  0900               	iorlw	0
 21389  005F58  B4D8               	btfsc	status,2,c
 21390  005F5A  D00A               	goto	l2693
 21391                           
 21392                           ;app_init.c: 202: {
 21393                           ;app_init.c: 203: isCallArrived = 1;
 21394  005F5C  0E01               	movlw	1
 21395  005F5E  0100               	movlb	0	; () banked
 21396  005F60  6F93               	movwf	waitSetupCall@isCallArrived& (0+255),b
 21397                           
 21398                           ; BSR set to: 0
 21399                           ;app_init.c: 204: }
 21400                           ;app_init.c: 205: }
 21401  005F62  D006               	goto	l2693
 21402  005F64                     l2691:
 21403                           
 21404                           ;app_init.c: 206: else
 21405                           ;app_init.c: 207: {
 21406                           ;app_init.c: 208: Led_SetLedStatus(1u, LED_STS_ON);
 21407                           
 21408                           ; BSR set to: 0
 21409  005F64  0E01               	movlw	1
 21410  005F66  0100               	movlb	0	; () banked
 21411  005F68  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 21412  005F6A  0E01               	movlw	1
 21413  005F6C  EC62  F033         	call	_Led_SetLedStatus
 21414  005F70                     l2693:
 21415                           
 21416                           ;app_init.c: 209: }
 21417                           ;app_init.c: 210: return isCallArrived;
 21418  005F70  0100               	movlb	0	; () banked
 21419  005F72  5193               	movf	waitSetupCall@isCallArrived& (0+255),w,b
 21420  005F74  0012               	return	
 21421  005F76                     __end_of_waitSetupCall:
 21422                           	opt stack 0
 21423                           tosu	equ	0xFFF
 21424                           tosh	equ	0xFFE
 21425                           tosl	equ	0xFFD
 21426                           pclath	equ	0xFFA
 21427                           tblptru	equ	0xFF8
 21428                           tblptrh	equ	0xFF7
 21429                           tblptrl	equ	0xFF6
 21430                           tablat	equ	0xFF5
 21431                           prodh	equ	0xFF4
 21432                           prodl	equ	0xFF3
 21433                           intcon	equ	0xFF2
 21434                           intcon2	equ	0xFF1
 21435                           intcon3	equ	0xFF0
 21436                           indf0	equ	0xFEF
 21437                           postinc0	equ	0xFEE
 21438                           plusw0	equ	0xFEB
 21439                           fsr0h	equ	0xFEA
 21440                           fsr0l	equ	0xFE9
 21441                           wreg	equ	0xFE8
 21442                           indf1	equ	0xFE7
 21443                           postinc1	equ	0xFE6
 21444                           postdec1	equ	0xFE5
 21445                           fsr1h	equ	0xFE2
 21446                           fsr1l	equ	0xFE1
 21447                           indf2	equ	0xFDF
 21448                           postinc2	equ	0xFDE
 21449                           postdec2	equ	0xFDD
 21450                           plusw2	equ	0xFDB
 21451                           fsr2h	equ	0xFDA
 21452                           fsr2l	equ	0xFD9
 21453                           status	equ	0xFD8
 21454                           
 21455 ;; *************** function _getSetupCall *****************
 21456 ;; Defined at:
 21457 ;;		line 179 in file "../Source/c/04_App/app_init.c"
 21458 ;; Parameters:    Size  Location     Type
 21459 ;;		None
 21460 ;; Auto vars:     Size  Location     Type
 21461 ;;  isCalledRece    1   35[BANK0 ] unsigned char 
 21462 ;; Return value:  Size  Location     Type
 21463 ;;                  1    wreg      unsigned char 
 21464 ;; Registers used:
 21465 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21466 ;; Tracked objects:
 21467 ;;		On entry : 0/0
 21468 ;;		On exit  : 0/0
 21469 ;;		Unchanged: 0/0
 21470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21471 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21472 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21473 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21474 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21475 ;;Total ram usage:        1 bytes
 21476 ;; Hardware stack levels used:    1
 21477 ;; Hardware stack levels required when called:   14
 21478 ;; This function calls:
 21479 ;;		_Mdm_HangPhoneCall
 21480 ;;		_Mdm_IsRinging
 21481 ;; This function is called by:
 21482 ;;		_waitSetupCall
 21483 ;; This function uses a non-reentrant model
 21484 ;;
 21485                           
 21486                           	psect	text95
 21487  00699A                     __ptext95:
 21488                           	opt stack 0
 21489  00699A                     _getSetupCall:
 21490                           	opt stack 11
 21491                           
 21492                           ;app_init.c: 181: bool isCalledReceived = 0;
 21493                           
 21494                           ; BSR set to: 0
 21495                           ;incstack = 0
 21496  00699A  0E00               	movlw	0
 21497  00699C  0100               	movlb	0	; () banked
 21498  00699E  6F83               	movwf	getSetupCall@isCalledReceived& (0+255),b
 21499                           
 21500                           ; BSR set to: 0
 21501                           ;app_init.c: 183: if (Mdm_IsRinging())
 21502  0069A0  EC33  F034         	call	_Mdm_IsRinging	;wreg free
 21503  0069A4  0900               	iorlw	0
 21504  0069A6  B4D8               	btfsc	status,2,c
 21505  0069A8  D005               	goto	l2687
 21506                           
 21507                           ;app_init.c: 184: {
 21508                           ;app_init.c: 185: Mdm_HangPhoneCall();
 21509  0069AA  ECCD  F035         	call	_Mdm_HangPhoneCall	;wreg free
 21510                           
 21511                           ;app_init.c: 186: isCalledReceived = 1;
 21512  0069AE  0E01               	movlw	1
 21513  0069B0  0100               	movlb	0	; () banked
 21514  0069B2  6F83               	movwf	getSetupCall@isCalledReceived& (0+255),b
 21515  0069B4                     l2687:
 21516                           
 21517                           ;app_init.c: 187: }
 21518                           ;app_init.c: 188: return isCalledReceived;
 21519                           
 21520                           ; BSR set to: 0
 21521  0069B4  0100               	movlb	0	; () banked
 21522  0069B6  5183               	movf	getSetupCall@isCalledReceived& (0+255),w,b
 21523  0069B8  0012               	return	
 21524  0069BA                     __end_of_getSetupCall:
 21525                           	opt stack 0
 21526                           tosu	equ	0xFFF
 21527                           tosh	equ	0xFFE
 21528                           tosl	equ	0xFFD
 21529                           pclath	equ	0xFFA
 21530                           tblptru	equ	0xFF8
 21531                           tblptrh	equ	0xFF7
 21532                           tblptrl	equ	0xFF6
 21533                           tablat	equ	0xFF5
 21534                           prodh	equ	0xFF4
 21535                           prodl	equ	0xFF3
 21536                           intcon	equ	0xFF2
 21537                           intcon2	equ	0xFF1
 21538                           intcon3	equ	0xFF0
 21539                           indf0	equ	0xFEF
 21540                           postinc0	equ	0xFEE
 21541                           plusw0	equ	0xFEB
 21542                           fsr0h	equ	0xFEA
 21543                           fsr0l	equ	0xFE9
 21544                           wreg	equ	0xFE8
 21545                           indf1	equ	0xFE7
 21546                           postinc1	equ	0xFE6
 21547                           postdec1	equ	0xFE5
 21548                           fsr1h	equ	0xFE2
 21549                           fsr1l	equ	0xFE1
 21550                           indf2	equ	0xFDF
 21551                           postinc2	equ	0xFDE
 21552                           postdec2	equ	0xFDD
 21553                           plusw2	equ	0xFDB
 21554                           fsr2h	equ	0xFDA
 21555                           fsr2l	equ	0xFD9
 21556                           status	equ	0xFD8
 21557                           
 21558 ;; *************** function _savePreamble *****************
 21559 ;; Defined at:
 21560 ;;		line 213 in file "../Source/c/04_App/app_init.c"
 21561 ;; Parameters:    Size  Location     Type
 21562 ;;		None
 21563 ;; Auto vars:     Size  Location     Type
 21564 ;;		None
 21565 ;; Return value:  Size  Location     Type
 21566 ;;                  1    wreg      void 
 21567 ;; Registers used:
 21568 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21569 ;; Tracked objects:
 21570 ;;		On entry : 0/0
 21571 ;;		On exit  : 0/0
 21572 ;;		Unchanged: 0/0
 21573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21574 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21575 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21577 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21578 ;;Total ram usage:        0 bytes
 21579 ;; Hardware stack levels used:    1
 21580 ;; Hardware stack levels required when called:   14
 21581 ;; This function calls:
 21582 ;;		_Eeprom_Write
 21583 ;;		_initPreamble
 21584 ;; This function is called by:
 21585 ;;		_initFsm
 21586 ;; This function uses a non-reentrant model
 21587 ;;
 21588                           
 21589                           	psect	text96
 21590  006AA0                     __ptext96:
 21591                           	opt stack 0
 21592  006AA0                     _savePreamble:
 21593                           	opt stack 12
 21594                           
 21595                           ;app_init.c: 215: Eeprom_Write(0, initPreamble(), 4);
 21596                           
 21597                           ; BSR set to: 0
 21598                           ;incstack = 0
 21599  006AA0  EC0B  F035         	call	_initPreamble	;wreg free
 21600  006AA4  C07D  F08F         	movff	?_initPreamble,Eeprom_Write@WriteBuffer
 21601  006AA8  C07E  F090         	movff	?_initPreamble+1,Eeprom_Write@WriteBuffer+1
 21602  006AAC  0E04               	movlw	4
 21603  006AAE  0100               	movlb	0	; () banked
 21604  006AB0  6F91               	movwf	Eeprom_Write@DataLength& (0+255),b
 21605  006AB2  0E00               	movlw	0
 21606  006AB4  ECCA  F02E         	call	_Eeprom_Write
 21607  006AB8  0012               	return		;funcret
 21608  006ABA                     __end_of_savePreamble:
 21609                           	opt stack 0
 21610                           tosu	equ	0xFFF
 21611                           tosh	equ	0xFFE
 21612                           tosl	equ	0xFFD
 21613                           pclath	equ	0xFFA
 21614                           tblptru	equ	0xFF8
 21615                           tblptrh	equ	0xFF7
 21616                           tblptrl	equ	0xFF6
 21617                           tablat	equ	0xFF5
 21618                           prodh	equ	0xFF4
 21619                           prodl	equ	0xFF3
 21620                           intcon	equ	0xFF2
 21621                           intcon2	equ	0xFF1
 21622                           intcon3	equ	0xFF0
 21623                           indf0	equ	0xFEF
 21624                           postinc0	equ	0xFEE
 21625                           plusw0	equ	0xFEB
 21626                           fsr0h	equ	0xFEA
 21627                           fsr0l	equ	0xFE9
 21628                           wreg	equ	0xFE8
 21629                           indf1	equ	0xFE7
 21630                           postinc1	equ	0xFE6
 21631                           postdec1	equ	0xFE5
 21632                           fsr1h	equ	0xFE2
 21633                           fsr1l	equ	0xFE1
 21634                           indf2	equ	0xFDF
 21635                           postinc2	equ	0xFDE
 21636                           postdec2	equ	0xFDD
 21637                           plusw2	equ	0xFDB
 21638                           fsr2h	equ	0xFDA
 21639                           fsr2l	equ	0xFD9
 21640                           status	equ	0xFD8
 21641                           
 21642 ;; *************** function _initPreamble *****************
 21643 ;; Defined at:
 21644 ;;		line 285 in file "../Source/c/04_App/app_init.c"
 21645 ;; Parameters:    Size  Location     Type
 21646 ;;		None
 21647 ;; Auto vars:     Size  Location     Type
 21648 ;;		None
 21649 ;; Return value:  Size  Location     Type
 21650 ;;                  2   29[BANK0 ] PTR unsigned char 
 21651 ;; Registers used:
 21652 ;;		wreg, status,2, status,0
 21653 ;; Tracked objects:
 21654 ;;		On entry : 0/0
 21655 ;;		On exit  : 0/0
 21656 ;;		Unchanged: 0/0
 21657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21658 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21659 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21661 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21662 ;;Total ram usage:        2 bytes
 21663 ;; Hardware stack levels used:    1
 21664 ;; Hardware stack levels required when called:   11
 21665 ;; This function calls:
 21666 ;;		Nothing
 21667 ;; This function is called by:
 21668 ;;		_savePreamble
 21669 ;; This function uses a non-reentrant model
 21670 ;;
 21671                           
 21672                           	psect	text97
 21673  006A16                     __ptext97:
 21674                           	opt stack 0
 21675  006A16                     _initPreamble:
 21676                           	opt stack 14
 21677                           
 21678                           ;app_init.c: 287: memoryPreamble[0] = 'U';
 21679                           
 21680                           ;incstack = 0
 21681  006A16  0E55               	movlw	85
 21682  006A18  0103               	movlb	3	; () banked
 21683  006A1A  6FA5               	movwf	_memoryPreamble& (0+255),b
 21684                           
 21685                           ;app_init.c: 288: memoryPreamble[1] = 'S';
 21686  006A1C  0E53               	movlw	83
 21687  006A1E  6FA6               	movwf	(_memoryPreamble+1)& (0+255),b
 21688                           
 21689                           ;app_init.c: 289: memoryPreamble[2] = 'I';
 21690  006A20  0E49               	movlw	73
 21691  006A22  6FA7               	movwf	(_memoryPreamble+2)& (0+255),b
 21692                           
 21693                           ;app_init.c: 290: memoryPreamble[3] = 'M';
 21694  006A24  0E4D               	movlw	77
 21695  006A26  6FA8               	movwf	(_memoryPreamble+3)& (0+255),b
 21696                           
 21697                           ; BSR set to: 3
 21698                           ;app_init.c: 291: return memoryPreamble;
 21699  006A28  0EA5               	movlw	low _memoryPreamble
 21700  006A2A  0100               	movlb	0	; () banked
 21701  006A2C  6F7D               	movwf	?_initPreamble& (0+255),b
 21702  006A2E  0E03               	movlw	high _memoryPreamble
 21703  006A30  6F7E               	movwf	(?_initPreamble+1)& (0+255),b
 21704  006A32  0012               	return	
 21705  006A34                     __end_of_initPreamble:
 21706                           	opt stack 0
 21707                           tosu	equ	0xFFF
 21708                           tosh	equ	0xFFE
 21709                           tosl	equ	0xFFD
 21710                           pclath	equ	0xFFA
 21711                           tblptru	equ	0xFF8
 21712                           tblptrh	equ	0xFF7
 21713                           tblptrl	equ	0xFF6
 21714                           tablat	equ	0xFF5
 21715                           prodh	equ	0xFF4
 21716                           prodl	equ	0xFF3
 21717                           intcon	equ	0xFF2
 21718                           intcon2	equ	0xFF1
 21719                           intcon3	equ	0xFF0
 21720                           indf0	equ	0xFEF
 21721                           postinc0	equ	0xFEE
 21722                           plusw0	equ	0xFEB
 21723                           fsr0h	equ	0xFEA
 21724                           fsr0l	equ	0xFE9
 21725                           wreg	equ	0xFE8
 21726                           indf1	equ	0xFE7
 21727                           postinc1	equ	0xFE6
 21728                           postdec1	equ	0xFE5
 21729                           fsr1h	equ	0xFE2
 21730                           fsr1l	equ	0xFE1
 21731                           indf2	equ	0xFDF
 21732                           postinc2	equ	0xFDE
 21733                           postdec2	equ	0xFDD
 21734                           plusw2	equ	0xFDB
 21735                           fsr2h	equ	0xFDA
 21736                           fsr2l	equ	0xFD9
 21737                           status	equ	0xFD8
 21738                           
 21739 ;; *************** function _initGprsModem *****************
 21740 ;; Defined at:
 21741 ;;		line 86 in file "../Source/c/04_App/app_init.c"
 21742 ;; Parameters:    Size  Location     Type
 21743 ;;		None
 21744 ;; Auto vars:     Size  Location     Type
 21745 ;;  isInitialize    1   57[BANK0 ] unsigned char 
 21746 ;; Return value:  Size  Location     Type
 21747 ;;                  1    wreg      unsigned char 
 21748 ;; Registers used:
 21749 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21750 ;; Tracked objects:
 21751 ;;		On entry : 0/0
 21752 ;;		On exit  : 0/0
 21753 ;;		Unchanged: 0/0
 21754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21756 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21758 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21759 ;;Total ram usage:        1 bytes
 21760 ;; Hardware stack levels used:    1
 21761 ;; Hardware stack levels required when called:   14
 21762 ;; This function calls:
 21763 ;;		_Mdm_SetSmsFormat
 21764 ;;		_Uart_WriteConstString
 21765 ;;		_secondsAppTimer
 21766 ;; This function is called by:
 21767 ;;		_initFsm
 21768 ;; This function uses a non-reentrant model
 21769 ;;
 21770                           
 21771                           	psect	text98
 21772  00502E                     __ptext98:
 21773                           	opt stack 0
 21774  00502E                     _initGprsModem:
 21775                           	opt stack 12
 21776                           
 21777                           ;app_init.c: 88: static uint16_t modemCounter = 0;
 21778                           ;app_init.c: 89: static modemStates currentState = MODEM_INIT;
 21779                           ;app_init.c: 90: bool isInitialized = 0;
 21780                           
 21781                           ; BSR set to: 0
 21782                           ;incstack = 0
 21783  00502E  0E00               	movlw	0
 21784  005030  0100               	movlb	0	; () banked
 21785  005032  6F99               	movwf	initGprsModem@isInitialized& (0+255),b
 21786                           
 21787                           ;app_init.c: 92: switch(currentState)
 21788  005034  D035               	goto	l2659
 21789  005036                     
 21790                           ;app_init.c: 95: if (MdmStatus == ModemConfigured || MdmStatus == ModemOn)
 21791                           
 21792                           ; BSR set to: 0
 21793  005036  0E03               	movlw	3
 21794  005038  0100               	movlb	0	; () banked
 21795  00503A  19D1               	xorwf	_MdmStatus& (0+255),w,b
 21796  00503C  B4D8               	btfsc	status,2,c
 21797  00503E  D003               	goto	u14560
 21798                           
 21799                           ; BSR set to: 0
 21800  005040  05D1               	decf	_MdmStatus& (0+255),w,b
 21801  005042  A4D8               	btfss	status,2,c
 21802  005044  D03B               	goto	l2665
 21803  005046                     u14560:
 21804                           
 21805                           ; BSR set to: 0
 21806                           ;app_init.c: 96: {
 21807                           ;app_init.c: 97: if (secondsAppTimer(5, &modemCounter, 0))
 21808                           
 21809                           ; BSR set to: 0
 21810  005046  0EB9               	movlw	low initGprsModem@modemCounter
 21811  005048  6F8A               	movwf	secondsAppTimer@counter& (0+255),b
 21812  00504A  0E03               	movlw	high initGprsModem@modemCounter
 21813  00504C  6F8B               	movwf	(secondsAppTimer@counter+1)& (0+255),b
 21814  00504E  0E00               	movlw	0
 21815  005050  6F8C               	movwf	secondsAppTimer@isCyclic& (0+255),b
 21816  005052  0E05               	movlw	5
 21817  005054  EC18  F025         	call	_secondsAppTimer
 21818  005058  0900               	iorlw	0
 21819  00505A  B4D8               	btfsc	status,2,c
 21820  00505C  D02F               	goto	l2665
 21821                           
 21822                           ;app_init.c: 98: {
 21823                           ;app_init.c: 99: Mdm_SetSmsFormat(1);
 21824  00505E  0E01               	movlw	1
 21825  005060  EC6C  F02F         	call	_Mdm_SetSmsFormat
 21826                           
 21827                           ;app_init.c: 100: currentState = MODEM_DELETE_SMS;
 21828  005064  0E01               	movlw	1
 21829  005066  D013               	goto	L34
 21830  005068                     
 21831                           ; BSR set to: 1
 21832                           ;app_init.c: 106: Uart_WriteConstString(1,"AT+CMGDA=DEL ALL\r\n");
 21833                           
 21834                           ; BSR set to: 1
 21835  005068  0EFA               	movlw	low STR_30
 21836  00506A  0100               	movlb	0	; () banked
 21837  00506C  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 21838  00506E  0EFE               	movlw	high STR_30
 21839  005070  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 21840  005072  0E01               	movlw	1
 21841  005074  EC48  F031         	call	_Uart_WriteConstString
 21842                           
 21843                           ;app_init.c: 107: currentState = MODEM_SET_CALLER_ID;
 21844  005078  0E02               	movlw	2
 21845  00507A  D009               	goto	L34
 21846  00507C                     
 21847                           ; BSR set to: 1
 21848                           ;app_init.c: 111: Uart_WriteConstString(1,"AT+CLIP=1\r\n");
 21849                           
 21850                           ; BSR set to: 1
 21851  00507C  0EAA               	movlw	low STR_31
 21852  00507E  0100               	movlb	0	; () banked
 21853  005080  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 21854  005082  0EFF               	movlw	high STR_31
 21855  005084  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 21856  005086  0E01               	movlw	1
 21857  005088  EC48  F031         	call	_Uart_WriteConstString
 21858                           
 21859                           ;app_init.c: 112: currentState = MODEM_INIT_COMPLETE;
 21860  00508C  0E03               	movlw	3
 21861  00508E                     L34:
 21862  00508E  0101               	movlb	1	; () banked
 21863  005090  6FD8               	movwf	initGprsModem@currentState& (0+255),b
 21864                           
 21865                           ;app_init.c: 113: break;
 21866  005092  D014               	goto	l2665
 21867  005094                     
 21868                           ; BSR set to: 1
 21869                           ;app_init.c: 116: currentState = MODEM_INIT;
 21870                           
 21871                           ; BSR set to: 1
 21872  005094  0E00               	movlw	0
 21873  005096  6FD8               	movwf	initGprsModem@currentState& (0+255),b
 21874                           
 21875                           ;app_init.c: 117: isInitialized = 1;
 21876  005098  0E01               	movlw	1
 21877  00509A  0100               	movlb	0	; () banked
 21878  00509C  6F99               	movwf	initGprsModem@isInitialized& (0+255),b
 21879                           
 21880                           ; BSR set to: 0
 21881                           ;app_init.c: 122: }
 21882                           
 21883                           ; BSR set to: 0
 21884                           ;app_init.c: 121: break;
 21885                           
 21886                           ;app_init.c: 120: default:
 21887                           
 21888                           ;app_init.c: 118: break;
 21889  00509E  D00E               	goto	l2665
 21890  0050A0                     l2659:
 21891                           
 21892                           ; BSR set to: 0
 21893                           
 21894                           ; BSR set to: 0
 21895  0050A0  0101               	movlb	1	; () banked
 21896  0050A2  51D8               	movf	initGprsModem@currentState& (0+255),w,b
 21897                           
 21898                           ; Switch size 1, requested type "space"
 21899                           ; Number of cases is 4, Range of values is 0 to 3
 21900                           ; switch strategies available:
 21901                           ; Name         Instructions Cycles
 21902                           ; simple_byte           13     7 (average)
 21903                           ;	Chosen strategy is simple_byte
 21904  0050A4  0A00               	xorlw	0	; case 0
 21905  0050A6  B4D8               	btfsc	status,2,c
 21906  0050A8  D7C6               	goto	l2660
 21907  0050AA  0A01               	xorlw	1	; case 1
 21908  0050AC  B4D8               	btfsc	status,2,c
 21909  0050AE  D7DC               	goto	l2666
 21910  0050B0  0A03               	xorlw	3	; case 2
 21911  0050B2  B4D8               	btfsc	status,2,c
 21912  0050B4  D7E3               	goto	l2667
 21913  0050B6  0A01               	xorlw	1	; case 3
 21914  0050B8  B4D8               	btfsc	status,2,c
 21915  0050BA  D7EC               	goto	l2668
 21916  0050BC                     l2665:
 21917                           
 21918                           ;app_init.c: 123: return isInitialized;
 21919                           
 21920                           ; BSR set to: 1
 21921  0050BC  0100               	movlb	0	; () banked
 21922  0050BE  5199               	movf	initGprsModem@isInitialized& (0+255),w,b
 21923  0050C0  0012               	return	
 21924  0050C2                     __end_of_initGprsModem:
 21925                           	opt stack 0
 21926                           tosu	equ	0xFFF
 21927                           tosh	equ	0xFFE
 21928                           tosl	equ	0xFFD
 21929                           pclath	equ	0xFFA
 21930                           tblptru	equ	0xFF8
 21931                           tblptrh	equ	0xFF7
 21932                           tblptrl	equ	0xFF6
 21933                           tablat	equ	0xFF5
 21934                           prodh	equ	0xFF4
 21935                           prodl	equ	0xFF3
 21936                           intcon	equ	0xFF2
 21937                           intcon2	equ	0xFF1
 21938                           intcon3	equ	0xFF0
 21939                           indf0	equ	0xFEF
 21940                           postinc0	equ	0xFEE
 21941                           plusw0	equ	0xFEB
 21942                           fsr0h	equ	0xFEA
 21943                           fsr0l	equ	0xFE9
 21944                           wreg	equ	0xFE8
 21945                           indf1	equ	0xFE7
 21946                           postinc1	equ	0xFE6
 21947                           postdec1	equ	0xFE5
 21948                           fsr1h	equ	0xFE2
 21949                           fsr1l	equ	0xFE1
 21950                           indf2	equ	0xFDF
 21951                           postinc2	equ	0xFDE
 21952                           postdec2	equ	0xFDD
 21953                           plusw2	equ	0xFDB
 21954                           fsr2h	equ	0xFDA
 21955                           fsr2l	equ	0xFD9
 21956                           status	equ	0xFD8
 21957                           
 21958 ;; *************** function _Mdm_SetSmsFormat *****************
 21959 ;; Defined at:
 21960 ;;		line 837 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 21961 ;; Parameters:    Size  Location     Type
 21962 ;;  TextFormat      1    wreg     unsigned char 
 21963 ;; Auto vars:     Size  Location     Type
 21964 ;;  TextFormat      1   56[BANK0 ] unsigned char 
 21965 ;;  UartMessage    20   36[BANK0 ] unsigned char [20]
 21966 ;;  Index           1   35[BANK0 ] unsigned char 
 21967 ;; Return value:  Size  Location     Type
 21968 ;;                  1    wreg      void 
 21969 ;; Registers used:
 21970 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 21971 ;; Tracked objects:
 21972 ;;		On entry : 0/0
 21973 ;;		On exit  : 0/0
 21974 ;;		Unchanged: 0/0
 21975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21976 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21977 ;;      Locals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21979 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21980 ;;Total ram usage:       22 bytes
 21981 ;; Hardware stack levels used:    1
 21982 ;; Hardware stack levels required when called:   13
 21983 ;; This function calls:
 21984 ;;		_Uart_WriteString
 21985 ;; This function is called by:
 21986 ;;		_initGprsModem
 21987 ;; This function uses a non-reentrant model
 21988 ;;
 21989                           
 21990                           	psect	text99
 21991  005ED8                     __ptext99:
 21992                           	opt stack 0
 21993  005ED8                     _Mdm_SetSmsFormat:
 21994                           	opt stack 12
 21995                           
 21996                           ; BSR set to: 0
 21997                           ;incstack = 0
 21998                           ;Mdm_SetSmsFormat@TextFormat stored from wreg
 21999  005ED8  0100               	movlb	0	; () banked
 22000  005EDA  6F98               	movwf	Mdm_SetSmsFormat@TextFormat& (0+255),b
 22001                           
 22002                           ;mdm_gsm_gprs.c: 839: UINT8 UartMessage[20];
 22003                           ;mdm_gsm_gprs.c: 840: UINT8 Index = 0;
 22004  005EDC  0E00               	movlw	0
 22005  005EDE  0100               	movlb	0	; () banked
 22006  005EE0  6F83               	movwf	Mdm_SetSmsFormat@Index& (0+255),b
 22007                           
 22008                           ;mdm_gsm_gprs.c: 843: UartMessage[0] = 'A';
 22009  005EE2  0E41               	movlw	65
 22010  005EE4  6F84               	movwf	Mdm_SetSmsFormat@UartMessage& (0+255),b
 22011                           
 22012                           ;mdm_gsm_gprs.c: 844: UartMessage[1] = 'T';
 22013  005EE6  0E54               	movlw	84
 22014  005EE8  6F85               	movwf	(Mdm_SetSmsFormat@UartMessage+1)& (0+255),b
 22015                           
 22016                           ;mdm_gsm_gprs.c: 845: UartMessage[2] = '+';
 22017  005EEA  0E2B               	movlw	43
 22018  005EEC  6F86               	movwf	(Mdm_SetSmsFormat@UartMessage+2)& (0+255),b
 22019                           
 22020                           ;mdm_gsm_gprs.c: 846: UartMessage[3] = 'C';
 22021  005EEE  0E43               	movlw	67
 22022  005EF0  6F87               	movwf	(Mdm_SetSmsFormat@UartMessage+3)& (0+255),b
 22023                           
 22024                           ;mdm_gsm_gprs.c: 847: UartMessage[4] = 'M';
 22025  005EF2  0E4D               	movlw	77
 22026  005EF4  6F88               	movwf	(Mdm_SetSmsFormat@UartMessage+4)& (0+255),b
 22027                           
 22028                           ;mdm_gsm_gprs.c: 848: UartMessage[5] = 'G';
 22029  005EF6  0E47               	movlw	71
 22030  005EF8  6F89               	movwf	(Mdm_SetSmsFormat@UartMessage+5)& (0+255),b
 22031                           
 22032                           ;mdm_gsm_gprs.c: 849: UartMessage[6] = 'F';
 22033  005EFA  0E46               	movlw	70
 22034  005EFC  6F8A               	movwf	(Mdm_SetSmsFormat@UartMessage+6)& (0+255),b
 22035                           
 22036                           ;mdm_gsm_gprs.c: 850: UartMessage[7] = '=';
 22037  005EFE  0E3D               	movlw	61
 22038  005F00  6F8B               	movwf	(Mdm_SetSmsFormat@UartMessage+7)& (0+255),b
 22039                           
 22040                           ; BSR set to: 0
 22041                           ;mdm_gsm_gprs.c: 853: if (TextFormat == 1u)
 22042  005F02  0598               	decf	Mdm_SetSmsFormat@TextFormat& (0+255),w,b
 22043  005F04  A4D8               	btfss	status,2,c
 22044  005F06  D002               	goto	l1121
 22045                           
 22046                           ; BSR set to: 0
 22047                           ;mdm_gsm_gprs.c: 854: {
 22048                           ;mdm_gsm_gprs.c: 855: UartMessage[8] = '1';
 22049  005F08  0E31               	movlw	49
 22050  005F0A  D001               	goto	L35
 22051  005F0C                     l1121:
 22052                           
 22053                           ; BSR set to: 0
 22054                           ;mdm_gsm_gprs.c: 857: else
 22055                           ;mdm_gsm_gprs.c: 858: {
 22056                           ;mdm_gsm_gprs.c: 859: UartMessage[8] = '0';
 22057                           
 22058                           ; BSR set to: 0
 22059  005F0C  0E30               	movlw	48
 22060  005F0E                     L35:
 22061  005F0E  6F8C               	movwf	(Mdm_SetSmsFormat@UartMessage+8)& (0+255),b
 22062                           
 22063                           ; BSR set to: 0
 22064                           ;mdm_gsm_gprs.c: 860: }
 22065                           ;mdm_gsm_gprs.c: 862: UartMessage[9] = '\r';
 22066  005F10  0E0D               	movlw	13
 22067  005F12  6F8D               	movwf	(Mdm_SetSmsFormat@UartMessage+9)& (0+255),b
 22068                           
 22069                           ;mdm_gsm_gprs.c: 863: UartMessage[10] = (0);
 22070  005F14  0E00               	movlw	0
 22071  005F16  6F8E               	movwf	(Mdm_SetSmsFormat@UartMessage+10)& (0+255),b
 22072                           
 22073                           ; BSR set to: 0
 22074                           ;mdm_gsm_gprs.c: 866: Uart_WriteString(1, UartMessage);
 22075  005F18  0E84               	movlw	low Mdm_SetSmsFormat@UartMessage
 22076  005F1A  6F80               	movwf	Uart_WriteString@StringToWrite& (0+255),b
 22077  005F1C  0E00               	movlw	high Mdm_SetSmsFormat@UartMessage
 22078  005F1E  6F81               	movwf	(Uart_WriteString@StringToWrite+1)& (0+255),b
 22079  005F20  0E01               	movlw	1
 22080  005F22  ECE8  F031         	call	_Uart_WriteString
 22081  005F26  0012               	return		;funcret
 22082  005F28                     __end_of_Mdm_SetSmsFormat:
 22083                           	opt stack 0
 22084                           tosu	equ	0xFFF
 22085                           tosh	equ	0xFFE
 22086                           tosl	equ	0xFFD
 22087                           pclath	equ	0xFFA
 22088                           tblptru	equ	0xFF8
 22089                           tblptrh	equ	0xFF7
 22090                           tblptrl	equ	0xFF6
 22091                           tablat	equ	0xFF5
 22092                           prodh	equ	0xFF4
 22093                           prodl	equ	0xFF3
 22094                           intcon	equ	0xFF2
 22095                           intcon2	equ	0xFF1
 22096                           intcon3	equ	0xFF0
 22097                           indf0	equ	0xFEF
 22098                           postinc0	equ	0xFEE
 22099                           plusw0	equ	0xFEB
 22100                           fsr0h	equ	0xFEA
 22101                           fsr0l	equ	0xFE9
 22102                           wreg	equ	0xFE8
 22103                           indf1	equ	0xFE7
 22104                           postinc1	equ	0xFE6
 22105                           postdec1	equ	0xFE5
 22106                           fsr1h	equ	0xFE2
 22107                           fsr1l	equ	0xFE1
 22108                           indf2	equ	0xFDF
 22109                           postinc2	equ	0xFDE
 22110                           postdec2	equ	0xFDD
 22111                           plusw2	equ	0xFDB
 22112                           fsr2h	equ	0xFDA
 22113                           fsr2l	equ	0xFD9
 22114                           status	equ	0xFD8
 22115                           
 22116 ;; *************** function _initEeprom *****************
 22117 ;; Defined at:
 22118 ;;		line 130 in file "../Source/c/04_App/app_init.c"
 22119 ;; Parameters:    Size  Location     Type
 22120 ;;		None
 22121 ;; Auto vars:     Size  Location     Type
 22122 ;;  isInitialize    1    2[BANK1 ] unsigned char 
 22123 ;;  memoryOpResu    1    1[BANK1 ] enum E8246
 22124 ;;  addressToRea    1    0[BANK1 ] const unsigned char 
 22125 ;; Return value:  Size  Location     Type
 22126 ;;                  1    wreg      unsigned char 
 22127 ;; Registers used:
 22128 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 22129 ;; Tracked objects:
 22130 ;;		On entry : 0/0
 22131 ;;		On exit  : 0/0
 22132 ;;		Unchanged: 0/0
 22133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22134 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22135 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22137 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22138 ;;Total ram usage:        3 bytes
 22139 ;; Hardware stack levels used:    1
 22140 ;; Hardware stack levels required when called:   17
 22141 ;; This function calls:
 22142 ;;		_Eeprom_Read
 22143 ;; This function is called by:
 22144 ;;		_initFsm
 22145 ;; This function uses a non-reentrant model
 22146 ;;
 22147                           
 22148                           	psect	text100
 22149  0050C2                     __ptext100:
 22150                           	opt stack 0
 22151  0050C2                     _initEeprom:
 22152                           	opt stack 9
 22153                           
 22154                           ;app_init.c: 132: const uint8_t addressToRead = 0;
 22155                           
 22156                           ;incstack = 0
 22157  0050C2  0E00               	movlw	0
 22158  0050C4  0101               	movlb	1	; () banked
 22159  0050C6  6F00               	movwf	initEeprom@addressToRead& (0+255),b
 22160                           
 22161                           ;app_init.c: 133: static eepromStates currentState = EEPROM_INIT;
 22162                           ;app_init.c: 134: EepromStsType memoryOpResult = OP_PENDING;
 22163  0050C8  0E02               	movlw	2
 22164  0050CA  6F01               	movwf	initEeprom@memoryOpResult& (0+255),b
 22165                           
 22166                           ;app_init.c: 135: bool isInitialized = 0;
 22167  0050CC  0E00               	movlw	0
 22168  0050CE  6F02               	movwf	initEeprom@isInitialized& (0+255),b
 22169                           
 22170                           ;app_init.c: 137: switch (currentState)
 22171  0050D0  D034               	goto	l2675
 22172  0050D2                     
 22173                           ; BSR set to: 1
 22174                           ;app_init.c: 140: memoryOpResult = Eeprom_Read(0, memoryPreamble, 4);
 22175                           
 22176                           ; BSR set to: 1
 22177  0050D2  0EA5               	movlw	low _memoryPreamble
 22178  0050D4  0100               	movlb	0	; () banked
 22179  0050D6  6FA9               	movwf	Eeprom_Read@ReadBuffer& (0+255),b
 22180  0050D8  0E03               	movlw	high _memoryPreamble
 22181  0050DA  6FAA               	movwf	(Eeprom_Read@ReadBuffer+1)& (0+255),b
 22182  0050DC  0E04               	movlw	4
 22183  0050DE  6FAB               	movwf	Eeprom_Read@DataLength& (0+255),b
 22184  0050E0  0E00               	movlw	0
 22185  0050E2  EC4C  F02E         	call	_Eeprom_Read
 22186  0050E6  0101               	movlb	1	; () banked
 22187  0050E8  6F01               	movwf	initEeprom@memoryOpResult& (0+255),b
 22188                           
 22189                           ; BSR set to: 1
 22190                           ;app_init.c: 141: if (memoryOpResult != OP_PENDING)
 22191  0050EA  0E02               	movlw	2
 22192  0050EC  1901               	xorwf	initEeprom@memoryOpResult& (0+255),w,b
 22193  0050EE  B4D8               	btfsc	status,2,c
 22194  0050F0  D02E               	goto	l2680
 22195                           
 22196                           ; BSR set to: 1
 22197                           ;app_init.c: 142: {
 22198                           ;app_init.c: 143: if (memoryPreamble[0] == 'U' &&
 22199                           ;app_init.c: 144: memoryPreamble[1] == 'S' &&
 22200                           ;app_init.c: 145: memoryPreamble[2] == 'I' &&
 22201                           ;app_init.c: 146: memoryPreamble[3] == 'M')
 22202  0050F2  0E55               	movlw	85
 22203  0050F4  0103               	movlb	3	; () banked
 22204  0050F6  19A5               	xorwf	_memoryPreamble& (0+255),w,b
 22205  0050F8  A4D8               	btfss	status,2,c
 22206  0050FA  D00E               	goto	l2678
 22207                           
 22208                           ; BSR set to: 3
 22209  0050FC  0E53               	movlw	83
 22210  0050FE  19A6               	xorwf	(_memoryPreamble+1)& (0+255),w,b
 22211  005100  A4D8               	btfss	status,2,c
 22212  005102  D00A               	goto	l2678
 22213                           
 22214                           ; BSR set to: 3
 22215  005104  0E49               	movlw	73
 22216  005106  19A7               	xorwf	(_memoryPreamble+2)& (0+255),w,b
 22217  005108  A4D8               	btfss	status,2,c
 22218  00510A  D006               	goto	l2678
 22219                           
 22220                           ; BSR set to: 3
 22221  00510C  0E4D               	movlw	77
 22222  00510E  19A8               	xorwf	(_memoryPreamble+3)& (0+255),w,b
 22223  005110  A4D8               	btfss	status,2,c
 22224  005112  D002               	goto	l2678
 22225                           
 22226                           ; BSR set to: 3
 22227                           ;app_init.c: 147: {
 22228                           ;app_init.c: 148: currentState = EEPROM_NOT_EMPTY;
 22229  005114  0E02               	movlw	2
 22230  005116  D001               	goto	L36
 22231  005118                     l2678:
 22232                           
 22233                           ;app_init.c: 150: else
 22234                           ;app_init.c: 151: {
 22235                           ;app_init.c: 152: currentState = EEPROM_EMPTY;
 22236                           
 22237                           ; BSR set to: 1
 22238  005118  0E01               	movlw	1
 22239  00511A                     L36:
 22240  00511A  0101               	movlb	1	; () banked
 22241  00511C  6FD7               	movwf	initEeprom@currentState& (0+255),b
 22242                           
 22243                           ; BSR set to: 1
 22244                           ;app_init.c: 153: }
 22245                           ;app_init.c: 154: }
 22246                           ;app_init.c: 155: break;
 22247                           
 22248                           ; BSR set to: 1
 22249  00511E  D017               	goto	l2680
 22250  005120                     
 22251                           ; BSR set to: 1
 22252                           ;app_init.c: 158: currentState = EEPROM_INIT;
 22253                           
 22254                           ; BSR set to: 1
 22255  005120  0E00               	movlw	0
 22256  005122  6FD7               	movwf	initEeprom@currentState& (0+255),b
 22257                           
 22258                           ;app_init.c: 159: isInitialized = 1;
 22259  005124  0E01               	movlw	1
 22260  005126  6F02               	movwf	initEeprom@isInitialized& (0+255),b
 22261                           
 22262                           ;app_init.c: 160: isMemoryEmpty = 1;
 22263  005128  0E01               	movlw	1
 22264  00512A  D005               	goto	L37
 22265  00512C                     
 22266                           ; BSR set to: 1
 22267                           ;app_init.c: 164: currentState = EEPROM_INIT;
 22268                           
 22269                           ; BSR set to: 1
 22270  00512C  0E00               	movlw	0
 22271  00512E  6FD7               	movwf	initEeprom@currentState& (0+255),b
 22272                           
 22273                           ;app_init.c: 165: isInitialized = 1;
 22274  005130  0E01               	movlw	1
 22275  005132  6F02               	movwf	initEeprom@isInitialized& (0+255),b
 22276                           
 22277                           ;app_init.c: 166: isMemoryEmpty = 0;
 22278  005134  0E00               	movlw	0
 22279  005136                     L37:
 22280  005136  6FFE               	movwf	_isMemoryEmpty& (0+255),b
 22281                           
 22282                           ; BSR set to: 1
 22283                           ;app_init.c: 171: }
 22284                           
 22285                           ; BSR set to: 1
 22286                           ;app_init.c: 170: break;
 22287                           
 22288                           ;app_init.c: 169: default:
 22289                           
 22290                           ;app_init.c: 167: break;
 22291  005138  D00A               	goto	l2680
 22292  00513A                     l2675:
 22293                           
 22294                           ; BSR set to: 1
 22295                           
 22296                           ; BSR set to: 1
 22297  00513A  51D7               	movf	initEeprom@currentState& (0+255),w,b
 22298                           
 22299                           ; Switch size 1, requested type "space"
 22300                           ; Number of cases is 3, Range of values is 0 to 2
 22301                           ; switch strategies available:
 22302                           ; Name         Instructions Cycles
 22303                           ; simple_byte           10     6 (average)
 22304                           ;	Chosen strategy is simple_byte
 22305  00513C  0A00               	xorlw	0	; case 0
 22306  00513E  B4D8               	btfsc	status,2,c
 22307  005140  D7C8               	goto	l2676
 22308  005142  0A01               	xorlw	1	; case 1
 22309  005144  B4D8               	btfsc	status,2,c
 22310  005146  D7EC               	goto	l2681
 22311  005148  0A03               	xorlw	3	; case 2
 22312  00514A  B4D8               	btfsc	status,2,c
 22313  00514C  D7EF               	goto	l2682
 22314  00514E                     l2680:
 22315                           
 22316                           ; BSR set to: 1
 22317                           ;app_init.c: 172: return isInitialized;
 22318                           
 22319                           ; BSR set to: 1
 22320  00514E  5102               	movf	initEeprom@isInitialized& (0+255),w,b
 22321  005150  0012               	return	
 22322  005152                     __end_of_initEeprom:
 22323                           	opt stack 0
 22324                           tosu	equ	0xFFF
 22325                           tosh	equ	0xFFE
 22326                           tosl	equ	0xFFD
 22327                           pclath	equ	0xFFA
 22328                           tblptru	equ	0xFF8
 22329                           tblptrh	equ	0xFF7
 22330                           tblptrl	equ	0xFF6
 22331                           tablat	equ	0xFF5
 22332                           prodh	equ	0xFF4
 22333                           prodl	equ	0xFF3
 22334                           intcon	equ	0xFF2
 22335                           intcon2	equ	0xFF1
 22336                           intcon3	equ	0xFF0
 22337                           indf0	equ	0xFEF
 22338                           postinc0	equ	0xFEE
 22339                           plusw0	equ	0xFEB
 22340                           fsr0h	equ	0xFEA
 22341                           fsr0l	equ	0xFE9
 22342                           wreg	equ	0xFE8
 22343                           indf1	equ	0xFE7
 22344                           postinc1	equ	0xFE6
 22345                           postdec1	equ	0xFE5
 22346                           fsr1h	equ	0xFE2
 22347                           fsr1l	equ	0xFE1
 22348                           indf2	equ	0xFDF
 22349                           postinc2	equ	0xFDE
 22350                           postdec2	equ	0xFDD
 22351                           plusw2	equ	0xFDB
 22352                           fsr2h	equ	0xFDA
 22353                           fsr2l	equ	0xFD9
 22354                           status	equ	0xFD8
 22355                           
 22356 ;; *************** function _detectCmd *****************
 22357 ;; Defined at:
 22358 ;;		line 114 in file "../Source/c/04_App/app.c"
 22359 ;; Parameters:    Size  Location     Type
 22360 ;;		None
 22361 ;; Auto vars:     Size  Location     Type
 22362 ;;  currentState    1   53[BANK0 ] enum E9014
 22363 ;; Return value:  Size  Location     Type
 22364 ;;                  1    wreg      enum E9014
 22365 ;; Registers used:
 22366 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22367 ;; Tracked objects:
 22368 ;;		On entry : 0/0
 22369 ;;		On exit  : 0/0
 22370 ;;		Unchanged: 0/0
 22371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22372 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22373 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22374 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22375 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22376 ;;Total ram usage:        1 bytes
 22377 ;; Hardware stack levels used:    1
 22378 ;; Hardware stack levels required when called:   14
 22379 ;; This function calls:
 22380 ;;		_GetCallerNumber
 22381 ;;		_GetLastInteractionNumber
 22382 ;;		_Mdm_GetSmsData
 22383 ;;		_Mdm_HangPhoneCall
 22384 ;;		_Mdm_IsRinging
 22385 ;;		_Mdm_IsSmsReceived
 22386 ;;		_Mdm_RequestSmsData
 22387 ;;		_StringCopy
 22388 ;;		_Uart_WriteConstString
 22389 ;;		_parseCommand
 22390 ;; This function is called by:
 22391 ;;		_MyApp_Task
 22392 ;; This function uses a non-reentrant model
 22393 ;;
 22394                           
 22395                           	psect	text101
 22396  004C10                     __ptext101:
 22397                           	opt stack 0
 22398  004C10                     _detectCmd:
 22399                           	opt stack 13
 22400                           
 22401                           ;app.c: 116: gateFsmStates currentState = GATE_WAIT_EVENT;
 22402                           
 22403                           ; BSR set to: 1
 22404                           ;incstack = 0
 22405  004C10  0E01               	movlw	1
 22406  004C12  0100               	movlb	0	; () banked
 22407  004C14  6F95               	movwf	detectCmd@currentState& (0+255),b
 22408                           
 22409                           ; BSR set to: 0
 22410                           ;app.c: 117: if (Mdm_IsSmsReceived())
 22411  004C16  EC21  F034         	call	_Mdm_IsSmsReceived	;wreg free
 22412  004C1A  0900               	iorlw	0
 22413  004C1C  A4D8               	btfss	status,2,c
 22414                           
 22415                           ;app.c: 118: {
 22416                           ;app.c: 119: Mdm_RequestSmsData();
 22417  004C1E  ECEF  F035         	call	_Mdm_RequestSmsData	;wreg free
 22418                           
 22419                           ;app.c: 120: }
 22420                           ;app.c: 121: if (Mdm_GetSmsData(smsText) == SmsDataReady)
 22421  004C22  0E93               	movlw	low _smsText
 22422  004C24  0100               	movlb	0	; () banked
 22423  004C26  6F8F               	movwf	Mdm_GetSmsData@MessageText& (0+255),b
 22424  004C28  0E04               	movlw	high _smsText
 22425  004C2A  6F90               	movwf	(Mdm_GetSmsData@MessageText+1)& (0+255),b
 22426  004C2C  EC93  F02B         	call	_Mdm_GetSmsData	;wreg free
 22427  004C30  06E8               	decf	wreg,f,c
 22428  004C32  A4D8               	btfss	status,2,c
 22429  004C34  D01D               	goto	l2588
 22430                           
 22431                           ;app.c: 122: {
 22432                           ;app.c: 123: Uart_WriteConstString(1,"AT+CMGD=1,0\r\n");
 22433  004C36  0E2F               	movlw	low STR_29
 22434  004C38  0100               	movlb	0	; () banked
 22435  004C3A  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 22436  004C3C  0EFF               	movlw	high STR_29
 22437  004C3E  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 22438  004C40  0E01               	movlw	1
 22439  004C42  EC48  F031         	call	_Uart_WriteConstString
 22440                           
 22441                           ;app.c: 124: currentState = parseCommand();
 22442  004C46  EC39  F018         	call	_parseCommand	;wreg free
 22443  004C4A  0100               	movlb	0	; () banked
 22444  004C4C  6F95               	movwf	detectCmd@currentState& (0+255),b
 22445                           
 22446                           ; BSR set to: 0
 22447                           ;app.c: 125: StringCopy(GetLastInteractionNumber(), receivedNumber, ((UINT8)(13)));
 22448  004C4E  EC22  F036         	call	_GetLastInteractionNumber	;wreg free
 22449  004C52  C07D  F085         	movff	?_GetLastInteractionNumber,StringCopy@SourceStr
 22450  004C56  C07E  F086         	movff	?_GetLastInteractionNumber+1,StringCopy@SourceStr+1
 22451  004C5A  0EB6               	movlw	low _receivedNumber
 22452  004C5C  0100               	movlb	0	; () banked
 22453  004C5E  6F87               	movwf	StringCopy@DestStr& (0+255),b
 22454  004C60  0E04               	movlw	high _receivedNumber
 22455  004C62  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 22456  004C64  0E00               	movlw	0
 22457  004C66  6F8A               	movwf	(StringCopy@Len+1)& (0+255),b
 22458  004C68  0E0D               	movlw	13
 22459  004C6A  6F89               	movwf	StringCopy@Len& (0+255),b
 22460  004C6C  EC60  F02C         	call	_StringCopy	;wreg free
 22461  004C70                     l2588:
 22462                           
 22463                           ;app.c: 126: }
 22464                           ;app.c: 127: if (Mdm_IsRinging())
 22465  004C70  EC33  F034         	call	_Mdm_IsRinging	;wreg free
 22466  004C74  0900               	iorlw	0
 22467  004C76  B4D8               	btfsc	status,2,c
 22468  004C78  D016               	goto	l2589
 22469                           
 22470                           ;app.c: 128: {
 22471                           ;app.c: 129: Mdm_HangPhoneCall();
 22472  004C7A  ECCD  F035         	call	_Mdm_HangPhoneCall	;wreg free
 22473                           
 22474                           ;app.c: 130: currentState = GATE_TRIGGER_CMD;
 22475  004C7E  0E04               	movlw	4
 22476  004C80  0100               	movlb	0	; () banked
 22477  004C82  6F95               	movwf	detectCmd@currentState& (0+255),b
 22478                           
 22479                           ; BSR set to: 0
 22480                           ;app.c: 131: StringCopy(GetCallerNumber(), receivedNumber, ((UINT8)(13)));
 22481  004C84  EC98  F032         	call	_GetCallerNumber	;wreg free
 22482  004C88  C083  F085         	movff	?_GetCallerNumber,StringCopy@SourceStr
 22483  004C8C  C084  F086         	movff	?_GetCallerNumber+1,StringCopy@SourceStr+1
 22484  004C90  0EB6               	movlw	low _receivedNumber
 22485  004C92  0100               	movlb	0	; () banked
 22486  004C94  6F87               	movwf	StringCopy@DestStr& (0+255),b
 22487  004C96  0E04               	movlw	high _receivedNumber
 22488  004C98  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 22489  004C9A  0E00               	movlw	0
 22490  004C9C  6F8A               	movwf	(StringCopy@Len+1)& (0+255),b
 22491  004C9E  0E0D               	movlw	13
 22492  004CA0  6F89               	movwf	StringCopy@Len& (0+255),b
 22493  004CA2  EC60  F02C         	call	_StringCopy	;wreg free
 22494  004CA6                     l2589:
 22495                           
 22496                           ;app.c: 132: }
 22497                           ;app.c: 133: return currentState;
 22498  004CA6  0100               	movlb	0	; () banked
 22499  004CA8  5195               	movf	detectCmd@currentState& (0+255),w,b
 22500  004CAA  0012               	return	
 22501  004CAC                     __end_of_detectCmd:
 22502                           	opt stack 0
 22503                           tosu	equ	0xFFF
 22504                           tosh	equ	0xFFE
 22505                           tosl	equ	0xFFD
 22506                           pclath	equ	0xFFA
 22507                           tblptru	equ	0xFF8
 22508                           tblptrh	equ	0xFF7
 22509                           tblptrl	equ	0xFF6
 22510                           tablat	equ	0xFF5
 22511                           prodh	equ	0xFF4
 22512                           prodl	equ	0xFF3
 22513                           intcon	equ	0xFF2
 22514                           intcon2	equ	0xFF1
 22515                           intcon3	equ	0xFF0
 22516                           indf0	equ	0xFEF
 22517                           postinc0	equ	0xFEE
 22518                           plusw0	equ	0xFEB
 22519                           fsr0h	equ	0xFEA
 22520                           fsr0l	equ	0xFE9
 22521                           wreg	equ	0xFE8
 22522                           indf1	equ	0xFE7
 22523                           postinc1	equ	0xFE6
 22524                           postdec1	equ	0xFE5
 22525                           fsr1h	equ	0xFE2
 22526                           fsr1l	equ	0xFE1
 22527                           indf2	equ	0xFDF
 22528                           postinc2	equ	0xFDE
 22529                           postdec2	equ	0xFDD
 22530                           plusw2	equ	0xFDB
 22531                           fsr2h	equ	0xFDA
 22532                           fsr2l	equ	0xFD9
 22533                           status	equ	0xFD8
 22534                           
 22535 ;; *************** function _parseCommand *****************
 22536 ;; Defined at:
 22537 ;;		line 74 in file "../Source/c/04_App/app.c"
 22538 ;; Parameters:    Size  Location     Type
 22539 ;;		None
 22540 ;; Auto vars:     Size  Location     Type
 22541 ;;  resetCmd        4   48[BANK0 ] const unsigned char [4]
 22542 ;;  deleteNumber    4   44[BANK0 ] const unsigned char [4]
 22543 ;;  addNumberCmd    4   40[BANK0 ] const unsigned char [4]
 22544 ;;  state           1   52[BANK0 ] enum E9014
 22545 ;; Return value:  Size  Location     Type
 22546 ;;                  1    wreg      enum E9014
 22547 ;; Registers used:
 22548 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22549 ;; Tracked objects:
 22550 ;;		On entry : 0/0
 22551 ;;		On exit  : 0/0
 22552 ;;		Unchanged: 0/0
 22553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22554 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22555 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22557 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22558 ;;Total ram usage:       13 bytes
 22559 ;; Hardware stack levels used:    1
 22560 ;; Hardware stack levels required when called:   12
 22561 ;; This function calls:
 22562 ;;		_StringCompare
 22563 ;;		_isNumberValid
 22564 ;; This function is called by:
 22565 ;;		_detectCmd
 22566 ;; This function uses a non-reentrant model
 22567 ;;
 22568                           
 22569                           	psect	text102
 22570  003072                     __ptext102:
 22571                           	opt stack 0
 22572  003072                     _parseCommand:
 22573                           	opt stack 14
 22574                           
 22575                           ;app.c: 76: const uint8_t addNumberCmd[] = {'A', 'D', 'D', ';'};
 22576                           
 22577                           ; BSR set to: 0
 22578                           ;incstack = 0
 22579  003072  0E2A               	movlw	low parseCommand@F9028
 22580  003074  6EF6               	movwf	tblptrl,c
 22581  003076                     	if	1	;There is more than 1 active tblptr byte
 22582  003076  0EFC               	movlw	high parseCommand@F9028
 22583  003078  6EF7               	movwf	tblptrh,c
 22584  00307A                     	endif
 22585  00307A                     	if	0	;There are less than 3 active tblptr bytes
 22586  00307A                     	endif
 22587  00307A  0009               	tblrd		*+
 22588  00307C  CFF5 F088          	movff	tablat,parseCommand@addNumberCmd
 22589  003080  0009               	tblrd		*+
 22590  003082  CFF5 F089          	movff	tablat,parseCommand@addNumberCmd+1
 22591  003086  0009               	tblrd		*+
 22592  003088  CFF5 F08A          	movff	tablat,parseCommand@addNumberCmd+2
 22593  00308C  000A               	tblrd		*-
 22594  00308E  CFF5 F08B          	movff	tablat,parseCommand@addNumberCmd+3
 22595                           
 22596                           ;app.c: 77: const uint8_t deleteNumberCmd[] = {'D', 'E', 'L', ';'};
 22597  003092  0E26               	movlw	low parseCommand@F9030
 22598  003094  6EF6               	movwf	tblptrl,c
 22599  003096                     	if	1	;There is more than 1 active tblptr byte
 22600  003096  0EFC               	movlw	high parseCommand@F9030
 22601  003098  6EF7               	movwf	tblptrh,c
 22602  00309A                     	endif
 22603  00309A                     	if	0	;There are less than 3 active tblptr bytes
 22604  00309A                     	endif
 22605  00309A  0009               	tblrd		*+
 22606  00309C  CFF5 F08C          	movff	tablat,parseCommand@deleteNumberCmd
 22607  0030A0  0009               	tblrd		*+
 22608  0030A2  CFF5 F08D          	movff	tablat,parseCommand@deleteNumberCmd+1
 22609  0030A6  0009               	tblrd		*+
 22610  0030A8  CFF5 F08E          	movff	tablat,parseCommand@deleteNumberCmd+2
 22611  0030AC  000A               	tblrd		*-
 22612  0030AE  CFF5 F08F          	movff	tablat,parseCommand@deleteNumberCmd+3
 22613                           
 22614                           ;app.c: 78: const uint8_t resetCmd[] = {'R', 'E', 'S', ';'};
 22615  0030B2  0E22               	movlw	low parseCommand@F9032
 22616  0030B4  6EF6               	movwf	tblptrl,c
 22617  0030B6                     	if	1	;There is more than 1 active tblptr byte
 22618  0030B6  0EFC               	movlw	high parseCommand@F9032
 22619  0030B8  6EF7               	movwf	tblptrh,c
 22620  0030BA                     	endif
 22621  0030BA                     	if	0	;There are less than 3 active tblptr bytes
 22622  0030BA                     	endif
 22623  0030BA  0009               	tblrd		*+
 22624  0030BC  CFF5 F090          	movff	tablat,parseCommand@resetCmd
 22625  0030C0  0009               	tblrd		*+
 22626  0030C2  CFF5 F091          	movff	tablat,parseCommand@resetCmd+1
 22627  0030C6  0009               	tblrd		*+
 22628  0030C8  CFF5 F092          	movff	tablat,parseCommand@resetCmd+2
 22629  0030CC  000A               	tblrd		*-
 22630  0030CE  CFF5 F093          	movff	tablat,parseCommand@resetCmd+3
 22631                           
 22632                           ;app.c: 79: gateFsmStates state = GATE_WAIT_EVENT;
 22633  0030D2  0E01               	movlw	1
 22634  0030D4  0100               	movlb	0	; () banked
 22635  0030D6  6F94               	movwf	parseCommand@state& (0+255),b
 22636                           
 22637                           ; BSR set to: 0
 22638                           ;app.c: 81: if (StringCompare(smsText, addNumberCmd, sizeof(addNumberCmd)))
 22639  0030D8  0E93               	movlw	low _smsText
 22640  0030DA  6F7D               	movwf	StringCompare@String1& (0+255),b
 22641  0030DC  0E04               	movlw	high _smsText
 22642  0030DE  6F7E               	movwf	(StringCompare@String1+1)& (0+255),b
 22643  0030E0  0E88               	movlw	low parseCommand@addNumberCmd
 22644  0030E2  6F7F               	movwf	StringCompare@String2& (0+255),b
 22645  0030E4  0E00               	movlw	high parseCommand@addNumberCmd
 22646  0030E6  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 22647  0030E8  0E00               	movlw	0
 22648  0030EA  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 22649  0030EC  0E04               	movlw	4
 22650  0030EE  6F81               	movwf	StringCompare@Len& (0+255),b
 22651  0030F0  ECF3  F02E         	call	_StringCompare	;wreg free
 22652  0030F4  0900               	iorlw	0
 22653  0030F6  B4D8               	btfsc	status,2,c
 22654  0030F8  D00E               	goto	l2574
 22655                           
 22656                           ;app.c: 82: {
 22657                           ;app.c: 83: if (!isNumberValid(smsText + 4))
 22658  0030FA  0E97               	movlw	low (_smsText+4)
 22659  0030FC  0100               	movlb	0	; () banked
 22660  0030FE  6F7D               	movwf	isNumberValid@phoneNumber& (0+255),b
 22661  003100  0E04               	movlw	high (_smsText+4)
 22662  003102  6F7E               	movwf	(isNumberValid@phoneNumber+1)& (0+255),b
 22663  003104  EC2D  F02C         	call	_isNumberValid	;wreg free
 22664  003108  0900               	iorlw	0
 22665  00310A  A4D8               	btfss	status,2,c
 22666  00310C  D002               	goto	l2575
 22667  00310E                     u14510:
 22668                           
 22669                           ;app.c: 84: {
 22670                           ;app.c: 85: state = GATE_WAIT_EVENT;
 22671  00310E  0E01               	movlw	1
 22672  003110  D033               	goto	L41
 22673  003112                     l2575:
 22674                           
 22675                           ;app.c: 87: else
 22676                           ;app.c: 88: {
 22677                           ;app.c: 89: state = GATE_ADD_CMD;
 22678                           
 22679                           ; BSR set to: 0
 22680  003112  0E02               	movlw	2
 22681  003114  D031               	goto	L41
 22682  003116                     l2574:
 22683                           
 22684                           ;app.c: 92: else if (StringCompare(smsText, deleteNumberCmd, sizeof(deleteNumberCmd)))
 22685                           
 22686                           ; BSR set to: 0
 22687  003116  0E93               	movlw	low _smsText
 22688  003118  0100               	movlb	0	; () banked
 22689  00311A  6F7D               	movwf	StringCompare@String1& (0+255),b
 22690  00311C  0E04               	movlw	high _smsText
 22691  00311E  6F7E               	movwf	(StringCompare@String1+1)& (0+255),b
 22692  003120  0E8C               	movlw	low parseCommand@deleteNumberCmd
 22693  003122  6F7F               	movwf	StringCompare@String2& (0+255),b
 22694  003124  0E00               	movlw	high parseCommand@deleteNumberCmd
 22695  003126  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 22696  003128  0E00               	movlw	0
 22697  00312A  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 22698  00312C  0E04               	movlw	4
 22699  00312E  6F81               	movwf	StringCompare@Len& (0+255),b
 22700  003130  ECF3  F02E         	call	_StringCompare	;wreg free
 22701  003134  0900               	iorlw	0
 22702  003136  B4D8               	btfsc	status,2,c
 22703  003138  D00C               	goto	l2578
 22704                           
 22705                           ;app.c: 93: {
 22706                           ;app.c: 94: if (!isNumberValid(smsText + 4))
 22707  00313A  0E97               	movlw	low (_smsText+4)
 22708  00313C  0100               	movlb	0	; () banked
 22709  00313E  6F7D               	movwf	isNumberValid@phoneNumber& (0+255),b
 22710  003140  0E04               	movlw	high (_smsText+4)
 22711  003142  6F7E               	movwf	(isNumberValid@phoneNumber+1)& (0+255),b
 22712  003144  EC2D  F02C         	call	_isNumberValid	;wreg free
 22713  003148  0900               	iorlw	0
 22714  00314A  B4D8               	btfsc	status,2,c
 22715  00314C  D7E0               	goto	u14510
 22716                           
 22717                           ;app.c: 98: else
 22718                           ;app.c: 99: {
 22719                           ;app.c: 100: state = GATE_DEL_CMD;
 22720                           
 22721                           ; BSR set to: 0
 22722                           
 22723                           ;app.c: 97: }
 22724                           
 22725                           ;app.c: 95: {
 22726                           ;app.c: 96: state = GATE_WAIT_EVENT;
 22727  00314E  0E03               	movlw	3
 22728  003150  D013               	goto	L41
 22729  003152                     l2578:
 22730                           
 22731                           ;app.c: 103: else if (StringCompare(smsText, resetCmd, sizeof(resetCmd)))
 22732                           
 22733                           ; BSR set to: 0
 22734  003152  0E93               	movlw	low _smsText
 22735  003154  0100               	movlb	0	; () banked
 22736  003156  6F7D               	movwf	StringCompare@String1& (0+255),b
 22737  003158  0E04               	movlw	high _smsText
 22738  00315A  6F7E               	movwf	(StringCompare@String1+1)& (0+255),b
 22739  00315C  0E90               	movlw	low parseCommand@resetCmd
 22740  00315E  6F7F               	movwf	StringCompare@String2& (0+255),b
 22741  003160  0E00               	movlw	high parseCommand@resetCmd
 22742  003162  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 22743  003164  0E00               	movlw	0
 22744  003166  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 22745  003168  0E04               	movlw	4
 22746  00316A  6F81               	movwf	StringCompare@Len& (0+255),b
 22747  00316C  ECF3  F02E         	call	_StringCompare	;wreg free
 22748  003170  0900               	iorlw	0
 22749  003172  B4D8               	btfsc	status,2,c
 22750  003174  D003               	goto	l2582
 22751                           
 22752                           ;app.c: 104: {
 22753                           ;app.c: 105: state = GATE_RESET;
 22754  003176  0E05               	movlw	5
 22755  003178                     L41:
 22756  003178  0100               	movlb	0	; () banked
 22757  00317A  6F94               	movwf	parseCommand@state& (0+255),b
 22758  00317C                     l2582:
 22759                           
 22760                           ;app.c: 110: }
 22761                           ;app.c: 111: return state;
 22762                           
 22763                           ; BSR set to: 0
 22764                           
 22765                           ; BSR set to: 0
 22766                           
 22767                           ; BSR set to: 0
 22768                           
 22769                           ;app.c: 107: else
 22770                           ;app.c: 108: {
 22771                           
 22772                           ; BSR set to: 0
 22773  00317C  0100               	movlb	0	; () banked
 22774  00317E  5194               	movf	parseCommand@state& (0+255),w,b
 22775  003180  0012               	return	
 22776  003182                     __end_of_parseCommand:
 22777                           	opt stack 0
 22778                           tosu	equ	0xFFF
 22779                           tosh	equ	0xFFE
 22780                           tosl	equ	0xFFD
 22781                           pclath	equ	0xFFA
 22782                           tblptru	equ	0xFF8
 22783                           tblptrh	equ	0xFF7
 22784                           tblptrl	equ	0xFF6
 22785                           tablat	equ	0xFF5
 22786                           prodh	equ	0xFF4
 22787                           prodl	equ	0xFF3
 22788                           intcon	equ	0xFF2
 22789                           intcon2	equ	0xFF1
 22790                           intcon3	equ	0xFF0
 22791                           indf0	equ	0xFEF
 22792                           postinc0	equ	0xFEE
 22793                           plusw0	equ	0xFEB
 22794                           fsr0h	equ	0xFEA
 22795                           fsr0l	equ	0xFE9
 22796                           wreg	equ	0xFE8
 22797                           indf1	equ	0xFE7
 22798                           postinc1	equ	0xFE6
 22799                           postdec1	equ	0xFE5
 22800                           fsr1h	equ	0xFE2
 22801                           fsr1l	equ	0xFE1
 22802                           indf2	equ	0xFDF
 22803                           postinc2	equ	0xFDE
 22804                           postdec2	equ	0xFDD
 22805                           plusw2	equ	0xFDB
 22806                           fsr2h	equ	0xFDA
 22807                           fsr2l	equ	0xFD9
 22808                           status	equ	0xFD8
 22809                           
 22810 ;; *************** function _Mdm_RequestSmsData *****************
 22811 ;; Defined at:
 22812 ;;		line 877 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 22813 ;; Parameters:    Size  Location     Type
 22814 ;;		None
 22815 ;; Auto vars:     Size  Location     Type
 22816 ;;		None
 22817 ;; Return value:  Size  Location     Type
 22818 ;;                  1    wreg      void 
 22819 ;; Registers used:
 22820 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 22821 ;; Tracked objects:
 22822 ;;		On entry : 0/0
 22823 ;;		On exit  : 0/0
 22824 ;;		Unchanged: 0/0
 22825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22826 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22827 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22829 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22830 ;;Total ram usage:        0 bytes
 22831 ;; Hardware stack levels used:    1
 22832 ;; Hardware stack levels required when called:   12
 22833 ;; This function calls:
 22834 ;;		_GenerateEvt
 22835 ;; This function is called by:
 22836 ;;		_detectCmd
 22837 ;; This function uses a non-reentrant model
 22838 ;;
 22839                           
 22840                           	psect	text103
 22841  006BDE                     __ptext103:
 22842                           	opt stack 0
 22843  006BDE                     _Mdm_RequestSmsData:
 22844                           	opt stack 14
 22845                           
 22846                           ;mdm_gsm_gprs.c: 880: GenerateEvt(&GetSmsText);
 22847                           
 22848                           ; BSR set to: 0
 22849                           ;incstack = 0
 22850  006BDE  0EDA               	movlw	low _GetSmsText
 22851  006BE0  0100               	movlb	0	; () banked
 22852  006BE2  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 22853  006BE4  0E00               	movlw	high _GetSmsText
 22854  006BE6  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 22855  006BE8  EC82  F035         	call	_GenerateEvt	;wreg free
 22856  006BEC  0012               	return		;funcret
 22857  006BEE                     __end_of_Mdm_RequestSmsData:
 22858                           	opt stack 0
 22859                           tosu	equ	0xFFF
 22860                           tosh	equ	0xFFE
 22861                           tosl	equ	0xFFD
 22862                           pclath	equ	0xFFA
 22863                           tblptru	equ	0xFF8
 22864                           tblptrh	equ	0xFF7
 22865                           tblptrl	equ	0xFF6
 22866                           tablat	equ	0xFF5
 22867                           prodh	equ	0xFF4
 22868                           prodl	equ	0xFF3
 22869                           intcon	equ	0xFF2
 22870                           intcon2	equ	0xFF1
 22871                           intcon3	equ	0xFF0
 22872                           indf0	equ	0xFEF
 22873                           postinc0	equ	0xFEE
 22874                           plusw0	equ	0xFEB
 22875                           fsr0h	equ	0xFEA
 22876                           fsr0l	equ	0xFE9
 22877                           wreg	equ	0xFE8
 22878                           indf1	equ	0xFE7
 22879                           postinc1	equ	0xFE6
 22880                           postdec1	equ	0xFE5
 22881                           fsr1h	equ	0xFE2
 22882                           fsr1l	equ	0xFE1
 22883                           indf2	equ	0xFDF
 22884                           postinc2	equ	0xFDE
 22885                           postdec2	equ	0xFDD
 22886                           plusw2	equ	0xFDB
 22887                           fsr2h	equ	0xFDA
 22888                           fsr2l	equ	0xFD9
 22889                           status	equ	0xFD8
 22890                           
 22891 ;; *************** function _Mdm_IsSmsReceived *****************
 22892 ;; Defined at:
 22893 ;;		line 941 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 22894 ;; Parameters:    Size  Location     Type
 22895 ;;		None
 22896 ;; Auto vars:     Size  Location     Type
 22897 ;;  Ret             1   33[BANK0 ] enum E8930
 22898 ;; Return value:  Size  Location     Type
 22899 ;;                  1    wreg      enum E8930
 22900 ;; Registers used:
 22901 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 22902 ;; Tracked objects:
 22903 ;;		On entry : 0/0
 22904 ;;		On exit  : 0/0
 22905 ;;		Unchanged: 0/0
 22906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22907 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22908 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22909 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22910 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22911 ;;Total ram usage:        1 bytes
 22912 ;; Hardware stack levels used:    1
 22913 ;; Hardware stack levels required when called:   12
 22914 ;; This function calls:
 22915 ;;		_ReceiveEvt
 22916 ;; This function is called by:
 22917 ;;		_detectCmd
 22918 ;; This function uses a non-reentrant model
 22919 ;;
 22920                           
 22921                           	psect	text104
 22922  006842                     __ptext104:
 22923                           	opt stack 0
 22924  006842                     _Mdm_IsSmsReceived:
 22925                           	opt stack 14
 22926                           
 22927                           ;mdm_gsm_gprs.c: 943: SmsRxStsType Ret = SmsNotReceived;
 22928                           
 22929                           ;incstack = 0
 22930  006842  0E00               	movlw	0
 22931  006844  0100               	movlb	0	; () banked
 22932  006846  6F81               	movwf	Mdm_IsSmsReceived@Ret& (0+255),b
 22933                           
 22934                           ; BSR set to: 0
 22935                           ;mdm_gsm_gprs.c: 946: if (ReceiveEvt(&SmsEvent))
 22936  006848  0EDB               	movlw	low _SmsEvent
 22937  00684A  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 22938  00684C  0E00               	movlw	high _SmsEvent
 22939  00684E  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 22940  006850  EC91  F033         	call	_ReceiveEvt	;wreg free
 22941  006854  0900               	iorlw	0
 22942  006856  B4D8               	btfsc	status,2,c
 22943  006858  D003               	goto	l1136
 22944                           
 22945                           ;mdm_gsm_gprs.c: 947: {
 22946                           ;mdm_gsm_gprs.c: 948: Ret = SmsReceived;
 22947  00685A  0E01               	movlw	1
 22948  00685C  0100               	movlb	0	; () banked
 22949  00685E  6F81               	movwf	Mdm_IsSmsReceived@Ret& (0+255),b
 22950  006860                     l1136:
 22951                           
 22952                           ;mdm_gsm_gprs.c: 949: }
 22953                           ;mdm_gsm_gprs.c: 951: return Ret;
 22954  006860  0100               	movlb	0	; () banked
 22955  006862  5181               	movf	Mdm_IsSmsReceived@Ret& (0+255),w,b
 22956  006864  0012               	return	
 22957  006866                     __end_of_Mdm_IsSmsReceived:
 22958                           	opt stack 0
 22959                           tosu	equ	0xFFF
 22960                           tosh	equ	0xFFE
 22961                           tosl	equ	0xFFD
 22962                           pclath	equ	0xFFA
 22963                           tblptru	equ	0xFF8
 22964                           tblptrh	equ	0xFF7
 22965                           tblptrl	equ	0xFF6
 22966                           tablat	equ	0xFF5
 22967                           prodh	equ	0xFF4
 22968                           prodl	equ	0xFF3
 22969                           intcon	equ	0xFF2
 22970                           intcon2	equ	0xFF1
 22971                           intcon3	equ	0xFF0
 22972                           indf0	equ	0xFEF
 22973                           postinc0	equ	0xFEE
 22974                           plusw0	equ	0xFEB
 22975                           fsr0h	equ	0xFEA
 22976                           fsr0l	equ	0xFE9
 22977                           wreg	equ	0xFE8
 22978                           indf1	equ	0xFE7
 22979                           postinc1	equ	0xFE6
 22980                           postdec1	equ	0xFE5
 22981                           fsr1h	equ	0xFE2
 22982                           fsr1l	equ	0xFE1
 22983                           indf2	equ	0xFDF
 22984                           postinc2	equ	0xFDE
 22985                           postdec2	equ	0xFDD
 22986                           plusw2	equ	0xFDB
 22987                           fsr2h	equ	0xFDA
 22988                           fsr2l	equ	0xFD9
 22989                           status	equ	0xFD8
 22990                           
 22991 ;; *************** function _Mdm_IsRinging *****************
 22992 ;; Defined at:
 22993 ;;		line 1024 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 22994 ;; Parameters:    Size  Location     Type
 22995 ;;		None
 22996 ;; Auto vars:     Size  Location     Type
 22997 ;;  Ret             1   33[BANK0 ] enum E8926
 22998 ;; Return value:  Size  Location     Type
 22999 ;;                  1    wreg      enum E8926
 23000 ;; Registers used:
 23001 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23002 ;; Tracked objects:
 23003 ;;		On entry : 0/0
 23004 ;;		On exit  : 0/0
 23005 ;;		Unchanged: 0/0
 23006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23007 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23008 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23010 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23011 ;;Total ram usage:        1 bytes
 23012 ;; Hardware stack levels used:    1
 23013 ;; Hardware stack levels required when called:   12
 23014 ;; This function calls:
 23015 ;;		_ReceiveEvt
 23016 ;; This function is called by:
 23017 ;;		_detectCmd
 23018 ;;		_getSetupCall
 23019 ;; This function uses a non-reentrant model
 23020 ;;
 23021                           
 23022                           	psect	text105
 23023  006866                     __ptext105:
 23024                           	opt stack 0
 23025  006866                     _Mdm_IsRinging:
 23026                           	opt stack 12
 23027                           
 23028                           ;mdm_gsm_gprs.c: 1026: RingStsType Ret = PhoneNotRinging;
 23029                           
 23030                           ; BSR set to: 0
 23031                           ;incstack = 0
 23032  006866  0E00               	movlw	0
 23033  006868  0100               	movlb	0	; () banked
 23034  00686A  6F81               	movwf	Mdm_IsRinging@Ret& (0+255),b
 23035                           
 23036                           ; BSR set to: 0
 23037                           ;mdm_gsm_gprs.c: 1029: if (ReceiveEvt(&RingEvent))
 23038  00686C  0EDD               	movlw	low _RingEvent
 23039  00686E  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 23040  006870  0E00               	movlw	high _RingEvent
 23041  006872  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 23042  006874  EC91  F033         	call	_ReceiveEvt	;wreg free
 23043  006878  0900               	iorlw	0
 23044  00687A  B4D8               	btfsc	status,2,c
 23045  00687C  D003               	goto	l1152
 23046                           
 23047                           ;mdm_gsm_gprs.c: 1030: {
 23048                           ;mdm_gsm_gprs.c: 1031: Ret = PhoneRinging;
 23049  00687E  0E01               	movlw	1
 23050  006880  0100               	movlb	0	; () banked
 23051  006882  6F81               	movwf	Mdm_IsRinging@Ret& (0+255),b
 23052  006884                     l1152:
 23053                           
 23054                           ;mdm_gsm_gprs.c: 1032: }
 23055                           ;mdm_gsm_gprs.c: 1034: return Ret;
 23056  006884  0100               	movlb	0	; () banked
 23057  006886  5181               	movf	Mdm_IsRinging@Ret& (0+255),w,b
 23058  006888  0012               	return	
 23059  00688A                     __end_of_Mdm_IsRinging:
 23060                           	opt stack 0
 23061                           tosu	equ	0xFFF
 23062                           tosh	equ	0xFFE
 23063                           tosl	equ	0xFFD
 23064                           pclath	equ	0xFFA
 23065                           tblptru	equ	0xFF8
 23066                           tblptrh	equ	0xFF7
 23067                           tblptrl	equ	0xFF6
 23068                           tablat	equ	0xFF5
 23069                           prodh	equ	0xFF4
 23070                           prodl	equ	0xFF3
 23071                           intcon	equ	0xFF2
 23072                           intcon2	equ	0xFF1
 23073                           intcon3	equ	0xFF0
 23074                           indf0	equ	0xFEF
 23075                           postinc0	equ	0xFEE
 23076                           plusw0	equ	0xFEB
 23077                           fsr0h	equ	0xFEA
 23078                           fsr0l	equ	0xFE9
 23079                           wreg	equ	0xFE8
 23080                           indf1	equ	0xFE7
 23081                           postinc1	equ	0xFE6
 23082                           postdec1	equ	0xFE5
 23083                           fsr1h	equ	0xFE2
 23084                           fsr1l	equ	0xFE1
 23085                           indf2	equ	0xFDF
 23086                           postinc2	equ	0xFDE
 23087                           postdec2	equ	0xFDD
 23088                           plusw2	equ	0xFDB
 23089                           fsr2h	equ	0xFDA
 23090                           fsr2l	equ	0xFD9
 23091                           status	equ	0xFD8
 23092                           
 23093 ;; *************** function _Mdm_HangPhoneCall *****************
 23094 ;; Defined at:
 23095 ;;		line 996 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 23096 ;; Parameters:    Size  Location     Type
 23097 ;;		None
 23098 ;; Auto vars:     Size  Location     Type
 23099 ;;		None
 23100 ;; Return value:  Size  Location     Type
 23101 ;;                  1    wreg      void 
 23102 ;; Registers used:
 23103 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 23104 ;; Tracked objects:
 23105 ;;		On entry : 0/0
 23106 ;;		On exit  : 0/0
 23107 ;;		Unchanged: 0/0
 23108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23109 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23110 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23112 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23113 ;;Total ram usage:        0 bytes
 23114 ;; Hardware stack levels used:    1
 23115 ;; Hardware stack levels required when called:   13
 23116 ;; This function calls:
 23117 ;;		_Uart_WriteConstString
 23118 ;; This function is called by:
 23119 ;;		_detectCmd
 23120 ;;		_getSetupCall
 23121 ;; This function uses a non-reentrant model
 23122 ;;
 23123                           
 23124                           	psect	text106
 23125  006B9A                     __ptext106:
 23126                           	opt stack 0
 23127  006B9A                     _Mdm_HangPhoneCall:
 23128                           	opt stack 11
 23129                           
 23130                           ;mdm_gsm_gprs.c: 999: Uart_WriteConstString(1, "ATH\r");
 23131                           
 23132                           ; BSR set to: 0
 23133                           ;incstack = 0
 23134  006B9A  0EF0               	movlw	low STR_6
 23135  006B9C  0100               	movlb	0	; () banked
 23136  006B9E  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 23137  006BA0  0EFF               	movlw	high STR_6
 23138  006BA2  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 23139  006BA4  0E01               	movlw	1
 23140  006BA6  EC48  F031         	call	_Uart_WriteConstString
 23141  006BAA  0012               	return		;funcret
 23142  006BAC                     __end_of_Mdm_HangPhoneCall:
 23143                           	opt stack 0
 23144                           tosu	equ	0xFFF
 23145                           tosh	equ	0xFFE
 23146                           tosl	equ	0xFFD
 23147                           pclath	equ	0xFFA
 23148                           tblptru	equ	0xFF8
 23149                           tblptrh	equ	0xFF7
 23150                           tblptrl	equ	0xFF6
 23151                           tablat	equ	0xFF5
 23152                           prodh	equ	0xFF4
 23153                           prodl	equ	0xFF3
 23154                           intcon	equ	0xFF2
 23155                           intcon2	equ	0xFF1
 23156                           intcon3	equ	0xFF0
 23157                           indf0	equ	0xFEF
 23158                           postinc0	equ	0xFEE
 23159                           plusw0	equ	0xFEB
 23160                           fsr0h	equ	0xFEA
 23161                           fsr0l	equ	0xFE9
 23162                           wreg	equ	0xFE8
 23163                           indf1	equ	0xFE7
 23164                           postinc1	equ	0xFE6
 23165                           postdec1	equ	0xFE5
 23166                           fsr1h	equ	0xFE2
 23167                           fsr1l	equ	0xFE1
 23168                           indf2	equ	0xFDF
 23169                           postinc2	equ	0xFDE
 23170                           postdec2	equ	0xFDD
 23171                           plusw2	equ	0xFDB
 23172                           fsr2h	equ	0xFDA
 23173                           fsr2l	equ	0xFD9
 23174                           status	equ	0xFD8
 23175                           
 23176 ;; *************** function _Mdm_GetSmsData *****************
 23177 ;; Defined at:
 23178 ;;		line 892 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 23179 ;; Parameters:    Size  Location     Type
 23180 ;;  MessageText     2   47[BANK0 ] PTR unsigned char 
 23181 ;;		 -> smsText(20), 
 23182 ;; Auto vars:     Size  Location     Type
 23183 ;;  GetSmsStatus    1   49[BANK0 ] enum E8922
 23184 ;; Return value:  Size  Location     Type
 23185 ;;                  1    wreg      enum E8922
 23186 ;; Registers used:
 23187 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 23188 ;; Tracked objects:
 23189 ;;		On entry : 0/0
 23190 ;;		On exit  : 0/0
 23191 ;;		Unchanged: 0/0
 23192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23193 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23194 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23195 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23196 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23197 ;;Total ram usage:        3 bytes
 23198 ;; Hardware stack levels used:    1
 23199 ;; Hardware stack levels required when called:   12
 23200 ;; This function calls:
 23201 ;;		_ReceiveEvt
 23202 ;;		_StringCopy
 23203 ;; This function is called by:
 23204 ;;		_detectCmd
 23205 ;; This function uses a non-reentrant model
 23206 ;;
 23207                           
 23208                           	psect	text107
 23209  005726                     __ptext107:
 23210                           	opt stack 0
 23211  005726                     _Mdm_GetSmsData:
 23212                           	opt stack 14
 23213                           
 23214                           ;mdm_gsm_gprs.c: 894: GetSmsStatusType GetSmsStatus = SmsDataNotReady;
 23215                           
 23216                           ;incstack = 0
 23217  005726  0E00               	movlw	0
 23218  005728  0100               	movlb	0	; () banked
 23219  00572A  6F91               	movwf	Mdm_GetSmsData@GetSmsStatus& (0+255),b
 23220                           
 23221                           ; BSR set to: 0
 23222                           ;mdm_gsm_gprs.c: 897: if (ReceiveEvt(&SmsTxtReady))
 23223  00572C  0ED9               	movlw	low _SmsTxtReady
 23224  00572E  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 23225  005730  0E00               	movlw	high _SmsTxtReady
 23226  005732  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 23227  005734  EC91  F033         	call	_ReceiveEvt	;wreg free
 23228  005738  0900               	iorlw	0
 23229  00573A  B4D8               	btfsc	status,2,c
 23230  00573C  D025               	goto	l1129
 23231                           
 23232                           ;mdm_gsm_gprs.c: 898: {
 23233                           ;mdm_gsm_gprs.c: 900: StringCopy(Mdm_SmsRx.MessageBuffer, MessageText, Mdm_SmsRx.TextLen
      +                           + 1);
 23234  00573E  0E50               	movlw	low (_Mdm_SmsRx+80)
 23235  005740  0100               	movlb	0	; () banked
 23236  005742  6F85               	movwf	StringCopy@SourceStr& (0+255),b
 23237  005744  0E07               	movlw	high (_Mdm_SmsRx+80)
 23238  005746  6F86               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 23239  005748  C08F  F087         	movff	Mdm_GetSmsData@MessageText,StringCopy@DestStr
 23240  00574C  C090  F088         	movff	Mdm_GetSmsData@MessageText+1,StringCopy@DestStr+1
 23241  005750  0E01               	movlw	1
 23242  005752  0107               	movlb	7	; () banked
 23243  005754  2565               	addwf	(_Mdm_SmsRx+101)& (0+255),w,b
 23244  005756  0100               	movlb	0	; () banked
 23245  005758  6F89               	movwf	StringCopy@Len& (0+255),b
 23246  00575A  6B8A               	clrf	(StringCopy@Len+1)& (0+255),b
 23247  00575C  0E00               	movlw	0
 23248  00575E  238A               	addwfc	(StringCopy@Len+1)& (0+255),f,b
 23249  005760  EC60  F02C         	call	_StringCopy	;wreg free
 23250                           
 23251                           ;mdm_gsm_gprs.c: 901: StringCopy(Mdm_SmsRx.HeaderBuffer + 21, callerNumber, ((UINT8)(13)
      +                          ));
 23252  005764  0E15               	movlw	low (_Mdm_SmsRx+21)
 23253  005766  0100               	movlb	0	; () banked
 23254  005768  6F85               	movwf	StringCopy@SourceStr& (0+255),b
 23255  00576A  0E07               	movlw	high (_Mdm_SmsRx+21)
 23256  00576C  6F86               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 23257  00576E  0EC3               	movlw	low _callerNumber
 23258  005770  6F87               	movwf	StringCopy@DestStr& (0+255),b
 23259  005772  0E04               	movlw	high _callerNumber
 23260  005774  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 23261  005776  0E00               	movlw	0
 23262  005778  6F8A               	movwf	(StringCopy@Len+1)& (0+255),b
 23263  00577A  0E0D               	movlw	13
 23264  00577C  6F89               	movwf	StringCopy@Len& (0+255),b
 23265  00577E  EC60  F02C         	call	_StringCopy	;wreg free
 23266                           
 23267                           ;mdm_gsm_gprs.c: 903: GetSmsStatus = SmsDataReady;
 23268  005782  0E01               	movlw	1
 23269  005784  0100               	movlb	0	; () banked
 23270  005786  6F91               	movwf	Mdm_GetSmsData@GetSmsStatus& (0+255),b
 23271  005788                     l1129:
 23272                           
 23273                           ;mdm_gsm_gprs.c: 904: }
 23274                           ;mdm_gsm_gprs.c: 907: return GetSmsStatus;
 23275                           
 23276                           ; BSR set to: 0
 23277  005788  0100               	movlb	0	; () banked
 23278  00578A  5191               	movf	Mdm_GetSmsData@GetSmsStatus& (0+255),w,b
 23279  00578C  0012               	return	
 23280  00578E                     __end_of_Mdm_GetSmsData:
 23281                           	opt stack 0
 23282                           tosu	equ	0xFFF
 23283                           tosh	equ	0xFFE
 23284                           tosl	equ	0xFFD
 23285                           pclath	equ	0xFFA
 23286                           tblptru	equ	0xFF8
 23287                           tblptrh	equ	0xFF7
 23288                           tblptrl	equ	0xFF6
 23289                           tablat	equ	0xFF5
 23290                           prodh	equ	0xFF4
 23291                           prodl	equ	0xFF3
 23292                           intcon	equ	0xFF2
 23293                           intcon2	equ	0xFF1
 23294                           intcon3	equ	0xFF0
 23295                           indf0	equ	0xFEF
 23296                           postinc0	equ	0xFEE
 23297                           plusw0	equ	0xFEB
 23298                           fsr0h	equ	0xFEA
 23299                           fsr0l	equ	0xFE9
 23300                           wreg	equ	0xFE8
 23301                           indf1	equ	0xFE7
 23302                           postinc1	equ	0xFE6
 23303                           postdec1	equ	0xFE5
 23304                           fsr1h	equ	0xFE2
 23305                           fsr1l	equ	0xFE1
 23306                           indf2	equ	0xFDF
 23307                           postinc2	equ	0xFDE
 23308                           postdec2	equ	0xFDD
 23309                           plusw2	equ	0xFDB
 23310                           fsr2h	equ	0xFDA
 23311                           fsr2l	equ	0xFD9
 23312                           status	equ	0xFD8
 23313                           
 23314 ;; *************** function _GetLastInteractionNumber *****************
 23315 ;; Defined at:
 23316 ;;		line 1046 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 23317 ;; Parameters:    Size  Location     Type
 23318 ;;		None
 23319 ;; Auto vars:     Size  Location     Type
 23320 ;;		None
 23321 ;; Return value:  Size  Location     Type
 23322 ;;                  2   29[BANK0 ] PTR unsigned char 
 23323 ;; Registers used:
 23324 ;;		wreg, status,2, status,0
 23325 ;; Tracked objects:
 23326 ;;		On entry : 0/0
 23327 ;;		On exit  : 0/0
 23328 ;;		Unchanged: 0/0
 23329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23330 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23331 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23333 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23334 ;;Total ram usage:        2 bytes
 23335 ;; Hardware stack levels used:    1
 23336 ;; Hardware stack levels required when called:   11
 23337 ;; This function calls:
 23338 ;;		Nothing
 23339 ;; This function is called by:
 23340 ;;		_detectCmd
 23341 ;; This function uses a non-reentrant model
 23342 ;;
 23343                           
 23344                           	psect	text108
 23345  006C44                     __ptext108:
 23346                           	opt stack 0
 23347  006C44                     _GetLastInteractionNumber:
 23348                           	opt stack 15
 23349                           
 23350                           ;mdm_gsm_gprs.c: 1048: return callerNumber;
 23351                           
 23352                           ; BSR set to: 0
 23353                           ;incstack = 0
 23354  006C44  0EC3               	movlw	low _callerNumber
 23355  006C46  0100               	movlb	0	; () banked
 23356  006C48  6F7D               	movwf	?_GetLastInteractionNumber& (0+255),b
 23357  006C4A  0E04               	movlw	high _callerNumber
 23358  006C4C  6F7E               	movwf	(?_GetLastInteractionNumber+1)& (0+255),b
 23359  006C4E  0012               	return	
 23360  006C50                     __end_of_GetLastInteractionNumber:
 23361                           	opt stack 0
 23362                           tosu	equ	0xFFF
 23363                           tosh	equ	0xFFE
 23364                           tosl	equ	0xFFD
 23365                           pclath	equ	0xFFA
 23366                           tblptru	equ	0xFF8
 23367                           tblptrh	equ	0xFF7
 23368                           tblptrl	equ	0xFF6
 23369                           tablat	equ	0xFF5
 23370                           prodh	equ	0xFF4
 23371                           prodl	equ	0xFF3
 23372                           intcon	equ	0xFF2
 23373                           intcon2	equ	0xFF1
 23374                           intcon3	equ	0xFF0
 23375                           indf0	equ	0xFEF
 23376                           postinc0	equ	0xFEE
 23377                           plusw0	equ	0xFEB
 23378                           fsr0h	equ	0xFEA
 23379                           fsr0l	equ	0xFE9
 23380                           wreg	equ	0xFE8
 23381                           indf1	equ	0xFE7
 23382                           postinc1	equ	0xFE6
 23383                           postdec1	equ	0xFE5
 23384                           fsr1h	equ	0xFE2
 23385                           fsr1l	equ	0xFE1
 23386                           indf2	equ	0xFDF
 23387                           postinc2	equ	0xFDE
 23388                           postdec2	equ	0xFDD
 23389                           plusw2	equ	0xFDB
 23390                           fsr2h	equ	0xFDA
 23391                           fsr2l	equ	0xFD9
 23392                           status	equ	0xFD8
 23393                           
 23394 ;; *************** function _GetCallerNumber *****************
 23395 ;; Defined at:
 23396 ;;		line 1037 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 23397 ;; Parameters:    Size  Location     Type
 23398 ;;		None
 23399 ;; Auto vars:     Size  Location     Type
 23400 ;;		None
 23401 ;; Return value:  Size  Location     Type
 23402 ;;                  2   35[BANK0 ] PTR unsigned char 
 23403 ;; Registers used:
 23404 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23405 ;; Tracked objects:
 23406 ;;		On entry : 0/0
 23407 ;;		On exit  : 0/0
 23408 ;;		Unchanged: 0/0
 23409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23410 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23411 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23413 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23414 ;;Total ram usage:        2 bytes
 23415 ;; Hardware stack levels used:    1
 23416 ;; Hardware stack levels required when called:   12
 23417 ;; This function calls:
 23418 ;;		_ClearBuffer
 23419 ;;		_ReceiveEvt
 23420 ;; This function is called by:
 23421 ;;		_detectCmd
 23422 ;;		_initFsm
 23423 ;; This function uses a non-reentrant model
 23424 ;;
 23425                           
 23426                           	psect	text109
 23427  006530                     __ptext109:
 23428                           	opt stack 0
 23429  006530                     _GetCallerNumber:
 23430                           	opt stack 14
 23431                           
 23432                           ;mdm_gsm_gprs.c: 1039: if (!ReceiveEvt(&ClipEvent))
 23433                           
 23434                           ; BSR set to: 0
 23435                           ;incstack = 0
 23436  006530  0EDC               	movlw	low _ClipEvent
 23437  006532  0100               	movlb	0	; () banked
 23438  006534  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 23439  006536  0E00               	movlw	high _ClipEvent
 23440  006538  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 23441  00653A  EC91  F033         	call	_ReceiveEvt	;wreg free
 23442  00653E  0900               	iorlw	0
 23443  006540  A4D8               	btfss	status,2,c
 23444  006542  D00B               	goto	l1156
 23445                           
 23446                           ;mdm_gsm_gprs.c: 1040: {
 23447                           ;mdm_gsm_gprs.c: 1041: ClearBuffer(callerNumber, ((UINT8)(13)));
 23448  006544  0EC3               	movlw	low _callerNumber
 23449  006546  0100               	movlb	0	; () banked
 23450  006548  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 23451  00654A  0E04               	movlw	high _callerNumber
 23452  00654C  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 23453  00654E  0E00               	movlw	0
 23454  006550  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 23455  006552  0E0D               	movlw	13
 23456  006554  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 23457  006556  ECB3  F032         	call	_ClearBuffer	;wreg free
 23458  00655A                     l1156:
 23459                           
 23460                           ;mdm_gsm_gprs.c: 1042: }
 23461                           ;mdm_gsm_gprs.c: 1043: return callerNumber;
 23462  00655A  0EC3               	movlw	low _callerNumber
 23463  00655C  0100               	movlb	0	; () banked
 23464  00655E  6F83               	movwf	?_GetCallerNumber& (0+255),b
 23465  006560  0E04               	movlw	high _callerNumber
 23466  006562  6F84               	movwf	(?_GetCallerNumber+1)& (0+255),b
 23467  006564  0012               	return	
 23468  006566                     __end_of_GetCallerNumber:
 23469                           	opt stack 0
 23470                           tosu	equ	0xFFF
 23471                           tosh	equ	0xFFE
 23472                           tosl	equ	0xFFD
 23473                           pclath	equ	0xFFA
 23474                           tblptru	equ	0xFF8
 23475                           tblptrh	equ	0xFF7
 23476                           tblptrl	equ	0xFF6
 23477                           tablat	equ	0xFF5
 23478                           prodh	equ	0xFF4
 23479                           prodl	equ	0xFF3
 23480                           intcon	equ	0xFF2
 23481                           intcon2	equ	0xFF1
 23482                           intcon3	equ	0xFF0
 23483                           indf0	equ	0xFEF
 23484                           postinc0	equ	0xFEE
 23485                           plusw0	equ	0xFEB
 23486                           fsr0h	equ	0xFEA
 23487                           fsr0l	equ	0xFE9
 23488                           wreg	equ	0xFE8
 23489                           indf1	equ	0xFE7
 23490                           postinc1	equ	0xFE6
 23491                           postdec1	equ	0xFE5
 23492                           fsr1h	equ	0xFE2
 23493                           fsr1l	equ	0xFE1
 23494                           indf2	equ	0xFDF
 23495                           postinc2	equ	0xFDE
 23496                           postdec2	equ	0xFDD
 23497                           plusw2	equ	0xFDB
 23498                           fsr2h	equ	0xFDA
 23499                           fsr2l	equ	0xFD9
 23500                           status	equ	0xFD8
 23501                           
 23502 ;; *************** function _delCmdFsm *****************
 23503 ;; Defined at:
 23504 ;;		line 71 in file "../Source/c/04_App/app_delCmd.c"
 23505 ;; Parameters:    Size  Location     Type
 23506 ;;  receivedNumb    2    5[BANK1 ] PTR unsigned char 
 23507 ;;		 -> receivedNumber(13), 
 23508 ;;  smsText         2    7[BANK1 ] PTR unsigned char 
 23509 ;;		 -> smsText(20), 
 23510 ;;  isCmdSuccess    2    9[BANK1 ] PTR unsigned char 
 23511 ;;		 -> MyApp_Task@isCmdSuccessfull(1), 
 23512 ;; Auto vars:     Size  Location     Type
 23513 ;;  emptyNumber    13   11[BANK1 ] const unsigned char [13]
 23514 ;;  searchNumber    1   27[BANK1 ] unsigned char 
 23515 ;;  numberInMemo    1   26[BANK1 ] unsigned char 
 23516 ;;  masterOpResu    1   25[BANK1 ] unsigned char 
 23517 ;;  isComplete      1   24[BANK1 ] unsigned char 
 23518 ;; Return value:  Size  Location     Type
 23519 ;;                  1    wreg      unsigned char 
 23520 ;; Registers used:
 23521 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23522 ;; Tracked objects:
 23523 ;;		On entry : 0/0
 23524 ;;		On exit  : 0/0
 23525 ;;		Unchanged: 0/0
 23526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23527 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23528 ;;      Locals:         0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23530 ;;      Totals:         0       0      23       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23531 ;;Total ram usage:       23 bytes
 23532 ;; Hardware stack levels used:    1
 23533 ;; Hardware stack levels required when called:   18
 23534 ;; This function calls:
 23535 ;;		_isMasterNumber
 23536 ;;		_isNumberInMemory
 23537 ;;		_saveNumberInMemory
 23538 ;; This function is called by:
 23539 ;;		_MyApp_Task
 23540 ;; This function uses a non-reentrant model
 23541 ;;
 23542                           
 23543                           	psect	text110
 23544  003A7C                     __ptext110:
 23545                           	opt stack 0
 23546  003A7C                     _delCmdFsm:
 23547                           	opt stack 9
 23548                           
 23549                           ;app_delCmd.c: 73: const uint8_t emptyNumber[((UINT8)(13))] = {0};
 23550                           
 23551                           ; BSR set to: 0
 23552                           ;incstack = 0
 23553  003A7C  0E0F               	movlw	low delCmdFsm@F9015
 23554  003A7E  6EF6               	movwf	tblptrl,c
 23555  003A80                     	if	1	;There is more than 1 active tblptr byte
 23556  003A80  0EFC               	movlw	high delCmdFsm@F9015
 23557  003A82  6EF7               	movwf	tblptrh,c
 23558  003A84                     	endif
 23559  003A84                     	if	0	;There are less than 3 active tblptr bytes
 23560  003A84                     	endif
 23561  003A84  EE21  F00B         	lfsr	2,delCmdFsm@emptyNumber
 23562  003A88  0E0C               	movlw	12
 23563  003A8A                     u16210:
 23564  003A8A  0009               	tblrd		*+
 23565  003A8C  CFF5 FFDE          	movff	tablat,postinc2
 23566  003A90  06E8               	decf	wreg,f,c
 23567  003A92  E2FB               	bc	u16210
 23568                           
 23569                           ;app_delCmd.c: 74: static delFsmStates currentState = DEL_FSM_CHECK_MASTER;
 23570                           ;app_delCmd.c: 75: bool isComplete = 0;
 23571  003A94  0E00               	movlw	0
 23572  003A96  0101               	movlb	1	; () banked
 23573  003A98  6F18               	movwf	delCmdFsm@isComplete& (0+255),b
 23574                           
 23575                           ; BSR set to: 1
 23576                           ;app_delCmd.c: 76: uint8_t numberInMemory = 0;
 23577  003A9A  0E00               	movlw	0
 23578  003A9C  6F1A               	movwf	delCmdFsm@numberInMemory& (0+255),b
 23579                           
 23580                           ; BSR set to: 1
 23581                           ;app_delCmd.c: 77: uint8_t masterOpResult = OP_FAILED;
 23582  003A9E  0E01               	movlw	1
 23583  003AA0  6F19               	movwf	delCmdFsm@masterOpResult& (0+255),b
 23584                           
 23585                           ; BSR set to: 1
 23586                           ;app_delCmd.c: 78: uint8_t searchNumber = OP_FAILED;
 23587  003AA2  0E01               	movlw	1
 23588  003AA4  6F1B               	movwf	delCmdFsm@searchNumber& (0+255),b
 23589                           
 23590                           ;app_delCmd.c: 80: switch (currentState)
 23591  003AA6  D04A               	goto	l2866
 23592  003AA8                     
 23593                           ; BSR set to: 1
 23594                           ;app_delCmd.c: 83: *isCmdSuccessfull = 0;
 23595                           
 23596                           ; BSR set to: 1
 23597  003AA8  C109  FFD9         	movff	delCmdFsm@isCmdSuccessfull,fsr2l
 23598  003AAC  C10A  FFDA         	movff	delCmdFsm@isCmdSuccessfull+1,fsr2h
 23599  003AB0  0E00               	movlw	0
 23600  003AB2  6EDF               	movwf	indf2,c
 23601                           
 23602                           ; BSR set to: 1
 23603                           ;app_delCmd.c: 84: masterOpResult = isMasterNumber(receivedNumber);
 23604  003AB4  C105  F100         	movff	delCmdFsm@receivedNumber,isMasterNumber@phoneNumber
 23605  003AB8  C106  F101         	movff	delCmdFsm@receivedNumber+1,isMasterNumber@phoneNumber+1
 23606  003ABC  ECF0  F02A         	call	_isMasterNumber	;wreg free
 23607  003AC0  0101               	movlb	1	; () banked
 23608  003AC2  6F19               	movwf	delCmdFsm@masterOpResult& (0+255),b
 23609                           
 23610                           ; BSR set to: 1
 23611                           ;app_delCmd.c: 85: if (masterOpResult == OP_SUCCESS)
 23612  003AC4  5119               	movf	delCmdFsm@masterOpResult& (0+255),w,b
 23613  003AC6  A4D8               	btfss	status,2,c
 23614  003AC8  D002               	goto	l2868
 23615                           
 23616                           ; BSR set to: 1
 23617                           ;app_delCmd.c: 86: {
 23618                           ;app_delCmd.c: 87: currentState = DEL_FSM_REMOVE_NUMBER;
 23619  003ACA  0E01               	movlw	1
 23620  003ACC  D002               	goto	L42
 23621  003ACE                     l2868:
 23622                           
 23623                           ; BSR set to: 1
 23624                           ;app_delCmd.c: 89: else if (masterOpResult == OP_FAILED)
 23625                           
 23626                           ; BSR set to: 1
 23627  003ACE  0519               	decf	delCmdFsm@masterOpResult& (0+255),w,b
 23628  003AD0  D02D               	goto	L99
 23629  003AD2                     L42:
 23630  003AD2  6FD4               	movwf	delCmdFsm@currentState& (0+255),b
 23631                           
 23632                           ; BSR set to: 1
 23633                           ;app_delCmd.c: 92: }
 23634                           ;app_delCmd.c: 93: break;
 23635                           
 23636                           ; BSR set to: 1
 23637  003AD4  D03D               	goto	l2871
 23638  003AD6                     
 23639                           ; BSR set to: 1
 23640                           ;app_delCmd.c: 96: searchNumber = isNumberInMemory(smsText + 4, &numberInMemory);
 23641                           
 23642                           ; BSR set to: 1
 23643  003AD6  0E04               	movlw	4
 23644  003AD8  2507               	addwf	delCmdFsm@smsText& (0+255),w,b
 23645  003ADA  6F00               	movwf	isNumberInMemory@phoneNumber& (0+255),b
 23646  003ADC  0E00               	movlw	0
 23647  003ADE  2108               	addwfc	(delCmdFsm@smsText+1)& (0+255),w,b
 23648  003AE0  6F01               	movwf	(isNumberInMemory@phoneNumber+1)& (0+255),b
 23649  003AE2  0E1A               	movlw	low delCmdFsm@numberInMemory
 23650  003AE4  6F02               	movwf	isNumberInMemory@positionInMemory& (0+255),b
 23651  003AE6  0E01               	movlw	high delCmdFsm@numberInMemory
 23652  003AE8  6F03               	movwf	(isNumberInMemory@positionInMemory+1)& (0+255),b
 23653  003AEA  EC63  F022         	call	_isNumberInMemory	;wreg free
 23654  003AEE  0101               	movlb	1	; () banked
 23655  003AF0  6F1B               	movwf	delCmdFsm@searchNumber& (0+255),b
 23656                           
 23657                           ; BSR set to: 1
 23658                           ;app_delCmd.c: 97: if (searchNumber == SEARCH_FSM_FOUND)
 23659  003AF2  0E03               	movlw	3
 23660  003AF4  191B               	xorwf	delCmdFsm@searchNumber& (0+255),w,b
 23661  003AF6  A4D8               	btfss	status,2,c
 23662  003AF8  D013               	goto	l2873
 23663                           
 23664                           ; BSR set to: 1
 23665                           ;app_delCmd.c: 98: {
 23666                           ;app_delCmd.c: 99: saveNumberInMemory(numberInMemory, emptyNumber);
 23667  003AFA  0E0B               	movlw	low delCmdFsm@emptyNumber
 23668  003AFC  0100               	movlb	0	; () banked
 23669  003AFE  6F96               	movwf	saveNumberInMemory@phoneNumber& (0+255),b
 23670  003B00  0E01               	movlw	high delCmdFsm@emptyNumber
 23671  003B02  6F97               	movwf	(saveNumberInMemory@phoneNumber+1)& (0+255),b
 23672  003B04  0101               	movlb	1	; () banked
 23673  003B06  511A               	movf	delCmdFsm@numberInMemory& (0+255),w,b
 23674  003B08  EC5D  F035         	call	_saveNumberInMemory
 23675                           
 23676                           ;app_delCmd.c: 100: currentState = DEL_FSM_COMPLETE;
 23677  003B0C  0E02               	movlw	2
 23678  003B0E  0101               	movlb	1	; () banked
 23679  003B10  6FD4               	movwf	delCmdFsm@currentState& (0+255),b
 23680                           
 23681                           ; BSR set to: 1
 23682                           ;app_delCmd.c: 101: *isCmdSuccessfull = 1;
 23683  003B12  C109  FFD9         	movff	delCmdFsm@isCmdSuccessfull,fsr2l
 23684  003B16  C10A  FFDA         	movff	delCmdFsm@isCmdSuccessfull+1,fsr2h
 23685  003B1A  0E01               	movlw	1
 23686  003B1C  6EDF               	movwf	indf2,c
 23687                           
 23688                           ;app_delCmd.c: 102: }
 23689  003B1E  D018               	goto	l2871
 23690  003B20                     l2873:
 23691                           
 23692                           ; BSR set to: 1
 23693                           ;app_delCmd.c: 103: else if (searchNumber == SEARCH_FSM_NOT_FOUND || searchNumber == SEA
      +                          RCH_FSM_ERROR)
 23694                           
 23695                           ; BSR set to: 1
 23696  003B20  0E04               	movlw	4
 23697  003B22  191B               	xorwf	delCmdFsm@searchNumber& (0+255),w,b
 23698  003B24  B4D8               	btfsc	status,2,c
 23699  003B26  D004               	goto	u16260
 23700                           
 23701                           ; BSR set to: 1
 23702  003B28  0E02               	movlw	2
 23703  003B2A  191B               	xorwf	delCmdFsm@searchNumber& (0+255),w,b
 23704  003B2C                     L99:
 23705  003B2C  A4D8               	btfss	status,2,c
 23706  003B2E  D010               	goto	l2871
 23707  003B30                     u16260:
 23708                           
 23709                           ; BSR set to: 1
 23710                           ;app_delCmd.c: 104: {
 23711                           ;app_delCmd.c: 105: currentState = DEL_FSM_COMPLETE;
 23712                           
 23713                           ; BSR set to: 1
 23714  003B30  0E02               	movlw	2
 23715  003B32  D7CF               	goto	L42
 23716  003B34                     
 23717                           ; BSR set to: 1
 23718                           ;app_delCmd.c: 110: isComplete = 1;
 23719                           
 23720                           ; BSR set to: 1
 23721  003B34  0E01               	movlw	1
 23722  003B36  6F18               	movwf	delCmdFsm@isComplete& (0+255),b
 23723                           
 23724                           ;app_delCmd.c: 111: currentState = DEL_FSM_CHECK_MASTER;
 23725  003B38  0E00               	movlw	0
 23726  003B3A  D7CB               	goto	L42
 23727  003B3C                     l2866:
 23728                           
 23729                           ; BSR set to: 1
 23730                           
 23731                           ; BSR set to: 1
 23732  003B3C  51D4               	movf	delCmdFsm@currentState& (0+255),w,b
 23733                           
 23734                           ; Switch size 1, requested type "space"
 23735                           ; Number of cases is 3, Range of values is 0 to 2
 23736                           ; switch strategies available:
 23737                           ; Name         Instructions Cycles
 23738                           ; simple_byte           10     6 (average)
 23739                           ;	Chosen strategy is simple_byte
 23740  003B3E  0A00               	xorlw	0	; case 0
 23741  003B40  B4D8               	btfsc	status,2,c
 23742  003B42  D7B2               	goto	l2867
 23743  003B44  0A01               	xorlw	1	; case 1
 23744  003B46  B4D8               	btfsc	status,2,c
 23745  003B48  D7C6               	goto	l2872
 23746  003B4A  0A03               	xorlw	3	; case 2
 23747  003B4C  B4D8               	btfsc	status,2,c
 23748  003B4E  D7F2               	goto	l2878
 23749  003B50                     l2871:
 23750                           
 23751                           ; BSR set to: 1
 23752                           ;app_delCmd.c: 117: return isComplete;
 23753                           
 23754                           ; BSR set to: 1
 23755  003B50  5118               	movf	delCmdFsm@isComplete& (0+255),w,b
 23756  003B52  0012               	return	
 23757  003B54                     __end_of_delCmdFsm:
 23758                           	opt stack 0
 23759                           tosu	equ	0xFFF
 23760                           tosh	equ	0xFFE
 23761                           tosl	equ	0xFFD
 23762                           pclath	equ	0xFFA
 23763                           tblptru	equ	0xFF8
 23764                           tblptrh	equ	0xFF7
 23765                           tblptrl	equ	0xFF6
 23766                           tablat	equ	0xFF5
 23767                           prodh	equ	0xFF4
 23768                           prodl	equ	0xFF3
 23769                           intcon	equ	0xFF2
 23770                           intcon2	equ	0xFF1
 23771                           intcon3	equ	0xFF0
 23772                           indf0	equ	0xFEF
 23773                           postinc0	equ	0xFEE
 23774                           plusw0	equ	0xFEB
 23775                           fsr0h	equ	0xFEA
 23776                           fsr0l	equ	0xFE9
 23777                           wreg	equ	0xFE8
 23778                           indf1	equ	0xFE7
 23779                           postinc1	equ	0xFE6
 23780                           postdec1	equ	0xFE5
 23781                           fsr1h	equ	0xFE2
 23782                           fsr1l	equ	0xFE1
 23783                           indf2	equ	0xFDF
 23784                           postinc2	equ	0xFDE
 23785                           postdec2	equ	0xFDD
 23786                           plusw2	equ	0xFDB
 23787                           fsr2h	equ	0xFDA
 23788                           fsr2l	equ	0xFD9
 23789                           status	equ	0xFD8
 23790                           
 23791 ;; *************** function _cmdVisualEffet *****************
 23792 ;; Defined at:
 23793 ;;		line 98 in file "../Source/c/04_App/app_utils.c"
 23794 ;; Parameters:    Size  Location     Type
 23795 ;;  isCmdSuccess    1    wreg     unsigned char 
 23796 ;; Auto vars:     Size  Location     Type
 23797 ;;  isCmdSuccess    1   51[BANK0 ] unsigned char 
 23798 ;;  seconds         1   52[BANK0 ] unsigned char 
 23799 ;; Return value:  Size  Location     Type
 23800 ;;                  1    wreg      void 
 23801 ;; Registers used:
 23802 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23803 ;; Tracked objects:
 23804 ;;		On entry : 0/0
 23805 ;;		On exit  : 0/0
 23806 ;;		Unchanged: 0/0
 23807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23808 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23809 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23810 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23811 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23812 ;;Total ram usage:        2 bytes
 23813 ;; Hardware stack levels used:    1
 23814 ;; Hardware stack levels required when called:   13
 23815 ;; This function calls:
 23816 ;;		_Led_SetLedStatus
 23817 ;;		_secondsAppTimer
 23818 ;; This function is called by:
 23819 ;;		_MyApp_Task
 23820 ;; This function uses a non-reentrant model
 23821 ;;
 23822                           
 23823                           	psect	text111
 23824  0060F2                     __ptext111:
 23825                           	opt stack 0
 23826  0060F2                     _cmdVisualEffet:
 23827                           	opt stack 14
 23828                           
 23829                           ; BSR set to: 1
 23830                           ;incstack = 0
 23831                           ;cmdVisualEffet@isCmdSuccessfull stored from wreg
 23832  0060F2  0100               	movlb	0	; () banked
 23833  0060F4  6F93               	movwf	cmdVisualEffet@isCmdSuccessfull& (0+255),b
 23834                           
 23835                           ;app_utils.c: 100: uint8_t seconds = 7;
 23836  0060F6  0E07               	movlw	7
 23837  0060F8  0100               	movlb	0	; () banked
 23838  0060FA  6F94               	movwf	cmdVisualEffet@seconds& (0+255),b
 23839                           
 23840                           ; BSR set to: 0
 23841                           ;app_utils.c: 101: if (isCmdSuccessfull)
 23842  0060FC  5193               	movf	cmdVisualEffet@isCmdSuccessfull& (0+255),w,b
 23843  0060FE  B4D8               	btfsc	status,2,c
 23844  006100  D002               	goto	l2749
 23845                           
 23846                           ; BSR set to: 0
 23847                           ;app_utils.c: 102: {
 23848                           ;app_utils.c: 103: seconds = 3;
 23849  006102  0E03               	movlw	3
 23850  006104  6F94               	movwf	cmdVisualEffet@seconds& (0+255),b
 23851  006106                     l2749:
 23852                           
 23853                           ; BSR set to: 0
 23854                           ;app_utils.c: 104: }
 23855                           ;app_utils.c: 105: if (secondsAppTimer(seconds, &blinkInSeconds, 0))
 23856                           
 23857                           ; BSR set to: 0
 23858  006106  0EF7               	movlw	low _blinkInSeconds
 23859  006108  6F8A               	movwf	secondsAppTimer@counter& (0+255),b
 23860  00610A  0E03               	movlw	high _blinkInSeconds
 23861  00610C  6F8B               	movwf	(secondsAppTimer@counter+1)& (0+255),b
 23862  00610E  0E00               	movlw	0
 23863  006110  6F8C               	movwf	secondsAppTimer@isCyclic& (0+255),b
 23864  006112  5194               	movf	cmdVisualEffet@seconds& (0+255),w,b
 23865  006114  EC18  F025         	call	_secondsAppTimer
 23866  006118  0900               	iorlw	0
 23867  00611A  B4D8               	btfsc	status,2,c
 23868  00611C  D007               	goto	l2750
 23869                           
 23870                           ;app_utils.c: 106: {
 23871                           ;app_utils.c: 107: Led_SetLedStatus(2u, LED_STS_OFF);
 23872  00611E  0E00               	movlw	0
 23873  006120  0100               	movlb	0	; () banked
 23874  006122  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 23875  006124  0E02               	movlw	2
 23876  006126  EC62  F033         	call	_Led_SetLedStatus
 23877                           
 23878                           ;app_utils.c: 108: }
 23879  00612A  0012               	return	
 23880  00612C                     l2750:
 23881                           
 23882                           ;app_utils.c: 109: else
 23883                           ;app_utils.c: 110: {
 23884                           ;app_utils.c: 111: Led_SetLedStatus(2u, LED_STS_BLINK);
 23885  00612C  0E03               	movlw	3
 23886  00612E  0100               	movlb	0	; () banked
 23887  006130  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 23888  006132  0E02               	movlw	2
 23889  006134  EC62  F033         	call	_Led_SetLedStatus
 23890  006138  0012               	return	
 23891  00613A                     __end_of_cmdVisualEffet:
 23892                           	opt stack 0
 23893                           tosu	equ	0xFFF
 23894                           tosh	equ	0xFFE
 23895                           tosl	equ	0xFFD
 23896                           pclath	equ	0xFFA
 23897                           tblptru	equ	0xFF8
 23898                           tblptrh	equ	0xFF7
 23899                           tblptrl	equ	0xFF6
 23900                           tablat	equ	0xFF5
 23901                           prodh	equ	0xFF4
 23902                           prodl	equ	0xFF3
 23903                           intcon	equ	0xFF2
 23904                           intcon2	equ	0xFF1
 23905                           intcon3	equ	0xFF0
 23906                           indf0	equ	0xFEF
 23907                           postinc0	equ	0xFEE
 23908                           plusw0	equ	0xFEB
 23909                           fsr0h	equ	0xFEA
 23910                           fsr0l	equ	0xFE9
 23911                           wreg	equ	0xFE8
 23912                           indf1	equ	0xFE7
 23913                           postinc1	equ	0xFE6
 23914                           postdec1	equ	0xFE5
 23915                           fsr1h	equ	0xFE2
 23916                           fsr1l	equ	0xFE1
 23917                           indf2	equ	0xFDF
 23918                           postinc2	equ	0xFDE
 23919                           postdec2	equ	0xFDD
 23920                           plusw2	equ	0xFDB
 23921                           fsr2h	equ	0xFDA
 23922                           fsr2l	equ	0xFD9
 23923                           status	equ	0xFD8
 23924                           
 23925 ;; *************** function _secondsAppTimer *****************
 23926 ;; Defined at:
 23927 ;;		line 69 in file "../Source/c/04_App/app_utils.c"
 23928 ;; Parameters:    Size  Location     Type
 23929 ;;  seconds         1    wreg     unsigned char 
 23930 ;;  counter         2   42[BANK0 ] PTR unsigned int 
 23931 ;;		 -> blinkInSeconds(2), setupCallTicks(2), initGprsModem@modemCounter(2), RAM(3775), 
 23932 ;;  isCyclic        1   44[BANK0 ] unsigned char 
 23933 ;; Auto vars:     Size  Location     Type
 23934 ;;  seconds         1   47[BANK0 ] unsigned char 
 23935 ;;  destinationT    2   49[BANK0 ] unsigned int 
 23936 ;;  isExpired       1   48[BANK0 ] unsigned char 
 23937 ;; Return value:  Size  Location     Type
 23938 ;;                  1    wreg      unsigned char 
 23939 ;; Registers used:
 23940 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23941 ;; Tracked objects:
 23942 ;;		On entry : 0/0
 23943 ;;		On exit  : 0/0
 23944 ;;		Unchanged: 0/0
 23945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23946 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23947 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23948 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23949 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23950 ;;Total ram usage:        9 bytes
 23951 ;; Hardware stack levels used:    1
 23952 ;; Hardware stack levels required when called:   12
 23953 ;; This function calls:
 23954 ;;		___lwdiv
 23955 ;;		___wmul
 23956 ;; This function is called by:
 23957 ;;		_initGprsModem
 23958 ;;		_waitSetupCall
 23959 ;;		_cmdVisualEffet
 23960 ;;		_triggerCmdFsm
 23961 ;; This function uses a non-reentrant model
 23962 ;;
 23963                           
 23964                           	psect	text112
 23965  004A30                     __ptext112:
 23966                           	opt stack 0
 23967  004A30                     _secondsAppTimer:
 23968                           	opt stack 14
 23969                           
 23970                           ;incstack = 0
 23971                           ;secondsAppTimer@seconds stored from wreg
 23972  004A30  0100               	movlb	0	; () banked
 23973  004A32  6F8F               	movwf	secondsAppTimer@seconds& (0+255),b
 23974                           
 23975                           ;app_utils.c: 71: bool isExpired = 1;
 23976  004A34  0E01               	movlw	1
 23977  004A36  0100               	movlb	0	; () banked
 23978  004A38  6F90               	movwf	secondsAppTimer@isExpired& (0+255),b
 23979                           
 23980                           ; BSR set to: 0
 23981                           ;app_utils.c: 72: uint16_t destinationTicks = (uint16_t) (seconds * 1000) / ((UINT16)(10
      +                          0));
 23982  004A3A  C08F  F07D         	movff	secondsAppTimer@seconds,___wmul@multiplier
 23983  004A3E  6B7E               	clrf	(___wmul@multiplier+1)& (0+255),b
 23984  004A40  0E03               	movlw	3
 23985  004A42  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 23986  004A44  0EE8               	movlw	232
 23987  004A46  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 23988  004A48  ECE8  F033         	call	___wmul	;wreg free
 23989  004A4C  C07D  F083         	movff	?___wmul,___lwdiv@dividend
 23990  004A50  C07E  F084         	movff	?___wmul+1,___lwdiv@dividend+1
 23991  004A54  0E00               	movlw	0
 23992  004A56  0100               	movlb	0	; () banked
 23993  004A58  6F86               	movwf	(___lwdiv@divisor+1)& (0+255),b
 23994  004A5A  0E64               	movlw	100
 23995  004A5C  6F85               	movwf	___lwdiv@divisor& (0+255),b
 23996  004A5E  ECA0  F02E         	call	___lwdiv	;wreg free
 23997  004A62  C083  F091         	movff	?___lwdiv,secondsAppTimer@destinationTicks
 23998  004A66  C084  F092         	movff	?___lwdiv+1,secondsAppTimer@destinationTicks+1
 23999                           
 24000                           ;app_utils.c: 74: if (*counter < destinationTicks)
 24001  004A6A  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 24002  004A6E  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 24003  004A72  0100               	movlb	0	; () banked
 24004  004A74  5191               	movf	secondsAppTimer@destinationTicks& (0+255),w,b
 24005  004A76  5CDE               	subwf	postinc2,w,c
 24006  004A78  5192               	movf	(secondsAppTimer@destinationTicks+1)& (0+255),w,b
 24007  004A7A  58DE               	subwfb	postinc2,w,c
 24008  004A7C  B0D8               	btfsc	status,0,c
 24009  004A7E  D009               	goto	l2739
 24010                           
 24011                           ; BSR set to: 0
 24012                           ;app_utils.c: 75: {
 24013                           ;app_utils.c: 76: *counter += 1;
 24014  004A80  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 24015  004A84  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 24016  004A88  2ADE               	incf	postinc2,f,c
 24017  004A8A  0E00               	movlw	0
 24018  004A8C  22DD               	addwfc	postdec2,f,c
 24019                           
 24020                           ; BSR set to: 0
 24021                           ;app_utils.c: 77: isExpired = 0;
 24022  004A8E  0E00               	movlw	0
 24023  004A90  6F90               	movwf	secondsAppTimer@isExpired& (0+255),b
 24024  004A92                     l2739:
 24025                           
 24026                           ; BSR set to: 0
 24027                           ;app_utils.c: 78: }
 24028                           ;app_utils.c: 79: if (*counter == destinationTicks)
 24029                           
 24030                           ; BSR set to: 0
 24031  004A92  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 24032  004A96  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 24033  004A9A  5191               	movf	secondsAppTimer@destinationTicks& (0+255),w,b
 24034  004A9C  18DE               	xorwf	postinc2,w,c
 24035  004A9E  E117               	bnz	l14307
 24036  004AA0  5192               	movf	(secondsAppTimer@destinationTicks+1)& (0+255),w,b
 24037  004AA2  18DE               	xorwf	postinc2,w,c
 24038  004AA4  A4D8               	btfss	status,2,c
 24039  004AA6  D013               	goto	l2742
 24040                           
 24041                           ; BSR set to: 0
 24042                           ;app_utils.c: 80: {
 24043                           ;app_utils.c: 81: if (isCyclic)
 24044  004AA8  518C               	movf	secondsAppTimer@isCyclic& (0+255),w,b
 24045  004AAA  B4D8               	btfsc	status,2,c
 24046  004AAC  D008               	goto	l2741
 24047                           
 24048                           ; BSR set to: 0
 24049                           ;app_utils.c: 82: {
 24050                           ;app_utils.c: 83: *counter = 0;
 24051  004AAE  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 24052  004AB2  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 24053  004AB6  0E00               	movlw	0
 24054  004AB8  6EDE               	movwf	postinc2,c
 24055  004ABA  0E00               	movlw	0
 24056  004ABC  D007               	goto	L43
 24057  004ABE                     l2741:
 24058                           
 24059                           ; BSR set to: 0
 24060                           ;app_utils.c: 85: else
 24061                           ;app_utils.c: 86: {
 24062                           ;app_utils.c: 87: *counter = 0xFFFF;
 24063                           
 24064                           ; BSR set to: 0
 24065  004ABE  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 24066  004AC2  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 24067  004AC6  0EFF               	movlw	255
 24068  004AC8  6EDE               	movwf	postinc2,c
 24069  004ACA  0EFF               	movlw	255
 24070  004ACC                     L43:
 24071  004ACC  6EDD               	movwf	postdec2,c
 24072  004ACE                     l2742:
 24073  004ACE                     l14307:
 24074                           
 24075                           ; BSR set to: 0
 24076                           ;app_utils.c: 88: }
 24077                           ;app_utils.c: 89: }
 24078                           ;app_utils.c: 90: return isExpired;
 24079  004ACE  5190               	movf	secondsAppTimer@isExpired& (0+255),w,b
 24080  004AD0  0012               	return	
 24081  004AD2                     __end_of_secondsAppTimer:
 24082                           	opt stack 0
 24083                           tosu	equ	0xFFF
 24084                           tosh	equ	0xFFE
 24085                           tosl	equ	0xFFD
 24086                           pclath	equ	0xFFA
 24087                           tblptru	equ	0xFF8
 24088                           tblptrh	equ	0xFF7
 24089                           tblptrl	equ	0xFF6
 24090                           tablat	equ	0xFF5
 24091                           prodh	equ	0xFF4
 24092                           prodl	equ	0xFF3
 24093                           intcon	equ	0xFF2
 24094                           intcon2	equ	0xFF1
 24095                           intcon3	equ	0xFF0
 24096                           indf0	equ	0xFEF
 24097                           postinc0	equ	0xFEE
 24098                           plusw0	equ	0xFEB
 24099                           fsr0h	equ	0xFEA
 24100                           fsr0l	equ	0xFE9
 24101                           wreg	equ	0xFE8
 24102                           indf1	equ	0xFE7
 24103                           postinc1	equ	0xFE6
 24104                           postdec1	equ	0xFE5
 24105                           fsr1h	equ	0xFE2
 24106                           fsr1l	equ	0xFE1
 24107                           indf2	equ	0xFDF
 24108                           postinc2	equ	0xFDE
 24109                           postdec2	equ	0xFDD
 24110                           plusw2	equ	0xFDB
 24111                           fsr2h	equ	0xFDA
 24112                           fsr2l	equ	0xFD9
 24113                           status	equ	0xFD8
 24114                           
 24115 ;; *************** function _addCmdFsm *****************
 24116 ;; Defined at:
 24117 ;;		line 72 in file "../Source/c/04_App/app_addCmd.c"
 24118 ;; Parameters:    Size  Location     Type
 24119 ;;  receivedNumb    2    5[BANK1 ] PTR unsigned char 
 24120 ;;		 -> receivedNumber(13), 
 24121 ;;  smsText         2    7[BANK1 ] PTR unsigned char 
 24122 ;;		 -> smsText(20), 
 24123 ;;  isCmdSuccess    2    9[BANK1 ] PTR unsigned char 
 24124 ;;		 -> MyApp_Task@isCmdSuccessfull(1), 
 24125 ;; Auto vars:     Size  Location     Type
 24126 ;;  searchNumber    1   14[BANK1 ] unsigned char 
 24127 ;;  numberInMemo    1   13[BANK1 ] unsigned char 
 24128 ;;  masterOpResu    1   12[BANK1 ] unsigned char 
 24129 ;;  isComplete      1   11[BANK1 ] unsigned char 
 24130 ;; Return value:  Size  Location     Type
 24131 ;;                  1    wreg      unsigned char 
 24132 ;; Registers used:
 24133 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24134 ;; Tracked objects:
 24135 ;;		On entry : 0/0
 24136 ;;		On exit  : 0/0
 24137 ;;		Unchanged: 0/0
 24138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24139 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24140 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24141 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24142 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24143 ;;Total ram usage:       10 bytes
 24144 ;; Hardware stack levels used:    1
 24145 ;; Hardware stack levels required when called:   18
 24146 ;; This function calls:
 24147 ;;		_findEmptySpot
 24148 ;;		_isMasterNumber
 24149 ;;		_isNumberInMemory
 24150 ;;		_saveNumberInMemory
 24151 ;; This function is called by:
 24152 ;;		_MyApp_Task
 24153 ;; This function uses a non-reentrant model
 24154 ;;
 24155                           
 24156                           	psect	text113
 24157  00336E                     __ptext113:
 24158                           	opt stack 0
 24159  00336E                     _addCmdFsm:
 24160                           	opt stack 9
 24161                           
 24162                           ;app_addCmd.c: 74: static addFsmStates currentState = ADD_FSM_CHECK_MASTER;
 24163                           ;app_addCmd.c: 75: bool isComplete = 0;
 24164                           
 24165                           ; BSR set to: 0
 24166                           ;incstack = 0
 24167  00336E  0E00               	movlw	0
 24168  003370  0101               	movlb	1	; () banked
 24169  003372  6F0B               	movwf	addCmdFsm@isComplete& (0+255),b
 24170                           
 24171                           ;app_addCmd.c: 76: uint8_t numberInMemory = 0;
 24172  003374  0E00               	movlw	0
 24173  003376  6F0D               	movwf	addCmdFsm@numberInMemory& (0+255),b
 24174                           
 24175                           ;app_addCmd.c: 77: uint8_t masterOpResult = OP_FAILED;
 24176  003378  0E01               	movlw	1
 24177  00337A  6F0C               	movwf	addCmdFsm@masterOpResult& (0+255),b
 24178                           
 24179                           ;app_addCmd.c: 78: uint8_t searchNumber = OP_FAILED;
 24180  00337C  0E01               	movlw	1
 24181  00337E  6F0E               	movwf	addCmdFsm@searchNumber& (0+255),b
 24182                           
 24183                           ;app_addCmd.c: 80: switch (currentState)
 24184  003380  D05E               	goto	l2827
 24185  003382                     
 24186                           ; BSR set to: 1
 24187                           ;app_addCmd.c: 83: *isCmdSuccessfull = 0;
 24188                           
 24189                           ; BSR set to: 1
 24190  003382  C109  FFD9         	movff	addCmdFsm@isCmdSuccessfull,fsr2l
 24191  003386  C10A  FFDA         	movff	addCmdFsm@isCmdSuccessfull+1,fsr2h
 24192  00338A  0E00               	movlw	0
 24193  00338C  6EDF               	movwf	indf2,c
 24194                           
 24195                           ; BSR set to: 1
 24196                           ;app_addCmd.c: 84: masterOpResult = isMasterNumber(receivedNumber);
 24197  00338E  C105  F100         	movff	addCmdFsm@receivedNumber,isMasterNumber@phoneNumber
 24198  003392  C106  F101         	movff	addCmdFsm@receivedNumber+1,isMasterNumber@phoneNumber+1
 24199  003396  ECF0  F02A         	call	_isMasterNumber	;wreg free
 24200  00339A  0101               	movlb	1	; () banked
 24201  00339C  6F0C               	movwf	addCmdFsm@masterOpResult& (0+255),b
 24202                           
 24203                           ; BSR set to: 1
 24204                           ;app_addCmd.c: 85: if (masterOpResult == OP_SUCCESS)
 24205  00339E  510C               	movf	addCmdFsm@masterOpResult& (0+255),w,b
 24206  0033A0  A4D8               	btfss	status,2,c
 24207  0033A2  D002               	goto	l2829
 24208                           
 24209                           ; BSR set to: 1
 24210                           ;app_addCmd.c: 86: {
 24211                           ;app_addCmd.c: 87: currentState = ADD_FSM_CHECK_DUPLICATED;
 24212  0033A4  0E01               	movlw	1
 24213  0033A6  D01F               	goto	L46
 24214  0033A8                     l2829:
 24215                           
 24216                           ; BSR set to: 1
 24217                           ;app_addCmd.c: 89: else if (masterOpResult == OP_FAILED)
 24218                           
 24219                           ; BSR set to: 1
 24220  0033A8  050C               	decf	addCmdFsm@masterOpResult& (0+255),w,b
 24221  0033AA                     L47:
 24222  0033AA  A4D8               	btfss	status,2,c
 24223  0033AC  D055               	goto	l2832
 24224  0033AE  D040               	goto	u16200
 24225  0033B0                     
 24226                           ; BSR set to: 1
 24227                           ;app_addCmd.c: 96: searchNumber = isNumberInMemory(smsText + 4, &numberInMemory);
 24228                           
 24229                           ; BSR set to: 1
 24230  0033B0  0E04               	movlw	4
 24231  0033B2  2507               	addwf	addCmdFsm@smsText& (0+255),w,b
 24232  0033B4  6F00               	movwf	isNumberInMemory@phoneNumber& (0+255),b
 24233  0033B6  0E00               	movlw	0
 24234  0033B8  2108               	addwfc	(addCmdFsm@smsText+1)& (0+255),w,b
 24235  0033BA  6F01               	movwf	(isNumberInMemory@phoneNumber+1)& (0+255),b
 24236  0033BC  0E0D               	movlw	low addCmdFsm@numberInMemory
 24237  0033BE  6F02               	movwf	isNumberInMemory@positionInMemory& (0+255),b
 24238  0033C0  0E01               	movlw	high addCmdFsm@numberInMemory
 24239  0033C2  6F03               	movwf	(isNumberInMemory@positionInMemory+1)& (0+255),b
 24240  0033C4  EC63  F022         	call	_isNumberInMemory	;wreg free
 24241  0033C8  0101               	movlb	1	; () banked
 24242  0033CA  6F0E               	movwf	addCmdFsm@searchNumber& (0+255),b
 24243                           
 24244                           ; BSR set to: 1
 24245                           ;app_addCmd.c: 97: if (searchNumber == SEARCH_FSM_NOT_FOUND)
 24246  0033CC  0E04               	movlw	4
 24247  0033CE  190E               	xorwf	addCmdFsm@searchNumber& (0+255),w,b
 24248  0033D0  A4D8               	btfss	status,2,c
 24249  0033D2  D002               	goto	l2834
 24250                           
 24251                           ; BSR set to: 1
 24252                           ;app_addCmd.c: 98: {
 24253                           ;app_addCmd.c: 99: currentState = ADD_FSM_SAVE_NEW;
 24254  0033D4  0E02               	movlw	2
 24255  0033D6  D007               	goto	L46
 24256  0033D8                     l2834:
 24257                           
 24258                           ; BSR set to: 1
 24259                           ;app_addCmd.c: 101: else if (searchNumber == SEARCH_FSM_FOUND || searchNumber == SEARCH_
      +                          FSM_ERROR)
 24260                           
 24261                           ; BSR set to: 1
 24262  0033D8  0E03               	movlw	3
 24263  0033DA  190E               	xorwf	addCmdFsm@searchNumber& (0+255),w,b
 24264  0033DC  B4D8               	btfsc	status,2,c
 24265  0033DE  D028               	goto	u16200
 24266                           
 24267                           ; BSR set to: 1
 24268  0033E0  0E02               	movlw	2
 24269  0033E2  190E               	xorwf	addCmdFsm@searchNumber& (0+255),w,b
 24270  0033E4  D7E2               	goto	L47
 24271  0033E6                     L46:
 24272  0033E6  6FD5               	movwf	addCmdFsm@currentState& (0+255),b
 24273                           
 24274                           ; BSR set to: 1
 24275                           ;app_addCmd.c: 104: }
 24276                           ;app_addCmd.c: 105: break;
 24277                           
 24278                           ; BSR set to: 1
 24279  0033E8  D037               	goto	l2832
 24280  0033EA                     
 24281                           ; BSR set to: 1
 24282                           ;app_addCmd.c: 108: searchNumber = findEmptySpot(&numberInMemory);
 24283                           
 24284                           ; BSR set to: 1
 24285  0033EA  0E0D               	movlw	low addCmdFsm@numberInMemory
 24286  0033EC  6F00               	movwf	findEmptySpot@positionInMemory& (0+255),b
 24287  0033EE  0E01               	movlw	high addCmdFsm@numberInMemory
 24288  0033F0  6F01               	movwf	(findEmptySpot@positionInMemory+1)& (0+255),b
 24289  0033F2  EC38  F027         	call	_findEmptySpot	;wreg free
 24290  0033F6  0101               	movlb	1	; () banked
 24291  0033F8  6F0E               	movwf	addCmdFsm@searchNumber& (0+255),b
 24292                           
 24293                           ; BSR set to: 1
 24294                           ;app_addCmd.c: 109: if (searchNumber == SEARCH_FSM_NOT_FOUND)
 24295  0033FA  0E04               	movlw	4
 24296  0033FC  190E               	xorwf	addCmdFsm@searchNumber& (0+255),w,b
 24297  0033FE  A4D8               	btfss	status,2,c
 24298  003400  D7EB               	goto	l2834
 24299                           
 24300                           ; BSR set to: 1
 24301                           ;app_addCmd.c: 110: {
 24302                           ;app_addCmd.c: 111: saveNumberInMemory(numberInMemory, smsText + 4);
 24303  003402  0E04               	movlw	4
 24304  003404  2507               	addwf	addCmdFsm@smsText& (0+255),w,b
 24305  003406  0100               	movlb	0	; () banked
 24306  003408  6F96               	movwf	saveNumberInMemory@phoneNumber& (0+255),b
 24307  00340A  0E00               	movlw	0
 24308  00340C  0101               	movlb	1	; () banked
 24309  00340E  2108               	addwfc	(addCmdFsm@smsText+1)& (0+255),w,b
 24310  003410  0100               	movlb	0	; () banked
 24311  003412  6F97               	movwf	(saveNumberInMemory@phoneNumber+1)& (0+255),b
 24312  003414  0101               	movlb	1	; () banked
 24313  003416  510D               	movf	addCmdFsm@numberInMemory& (0+255),w,b
 24314  003418  EC5D  F035         	call	_saveNumberInMemory
 24315                           
 24316                           ;app_addCmd.c: 112: currentState = ADD_FSM_COMPLETE;
 24317  00341C  0E03               	movlw	3
 24318  00341E  0101               	movlb	1	; () banked
 24319  003420  6FD5               	movwf	addCmdFsm@currentState& (0+255),b
 24320                           
 24321                           ; BSR set to: 1
 24322                           ;app_addCmd.c: 113: *isCmdSuccessfull = 1;
 24323  003422  C109  FFD9         	movff	addCmdFsm@isCmdSuccessfull,fsr2l
 24324  003426  C10A  FFDA         	movff	addCmdFsm@isCmdSuccessfull+1,fsr2h
 24325  00342A  0E01               	movlw	1
 24326  00342C  6EDF               	movwf	indf2,c
 24327                           
 24328                           ;app_addCmd.c: 114: }
 24329  00342E  D014               	goto	l2832
 24330  003430                     u16200:
 24331                           
 24332                           ; BSR set to: 1
 24333                           ;app_addCmd.c: 116: {
 24334                           ;app_addCmd.c: 117: currentState = ADD_FSM_COMPLETE;
 24335                           
 24336                           ; BSR set to: 1
 24337  003430  0E03               	movlw	3
 24338  003432  D7D9               	goto	L46
 24339  003434                     
 24340                           ; BSR set to: 1
 24341                           ;app_addCmd.c: 122: currentState = ADD_FSM_CHECK_MASTER;
 24342                           
 24343                           ; BSR set to: 1
 24344  003434  0E00               	movlw	0
 24345  003436  6FD5               	movwf	addCmdFsm@currentState& (0+255),b
 24346                           
 24347                           ;app_addCmd.c: 123: isComplete = 1;
 24348  003438  0E01               	movlw	1
 24349  00343A  6F0B               	movwf	addCmdFsm@isComplete& (0+255),b
 24350                           
 24351                           ; BSR set to: 1
 24352                           ;app_addCmd.c: 128: }
 24353                           
 24354                           ; BSR set to: 1
 24355                           ;app_addCmd.c: 127: break;
 24356                           
 24357                           ;app_addCmd.c: 126: default:
 24358                           
 24359                           ;app_addCmd.c: 124: break;
 24360  00343C  D00D               	goto	l2832
 24361  00343E                     l2827:
 24362                           
 24363                           ; BSR set to: 1
 24364                           
 24365                           ; BSR set to: 1
 24366  00343E  51D5               	movf	addCmdFsm@currentState& (0+255),w,b
 24367                           
 24368                           ; Switch size 1, requested type "space"
 24369                           ; Number of cases is 4, Range of values is 0 to 3
 24370                           ; switch strategies available:
 24371                           ; Name         Instructions Cycles
 24372                           ; simple_byte           13     7 (average)
 24373                           ;	Chosen strategy is simple_byte
 24374  003440  0A00               	xorlw	0	; case 0
 24375  003442  B4D8               	btfsc	status,2,c
 24376  003444  D79E               	goto	l2828
 24377  003446  0A01               	xorlw	1	; case 1
 24378  003448  B4D8               	btfsc	status,2,c
 24379  00344A  D7B2               	goto	l2833
 24380  00344C  0A03               	xorlw	3	; case 2
 24381  00344E  B4D8               	btfsc	status,2,c
 24382  003450  D7CC               	goto	l2839
 24383  003452  0A01               	xorlw	1	; case 3
 24384  003454  B4D8               	btfsc	status,2,c
 24385  003456  D7EE               	goto	l2845
 24386  003458                     l2832:
 24387                           
 24388                           ; BSR set to: 1
 24389                           ;app_addCmd.c: 129: return isComplete;
 24390                           
 24391                           ; BSR set to: 1
 24392  003458  510B               	movf	addCmdFsm@isComplete& (0+255),w,b
 24393  00345A  0012               	return	
 24394  00345C                     __end_of_addCmdFsm:
 24395                           	opt stack 0
 24396                           tosu	equ	0xFFF
 24397                           tosh	equ	0xFFE
 24398                           tosl	equ	0xFFD
 24399                           pclath	equ	0xFFA
 24400                           tblptru	equ	0xFF8
 24401                           tblptrh	equ	0xFF7
 24402                           tblptrl	equ	0xFF6
 24403                           tablat	equ	0xFF5
 24404                           prodh	equ	0xFF4
 24405                           prodl	equ	0xFF3
 24406                           intcon	equ	0xFF2
 24407                           intcon2	equ	0xFF1
 24408                           intcon3	equ	0xFF0
 24409                           indf0	equ	0xFEF
 24410                           postinc0	equ	0xFEE
 24411                           plusw0	equ	0xFEB
 24412                           fsr0h	equ	0xFEA
 24413                           fsr0l	equ	0xFE9
 24414                           wreg	equ	0xFE8
 24415                           indf1	equ	0xFE7
 24416                           postinc1	equ	0xFE6
 24417                           postdec1	equ	0xFE5
 24418                           fsr1h	equ	0xFE2
 24419                           fsr1l	equ	0xFE1
 24420                           indf2	equ	0xFDF
 24421                           postinc2	equ	0xFDE
 24422                           postdec2	equ	0xFDD
 24423                           plusw2	equ	0xFDB
 24424                           fsr2h	equ	0xFDA
 24425                           fsr2l	equ	0xFD9
 24426                           status	equ	0xFD8
 24427                           
 24428 ;; *************** function _saveNumberInMemory *****************
 24429 ;; Defined at:
 24430 ;;		line 121 in file "../Source/c/04_App/app_utils.c"
 24431 ;; Parameters:    Size  Location     Type
 24432 ;;  address         1    wreg     unsigned char 
 24433 ;;  phoneNumber     2   54[BANK0 ] PTR unsigned char 
 24434 ;;		 -> delCmdFsm@emptyNumber(13), smsText(20), callerNumber(13), 
 24435 ;; Auto vars:     Size  Location     Type
 24436 ;;  address         1   56[BANK0 ] unsigned char 
 24437 ;; Return value:  Size  Location     Type
 24438 ;;                  1    wreg      void 
 24439 ;; Registers used:
 24440 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 24441 ;; Tracked objects:
 24442 ;;		On entry : 0/0
 24443 ;;		On exit  : 0/0
 24444 ;;		Unchanged: 0/0
 24445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24446 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24447 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24448 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24449 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24450 ;;Total ram usage:        3 bytes
 24451 ;; Hardware stack levels used:    1
 24452 ;; Hardware stack levels required when called:   14
 24453 ;; This function calls:
 24454 ;;		_Eeprom_Write
 24455 ;; This function is called by:
 24456 ;;		_initFsm
 24457 ;;		_addCmdFsm
 24458 ;;		_delCmdFsm
 24459 ;; This function uses a non-reentrant model
 24460 ;;
 24461                           
 24462                           	psect	text114
 24463  006ABA                     __ptext114:
 24464                           	opt stack 0
 24465  006ABA                     _saveNumberInMemory:
 24466                           	opt stack 12
 24467                           
 24468                           ; BSR set to: 1
 24469                           ;incstack = 0
 24470                           ;saveNumberInMemory@address stored from wreg
 24471  006ABA  0100               	movlb	0	; () banked
 24472  006ABC  6F98               	movwf	saveNumberInMemory@address& (0+255),b
 24473                           
 24474                           ;app_utils.c: 123: Eeprom_Write(address, phoneNumber, ((UINT8)(13)));
 24475  006ABE  C096  F08F         	movff	saveNumberInMemory@phoneNumber,Eeprom_Write@WriteBuffer
 24476  006AC2  C097  F090         	movff	saveNumberInMemory@phoneNumber+1,Eeprom_Write@WriteBuffer+1
 24477  006AC6  0E0D               	movlw	13
 24478  006AC8  0100               	movlb	0	; () banked
 24479  006ACA  6F91               	movwf	Eeprom_Write@DataLength& (0+255),b
 24480  006ACC  5198               	movf	saveNumberInMemory@address& (0+255),w,b
 24481  006ACE  ECCA  F02E         	call	_Eeprom_Write
 24482  006AD2  0012               	return		;funcret
 24483  006AD4                     __end_of_saveNumberInMemory:
 24484                           	opt stack 0
 24485                           tosu	equ	0xFFF
 24486                           tosh	equ	0xFFE
 24487                           tosl	equ	0xFFD
 24488                           pclath	equ	0xFFA
 24489                           tblptru	equ	0xFF8
 24490                           tblptrh	equ	0xFF7
 24491                           tblptrl	equ	0xFF6
 24492                           tablat	equ	0xFF5
 24493                           prodh	equ	0xFF4
 24494                           prodl	equ	0xFF3
 24495                           intcon	equ	0xFF2
 24496                           intcon2	equ	0xFF1
 24497                           intcon3	equ	0xFF0
 24498                           indf0	equ	0xFEF
 24499                           postinc0	equ	0xFEE
 24500                           plusw0	equ	0xFEB
 24501                           fsr0h	equ	0xFEA
 24502                           fsr0l	equ	0xFE9
 24503                           wreg	equ	0xFE8
 24504                           indf1	equ	0xFE7
 24505                           postinc1	equ	0xFE6
 24506                           postdec1	equ	0xFE5
 24507                           fsr1h	equ	0xFE2
 24508                           fsr1l	equ	0xFE1
 24509                           indf2	equ	0xFDF
 24510                           postinc2	equ	0xFDE
 24511                           postdec2	equ	0xFDD
 24512                           plusw2	equ	0xFDB
 24513                           fsr2h	equ	0xFDA
 24514                           fsr2l	equ	0xFD9
 24515                           status	equ	0xFD8
 24516                           
 24517 ;; *************** function _Eeprom_Write *****************
 24518 ;; Defined at:
 24519 ;;		line 78 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/05_Eeprom/eeprom_if.c"
 24520 ;; Parameters:    Size  Location     Type
 24521 ;;  MemoryAddres    1    wreg     unsigned char 
 24522 ;;  WriteBuffer     2   47[BANK0 ] PTR unsigned char 
 24523 ;;		 -> delCmdFsm@emptyNumber(13), memoryPreamble(4), smsText(20), callerNumber(13), 
 24524 ;;  DataLength      1   49[BANK0 ] unsigned char 
 24525 ;; Auto vars:     Size  Location     Type
 24526 ;;  MemoryAddres    1   51[BANK0 ] unsigned char 
 24527 ;;  CommandLengt    1   53[BANK0 ] const unsigned char 
 24528 ;;  SlaveAddress    1   52[BANK0 ] const unsigned char 
 24529 ;;  WriteSts        1   50[BANK0 ] unsigned char 
 24530 ;; Return value:  Size  Location     Type
 24531 ;;                  1    wreg      unsigned char 
 24532 ;; Registers used:
 24533 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 24534 ;; Tracked objects:
 24535 ;;		On entry : 0/0
 24536 ;;		On exit  : 0/0
 24537 ;;		Unchanged: 0/0
 24538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24539 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24540 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24541 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24542 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24543 ;;Total ram usage:        7 bytes
 24544 ;; Hardware stack levels used:    1
 24545 ;; Hardware stack levels required when called:   13
 24546 ;; This function calls:
 24547 ;;		_I2cSlv_SendI2cMsg
 24548 ;;		_StringCopy
 24549 ;; This function is called by:
 24550 ;;		_savePreamble
 24551 ;;		_saveNumberInMemory
 24552 ;; This function uses a non-reentrant model
 24553 ;;
 24554                           
 24555                           	psect	text115
 24556  005D94                     __ptext115:
 24557                           	opt stack 0
 24558  005D94                     _Eeprom_Write:
 24559                           	opt stack 12
 24560                           
 24561                           ;incstack = 0
 24562                           ;Eeprom_Write@MemoryAddress stored from wreg
 24563  005D94  0100               	movlb	0	; () banked
 24564  005D96  6F93               	movwf	Eeprom_Write@MemoryAddress& (0+255),b
 24565                           
 24566                           ;eeprom_if.c: 80: const UINT8 SlaveAddress = 0x50;
 24567  005D98  0E50               	movlw	80
 24568  005D9A  0100               	movlb	0	; () banked
 24569  005D9C  6F94               	movwf	Eeprom_Write@SlaveAddress& (0+255),b
 24570                           
 24571                           ; BSR set to: 0
 24572                           ;eeprom_if.c: 81: const UINT8 CommandLength = DataLength + 1;
 24573  005D9E  2991               	incf	Eeprom_Write@DataLength& (0+255),w,b
 24574  005DA0  6F95               	movwf	Eeprom_Write@CommandLength& (0+255),b
 24575                           
 24576                           ; BSR set to: 0
 24577                           ;eeprom_if.c: 82: UINT8 WriteSts = 0u;
 24578  005DA2  0E00               	movlw	0
 24579  005DA4  6F92               	movwf	Eeprom_Write@WriteSts& (0+255),b
 24580                           
 24581                           ; BSR set to: 0
 24582                           ;eeprom_if.c: 84: if (CommandLength <= 15)
 24583  005DA6  0E10               	movlw	16
 24584  005DA8  6195               	cpfslt	Eeprom_Write@CommandLength& (0+255),b
 24585  005DAA  0012               	return	
 24586                           
 24587                           ; BSR set to: 0
 24588                           ;eeprom_if.c: 85: {
 24589                           ;eeprom_if.c: 86: EepromBuffer[0] = MemoryAddress;
 24590  005DAC  C093  F4A7         	movff	Eeprom_Write@MemoryAddress,_EepromBuffer
 24591                           
 24592                           ; BSR set to: 0
 24593                           ;eeprom_if.c: 87: StringCopy(WriteBuffer, EepromBuffer + 1, DataLength);
 24594  005DB0  C08F  F085         	movff	Eeprom_Write@WriteBuffer,StringCopy@SourceStr
 24595  005DB4  C090  F086         	movff	Eeprom_Write@WriteBuffer+1,StringCopy@SourceStr+1
 24596  005DB8  0EA8               	movlw	low (_EepromBuffer+1)
 24597  005DBA  6F87               	movwf	StringCopy@DestStr& (0+255),b
 24598  005DBC  0E04               	movlw	high (_EepromBuffer+1)
 24599  005DBE  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 24600  005DC0  C091  F089         	movff	Eeprom_Write@DataLength,StringCopy@Len
 24601  005DC4  6B8A               	clrf	(StringCopy@Len+1)& (0+255),b
 24602  005DC6  EC60  F02C         	call	_StringCopy	;wreg free
 24603                           
 24604                           ;eeprom_if.c: 89: WriteSts = I2cSlv_SendI2cMsg(EepromBuffer, SlaveAddress, CommandLength
      +                          );
 24605  005DCA  0EA7               	movlw	low _EepromBuffer
 24606  005DCC  0100               	movlb	0	; () banked
 24607  005DCE  6F80               	movwf	I2cSlv_SendI2cMsg@TxBuffer& (0+255),b
 24608  005DD0  0E04               	movlw	high _EepromBuffer
 24609  005DD2  6F81               	movwf	(I2cSlv_SendI2cMsg@TxBuffer+1)& (0+255),b
 24610  005DD4  C094  F082         	movff	Eeprom_Write@SlaveAddress,I2cSlv_SendI2cMsg@SlaveAddr
 24611  005DD8  C095  F083         	movff	Eeprom_Write@CommandLength,I2cSlv_SendI2cMsg@DataLenght
 24612  005DDC  ECC9  F031         	call	_I2cSlv_SendI2cMsg	;wreg free
 24613  005DE0  0100               	movlb	0	; () banked
 24614  005DE2  6F92               	movwf	Eeprom_Write@WriteSts& (0+255),b
 24615                           
 24616                           ; BSR set to: 0
 24617  005DE4  0012               	return	
 24618  005DE6                     __end_of_Eeprom_Write:
 24619                           	opt stack 0
 24620                           tosu	equ	0xFFF
 24621                           tosh	equ	0xFFE
 24622                           tosl	equ	0xFFD
 24623                           pclath	equ	0xFFA
 24624                           tblptru	equ	0xFF8
 24625                           tblptrh	equ	0xFF7
 24626                           tblptrl	equ	0xFF6
 24627                           tablat	equ	0xFF5
 24628                           prodh	equ	0xFF4
 24629                           prodl	equ	0xFF3
 24630                           intcon	equ	0xFF2
 24631                           intcon2	equ	0xFF1
 24632                           intcon3	equ	0xFF0
 24633                           indf0	equ	0xFEF
 24634                           postinc0	equ	0xFEE
 24635                           plusw0	equ	0xFEB
 24636                           fsr0h	equ	0xFEA
 24637                           fsr0l	equ	0xFE9
 24638                           wreg	equ	0xFE8
 24639                           indf1	equ	0xFE7
 24640                           postinc1	equ	0xFE6
 24641                           postdec1	equ	0xFE5
 24642                           fsr1h	equ	0xFE2
 24643                           fsr1l	equ	0xFE1
 24644                           indf2	equ	0xFDF
 24645                           postinc2	equ	0xFDE
 24646                           postdec2	equ	0xFDD
 24647                           plusw2	equ	0xFDB
 24648                           fsr2h	equ	0xFDA
 24649                           fsr2l	equ	0xFD9
 24650                           status	equ	0xFD8
 24651                           
 24652 ;; *************** function _isNumberInMemory *****************
 24653 ;; Defined at:
 24654 ;;		line 148 in file "../Source/c/04_App/app_utils.c"
 24655 ;; Parameters:    Size  Location     Type
 24656 ;;  phoneNumber     2    0[BANK1 ] PTR unsigned char 
 24657 ;;		 -> receivedNumber(13), smsText(20), 
 24658 ;;  positionInMe    2    2[BANK1 ] PTR unsigned char 
 24659 ;;		 -> triggerCmdFsm@numberInMemory(1), delCmdFsm@numberInMemory(1), addCmdFsm@numberInMemory(1), 
 24660 ;; Auto vars:     Size  Location     Type
 24661 ;;  memoryOpResu    1    4[BANK1 ] enum E8246
 24662 ;; Return value:  Size  Location     Type
 24663 ;;                  1    wreg      enum E8973
 24664 ;; Registers used:
 24665 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24666 ;; Tracked objects:
 24667 ;;		On entry : 0/0
 24668 ;;		On exit  : 0/0
 24669 ;;		Unchanged: 0/0
 24670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24671 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24672 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24673 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24674 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24675 ;;Total ram usage:        5 bytes
 24676 ;; Hardware stack levels used:    1
 24677 ;; Hardware stack levels required when called:   17
 24678 ;; This function calls:
 24679 ;;		_Eeprom_Read
 24680 ;;		_StringCompare
 24681 ;;		_isNumberValid
 24682 ;; This function is called by:
 24683 ;;		_addCmdFsm
 24684 ;;		_delCmdFsm
 24685 ;;		_triggerCmdFsm
 24686 ;; This function uses a non-reentrant model
 24687 ;;
 24688                           
 24689                           	psect	text116
 24690  0044C6                     __ptext116:
 24691                           	opt stack 0
 24692  0044C6                     _isNumberInMemory:
 24693                           	opt stack 9
 24694                           
 24695                           ;app_utils.c: 150: static searchFsmStates currentState = SEARCH_FSM_START;
 24696                           ;app_utils.c: 151: static uint8_t currentPosition = 32;
 24697                           ;app_utils.c: 152: EepromStsType memoryOpResult = OP_PENDING;
 24698                           
 24699                           ; BSR set to: 0
 24700                           ;incstack = 0
 24701  0044C6  0E02               	movlw	2
 24702  0044C8  0101               	movlb	1	; () banked
 24703  0044CA  6F04               	movwf	isNumberInMemory@memoryOpResult& (0+255),b
 24704                           
 24705                           ; BSR set to: 1
 24706                           ;app_utils.c: 154: if (currentState > SEARCH_FSM_CHECK_NUMBER)
 24707  0044CC  0E01               	movlw	1
 24708  0044CE  0100               	movlb	0	; () banked
 24709  0044D0  65C5               	cpfsgt	isNumberInMemory@currentState& (0+255),b
 24710  0044D2  D004               	goto	l2770
 24711                           
 24712                           ; BSR set to: 0
 24713                           ;app_utils.c: 155: {
 24714                           ;app_utils.c: 156: currentState = SEARCH_FSM_START;
 24715  0044D4  0E00               	movlw	0
 24716  0044D6  6FC5               	movwf	isNumberInMemory@currentState& (0+255),b
 24717                           
 24718                           ;app_utils.c: 157: currentPosition = 32;
 24719  0044D8  0E20               	movlw	32
 24720  0044DA  6FE1               	movwf	isNumberInMemory@currentPosition& (0+255),b
 24721  0044DC                     l2770:
 24722                           
 24723                           ; BSR set to: 0
 24724                           ;app_utils.c: 158: }
 24725                           ;app_utils.c: 159: if (currentPosition >= (32 + (16 * 10)))
 24726                           
 24727                           ; BSR set to: 0
 24728  0044DC  0EBF               	movlw	191
 24729  0044DE  65E1               	cpfsgt	isNumberInMemory@currentPosition& (0+255),b
 24730  0044E0  D045               	goto	l2772
 24731                           
 24732                           ; BSR set to: 0
 24733                           ;app_utils.c: 160: {
 24734                           ;app_utils.c: 161: currentState = SEARCH_FSM_NOT_FOUND;
 24735  0044E2  0E04               	movlw	4
 24736  0044E4  6FC5               	movwf	isNumberInMemory@currentState& (0+255),b
 24737                           
 24738                           ; BSR set to: 0
 24739                           ;app_utils.c: 162: }
 24740                           ;app_utils.c: 164: switch (currentState)
 24741  0044E6  D042               	goto	l2772
 24742  0044E8                     
 24743                           ; BSR set to: 0
 24744                           ;app_utils.c: 167: memoryOpResult = Eeprom_Read(currentPosition, readBuffer, ((UINT8)(13
      +                          )));
 24745                           
 24746                           ; BSR set to: 0
 24747  0044E8  0E37               	movlw	low _readBuffer
 24748  0044EA  6FA9               	movwf	Eeprom_Read@ReadBuffer& (0+255),b
 24749  0044EC  0E03               	movlw	high _readBuffer
 24750  0044EE  6FAA               	movwf	(Eeprom_Read@ReadBuffer+1)& (0+255),b
 24751  0044F0  0E0D               	movlw	13
 24752  0044F2  6FAB               	movwf	Eeprom_Read@DataLength& (0+255),b
 24753  0044F4  51E1               	movf	isNumberInMemory@currentPosition& (0+255),w,b
 24754  0044F6  EC4C  F02E         	call	_Eeprom_Read
 24755  0044FA  0101               	movlb	1	; () banked
 24756  0044FC  6F04               	movwf	isNumberInMemory@memoryOpResult& (0+255),b
 24757                           
 24758                           ; BSR set to: 1
 24759                           ;app_utils.c: 168: if (memoryOpResult == OP_FAILED)
 24760  0044FE  0504               	decf	isNumberInMemory@memoryOpResult& (0+255),w,b
 24761  004500  A4D8               	btfss	status,2,c
 24762  004502  D002               	goto	l2774
 24763                           
 24764                           ; BSR set to: 1
 24765                           ;app_utils.c: 169: {
 24766                           ;app_utils.c: 170: currentState = SEARCH_FSM_ERROR;
 24767  004504  0E02               	movlw	2
 24768  004506  D005               	goto	L48
 24769  004508                     l2774:
 24770                           
 24771                           ;app_utils.c: 172: else if (memoryOpResult == OP_SUCCESS)
 24772                           
 24773                           ; BSR set to: 0
 24774  004508  0101               	movlb	1	; () banked
 24775  00450A  5104               	movf	isNumberInMemory@memoryOpResult& (0+255),w,b
 24776  00450C  A4D8               	btfss	status,2,c
 24777  00450E  D035               	goto	l2777
 24778                           
 24779                           ; BSR set to: 1
 24780                           ;app_utils.c: 173: {
 24781                           ;app_utils.c: 174: currentState = SEARCH_FSM_CHECK_NUMBER;
 24782  004510  0E01               	movlw	1
 24783  004512                     L48:
 24784  004512  0100               	movlb	0	; () banked
 24785  004514  6FC5               	movwf	isNumberInMemory@currentState& (0+255),b
 24786                           
 24787                           ; BSR set to: 0
 24788                           ;app_utils.c: 175: }
 24789                           ;app_utils.c: 176: break;
 24790                           
 24791                           ; BSR set to: 0
 24792  004516  D031               	goto	l2777
 24793  004518                     
 24794                           ; BSR set to: 0
 24795                           ;app_utils.c: 179: currentState = SEARCH_FSM_START;
 24796                           
 24797                           ; BSR set to: 0
 24798  004518  0E00               	movlw	0
 24799  00451A  6FC5               	movwf	isNumberInMemory@currentState& (0+255),b
 24800                           
 24801                           ; BSR set to: 0
 24802                           ;app_utils.c: 180: if (isNumberValid(readBuffer))
 24803  00451C  0E37               	movlw	low _readBuffer
 24804  00451E  6F7D               	movwf	isNumberValid@phoneNumber& (0+255),b
 24805  004520  0E03               	movlw	high _readBuffer
 24806  004522  6F7E               	movwf	(isNumberValid@phoneNumber+1)& (0+255),b
 24807  004524  EC2D  F02C         	call	_isNumberValid	;wreg free
 24808  004528  0900               	iorlw	0
 24809  00452A  B4D8               	btfsc	status,2,c
 24810  00452C  D01B               	goto	l2780
 24811                           
 24812                           ;app_utils.c: 181: {
 24813                           ;app_utils.c: 182: if (StringCompare(phoneNumber, readBuffer, ((UINT8)(13))))
 24814  00452E  C100  F07D         	movff	isNumberInMemory@phoneNumber,StringCompare@String1
 24815  004532  C101  F07E         	movff	isNumberInMemory@phoneNumber+1,StringCompare@String1+1
 24816  004536  0E37               	movlw	low _readBuffer
 24817  004538  0100               	movlb	0	; () banked
 24818  00453A  6F7F               	movwf	StringCompare@String2& (0+255),b
 24819  00453C  0E03               	movlw	high _readBuffer
 24820  00453E  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 24821  004540  0E00               	movlw	0
 24822  004542  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 24823  004544  0E0D               	movlw	13
 24824  004546  6F81               	movwf	StringCompare@Len& (0+255),b
 24825  004548  ECF3  F02E         	call	_StringCompare	;wreg free
 24826  00454C  0900               	iorlw	0
 24827  00454E  B4D8               	btfsc	status,2,c
 24828  004550  D009               	goto	l2780
 24829                           
 24830                           ;app_utils.c: 183: {
 24831                           ;app_utils.c: 184: *positionInMemory = currentPosition;
 24832  004552  C102  FFD9         	movff	isNumberInMemory@positionInMemory,fsr2l
 24833  004556  C103  FFDA         	movff	isNumberInMemory@positionInMemory+1,fsr2h
 24834  00455A  C0E1  FFDF         	movff	isNumberInMemory@currentPosition,indf2
 24835                           
 24836                           ;app_utils.c: 185: currentState = SEARCH_FSM_FOUND;
 24837  00455E  0E03               	movlw	3
 24838  004560  0100               	movlb	0	; () banked
 24839  004562  6FC5               	movwf	isNumberInMemory@currentState& (0+255),b
 24840  004564                     l2780:
 24841                           
 24842                           ;app_utils.c: 190: }
 24843                           ;app_utils.c: 191: }
 24844                           ;app_utils.c: 192: currentPosition += 16;
 24845                           
 24846                           ; BSR set to: 0
 24847                           
 24848                           ; BSR set to: 0
 24849                           
 24850                           ;app_utils.c: 187: else
 24851                           ;app_utils.c: 188: {
 24852                           
 24853                           ; BSR set to: 0
 24854  004564  0E10               	movlw	16
 24855  004566  0100               	movlb	0	; () banked
 24856  004568  27E1               	addwf	isNumberInMemory@currentPosition& (0+255),f,b
 24857                           
 24858                           ; BSR set to: 0
 24859                           ;app_utils.c: 197: }
 24860                           
 24861                           ; BSR set to: 0
 24862                           ;app_utils.c: 196: break;
 24863                           
 24864                           ;app_utils.c: 195: default:
 24865                           
 24866                           ;app_utils.c: 193: break;
 24867  00456A  D007               	goto	l2777
 24868  00456C                     l2772:
 24869                           
 24870                           ; BSR set to: 0
 24871                           
 24872                           ; BSR set to: 0
 24873  00456C  51C5               	movf	isNumberInMemory@currentState& (0+255),w,b
 24874                           
 24875                           ; Switch size 1, requested type "space"
 24876                           ; Number of cases is 2, Range of values is 0 to 1
 24877                           ; switch strategies available:
 24878                           ; Name         Instructions Cycles
 24879                           ; simple_byte            7     4 (average)
 24880                           ;	Chosen strategy is simple_byte
 24881  00456E  0A00               	xorlw	0	; case 0
 24882  004570  B4D8               	btfsc	status,2,c
 24883  004572  D7BA               	goto	l2773
 24884  004574  0A01               	xorlw	1	; case 1
 24885  004576  B4D8               	btfsc	status,2,c
 24886  004578  D7CF               	goto	l2778
 24887  00457A                     l2777:
 24888                           
 24889                           ;app_utils.c: 198: return currentState;
 24890                           
 24891                           ; BSR set to: 0
 24892  00457A  0100               	movlb	0	; () banked
 24893  00457C  51C5               	movf	isNumberInMemory@currentState& (0+255),w,b
 24894  00457E  0012               	return	
 24895  004580                     __end_of_isNumberInMemory:
 24896                           	opt stack 0
 24897                           tosu	equ	0xFFF
 24898                           tosh	equ	0xFFE
 24899                           tosl	equ	0xFFD
 24900                           pclath	equ	0xFFA
 24901                           tblptru	equ	0xFF8
 24902                           tblptrh	equ	0xFF7
 24903                           tblptrl	equ	0xFF6
 24904                           tablat	equ	0xFF5
 24905                           prodh	equ	0xFF4
 24906                           prodl	equ	0xFF3
 24907                           intcon	equ	0xFF2
 24908                           intcon2	equ	0xFF1
 24909                           intcon3	equ	0xFF0
 24910                           indf0	equ	0xFEF
 24911                           postinc0	equ	0xFEE
 24912                           plusw0	equ	0xFEB
 24913                           fsr0h	equ	0xFEA
 24914                           fsr0l	equ	0xFE9
 24915                           wreg	equ	0xFE8
 24916                           indf1	equ	0xFE7
 24917                           postinc1	equ	0xFE6
 24918                           postdec1	equ	0xFE5
 24919                           fsr1h	equ	0xFE2
 24920                           fsr1l	equ	0xFE1
 24921                           indf2	equ	0xFDF
 24922                           postinc2	equ	0xFDE
 24923                           postdec2	equ	0xFDD
 24924                           plusw2	equ	0xFDB
 24925                           fsr2h	equ	0xFDA
 24926                           fsr2l	equ	0xFD9
 24927                           status	equ	0xFD8
 24928                           
 24929 ;; *************** function _isMasterNumber *****************
 24930 ;; Defined at:
 24931 ;;		line 236 in file "../Source/c/04_App/app_utils.c"
 24932 ;; Parameters:    Size  Location     Type
 24933 ;;  phoneNumber     2    0[BANK1 ] PTR unsigned char 
 24934 ;;		 -> receivedNumber(13), 
 24935 ;; Auto vars:     Size  Location     Type
 24936 ;;  memoryOpResu    1    2[BANK1 ] enum E8246
 24937 ;; Return value:  Size  Location     Type
 24938 ;;                  1    wreg      unsigned char 
 24939 ;; Registers used:
 24940 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24941 ;; Tracked objects:
 24942 ;;		On entry : 0/0
 24943 ;;		On exit  : 0/0
 24944 ;;		Unchanged: 0/0
 24945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24946 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24947 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24948 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24949 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24950 ;;Total ram usage:        3 bytes
 24951 ;; Hardware stack levels used:    1
 24952 ;; Hardware stack levels required when called:   17
 24953 ;; This function calls:
 24954 ;;		_Eeprom_Read
 24955 ;;		_StringCompare
 24956 ;;		_isNumberValid
 24957 ;; This function is called by:
 24958 ;;		_addCmdFsm
 24959 ;;		_delCmdFsm
 24960 ;;		_triggerCmdFsm
 24961 ;; This function uses a non-reentrant model
 24962 ;;
 24963                           
 24964                           	psect	text117
 24965  0055E0                     __ptext117:
 24966                           	opt stack 0
 24967  0055E0                     _isMasterNumber:
 24968                           	opt stack 9
 24969                           
 24970                           ;app_utils.c: 238: EepromStsType memoryOpResult = OP_PENDING;
 24971                           
 24972                           ; BSR set to: 0
 24973                           ;incstack = 0
 24974  0055E0  0E02               	movlw	2
 24975  0055E2  0101               	movlb	1	; () banked
 24976  0055E4  6F02               	movwf	isMasterNumber@memoryOpResult& (0+255),b
 24977                           
 24978                           ; BSR set to: 1
 24979                           ;app_utils.c: 240: memoryOpResult = Eeprom_Read(16, readBuffer, ((UINT8)(13)));
 24980  0055E6  0E37               	movlw	low _readBuffer
 24981  0055E8  0100               	movlb	0	; () banked
 24982  0055EA  6FA9               	movwf	Eeprom_Read@ReadBuffer& (0+255),b
 24983  0055EC  0E03               	movlw	high _readBuffer
 24984  0055EE  6FAA               	movwf	(Eeprom_Read@ReadBuffer+1)& (0+255),b
 24985  0055F0  0E0D               	movlw	13
 24986  0055F2  6FAB               	movwf	Eeprom_Read@DataLength& (0+255),b
 24987  0055F4  0E10               	movlw	16
 24988  0055F6  EC4C  F02E         	call	_Eeprom_Read
 24989  0055FA  0101               	movlb	1	; () banked
 24990  0055FC  6F02               	movwf	isMasterNumber@memoryOpResult& (0+255),b
 24991                           
 24992                           ; BSR set to: 1
 24993                           ;app_utils.c: 241: if (memoryOpResult != OP_PENDING)
 24994  0055FE  0E02               	movlw	2
 24995  005600  1902               	xorwf	isMasterNumber@memoryOpResult& (0+255),w,b
 24996  005602  B4D8               	btfsc	status,2,c
 24997  005604  D021               	goto	l2788
 24998                           
 24999                           ; BSR set to: 1
 25000                           ;app_utils.c: 242: {
 25001                           ;app_utils.c: 243: memoryOpResult = OP_FAILED;
 25002  005606  0E01               	movlw	1
 25003  005608  6F02               	movwf	isMasterNumber@memoryOpResult& (0+255),b
 25004                           
 25005                           ; BSR set to: 1
 25006                           ;app_utils.c: 244: if (isNumberValid(readBuffer))
 25007  00560A  0E37               	movlw	low _readBuffer
 25008  00560C  0100               	movlb	0	; () banked
 25009  00560E  6F7D               	movwf	isNumberValid@phoneNumber& (0+255),b
 25010  005610  0E03               	movlw	high _readBuffer
 25011  005612  6F7E               	movwf	(isNumberValid@phoneNumber+1)& (0+255),b
 25012  005614  EC2D  F02C         	call	_isNumberValid	;wreg free
 25013  005618  0900               	iorlw	0
 25014  00561A  B4D8               	btfsc	status,2,c
 25015  00561C  D015               	goto	l2788
 25016                           
 25017                           ;app_utils.c: 245: {
 25018                           ;app_utils.c: 246: if (StringCompare(phoneNumber, readBuffer, ((UINT8)(13))))
 25019  00561E  C100  F07D         	movff	isMasterNumber@phoneNumber,StringCompare@String1
 25020  005622  C101  F07E         	movff	isMasterNumber@phoneNumber+1,StringCompare@String1+1
 25021  005626  0E37               	movlw	low _readBuffer
 25022  005628  0100               	movlb	0	; () banked
 25023  00562A  6F7F               	movwf	StringCompare@String2& (0+255),b
 25024  00562C  0E03               	movlw	high _readBuffer
 25025  00562E  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 25026  005630  0E00               	movlw	0
 25027  005632  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 25028  005634  0E0D               	movlw	13
 25029  005636  6F81               	movwf	StringCompare@Len& (0+255),b
 25030  005638  ECF3  F02E         	call	_StringCompare	;wreg free
 25031  00563C  0900               	iorlw	0
 25032  00563E  B4D8               	btfsc	status,2,c
 25033  005640  D003               	goto	l2788
 25034                           
 25035                           ;app_utils.c: 247: {
 25036                           ;app_utils.c: 248: memoryOpResult = OP_SUCCESS;
 25037  005642  0E00               	movlw	0
 25038  005644  0101               	movlb	1	; () banked
 25039  005646  6F02               	movwf	isMasterNumber@memoryOpResult& (0+255),b
 25040  005648                     l2788:
 25041                           
 25042                           ;app_utils.c: 249: }
 25043                           ;app_utils.c: 250: }
 25044                           ;app_utils.c: 251: }
 25045                           ;app_utils.c: 252: return memoryOpResult;
 25046                           
 25047                           ; BSR set to: 1
 25048                           
 25049                           ; BSR set to: 1
 25050  005648  0101               	movlb	1	; () banked
 25051  00564A  5102               	movf	isMasterNumber@memoryOpResult& (0+255),w,b
 25052  00564C  0012               	return	
 25053  00564E                     __end_of_isMasterNumber:
 25054                           	opt stack 0
 25055                           tosu	equ	0xFFF
 25056                           tosh	equ	0xFFE
 25057                           tosl	equ	0xFFD
 25058                           pclath	equ	0xFFA
 25059                           tblptru	equ	0xFF8
 25060                           tblptrh	equ	0xFF7
 25061                           tblptrl	equ	0xFF6
 25062                           tablat	equ	0xFF5
 25063                           prodh	equ	0xFF4
 25064                           prodl	equ	0xFF3
 25065                           intcon	equ	0xFF2
 25066                           intcon2	equ	0xFF1
 25067                           intcon3	equ	0xFF0
 25068                           indf0	equ	0xFEF
 25069                           postinc0	equ	0xFEE
 25070                           plusw0	equ	0xFEB
 25071                           fsr0h	equ	0xFEA
 25072                           fsr0l	equ	0xFE9
 25073                           wreg	equ	0xFE8
 25074                           indf1	equ	0xFE7
 25075                           postinc1	equ	0xFE6
 25076                           postdec1	equ	0xFE5
 25077                           fsr1h	equ	0xFE2
 25078                           fsr1l	equ	0xFE1
 25079                           indf2	equ	0xFDF
 25080                           postinc2	equ	0xFDE
 25081                           postdec2	equ	0xFDD
 25082                           plusw2	equ	0xFDB
 25083                           fsr2h	equ	0xFDA
 25084                           fsr2l	equ	0xFD9
 25085                           status	equ	0xFD8
 25086                           
 25087 ;; *************** function _findEmptySpot *****************
 25088 ;; Defined at:
 25089 ;;		line 286 in file "../Source/c/04_App/app_utils.c"
 25090 ;; Parameters:    Size  Location     Type
 25091 ;;  positionInMe    2    0[BANK1 ] PTR unsigned char 
 25092 ;;		 -> addCmdFsm@numberInMemory(1), 
 25093 ;; Auto vars:     Size  Location     Type
 25094 ;;  memoryOpResu    1    2[BANK1 ] enum E8246
 25095 ;; Return value:  Size  Location     Type
 25096 ;;                  1    wreg      enum E8973
 25097 ;; Registers used:
 25098 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25099 ;; Tracked objects:
 25100 ;;		On entry : 0/0
 25101 ;;		On exit  : 0/0
 25102 ;;		Unchanged: 0/0
 25103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25104 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25105 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25107 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25108 ;;Total ram usage:        3 bytes
 25109 ;; Hardware stack levels used:    1
 25110 ;; Hardware stack levels required when called:   17
 25111 ;; This function calls:
 25112 ;;		_Eeprom_Read
 25113 ;;		_isNumberValid
 25114 ;; This function is called by:
 25115 ;;		_addCmdFsm
 25116 ;; This function uses a non-reentrant model
 25117 ;;
 25118                           
 25119                           	psect	text118
 25120  004E70                     __ptext118:
 25121                           	opt stack 0
 25122  004E70                     _findEmptySpot:
 25123                           	opt stack 9
 25124                           
 25125                           ;app_utils.c: 288: static searchFsmStates currentState = SEARCH_FSM_START;
 25126                           ;app_utils.c: 289: static uint8_t currentPosition = 32;
 25127                           ;app_utils.c: 290: EepromStsType memoryOpResult = OP_PENDING;
 25128                           
 25129                           ; BSR set to: 1
 25130                           ;incstack = 0
 25131  004E70  0E02               	movlw	2
 25132  004E72  0101               	movlb	1	; () banked
 25133  004E74  6F02               	movwf	findEmptySpot@memoryOpResult& (0+255),b
 25134                           
 25135                           ; BSR set to: 1
 25136                           ;app_utils.c: 292: if (currentState > SEARCH_FSM_CHECK_NUMBER)
 25137  004E76  0E01               	movlw	1
 25138  004E78  0100               	movlb	0	; () banked
 25139  004E7A  65C4               	cpfsgt	findEmptySpot@currentState& (0+255),b
 25140  004E7C  D004               	goto	l2796
 25141                           
 25142                           ; BSR set to: 0
 25143                           ;app_utils.c: 293: {
 25144                           ;app_utils.c: 294: currentState = SEARCH_FSM_START;
 25145  004E7E  0E00               	movlw	0
 25146  004E80  6FC4               	movwf	findEmptySpot@currentState& (0+255),b
 25147                           
 25148                           ;app_utils.c: 295: currentPosition = 32;
 25149  004E82  0E20               	movlw	32
 25150  004E84  6FE0               	movwf	findEmptySpot@currentPosition& (0+255),b
 25151  004E86                     l2796:
 25152                           
 25153                           ; BSR set to: 0
 25154                           ;app_utils.c: 296: }
 25155                           ;app_utils.c: 297: if (currentPosition >= (32 + (16 * 10)))
 25156                           
 25157                           ; BSR set to: 0
 25158  004E86  0EBF               	movlw	191
 25159  004E88  65E0               	cpfsgt	findEmptySpot@currentPosition& (0+255),b
 25160  004E8A  D033               	goto	l2798
 25161                           
 25162                           ; BSR set to: 0
 25163                           ;app_utils.c: 298: {
 25164                           ;app_utils.c: 299: currentState = SEARCH_FSM_NOT_FOUND;
 25165  004E8C  0E04               	movlw	4
 25166  004E8E  6FC4               	movwf	findEmptySpot@currentState& (0+255),b
 25167                           
 25168                           ; BSR set to: 0
 25169                           ;app_utils.c: 300: }
 25170                           ;app_utils.c: 302: switch (currentState)
 25171  004E90  D030               	goto	l2798
 25172  004E92                     
 25173                           ; BSR set to: 0
 25174                           ;app_utils.c: 305: memoryOpResult = Eeprom_Read(currentPosition, readBuffer, ((UINT8)(13
      +                          )));
 25175                           
 25176                           ; BSR set to: 0
 25177  004E92  0E37               	movlw	low _readBuffer
 25178  004E94  6FA9               	movwf	Eeprom_Read@ReadBuffer& (0+255),b
 25179  004E96  0E03               	movlw	high _readBuffer
 25180  004E98  6FAA               	movwf	(Eeprom_Read@ReadBuffer+1)& (0+255),b
 25181  004E9A  0E0D               	movlw	13
 25182  004E9C  6FAB               	movwf	Eeprom_Read@DataLength& (0+255),b
 25183  004E9E  51E0               	movf	findEmptySpot@currentPosition& (0+255),w,b
 25184  004EA0  EC4C  F02E         	call	_Eeprom_Read
 25185  004EA4  0101               	movlb	1	; () banked
 25186  004EA6  6F02               	movwf	findEmptySpot@memoryOpResult& (0+255),b
 25187                           
 25188                           ; BSR set to: 1
 25189                           ;app_utils.c: 306: if (memoryOpResult == OP_FAILED)
 25190  004EA8  0502               	decf	findEmptySpot@memoryOpResult& (0+255),w,b
 25191  004EAA  A4D8               	btfss	status,2,c
 25192  004EAC  D002               	goto	l2800
 25193                           
 25194                           ; BSR set to: 1
 25195                           ;app_utils.c: 307: {
 25196                           ;app_utils.c: 308: currentState = SEARCH_FSM_ERROR;
 25197  004EAE  0E02               	movlw	2
 25198  004EB0  D005               	goto	L49
 25199  004EB2                     l2800:
 25200                           
 25201                           ;app_utils.c: 310: else if (memoryOpResult == OP_SUCCESS)
 25202                           
 25203                           ; BSR set to: 0
 25204  004EB2  0101               	movlb	1	; () banked
 25205  004EB4  5102               	movf	findEmptySpot@memoryOpResult& (0+255),w,b
 25206  004EB6  A4D8               	btfss	status,2,c
 25207  004EB8  D023               	goto	l2803
 25208                           
 25209                           ; BSR set to: 1
 25210                           ;app_utils.c: 311: {
 25211                           ;app_utils.c: 312: currentState = SEARCH_FSM_CHECK_NUMBER;
 25212  004EBA  0E01               	movlw	1
 25213  004EBC                     L49:
 25214  004EBC  0100               	movlb	0	; () banked
 25215  004EBE  D00D               	goto	L50
 25216  004EC0                     
 25217                           ; BSR set to: 0
 25218                           ;app_utils.c: 317: if (isNumberValid(readBuffer))
 25219                           
 25220                           ; BSR set to: 0
 25221  004EC0  0E37               	movlw	low _readBuffer
 25222  004EC2  6F7D               	movwf	isNumberValid@phoneNumber& (0+255),b
 25223  004EC4  0E03               	movlw	high _readBuffer
 25224  004EC6  6F7E               	movwf	(isNumberValid@phoneNumber+1)& (0+255),b
 25225  004EC8  EC2D  F02C         	call	_isNumberValid	;wreg free
 25226  004ECC  0900               	iorlw	0
 25227  004ECE  B4D8               	btfsc	status,2,c
 25228  004ED0  D006               	goto	l2805
 25229                           
 25230                           ;app_utils.c: 318: {
 25231                           ;app_utils.c: 319: currentPosition += 16;
 25232  004ED2  0E10               	movlw	16
 25233  004ED4  0100               	movlb	0	; () banked
 25234  004ED6  27E0               	addwf	findEmptySpot@currentPosition& (0+255),f,b
 25235                           
 25236                           ; BSR set to: 0
 25237                           ;app_utils.c: 320: currentState = SEARCH_FSM_START;
 25238  004ED8  0E00               	movlw	0
 25239  004EDA                     L50:
 25240  004EDA  6FC4               	movwf	findEmptySpot@currentState& (0+255),b
 25241                           
 25242                           ;app_utils.c: 321: }
 25243  004EDC  D011               	goto	l2803
 25244  004EDE                     l2805:
 25245                           
 25246                           ;app_utils.c: 322: else
 25247                           ;app_utils.c: 323: {
 25248                           ;app_utils.c: 324: currentState = SEARCH_FSM_NOT_FOUND;
 25249                           
 25250                           ; BSR set to: 0
 25251  004EDE  0E04               	movlw	4
 25252  004EE0  0100               	movlb	0	; () banked
 25253  004EE2  6FC4               	movwf	findEmptySpot@currentState& (0+255),b
 25254                           
 25255                           ; BSR set to: 0
 25256                           ;app_utils.c: 325: *positionInMemory = currentPosition;
 25257  004EE4  C100  FFD9         	movff	findEmptySpot@positionInMemory,fsr2l
 25258  004EE8  C101  FFDA         	movff	findEmptySpot@positionInMemory+1,fsr2h
 25259  004EEC  C0E0  FFDF         	movff	findEmptySpot@currentPosition,indf2
 25260                           
 25261                           ; BSR set to: 0
 25262                           ;app_utils.c: 331: }
 25263                           
 25264                           ; BSR set to: 0
 25265                           ;app_utils.c: 330: break;
 25266                           
 25267                           ;app_utils.c: 329: default:
 25268                           
 25269                           ; BSR set to: 0
 25270                           ;app_utils.c: 326: }
 25271                           ;app_utils.c: 327: break;
 25272  004EF0  D007               	goto	l2803
 25273  004EF2                     l2798:
 25274                           
 25275                           ; BSR set to: 0
 25276                           
 25277                           ; BSR set to: 0
 25278  004EF2  51C4               	movf	findEmptySpot@currentState& (0+255),w,b
 25279                           
 25280                           ; Switch size 1, requested type "space"
 25281                           ; Number of cases is 2, Range of values is 0 to 1
 25282                           ; switch strategies available:
 25283                           ; Name         Instructions Cycles
 25284                           ; simple_byte            7     4 (average)
 25285                           ;	Chosen strategy is simple_byte
 25286  004EF4  0A00               	xorlw	0	; case 0
 25287  004EF6  B4D8               	btfsc	status,2,c
 25288  004EF8  D7CC               	goto	l2799
 25289  004EFA  0A01               	xorlw	1	; case 1
 25290  004EFC  B4D8               	btfsc	status,2,c
 25291  004EFE  D7E0               	goto	l2804
 25292  004F00                     l2803:
 25293                           
 25294                           ;app_utils.c: 332: return currentState;
 25295                           
 25296                           ; BSR set to: 0
 25297  004F00  0100               	movlb	0	; () banked
 25298  004F02  51C4               	movf	findEmptySpot@currentState& (0+255),w,b
 25299  004F04  0012               	return	
 25300  004F06                     __end_of_findEmptySpot:
 25301                           	opt stack 0
 25302                           tosu	equ	0xFFF
 25303                           tosh	equ	0xFFE
 25304                           tosl	equ	0xFFD
 25305                           pclath	equ	0xFFA
 25306                           tblptru	equ	0xFF8
 25307                           tblptrh	equ	0xFF7
 25308                           tblptrl	equ	0xFF6
 25309                           tablat	equ	0xFF5
 25310                           prodh	equ	0xFF4
 25311                           prodl	equ	0xFF3
 25312                           intcon	equ	0xFF2
 25313                           intcon2	equ	0xFF1
 25314                           intcon3	equ	0xFF0
 25315                           indf0	equ	0xFEF
 25316                           postinc0	equ	0xFEE
 25317                           plusw0	equ	0xFEB
 25318                           fsr0h	equ	0xFEA
 25319                           fsr0l	equ	0xFE9
 25320                           wreg	equ	0xFE8
 25321                           indf1	equ	0xFE7
 25322                           postinc1	equ	0xFE6
 25323                           postdec1	equ	0xFE5
 25324                           fsr1h	equ	0xFE2
 25325                           fsr1l	equ	0xFE1
 25326                           indf2	equ	0xFDF
 25327                           postinc2	equ	0xFDE
 25328                           postdec2	equ	0xFDD
 25329                           plusw2	equ	0xFDB
 25330                           fsr2h	equ	0xFDA
 25331                           fsr2l	equ	0xFD9
 25332                           status	equ	0xFD8
 25333                           
 25334 ;; *************** function _isNumberValid *****************
 25335 ;; Defined at:
 25336 ;;		line 126 in file "../Source/c/04_App/app_utils.c"
 25337 ;; Parameters:    Size  Location     Type
 25338 ;;  phoneNumber     2   29[BANK0 ] PTR unsigned char 
 25339 ;;		 -> readBuffer(13), smsText(20), 
 25340 ;; Auto vars:     Size  Location     Type
 25341 ;;  i               1   33[BANK0 ] unsigned char 
 25342 ;;  isNumberOk      1   32[BANK0 ] unsigned char 
 25343 ;; Return value:  Size  Location     Type
 25344 ;;                  1    wreg      unsigned char 
 25345 ;; Registers used:
 25346 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 25347 ;; Tracked objects:
 25348 ;;		On entry : 0/0
 25349 ;;		On exit  : 0/0
 25350 ;;		Unchanged: 0/0
 25351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25352 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25353 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25354 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25355 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25356 ;;Total ram usage:        5 bytes
 25357 ;; Hardware stack levels used:    1
 25358 ;; Hardware stack levels required when called:   11
 25359 ;; This function calls:
 25360 ;;		Nothing
 25361 ;; This function is called by:
 25362 ;;		_parseCommand
 25363 ;;		_isNumberInMemory
 25364 ;;		_isMasterNumber
 25365 ;;		_findEmptySpot
 25366 ;; This function uses a non-reentrant model
 25367 ;;
 25368                           
 25369                           	psect	text119
 25370  00585A                     __ptext119:
 25371                           	opt stack 0
 25372  00585A                     _isNumberValid:
 25373                           	opt stack 14
 25374                           
 25375                           ;app_utils.c: 128: bool isNumberOk = 0;
 25376                           
 25377                           ; BSR set to: 0
 25378                           ;incstack = 0
 25379  00585A  0E00               	movlw	0
 25380  00585C  0100               	movlb	0	; () banked
 25381  00585E  6F80               	movwf	isNumberValid@isNumberOk& (0+255),b
 25382                           
 25383                           ;app_utils.c: 129: uint8_t i = 0;
 25384  005860  0E00               	movlw	0
 25385  005862  6F81               	movwf	isNumberValid@i& (0+255),b
 25386                           
 25387                           ; BSR set to: 0
 25388                           ;app_utils.c: 130: if (phoneNumber[0] == '+')
 25389  005864  C07D  FFD9         	movff	isNumberValid@phoneNumber,fsr2l
 25390  005868  C07E  FFDA         	movff	isNumberValid@phoneNumber+1,fsr2h
 25391  00586C  0E2B               	movlw	43
 25392  00586E  18DE               	xorwf	postinc2,w,c
 25393  005870  A4D8               	btfss	status,2,c
 25394  005872  D024               	goto	u13390
 25395                           
 25396                           ; BSR set to: 0
 25397                           ;app_utils.c: 131: {
 25398                           ;app_utils.c: 132: for (i = 1; i < ((UINT8)(13)); i++)
 25399  005874  0E01               	movlw	1
 25400  005876  6F81               	movwf	isNumberValid@i& (0+255),b
 25401  005878                     l14269:
 25402                           
 25403                           ; BSR set to: 0
 25404  005878  0E0C               	movlw	12
 25405  00587A  6581               	cpfsgt	isNumberValid@i& (0+255),b
 25406  00587C  D001               	goto	l2759
 25407  00587E  D01E               	goto	u13390
 25408  005880                     l2759:
 25409                           
 25410                           ; BSR set to: 0
 25411                           ;app_utils.c: 133: {
 25412                           ;app_utils.c: 134: if (phoneNumber[i] >= '0' && phoneNumber[i] <= '9')
 25413                           
 25414                           ; BSR set to: 0
 25415  005880  5181               	movf	isNumberValid@i& (0+255),w,b
 25416  005882  0D01               	mullw	1
 25417  005884  50F3               	movf	prodl,w,c
 25418  005886  257D               	addwf	isNumberValid@phoneNumber& (0+255),w,b
 25419  005888  6ED9               	movwf	fsr2l,c
 25420  00588A  50F4               	movf	prodh,w,c
 25421  00588C  217E               	addwfc	(isNumberValid@phoneNumber+1)& (0+255),w,b
 25422  00588E  6EDA               	movwf	fsr2h,c
 25423  005890  0E2F               	movlw	47
 25424  005892  64DF               	cpfsgt	indf2,c
 25425  005894  D00E               	goto	l2761
 25426                           
 25427                           ; BSR set to: 0
 25428  005896  5181               	movf	isNumberValid@i& (0+255),w,b
 25429  005898  0D01               	mullw	1
 25430  00589A  50F3               	movf	prodl,w,c
 25431  00589C  257D               	addwf	isNumberValid@phoneNumber& (0+255),w,b
 25432  00589E  6ED9               	movwf	fsr2l,c
 25433  0058A0  50F4               	movf	prodh,w,c
 25434  0058A2  217E               	addwfc	(isNumberValid@phoneNumber+1)& (0+255),w,b
 25435  0058A4  6EDA               	movwf	fsr2h,c
 25436  0058A6  0E3A               	movlw	58
 25437  0058A8  60DF               	cpfslt	indf2,c
 25438  0058AA  D003               	goto	l2761
 25439                           
 25440                           ; BSR set to: 0
 25441                           ;app_utils.c: 135: {
 25442                           ;app_utils.c: 136: isNumberOk = 1;
 25443  0058AC  0E01               	movlw	1
 25444  0058AE  6F80               	movwf	isNumberValid@isNumberOk& (0+255),b
 25445                           
 25446                           ;app_utils.c: 137: }
 25447  0058B0  D003               	goto	l2762
 25448  0058B2                     l2761:
 25449                           
 25450                           ; BSR set to: 0
 25451                           ;app_utils.c: 138: else
 25452                           ;app_utils.c: 139: {
 25453                           ;app_utils.c: 140: isNumberOk = 0;
 25454                           
 25455                           ; BSR set to: 0
 25456  0058B2  0E00               	movlw	0
 25457  0058B4  6F80               	movwf	isNumberValid@isNumberOk& (0+255),b
 25458                           
 25459                           ;app_utils.c: 141: break;
 25460  0058B6  D002               	goto	u13390
 25461  0058B8                     l2762:
 25462                           
 25463                           ; BSR set to: 0
 25464                           
 25465                           ; BSR set to: 0
 25466  0058B8  2B81               	incf	isNumberValid@i& (0+255),f,b
 25467  0058BA  D7DE               	goto	l14269
 25468  0058BC                     u13390:
 25469                           
 25470                           ; BSR set to: 0
 25471                           ;app_utils.c: 142: }
 25472                           ;app_utils.c: 143: }
 25473                           ;app_utils.c: 144: }
 25474                           ;app_utils.c: 145: return isNumberOk;
 25475                           
 25476                           ; BSR set to: 0
 25477                           
 25478                           ; BSR set to: 0
 25479  0058BC  5180               	movf	isNumberValid@isNumberOk& (0+255),w,b
 25480  0058BE  0012               	return	
 25481  0058C0                     __end_of_isNumberValid:
 25482                           	opt stack 0
 25483                           tosu	equ	0xFFF
 25484                           tosh	equ	0xFFE
 25485                           tosl	equ	0xFFD
 25486                           pclath	equ	0xFFA
 25487                           tblptru	equ	0xFF8
 25488                           tblptrh	equ	0xFF7
 25489                           tblptrl	equ	0xFF6
 25490                           tablat	equ	0xFF5
 25491                           prodh	equ	0xFF4
 25492                           prodl	equ	0xFF3
 25493                           intcon	equ	0xFF2
 25494                           intcon2	equ	0xFF1
 25495                           intcon3	equ	0xFF0
 25496                           indf0	equ	0xFEF
 25497                           postinc0	equ	0xFEE
 25498                           plusw0	equ	0xFEB
 25499                           fsr0h	equ	0xFEA
 25500                           fsr0l	equ	0xFE9
 25501                           wreg	equ	0xFE8
 25502                           indf1	equ	0xFE7
 25503                           postinc1	equ	0xFE6
 25504                           postdec1	equ	0xFE5
 25505                           fsr1h	equ	0xFE2
 25506                           fsr1l	equ	0xFE1
 25507                           indf2	equ	0xFDF
 25508                           postinc2	equ	0xFDE
 25509                           postdec2	equ	0xFDD
 25510                           plusw2	equ	0xFDB
 25511                           fsr2h	equ	0xFDA
 25512                           fsr2l	equ	0xFD9
 25513                           status	equ	0xFD8
 25514                           
 25515 ;; *************** function _Eeprom_Read *****************
 25516 ;; Defined at:
 25517 ;;		line 104 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/05_Eeprom/eeprom_if.c"
 25518 ;; Parameters:    Size  Location     Type
 25519 ;;  MemoryAddres    1    wreg     unsigned char 
 25520 ;;  ReadBuffer      2   73[BANK0 ] PTR unsigned char 
 25521 ;;		 -> readBuffer(13), memoryPreamble(4), 
 25522 ;;  DataLength      1   75[BANK0 ] unsigned char 
 25523 ;; Auto vars:     Size  Location     Type
 25524 ;;  MemoryAddres    1   76[BANK0 ] unsigned char 
 25525 ;;  QuerySts        1   79[BANK0 ] enum E8932
 25526 ;;  ReadSts         1   78[BANK0 ] enum E8958
 25527 ;;  SlaveAddress    1   77[BANK0 ] const unsigned char 
 25528 ;; Return value:  Size  Location     Type
 25529 ;;                  1    wreg      enum E8958
 25530 ;; Registers used:
 25531 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 25532 ;; Tracked objects:
 25533 ;;		On entry : 0/0
 25534 ;;		On exit  : 0/0
 25535 ;;		Unchanged: 0/0
 25536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25537 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25538 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25540 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25541 ;;Total ram usage:        7 bytes
 25542 ;; Hardware stack levels used:    1
 25543 ;; Hardware stack levels required when called:   16
 25544 ;; This function calls:
 25545 ;;		_I2cSlv_QueryI2cData
 25546 ;; This function is called by:
 25547 ;;		_initEeprom
 25548 ;;		_isNumberInMemory
 25549 ;;		_isMasterNumber
 25550 ;;		_findEmptySpot
 25551 ;; This function uses a non-reentrant model
 25552 ;;
 25553                           
 25554                           	psect	text120
 25555  005C98                     __ptext120:
 25556                           	opt stack 0
 25557  005C98                     _Eeprom_Read:
 25558                           	opt stack 9
 25559                           
 25560                           ; BSR set to: 0
 25561                           ;incstack = 0
 25562                           ;Eeprom_Read@MemoryAddress stored from wreg
 25563  005C98  0100               	movlb	0	; () banked
 25564  005C9A  6FAC               	movwf	Eeprom_Read@MemoryAddress& (0+255),b
 25565                           
 25566                           ;eeprom_if.c: 106: const UINT8 SlaveAddress = 0x50;
 25567  005C9C  0E50               	movlw	80
 25568  005C9E  0100               	movlb	0	; () banked
 25569  005CA0  6FAD               	movwf	Eeprom_Read@SlaveAddress& (0+255),b
 25570                           
 25571                           ;eeprom_if.c: 107: I2cOpStsType QuerySts = OP_IN_PROGRESS;
 25572  005CA2  0E00               	movlw	0
 25573  005CA4  6FAF               	movwf	Eeprom_Read@QuerySts& (0+255),b
 25574                           
 25575                           ;eeprom_if.c: 108: EepromStsType ReadSts = OP_PENDING;
 25576  005CA6  0E02               	movlw	2
 25577  005CA8  6FAE               	movwf	Eeprom_Read@ReadSts& (0+255),b
 25578                           
 25579                           ; BSR set to: 0
 25580                           ;eeprom_if.c: 109: ReadAddress[0] = MemoryAddress;
 25581  005CAA  C0AC  F1FA         	movff	Eeprom_Read@MemoryAddress,_ReadAddress
 25582                           
 25583                           ; BSR set to: 0
 25584                           ;eeprom_if.c: 111: QuerySts = I2cSlv_QueryI2cData(ReadAddress, 1, ReadBuffer, DataLength
      +                          , SlaveAddress);
 25585  005CAE  0EFA               	movlw	low _ReadAddress
 25586  005CB0  6FA2               	movwf	I2cSlv_QueryI2cData@TxBuffer& (0+255),b
 25587  005CB2  0E01               	movlw	high _ReadAddress
 25588  005CB4  6FA3               	movwf	(I2cSlv_QueryI2cData@TxBuffer+1)& (0+255),b
 25589  005CB6  0E01               	movlw	1
 25590  005CB8  6FA4               	movwf	I2cSlv_QueryI2cData@TxLen& (0+255),b
 25591  005CBA  C0A9  F0A5         	movff	Eeprom_Read@ReadBuffer,I2cSlv_QueryI2cData@RxBuffer
 25592  005CBE  C0AA  F0A6         	movff	Eeprom_Read@ReadBuffer+1,I2cSlv_QueryI2cData@RxBuffer+1
 25593  005CC2  C0AB  F0A7         	movff	Eeprom_Read@DataLength,I2cSlv_QueryI2cData@RxLen
 25594  005CC6  C0AD  F0A8         	movff	Eeprom_Read@SlaveAddress,I2cSlv_QueryI2cData@SlaveAddr
 25595  005CCA  EC14  F01E         	call	_I2cSlv_QueryI2cData	;wreg free
 25596  005CCE  0100               	movlb	0	; () banked
 25597  005CD0  6FAF               	movwf	Eeprom_Read@QuerySts& (0+255),b
 25598                           
 25599                           ; BSR set to: 0
 25600                           ;eeprom_if.c: 113: if (QuerySts == OP_COMPLETE)
 25601  005CD2  05AF               	decf	Eeprom_Read@QuerySts& (0+255),w,b
 25602  005CD4  A4D8               	btfss	status,2,c
 25603  005CD6  D002               	goto	l2037
 25604                           
 25605                           ; BSR set to: 0
 25606                           ;eeprom_if.c: 114: {
 25607                           ;eeprom_if.c: 115: ReadSts = OP_SUCCESS;
 25608  005CD8  0E00               	movlw	0
 25609  005CDA  D005               	goto	L51
 25610  005CDC                     l2037:
 25611                           
 25612                           ; BSR set to: 0
 25613                           ;eeprom_if.c: 117: else if (QuerySts == OP_TIMEOUT)
 25614                           
 25615                           ; BSR set to: 0
 25616  005CDC  0E02               	movlw	2
 25617  005CDE  19AF               	xorwf	Eeprom_Read@QuerySts& (0+255),w,b
 25618  005CE0  A4D8               	btfss	status,2,c
 25619  005CE2  D002               	goto	l2039
 25620                           
 25621                           ; BSR set to: 0
 25622                           ;eeprom_if.c: 118: {
 25623                           ;eeprom_if.c: 119: ReadSts = OP_FAILED;
 25624  005CE4  0E01               	movlw	1
 25625  005CE6                     L51:
 25626  005CE6  6FAE               	movwf	Eeprom_Read@ReadSts& (0+255),b
 25627  005CE8                     l2039:
 25628                           
 25629                           ; BSR set to: 0
 25630                           ;eeprom_if.c: 120: }
 25631                           ;eeprom_if.c: 121: return ReadSts;
 25632                           
 25633                           ; BSR set to: 0
 25634  005CE8  51AE               	movf	Eeprom_Read@ReadSts& (0+255),w,b
 25635  005CEA  0012               	return	
 25636  005CEC                     __end_of_Eeprom_Read:
 25637                           	opt stack 0
 25638                           tosu	equ	0xFFF
 25639                           tosh	equ	0xFFE
 25640                           tosl	equ	0xFFD
 25641                           pclath	equ	0xFFA
 25642                           tblptru	equ	0xFF8
 25643                           tblptrh	equ	0xFF7
 25644                           tblptrl	equ	0xFF6
 25645                           tablat	equ	0xFF5
 25646                           prodh	equ	0xFF4
 25647                           prodl	equ	0xFF3
 25648                           intcon	equ	0xFF2
 25649                           intcon2	equ	0xFF1
 25650                           intcon3	equ	0xFF0
 25651                           indf0	equ	0xFEF
 25652                           postinc0	equ	0xFEE
 25653                           plusw0	equ	0xFEB
 25654                           fsr0h	equ	0xFEA
 25655                           fsr0l	equ	0xFE9
 25656                           wreg	equ	0xFE8
 25657                           indf1	equ	0xFE7
 25658                           postinc1	equ	0xFE6
 25659                           postdec1	equ	0xFE5
 25660                           fsr1h	equ	0xFE2
 25661                           fsr1l	equ	0xFE1
 25662                           indf2	equ	0xFDF
 25663                           postinc2	equ	0xFDE
 25664                           postdec2	equ	0xFDD
 25665                           plusw2	equ	0xFDB
 25666                           fsr2h	equ	0xFDA
 25667                           fsr2l	equ	0xFD9
 25668                           status	equ	0xFD8
 25669                           
 25670 ;; *************** function _I2cSlv_QueryI2cData *****************
 25671 ;; Defined at:
 25672 ;;		line 381 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 25673 ;; Parameters:    Size  Location     Type
 25674 ;;  TxBuffer        2   66[BANK0 ] PTR unsigned char 
 25675 ;;		 -> ReadAddress(1), 
 25676 ;;  TxLen           1   68[BANK0 ] unsigned char 
 25677 ;;  RxBuffer        2   69[BANK0 ] PTR unsigned char 
 25678 ;;		 -> readBuffer(13), memoryPreamble(4), 
 25679 ;;  RxLen           1   71[BANK0 ] unsigned char 
 25680 ;;  SlaveAddr       1   72[BANK0 ] unsigned char 
 25681 ;; Auto vars:     Size  Location     Type
 25682 ;;		None
 25683 ;; Return value:  Size  Location     Type
 25684 ;;                  1    wreg      enum E8947
 25685 ;; Registers used:
 25686 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 25687 ;; Tracked objects:
 25688 ;;		On entry : 0/0
 25689 ;;		On exit  : 0/0
 25690 ;;		Unchanged: 0/0
 25691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25692 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25693 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25694 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25695 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25696 ;;Total ram usage:        7 bytes
 25697 ;; Hardware stack levels used:    1
 25698 ;; Hardware stack levels required when called:   15
 25699 ;; This function calls:
 25700 ;;		_I2cSlv_I2cReadMsgSts
 25701 ;;		_I2cSlv_ReceiveI2cMsg
 25702 ;;		_I2cSlv_SendI2cMsg
 25703 ;;		_OsTmr_GetTimerStatus
 25704 ;;		_OsTmr_StartTimer
 25705 ;;		_OsTmr_Wait
 25706 ;; This function is called by:
 25707 ;;		_Eeprom_Read
 25708 ;; This function uses a non-reentrant model
 25709 ;;
 25710                           
 25711                           	psect	text121
 25712  003C28                     __ptext121:
 25713                           	opt stack 0
 25714  003C28                     _I2cSlv_QueryI2cData:
 25715                           	opt stack 9
 25716                           
 25717                           ;i2c_slv.c: 383: static I2cOpStateType I2cOpState = ASK_DATA;
 25718                           ;i2c_slv.c: 384: static SwTimerType QueryTimer;
 25719                           ;i2c_slv.c: 385: static SwTimerType TimeoutTimer;
 25720                           ;i2c_slv.c: 386: static I2cOpStsType Ret;
 25721                           ;i2c_slv.c: 388: switch(I2cOpState)
 25722                           
 25723                           ; BSR set to: 0
 25724                           ;incstack = 0
 25725  003C28  D05B               	goto	l1440
 25726  003C2A                     
 25727                           ;i2c_slv.c: 392: I2cSlv_SendI2cMsg(TxBuffer, SlaveAddr, TxLen);
 25728  003C2A  C0A2  F080         	movff	I2cSlv_QueryI2cData@TxBuffer,I2cSlv_SendI2cMsg@TxBuffer
 25729  003C2E  C0A3  F081         	movff	I2cSlv_QueryI2cData@TxBuffer+1,I2cSlv_SendI2cMsg@TxBuffer+1
 25730  003C32  C0A8  F082         	movff	I2cSlv_QueryI2cData@SlaveAddr,I2cSlv_SendI2cMsg@SlaveAddr
 25731  003C36  C0A4  F083         	movff	I2cSlv_QueryI2cData@TxLen,I2cSlv_SendI2cMsg@DataLenght
 25732  003C3A  ECC9  F031         	call	_I2cSlv_SendI2cMsg	;wreg free
 25733                           
 25734                           ;i2c_slv.c: 394: I2cOpState = REQ_DATA;
 25735  003C3E  0E01               	movlw	1
 25736  003C40  0101               	movlb	1	; () banked
 25737  003C42  6FE2               	movwf	I2cSlv_QueryI2cData@I2cOpState& (0+255),b
 25738                           
 25739                           ; BSR set to: 1
 25740                           ;i2c_slv.c: 396: Ret = OP_IN_PROGRESS;
 25741  003C44  0E00               	movlw	0
 25742  003C46  D04A               	goto	L55
 25743  003C48                     
 25744                           ; BSR set to: 1
 25745                           ;i2c_slv.c: 401: if (OsTmr_Wait(&QueryTimer,500u) == DelayExpired)
 25746                           
 25747                           ; BSR set to: 1
 25748  003C48  0EDB               	movlw	low I2cSlv_QueryI2cData@QueryTimer
 25749  003C4A  0100               	movlb	0	; () banked
 25750  003C4C  6F9B               	movwf	OsTmr_Wait@WaitTimer& (0+255),b
 25751  003C4E  0E04               	movlw	high I2cSlv_QueryI2cData@QueryTimer
 25752  003C50  6F9C               	movwf	(OsTmr_Wait@WaitTimer+1)& (0+255),b
 25753  003C52  0EF4               	movlw	244
 25754  003C54  6F9D               	movwf	OsTmr_Wait@DelayMs& (0+255),b
 25755  003C56  0E01               	movlw	1
 25756  003C58  6F9E               	movwf	(OsTmr_Wait@DelayMs+1)& (0+255),b
 25757  003C5A  0E00               	movlw	0
 25758  003C5C  6F9F               	movwf	(OsTmr_Wait@DelayMs+2)& (0+255),b
 25759  003C5E  0E00               	movlw	0
 25760  003C60  6FA0               	movwf	(OsTmr_Wait@DelayMs+3)& (0+255),b
 25761  003C62  EC03  F02A         	call	_OsTmr_Wait	;wreg free
 25762  003C66  06E8               	decf	wreg,f,c
 25763  003C68  A4D8               	btfss	status,2,c
 25764  003C6A  D036               	goto	l1448
 25765                           
 25766                           ;i2c_slv.c: 402: {
 25767                           ;i2c_slv.c: 403: OsTmr_StartTimer(&TimeoutTimer,500u * 5u);
 25768  003C6C  0E44               	movlw	low I2cSlv_QueryI2cData@TimeoutTimer
 25769  003C6E  0100               	movlb	0	; () banked
 25770  003C70  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 25771  003C72  0E03               	movlw	high I2cSlv_QueryI2cData@TimeoutTimer
 25772  003C74  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 25773  003C76  0EC4               	movlw	196
 25774  003C78  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 25775  003C7A  0E09               	movlw	9
 25776  003C7C  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 25777  003C7E  0E00               	movlw	0
 25778  003C80  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 25779  003C82  0E00               	movlw	0
 25780  003C84  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 25781  003C86  ECC0  F02C         	call	_OsTmr_StartTimer	;wreg free
 25782                           
 25783                           ;i2c_slv.c: 404: I2cSlv_ReceiveI2cMsg(RxBuffer, SlaveAddr, RxLen);
 25784  003C8A  C0A5  F080         	movff	I2cSlv_QueryI2cData@RxBuffer,I2cSlv_ReceiveI2cMsg@RxBuffer
 25785  003C8E  C0A6  F081         	movff	I2cSlv_QueryI2cData@RxBuffer+1,I2cSlv_ReceiveI2cMsg@RxBuffer+1
 25786  003C92  C0A8  F082         	movff	I2cSlv_QueryI2cData@SlaveAddr,I2cSlv_ReceiveI2cMsg@SlaveAddr
 25787  003C96  C0A7  F083         	movff	I2cSlv_QueryI2cData@RxLen,I2cSlv_ReceiveI2cMsg@DataLenght
 25788  003C9A  EC6A  F031         	call	_I2cSlv_ReceiveI2cMsg	;wreg free
 25789                           
 25790                           ;i2c_slv.c: 405: I2cOpState = GET_DATA;
 25791  003C9E  0E02               	movlw	2
 25792  003CA0  0101               	movlb	1	; () banked
 25793  003CA2  6FE2               	movwf	I2cSlv_QueryI2cData@I2cOpState& (0+255),b
 25794  003CA4  D019               	goto	l1448
 25795  003CA6                     
 25796                           ; BSR set to: 1
 25797                           ;i2c_slv.c: 413: if (I2cSlv_I2cReadMsgSts() == MessageReceived)
 25798                           
 25799                           ; BSR set to: 1
 25800  003CA6  ECAC  F034         	call	_I2cSlv_I2cReadMsgSts	;wreg free
 25801  003CAA  06E8               	decf	wreg,f,c
 25802  003CAC  A4D8               	btfss	status,2,c
 25803  003CAE  D005               	goto	l1446
 25804                           
 25805                           ;i2c_slv.c: 414: {
 25806                           ;i2c_slv.c: 416: I2cOpState = ASK_DATA;
 25807  003CB0  0E00               	movlw	0
 25808  003CB2  0101               	movlb	1	; () banked
 25809  003CB4  6FE2               	movwf	I2cSlv_QueryI2cData@I2cOpState& (0+255),b
 25810                           
 25811                           ;i2c_slv.c: 418: Ret = OP_COMPLETE;
 25812  003CB6  0E01               	movlw	1
 25813  003CB8  D011               	goto	L55
 25814  003CBA                     l1446:
 25815                           
 25816                           ;i2c_slv.c: 420: else
 25817                           ;i2c_slv.c: 421: {
 25818                           ;i2c_slv.c: 422: if (OsTmr_GetTimerStatus(&TimeoutTimer) == SwTimerExpired)
 25819                           
 25820                           ; BSR set to: 1
 25821  003CBA  0E44               	movlw	low I2cSlv_QueryI2cData@TimeoutTimer
 25822  003CBC  0100               	movlb	0	; () banked
 25823  003CBE  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 25824  003CC0  0E03               	movlw	high I2cSlv_QueryI2cData@TimeoutTimer
 25825  003CC2  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 25826  003CC4  ECA9  F028         	call	_OsTmr_GetTimerStatus	;wreg free
 25827  003CC8  06E8               	decf	wreg,f,c
 25828  003CCA  A4D8               	btfss	status,2,c
 25829  003CCC  D005               	goto	l1448
 25830                           
 25831                           ;i2c_slv.c: 423: {
 25832                           ;i2c_slv.c: 425: I2cOpState = ASK_DATA;
 25833  003CCE  0E00               	movlw	0
 25834  003CD0  0101               	movlb	1	; () banked
 25835  003CD2  6FE2               	movwf	I2cSlv_QueryI2cData@I2cOpState& (0+255),b
 25836                           
 25837                           ;i2c_slv.c: 427: Ret = OP_TIMEOUT;
 25838  003CD4  0E02               	movlw	2
 25839  003CD6  D002               	goto	L55
 25840  003CD8                     l1448:
 25841                           
 25842                           ;i2c_slv.c: 429: else
 25843                           ;i2c_slv.c: 430: {
 25844                           ;i2c_slv.c: 432: Ret = OP_IN_PROGRESS;
 25845                           
 25846                           ; BSR set to: 1
 25847  003CD8  0E00               	movlw	0
 25848  003CDA  0101               	movlb	1	; () banked
 25849  003CDC                     L55:
 25850  003CDC  6FE1               	movwf	I2cSlv_QueryI2cData@Ret& (0+255),b
 25851                           
 25852                           ; BSR set to: 1
 25853                           ;i2c_slv.c: 439: }
 25854                           
 25855                           ; BSR set to: 1
 25856                           ;i2c_slv.c: 438: break;
 25857                           
 25858                           ;i2c_slv.c: 437: default:
 25859                           
 25860                           ; BSR set to: 1
 25861                           ;i2c_slv.c: 433: }
 25862                           ;i2c_slv.c: 434: }
 25863                           ;i2c_slv.c: 435: break;
 25864                           
 25865                           ; BSR set to: 1
 25866  003CDE  D00B               	goto	l1442
 25867  003CE0                     l1440:
 25868                           
 25869                           ; BSR set to: 1
 25870  003CE0  0101               	movlb	1	; () banked
 25871  003CE2  51E2               	movf	I2cSlv_QueryI2cData@I2cOpState& (0+255),w,b
 25872                           
 25873                           ; Switch size 1, requested type "space"
 25874                           ; Number of cases is 3, Range of values is 0 to 2
 25875                           ; switch strategies available:
 25876                           ; Name         Instructions Cycles
 25877                           ; simple_byte           10     6 (average)
 25878                           ;	Chosen strategy is simple_byte
 25879  003CE4  0A00               	xorlw	0	; case 0
 25880  003CE6  B4D8               	btfsc	status,2,c
 25881  003CE8  D7A0               	goto	l1441
 25882  003CEA  0A01               	xorlw	1	; case 1
 25883  003CEC  B4D8               	btfsc	status,2,c
 25884  003CEE  D7AC               	goto	l1443
 25885  003CF0  0A03               	xorlw	3	; case 2
 25886  003CF2  B4D8               	btfsc	status,2,c
 25887  003CF4  D7D8               	goto	l1445
 25888  003CF6                     l1442:
 25889                           
 25890                           ; BSR set to: 1
 25891                           ;i2c_slv.c: 441: return Ret;
 25892                           
 25893                           ; BSR set to: 1
 25894  003CF6  51E1               	movf	I2cSlv_QueryI2cData@Ret& (0+255),w,b
 25895  003CF8  0012               	return	
 25896  003CFA                     __end_of_I2cSlv_QueryI2cData:
 25897                           	opt stack 0
 25898                           tosu	equ	0xFFF
 25899                           tosh	equ	0xFFE
 25900                           tosl	equ	0xFFD
 25901                           pclath	equ	0xFFA
 25902                           tblptru	equ	0xFF8
 25903                           tblptrh	equ	0xFF7
 25904                           tblptrl	equ	0xFF6
 25905                           tablat	equ	0xFF5
 25906                           prodh	equ	0xFF4
 25907                           prodl	equ	0xFF3
 25908                           intcon	equ	0xFF2
 25909                           intcon2	equ	0xFF1
 25910                           intcon3	equ	0xFF0
 25911                           indf0	equ	0xFEF
 25912                           postinc0	equ	0xFEE
 25913                           plusw0	equ	0xFEB
 25914                           fsr0h	equ	0xFEA
 25915                           fsr0l	equ	0xFE9
 25916                           wreg	equ	0xFE8
 25917                           indf1	equ	0xFE7
 25918                           postinc1	equ	0xFE6
 25919                           postdec1	equ	0xFE5
 25920                           fsr1h	equ	0xFE2
 25921                           fsr1l	equ	0xFE1
 25922                           indf2	equ	0xFDF
 25923                           postinc2	equ	0xFDE
 25924                           postdec2	equ	0xFDD
 25925                           plusw2	equ	0xFDB
 25926                           fsr2h	equ	0xFDA
 25927                           fsr2l	equ	0xFD9
 25928                           status	equ	0xFD8
 25929                           
 25930 ;; *************** function _OsTmr_Wait *****************
 25931 ;; Defined at:
 25932 ;;		line 154 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 25933 ;; Parameters:    Size  Location     Type
 25934 ;;  WaitTimer       2   59[BANK0 ] PTR struct _SwTimerType
 25935 ;;		 -> Terminal@SwTimer(11), I2cSlv_QueryI2cData@QueryTimer(11), 
 25936 ;;  DelayMs         4   61[BANK0 ] unsigned long 
 25937 ;; Auto vars:     Size  Location     Type
 25938 ;;  Ret             1   65[BANK0 ] enum E7749
 25939 ;; Return value:  Size  Location     Type
 25940 ;;                  1    wreg      enum E7749
 25941 ;; Registers used:
 25942 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 25943 ;; Tracked objects:
 25944 ;;		On entry : 0/0
 25945 ;;		On exit  : 0/0
 25946 ;;		Unchanged: 0/0
 25947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25948 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25949 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25950 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25951 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25952 ;;Total ram usage:        7 bytes
 25953 ;; Hardware stack levels used:    1
 25954 ;; Hardware stack levels required when called:   14
 25955 ;; This function calls:
 25956 ;;		_OsTmr_GetTimerStatus
 25957 ;;		_OsTmr_StartTimer
 25958 ;; This function is called by:
 25959 ;;		_I2cSlv_QueryI2cData
 25960 ;;		_Terminal
 25961 ;; This function uses a non-reentrant model
 25962 ;;
 25963                           
 25964                           	psect	text122
 25965  005406                     __ptext122:
 25966                           	opt stack 0
 25967  005406                     _OsTmr_Wait:
 25968                           	opt stack 11
 25969                           
 25970                           ;os_timers.c: 156: DelayStatusType Ret = DelayNotExpired;
 25971                           
 25972                           ; BSR set to: 1
 25973                           ;incstack = 0
 25974  005406  0E00               	movlw	0
 25975  005408  0100               	movlb	0	; () banked
 25976  00540A  6FA1               	movwf	OsTmr_Wait@Ret& (0+255),b
 25977                           
 25978                           ;os_timers.c: 158: switch (WaitTimer->WaitState)
 25979  00540C  D02D               	goto	l855
 25980  00540E                     
 25981                           ; BSR set to: 0
 25982                           ;os_timers.c: 162: OsTmr_StartTimer(WaitTimer,DelayMs);
 25983                           
 25984                           ; BSR set to: 0
 25985  00540E  C09B  F081         	movff	OsTmr_Wait@WaitTimer,OsTmr_StartTimer@Timer
 25986  005412  C09C  F082         	movff	OsTmr_Wait@WaitTimer+1,OsTmr_StartTimer@Timer+1
 25987  005416  C09D  F083         	movff	OsTmr_Wait@DelayMs,OsTmr_StartTimer@Timeout
 25988  00541A  C09E  F084         	movff	OsTmr_Wait@DelayMs+1,OsTmr_StartTimer@Timeout+1
 25989  00541E  C09F  F085         	movff	OsTmr_Wait@DelayMs+2,OsTmr_StartTimer@Timeout+2
 25990  005422  C0A0  F086         	movff	OsTmr_Wait@DelayMs+3,OsTmr_StartTimer@Timeout+3
 25991  005426  ECC0  F02C         	call	_OsTmr_StartTimer	;wreg free
 25992                           
 25993                           ;os_timers.c: 164: WaitTimer->WaitState = WtWait;
 25994  00542A  0100               	movlb	0	; () banked
 25995  00542C  EE20 F00A          	lfsr	2,10
 25996  005430  519B               	movf	OsTmr_Wait@WaitTimer& (0+255),w,b
 25997  005432  26D9               	addwf	fsr2l,f,c
 25998  005434  519C               	movf	(OsTmr_Wait@WaitTimer+1)& (0+255),w,b
 25999  005436  22DA               	addwfc	fsr2h,f,c
 26000  005438  0E01               	movlw	1
 26001  00543A  6EDF               	movwf	indf2,c
 26002                           
 26003                           ;os_timers.c: 165: break;
 26004  00543C  D022               	goto	l857
 26005  00543E                     
 26006                           ; BSR set to: 0
 26007                           ;os_timers.c: 169: if (OsTmr_GetTimerStatus(WaitTimer) == SwTimerExpired)
 26008                           
 26009                           ; BSR set to: 0
 26010  00543E  C09B  F095         	movff	OsTmr_Wait@WaitTimer,OsTmr_GetTimerStatus@Timer
 26011  005442  C09C  F096         	movff	OsTmr_Wait@WaitTimer+1,OsTmr_GetTimerStatus@Timer+1
 26012  005446  ECA9  F028         	call	_OsTmr_GetTimerStatus	;wreg free
 26013  00544A  06E8               	decf	wreg,f,c
 26014  00544C  A4D8               	btfss	status,2,c
 26015  00544E  D019               	goto	l857
 26016                           
 26017                           ;os_timers.c: 170: {
 26018                           ;os_timers.c: 172: WaitTimer->WaitState = WtStartSwTimer;
 26019  005450  0100               	movlb	0	; () banked
 26020  005452  EE20 F00A          	lfsr	2,10
 26021  005456  519B               	movf	OsTmr_Wait@WaitTimer& (0+255),w,b
 26022  005458  26D9               	addwf	fsr2l,f,c
 26023  00545A  519C               	movf	(OsTmr_Wait@WaitTimer+1)& (0+255),w,b
 26024  00545C  22DA               	addwfc	fsr2h,f,c
 26025  00545E  0E00               	movlw	0
 26026  005460  6EDF               	movwf	indf2,c
 26027                           
 26028                           ; BSR set to: 0
 26029                           ;os_timers.c: 174: Ret = DelayExpired;
 26030  005462  0E01               	movlw	1
 26031  005464  6FA1               	movwf	OsTmr_Wait@Ret& (0+255),b
 26032                           
 26033                           ; BSR set to: 0
 26034                           ;os_timers.c: 180: }
 26035                           
 26036                           ; BSR set to: 0
 26037                           ;os_timers.c: 179: break;
 26038                           
 26039                           ;os_timers.c: 178: default:
 26040                           
 26041                           ; BSR set to: 0
 26042                           ;os_timers.c: 175: }
 26043                           ;os_timers.c: 176: break;
 26044  005466  D00D               	goto	l857
 26045  005468                     l855:
 26046                           
 26047                           ; BSR set to: 0
 26048                           
 26049                           ; BSR set to: 0
 26050  005468  EE20 F00A          	lfsr	2,10
 26051  00546C  519B               	movf	OsTmr_Wait@WaitTimer& (0+255),w,b
 26052  00546E  26D9               	addwf	fsr2l,f,c
 26053  005470  519C               	movf	(OsTmr_Wait@WaitTimer+1)& (0+255),w,b
 26054  005472  22DA               	addwfc	fsr2h,f,c
 26055  005474  50DF               	movf	indf2,w,c
 26056                           
 26057                           ; Switch size 1, requested type "space"
 26058                           ; Number of cases is 2, Range of values is 0 to 1
 26059                           ; switch strategies available:
 26060                           ; Name         Instructions Cycles
 26061                           ; simple_byte            7     4 (average)
 26062                           ;	Chosen strategy is simple_byte
 26063  005476  0A00               	xorlw	0	; case 0
 26064  005478  B4D8               	btfsc	status,2,c
 26065  00547A  D7C9               	goto	l856
 26066  00547C  0A01               	xorlw	1	; case 1
 26067  00547E  B4D8               	btfsc	status,2,c
 26068  005480  D7DE               	goto	l858
 26069  005482                     l857:
 26070                           
 26071                           ;os_timers.c: 182: return Ret;
 26072                           
 26073                           ; BSR set to: 0
 26074  005482  0100               	movlb	0	; () banked
 26075  005484  51A1               	movf	OsTmr_Wait@Ret& (0+255),w,b
 26076  005486  0012               	return	
 26077  005488                     __end_of_OsTmr_Wait:
 26078                           	opt stack 0
 26079                           tosu	equ	0xFFF
 26080                           tosh	equ	0xFFE
 26081                           tosl	equ	0xFFD
 26082                           pclath	equ	0xFFA
 26083                           tblptru	equ	0xFF8
 26084                           tblptrh	equ	0xFF7
 26085                           tblptrl	equ	0xFF6
 26086                           tablat	equ	0xFF5
 26087                           prodh	equ	0xFF4
 26088                           prodl	equ	0xFF3
 26089                           intcon	equ	0xFF2
 26090                           intcon2	equ	0xFF1
 26091                           intcon3	equ	0xFF0
 26092                           indf0	equ	0xFEF
 26093                           postinc0	equ	0xFEE
 26094                           plusw0	equ	0xFEB
 26095                           fsr0h	equ	0xFEA
 26096                           fsr0l	equ	0xFE9
 26097                           wreg	equ	0xFE8
 26098                           indf1	equ	0xFE7
 26099                           postinc1	equ	0xFE6
 26100                           postdec1	equ	0xFE5
 26101                           fsr1h	equ	0xFE2
 26102                           fsr1l	equ	0xFE1
 26103                           indf2	equ	0xFDF
 26104                           postinc2	equ	0xFDE
 26105                           postdec2	equ	0xFDD
 26106                           plusw2	equ	0xFDB
 26107                           fsr2h	equ	0xFDA
 26108                           fsr2l	equ	0xFD9
 26109                           status	equ	0xFD8
 26110                           
 26111 ;; *************** function _I2cSlv_ReceiveI2cMsg *****************
 26112 ;; Defined at:
 26113 ;;		line 289 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 26114 ;; Parameters:    Size  Location     Type
 26115 ;;  RxBuffer        2   32[BANK0 ] PTR unsigned char 
 26116 ;;		 -> readBuffer(13), memoryPreamble(4), Terminal@TermRxBuffer(50), 
 26117 ;;  SlaveAddr       1   34[BANK0 ] unsigned char 
 26118 ;;  DataLenght      1   35[BANK0 ] unsigned char 
 26119 ;; Auto vars:     Size  Location     Type
 26120 ;;  RxSts           1   36[BANK0 ] unsigned char 
 26121 ;; Return value:  Size  Location     Type
 26122 ;;                  1    wreg      unsigned char 
 26123 ;; Registers used:
 26124 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 26125 ;; Tracked objects:
 26126 ;;		On entry : 0/0
 26127 ;;		On exit  : 0/0
 26128 ;;		Unchanged: 0/0
 26129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26130 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26131 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26133 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26134 ;;Total ram usage:        5 bytes
 26135 ;; Hardware stack levels used:    1
 26136 ;; Hardware stack levels required when called:   12
 26137 ;; This function calls:
 26138 ;;		_GenerateEvt
 26139 ;; This function is called by:
 26140 ;;		_I2cSlv_QueryI2cData
 26141 ;;		_Terminal
 26142 ;; This function uses a non-reentrant model
 26143 ;;
 26144                           
 26145                           	psect	text123
 26146  0062D4                     __ptext123:
 26147                           	opt stack 0
 26148  0062D4                     _I2cSlv_ReceiveI2cMsg:
 26149                           	opt stack 13
 26150                           
 26151                           ;i2c_slv.c: 291: UINT8 RxSts = 0u;
 26152                           
 26153                           ; BSR set to: 0
 26154                           ;incstack = 0
 26155  0062D4  0E00               	movlw	0
 26156  0062D6  0100               	movlb	0	; () banked
 26157  0062D8  6F84               	movwf	I2cSlv_ReceiveI2cMsg@RxSts& (0+255),b
 26158                           
 26159                           ; BSR set to: 0
 26160                           ;i2c_slv.c: 293: if (I2cComSts != RxInProgress)
 26161  0062DA  0E02               	movlw	2
 26162  0062DC  19CF               	xorwf	_I2cComSts& (0+255),w,b
 26163  0062DE  B4D8               	btfsc	status,2,c
 26164  0062E0  D016               	goto	l1417
 26165                           
 26166                           ; BSR set to: 0
 26167                           ;i2c_slv.c: 294: {
 26168                           ;i2c_slv.c: 296: I2cRxPacket.SlaveAddress = SlaveAddr;
 26169  0062E2  C082  F395         	movff	I2cSlv_ReceiveI2cMsg@SlaveAddr,_I2cRxPacket
 26170                           
 26171                           ; BSR set to: 0
 26172                           ;i2c_slv.c: 297: I2cRxPacket.ReadWrite = ((UINT8)(1));
 26173  0062E6  0E01               	movlw	1
 26174  0062E8  0103               	movlb	3	; () banked
 26175  0062EA  6F96               	movwf	(_I2cRxPacket+1)& (0+255),b
 26176                           
 26177                           ; BSR set to: 3
 26178                           ;i2c_slv.c: 298: I2cRxPacket.Lenght = DataLenght;
 26179  0062EC  C083  F399         	movff	I2cSlv_ReceiveI2cMsg@DataLenght,_I2cRxPacket+4
 26180                           
 26181                           ; BSR set to: 3
 26182                           ;i2c_slv.c: 299: I2cRxPacket.Buffer = RxBuffer;
 26183  0062F0  C080  F397         	movff	I2cSlv_ReceiveI2cMsg@RxBuffer,_I2cRxPacket+2
 26184  0062F4  C081  F398         	movff	I2cSlv_ReceiveI2cMsg@RxBuffer+1,_I2cRxPacket+3
 26185                           
 26186                           ; BSR set to: 3
 26187                           ;i2c_slv.c: 302: GenerateEvt(&I2cReadDataEvt);
 26188  0062F8  0E39               	movlw	low _I2cReadDataEvt
 26189  0062FA  0100               	movlb	0	; () banked
 26190  0062FC  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 26191  0062FE  0E00               	movlw	high _I2cReadDataEvt
 26192  006300  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 26193  006302  EC82  F035         	call	_GenerateEvt	;wreg free
 26194                           
 26195                           ;i2c_slv.c: 304: RxSts = 1u;
 26196  006306  0E01               	movlw	1
 26197  006308  0100               	movlb	0	; () banked
 26198  00630A  6F84               	movwf	I2cSlv_ReceiveI2cMsg@RxSts& (0+255),b
 26199                           
 26200                           ;i2c_slv.c: 305: }
 26201  00630C  0012               	return	
 26202  00630E                     l1417:
 26203                           
 26204                           ; BSR set to: 0
 26205                           ;i2c_slv.c: 306: else
 26206                           ;i2c_slv.c: 307: {
 26207                           ;i2c_slv.c: 309: RxSts = 0u;
 26208                           
 26209                           ; BSR set to: 0
 26210  00630E  0E00               	movlw	0
 26211  006310  6F84               	movwf	I2cSlv_ReceiveI2cMsg@RxSts& (0+255),b
 26212                           
 26213                           ; BSR set to: 0
 26214  006312  0012               	return	
 26215  006314                     __end_of_I2cSlv_ReceiveI2cMsg:
 26216                           	opt stack 0
 26217                           tosu	equ	0xFFF
 26218                           tosh	equ	0xFFE
 26219                           tosl	equ	0xFFD
 26220                           pclath	equ	0xFFA
 26221                           tblptru	equ	0xFF8
 26222                           tblptrh	equ	0xFF7
 26223                           tblptrl	equ	0xFF6
 26224                           tablat	equ	0xFF5
 26225                           prodh	equ	0xFF4
 26226                           prodl	equ	0xFF3
 26227                           intcon	equ	0xFF2
 26228                           intcon2	equ	0xFF1
 26229                           intcon3	equ	0xFF0
 26230                           indf0	equ	0xFEF
 26231                           postinc0	equ	0xFEE
 26232                           plusw0	equ	0xFEB
 26233                           fsr0h	equ	0xFEA
 26234                           fsr0l	equ	0xFE9
 26235                           wreg	equ	0xFE8
 26236                           indf1	equ	0xFE7
 26237                           postinc1	equ	0xFE6
 26238                           postdec1	equ	0xFE5
 26239                           fsr1h	equ	0xFE2
 26240                           fsr1l	equ	0xFE1
 26241                           indf2	equ	0xFDF
 26242                           postinc2	equ	0xFDE
 26243                           postdec2	equ	0xFDD
 26244                           plusw2	equ	0xFDB
 26245                           fsr2h	equ	0xFDA
 26246                           fsr2l	equ	0xFD9
 26247                           status	equ	0xFD8
 26248                           
 26249 ;; *************** function _I2cSlv_I2cReadMsgSts *****************
 26250 ;; Defined at:
 26251 ;;		line 324 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 26252 ;; Parameters:    Size  Location     Type
 26253 ;;		None
 26254 ;; Auto vars:     Size  Location     Type
 26255 ;;  Result          1   33[BANK0 ] enum E8935
 26256 ;; Return value:  Size  Location     Type
 26257 ;;                  1    wreg      enum E8935
 26258 ;; Registers used:
 26259 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 26260 ;; Tracked objects:
 26261 ;;		On entry : 0/0
 26262 ;;		On exit  : 0/0
 26263 ;;		Unchanged: 0/0
 26264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26265 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26266 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26268 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26269 ;;Total ram usage:        1 bytes
 26270 ;; Hardware stack levels used:    1
 26271 ;; Hardware stack levels required when called:   12
 26272 ;; This function calls:
 26273 ;;		_ReceiveEvt
 26274 ;; This function is called by:
 26275 ;;		_I2cSlv_QueryI2cData
 26276 ;;		_Terminal
 26277 ;; This function uses a non-reentrant model
 26278 ;;
 26279                           
 26280                           	psect	text124
 26281  006958                     __ptext124:
 26282                           	opt stack 0
 26283  006958                     _I2cSlv_I2cReadMsgSts:
 26284                           	opt stack 13
 26285                           
 26286                           ;i2c_slv.c: 327: I2cReadMsgStsType Result;
 26287                           ;i2c_slv.c: 330: if (ReceiveEvt(&(I2cRxPacket.ReadCompleteEvt)))
 26288                           
 26289                           ; BSR set to: 0
 26290                           ;incstack = 0
 26291  006958  0E9A               	movlw	low (_I2cRxPacket+5)
 26292  00695A  0100               	movlb	0	; () banked
 26293  00695C  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 26294  00695E  0E03               	movlw	high (_I2cRxPacket+5)
 26295  006960  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 26296  006962  EC91  F033         	call	_ReceiveEvt	;wreg free
 26297  006966  0900               	iorlw	0
 26298  006968  B4D8               	btfsc	status,2,c
 26299  00696A  D002               	goto	l1422
 26300                           
 26301                           ;i2c_slv.c: 331: {
 26302                           ;i2c_slv.c: 332: Result = MessageReceived;
 26303  00696C  0E01               	movlw	1
 26304  00696E  D001               	goto	L56
 26305  006970                     l1422:
 26306                           
 26307                           ;i2c_slv.c: 334: else
 26308                           ;i2c_slv.c: 335: {
 26309                           ;i2c_slv.c: 336: Result = MessageNotReceived;
 26310                           
 26311                           ; BSR set to: 0
 26312  006970  0E00               	movlw	0
 26313  006972                     L56:
 26314  006972  0100               	movlb	0	; () banked
 26315  006974  6F81               	movwf	I2cSlv_I2cReadMsgSts@Result& (0+255),b
 26316                           
 26317                           ; BSR set to: 0
 26318                           ;i2c_slv.c: 337: }
 26319                           ;i2c_slv.c: 339: return Result;
 26320  006976  5181               	movf	I2cSlv_I2cReadMsgSts@Result& (0+255),w,b
 26321  006978  0012               	return	
 26322  00697A                     __end_of_I2cSlv_I2cReadMsgSts:
 26323                           	opt stack 0
 26324                           tosu	equ	0xFFF
 26325                           tosh	equ	0xFFE
 26326                           tosl	equ	0xFFD
 26327                           pclath	equ	0xFFA
 26328                           tblptru	equ	0xFF8
 26329                           tblptrh	equ	0xFF7
 26330                           tblptrl	equ	0xFF6
 26331                           tablat	equ	0xFF5
 26332                           prodh	equ	0xFF4
 26333                           prodl	equ	0xFF3
 26334                           intcon	equ	0xFF2
 26335                           intcon2	equ	0xFF1
 26336                           intcon3	equ	0xFF0
 26337                           indf0	equ	0xFEF
 26338                           postinc0	equ	0xFEE
 26339                           plusw0	equ	0xFEB
 26340                           fsr0h	equ	0xFEA
 26341                           fsr0l	equ	0xFE9
 26342                           wreg	equ	0xFE8
 26343                           indf1	equ	0xFE7
 26344                           postinc1	equ	0xFE6
 26345                           postdec1	equ	0xFE5
 26346                           fsr1h	equ	0xFE2
 26347                           fsr1l	equ	0xFE1
 26348                           indf2	equ	0xFDF
 26349                           postinc2	equ	0xFDE
 26350                           postdec2	equ	0xFDD
 26351                           plusw2	equ	0xFDB
 26352                           fsr2h	equ	0xFDA
 26353                           fsr2l	equ	0xFD9
 26354                           status	equ	0xFD8
 26355                           
 26356 ;; *************** function _Led_SetLedBlinkTime *****************
 26357 ;; Defined at:
 26358 ;;		line 371 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 26359 ;; Parameters:    Size  Location     Type
 26360 ;;  Led             1    wreg     unsigned char 
 26361 ;;  OnTimeMs        2   29[BANK0 ] unsigned short 
 26362 ;;  OffTimeMs       2   31[BANK0 ] unsigned short 
 26363 ;; Auto vars:     Size  Location     Type
 26364 ;;  Led             1   33[BANK0 ] unsigned char 
 26365 ;; Return value:  Size  Location     Type
 26366 ;;                  1    wreg      void 
 26367 ;; Registers used:
 26368 ;;		wreg, status,2, status,0
 26369 ;; Tracked objects:
 26370 ;;		On entry : 0/0
 26371 ;;		On exit  : 0/0
 26372 ;;		Unchanged: 0/0
 26373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26374 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26375 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26377 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26378 ;;Total ram usage:        5 bytes
 26379 ;; Hardware stack levels used:    1
 26380 ;; Hardware stack levels required when called:   11
 26381 ;; This function calls:
 26382 ;;		Nothing
 26383 ;; This function is called by:
 26384 ;;		_MyApp_Task
 26385 ;; This function uses a non-reentrant model
 26386 ;;
 26387                           
 26388                           	psect	text125
 26389  005CEC                     __ptext125:
 26390                           	opt stack 0
 26391  005CEC                     _Led_SetLedBlinkTime:
 26392                           	opt stack 16
 26393                           
 26394                           ; BSR set to: 0
 26395                           ;incstack = 0
 26396                           ;Led_SetLedBlinkTime@Led stored from wreg
 26397  005CEC  0100               	movlb	0	; () banked
 26398  005CEE  6F81               	movwf	Led_SetLedBlinkTime@Led& (0+255),b
 26399                           
 26400                           ;led.c: 374: switch (Led)
 26401  005CF0  D01B               	goto	l2151
 26402  005CF2                     l2152:
 26403                           
 26404                           ; BSR set to: 0
 26405                           ;led.c: 377: Led1Blink.LedOnTimeMs = OnTimeMs;
 26406  005CF2  C07D  F36F         	movff	Led_SetLedBlinkTime@OnTimeMs,_Led1Blink+4
 26407  005CF6  C07E  F370         	movff	Led_SetLedBlinkTime@OnTimeMs+1,_Led1Blink+5
 26408                           
 26409                           ;led.c: 378: Led1Blink.LedOffTimeMs = OffTimeMs;
 26410  005CFA  C07F  F371         	movff	Led_SetLedBlinkTime@OffTimeMs,_Led1Blink+6
 26411  005CFE  C080  F372         	movff	Led_SetLedBlinkTime@OffTimeMs+1,_Led1Blink+7
 26412                           
 26413                           ;led.c: 379: break;
 26414  005D02  0012               	return	
 26415  005D04                     l2154:
 26416                           
 26417                           ; BSR set to: 0
 26418                           ;led.c: 382: Led2Blink.LedOnTimeMs = OnTimeMs;
 26419  005D04  C07D  F366         	movff	Led_SetLedBlinkTime@OnTimeMs,_Led2Blink+4
 26420  005D08  C07E  F367         	movff	Led_SetLedBlinkTime@OnTimeMs+1,_Led2Blink+5
 26421                           
 26422                           ;led.c: 383: Led2Blink.LedOffTimeMs = OffTimeMs;
 26423  005D0C  C07F  F368         	movff	Led_SetLedBlinkTime@OffTimeMs,_Led2Blink+6
 26424  005D10  C080  F369         	movff	Led_SetLedBlinkTime@OffTimeMs+1,_Led2Blink+7
 26425                           
 26426                           ;led.c: 384: break;
 26427  005D14  0012               	return	
 26428  005D16                     l2155:
 26429                           
 26430                           ; BSR set to: 0
 26431                           ;led.c: 387: Led2Blink.LedOnTimeMs = OnTimeMs;
 26432  005D16  C07D  F366         	movff	Led_SetLedBlinkTime@OnTimeMs,_Led2Blink+4
 26433  005D1A  C07E  F367         	movff	Led_SetLedBlinkTime@OnTimeMs+1,_Led2Blink+5
 26434                           
 26435                           ;led.c: 388: Led2Blink.LedOffTimeMs = OffTimeMs;
 26436  005D1E  C07F  F368         	movff	Led_SetLedBlinkTime@OffTimeMs,_Led2Blink+6
 26437  005D22  C080  F369         	movff	Led_SetLedBlinkTime@OffTimeMs+1,_Led2Blink+7
 26438                           
 26439                           ; BSR set to: 0
 26440                           ;led.c: 393: }
 26441                           
 26442                           ; BSR set to: 0
 26443                           ;led.c: 392: break;
 26444                           
 26445                           ;led.c: 391: default:
 26446                           
 26447                           ;led.c: 389: break;
 26448  005D26  0012               	return	
 26449  005D28                     l2151:
 26450                           
 26451                           ; BSR set to: 0
 26452  005D28  0100               	movlb	0	; () banked
 26453  005D2A  5181               	movf	Led_SetLedBlinkTime@Led& (0+255),w,b
 26454                           
 26455                           ; Switch size 1, requested type "space"
 26456                           ; Number of cases is 3, Range of values is 1 to 3
 26457                           ; switch strategies available:
 26458                           ; Name         Instructions Cycles
 26459                           ; simple_byte           10     6 (average)
 26460                           ;	Chosen strategy is simple_byte
 26461  005D2C  0A01               	xorlw	1	; case 1
 26462  005D2E  B4D8               	btfsc	status,2,c
 26463  005D30  D7E0               	goto	l2152
 26464  005D32  0A03               	xorlw	3	; case 2
 26465  005D34  B4D8               	btfsc	status,2,c
 26466  005D36  D7E6               	goto	l2154
 26467  005D38  0A01               	xorlw	1	; case 3
 26468  005D3A  A4D8               	btfss	status,2,c
 26469  005D3C  0012               	return	
 26470  005D3E  D7EB               	goto	l2155
 26471  005D40                     __end_of_Led_SetLedBlinkTime:
 26472                           	opt stack 0
 26473                           tosu	equ	0xFFF
 26474                           tosh	equ	0xFFE
 26475                           tosl	equ	0xFFD
 26476                           pclath	equ	0xFFA
 26477                           tblptru	equ	0xFF8
 26478                           tblptrh	equ	0xFF7
 26479                           tblptrl	equ	0xFF6
 26480                           tablat	equ	0xFF5
 26481                           prodh	equ	0xFF4
 26482                           prodl	equ	0xFF3
 26483                           intcon	equ	0xFF2
 26484                           intcon2	equ	0xFF1
 26485                           intcon3	equ	0xFF0
 26486                           indf0	equ	0xFEF
 26487                           postinc0	equ	0xFEE
 26488                           plusw0	equ	0xFEB
 26489                           fsr0h	equ	0xFEA
 26490                           fsr0l	equ	0xFE9
 26491                           wreg	equ	0xFE8
 26492                           indf1	equ	0xFE7
 26493                           postinc1	equ	0xFE6
 26494                           postdec1	equ	0xFE5
 26495                           fsr1h	equ	0xFE2
 26496                           fsr1l	equ	0xFE1
 26497                           indf2	equ	0xFDF
 26498                           postinc2	equ	0xFDE
 26499                           postdec2	equ	0xFDD
 26500                           plusw2	equ	0xFDB
 26501                           fsr2h	equ	0xFDA
 26502                           fsr2l	equ	0xFD9
 26503                           status	equ	0xFD8
 26504                           
 26505 ;; *************** function _Eeprom_Reset *****************
 26506 ;; Defined at:
 26507 ;;		line 131 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/05_Eeprom/eeprom_if.c"
 26508 ;; Parameters:    Size  Location     Type
 26509 ;;		None
 26510 ;; Auto vars:     Size  Location     Type
 26511 ;;  SlaveAddress    1   37[BANK0 ] const unsigned char 
 26512 ;; Return value:  Size  Location     Type
 26513 ;;                  1    wreg      unsigned char 
 26514 ;; Registers used:
 26515 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 26516 ;; Tracked objects:
 26517 ;;		On entry : 0/0
 26518 ;;		On exit  : 0/0
 26519 ;;		Unchanged: 0/0
 26520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26521 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26522 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26524 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26525 ;;Total ram usage:        1 bytes
 26526 ;; Hardware stack levels used:    1
 26527 ;; Hardware stack levels required when called:   13
 26528 ;; This function calls:
 26529 ;;		_ClearBuffer
 26530 ;;		_I2cSlv_SendI2cMsg
 26531 ;; This function is called by:
 26532 ;;		_MyApp_Task
 26533 ;; This function uses a non-reentrant model
 26534 ;;
 26535                           
 26536                           	psect	text126
 26537  005B9A                     __ptext126:
 26538                           	opt stack 0
 26539  005B9A                     _Eeprom_Reset:
 26540                           	opt stack 14
 26541                           
 26542                           ;eeprom_if.c: 133: const UINT8 SlaveAddress = 0x50;
 26543                           
 26544                           ; BSR set to: 0
 26545                           ;incstack = 0
 26546  005B9A  0E50               	movlw	80
 26547  005B9C  0100               	movlb	0	; () banked
 26548  005B9E  6F85               	movwf	Eeprom_Reset@SlaveAddress& (0+255),b
 26549                           
 26550                           ;eeprom_if.c: 134: static UINT8 memoryAddress = 0;
 26551                           ;eeprom_if.c: 136: if (memoryAddress == 0)
 26552  005BA0  51C6               	movf	Eeprom_Reset@memoryAddress& (0+255),w,b
 26553  005BA2  A4D8               	btfss	status,2,c
 26554  005BA4  D00A               	goto	l2045
 26555                           
 26556                           ; BSR set to: 0
 26557                           ;eeprom_if.c: 137: {
 26558                           ;eeprom_if.c: 138: ClearBuffer(EepromBuffer, 15);
 26559  005BA6  0EA7               	movlw	low _EepromBuffer
 26560  005BA8  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 26561  005BAA  0E04               	movlw	high _EepromBuffer
 26562  005BAC  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 26563  005BAE  0E00               	movlw	0
 26564  005BB0  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 26565  005BB2  0E0F               	movlw	15
 26566  005BB4  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 26567  005BB6  ECB3  F032         	call	_ClearBuffer	;wreg free
 26568  005BBA                     l2045:
 26569                           
 26570                           ;eeprom_if.c: 139: }
 26571                           ;eeprom_if.c: 141: EepromBuffer[0] = memoryAddress;
 26572  005BBA  C0C6  F4A7         	movff	Eeprom_Reset@memoryAddress,_EepromBuffer
 26573                           
 26574                           ;eeprom_if.c: 142: I2cSlv_SendI2cMsg(EepromBuffer, SlaveAddress, 15);
 26575  005BBE  0EA7               	movlw	low _EepromBuffer
 26576  005BC0  0100               	movlb	0	; () banked
 26577  005BC2  6F80               	movwf	I2cSlv_SendI2cMsg@TxBuffer& (0+255),b
 26578  005BC4  0E04               	movlw	high _EepromBuffer
 26579  005BC6  6F81               	movwf	(I2cSlv_SendI2cMsg@TxBuffer+1)& (0+255),b
 26580  005BC8  C085  F082         	movff	Eeprom_Reset@SlaveAddress,I2cSlv_SendI2cMsg@SlaveAddr
 26581  005BCC  0E0F               	movlw	15
 26582  005BCE  6F83               	movwf	I2cSlv_SendI2cMsg@DataLenght& (0+255),b
 26583  005BD0  ECC9  F031         	call	_I2cSlv_SendI2cMsg	;wreg free
 26584                           
 26585                           ;eeprom_if.c: 144: memoryAddress += 16;
 26586  005BD4  0E10               	movlw	16
 26587  005BD6  0100               	movlb	0	; () banked
 26588  005BD8  27C6               	addwf	Eeprom_Reset@memoryAddress& (0+255),f,b
 26589                           
 26590                           ; BSR set to: 0
 26591                           ;eeprom_if.c: 145: if (memoryAddress >= 224)
 26592  005BDA  0EDF               	movlw	223
 26593  005BDC  65C6               	cpfsgt	Eeprom_Reset@memoryAddress& (0+255),b
 26594  005BDE  D006               	goto	l2046
 26595                           
 26596                           ; BSR set to: 0
 26597                           ;eeprom_if.c: 146: {
 26598                           ;eeprom_if.c: 147: EepromBuffer[0] = 0;
 26599  005BE0  0E00               	movlw	0
 26600  005BE2  0104               	movlb	4	; () banked
 26601  005BE4  6FA7               	movwf	_EepromBuffer& (0+255),b
 26602                           
 26603                           ;eeprom_if.c: 148: memoryAddress = 0;
 26604  005BE6  0E00               	movlw	0
 26605  005BE8  0100               	movlb	0	; () banked
 26606  005BEA  6FC6               	movwf	Eeprom_Reset@memoryAddress& (0+255),b
 26607  005BEC                     l2046:
 26608                           
 26609                           ; BSR set to: 0
 26610                           ;eeprom_if.c: 149: }
 26611                           ;eeprom_if.c: 150: return memoryAddress;
 26612  005BEC  51C6               	movf	Eeprom_Reset@memoryAddress& (0+255),w,b
 26613  005BEE  0012               	return	
 26614  005BF0                     __end_of_Eeprom_Reset:
 26615                           	opt stack 0
 26616                           tosu	equ	0xFFF
 26617                           tosh	equ	0xFFE
 26618                           tosl	equ	0xFFD
 26619                           pclath	equ	0xFFA
 26620                           tblptru	equ	0xFF8
 26621                           tblptrh	equ	0xFF7
 26622                           tblptrl	equ	0xFF6
 26623                           tablat	equ	0xFF5
 26624                           prodh	equ	0xFF4
 26625                           prodl	equ	0xFF3
 26626                           intcon	equ	0xFF2
 26627                           intcon2	equ	0xFF1
 26628                           intcon3	equ	0xFF0
 26629                           indf0	equ	0xFEF
 26630                           postinc0	equ	0xFEE
 26631                           plusw0	equ	0xFEB
 26632                           fsr0h	equ	0xFEA
 26633                           fsr0l	equ	0xFE9
 26634                           wreg	equ	0xFE8
 26635                           indf1	equ	0xFE7
 26636                           postinc1	equ	0xFE6
 26637                           postdec1	equ	0xFE5
 26638                           fsr1h	equ	0xFE2
 26639                           fsr1l	equ	0xFE1
 26640                           indf2	equ	0xFDF
 26641                           postinc2	equ	0xFDE
 26642                           postdec2	equ	0xFDD
 26643                           plusw2	equ	0xFDB
 26644                           fsr2h	equ	0xFDA
 26645                           fsr2l	equ	0xFD9
 26646                           status	equ	0xFD8
 26647                           
 26648 ;; *************** function _I2cSlv_SendI2cMsg *****************
 26649 ;; Defined at:
 26650 ;;		line 252 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 26651 ;; Parameters:    Size  Location     Type
 26652 ;;  TxBuffer        2   32[BANK0 ] PTR unsigned char 
 26653 ;;		 -> relayBuffer(2), Terminal@TermTxBuffer(50), ReadAddress(1), EepromBuffer(15), 
 26654 ;;		 -> I2cDummyTx@DummyBuffer(1), 
 26655 ;;  SlaveAddr       1   34[BANK0 ] unsigned char 
 26656 ;;  DataLenght      1   35[BANK0 ] unsigned char 
 26657 ;; Auto vars:     Size  Location     Type
 26658 ;;  TxSts           1   36[BANK0 ] unsigned char 
 26659 ;; Return value:  Size  Location     Type
 26660 ;;                  1    wreg      unsigned char 
 26661 ;; Registers used:
 26662 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 26663 ;; Tracked objects:
 26664 ;;		On entry : 0/0
 26665 ;;		On exit  : 0/0
 26666 ;;		Unchanged: 0/0
 26667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26668 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26669 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26670 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26671 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26672 ;;Total ram usage:        5 bytes
 26673 ;; Hardware stack levels used:    1
 26674 ;; Hardware stack levels required when called:   12
 26675 ;; This function calls:
 26676 ;;		_GenerateEvt
 26677 ;; This function is called by:
 26678 ;;		_I2cSlv_QueryI2cData
 26679 ;;		_Eeprom_Write
 26680 ;;		_Eeprom_Reset
 26681 ;;		_Terminal
 26682 ;;		_triggerRelay
 26683 ;; This function uses a non-reentrant model
 26684 ;;
 26685                           
 26686                           	psect	text127
 26687  006392                     __ptext127:
 26688                           	opt stack 0
 26689  006392                     _I2cSlv_SendI2cMsg:
 26690                           	opt stack 13
 26691                           
 26692                           ;i2c_slv.c: 254: UINT8 TxSts = 0u;
 26693                           
 26694                           ; BSR set to: 0
 26695                           ;incstack = 0
 26696  006392  0E00               	movlw	0
 26697  006394  0100               	movlb	0	; () banked
 26698  006396  6F84               	movwf	I2cSlv_SendI2cMsg@TxSts& (0+255),b
 26699                           
 26700                           ; BSR set to: 0
 26701                           ;i2c_slv.c: 256: if (I2cComSts != TxInProgress)
 26702  006398  05CF               	decf	_I2cComSts& (0+255),w,b
 26703  00639A  B4D8               	btfsc	status,2,c
 26704  00639C  D015               	goto	l1412
 26705                           
 26706                           ; BSR set to: 0
 26707                           ;i2c_slv.c: 257: {
 26708                           ;i2c_slv.c: 259: I2cTxPacket.SlaveAddress = SlaveAddr;
 26709  00639E  C082  F39B         	movff	I2cSlv_SendI2cMsg@SlaveAddr,_I2cTxPacket
 26710                           
 26711                           ; BSR set to: 0
 26712                           ;i2c_slv.c: 260: I2cTxPacket.ReadWrite = ((UINT8)(0));
 26713  0063A2  0E00               	movlw	0
 26714  0063A4  0103               	movlb	3	; () banked
 26715  0063A6  6F9C               	movwf	(_I2cTxPacket+1)& (0+255),b
 26716                           
 26717                           ; BSR set to: 3
 26718                           ;i2c_slv.c: 261: I2cTxPacket.Lenght = DataLenght;
 26719  0063A8  C083  F39F         	movff	I2cSlv_SendI2cMsg@DataLenght,_I2cTxPacket+4
 26720                           
 26721                           ; BSR set to: 3
 26722                           ;i2c_slv.c: 262: I2cTxPacket.Buffer = TxBuffer;
 26723  0063AC  C080  F39D         	movff	I2cSlv_SendI2cMsg@TxBuffer,_I2cTxPacket+2
 26724  0063B0  C081  F39E         	movff	I2cSlv_SendI2cMsg@TxBuffer+1,_I2cTxPacket+3
 26725                           
 26726                           ; BSR set to: 3
 26727                           ;i2c_slv.c: 265: GenerateEvt(&I2cWriteDataEvt);
 26728  0063B4  0ED7               	movlw	low _I2cWriteDataEvt
 26729  0063B6  0100               	movlb	0	; () banked
 26730  0063B8  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 26731  0063BA  0E00               	movlw	high _I2cWriteDataEvt
 26732  0063BC  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 26733  0063BE  EC82  F035         	call	_GenerateEvt	;wreg free
 26734                           
 26735                           ;i2c_slv.c: 267: TxSts = 1u;
 26736  0063C2  0E01               	movlw	1
 26737  0063C4  0100               	movlb	0	; () banked
 26738  0063C6  D001               	goto	L57
 26739  0063C8                     l1412:
 26740                           
 26741                           ; BSR set to: 0
 26742                           ;i2c_slv.c: 269: else
 26743                           ;i2c_slv.c: 270: {
 26744                           ;i2c_slv.c: 272: TxSts = 0u;
 26745                           
 26746                           ; BSR set to: 0
 26747  0063C8  0E00               	movlw	0
 26748  0063CA                     L57:
 26749  0063CA  6F84               	movwf	I2cSlv_SendI2cMsg@TxSts& (0+255),b
 26750                           
 26751                           ; BSR set to: 0
 26752                           ;i2c_slv.c: 273: }
 26753                           ;i2c_slv.c: 275: return TxSts;
 26754  0063CC  5184               	movf	I2cSlv_SendI2cMsg@TxSts& (0+255),w,b
 26755  0063CE  0012               	return	
 26756  0063D0                     __end_of_I2cSlv_SendI2cMsg:
 26757                           	opt stack 0
 26758                           tosu	equ	0xFFF
 26759                           tosh	equ	0xFFE
 26760                           tosl	equ	0xFFD
 26761                           pclath	equ	0xFFA
 26762                           tblptru	equ	0xFF8
 26763                           tblptrh	equ	0xFF7
 26764                           tblptrl	equ	0xFF6
 26765                           tablat	equ	0xFF5
 26766                           prodh	equ	0xFF4
 26767                           prodl	equ	0xFF3
 26768                           intcon	equ	0xFF2
 26769                           intcon2	equ	0xFF1
 26770                           intcon3	equ	0xFF0
 26771                           indf0	equ	0xFEF
 26772                           postinc0	equ	0xFEE
 26773                           plusw0	equ	0xFEB
 26774                           fsr0h	equ	0xFEA
 26775                           fsr0l	equ	0xFE9
 26776                           wreg	equ	0xFE8
 26777                           indf1	equ	0xFE7
 26778                           postinc1	equ	0xFE6
 26779                           postdec1	equ	0xFE5
 26780                           fsr1h	equ	0xFE2
 26781                           fsr1l	equ	0xFE1
 26782                           indf2	equ	0xFDF
 26783                           postinc2	equ	0xFDE
 26784                           postdec2	equ	0xFDD
 26785                           plusw2	equ	0xFDB
 26786                           fsr2h	equ	0xFDA
 26787                           fsr2l	equ	0xFD9
 26788                           status	equ	0xFD8
 26789                           
 26790 ;; *************** function _UartSetConfig *****************
 26791 ;; Defined at:
 26792 ;;		line 190 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 26793 ;; Parameters:    Size  Location     Type
 26794 ;;		None
 26795 ;; Auto vars:     Size  Location     Type
 26796 ;;		None
 26797 ;; Return value:  Size  Location     Type
 26798 ;;                  1    wreg      void 
 26799 ;; Registers used:
 26800 ;;		wreg, status,2
 26801 ;; Tracked objects:
 26802 ;;		On entry : 0/0
 26803 ;;		On exit  : 0/0
 26804 ;;		Unchanged: 0/0
 26805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26807 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26809 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26810 ;;Total ram usage:        0 bytes
 26811 ;; Hardware stack levels used:    1
 26812 ;; Hardware stack levels required when called:   11
 26813 ;; This function calls:
 26814 ;;		Nothing
 26815 ;; This function is called by:
 26816 ;;		_Mdm_MainTask
 26817 ;; This function uses a non-reentrant model
 26818 ;;
 26819                           
 26820                           	psect	text128
 26821  005A3A                     __ptext128:
 26822                           	opt stack 0
 26823  005A3A                     _UartSetConfig:
 26824                           	opt stack 16
 26825                           
 26826                           ;mdm_gsm_gprs.c: 192: UartConfig.UartEnable = ((UINT8)(1));
 26827                           
 26828                           ; BSR set to: 0
 26829                           ;incstack = 0
 26830  005A3A  0E01               	movlw	1
 26831  005A3C  0103               	movlb	3	; () banked
 26832  005A3E  6F22               	movwf	_UartConfig& (0+255),b
 26833                           
 26834                           ;mdm_gsm_gprs.c: 193: UartConfig.UartMode = ((UINT8)(0));
 26835  005A40  0E00               	movlw	0
 26836  005A42  6F23               	movwf	(_UartConfig+1)& (0+255),b
 26837                           
 26838                           ;mdm_gsm_gprs.c: 195: UartConfig.BaudRateMode = ((UINT8)(0));
 26839  005A44  0E00               	movlw	0
 26840  005A46  6F24               	movwf	(_UartConfig+2)& (0+255),b
 26841                           
 26842                           ;mdm_gsm_gprs.c: 200: UartConfig.HighBaudMode = ((UINT8)(0));
 26843  005A48  0E00               	movlw	0
 26844  005A4A  6F25               	movwf	(_UartConfig+3)& (0+255),b
 26845                           
 26846                           ;mdm_gsm_gprs.c: 204: UartConfig.Tx9bitMode = ((UINT8)(0));
 26847  005A4C  0E00               	movlw	0
 26848  005A4E  6F26               	movwf	(_UartConfig+4)& (0+255),b
 26849                           
 26850                           ;mdm_gsm_gprs.c: 205: UartConfig.Rx9bitMode = ((UINT8)(0));
 26851  005A50  0E00               	movlw	0
 26852  005A52  6F27               	movwf	(_UartConfig+5)& (0+255),b
 26853                           
 26854                           ;mdm_gsm_gprs.c: 206: UartConfig.TxEnable = ((UINT8)(1));
 26855  005A54  0E01               	movlw	1
 26856  005A56  6F28               	movwf	(_UartConfig+6)& (0+255),b
 26857                           
 26858                           ;mdm_gsm_gprs.c: 207: UartConfig.RxEnable = ((UINT8)(1));
 26859  005A58  0E01               	movlw	1
 26860  005A5A  6F29               	movwf	(_UartConfig+7)& (0+255),b
 26861                           
 26862                           ;mdm_gsm_gprs.c: 208: UartConfig.SendBreakEnable = ((UINT8)(0));
 26863  005A5C  0E00               	movlw	0
 26864  005A5E  6F2A               	movwf	(_UartConfig+8)& (0+255),b
 26865                           
 26866                           ;mdm_gsm_gprs.c: 209: UartConfig.AutobaudEnable = ((UINT8)(0));
 26867  005A60  0E00               	movlw	0
 26868  005A62  6F2B               	movwf	(_UartConfig+9)& (0+255),b
 26869                           
 26870                           ;mdm_gsm_gprs.c: 210: UartConfig.WakeUpEnable = ((UINT8)(0));
 26871  005A64  0E00               	movlw	0
 26872  005A66  6F2C               	movwf	(_UartConfig+10)& (0+255),b
 26873                           
 26874                           ;mdm_gsm_gprs.c: 211: UartConfig.TxInterruptEnable = ((UINT8)(0));
 26875  005A68  0E00               	movlw	0
 26876  005A6A  6F2D               	movwf	(_UartConfig+11)& (0+255),b
 26877                           
 26878                           ;mdm_gsm_gprs.c: 212: UartConfig.RxInterruptEnable = ((UINT8)(1));
 26879  005A6C  0E01               	movlw	1
 26880  005A6E  6F2E               	movwf	(_UartConfig+12)& (0+255),b
 26881                           
 26882                           ;mdm_gsm_gprs.c: 213: UartConfig.McuBusClock = ((UINT32)(48000000));
 26883  005A70  0E00               	movlw	0
 26884  005A72  6F2F               	movwf	(_UartConfig+13)& (0+255),b
 26885  005A74  0E6C               	movlw	108
 26886  005A76  6F30               	movwf	(_UartConfig+14)& (0+255),b
 26887  005A78  0EDC               	movlw	220
 26888  005A7A  6F31               	movwf	(_UartConfig+15)& (0+255),b
 26889  005A7C  0E02               	movlw	2
 26890  005A7E  6F32               	movwf	(_UartConfig+16)& (0+255),b
 26891                           
 26892                           ;mdm_gsm_gprs.c: 215: UartConfig.DesiredBaudRate = ((UINT32)(9600));
 26893  005A80  0E80               	movlw	128
 26894  005A82  6F33               	movwf	(_UartConfig+17)& (0+255),b
 26895  005A84  0E25               	movlw	37
 26896  005A86  6F34               	movwf	(_UartConfig+18)& (0+255),b
 26897  005A88  0E00               	movlw	0
 26898  005A8A  6F35               	movwf	(_UartConfig+19)& (0+255),b
 26899  005A8C  0E00               	movlw	0
 26900  005A8E  6F36               	movwf	(_UartConfig+20)& (0+255),b
 26901                           
 26902                           ; BSR set to: 3
 26903  005A90  0012               	return		;funcret
 26904  005A92                     __end_of_UartSetConfig:
 26905                           	opt stack 0
 26906                           tosu	equ	0xFFF
 26907                           tosh	equ	0xFFE
 26908                           tosl	equ	0xFFD
 26909                           pclath	equ	0xFFA
 26910                           tblptru	equ	0xFF8
 26911                           tblptrh	equ	0xFF7
 26912                           tblptrl	equ	0xFF6
 26913                           tablat	equ	0xFF5
 26914                           prodh	equ	0xFF4
 26915                           prodl	equ	0xFF3
 26916                           intcon	equ	0xFF2
 26917                           intcon2	equ	0xFF1
 26918                           intcon3	equ	0xFF0
 26919                           indf0	equ	0xFEF
 26920                           postinc0	equ	0xFEE
 26921                           plusw0	equ	0xFEB
 26922                           fsr0h	equ	0xFEA
 26923                           fsr0l	equ	0xFE9
 26924                           wreg	equ	0xFE8
 26925                           indf1	equ	0xFE7
 26926                           postinc1	equ	0xFE6
 26927                           postdec1	equ	0xFE5
 26928                           fsr1h	equ	0xFE2
 26929                           fsr1l	equ	0xFE1
 26930                           indf2	equ	0xFDF
 26931                           postinc2	equ	0xFDE
 26932                           postdec2	equ	0xFDD
 26933                           plusw2	equ	0xFDB
 26934                           fsr2h	equ	0xFDA
 26935                           fsr2l	equ	0xFD9
 26936                           status	equ	0xFD8
 26937                           
 26938 ;; *************** function _TurnOnModem *****************
 26939 ;; Defined at:
 26940 ;;		line 376 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 26941 ;; Parameters:    Size  Location     Type
 26942 ;;		None
 26943 ;; Auto vars:     Size  Location     Type
 26944 ;;		None
 26945 ;; Return value:  Size  Location     Type
 26946 ;;                  1    wreg      void 
 26947 ;; Registers used:
 26948 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 26949 ;; Tracked objects:
 26950 ;;		On entry : 0/0
 26951 ;;		On exit  : 0/0
 26952 ;;		Unchanged: 0/0
 26953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26954 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26955 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26956 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26957 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26958 ;;Total ram usage:        0 bytes
 26959 ;; Hardware stack levels used:    1
 26960 ;; Hardware stack levels required when called:   12
 26961 ;; This function calls:
 26962 ;;		_GenerateEvt
 26963 ;; This function is called by:
 26964 ;;		_Mdm_MainTask
 26965 ;; This function uses a non-reentrant model
 26966 ;;
 26967                           
 26968                           	psect	text129
 26969  00605E                     __ptext129:
 26970                           	opt stack 0
 26971  00605E                     _TurnOnModem:
 26972                           	opt stack 15
 26973                           
 26974                           ;mdm_gsm_gprs.c: 378: static TurnOnMdmStateType TurnOnMdmState = TurnOnDelay;
 26975                           ;mdm_gsm_gprs.c: 379: static UINT16 Counter = 0;
 26976                           ;mdm_gsm_gprs.c: 381: switch (TurnOnMdmState)
 26977                           
 26978                           ; BSR set to: 3
 26979                           ;incstack = 0
 26980  00605E  D01B               	goto	l1009
 26981  006060                     
 26982                           ;mdm_gsm_gprs.c: 385: Counter++;
 26983  006060  0102               	movlb	2	; () banked
 26984  006062  4BD7               	infsnz	TurnOnModem@Counter& (0+255),f,b
 26985  006064  2BD8               	incf	(TurnOnModem@Counter+1)& (0+255),f,b
 26986                           
 26987                           ; BSR set to: 2
 26988                           ;mdm_gsm_gprs.c: 387: if (Counter >= (((UINT16)(3000))/((UINT16)(1))))
 26989  006066  0EB8               	movlw	184
 26990  006068  5DD7               	subwf	TurnOnModem@Counter& (0+255),w,b
 26991  00606A  0E0B               	movlw	11
 26992  00606C  59D8               	subwfb	(TurnOnModem@Counter+1)& (0+255),w,b
 26993  00606E  A0D8               	btfss	status,0,c
 26994  006070  0012               	return	
 26995                           
 26996                           ; BSR set to: 2
 26997                           ;mdm_gsm_gprs.c: 388: {
 26998                           ;mdm_gsm_gprs.c: 390: TurnOnMdmState = TurnOnModuleReq;
 26999  006072  0E01               	movlw	1
 27000  006074  0101               	movlb	1	; () banked
 27001  006076  6FF1               	movwf	TurnOnModem@TurnOnMdmState& (0+255),b
 27002                           
 27003                           ; BSR set to: 1
 27004                           ;mdm_gsm_gprs.c: 391: }
 27005                           ;mdm_gsm_gprs.c: 392: break;
 27006  006078  0012               	return	
 27007  00607A                     
 27008                           ; BSR set to: 1
 27009                           ;mdm_gsm_gprs.c: 396: GenerateEvt(&MdmOnOffPulseRequest);
 27010                           
 27011                           ; BSR set to: 1
 27012  00607A  0EDF               	movlw	low _MdmOnOffPulseRequest
 27013  00607C  0100               	movlb	0	; () banked
 27014  00607E  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 27015  006080  0E00               	movlw	high _MdmOnOffPulseRequest
 27016  006082  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 27017  006084  EC82  F035         	call	_GenerateEvt	;wreg free
 27018                           
 27019                           ;mdm_gsm_gprs.c: 398: MdmStatus = ModemOn;
 27020  006088  0E01               	movlw	1
 27021  00608A  0100               	movlb	0	; () banked
 27022  00608C  6FD1               	movwf	_MdmStatus& (0+255),b
 27023                           
 27024                           ; BSR set to: 0
 27025                           ;mdm_gsm_gprs.c: 400: TurnOnMdmState = Stop;
 27026  00608E  0E02               	movlw	2
 27027  006090  0101               	movlb	1	; () banked
 27028  006092  6FF1               	movwf	TurnOnModem@TurnOnMdmState& (0+255),b
 27029                           
 27030                           ; BSR set to: 1
 27031                           ;mdm_gsm_gprs.c: 408: }
 27032                           
 27033                           ; BSR set to: 1
 27034                           ;mdm_gsm_gprs.c: 407: break;
 27035                           
 27036                           ;mdm_gsm_gprs.c: 406: default:
 27037                           
 27038                           ; BSR set to: 1
 27039                           ;mdm_gsm_gprs.c: 404: break;
 27040                           
 27041                           ;mdm_gsm_gprs.c: 403: case Stop:
 27042                           
 27043                           ;mdm_gsm_gprs.c: 401: break;
 27044  006094  0012               	return	
 27045  006096                     l1009:
 27046                           
 27047                           ; BSR set to: 1
 27048  006096  0101               	movlb	1	; () banked
 27049  006098  51F1               	movf	TurnOnModem@TurnOnMdmState& (0+255),w,b
 27050                           
 27051                           ; Switch size 1, requested type "space"
 27052                           ; Number of cases is 3, Range of values is 0 to 2
 27053                           ; switch strategies available:
 27054                           ; Name         Instructions Cycles
 27055                           ; simple_byte           10     6 (average)
 27056                           ;	Chosen strategy is simple_byte
 27057  00609A  0A00               	xorlw	0	; case 0
 27058  00609C  B4D8               	btfsc	status,2,c
 27059  00609E  D7E0               	goto	l1010
 27060  0060A0  0A01               	xorlw	1	; case 1
 27061  0060A2  B4D8               	btfsc	status,2,c
 27062  0060A4  D7EA               	goto	l1013
 27063  0060A6  0A03               	xorlw	3	; case 2
 27064  0060A8  0012               	return	
 27065  0060AA                     __end_of_TurnOnModem:
 27066                           	opt stack 0
 27067                           tosu	equ	0xFFF
 27068                           tosh	equ	0xFFE
 27069                           tosl	equ	0xFFD
 27070                           pclath	equ	0xFFA
 27071                           tblptru	equ	0xFF8
 27072                           tblptrh	equ	0xFF7
 27073                           tblptrl	equ	0xFF6
 27074                           tablat	equ	0xFF5
 27075                           prodh	equ	0xFF4
 27076                           prodl	equ	0xFF3
 27077                           intcon	equ	0xFF2
 27078                           intcon2	equ	0xFF1
 27079                           intcon3	equ	0xFF0
 27080                           indf0	equ	0xFEF
 27081                           postinc0	equ	0xFEE
 27082                           plusw0	equ	0xFEB
 27083                           fsr0h	equ	0xFEA
 27084                           fsr0l	equ	0xFE9
 27085                           wreg	equ	0xFE8
 27086                           indf1	equ	0xFE7
 27087                           postinc1	equ	0xFE6
 27088                           postdec1	equ	0xFE5
 27089                           fsr1h	equ	0xFE2
 27090                           fsr1l	equ	0xFE1
 27091                           indf2	equ	0xFDF
 27092                           postinc2	equ	0xFDE
 27093                           postdec2	equ	0xFDD
 27094                           plusw2	equ	0xFDB
 27095                           fsr2h	equ	0xFDA
 27096                           fsr2l	equ	0xFD9
 27097                           status	equ	0xFD8
 27098                           
 27099 ;; *************** function _SendSmsSm *****************
 27100 ;; Defined at:
 27101 ;;		line 656 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 27102 ;; Parameters:    Size  Location     Type
 27103 ;;		None
 27104 ;; Auto vars:     Size  Location     Type
 27105 ;;  UartMessage    50    0[BANK1 ] unsigned char [50]
 27106 ;; Return value:  Size  Location     Type
 27107 ;;                  1    wreg      void 
 27108 ;; Registers used:
 27109 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27110 ;; Tracked objects:
 27111 ;;		On entry : 0/0
 27112 ;;		On exit  : 0/0
 27113 ;;		Unchanged: 0/0
 27114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27115 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27116 ;;      Locals:         0       0      50       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27117 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27118 ;;      Totals:         0       2      50       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27119 ;;Total ram usage:       52 bytes
 27120 ;; Hardware stack levels used:    1
 27121 ;; Hardware stack levels required when called:   14
 27122 ;; This function calls:
 27123 ;;		_OsTmr_GetTimerStatus
 27124 ;;		_OsTmr_StartTimer
 27125 ;;		_ReceiveEvt
 27126 ;;		_StringCopy
 27127 ;;		_Uart_WriteStringLen
 27128 ;; This function is called by:
 27129 ;;		_Mdm_MainTask
 27130 ;; This function uses a non-reentrant model
 27131 ;;
 27132                           
 27133                           	psect	text130
 27134  0019F2                     __ptext130:
 27135                           	opt stack 0
 27136  0019F2                     _SendSmsSm:
 27137                           	opt stack 13
 27138                           
 27139                           ;mdm_gsm_gprs.c: 658: static SendSms_StateType SendSms_State = SendSms_WaitEvt;
 27140                           ;mdm_gsm_gprs.c: 659: static SendSms_StateType SendSms_NextState = SendSms_WaitEvt;
 27141                           ;mdm_gsm_gprs.c: 660: static SwTimerType SwTimer = { 1u, SwTimerExpired, 0, 0, DelayNotE
      +                          xpired, };
 27142                           ;mdm_gsm_gprs.c: 661: UINT8 UartMessage[50];
 27143                           ;mdm_gsm_gprs.c: 664: if (MdmStatus == ModemConfigured)
 27144                           
 27145                           ;incstack = 0
 27146  0019F2  0E03               	movlw	3
 27147  0019F4  0100               	movlb	0	; () banked
 27148  0019F6  19D1               	xorwf	_MdmStatus& (0+255),w,b
 27149  0019F8  A4D8               	btfss	status,2,c
 27150  0019FA  0012               	return	
 27151  0019FC  D0C1               	goto	l1091
 27152  0019FE                     
 27153                           ;mdm_gsm_gprs.c: 670: if (ReceiveEvt(&SendSmsEvent))
 27154                           
 27155                           ; BSR set to: 0
 27156  0019FE  0EDE               	movlw	low _SendSmsEvent
 27157  001A00  0100               	movlb	0	; () banked
 27158  001A02  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 27159  001A04  0E00               	movlw	high _SendSmsEvent
 27160  001A06  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 27161  001A08  EC91  F033         	call	_ReceiveEvt	;wreg free
 27162  001A0C  0900               	iorlw	0
 27163  001A0E  B4D8               	btfsc	status,2,c
 27164  001A10  0012               	return	
 27165                           
 27166                           ;mdm_gsm_gprs.c: 671: {
 27167                           ;mdm_gsm_gprs.c: 673: SendSms_State = SendSms_CmgsCmd;
 27168  001A12  0E01               	movlw	1
 27169  001A14  0101               	movlb	1	; () banked
 27170  001A16  6FED               	movwf	SendSmsSm@SendSms_State& (0+255),b
 27171                           
 27172                           ; BSR set to: 1
 27173                           ;mdm_gsm_gprs.c: 674: }
 27174                           ;mdm_gsm_gprs.c: 675: break;
 27175  001A18  0012               	return	
 27176  001A1A                     
 27177                           ; BSR set to: 1
 27178                           ;mdm_gsm_gprs.c: 679: StringCopy((void*)("AT+CMGS=\""),UartMessage,9);
 27179                           
 27180                           ; BSR set to: 1
 27181  001A1A  0ECE               	movlw	low STR_5
 27182  001A1C  0100               	movlb	0	; () banked
 27183  001A1E  6F85               	movwf	StringCopy@SourceStr& (0+255),b
 27184  001A20  0EFF               	movlw	high STR_5
 27185  001A22  6F86               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 27186  001A24  0E00               	movlw	low SendSmsSm@UartMessage
 27187  001A26  6F87               	movwf	StringCopy@DestStr& (0+255),b
 27188  001A28  0E01               	movlw	high SendSmsSm@UartMessage
 27189  001A2A  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 27190  001A2C  0E00               	movlw	0
 27191  001A2E  6F8A               	movwf	(StringCopy@Len+1)& (0+255),b
 27192  001A30  0E09               	movlw	9
 27193  001A32  6F89               	movwf	StringCopy@Len& (0+255),b
 27194  001A34  EC60  F02C         	call	_StringCopy	;wreg free
 27195                           
 27196                           ;mdm_gsm_gprs.c: 681: StringCopy(PhoneNumber,&UartMessage[9],PhoneNumbLen);
 27197  001A38  0E72               	movlw	low _PhoneNumber
 27198  001A3A  0100               	movlb	0	; () banked
 27199  001A3C  6F85               	movwf	StringCopy@SourceStr& (0+255),b
 27200  001A3E  0E05               	movlw	high _PhoneNumber
 27201  001A40  6F86               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 27202  001A42  0E09               	movlw	low (SendSmsSm@UartMessage+9)
 27203  001A44  6F87               	movwf	StringCopy@DestStr& (0+255),b
 27204  001A46  0E01               	movlw	high (SendSmsSm@UartMessage+9)
 27205  001A48  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 27206  001A4A  C0D2  F089         	movff	_PhoneNumbLen,StringCopy@Len
 27207  001A4E  6B8A               	clrf	(StringCopy@Len+1)& (0+255),b
 27208  001A50  EC60  F02C         	call	_StringCopy	;wreg free
 27209                           
 27210                           ;mdm_gsm_gprs.c: 683: UartMessage[PhoneNumbLen + 9] = '"';
 27211  001A54  0100               	movlb	0	; () banked
 27212  001A56  51D2               	movf	_PhoneNumbLen& (0+255),w,b
 27213  001A58  6F9B               	movwf	??_SendSmsSm& (0+255),b
 27214  001A5A  6B9C               	clrf	(??_SendSmsSm+1)& (0+255),b
 27215  001A5C  0E09               	movlw	9
 27216  001A5E  279B               	addwf	??_SendSmsSm& (0+255),f,b
 27217  001A60  0E00               	movlw	0
 27218  001A62  239C               	addwfc	(??_SendSmsSm+1)& (0+255),f,b
 27219  001A64  0E00               	movlw	low SendSmsSm@UartMessage
 27220  001A66  259B               	addwf	??_SendSmsSm& (0+255),w,b
 27221  001A68  6ED9               	movwf	fsr2l,c
 27222  001A6A  0E01               	movlw	high SendSmsSm@UartMessage
 27223  001A6C  219C               	addwfc	(??_SendSmsSm+1)& (0+255),w,b
 27224  001A6E  6EDA               	movwf	fsr2h,c
 27225  001A70  0E22               	movlw	34
 27226  001A72  6EDF               	movwf	indf2,c
 27227                           
 27228                           ; BSR set to: 0
 27229                           ;mdm_gsm_gprs.c: 684: UartMessage[PhoneNumbLen + 10] = '\r';
 27230  001A74  51D2               	movf	_PhoneNumbLen& (0+255),w,b
 27231  001A76  6F9B               	movwf	??_SendSmsSm& (0+255),b
 27232  001A78  6B9C               	clrf	(??_SendSmsSm+1)& (0+255),b
 27233  001A7A  0E0A               	movlw	10
 27234  001A7C  279B               	addwf	??_SendSmsSm& (0+255),f,b
 27235  001A7E  0E00               	movlw	0
 27236  001A80  239C               	addwfc	(??_SendSmsSm+1)& (0+255),f,b
 27237  001A82  0E00               	movlw	low SendSmsSm@UartMessage
 27238  001A84  259B               	addwf	??_SendSmsSm& (0+255),w,b
 27239  001A86  6ED9               	movwf	fsr2l,c
 27240  001A88  0E01               	movlw	high SendSmsSm@UartMessage
 27241  001A8A  219C               	addwfc	(??_SendSmsSm+1)& (0+255),w,b
 27242  001A8C  6EDA               	movwf	fsr2h,c
 27243  001A8E  0E0D               	movlw	13
 27244  001A90  6EDF               	movwf	indf2,c
 27245                           
 27246                           ; BSR set to: 0
 27247                           ;mdm_gsm_gprs.c: 686: Uart_WriteStringLen(((UINT8)(1)), UartMessage,(PhoneNumbLen + 11))
      +                          ;
 27248  001A92  0E00               	movlw	low SendSmsSm@UartMessage
 27249  001A94  6F80               	movwf	Uart_WriteStringLen@StringToWrite& (0+255),b
 27250  001A96  0E01               	movlw	high SendSmsSm@UartMessage
 27251  001A98  6F81               	movwf	(Uart_WriteStringLen@StringToWrite+1)& (0+255),b
 27252  001A9A  51D2               	movf	_PhoneNumbLen& (0+255),w,b
 27253  001A9C  0F0B               	addlw	11
 27254  001A9E  6F82               	movwf	Uart_WriteStringLen@Len& (0+255),b
 27255  001AA0  0E01               	movlw	1
 27256  001AA2  EC8A  F031         	call	_Uart_WriteStringLen
 27257                           
 27258                           ;mdm_gsm_gprs.c: 688: OsTmr_StartTimer(&SwTimer,2500);
 27259  001AA6  0EE1               	movlw	low SendSmsSm@SwTimer
 27260  001AA8  0100               	movlb	0	; () banked
 27261  001AAA  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 27262  001AAC  0E03               	movlw	high SendSmsSm@SwTimer
 27263  001AAE  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 27264  001AB0  0EC4               	movlw	196
 27265  001AB2  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 27266  001AB4  0E09               	movlw	9
 27267  001AB6  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 27268  001AB8  0E00               	movlw	0
 27269  001ABA  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 27270  001ABC  0E00               	movlw	0
 27271  001ABE  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 27272  001AC0  ECC0  F02C         	call	_OsTmr_StartTimer	;wreg free
 27273                           
 27274                           ;mdm_gsm_gprs.c: 689: SendSms_State = SendSms_Delay;
 27275  001AC4  0E05               	movlw	5
 27276  001AC6  0101               	movlb	1	; () banked
 27277  001AC8  6FED               	movwf	SendSmsSm@SendSms_State& (0+255),b
 27278                           
 27279                           ; BSR set to: 1
 27280                           ;mdm_gsm_gprs.c: 690: SendSms_NextState = SendSms_EnterCmd;
 27281  001ACA  0E02               	movlw	2
 27282  001ACC  6FEC               	movwf	SendSmsSm@SendSms_NextState& (0+255),b
 27283                           
 27284                           ;mdm_gsm_gprs.c: 691: break;
 27285  001ACE  0012               	return	
 27286  001AD0                     
 27287                           ; BSR set to: 1
 27288                           ;mdm_gsm_gprs.c: 695: UartMessage[0] = '\n';
 27289                           
 27290                           ; BSR set to: 1
 27291  001AD0  0E0A               	movlw	10
 27292  001AD2  6F00               	movwf	SendSmsSm@UartMessage& (0+255),b
 27293                           
 27294                           ;mdm_gsm_gprs.c: 696: UartMessage[1] = '\r';
 27295  001AD4  0E0D               	movlw	13
 27296  001AD6  6F01               	movwf	(SendSmsSm@UartMessage+1)& (0+255),b
 27297                           
 27298                           ; BSR set to: 1
 27299                           ;mdm_gsm_gprs.c: 698: Uart_WriteStringLen(((UINT8)(1)), UartMessage,2);
 27300  001AD8  0E00               	movlw	low SendSmsSm@UartMessage
 27301  001ADA  0100               	movlb	0	; () banked
 27302  001ADC  6F80               	movwf	Uart_WriteStringLen@StringToWrite& (0+255),b
 27303  001ADE  0E01               	movlw	high SendSmsSm@UartMessage
 27304  001AE0  6F81               	movwf	(Uart_WriteStringLen@StringToWrite+1)& (0+255),b
 27305  001AE2  0E02               	movlw	2
 27306  001AE4  6F82               	movwf	Uart_WriteStringLen@Len& (0+255),b
 27307  001AE6  0E01               	movlw	1
 27308  001AE8  EC8A  F031         	call	_Uart_WriteStringLen
 27309                           
 27310                           ;mdm_gsm_gprs.c: 700: SendSms_State = SendSms_WaitConf;
 27311  001AEC  0E03               	movlw	3
 27312  001AEE  0101               	movlb	1	; () banked
 27313  001AF0  6FED               	movwf	SendSmsSm@SendSms_State& (0+255),b
 27314                           
 27315                           ;mdm_gsm_gprs.c: 701: break;
 27316  001AF2  0012               	return	
 27317  001AF4                     
 27318                           ; BSR set to: 1
 27319                           ;mdm_gsm_gprs.c: 705: if (ReceiveEvt(&NewStringReceived))
 27320                           
 27321                           ; BSR set to: 1
 27322  001AF4  0E3C               	movlw	low _NewStringReceived
 27323  001AF6  0100               	movlb	0	; () banked
 27324  001AF8  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 27325  001AFA  0E00               	movlw	high _NewStringReceived
 27326  001AFC  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 27327  001AFE  EC91  F033         	call	_ReceiveEvt	;wreg free
 27328  001B02  0900               	iorlw	0
 27329  001B04  B4D8               	btfsc	status,2,c
 27330  001B06  0012               	return	
 27331                           
 27332                           ;mdm_gsm_gprs.c: 706: {
 27333                           ;mdm_gsm_gprs.c: 708: if (RxBuffer[0] == '>')
 27334  001B08  CC58  FFE8         	movff	_RxBuffer,wreg
 27335  001B0C  0A3E               	xorlw	62
 27336  001B0E  A4D8               	btfss	status,2,c
 27337  001B10  0012               	return	
 27338                           
 27339                           ;mdm_gsm_gprs.c: 709: {
 27340                           ;mdm_gsm_gprs.c: 711: SendSms_State = SendSms_SendSmsText;
 27341  001B12  0E04               	movlw	4
 27342  001B14  0101               	movlb	1	; () banked
 27343  001B16  6FED               	movwf	SendSmsSm@SendSms_State& (0+255),b
 27344                           
 27345                           ; BSR set to: 1
 27346                           ;mdm_gsm_gprs.c: 712: }
 27347                           ;mdm_gsm_gprs.c: 713: }
 27348                           ;mdm_gsm_gprs.c: 714: break;
 27349                           
 27350                           ; BSR set to: 1
 27351  001B18  0012               	return	
 27352  001B1A                     
 27353                           ; BSR set to: 1
 27354                           ;mdm_gsm_gprs.c: 718: StringCopy(MessageText,UartMessage,SmsLen);
 27355                           
 27356                           ; BSR set to: 1
 27357  001B1A  0EC8               	movlw	low _MessageText
 27358  001B1C  0100               	movlb	0	; () banked
 27359  001B1E  6F85               	movwf	StringCopy@SourceStr& (0+255),b
 27360  001B20  0E08               	movlw	high _MessageText
 27361  001B22  6F86               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 27362  001B24  0E00               	movlw	low SendSmsSm@UartMessage
 27363  001B26  6F87               	movwf	StringCopy@DestStr& (0+255),b
 27364  001B28  0E01               	movlw	high SendSmsSm@UartMessage
 27365  001B2A  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 27366  001B2C  C0D3  F089         	movff	_SmsLen,StringCopy@Len
 27367  001B30  6B8A               	clrf	(StringCopy@Len+1)& (0+255),b
 27368  001B32  EC60  F02C         	call	_StringCopy	;wreg free
 27369                           
 27370                           ;mdm_gsm_gprs.c: 720: UartMessage[SmsLen] = 0x1A;
 27371  001B36  0100               	movlb	0	; () banked
 27372  001B38  51D3               	movf	_SmsLen& (0+255),w,b
 27373  001B3A  0D01               	mullw	1
 27374  001B3C  0E00               	movlw	low SendSmsSm@UartMessage
 27375  001B3E  24F3               	addwf	prodl,w,c
 27376  001B40  6ED9               	movwf	fsr2l,c
 27377  001B42  0E01               	movlw	high SendSmsSm@UartMessage
 27378  001B44  20F4               	addwfc	prodh,w,c
 27379  001B46  6EDA               	movwf	fsr2h,c
 27380  001B48  0E1A               	movlw	26
 27381  001B4A  6EDF               	movwf	indf2,c
 27382                           
 27383                           ; BSR set to: 0
 27384                           ;mdm_gsm_gprs.c: 722: Uart_WriteStringLen(((UINT8)(1)), UartMessage,(SmsLen + 1));
 27385  001B4C  0E00               	movlw	low SendSmsSm@UartMessage
 27386  001B4E  6F80               	movwf	Uart_WriteStringLen@StringToWrite& (0+255),b
 27387  001B50  0E01               	movlw	high SendSmsSm@UartMessage
 27388  001B52  6F81               	movwf	(Uart_WriteStringLen@StringToWrite+1)& (0+255),b
 27389  001B54  29D3               	incf	_SmsLen& (0+255),w,b
 27390  001B56  6F82               	movwf	Uart_WriteStringLen@Len& (0+255),b
 27391  001B58  0E01               	movlw	1
 27392  001B5A  EC8A  F031         	call	_Uart_WriteStringLen
 27393                           
 27394                           ;mdm_gsm_gprs.c: 724: SendSms_State = SendSms_WaitEvt;
 27395  001B5E  0E00               	movlw	0
 27396  001B60  0101               	movlb	1	; () banked
 27397  001B62  6FED               	movwf	SendSmsSm@SendSms_State& (0+255),b
 27398                           
 27399                           ;mdm_gsm_gprs.c: 725: break;
 27400  001B64  0012               	return	
 27401  001B66                     
 27402                           ; BSR set to: 1
 27403                           ;mdm_gsm_gprs.c: 729: if (OsTmr_GetTimerStatus(&SwTimer) == SwTimerExpired)
 27404                           
 27405                           ; BSR set to: 1
 27406  001B66  0EE1               	movlw	low SendSmsSm@SwTimer
 27407  001B68  0100               	movlb	0	; () banked
 27408  001B6A  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 27409  001B6C  0E03               	movlw	high SendSmsSm@SwTimer
 27410  001B6E  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 27411  001B70  ECA9  F028         	call	_OsTmr_GetTimerStatus	;wreg free
 27412  001B74  06E8               	decf	wreg,f,c
 27413  001B76  A4D8               	btfss	status,2,c
 27414  001B78  0012               	return	
 27415                           
 27416                           ;mdm_gsm_gprs.c: 730: {
 27417                           ;mdm_gsm_gprs.c: 732: SendSms_State = SendSms_NextState;
 27418  001B7A  C1EC  F1ED         	movff	SendSmsSm@SendSms_NextState,SendSmsSm@SendSms_State
 27419                           
 27420                           ;mdm_gsm_gprs.c: 738: }
 27421                           
 27422                           ;mdm_gsm_gprs.c: 737: break;
 27423                           
 27424                           ;mdm_gsm_gprs.c: 736: default:
 27425                           
 27426                           ;mdm_gsm_gprs.c: 733: }
 27427                           ;mdm_gsm_gprs.c: 734: break;
 27428  001B7E  0012               	return	
 27429  001B80                     l1091:
 27430  001B80  0101               	movlb	1	; () banked
 27431  001B82  51ED               	movf	SendSmsSm@SendSms_State& (0+255),w,b
 27432                           
 27433                           ; Switch size 1, requested type "space"
 27434                           ; Number of cases is 6, Range of values is 0 to 5
 27435                           ; switch strategies available:
 27436                           ; Name         Instructions Cycles
 27437                           ; simple_byte           19    10 (average)
 27438                           ;	Chosen strategy is simple_byte
 27439  001B84  0A00               	xorlw	0	; case 0
 27440  001B86  B4D8               	btfsc	status,2,c
 27441  001B88  D73A               	goto	l1092
 27442  001B8A  0A01               	xorlw	1	; case 1
 27443  001B8C  B4D8               	btfsc	status,2,c
 27444  001B8E  D745               	goto	l1095
 27445  001B90  0A03               	xorlw	3	; case 2
 27446  001B92  B4D8               	btfsc	status,2,c
 27447  001B94  D79D               	goto	l1096
 27448  001B96  0A01               	xorlw	1	; case 3
 27449  001B98  B4D8               	btfsc	status,2,c
 27450  001B9A  D7AC               	goto	l1097
 27451  001B9C  0A07               	xorlw	7	; case 4
 27452  001B9E  B4D8               	btfsc	status,2,c
 27453  001BA0  D7BC               	goto	l1100
 27454  001BA2  0A01               	xorlw	1	; case 5
 27455  001BA4  A4D8               	btfss	status,2,c
 27456                           
 27457                           ; BSR set to: 1
 27458  001BA6  0012               	return	
 27459  001BA8  D7DE               	goto	l1101
 27460  001BAA                     __end_of_SendSmsSm:
 27461                           	opt stack 0
 27462                           tosu	equ	0xFFF
 27463                           tosh	equ	0xFFE
 27464                           tosl	equ	0xFFD
 27465                           pclath	equ	0xFFA
 27466                           tblptru	equ	0xFF8
 27467                           tblptrh	equ	0xFF7
 27468                           tblptrl	equ	0xFF6
 27469                           tablat	equ	0xFF5
 27470                           prodh	equ	0xFF4
 27471                           prodl	equ	0xFF3
 27472                           intcon	equ	0xFF2
 27473                           intcon2	equ	0xFF1
 27474                           intcon3	equ	0xFF0
 27475                           indf0	equ	0xFEF
 27476                           postinc0	equ	0xFEE
 27477                           plusw0	equ	0xFEB
 27478                           fsr0h	equ	0xFEA
 27479                           fsr0l	equ	0xFE9
 27480                           wreg	equ	0xFE8
 27481                           indf1	equ	0xFE7
 27482                           postinc1	equ	0xFE6
 27483                           postdec1	equ	0xFE5
 27484                           fsr1h	equ	0xFE2
 27485                           fsr1l	equ	0xFE1
 27486                           indf2	equ	0xFDF
 27487                           postinc2	equ	0xFDE
 27488                           postdec2	equ	0xFDD
 27489                           plusw2	equ	0xFDB
 27490                           fsr2h	equ	0xFDA
 27491                           fsr2l	equ	0xFD9
 27492                           status	equ	0xFD8
 27493                           
 27494 ;; *************** function _Uart_WriteStringLen *****************
 27495 ;; Defined at:
 27496 ;;		line 542 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 27497 ;; Parameters:    Size  Location     Type
 27498 ;;  Module          1    wreg     unsigned char 
 27499 ;;  StringToWrit    2   32[BANK0 ] PTR unsigned char 
 27500 ;;		 -> GsmGprsTerminal@UartBuffer(200), SendSmsSm@UartMessage(50), 
 27501 ;;  Len             1   34[BANK0 ] unsigned char 
 27502 ;; Auto vars:     Size  Location     Type
 27503 ;;  Module          1   36[BANK0 ] unsigned char 
 27504 ;;  Index           1   35[BANK0 ] unsigned char 
 27505 ;; Return value:  Size  Location     Type
 27506 ;;                  1    wreg      void 
 27507 ;; Registers used:
 27508 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 27509 ;; Tracked objects:
 27510 ;;		On entry : 0/0
 27511 ;;		On exit  : 0/0
 27512 ;;		Unchanged: 0/0
 27513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27514 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27515 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27517 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27518 ;;Total ram usage:        5 bytes
 27519 ;; Hardware stack levels used:    1
 27520 ;; Hardware stack levels required when called:   12
 27521 ;; This function calls:
 27522 ;;		_UartTxBufferStatus
 27523 ;;		_UartWriteByte
 27524 ;; This function is called by:
 27525 ;;		_SendSmsSm
 27526 ;;		_GsmGprsTerminal
 27527 ;; This function uses a non-reentrant model
 27528 ;;
 27529                           
 27530                           	psect	text131
 27531  006314                     __ptext131:
 27532                           	opt stack 0
 27533  006314                     _Uart_WriteStringLen:
 27534                           	opt stack 14
 27535                           
 27536                           ;incstack = 0
 27537                           ;Uart_WriteStringLen@Module stored from wreg
 27538  006314  0100               	movlb	0	; () banked
 27539  006316  6F84               	movwf	Uart_WriteStringLen@Module& (0+255),b
 27540                           
 27541                           ;uart_drv.c: 544: UINT8 Index;
 27542                           ;uart_drv.c: 546: for (Index = 0; Index < Len; Index++)
 27543  006318  0E00               	movlw	0
 27544  00631A  0100               	movlb	0	; () banked
 27545  00631C  6F83               	movwf	Uart_WriteStringLen@Index& (0+255),b
 27546  00631E  D015               	goto	l715
 27547  006320                     
 27548                           ; BSR set to: 0
 27549                           ;uart_drv.c: 547: {
 27550                           ;uart_drv.c: 549: UartWriteByte(Module, *StringToWrite);
 27551                           
 27552                           ; BSR set to: 0
 27553  006320  C080  FFD9         	movff	Uart_WriteStringLen@StringToWrite,fsr2l
 27554  006324  C081  FFDA         	movff	Uart_WriteStringLen@StringToWrite+1,fsr2h
 27555  006328  50DF               	movf	indf2,w,c
 27556  00632A  6F7D               	movwf	UartWriteByte@ByteToWrite& (0+255),b
 27557  00632C  5184               	movf	Uart_WriteStringLen@Module& (0+255),w,b
 27558  00632E  ECDD  F034         	call	_UartWriteByte
 27559                           
 27560                           ;uart_drv.c: 551: StringToWrite++;
 27561  006332  0100               	movlb	0	; () banked
 27562  006334  4B80               	infsnz	Uart_WriteStringLen@StringToWrite& (0+255),f,b
 27563  006336  2B81               	incf	(Uart_WriteStringLen@StringToWrite+1)& (0+255),f,b
 27564  006338                     
 27565                           ; BSR set to: 0
 27566                           
 27567                           ; BSR set to: 0
 27568  006338  0100               	movlb	0	; () banked
 27569  00633A  5184               	movf	Uart_WriteStringLen@Module& (0+255),w,b
 27570  00633C  ECBB  F02F         	call	_UartTxBufferStatus
 27571  006340  06E8               	decf	wreg,f,c
 27572  006342  B4D8               	btfsc	status,2,c
 27573  006344  D7F9               	goto	l718
 27574  006346  0100               	movlb	0	; () banked
 27575  006348  2B83               	incf	Uart_WriteStringLen@Index& (0+255),f,b
 27576  00634A                     l715:
 27577                           
 27578                           ; BSR set to: 0
 27579                           
 27580                           ; BSR set to: 0
 27581  00634A  5182               	movf	Uart_WriteStringLen@Len& (0+255),w,b
 27582  00634C  5D83               	subwf	Uart_WriteStringLen@Index& (0+255),w,b
 27583  00634E  B0D8               	btfsc	status,0,c
 27584  006350  0012               	return	
 27585  006352  D7E6               	goto	l716
 27586  006354                     __end_of_Uart_WriteStringLen:
 27587                           	opt stack 0
 27588                           tosu	equ	0xFFF
 27589                           tosh	equ	0xFFE
 27590                           tosl	equ	0xFFD
 27591                           pclath	equ	0xFFA
 27592                           tblptru	equ	0xFF8
 27593                           tblptrh	equ	0xFF7
 27594                           tblptrl	equ	0xFF6
 27595                           tablat	equ	0xFF5
 27596                           prodh	equ	0xFF4
 27597                           prodl	equ	0xFF3
 27598                           intcon	equ	0xFF2
 27599                           intcon2	equ	0xFF1
 27600                           intcon3	equ	0xFF0
 27601                           indf0	equ	0xFEF
 27602                           postinc0	equ	0xFEE
 27603                           plusw0	equ	0xFEB
 27604                           fsr0h	equ	0xFEA
 27605                           fsr0l	equ	0xFE9
 27606                           wreg	equ	0xFE8
 27607                           indf1	equ	0xFE7
 27608                           postinc1	equ	0xFE6
 27609                           postdec1	equ	0xFE5
 27610                           fsr1h	equ	0xFE2
 27611                           fsr1l	equ	0xFE1
 27612                           indf2	equ	0xFDF
 27613                           postinc2	equ	0xFDE
 27614                           postdec2	equ	0xFDD
 27615                           plusw2	equ	0xFDB
 27616                           fsr2h	equ	0xFDA
 27617                           fsr2l	equ	0xFD9
 27618                           status	equ	0xFD8
 27619                           
 27620 ;; *************** function _ModemEvtParser *****************
 27621 ;; Defined at:
 27622 ;;		line 499 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 27623 ;; Parameters:    Size  Location     Type
 27624 ;;		None
 27625 ;; Auto vars:     Size  Location     Type
 27626 ;;  CallReadyStr   10   47[BANK0 ] unsigned char [10]
 27627 ;;  SmsString       5   62[BANK0 ] unsigned char [5]
 27628 ;;  ClipString      5   57[BANK0 ] unsigned char [5]
 27629 ;;  RingString      4   67[BANK0 ] unsigned char [4]
 27630 ;;  CompareIdx      1   72[BANK0 ] unsigned char 
 27631 ;;  Match           1   71[BANK0 ] unsigned char 
 27632 ;; Return value:  Size  Location     Type
 27633 ;;                  1    wreg      void 
 27634 ;; Registers used:
 27635 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 27636 ;; Tracked objects:
 27637 ;;		On entry : 0/0
 27638 ;;		On exit  : 0/0
 27639 ;;		Unchanged: 0/0
 27640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27641 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27642 ;;      Locals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27644 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27645 ;;Total ram usage:       26 bytes
 27646 ;; Hardware stack levels used:    1
 27647 ;; Hardware stack levels required when called:   12
 27648 ;; This function calls:
 27649 ;;		_GenerateEvt
 27650 ;;		_ReceiveEvt
 27651 ;;		_StringCompare
 27652 ;;		_StringCopy
 27653 ;;		_Uart_ClearRxBuffer
 27654 ;; This function is called by:
 27655 ;;		_Mdm_MainTask
 27656 ;; This function uses a non-reentrant model
 27657 ;;
 27658                           
 27659                           	psect	text132
 27660  001D30                     __ptext132:
 27661                           	opt stack 0
 27662  001D30                     _ModemEvtParser:
 27663                           	opt stack 15
 27664                           
 27665                           ;mdm_gsm_gprs.c: 501: UINT8 RingString[] = {'R','I','N','G'};
 27666                           
 27667                           ; BSR set to: 0
 27668                           ;incstack = 0
 27669  001D30  C3C7  F0A3         	movff	ModemEvtParser@F9110,ModemEvtParser@RingString
 27670  001D34  C3C8  F0A4         	movff	ModemEvtParser@F9110+1,ModemEvtParser@RingString+1
 27671  001D38  C3C9  F0A5         	movff	ModemEvtParser@F9110+2,ModemEvtParser@RingString+2
 27672  001D3C  C3CA  F0A6         	movff	ModemEvtParser@F9110+3,ModemEvtParser@RingString+3
 27673                           
 27674                           ;mdm_gsm_gprs.c: 502: UINT8 ClipString[] = {'+','C','L','I', 'P'};
 27675  001D40  EE23  F0C2         	lfsr	2,ModemEvtParser@F9112
 27676  001D44  EE10  F099         	lfsr	1,ModemEvtParser@ClipString
 27677  001D48  0E04               	movlw	4
 27678  001D4A                     u15001:
 27679  001D4A  CFDB FFE3          	movff	plusw2,plusw1
 27680  001D4E  06E8               	decf	wreg,f,c
 27681  001D50  E2FC               	bc	u15001
 27682                           
 27683                           ;mdm_gsm_gprs.c: 503: UINT8 SmsString[] = {'+','C','M','T','I'};
 27684  001D52  EE23  F0BD         	lfsr	2,ModemEvtParser@F9114
 27685  001D56  EE10  F09E         	lfsr	1,ModemEvtParser@SmsString
 27686  001D5A  0E04               	movlw	4
 27687  001D5C                     u15011:
 27688  001D5C  CFDB FFE3          	movff	plusw2,plusw1
 27689  001D60  06E8               	decf	wreg,f,c
 27690  001D62  E2FC               	bc	u15011
 27691                           
 27692                           ;mdm_gsm_gprs.c: 504: UINT8 CallReadyString[] = {'C','a','l','l',' ','R','e','a','d','y'
      +                          };
 27693  001D64  EE24  F0E6         	lfsr	2,ModemEvtParser@F9116
 27694  001D68  EE10  F08F         	lfsr	1,ModemEvtParser@CallReadyString
 27695  001D6C  0E09               	movlw	9
 27696  001D6E                     u15021:
 27697  001D6E  CFDB FFE3          	movff	plusw2,plusw1
 27698  001D72  06E8               	decf	wreg,f,c
 27699  001D74  E2FC               	bc	u15021
 27700                           
 27701                           ;mdm_gsm_gprs.c: 505: UINT8 CompareIdx = 0;
 27702  001D76  0E00               	movlw	0
 27703  001D78  0100               	movlb	0	; () banked
 27704  001D7A  6FA8               	movwf	ModemEvtParser@CompareIdx& (0+255),b
 27705                           
 27706                           ; BSR set to: 0
 27707                           ;mdm_gsm_gprs.c: 506: UINT8 Match = 0;
 27708  001D7C  0E00               	movlw	0
 27709  001D7E  6FA7               	movwf	ModemEvtParser@Match& (0+255),b
 27710                           
 27711                           ; BSR set to: 0
 27712                           ;mdm_gsm_gprs.c: 509: if (ReceiveEvt(&NewMdmEvtParserRequest))
 27713  001D80  0E3B               	movlw	low _NewMdmEvtParserRequest
 27714  001D82  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 27715  001D84  0E00               	movlw	high _NewMdmEvtParserRequest
 27716  001D86  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 27717  001D88  EC91  F033         	call	_ReceiveEvt	;wreg free
 27718  001D8C  0900               	iorlw	0
 27719  001D8E  B4D8               	btfsc	status,2,c
 27720  001D90  0012               	return	
 27721                           
 27722                           ;mdm_gsm_gprs.c: 510: {
 27723                           ;mdm_gsm_gprs.c: 511: for (CompareIdx = 0; CompareIdx < ((UINT8)(4)); CompareIdx++)
 27724  001D92  0E00               	movlw	0
 27725  001D94  0100               	movlb	0	; () banked
 27726  001D96  6FA8               	movwf	ModemEvtParser@CompareIdx& (0+255),b
 27727  001D98                     l15583:
 27728                           
 27729                           ; BSR set to: 0
 27730  001D98  0E03               	movlw	3
 27731  001D9A  65A8               	cpfsgt	ModemEvtParser@CompareIdx& (0+255),b
 27732  001D9C  D074               	goto	l1052
 27733  001D9E  D083               	goto	u15090
 27734  001DA0                     
 27735                           ; BSR set to: 0
 27736                           ;mdm_gsm_gprs.c: 517: if (StringCompare(RingString, RxBuffer, sizeof(RingString)))
 27737                           
 27738                           ; BSR set to: 0
 27739  001DA0  0EA3               	movlw	low ModemEvtParser@RingString
 27740  001DA2  6F7D               	movwf	StringCompare@String1& (0+255),b
 27741  001DA4  0E00               	movlw	high ModemEvtParser@RingString
 27742  001DA6  6F7E               	movwf	(StringCompare@String1+1)& (0+255),b
 27743  001DA8  0E58               	movlw	low _RxBuffer
 27744  001DAA  6F7F               	movwf	StringCompare@String2& (0+255),b
 27745  001DAC  0E0C               	movlw	high _RxBuffer
 27746  001DAE  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 27747  001DB0  0E00               	movlw	0
 27748  001DB2  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 27749  001DB4  0E04               	movlw	4
 27750  001DB6  6F81               	movwf	StringCompare@Len& (0+255),b
 27751  001DB8  ECF3  F02E         	call	_StringCompare	;wreg free
 27752  001DBC  0900               	iorlw	0
 27753  001DBE  B4D8               	btfsc	status,2,c
 27754  001DC0  D06F               	goto	l1055
 27755                           
 27756                           ;mdm_gsm_gprs.c: 518: {
 27757                           ;mdm_gsm_gprs.c: 520: GenerateEvt(&RingEvent);
 27758  001DC2  0EDD               	movlw	low _RingEvent
 27759  001DC4  0100               	movlb	0	; () banked
 27760  001DC6  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 27761  001DC8  0E00               	movlw	high _RingEvent
 27762  001DCA  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 27763  001DCC  EC82  F035         	call	_GenerateEvt	;wreg free
 27764  001DD0  D040               	goto	l15605
 27765  001DD2                     
 27766                           ; BSR set to: 0
 27767                           ;mdm_gsm_gprs.c: 528: if (StringCompare(ClipString, RxBuffer, sizeof(ClipString)))
 27768                           
 27769                           ; BSR set to: 0
 27770  001DD2  0E99               	movlw	low ModemEvtParser@ClipString
 27771  001DD4  6F7D               	movwf	StringCompare@String1& (0+255),b
 27772  001DD6  0E00               	movlw	high ModemEvtParser@ClipString
 27773  001DD8  6F7E               	movwf	(StringCompare@String1+1)& (0+255),b
 27774  001DDA  0E58               	movlw	low _RxBuffer
 27775  001DDC  6F7F               	movwf	StringCompare@String2& (0+255),b
 27776  001DDE  0E0C               	movlw	high _RxBuffer
 27777  001DE0  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 27778  001DE2  0E00               	movlw	0
 27779  001DE4  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 27780  001DE6  0E05               	movlw	5
 27781  001DE8  6F81               	movwf	StringCompare@Len& (0+255),b
 27782  001DEA  ECF3  F02E         	call	_StringCompare	;wreg free
 27783  001DEE  0900               	iorlw	0
 27784  001DF0  B4D8               	btfsc	status,2,c
 27785  001DF2  D056               	goto	l1055
 27786                           
 27787                           ;mdm_gsm_gprs.c: 529: {
 27788                           ;mdm_gsm_gprs.c: 530: StringCopy(RxBuffer + 8, callerNumber, ((UINT8)(13)));
 27789  001DF4  0E60               	movlw	low (_RxBuffer+8)
 27790  001DF6  0100               	movlb	0	; () banked
 27791  001DF8  6F85               	movwf	StringCopy@SourceStr& (0+255),b
 27792  001DFA  0E0C               	movlw	high (_RxBuffer+8)
 27793  001DFC  6F86               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 27794  001DFE  0EC3               	movlw	low _callerNumber
 27795  001E00  6F87               	movwf	StringCopy@DestStr& (0+255),b
 27796  001E02  0E04               	movlw	high _callerNumber
 27797  001E04  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 27798  001E06  0E00               	movlw	0
 27799  001E08  6F8A               	movwf	(StringCopy@Len+1)& (0+255),b
 27800  001E0A  0E0D               	movlw	13
 27801  001E0C  6F89               	movwf	StringCopy@Len& (0+255),b
 27802  001E0E  EC60  F02C         	call	_StringCopy	;wreg free
 27803                           
 27804                           ;mdm_gsm_gprs.c: 532: GenerateEvt(&ClipEvent);
 27805  001E12  0EDC               	movlw	low _ClipEvent
 27806  001E14  0100               	movlb	0	; () banked
 27807  001E16  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 27808  001E18  0E00               	movlw	high _ClipEvent
 27809  001E1A  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 27810  001E1C  EC82  F035         	call	_GenerateEvt	;wreg free
 27811  001E20  D018               	goto	l15605
 27812  001E22                     
 27813                           ; BSR set to: 0
 27814                           ;mdm_gsm_gprs.c: 540: if (StringCompare(SmsString, RxBuffer, sizeof(SmsString)))
 27815                           
 27816                           ; BSR set to: 0
 27817  001E22  0E9E               	movlw	low ModemEvtParser@SmsString
 27818  001E24  6F7D               	movwf	StringCompare@String1& (0+255),b
 27819  001E26  0E00               	movlw	high ModemEvtParser@SmsString
 27820  001E28  6F7E               	movwf	(StringCompare@String1+1)& (0+255),b
 27821  001E2A  0E58               	movlw	low _RxBuffer
 27822  001E2C  6F7F               	movwf	StringCompare@String2& (0+255),b
 27823  001E2E  0E0C               	movlw	high _RxBuffer
 27824  001E30  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 27825  001E32  0E00               	movlw	0
 27826  001E34  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 27827  001E36  0E05               	movlw	5
 27828  001E38  6F81               	movwf	StringCompare@Len& (0+255),b
 27829  001E3A  ECF3  F02E         	call	_StringCompare	;wreg free
 27830  001E3E  0900               	iorlw	0
 27831  001E40  B4D8               	btfsc	status,2,c
 27832  001E42  D02E               	goto	l1055
 27833                           
 27834                           ;mdm_gsm_gprs.c: 541: {
 27835                           ;mdm_gsm_gprs.c: 543: GenerateEvt(&SmsEvent);
 27836  001E44  0EDB               	movlw	low _SmsEvent
 27837  001E46  0100               	movlb	0	; () banked
 27838  001E48  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 27839  001E4A  0E00               	movlw	high _SmsEvent
 27840  001E4C  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 27841  001E4E  EC82  F035         	call	_GenerateEvt	;wreg free
 27842  001E52                     l15605:
 27843                           
 27844                           ;mdm_gsm_gprs.c: 545: Match = 1;
 27845  001E52  0E01               	movlw	1
 27846  001E54  0100               	movlb	0	; () banked
 27847  001E56  D015               	goto	L58
 27848  001E58                     
 27849                           ; BSR set to: 0
 27850                           ;mdm_gsm_gprs.c: 551: if (StringCompare(CallReadyString, RxBuffer, sizeof(CallReadyStrin
      +                          g)))
 27851                           
 27852                           ; BSR set to: 0
 27853  001E58  0E8F               	movlw	low ModemEvtParser@CallReadyString
 27854  001E5A  6F7D               	movwf	StringCompare@String1& (0+255),b
 27855  001E5C  0E00               	movlw	high ModemEvtParser@CallReadyString
 27856  001E5E  6F7E               	movwf	(StringCompare@String1+1)& (0+255),b
 27857  001E60  0E58               	movlw	low _RxBuffer
 27858  001E62  6F7F               	movwf	StringCompare@String2& (0+255),b
 27859  001E64  0E0C               	movlw	high _RxBuffer
 27860  001E66  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 27861  001E68  0E00               	movlw	0
 27862  001E6A  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 27863  001E6C  0E0A               	movlw	10
 27864  001E6E  6F81               	movwf	StringCompare@Len& (0+255),b
 27865  001E70  ECF3  F02E         	call	_StringCompare	;wreg free
 27866  001E74  0900               	iorlw	0
 27867  001E76  B4D8               	btfsc	status,2,c
 27868  001E78  D013               	goto	l1055
 27869                           
 27870                           ;mdm_gsm_gprs.c: 552: {
 27871                           ;mdm_gsm_gprs.c: 554: MdmStatus = ModemReady;
 27872  001E7A  0E02               	movlw	2
 27873  001E7C  0100               	movlb	0	; () banked
 27874  001E7E  6FD1               	movwf	_MdmStatus& (0+255),b
 27875                           
 27876                           ;mdm_gsm_gprs.c: 556: Match = 1;
 27877  001E80  0E01               	movlw	1
 27878  001E82                     L58:
 27879  001E82  6FA7               	movwf	ModemEvtParser@Match& (0+255),b
 27880                           
 27881                           ; BSR set to: 0
 27882                           ;mdm_gsm_gprs.c: 562: }
 27883                           
 27884                           ; BSR set to: 0
 27885                           ;mdm_gsm_gprs.c: 561: break;
 27886                           
 27887                           ;mdm_gsm_gprs.c: 560: default:
 27888                           
 27889                           ; BSR set to: 0
 27890                           ;mdm_gsm_gprs.c: 557: }
 27891                           ;mdm_gsm_gprs.c: 558: break;
 27892  001E84  D00D               	goto	l1055
 27893  001E86                     l1052:
 27894                           
 27895                           ; BSR set to: 0
 27896                           
 27897                           ; BSR set to: 0
 27898  001E86  51A8               	movf	ModemEvtParser@CompareIdx& (0+255),w,b
 27899                           
 27900                           ; Switch size 1, requested type "space"
 27901                           ; Number of cases is 4, Range of values is 0 to 3
 27902                           ; switch strategies available:
 27903                           ; Name         Instructions Cycles
 27904                           ; simple_byte           13     7 (average)
 27905                           ;	Chosen strategy is simple_byte
 27906  001E88  0A00               	xorlw	0	; case 0
 27907  001E8A  B4D8               	btfsc	status,2,c
 27908  001E8C  D789               	goto	l1053
 27909  001E8E  0A01               	xorlw	1	; case 1
 27910  001E90  B4D8               	btfsc	status,2,c
 27911  001E92  D7C7               	goto	l1058
 27912  001E94  0A03               	xorlw	3	; case 2
 27913  001E96  B4D8               	btfsc	status,2,c
 27914  001E98  D7DF               	goto	l1060
 27915  001E9A  0A01               	xorlw	1	; case 3
 27916  001E9C  B4D8               	btfsc	status,2,c
 27917  001E9E  D799               	goto	l1056
 27918  001EA0                     l1055:
 27919                           
 27920                           ; BSR set to: 0
 27921  001EA0  0100               	movlb	0	; () banked
 27922  001EA2  2BA8               	incf	ModemEvtParser@CompareIdx& (0+255),f,b
 27923  001EA4  D779               	goto	l15583
 27924  001EA6                     u15090:
 27925                           
 27926                           ; BSR set to: 0
 27927                           ;mdm_gsm_gprs.c: 563: }
 27928                           ;mdm_gsm_gprs.c: 566: if (Match == 1)
 27929                           
 27930                           ; BSR set to: 0
 27931  001EA6  05A7               	decf	ModemEvtParser@Match& (0+255),w,b
 27932  001EA8  A4D8               	btfss	status,2,c
 27933  001EAA  0012               	return	
 27934                           
 27935                           ; BSR set to: 0
 27936                           ;mdm_gsm_gprs.c: 567: {
 27937                           ;mdm_gsm_gprs.c: 570: Uart_ClearRxBuffer();
 27938  001EAC  ECCE  F032         	call	_Uart_ClearRxBuffer	;wreg free
 27939  001EB0  0012               	return	
 27940  001EB2                     __end_of_ModemEvtParser:
 27941                           	opt stack 0
 27942                           tosu	equ	0xFFF
 27943                           tosh	equ	0xFFE
 27944                           tosl	equ	0xFFD
 27945                           pclath	equ	0xFFA
 27946                           tblptru	equ	0xFF8
 27947                           tblptrh	equ	0xFF7
 27948                           tblptrl	equ	0xFF6
 27949                           tablat	equ	0xFF5
 27950                           prodh	equ	0xFF4
 27951                           prodl	equ	0xFF3
 27952                           intcon	equ	0xFF2
 27953                           intcon2	equ	0xFF1
 27954                           intcon3	equ	0xFF0
 27955                           indf0	equ	0xFEF
 27956                           postinc0	equ	0xFEE
 27957                           plusw0	equ	0xFEB
 27958                           fsr0h	equ	0xFEA
 27959                           fsr0l	equ	0xFE9
 27960                           wreg	equ	0xFE8
 27961                           indf1	equ	0xFE7
 27962                           postinc1	equ	0xFE6
 27963                           postdec1	equ	0xFE5
 27964                           plusw1	equ	0xFE3
 27965                           fsr1h	equ	0xFE2
 27966                           fsr1l	equ	0xFE1
 27967                           indf2	equ	0xFDF
 27968                           postinc2	equ	0xFDE
 27969                           postdec2	equ	0xFDD
 27970                           plusw2	equ	0xFDB
 27971                           fsr2h	equ	0xFDA
 27972                           fsr2l	equ	0xFD9
 27973                           status	equ	0xFD8
 27974                           
 27975 ;; *************** function _Uart_ClearRxBuffer *****************
 27976 ;; Defined at:
 27977 ;;		line 565 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 27978 ;; Parameters:    Size  Location     Type
 27979 ;;		None
 27980 ;; Auto vars:     Size  Location     Type
 27981 ;;  Index           2   29[BANK0 ] unsigned short 
 27982 ;; Return value:  Size  Location     Type
 27983 ;;                  1    wreg      void 
 27984 ;; Registers used:
 27985 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 27986 ;; Tracked objects:
 27987 ;;		On entry : 0/0
 27988 ;;		On exit  : 0/0
 27989 ;;		Unchanged: 0/0
 27990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27991 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27992 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27994 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27995 ;;Total ram usage:        2 bytes
 27996 ;; Hardware stack levels used:    1
 27997 ;; Hardware stack levels required when called:   11
 27998 ;; This function calls:
 27999 ;;		Nothing
 28000 ;; This function is called by:
 28001 ;;		_ModemEvtParser
 28002 ;; This function uses a non-reentrant model
 28003 ;;
 28004                           
 28005                           	psect	text133
 28006  00659C                     __ptext133:
 28007                           	opt stack 0
 28008  00659C                     _Uart_ClearRxBuffer:
 28009                           	opt stack 15
 28010                           
 28011                           ;uart_drv.c: 567: UINT16 Index = 0;
 28012                           
 28013                           ;incstack = 0
 28014  00659C  0E00               	movlw	0
 28015  00659E  0100               	movlb	0	; () banked
 28016  0065A0  6F7E               	movwf	(Uart_ClearRxBuffer@Index+1)& (0+255),b
 28017  0065A2  0E00               	movlw	0
 28018  0065A4  6F7D               	movwf	Uart_ClearRxBuffer@Index& (0+255),b
 28019                           
 28020                           ;uart_drv.c: 570: for (Index = 0; Index <= (((UINT16)(400)) - 1); Index++)
 28021  0065A6  0E00               	movlw	0
 28022  0065A8  6F7E               	movwf	(Uart_ClearRxBuffer@Index+1)& (0+255),b
 28023  0065AA  0E00               	movlw	0
 28024  0065AC  6F7D               	movwf	Uart_ClearRxBuffer@Index& (0+255),b
 28025  0065AE                     l14689:
 28026                           
 28027                           ; BSR set to: 0
 28028  0065AE  0E90               	movlw	144
 28029  0065B0  5D7D               	subwf	Uart_ClearRxBuffer@Index& (0+255),w,b
 28030  0065B2  0E01               	movlw	1
 28031  0065B4  597E               	subwfb	(Uart_ClearRxBuffer@Index+1)& (0+255),w,b
 28032  0065B6  B0D8               	btfsc	status,0,c
 28033  0065B8  0012               	return	
 28034                           
 28035                           ; BSR set to: 0
 28036                           ;uart_drv.c: 571: {
 28037                           ;uart_drv.c: 572: RxBuffer[Index] = 0;
 28038                           
 28039                           ; BSR set to: 0
 28040                           
 28041                           ; BSR set to: 0
 28042  0065BA  0E58               	movlw	low _RxBuffer
 28043  0065BC  257D               	addwf	Uart_ClearRxBuffer@Index& (0+255),w,b
 28044  0065BE  6ED9               	movwf	fsr2l,c
 28045  0065C0  0E0C               	movlw	high _RxBuffer
 28046  0065C2  217E               	addwfc	(Uart_ClearRxBuffer@Index+1)& (0+255),w,b
 28047  0065C4  6EDA               	movwf	fsr2h,c
 28048  0065C6  0E00               	movlw	0
 28049  0065C8  6EDF               	movwf	indf2,c
 28050                           
 28051                           ; BSR set to: 0
 28052  0065CA  4B7D               	infsnz	Uart_ClearRxBuffer@Index& (0+255),f,b
 28053  0065CC  2B7E               	incf	(Uart_ClearRxBuffer@Index+1)& (0+255),f,b
 28054  0065CE  D7EF               	goto	l14689
 28055  0065D0                     __end_of_Uart_ClearRxBuffer:
 28056                           	opt stack 0
 28057                           tosu	equ	0xFFF
 28058                           tosh	equ	0xFFE
 28059                           tosl	equ	0xFFD
 28060                           pclath	equ	0xFFA
 28061                           tblptru	equ	0xFF8
 28062                           tblptrh	equ	0xFF7
 28063                           tblptrl	equ	0xFF6
 28064                           tablat	equ	0xFF5
 28065                           prodh	equ	0xFF4
 28066                           prodl	equ	0xFF3
 28067                           intcon	equ	0xFF2
 28068                           intcon2	equ	0xFF1
 28069                           intcon3	equ	0xFF0
 28070                           indf0	equ	0xFEF
 28071                           postinc0	equ	0xFEE
 28072                           plusw0	equ	0xFEB
 28073                           fsr0h	equ	0xFEA
 28074                           fsr0l	equ	0xFE9
 28075                           wreg	equ	0xFE8
 28076                           indf1	equ	0xFE7
 28077                           postinc1	equ	0xFE6
 28078                           postdec1	equ	0xFE5
 28079                           plusw1	equ	0xFE3
 28080                           fsr1h	equ	0xFE2
 28081                           fsr1l	equ	0xFE1
 28082                           indf2	equ	0xFDF
 28083                           postinc2	equ	0xFDE
 28084                           postdec2	equ	0xFDD
 28085                           plusw2	equ	0xFDB
 28086                           fsr2h	equ	0xFDA
 28087                           fsr2l	equ	0xFD9
 28088                           status	equ	0xFD8
 28089                           
 28090 ;; *************** function _StringCompare *****************
 28091 ;; Defined at:
 28092 ;;		line 75 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/sf.c"
 28093 ;; Parameters:    Size  Location     Type
 28094 ;;  String1         2   29[BANK0 ] PTR unsigned char 
 28095 ;;		 -> receivedNumber(13), smsText(20), ModemEvtParser@CallReadyString(10), ModemEvtParser@SmsString(5), 
 28096 ;;		 -> ModemEvtParser@ClipString(5), ModemEvtParser@RingString(4), 
 28097 ;;  String2         2   31[BANK0 ] PTR unsigned char 
 28098 ;;		 -> readBuffer(13), parseCommand@resetCmd(4), parseCommand@deleteNumberCmd(4), parseCommand@addNumberCmd(4), 
 28099 ;;		 -> RxBuffer(400), 
 28100 ;;  Len             2   33[BANK0 ] unsigned short 
 28101 ;; Auto vars:     Size  Location     Type
 28102 ;;  Index           2   38[BANK0 ] unsigned short 
 28103 ;;  Result          1   37[BANK0 ] unsigned char 
 28104 ;; Return value:  Size  Location     Type
 28105 ;;                  1    wreg      unsigned char 
 28106 ;; Registers used:
 28107 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 28108 ;; Tracked objects:
 28109 ;;		On entry : 0/0
 28110 ;;		On exit  : 0/0
 28111 ;;		Unchanged: 0/0
 28112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28113 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28114 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28115 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28116 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28117 ;;Total ram usage:       11 bytes
 28118 ;; Hardware stack levels used:    1
 28119 ;; Hardware stack levels required when called:   11
 28120 ;; This function calls:
 28121 ;;		Nothing
 28122 ;; This function is called by:
 28123 ;;		_ModemEvtParser
 28124 ;;		_parseCommand
 28125 ;;		_isNumberInMemory
 28126 ;;		_isMasterNumber
 28127 ;; This function uses a non-reentrant model
 28128 ;;
 28129                           
 28130                           	psect	text134
 28131  005DE6                     __ptext134:
 28132                           	opt stack 0
 28133  005DE6                     _StringCompare:
 28134                           	opt stack 14
 28135                           
 28136                           ;sf.c: 77: UINT16 Index = 0;
 28137                           
 28138                           ; BSR set to: 0
 28139                           ;incstack = 0
 28140  005DE6  0E00               	movlw	0
 28141  005DE8  0100               	movlb	0	; () banked
 28142  005DEA  6F87               	movwf	(StringCompare@Index+1)& (0+255),b
 28143  005DEC  0E00               	movlw	0
 28144  005DEE  6F86               	movwf	StringCompare@Index& (0+255),b
 28145                           
 28146                           ;sf.c: 78: UINT8 Result = 1;
 28147  005DF0  0E01               	movlw	1
 28148  005DF2  6F85               	movwf	StringCompare@Result& (0+255),b
 28149                           
 28150                           ;sf.c: 81: for (Index = 0; Index < Len; Index++)
 28151  005DF4  0E00               	movlw	0
 28152  005DF6  6F87               	movwf	(StringCompare@Index+1)& (0+255),b
 28153  005DF8  0E00               	movlw	0
 28154  005DFA  6F86               	movwf	StringCompare@Index& (0+255),b
 28155  005DFC  D015               	goto	l2249
 28156  005DFE                     
 28157                           ; BSR set to: 0
 28158                           ;sf.c: 82: {
 28159                           ;sf.c: 83: if (String1[Index] != String2[Index])
 28160                           
 28161                           ; BSR set to: 0
 28162  005DFE  5186               	movf	StringCompare@Index& (0+255),w,b
 28163  005E00  257F               	addwf	StringCompare@String2& (0+255),w,b
 28164  005E02  6ED9               	movwf	fsr2l,c
 28165  005E04  5187               	movf	(StringCompare@Index+1)& (0+255),w,b
 28166  005E06  2180               	addwfc	(StringCompare@String2+1)& (0+255),w,b
 28167  005E08  6EDA               	movwf	fsr2h,c
 28168  005E0A  5186               	movf	StringCompare@Index& (0+255),w,b
 28169  005E0C  257D               	addwf	StringCompare@String1& (0+255),w,b
 28170  005E0E  6EE1               	movwf	fsr1l,c
 28171  005E10  5187               	movf	(StringCompare@Index+1)& (0+255),w,b
 28172  005E12  217E               	addwfc	(StringCompare@String1+1)& (0+255),w,b
 28173  005E14  6EE2               	movwf	fsr1h,c
 28174  005E16  50DE               	movf	postinc2,w,c
 28175  005E18  18E6               	xorwf	postinc1,w,c
 28176  005E1A  B4D8               	btfsc	status,2,c
 28177  005E1C  D003               	goto	l2251
 28178                           
 28179                           ; BSR set to: 0
 28180                           ;sf.c: 84: {
 28181                           ;sf.c: 85: Result = 0;
 28182  005E1E  0E00               	movlw	0
 28183  005E20  6F85               	movwf	StringCompare@Result& (0+255),b
 28184                           
 28185                           ;sf.c: 86: break;
 28186  005E22  D008               	goto	u12850
 28187  005E24                     l2251:
 28188                           
 28189                           ; BSR set to: 0
 28190                           
 28191                           ; BSR set to: 0
 28192  005E24  4B86               	infsnz	StringCompare@Index& (0+255),f,b
 28193  005E26  2B87               	incf	(StringCompare@Index+1)& (0+255),f,b
 28194  005E28                     l2249:
 28195                           
 28196                           ; BSR set to: 0
 28197                           
 28198                           ; BSR set to: 0
 28199  005E28  5181               	movf	StringCompare@Len& (0+255),w,b
 28200  005E2A  5D86               	subwf	StringCompare@Index& (0+255),w,b
 28201  005E2C  5182               	movf	(StringCompare@Len+1)& (0+255),w,b
 28202  005E2E  5987               	subwfb	(StringCompare@Index+1)& (0+255),w,b
 28203  005E30  A0D8               	btfss	status,0,c
 28204  005E32  D7E5               	goto	l2250
 28205  005E34                     u12850:
 28206                           
 28207                           ; BSR set to: 0
 28208                           ;sf.c: 87: }
 28209                           ;sf.c: 88: }
 28210                           ;sf.c: 91: return Result;
 28211                           
 28212                           ; BSR set to: 0
 28213  005E34  5185               	movf	StringCompare@Result& (0+255),w,b
 28214  005E36  0012               	return	
 28215  005E38                     __end_of_StringCompare:
 28216                           	opt stack 0
 28217                           tosu	equ	0xFFF
 28218                           tosh	equ	0xFFE
 28219                           tosl	equ	0xFFD
 28220                           pclath	equ	0xFFA
 28221                           tblptru	equ	0xFF8
 28222                           tblptrh	equ	0xFF7
 28223                           tblptrl	equ	0xFF6
 28224                           tablat	equ	0xFF5
 28225                           prodh	equ	0xFF4
 28226                           prodl	equ	0xFF3
 28227                           intcon	equ	0xFF2
 28228                           intcon2	equ	0xFF1
 28229                           intcon3	equ	0xFF0
 28230                           indf0	equ	0xFEF
 28231                           postinc0	equ	0xFEE
 28232                           plusw0	equ	0xFEB
 28233                           fsr0h	equ	0xFEA
 28234                           fsr0l	equ	0xFE9
 28235                           wreg	equ	0xFE8
 28236                           indf1	equ	0xFE7
 28237                           postinc1	equ	0xFE6
 28238                           postdec1	equ	0xFE5
 28239                           plusw1	equ	0xFE3
 28240                           fsr1h	equ	0xFE2
 28241                           fsr1l	equ	0xFE1
 28242                           indf2	equ	0xFDF
 28243                           postinc2	equ	0xFDE
 28244                           postdec2	equ	0xFDD
 28245                           plusw2	equ	0xFDB
 28246                           fsr2h	equ	0xFDA
 28247                           fsr2l	equ	0xFD9
 28248                           status	equ	0xFD8
 28249                           
 28250 ;; *************** function _GetSmsSm *****************
 28251 ;; Defined at:
 28252 ;;		line 584 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 28253 ;; Parameters:    Size  Location     Type
 28254 ;;		None
 28255 ;; Auto vars:     Size  Location     Type
 28256 ;;		None
 28257 ;; Return value:  Size  Location     Type
 28258 ;;                  1    wreg      void 
 28259 ;; Registers used:
 28260 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 28261 ;; Tracked objects:
 28262 ;;		On entry : 0/0
 28263 ;;		On exit  : 0/0
 28264 ;;		Unchanged: 0/0
 28265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28266 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28267 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28269 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28270 ;;Total ram usage:        0 bytes
 28271 ;; Hardware stack levels used:    1
 28272 ;; Hardware stack levels required when called:   13
 28273 ;; This function calls:
 28274 ;;		_ClearBuffer
 28275 ;;		_GenerateEvt
 28276 ;;		_ReceiveEvt
 28277 ;;		_StringCopy
 28278 ;;		_Uart_WriteConstString
 28279 ;; This function is called by:
 28280 ;;		_Mdm_MainTask
 28281 ;; This function uses a non-reentrant model
 28282 ;;
 28283                           
 28284                           	psect	text135
 28285  002AA8                     __ptext135:
 28286                           	opt stack 0
 28287  002AA8                     _GetSmsSm:
 28288                           	opt stack 14
 28289                           
 28290                           ;mdm_gsm_gprs.c: 586: static GetSmsStateType GetSmsState = GetSms_CheckReq;
 28291                           ;mdm_gsm_gprs.c: 589: if (MdmStatus == ModemConfigured)
 28292                           
 28293                           ; BSR set to: 0
 28294                           ;incstack = 0
 28295  002AA8  0E03               	movlw	3
 28296  002AAA  0100               	movlb	0	; () banked
 28297  002AAC  19D1               	xorwf	_MdmStatus& (0+255),w,b
 28298  002AAE  A4D8               	btfss	status,2,c
 28299  002AB0  0012               	return	
 28300  002AB2  D084               	goto	l1070
 28301  002AB4                     
 28302                           ;mdm_gsm_gprs.c: 595: if (ReceiveEvt(&GetSmsText))
 28303                           
 28304                           ; BSR set to: 0
 28305  002AB4  0EDA               	movlw	low _GetSmsText
 28306  002AB6  0100               	movlb	0	; () banked
 28307  002AB8  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 28308  002ABA  0E00               	movlw	high _GetSmsText
 28309  002ABC  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 28310  002ABE  EC91  F033         	call	_ReceiveEvt	;wreg free
 28311  002AC2  0900               	iorlw	0
 28312  002AC4  B4D8               	btfsc	status,2,c
 28313  002AC6  0012               	return	
 28314                           
 28315                           ;mdm_gsm_gprs.c: 596: {
 28316                           ;mdm_gsm_gprs.c: 598: GetSmsState = GetSms_SendAtCmd;
 28317  002AC8  0E01               	movlw	1
 28318  002ACA  0101               	movlb	1	; () banked
 28319  002ACC  6FEE               	movwf	GetSmsSm@GetSmsState& (0+255),b
 28320                           
 28321                           ; BSR set to: 1
 28322                           ;mdm_gsm_gprs.c: 599: }
 28323                           ;mdm_gsm_gprs.c: 600: break;
 28324  002ACE  0012               	return	
 28325  002AD0                     
 28326                           ; BSR set to: 1
 28327                           ;mdm_gsm_gprs.c: 604: Uart_WriteConstString(1,"AT+CMGR=1\r\n");
 28328                           
 28329                           ; BSR set to: 1
 28330  002AD0  0EC2               	movlw	low STR_4
 28331  002AD2  0100               	movlb	0	; () banked
 28332  002AD4  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 28333  002AD6  0EFF               	movlw	high STR_4
 28334  002AD8  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 28335  002ADA  0E01               	movlw	1
 28336  002ADC  EC48  F031         	call	_Uart_WriteConstString
 28337                           
 28338                           ;mdm_gsm_gprs.c: 606: GetSmsState = GetSms_StoreHeader;
 28339  002AE0  0E02               	movlw	2
 28340  002AE2  0101               	movlb	1	; () banked
 28341  002AE4  6FEE               	movwf	GetSmsSm@GetSmsState& (0+255),b
 28342                           
 28343                           ;mdm_gsm_gprs.c: 607: break;
 28344  002AE6  0012               	return	
 28345  002AE8                     
 28346                           ; BSR set to: 1
 28347                           ;mdm_gsm_gprs.c: 611: if (ReceiveEvt(&NewStringReceived))
 28348                           
 28349                           ; BSR set to: 1
 28350  002AE8  0E3C               	movlw	low _NewStringReceived
 28351  002AEA  0100               	movlb	0	; () banked
 28352  002AEC  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 28353  002AEE  0E00               	movlw	high _NewStringReceived
 28354  002AF0  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 28355  002AF2  EC91  F033         	call	_ReceiveEvt	;wreg free
 28356  002AF6  0900               	iorlw	0
 28357  002AF8  B4D8               	btfsc	status,2,c
 28358  002AFA  0012               	return	
 28359                           
 28360                           ;mdm_gsm_gprs.c: 612: {
 28361                           ;mdm_gsm_gprs.c: 613: if ((RxBuffer[0] == '+') && (RxBuffer[1] == 'C') && (RxBuffer[2] =
      +                          = 'M'))
 28362  002AFC  CC58  FFE8         	movff	_RxBuffer,wreg
 28363  002B00  0A2B               	xorlw	43
 28364  002B02  A4D8               	btfss	status,2,c
 28365  002B04  0012               	return	
 28366  002B06  CC59  FFE8         	movff	_RxBuffer+1,wreg
 28367  002B0A  0A43               	xorlw	67
 28368  002B0C  A4D8               	btfss	status,2,c
 28369  002B0E  0012               	return	
 28370  002B10  CC5A  FFE8         	movff	_RxBuffer+2,wreg
 28371  002B14  0A4D               	xorlw	77
 28372  002B16  A4D8               	btfss	status,2,c
 28373  002B18  0012               	return	
 28374                           
 28375                           ;mdm_gsm_gprs.c: 614: {
 28376                           ;mdm_gsm_gprs.c: 616: ClearBuffer(Mdm_SmsRx.HeaderBuffer, sizeof(Mdm_SmsRx.HeaderBuffer)
      +                          );
 28377  002B1A  0E00               	movlw	low _Mdm_SmsRx
 28378  002B1C  0100               	movlb	0	; () banked
 28379  002B1E  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 28380  002B20  0E07               	movlw	high _Mdm_SmsRx
 28381  002B22  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 28382  002B24  0E00               	movlw	0
 28383  002B26  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 28384  002B28  0E50               	movlw	80
 28385  002B2A  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 28386  002B2C  ECB3  F032         	call	_ClearBuffer	;wreg free
 28387                           
 28388                           ;mdm_gsm_gprs.c: 617: StringCopy(RxBuffer,Mdm_SmsRx.HeaderBuffer,RxLen);
 28389  002B30  0E58               	movlw	low _RxBuffer
 28390  002B32  0100               	movlb	0	; () banked
 28391  002B34  6F85               	movwf	StringCopy@SourceStr& (0+255),b
 28392  002B36  0E0C               	movlw	high _RxBuffer
 28393  002B38  6F86               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 28394  002B3A  0E00               	movlw	low _Mdm_SmsRx
 28395  002B3C  6F87               	movwf	StringCopy@DestStr& (0+255),b
 28396  002B3E  0E07               	movlw	high _Mdm_SmsRx
 28397  002B40  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 28398  002B42  C0C2  F089         	movff	_RxLen,StringCopy@Len
 28399  002B46  C0C3  F08A         	movff	_RxLen+1,StringCopy@Len+1
 28400  002B4A  EC60  F02C         	call	_StringCopy	;wreg free
 28401                           
 28402                           ;mdm_gsm_gprs.c: 619: Mdm_SmsRx.HeadLen = RxLen;
 28403  002B4E  C0C2  F764         	movff	_RxLen,_Mdm_SmsRx+100
 28404                           
 28405                           ;mdm_gsm_gprs.c: 621: GetSmsState = GetSms_StoreText;
 28406  002B52  0E03               	movlw	3
 28407  002B54  0101               	movlb	1	; () banked
 28408  002B56  6FEE               	movwf	GetSmsSm@GetSmsState& (0+255),b
 28409                           
 28410                           ; BSR set to: 1
 28411                           ;mdm_gsm_gprs.c: 622: }
 28412                           ;mdm_gsm_gprs.c: 623: }
 28413                           ;mdm_gsm_gprs.c: 624: break;
 28414                           
 28415                           ; BSR set to: 1
 28416  002B58  0012               	return	
 28417  002B5A                     
 28418                           ; BSR set to: 1
 28419                           ;mdm_gsm_gprs.c: 628: if (ReceiveEvt(&NewStringReceived))
 28420                           
 28421                           ; BSR set to: 1
 28422  002B5A  0E3C               	movlw	low _NewStringReceived
 28423  002B5C  0100               	movlb	0	; () banked
 28424  002B5E  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 28425  002B60  0E00               	movlw	high _NewStringReceived
 28426  002B62  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 28427  002B64  EC91  F033         	call	_ReceiveEvt	;wreg free
 28428  002B68  0900               	iorlw	0
 28429  002B6A  B4D8               	btfsc	status,2,c
 28430  002B6C  0012               	return	
 28431                           
 28432                           ;mdm_gsm_gprs.c: 629: {
 28433                           ;mdm_gsm_gprs.c: 631: ClearBuffer(Mdm_SmsRx.MessageBuffer, sizeof(Mdm_SmsRx.MessageBuffe
      +                          r));
 28434  002B6E  0E50               	movlw	low (_Mdm_SmsRx+80)
 28435  002B70  0100               	movlb	0	; () banked
 28436  002B72  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 28437  002B74  0E07               	movlw	high (_Mdm_SmsRx+80)
 28438  002B76  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 28439  002B78  0E00               	movlw	0
 28440  002B7A  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 28441  002B7C  0E14               	movlw	20
 28442  002B7E  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 28443  002B80  ECB3  F032         	call	_ClearBuffer	;wreg free
 28444                           
 28445                           ;mdm_gsm_gprs.c: 632: StringCopy(RxBuffer,Mdm_SmsRx.MessageBuffer,RxLen);
 28446  002B84  0E58               	movlw	low _RxBuffer
 28447  002B86  0100               	movlb	0	; () banked
 28448  002B88  6F85               	movwf	StringCopy@SourceStr& (0+255),b
 28449  002B8A  0E0C               	movlw	high _RxBuffer
 28450  002B8C  6F86               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 28451  002B8E  0E50               	movlw	low (_Mdm_SmsRx+80)
 28452  002B90  6F87               	movwf	StringCopy@DestStr& (0+255),b
 28453  002B92  0E07               	movlw	high (_Mdm_SmsRx+80)
 28454  002B94  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 28455  002B96  C0C2  F089         	movff	_RxLen,StringCopy@Len
 28456  002B9A  C0C3  F08A         	movff	_RxLen+1,StringCopy@Len+1
 28457  002B9E  EC60  F02C         	call	_StringCopy	;wreg free
 28458                           
 28459                           ;mdm_gsm_gprs.c: 634: Mdm_SmsRx.TextLen = RxLen;
 28460  002BA2  C0C2  F765         	movff	_RxLen,_Mdm_SmsRx+101
 28461                           
 28462                           ;mdm_gsm_gprs.c: 636: GetSmsState = GetSms_CheckReq;
 28463  002BA6  0E00               	movlw	0
 28464  002BA8  0101               	movlb	1	; () banked
 28465  002BAA  6FEE               	movwf	GetSmsSm@GetSmsState& (0+255),b
 28466                           
 28467                           ; BSR set to: 1
 28468                           ;mdm_gsm_gprs.c: 638: GenerateEvt(&SmsTxtReady);
 28469  002BAC  0ED9               	movlw	low _SmsTxtReady
 28470  002BAE  0100               	movlb	0	; () banked
 28471  002BB0  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 28472  002BB2  0E00               	movlw	high _SmsTxtReady
 28473  002BB4  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 28474  002BB6  EC82  F035         	call	_GenerateEvt	;wreg free
 28475                           
 28476                           ;mdm_gsm_gprs.c: 644: }
 28477                           
 28478                           ;mdm_gsm_gprs.c: 643: break;
 28479                           
 28480                           ;mdm_gsm_gprs.c: 642: default:
 28481                           
 28482                           ;mdm_gsm_gprs.c: 639: }
 28483                           ;mdm_gsm_gprs.c: 640: break;
 28484  002BBA  0012               	return	
 28485  002BBC                     l1070:
 28486  002BBC  0101               	movlb	1	; () banked
 28487  002BBE  51EE               	movf	GetSmsSm@GetSmsState& (0+255),w,b
 28488                           
 28489                           ; Switch size 1, requested type "space"
 28490                           ; Number of cases is 4, Range of values is 0 to 3
 28491                           ; switch strategies available:
 28492                           ; Name         Instructions Cycles
 28493                           ; simple_byte           13     7 (average)
 28494                           ;	Chosen strategy is simple_byte
 28495  002BC0  0A00               	xorlw	0	; case 0
 28496  002BC2  B4D8               	btfsc	status,2,c
 28497  002BC4  D777               	goto	l1071
 28498  002BC6  0A01               	xorlw	1	; case 1
 28499  002BC8  B4D8               	btfsc	status,2,c
 28500  002BCA  D782               	goto	l1074
 28501  002BCC  0A03               	xorlw	3	; case 2
 28502  002BCE  B4D8               	btfsc	status,2,c
 28503  002BD0  D78B               	goto	l1075
 28504  002BD2  0A01               	xorlw	1	; case 3
 28505  002BD4  A4D8               	btfss	status,2,c
 28506                           
 28507                           ; BSR set to: 1
 28508  002BD6  0012               	return	
 28509  002BD8  D7C0               	goto	l1078
 28510  002BDA                     __end_of_GetSmsSm:
 28511                           	opt stack 0
 28512                           tosu	equ	0xFFF
 28513                           tosh	equ	0xFFE
 28514                           tosl	equ	0xFFD
 28515                           pclath	equ	0xFFA
 28516                           tblptru	equ	0xFF8
 28517                           tblptrh	equ	0xFF7
 28518                           tblptrl	equ	0xFF6
 28519                           tablat	equ	0xFF5
 28520                           prodh	equ	0xFF4
 28521                           prodl	equ	0xFF3
 28522                           intcon	equ	0xFF2
 28523                           intcon2	equ	0xFF1
 28524                           intcon3	equ	0xFF0
 28525                           indf0	equ	0xFEF
 28526                           postinc0	equ	0xFEE
 28527                           plusw0	equ	0xFEB
 28528                           fsr0h	equ	0xFEA
 28529                           fsr0l	equ	0xFE9
 28530                           wreg	equ	0xFE8
 28531                           indf1	equ	0xFE7
 28532                           postinc1	equ	0xFE6
 28533                           postdec1	equ	0xFE5
 28534                           plusw1	equ	0xFE3
 28535                           fsr1h	equ	0xFE2
 28536                           fsr1l	equ	0xFE1
 28537                           indf2	equ	0xFDF
 28538                           postinc2	equ	0xFDE
 28539                           postdec2	equ	0xFDD
 28540                           plusw2	equ	0xFDB
 28541                           fsr2h	equ	0xFDA
 28542                           fsr2l	equ	0xFD9
 28543                           status	equ	0xFD8
 28544                           
 28545 ;; *************** function _ConfigureModem *****************
 28546 ;; Defined at:
 28547 ;;		line 419 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 28548 ;; Parameters:    Size  Location     Type
 28549 ;;		None
 28550 ;; Auto vars:     Size  Location     Type
 28551 ;;		None
 28552 ;; Return value:  Size  Location     Type
 28553 ;;                  1    wreg      void 
 28554 ;; Registers used:
 28555 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 28556 ;; Tracked objects:
 28557 ;;		On entry : 0/0
 28558 ;;		On exit  : 0/0
 28559 ;;		Unchanged: 0/0
 28560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28561 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28562 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28564 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28565 ;;Total ram usage:        0 bytes
 28566 ;; Hardware stack levels used:    1
 28567 ;; Hardware stack levels required when called:   14
 28568 ;; This function calls:
 28569 ;;		_GenerateEvt
 28570 ;;		_UartSetConfigLow
 28571 ;;		_Uart_InitUartModule
 28572 ;;		_Uart_WriteConstString
 28573 ;; This function is called by:
 28574 ;;		_Mdm_MainTask
 28575 ;; This function uses a non-reentrant model
 28576 ;;
 28577                           
 28578                           	psect	text136
 28579  003B54                     __ptext136:
 28580                           	opt stack 0
 28581  003B54                     _ConfigureModem:
 28582                           	opt stack 13
 28583                           
 28584                           ;mdm_gsm_gprs.c: 421: static MdmConfigStateType MdmConfigState = MdmCfg_Init;
 28585                           ;mdm_gsm_gprs.c: 422: static MdmConfigStateType NextState = MdmCfg_Init;
 28586                           ;mdm_gsm_gprs.c: 423: static UINT16 DelayValueMs = 0;
 28587                           ;mdm_gsm_gprs.c: 424: static UINT16 DelayCounter = 0;
 28588                           ;mdm_gsm_gprs.c: 426: switch (MdmConfigState)
 28589                           
 28590                           ;incstack = 0
 28591  003B54  D056               	goto	l1027
 28592  003B56                     
 28593                           ;mdm_gsm_gprs.c: 430: if (MdmStatus == ModemReady)
 28594  003B56  0E02               	movlw	2
 28595  003B58  0100               	movlb	0	; () banked
 28596  003B5A  19D1               	xorwf	_MdmStatus& (0+255),w,b
 28597  003B5C  A4D8               	btfss	status,2,c
 28598  003B5E  0012               	return	
 28599                           
 28600                           ; BSR set to: 0
 28601                           ;mdm_gsm_gprs.c: 431: {
 28602                           ;mdm_gsm_gprs.c: 433: MdmConfigState = MdmCfg_ChangeBaud;
 28603  003B60  0E01               	movlw	1
 28604  003B62  0101               	movlb	1	; () banked
 28605  003B64  6FF0               	movwf	ConfigureModem@MdmConfigState& (0+255),b
 28606                           
 28607                           ; BSR set to: 1
 28608                           ;mdm_gsm_gprs.c: 434: }
 28609                           ;mdm_gsm_gprs.c: 435: break;
 28610  003B66  0012               	return	
 28611  003B68                     
 28612                           ; BSR set to: 1
 28613                           ;mdm_gsm_gprs.c: 439: Uart_WriteConstString(1,"AT+IPR=9600\r\n");
 28614                           
 28615                           ; BSR set to: 1
 28616  003B68  0E75               	movlw	low STR_2
 28617  003B6A  0100               	movlb	0	; () banked
 28618  003B6C  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 28619  003B6E  0EFF               	movlw	high STR_2
 28620  003B70  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 28621  003B72  0E01               	movlw	1
 28622  003B74  EC48  F031         	call	_Uart_WriteConstString
 28623                           
 28624                           ;mdm_gsm_gprs.c: 441: UartSetConfigLow();
 28625  003B78  EC75  F02D         	call	_UartSetConfigLow	;wreg free
 28626                           
 28627                           ;mdm_gsm_gprs.c: 443: Uart_InitUartModule(1,&UartConfig);
 28628  003B7C  0E22               	movlw	low _UartConfig
 28629  003B7E  0100               	movlb	0	; () banked
 28630  003B80  6F9D               	movwf	Uart_InitUartModule@UartConfig& (0+255),b
 28631  003B82  0E03               	movlw	high _UartConfig
 28632  003B84  6F9E               	movwf	(Uart_InitUartModule@UartConfig+1)& (0+255),b
 28633  003B86  0E01               	movlw	1
 28634  003B88  EC5E  F005         	call	_Uart_InitUartModule
 28635                           
 28636                           ;mdm_gsm_gprs.c: 445: DelayValueMs = (((UINT16)(1000))/((UINT16)(1)));
 28637  003B8C  0E03               	movlw	3
 28638  003B8E  0103               	movlb	3	; () banked
 28639  003B90  6F21               	movwf	(ConfigureModem@DelayValueMs+1)& (0+255),b
 28640  003B92  0EE8               	movlw	232
 28641  003B94  6F20               	movwf	ConfigureModem@DelayValueMs& (0+255),b
 28642                           
 28643                           ; BSR set to: 3
 28644                           ;mdm_gsm_gprs.c: 447: NextState = MdmCfg_SetMdmEchoMode;
 28645  003B96  0E02               	movlw	2
 28646  003B98  0101               	movlb	1	; () banked
 28647  003B9A  6FEF               	movwf	ConfigureModem@NextState& (0+255),b
 28648                           
 28649                           ; BSR set to: 1
 28650                           ;mdm_gsm_gprs.c: 448: MdmConfigState = MdmCfg_Delay;
 28651  003B9C  0E04               	movlw	4
 28652  003B9E  6FF0               	movwf	ConfigureModem@MdmConfigState& (0+255),b
 28653                           
 28654                           ;mdm_gsm_gprs.c: 449: break;
 28655  003BA0  0012               	return	
 28656  003BA2                     
 28657                           ; BSR set to: 1
 28658                           ;mdm_gsm_gprs.c: 453: Uart_WriteConstString(1,"ATE0\r\n");
 28659                           
 28660                           ; BSR set to: 1
 28661  003BA2  0EDF               	movlw	low STR_3
 28662  003BA4  0100               	movlb	0	; () banked
 28663  003BA6  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 28664  003BA8  0EFF               	movlw	high STR_3
 28665  003BAA  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 28666  003BAC  0E01               	movlw	1
 28667  003BAE  EC48  F031         	call	_Uart_WriteConstString
 28668                           
 28669                           ;mdm_gsm_gprs.c: 455: DelayValueMs = (((UINT16)(1000))/((UINT16)(1)));
 28670  003BB2  0E03               	movlw	3
 28671  003BB4  0103               	movlb	3	; () banked
 28672  003BB6  6F21               	movwf	(ConfigureModem@DelayValueMs+1)& (0+255),b
 28673  003BB8  0EE8               	movlw	232
 28674  003BBA  6F20               	movwf	ConfigureModem@DelayValueMs& (0+255),b
 28675                           
 28676                           ; BSR set to: 3
 28677                           ;mdm_gsm_gprs.c: 457: NextState = MdmCfg_UpdateMdmSts;
 28678  003BBC  0E05               	movlw	5
 28679  003BBE  0101               	movlb	1	; () banked
 28680  003BC0  6FEF               	movwf	ConfigureModem@NextState& (0+255),b
 28681                           
 28682                           ; BSR set to: 1
 28683                           ;mdm_gsm_gprs.c: 458: MdmConfigState = MdmCfg_Delay;
 28684  003BC2  0E04               	movlw	4
 28685  003BC4  6FF0               	movwf	ConfigureModem@MdmConfigState& (0+255),b
 28686                           
 28687                           ;mdm_gsm_gprs.c: 459: break;
 28688  003BC6  0012               	return	
 28689  003BC8                     
 28690                           ; BSR set to: 1
 28691                           ;mdm_gsm_gprs.c: 463: DelayCounter++;
 28692                           
 28693                           ; BSR set to: 1
 28694  003BC8  0103               	movlb	3	; () banked
 28695  003BCA  4B1E               	infsnz	ConfigureModem@DelayCounter& (0+255),f,b
 28696  003BCC  2B1F               	incf	(ConfigureModem@DelayCounter+1)& (0+255),f,b
 28697                           
 28698                           ; BSR set to: 3
 28699                           ;mdm_gsm_gprs.c: 465: if (DelayCounter >= DelayValueMs)
 28700  003BCE  5120               	movf	ConfigureModem@DelayValueMs& (0+255),w,b
 28701  003BD0  5D1E               	subwf	ConfigureModem@DelayCounter& (0+255),w,b
 28702  003BD2  5121               	movf	(ConfigureModem@DelayValueMs+1)& (0+255),w,b
 28703  003BD4  591F               	subwfb	(ConfigureModem@DelayCounter+1)& (0+255),w,b
 28704  003BD6  A0D8               	btfss	status,0,c
 28705  003BD8  0012               	return	
 28706                           
 28707                           ; BSR set to: 3
 28708                           ;mdm_gsm_gprs.c: 466: {
 28709                           ;mdm_gsm_gprs.c: 468: DelayCounter = 0;
 28710  003BDA  0E00               	movlw	0
 28711  003BDC  6F1F               	movwf	(ConfigureModem@DelayCounter+1)& (0+255),b
 28712  003BDE  0E00               	movlw	0
 28713  003BE0  6F1E               	movwf	ConfigureModem@DelayCounter& (0+255),b
 28714                           
 28715                           ; BSR set to: 3
 28716                           ;mdm_gsm_gprs.c: 470: MdmConfigState = NextState;
 28717  003BE2  C1EF  F1F0         	movff	ConfigureModem@NextState,ConfigureModem@MdmConfigState
 28718                           
 28719                           ; BSR set to: 3
 28720                           ;mdm_gsm_gprs.c: 471: }
 28721                           ;mdm_gsm_gprs.c: 472: break;
 28722  003BE6  0012               	return	
 28723  003BE8                     
 28724                           ;mdm_gsm_gprs.c: 476: MdmStatus = ModemConfigured;
 28725                           
 28726                           ; BSR set to: 3
 28727  003BE8  0E03               	movlw	3
 28728  003BEA  0100               	movlb	0	; () banked
 28729  003BEC  6FD1               	movwf	_MdmStatus& (0+255),b
 28730                           
 28731                           ; BSR set to: 0
 28732                           ;mdm_gsm_gprs.c: 478: GenerateEvt(&MdmStsReady);
 28733  003BEE  0EFD               	movlw	low _MdmStsReady
 28734  003BF0  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 28735  003BF2  0E01               	movlw	high _MdmStsReady
 28736  003BF4  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 28737  003BF6  EC82  F035         	call	_GenerateEvt	;wreg free
 28738                           
 28739                           ;mdm_gsm_gprs.c: 480: MdmConfigState = MdmCfg_Stop;
 28740  003BFA  0E06               	movlw	6
 28741  003BFC  0101               	movlb	1	; () banked
 28742  003BFE  6FF0               	movwf	ConfigureModem@MdmConfigState& (0+255),b
 28743                           
 28744                           ; BSR set to: 1
 28745                           ;mdm_gsm_gprs.c: 488: }
 28746                           
 28747                           ; BSR set to: 1
 28748                           ;mdm_gsm_gprs.c: 487: break;
 28749                           
 28750                           ;mdm_gsm_gprs.c: 486: default:
 28751                           
 28752                           ; BSR set to: 1
 28753                           ;mdm_gsm_gprs.c: 484: break;
 28754                           
 28755                           ;mdm_gsm_gprs.c: 483: case MdmCfg_Stop:
 28756                           
 28757                           ;mdm_gsm_gprs.c: 481: break;
 28758  003C00  0012               	return	
 28759  003C02                     l1027:
 28760                           
 28761                           ; BSR set to: 1
 28762  003C02  0101               	movlb	1	; () banked
 28763  003C04  51F0               	movf	ConfigureModem@MdmConfigState& (0+255),w,b
 28764                           
 28765                           ; Switch size 1, requested type "space"
 28766                           ; Number of cases is 6, Range of values is 0 to 6
 28767                           ; switch strategies available:
 28768                           ; Name         Instructions Cycles
 28769                           ; simple_byte           19    10 (average)
 28770                           ;	Chosen strategy is simple_byte
 28771  003C06  0A00               	xorlw	0	; case 0
 28772  003C08  B4D8               	btfsc	status,2,c
 28773  003C0A  D7A5               	goto	l1028
 28774  003C0C  0A01               	xorlw	1	; case 1
 28775  003C0E  B4D8               	btfsc	status,2,c
 28776  003C10  D7AB               	goto	l1031
 28777  003C12  0A03               	xorlw	3	; case 2
 28778  003C14  B4D8               	btfsc	status,2,c
 28779  003C16  D7C5               	goto	l1032
 28780  003C18  0A06               	xorlw	6	; case 4
 28781  003C1A  B4D8               	btfsc	status,2,c
 28782  003C1C  D7D5               	goto	l1033
 28783  003C1E  0A01               	xorlw	1	; case 5
 28784  003C20  B4D8               	btfsc	status,2,c
 28785  003C22  D7E2               	goto	l1035
 28786  003C24  0A03               	xorlw	3	; case 6
 28787  003C26  0012               	return	
 28788  003C28                     __end_of_ConfigureModem:
 28789                           	opt stack 0
 28790                           tosu	equ	0xFFF
 28791                           tosh	equ	0xFFE
 28792                           tosl	equ	0xFFD
 28793                           pclath	equ	0xFFA
 28794                           tblptru	equ	0xFF8
 28795                           tblptrh	equ	0xFF7
 28796                           tblptrl	equ	0xFF6
 28797                           tablat	equ	0xFF5
 28798                           prodh	equ	0xFF4
 28799                           prodl	equ	0xFF3
 28800                           intcon	equ	0xFF2
 28801                           intcon2	equ	0xFF1
 28802                           intcon3	equ	0xFF0
 28803                           indf0	equ	0xFEF
 28804                           postinc0	equ	0xFEE
 28805                           plusw0	equ	0xFEB
 28806                           fsr0h	equ	0xFEA
 28807                           fsr0l	equ	0xFE9
 28808                           wreg	equ	0xFE8
 28809                           indf1	equ	0xFE7
 28810                           postinc1	equ	0xFE6
 28811                           postdec1	equ	0xFE5
 28812                           plusw1	equ	0xFE3
 28813                           fsr1h	equ	0xFE2
 28814                           fsr1l	equ	0xFE1
 28815                           indf2	equ	0xFDF
 28816                           postinc2	equ	0xFDE
 28817                           postdec2	equ	0xFDD
 28818                           plusw2	equ	0xFDB
 28819                           fsr2h	equ	0xFDA
 28820                           fsr2l	equ	0xFD9
 28821                           status	equ	0xFD8
 28822                           
 28823 ;; *************** function _Uart_InitUartModule *****************
 28824 ;; Defined at:
 28825 ;;		line 288 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 28826 ;; Parameters:    Size  Location     Type
 28827 ;;  Module          1    wreg     unsigned char 
 28828 ;;  UartConfig      2   61[BANK0 ] PTR struct _UartConfig
 28829 ;;		 -> UartConfig(21), 
 28830 ;; Auto vars:     Size  Location     Type
 28831 ;;  Module          1   65[BANK0 ] unsigned char 
 28832 ;; Return value:  Size  Location     Type
 28833 ;;                  1    wreg      void 
 28834 ;; Registers used:
 28835 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 28836 ;; Tracked objects:
 28837 ;;		On entry : 0/0
 28838 ;;		On exit  : 0/0
 28839 ;;		Unchanged: 0/0
 28840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28841 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28842 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28843 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28844 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28845 ;;Total ram usage:        5 bytes
 28846 ;; Hardware stack levels used:    1
 28847 ;; Hardware stack levels required when called:   13
 28848 ;; This function calls:
 28849 ;;		_SetUartBaudRate
 28850 ;; This function is called by:
 28851 ;;		_ConfigureModem
 28852 ;;		_Mdm_MainTask
 28853 ;; This function uses a non-reentrant model
 28854 ;;
 28855                           
 28856                           	psect	text137
 28857  000ABC                     __ptext137:
 28858                           	opt stack 0
 28859  000ABC                     _Uart_InitUartModule:
 28860                           	opt stack 14
 28861                           
 28862                           ;incstack = 0
 28863                           ;Uart_InitUartModule@Module stored from wreg
 28864  000ABC  0100               	movlb	0	; () banked
 28865  000ABE  6FA1               	movwf	Uart_InitUartModule@Module& (0+255),b
 28866                           
 28867                           ;uart_drv.c: 290: if (Module == ((UINT8)(1)))
 28868  000AC0  0100               	movlb	0	; () banked
 28869  000AC2  05A1               	decf	Uart_InitUartModule@Module& (0+255),w,b
 28870  000AC4  A4D8               	btfss	status,2,c
 28871  000AC6  D0BE               	goto	l668
 28872                           
 28873                           ; BSR set to: 0
 28874                           ;uart_drv.c: 291: {
 28875                           ;uart_drv.c: 293: TRISCbits.TRISC6 = ((UINT8)(0));
 28876  000AC8  9C94               	bcf	3988,6,c	;volatile
 28877                           
 28878                           ;uart_drv.c: 294: TRISCbits.TRISC7 = ((UINT8)(1));
 28879  000ACA  8E94               	bsf	3988,7,c	;volatile
 28880                           
 28881                           ; BSR set to: 0
 28882                           ;uart_drv.c: 297: SetUartBaudRate(((UINT8)(1)), UartConfig);
 28883  000ACC  C09D  F096         	movff	Uart_InitUartModule@UartConfig,SetUartBaudRate@UartConfig
 28884  000AD0  C09E  F097         	movff	Uart_InitUartModule@UartConfig+1,SetUartBaudRate@UartConfig+1
 28885  000AD4  0E01               	movlw	1
 28886  000AD6  ECB8  F014         	call	_SetUartBaudRate
 28887                           
 28888                           ;uart_drv.c: 302: TXSTA1 = 0x00;
 28889  000ADA  0E00               	movlw	0
 28890  000ADC  6EAD               	movwf	4013,c	;volatile
 28891                           
 28892                           ;uart_drv.c: 303: TXSTA1 |= (UartConfig->Tx9bitMode) << ((UINT8)(6));
 28893  000ADE  0100               	movlb	0	; () banked
 28894  000AE0  EE20 F004          	lfsr	2,4
 28895  000AE4  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 28896  000AE6  26D9               	addwf	fsr2l,f,c
 28897  000AE8  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 28898  000AEA  22DA               	addwfc	fsr2h,f,c
 28899  000AEC  50DF               	movf	indf2,w,c
 28900  000AEE  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28901  000AF0  0E06               	movlw	6
 28902  000AF2  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 28903  000AF4                     u13705:
 28904  000AF4  90D8               	bcf	status,0,c
 28905  000AF6  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 28906  000AF8  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 28907  000AFA  D7FC               	goto	u13705
 28908  000AFC  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 28909  000AFE  12AD               	iorwf	4013,f,c	;volatile
 28910                           
 28911                           ; BSR set to: 0
 28912                           ;uart_drv.c: 304: TXSTA1 |= (UartConfig->TxEnable) << ((UINT8)(5));
 28913  000B00  EE20 F006          	lfsr	2,6
 28914  000B04  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 28915  000B06  26D9               	addwf	fsr2l,f,c
 28916  000B08  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 28917  000B0A  22DA               	addwfc	fsr2h,f,c
 28918  000B0C  50DF               	movf	indf2,w,c
 28919  000B0E  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28920  000B10  0E05               	movlw	5
 28921  000B12  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 28922  000B14                     u13715:
 28923  000B14  90D8               	bcf	status,0,c
 28924  000B16  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 28925  000B18  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 28926  000B1A  D7FC               	goto	u13715
 28927  000B1C  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 28928  000B1E  12AD               	iorwf	4013,f,c	;volatile
 28929                           
 28930                           ; BSR set to: 0
 28931                           ;uart_drv.c: 305: TXSTA1 |= (UartConfig->UartMode) << ((UINT8)(4));
 28932  000B20  EE20 F001          	lfsr	2,1
 28933  000B24  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 28934  000B26  26D9               	addwf	fsr2l,f,c
 28935  000B28  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 28936  000B2A  22DA               	addwfc	fsr2h,f,c
 28937  000B2C  50DF               	movf	indf2,w,c
 28938  000B2E  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28939  000B30  399F               	swapf	??_Uart_InitUartModule& (0+255),w,b
 28940  000B32  0BF0               	andlw	240
 28941  000B34  12AD               	iorwf	4013,f,c	;volatile
 28942                           
 28943                           ; BSR set to: 0
 28944                           ;uart_drv.c: 306: TXSTA1 |= (UartConfig->SendBreakEnable) << ((UINT8)(3));
 28945  000B36  EE20 F008          	lfsr	2,8
 28946  000B3A  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 28947  000B3C  26D9               	addwf	fsr2l,f,c
 28948  000B3E  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 28949  000B40  22DA               	addwfc	fsr2h,f,c
 28950  000B42  50DF               	movf	indf2,w,c
 28951  000B44  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28952  000B46  90D8               	bcf	status,0,c
 28953  000B48  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 28954  000B4A  90D8               	bcf	status,0,c
 28955  000B4C  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 28956  000B4E  90D8               	bcf	status,0,c
 28957  000B50  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 28958  000B52  12AD               	iorwf	4013,f,c	;volatile
 28959                           
 28960                           ; BSR set to: 0
 28961                           ;uart_drv.c: 307: TXSTA1 |= (UartConfig->HighBaudMode) << ((UINT8)(2));
 28962  000B54  EE20 F003          	lfsr	2,3
 28963  000B58  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 28964  000B5A  26D9               	addwf	fsr2l,f,c
 28965  000B5C  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 28966  000B5E  22DA               	addwfc	fsr2h,f,c
 28967  000B60  50DF               	movf	indf2,w,c
 28968  000B62  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28969  000B64  90D8               	bcf	status,0,c
 28970  000B66  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 28971  000B68  90D8               	bcf	status,0,c
 28972  000B6A  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 28973  000B6C  12AD               	iorwf	4013,f,c	;volatile
 28974                           
 28975                           ; BSR set to: 0
 28976                           ;uart_drv.c: 310: RCSTA1 = 0x00;
 28977  000B6E  0E00               	movlw	0
 28978  000B70  6EAC               	movwf	4012,c	;volatile
 28979                           
 28980                           ; BSR set to: 0
 28981                           ;uart_drv.c: 311: RCSTA1 |= (UartConfig->UartEnable) << ((UINT8)(7));
 28982  000B72  C09D  FFD9         	movff	Uart_InitUartModule@UartConfig,fsr2l
 28983  000B76  C09E  FFDA         	movff	Uart_InitUartModule@UartConfig+1,fsr2h
 28984  000B7A  50DF               	movf	indf2,w,c
 28985  000B7C  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28986  000B7E  0E00               	movlw	0
 28987  000B80  B19F               	btfsc	??_Uart_InitUartModule& (0+255),0,b
 28988  000B82  0E80               	movlw	128
 28989  000B84  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28990  000B86  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 28991  000B88  12AC               	iorwf	4012,f,c	;volatile
 28992                           
 28993                           ; BSR set to: 0
 28994                           ;uart_drv.c: 312: RCSTA1 |= (UartConfig->Rx9bitMode) << ((UINT8)(6));
 28995  000B8A  EE20 F005          	lfsr	2,5
 28996  000B8E  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 28997  000B90  26D9               	addwf	fsr2l,f,c
 28998  000B92  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 28999  000B94  22DA               	addwfc	fsr2h,f,c
 29000  000B96  50DF               	movf	indf2,w,c
 29001  000B98  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 29002  000B9A  0E06               	movlw	6
 29003  000B9C  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 29004  000B9E                     u13725:
 29005  000B9E  90D8               	bcf	status,0,c
 29006  000BA0  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 29007  000BA2  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 29008  000BA4  D7FC               	goto	u13725
 29009  000BA6  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 29010  000BA8  12AC               	iorwf	4012,f,c	;volatile
 29011                           
 29012                           ; BSR set to: 0
 29013                           ;uart_drv.c: 313: RCSTA1 |= (UartConfig->RxEnable) << ((UINT8)(4));
 29014  000BAA  EE20 F007          	lfsr	2,7
 29015  000BAE  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 29016  000BB0  26D9               	addwf	fsr2l,f,c
 29017  000BB2  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 29018  000BB4  22DA               	addwfc	fsr2h,f,c
 29019  000BB6  50DF               	movf	indf2,w,c
 29020  000BB8  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 29021  000BBA  399F               	swapf	??_Uart_InitUartModule& (0+255),w,b
 29022  000BBC  0BF0               	andlw	240
 29023  000BBE  12AC               	iorwf	4012,f,c	;volatile
 29024                           
 29025                           ; BSR set to: 0
 29026                           ;uart_drv.c: 316: BAUDCON1 = 0x00;
 29027  000BC0  0E00               	movlw	0
 29028  000BC2  6E7E               	movwf	3966,c	;volatile
 29029                           
 29030                           ; BSR set to: 0
 29031                           ;uart_drv.c: 317: BAUDCON1 |= (UartConfig->BaudRateMode) << ((UINT8)(3));
 29032  000BC4  EE20 F002          	lfsr	2,2
 29033  000BC8  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 29034  000BCA  26D9               	addwf	fsr2l,f,c
 29035  000BCC  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 29036  000BCE  22DA               	addwfc	fsr2h,f,c
 29037  000BD0  50DF               	movf	indf2,w,c
 29038  000BD2  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 29039  000BD4  90D8               	bcf	status,0,c
 29040  000BD6  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 29041  000BD8  90D8               	bcf	status,0,c
 29042  000BDA  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 29043  000BDC  90D8               	bcf	status,0,c
 29044  000BDE  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 29045  000BE0  127E               	iorwf	3966,f,c	;volatile
 29046                           
 29047                           ; BSR set to: 0
 29048                           ;uart_drv.c: 318: BAUDCON1 |= (UartConfig->WakeUpEnable) << ((UINT8)(1));
 29049  000BE2  EE20 F00A          	lfsr	2,10
 29050  000BE6  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 29051  000BE8  26D9               	addwf	fsr2l,f,c
 29052  000BEA  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 29053  000BEC  22DA               	addwfc	fsr2h,f,c
 29054  000BEE  50DF               	movf	indf2,w,c
 29055  000BF0  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 29056  000BF2  90D8               	bcf	status,0,c
 29057  000BF4  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 29058  000BF6  127E               	iorwf	3966,f,c	;volatile
 29059                           
 29060                           ; BSR set to: 0
 29061                           ;uart_drv.c: 319: BAUDCON1 |= (UartConfig->AutobaudEnable) << ((UINT8)(0));
 29062  000BF8  EE20 F009          	lfsr	2,9
 29063  000BFC  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 29064  000BFE  26D9               	addwf	fsr2l,f,c
 29065  000C00  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 29066  000C02  22DA               	addwfc	fsr2h,f,c
 29067  000C04  50DF               	movf	indf2,w,c
 29068  000C06  127E               	iorwf	3966,f,c	;volatile
 29069                           
 29070                           ; BSR set to: 0
 29071                           ;uart_drv.c: 322: PIE1bits.TX1IE = UartConfig->TxInterruptEnable;
 29072  000C08  EE20 F00B          	lfsr	2,11
 29073  000C0C  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 29074  000C0E  26D9               	addwf	fsr2l,f,c
 29075  000C10  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 29076  000C12  22DA               	addwfc	fsr2h,f,c
 29077  000C14  50DF               	movf	indf2,w,c
 29078  000C16  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 29079  000C18  3B9F               	swapf	??_Uart_InitUartModule& (0+255),f,b
 29080  000C1A  509D               	movf	3997,w,c	;volatile
 29081  000C1C  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 29082  000C1E  0BEF               	andlw	-17
 29083  000C20  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 29084  000C22  6E9D               	movwf	3997,c	;volatile
 29085                           
 29086                           ; BSR set to: 0
 29087                           ;uart_drv.c: 323: PIE1bits.RC1IE = UartConfig->RxInterruptEnable;
 29088  000C24  EE20 F00C          	lfsr	2,12
 29089  000C28  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 29090  000C2A  26D9               	addwf	fsr2l,f,c
 29091  000C2C  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 29092  000C2E  22DA               	addwfc	fsr2h,f,c
 29093  000C30  50DF               	movf	indf2,w,c
 29094  000C32  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 29095  000C34  3B9F               	swapf	??_Uart_InitUartModule& (0+255),f,b
 29096  000C36  479F               	rlncf	??_Uart_InitUartModule& (0+255),f,b
 29097  000C38  509D               	movf	3997,w,c	;volatile
 29098  000C3A  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 29099  000C3C  0BDF               	andlw	-33
 29100  000C3E  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 29101  000C40  6E9D               	movwf	3997,c	;volatile
 29102                           
 29103                           ;uart_drv.c: 326: }
 29104  000C42  0012               	return	
 29105  000C44                     l668:
 29106                           
 29107                           ; BSR set to: 0
 29108                           ;uart_drv.c: 327: else if (Module == ((UINT8)(2)))
 29109                           
 29110                           ; BSR set to: 0
 29111  000C44  0E02               	movlw	2
 29112  000C46  19A1               	xorwf	Uart_InitUartModule@Module& (0+255),w,b
 29113  000C48  A4D8               	btfss	status,2,c
 29114  000C4A  0012               	return	
 29115                           
 29116                           ; BSR set to: 0
 29117                           ;uart_drv.c: 328: {
 29118                           ;uart_drv.c: 330: TRISCbits.TRISC0 = ((UINT8)(0));
 29119  000C4C  9094               	bcf	3988,0,c	;volatile
 29120                           
 29121                           ;uart_drv.c: 331: TRISCbits.TRISC1 = ((UINT8)(1));
 29122  000C4E  8294               	bsf	3988,1,c	;volatile
 29123                           
 29124                           ; BSR set to: 0
 29125                           ;uart_drv.c: 334: SetUartBaudRate(((UINT8)(2)), UartConfig);
 29126  000C50  C09D  F096         	movff	Uart_InitUartModule@UartConfig,SetUartBaudRate@UartConfig
 29127  000C54  C09E  F097         	movff	Uart_InitUartModule@UartConfig+1,SetUartBaudRate@UartConfig+1
 29128  000C58  0E02               	movlw	2
 29129  000C5A  ECB8  F014         	call	_SetUartBaudRate
 29130                           
 29131                           ;uart_drv.c: 339: TXSTA2 = 0x00;
 29132  000C5E  0E00               	movlw	0
 29133  000C60  6EA8               	movwf	4008,c	;volatile
 29134                           
 29135                           ;uart_drv.c: 340: TXSTA2 |= (UartConfig->Tx9bitMode) << ((UINT8)(6));
 29136  000C62  0100               	movlb	0	; () banked
 29137  000C64  EE20 F004          	lfsr	2,4
 29138  000C68  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 29139  000C6A  26D9               	addwf	fsr2l,f,c
 29140  000C6C  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 29141  000C6E  22DA               	addwfc	fsr2h,f,c
 29142  000C70  50DF               	movf	indf2,w,c
 29143  000C72  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 29144  000C74  0E06               	movlw	6
 29145  000C76  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 29146  000C78                     u13745:
 29147  000C78  90D8               	bcf	status,0,c
 29148  000C7A  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 29149  000C7C  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 29150  000C7E  D7FC               	goto	u13745
 29151  000C80  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 29152  000C82  12A8               	iorwf	4008,f,c	;volatile
 29153                           
 29154                           ; BSR set to: 0
 29155                           ;uart_drv.c: 341: TXSTA2 |= (UartConfig->TxEnable) << ((UINT8)(5));
 29156  000C84  EE20 F006          	lfsr	2,6
 29157  000C88  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 29158  000C8A  26D9               	addwf	fsr2l,f,c
 29159  000C8C  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 29160  000C8E  22DA               	addwfc	fsr2h,f,c
 29161  000C90  50DF               	movf	indf2,w,c
 29162  000C92  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 29163  000C94  0E05               	movlw	5
 29164  000C96  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 29165  000C98                     u13755:
 29166  000C98  90D8               	bcf	status,0,c
 29167  000C9A  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 29168  000C9C  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 29169  000C9E  D7FC               	goto	u13755
 29170  000CA0  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 29171  000CA2  12A8               	iorwf	4008,f,c	;volatile
 29172                           
 29173                           ; BSR set to: 0
 29174                           ;uart_drv.c: 342: TXSTA2 |= (UartConfig->UartMode) << ((UINT8)(4));
 29175  000CA4  EE20 F001          	lfsr	2,1
 29176  000CA8  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 29177  000CAA  26D9               	addwf	fsr2l,f,c
 29178  000CAC  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 29179  000CAE  22DA               	addwfc	fsr2h,f,c
 29180  000CB0  50DF               	movf	indf2,w,c
 29181  000CB2  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 29182  000CB4  399F               	swapf	??_Uart_InitUartModule& (0+255),w,b
 29183  000CB6  0BF0               	andlw	240
 29184  000CB8  12A8               	iorwf	4008,f,c	;volatile
 29185                           
 29186                           ; BSR set to: 0
 29187                           ;uart_drv.c: 343: TXSTA2 |= (UartConfig->SendBreakEnable) << ((UINT8)(3));
 29188  000CBA  EE20 F008          	lfsr	2,8
 29189  000CBE  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 29190  000CC0  26D9               	addwf	fsr2l,f,c
 29191  000CC2  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 29192  000CC4  22DA               	addwfc	fsr2h,f,c
 29193  000CC6  50DF               	movf	indf2,w,c
 29194  000CC8  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 29195  000CCA  90D8               	bcf	status,0,c
 29196  000CCC  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 29197  000CCE  90D8               	bcf	status,0,c
 29198  000CD0  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 29199  000CD2  90D8               	bcf	status,0,c
 29200  000CD4  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 29201  000CD6  12A8               	iorwf	4008,f,c	;volatile
 29202                           
 29203                           ; BSR set to: 0
 29204                           ;uart_drv.c: 344: TXSTA2 |= (UartConfig->HighBaudMode) << ((UINT8)(2));
 29205  000CD8  EE20 F003          	lfsr	2,3
 29206  000CDC  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 29207  000CDE  26D9               	addwf	fsr2l,f,c
 29208  000CE0  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 29209  000CE2  22DA               	addwfc	fsr2h,f,c
 29210  000CE4  50DF               	movf	indf2,w,c
 29211  000CE6  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 29212  000CE8  90D8               	bcf	status,0,c
 29213  000CEA  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 29214  000CEC  90D8               	bcf	status,0,c
 29215  000CEE  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 29216  000CF0  12A8               	iorwf	4008,f,c	;volatile
 29217                           
 29218                           ; BSR set to: 0
 29219                           ;uart_drv.c: 347: RCSTA2 = 0x00;
 29220  000CF2  0E00               	movlw	0
 29221  000CF4  6E9C               	movwf	3996,c	;volatile
 29222                           
 29223                           ; BSR set to: 0
 29224                           ;uart_drv.c: 348: RCSTA2 |= (UartConfig->UartEnable) << ((UINT8)(7));
 29225  000CF6  C09D  FFD9         	movff	Uart_InitUartModule@UartConfig,fsr2l
 29226  000CFA  C09E  FFDA         	movff	Uart_InitUartModule@UartConfig+1,fsr2h
 29227  000CFE  50DF               	movf	indf2,w,c
 29228  000D00  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 29229  000D02  0E00               	movlw	0
 29230  000D04  B19F               	btfsc	??_Uart_InitUartModule& (0+255),0,b
 29231  000D06  0E80               	movlw	128
 29232  000D08  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 29233  000D0A  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 29234  000D0C  129C               	iorwf	3996,f,c	;volatile
 29235                           
 29236                           ; BSR set to: 0
 29237                           ;uart_drv.c: 349: RCSTA2 |= (UartConfig->Rx9bitMode) << ((UINT8)(6));
 29238  000D0E  EE20 F005          	lfsr	2,5
 29239  000D12  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 29240  000D14  26D9               	addwf	fsr2l,f,c
 29241  000D16  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 29242  000D18  22DA               	addwfc	fsr2h,f,c
 29243  000D1A  50DF               	movf	indf2,w,c
 29244  000D1C  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 29245  000D1E  0E06               	movlw	6
 29246  000D20  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 29247  000D22                     u13765:
 29248  000D22  90D8               	bcf	status,0,c
 29249  000D24  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 29250  000D26  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 29251  000D28  D7FC               	goto	u13765
 29252  000D2A  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 29253  000D2C  129C               	iorwf	3996,f,c	;volatile
 29254                           
 29255                           ; BSR set to: 0
 29256                           ;uart_drv.c: 350: RCSTA2 |= (UartConfig->RxEnable) << ((UINT8)(4));
 29257  000D2E  EE20 F007          	lfsr	2,7
 29258  000D32  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 29259  000D34  26D9               	addwf	fsr2l,f,c
 29260  000D36  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 29261  000D38  22DA               	addwfc	fsr2h,f,c
 29262  000D3A  50DF               	movf	indf2,w,c
 29263  000D3C  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 29264  000D3E  399F               	swapf	??_Uart_InitUartModule& (0+255),w,b
 29265  000D40  0BF0               	andlw	240
 29266  000D42  129C               	iorwf	3996,f,c	;volatile
 29267                           
 29268                           ; BSR set to: 0
 29269                           ;uart_drv.c: 353: BAUDCON2 = 0x00;
 29270  000D44  0E00               	movlw	0
 29271  000D46  6E7C               	movwf	3964,c	;volatile
 29272                           
 29273                           ; BSR set to: 0
 29274                           ;uart_drv.c: 354: BAUDCON2 |= (UartConfig->BaudRateMode) << ((UINT8)(3));
 29275  000D48  EE20 F002          	lfsr	2,2
 29276  000D4C  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 29277  000D4E  26D9               	addwf	fsr2l,f,c
 29278  000D50  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 29279  000D52  22DA               	addwfc	fsr2h,f,c
 29280  000D54  50DF               	movf	indf2,w,c
 29281  000D56  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 29282  000D58  90D8               	bcf	status,0,c
 29283  000D5A  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 29284  000D5C  90D8               	bcf	status,0,c
 29285  000D5E  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 29286  000D60  90D8               	bcf	status,0,c
 29287  000D62  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 29288  000D64  127C               	iorwf	3964,f,c	;volatile
 29289                           
 29290                           ; BSR set to: 0
 29291                           ;uart_drv.c: 355: BAUDCON2 |= (UartConfig->WakeUpEnable) << ((UINT8)(1));
 29292  000D66  EE20 F00A          	lfsr	2,10
 29293  000D6A  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 29294  000D6C  26D9               	addwf	fsr2l,f,c
 29295  000D6E  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 29296  000D70  22DA               	addwfc	fsr2h,f,c
 29297  000D72  50DF               	movf	indf2,w,c
 29298  000D74  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 29299  000D76  90D8               	bcf	status,0,c
 29300  000D78  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 29301  000D7A  127C               	iorwf	3964,f,c	;volatile
 29302                           
 29303                           ; BSR set to: 0
 29304                           ;uart_drv.c: 356: BAUDCON2 |= (UartConfig->AutobaudEnable) << ((UINT8)(0));
 29305  000D7C  EE20 F009          	lfsr	2,9
 29306  000D80  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 29307  000D82  26D9               	addwf	fsr2l,f,c
 29308  000D84  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 29309  000D86  22DA               	addwfc	fsr2h,f,c
 29310  000D88  50DF               	movf	indf2,w,c
 29311  000D8A  127C               	iorwf	3964,f,c	;volatile
 29312                           
 29313                           ; BSR set to: 0
 29314                           ;uart_drv.c: 359: PIE3bits.TX2IE = UartConfig->TxInterruptEnable;
 29315  000D8C  EE20 F00B          	lfsr	2,11
 29316  000D90  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 29317  000D92  26D9               	addwf	fsr2l,f,c
 29318  000D94  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 29319  000D96  22DA               	addwfc	fsr2h,f,c
 29320  000D98  50DF               	movf	indf2,w,c
 29321  000D9A  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 29322  000D9C  3B9F               	swapf	??_Uart_InitUartModule& (0+255),f,b
 29323  000D9E  50A3               	movf	4003,w,c	;volatile
 29324  000DA0  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 29325  000DA2  0BEF               	andlw	-17
 29326  000DA4  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 29327  000DA6  6EA3               	movwf	4003,c	;volatile
 29328                           
 29329                           ; BSR set to: 0
 29330                           ;uart_drv.c: 360: PIE3bits.RC2IE = UartConfig->RxInterruptEnable;
 29331  000DA8  EE20 F00C          	lfsr	2,12
 29332  000DAC  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 29333  000DAE  26D9               	addwf	fsr2l,f,c
 29334  000DB0  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 29335  000DB2  22DA               	addwfc	fsr2h,f,c
 29336  000DB4  50DF               	movf	indf2,w,c
 29337  000DB6  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 29338  000DB8  3B9F               	swapf	??_Uart_InitUartModule& (0+255),f,b
 29339  000DBA  479F               	rlncf	??_Uart_InitUartModule& (0+255),f,b
 29340  000DBC  50A3               	movf	4003,w,c	;volatile
 29341  000DBE  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 29342  000DC0  0BDF               	andlw	-33
 29343  000DC2  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 29344  000DC4  6EA3               	movwf	4003,c	;volatile
 29345                           
 29346                           ; BSR set to: 0
 29347  000DC6  0012               	return	
 29348  000DC8                     __end_of_Uart_InitUartModule:
 29349                           	opt stack 0
 29350                           tosu	equ	0xFFF
 29351                           tosh	equ	0xFFE
 29352                           tosl	equ	0xFFD
 29353                           pclath	equ	0xFFA
 29354                           tblptru	equ	0xFF8
 29355                           tblptrh	equ	0xFF7
 29356                           tblptrl	equ	0xFF6
 29357                           tablat	equ	0xFF5
 29358                           prodh	equ	0xFF4
 29359                           prodl	equ	0xFF3
 29360                           intcon	equ	0xFF2
 29361                           intcon2	equ	0xFF1
 29362                           intcon3	equ	0xFF0
 29363                           indf0	equ	0xFEF
 29364                           postinc0	equ	0xFEE
 29365                           plusw0	equ	0xFEB
 29366                           fsr0h	equ	0xFEA
 29367                           fsr0l	equ	0xFE9
 29368                           wreg	equ	0xFE8
 29369                           indf1	equ	0xFE7
 29370                           postinc1	equ	0xFE6
 29371                           postdec1	equ	0xFE5
 29372                           plusw1	equ	0xFE3
 29373                           fsr1h	equ	0xFE2
 29374                           fsr1l	equ	0xFE1
 29375                           indf2	equ	0xFDF
 29376                           postinc2	equ	0xFDE
 29377                           postdec2	equ	0xFDD
 29378                           plusw2	equ	0xFDB
 29379                           fsr2h	equ	0xFDA
 29380                           fsr2l	equ	0xFD9
 29381                           status	equ	0xFD8
 29382                           
 29383 ;; *************** function _SetUartBaudRate *****************
 29384 ;; Defined at:
 29385 ;;		line 121 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 29386 ;; Parameters:    Size  Location     Type
 29387 ;;  Module          1    wreg     unsigned char 
 29388 ;;  UartConfig      2   54[BANK0 ] PTR struct _UartConfig
 29389 ;;		 -> UartConfig(21), 
 29390 ;; Auto vars:     Size  Location     Type
 29391 ;;  Module          1   57[BANK0 ] unsigned char 
 29392 ;;  BaudRateRegi    2   58[BANK0 ] unsigned short 
 29393 ;;  DivisionFact    1   60[BANK0 ] unsigned char 
 29394 ;; Return value:  Size  Location     Type
 29395 ;;                  1    wreg      void 
 29396 ;; Registers used:
 29397 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 29398 ;; Tracked objects:
 29399 ;;		On entry : 0/0
 29400 ;;		On exit  : 0/0
 29401 ;;		Unchanged: 0/0
 29402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29403 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29404 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29405 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29406 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29407 ;;Total ram usage:        7 bytes
 29408 ;; Hardware stack levels used:    1
 29409 ;; Hardware stack levels required when called:   12
 29410 ;; This function calls:
 29411 ;;		___lldiv
 29412 ;;		___lmul
 29413 ;; This function is called by:
 29414 ;;		_Uart_InitUartModule
 29415 ;; This function uses a non-reentrant model
 29416 ;;
 29417                           
 29418                           	psect	text138
 29419  002970                     __ptext138:
 29420                           	opt stack 0
 29421  002970                     _SetUartBaudRate:
 29422                           	opt stack 14
 29423                           
 29424                           ; BSR set to: 0
 29425                           ;incstack = 0
 29426                           ;SetUartBaudRate@Module stored from wreg
 29427  002970  0100               	movlb	0	; () banked
 29428  002972  6F99               	movwf	SetUartBaudRate@Module& (0+255),b
 29429                           
 29430                           ;uart_drv.c: 123: UINT16 BaudRateRegister = 0;
 29431  002974  0E00               	movlw	0
 29432  002976  0100               	movlb	0	; () banked
 29433  002978  6F9B               	movwf	(SetUartBaudRate@BaudRateRegister+1)& (0+255),b
 29434  00297A  0E00               	movlw	0
 29435  00297C  6F9A               	movwf	SetUartBaudRate@BaudRateRegister& (0+255),b
 29436                           
 29437                           ;uart_drv.c: 124: UINT8 DivisionFactor = 0;
 29438  00297E  0E00               	movlw	0
 29439  002980  6F9C               	movwf	SetUartBaudRate@DivisionFactor& (0+255),b
 29440                           
 29441                           ; BSR set to: 0
 29442                           ;uart_drv.c: 127: if ((UartConfig->BaudRateMode == ((UINT8)(0))) && (UartConfig->BaudRat
      +                          eMode == ((UINT8)(0))))
 29443  002982  EE20 F002          	lfsr	2,2
 29444  002986  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 29445  002988  26D9               	addwf	fsr2l,f,c
 29446  00298A  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 29447  00298C  22DA               	addwfc	fsr2h,f,c
 29448  00298E  50DF               	movf	indf2,w,c
 29449  002990  A4D8               	btfss	status,2,c
 29450  002992  D00B               	goto	l625
 29451                           
 29452                           ; BSR set to: 0
 29453  002994  EE20 F002          	lfsr	2,2
 29454  002998  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 29455  00299A  26D9               	addwf	fsr2l,f,c
 29456  00299C  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 29457  00299E  22DA               	addwfc	fsr2h,f,c
 29458  0029A0  50DF               	movf	indf2,w,c
 29459  0029A2  A4D8               	btfss	status,2,c
 29460  0029A4  D002               	goto	l625
 29461                           
 29462                           ; BSR set to: 0
 29463                           ;uart_drv.c: 128: {
 29464                           ;uart_drv.c: 129: DivisionFactor = 64;
 29465  0029A6  0E40               	movlw	64
 29466  0029A8  D039               	goto	L60
 29467  0029AA                     l625:
 29468                           
 29469                           ; BSR set to: 0
 29470                           ;uart_drv.c: 131: else if ((UartConfig->BaudRateMode == ((UINT8)(1))) && (UartConfig->Ba
      +                          udRateMode == ((UINT8)(0))))
 29471                           
 29472                           ; BSR set to: 0
 29473  0029AA  EE20 F002          	lfsr	2,2
 29474  0029AE  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 29475  0029B0  26D9               	addwf	fsr2l,f,c
 29476  0029B2  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 29477  0029B4  22DA               	addwfc	fsr2h,f,c
 29478  0029B6  04DE               	decf	postinc2,w,c
 29479  0029B8  A4D8               	btfss	status,2,c
 29480  0029BA  D009               	goto	l627
 29481                           
 29482                           ; BSR set to: 0
 29483  0029BC  EE20 F002          	lfsr	2,2
 29484  0029C0  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 29485  0029C2  26D9               	addwf	fsr2l,f,c
 29486  0029C4  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 29487  0029C6  22DA               	addwfc	fsr2h,f,c
 29488  0029C8  50DF               	movf	indf2,w,c
 29489  0029CA  B4D8               	btfsc	status,2,c
 29490  0029CC  D012               	goto	u12790
 29491  0029CE                     l627:
 29492                           
 29493                           ; BSR set to: 0
 29494                           ;uart_drv.c: 135: else if ((UartConfig->BaudRateMode == ((UINT8)(0))) && (UartConfig->Ba
      +                          udRateMode == ((UINT8)(1))))
 29495                           
 29496                           ; BSR set to: 0
 29497  0029CE  EE20 F002          	lfsr	2,2
 29498  0029D2  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 29499  0029D4  26D9               	addwf	fsr2l,f,c
 29500  0029D6  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 29501  0029D8  22DA               	addwfc	fsr2h,f,c
 29502  0029DA  50DF               	movf	indf2,w,c
 29503  0029DC  A4D8               	btfss	status,2,c
 29504  0029DE  D00B               	goto	l629
 29505                           
 29506                           ; BSR set to: 0
 29507  0029E0  EE20 F002          	lfsr	2,2
 29508  0029E4  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 29509  0029E6  26D9               	addwf	fsr2l,f,c
 29510  0029E8  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 29511  0029EA  22DA               	addwfc	fsr2h,f,c
 29512  0029EC  04DE               	decf	postinc2,w,c
 29513  0029EE  A4D8               	btfss	status,2,c
 29514  0029F0  D002               	goto	l629
 29515  0029F2                     u12790:
 29516                           
 29517                           ; BSR set to: 0
 29518                           ;uart_drv.c: 136: {
 29519                           ;uart_drv.c: 137: DivisionFactor = 16;
 29520  0029F2  0E10               	movlw	16
 29521  0029F4  D013               	goto	L60
 29522  0029F6                     l629:
 29523                           
 29524                           ; BSR set to: 0
 29525                           ;uart_drv.c: 139: else if ((UartConfig->BaudRateMode == ((UINT8)(1))) && (UartConfig->Ba
      +                          udRateMode == ((UINT8)(1))))
 29526                           
 29527                           ; BSR set to: 0
 29528  0029F6  EE20 F002          	lfsr	2,2
 29529  0029FA  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 29530  0029FC  26D9               	addwf	fsr2l,f,c
 29531  0029FE  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 29532  002A00  22DA               	addwfc	fsr2h,f,c
 29533  002A02  04DE               	decf	postinc2,w,c
 29534  002A04  A4D8               	btfss	status,2,c
 29535  002A06  D00B               	goto	l631
 29536                           
 29537                           ; BSR set to: 0
 29538  002A08  EE20 F002          	lfsr	2,2
 29539  002A0C  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 29540  002A0E  26D9               	addwf	fsr2l,f,c
 29541  002A10  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 29542  002A12  22DA               	addwfc	fsr2h,f,c
 29543  002A14  04DE               	decf	postinc2,w,c
 29544  002A16  A4D8               	btfss	status,2,c
 29545  002A18  D002               	goto	l631
 29546                           
 29547                           ; BSR set to: 0
 29548                           ;uart_drv.c: 140: {
 29549                           ;uart_drv.c: 141: DivisionFactor = 4;
 29550  002A1A  0E04               	movlw	4
 29551  002A1C                     L60:
 29552  002A1C  6F9C               	movwf	SetUartBaudRate@DivisionFactor& (0+255),b
 29553  002A1E                     l631:
 29554                           
 29555                           ; BSR set to: 0
 29556                           ;uart_drv.c: 146: }
 29557                           ;uart_drv.c: 149: BaudRateRegister = ((UartConfig->McuBusClock/(DivisionFactor * UartCon
      +                          fig->DesiredBaudRate)) - 1);
 29558                           
 29559                           ; BSR set to: 0
 29560                           
 29561                           ; BSR set to: 0
 29562                           
 29563                           ; BSR set to: 0
 29564                           
 29565                           ; BSR set to: 0
 29566                           
 29567                           ;uart_drv.c: 143: else
 29568                           ;uart_drv.c: 144: {
 29569                           
 29570                           ; BSR set to: 0
 29571  002A1E  EE20 F00D          	lfsr	2,13
 29572  002A22  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 29573  002A24  26D9               	addwf	fsr2l,f,c
 29574  002A26  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 29575  002A28  22DA               	addwfc	fsr2h,f,c
 29576  002A2A  CFDE F089          	movff	postinc2,___lldiv@dividend
 29577  002A2E  CFDE F08A          	movff	postinc2,___lldiv@dividend+1
 29578  002A32  CFDE F08B          	movff	postinc2,___lldiv@dividend+2
 29579  002A36  CFDE F08C          	movff	postinc2,___lldiv@dividend+3
 29580  002A3A  519C               	movf	SetUartBaudRate@DivisionFactor& (0+255),w,b
 29581  002A3C  6F7D               	movwf	___lmul@multiplier& (0+255),b
 29582  002A3E  6B7E               	clrf	(___lmul@multiplier+1)& (0+255),b
 29583  002A40  6B7F               	clrf	(___lmul@multiplier+2)& (0+255),b
 29584  002A42  6B80               	clrf	(___lmul@multiplier+3)& (0+255),b
 29585  002A44  EE20 F011          	lfsr	2,17
 29586  002A48  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 29587  002A4A  26D9               	addwf	fsr2l,f,c
 29588  002A4C  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 29589  002A4E  22DA               	addwfc	fsr2h,f,c
 29590  002A50  CFDE F081          	movff	postinc2,___lmul@multiplicand
 29591  002A54  CFDE F082          	movff	postinc2,___lmul@multiplicand+1
 29592  002A58  CFDE F083          	movff	postinc2,___lmul@multiplicand+2
 29593  002A5C  CFDE F084          	movff	postinc2,___lmul@multiplicand+3
 29594  002A60  EC49  F02D         	call	___lmul	;wreg free
 29595  002A64  C07D  F08D         	movff	?___lmul,___lldiv@divisor
 29596  002A68  C07E  F08E         	movff	?___lmul+1,___lldiv@divisor+1
 29597  002A6C  C07F  F08F         	movff	?___lmul+2,___lldiv@divisor+2
 29598  002A70  C080  F090         	movff	?___lmul+3,___lldiv@divisor+3
 29599  002A74  ECC1  F029         	call	___lldiv	;wreg free
 29600  002A78  0EFF               	movlw	255
 29601  002A7A  0100               	movlb	0	; () banked
 29602  002A7C  2589               	addwf	?___lldiv& (0+255),w,b
 29603  002A7E  6F9A               	movwf	SetUartBaudRate@BaudRateRegister& (0+255),b
 29604  002A80  0EFF               	movlw	255
 29605  002A82  218A               	addwfc	(?___lldiv+1)& (0+255),w,b
 29606  002A84  6F9B               	movwf	(SetUartBaudRate@BaudRateRegister+1)& (0+255),b
 29607                           
 29608                           ; BSR set to: 0
 29609                           ;uart_drv.c: 151: if (Module == ((UINT8)(1)))
 29610  002A86  0599               	decf	SetUartBaudRate@Module& (0+255),w,b
 29611  002A88  A4D8               	btfss	status,2,c
 29612  002A8A  D005               	goto	l633
 29613                           
 29614                           ; BSR set to: 0
 29615                           ;uart_drv.c: 152: {
 29616                           ;uart_drv.c: 154: SPBRGH1 = (UINT8)((BaudRateRegister & ((UINT8)(0xFF00))) >> ((UINT8)(8
      +                          )));
 29617  002A8C  0E00               	movlw	0
 29618  002A8E  6E7F               	movwf	3967,c	;volatile
 29619                           
 29620                           ; BSR set to: 0
 29621                           ;uart_drv.c: 155: SPBRG1 = (UINT8)((BaudRateRegister & ((UINT8)(0x00FF))));
 29622  002A90  C09A  FFB0         	movff	SetUartBaudRate@BaudRateRegister,4016	;volatile
 29623                           
 29624                           ;uart_drv.c: 156: }
 29625  002A94  0012               	return	
 29626  002A96                     l633:
 29627                           
 29628                           ; BSR set to: 0
 29629                           ;uart_drv.c: 157: else if (Module == ((UINT8)(2)))
 29630                           
 29631                           ; BSR set to: 0
 29632  002A96  0E02               	movlw	2
 29633  002A98  1999               	xorwf	SetUartBaudRate@Module& (0+255),w,b
 29634  002A9A  A4D8               	btfss	status,2,c
 29635  002A9C  0012               	return	
 29636                           
 29637                           ; BSR set to: 0
 29638                           ;uart_drv.c: 158: {
 29639                           ;uart_drv.c: 160: SPBRGH2 = (UINT8)((BaudRateRegister & ((UINT8)(0xFF00))) >> ((UINT8)(8
      +                          )));
 29640  002A9E  0E00               	movlw	0
 29641  002AA0  6E7D               	movwf	3965,c	;volatile
 29642                           
 29643                           ; BSR set to: 0
 29644                           ;uart_drv.c: 161: SPBRG2 = (UINT8)((BaudRateRegister & ((UINT8)(0x00FF))));
 29645  002AA2  C09A  FFAB         	movff	SetUartBaudRate@BaudRateRegister,4011	;volatile
 29646                           
 29647                           ; BSR set to: 0
 29648  002AA6  0012               	return	
 29649  002AA8                     __end_of_SetUartBaudRate:
 29650                           	opt stack 0
 29651                           tosu	equ	0xFFF
 29652                           tosh	equ	0xFFE
 29653                           tosl	equ	0xFFD
 29654                           pclath	equ	0xFFA
 29655                           tblptru	equ	0xFF8
 29656                           tblptrh	equ	0xFF7
 29657                           tblptrl	equ	0xFF6
 29658                           tablat	equ	0xFF5
 29659                           prodh	equ	0xFF4
 29660                           prodl	equ	0xFF3
 29661                           intcon	equ	0xFF2
 29662                           intcon2	equ	0xFF1
 29663                           intcon3	equ	0xFF0
 29664                           indf0	equ	0xFEF
 29665                           postinc0	equ	0xFEE
 29666                           plusw0	equ	0xFEB
 29667                           fsr0h	equ	0xFEA
 29668                           fsr0l	equ	0xFE9
 29669                           wreg	equ	0xFE8
 29670                           indf1	equ	0xFE7
 29671                           postinc1	equ	0xFE6
 29672                           postdec1	equ	0xFE5
 29673                           plusw1	equ	0xFE3
 29674                           fsr1h	equ	0xFE2
 29675                           fsr1l	equ	0xFE1
 29676                           indf2	equ	0xFDF
 29677                           postinc2	equ	0xFDE
 29678                           postdec2	equ	0xFDD
 29679                           plusw2	equ	0xFDB
 29680                           fsr2h	equ	0xFDA
 29681                           fsr2l	equ	0xFD9
 29682                           status	equ	0xFD8
 29683                           
 29684 ;; *************** function ___lmul *****************
 29685 ;; Defined at:
 29686 ;;		line 15 in file "/opt/microchip/xc8/v1.45/sources/common/Umul32.c"
 29687 ;; Parameters:    Size  Location     Type
 29688 ;;  multiplier      4   29[BANK0 ] unsigned long 
 29689 ;;  multiplicand    4   33[BANK0 ] unsigned long 
 29690 ;; Auto vars:     Size  Location     Type
 29691 ;;  product         4   37[BANK0 ] unsigned long 
 29692 ;; Return value:  Size  Location     Type
 29693 ;;                  4   29[BANK0 ] unsigned long 
 29694 ;; Registers used:
 29695 ;;		wreg, status,2, status,0
 29696 ;; Tracked objects:
 29697 ;;		On entry : 0/0
 29698 ;;		On exit  : 0/0
 29699 ;;		Unchanged: 0/0
 29700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29701 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29702 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29703 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29704 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29705 ;;Total ram usage:       12 bytes
 29706 ;; Hardware stack levels used:    1
 29707 ;; Hardware stack levels required when called:   11
 29708 ;; This function calls:
 29709 ;;		Nothing
 29710 ;; This function is called by:
 29711 ;;		_Tmr_TmrBPrSet
 29712 ;;		_SetUartBaudRate
 29713 ;;		_strtol
 29714 ;; This function uses a non-reentrant model
 29715 ;;
 29716                           
 29717                           	psect	text139
 29718  005A92                     __ptext139:
 29719                           	opt stack 0
 29720  005A92                     ___lmul:
 29721                           	opt stack 15
 29722                           
 29723                           ; BSR set to: 0
 29724                           ;incstack = 0
 29725  005A92  0E00               	movlw	0
 29726  005A94  0100               	movlb	0	; () banked
 29727  005A96  6F85               	movwf	___lmul@product& (0+255),b
 29728  005A98  0E00               	movlw	0
 29729  005A9A  6F86               	movwf	(___lmul@product+1)& (0+255),b
 29730  005A9C  0E00               	movlw	0
 29731  005A9E  6F87               	movwf	(___lmul@product+2)& (0+255),b
 29732  005AA0  0E00               	movlw	0
 29733  005AA2  6F88               	movwf	(___lmul@product+3)& (0+255),b
 29734  005AA4                     
 29735                           ; BSR set to: 0
 29736                           
 29737                           ; BSR set to: 0
 29738  005AA4  A17D               	btfss	___lmul@multiplier& (0+255),0,b
 29739  005AA6  D008               	goto	l2959
 29740                           
 29741                           ; BSR set to: 0
 29742  005AA8  5181               	movf	___lmul@multiplicand& (0+255),w,b
 29743  005AAA  2785               	addwf	___lmul@product& (0+255),f,b
 29744  005AAC  5182               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 29745  005AAE  2386               	addwfc	(___lmul@product+1)& (0+255),f,b
 29746  005AB0  5183               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 29747  005AB2  2387               	addwfc	(___lmul@product+2)& (0+255),f,b
 29748  005AB4  5184               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 29749  005AB6  2388               	addwfc	(___lmul@product+3)& (0+255),f,b
 29750  005AB8                     l2959:
 29751                           
 29752                           ; BSR set to: 0
 29753                           
 29754                           ; BSR set to: 0
 29755  005AB8  90D8               	bcf	status,0,c
 29756  005ABA  3781               	rlcf	___lmul@multiplicand& (0+255),f,b
 29757  005ABC  3782               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 29758  005ABE  3783               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 29759  005AC0  3784               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 29760                           
 29761                           ; BSR set to: 0
 29762  005AC2  90D8               	bcf	status,0,c
 29763  005AC4  3380               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 29764  005AC6  337F               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 29765  005AC8  337E               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 29766  005ACA  337D               	rrcf	___lmul@multiplier& (0+255),f,b
 29767  005ACC  517D               	movf	___lmul@multiplier& (0+255),w,b
 29768  005ACE  117E               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 29769  005AD0  117F               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 29770  005AD2  1180               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 29771  005AD4  A4D8               	btfss	status,2,c
 29772  005AD6  D7E6               	goto	l2958
 29773                           
 29774                           ; BSR set to: 0
 29775  005AD8  C085  F07D         	movff	___lmul@product,?___lmul
 29776  005ADC  C086  F07E         	movff	___lmul@product+1,?___lmul+1
 29777  005AE0  C087  F07F         	movff	___lmul@product+2,?___lmul+2
 29778  005AE4  C088  F080         	movff	___lmul@product+3,?___lmul+3
 29779                           
 29780                           ; BSR set to: 0
 29781  005AE8  0012               	return		;funcret
 29782  005AEA                     __end_of___lmul:
 29783                           	opt stack 0
 29784                           tosu	equ	0xFFF
 29785                           tosh	equ	0xFFE
 29786                           tosl	equ	0xFFD
 29787                           pclath	equ	0xFFA
 29788                           tblptru	equ	0xFF8
 29789                           tblptrh	equ	0xFF7
 29790                           tblptrl	equ	0xFF6
 29791                           tablat	equ	0xFF5
 29792                           prodh	equ	0xFF4
 29793                           prodl	equ	0xFF3
 29794                           intcon	equ	0xFF2
 29795                           intcon2	equ	0xFF1
 29796                           intcon3	equ	0xFF0
 29797                           indf0	equ	0xFEF
 29798                           postinc0	equ	0xFEE
 29799                           plusw0	equ	0xFEB
 29800                           fsr0h	equ	0xFEA
 29801                           fsr0l	equ	0xFE9
 29802                           wreg	equ	0xFE8
 29803                           indf1	equ	0xFE7
 29804                           postinc1	equ	0xFE6
 29805                           postdec1	equ	0xFE5
 29806                           plusw1	equ	0xFE3
 29807                           fsr1h	equ	0xFE2
 29808                           fsr1l	equ	0xFE1
 29809                           indf2	equ	0xFDF
 29810                           postinc2	equ	0xFDE
 29811                           postdec2	equ	0xFDD
 29812                           plusw2	equ	0xFDB
 29813                           fsr2h	equ	0xFDA
 29814                           fsr2l	equ	0xFD9
 29815                           status	equ	0xFD8
 29816                           
 29817 ;; *************** function _UartSetConfigLow *****************
 29818 ;; Defined at:
 29819 ;;		line 229 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 29820 ;; Parameters:    Size  Location     Type
 29821 ;;		None
 29822 ;; Auto vars:     Size  Location     Type
 29823 ;;		None
 29824 ;; Return value:  Size  Location     Type
 29825 ;;                  1    wreg      void 
 29826 ;; Registers used:
 29827 ;;		wreg, status,2
 29828 ;; Tracked objects:
 29829 ;;		On entry : 0/0
 29830 ;;		On exit  : 0/0
 29831 ;;		Unchanged: 0/0
 29832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29833 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29834 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29836 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29837 ;;Total ram usage:        0 bytes
 29838 ;; Hardware stack levels used:    1
 29839 ;; Hardware stack levels required when called:   11
 29840 ;; This function calls:
 29841 ;;		Nothing
 29842 ;; This function is called by:
 29843 ;;		_ConfigureModem
 29844 ;; This function uses a non-reentrant model
 29845 ;;
 29846                           
 29847                           	psect	text140
 29848  005AEA                     __ptext140:
 29849                           	opt stack 0
 29850  005AEA                     _UartSetConfigLow:
 29851                           	opt stack 15
 29852                           
 29853                           ;mdm_gsm_gprs.c: 231: UartConfig.UartEnable = ((UINT8)(1));
 29854                           
 29855                           ; BSR set to: 0
 29856                           ;incstack = 0
 29857  005AEA  0E01               	movlw	1
 29858  005AEC  0103               	movlb	3	; () banked
 29859  005AEE  6F22               	movwf	_UartConfig& (0+255),b
 29860                           
 29861                           ;mdm_gsm_gprs.c: 232: UartConfig.UartMode = ((UINT8)(0));
 29862  005AF0  0E00               	movlw	0
 29863  005AF2  6F23               	movwf	(_UartConfig+1)& (0+255),b
 29864                           
 29865                           ;mdm_gsm_gprs.c: 233: UartConfig.BaudRateMode = ((UINT8)(0));
 29866  005AF4  0E00               	movlw	0
 29867  005AF6  6F24               	movwf	(_UartConfig+2)& (0+255),b
 29868                           
 29869                           ;mdm_gsm_gprs.c: 234: UartConfig.HighBaudMode = ((UINT8)(0));
 29870  005AF8  0E00               	movlw	0
 29871  005AFA  6F25               	movwf	(_UartConfig+3)& (0+255),b
 29872                           
 29873                           ;mdm_gsm_gprs.c: 235: UartConfig.Tx9bitMode = ((UINT8)(0));
 29874  005AFC  0E00               	movlw	0
 29875  005AFE  6F26               	movwf	(_UartConfig+4)& (0+255),b
 29876                           
 29877                           ;mdm_gsm_gprs.c: 236: UartConfig.Rx9bitMode = ((UINT8)(0));
 29878  005B00  0E00               	movlw	0
 29879  005B02  6F27               	movwf	(_UartConfig+5)& (0+255),b
 29880                           
 29881                           ;mdm_gsm_gprs.c: 237: UartConfig.TxEnable = ((UINT8)(1));
 29882  005B04  0E01               	movlw	1
 29883  005B06  6F28               	movwf	(_UartConfig+6)& (0+255),b
 29884                           
 29885                           ;mdm_gsm_gprs.c: 238: UartConfig.RxEnable = ((UINT8)(1));
 29886  005B08  0E01               	movlw	1
 29887  005B0A  6F29               	movwf	(_UartConfig+7)& (0+255),b
 29888                           
 29889                           ;mdm_gsm_gprs.c: 239: UartConfig.SendBreakEnable = ((UINT8)(0));
 29890  005B0C  0E00               	movlw	0
 29891  005B0E  6F2A               	movwf	(_UartConfig+8)& (0+255),b
 29892                           
 29893                           ;mdm_gsm_gprs.c: 240: UartConfig.AutobaudEnable = ((UINT8)(0));
 29894  005B10  0E00               	movlw	0
 29895  005B12  6F2B               	movwf	(_UartConfig+9)& (0+255),b
 29896                           
 29897                           ;mdm_gsm_gprs.c: 241: UartConfig.WakeUpEnable = ((UINT8)(0));
 29898  005B14  0E00               	movlw	0
 29899  005B16  6F2C               	movwf	(_UartConfig+10)& (0+255),b
 29900                           
 29901                           ;mdm_gsm_gprs.c: 242: UartConfig.TxInterruptEnable = ((UINT8)(0));
 29902  005B18  0E00               	movlw	0
 29903  005B1A  6F2D               	movwf	(_UartConfig+11)& (0+255),b
 29904                           
 29905                           ;mdm_gsm_gprs.c: 243: UartConfig.RxInterruptEnable = ((UINT8)(1));
 29906  005B1C  0E01               	movlw	1
 29907  005B1E  6F2E               	movwf	(_UartConfig+12)& (0+255),b
 29908                           
 29909                           ;mdm_gsm_gprs.c: 244: UartConfig.McuBusClock = ((UINT32)(48000000));
 29910  005B20  0E00               	movlw	0
 29911  005B22  6F2F               	movwf	(_UartConfig+13)& (0+255),b
 29912  005B24  0E6C               	movlw	108
 29913  005B26  6F30               	movwf	(_UartConfig+14)& (0+255),b
 29914  005B28  0EDC               	movlw	220
 29915  005B2A  6F31               	movwf	(_UartConfig+15)& (0+255),b
 29916  005B2C  0E02               	movlw	2
 29917  005B2E  6F32               	movwf	(_UartConfig+16)& (0+255),b
 29918                           
 29919                           ;mdm_gsm_gprs.c: 245: UartConfig.DesiredBaudRate = ((UINT32)(9600));
 29920  005B30  0E80               	movlw	128
 29921  005B32  6F33               	movwf	(_UartConfig+17)& (0+255),b
 29922  005B34  0E25               	movlw	37
 29923  005B36  6F34               	movwf	(_UartConfig+18)& (0+255),b
 29924  005B38  0E00               	movlw	0
 29925  005B3A  6F35               	movwf	(_UartConfig+19)& (0+255),b
 29926  005B3C  0E00               	movlw	0
 29927  005B3E  6F36               	movwf	(_UartConfig+20)& (0+255),b
 29928                           
 29929                           ; BSR set to: 3
 29930  005B40  0012               	return		;funcret
 29931  005B42                     __end_of_UartSetConfigLow:
 29932                           	opt stack 0
 29933                           tosu	equ	0xFFF
 29934                           tosh	equ	0xFFE
 29935                           tosl	equ	0xFFD
 29936                           pclath	equ	0xFFA
 29937                           tblptru	equ	0xFF8
 29938                           tblptrh	equ	0xFF7
 29939                           tblptrl	equ	0xFF6
 29940                           tablat	equ	0xFF5
 29941                           prodh	equ	0xFF4
 29942                           prodl	equ	0xFF3
 29943                           intcon	equ	0xFF2
 29944                           intcon2	equ	0xFF1
 29945                           intcon3	equ	0xFF0
 29946                           indf0	equ	0xFEF
 29947                           postinc0	equ	0xFEE
 29948                           plusw0	equ	0xFEB
 29949                           fsr0h	equ	0xFEA
 29950                           fsr0l	equ	0xFE9
 29951                           wreg	equ	0xFE8
 29952                           indf1	equ	0xFE7
 29953                           postinc1	equ	0xFE6
 29954                           postdec1	equ	0xFE5
 29955                           plusw1	equ	0xFE3
 29956                           fsr1h	equ	0xFE2
 29957                           fsr1l	equ	0xFE1
 29958                           indf2	equ	0xFDF
 29959                           postinc2	equ	0xFDE
 29960                           postdec2	equ	0xFDD
 29961                           plusw2	equ	0xFDB
 29962                           fsr2h	equ	0xFDA
 29963                           fsr2l	equ	0xFD9
 29964                           status	equ	0xFD8
 29965                           
 29966 ;; *************** function _CheckModem *****************
 29967 ;; Defined at:
 29968 ;;		line 283 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 29969 ;; Parameters:    Size  Location     Type
 29970 ;;		None
 29971 ;; Auto vars:     Size  Location     Type
 29972 ;;		None
 29973 ;; Return value:  Size  Location     Type
 29974 ;;                  1    wreg      void 
 29975 ;; Registers used:
 29976 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 29977 ;; Tracked objects:
 29978 ;;		On entry : 0/0
 29979 ;;		On exit  : 0/0
 29980 ;;		Unchanged: 0/0
 29981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29982 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29983 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29985 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29986 ;;Total ram usage:        0 bytes
 29987 ;; Hardware stack levels used:    1
 29988 ;; Hardware stack levels required when called:   14
 29989 ;; This function calls:
 29990 ;;		_GenerateEvt
 29991 ;;		_OsTmr_GetTimerStatus
 29992 ;;		_OsTmr_StartTimer
 29993 ;;		_ReceiveEvt
 29994 ;;		_Uart_WriteConstString
 29995 ;; This function is called by:
 29996 ;;		_Mdm_MainTask
 29997 ;; This function uses a non-reentrant model
 29998 ;;
 29999                           
 30000                           	psect	text141
 30001  002020                     __ptext141:
 30002                           	opt stack 0
 30003  002020                     _CheckModem:
 30004                           	opt stack 13
 30005                           
 30006                           ;mdm_gsm_gprs.c: 285: static CheckMdmStsType CheckMdmSts = MdmCh_SetInitialDelay;
 30007                           ;mdm_gsm_gprs.c: 286: static SwTimerType Timeout = { 0u, SwTimerExpired, 0, 0, DelayNotE
      +                          xpired, };
 30008                           ;mdm_gsm_gprs.c: 288: switch (CheckMdmSts)
 30009                           
 30010                           ; BSR set to: 3
 30011                           ;incstack = 0
 30012  002020  D09C               	goto	l982
 30013  002022                     
 30014                           ;mdm_gsm_gprs.c: 292: OsTmr_StartTimer(&Timeout,2000);
 30015  002022  0EEC               	movlw	low CheckModem@Timeout
 30016  002024  0100               	movlb	0	; () banked
 30017  002026  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 30018  002028  0E03               	movlw	high CheckModem@Timeout
 30019  00202A  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 30020  00202C  0ED0               	movlw	208
 30021  00202E  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 30022  002030  0E07               	movlw	7
 30023  002032  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 30024  002034  0E00               	movlw	0
 30025  002036  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 30026  002038  0E00               	movlw	0
 30027  00203A  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 30028  00203C  ECC0  F02C         	call	_OsTmr_StartTimer	;wreg free
 30029                           
 30030                           ;mdm_gsm_gprs.c: 294: CheckMdmSts = MdmCh_InitialDelay;
 30031  002040  0E01               	movlw	1
 30032  002042  0101               	movlb	1	; () banked
 30033  002044  6FF2               	movwf	CheckModem@CheckMdmSts& (0+255),b
 30034                           
 30035                           ;mdm_gsm_gprs.c: 295: break;
 30036  002046  0012               	return	
 30037  002048                     
 30038                           ; BSR set to: 1
 30039                           ;mdm_gsm_gprs.c: 299: if (OsTmr_GetTimerStatus(&Timeout) == SwTimerExpired)
 30040                           
 30041                           ; BSR set to: 1
 30042  002048  0EEC               	movlw	low CheckModem@Timeout
 30043  00204A  0100               	movlb	0	; () banked
 30044  00204C  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 30045  00204E  0E03               	movlw	high CheckModem@Timeout
 30046  002050  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 30047  002052  ECA9  F028         	call	_OsTmr_GetTimerStatus	;wreg free
 30048  002056  06E8               	decf	wreg,f,c
 30049  002058  A4D8               	btfss	status,2,c
 30050  00205A  0012               	return	
 30051                           
 30052                           ;mdm_gsm_gprs.c: 300: {
 30053                           ;mdm_gsm_gprs.c: 302: CheckMdmSts = MdmCh_SendATE1;
 30054  00205C  0E02               	movlw	2
 30055  00205E  0101               	movlb	1	; () banked
 30056  002060  6FF2               	movwf	CheckModem@CheckMdmSts& (0+255),b
 30057                           
 30058                           ; BSR set to: 1
 30059                           ;mdm_gsm_gprs.c: 303: }
 30060                           ;mdm_gsm_gprs.c: 304: break;
 30061  002062  0012               	return	
 30062  002064                     
 30063                           ; BSR set to: 1
 30064                           ;mdm_gsm_gprs.c: 308: Uart_WriteConstString(1,"AT\r\n");
 30065                           
 30066                           ; BSR set to: 1
 30067  002064  0EE6               	movlw	low STR_1
 30068  002066  0100               	movlb	0	; () banked
 30069  002068  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 30070  00206A  0EFF               	movlw	high STR_1
 30071  00206C  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 30072  00206E  0E01               	movlw	1
 30073  002070  EC48  F031         	call	_Uart_WriteConstString
 30074                           
 30075                           ;mdm_gsm_gprs.c: 310: OsTmr_StartTimer(&Timeout,2000u);
 30076  002074  0EEC               	movlw	low CheckModem@Timeout
 30077  002076  0100               	movlb	0	; () banked
 30078  002078  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 30079  00207A  0E03               	movlw	high CheckModem@Timeout
 30080  00207C  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 30081  00207E  0ED0               	movlw	208
 30082  002080  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 30083  002082  0E07               	movlw	7
 30084  002084  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 30085  002086  0E00               	movlw	0
 30086  002088  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 30087  00208A  0E00               	movlw	0
 30088  00208C  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 30089  00208E  ECC0  F02C         	call	_OsTmr_StartTimer	;wreg free
 30090                           
 30091                           ;mdm_gsm_gprs.c: 312: CheckMdmSts = MdmCh_WaitEcho;
 30092  002092  0E03               	movlw	3
 30093  002094  0101               	movlb	1	; () banked
 30094  002096  6FF2               	movwf	CheckModem@CheckMdmSts& (0+255),b
 30095                           
 30096                           ;mdm_gsm_gprs.c: 313: break;
 30097  002098  0012               	return	
 30098  00209A                     
 30099                           ; BSR set to: 1
 30100                           ;mdm_gsm_gprs.c: 317: if (ReceiveEvt(&NewStringReceived))
 30101                           
 30102                           ; BSR set to: 1
 30103  00209A  0E3C               	movlw	low _NewStringReceived
 30104  00209C  0100               	movlb	0	; () banked
 30105  00209E  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 30106  0020A0  0E00               	movlw	high _NewStringReceived
 30107  0020A2  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 30108  0020A4  EC91  F033         	call	_ReceiveEvt	;wreg free
 30109  0020A8  0900               	iorlw	0
 30110  0020AA  B4D8               	btfsc	status,2,c
 30111  0020AC  D030               	goto	l989
 30112                           
 30113                           ;mdm_gsm_gprs.c: 318: {
 30114                           ;mdm_gsm_gprs.c: 320: if (((RxBuffer[0] == 'O') && (RxBuffer[1] == 'K')) || ((RxBuffer[1
      +                          ] == 'O') && (RxBuffer[2] == 'K')))
 30115  0020AE  CC58  FFE8         	movff	_RxBuffer,wreg
 30116  0020B2  0A4F               	xorlw	79
 30117  0020B4  A4D8               	btfss	status,2,c
 30118  0020B6  D005               	goto	u14920
 30119  0020B8  CC59  FFE8         	movff	_RxBuffer+1,wreg
 30120  0020BC  0A4B               	xorlw	75
 30121  0020BE  B4D8               	btfsc	status,2,c
 30122  0020C0  D00A               	goto	u14940
 30123  0020C2                     u14920:
 30124  0020C2  CC59  FFE8         	movff	_RxBuffer+1,wreg
 30125  0020C6  0A4F               	xorlw	79
 30126  0020C8  A4D8               	btfss	status,2,c
 30127  0020CA  0012               	return	
 30128  0020CC  CC5A  FFE8         	movff	_RxBuffer+2,wreg
 30129  0020D0  0A4B               	xorlw	75
 30130  0020D2  A4D8               	btfss	status,2,c
 30131  0020D4  0012               	return	
 30132  0020D6                     u14940:
 30133                           
 30134                           ;mdm_gsm_gprs.c: 321: {
 30135                           ;mdm_gsm_gprs.c: 322: MdmStatus = ModemReady;
 30136  0020D6  0E02               	movlw	2
 30137  0020D8  0100               	movlb	0	; () banked
 30138  0020DA  6FD1               	movwf	_MdmStatus& (0+255),b
 30139                           
 30140                           ; BSR set to: 0
 30141                           ;mdm_gsm_gprs.c: 324: GenerateEvt(&MdmOnOffPulseRequest);
 30142  0020DC  0EDF               	movlw	low _MdmOnOffPulseRequest
 30143  0020DE  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 30144  0020E0  0E00               	movlw	high _MdmOnOffPulseRequest
 30145  0020E2  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 30146  0020E4  EC82  F035         	call	_GenerateEvt	;wreg free
 30147                           
 30148                           ;mdm_gsm_gprs.c: 326: OsTmr_StartTimer(&Timeout,1000u);
 30149  0020E8  0EEC               	movlw	low CheckModem@Timeout
 30150  0020EA  0100               	movlb	0	; () banked
 30151  0020EC  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 30152  0020EE  0E03               	movlw	high CheckModem@Timeout
 30153  0020F0  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 30154  0020F2  0EE8               	movlw	232
 30155  0020F4  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 30156  0020F6  0E03               	movlw	3
 30157  0020F8  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 30158  0020FA  0E00               	movlw	0
 30159  0020FC  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 30160  0020FE  0E00               	movlw	0
 30161  002100  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 30162  002102  ECC0  F02C         	call	_OsTmr_StartTimer	;wreg free
 30163                           
 30164                           ;mdm_gsm_gprs.c: 328: CheckMdmSts = MdmCh_Delay;
 30165  002106  0E04               	movlw	4
 30166  002108  0101               	movlb	1	; () banked
 30167  00210A  6FF2               	movwf	CheckModem@CheckMdmSts& (0+255),b
 30168                           
 30169                           ; BSR set to: 1
 30170                           ;mdm_gsm_gprs.c: 329: }
 30171                           ;mdm_gsm_gprs.c: 330: }
 30172  00210C  0012               	return	
 30173  00210E                     l989:
 30174                           
 30175                           ;mdm_gsm_gprs.c: 331: else if (OsTmr_GetTimerStatus(&Timeout) == SwTimerExpired)
 30176                           
 30177                           ; BSR set to: 1
 30178  00210E  0EEC               	movlw	low CheckModem@Timeout
 30179  002110  0100               	movlb	0	; () banked
 30180  002112  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 30181  002114  0E03               	movlw	high CheckModem@Timeout
 30182  002116  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 30183  002118  ECA9  F028         	call	_OsTmr_GetTimerStatus	;wreg free
 30184  00211C  06E8               	decf	wreg,f,c
 30185  00211E  A4D8               	btfss	status,2,c
 30186  002120  0012               	return	
 30187                           
 30188                           ;mdm_gsm_gprs.c: 332: {
 30189                           ;mdm_gsm_gprs.c: 334: MdmStatus = ModemOff;
 30190  002122  0E00               	movlw	0
 30191  002124  0100               	movlb	0	; () banked
 30192  002126  6FD1               	movwf	_MdmStatus& (0+255),b
 30193                           
 30194                           ;mdm_gsm_gprs.c: 336: ComChecCompleted = 1u;
 30195  002128  0E01               	movlw	1
 30196  00212A  6E2B               	movwf	_ComChecCompleted,c
 30197                           
 30198                           ;mdm_gsm_gprs.c: 338: CheckMdmSts = MdmCh_Done;
 30199  00212C  0E05               	movlw	5
 30200  00212E  0101               	movlb	1	; () banked
 30201  002130  6FF2               	movwf	CheckModem@CheckMdmSts& (0+255),b
 30202                           
 30203                           ; BSR set to: 1
 30204                           ;mdm_gsm_gprs.c: 343: }
 30205                           ;mdm_gsm_gprs.c: 344: break;
 30206                           
 30207                           ; BSR set to: 1
 30208                           
 30209                           ;mdm_gsm_gprs.c: 340: else
 30210                           ;mdm_gsm_gprs.c: 341: {
 30211                           
 30212                           ; BSR set to: 1
 30213                           
 30214                           ;mdm_gsm_gprs.c: 339: }
 30215  002132  0012               	return	
 30216  002134                     
 30217                           ; BSR set to: 1
 30218                           ;mdm_gsm_gprs.c: 348: if (OsTmr_GetTimerStatus(&Timeout) == SwTimerExpired)
 30219                           
 30220                           ; BSR set to: 1
 30221  002134  0EEC               	movlw	low CheckModem@Timeout
 30222  002136  0100               	movlb	0	; () banked
 30223  002138  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 30224  00213A  0E03               	movlw	high CheckModem@Timeout
 30225  00213C  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 30226  00213E  ECA9  F028         	call	_OsTmr_GetTimerStatus	;wreg free
 30227  002142  06E8               	decf	wreg,f,c
 30228  002144  A4D8               	btfss	status,2,c
 30229  002146  0012               	return	
 30230                           
 30231                           ;mdm_gsm_gprs.c: 349: {
 30232                           ;mdm_gsm_gprs.c: 351: MdmStatus = ModemOff;
 30233  002148  0E00               	movlw	0
 30234  00214A  0100               	movlb	0	; () banked
 30235  00214C  6FD1               	movwf	_MdmStatus& (0+255),b
 30236                           
 30237                           ;mdm_gsm_gprs.c: 353: ComChecCompleted = 1u;
 30238  00214E  0E01               	movlw	1
 30239  002150  6E2B               	movwf	_ComChecCompleted,c
 30240                           
 30241                           ;mdm_gsm_gprs.c: 355: CheckMdmSts = MdmCh_Done;
 30242  002152  0E05               	movlw	5
 30243  002154  0101               	movlb	1	; () banked
 30244  002156  6FF2               	movwf	CheckModem@CheckMdmSts& (0+255),b
 30245                           
 30246                           ; BSR set to: 1
 30247                           ;mdm_gsm_gprs.c: 365: }
 30248                           
 30249                           ; BSR set to: 1
 30250                           ;mdm_gsm_gprs.c: 364: break;
 30251                           
 30252                           ;mdm_gsm_gprs.c: 363: default:
 30253                           
 30254                           ; BSR set to: 1
 30255                           ;mdm_gsm_gprs.c: 361: break;
 30256                           
 30257                           ;mdm_gsm_gprs.c: 359: case MdmCh_Done:
 30258                           
 30259                           ; BSR set to: 1
 30260                           ;mdm_gsm_gprs.c: 356: }
 30261                           ;mdm_gsm_gprs.c: 357: break;
 30262  002158  0012               	return	
 30263  00215A                     l982:
 30264                           
 30265                           ; BSR set to: 1
 30266  00215A  0101               	movlb	1	; () banked
 30267  00215C  51F2               	movf	CheckModem@CheckMdmSts& (0+255),w,b
 30268                           
 30269                           ; Switch size 1, requested type "space"
 30270                           ; Number of cases is 6, Range of values is 0 to 5
 30271                           ; switch strategies available:
 30272                           ; Name         Instructions Cycles
 30273                           ; simple_byte           19    10 (average)
 30274                           ;	Chosen strategy is simple_byte
 30275  00215E  0A00               	xorlw	0	; case 0
 30276  002160  B4D8               	btfsc	status,2,c
 30277  002162  D75F               	goto	l983
 30278  002164  0A01               	xorlw	1	; case 1
 30279  002166  B4D8               	btfsc	status,2,c
 30280  002168  D76F               	goto	l985
 30281  00216A  0A03               	xorlw	3	; case 2
 30282  00216C  B4D8               	btfsc	status,2,c
 30283  00216E  D77A               	goto	l987
 30284  002170  0A01               	xorlw	1	; case 3
 30285  002172  B4D8               	btfsc	status,2,c
 30286  002174  D792               	goto	l988
 30287  002176  0A07               	xorlw	7	; case 4
 30288  002178  B4D8               	btfsc	status,2,c
 30289  00217A  D7DC               	goto	l998
 30290  00217C  0A01               	xorlw	1	; case 5
 30291  00217E  0012               	return	
 30292  002180                     __end_of_CheckModem:
 30293                           	opt stack 0
 30294                           tosu	equ	0xFFF
 30295                           tosh	equ	0xFFE
 30296                           tosl	equ	0xFFD
 30297                           pclath	equ	0xFFA
 30298                           tblptru	equ	0xFF8
 30299                           tblptrh	equ	0xFF7
 30300                           tblptrl	equ	0xFF6
 30301                           tablat	equ	0xFF5
 30302                           prodh	equ	0xFF4
 30303                           prodl	equ	0xFF3
 30304                           intcon	equ	0xFF2
 30305                           intcon2	equ	0xFF1
 30306                           intcon3	equ	0xFF0
 30307                           indf0	equ	0xFEF
 30308                           postinc0	equ	0xFEE
 30309                           plusw0	equ	0xFEB
 30310                           fsr0h	equ	0xFEA
 30311                           fsr0l	equ	0xFE9
 30312                           wreg	equ	0xFE8
 30313                           indf1	equ	0xFE7
 30314                           postinc1	equ	0xFE6
 30315                           postdec1	equ	0xFE5
 30316                           plusw1	equ	0xFE3
 30317                           fsr1h	equ	0xFE2
 30318                           fsr1l	equ	0xFE1
 30319                           indf2	equ	0xFDF
 30320                           postinc2	equ	0xFDE
 30321                           postdec2	equ	0xFDD
 30322                           plusw2	equ	0xFDB
 30323                           fsr2h	equ	0xFDA
 30324                           fsr2l	equ	0xFD9
 30325                           status	equ	0xFD8
 30326                           
 30327 ;; *************** function _MdmCntSm *****************
 30328 ;; Defined at:
 30329 ;;		line 199 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mdm_drv.c"
 30330 ;; Parameters:    Size  Location     Type
 30331 ;;		None
 30332 ;; Auto vars:     Size  Location     Type
 30333 ;;		None
 30334 ;; Return value:  Size  Location     Type
 30335 ;;                  1    wreg      void 
 30336 ;; Registers used:
 30337 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 30338 ;; Tracked objects:
 30339 ;;		On entry : 0/0
 30340 ;;		On exit  : 0/0
 30341 ;;		Unchanged: 0/0
 30342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30343 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30344 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30345 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30346 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30347 ;;Total ram usage:        0 bytes
 30348 ;; Hardware stack levels used:    1
 30349 ;; Hardware stack levels required when called:   12
 30350 ;; This function calls:
 30351 ;;		_InitModemInterface
 30352 ;;		_ReceiveEvt
 30353 ;; This function is called by:
 30354 ;;		_Mdm_DrvMainFn
 30355 ;; This function uses a non-reentrant model
 30356 ;;
 30357                           
 30358                           	psect	text142
 30359  0048E0                     __ptext142:
 30360                           	opt stack 0
 30361  0048E0                     _MdmCntSm:
 30362                           	opt stack 15
 30363                           
 30364                           ;mdm_drv.c: 201: static MdmCntStateType MdmCntState = InitModemInt;
 30365                           ;mdm_drv.c: 202: static UINT16 Counter = 0;
 30366                           ;mdm_drv.c: 204: switch (MdmCntState)
 30367                           
 30368                           ;incstack = 0
 30369  0048E0  D045               	goto	l315
 30370  0048E2                     
 30371                           ;mdm_drv.c: 208: InitModemInterface();
 30372  0048E2  EC46  F036         	call	_InitModemInterface	;wreg free
 30373                           
 30374                           ;mdm_drv.c: 210: MdmCntState = CheckRequest;
 30375  0048E6  0E01               	movlw	1
 30376  0048E8  6E2E               	movwf	MdmCntSm@MdmCntState,c
 30377                           
 30378                           ;mdm_drv.c: 211: break;
 30379  0048EA  0012               	return	
 30380  0048EC                     
 30381                           ;mdm_drv.c: 215: if (ReceiveEvt(&MdmOnOffPulseRequest))
 30382  0048EC  0EDF               	movlw	low _MdmOnOffPulseRequest
 30383  0048EE  0100               	movlb	0	; () banked
 30384  0048F0  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 30385  0048F2  0E00               	movlw	high _MdmOnOffPulseRequest
 30386  0048F4  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 30387  0048F6  EC91  F033         	call	_ReceiveEvt	;wreg free
 30388  0048FA  0900               	iorlw	0
 30389  0048FC  B4D8               	btfsc	status,2,c
 30390  0048FE  D009               	goto	l319
 30391                           
 30392                           ;mdm_drv.c: 216: {
 30393                           ;mdm_drv.c: 218: MdmCntState = MdmOnOffPulse;
 30394  004900  0E02               	movlw	2
 30395  004902  6E2E               	movwf	MdmCntSm@MdmCntState,c
 30396                           
 30397                           ;mdm_drv.c: 220: PORTEbits.RE1 = ((UINT8)(1));
 30398  004904  8284               	bsf	3972,1,c	;volatile
 30399                           
 30400                           ;mdm_drv.c: 222: Counter = 0;
 30401  004906  0E00               	movlw	0
 30402  004908  0102               	movlb	2	; () banked
 30403  00490A  6FDC               	movwf	(MdmCntSm@Counter+1)& (0+255),b
 30404  00490C  0E00               	movlw	0
 30405  00490E  6FDB               	movwf	MdmCntSm@Counter& (0+255),b
 30406                           
 30407                           ;mdm_drv.c: 223: }
 30408  004910  0012               	return	
 30409  004912                     l319:
 30410                           
 30411                           ;mdm_drv.c: 224: else if (ReceiveEvt(&MdmResetRequest))
 30412                           
 30413                           ; BSR set to: 2
 30414  004912  0E3D               	movlw	low _MdmResetRequest
 30415  004914  0100               	movlb	0	; () banked
 30416  004916  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 30417  004918  0E00               	movlw	high _MdmResetRequest
 30418  00491A  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 30419  00491C  EC91  F033         	call	_ReceiveEvt	;wreg free
 30420  004920  0900               	iorlw	0
 30421  004922  B4D8               	btfsc	status,2,c
 30422  004924  0012               	return	
 30423                           
 30424                           ;mdm_drv.c: 225: {
 30425                           ;mdm_drv.c: 227: MdmCntState = MdmResetPulse;
 30426  004926  0E03               	movlw	3
 30427  004928  6E2E               	movwf	MdmCntSm@MdmCntState,c
 30428                           
 30429                           ;mdm_drv.c: 229: PORTEbits.RE0 = ((UINT8)(1));
 30430  00492A  8084               	bsf	3972,0,c	;volatile
 30431                           
 30432                           ;mdm_drv.c: 231: Counter = 0;
 30433  00492C  0E00               	movlw	0
 30434  00492E  0102               	movlb	2	; () banked
 30435  004930  6FDC               	movwf	(MdmCntSm@Counter+1)& (0+255),b
 30436  004932  0E00               	movlw	0
 30437  004934  6FDB               	movwf	MdmCntSm@Counter& (0+255),b
 30438                           
 30439                           ; BSR set to: 2
 30440                           ;mdm_drv.c: 236: }
 30441                           ;mdm_drv.c: 237: break;
 30442                           
 30443                           ; BSR set to: 2
 30444                           
 30445                           ;mdm_drv.c: 233: else
 30446                           ;mdm_drv.c: 234: {
 30447                           
 30448                           ; BSR set to: 2
 30449                           
 30450                           ;mdm_drv.c: 232: }
 30451  004936  0012               	return	
 30452  004938                     
 30453                           ;mdm_drv.c: 241: Counter++;
 30454                           
 30455                           ; BSR set to: 2
 30456  004938  0102               	movlb	2	; () banked
 30457  00493A  4BDB               	infsnz	MdmCntSm@Counter& (0+255),f,b
 30458  00493C  2BDC               	incf	(MdmCntSm@Counter+1)& (0+255),f,b
 30459                           
 30460                           ; BSR set to: 2
 30461                           ;mdm_drv.c: 243: if (Counter >= (((UINT16)(1500))/((UINT16)(10))))
 30462  00493E  51DC               	movf	(MdmCntSm@Counter+1)& (0+255),w,b
 30463  004940  E104               	bnz	u14840
 30464  004942  0E96               	movlw	150
 30465  004944  5DDB               	subwf	MdmCntSm@Counter& (0+255),w,b
 30466  004946  A0D8               	btfss	status,0,c
 30467  004948  0012               	return	
 30468  00494A                     u14840:
 30469                           
 30470                           ; BSR set to: 2
 30471                           ;mdm_drv.c: 244: {
 30472                           ;mdm_drv.c: 246: PORTEbits.RE1 = ((UINT8)(0));
 30473  00494A  9284               	bcf	3972,1,c	;volatile
 30474                           
 30475                           ; BSR set to: 2
 30476                           ;mdm_drv.c: 248: MdmCntState = CheckRequest;
 30477  00494C  0E01               	movlw	1
 30478  00494E  6E2E               	movwf	MdmCntSm@MdmCntState,c
 30479                           
 30480                           ; BSR set to: 2
 30481                           ;mdm_drv.c: 249: }
 30482                           ;mdm_drv.c: 250: break;
 30483  004950  0012               	return	
 30484  004952                     
 30485                           ;mdm_drv.c: 254: Counter++;
 30486                           
 30487                           ; BSR set to: 2
 30488  004952  0102               	movlb	2	; () banked
 30489  004954  4BDB               	infsnz	MdmCntSm@Counter& (0+255),f,b
 30490  004956  2BDC               	incf	(MdmCntSm@Counter+1)& (0+255),f,b
 30491                           
 30492                           ; BSR set to: 2
 30493                           ;mdm_drv.c: 256: if (Counter >= (((UINT16)(100))/((UINT16)(10))))
 30494  004958  51DC               	movf	(MdmCntSm@Counter+1)& (0+255),w,b
 30495  00495A  E104               	bnz	u14850
 30496  00495C  0E0A               	movlw	10
 30497  00495E  5DDB               	subwf	MdmCntSm@Counter& (0+255),w,b
 30498  004960  A0D8               	btfss	status,0,c
 30499  004962  0012               	return	
 30500  004964                     u14850:
 30501                           
 30502                           ; BSR set to: 2
 30503                           ;mdm_drv.c: 257: {
 30504                           ;mdm_drv.c: 259: PORTEbits.RE0 = ((UINT8)(0));
 30505  004964  9084               	bcf	3972,0,c	;volatile
 30506                           
 30507                           ; BSR set to: 2
 30508                           ;mdm_drv.c: 261: MdmCntState = CheckRequest;
 30509  004966  0E01               	movlw	1
 30510  004968  6E2E               	movwf	MdmCntSm@MdmCntState,c
 30511                           
 30512                           ; BSR set to: 2
 30513                           ;mdm_drv.c: 267: }
 30514                           
 30515                           ; BSR set to: 2
 30516                           ;mdm_drv.c: 266: break;
 30517                           
 30518                           ;mdm_drv.c: 265: default:
 30519                           
 30520                           ; BSR set to: 2
 30521                           ;mdm_drv.c: 262: }
 30522                           ;mdm_drv.c: 263: break;
 30523  00496A  0012               	return	
 30524  00496C                     l315:
 30525                           
 30526                           ; BSR set to: 2
 30527  00496C  502E               	movf	MdmCntSm@MdmCntState,w,c
 30528                           
 30529                           ; Switch size 1, requested type "space"
 30530                           ; Number of cases is 4, Range of values is 0 to 3
 30531                           ; switch strategies available:
 30532                           ; Name         Instructions Cycles
 30533                           ; simple_byte           13     7 (average)
 30534                           ;	Chosen strategy is simple_byte
 30535  00496E  0A00               	xorlw	0	; case 0
 30536  004970  B4D8               	btfsc	status,2,c
 30537  004972  D7B7               	goto	l316
 30538  004974  0A01               	xorlw	1	; case 1
 30539  004976  B4D8               	btfsc	status,2,c
 30540  004978  D7B9               	goto	l318
 30541  00497A  0A03               	xorlw	3	; case 2
 30542  00497C  B4D8               	btfsc	status,2,c
 30543  00497E  D7DC               	goto	l323
 30544  004980  0A01               	xorlw	1	; case 3
 30545  004982  A4D8               	btfss	status,2,c
 30546  004984  0012               	return	
 30547  004986  D7E5               	goto	l325
 30548  004988                     __end_of_MdmCntSm:
 30549                           	opt stack 0
 30550                           tosu	equ	0xFFF
 30551                           tosh	equ	0xFFE
 30552                           tosl	equ	0xFFD
 30553                           pclath	equ	0xFFA
 30554                           tblptru	equ	0xFF8
 30555                           tblptrh	equ	0xFF7
 30556                           tblptrl	equ	0xFF6
 30557                           tablat	equ	0xFF5
 30558                           prodh	equ	0xFF4
 30559                           prodl	equ	0xFF3
 30560                           intcon	equ	0xFF2
 30561                           intcon2	equ	0xFF1
 30562                           intcon3	equ	0xFF0
 30563                           indf0	equ	0xFEF
 30564                           postinc0	equ	0xFEE
 30565                           plusw0	equ	0xFEB
 30566                           fsr0h	equ	0xFEA
 30567                           fsr0l	equ	0xFE9
 30568                           wreg	equ	0xFE8
 30569                           indf1	equ	0xFE7
 30570                           postinc1	equ	0xFE6
 30571                           postdec1	equ	0xFE5
 30572                           plusw1	equ	0xFE3
 30573                           fsr1h	equ	0xFE2
 30574                           fsr1l	equ	0xFE1
 30575                           indf2	equ	0xFDF
 30576                           postinc2	equ	0xFDE
 30577                           postdec2	equ	0xFDD
 30578                           plusw2	equ	0xFDB
 30579                           fsr2h	equ	0xFDA
 30580                           fsr2l	equ	0xFD9
 30581                           status	equ	0xFD8
 30582                           
 30583 ;; *************** function _InitModemInterface *****************
 30584 ;; Defined at:
 30585 ;;		line 102 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mdm_drv.c"
 30586 ;; Parameters:    Size  Location     Type
 30587 ;;		None
 30588 ;; Auto vars:     Size  Location     Type
 30589 ;;		None
 30590 ;; Return value:  Size  Location     Type
 30591 ;;                  1    wreg      void 
 30592 ;; Registers used:
 30593 ;;		None
 30594 ;; Tracked objects:
 30595 ;;		On entry : 0/0
 30596 ;;		On exit  : 0/0
 30597 ;;		Unchanged: 0/0
 30598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30599 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30600 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30602 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30603 ;;Total ram usage:        0 bytes
 30604 ;; Hardware stack levels used:    1
 30605 ;; Hardware stack levels required when called:   11
 30606 ;; This function calls:
 30607 ;;		Nothing
 30608 ;; This function is called by:
 30609 ;;		_MdmCntSm
 30610 ;; This function uses a non-reentrant model
 30611 ;;
 30612                           
 30613                           	psect	text143
 30614  006C8C                     __ptext143:
 30615                           	opt stack 0
 30616  006C8C                     _InitModemInterface:
 30617                           	opt stack 15
 30618                           
 30619                           ;mdm_drv.c: 105: TRISEbits.TRISE0 = ((UINT8)(0));
 30620                           
 30621                           ;incstack = 0
 30622  006C8C  9096               	bcf	3990,0,c	;volatile
 30623                           
 30624                           ;mdm_drv.c: 106: TRISEbits.TRISE1 = ((UINT8)(0));
 30625  006C8E  9296               	bcf	3990,1,c	;volatile
 30626                           
 30627                           ;mdm_drv.c: 107: TRISEbits.TRISE2 = ((UINT8)(1));
 30628  006C90  8496               	bsf	3990,2,c	;volatile
 30629  006C92  0012               	return		;funcret
 30630  006C94                     __end_of_InitModemInterface:
 30631                           	opt stack 0
 30632                           tosu	equ	0xFFF
 30633                           tosh	equ	0xFFE
 30634                           tosl	equ	0xFFD
 30635                           pclath	equ	0xFFA
 30636                           tblptru	equ	0xFF8
 30637                           tblptrh	equ	0xFF7
 30638                           tblptrl	equ	0xFF6
 30639                           tablat	equ	0xFF5
 30640                           prodh	equ	0xFF4
 30641                           prodl	equ	0xFF3
 30642                           intcon	equ	0xFF2
 30643                           intcon2	equ	0xFF1
 30644                           intcon3	equ	0xFF0
 30645                           indf0	equ	0xFEF
 30646                           postinc0	equ	0xFEE
 30647                           plusw0	equ	0xFEB
 30648                           fsr0h	equ	0xFEA
 30649                           fsr0l	equ	0xFE9
 30650                           wreg	equ	0xFE8
 30651                           indf1	equ	0xFE7
 30652                           postinc1	equ	0xFE6
 30653                           postdec1	equ	0xFE5
 30654                           plusw1	equ	0xFE3
 30655                           fsr1h	equ	0xFE2
 30656                           fsr1l	equ	0xFE1
 30657                           indf2	equ	0xFDF
 30658                           postinc2	equ	0xFDE
 30659                           postdec2	equ	0xFDD
 30660                           plusw2	equ	0xFDB
 30661                           fsr2h	equ	0xFDA
 30662                           fsr2l	equ	0xFD9
 30663                           status	equ	0xFD8
 30664                           
 30665 ;; *************** function _InitGprsNetwork *****************
 30666 ;; Defined at:
 30667 ;;		line 124 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs_http.c"
 30668 ;; Parameters:    Size  Location     Type
 30669 ;;  Apn             2   59[BANK0 ] PTR unsigned char 
 30670 ;;		 -> NULL(0), 
 30671 ;;  ApnLen          1   61[BANK0 ] unsigned char 
 30672 ;; Auto vars:     Size  Location     Type
 30673 ;;  UartMessage    50    0[BANK1 ] unsigned char [50]
 30674 ;;  Index           1   50[BANK1 ] unsigned char 
 30675 ;; Return value:  Size  Location     Type
 30676 ;;                  1    wreg      enum E8925
 30677 ;; Registers used:
 30678 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 30679 ;; Tracked objects:
 30680 ;;		On entry : 0/0
 30681 ;;		On exit  : 0/0
 30682 ;;		Unchanged: 0/0
 30683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30684 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30685 ;;      Locals:         0       0      51       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30686 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30687 ;;      Totals:         0       5      51       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30688 ;;Total ram usage:       56 bytes
 30689 ;; Hardware stack levels used:    1
 30690 ;; Hardware stack levels required when called:   14
 30691 ;; This function calls:
 30692 ;;		_ClearBuffer
 30693 ;;		_OsTmr_GetTimerStatus
 30694 ;;		_OsTmr_StartTimer
 30695 ;;		_ReceiveEvt
 30696 ;;		_StringCopy
 30697 ;;		_Uart_WriteConstString
 30698 ;;		_Uart_WriteString
 30699 ;; This function is called by:
 30700 ;;		_MdmHttp_MainTask
 30701 ;; This function uses a non-reentrant model
 30702 ;;
 30703                           
 30704                           	psect	text144
 30705  000DC8                     __ptext144:
 30706                           	opt stack 0
 30707  000DC8                     _InitGprsNetwork:
 30708                           	opt stack 13
 30709                           
 30710                           ;mdm_gsm_gprs_http.c: 126: static GprsNetInitType GprsNetInitState = GprsIn_Idle;
 30711                           ;mdm_gsm_gprs_http.c: 127: static GprsNetInitType GprsNetInitNextState = GprsIn_Idle;
 30712                           ;mdm_gsm_gprs_http.c: 128: static GprsOutStsType GprsInitSts = GprsSts_InProg;
 30713                           ;mdm_gsm_gprs_http.c: 129: UINT8 UartMessage[50];
 30714                           ;mdm_gsm_gprs_http.c: 130: UINT8 Index = 0;
 30715                           
 30716                           ;incstack = 0
 30717  000DC8  0E00               	movlw	0
 30718  000DCA  0101               	movlb	1	; () banked
 30719  000DCC  6F32               	movwf	InitGprsNetwork@Index& (0+255),b
 30720                           
 30721                           ;mdm_gsm_gprs_http.c: 132: switch(GprsNetInitState)
 30722  000DCE  D154               	goto	l1219
 30723  000DD0                     
 30724                           ; BSR set to: 1
 30725                           ;mdm_gsm_gprs_http.c: 136: if (ReceiveEvt(&InitNetwork))
 30726                           
 30727                           ; BSR set to: 1
 30728  000DD0  0ED8               	movlw	low _InitNetwork
 30729  000DD2  0100               	movlb	0	; () banked
 30730  000DD4  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 30731  000DD6  0E00               	movlw	high _InitNetwork
 30732  000DD8  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 30733  000DDA  EC91  F033         	call	_ReceiveEvt	;wreg free
 30734  000DDE  0900               	iorlw	0
 30735  000DE0  B4D8               	btfsc	status,2,c
 30736  000DE2  D166               	goto	l1222
 30737                           
 30738                           ;mdm_gsm_gprs_http.c: 137: {
 30739                           ;mdm_gsm_gprs_http.c: 139: GprsNetInitState = GprsIn_SetConType;
 30740  000DE4  0E01               	movlw	1
 30741  000DE6  D141               	goto	L101
 30742  000DE8                     
 30743                           ; BSR set to: 1
 30744                           ;mdm_gsm_gprs_http.c: 144: Uart_WriteConstString(1, "AT+SAPBR=3,1,\"Contype\",\"GPRS\"\r
      +                          ");
 30745                           
 30746                           ; BSR set to: 1
 30747  000DE8  0E89               	movlw	low STR_8
 30748  000DEA  0100               	movlb	0	; () banked
 30749  000DEC  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 30750  000DEE  0EFE               	movlw	high STR_8
 30751  000DF0  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 30752  000DF2  0E01               	movlw	1
 30753  000DF4  EC48  F031         	call	_Uart_WriteConstString
 30754                           
 30755                           ;mdm_gsm_gprs_http.c: 146: GprsNetInitState = GprsIn_WaitMdmResp;
 30756  000DF8  0E07               	movlw	7
 30757  000DFA  0101               	movlb	1	; () banked
 30758  000DFC  6FE7               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 30759                           
 30760                           ; BSR set to: 1
 30761                           ;mdm_gsm_gprs_http.c: 147: GprsNetInitNextState = GprsIn_SetApn;
 30762  000DFE  0E02               	movlw	2
 30763  000E00  6E2A               	movwf	InitGprsNetwork@GprsNetInitNextState,c
 30764                           
 30765                           ; BSR set to: 1
 30766                           ;mdm_gsm_gprs_http.c: 149: OsTmr_StartTimer(&ConnTimeout,20000u);
 30767  000E02  0EF3               	movlw	low _ConnTimeout
 30768  000E04  0100               	movlb	0	; () banked
 30769  000E06  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 30770  000E08  0E02               	movlw	high _ConnTimeout
 30771  000E0A  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 30772  000E0C  0E20               	movlw	32
 30773  000E0E  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 30774  000E10  0E4E               	movlw	78
 30775  000E12  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 30776  000E14  0E00               	movlw	0
 30777  000E16  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 30778  000E18  0E00               	movlw	0
 30779  000E1A  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 30780  000E1C  ECC0  F02C         	call	_OsTmr_StartTimer	;wreg free
 30781  000E20  D0C7               	goto	l15775
 30782  000E22                     
 30783                           ; BSR set to: 1
 30784                           ;mdm_gsm_gprs_http.c: 156: ClearBuffer(UartMessage, sizeof(UartMessage));
 30785                           
 30786                           ; BSR set to: 1
 30787  000E22  0E00               	movlw	low InitGprsNetwork@UartMessage
 30788  000E24  0100               	movlb	0	; () banked
 30789  000E26  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 30790  000E28  0E01               	movlw	high InitGprsNetwork@UartMessage
 30791  000E2A  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 30792  000E2C  0E00               	movlw	0
 30793  000E2E  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 30794  000E30  0E32               	movlw	50
 30795  000E32  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 30796  000E34  ECB3  F032         	call	_ClearBuffer	;wreg free
 30797                           
 30798                           ;mdm_gsm_gprs_http.c: 158: StringCopy((void*)("AT+SAPBR=3,1,\"APN\",\""),UartMessage,20)
      +                          ;
 30799  000E38  0EBD               	movlw	low STR_9
 30800  000E3A  0100               	movlb	0	; () banked
 30801  000E3C  6F85               	movwf	StringCopy@SourceStr& (0+255),b
 30802  000E3E  0EFE               	movlw	high STR_9
 30803  000E40  6F86               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 30804  000E42  0E00               	movlw	low InitGprsNetwork@UartMessage
 30805  000E44  6F87               	movwf	StringCopy@DestStr& (0+255),b
 30806  000E46  0E01               	movlw	high InitGprsNetwork@UartMessage
 30807  000E48  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 30808  000E4A  0E00               	movlw	0
 30809  000E4C  6F8A               	movwf	(StringCopy@Len+1)& (0+255),b
 30810  000E4E  0E14               	movlw	20
 30811  000E50  6F89               	movwf	StringCopy@Len& (0+255),b
 30812  000E52  EC60  F02C         	call	_StringCopy	;wreg free
 30813                           
 30814                           ;mdm_gsm_gprs_http.c: 160: for (Index = 0; Index < ApnLen; Index++)
 30815  000E56  0E00               	movlw	0
 30816  000E58  0101               	movlb	1	; () banked
 30817  000E5A  6F32               	movwf	InitGprsNetwork@Index& (0+255),b
 30818  000E5C  D01C               	goto	l1225
 30819  000E5E                     
 30820                           ; BSR set to: 1
 30821                           ;mdm_gsm_gprs_http.c: 161: {
 30822                           ;mdm_gsm_gprs_http.c: 162: UartMessage[Index + 20] = *(Apn + Index);
 30823                           
 30824                           ; BSR set to: 1
 30825  000E5E  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 30826  000E60  0D01               	mullw	1
 30827  000E62  50F3               	movf	prodl,w,c
 30828  000E64  0100               	movlb	0	; () banked
 30829  000E66  259B               	addwf	InitGprsNetwork@Apn& (0+255),w,b
 30830  000E68  6ED9               	movwf	fsr2l,c
 30831  000E6A  50F4               	movf	prodh,w,c
 30832  000E6C  219C               	addwfc	(InitGprsNetwork@Apn+1)& (0+255),w,b
 30833  000E6E  6EDA               	movwf	fsr2h,c
 30834  000E70  0101               	movlb	1	; () banked
 30835  000E72  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 30836  000E74  0100               	movlb	0	; () banked
 30837  000E76  6F9E               	movwf	??_InitGprsNetwork& (0+255),b
 30838  000E78  6B9F               	clrf	(??_InitGprsNetwork+1)& (0+255),b
 30839  000E7A  0E14               	movlw	20
 30840  000E7C  279E               	addwf	??_InitGprsNetwork& (0+255),f,b
 30841  000E7E  0E00               	movlw	0
 30842  000E80  239F               	addwfc	(??_InitGprsNetwork+1)& (0+255),f,b
 30843  000E82  0E00               	movlw	low InitGprsNetwork@UartMessage
 30844  000E84  259E               	addwf	??_InitGprsNetwork& (0+255),w,b
 30845  000E86  6EE1               	movwf	fsr1l,c
 30846  000E88  0E01               	movlw	high InitGprsNetwork@UartMessage
 30847  000E8A  219F               	addwfc	(??_InitGprsNetwork+1)& (0+255),w,b
 30848  000E8C  6EE2               	movwf	fsr1h,c
 30849  000E8E  CFDF FFE7          	movff	indf2,indf1
 30850                           
 30851                           ; BSR set to: 0
 30852  000E92  0101               	movlb	1	; () banked
 30853  000E94  2B32               	incf	InitGprsNetwork@Index& (0+255),f,b
 30854  000E96                     l1225:
 30855                           
 30856                           ; BSR set to: 1
 30857                           
 30858                           ; BSR set to: 1
 30859  000E96  0100               	movlb	0	; () banked
 30860  000E98  519D               	movf	InitGprsNetwork@ApnLen& (0+255),w,b
 30861  000E9A  0101               	movlb	1	; () banked
 30862  000E9C  5D32               	subwf	InitGprsNetwork@Index& (0+255),w,b
 30863  000E9E  A0D8               	btfss	status,0,c
 30864  000EA0  D7DE               	goto	l1226
 30865                           
 30866                           ; BSR set to: 1
 30867                           ;mdm_gsm_gprs_http.c: 163: }
 30868                           ;mdm_gsm_gprs_http.c: 165: UartMessage[Index + 20] = '"';
 30869                           
 30870                           ; BSR set to: 1
 30871  000EA2  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 30872  000EA4  0100               	movlb	0	; () banked
 30873  000EA6  6F9E               	movwf	??_InitGprsNetwork& (0+255),b
 30874  000EA8  6B9F               	clrf	(??_InitGprsNetwork+1)& (0+255),b
 30875  000EAA  0E14               	movlw	20
 30876  000EAC  279E               	addwf	??_InitGprsNetwork& (0+255),f,b
 30877  000EAE  0E00               	movlw	0
 30878  000EB0  239F               	addwfc	(??_InitGprsNetwork+1)& (0+255),f,b
 30879  000EB2  0E00               	movlw	low InitGprsNetwork@UartMessage
 30880  000EB4  259E               	addwf	??_InitGprsNetwork& (0+255),w,b
 30881  000EB6  6ED9               	movwf	fsr2l,c
 30882  000EB8  0E01               	movlw	high InitGprsNetwork@UartMessage
 30883  000EBA  219F               	addwfc	(??_InitGprsNetwork+1)& (0+255),w,b
 30884  000EBC  6EDA               	movwf	fsr2h,c
 30885  000EBE  0E22               	movlw	34
 30886  000EC0  6EDF               	movwf	indf2,c
 30887                           
 30888                           ;mdm_gsm_gprs_http.c: 166: UartMessage[Index + 21] = '\r';
 30889  000EC2  0101               	movlb	1	; () banked
 30890  000EC4  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 30891  000EC6  0100               	movlb	0	; () banked
 30892  000EC8  6F9E               	movwf	??_InitGprsNetwork& (0+255),b
 30893  000ECA  6B9F               	clrf	(??_InitGprsNetwork+1)& (0+255),b
 30894  000ECC  0E15               	movlw	21
 30895  000ECE  279E               	addwf	??_InitGprsNetwork& (0+255),f,b
 30896  000ED0  0E00               	movlw	0
 30897  000ED2  239F               	addwfc	(??_InitGprsNetwork+1)& (0+255),f,b
 30898  000ED4  0E00               	movlw	low InitGprsNetwork@UartMessage
 30899  000ED6  259E               	addwf	??_InitGprsNetwork& (0+255),w,b
 30900  000ED8  6ED9               	movwf	fsr2l,c
 30901  000EDA  0E01               	movlw	high InitGprsNetwork@UartMessage
 30902  000EDC  219F               	addwfc	(??_InitGprsNetwork+1)& (0+255),w,b
 30903  000EDE  6EDA               	movwf	fsr2h,c
 30904  000EE0  0E0D               	movlw	13
 30905  000EE2  6EDF               	movwf	indf2,c
 30906                           
 30907                           ;mdm_gsm_gprs_http.c: 167: UartMessage[Index + 22] = (0);
 30908  000EE4  0101               	movlb	1	; () banked
 30909  000EE6  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 30910  000EE8  0100               	movlb	0	; () banked
 30911  000EEA  6F9E               	movwf	??_InitGprsNetwork& (0+255),b
 30912  000EEC  6B9F               	clrf	(??_InitGprsNetwork+1)& (0+255),b
 30913  000EEE  0E16               	movlw	22
 30914  000EF0  279E               	addwf	??_InitGprsNetwork& (0+255),f,b
 30915  000EF2  0E00               	movlw	0
 30916  000EF4  239F               	addwfc	(??_InitGprsNetwork+1)& (0+255),f,b
 30917  000EF6  0E00               	movlw	low InitGprsNetwork@UartMessage
 30918  000EF8  259E               	addwf	??_InitGprsNetwork& (0+255),w,b
 30919  000EFA  6ED9               	movwf	fsr2l,c
 30920  000EFC  0E01               	movlw	high InitGprsNetwork@UartMessage
 30921  000EFE  219F               	addwfc	(??_InitGprsNetwork+1)& (0+255),w,b
 30922  000F00  6EDA               	movwf	fsr2h,c
 30923  000F02  0E00               	movlw	0
 30924  000F04  6EDF               	movwf	indf2,c
 30925                           
 30926                           ; BSR set to: 0
 30927                           ;mdm_gsm_gprs_http.c: 169: Uart_WriteString(1, UartMessage);
 30928  000F06  0E00               	movlw	low InitGprsNetwork@UartMessage
 30929  000F08  6F80               	movwf	Uart_WriteString@StringToWrite& (0+255),b
 30930  000F0A  0E01               	movlw	high InitGprsNetwork@UartMessage
 30931  000F0C  6F81               	movwf	(Uart_WriteString@StringToWrite+1)& (0+255),b
 30932  000F0E  0E01               	movlw	1
 30933  000F10  ECE8  F031         	call	_Uart_WriteString
 30934                           
 30935                           ;mdm_gsm_gprs_http.c: 171: GprsNetInitState = GprsIn_WaitMdmResp;
 30936  000F14  0E07               	movlw	7
 30937  000F16  0101               	movlb	1	; () banked
 30938  000F18  6FE7               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 30939                           
 30940                           ; BSR set to: 1
 30941                           ;mdm_gsm_gprs_http.c: 172: GprsNetInitNextState = GprsIn_EnGprs;
 30942  000F1A  0E03               	movlw	3
 30943  000F1C  6E2A               	movwf	InitGprsNetwork@GprsNetInitNextState,c
 30944                           
 30945                           ; BSR set to: 1
 30946                           ;mdm_gsm_gprs_http.c: 174: OsTmr_StartTimer(&ConnTimeout,20000u);
 30947  000F1E  0EF3               	movlw	low _ConnTimeout
 30948  000F20  0100               	movlb	0	; () banked
 30949  000F22  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 30950  000F24  0E02               	movlw	high _ConnTimeout
 30951  000F26  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 30952  000F28  0E20               	movlw	32
 30953  000F2A  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 30954  000F2C  0E4E               	movlw	78
 30955  000F2E  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 30956  000F30  0E00               	movlw	0
 30957  000F32  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 30958  000F34  0E00               	movlw	0
 30959  000F36  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 30960  000F38  ECC0  F02C         	call	_OsTmr_StartTimer	;wreg free
 30961  000F3C  D039               	goto	l15775
 30962  000F3E                     
 30963                           ; BSR set to: 1
 30964                           ;mdm_gsm_gprs_http.c: 181: Uart_WriteConstString(1, "AT+SAPBR=1,1\r");
 30965                           
 30966                           ; BSR set to: 1
 30967  000F3E  0E4B               	movlw	low STR_10
 30968  000F40  0100               	movlb	0	; () banked
 30969  000F42  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 30970  000F44  0EFF               	movlw	high STR_10
 30971  000F46  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 30972  000F48  0E01               	movlw	1
 30973  000F4A  EC48  F031         	call	_Uart_WriteConstString
 30974                           
 30975                           ;mdm_gsm_gprs_http.c: 183: GprsNetInitState = GprsIn_WaitMdmResp;
 30976  000F4E  0E07               	movlw	7
 30977  000F50  0101               	movlb	1	; () banked
 30978  000F52  6FE7               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 30979                           
 30980                           ; BSR set to: 1
 30981                           ;mdm_gsm_gprs_http.c: 184: GprsNetInitNextState = GprsIn_Done;
 30982  000F54  0E05               	movlw	5
 30983  000F56  6E2A               	movwf	InitGprsNetwork@GprsNetInitNextState,c
 30984                           
 30985                           ; BSR set to: 1
 30986                           ;mdm_gsm_gprs_http.c: 186: OsTmr_StartTimer(&ConnTimeout,20000u);
 30987  000F58  0EF3               	movlw	low _ConnTimeout
 30988  000F5A  0100               	movlb	0	; () banked
 30989  000F5C  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 30990  000F5E  0E02               	movlw	high _ConnTimeout
 30991  000F60  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 30992  000F62  0E20               	movlw	32
 30993  000F64  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 30994  000F66  0E4E               	movlw	78
 30995  000F68  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 30996  000F6A  0E00               	movlw	0
 30997  000F6C  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 30998  000F6E  0E00               	movlw	0
 30999  000F70  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 31000  000F72  ECC0  F02C         	call	_OsTmr_StartTimer	;wreg free
 31001  000F76  D01C               	goto	l15775
 31002  000F78                     
 31003                           ; BSR set to: 1
 31004                           ;mdm_gsm_gprs_http.c: 193: Uart_WriteConstString(1, "AT+SAPBR=2,1\r");
 31005                           
 31006                           ; BSR set to: 1
 31007  000F78  0E59               	movlw	low STR_11
 31008  000F7A  0100               	movlb	0	; () banked
 31009  000F7C  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 31010  000F7E  0EFF               	movlw	high STR_11
 31011  000F80  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 31012  000F82  0E01               	movlw	1
 31013  000F84  EC48  F031         	call	_Uart_WriteConstString
 31014                           
 31015                           ;mdm_gsm_gprs_http.c: 195: GprsNetInitState = GprsIn_WaitGetIp;
 31016  000F88  0E08               	movlw	8
 31017  000F8A  0101               	movlb	1	; () banked
 31018  000F8C  6FE7               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 31019                           
 31020                           ; BSR set to: 1
 31021                           ;mdm_gsm_gprs_http.c: 196: GprsNetInitNextState = GprsIn_Done;
 31022  000F8E  0E05               	movlw	5
 31023  000F90  6E2A               	movwf	InitGprsNetwork@GprsNetInitNextState,c
 31024                           
 31025                           ; BSR set to: 1
 31026                           ;mdm_gsm_gprs_http.c: 198: OsTmr_StartTimer(&ConnTimeout,20000u);
 31027  000F92  0EF3               	movlw	low _ConnTimeout
 31028  000F94  0100               	movlb	0	; () banked
 31029  000F96  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 31030  000F98  0E02               	movlw	high _ConnTimeout
 31031  000F9A  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 31032  000F9C  0E20               	movlw	32
 31033  000F9E  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 31034  000FA0  0E4E               	movlw	78
 31035  000FA2  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 31036  000FA4  0E00               	movlw	0
 31037  000FA6  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 31038  000FA8  0E00               	movlw	0
 31039  000FAA  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 31040  000FAC  ECC0  F02C         	call	_OsTmr_StartTimer	;wreg free
 31041  000FB0                     l15775:
 31042                           
 31043                           ;mdm_gsm_gprs_http.c: 200: GprsInitSts = GprsSts_InProg;
 31044  000FB0  0E01               	movlw	1
 31045  000FB2  0101               	movlb	1	; () banked
 31046  000FB4  6FFF               	movwf	InitGprsNetwork@GprsInitSts& (0+255),b
 31047                           
 31048                           ;mdm_gsm_gprs_http.c: 201: break;
 31049  000FB6  D07C               	goto	l1222
 31050  000FB8                     
 31051                           ; BSR set to: 1
 31052                           ;mdm_gsm_gprs_http.c: 205: GprsInitSts = GprsSts_Completed;
 31053                           
 31054                           ; BSR set to: 1
 31055  000FB8  0E02               	movlw	2
 31056  000FBA  D05A               	goto	L100
 31057  000FBC                     
 31058                           ; BSR set to: 1
 31059                           ;mdm_gsm_gprs_http.c: 211: if (ReceiveEvt(&NewStringReceived))
 31060                           
 31061                           ; BSR set to: 1
 31062  000FBC  0E3C               	movlw	low _NewStringReceived
 31063  000FBE  0100               	movlb	0	; () banked
 31064  000FC0  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 31065  000FC2  0E00               	movlw	high _NewStringReceived
 31066  000FC4  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 31067  000FC6  EC91  F033         	call	_ReceiveEvt	;wreg free
 31068  000FCA  0900               	iorlw	0
 31069  000FCC  B4D8               	btfsc	status,2,c
 31070  000FCE  D018               	goto	l1232
 31071                           
 31072                           ;mdm_gsm_gprs_http.c: 212: {
 31073                           ;mdm_gsm_gprs_http.c: 214: if ((RxBuffer[0] == 'O') && (RxBuffer[1] == 'K'))
 31074  000FD0  CC58  FFE8         	movff	_RxBuffer,wreg
 31075  000FD4  0A4F               	xorlw	79
 31076  000FD6  A4D8               	btfss	status,2,c
 31077  000FD8  D06B               	goto	l1222
 31078  000FDA  CC59  FFE8         	movff	_RxBuffer+1,wreg
 31079  000FDE  0A4B               	xorlw	75
 31080  000FE0  A4D8               	btfss	status,2,c
 31081  000FE2  D066               	goto	l1222
 31082                           
 31083                           ;mdm_gsm_gprs_http.c: 215: {
 31084                           ;mdm_gsm_gprs_http.c: 217: GprsNetInitState = GprsNetInitNextState;
 31085  000FE4  C02A  F1E7         	movff	InitGprsNetwork@GprsNetInitNextState,InitGprsNetwork@GprsNetInitState
 31086                           
 31087                           ;mdm_gsm_gprs_http.c: 219: ClearBuffer(RxBuffer,((UINT16)(400)));
 31088  000FE8  0E58               	movlw	low _RxBuffer
 31089  000FEA  0100               	movlb	0	; () banked
 31090  000FEC  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 31091  000FEE  0E0C               	movlw	high _RxBuffer
 31092  000FF0  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 31093  000FF2  0E01               	movlw	1
 31094  000FF4  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 31095  000FF6  0E90               	movlw	144
 31096  000FF8  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 31097  000FFA  ECB3  F032         	call	_ClearBuffer	;wreg free
 31098                           
 31099                           ;mdm_gsm_gprs_http.c: 220: }
 31100                           ;mdm_gsm_gprs_http.c: 221: }
 31101  000FFE  D058               	goto	l1222
 31102  001000                     l1232:
 31103                           
 31104                           ;mdm_gsm_gprs_http.c: 222: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 31105  001000  0EF3               	movlw	low _ConnTimeout
 31106  001002  0100               	movlb	0	; () banked
 31107  001004  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 31108  001006  0E02               	movlw	high _ConnTimeout
 31109  001008  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 31110  00100A  ECA9  F028         	call	_OsTmr_GetTimerStatus	;wreg free
 31111  00100E  D029               	goto	L64
 31112  001010                     
 31113                           ; BSR set to: 1
 31114                           ;mdm_gsm_gprs_http.c: 231: if (ReceiveEvt(&NewStringReceived))
 31115                           
 31116                           ; BSR set to: 1
 31117  001010  0E3C               	movlw	low _NewStringReceived
 31118  001012  0100               	movlb	0	; () banked
 31119  001014  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 31120  001016  0E00               	movlw	high _NewStringReceived
 31121  001018  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 31122  00101A  EC91  F033         	call	_ReceiveEvt	;wreg free
 31123  00101E  0900               	iorlw	0
 31124  001020  B4D8               	btfsc	status,2,c
 31125  001022  D018               	goto	l1237
 31126                           
 31127                           ;mdm_gsm_gprs_http.c: 232: {
 31128                           ;mdm_gsm_gprs_http.c: 234: if ((RxBuffer[0] == '+') && (RxBuffer[1] == 'S'))
 31129  001024  CC58  FFE8         	movff	_RxBuffer,wreg
 31130  001028  0A2B               	xorlw	43
 31131  00102A  A4D8               	btfss	status,2,c
 31132  00102C  D041               	goto	l1222
 31133  00102E  CC59  FFE8         	movff	_RxBuffer+1,wreg
 31134  001032  0A53               	xorlw	83
 31135  001034  A4D8               	btfss	status,2,c
 31136  001036  D03C               	goto	l1222
 31137                           
 31138                           ;mdm_gsm_gprs_http.c: 235: {
 31139                           ;mdm_gsm_gprs_http.c: 237: GprsNetInitState = GprsNetInitNextState;
 31140  001038  C02A  F1E7         	movff	InitGprsNetwork@GprsNetInitNextState,InitGprsNetwork@GprsNetInitState
 31141                           
 31142                           ;mdm_gsm_gprs_http.c: 239: ClearBuffer(RxBuffer,((UINT16)(400)));
 31143  00103C  0E58               	movlw	low _RxBuffer
 31144  00103E  0100               	movlb	0	; () banked
 31145  001040  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 31146  001042  0E0C               	movlw	high _RxBuffer
 31147  001044  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 31148  001046  0E01               	movlw	1
 31149  001048  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 31150  00104A  0E90               	movlw	144
 31151  00104C  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 31152  00104E  ECB3  F032         	call	_ClearBuffer	;wreg free
 31153                           
 31154                           ;mdm_gsm_gprs_http.c: 240: }
 31155                           ;mdm_gsm_gprs_http.c: 241: }
 31156  001052  D02E               	goto	l1222
 31157  001054                     l1237:
 31158                           
 31159                           ;mdm_gsm_gprs_http.c: 242: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 31160  001054  0EF3               	movlw	low _ConnTimeout
 31161  001056  0100               	movlb	0	; () banked
 31162  001058  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 31163  00105A  0E02               	movlw	high _ConnTimeout
 31164  00105C  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 31165  00105E  ECA9  F028         	call	_OsTmr_GetTimerStatus	;wreg free
 31166  001062                     L64:
 31167  001062  06E8               	decf	wreg,f,c
 31168  001064  A4D8               	btfss	status,2,c
 31169  001066  D024               	goto	l1222
 31170                           
 31171                           ;mdm_gsm_gprs_http.c: 243: {
 31172                           ;mdm_gsm_gprs_http.c: 245: GprsNetInitState = GprsIn_Fail;
 31173  001068  0E06               	movlw	6
 31174  00106A                     L101:
 31175  00106A  0101               	movlb	1	; () banked
 31176  00106C  D003               	goto	L63
 31177  00106E                     
 31178                           ; BSR set to: 1
 31179                           ;mdm_gsm_gprs_http.c: 251: GprsInitSts = GprsSts_Failed;
 31180                           
 31181                           ; BSR set to: 1
 31182  00106E  0E03               	movlw	3
 31183  001070                     L100:
 31184  001070  6FFF               	movwf	InitGprsNetwork@GprsInitSts& (0+255),b
 31185                           
 31186                           ;mdm_gsm_gprs_http.c: 252: GprsNetInitState = GprsIn_Idle;
 31187  001072  0E00               	movlw	0
 31188  001074                     L63:
 31189  001074  6FE7               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 31190                           
 31191                           ; BSR set to: 1
 31192                           ;mdm_gsm_gprs_http.c: 257: }
 31193                           
 31194                           ; BSR set to: 1
 31195                           ;mdm_gsm_gprs_http.c: 256: break;
 31196                           
 31197                           ;mdm_gsm_gprs_http.c: 255: default:
 31198                           
 31199                           ;mdm_gsm_gprs_http.c: 253: break;
 31200  001076  D01C               	goto	l1222
 31201  001078                     l1219:
 31202                           
 31203                           ; BSR set to: 1
 31204                           
 31205                           ; BSR set to: 1
 31206  001078  51E7               	movf	InitGprsNetwork@GprsNetInitState& (0+255),w,b
 31207                           
 31208                           ; Switch size 1, requested type "space"
 31209                           ; Number of cases is 9, Range of values is 0 to 8
 31210                           ; switch strategies available:
 31211                           ; Name         Instructions Cycles
 31212                           ; simple_byte           28    15 (average)
 31213                           ;	Chosen strategy is simple_byte
 31214  00107A  0A00               	xorlw	0	; case 0
 31215  00107C  B4D8               	btfsc	status,2,c
 31216  00107E  D6A8               	goto	l1220
 31217  001080  0A01               	xorlw	1	; case 1
 31218  001082  B4D8               	btfsc	status,2,c
 31219  001084  D6B1               	goto	l1223
 31220  001086  0A03               	xorlw	3	; case 2
 31221  001088  B4D8               	btfsc	status,2,c
 31222  00108A  D6CB               	goto	l1224
 31223  00108C  0A01               	xorlw	1	; case 3
 31224  00108E  B4D8               	btfsc	status,2,c
 31225  001090  D756               	goto	l1228
 31226  001092  0A07               	xorlw	7	; case 4
 31227  001094  B4D8               	btfsc	status,2,c
 31228  001096  D770               	goto	l1229
 31229  001098  0A01               	xorlw	1	; case 5
 31230  00109A  B4D8               	btfsc	status,2,c
 31231  00109C  D78D               	goto	l1230
 31232  00109E  0A03               	xorlw	3	; case 6
 31233  0010A0  B4D8               	btfsc	status,2,c
 31234  0010A2  D7E5               	goto	l1241
 31235  0010A4  0A01               	xorlw	1	; case 7
 31236  0010A6  B4D8               	btfsc	status,2,c
 31237  0010A8  D789               	goto	l1231
 31238  0010AA  0A0F               	xorlw	15	; case 8
 31239  0010AC  B4D8               	btfsc	status,2,c
 31240  0010AE  D7B0               	goto	l1236
 31241  0010B0                     l1222:
 31242                           
 31243                           ;mdm_gsm_gprs_http.c: 260: return GprsInitSts;
 31244                           
 31245                           ; BSR set to: 1
 31246  0010B0  0101               	movlb	1	; () banked
 31247  0010B2  51FF               	movf	InitGprsNetwork@GprsInitSts& (0+255),w,b
 31248  0010B4  0012               	return	
 31249  0010B6                     __end_of_InitGprsNetwork:
 31250                           	opt stack 0
 31251                           tosu	equ	0xFFF
 31252                           tosh	equ	0xFFE
 31253                           tosl	equ	0xFFD
 31254                           pclath	equ	0xFFA
 31255                           tblptru	equ	0xFF8
 31256                           tblptrh	equ	0xFF7
 31257                           tblptrl	equ	0xFF6
 31258                           tablat	equ	0xFF5
 31259                           prodh	equ	0xFF4
 31260                           prodl	equ	0xFF3
 31261                           intcon	equ	0xFF2
 31262                           intcon2	equ	0xFF1
 31263                           intcon3	equ	0xFF0
 31264                           indf0	equ	0xFEF
 31265                           postinc0	equ	0xFEE
 31266                           plusw0	equ	0xFEB
 31267                           fsr0h	equ	0xFEA
 31268                           fsr0l	equ	0xFE9
 31269                           wreg	equ	0xFE8
 31270                           indf1	equ	0xFE7
 31271                           postinc1	equ	0xFE6
 31272                           postdec1	equ	0xFE5
 31273                           plusw1	equ	0xFE3
 31274                           fsr1h	equ	0xFE2
 31275                           fsr1l	equ	0xFE1
 31276                           indf2	equ	0xFDF
 31277                           postinc2	equ	0xFDE
 31278                           postdec2	equ	0xFDD
 31279                           plusw2	equ	0xFDB
 31280                           fsr2h	equ	0xFDA
 31281                           fsr2l	equ	0xFD9
 31282                           status	equ	0xFD8
 31283                           
 31284 ;; *************** function _HttpGetMethod *****************
 31285 ;; Defined at:
 31286 ;;		line 271 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs_http.c"
 31287 ;; Parameters:    Size  Location     Type
 31288 ;;  GetData         2   59[BANK0 ] PTR struct _HttpGetDataT
 31289 ;;		 -> HttpGetDataLocal(5), 
 31290 ;; Auto vars:     Size  Location     Type
 31291 ;;  UartMessage   200    0[BANK1 ] unsigned char [200]
 31292 ;;  Index           1  200[BANK1 ] unsigned char 
 31293 ;; Return value:  Size  Location     Type
 31294 ;;                  1    wreg      enum E8925
 31295 ;; Registers used:
 31296 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31297 ;; Tracked objects:
 31298 ;;		On entry : 0/0
 31299 ;;		On exit  : 0/0
 31300 ;;		Unchanged: 0/0
 31301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31302 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31303 ;;      Locals:         0       0     201       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31304 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31305 ;;      Totals:         0       6     201       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31306 ;;Total ram usage:      207 bytes
 31307 ;; Hardware stack levels used:    1
 31308 ;; Hardware stack levels required when called:   14
 31309 ;; This function calls:
 31310 ;;		_ClearBuffer
 31311 ;;		_OsTmr_GetTimerStatus
 31312 ;;		_OsTmr_StartTimer
 31313 ;;		_ReceiveEvt
 31314 ;;		_StringCopy
 31315 ;;		_Uart_WriteConstString
 31316 ;;		_Uart_WriteString
 31317 ;; This function is called by:
 31318 ;;		_MdmHttp_MainTask
 31319 ;; This function uses a non-reentrant model
 31320 ;;
 31321                           
 31322                           	psect	text145
 31323  0005EC                     __ptext145:
 31324                           	opt stack 0
 31325  0005EC                     _HttpGetMethod:
 31326                           	opt stack 13
 31327                           
 31328                           ;mdm_gsm_gprs_http.c: 273: static GetMethodType GetMethodState = GetM_Idle;
 31329                           ;mdm_gsm_gprs_http.c: 274: static GetMethodType GetMethodNextState = GetM_Idle;
 31330                           ;mdm_gsm_gprs_http.c: 275: static GetMethodStsType GetMOutSts = GetMOut_Idle;
 31331                           ;mdm_gsm_gprs_http.c: 276: UINT8 UartMessage[200];
 31332                           ;mdm_gsm_gprs_http.c: 277: UINT8 Index = 0;
 31333                           
 31334                           ; BSR set to: 1
 31335                           ;incstack = 0
 31336  0005EC  0E00               	movlw	0
 31337  0005EE  0101               	movlb	1	; () banked
 31338  0005F0  6FC8               	movwf	HttpGetMethod@Index& (0+255),b
 31339                           
 31340                           ;mdm_gsm_gprs_http.c: 279: switch (GetMethodState)
 31341  0005F2  D230               	goto	l1252
 31342  0005F4                     
 31343                           ; BSR set to: 1
 31344                           ;mdm_gsm_gprs_http.c: 283: if (ReceiveEvt(&GetMethod))
 31345                           
 31346                           ; BSR set to: 1
 31347  0005F4  0EFC               	movlw	low _GetMethod
 31348  0005F6  0100               	movlb	0	; () banked
 31349  0005F8  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 31350  0005FA  0E01               	movlw	high _GetMethod
 31351  0005FC  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 31352  0005FE  EC91  F033         	call	_ReceiveEvt	;wreg free
 31353  000602  0900               	iorlw	0
 31354  000604  B4D8               	btfsc	status,2,c
 31355  000606  D257               	goto	l1255
 31356                           
 31357                           ;mdm_gsm_gprs_http.c: 284: {
 31358                           ;mdm_gsm_gprs_http.c: 286: GetMethodState = GetM_HttpInit;
 31359  000608  0E01               	movlw	1
 31360  00060A  D18C               	goto	L66
 31361  00060C                     
 31362                           ; BSR set to: 1
 31363                           ;mdm_gsm_gprs_http.c: 291: Uart_WriteConstString(1, "AT+HTTPINIT\r");
 31364                           
 31365                           ; BSR set to: 1
 31366  00060C  0E9D               	movlw	low STR_12
 31367  00060E  0100               	movlb	0	; () banked
 31368  000610  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 31369  000612  0EFF               	movlw	high STR_12
 31370  000614  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 31371  000616  0E01               	movlw	1
 31372  000618  EC48  F031         	call	_Uart_WriteConstString
 31373                           
 31374                           ;mdm_gsm_gprs_http.c: 293: GetMethodState = GetM_WaitMdmResp;
 31375  00061C  0E0A               	movlw	10
 31376  00061E  0101               	movlb	1	; () banked
 31377  000620  6FE6               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 31378                           
 31379                           ; BSR set to: 1
 31380                           ;mdm_gsm_gprs_http.c: 294: GetMethodNextState = GetM_HttpSsl;
 31381  000622  0E02               	movlw	2
 31382  000624  0100               	movlb	0	; () banked
 31383  000626  6FD0               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 31384                           
 31385                           ; BSR set to: 0
 31386                           ;mdm_gsm_gprs_http.c: 296: OsTmr_StartTimer(&ConnTimeout,20000u);
 31387  000628  0EF3               	movlw	low _ConnTimeout
 31388  00062A  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 31389  00062C  0E02               	movlw	high _ConnTimeout
 31390  00062E  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 31391  000630  0E20               	movlw	32
 31392  000632  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 31393  000634  0E4E               	movlw	78
 31394  000636  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 31395  000638  0E00               	movlw	0
 31396  00063A  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 31397  00063C  0E00               	movlw	0
 31398  00063E  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 31399  000640  ECC0  F02C         	call	_OsTmr_StartTimer	;wreg free
 31400  000644  D1AF               	goto	l15941
 31401  000646                     
 31402                           ; BSR set to: 1
 31403                           ;mdm_gsm_gprs_http.c: 303: Uart_WriteConstString(1, "AT+HTTPSSL=1\r");
 31404                           
 31405                           ; BSR set to: 1
 31406  000646  0E67               	movlw	low STR_13
 31407  000648  0100               	movlb	0	; () banked
 31408  00064A  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 31409  00064C  0EFF               	movlw	high STR_13
 31410  00064E  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 31411  000650  0E01               	movlw	1
 31412  000652  EC48  F031         	call	_Uart_WriteConstString
 31413                           
 31414                           ;mdm_gsm_gprs_http.c: 305: GetMethodState = GetM_WaitMdmResp;
 31415  000656  0E0A               	movlw	10
 31416  000658  0101               	movlb	1	; () banked
 31417  00065A  6FE6               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 31418                           
 31419                           ; BSR set to: 1
 31420                           ;mdm_gsm_gprs_http.c: 306: GetMethodNextState = GetM_SetBearerProf;
 31421  00065C  0E03               	movlw	3
 31422  00065E  0100               	movlb	0	; () banked
 31423  000660  6FD0               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 31424                           
 31425                           ; BSR set to: 0
 31426                           ;mdm_gsm_gprs_http.c: 308: OsTmr_StartTimer(&ConnTimeout,20000u);
 31427  000662  0EF3               	movlw	low _ConnTimeout
 31428  000664  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 31429  000666  0E02               	movlw	high _ConnTimeout
 31430  000668  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 31431  00066A  0E20               	movlw	32
 31432  00066C  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 31433  00066E  0E4E               	movlw	78
 31434  000670  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 31435  000672  0E00               	movlw	0
 31436  000674  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 31437  000676  0E00               	movlw	0
 31438  000678  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 31439  00067A  ECC0  F02C         	call	_OsTmr_StartTimer	;wreg free
 31440  00067E  D192               	goto	l15941
 31441  000680                     
 31442                           ; BSR set to: 1
 31443                           ;mdm_gsm_gprs_http.c: 315: Uart_WriteConstString(1, "AT+HTTPPARA=\"CID\",1\r");
 31444                           
 31445                           ; BSR set to: 1
 31446  000680  0EA8               	movlw	low STR_14
 31447  000682  0100               	movlb	0	; () banked
 31448  000684  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 31449  000686  0EFE               	movlw	high STR_14
 31450  000688  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 31451  00068A  0E01               	movlw	1
 31452  00068C  EC48  F031         	call	_Uart_WriteConstString
 31453                           
 31454                           ;mdm_gsm_gprs_http.c: 317: GetMethodState = GetM_WaitMdmResp;
 31455  000690  0E0A               	movlw	10
 31456  000692  0101               	movlb	1	; () banked
 31457  000694  6FE6               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 31458                           
 31459                           ; BSR set to: 1
 31460                           ;mdm_gsm_gprs_http.c: 318: GetMethodNextState = GetM_SetUrlAddr;
 31461  000696  0E04               	movlw	4
 31462  000698  0100               	movlb	0	; () banked
 31463  00069A  6FD0               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 31464                           
 31465                           ; BSR set to: 0
 31466                           ;mdm_gsm_gprs_http.c: 320: OsTmr_StartTimer(&ConnTimeout,20000u);
 31467  00069C  0EF3               	movlw	low _ConnTimeout
 31468  00069E  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 31469  0006A0  0E02               	movlw	high _ConnTimeout
 31470  0006A2  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 31471  0006A4  0E20               	movlw	32
 31472  0006A6  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 31473  0006A8  0E4E               	movlw	78
 31474  0006AA  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 31475  0006AC  0E00               	movlw	0
 31476  0006AE  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 31477  0006B0  0E00               	movlw	0
 31478  0006B2  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 31479  0006B4  ECC0  F02C         	call	_OsTmr_StartTimer	;wreg free
 31480  0006B8  D175               	goto	l15941
 31481  0006BA                     
 31482                           ; BSR set to: 1
 31483                           ;mdm_gsm_gprs_http.c: 327: ClearBuffer(UartMessage, sizeof(UartMessage));
 31484                           
 31485                           ; BSR set to: 1
 31486  0006BA  0E00               	movlw	low HttpGetMethod@UartMessage
 31487  0006BC  0100               	movlb	0	; () banked
 31488  0006BE  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 31489  0006C0  0E01               	movlw	high HttpGetMethod@UartMessage
 31490  0006C2  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 31491  0006C4  0E00               	movlw	0
 31492  0006C6  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 31493  0006C8  0EC8               	movlw	200
 31494  0006CA  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 31495  0006CC  ECB3  F032         	call	_ClearBuffer	;wreg free
 31496                           
 31497                           ;mdm_gsm_gprs_http.c: 329: StringCopy((void*)("AT+HTTPPARA=\"URL\",\""),UartMessage,19);
 31498  0006D0  0EE6               	movlw	low STR_15
 31499  0006D2  0100               	movlb	0	; () banked
 31500  0006D4  6F85               	movwf	StringCopy@SourceStr& (0+255),b
 31501  0006D6  0EFE               	movlw	high STR_15
 31502  0006D8  6F86               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 31503  0006DA  0E00               	movlw	low HttpGetMethod@UartMessage
 31504  0006DC  6F87               	movwf	StringCopy@DestStr& (0+255),b
 31505  0006DE  0E01               	movlw	high HttpGetMethod@UartMessage
 31506  0006E0  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 31507  0006E2  0E00               	movlw	0
 31508  0006E4  6F8A               	movwf	(StringCopy@Len+1)& (0+255),b
 31509  0006E6  0E13               	movlw	19
 31510  0006E8  6F89               	movwf	StringCopy@Len& (0+255),b
 31511  0006EA  EC60  F02C         	call	_StringCopy	;wreg free
 31512                           
 31513                           ;mdm_gsm_gprs_http.c: 331: for (Index = 0; Index < GetData->UrlLen; Index++)
 31514  0006EE  0E00               	movlw	0
 31515  0006F0  0101               	movlb	1	; () banked
 31516  0006F2  6FC8               	movwf	HttpGetMethod@Index& (0+255),b
 31517  0006F4  D024               	goto	l1260
 31518  0006F6                     
 31519                           ; BSR set to: 1
 31520                           ;mdm_gsm_gprs_http.c: 332: {
 31521                           ;mdm_gsm_gprs_http.c: 333: UartMessage[Index + 19] = *(GetData->Url + Index);
 31522                           
 31523                           ; BSR set to: 1
 31524  0006F6  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 31525  0006F8  0D01               	mullw	1
 31526  0006FA  C09B  FFD9         	movff	HttpGetMethod@GetData,fsr2l
 31527  0006FE  C09C  FFDA         	movff	HttpGetMethod@GetData+1,fsr2h
 31528  000702  CFDE F09D          	movff	postinc2,??_HttpGetMethod
 31529  000706  CFDD F09E          	movff	postdec2,??_HttpGetMethod+1
 31530  00070A  50F3               	movf	prodl,w,c
 31531  00070C  0100               	movlb	0	; () banked
 31532  00070E  259D               	addwf	??_HttpGetMethod& (0+255),w,b
 31533  000710  6ED9               	movwf	fsr2l,c
 31534  000712  50F4               	movf	prodh,w,c
 31535  000714  219E               	addwfc	(??_HttpGetMethod+1)& (0+255),w,b
 31536  000716  6EDA               	movwf	fsr2h,c
 31537  000718  0101               	movlb	1	; () banked
 31538  00071A  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 31539  00071C  0100               	movlb	0	; () banked
 31540  00071E  6F9F               	movwf	(??_HttpGetMethod+2)& (0+255),b
 31541  000720  6BA0               	clrf	(??_HttpGetMethod+3)& (0+255),b
 31542  000722  0E13               	movlw	19
 31543  000724  279F               	addwf	(??_HttpGetMethod+2)& (0+255),f,b
 31544  000726  0E00               	movlw	0
 31545  000728  23A0               	addwfc	(??_HttpGetMethod+3)& (0+255),f,b
 31546  00072A  0E00               	movlw	low HttpGetMethod@UartMessage
 31547  00072C  259F               	addwf	(??_HttpGetMethod+2)& (0+255),w,b
 31548  00072E  6EE1               	movwf	fsr1l,c
 31549  000730  0E01               	movlw	high HttpGetMethod@UartMessage
 31550  000732  21A0               	addwfc	(??_HttpGetMethod+3)& (0+255),w,b
 31551  000734  6EE2               	movwf	fsr1h,c
 31552  000736  CFDF FFE7          	movff	indf2,indf1
 31553                           
 31554                           ; BSR set to: 0
 31555  00073A  0101               	movlb	1	; () banked
 31556  00073C  2BC8               	incf	HttpGetMethod@Index& (0+255),f,b
 31557  00073E                     l1260:
 31558                           
 31559                           ; BSR set to: 1
 31560                           
 31561                           ; BSR set to: 1
 31562  00073E  0100               	movlb	0	; () banked
 31563  000740  EE20 F002          	lfsr	2,2
 31564  000744  519B               	movf	HttpGetMethod@GetData& (0+255),w,b
 31565  000746  26D9               	addwf	fsr2l,f,c
 31566  000748  519C               	movf	(HttpGetMethod@GetData+1)& (0+255),w,b
 31567  00074A  22DA               	addwfc	fsr2h,f,c
 31568  00074C  50DE               	movf	postinc2,w,c
 31569  00074E  0101               	movlb	1	; () banked
 31570  000750  5DC8               	subwf	HttpGetMethod@Index& (0+255),w,b
 31571  000752  A0D8               	btfss	status,0,c
 31572  000754  D7D0               	goto	l1261
 31573                           
 31574                           ; BSR set to: 1
 31575                           ;mdm_gsm_gprs_http.c: 334: }
 31576                           ;mdm_gsm_gprs_http.c: 336: UartMessage[Index + 19] = '"';
 31577                           
 31578                           ; BSR set to: 1
 31579  000756  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 31580  000758  0100               	movlb	0	; () banked
 31581  00075A  6F9D               	movwf	??_HttpGetMethod& (0+255),b
 31582  00075C  6B9E               	clrf	(??_HttpGetMethod+1)& (0+255),b
 31583  00075E  0E13               	movlw	19
 31584  000760  279D               	addwf	??_HttpGetMethod& (0+255),f,b
 31585  000762  0E00               	movlw	0
 31586  000764  239E               	addwfc	(??_HttpGetMethod+1)& (0+255),f,b
 31587  000766  0E00               	movlw	low HttpGetMethod@UartMessage
 31588  000768  259D               	addwf	??_HttpGetMethod& (0+255),w,b
 31589  00076A  6ED9               	movwf	fsr2l,c
 31590  00076C  0E01               	movlw	high HttpGetMethod@UartMessage
 31591  00076E  219E               	addwfc	(??_HttpGetMethod+1)& (0+255),w,b
 31592  000770  6EDA               	movwf	fsr2h,c
 31593  000772  0E22               	movlw	34
 31594  000774  6EDF               	movwf	indf2,c
 31595                           
 31596                           ;mdm_gsm_gprs_http.c: 337: UartMessage[Index + 20] = '\r';
 31597  000776  0101               	movlb	1	; () banked
 31598  000778  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 31599  00077A  0100               	movlb	0	; () banked
 31600  00077C  6F9D               	movwf	??_HttpGetMethod& (0+255),b
 31601  00077E  6B9E               	clrf	(??_HttpGetMethod+1)& (0+255),b
 31602  000780  0E14               	movlw	20
 31603  000782  279D               	addwf	??_HttpGetMethod& (0+255),f,b
 31604  000784  0E00               	movlw	0
 31605  000786  239E               	addwfc	(??_HttpGetMethod+1)& (0+255),f,b
 31606  000788  0E00               	movlw	low HttpGetMethod@UartMessage
 31607  00078A  259D               	addwf	??_HttpGetMethod& (0+255),w,b
 31608  00078C  6ED9               	movwf	fsr2l,c
 31609  00078E  0E01               	movlw	high HttpGetMethod@UartMessage
 31610  000790  219E               	addwfc	(??_HttpGetMethod+1)& (0+255),w,b
 31611  000792  6EDA               	movwf	fsr2h,c
 31612  000794  0E0D               	movlw	13
 31613  000796  6EDF               	movwf	indf2,c
 31614                           
 31615                           ;mdm_gsm_gprs_http.c: 338: UartMessage[Index + 21] = (0);
 31616  000798  0101               	movlb	1	; () banked
 31617  00079A  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 31618  00079C  0100               	movlb	0	; () banked
 31619  00079E  6F9D               	movwf	??_HttpGetMethod& (0+255),b
 31620  0007A0  6B9E               	clrf	(??_HttpGetMethod+1)& (0+255),b
 31621  0007A2  0E15               	movlw	21
 31622  0007A4  279D               	addwf	??_HttpGetMethod& (0+255),f,b
 31623  0007A6  0E00               	movlw	0
 31624  0007A8  239E               	addwfc	(??_HttpGetMethod+1)& (0+255),f,b
 31625  0007AA  0E00               	movlw	low HttpGetMethod@UartMessage
 31626  0007AC  259D               	addwf	??_HttpGetMethod& (0+255),w,b
 31627  0007AE  6ED9               	movwf	fsr2l,c
 31628  0007B0  0E01               	movlw	high HttpGetMethod@UartMessage
 31629  0007B2  219E               	addwfc	(??_HttpGetMethod+1)& (0+255),w,b
 31630  0007B4  6EDA               	movwf	fsr2h,c
 31631  0007B6  0E00               	movlw	0
 31632  0007B8  6EDF               	movwf	indf2,c
 31633                           
 31634                           ; BSR set to: 0
 31635                           ;mdm_gsm_gprs_http.c: 340: Uart_WriteString(1, UartMessage);
 31636  0007BA  0E00               	movlw	low HttpGetMethod@UartMessage
 31637  0007BC  6F80               	movwf	Uart_WriteString@StringToWrite& (0+255),b
 31638  0007BE  0E01               	movlw	high HttpGetMethod@UartMessage
 31639  0007C0  6F81               	movwf	(Uart_WriteString@StringToWrite+1)& (0+255),b
 31640  0007C2  0E01               	movlw	1
 31641  0007C4  ECE8  F031         	call	_Uart_WriteString
 31642                           
 31643                           ;mdm_gsm_gprs_http.c: 342: GetMethodState = GetM_WaitMdmResp;
 31644  0007C8  0E0A               	movlw	10
 31645  0007CA  0101               	movlb	1	; () banked
 31646  0007CC  6FE6               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 31647                           
 31648                           ; BSR set to: 1
 31649                           ;mdm_gsm_gprs_http.c: 343: GetMethodNextState = GetM_PerfGetAction;
 31650  0007CE  0E05               	movlw	5
 31651  0007D0  0100               	movlb	0	; () banked
 31652  0007D2  6FD0               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 31653                           
 31654                           ; BSR set to: 0
 31655                           ;mdm_gsm_gprs_http.c: 345: OsTmr_StartTimer(&ConnTimeout,20000u);
 31656  0007D4  0EF3               	movlw	low _ConnTimeout
 31657  0007D6  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 31658  0007D8  0E02               	movlw	high _ConnTimeout
 31659  0007DA  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 31660  0007DC  0E20               	movlw	32
 31661  0007DE  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 31662  0007E0  0E4E               	movlw	78
 31663  0007E2  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 31664  0007E4  0E00               	movlw	0
 31665  0007E6  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 31666  0007E8  0E00               	movlw	0
 31667  0007EA  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 31668  0007EC  ECC0  F02C         	call	_OsTmr_StartTimer	;wreg free
 31669  0007F0  D0D9               	goto	l15941
 31670  0007F2                     
 31671                           ; BSR set to: 1
 31672                           ;mdm_gsm_gprs_http.c: 352: Uart_WriteConstString(1, "AT+HTTPACTION=0\r");
 31673                           
 31674                           ; BSR set to: 1
 31675  0007F2  0E1E               	movlw	low STR_16
 31676  0007F4  0100               	movlb	0	; () banked
 31677  0007F6  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 31678  0007F8  0EFF               	movlw	high STR_16
 31679  0007FA  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 31680  0007FC  0E01               	movlw	1
 31681  0007FE  EC48  F031         	call	_Uart_WriteConstString
 31682                           
 31683                           ;mdm_gsm_gprs_http.c: 354: GetMethodState = GetM_WaitMdmResp;
 31684  000802  0E0A               	movlw	10
 31685  000804  0101               	movlb	1	; () banked
 31686  000806  6FE6               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 31687                           
 31688                           ; BSR set to: 1
 31689                           ;mdm_gsm_gprs_http.c: 355: GetMethodNextState = GetM_ReqActionConf;
 31690  000808  0E06               	movlw	6
 31691  00080A  0100               	movlb	0	; () banked
 31692  00080C  6FD0               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 31693                           
 31694                           ; BSR set to: 0
 31695                           ;mdm_gsm_gprs_http.c: 357: OsTmr_StartTimer(&ConnTimeout,20000u);
 31696  00080E  0EF3               	movlw	low _ConnTimeout
 31697  000810  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 31698  000812  0E02               	movlw	high _ConnTimeout
 31699  000814  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 31700  000816  0E20               	movlw	32
 31701  000818  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 31702  00081A  0E4E               	movlw	78
 31703  00081C  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 31704  00081E  0E00               	movlw	0
 31705  000820  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 31706  000822  0E00               	movlw	0
 31707  000824  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 31708  000826  ECC0  F02C         	call	_OsTmr_StartTimer	;wreg free
 31709                           
 31710                           ;mdm_gsm_gprs_http.c: 358: break;
 31711  00082A  D145               	goto	l1255
 31712  00082C                     
 31713                           ;mdm_gsm_gprs_http.c: 362: GetMethodState = GetM_WaitActionConf;
 31714  00082C  0E07               	movlw	7
 31715  00082E  0101               	movlb	1	; () banked
 31716  000830  6FE6               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 31717                           
 31718                           ;mdm_gsm_gprs_http.c: 365: GetMethodNextState = GetM_HttpTerminate;
 31719  000832  0E09               	movlw	9
 31720  000834  0100               	movlb	0	; () banked
 31721  000836  6FD0               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 31722                           
 31723                           ; BSR set to: 0
 31724                           ;mdm_gsm_gprs_http.c: 370: OsTmr_StartTimer(&ConnTimeout,20000u);
 31725  000838  0EF3               	movlw	low _ConnTimeout
 31726  00083A  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 31727  00083C  0E02               	movlw	high _ConnTimeout
 31728  00083E  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 31729  000840  0E20               	movlw	32
 31730  000842  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 31731  000844  0E4E               	movlw	78
 31732  000846  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 31733  000848  0E00               	movlw	0
 31734  00084A  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 31735  00084C  0E00               	movlw	0
 31736  00084E  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 31737  000850  ECC0  F02C         	call	_OsTmr_StartTimer	;wreg free
 31738                           
 31739                           ;mdm_gsm_gprs_http.c: 371: break;
 31740  000854  D130               	goto	l1255
 31741  000856                     
 31742                           ;mdm_gsm_gprs_http.c: 375: Uart_WriteConstString(1, "AT+HTTPREAD\r");
 31743  000856  0E83               	movlw	low STR_17
 31744  000858  0100               	movlb	0	; () banked
 31745  00085A  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 31746  00085C  0EFF               	movlw	high STR_17
 31747  00085E  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 31748  000860  0E01               	movlw	1
 31749  000862  EC48  F031         	call	_Uart_WriteConstString
 31750                           
 31751                           ;mdm_gsm_gprs_http.c: 377: GetMethodState = GetM_ReadGetData;
 31752  000866  0E0D               	movlw	13
 31753  000868  0101               	movlb	1	; () banked
 31754  00086A  6FE6               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 31755                           
 31756                           ; BSR set to: 1
 31757                           ;mdm_gsm_gprs_http.c: 378: GetMethodNextState = GetM_HttpTerminate;
 31758  00086C  0E09               	movlw	9
 31759  00086E  0100               	movlb	0	; () banked
 31760  000870  6FD0               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 31761                           
 31762                           ; BSR set to: 0
 31763                           ;mdm_gsm_gprs_http.c: 380: OsTmr_StartTimer(&ConnTimeout,20000u);
 31764  000872  0EF3               	movlw	low _ConnTimeout
 31765  000874  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 31766  000876  0E02               	movlw	high _ConnTimeout
 31767  000878  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 31768  00087A  0E20               	movlw	32
 31769  00087C  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 31770  00087E  0E4E               	movlw	78
 31771  000880  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 31772  000882  0E00               	movlw	0
 31773  000884  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 31774  000886  0E00               	movlw	0
 31775  000888  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 31776  00088A  ECC0  F02C         	call	_OsTmr_StartTimer	;wreg free
 31777  00088E  D08A               	goto	l15941
 31778  000890                     
 31779                           ; BSR set to: 1
 31780                           ;mdm_gsm_gprs_http.c: 387: Uart_WriteConstString(1, "AT+HTTPTERM\r");
 31781                           
 31782                           ; BSR set to: 1
 31783  000890  0E90               	movlw	low STR_18
 31784  000892  0100               	movlb	0	; () banked
 31785  000894  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 31786  000896  0EFF               	movlw	high STR_18
 31787  000898  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 31788  00089A  0E01               	movlw	1
 31789  00089C  EC48  F031         	call	_Uart_WriteConstString
 31790                           
 31791                           ;mdm_gsm_gprs_http.c: 389: GetMethodState = GetM_WaitMdmResp;
 31792  0008A0  0E0A               	movlw	10
 31793  0008A2  0101               	movlb	1	; () banked
 31794  0008A4  6FE6               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 31795                           
 31796                           ; BSR set to: 1
 31797                           ;mdm_gsm_gprs_http.c: 390: GetMethodNextState = GetM_Done;
 31798  0008A6  0E0E               	movlw	14
 31799  0008A8  0100               	movlb	0	; () banked
 31800  0008AA  6FD0               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 31801                           
 31802                           ; BSR set to: 0
 31803                           ;mdm_gsm_gprs_http.c: 392: OsTmr_StartTimer(&ConnTimeout,20000u);
 31804  0008AC  0EF3               	movlw	low _ConnTimeout
 31805  0008AE  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 31806  0008B0  0E02               	movlw	high _ConnTimeout
 31807  0008B2  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 31808  0008B4  0E20               	movlw	32
 31809  0008B6  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 31810  0008B8  0E4E               	movlw	78
 31811  0008BA  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 31812  0008BC  0E00               	movlw	0
 31813  0008BE  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 31814  0008C0  0E00               	movlw	0
 31815  0008C2  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 31816  0008C4  ECC0  F02C         	call	_OsTmr_StartTimer	;wreg free
 31817  0008C8  D06D               	goto	l15941
 31818  0008CA                     
 31819                           ; BSR set to: 1
 31820                           ;mdm_gsm_gprs_http.c: 399: if (ReceiveEvt(&NewStringReceived))
 31821                           
 31822                           ; BSR set to: 1
 31823  0008CA  0E3C               	movlw	low _NewStringReceived
 31824  0008CC  0100               	movlb	0	; () banked
 31825  0008CE  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 31826  0008D0  0E00               	movlw	high _NewStringReceived
 31827  0008D2  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 31828  0008D4  EC91  F033         	call	_ReceiveEvt	;wreg free
 31829  0008D8  0900               	iorlw	0
 31830  0008DA  B4D8               	btfsc	status,2,c
 31831  0008DC  D018               	goto	l1268
 31832                           
 31833                           ;mdm_gsm_gprs_http.c: 400: {
 31834                           ;mdm_gsm_gprs_http.c: 402: if ((RxBuffer[0] == 'O') && (RxBuffer[1] == 'K'))
 31835  0008DE  CC58  FFE8         	movff	_RxBuffer,wreg
 31836  0008E2  0A4F               	xorlw	79
 31837  0008E4  A4D8               	btfss	status,2,c
 31838  0008E6  D0E7               	goto	l1255
 31839  0008E8  CC59  FFE8         	movff	_RxBuffer+1,wreg
 31840  0008EC  0A4B               	xorlw	75
 31841  0008EE  A4D8               	btfss	status,2,c
 31842  0008F0  D0E2               	goto	l1255
 31843                           
 31844                           ;mdm_gsm_gprs_http.c: 403: {
 31845                           ;mdm_gsm_gprs_http.c: 405: GetMethodState = GetMethodNextState;
 31846  0008F2  C0D0  F1E6         	movff	HttpGetMethod@GetMethodNextState,HttpGetMethod@GetMethodState
 31847                           
 31848                           ;mdm_gsm_gprs_http.c: 407: ClearBuffer(RxBuffer,((UINT16)(400)));
 31849  0008F6  0E58               	movlw	low _RxBuffer
 31850  0008F8  0100               	movlb	0	; () banked
 31851  0008FA  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 31852  0008FC  0E0C               	movlw	high _RxBuffer
 31853  0008FE  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 31854  000900  0E01               	movlw	1
 31855  000902  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 31856  000904  0E90               	movlw	144
 31857  000906  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 31858  000908  ECB3  F032         	call	_ClearBuffer	;wreg free
 31859                           
 31860                           ;mdm_gsm_gprs_http.c: 408: }
 31861                           ;mdm_gsm_gprs_http.c: 409: }
 31862  00090C  D0D4               	goto	l1255
 31863  00090E                     l1268:
 31864                           
 31865                           ;mdm_gsm_gprs_http.c: 410: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 31866  00090E  0EF3               	movlw	low _ConnTimeout
 31867  000910  0100               	movlb	0	; () banked
 31868  000912  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 31869  000914  0E02               	movlw	high _ConnTimeout
 31870  000916  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 31871  000918  ECA9  F028         	call	_OsTmr_GetTimerStatus	;wreg free
 31872  00091C                     L67:
 31873  00091C  06E8               	decf	wreg,f,c
 31874  00091E  A4D8               	btfss	status,2,c
 31875  000920  D0CA               	goto	l1255
 31876                           
 31877                           ;mdm_gsm_gprs_http.c: 411: {
 31878                           ;mdm_gsm_gprs_http.c: 413: GetMethodState = GetM_Fail;
 31879  000922  0E0F               	movlw	15
 31880  000924                     L66:
 31881  000924  0101               	movlb	1	; () banked
 31882  000926  6FE6               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 31883                           
 31884                           ; BSR set to: 1
 31885                           ;mdm_gsm_gprs_http.c: 414: }
 31886                           ;mdm_gsm_gprs_http.c: 415: break;
 31887                           
 31888                           ; BSR set to: 1
 31889  000928  D0C6               	goto	l1255
 31890  00092A                     
 31891                           ; BSR set to: 1
 31892                           ;mdm_gsm_gprs_http.c: 419: if (ReceiveEvt(&NewStringReceived))
 31893                           
 31894                           ; BSR set to: 1
 31895  00092A  0E3C               	movlw	low _NewStringReceived
 31896  00092C  0100               	movlb	0	; () banked
 31897  00092E  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 31898  000930  0E00               	movlw	high _NewStringReceived
 31899  000932  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 31900  000934  EC91  F033         	call	_ReceiveEvt	;wreg free
 31901  000938  0900               	iorlw	0
 31902  00093A  B4D8               	btfsc	status,2,c
 31903  00093C  D018               	goto	l1273
 31904                           
 31905                           ;mdm_gsm_gprs_http.c: 420: {
 31906                           ;mdm_gsm_gprs_http.c: 422: if ((RxBuffer[0] == '+') && (RxBuffer[1] == 'H'))
 31907  00093E  CC58  FFE8         	movff	_RxBuffer,wreg
 31908  000942  0A2B               	xorlw	43
 31909  000944  A4D8               	btfss	status,2,c
 31910  000946  D0B7               	goto	l1255
 31911  000948  CC59  FFE8         	movff	_RxBuffer+1,wreg
 31912  00094C  0A48               	xorlw	72
 31913  00094E  A4D8               	btfss	status,2,c
 31914  000950  D0B2               	goto	l1255
 31915                           
 31916                           ;mdm_gsm_gprs_http.c: 423: {
 31917                           ;mdm_gsm_gprs_http.c: 425: GetMethodState = GetMethodNextState;
 31918  000952  C0D0  F1E6         	movff	HttpGetMethod@GetMethodNextState,HttpGetMethod@GetMethodState
 31919                           
 31920                           ;mdm_gsm_gprs_http.c: 427: ClearBuffer(RxBuffer,((UINT16)(400)));
 31921  000956  0E58               	movlw	low _RxBuffer
 31922  000958  0100               	movlb	0	; () banked
 31923  00095A  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 31924  00095C  0E0C               	movlw	high _RxBuffer
 31925  00095E  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 31926  000960  0E01               	movlw	1
 31927  000962  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 31928  000964  0E90               	movlw	144
 31929  000966  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 31930  000968  ECB3  F032         	call	_ClearBuffer	;wreg free
 31931                           
 31932                           ;mdm_gsm_gprs_http.c: 428: }
 31933                           ;mdm_gsm_gprs_http.c: 429: }
 31934  00096C  D0A4               	goto	l1255
 31935  00096E                     l1273:
 31936                           
 31937                           ;mdm_gsm_gprs_http.c: 430: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 31938  00096E  0EF3               	movlw	low _ConnTimeout
 31939  000970  0100               	movlb	0	; () banked
 31940  000972  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 31941  000974  0E02               	movlw	high _ConnTimeout
 31942  000976  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 31943  000978  ECA9  F028         	call	_OsTmr_GetTimerStatus	;wreg free
 31944  00097C  D7CF               	goto	L67
 31945  00097E                     
 31946                           ; BSR set to: 1
 31947                           ;mdm_gsm_gprs_http.c: 439: GetMethodState = GetM_Wait;
 31948                           
 31949                           ; BSR set to: 1
 31950  00097E  0E0C               	movlw	12
 31951  000980  6FE6               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 31952                           
 31953                           ;mdm_gsm_gprs_http.c: 440: GetMethodNextState = GetM_PerfGetAction;
 31954  000982  0E05               	movlw	5
 31955  000984  0100               	movlb	0	; () banked
 31956  000986  6FD0               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 31957                           
 31958                           ; BSR set to: 0
 31959                           ;mdm_gsm_gprs_http.c: 442: OsTmr_StartTimer(&ConnWait,1000);
 31960  000988  0ED6               	movlw	low _ConnWait
 31961  00098A  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 31962  00098C  0E03               	movlw	high _ConnWait
 31963  00098E  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 31964  000990  0EE8               	movlw	232
 31965  000992  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 31966  000994  0E03               	movlw	3
 31967  000996  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 31968  000998  0E00               	movlw	0
 31969  00099A  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 31970  00099C  0E00               	movlw	0
 31971  00099E  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 31972  0009A0  ECC0  F02C         	call	_OsTmr_StartTimer	;wreg free
 31973  0009A4                     l15941:
 31974                           
 31975                           ;mdm_gsm_gprs_http.c: 444: GetMOutSts = GetMOut_InProg;
 31976  0009A4  0E01               	movlw	1
 31977  0009A6  0101               	movlb	1	; () banked
 31978  0009A8  D053               	goto	L69
 31979  0009AA                     
 31980                           ; BSR set to: 1
 31981                           ;mdm_gsm_gprs_http.c: 449: if (OsTmr_GetTimerStatus(&ConnWait) == SwTimerExpired)
 31982                           
 31983                           ; BSR set to: 1
 31984  0009AA  0ED6               	movlw	low _ConnWait
 31985  0009AC  0100               	movlb	0	; () banked
 31986  0009AE  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 31987  0009B0  0E03               	movlw	high _ConnWait
 31988  0009B2  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 31989  0009B4  ECA9  F028         	call	_OsTmr_GetTimerStatus	;wreg free
 31990  0009B8  06E8               	decf	wreg,f,c
 31991  0009BA  A4D8               	btfss	status,2,c
 31992  0009BC  D07C               	goto	l1255
 31993                           
 31994                           ;mdm_gsm_gprs_http.c: 450: {
 31995                           ;mdm_gsm_gprs_http.c: 452: GetMethodState = GetMethodNextState;
 31996  0009BE  C0D0  F1E6         	movff	HttpGetMethod@GetMethodNextState,HttpGetMethod@GetMethodState
 31997                           
 31998                           ;mdm_gsm_gprs_http.c: 453: }
 31999                           ;mdm_gsm_gprs_http.c: 454: break;
 32000  0009C2  D079               	goto	l1255
 32001  0009C4                     
 32002                           ;mdm_gsm_gprs_http.c: 458: if (ReceiveEvt(&NewStringReceived))
 32003  0009C4  0E3C               	movlw	low _NewStringReceived
 32004  0009C6  0100               	movlb	0	; () banked
 32005  0009C8  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 32006  0009CA  0E00               	movlw	high _NewStringReceived
 32007  0009CC  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 32008  0009CE  EC91  F033         	call	_ReceiveEvt	;wreg free
 32009  0009D2  0900               	iorlw	0
 32010  0009D4  B4D8               	btfsc	status,2,c
 32011  0009D6  D02D               	goto	l1281
 32012                           
 32013                           ;mdm_gsm_gprs_http.c: 459: {
 32014                           ;mdm_gsm_gprs_http.c: 461: if ((RxBuffer[0] == '+') && (RxBuffer[1] == 'H'))
 32015  0009D8  CC58  FFE8         	movff	_RxBuffer,wreg
 32016  0009DC  0A2B               	xorlw	43
 32017  0009DE  A4D8               	btfss	status,2,c
 32018  0009E0  D06A               	goto	l1255
 32019  0009E2  CC59  FFE8         	movff	_RxBuffer+1,wreg
 32020  0009E6  0A48               	xorlw	72
 32021  0009E8  A4D8               	btfss	status,2,c
 32022  0009EA  D065               	goto	l1255
 32023                           
 32024                           ;mdm_gsm_gprs_http.c: 462: {
 32025                           ;mdm_gsm_gprs_http.c: 464: GetMethodState = GetMethodNextState;
 32026  0009EC  C0D0  F1E6         	movff	HttpGetMethod@GetMethodNextState,HttpGetMethod@GetMethodState
 32027                           
 32028                           ;mdm_gsm_gprs_http.c: 466: StringCopy(RxBuffer,GetData->RespBuffer,((UINT16)(400)));
 32029  0009F0  0E58               	movlw	low _RxBuffer
 32030  0009F2  0100               	movlb	0	; () banked
 32031  0009F4  6F85               	movwf	StringCopy@SourceStr& (0+255),b
 32032  0009F6  0E0C               	movlw	high _RxBuffer
 32033  0009F8  6F86               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 32034  0009FA  EE20 F003          	lfsr	2,3
 32035  0009FE  519B               	movf	HttpGetMethod@GetData& (0+255),w,b
 32036  000A00  26D9               	addwf	fsr2l,f,c
 32037  000A02  519C               	movf	(HttpGetMethod@GetData+1)& (0+255),w,b
 32038  000A04  22DA               	addwfc	fsr2h,f,c
 32039  000A06  CFDE F087          	movff	postinc2,StringCopy@DestStr
 32040  000A0A  CFDD F088          	movff	postdec2,StringCopy@DestStr+1
 32041  000A0E  0E01               	movlw	1
 32042  000A10  6F8A               	movwf	(StringCopy@Len+1)& (0+255),b
 32043  000A12  0E90               	movlw	144
 32044  000A14  6F89               	movwf	StringCopy@Len& (0+255),b
 32045  000A16  EC60  F02C         	call	_StringCopy	;wreg free
 32046                           
 32047                           ;mdm_gsm_gprs_http.c: 468: ClearBuffer(RxBuffer,((UINT16)(400)));
 32048  000A1A  0E58               	movlw	low _RxBuffer
 32049  000A1C  0100               	movlb	0	; () banked
 32050  000A1E  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 32051  000A20  0E0C               	movlw	high _RxBuffer
 32052  000A22  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 32053  000A24  0E01               	movlw	1
 32054  000A26  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 32055  000A28  0E90               	movlw	144
 32056  000A2A  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 32057  000A2C  ECB3  F032         	call	_ClearBuffer	;wreg free
 32058                           
 32059                           ;mdm_gsm_gprs_http.c: 469: }
 32060                           ;mdm_gsm_gprs_http.c: 470: }
 32061  000A30  D042               	goto	l1255
 32062  000A32                     l1281:
 32063                           
 32064                           ;mdm_gsm_gprs_http.c: 471: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 32065  000A32  0EF3               	movlw	low _ConnTimeout
 32066  000A34  0100               	movlb	0	; () banked
 32067  000A36  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 32068  000A38  0E02               	movlw	high _ConnTimeout
 32069  000A3A  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 32070  000A3C  ECA9  F028         	call	_OsTmr_GetTimerStatus	;wreg free
 32071  000A40  D76D               	goto	L67
 32072  000A42                     
 32073                           ; BSR set to: 1
 32074                           ;mdm_gsm_gprs_http.c: 480: GetMethodState = GetM_Idle;
 32075                           
 32076                           ; BSR set to: 1
 32077  000A42  0E00               	movlw	0
 32078  000A44  6FE6               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 32079                           
 32080                           ;mdm_gsm_gprs_http.c: 482: GetMOutSts = GetMOut_Completed;
 32081  000A46  0E02               	movlw	2
 32082  000A48  D003               	goto	L69
 32083  000A4A                     
 32084                           ; BSR set to: 1
 32085                           ;mdm_gsm_gprs_http.c: 487: GetMethodState = GetM_Idle;
 32086                           
 32087                           ; BSR set to: 1
 32088  000A4A  0E00               	movlw	0
 32089  000A4C  6FE6               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 32090                           
 32091                           ;mdm_gsm_gprs_http.c: 489: GetMOutSts = GetMOut_Failed;
 32092  000A4E  0E03               	movlw	3
 32093  000A50                     L69:
 32094  000A50  6FE5               	movwf	HttpGetMethod@GetMOutSts& (0+255),b
 32095                           
 32096                           ; BSR set to: 1
 32097                           ;mdm_gsm_gprs_http.c: 494: }
 32098                           
 32099                           ; BSR set to: 1
 32100                           ;mdm_gsm_gprs_http.c: 493: break;
 32101                           
 32102                           ;mdm_gsm_gprs_http.c: 492: default:
 32103                           
 32104                           ;mdm_gsm_gprs_http.c: 490: break;
 32105  000A52  D031               	goto	l1255
 32106  000A54                     l1252:
 32107                           
 32108                           ; BSR set to: 1
 32109                           
 32110                           ; BSR set to: 1
 32111  000A54  51E6               	movf	HttpGetMethod@GetMethodState& (0+255),w,b
 32112                           
 32113                           ; Switch size 1, requested type "space"
 32114                           ; Number of cases is 16, Range of values is 0 to 15
 32115                           ; switch strategies available:
 32116                           ; Name         Instructions Cycles
 32117                           ; simple_byte           49    25 (average)
 32118                           ;	Chosen strategy is simple_byte
 32119  000A56  0A00               	xorlw	0	; case 0
 32120  000A58  B4D8               	btfsc	status,2,c
 32121  000A5A  D5CC               	goto	l1253
 32122  000A5C  0A01               	xorlw	1	; case 1
 32123  000A5E  B4D8               	btfsc	status,2,c
 32124  000A60  D5D5               	goto	l1256
 32125  000A62  0A03               	xorlw	3	; case 2
 32126  000A64  B4D8               	btfsc	status,2,c
 32127  000A66  D5EF               	goto	l1257
 32128  000A68  0A01               	xorlw	1	; case 3
 32129  000A6A  B4D8               	btfsc	status,2,c
 32130  000A6C  D609               	goto	l1258
 32131  000A6E  0A07               	xorlw	7	; case 4
 32132  000A70  B4D8               	btfsc	status,2,c
 32133  000A72  D623               	goto	l1259
 32134  000A74  0A01               	xorlw	1	; case 5
 32135  000A76  B4D8               	btfsc	status,2,c
 32136  000A78  D6BC               	goto	l1263
 32137  000A7A  0A03               	xorlw	3	; case 6
 32138  000A7C  B4D8               	btfsc	status,2,c
 32139  000A7E  D6D6               	goto	l1264
 32140  000A80  0A01               	xorlw	1	; case 7
 32141  000A82  B4D8               	btfsc	status,2,c
 32142  000A84  D752               	goto	l1272
 32143  000A86  0A0F               	xorlw	15	; case 8
 32144  000A88  B4D8               	btfsc	status,2,c
 32145  000A8A  D6E5               	goto	l1265
 32146  000A8C  0A01               	xorlw	1	; case 9
 32147  000A8E  B4D8               	btfsc	status,2,c
 32148  000A90  D6FF               	goto	l1266
 32149  000A92  0A03               	xorlw	3	; case 10
 32150  000A94  B4D8               	btfsc	status,2,c
 32151  000A96  D719               	goto	l1267
 32152  000A98  0A01               	xorlw	1	; case 11
 32153  000A9A  B4D8               	btfsc	status,2,c
 32154  000A9C  D770               	goto	l1277
 32155  000A9E  0A07               	xorlw	7	; case 12
 32156  000AA0  B4D8               	btfsc	status,2,c
 32157  000AA2  D783               	goto	l1278
 32158  000AA4  0A01               	xorlw	1	; case 13
 32159  000AA6  B4D8               	btfsc	status,2,c
 32160  000AA8  D78D               	goto	l1280
 32161  000AAA  0A03               	xorlw	3	; case 14
 32162  000AAC  B4D8               	btfsc	status,2,c
 32163  000AAE  D7C9               	goto	l1285
 32164  000AB0  0A01               	xorlw	1	; case 15
 32165  000AB2  B4D8               	btfsc	status,2,c
 32166  000AB4  D7CA               	goto	l1286
 32167  000AB6                     l1255:
 32168                           
 32169                           ;mdm_gsm_gprs_http.c: 496: return GetMOutSts;
 32170                           
 32171                           ; BSR set to: 1
 32172  000AB6  0101               	movlb	1	; () banked
 32173  000AB8  51E5               	movf	HttpGetMethod@GetMOutSts& (0+255),w,b
 32174  000ABA  0012               	return	
 32175  000ABC                     __end_of_HttpGetMethod:
 32176                           	opt stack 0
 32177                           tosu	equ	0xFFF
 32178                           tosh	equ	0xFFE
 32179                           tosl	equ	0xFFD
 32180                           pclath	equ	0xFFA
 32181                           tblptru	equ	0xFF8
 32182                           tblptrh	equ	0xFF7
 32183                           tblptrl	equ	0xFF6
 32184                           tablat	equ	0xFF5
 32185                           prodh	equ	0xFF4
 32186                           prodl	equ	0xFF3
 32187                           intcon	equ	0xFF2
 32188                           intcon2	equ	0xFF1
 32189                           intcon3	equ	0xFF0
 32190                           indf0	equ	0xFEF
 32191                           postinc0	equ	0xFEE
 32192                           plusw0	equ	0xFEB
 32193                           fsr0h	equ	0xFEA
 32194                           fsr0l	equ	0xFE9
 32195                           wreg	equ	0xFE8
 32196                           indf1	equ	0xFE7
 32197                           postinc1	equ	0xFE6
 32198                           postdec1	equ	0xFE5
 32199                           plusw1	equ	0xFE3
 32200                           fsr1h	equ	0xFE2
 32201                           fsr1l	equ	0xFE1
 32202                           indf2	equ	0xFDF
 32203                           postinc2	equ	0xFDE
 32204                           postdec2	equ	0xFDD
 32205                           plusw2	equ	0xFDB
 32206                           fsr2h	equ	0xFDA
 32207                           fsr2l	equ	0xFD9
 32208                           status	equ	0xFD8
 32209                           
 32210 ;; *************** function _Uart_WriteString *****************
 32211 ;; Defined at:
 32212 ;;		line 518 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 32213 ;; Parameters:    Size  Location     Type
 32214 ;;  Module          1    wreg     unsigned char 
 32215 ;;  StringToWrit    2   32[BANK0 ] PTR unsigned char 
 32216 ;;		 -> HttpGetMethod@UartMessage(200), InitGprsNetwork@UartMessage(50), Mdm_MakePhoneCall@UartMessage(25), Mdm_SetSmsFo
      +rmat@UartMessage(20), 
 32217 ;;		 -> Mdm_PinUnlock@UartMessage(13), 
 32218 ;; Auto vars:     Size  Location     Type
 32219 ;;  Module          1   34[BANK0 ] unsigned char 
 32220 ;; Return value:  Size  Location     Type
 32221 ;;                  1    wreg      void 
 32222 ;; Registers used:
 32223 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 32224 ;; Tracked objects:
 32225 ;;		On entry : 0/0
 32226 ;;		On exit  : 0/0
 32227 ;;		Unchanged: 0/0
 32228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32229 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32230 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32232 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32233 ;;Total ram usage:        3 bytes
 32234 ;; Hardware stack levels used:    1
 32235 ;; Hardware stack levels required when called:   12
 32236 ;; This function calls:
 32237 ;;		_UartTxBufferStatus
 32238 ;;		_UartWriteByte
 32239 ;; This function is called by:
 32240 ;;		_Mdm_SetSmsFormat
 32241 ;;		_InitGprsNetwork
 32242 ;;		_HttpGetMethod
 32243 ;;		_Mdm_PinUnlock
 32244 ;;		_Mdm_MakePhoneCall
 32245 ;; This function uses a non-reentrant model
 32246 ;;
 32247                           
 32248                           	psect	text146
 32249  0063D0                     __ptext146:
 32250                           	opt stack 0
 32251  0063D0                     _Uart_WriteString:
 32252                           	opt stack 12
 32253                           
 32254                           ; BSR set to: 1
 32255                           ;incstack = 0
 32256                           ;Uart_WriteString@Module stored from wreg
 32257  0063D0  0100               	movlb	0	; () banked
 32258  0063D2  6F82               	movwf	Uart_WriteString@Module& (0+255),b
 32259                           
 32260                           ;uart_drv.c: 521: while (*StringToWrite)
 32261  0063D4  D014               	goto	u12290
 32262  0063D6                     
 32263                           ;uart_drv.c: 522: {
 32264                           ;uart_drv.c: 524: UartWriteByte(Module, *StringToWrite);
 32265  0063D6  C080  FFD9         	movff	Uart_WriteString@StringToWrite,fsr2l
 32266  0063DA  C081  FFDA         	movff	Uart_WriteString@StringToWrite+1,fsr2h
 32267  0063DE  50DF               	movf	indf2,w,c
 32268  0063E0  0100               	movlb	0	; () banked
 32269  0063E2  6F7D               	movwf	UartWriteByte@ByteToWrite& (0+255),b
 32270  0063E4  5182               	movf	Uart_WriteString@Module& (0+255),w,b
 32271  0063E6  ECDD  F034         	call	_UartWriteByte
 32272                           
 32273                           ;uart_drv.c: 526: StringToWrite++;
 32274  0063EA  0100               	movlb	0	; () banked
 32275  0063EC  4B80               	infsnz	Uart_WriteString@StringToWrite& (0+255),f,b
 32276  0063EE  2B81               	incf	(Uart_WriteString@StringToWrite+1)& (0+255),f,b
 32277  0063F0                     
 32278                           ; BSR set to: 0
 32279                           
 32280                           ; BSR set to: 0
 32281  0063F0  0100               	movlb	0	; () banked
 32282  0063F2  5182               	movf	Uart_WriteString@Module& (0+255),w,b
 32283  0063F4  ECBB  F02F         	call	_UartTxBufferStatus
 32284  0063F8  06E8               	decf	wreg,f,c
 32285  0063FA  B4D8               	btfsc	status,2,c
 32286  0063FC  D7F9               	goto	l709
 32287  0063FE                     u12290:
 32288  0063FE  C080  FFD9         	movff	Uart_WriteString@StringToWrite,fsr2l
 32289  006402  C081  FFDA         	movff	Uart_WriteString@StringToWrite+1,fsr2h
 32290  006406  50DF               	movf	indf2,w,c
 32291  006408  B4D8               	btfsc	status,2,c
 32292  00640A  0012               	return	
 32293  00640C  D7E4               	goto	l707
 32294  00640E                     __end_of_Uart_WriteString:
 32295                           	opt stack 0
 32296                           tosu	equ	0xFFF
 32297                           tosh	equ	0xFFE
 32298                           tosl	equ	0xFFD
 32299                           pclath	equ	0xFFA
 32300                           tblptru	equ	0xFF8
 32301                           tblptrh	equ	0xFF7
 32302                           tblptrl	equ	0xFF6
 32303                           tablat	equ	0xFF5
 32304                           prodh	equ	0xFF4
 32305                           prodl	equ	0xFF3
 32306                           intcon	equ	0xFF2
 32307                           intcon2	equ	0xFF1
 32308                           intcon3	equ	0xFF0
 32309                           indf0	equ	0xFEF
 32310                           postinc0	equ	0xFEE
 32311                           plusw0	equ	0xFEB
 32312                           fsr0h	equ	0xFEA
 32313                           fsr0l	equ	0xFE9
 32314                           wreg	equ	0xFE8
 32315                           indf1	equ	0xFE7
 32316                           postinc1	equ	0xFE6
 32317                           postdec1	equ	0xFE5
 32318                           plusw1	equ	0xFE3
 32319                           fsr1h	equ	0xFE2
 32320                           fsr1l	equ	0xFE1
 32321                           indf2	equ	0xFDF
 32322                           postinc2	equ	0xFDE
 32323                           postdec2	equ	0xFDD
 32324                           plusw2	equ	0xFDB
 32325                           fsr2h	equ	0xFDA
 32326                           fsr2l	equ	0xFD9
 32327                           status	equ	0xFD8
 32328                           
 32329 ;; *************** function _Uart_WriteConstString *****************
 32330 ;; Defined at:
 32331 ;;		line 496 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 32332 ;; Parameters:    Size  Location     Type
 32333 ;;  Module          1    wreg     unsigned char 
 32334 ;;  ConstStringT    2   32[BANK0 ] PTR const unsigned char 
 32335 ;;		 -> STR_31(12), STR_30(19), STR_29(14), STR_20(14), 
 32336 ;;		 -> STR_19(14), STR_18(13), STR_17(13), STR_16(17), 
 32337 ;;		 -> STR_14(21), STR_13(14), STR_12(13), STR_11(14), 
 32338 ;;		 -> STR_10(14), STR_8(31), STR_7(5), STR_6(5), 
 32339 ;;		 -> STR_4(12), STR_3(7), STR_2(14), STR_1(5), 
 32340 ;; Auto vars:     Size  Location     Type
 32341 ;;  Module          1   34[BANK0 ] unsigned char 
 32342 ;; Return value:  Size  Location     Type
 32343 ;;                  1    wreg      void 
 32344 ;; Registers used:
 32345 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 32346 ;; Tracked objects:
 32347 ;;		On entry : 0/0
 32348 ;;		On exit  : 0/0
 32349 ;;		Unchanged: 0/0
 32350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32351 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32352 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32353 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32354 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32355 ;;Total ram usage:        3 bytes
 32356 ;; Hardware stack levels used:    1
 32357 ;; Hardware stack levels required when called:   12
 32358 ;; This function calls:
 32359 ;;		_UartTxBufferStatus
 32360 ;;		_UartWriteByte
 32361 ;; This function is called by:
 32362 ;;		_CheckModem
 32363 ;;		_ConfigureModem
 32364 ;;		_GetSmsSm
 32365 ;;		_Mdm_HangPhoneCall
 32366 ;;		_InitGprsNetwork
 32367 ;;		_HttpGetMethod
 32368 ;;		_detectCmd
 32369 ;;		_initGprsModem
 32370 ;;		_Mdm_GetPhoneCall
 32371 ;;		_MdmHttp_SetSsl
 32372 ;; This function uses a non-reentrant model
 32373 ;;
 32374                           
 32375                           	psect	text147
 32376  006290                     __ptext147:
 32377                           	opt stack 0
 32378  006290                     _Uart_WriteConstString:
 32379                           	opt stack 11
 32380                           
 32381                           ;incstack = 0
 32382                           ;Uart_WriteConstString@Module stored from wreg
 32383  006290  0100               	movlb	0	; () banked
 32384  006292  6F82               	movwf	Uart_WriteConstString@Module& (0+255),b
 32385                           
 32386                           ;uart_drv.c: 499: while (*ConstStringToWrite)
 32387  006294  D015               	goto	u11750
 32388  006296                     
 32389                           ;uart_drv.c: 500: {
 32390                           ;uart_drv.c: 502: UartWriteByte(Module, *ConstStringToWrite);
 32391  006296  C080  FFF6         	movff	Uart_WriteConstString@ConstStringToWrite,tblptrl
 32392  00629A  C081  FFF7         	movff	Uart_WriteConstString@ConstStringToWrite+1,tblptrh
 32393  00629E                     	if	0	;tblptru may be non-zero
 32394  00629E                     	endif
 32395  00629E                     	if	0	;tblptru may be non-zero
 32396  00629E                     	endif
 32397  00629E  0008               	tblrd		*
 32398  0062A0  CFF5 F07D          	movff	tablat,UartWriteByte@ByteToWrite
 32399  0062A4  0100               	movlb	0	; () banked
 32400  0062A6  5182               	movf	Uart_WriteConstString@Module& (0+255),w,b
 32401  0062A8  ECDD  F034         	call	_UartWriteByte
 32402                           
 32403                           ;uart_drv.c: 504: ConstStringToWrite++;
 32404  0062AC  0100               	movlb	0	; () banked
 32405  0062AE  4B80               	infsnz	Uart_WriteConstString@ConstStringToWrite& (0+255),f,b
 32406  0062B0  2B81               	incf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),f,b
 32407  0062B2                     
 32408                           ; BSR set to: 0
 32409                           
 32410                           ; BSR set to: 0
 32411  0062B2  0100               	movlb	0	; () banked
 32412  0062B4  5182               	movf	Uart_WriteConstString@Module& (0+255),w,b
 32413  0062B6  ECBB  F02F         	call	_UartTxBufferStatus
 32414  0062BA  06E8               	decf	wreg,f,c
 32415  0062BC  B4D8               	btfsc	status,2,c
 32416  0062BE  D7F9               	goto	l700
 32417  0062C0                     u11750:
 32418  0062C0  C080  FFF6         	movff	Uart_WriteConstString@ConstStringToWrite,tblptrl
 32419  0062C4  C081  FFF7         	movff	Uart_WriteConstString@ConstStringToWrite+1,tblptrh
 32420  0062C8                     	if	0	;tblptru may be non-zero
 32421  0062C8                     	endif
 32422  0062C8                     	if	0	;tblptru may be non-zero
 32423  0062C8                     	endif
 32424  0062C8  0008               	tblrd		*
 32425  0062CA  50F5               	movf	tablat,w,c
 32426  0062CC  0900               	iorlw	0
 32427  0062CE  B4D8               	btfsc	status,2,c
 32428  0062D0  0012               	return	
 32429  0062D2  D7E1               	goto	l698
 32430  0062D4                     __end_of_Uart_WriteConstString:
 32431                           	opt stack 0
 32432                           tosu	equ	0xFFF
 32433                           tosh	equ	0xFFE
 32434                           tosl	equ	0xFFD
 32435                           pclath	equ	0xFFA
 32436                           tblptru	equ	0xFF8
 32437                           tblptrh	equ	0xFF7
 32438                           tblptrl	equ	0xFF6
 32439                           tablat	equ	0xFF5
 32440                           prodh	equ	0xFF4
 32441                           prodl	equ	0xFF3
 32442                           intcon	equ	0xFF2
 32443                           intcon2	equ	0xFF1
 32444                           intcon3	equ	0xFF0
 32445                           indf0	equ	0xFEF
 32446                           postinc0	equ	0xFEE
 32447                           plusw0	equ	0xFEB
 32448                           fsr0h	equ	0xFEA
 32449                           fsr0l	equ	0xFE9
 32450                           wreg	equ	0xFE8
 32451                           indf1	equ	0xFE7
 32452                           postinc1	equ	0xFE6
 32453                           postdec1	equ	0xFE5
 32454                           plusw1	equ	0xFE3
 32455                           fsr1h	equ	0xFE2
 32456                           fsr1l	equ	0xFE1
 32457                           indf2	equ	0xFDF
 32458                           postinc2	equ	0xFDE
 32459                           postdec2	equ	0xFDD
 32460                           plusw2	equ	0xFDB
 32461                           fsr2h	equ	0xFDA
 32462                           fsr2l	equ	0xFD9
 32463                           status	equ	0xFD8
 32464                           
 32465 ;; *************** function _UartWriteByte *****************
 32466 ;; Defined at:
 32467 ;;		line 173 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 32468 ;; Parameters:    Size  Location     Type
 32469 ;;  Module          1    wreg     unsigned char 
 32470 ;;  ByteToWrite     1   29[BANK0 ] unsigned char 
 32471 ;; Auto vars:     Size  Location     Type
 32472 ;;  Module          1   30[BANK0 ] unsigned char 
 32473 ;; Return value:  Size  Location     Type
 32474 ;;                  1    wreg      void 
 32475 ;; Registers used:
 32476 ;;		wreg, status,2, status,0
 32477 ;; Tracked objects:
 32478 ;;		On entry : 0/0
 32479 ;;		On exit  : 0/0
 32480 ;;		Unchanged: 0/0
 32481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32482 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32483 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32484 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32485 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32486 ;;Total ram usage:        2 bytes
 32487 ;; Hardware stack levels used:    1
 32488 ;; Hardware stack levels required when called:   11
 32489 ;; This function calls:
 32490 ;;		Nothing
 32491 ;; This function is called by:
 32492 ;;		_Uart_WriteConstString
 32493 ;;		_Uart_WriteString
 32494 ;;		_Uart_WriteStringLen
 32495 ;; This function uses a non-reentrant model
 32496 ;;
 32497                           
 32498                           	psect	text148
 32499  0069BA                     __ptext148:
 32500                           	opt stack 0
 32501  0069BA                     _UartWriteByte:
 32502                           	opt stack 11
 32503                           
 32504                           ;incstack = 0
 32505                           ;UartWriteByte@Module stored from wreg
 32506  0069BA  0100               	movlb	0	; () banked
 32507  0069BC  6F7E               	movwf	UartWriteByte@Module& (0+255),b
 32508                           
 32509                           ;uart_drv.c: 175: if (Module == ((UINT8)(1)))
 32510  0069BE  0100               	movlb	0	; () banked
 32511  0069C0  057E               	decf	UartWriteByte@Module& (0+255),w,b
 32512  0069C2  A4D8               	btfss	status,2,c
 32513  0069C4  D003               	goto	l639
 32514                           
 32515                           ; BSR set to: 0
 32516                           ;uart_drv.c: 176: {
 32517                           ;uart_drv.c: 178: TXREG1 = ByteToWrite;
 32518  0069C6  C07D  FFAE         	movff	UartWriteByte@ByteToWrite,4014	;volatile
 32519                           
 32520                           ;uart_drv.c: 179: }
 32521  0069CA  0012               	return	
 32522  0069CC                     l639:
 32523                           
 32524                           ; BSR set to: 0
 32525                           ;uart_drv.c: 180: else if (Module == ((UINT8)(2)))
 32526                           
 32527                           ; BSR set to: 0
 32528  0069CC  0E02               	movlw	2
 32529  0069CE  197E               	xorwf	UartWriteByte@Module& (0+255),w,b
 32530  0069D0  A4D8               	btfss	status,2,c
 32531  0069D2  0012               	return	
 32532                           
 32533                           ; BSR set to: 0
 32534                           ;uart_drv.c: 181: {
 32535                           ;uart_drv.c: 183: TXREG2 = ByteToWrite;
 32536  0069D4  C07D  FFA9         	movff	UartWriteByte@ByteToWrite,4009	;volatile
 32537                           
 32538                           ; BSR set to: 0
 32539  0069D8  0012               	return	
 32540  0069DA                     __end_of_UartWriteByte:
 32541                           	opt stack 0
 32542                           tosu	equ	0xFFF
 32543                           tosh	equ	0xFFE
 32544                           tosl	equ	0xFFD
 32545                           pclath	equ	0xFFA
 32546                           tblptru	equ	0xFF8
 32547                           tblptrh	equ	0xFF7
 32548                           tblptrl	equ	0xFF6
 32549                           tablat	equ	0xFF5
 32550                           prodh	equ	0xFF4
 32551                           prodl	equ	0xFF3
 32552                           intcon	equ	0xFF2
 32553                           intcon2	equ	0xFF1
 32554                           intcon3	equ	0xFF0
 32555                           indf0	equ	0xFEF
 32556                           postinc0	equ	0xFEE
 32557                           plusw0	equ	0xFEB
 32558                           fsr0h	equ	0xFEA
 32559                           fsr0l	equ	0xFE9
 32560                           wreg	equ	0xFE8
 32561                           indf1	equ	0xFE7
 32562                           postinc1	equ	0xFE6
 32563                           postdec1	equ	0xFE5
 32564                           plusw1	equ	0xFE3
 32565                           fsr1h	equ	0xFE2
 32566                           fsr1l	equ	0xFE1
 32567                           indf2	equ	0xFDF
 32568                           postinc2	equ	0xFDE
 32569                           postdec2	equ	0xFDD
 32570                           plusw2	equ	0xFDB
 32571                           fsr2h	equ	0xFDA
 32572                           fsr2l	equ	0xFD9
 32573                           status	equ	0xFD8
 32574                           
 32575 ;; *************** function _UartTxBufferStatus *****************
 32576 ;; Defined at:
 32577 ;;		line 223 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 32578 ;; Parameters:    Size  Location     Type
 32579 ;;  Module          1    wreg     unsigned char 
 32580 ;; Auto vars:     Size  Location     Type
 32581 ;;  Module          1   30[BANK0 ] unsigned char 
 32582 ;;  TxBufferStat    1   31[BANK0 ] enum E9037
 32583 ;; Return value:  Size  Location     Type
 32584 ;;                  1    wreg      enum E9037
 32585 ;; Registers used:
 32586 ;;		wreg, status,2, status,0
 32587 ;; Tracked objects:
 32588 ;;		On entry : 0/0
 32589 ;;		On exit  : 0/0
 32590 ;;		Unchanged: 0/0
 32591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32592 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32593 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32594 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32595 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32596 ;;Total ram usage:        3 bytes
 32597 ;; Hardware stack levels used:    1
 32598 ;; Hardware stack levels required when called:   11
 32599 ;; This function calls:
 32600 ;;		Nothing
 32601 ;; This function is called by:
 32602 ;;		_Uart_WriteConstString
 32603 ;;		_Uart_WriteString
 32604 ;;		_Uart_WriteStringLen
 32605 ;; This function uses a non-reentrant model
 32606 ;;
 32607                           
 32608                           	psect	text149
 32609  005F76                     __ptext149:
 32610                           	opt stack 0
 32611  005F76                     _UartTxBufferStatus:
 32612                           	opt stack 11
 32613                           
 32614                           ; BSR set to: 0
 32615                           ;incstack = 0
 32616                           ;UartTxBufferStatus@Module stored from wreg
 32617  005F76  0100               	movlb	0	; () banked
 32618  005F78  6F7E               	movwf	UartTxBufferStatus@Module& (0+255),b
 32619                           
 32620                           ;uart_drv.c: 225: TxBufferStatusType TxBufferStatus = TxBufferNotFull;
 32621  005F7A  0E00               	movlw	0
 32622  005F7C  0100               	movlb	0	; () banked
 32623  005F7E  6F7F               	movwf	UartTxBufferStatus@TxBufferStatus& (0+255),b
 32624                           
 32625                           ; BSR set to: 0
 32626                           ;uart_drv.c: 227: if (Module == ((UINT8)(1)))
 32627  005F80  057E               	decf	UartTxBufferStatus@Module& (0+255),w,b
 32628  005F82  A4D8               	btfss	status,2,c
 32629  005F84  D00B               	goto	l651
 32630                           
 32631                           ; BSR set to: 0
 32632                           ;uart_drv.c: 228: {
 32633                           ;uart_drv.c: 230: if (((TXSTA1 >> ((UINT8)(1))) & ((UINT8)(0x01))) == ((UINT8)(0)))
 32634  005F86  CFAD F07D          	movff	4013,??_UartTxBufferStatus	;volatile
 32635  005F8A  90D8               	bcf	status,0,c
 32636  005F8C  337D               	rrcf	??_UartTxBufferStatus& (0+255),f,b
 32637  005F8E  B17D               	btfsc	??_UartTxBufferStatus& (0+255),0,b
 32638  005F90  D002               	goto	l652
 32639  005F92                     u11590:
 32640                           
 32641                           ; BSR set to: 0
 32642                           ;uart_drv.c: 231: {
 32643                           ;uart_drv.c: 232: TxBufferStatus = TxBufferFull;
 32644  005F92  0E01               	movlw	1
 32645  005F94  D014               	goto	L72
 32646  005F96                     l652:
 32647                           
 32648                           ; BSR set to: 0
 32649                           ;uart_drv.c: 234: else if (((TXSTA1 >> ((UINT8)(1))) & ((UINT8)(0x01))) == ((UINT8)(1)))
 32650                           
 32651                           ; BSR set to: 0
 32652  005F96  CFAD F07D          	movff	4013,??_UartTxBufferStatus	;volatile
 32653  005F9A  D00C               	goto	L102
 32654  005F9C                     l651:
 32655                           
 32656                           ; BSR set to: 0
 32657                           ;uart_drv.c: 243: else if (Module == ((UINT8)(2)))
 32658                           
 32659                           ; BSR set to: 0
 32660  005F9C  0E02               	movlw	2
 32661  005F9E  197E               	xorwf	UartTxBufferStatus@Module& (0+255),w,b
 32662  005FA0  A4D8               	btfss	status,2,c
 32663  005FA2  D00E               	goto	l660
 32664                           
 32665                           ; BSR set to: 0
 32666                           ;uart_drv.c: 244: {
 32667                           ;uart_drv.c: 246: if (((TXSTA2 >> ((UINT8)(1))) & ((UINT8)(0x01))) == ((UINT8)(0)))
 32668  005FA4  CFA8 F07D          	movff	4008,??_UartTxBufferStatus	;volatile
 32669  005FA8  90D8               	bcf	status,0,c
 32670  005FAA  337D               	rrcf	??_UartTxBufferStatus& (0+255),f,b
 32671  005FAC  A17D               	btfss	??_UartTxBufferStatus& (0+255),0,b
 32672  005FAE  D7F1               	goto	u11590
 32673                           
 32674                           ; BSR set to: 0
 32675                           ;uart_drv.c: 250: else if (((TXSTA2 >> ((UINT8)(1))) & ((UINT8)(0x01))) == ((UINT8)(1)))
 32676                           
 32677                           ; BSR set to: 0
 32678                           
 32679                           ;uart_drv.c: 249: }
 32680                           
 32681                           ; BSR set to: 0
 32682                           ;uart_drv.c: 247: {
 32683                           ;uart_drv.c: 248: TxBufferStatus = TxBufferFull;
 32684  005FB0  CFA8 F07D          	movff	4008,??_UartTxBufferStatus	;volatile
 32685  005FB4                     L102:
 32686  005FB4  90D8               	bcf	status,0,c
 32687  005FB6  337D               	rrcf	??_UartTxBufferStatus& (0+255),f,b
 32688  005FB8  A17D               	btfss	??_UartTxBufferStatus& (0+255),0,b
 32689  005FBA  D002               	goto	l660
 32690                           
 32691                           ; BSR set to: 0
 32692                           ;uart_drv.c: 251: {
 32693                           ;uart_drv.c: 252: TxBufferStatus = TxBufferEmpty;
 32694  005FBC  0E02               	movlw	2
 32695  005FBE                     L72:
 32696  005FBE  6F7F               	movwf	UartTxBufferStatus@TxBufferStatus& (0+255),b
 32697  005FC0                     l660:
 32698                           
 32699                           ; BSR set to: 0
 32700                           ;uart_drv.c: 257: }
 32701                           ;uart_drv.c: 258: }
 32702                           ;uart_drv.c: 260: return TxBufferStatus;
 32703                           
 32704                           ; BSR set to: 0
 32705                           
 32706                           ; BSR set to: 0
 32707                           
 32708                           ; BSR set to: 0
 32709                           
 32710                           ; BSR set to: 0
 32711                           
 32712                           ;uart_drv.c: 254: else
 32713                           ;uart_drv.c: 255: {
 32714                           
 32715                           ; BSR set to: 0
 32716  005FC0  517F               	movf	UartTxBufferStatus@TxBufferStatus& (0+255),w,b
 32717  005FC2  0012               	return	
 32718  005FC4                     __end_of_UartTxBufferStatus:
 32719                           	opt stack 0
 32720                           tosu	equ	0xFFF
 32721                           tosh	equ	0xFFE
 32722                           tosl	equ	0xFFD
 32723                           pclath	equ	0xFFA
 32724                           tblptru	equ	0xFF8
 32725                           tblptrh	equ	0xFF7
 32726                           tblptrl	equ	0xFF6
 32727                           tablat	equ	0xFF5
 32728                           prodh	equ	0xFF4
 32729                           prodl	equ	0xFF3
 32730                           intcon	equ	0xFF2
 32731                           intcon2	equ	0xFF1
 32732                           intcon3	equ	0xFF0
 32733                           indf0	equ	0xFEF
 32734                           postinc0	equ	0xFEE
 32735                           plusw0	equ	0xFEB
 32736                           fsr0h	equ	0xFEA
 32737                           fsr0l	equ	0xFE9
 32738                           wreg	equ	0xFE8
 32739                           indf1	equ	0xFE7
 32740                           postinc1	equ	0xFE6
 32741                           postdec1	equ	0xFE5
 32742                           plusw1	equ	0xFE3
 32743                           fsr1h	equ	0xFE2
 32744                           fsr1l	equ	0xFE1
 32745                           indf2	equ	0xFDF
 32746                           postinc2	equ	0xFDE
 32747                           postdec2	equ	0xFDD
 32748                           plusw2	equ	0xFDB
 32749                           fsr2h	equ	0xFDA
 32750                           fsr2l	equ	0xFD9
 32751                           status	equ	0xFD8
 32752                           
 32753 ;; *************** function _StringCopy *****************
 32754 ;; Defined at:
 32755 ;;		line 104 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/sf.c"
 32756 ;; Parameters:    Size  Location     Type
 32757 ;;  SourceStr       2   37[BANK0 ] PTR unsigned char 
 32758 ;;		 -> delCmdFsm@emptyNumber(13), memoryPreamble(4), smsText(20), STR_15(20), 
 32759 ;;		 -> STR_9(21), MessageText(50), PhoneNumber(20), STR_5(10), 
 32760 ;;		 -> Mdm_SmsRx.HeaderBuffer(80), Mdm_SmsRx(102), callerNumber(13), RxBuffer(400), 
 32761 ;;  DestStr         2   39[BANK0 ] PTR unsigned char 
 32762 ;;		 -> receivedNumber(13), smsText(20), EepromBuffer(15), HttpGetMethod@UartMessage(200), 
 32763 ;;		 -> InitGprsNetwork@UartMessage(50), MessageText(50), PhoneNumber(20), SendSmsSm@UartMessage(50), 
 32764 ;;		 -> Mdm_SmsRx(102), callerNumber(13), 
 32765 ;;  Len             2   41[BANK0 ] unsigned short 
 32766 ;; Auto vars:     Size  Location     Type
 32767 ;;  Index           2   45[BANK0 ] unsigned short 
 32768 ;; Return value:  Size  Location     Type
 32769 ;;                  1    wreg      void 
 32770 ;; Registers used:
 32771 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 32772 ;; Tracked objects:
 32773 ;;		On entry : 0/0
 32774 ;;		On exit  : 0/0
 32775 ;;		Unchanged: 0/0
 32776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32777 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32778 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32779 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32780 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32781 ;;Total ram usage:       10 bytes
 32782 ;; Hardware stack levels used:    1
 32783 ;; Hardware stack levels required when called:   11
 32784 ;; This function calls:
 32785 ;;		Nothing
 32786 ;; This function is called by:
 32787 ;;		_ModemEvtParser
 32788 ;;		_GetSmsSm
 32789 ;;		_SendSmsSm
 32790 ;;		_Mdm_GetSmsData
 32791 ;;		_InitGprsNetwork
 32792 ;;		_HttpGetMethod
 32793 ;;		_Eeprom_Write
 32794 ;;		_detectCmd
 32795 ;;		_Mdm_SendSmsData
 32796 ;; This function uses a non-reentrant model
 32797 ;;
 32798                           
 32799                           	psect	text150
 32800  0058C0                     __ptext150:
 32801                           	opt stack 0
 32802  0058C0                     _StringCopy:
 32803                           	opt stack 13
 32804                           
 32805                           ;sf.c: 106: UINT16 Index = 0;
 32806                           
 32807                           ; BSR set to: 0
 32808                           ;incstack = 0
 32809  0058C0  0E00               	movlw	0
 32810  0058C2  0100               	movlb	0	; () banked
 32811  0058C4  6F8E               	movwf	(StringCopy@Index+1)& (0+255),b
 32812  0058C6  0E00               	movlw	0
 32813  0058C8  6F8D               	movwf	StringCopy@Index& (0+255),b
 32814                           
 32815                           ;sf.c: 109: for (Index = 0; Index < Len; Index++)
 32816  0058CA  0E00               	movlw	0
 32817  0058CC  6F8E               	movwf	(StringCopy@Index+1)& (0+255),b
 32818  0058CE  0E00               	movlw	0
 32819  0058D0  6F8D               	movwf	StringCopy@Index& (0+255),b
 32820  0058D2  D020               	goto	l2256
 32821  0058D4                     
 32822                           ; BSR set to: 0
 32823                           ;sf.c: 110: {
 32824                           ;sf.c: 111: DestStr[Index] = SourceStr[Index];
 32825                           
 32826                           ; BSR set to: 0
 32827  0058D4  518D               	movf	StringCopy@Index& (0+255),w,b
 32828  0058D6  2585               	addwf	StringCopy@SourceStr& (0+255),w,b
 32829  0058D8  6F8B               	movwf	??_StringCopy& (0+255),b
 32830  0058DA  518E               	movf	(StringCopy@Index+1)& (0+255),w,b
 32831  0058DC  2186               	addwfc	(StringCopy@SourceStr+1)& (0+255),w,b
 32832  0058DE  6F8C               	movwf	(??_StringCopy+1)& (0+255),b
 32833  0058E0  C08B  FFF6         	movff	??_StringCopy,tblptrl
 32834  0058E4  C08C  FFF7         	movff	??_StringCopy+1,tblptrh
 32835  0058E8  6AF8               	clrf	tblptru,c
 32836  0058EA  518D               	movf	StringCopy@Index& (0+255),w,b
 32837  0058EC  2587               	addwf	StringCopy@DestStr& (0+255),w,b
 32838  0058EE  6ED9               	movwf	fsr2l,c
 32839  0058F0  518E               	movf	(StringCopy@Index+1)& (0+255),w,b
 32840  0058F2  2188               	addwfc	(StringCopy@DestStr+1)& (0+255),w,b
 32841  0058F4  6EDA               	movwf	fsr2h,c
 32842  0058F6  0E0E               	movlw	(high __ramtop+-1)
 32843  0058F8  64F7               	cpfsgt	tblptrh,c
 32844  0058FA  D003               	bra	u12317
 32845  0058FC  0008               	tblrd		*
 32846  0058FE  50F5               	movf	tablat,w,c
 32847  005900  D005               	bra	u12310
 32848  005902                     u12317:
 32849  005902  CFF6 FFE9          	movff	tblptrl,fsr0l
 32850  005906  CFF7 FFEA          	movff	tblptrh,fsr0h
 32851  00590A  50EF               	movf	indf0,w,c
 32852  00590C                     u12310:
 32853  00590C  6EDF               	movwf	indf2,c
 32854  00590E  0100               	movlb	0	; () banked
 32855  005910  4B8D               	infsnz	StringCopy@Index& (0+255),f,b
 32856  005912  2B8E               	incf	(StringCopy@Index+1)& (0+255),f,b
 32857  005914                     l2256:
 32858                           
 32859                           ; BSR set to: 0
 32860                           
 32861                           ; BSR set to: 0
 32862  005914  5189               	movf	StringCopy@Len& (0+255),w,b
 32863  005916  5D8D               	subwf	StringCopy@Index& (0+255),w,b
 32864  005918  518A               	movf	(StringCopy@Len+1)& (0+255),w,b
 32865  00591A  598E               	subwfb	(StringCopy@Index+1)& (0+255),w,b
 32866  00591C  B0D8               	btfsc	status,0,c
 32867  00591E  0012               	return	
 32868  005920  D7D9               	goto	l2257
 32869  005922                     __end_of_StringCopy:
 32870                           	opt stack 0
 32871                           tosu	equ	0xFFF
 32872                           tosh	equ	0xFFE
 32873                           tosl	equ	0xFFD
 32874                           pclath	equ	0xFFA
 32875                           tblptru	equ	0xFF8
 32876                           tblptrh	equ	0xFF7
 32877                           tblptrl	equ	0xFF6
 32878                           tablat	equ	0xFF5
 32879                           prodh	equ	0xFF4
 32880                           prodl	equ	0xFF3
 32881                           intcon	equ	0xFF2
 32882                           intcon2	equ	0xFF1
 32883                           intcon3	equ	0xFF0
 32884                           indf0	equ	0xFEF
 32885                           postinc0	equ	0xFEE
 32886                           plusw0	equ	0xFEB
 32887                           fsr0h	equ	0xFEA
 32888                           fsr0l	equ	0xFE9
 32889                           wreg	equ	0xFE8
 32890                           indf1	equ	0xFE7
 32891                           postinc1	equ	0xFE6
 32892                           postdec1	equ	0xFE5
 32893                           plusw1	equ	0xFE3
 32894                           fsr1h	equ	0xFE2
 32895                           fsr1l	equ	0xFE1
 32896                           indf2	equ	0xFDF
 32897                           postinc2	equ	0xFDE
 32898                           postdec2	equ	0xFDD
 32899                           plusw2	equ	0xFDB
 32900                           fsr2h	equ	0xFDA
 32901                           fsr2l	equ	0xFD9
 32902                           status	equ	0xFD8
 32903                           
 32904 ;; *************** function _OsTmr_StartTimer *****************
 32905 ;; Defined at:
 32906 ;;		line 118 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 32907 ;; Parameters:    Size  Location     Type
 32908 ;;  Timer           2   33[BANK0 ] PTR struct _SwTimerType
 32909 ;;		 -> Term_MainSm@TermDelay(11), Terminal@SwTimer(11), I2cSlv_QueryI2cData@TimeoutTimer(11), I2cSlv_QueryI2cData@Query
      +Timer(11), 
 32910 ;;		 -> ConnWait(11), ConnTimeout(11), SendSmsSm@SwTimer(11), CheckModem@Timeout(11), 
 32911 ;;  Timeout         4   35[BANK0 ] unsigned long 
 32912 ;; Auto vars:     Size  Location     Type
 32913 ;;		None
 32914 ;; Return value:  Size  Location     Type
 32915 ;;                  1    wreg      void 
 32916 ;; Registers used:
 32917 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 32918 ;; Tracked objects:
 32919 ;;		On entry : 0/0
 32920 ;;		On exit  : 0/0
 32921 ;;		Unchanged: 0/0
 32922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32923 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32924 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32926 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32927 ;;Total ram usage:        6 bytes
 32928 ;; Hardware stack levels used:    1
 32929 ;; Hardware stack levels required when called:   12
 32930 ;; This function calls:
 32931 ;;		_GetOsTickCounter
 32932 ;; This function is called by:
 32933 ;;		_OsTmr_Wait
 32934 ;;		_CheckModem
 32935 ;;		_SendSmsSm
 32936 ;;		_InitGprsNetwork
 32937 ;;		_HttpGetMethod
 32938 ;;		_I2cSlv_QueryI2cData
 32939 ;;		_Term_MainSm
 32940 ;; This function uses a non-reentrant model
 32941 ;;
 32942                           
 32943                           	psect	text151
 32944  005980                     __ptext151:
 32945                           	opt stack 0
 32946  005980                     _OsTmr_StartTimer:
 32947                           	opt stack 12
 32948                           
 32949                           ;os_timers.c: 121: Timer->Status = SwTmrNotExpired;
 32950                           
 32951                           ; BSR set to: 0
 32952                           ;incstack = 0
 32953  005980  0100               	movlb	0	; () banked
 32954  005982  EE20 F001          	lfsr	2,1
 32955  005986  5181               	movf	OsTmr_StartTimer@Timer& (0+255),w,b
 32956  005988  26D9               	addwf	fsr2l,f,c
 32957  00598A  5182               	movf	(OsTmr_StartTimer@Timer+1)& (0+255),w,b
 32958  00598C  22DA               	addwfc	fsr2h,f,c
 32959  00598E  0E00               	movlw	0
 32960  005990  6EDF               	movwf	indf2,c
 32961                           
 32962                           ; BSR set to: 0
 32963                           ;os_timers.c: 123: Timer->StartTime = GetOsTickCounter();
 32964  005992  ECD6  F035         	call	_GetOsTickCounter	;wreg free
 32965  005996  0100               	movlb	0	; () banked
 32966  005998  EE20 F002          	lfsr	2,2
 32967  00599C  5181               	movf	OsTmr_StartTimer@Timer& (0+255),w,b
 32968  00599E  26D9               	addwf	fsr2l,f,c
 32969  0059A0  5182               	movf	(OsTmr_StartTimer@Timer+1)& (0+255),w,b
 32970  0059A2  22DA               	addwfc	fsr2h,f,c
 32971  0059A4  C07D  FFDE         	movff	?_GetOsTickCounter,postinc2
 32972  0059A8  C07E  FFDE         	movff	?_GetOsTickCounter+1,postinc2
 32973  0059AC  C07F  FFDE         	movff	?_GetOsTickCounter+2,postinc2
 32974  0059B0  C080  FFDE         	movff	?_GetOsTickCounter+3,postinc2
 32975                           
 32976                           ; BSR set to: 0
 32977                           ;os_timers.c: 125: Timer->TargetTime = Timeout;
 32978  0059B4  EE20 F006          	lfsr	2,6
 32979  0059B8  5181               	movf	OsTmr_StartTimer@Timer& (0+255),w,b
 32980  0059BA  26D9               	addwf	fsr2l,f,c
 32981  0059BC  5182               	movf	(OsTmr_StartTimer@Timer+1)& (0+255),w,b
 32982  0059BE  22DA               	addwfc	fsr2h,f,c
 32983  0059C0  C083  FFDE         	movff	OsTmr_StartTimer@Timeout,postinc2
 32984  0059C4  C084  FFDE         	movff	OsTmr_StartTimer@Timeout+1,postinc2
 32985  0059C8  C085  FFDE         	movff	OsTmr_StartTimer@Timeout+2,postinc2
 32986  0059CC  C086  FFDE         	movff	OsTmr_StartTimer@Timeout+3,postinc2
 32987                           
 32988                           ; BSR set to: 0
 32989                           ;os_timers.c: 127: Timer->Enabled = 1u;
 32990  0059D0  C081  FFD9         	movff	OsTmr_StartTimer@Timer,fsr2l
 32991  0059D4  C082  FFDA         	movff	OsTmr_StartTimer@Timer+1,fsr2h
 32992  0059D8  0E01               	movlw	1
 32993  0059DA  6EDF               	movwf	indf2,c
 32994                           
 32995                           ; BSR set to: 0
 32996  0059DC  0012               	return		;funcret
 32997  0059DE                     __end_of_OsTmr_StartTimer:
 32998                           	opt stack 0
 32999                           tosu	equ	0xFFF
 33000                           tosh	equ	0xFFE
 33001                           tosl	equ	0xFFD
 33002                           pclath	equ	0xFFA
 33003                           tblptru	equ	0xFF8
 33004                           tblptrh	equ	0xFF7
 33005                           tblptrl	equ	0xFF6
 33006                           tablat	equ	0xFF5
 33007                           prodh	equ	0xFF4
 33008                           prodl	equ	0xFF3
 33009                           intcon	equ	0xFF2
 33010                           intcon2	equ	0xFF1
 33011                           intcon3	equ	0xFF0
 33012                           indf0	equ	0xFEF
 33013                           postinc0	equ	0xFEE
 33014                           plusw0	equ	0xFEB
 33015                           fsr0h	equ	0xFEA
 33016                           fsr0l	equ	0xFE9
 33017                           wreg	equ	0xFE8
 33018                           indf1	equ	0xFE7
 33019                           postinc1	equ	0xFE6
 33020                           postdec1	equ	0xFE5
 33021                           plusw1	equ	0xFE3
 33022                           fsr1h	equ	0xFE2
 33023                           fsr1l	equ	0xFE1
 33024                           indf2	equ	0xFDF
 33025                           postinc2	equ	0xFDE
 33026                           postdec2	equ	0xFDD
 33027                           plusw2	equ	0xFDB
 33028                           fsr2h	equ	0xFDA
 33029                           fsr2l	equ	0xFD9
 33030                           status	equ	0xFD8
 33031                           
 33032 ;; *************** function _OsTmr_GetTimerStatus *****************
 33033 ;; Defined at:
 33034 ;;		line 193 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 33035 ;; Parameters:    Size  Location     Type
 33036 ;;  Timer           2   53[BANK0 ] PTR struct _SwTimerType
 33037 ;;		 -> Term_MainSm@TermDelay(11), Terminal@SwTimer(11), I2cSlv_QueryI2cData@TimeoutTimer(11), I2cSlv_QueryI2cData@Query
      +Timer(11), 
 33038 ;;		 -> ConnWait(11), ConnTimeout(11), SendSmsSm@SwTimer(11), CheckModem@Timeout(11), 
 33039 ;; Auto vars:     Size  Location     Type
 33040 ;;		None
 33041 ;; Return value:  Size  Location     Type
 33042 ;;                  1    wreg      enum E7740
 33043 ;; Registers used:
 33044 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 33045 ;; Tracked objects:
 33046 ;;		On entry : 0/0
 33047 ;;		On exit  : 0/0
 33048 ;;		Unchanged: 0/0
 33049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33050 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33051 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33052 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33053 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33054 ;;Total ram usage:        6 bytes
 33055 ;; Hardware stack levels used:    1
 33056 ;; Hardware stack levels required when called:   13
 33057 ;; This function calls:
 33058 ;;		_GetElapsedTime
 33059 ;; This function is called by:
 33060 ;;		_OsTmr_Wait
 33061 ;;		_CheckModem
 33062 ;;		_SendSmsSm
 33063 ;;		_InitGprsNetwork
 33064 ;;		_HttpGetMethod
 33065 ;;		_I2cSlv_QueryI2cData
 33066 ;;		_Term_MainSm
 33067 ;; This function uses a non-reentrant model
 33068 ;;
 33069                           
 33070                           	psect	text152
 33071  005152                     __ptext152:
 33072                           	opt stack 0
 33073  005152                     _OsTmr_GetTimerStatus:
 33074                           	opt stack 11
 33075                           
 33076                           ;os_timers.c: 196: if (Timer->Enabled == 1u)
 33077                           
 33078                           ; BSR set to: 0
 33079                           ;incstack = 0
 33080  005152  C095  FFD9         	movff	OsTmr_GetTimerStatus@Timer,fsr2l
 33081  005156  C096  FFDA         	movff	OsTmr_GetTimerStatus@Timer+1,fsr2h
 33082  00515A  04DE               	decf	postinc2,w,c
 33083  00515C  A4D8               	btfss	status,2,c
 33084  00515E  D030               	goto	l864
 33085                           
 33086                           ;os_timers.c: 197: {
 33087                           ;os_timers.c: 199: if (GetElapsedTime(Timer->StartTime) >= Timer->TargetTime)
 33088  005160  0100               	movlb	0	; () banked
 33089  005162  EE20 F006          	lfsr	2,6
 33090  005166  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 33091  005168  26D9               	addwf	fsr2l,f,c
 33092  00516A  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 33093  00516C  22DA               	addwfc	fsr2h,f,c
 33094  00516E  EE10 F002          	lfsr	1,2
 33095  005172  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 33096  005174  26E1               	addwf	fsr1l,f,c
 33097  005176  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 33098  005178  22E2               	addwfc	fsr1h,f,c
 33099  00517A  CFE6 F081          	movff	postinc1,GetElapsedTime@StartTime
 33100  00517E  CFE6 F082          	movff	postinc1,GetElapsedTime@StartTime+1
 33101  005182  CFE6 F083          	movff	postinc1,GetElapsedTime@StartTime+2
 33102  005186  CFE6 F084          	movff	postinc1,GetElapsedTime@StartTime+3
 33103  00518A  EC79  F020         	call	_GetElapsedTime	;wreg free
 33104  00518E  50DE               	movf	postinc2,w,c
 33105  005190  0100               	movlb	0	; () banked
 33106  005192  5D81               	subwf	?_GetElapsedTime& (0+255),w,b
 33107  005194  50DE               	movf	postinc2,w,c
 33108  005196  5982               	subwfb	(?_GetElapsedTime+1)& (0+255),w,b
 33109  005198  50DE               	movf	postinc2,w,c
 33110  00519A  5983               	subwfb	(?_GetElapsedTime+2)& (0+255),w,b
 33111  00519C  50DE               	movf	postinc2,w,c
 33112  00519E  5984               	subwfb	(?_GetElapsedTime+3)& (0+255),w,b
 33113  0051A0  A0D8               	btfss	status,0,c
 33114  0051A2  D017               	goto	l867
 33115                           
 33116                           ; BSR set to: 0
 33117                           ;os_timers.c: 200: {
 33118                           ;os_timers.c: 202: Timer->Enabled = 0u;
 33119  0051A4  C095  FFD9         	movff	OsTmr_GetTimerStatus@Timer,fsr2l
 33120  0051A8  C096  FFDA         	movff	OsTmr_GetTimerStatus@Timer+1,fsr2h
 33121  0051AC  0E00               	movlw	0
 33122  0051AE  6EDF               	movwf	indf2,c
 33123                           
 33124                           ; BSR set to: 0
 33125                           ;os_timers.c: 204: Timer->Status = SwTimerExpired;
 33126  0051B0  EE20 F001          	lfsr	2,1
 33127  0051B4  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 33128  0051B6  26D9               	addwf	fsr2l,f,c
 33129  0051B8  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 33130  0051BA  22DA               	addwfc	fsr2h,f,c
 33131  0051BC  0E01               	movlw	1
 33132  0051BE  D008               	goto	L103
 33133  0051C0                     l864:
 33134                           
 33135                           ;os_timers.c: 211: else
 33136                           ;os_timers.c: 212: {
 33137                           ;os_timers.c: 214: Timer->Status = SwTimerDisabled;
 33138                           
 33139                           ; BSR set to: 0
 33140  0051C0  0100               	movlb	0	; () banked
 33141  0051C2  EE20 F001          	lfsr	2,1
 33142  0051C6  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 33143  0051C8  26D9               	addwf	fsr2l,f,c
 33144  0051CA  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 33145  0051CC  22DA               	addwfc	fsr2h,f,c
 33146  0051CE  0E02               	movlw	2
 33147  0051D0                     L103:
 33148  0051D0  6EDF               	movwf	indf2,c
 33149  0051D2                     l867:
 33150                           
 33151                           ; BSR set to: 0
 33152                           ;os_timers.c: 215: }
 33153                           ;os_timers.c: 218: return Timer->Status;
 33154  0051D2  EE20 F001          	lfsr	2,1
 33155  0051D6  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 33156  0051D8  26D9               	addwf	fsr2l,f,c
 33157  0051DA  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 33158  0051DC  22DA               	addwfc	fsr2h,f,c
 33159  0051DE  50DF               	movf	indf2,w,c
 33160  0051E0  0012               	return	
 33161  0051E2                     __end_of_OsTmr_GetTimerStatus:
 33162                           	opt stack 0
 33163                           tosu	equ	0xFFF
 33164                           tosh	equ	0xFFE
 33165                           tosl	equ	0xFFD
 33166                           pclath	equ	0xFFA
 33167                           tblptru	equ	0xFF8
 33168                           tblptrh	equ	0xFF7
 33169                           tblptrl	equ	0xFF6
 33170                           tablat	equ	0xFF5
 33171                           prodh	equ	0xFF4
 33172                           prodl	equ	0xFF3
 33173                           intcon	equ	0xFF2
 33174                           intcon2	equ	0xFF1
 33175                           intcon3	equ	0xFF0
 33176                           indf0	equ	0xFEF
 33177                           postinc0	equ	0xFEE
 33178                           plusw0	equ	0xFEB
 33179                           fsr0h	equ	0xFEA
 33180                           fsr0l	equ	0xFE9
 33181                           wreg	equ	0xFE8
 33182                           indf1	equ	0xFE7
 33183                           postinc1	equ	0xFE6
 33184                           postdec1	equ	0xFE5
 33185                           plusw1	equ	0xFE3
 33186                           fsr1h	equ	0xFE2
 33187                           fsr1l	equ	0xFE1
 33188                           indf2	equ	0xFDF
 33189                           postinc2	equ	0xFDE
 33190                           postdec2	equ	0xFDD
 33191                           plusw2	equ	0xFDB
 33192                           fsr2h	equ	0xFDA
 33193                           fsr2l	equ	0xFD9
 33194                           status	equ	0xFD8
 33195                           
 33196 ;; *************** function _GetElapsedTime *****************
 33197 ;; Defined at:
 33198 ;;		line 84 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 33199 ;; Parameters:    Size  Location     Type
 33200 ;;  StartTime       4   33[BANK0 ] unsigned long 
 33201 ;; Auto vars:     Size  Location     Type
 33202 ;;  CurrentTimes    4   49[BANK0 ] unsigned long 
 33203 ;;  TimeValue       4   45[BANK0 ] unsigned long 
 33204 ;; Return value:  Size  Location     Type
 33205 ;;                  4   33[BANK0 ] unsigned long 
 33206 ;; Registers used:
 33207 ;;		wreg, status,2, status,0, cstack
 33208 ;; Tracked objects:
 33209 ;;		On entry : 0/0
 33210 ;;		On exit  : 0/0
 33211 ;;		Unchanged: 0/0
 33212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33213 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33214 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33215 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33216 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33217 ;;Total ram usage:       20 bytes
 33218 ;; Hardware stack levels used:    1
 33219 ;; Hardware stack levels required when called:   12
 33220 ;; This function calls:
 33221 ;;		_GetOsTickCounter
 33222 ;; This function is called by:
 33223 ;;		_OsTmr_GetTimerStatus
 33224 ;;		_OsTmr_GetRemainingTime
 33225 ;; This function uses a non-reentrant model
 33226 ;;
 33227                           
 33228                           	psect	text153
 33229  0040F2                     __ptext153:
 33230                           	opt stack 0
 33231  0040F2                     _GetElapsedTime:
 33232                           	opt stack 11
 33233                           
 33234                           ;os_timers.c: 86: UINT32 CurrentTimestamp;
 33235                           ;os_timers.c: 87: UINT32 TimeValue;
 33236                           ;os_timers.c: 90: CurrentTimestamp = GetOsTickCounter();
 33237                           
 33238                           ; BSR set to: 0
 33239                           ;incstack = 0
 33240  0040F2  ECD6  F035         	call	_GetOsTickCounter	;wreg free
 33241  0040F6  C07D  F091         	movff	?_GetOsTickCounter,GetElapsedTime@CurrentTimestamp
 33242  0040FA  C07E  F092         	movff	?_GetOsTickCounter+1,GetElapsedTime@CurrentTimestamp+1
 33243  0040FE  C07F  F093         	movff	?_GetOsTickCounter+2,GetElapsedTime@CurrentTimestamp+2
 33244  004102  C080  F094         	movff	?_GetOsTickCounter+3,GetElapsedTime@CurrentTimestamp+3
 33245                           
 33246                           ;os_timers.c: 93: if (CurrentTimestamp >= StartTime)
 33247  004106  0100               	movlb	0	; () banked
 33248  004108  5181               	movf	GetElapsedTime@StartTime& (0+255),w,b
 33249  00410A  5D91               	subwf	GetElapsedTime@CurrentTimestamp& (0+255),w,b
 33250  00410C  5182               	movf	(GetElapsedTime@StartTime+1)& (0+255),w,b
 33251  00410E  5992               	subwfb	(GetElapsedTime@CurrentTimestamp+1)& (0+255),w,b
 33252  004110  5183               	movf	(GetElapsedTime@StartTime+2)& (0+255),w,b
 33253  004112  5993               	subwfb	(GetElapsedTime@CurrentTimestamp+2)& (0+255),w,b
 33254  004114  5184               	movf	(GetElapsedTime@StartTime+3)& (0+255),w,b
 33255  004116  5994               	subwfb	(GetElapsedTime@CurrentTimestamp+3)& (0+255),w,b
 33256  004118  A0D8               	btfss	status,0,c
 33257  00411A  D01D               	goto	l844
 33258                           
 33259                           ; BSR set to: 0
 33260                           ;os_timers.c: 94: {
 33261                           ;os_timers.c: 95: TimeValue = (CurrentTimestamp - StartTime);
 33262  00411C  C081  F085         	movff	GetElapsedTime@StartTime,??_GetElapsedTime
 33263  004120  C082  F086         	movff	GetElapsedTime@StartTime+1,??_GetElapsedTime+1
 33264  004124  C083  F087         	movff	GetElapsedTime@StartTime+2,??_GetElapsedTime+2
 33265  004128  C084  F088         	movff	GetElapsedTime@StartTime+3,??_GetElapsedTime+3
 33266  00412C  1F85               	comf	??_GetElapsedTime& (0+255),f,b
 33267  00412E  1F86               	comf	(??_GetElapsedTime+1)& (0+255),f,b
 33268  004130  1F87               	comf	(??_GetElapsedTime+2)& (0+255),f,b
 33269  004132  1F88               	comf	(??_GetElapsedTime+3)& (0+255),f,b
 33270  004134  2B85               	incf	??_GetElapsedTime& (0+255),f,b
 33271  004136  0E00               	movlw	0
 33272  004138  2386               	addwfc	(??_GetElapsedTime+1)& (0+255),f,b
 33273  00413A  2387               	addwfc	(??_GetElapsedTime+2)& (0+255),f,b
 33274  00413C  2388               	addwfc	(??_GetElapsedTime+3)& (0+255),f,b
 33275  00413E  5191               	movf	GetElapsedTime@CurrentTimestamp& (0+255),w,b
 33276  004140  2585               	addwf	??_GetElapsedTime& (0+255),w,b
 33277  004142  6F8D               	movwf	GetElapsedTime@TimeValue& (0+255),b
 33278  004144  5192               	movf	(GetElapsedTime@CurrentTimestamp+1)& (0+255),w,b
 33279  004146  2186               	addwfc	(??_GetElapsedTime+1)& (0+255),w,b
 33280  004148  6F8E               	movwf	(GetElapsedTime@TimeValue+1)& (0+255),b
 33281  00414A  5193               	movf	(GetElapsedTime@CurrentTimestamp+2)& (0+255),w,b
 33282  00414C  2187               	addwfc	(??_GetElapsedTime+2)& (0+255),w,b
 33283  00414E  6F8F               	movwf	(GetElapsedTime@TimeValue+2)& (0+255),b
 33284  004150  5194               	movf	(GetElapsedTime@CurrentTimestamp+3)& (0+255),w,b
 33285  004152  2188               	addwfc	(??_GetElapsedTime+3)& (0+255),w,b
 33286  004154  D028               	goto	L73
 33287  004156                     l844:
 33288                           
 33289                           ; BSR set to: 0
 33290                           ;os_timers.c: 97: else
 33291                           ;os_timers.c: 98: {
 33292                           ;os_timers.c: 99: TimeValue = (CurrentTimestamp + 0xFFFFFFFF) - StartTime;
 33293                           
 33294                           ; BSR set to: 0
 33295  004156  C081  F085         	movff	GetElapsedTime@StartTime,??_GetElapsedTime
 33296  00415A  C082  F086         	movff	GetElapsedTime@StartTime+1,??_GetElapsedTime+1
 33297  00415E  C083  F087         	movff	GetElapsedTime@StartTime+2,??_GetElapsedTime+2
 33298  004162  C084  F088         	movff	GetElapsedTime@StartTime+3,??_GetElapsedTime+3
 33299  004166  1F85               	comf	??_GetElapsedTime& (0+255),f,b
 33300  004168  1F86               	comf	(??_GetElapsedTime+1)& (0+255),f,b
 33301  00416A  1F87               	comf	(??_GetElapsedTime+2)& (0+255),f,b
 33302  00416C  1F88               	comf	(??_GetElapsedTime+3)& (0+255),f,b
 33303  00416E  2B85               	incf	??_GetElapsedTime& (0+255),f,b
 33304  004170  0E00               	movlw	0
 33305  004172  2386               	addwfc	(??_GetElapsedTime+1)& (0+255),f,b
 33306  004174  2387               	addwfc	(??_GetElapsedTime+2)& (0+255),f,b
 33307  004176  2388               	addwfc	(??_GetElapsedTime+3)& (0+255),f,b
 33308  004178  5191               	movf	GetElapsedTime@CurrentTimestamp& (0+255),w,b
 33309  00417A  2585               	addwf	??_GetElapsedTime& (0+255),w,b
 33310  00417C  6F89               	movwf	(??_GetElapsedTime+4)& (0+255),b
 33311  00417E  5192               	movf	(GetElapsedTime@CurrentTimestamp+1)& (0+255),w,b
 33312  004180  2186               	addwfc	(??_GetElapsedTime+1)& (0+255),w,b
 33313  004182  6F8A               	movwf	(??_GetElapsedTime+5)& (0+255),b
 33314  004184  5193               	movf	(GetElapsedTime@CurrentTimestamp+2)& (0+255),w,b
 33315  004186  2187               	addwfc	(??_GetElapsedTime+2)& (0+255),w,b
 33316  004188  6F8B               	movwf	(??_GetElapsedTime+6)& (0+255),b
 33317  00418A  5194               	movf	(GetElapsedTime@CurrentTimestamp+3)& (0+255),w,b
 33318  00418C  2188               	addwfc	(??_GetElapsedTime+3)& (0+255),w,b
 33319  00418E  6F8C               	movwf	(??_GetElapsedTime+7)& (0+255),b
 33320  004190  0EFF               	movlw	255
 33321  004192  2589               	addwf	(??_GetElapsedTime+4)& (0+255),w,b
 33322  004194  6F8D               	movwf	GetElapsedTime@TimeValue& (0+255),b
 33323  004196  0EFF               	movlw	255
 33324  004198  218A               	addwfc	(??_GetElapsedTime+5)& (0+255),w,b
 33325  00419A  6F8E               	movwf	(GetElapsedTime@TimeValue+1)& (0+255),b
 33326  00419C  0EFF               	movlw	255
 33327  00419E  218B               	addwfc	(??_GetElapsedTime+6)& (0+255),w,b
 33328  0041A0  6F8F               	movwf	(GetElapsedTime@TimeValue+2)& (0+255),b
 33329  0041A2  0EFF               	movlw	255
 33330  0041A4  218C               	addwfc	(??_GetElapsedTime+7)& (0+255),w,b
 33331  0041A6                     L73:
 33332  0041A6  6F90               	movwf	(GetElapsedTime@TimeValue+3)& (0+255),b
 33333                           
 33334                           ; BSR set to: 0
 33335                           ;os_timers.c: 100: }
 33336                           ;os_timers.c: 102: return TimeValue;
 33337                           
 33338                           ; BSR set to: 0
 33339  0041A8  C08D  F081         	movff	GetElapsedTime@TimeValue,?_GetElapsedTime
 33340  0041AC  C08E  F082         	movff	GetElapsedTime@TimeValue+1,?_GetElapsedTime+1
 33341  0041B0  C08F  F083         	movff	GetElapsedTime@TimeValue+2,?_GetElapsedTime+2
 33342  0041B4  C090  F084         	movff	GetElapsedTime@TimeValue+3,?_GetElapsedTime+3
 33343  0041B8  0012               	return	
 33344  0041BA                     __end_of_GetElapsedTime:
 33345                           	opt stack 0
 33346                           tosu	equ	0xFFF
 33347                           tosh	equ	0xFFE
 33348                           tosl	equ	0xFFD
 33349                           pclath	equ	0xFFA
 33350                           tblptru	equ	0xFF8
 33351                           tblptrh	equ	0xFF7
 33352                           tblptrl	equ	0xFF6
 33353                           tablat	equ	0xFF5
 33354                           prodh	equ	0xFF4
 33355                           prodl	equ	0xFF3
 33356                           intcon	equ	0xFF2
 33357                           intcon2	equ	0xFF1
 33358                           intcon3	equ	0xFF0
 33359                           indf0	equ	0xFEF
 33360                           postinc0	equ	0xFEE
 33361                           plusw0	equ	0xFEB
 33362                           fsr0h	equ	0xFEA
 33363                           fsr0l	equ	0xFE9
 33364                           wreg	equ	0xFE8
 33365                           indf1	equ	0xFE7
 33366                           postinc1	equ	0xFE6
 33367                           postdec1	equ	0xFE5
 33368                           plusw1	equ	0xFE3
 33369                           fsr1h	equ	0xFE2
 33370                           fsr1l	equ	0xFE1
 33371                           indf2	equ	0xFDF
 33372                           postinc2	equ	0xFDE
 33373                           postdec2	equ	0xFDD
 33374                           plusw2	equ	0xFDB
 33375                           fsr2h	equ	0xFDA
 33376                           fsr2l	equ	0xFD9
 33377                           status	equ	0xFD8
 33378                           
 33379 ;; *************** function _GetOsTickCounter *****************
 33380 ;; Defined at:
 33381 ;;		line 70 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 33382 ;; Parameters:    Size  Location     Type
 33383 ;;		None
 33384 ;; Auto vars:     Size  Location     Type
 33385 ;;		None
 33386 ;; Return value:  Size  Location     Type
 33387 ;;                  4   29[BANK0 ] unsigned long 
 33388 ;; Registers used:
 33389 ;;		None
 33390 ;; Tracked objects:
 33391 ;;		On entry : 0/0
 33392 ;;		On exit  : 0/0
 33393 ;;		Unchanged: 0/0
 33394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33395 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33396 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33398 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33399 ;;Total ram usage:        4 bytes
 33400 ;; Hardware stack levels used:    1
 33401 ;; Hardware stack levels required when called:   11
 33402 ;; This function calls:
 33403 ;;		Nothing
 33404 ;; This function is called by:
 33405 ;;		_GetElapsedTime
 33406 ;;		_OsTmr_StartTimer
 33407 ;;		_OsTmr_GetElapsedTime
 33408 ;; This function uses a non-reentrant model
 33409 ;;
 33410                           
 33411                           	psect	text154
 33412  006BAC                     __ptext154:
 33413                           	opt stack 0
 33414  006BAC                     _GetOsTickCounter:
 33415                           	opt stack 12
 33416                           
 33417                           ;os_timers.c: 73: return OsTmr_OsTickCounter;
 33418                           
 33419                           ; BSR set to: 0
 33420                           ;incstack = 0
 33421  006BAC  C314  F07D         	movff	_OsTmr_OsTickCounter,?_GetOsTickCounter
 33422  006BB0  C315  F07E         	movff	_OsTmr_OsTickCounter+1,?_GetOsTickCounter+1
 33423  006BB4  C316  F07F         	movff	_OsTmr_OsTickCounter+2,?_GetOsTickCounter+2
 33424  006BB8  C317  F080         	movff	_OsTmr_OsTickCounter+3,?_GetOsTickCounter+3
 33425  006BBC  0012               	return		;funcret
 33426  006BBE                     __end_of_GetOsTickCounter:
 33427                           	opt stack 0
 33428                           tosu	equ	0xFFF
 33429                           tosh	equ	0xFFE
 33430                           tosl	equ	0xFFD
 33431                           pclath	equ	0xFFA
 33432                           tblptru	equ	0xFF8
 33433                           tblptrh	equ	0xFF7
 33434                           tblptrl	equ	0xFF6
 33435                           tablat	equ	0xFF5
 33436                           prodh	equ	0xFF4
 33437                           prodl	equ	0xFF3
 33438                           intcon	equ	0xFF2
 33439                           intcon2	equ	0xFF1
 33440                           intcon3	equ	0xFF0
 33441                           indf0	equ	0xFEF
 33442                           postinc0	equ	0xFEE
 33443                           plusw0	equ	0xFEB
 33444                           fsr0h	equ	0xFEA
 33445                           fsr0l	equ	0xFE9
 33446                           wreg	equ	0xFE8
 33447                           indf1	equ	0xFE7
 33448                           postinc1	equ	0xFE6
 33449                           postdec1	equ	0xFE5
 33450                           plusw1	equ	0xFE3
 33451                           fsr1h	equ	0xFE2
 33452                           fsr1l	equ	0xFE1
 33453                           indf2	equ	0xFDF
 33454                           postinc2	equ	0xFDE
 33455                           postdec2	equ	0xFDD
 33456                           plusw2	equ	0xFDB
 33457                           fsr2h	equ	0xFDA
 33458                           fsr2l	equ	0xFD9
 33459                           status	equ	0xFD8
 33460                           
 33461 ;; *************** function _ClearBuffer *****************
 33462 ;; Defined at:
 33463 ;;		line 124 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/sf.c"
 33464 ;; Parameters:    Size  Location     Type
 33465 ;;  Buffer          2   29[BANK0 ] PTR unsigned char 
 33466 ;;		 -> GsmGprsTerminal@UartBuffer(200), EepromBuffer(15), HttpGetMethod@UartMessage(200), InitGprsNetwork@UartMessage(5
      +0), 
 33467 ;;		 -> Mdm_SmsRx(102), callerNumber(13), RxBuffer(400), 
 33468 ;;  Len             2   31[BANK0 ] unsigned short 
 33469 ;; Auto vars:     Size  Location     Type
 33470 ;;  Index           2   33[BANK0 ] unsigned short 
 33471 ;; Return value:  Size  Location     Type
 33472 ;;                  1    wreg      void 
 33473 ;; Registers used:
 33474 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 33475 ;; Tracked objects:
 33476 ;;		On entry : 0/0
 33477 ;;		On exit  : 0/0
 33478 ;;		Unchanged: 0/0
 33479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33480 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33481 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33482 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33483 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33484 ;;Total ram usage:        6 bytes
 33485 ;; Hardware stack levels used:    1
 33486 ;; Hardware stack levels required when called:   11
 33487 ;; This function calls:
 33488 ;;		Nothing
 33489 ;; This function is called by:
 33490 ;;		_GetSmsSm
 33491 ;;		_GetCallerNumber
 33492 ;;		_InitGprsNetwork
 33493 ;;		_HttpGetMethod
 33494 ;;		_Eeprom_Reset
 33495 ;;		_GsmGprsTerminal
 33496 ;; This function uses a non-reentrant model
 33497 ;;
 33498                           
 33499                           	psect	text155
 33500  006566                     __ptext155:
 33501                           	opt stack 0
 33502  006566                     _ClearBuffer:
 33503                           	opt stack 14
 33504                           
 33505                           ;sf.c: 126: UINT16 Index = 0;
 33506                           
 33507                           ;incstack = 0
 33508  006566  0E00               	movlw	0
 33509  006568  0100               	movlb	0	; () banked
 33510  00656A  6F82               	movwf	(ClearBuffer@Index+1)& (0+255),b
 33511  00656C  0E00               	movlw	0
 33512  00656E  6F81               	movwf	ClearBuffer@Index& (0+255),b
 33513                           
 33514                           ;sf.c: 129: for (Index = 0; Index <= Len; Index++)
 33515  006570  0E00               	movlw	0
 33516  006572  6F82               	movwf	(ClearBuffer@Index+1)& (0+255),b
 33517  006574  0E00               	movlw	0
 33518  006576  6F81               	movwf	ClearBuffer@Index& (0+255),b
 33519  006578  D00A               	goto	l2262
 33520  00657A                     
 33521                           ; BSR set to: 0
 33522                           ;sf.c: 130: {
 33523                           ;sf.c: 131: *(Buffer + Index) = 0;
 33524                           
 33525                           ; BSR set to: 0
 33526  00657A  5181               	movf	ClearBuffer@Index& (0+255),w,b
 33527  00657C  257D               	addwf	ClearBuffer@Buffer& (0+255),w,b
 33528  00657E  6ED9               	movwf	fsr2l,c
 33529  006580  5182               	movf	(ClearBuffer@Index+1)& (0+255),w,b
 33530  006582  217E               	addwfc	(ClearBuffer@Buffer+1)& (0+255),w,b
 33531  006584  6EDA               	movwf	fsr2h,c
 33532  006586  0E00               	movlw	0
 33533  006588  6EDF               	movwf	indf2,c
 33534                           
 33535                           ; BSR set to: 0
 33536  00658A  4B81               	infsnz	ClearBuffer@Index& (0+255),f,b
 33537  00658C  2B82               	incf	(ClearBuffer@Index+1)& (0+255),f,b
 33538  00658E                     l2262:
 33539                           
 33540                           ; BSR set to: 0
 33541                           
 33542                           ; BSR set to: 0
 33543  00658E  5181               	movf	ClearBuffer@Index& (0+255),w,b
 33544  006590  5D7F               	subwf	ClearBuffer@Len& (0+255),w,b
 33545  006592  5182               	movf	(ClearBuffer@Index+1)& (0+255),w,b
 33546  006594  5980               	subwfb	(ClearBuffer@Len+1)& (0+255),w,b
 33547  006596  A0D8               	btfss	status,0,c
 33548  006598  0012               	return	
 33549  00659A  D7EF               	goto	l2263
 33550  00659C                     __end_of_ClearBuffer:
 33551                           	opt stack 0
 33552                           tosu	equ	0xFFF
 33553                           tosh	equ	0xFFE
 33554                           tosl	equ	0xFFD
 33555                           pclath	equ	0xFFA
 33556                           tblptru	equ	0xFF8
 33557                           tblptrh	equ	0xFF7
 33558                           tblptrl	equ	0xFF6
 33559                           tablat	equ	0xFF5
 33560                           prodh	equ	0xFF4
 33561                           prodl	equ	0xFF3
 33562                           intcon	equ	0xFF2
 33563                           intcon2	equ	0xFF1
 33564                           intcon3	equ	0xFF0
 33565                           indf0	equ	0xFEF
 33566                           postinc0	equ	0xFEE
 33567                           plusw0	equ	0xFEB
 33568                           fsr0h	equ	0xFEA
 33569                           fsr0l	equ	0xFE9
 33570                           wreg	equ	0xFE8
 33571                           indf1	equ	0xFE7
 33572                           postinc1	equ	0xFE6
 33573                           postdec1	equ	0xFE5
 33574                           plusw1	equ	0xFE3
 33575                           fsr1h	equ	0xFE2
 33576                           fsr1l	equ	0xFE1
 33577                           indf2	equ	0xFDF
 33578                           postinc2	equ	0xFDE
 33579                           postdec2	equ	0xFDD
 33580                           plusw2	equ	0xFDB
 33581                           fsr2h	equ	0xFDA
 33582                           fsr2l	equ	0xFD9
 33583                           status	equ	0xFD8
 33584                           
 33585 ;; *************** function _LedStateMachine *****************
 33586 ;; Defined at:
 33587 ;;		line 235 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 33588 ;; Parameters:    Size  Location     Type
 33589 ;;  Led             1    wreg     unsigned char 
 33590 ;;  LedSts          2   47[BANK0 ] PTR enum E8954
 33591 ;;		 -> Led3Sts(1), Led2Sts(1), Led1Sts(1), 
 33592 ;;  LedOut          2   49[BANK0 ] PTR unsigned char 
 33593 ;;		 -> Led3OutSts(1), Led2OutSts(1), Led1OutSts(1), 
 33594 ;;  LedBlink        2   51[BANK0 ] PTR struct _LedBlinkType
 33595 ;;		 -> Led3Blink(9), Led2Blink(9), Led1Blink(9), 
 33596 ;;  LedPulse        2   53[BANK0 ] PTR struct _LedPulseType
 33597 ;;		 -> Led3Pulse(6), Led2Pulse(6), Led1Pulse(6), 
 33598 ;; Auto vars:     Size  Location     Type
 33599 ;;  Led             1   57[BANK0 ] unsigned char 
 33600 ;;  LedOutSts       1   56[BANK0 ] unsigned char 
 33601 ;; Return value:  Size  Location     Type
 33602 ;;                  1    wreg      unsigned char 
 33603 ;; Registers used:
 33604 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 33605 ;; Tracked objects:
 33606 ;;		On entry : 0/0
 33607 ;;		On exit  : 0/0
 33608 ;;		Unchanged: 0/0
 33609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33610 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33611 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33612 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33613 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33614 ;;Total ram usage:       11 bytes
 33615 ;; Hardware stack levels used:    1
 33616 ;; Hardware stack levels required when called:   13
 33617 ;; This function calls:
 33618 ;;		_LedBlinkStateMachine
 33619 ;;		_LedPulseStateMachine
 33620 ;;		_Led_SetLedStatus
 33621 ;; This function is called by:
 33622 ;;		_Led_MainTask
 33623 ;; This function uses a non-reentrant model
 33624 ;;
 33625                           
 33626                           	psect	text156
 33627  004988                     __ptext156:
 33628                           	opt stack 0
 33629  004988                     _LedStateMachine:
 33630                           	opt stack 14
 33631                           
 33632                           ; BSR set to: 0
 33633                           ;incstack = 0
 33634                           ;LedStateMachine@Led stored from wreg
 33635  004988  0100               	movlb	0	; () banked
 33636  00498A  6F99               	movwf	LedStateMachine@Led& (0+255),b
 33637                           
 33638                           ;led.c: 238: UINT8 LedOutSts = 0u;
 33639  00498C  0E00               	movlw	0
 33640  00498E  0100               	movlb	0	; () banked
 33641  004990  6F98               	movwf	LedStateMachine@LedOutSts& (0+255),b
 33642                           
 33643                           ;led.c: 241: switch (*LedSts)
 33644  004992  D037               	goto	l2121
 33645  004994                     
 33646                           ; BSR set to: 0
 33647                           ;led.c: 245: LedOutSts = ((UINT8)(0));
 33648                           
 33649                           ; BSR set to: 0
 33650  004994  0E00               	movlw	0
 33651  004996  6F98               	movwf	LedStateMachine@LedOutSts& (0+255),b
 33652                           
 33653                           ; BSR set to: 0
 33654                           ;led.c: 246: *LedOut = ((UINT8)(0));
 33655  004998  C091  FFD9         	movff	LedStateMachine@LedOut,fsr2l
 33656  00499C  C092  FFDA         	movff	LedStateMachine@LedOut+1,fsr2h
 33657  0049A0  0E00               	movlw	0
 33658  0049A2  D007               	goto	L74
 33659  0049A4                     
 33660                           ; BSR set to: 0
 33661                           ;led.c: 251: LedOutSts = ((UINT8)(1));
 33662                           
 33663                           ; BSR set to: 0
 33664  0049A4  0E01               	movlw	1
 33665  0049A6  6F98               	movwf	LedStateMachine@LedOutSts& (0+255),b
 33666                           
 33667                           ; BSR set to: 0
 33668                           ;led.c: 252: *LedOut = ((UINT8)(1));
 33669  0049A8  C091  FFD9         	movff	LedStateMachine@LedOut,fsr2l
 33670  0049AC  C092  FFDA         	movff	LedStateMachine@LedOut+1,fsr2h
 33671  0049B0  0E01               	movlw	1
 33672  0049B2                     L74:
 33673  0049B2  6EDF               	movwf	indf2,c
 33674                           
 33675                           ;led.c: 253: break;
 33676  0049B4  D03A               	goto	l2123
 33677  0049B6                     
 33678                           ; BSR set to: 0
 33679                           ;led.c: 257: if (*LedOut == 1)
 33680                           
 33681                           ; BSR set to: 0
 33682  0049B6  C091  FFD9         	movff	LedStateMachine@LedOut,fsr2l
 33683  0049BA  C092  FFDA         	movff	LedStateMachine@LedOut+1,fsr2h
 33684  0049BE  04DE               	decf	postinc2,w,c
 33685  0049C0  A4D8               	btfss	status,2,c
 33686  0049C2  D006               	goto	l2126
 33687                           
 33688                           ; BSR set to: 0
 33689                           ;led.c: 258: {
 33690                           ;led.c: 260: Led_SetLedStatus(Led,LED_STS_OFF);
 33691  0049C4  0E00               	movlw	0
 33692  0049C6  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 33693  0049C8  5199               	movf	LedStateMachine@Led& (0+255),w,b
 33694  0049CA  EC62  F033         	call	_Led_SetLedStatus
 33695                           
 33696                           ;led.c: 261: }
 33697  0049CE  D02D               	goto	l2123
 33698  0049D0                     l2126:
 33699                           
 33700                           ;led.c: 262: else
 33701                           ;led.c: 263: {
 33702                           ;led.c: 265: Led_SetLedStatus(Led,LED_STS_ON);
 33703  0049D0  0E01               	movlw	1
 33704  0049D2  0100               	movlb	0	; () banked
 33705  0049D4  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 33706  0049D6  5199               	movf	LedStateMachine@Led& (0+255),w,b
 33707  0049D8  EC62  F033         	call	_Led_SetLedStatus
 33708                           
 33709                           ;led.c: 266: }
 33710                           ;led.c: 267: break;
 33711  0049DC  D026               	goto	l2123
 33712  0049DE                     
 33713                           ;led.c: 271: LedOutSts = LedBlinkStateMachine(LedBlink);
 33714  0049DE  C093  F08A         	movff	LedStateMachine@LedBlink,LedBlinkStateMachine@LedBlink
 33715  0049E2  C094  F08B         	movff	LedStateMachine@LedBlink+1,LedBlinkStateMachine@LedBlink+1
 33716  0049E6  EC71  F013         	call	_LedBlinkStateMachine	;wreg free
 33717  0049EA  D008               	goto	L75
 33718  0049EC                     
 33719                           ; BSR set to: 0
 33720                           ;led.c: 276: LedOutSts = LedPulseStateMachine(LedPulse, Led);
 33721                           
 33722                           ; BSR set to: 0
 33723  0049EC  C095  F08A         	movff	LedStateMachine@LedPulse,LedPulseStateMachine@LedPulse
 33724  0049F0  C096  F08B         	movff	LedStateMachine@LedPulse+1,LedPulseStateMachine@LedPulse+1
 33725  0049F4  C099  F08C         	movff	LedStateMachine@Led,LedPulseStateMachine@Led
 33726  0049F8  EC2E  F01A         	call	_LedPulseStateMachine	;wreg free
 33727  0049FC                     L75:
 33728  0049FC  0100               	movlb	0	; () banked
 33729  0049FE  6F98               	movwf	LedStateMachine@LedOutSts& (0+255),b
 33730                           
 33731                           ; BSR set to: 0
 33732                           ;led.c: 281: }
 33733                           
 33734                           ; BSR set to: 0
 33735                           ;led.c: 280: break;
 33736                           
 33737                           ;led.c: 279: default:
 33738                           
 33739                           ;led.c: 277: break;
 33740  004A00  D014               	goto	l2123
 33741  004A02                     l2121:
 33742                           
 33743                           ; BSR set to: 0
 33744                           
 33745                           ; BSR set to: 0
 33746  004A02  C08F  FFD9         	movff	LedStateMachine@LedSts,fsr2l
 33747  004A06  C090  FFDA         	movff	LedStateMachine@LedSts+1,fsr2h
 33748  004A0A  50DF               	movf	indf2,w,c
 33749                           
 33750                           ; Switch size 1, requested type "space"
 33751                           ; Number of cases is 5, Range of values is 0 to 4
 33752                           ; switch strategies available:
 33753                           ; Name         Instructions Cycles
 33754                           ; simple_byte           16     9 (average)
 33755                           ;	Chosen strategy is simple_byte
 33756  004A0C  0A00               	xorlw	0	; case 0
 33757  004A0E  B4D8               	btfsc	status,2,c
 33758  004A10  D7C1               	goto	l2122
 33759  004A12  0A01               	xorlw	1	; case 1
 33760  004A14  B4D8               	btfsc	status,2,c
 33761  004A16  D7C6               	goto	l2124
 33762  004A18  0A03               	xorlw	3	; case 2
 33763  004A1A  B4D8               	btfsc	status,2,c
 33764  004A1C  D7CC               	goto	l2125
 33765  004A1E  0A01               	xorlw	1	; case 3
 33766  004A20  B4D8               	btfsc	status,2,c
 33767  004A22  D7DD               	goto	l2128
 33768  004A24  0A07               	xorlw	7	; case 4
 33769  004A26  B4D8               	btfsc	status,2,c
 33770  004A28  D7E1               	goto	l2129
 33771  004A2A                     l2123:
 33772                           
 33773                           ;led.c: 283: return LedOutSts;
 33774                           
 33775                           ; BSR set to: 0
 33776  004A2A  0100               	movlb	0	; () banked
 33777  004A2C  5198               	movf	LedStateMachine@LedOutSts& (0+255),w,b
 33778  004A2E  0012               	return	
 33779  004A30                     __end_of_LedStateMachine:
 33780                           	opt stack 0
 33781                           tosu	equ	0xFFF
 33782                           tosh	equ	0xFFE
 33783                           tosl	equ	0xFFD
 33784                           pclath	equ	0xFFA
 33785                           tblptru	equ	0xFF8
 33786                           tblptrh	equ	0xFF7
 33787                           tblptrl	equ	0xFF6
 33788                           tablat	equ	0xFF5
 33789                           prodh	equ	0xFF4
 33790                           prodl	equ	0xFF3
 33791                           intcon	equ	0xFF2
 33792                           intcon2	equ	0xFF1
 33793                           intcon3	equ	0xFF0
 33794                           indf0	equ	0xFEF
 33795                           postinc0	equ	0xFEE
 33796                           plusw0	equ	0xFEB
 33797                           fsr0h	equ	0xFEA
 33798                           fsr0l	equ	0xFE9
 33799                           wreg	equ	0xFE8
 33800                           indf1	equ	0xFE7
 33801                           postinc1	equ	0xFE6
 33802                           postdec1	equ	0xFE5
 33803                           plusw1	equ	0xFE3
 33804                           fsr1h	equ	0xFE2
 33805                           fsr1l	equ	0xFE1
 33806                           indf2	equ	0xFDF
 33807                           postinc2	equ	0xFDE
 33808                           postdec2	equ	0xFDD
 33809                           plusw2	equ	0xFDB
 33810                           fsr2h	equ	0xFDA
 33811                           fsr2l	equ	0xFD9
 33812                           status	equ	0xFD8
 33813                           
 33814 ;; *************** function _LedPulseStateMachine *****************
 33815 ;; Defined at:
 33816 ;;		line 182 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 33817 ;; Parameters:    Size  Location     Type
 33818 ;;  LedPulse        2   42[BANK0 ] PTR struct _LedPulseType
 33819 ;;		 -> Led3Pulse(6), Led2Pulse(6), Led1Pulse(6), 
 33820 ;;  Led             1   44[BANK0 ] unsigned char 
 33821 ;; Auto vars:     Size  Location     Type
 33822 ;;		None
 33823 ;; Return value:  Size  Location     Type
 33824 ;;                  1    wreg      unsigned char 
 33825 ;; Registers used:
 33826 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 33827 ;; Tracked objects:
 33828 ;;		On entry : 0/0
 33829 ;;		On exit  : 0/0
 33830 ;;		Unchanged: 0/0
 33831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33832 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33833 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33834 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33835 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33836 ;;Total ram usage:        5 bytes
 33837 ;; Hardware stack levels used:    1
 33838 ;; Hardware stack levels required when called:   12
 33839 ;; This function calls:
 33840 ;;		_Led_SetLedStatus
 33841 ;;		___lwdiv
 33842 ;; This function is called by:
 33843 ;;		_LedStateMachine
 33844 ;; This function uses a non-reentrant model
 33845 ;;
 33846                           
 33847                           	psect	text157
 33848  00345C                     __ptext157:
 33849                           	opt stack 0
 33850  00345C                     _LedPulseStateMachine:
 33851                           	opt stack 14
 33852                           
 33853                           ;led.c: 185: switch (LedPulse->LedPulseState)
 33854                           
 33855                           ; BSR set to: 0
 33856                           ;incstack = 0
 33857  00345C  D05C               	goto	l2111
 33858  00345E                     
 33859                           ;led.c: 189: LedPulse->LedOutState = ((UINT8)(1));
 33860  00345E  0100               	movlb	0	; () banked
 33861  003460  EE20 F001          	lfsr	2,1
 33862  003464  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 33863  003466  26D9               	addwf	fsr2l,f,c
 33864  003468  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 33865  00346A  22DA               	addwfc	fsr2h,f,c
 33866  00346C  0E01               	movlw	1
 33867  00346E  6EDF               	movwf	indf2,c
 33868                           
 33869                           ; BSR set to: 0
 33870                           ;led.c: 191: LedPulse->LedPulseState = LedPulseDelay;
 33871  003470  C08A  FFD9         	movff	LedPulseStateMachine@LedPulse,fsr2l
 33872  003474  C08B  FFDA         	movff	LedPulseStateMachine@LedPulse+1,fsr2h
 33873  003478  0E01               	movlw	1
 33874  00347A  D036               	goto	L76
 33875  00347C                     
 33876                           ;led.c: 196: LedPulse->LedPulseCounter++;
 33877                           
 33878                           ; BSR set to: 0
 33879  00347C  0100               	movlb	0	; () banked
 33880  00347E  EE20 F002          	lfsr	2,2
 33881  003482  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 33882  003484  26D9               	addwf	fsr2l,f,c
 33883  003486  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 33884  003488  22DA               	addwfc	fsr2h,f,c
 33885  00348A  2ADE               	incf	postinc2,f,c
 33886  00348C  0E00               	movlw	0
 33887  00348E  22DD               	addwfc	postdec2,f,c
 33888                           
 33889                           ; BSR set to: 0
 33890                           ;led.c: 198: if (LedPulse->LedPulseCounter >= (LedPulse->LedPulseTimeMs/((UINT16)(50))))
 33891  003490  EE20 F004          	lfsr	2,4
 33892  003494  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 33893  003496  26D9               	addwf	fsr2l,f,c
 33894  003498  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 33895  00349A  22DA               	addwfc	fsr2h,f,c
 33896  00349C  CFDE F083          	movff	postinc2,___lwdiv@dividend
 33897  0034A0  CFDD F084          	movff	postdec2,___lwdiv@dividend+1
 33898  0034A4  0E00               	movlw	0
 33899  0034A6  6F86               	movwf	(___lwdiv@divisor+1)& (0+255),b
 33900  0034A8  0E32               	movlw	50
 33901  0034AA  6F85               	movwf	___lwdiv@divisor& (0+255),b
 33902  0034AC  ECA0  F02E         	call	___lwdiv	;wreg free
 33903  0034B0  0100               	movlb	0	; () banked
 33904  0034B2  EE20 F002          	lfsr	2,2
 33905  0034B6  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 33906  0034B8  26D9               	addwf	fsr2l,f,c
 33907  0034BA  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 33908  0034BC  22DA               	addwfc	fsr2h,f,c
 33909  0034BE  5183               	movf	?___lwdiv& (0+255),w,b
 33910  0034C0  5CDE               	subwf	postinc2,w,c
 33911  0034C2  5184               	movf	(?___lwdiv+1)& (0+255),w,b
 33912  0034C4  58DE               	subwfb	postinc2,w,c
 33913  0034C6  A0D8               	btfss	status,0,c
 33914  0034C8  D034               	goto	l2113
 33915                           
 33916                           ; BSR set to: 0
 33917                           ;led.c: 199: {
 33918                           ;led.c: 201: LedPulse->LedPulseCounter = 0;
 33919  0034CA  EE20 F002          	lfsr	2,2
 33920  0034CE  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 33921  0034D0  26D9               	addwf	fsr2l,f,c
 33922  0034D2  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 33923  0034D4  22DA               	addwfc	fsr2h,f,c
 33924  0034D6  0E00               	movlw	0
 33925  0034D8  6EDE               	movwf	postinc2,c
 33926  0034DA  0E00               	movlw	0
 33927  0034DC  6EDD               	movwf	postdec2,c
 33928                           
 33929                           ; BSR set to: 0
 33930                           ;led.c: 203: LedPulse->LedPulseState = LedPulseOff;
 33931  0034DE  C08A  FFD9         	movff	LedPulseStateMachine@LedPulse,fsr2l
 33932  0034E2  C08B  FFDA         	movff	LedPulseStateMachine@LedPulse+1,fsr2h
 33933  0034E6  0E02               	movlw	2
 33934  0034E8                     L76:
 33935  0034E8  6EDF               	movwf	indf2,c
 33936                           
 33937                           ; BSR set to: 0
 33938                           ;led.c: 204: }
 33939                           ;led.c: 205: break;
 33940  0034EA  D023               	goto	l2113
 33941  0034EC                     
 33942                           ;led.c: 209: LedPulse->LedOutState = ((UINT8)(0));
 33943                           
 33944                           ; BSR set to: 0
 33945  0034EC  0100               	movlb	0	; () banked
 33946  0034EE  EE20 F001          	lfsr	2,1
 33947  0034F2  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 33948  0034F4  26D9               	addwf	fsr2l,f,c
 33949  0034F6  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 33950  0034F8  22DA               	addwfc	fsr2h,f,c
 33951  0034FA  0E00               	movlw	0
 33952  0034FC  6EDF               	movwf	indf2,c
 33953                           
 33954                           ; BSR set to: 0
 33955                           ;led.c: 211: LedPulse->LedPulseState = LedPulseOn;
 33956  0034FE  C08A  FFD9         	movff	LedPulseStateMachine@LedPulse,fsr2l
 33957  003502  C08B  FFDA         	movff	LedPulseStateMachine@LedPulse+1,fsr2h
 33958  003506  0E00               	movlw	0
 33959  003508  6EDF               	movwf	indf2,c
 33960                           
 33961                           ; BSR set to: 0
 33962                           ;led.c: 213: Led_SetLedStatus(Led,LED_STS_OFF);
 33963  00350A  0E00               	movlw	0
 33964  00350C  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 33965  00350E  518C               	movf	LedPulseStateMachine@Led& (0+255),w,b
 33966  003510  EC62  F033         	call	_Led_SetLedStatus
 33967                           
 33968                           ;led.c: 218: }
 33969                           
 33970                           ;led.c: 217: break;
 33971                           
 33972                           ;led.c: 216: default:
 33973                           
 33974                           ;led.c: 214: break;
 33975  003514  D00E               	goto	l2113
 33976  003516                     l2111:
 33977  003516  C08A  FFD9         	movff	LedPulseStateMachine@LedPulse,fsr2l
 33978  00351A  C08B  FFDA         	movff	LedPulseStateMachine@LedPulse+1,fsr2h
 33979  00351E  50DF               	movf	indf2,w,c
 33980                           
 33981                           ; Switch size 1, requested type "space"
 33982                           ; Number of cases is 3, Range of values is 0 to 2
 33983                           ; switch strategies available:
 33984                           ; Name         Instructions Cycles
 33985                           ; simple_byte           10     6 (average)
 33986                           ;	Chosen strategy is simple_byte
 33987  003520  0A00               	xorlw	0	; case 0
 33988  003522  B4D8               	btfsc	status,2,c
 33989  003524  D79C               	goto	l2112
 33990  003526  0A01               	xorlw	1	; case 1
 33991  003528  B4D8               	btfsc	status,2,c
 33992  00352A  D7A8               	goto	l2114
 33993  00352C  0A03               	xorlw	3	; case 2
 33994  00352E  B4D8               	btfsc	status,2,c
 33995  003530  D7DD               	goto	l2116
 33996  003532                     l2113:
 33997                           
 33998                           ;led.c: 221: return (LedPulse->LedOutState);
 33999  003532  0100               	movlb	0	; () banked
 34000  003534  EE20 F001          	lfsr	2,1
 34001  003538  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 34002  00353A  26D9               	addwf	fsr2l,f,c
 34003  00353C  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 34004  00353E  22DA               	addwfc	fsr2h,f,c
 34005  003540  50DF               	movf	indf2,w,c
 34006  003542  0012               	return	
 34007  003544                     __end_of_LedPulseStateMachine:
 34008                           	opt stack 0
 34009                           tosu	equ	0xFFF
 34010                           tosh	equ	0xFFE
 34011                           tosl	equ	0xFFD
 34012                           pclath	equ	0xFFA
 34013                           tblptru	equ	0xFF8
 34014                           tblptrh	equ	0xFF7
 34015                           tblptrl	equ	0xFF6
 34016                           tablat	equ	0xFF5
 34017                           prodh	equ	0xFF4
 34018                           prodl	equ	0xFF3
 34019                           intcon	equ	0xFF2
 34020                           intcon2	equ	0xFF1
 34021                           intcon3	equ	0xFF0
 34022                           indf0	equ	0xFEF
 34023                           postinc0	equ	0xFEE
 34024                           plusw0	equ	0xFEB
 34025                           fsr0h	equ	0xFEA
 34026                           fsr0l	equ	0xFE9
 34027                           wreg	equ	0xFE8
 34028                           indf1	equ	0xFE7
 34029                           postinc1	equ	0xFE6
 34030                           postdec1	equ	0xFE5
 34031                           plusw1	equ	0xFE3
 34032                           fsr1h	equ	0xFE2
 34033                           fsr1l	equ	0xFE1
 34034                           indf2	equ	0xFDF
 34035                           postinc2	equ	0xFDE
 34036                           postdec2	equ	0xFDD
 34037                           plusw2	equ	0xFDB
 34038                           fsr2h	equ	0xFDA
 34039                           fsr2l	equ	0xFD9
 34040                           status	equ	0xFD8
 34041                           
 34042 ;; *************** function _Led_SetLedStatus *****************
 34043 ;; Defined at:
 34044 ;;		line 338 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 34045 ;; Parameters:    Size  Location     Type
 34046 ;;  Led             1    wreg     unsigned char 
 34047 ;;  LedSts          1   29[BANK0 ] enum E8954
 34048 ;; Auto vars:     Size  Location     Type
 34049 ;;  Led             1   30[BANK0 ] unsigned char 
 34050 ;; Return value:  Size  Location     Type
 34051 ;;                  1    wreg      void 
 34052 ;; Registers used:
 34053 ;;		wreg, status,2, status,0
 34054 ;; Tracked objects:
 34055 ;;		On entry : 0/0
 34056 ;;		On exit  : 0/0
 34057 ;;		Unchanged: 0/0
 34058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34059 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34060 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34061 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34062 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34063 ;;Total ram usage:        2 bytes
 34064 ;; Hardware stack levels used:    1
 34065 ;; Hardware stack levels required when called:   11
 34066 ;; This function calls:
 34067 ;;		Nothing
 34068 ;; This function is called by:
 34069 ;;		_LedPulseStateMachine
 34070 ;;		_LedStateMachine
 34071 ;;		_waitSetupCall
 34072 ;;		_initFsm
 34073 ;;		_cmdVisualEffet
 34074 ;; This function uses a non-reentrant model
 34075 ;;
 34076                           
 34077                           	psect	text158
 34078  0066C4                     __ptext158:
 34079                           	opt stack 0
 34080  0066C4                     _Led_SetLedStatus:
 34081                           	opt stack 14
 34082                           
 34083                           ; BSR set to: 0
 34084                           ;incstack = 0
 34085                           ;Led_SetLedStatus@Led stored from wreg
 34086  0066C4  0100               	movlb	0	; () banked
 34087  0066C6  6F7E               	movwf	Led_SetLedStatus@Led& (0+255),b
 34088                           
 34089                           ;led.c: 341: switch (Led)
 34090  0066C8  D009               	goto	l2142
 34091  0066CA                     l2143:
 34092                           
 34093                           ; BSR set to: 0
 34094                           ;led.c: 344: Led1Sts = LedSts;
 34095  0066CA  C07D  F1F9         	movff	Led_SetLedStatus@LedSts,_Led1Sts
 34096                           
 34097                           ;led.c: 345: break;
 34098  0066CE  0012               	return	
 34099  0066D0                     l2145:
 34100                           
 34101                           ; BSR set to: 0
 34102                           ;led.c: 348: Led2Sts = LedSts;
 34103  0066D0  C07D  F1F7         	movff	Led_SetLedStatus@LedSts,_Led2Sts
 34104                           
 34105                           ;led.c: 349: break;
 34106  0066D4  0012               	return	
 34107  0066D6                     l2146:
 34108                           
 34109                           ; BSR set to: 0
 34110                           ;led.c: 352: Led3Sts = LedSts;
 34111  0066D6  C07D  F1F5         	movff	Led_SetLedStatus@LedSts,_Led3Sts
 34112                           
 34113                           ; BSR set to: 0
 34114                           ;led.c: 357: }
 34115                           
 34116                           ; BSR set to: 0
 34117                           ;led.c: 356: break;
 34118                           
 34119                           ;led.c: 355: default:
 34120                           
 34121                           ;led.c: 353: break;
 34122  0066DA  0012               	return	
 34123  0066DC                     l2142:
 34124                           
 34125                           ; BSR set to: 0
 34126  0066DC  0100               	movlb	0	; () banked
 34127  0066DE  517E               	movf	Led_SetLedStatus@Led& (0+255),w,b
 34128                           
 34129                           ; Switch size 1, requested type "space"
 34130                           ; Number of cases is 3, Range of values is 1 to 3
 34131                           ; switch strategies available:
 34132                           ; Name         Instructions Cycles
 34133                           ; simple_byte           10     6 (average)
 34134                           ;	Chosen strategy is simple_byte
 34135  0066E0  0A01               	xorlw	1	; case 1
 34136  0066E2  B4D8               	btfsc	status,2,c
 34137  0066E4  D7F2               	goto	l2143
 34138  0066E6  0A03               	xorlw	3	; case 2
 34139  0066E8  B4D8               	btfsc	status,2,c
 34140  0066EA  D7F2               	goto	l2145
 34141  0066EC  0A01               	xorlw	1	; case 3
 34142  0066EE  A4D8               	btfss	status,2,c
 34143  0066F0  0012               	return	
 34144  0066F2  D7F1               	goto	l2146
 34145  0066F4                     __end_of_Led_SetLedStatus:
 34146                           	opt stack 0
 34147                           tosu	equ	0xFFF
 34148                           tosh	equ	0xFFE
 34149                           tosl	equ	0xFFD
 34150                           pclath	equ	0xFFA
 34151                           tblptru	equ	0xFF8
 34152                           tblptrh	equ	0xFF7
 34153                           tblptrl	equ	0xFF6
 34154                           tablat	equ	0xFF5
 34155                           prodh	equ	0xFF4
 34156                           prodl	equ	0xFF3
 34157                           intcon	equ	0xFF2
 34158                           intcon2	equ	0xFF1
 34159                           intcon3	equ	0xFF0
 34160                           indf0	equ	0xFEF
 34161                           postinc0	equ	0xFEE
 34162                           plusw0	equ	0xFEB
 34163                           fsr0h	equ	0xFEA
 34164                           fsr0l	equ	0xFE9
 34165                           wreg	equ	0xFE8
 34166                           indf1	equ	0xFE7
 34167                           postinc1	equ	0xFE6
 34168                           postdec1	equ	0xFE5
 34169                           plusw1	equ	0xFE3
 34170                           fsr1h	equ	0xFE2
 34171                           fsr1l	equ	0xFE1
 34172                           indf2	equ	0xFDF
 34173                           postinc2	equ	0xFDE
 34174                           postdec2	equ	0xFDD
 34175                           plusw2	equ	0xFDB
 34176                           fsr2h	equ	0xFDA
 34177                           fsr2l	equ	0xFD9
 34178                           status	equ	0xFD8
 34179                           
 34180 ;; *************** function _LedBlinkStateMachine *****************
 34181 ;; Defined at:
 34182 ;;		line 125 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 34183 ;; Parameters:    Size  Location     Type
 34184 ;;  LedBlink        2   42[BANK0 ] PTR struct _LedBlinkType
 34185 ;;		 -> Led3Blink(9), Led2Blink(9), Led1Blink(9), 
 34186 ;; Auto vars:     Size  Location     Type
 34187 ;;		None
 34188 ;; Return value:  Size  Location     Type
 34189 ;;                  1    wreg      unsigned char 
 34190 ;; Registers used:
 34191 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 34192 ;; Tracked objects:
 34193 ;;		On entry : 0/0
 34194 ;;		On exit  : 0/0
 34195 ;;		Unchanged: 0/0
 34196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34197 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34198 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34199 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34200 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34201 ;;Total ram usage:        4 bytes
 34202 ;; Hardware stack levels used:    1
 34203 ;; Hardware stack levels required when called:   12
 34204 ;; This function calls:
 34205 ;;		___lwdiv
 34206 ;; This function is called by:
 34207 ;;		_LedStateMachine
 34208 ;; This function uses a non-reentrant model
 34209 ;;
 34210                           
 34211                           	psect	text159
 34212  0026E2                     __ptext159:
 34213                           	opt stack 0
 34214  0026E2                     _LedBlinkStateMachine:
 34215                           	opt stack 14
 34216                           
 34217                           ;led.c: 128: switch (LedBlink->LedBlinkState)
 34218                           
 34219                           ; BSR set to: 0
 34220                           ;incstack = 0
 34221  0026E2  D08F               	goto	l2098
 34222  0026E4                     
 34223                           ;led.c: 132: LedBlink->LedOutState = LedBlink->LedInitStatus;
 34224  0026E4  0100               	movlb	0	; () banked
 34225  0026E6  EE20 F008          	lfsr	2,8
 34226  0026EA  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 34227  0026EC  26D9               	addwf	fsr2l,f,c
 34228  0026EE  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 34229  0026F0  22DA               	addwfc	fsr2h,f,c
 34230  0026F2  EE10 F001          	lfsr	1,1
 34231  0026F6  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 34232  0026F8  26E1               	addwf	fsr1l,f,c
 34233  0026FA  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 34234  0026FC  22E2               	addwfc	fsr1h,f,c
 34235  0026FE  CFDF FFE7          	movff	indf2,indf1
 34236                           
 34237                           ; BSR set to: 0
 34238                           ;led.c: 134: LedBlink->LedBlinkState = LedBlinkRunning;
 34239  002702  C08A  FFD9         	movff	LedBlinkStateMachine@LedBlink,fsr2l
 34240  002706  C08B  FFDA         	movff	LedBlinkStateMachine@LedBlink+1,fsr2h
 34241  00270A  D040               	goto	L77
 34242  00270C                     
 34243                           ;led.c: 139: LedBlink->LedBlinkCounter++;
 34244                           
 34245                           ; BSR set to: 0
 34246  00270C  0100               	movlb	0	; () banked
 34247  00270E  EE20 F002          	lfsr	2,2
 34248  002712  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 34249  002714  26D9               	addwf	fsr2l,f,c
 34250  002716  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 34251  002718  22DA               	addwfc	fsr2h,f,c
 34252  00271A  2ADE               	incf	postinc2,f,c
 34253  00271C  0E00               	movlw	0
 34254  00271E  22DD               	addwfc	postdec2,f,c
 34255                           
 34256                           ;led.c: 141: if (LedBlink->LedOutState == OffState)
 34257  002720  EE20 F001          	lfsr	2,1
 34258  002724  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 34259  002726  26D9               	addwf	fsr2l,f,c
 34260  002728  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 34261  00272A  22DA               	addwfc	fsr2h,f,c
 34262  00272C  50DF               	movf	indf2,w,c
 34263  00272E  A4D8               	btfss	status,2,c
 34264  002730  D02F               	goto	l2102
 34265                           
 34266                           ; BSR set to: 0
 34267                           ;led.c: 142: {
 34268                           ;led.c: 144: if (LedBlink->LedBlinkCounter >= (LedBlink->LedOffTimeMs/((UINT16)(50))))
 34269  002732  EE20 F006          	lfsr	2,6
 34270  002736  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 34271  002738  26D9               	addwf	fsr2l,f,c
 34272  00273A  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 34273  00273C  22DA               	addwfc	fsr2h,f,c
 34274  00273E  CFDE F083          	movff	postinc2,___lwdiv@dividend
 34275  002742  CFDD F084          	movff	postdec2,___lwdiv@dividend+1
 34276  002746  0E00               	movlw	0
 34277  002748  6F86               	movwf	(___lwdiv@divisor+1)& (0+255),b
 34278  00274A  0E32               	movlw	50
 34279  00274C  6F85               	movwf	___lwdiv@divisor& (0+255),b
 34280  00274E  ECA0  F02E         	call	___lwdiv	;wreg free
 34281  002752  0100               	movlb	0	; () banked
 34282  002754  EE20 F002          	lfsr	2,2
 34283  002758  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 34284  00275A  26D9               	addwf	fsr2l,f,c
 34285  00275C  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 34286  00275E  22DA               	addwfc	fsr2h,f,c
 34287  002760  5183               	movf	?___lwdiv& (0+255),w,b
 34288  002762  5CDE               	subwf	postinc2,w,c
 34289  002764  5184               	movf	(?___lwdiv+1)& (0+255),w,b
 34290  002766  58DE               	subwfb	postinc2,w,c
 34291  002768  A0D8               	btfss	status,0,c
 34292  00276A  D056               	goto	l2100
 34293                           
 34294                           ; BSR set to: 0
 34295                           ;led.c: 145: {
 34296                           ;led.c: 147: LedBlink->LedBlinkCounter = 0;
 34297  00276C  EE20 F002          	lfsr	2,2
 34298  002770  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 34299  002772  26D9               	addwf	fsr2l,f,c
 34300  002774  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 34301  002776  22DA               	addwfc	fsr2h,f,c
 34302  002778  0E00               	movlw	0
 34303  00277A  6EDE               	movwf	postinc2,c
 34304  00277C  0E00               	movlw	0
 34305  00277E  6EDD               	movwf	postdec2,c
 34306                           
 34307                           ;led.c: 149: LedBlink->LedOutState = OnState;
 34308  002780  EE20 F001          	lfsr	2,1
 34309  002784  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 34310  002786  26D9               	addwf	fsr2l,f,c
 34311  002788  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 34312  00278A  22DA               	addwfc	fsr2h,f,c
 34313  00278C                     L77:
 34314  00278C  0E01               	movlw	1
 34315  00278E  D037               	goto	L78
 34316  002790                     l2102:
 34317                           
 34318                           ; BSR set to: 0
 34319                           ;led.c: 152: else if (LedBlink->LedOutState == OnState)
 34320                           
 34321                           ; BSR set to: 0
 34322  002790  EE20 F001          	lfsr	2,1
 34323  002794  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 34324  002796  26D9               	addwf	fsr2l,f,c
 34325  002798  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 34326  00279A  22DA               	addwfc	fsr2h,f,c
 34327  00279C  04DE               	decf	postinc2,w,c
 34328  00279E  A4D8               	btfss	status,2,c
 34329  0027A0  D03B               	goto	l2100
 34330                           
 34331                           ; BSR set to: 0
 34332                           ;led.c: 153: {
 34333                           ;led.c: 155: if (LedBlink->LedBlinkCounter >= (LedBlink->LedOnTimeMs/((UINT16)(50))))
 34334  0027A2  EE20 F004          	lfsr	2,4
 34335  0027A6  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 34336  0027A8  26D9               	addwf	fsr2l,f,c
 34337  0027AA  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 34338  0027AC  22DA               	addwfc	fsr2h,f,c
 34339  0027AE  CFDE F083          	movff	postinc2,___lwdiv@dividend
 34340  0027B2  CFDD F084          	movff	postdec2,___lwdiv@dividend+1
 34341  0027B6  0E00               	movlw	0
 34342  0027B8  6F86               	movwf	(___lwdiv@divisor+1)& (0+255),b
 34343  0027BA  0E32               	movlw	50
 34344  0027BC  6F85               	movwf	___lwdiv@divisor& (0+255),b
 34345  0027BE  ECA0  F02E         	call	___lwdiv	;wreg free
 34346  0027C2  0100               	movlb	0	; () banked
 34347  0027C4  EE20 F002          	lfsr	2,2
 34348  0027C8  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 34349  0027CA  26D9               	addwf	fsr2l,f,c
 34350  0027CC  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 34351  0027CE  22DA               	addwfc	fsr2h,f,c
 34352  0027D0  5183               	movf	?___lwdiv& (0+255),w,b
 34353  0027D2  5CDE               	subwf	postinc2,w,c
 34354  0027D4  5184               	movf	(?___lwdiv+1)& (0+255),w,b
 34355  0027D6  58DE               	subwfb	postinc2,w,c
 34356  0027D8  A0D8               	btfss	status,0,c
 34357  0027DA  D01E               	goto	l2100
 34358                           
 34359                           ; BSR set to: 0
 34360                           ;led.c: 156: {
 34361                           ;led.c: 158: LedBlink->LedBlinkCounter = 0;
 34362  0027DC  EE20 F002          	lfsr	2,2
 34363  0027E0  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 34364  0027E2  26D9               	addwf	fsr2l,f,c
 34365  0027E4  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 34366  0027E6  22DA               	addwfc	fsr2h,f,c
 34367  0027E8  0E00               	movlw	0
 34368  0027EA  6EDE               	movwf	postinc2,c
 34369  0027EC  0E00               	movlw	0
 34370  0027EE  6EDD               	movwf	postdec2,c
 34371                           
 34372                           ;led.c: 160: LedBlink->LedOutState = OffState;
 34373  0027F0  EE20 F001          	lfsr	2,1
 34374  0027F4  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 34375  0027F6  26D9               	addwf	fsr2l,f,c
 34376  0027F8  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 34377  0027FA  22DA               	addwfc	fsr2h,f,c
 34378  0027FC  0E00               	movlw	0
 34379  0027FE                     L78:
 34380  0027FE  6EDF               	movwf	indf2,c
 34381                           
 34382                           ; BSR set to: 0
 34383                           ;led.c: 167: }
 34384                           
 34385                           ; BSR set to: 0
 34386                           ;led.c: 166: break;
 34387                           
 34388                           ;led.c: 165: default:
 34389                           
 34390                           ; BSR set to: 0
 34391                           ;led.c: 161: }
 34392                           ;led.c: 162: }
 34393                           ;led.c: 163: break;
 34394                           
 34395                           ; BSR set to: 0
 34396                           
 34397                           ; BSR set to: 0
 34398  002800  D00B               	goto	l2100
 34399  002802                     l2098:
 34400                           
 34401                           ; BSR set to: 0
 34402  002802  C08A  FFD9         	movff	LedBlinkStateMachine@LedBlink,fsr2l
 34403  002806  C08B  FFDA         	movff	LedBlinkStateMachine@LedBlink+1,fsr2h
 34404  00280A  50DF               	movf	indf2,w,c
 34405                           
 34406                           ; Switch size 1, requested type "space"
 34407                           ; Number of cases is 2, Range of values is 0 to 1
 34408                           ; switch strategies available:
 34409                           ; Name         Instructions Cycles
 34410                           ; simple_byte            7     4 (average)
 34411                           ;	Chosen strategy is simple_byte
 34412  00280C  0A00               	xorlw	0	; case 0
 34413  00280E  B4D8               	btfsc	status,2,c
 34414  002810  D769               	goto	l2099
 34415  002812  0A01               	xorlw	1	; case 1
 34416  002814  B4D8               	btfsc	status,2,c
 34417  002816  D77A               	goto	l2101
 34418  002818                     l2100:
 34419                           
 34420                           ;led.c: 170: return (LedBlink->LedOutState);
 34421  002818  0100               	movlb	0	; () banked
 34422  00281A  EE20 F001          	lfsr	2,1
 34423  00281E  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 34424  002820  26D9               	addwf	fsr2l,f,c
 34425  002822  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 34426  002824  22DA               	addwfc	fsr2h,f,c
 34427  002826  50DF               	movf	indf2,w,c
 34428  002828  0012               	return	
 34429  00282A                     __end_of_LedBlinkStateMachine:
 34430                           	opt stack 0
 34431                           tosu	equ	0xFFF
 34432                           tosh	equ	0xFFE
 34433                           tosl	equ	0xFFD
 34434                           pclath	equ	0xFFA
 34435                           tblptru	equ	0xFF8
 34436                           tblptrh	equ	0xFF7
 34437                           tblptrl	equ	0xFF6
 34438                           tablat	equ	0xFF5
 34439                           prodh	equ	0xFF4
 34440                           prodl	equ	0xFF3
 34441                           intcon	equ	0xFF2
 34442                           intcon2	equ	0xFF1
 34443                           intcon3	equ	0xFF0
 34444                           indf0	equ	0xFEF
 34445                           postinc0	equ	0xFEE
 34446                           plusw0	equ	0xFEB
 34447                           fsr0h	equ	0xFEA
 34448                           fsr0l	equ	0xFE9
 34449                           wreg	equ	0xFE8
 34450                           indf1	equ	0xFE7
 34451                           postinc1	equ	0xFE6
 34452                           postdec1	equ	0xFE5
 34453                           plusw1	equ	0xFE3
 34454                           fsr1h	equ	0xFE2
 34455                           fsr1l	equ	0xFE1
 34456                           indf2	equ	0xFDF
 34457                           postinc2	equ	0xFDE
 34458                           postdec2	equ	0xFDD
 34459                           plusw2	equ	0xFDB
 34460                           fsr2h	equ	0xFDA
 34461                           fsr2l	equ	0xFD9
 34462                           status	equ	0xFD8
 34463                           
 34464 ;; *************** function ___lwdiv *****************
 34465 ;; Defined at:
 34466 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/lwdiv.c"
 34467 ;; Parameters:    Size  Location     Type
 34468 ;;  dividend        2   35[BANK0 ] unsigned int 
 34469 ;;  divisor         2   37[BANK0 ] unsigned int 
 34470 ;; Auto vars:     Size  Location     Type
 34471 ;;  quotient        2   40[BANK0 ] unsigned int 
 34472 ;;  counter         1   39[BANK0 ] unsigned char 
 34473 ;; Return value:  Size  Location     Type
 34474 ;;                  2   35[BANK0 ] unsigned int 
 34475 ;; Registers used:
 34476 ;;		wreg, status,2, status,0
 34477 ;; Tracked objects:
 34478 ;;		On entry : 0/0
 34479 ;;		On exit  : 0/0
 34480 ;;		Unchanged: 0/0
 34481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34482 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34483 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34484 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34485 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34486 ;;Total ram usage:        7 bytes
 34487 ;; Hardware stack levels used:    1
 34488 ;; Hardware stack levels required when called:   11
 34489 ;; This function calls:
 34490 ;;		Nothing
 34491 ;; This function is called by:
 34492 ;;		_LedBlinkStateMachine
 34493 ;;		_LedPulseStateMachine
 34494 ;;		_secondsAppTimer
 34495 ;;		_utoa
 34496 ;; This function uses a non-reentrant model
 34497 ;;
 34498                           
 34499                           	psect	text160
 34500  005D40                     __ptext160:
 34501                           	opt stack 0
 34502  005D40                     ___lwdiv:
 34503                           	opt stack 14
 34504                           
 34505                           ; BSR set to: 0
 34506                           ;incstack = 0
 34507  005D40  0E00               	movlw	0
 34508  005D42  0100               	movlb	0	; () banked
 34509  005D44  6F89               	movwf	(___lwdiv@quotient+1)& (0+255),b
 34510  005D46  0E00               	movlw	0
 34511  005D48  6F88               	movwf	___lwdiv@quotient& (0+255),b
 34512                           
 34513                           ; BSR set to: 0
 34514  005D4A  5185               	movf	___lwdiv@divisor& (0+255),w,b
 34515  005D4C  1186               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 34516  005D4E  B4D8               	btfsc	status,2,c
 34517  005D50  D01C               	goto	l3389
 34518                           
 34519                           ; BSR set to: 0
 34520  005D52  0E01               	movlw	1
 34521  005D54  6F87               	movwf	___lwdiv@counter& (0+255),b
 34522  005D56  D004               	goto	l3384
 34523  005D58                     
 34524                           ; BSR set to: 0
 34525                           
 34526                           ; BSR set to: 0
 34527  005D58  90D8               	bcf	status,0,c
 34528  005D5A  3785               	rlcf	___lwdiv@divisor& (0+255),f,b
 34529  005D5C  3786               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 34530  005D5E  2B87               	incf	___lwdiv@counter& (0+255),f,b
 34531  005D60                     l3384:
 34532                           
 34533                           ; BSR set to: 0
 34534                           
 34535                           ; BSR set to: 0
 34536  005D60  AF86               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 34537  005D62  D7FA               	goto	l3385
 34538  005D64                     u12220:
 34539                           
 34540                           ; BSR set to: 0
 34541                           
 34542                           ; BSR set to: 0
 34543                           
 34544                           ; BSR set to: 0
 34545  005D64  90D8               	bcf	status,0,c
 34546  005D66  3788               	rlcf	___lwdiv@quotient& (0+255),f,b
 34547  005D68  3789               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 34548                           
 34549                           ; BSR set to: 0
 34550  005D6A  5185               	movf	___lwdiv@divisor& (0+255),w,b
 34551  005D6C  5D83               	subwf	___lwdiv@dividend& (0+255),w,b
 34552  005D6E  5186               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 34553  005D70  5984               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 34554  005D72  A0D8               	btfss	status,0,c
 34555  005D74  D005               	goto	l3388
 34556                           
 34557                           ; BSR set to: 0
 34558  005D76  5185               	movf	___lwdiv@divisor& (0+255),w,b
 34559  005D78  5F83               	subwf	___lwdiv@dividend& (0+255),f,b
 34560  005D7A  5186               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 34561  005D7C  5B84               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 34562                           
 34563                           ; BSR set to: 0
 34564  005D7E  8188               	bsf	___lwdiv@quotient& (0+255),0,b
 34565  005D80                     l3388:
 34566                           
 34567                           ; BSR set to: 0
 34568                           
 34569                           ; BSR set to: 0
 34570  005D80  90D8               	bcf	status,0,c
 34571  005D82  3386               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 34572  005D84  3385               	rrcf	___lwdiv@divisor& (0+255),f,b
 34573                           
 34574                           ; BSR set to: 0
 34575  005D86  2F87               	decfsz	___lwdiv@counter& (0+255),f,b
 34576  005D88  D7ED               	goto	u12220
 34577  005D8A                     l3389:
 34578                           
 34579                           ; BSR set to: 0
 34580                           
 34581                           ; BSR set to: 0
 34582  005D8A  C088  F083         	movff	___lwdiv@quotient,?___lwdiv
 34583  005D8E  C089  F084         	movff	___lwdiv@quotient+1,?___lwdiv+1
 34584                           
 34585                           ; BSR set to: 0
 34586  005D92  0012               	return		;funcret
 34587  005D94                     __end_of___lwdiv:
 34588                           	opt stack 0
 34589                           tosu	equ	0xFFF
 34590                           tosh	equ	0xFFE
 34591                           tosl	equ	0xFFD
 34592                           pclath	equ	0xFFA
 34593                           tblptru	equ	0xFF8
 34594                           tblptrh	equ	0xFF7
 34595                           tblptrl	equ	0xFF6
 34596                           tablat	equ	0xFF5
 34597                           prodh	equ	0xFF4
 34598                           prodl	equ	0xFF3
 34599                           intcon	equ	0xFF2
 34600                           intcon2	equ	0xFF1
 34601                           intcon3	equ	0xFF0
 34602                           indf0	equ	0xFEF
 34603                           postinc0	equ	0xFEE
 34604                           plusw0	equ	0xFEB
 34605                           fsr0h	equ	0xFEA
 34606                           fsr0l	equ	0xFE9
 34607                           wreg	equ	0xFE8
 34608                           indf1	equ	0xFE7
 34609                           postinc1	equ	0xFE6
 34610                           postdec1	equ	0xFE5
 34611                           plusw1	equ	0xFE3
 34612                           fsr1h	equ	0xFE2
 34613                           fsr1l	equ	0xFE1
 34614                           indf2	equ	0xFDF
 34615                           postinc2	equ	0xFDE
 34616                           postdec2	equ	0xFDD
 34617                           plusw2	equ	0xFDB
 34618                           fsr2h	equ	0xFDA
 34619                           fsr2l	equ	0xFD9
 34620                           status	equ	0xFD8
 34621                           
 34622 ;; *************** function _OsAlrm_SetOsAlarm *****************
 34623 ;; Defined at:
 34624 ;;		line 77 in file "../../MercuryFwk/Source/c/02_Osl/os_alarms.c"
 34625 ;; Parameters:    Size  Location     Type
 34626 ;;  OsAlarmId       2   35[BANK0 ] unsigned short 
 34627 ;;  OsAlarmTimeo    4   37[BANK0 ] unsigned long 
 34628 ;;  AlarmCallbac    2   41[BANK0 ] PTR FTN()void 
 34629 ;;		 -> I2cDummyTx(1), 
 34630 ;; Auto vars:     Size  Location     Type
 34631 ;;		None
 34632 ;; Return value:  Size  Location     Type
 34633 ;;                  1    wreg      void 
 34634 ;; Registers used:
 34635 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 34636 ;; Tracked objects:
 34637 ;;		On entry : 0/0
 34638 ;;		On exit  : 0/0
 34639 ;;		Unchanged: 0/0
 34640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34641 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34642 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34644 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34645 ;;Total ram usage:        8 bytes
 34646 ;; Hardware stack levels used:    1
 34647 ;; Hardware stack levels required when called:   12
 34648 ;; This function calls:
 34649 ;;		___wmul
 34650 ;; This function is called by:
 34651 ;;		_I2cSlv_MainTask
 34652 ;; This function uses a non-reentrant model
 34653 ;;
 34654                           
 34655                           	psect	text161
 34656  0041BA                     __ptext161:
 34657                           	opt stack 0
 34658  0041BA                     _OsAlrm_SetOsAlarm:
 34659                           	opt stack 15
 34660                           
 34661                           ;os_alarms.c: 80: OsAlarms[OsAlarmId].Enabled = 1u;
 34662                           
 34663                           ; BSR set to: 0
 34664                           ;incstack = 0
 34665  0041BA  C083  F07D         	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 34666  0041BE  C084  F07E         	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 34667  0041C2  0E00               	movlw	0
 34668  0041C4  0100               	movlb	0	; () banked
 34669  0041C6  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 34670  0041C8  0E0B               	movlw	11
 34671  0041CA  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 34672  0041CC  ECE8  F033         	call	___wmul	;wreg free
 34673  0041D0  0E00               	movlw	low _OsAlarms
 34674  0041D2  0100               	movlb	0	; () banked
 34675  0041D4  257D               	addwf	?___wmul& (0+255),w,b
 34676  0041D6  6ED9               	movwf	fsr2l,c
 34677  0041D8  0E06               	movlw	high _OsAlarms
 34678  0041DA  217E               	addwfc	(?___wmul+1)& (0+255),w,b
 34679  0041DC  6EDA               	movwf	fsr2h,c
 34680  0041DE  0E01               	movlw	1
 34681  0041E0  6EDF               	movwf	indf2,c
 34682                           
 34683                           ;os_alarms.c: 82: OsAlarms[OsAlarmId].Counter = 0;
 34684  0041E2  C083  F07D         	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 34685  0041E6  C084  F07E         	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 34686  0041EA  0E00               	movlw	0
 34687  0041EC  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 34688  0041EE  0E0B               	movlw	11
 34689  0041F0  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 34690  0041F2  ECE8  F033         	call	___wmul	;wreg free
 34691  0041F6  0E01               	movlw	1
 34692  0041F8  0100               	movlb	0	; () banked
 34693  0041FA  277D               	addwf	?___wmul& (0+255),f,b
 34694  0041FC  0E00               	movlw	0
 34695  0041FE  237E               	addwfc	(?___wmul+1)& (0+255),f,b
 34696  004200  0E00               	movlw	low _OsAlarms
 34697  004202  257D               	addwf	?___wmul& (0+255),w,b
 34698  004204  6ED9               	movwf	fsr2l,c
 34699  004206  0E06               	movlw	high _OsAlarms
 34700  004208  217E               	addwfc	(?___wmul+1)& (0+255),w,b
 34701  00420A  6EDA               	movwf	fsr2h,c
 34702  00420C  6ADE               	clrf	postinc2,c
 34703  00420E  6ADE               	clrf	postinc2,c
 34704  004210  6ADE               	clrf	postinc2,c
 34705  004212  6ADD               	clrf	postdec2,c
 34706                           
 34707                           ;os_alarms.c: 84: OsAlarms[OsAlarmId].AlarmTime = OsAlarmTimeout;
 34708  004214  C083  F07D         	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 34709  004218  C084  F07E         	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 34710  00421C  0E00               	movlw	0
 34711  00421E  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 34712  004220  0E0B               	movlw	11
 34713  004222  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 34714  004224  ECE8  F033         	call	___wmul	;wreg free
 34715  004228  0E05               	movlw	5
 34716  00422A  0100               	movlb	0	; () banked
 34717  00422C  277D               	addwf	?___wmul& (0+255),f,b
 34718  00422E  0E00               	movlw	0
 34719  004230  237E               	addwfc	(?___wmul+1)& (0+255),f,b
 34720  004232  0E00               	movlw	low _OsAlarms
 34721  004234  257D               	addwf	?___wmul& (0+255),w,b
 34722  004236  6ED9               	movwf	fsr2l,c
 34723  004238  0E06               	movlw	high _OsAlarms
 34724  00423A  217E               	addwfc	(?___wmul+1)& (0+255),w,b
 34725  00423C  6EDA               	movwf	fsr2h,c
 34726  00423E  C085  FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout,postinc2
 34727  004242  C086  FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout+1,postinc2
 34728  004246  C087  FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout+2,postinc2
 34729  00424A  C088  FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout+3,postinc2
 34730                           
 34731                           ;os_alarms.c: 86: OsAlarms[OsAlarmId].AlrmCbk = AlarmCallback;
 34732  00424E  C083  F07D         	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 34733  004252  C084  F07E         	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 34734  004256  0E00               	movlw	0
 34735  004258  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 34736  00425A  0E0B               	movlw	11
 34737  00425C  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 34738  00425E  ECE8  F033         	call	___wmul	;wreg free
 34739  004262  0E09               	movlw	9
 34740  004264  0100               	movlb	0	; () banked
 34741  004266  277D               	addwf	?___wmul& (0+255),f,b
 34742  004268  0E00               	movlw	0
 34743  00426A  237E               	addwfc	(?___wmul+1)& (0+255),f,b
 34744  00426C  0E00               	movlw	low _OsAlarms
 34745  00426E  257D               	addwf	?___wmul& (0+255),w,b
 34746  004270  6ED9               	movwf	fsr2l,c
 34747  004272  0E06               	movlw	high _OsAlarms
 34748  004274  217E               	addwfc	(?___wmul+1)& (0+255),w,b
 34749  004276  6EDA               	movwf	fsr2h,c
 34750  004278  C089  FFDE         	movff	OsAlrm_SetOsAlarm@AlarmCallback,postinc2
 34751  00427C  C08A  FFDD         	movff	OsAlrm_SetOsAlarm@AlarmCallback+1,postdec2
 34752                           
 34753                           ; BSR set to: 0
 34754  004280  0012               	return		;funcret
 34755  004282                     __end_of_OsAlrm_SetOsAlarm:
 34756                           	opt stack 0
 34757                           tosu	equ	0xFFF
 34758                           tosh	equ	0xFFE
 34759                           tosl	equ	0xFFD
 34760                           pclath	equ	0xFFA
 34761                           tblptru	equ	0xFF8
 34762                           tblptrh	equ	0xFF7
 34763                           tblptrl	equ	0xFF6
 34764                           tablat	equ	0xFF5
 34765                           prodh	equ	0xFF4
 34766                           prodl	equ	0xFF3
 34767                           intcon	equ	0xFF2
 34768                           intcon2	equ	0xFF1
 34769                           intcon3	equ	0xFF0
 34770                           indf0	equ	0xFEF
 34771                           postinc0	equ	0xFEE
 34772                           plusw0	equ	0xFEB
 34773                           fsr0h	equ	0xFEA
 34774                           fsr0l	equ	0xFE9
 34775                           wreg	equ	0xFE8
 34776                           indf1	equ	0xFE7
 34777                           postinc1	equ	0xFE6
 34778                           postdec1	equ	0xFE5
 34779                           plusw1	equ	0xFE3
 34780                           fsr1h	equ	0xFE2
 34781                           fsr1l	equ	0xFE1
 34782                           indf2	equ	0xFDF
 34783                           postinc2	equ	0xFDE
 34784                           postdec2	equ	0xFDD
 34785                           plusw2	equ	0xFDB
 34786                           fsr2h	equ	0xFDA
 34787                           fsr2l	equ	0xFD9
 34788                           status	equ	0xFD8
 34789                           
 34790 ;; *************** function ___wmul *****************
 34791 ;; Defined at:
 34792 ;;		line 15 in file "/opt/microchip/xc8/v1.45/sources/common/Umul16.c"
 34793 ;; Parameters:    Size  Location     Type
 34794 ;;  multiplier      2   29[BANK0 ] unsigned int 
 34795 ;;  multiplicand    2   31[BANK0 ] unsigned int 
 34796 ;; Auto vars:     Size  Location     Type
 34797 ;;  product         2   33[BANK0 ] unsigned int 
 34798 ;; Return value:  Size  Location     Type
 34799 ;;                  2   29[BANK0 ] unsigned int 
 34800 ;; Registers used:
 34801 ;;		wreg, status,2, status,0, prodl, prodh
 34802 ;; Tracked objects:
 34803 ;;		On entry : 0/0
 34804 ;;		On exit  : 0/0
 34805 ;;		Unchanged: 0/0
 34806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34807 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34808 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34809 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34810 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34811 ;;Total ram usage:        6 bytes
 34812 ;; Hardware stack levels used:    1
 34813 ;; Hardware stack levels required when called:   11
 34814 ;; This function calls:
 34815 ;;		Nothing
 34816 ;; This function is called by:
 34817 ;;		_OsAlrm_SetOsAlarm
 34818 ;;		_secondsAppTimer
 34819 ;;		_atoi
 34820 ;; This function uses a non-reentrant model
 34821 ;;
 34822                           
 34823                           	psect	text162
 34824  0067D0                     __ptext162:
 34825                           	opt stack 0
 34826  0067D0                     ___wmul:
 34827                           	opt stack 13
 34828                           
 34829                           ; BSR set to: 0
 34830                           ;incstack = 0
 34831  0067D0  0100               	movlb	0	; () banked
 34832  0067D2  517D               	movf	___wmul@multiplier& (0+255),w,b
 34833  0067D4  037F               	mulwf	___wmul@multiplicand& (0+255),b
 34834  0067D6  CFF3 F081          	movff	prodl,___wmul@product
 34835  0067DA  CFF4 F082          	movff	prodh,___wmul@product+1
 34836  0067DE  517D               	movf	___wmul@multiplier& (0+255),w,b
 34837  0067E0  0380               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 34838  0067E2  50F3               	movf	prodl,w,c
 34839  0067E4  2782               	addwf	(___wmul@product+1)& (0+255),f,b
 34840  0067E6  517E               	movf	(___wmul@multiplier+1)& (0+255),w,b
 34841  0067E8  037F               	mulwf	___wmul@multiplicand& (0+255),b
 34842  0067EA  50F3               	movf	prodl,w,c
 34843  0067EC  2782               	addwf	(___wmul@product+1)& (0+255),f,b
 34844                           
 34845                           ; BSR set to: 0
 34846  0067EE  C081  F07D         	movff	___wmul@product,?___wmul
 34847  0067F2  C082  F07E         	movff	___wmul@product+1,?___wmul+1
 34848  0067F6  0012               	return	
 34849  0067F8                     __end_of___wmul:
 34850                           	opt stack 0
 34851                           tosu	equ	0xFFF
 34852                           tosh	equ	0xFFE
 34853                           tosl	equ	0xFFD
 34854                           pclath	equ	0xFFA
 34855                           tblptru	equ	0xFF8
 34856                           tblptrh	equ	0xFF7
 34857                           tblptrl	equ	0xFF6
 34858                           tablat	equ	0xFF5
 34859                           prodh	equ	0xFF4
 34860                           prodl	equ	0xFF3
 34861                           intcon	equ	0xFF2
 34862                           intcon2	equ	0xFF1
 34863                           intcon3	equ	0xFF0
 34864                           indf0	equ	0xFEF
 34865                           postinc0	equ	0xFEE
 34866                           plusw0	equ	0xFEB
 34867                           fsr0h	equ	0xFEA
 34868                           fsr0l	equ	0xFE9
 34869                           wreg	equ	0xFE8
 34870                           indf1	equ	0xFE7
 34871                           postinc1	equ	0xFE6
 34872                           postdec1	equ	0xFE5
 34873                           plusw1	equ	0xFE3
 34874                           fsr1h	equ	0xFE2
 34875                           fsr1l	equ	0xFE1
 34876                           indf2	equ	0xFDF
 34877                           postinc2	equ	0xFDE
 34878                           postdec2	equ	0xFDD
 34879                           plusw2	equ	0xFDB
 34880                           fsr2h	equ	0xFDA
 34881                           fsr2l	equ	0xFD9
 34882                           status	equ	0xFD8
 34883                           
 34884 ;; *************** function _I2c_InitI2cModule *****************
 34885 ;; Defined at:
 34886 ;;		line 228 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 34887 ;; Parameters:    Size  Location     Type
 34888 ;;  I2cConfig       2   66[BANK0 ] PTR struct _I2cConfig
 34889 ;;		 -> I2cConfig(10), 
 34890 ;; Auto vars:     Size  Location     Type
 34891 ;;		None
 34892 ;; Return value:  Size  Location     Type
 34893 ;;                  1    wreg      void 
 34894 ;; Registers used:
 34895 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 34896 ;; Tracked objects:
 34897 ;;		On entry : 0/0
 34898 ;;		On exit  : 0/0
 34899 ;;		Unchanged: 0/0
 34900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34901 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34902 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34903 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34904 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34905 ;;Total ram usage:        4 bytes
 34906 ;; Hardware stack levels used:    1
 34907 ;; Hardware stack levels required when called:   13
 34908 ;; This function calls:
 34909 ;;		_SetBaudRate
 34910 ;; This function is called by:
 34911 ;;		_I2cSlv_MainTask
 34912 ;; This function uses a non-reentrant model
 34913 ;;
 34914                           
 34915                           	psect	text163
 34916  00556E                     __ptext163:
 34917                           	opt stack 0
 34918  00556E                     _I2c_InitI2cModule:
 34919                           	opt stack 14
 34920                           
 34921                           ;i2c_drv.c: 231: TRISDbits.TRISD1 = ((UINT8)(1));
 34922                           
 34923                           ; BSR set to: 0
 34924                           ;incstack = 0
 34925  00556E  8295               	bsf	3989,1,c	;volatile
 34926                           
 34927                           ;i2c_drv.c: 232: TRISDbits.TRISD0 = ((UINT8)(1));
 34928  005570  8095               	bsf	3989,0,c	;volatile
 34929                           
 34930                           ;i2c_drv.c: 235: SetBaudRate(I2cConfig->I2cBaudRateHz, I2cConfig->McuBusClockHz);
 34931  005572  C0A2  FFD9         	movff	I2c_InitI2cModule@I2cConfig,fsr2l
 34932  005576  C0A3  FFDA         	movff	I2c_InitI2cModule@I2cConfig+1,fsr2h
 34933  00557A  CFDE F096          	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz
 34934  00557E  CFDE F097          	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz+1
 34935  005582  CFDE F098          	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz+2
 34936  005586  CFDE F099          	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz+3
 34937  00558A  0100               	movlb	0	; () banked
 34938  00558C  EE20 F004          	lfsr	2,4
 34939  005590  51A2               	movf	I2c_InitI2cModule@I2cConfig& (0+255),w,b
 34940  005592  26D9               	addwf	fsr2l,f,c
 34941  005594  51A3               	movf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),w,b
 34942  005596  22DA               	addwfc	fsr2h,f,c
 34943  005598  CFDE F09A          	movff	postinc2,SetBaudRate@McuClockHz
 34944  00559C  CFDE F09B          	movff	postinc2,SetBaudRate@McuClockHz+1
 34945  0055A0  CFDE F09C          	movff	postinc2,SetBaudRate@McuClockHz+2
 34946  0055A4  CFDE F09D          	movff	postinc2,SetBaudRate@McuClockHz+3
 34947  0055A8  ECE2  F02F         	call	_SetBaudRate	;wreg free
 34948                           
 34949                           ;i2c_drv.c: 240: SSP2CON1 |= (I2cConfig->I2cModuleMode) << ((UINT8)(0));
 34950  0055AC  0100               	movlb	0	; () banked
 34951  0055AE  EE20 F008          	lfsr	2,8
 34952  0055B2  51A2               	movf	I2c_InitI2cModule@I2cConfig& (0+255),w,b
 34953  0055B4  26D9               	addwf	fsr2l,f,c
 34954  0055B6  51A3               	movf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),w,b
 34955  0055B8  22DA               	addwfc	fsr2h,f,c
 34956  0055BA  50DF               	movf	indf2,w,c
 34957  0055BC  1272               	iorwf	3954,f,c	;volatile
 34958                           
 34959                           ; BSR set to: 0
 34960                           ;i2c_drv.c: 241: SSP2CON1 |= (I2cConfig->EnableI2cModule) << ((UINT8)(5));
 34961  0055BE  EE20 F009          	lfsr	2,9
 34962  0055C2  51A2               	movf	I2c_InitI2cModule@I2cConfig& (0+255),w,b
 34963  0055C4  26D9               	addwf	fsr2l,f,c
 34964  0055C6  51A3               	movf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),w,b
 34965  0055C8  22DA               	addwfc	fsr2h,f,c
 34966  0055CA  50DF               	movf	indf2,w,c
 34967  0055CC  6FA4               	movwf	??_I2c_InitI2cModule& (0+255),b
 34968  0055CE  0E05               	movlw	5
 34969  0055D0  6FA5               	movwf	(??_I2c_InitI2cModule+1)& (0+255),b
 34970  0055D2                     u14805:
 34971  0055D2  90D8               	bcf	status,0,c
 34972  0055D4  37A4               	rlcf	??_I2c_InitI2cModule& (0+255),f,b
 34973  0055D6  2FA5               	decfsz	(??_I2c_InitI2cModule+1)& (0+255),f,b
 34974  0055D8  D7FC               	goto	u14805
 34975  0055DA  51A4               	movf	??_I2c_InitI2cModule& (0+255),w,b
 34976  0055DC  1272               	iorwf	3954,f,c	;volatile
 34977                           
 34978                           ; BSR set to: 0
 34979  0055DE  0012               	return		;funcret
 34980  0055E0                     __end_of_I2c_InitI2cModule:
 34981                           	opt stack 0
 34982                           tosu	equ	0xFFF
 34983                           tosh	equ	0xFFE
 34984                           tosl	equ	0xFFD
 34985                           pclath	equ	0xFFA
 34986                           tblptru	equ	0xFF8
 34987                           tblptrh	equ	0xFF7
 34988                           tblptrl	equ	0xFF6
 34989                           tablat	equ	0xFF5
 34990                           prodh	equ	0xFF4
 34991                           prodl	equ	0xFF3
 34992                           intcon	equ	0xFF2
 34993                           intcon2	equ	0xFF1
 34994                           intcon3	equ	0xFF0
 34995                           indf0	equ	0xFEF
 34996                           postinc0	equ	0xFEE
 34997                           plusw0	equ	0xFEB
 34998                           fsr0h	equ	0xFEA
 34999                           fsr0l	equ	0xFE9
 35000                           wreg	equ	0xFE8
 35001                           indf1	equ	0xFE7
 35002                           postinc1	equ	0xFE6
 35003                           postdec1	equ	0xFE5
 35004                           plusw1	equ	0xFE3
 35005                           fsr1h	equ	0xFE2
 35006                           fsr1l	equ	0xFE1
 35007                           indf2	equ	0xFDF
 35008                           postinc2	equ	0xFDE
 35009                           postdec2	equ	0xFDD
 35010                           plusw2	equ	0xFDB
 35011                           fsr2h	equ	0xFDA
 35012                           fsr2l	equ	0xFD9
 35013                           status	equ	0xFD8
 35014                           
 35015 ;; *************** function _SetBaudRate *****************
 35016 ;; Defined at:
 35017 ;;		line 78 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 35018 ;; Parameters:    Size  Location     Type
 35019 ;;  DesiredI2cBu    4   54[BANK0 ] unsigned long 
 35020 ;;  McuClockHz      4   58[BANK0 ] unsigned long 
 35021 ;; Auto vars:     Size  Location     Type
 35022 ;;		None
 35023 ;; Return value:  Size  Location     Type
 35024 ;;                  1    wreg      void 
 35025 ;; Registers used:
 35026 ;;		wreg, status,2, status,0, cstack
 35027 ;; Tracked objects:
 35028 ;;		On entry : 0/0
 35029 ;;		On exit  : 0/0
 35030 ;;		Unchanged: 0/0
 35031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35032 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35033 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35034 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35035 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35036 ;;Total ram usage:       12 bytes
 35037 ;; Hardware stack levels used:    1
 35038 ;; Hardware stack levels required when called:   12
 35039 ;; This function calls:
 35040 ;;		___lldiv
 35041 ;; This function is called by:
 35042 ;;		_I2c_InitI2cModule
 35043 ;; This function uses a non-reentrant model
 35044 ;;
 35045                           
 35046                           	psect	text164
 35047  005FC4                     __ptext164:
 35048                           	opt stack 0
 35049  005FC4                     _SetBaudRate:
 35050                           	opt stack 14
 35051                           
 35052                           ;i2c_drv.c: 81: SSP2ADD = ((McuClockHz/(4*DesiredI2cBusClockHz)) - 1);
 35053                           
 35054                           ; BSR set to: 0
 35055                           ;incstack = 0
 35056  005FC4  C09A  F089         	movff	SetBaudRate@McuClockHz,___lldiv@dividend
 35057  005FC8  C09B  F08A         	movff	SetBaudRate@McuClockHz+1,___lldiv@dividend+1
 35058  005FCC  C09C  F08B         	movff	SetBaudRate@McuClockHz+2,___lldiv@dividend+2
 35059  005FD0  C09D  F08C         	movff	SetBaudRate@McuClockHz+3,___lldiv@dividend+3
 35060  005FD4  C096  F09E         	movff	SetBaudRate@DesiredI2cBusClockHz,??_SetBaudRate
 35061  005FD8  C097  F09F         	movff	SetBaudRate@DesiredI2cBusClockHz+1,??_SetBaudRate+1
 35062  005FDC  C098  F0A0         	movff	SetBaudRate@DesiredI2cBusClockHz+2,??_SetBaudRate+2
 35063  005FE0  C099  F0A1         	movff	SetBaudRate@DesiredI2cBusClockHz+3,??_SetBaudRate+3
 35064  005FE4  0E02               	movlw	2
 35065  005FE6                     u13565:
 35066  005FE6  90D8               	bcf	status,0,c
 35067  005FE8  0100               	movlb	0	; () banked
 35068  005FEA  379E               	rlcf	??_SetBaudRate& (0+255),f,b
 35069  005FEC  379F               	rlcf	(??_SetBaudRate+1)& (0+255),f,b
 35070  005FEE  37A0               	rlcf	(??_SetBaudRate+2)& (0+255),f,b
 35071  005FF0  37A1               	rlcf	(??_SetBaudRate+3)& (0+255),f,b
 35072  005FF2  2EE8               	decfsz	wreg,f,c
 35073  005FF4  D7F8               	goto	u13565
 35074  005FF6  C09E  F08D         	movff	??_SetBaudRate,___lldiv@divisor
 35075  005FFA  C09F  F08E         	movff	??_SetBaudRate+1,___lldiv@divisor+1
 35076  005FFE  C0A0  F08F         	movff	??_SetBaudRate+2,___lldiv@divisor+2
 35077  006002  C0A1  F090         	movff	??_SetBaudRate+3,___lldiv@divisor+3
 35078  006006  ECC1  F029         	call	___lldiv	;wreg free
 35079  00600A  0100               	movlb	0	; () banked
 35080  00600C  0589               	decf	?___lldiv& (0+255),w,b
 35081  00600E  6E74               	movwf	3956,c	;volatile
 35082                           
 35083                           ; BSR set to: 0
 35084  006010  0012               	return		;funcret
 35085  006012                     __end_of_SetBaudRate:
 35086                           	opt stack 0
 35087                           tosu	equ	0xFFF
 35088                           tosh	equ	0xFFE
 35089                           tosl	equ	0xFFD
 35090                           pclath	equ	0xFFA
 35091                           tblptru	equ	0xFF8
 35092                           tblptrh	equ	0xFF7
 35093                           tblptrl	equ	0xFF6
 35094                           tablat	equ	0xFF5
 35095                           prodh	equ	0xFF4
 35096                           prodl	equ	0xFF3
 35097                           intcon	equ	0xFF2
 35098                           intcon2	equ	0xFF1
 35099                           intcon3	equ	0xFF0
 35100                           indf0	equ	0xFEF
 35101                           postinc0	equ	0xFEE
 35102                           plusw0	equ	0xFEB
 35103                           fsr0h	equ	0xFEA
 35104                           fsr0l	equ	0xFE9
 35105                           wreg	equ	0xFE8
 35106                           indf1	equ	0xFE7
 35107                           postinc1	equ	0xFE6
 35108                           postdec1	equ	0xFE5
 35109                           plusw1	equ	0xFE3
 35110                           fsr1h	equ	0xFE2
 35111                           fsr1l	equ	0xFE1
 35112                           indf2	equ	0xFDF
 35113                           postinc2	equ	0xFDE
 35114                           postdec2	equ	0xFDD
 35115                           plusw2	equ	0xFDB
 35116                           fsr2h	equ	0xFDA
 35117                           fsr2l	equ	0xFD9
 35118                           status	equ	0xFD8
 35119                           
 35120 ;; *************** function ___lldiv *****************
 35121 ;; Defined at:
 35122 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/lldiv.c"
 35123 ;; Parameters:    Size  Location     Type
 35124 ;;  dividend        4   41[BANK0 ] unsigned long 
 35125 ;;  divisor         4   45[BANK0 ] unsigned long 
 35126 ;; Auto vars:     Size  Location     Type
 35127 ;;  quotient        4   49[BANK0 ] unsigned long 
 35128 ;;  counter         1   53[BANK0 ] unsigned char 
 35129 ;; Return value:  Size  Location     Type
 35130 ;;                  4   41[BANK0 ] unsigned long 
 35131 ;; Registers used:
 35132 ;;		wreg, status,2, status,0
 35133 ;; Tracked objects:
 35134 ;;		On entry : 0/0
 35135 ;;		On exit  : 0/0
 35136 ;;		Unchanged: 0/0
 35137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35138 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35139 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35140 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35141 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35142 ;;Total ram usage:       13 bytes
 35143 ;; Hardware stack levels used:    1
 35144 ;; Hardware stack levels required when called:   11
 35145 ;; This function calls:
 35146 ;;		Nothing
 35147 ;; This function is called by:
 35148 ;;		_SetBaudRate
 35149 ;;		_Tmr_TmrBPrSet
 35150 ;;		_SetUartBaudRate
 35151 ;; This function uses a non-reentrant model
 35152 ;;
 35153                           
 35154                           	psect	text165
 35155  005382                     __ptext165:
 35156                           	opt stack 0
 35157  005382                     ___lldiv:
 35158                           	opt stack 15
 35159                           
 35160                           ; BSR set to: 0
 35161                           ;incstack = 0
 35162  005382  0E00               	movlw	0
 35163  005384  0100               	movlb	0	; () banked
 35164  005386  6F91               	movwf	___lldiv@quotient& (0+255),b
 35165  005388  0E00               	movlw	0
 35166  00538A  6F92               	movwf	(___lldiv@quotient+1)& (0+255),b
 35167  00538C  0E00               	movlw	0
 35168  00538E  6F93               	movwf	(___lldiv@quotient+2)& (0+255),b
 35169  005390  0E00               	movlw	0
 35170  005392  6F94               	movwf	(___lldiv@quotient+3)& (0+255),b
 35171                           
 35172                           ; BSR set to: 0
 35173  005394  518D               	movf	___lldiv@divisor& (0+255),w,b
 35174  005396  118E               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 35175  005398  118F               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 35176  00539A  1190               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 35177  00539C  B4D8               	btfsc	status,2,c
 35178  00539E  D02A               	goto	l3336
 35179                           
 35180                           ; BSR set to: 0
 35181  0053A0  0E01               	movlw	1
 35182  0053A2  6F95               	movwf	___lldiv@counter& (0+255),b
 35183  0053A4  D006               	goto	l3331
 35184  0053A6                     
 35185                           ; BSR set to: 0
 35186                           
 35187                           ; BSR set to: 0
 35188  0053A6  90D8               	bcf	status,0,c
 35189  0053A8  378D               	rlcf	___lldiv@divisor& (0+255),f,b
 35190  0053AA  378E               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 35191  0053AC  378F               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 35192  0053AE  3790               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 35193  0053B0  2B95               	incf	___lldiv@counter& (0+255),f,b
 35194  0053B2                     l3331:
 35195                           
 35196                           ; BSR set to: 0
 35197                           
 35198                           ; BSR set to: 0
 35199  0053B2  AF90               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 35200  0053B4  D7F8               	goto	l3332
 35201  0053B6                     u12560:
 35202                           
 35203                           ; BSR set to: 0
 35204                           
 35205                           ; BSR set to: 0
 35206                           
 35207                           ; BSR set to: 0
 35208  0053B6  90D8               	bcf	status,0,c
 35209  0053B8  3791               	rlcf	___lldiv@quotient& (0+255),f,b
 35210  0053BA  3792               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 35211  0053BC  3793               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 35212  0053BE  3794               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 35213                           
 35214                           ; BSR set to: 0
 35215  0053C0  518D               	movf	___lldiv@divisor& (0+255),w,b
 35216  0053C2  5D89               	subwf	___lldiv@dividend& (0+255),w,b
 35217  0053C4  518E               	movf	(___lldiv@divisor+1)& (0+255),w,b
 35218  0053C6  598A               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 35219  0053C8  518F               	movf	(___lldiv@divisor+2)& (0+255),w,b
 35220  0053CA  598B               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 35221  0053CC  5190               	movf	(___lldiv@divisor+3)& (0+255),w,b
 35222  0053CE  598C               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 35223  0053D0  A0D8               	btfss	status,0,c
 35224  0053D2  D009               	goto	l3335
 35225                           
 35226                           ; BSR set to: 0
 35227  0053D4  518D               	movf	___lldiv@divisor& (0+255),w,b
 35228  0053D6  5F89               	subwf	___lldiv@dividend& (0+255),f,b
 35229  0053D8  518E               	movf	(___lldiv@divisor+1)& (0+255),w,b
 35230  0053DA  5B8A               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 35231  0053DC  518F               	movf	(___lldiv@divisor+2)& (0+255),w,b
 35232  0053DE  5B8B               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 35233  0053E0  5190               	movf	(___lldiv@divisor+3)& (0+255),w,b
 35234  0053E2  5B8C               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 35235                           
 35236                           ; BSR set to: 0
 35237  0053E4  8191               	bsf	___lldiv@quotient& (0+255),0,b
 35238  0053E6                     l3335:
 35239                           
 35240                           ; BSR set to: 0
 35241                           
 35242                           ; BSR set to: 0
 35243  0053E6  90D8               	bcf	status,0,c
 35244  0053E8  3390               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 35245  0053EA  338F               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 35246  0053EC  338E               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 35247  0053EE  338D               	rrcf	___lldiv@divisor& (0+255),f,b
 35248                           
 35249                           ; BSR set to: 0
 35250  0053F0  2F95               	decfsz	___lldiv@counter& (0+255),f,b
 35251  0053F2  D7E1               	goto	u12560
 35252  0053F4                     l3336:
 35253                           
 35254                           ; BSR set to: 0
 35255                           
 35256                           ; BSR set to: 0
 35257  0053F4  C091  F089         	movff	___lldiv@quotient,?___lldiv
 35258  0053F8  C092  F08A         	movff	___lldiv@quotient+1,?___lldiv+1
 35259  0053FC  C093  F08B         	movff	___lldiv@quotient+2,?___lldiv+2
 35260  005400  C094  F08C         	movff	___lldiv@quotient+3,?___lldiv+3
 35261                           
 35262                           ; BSR set to: 0
 35263  005404  0012               	return		;funcret
 35264  005406                     __end_of___lldiv:
 35265                           	opt stack 0
 35266                           tosu	equ	0xFFF
 35267                           tosh	equ	0xFFE
 35268                           tosl	equ	0xFFD
 35269                           pclath	equ	0xFFA
 35270                           tblptru	equ	0xFF8
 35271                           tblptrh	equ	0xFF7
 35272                           tblptrl	equ	0xFF6
 35273                           tablat	equ	0xFF5
 35274                           prodh	equ	0xFF4
 35275                           prodl	equ	0xFF3
 35276                           intcon	equ	0xFF2
 35277                           intcon2	equ	0xFF1
 35278                           intcon3	equ	0xFF0
 35279                           indf0	equ	0xFEF
 35280                           postinc0	equ	0xFEE
 35281                           plusw0	equ	0xFEB
 35282                           fsr0h	equ	0xFEA
 35283                           fsr0l	equ	0xFE9
 35284                           wreg	equ	0xFE8
 35285                           indf1	equ	0xFE7
 35286                           postinc1	equ	0xFE6
 35287                           postdec1	equ	0xFE5
 35288                           plusw1	equ	0xFE3
 35289                           fsr1h	equ	0xFE2
 35290                           fsr1l	equ	0xFE1
 35291                           indf2	equ	0xFDF
 35292                           postinc2	equ	0xFDE
 35293                           postdec2	equ	0xFDD
 35294                           plusw2	equ	0xFDB
 35295                           fsr2h	equ	0xFDA
 35296                           fsr2l	equ	0xFD9
 35297                           status	equ	0xFD8
 35298                           
 35299 ;; *************** function _I2cSetConfig *****************
 35300 ;; Defined at:
 35301 ;;		line 101 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 35302 ;; Parameters:    Size  Location     Type
 35303 ;;		None
 35304 ;; Auto vars:     Size  Location     Type
 35305 ;;		None
 35306 ;; Return value:  Size  Location     Type
 35307 ;;                  1    wreg      void 
 35308 ;; Registers used:
 35309 ;;		wreg, status,2
 35310 ;; Tracked objects:
 35311 ;;		On entry : 0/0
 35312 ;;		On exit  : 0/0
 35313 ;;		Unchanged: 0/0
 35314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35315 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35316 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35318 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35319 ;;Total ram usage:        0 bytes
 35320 ;; Hardware stack levels used:    1
 35321 ;; Hardware stack levels required when called:   11
 35322 ;; This function calls:
 35323 ;;		Nothing
 35324 ;; This function is called by:
 35325 ;;		_I2cSlv_MainTask
 35326 ;; This function uses a non-reentrant model
 35327 ;;
 35328                           
 35329                           	psect	text166
 35330  006750                     __ptext166:
 35331                           	opt stack 0
 35332  006750                     _I2cSetConfig:
 35333                           	opt stack 16
 35334                           
 35335                           ;i2c_slv.c: 103: I2cConfig.I2cBaudRateHz = ((UINT32)(400000));
 35336                           
 35337                           ; BSR set to: 0
 35338                           ;incstack = 0
 35339  006750  0E80               	movlw	128
 35340  006752  0103               	movlb	3	; () banked
 35341  006754  6F4F               	movwf	_I2cConfig& (0+255),b
 35342  006756  0E1A               	movlw	26
 35343  006758  6F50               	movwf	(_I2cConfig+1)& (0+255),b
 35344  00675A  0E06               	movlw	6
 35345  00675C  6F51               	movwf	(_I2cConfig+2)& (0+255),b
 35346  00675E  0E00               	movlw	0
 35347  006760  6F52               	movwf	(_I2cConfig+3)& (0+255),b
 35348                           
 35349                           ;i2c_slv.c: 104: I2cConfig.McuBusClockHz = ((UINT32)(48000000));
 35350  006762  0E00               	movlw	0
 35351  006764  6F53               	movwf	(_I2cConfig+4)& (0+255),b
 35352  006766  0E6C               	movlw	108
 35353  006768  6F54               	movwf	(_I2cConfig+5)& (0+255),b
 35354  00676A  0EDC               	movlw	220
 35355  00676C  6F55               	movwf	(_I2cConfig+6)& (0+255),b
 35356  00676E  0E02               	movlw	2
 35357  006770  6F56               	movwf	(_I2cConfig+7)& (0+255),b
 35358                           
 35359                           ;i2c_slv.c: 105: I2cConfig.I2cModuleMode = ((UINT8)(0b1000));
 35360  006772  0E08               	movlw	8
 35361  006774  6F57               	movwf	(_I2cConfig+8)& (0+255),b
 35362                           
 35363                           ;i2c_slv.c: 106: I2cConfig.EnableI2cModule = ((UINT8)(1));
 35364  006776  0E01               	movlw	1
 35365  006778  6F58               	movwf	(_I2cConfig+9)& (0+255),b
 35366                           
 35367                           ; BSR set to: 3
 35368  00677A  0012               	return		;funcret
 35369  00677C                     __end_of_I2cSetConfig:
 35370                           	opt stack 0
 35371                           tosu	equ	0xFFF
 35372                           tosh	equ	0xFFE
 35373                           tosl	equ	0xFFD
 35374                           pclath	equ	0xFFA
 35375                           tblptru	equ	0xFF8
 35376                           tblptrh	equ	0xFF7
 35377                           tblptrl	equ	0xFF6
 35378                           tablat	equ	0xFF5
 35379                           prodh	equ	0xFF4
 35380                           prodl	equ	0xFF3
 35381                           intcon	equ	0xFF2
 35382                           intcon2	equ	0xFF1
 35383                           intcon3	equ	0xFF0
 35384                           indf0	equ	0xFEF
 35385                           postinc0	equ	0xFEE
 35386                           plusw0	equ	0xFEB
 35387                           fsr0h	equ	0xFEA
 35388                           fsr0l	equ	0xFE9
 35389                           wreg	equ	0xFE8
 35390                           indf1	equ	0xFE7
 35391                           postinc1	equ	0xFE6
 35392                           postdec1	equ	0xFE5
 35393                           plusw1	equ	0xFE3
 35394                           fsr1h	equ	0xFE2
 35395                           fsr1l	equ	0xFE1
 35396                           indf2	equ	0xFDF
 35397                           postinc2	equ	0xFDE
 35398                           postdec2	equ	0xFDD
 35399                           plusw2	equ	0xFDB
 35400                           fsr2h	equ	0xFDA
 35401                           fsr2l	equ	0xFD9
 35402                           status	equ	0xFD8
 35403                           
 35404 ;; *************** function _I2cSendMsgSm *****************
 35405 ;; Defined at:
 35406 ;;		line 117 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 35407 ;; Parameters:    Size  Location     Type
 35408 ;;		None
 35409 ;; Auto vars:     Size  Location     Type
 35410 ;;		None
 35411 ;; Return value:  Size  Location     Type
 35412 ;;                  1    wreg      void 
 35413 ;; Registers used:
 35414 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 35415 ;; Tracked objects:
 35416 ;;		On entry : 0/0
 35417 ;;		On exit  : 0/0
 35418 ;;		Unchanged: 0/0
 35419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35420 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35421 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35423 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35424 ;;Total ram usage:        0 bytes
 35425 ;; Hardware stack levels used:    1
 35426 ;; Hardware stack levels required when called:   13
 35427 ;; This function calls:
 35428 ;;		_I2c_ReadData
 35429 ;;		_I2c_WriteData
 35430 ;;		_ReceiveEvt
 35431 ;; This function is called by:
 35432 ;;		_I2cSlv_MainTask
 35433 ;; This function uses a non-reentrant model
 35434 ;;
 35435                           
 35436                           	psect	text167
 35437  004282                     __ptext167:
 35438                           	opt stack 0
 35439  004282                     _I2cSendMsgSm:
 35440                           	opt stack 14
 35441                           
 35442                           ;i2c_slv.c: 120: static I2cComStateType I2cComState = I2cComIdle;
 35443                           ;i2c_slv.c: 122: switch(I2cComState)
 35444                           
 35445                           ; BSR set to: 3
 35446                           ;incstack = 0
 35447  004282  D04F               	goto	l1382
 35448  004284                     
 35449                           ;i2c_slv.c: 126: if (ReceiveEvt(&I2cWriteDataEvt))
 35450  004284  0ED7               	movlw	low _I2cWriteDataEvt
 35451  004286  0100               	movlb	0	; () banked
 35452  004288  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 35453  00428A  0E00               	movlw	high _I2cWriteDataEvt
 35454  00428C  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 35455  00428E  EC91  F033         	call	_ReceiveEvt	;wreg free
 35456  004292  0900               	iorlw	0
 35457  004294  B4D8               	btfsc	status,2,c
 35458  004296  D007               	goto	l1384
 35459                           
 35460                           ;i2c_slv.c: 127: {
 35461                           ;i2c_slv.c: 129: I2cComState = I2cComWriteData;
 35462  004298  0E01               	movlw	1
 35463  00429A  0101               	movlb	1	; () banked
 35464  00429C  6FE3               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 35465                           
 35466                           ;i2c_slv.c: 131: I2cComSts = TxInProgress;
 35467  00429E  0E01               	movlw	1
 35468  0042A0  0100               	movlb	0	; () banked
 35469  0042A2  6FCF               	movwf	_I2cComSts& (0+255),b
 35470                           
 35471                           ;i2c_slv.c: 132: }
 35472  0042A4  0012               	return	
 35473  0042A6                     l1384:
 35474                           
 35475                           ;i2c_slv.c: 133: else if (ReceiveEvt(&I2cReadDataEvt))
 35476                           
 35477                           ; BSR set to: 0
 35478  0042A6  0E39               	movlw	low _I2cReadDataEvt
 35479  0042A8  0100               	movlb	0	; () banked
 35480  0042AA  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 35481  0042AC  0E00               	movlw	high _I2cReadDataEvt
 35482  0042AE  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 35483  0042B0  EC91  F033         	call	_ReceiveEvt	;wreg free
 35484  0042B4  0900               	iorlw	0
 35485  0042B6  B4D8               	btfsc	status,2,c
 35486  0042B8  D007               	goto	l1386
 35487                           
 35488                           ;i2c_slv.c: 134: {
 35489                           ;i2c_slv.c: 136: I2cComState = I2cComReadData;
 35490  0042BA  0E02               	movlw	2
 35491  0042BC  0101               	movlb	1	; () banked
 35492  0042BE  6FE3               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 35493                           
 35494                           ;i2c_slv.c: 138: I2cComSts = RxInProgress;
 35495  0042C0  0E02               	movlw	2
 35496  0042C2  0100               	movlb	0	; () banked
 35497  0042C4  6FCF               	movwf	_I2cComSts& (0+255),b
 35498                           
 35499                           ;i2c_slv.c: 139: }
 35500  0042C6  0012               	return	
 35501  0042C8                     l1386:
 35502                           
 35503                           ;i2c_slv.c: 140: else
 35504                           ;i2c_slv.c: 141: {
 35505                           ;i2c_slv.c: 143: I2cComSts = TxRxIdle;
 35506                           
 35507                           ; BSR set to: 0
 35508  0042C8  0E00               	movlw	0
 35509  0042CA  0100               	movlb	0	; () banked
 35510  0042CC  6FCF               	movwf	_I2cComSts& (0+255),b
 35511                           
 35512                           ; BSR set to: 0
 35513                           ;i2c_slv.c: 144: }
 35514                           ;i2c_slv.c: 145: break;
 35515                           
 35516                           ; BSR set to: 0
 35517  0042CE  0012               	return	
 35518  0042D0                     
 35519                           ;i2c_slv.c: 149: if (I2c_WriteData(&I2cTxPacket) != I2cWriteInProgress)
 35520                           
 35521                           ; BSR set to: 0
 35522  0042D0  0E9B               	movlw	low _I2cTxPacket
 35523  0042D2  0100               	movlb	0	; () banked
 35524  0042D4  6F7E               	movwf	I2c_WriteData@WritePacket& (0+255),b
 35525  0042D6  0E03               	movlw	high _I2cTxPacket
 35526  0042D8  6F7F               	movwf	(I2c_WriteData@WritePacket+1)& (0+255),b
 35527  0042DA  EC59  F00F         	call	_I2c_WriteData	;wreg free
 35528  0042DE  0900               	iorlw	0
 35529  0042E0  B4D8               	btfsc	status,2,c
 35530  0042E2  0012               	return	
 35531                           
 35532                           ;i2c_slv.c: 150: {
 35533                           ;i2c_slv.c: 152: I2cComState = I2cComWriteComplete;
 35534  0042E4  0E03               	movlw	3
 35535  0042E6  0101               	movlb	1	; () banked
 35536  0042E8  6FE3               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 35537                           
 35538                           ; BSR set to: 1
 35539                           ;i2c_slv.c: 153: }
 35540                           ;i2c_slv.c: 154: break;
 35541  0042EA  0012               	return	
 35542  0042EC                     
 35543                           ; BSR set to: 1
 35544                           ;i2c_slv.c: 158: if (I2c_ReadData(&I2cRxPacket) != I2cReadInProgress)
 35545                           
 35546                           ; BSR set to: 1
 35547  0042EC  0E95               	movlw	low _I2cRxPacket
 35548  0042EE  0100               	movlb	0	; () banked
 35549  0042F0  6F80               	movwf	I2c_ReadData@ReadPacket& (0+255),b
 35550  0042F2  0E03               	movlw	high _I2cRxPacket
 35551  0042F4  6F81               	movwf	(I2c_ReadData@ReadPacket+1)& (0+255),b
 35552  0042F6  ECC0  F010         	call	_I2c_ReadData	;wreg free
 35553  0042FA  0900               	iorlw	0
 35554  0042FC  B4D8               	btfsc	status,2,c
 35555  0042FE  0012               	return	
 35556                           
 35557                           ;i2c_slv.c: 159: {
 35558                           ;i2c_slv.c: 161: I2cComState = I2cComReadComplete;
 35559  004300  0E04               	movlw	4
 35560  004302  0101               	movlb	1	; () banked
 35561  004304  6FE3               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 35562                           
 35563                           ; BSR set to: 1
 35564                           ;i2c_slv.c: 162: }
 35565                           ;i2c_slv.c: 164: break;
 35566  004306  0012               	return	
 35567  004308                     
 35568                           ; BSR set to: 1
 35569                           ;i2c_slv.c: 168: I2cComState = I2cComIdle;
 35570                           
 35571                           ; BSR set to: 1
 35572  004308  0E00               	movlw	0
 35573  00430A  6FE3               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 35574                           
 35575                           ;i2c_slv.c: 170: I2cComSts = TxRxIdle;
 35576  00430C  0E00               	movlw	0
 35577  00430E  0100               	movlb	0	; () banked
 35578  004310  6FCF               	movwf	_I2cComSts& (0+255),b
 35579                           
 35580                           ;i2c_slv.c: 171: break;
 35581  004312  0012               	return	
 35582  004314                     
 35583                           ;i2c_slv.c: 175: I2cComState = I2cComIdle;
 35584                           
 35585                           ; BSR set to: 0
 35586  004314  0E00               	movlw	0
 35587  004316  0101               	movlb	1	; () banked
 35588  004318  6FE3               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 35589                           
 35590                           ;i2c_slv.c: 177: I2cComSts = TxRxIdle;
 35591  00431A  0E00               	movlw	0
 35592  00431C  0100               	movlb	0	; () banked
 35593  00431E  6FCF               	movwf	_I2cComSts& (0+255),b
 35594                           
 35595                           ; BSR set to: 0
 35596                           ;i2c_slv.c: 182: }
 35597                           
 35598                           ; BSR set to: 0
 35599                           ;i2c_slv.c: 181: break;
 35600                           
 35601                           ;i2c_slv.c: 180: default:
 35602                           
 35603                           ;i2c_slv.c: 178: break;
 35604  004320  0012               	return	
 35605  004322                     l1382:
 35606                           
 35607                           ; BSR set to: 0
 35608  004322  0101               	movlb	1	; () banked
 35609  004324  51E3               	movf	I2cSendMsgSm@I2cComState& (0+255),w,b
 35610                           
 35611                           ; Switch size 1, requested type "space"
 35612                           ; Number of cases is 5, Range of values is 0 to 4
 35613                           ; switch strategies available:
 35614                           ; Name         Instructions Cycles
 35615                           ; simple_byte           16     9 (average)
 35616                           ;	Chosen strategy is simple_byte
 35617  004326  0A00               	xorlw	0	; case 0
 35618  004328  B4D8               	btfsc	status,2,c
 35619  00432A  D7AC               	goto	l1383
 35620  00432C  0A01               	xorlw	1	; case 1
 35621  00432E  B4D8               	btfsc	status,2,c
 35622  004330  D7CF               	goto	l1389
 35623  004332  0A03               	xorlw	3	; case 2
 35624  004334  B4D8               	btfsc	status,2,c
 35625  004336  D7DA               	goto	l1391
 35626  004338  0A01               	xorlw	1	; case 3
 35627  00433A  B4D8               	btfsc	status,2,c
 35628  00433C  D7E5               	goto	l1393
 35629  00433E  0A07               	xorlw	7	; case 4
 35630  004340  A4D8               	btfss	status,2,c
 35631  004342  0012               	return	
 35632  004344  D7E7               	goto	l1394
 35633  004346                     __end_of_I2cSendMsgSm:
 35634                           	opt stack 0
 35635                           tosu	equ	0xFFF
 35636                           tosh	equ	0xFFE
 35637                           tosl	equ	0xFFD
 35638                           pclath	equ	0xFFA
 35639                           tblptru	equ	0xFF8
 35640                           tblptrh	equ	0xFF7
 35641                           tblptrl	equ	0xFF6
 35642                           tablat	equ	0xFF5
 35643                           prodh	equ	0xFF4
 35644                           prodl	equ	0xFF3
 35645                           intcon	equ	0xFF2
 35646                           intcon2	equ	0xFF1
 35647                           intcon3	equ	0xFF0
 35648                           indf0	equ	0xFEF
 35649                           postinc0	equ	0xFEE
 35650                           plusw0	equ	0xFEB
 35651                           fsr0h	equ	0xFEA
 35652                           fsr0l	equ	0xFE9
 35653                           wreg	equ	0xFE8
 35654                           indf1	equ	0xFE7
 35655                           postinc1	equ	0xFE6
 35656                           postdec1	equ	0xFE5
 35657                           plusw1	equ	0xFE3
 35658                           fsr1h	equ	0xFE2
 35659                           fsr1l	equ	0xFE1
 35660                           indf2	equ	0xFDF
 35661                           postinc2	equ	0xFDE
 35662                           postdec2	equ	0xFDD
 35663                           plusw2	equ	0xFDB
 35664                           fsr2h	equ	0xFDA
 35665                           fsr2l	equ	0xFD9
 35666                           status	equ	0xFD8
 35667                           
 35668 ;; *************** function _ReceiveEvt *****************
 35669 ;; Defined at:
 35670 ;;		line 99 in file "../../MercuryFwk/Source/c/02_Osl/os_ser.c"
 35671 ;; Parameters:    Size  Location     Type
 35672 ;;  Event           2   29[BANK0 ] PTR struct EventStructur
 35673 ;;		 -> I2cRxPacket(6), I2cReadDataEvt(1), I2cWriteDataEvt(1), GetMethod(1), 
 35674 ;;		 -> InitNetwork(1), SmsTxtReady(1), GetSmsText(1), SmsEvent(1), 
 35675 ;;		 -> ClipEvent(1), RingEvent(1), SendSmsEvent(1), NewStringMdmTerminal(1), 
 35676 ;;		 -> NewMdmEvtParserRequest(1), NewStringReceived(1), MdmResetRequest(1), MdmOnOffPulseRequest(1), 
 35677 ;;		 -> ActivateRiDetection(1), 
 35678 ;; Auto vars:     Size  Location     Type
 35679 ;;  EventStatus     1   32[BANK0 ] enum E7727
 35680 ;; Return value:  Size  Location     Type
 35681 ;;                  1    wreg      enum E7699
 35682 ;; Registers used:
 35683 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 35684 ;; Tracked objects:
 35685 ;;		On entry : 0/0
 35686 ;;		On exit  : 0/0
 35687 ;;		Unchanged: 0/0
 35688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35689 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35690 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35691 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35692 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35693 ;;Total ram usage:        4 bytes
 35694 ;; Hardware stack levels used:    1
 35695 ;; Hardware stack levels required when called:   11
 35696 ;; This function calls:
 35697 ;;		Nothing
 35698 ;; This function is called by:
 35699 ;;		_MdmCntSm
 35700 ;;		_CheckModem
 35701 ;;		_ModemEvtParser
 35702 ;;		_GetSmsSm
 35703 ;;		_SendSmsSm
 35704 ;;		_Mdm_GetSmsData
 35705 ;;		_Mdm_IsSmsReceived
 35706 ;;		_Mdm_IsRinging
 35707 ;;		_GetCallerNumber
 35708 ;;		_InitGprsNetwork
 35709 ;;		_HttpGetMethod
 35710 ;;		_I2cSendMsgSm
 35711 ;;		_I2cSlv_I2cReadMsgSts
 35712 ;;		_RiSm
 35713 ;;		_GsmGprsTerminal
 35714 ;; This function uses a non-reentrant model
 35715 ;;
 35716                           
 35717                           	psect	text168
 35718  006722                     __ptext168:
 35719                           	opt stack 0
 35720  006722                     _ReceiveEvt:
 35721                           	opt stack 13
 35722                           
 35723                           ;os_ser.c: 102: EventStatusType EventStatus = EventIdle;
 35724                           
 35725                           ;incstack = 0
 35726  006722  0E00               	movlw	0
 35727  006724  0100               	movlb	0	; () banked
 35728  006726  6F80               	movwf	ReceiveEvt@EventStatus& (0+255),b
 35729                           
 35730                           ; BSR set to: 0
 35731                           ;os_ser.c: 105: if (Event->EventStatus == EventSent)
 35732  006728  C07D  FFD9         	movff	ReceiveEvt@Event,fsr2l
 35733  00672C  C07E  FFDA         	movff	ReceiveEvt@Event+1,fsr2h
 35734  006730  0E02               	movlw	2
 35735  006732  18DE               	xorwf	postinc2,w,c
 35736  006734  A4D8               	btfss	status,2,c
 35737  006736  D008               	goto	l832
 35738                           
 35739                           ; BSR set to: 0
 35740                           ;os_ser.c: 106: {
 35741                           ;os_ser.c: 108: Event->EventStatus = EventReceived;
 35742  006738  C07D  FFD9         	movff	ReceiveEvt@Event,fsr2l
 35743  00673C  C07E  FFDA         	movff	ReceiveEvt@Event+1,fsr2h
 35744  006740  0E01               	movlw	1
 35745  006742  6EDF               	movwf	indf2,c
 35746                           
 35747                           ; BSR set to: 0
 35748                           ;os_ser.c: 110: EventStatus = EventReceived;
 35749  006744  0E01               	movlw	1
 35750  006746  D001               	goto	L79
 35751  006748                     l832:
 35752                           
 35753                           ; BSR set to: 0
 35754                           ;os_ser.c: 112: else
 35755                           ;os_ser.c: 113: {
 35756                           ;os_ser.c: 115: EventStatus = EventIdle;
 35757                           
 35758                           ; BSR set to: 0
 35759  006748  0E00               	movlw	0
 35760  00674A                     L79:
 35761  00674A  6F80               	movwf	ReceiveEvt@EventStatus& (0+255),b
 35762                           
 35763                           ; BSR set to: 0
 35764                           ;os_ser.c: 116: }
 35765                           ;os_ser.c: 119: return(EventStatus);
 35766  00674C  5180               	movf	ReceiveEvt@EventStatus& (0+255),w,b
 35767  00674E  0012               	return	
 35768  006750                     __end_of_ReceiveEvt:
 35769                           	opt stack 0
 35770                           tosu	equ	0xFFF
 35771                           tosh	equ	0xFFE
 35772                           tosl	equ	0xFFD
 35773                           pclath	equ	0xFFA
 35774                           tblptru	equ	0xFF8
 35775                           tblptrh	equ	0xFF7
 35776                           tblptrl	equ	0xFF6
 35777                           tablat	equ	0xFF5
 35778                           prodh	equ	0xFF4
 35779                           prodl	equ	0xFF3
 35780                           intcon	equ	0xFF2
 35781                           intcon2	equ	0xFF1
 35782                           intcon3	equ	0xFF0
 35783                           indf0	equ	0xFEF
 35784                           postinc0	equ	0xFEE
 35785                           plusw0	equ	0xFEB
 35786                           fsr0h	equ	0xFEA
 35787                           fsr0l	equ	0xFE9
 35788                           wreg	equ	0xFE8
 35789                           indf1	equ	0xFE7
 35790                           postinc1	equ	0xFE6
 35791                           postdec1	equ	0xFE5
 35792                           plusw1	equ	0xFE3
 35793                           fsr1h	equ	0xFE2
 35794                           fsr1l	equ	0xFE1
 35795                           indf2	equ	0xFDF
 35796                           postinc2	equ	0xFDE
 35797                           postdec2	equ	0xFDD
 35798                           plusw2	equ	0xFDB
 35799                           fsr2h	equ	0xFDA
 35800                           fsr2l	equ	0xFD9
 35801                           status	equ	0xFD8
 35802                           
 35803 ;; *************** function _I2c_WriteData *****************
 35804 ;; Defined at:
 35805 ;;		line 252 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 35806 ;; Parameters:    Size  Location     Type
 35807 ;;  WritePacket     2   30[BANK0 ] PTR struct _I2cWritePack
 35808 ;;		 -> I2cTxPacket(5), 
 35809 ;; Auto vars:     Size  Location     Type
 35810 ;;		None
 35811 ;; Return value:  Size  Location     Type
 35812 ;;                  1    wreg      enum E7740
 35813 ;; Registers used:
 35814 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 35815 ;; Tracked objects:
 35816 ;;		On entry : 0/0
 35817 ;;		On exit  : 0/0
 35818 ;;		Unchanged: 0/0
 35819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35820 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35821 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35822 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35823 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35824 ;;Total ram usage:        4 bytes
 35825 ;; Hardware stack levels used:    1
 35826 ;; Hardware stack levels required when called:   12
 35827 ;; This function calls:
 35828 ;;		_CheckAckStatus
 35829 ;;		_CheckTxStatus
 35830 ;;		_StartCondition
 35831 ;;		_StopCondition
 35832 ;;		_WriteByte
 35833 ;; This function is called by:
 35834 ;;		_I2cSendMsgSm
 35835 ;; This function uses a non-reentrant model
 35836 ;;
 35837                           
 35838                           	psect	text169
 35839  001EB2                     __ptext169:
 35840                           	opt stack 0
 35841  001EB2                     _I2c_WriteData:
 35842                           	opt stack 14
 35843                           
 35844                           ;i2c_drv.c: 255: static I2cWriteStateType I2cWriteState = TxAssertStart;
 35845                           ;i2c_drv.c: 256: static I2cWriteStateType I2cNextState = TxAssertStart;
 35846                           ;i2c_drv.c: 257: static UINT8 TentativeCounter = 0;
 35847                           ;i2c_drv.c: 258: static I2cWriteStsType WriteStatus;
 35848                           ;i2c_drv.c: 260: switch (I2cWriteState)
 35849                           
 35850                           ; BSR set to: 0
 35851                           ;incstack = 0
 35852  001EB2  D095               	goto	l160
 35853  001EB4                     
 35854                           ;i2c_drv.c: 264: StartCondition();
 35855  001EB4  EC54  F036         	call	_StartCondition	;wreg free
 35856                           
 35857                           ;i2c_drv.c: 266: WriteStatus = I2cWriteInProgress;
 35858  001EB8  0E00               	movlw	0
 35859  001EBA  6E35               	movwf	I2c_WriteData@WriteStatus,c
 35860                           
 35861                           ;i2c_drv.c: 268: I2cWriteState = TxSendSlaveAddress;
 35862  001EBC  0E01               	movlw	1
 35863  001EBE  D084               	goto	L86
 35864  001EC0                     
 35865                           ;i2c_drv.c: 273: WritePacket->SlaveAddress = ((WritePacket->SlaveAddress) << 1) | WriteP
      +                          acket->ReadWrite;
 35866  001EC0  0100               	movlb	0	; () banked
 35867  001EC2  EE20 F001          	lfsr	2,1
 35868  001EC6  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 35869  001EC8  26D9               	addwf	fsr2l,f,c
 35870  001ECA  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 35871  001ECC  22DA               	addwfc	fsr2h,f,c
 35872  001ECE  50DF               	movf	indf2,w,c
 35873  001ED0  6F80               	movwf	??_I2c_WriteData& (0+255),b
 35874  001ED2  C07E  FFD9         	movff	I2c_WriteData@WritePacket,fsr2l
 35875  001ED6  C07F  FFDA         	movff	I2c_WriteData@WritePacket+1,fsr2h
 35876  001EDA  50DF               	movf	indf2,w,c
 35877  001EDC  6F81               	movwf	(??_I2c_WriteData+1)& (0+255),b
 35878  001EDE  90D8               	bcf	status,0,c
 35879  001EE0  3581               	rlcf	(??_I2c_WriteData+1)& (0+255),w,b
 35880  001EE2  1180               	iorwf	??_I2c_WriteData& (0+255),w,b
 35881  001EE4  C07E  FFD9         	movff	I2c_WriteData@WritePacket,fsr2l
 35882  001EE8  C07F  FFDA         	movff	I2c_WriteData@WritePacket+1,fsr2h
 35883  001EEC  6EDF               	movwf	indf2,c
 35884                           
 35885                           ; BSR set to: 0
 35886                           ;i2c_drv.c: 275: WriteByte(WritePacket->SlaveAddress);
 35887  001EEE  C07E  FFD9         	movff	I2c_WriteData@WritePacket,fsr2l
 35888  001EF2  C07F  FFDA         	movff	I2c_WriteData@WritePacket+1,fsr2h
 35889  001EF6  50DF               	movf	indf2,w,c
 35890  001EF8  EC32  F036         	call	_WriteByte
 35891                           
 35892                           ;i2c_drv.c: 277: I2cWriteState = TxCheckTxAddr;
 35893  001EFC  0E02               	movlw	2
 35894  001EFE  6E38               	movwf	I2c_WriteData@I2cWriteState,c
 35895  001F00                     
 35896                           ;i2c_drv.c: 281: if (CheckTxStatus() == ((UINT8)(0)))
 35897  001F00  EC3C  F036         	call	_CheckTxStatus	;wreg free
 35898  001F04  0900               	iorlw	0
 35899  001F06  A4D8               	btfss	status,2,c
 35900  001F08  D089               	goto	l162
 35901                           
 35902                           ;i2c_drv.c: 282: {
 35903                           ;i2c_drv.c: 284: I2cNextState = TxSendDataByte;
 35904  001F0A  0E03               	movlw	3
 35905  001F0C  D01A               	goto	L88
 35906  001F0E                     
 35907                           ;i2c_drv.c: 292: WriteByte(*(WritePacket->Buffer));
 35908  001F0E  0100               	movlb	0	; () banked
 35909  001F10  EE20 F002          	lfsr	2,2
 35910  001F14  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 35911  001F16  26D9               	addwf	fsr2l,f,c
 35912  001F18  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 35913  001F1A  22DA               	addwfc	fsr2h,f,c
 35914  001F1C  CFDE F080          	movff	postinc2,??_I2c_WriteData
 35915  001F20  CFDD F081          	movff	postdec2,??_I2c_WriteData+1
 35916  001F24  C080  FFD9         	movff	??_I2c_WriteData,fsr2l
 35917  001F28  C081  FFDA         	movff	??_I2c_WriteData+1,fsr2h
 35918  001F2C  50DF               	movf	indf2,w,c
 35919  001F2E  EC32  F036         	call	_WriteByte
 35920                           
 35921                           ;i2c_drv.c: 294: I2cWriteState = TxCheckTxData;
 35922  001F32  0E04               	movlw	4
 35923  001F34  D049               	goto	L86
 35924  001F36                     
 35925                           ;i2c_drv.c: 299: if (CheckTxStatus() == ((UINT8)(0)))
 35926  001F36  EC3C  F036         	call	_CheckTxStatus	;wreg free
 35927  001F3A  0900               	iorlw	0
 35928  001F3C  A4D8               	btfss	status,2,c
 35929  001F3E  D06E               	goto	l162
 35930                           
 35931                           ;i2c_drv.c: 300: {
 35932                           ;i2c_drv.c: 302: I2cNextState = TxCheckLenght;
 35933  001F40  0E05               	movlw	5
 35934  001F42                     L88:
 35935  001F42  6E37               	movwf	I2c_WriteData@I2cNextState,c
 35936                           
 35937                           ;i2c_drv.c: 304: I2cWriteState = TxCheckAck;
 35938  001F44  0E08               	movlw	8
 35939  001F46  D040               	goto	L86
 35940  001F48                     
 35941                           ;i2c_drv.c: 309: if (WritePacket->Lenght > 0)
 35942  001F48  0100               	movlb	0	; () banked
 35943  001F4A  EE20 F004          	lfsr	2,4
 35944  001F4E  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 35945  001F50  26D9               	addwf	fsr2l,f,c
 35946  001F52  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 35947  001F54  22DA               	addwfc	fsr2h,f,c
 35948  001F56  50DF               	movf	indf2,w,c
 35949  001F58  B4D8               	btfsc	status,2,c
 35950  001F5A  D010               	goto	l170
 35951                           
 35952                           ; BSR set to: 0
 35953                           ;i2c_drv.c: 310: {
 35954                           ;i2c_drv.c: 312: (WritePacket->Lenght)--;
 35955  001F5C  EE20 F004          	lfsr	2,4
 35956  001F60  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 35957  001F62  26D9               	addwf	fsr2l,f,c
 35958  001F64  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 35959  001F66  22DA               	addwfc	fsr2h,f,c
 35960  001F68  06DF               	decf	indf2,f,c
 35961                           
 35962                           ;i2c_drv.c: 314: WritePacket->Buffer++;
 35963  001F6A  EE20 F002          	lfsr	2,2
 35964  001F6E  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 35965  001F70  26D9               	addwf	fsr2l,f,c
 35966  001F72  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 35967  001F74  22DA               	addwfc	fsr2h,f,c
 35968  001F76  2ADE               	incf	postinc2,f,c
 35969  001F78  0E00               	movlw	0
 35970  001F7A  22DD               	addwfc	postdec2,f,c
 35971  001F7C                     l170:
 35972                           
 35973                           ; BSR set to: 0
 35974                           ;i2c_drv.c: 315: }
 35975                           ;i2c_drv.c: 318: if (WritePacket->Lenght == 0)
 35976  001F7C  EE20 F004          	lfsr	2,4
 35977  001F80  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 35978  001F82  26D9               	addwf	fsr2l,f,c
 35979  001F84  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 35980  001F86  22DA               	addwfc	fsr2h,f,c
 35981  001F88  50DF               	movf	indf2,w,c
 35982  001F8A  A4D8               	btfss	status,2,c
 35983  001F8C  D002               	goto	l171
 35984                           
 35985                           ; BSR set to: 0
 35986                           ;i2c_drv.c: 319: {
 35987                           ;i2c_drv.c: 321: I2cWriteState = TxAssertStop;
 35988  001F8E  0E06               	movlw	6
 35989  001F90  D01B               	goto	L86
 35990  001F92                     l171:
 35991                           
 35992                           ; BSR set to: 0
 35993                           ;i2c_drv.c: 323: else
 35994                           ;i2c_drv.c: 324: {
 35995                           ;i2c_drv.c: 326: I2cWriteState = TxSendDataByte;
 35996                           
 35997                           ; BSR set to: 0
 35998  001F92  0E03               	movlw	3
 35999  001F94  D019               	goto	L86
 36000  001F96                     
 36001                           ;i2c_drv.c: 332: StopCondition();
 36002                           
 36003                           ; BSR set to: 0
 36004  001F96  EC52  F036         	call	_StopCondition	;wreg free
 36005                           
 36006                           ;i2c_drv.c: 334: I2cWriteState = TxCompleted;
 36007  001F9A  0E07               	movlw	7
 36008  001F9C  D015               	goto	L86
 36009  001F9E                     
 36010                           ;i2c_drv.c: 339: I2cWriteState = TxAssertStart;
 36011  001F9E  0E00               	movlw	0
 36012  001FA0  6E38               	movwf	I2c_WriteData@I2cWriteState,c
 36013                           
 36014                           ;i2c_drv.c: 340: I2cNextState = TxAssertStart;
 36015  001FA2  0E00               	movlw	0
 36016  001FA4  6E37               	movwf	I2c_WriteData@I2cNextState,c
 36017                           
 36018                           ;i2c_drv.c: 342: WriteStatus = I2cWriteOk;
 36019  001FA6  0E02               	movlw	2
 36020  001FA8  D018               	goto	L87
 36021  001FAA                     
 36022                           ;i2c_drv.c: 347: TentativeCounter++;
 36023  001FAA  2A36               	incf	I2c_WriteData@TentativeCounter,f,c
 36024                           
 36025                           ;i2c_drv.c: 349: if (CheckAckStatus() == ((UINT8)(0)))
 36026  001FAC  EC41  F036         	call	_CheckAckStatus	;wreg free
 36027  001FB0  0900               	iorlw	0
 36028  001FB2  A4D8               	btfss	status,2,c
 36029  001FB4  D005               	goto	l176
 36030                           
 36031                           ;i2c_drv.c: 350: {
 36032                           ;i2c_drv.c: 352: TentativeCounter = 0;
 36033  001FB6  0E00               	movlw	0
 36034  001FB8  6E36               	movwf	I2c_WriteData@TentativeCounter,c
 36035                           
 36036                           ;i2c_drv.c: 354: I2cWriteState = I2cNextState;
 36037  001FBA  C037  F038         	movff	I2c_WriteData@I2cNextState,I2c_WriteData@I2cWriteState
 36038                           
 36039                           ;i2c_drv.c: 355: }
 36040  001FBE  D02E               	goto	l162
 36041  001FC0                     l176:
 36042                           
 36043                           ;i2c_drv.c: 356: else
 36044                           ;i2c_drv.c: 357: {
 36045                           ;i2c_drv.c: 359: if (TentativeCounter >= ((UINT8)(3)))
 36046  001FC0  0E02               	movlw	2
 36047  001FC2  6436               	cpfsgt	I2c_WriteData@TentativeCounter,c
 36048  001FC4  D02B               	goto	l162
 36049                           
 36050                           ;i2c_drv.c: 360: {
 36051                           ;i2c_drv.c: 362: I2cWriteState = TxErrorStatus;
 36052  001FC6  0E09               	movlw	9
 36053  001FC8                     L86:
 36054  001FC8  6E38               	movwf	I2c_WriteData@I2cWriteState,c
 36055                           
 36056                           ;i2c_drv.c: 363: }
 36057                           ;i2c_drv.c: 364: }
 36058                           ;i2c_drv.c: 365: break;
 36059  001FCA  D028               	goto	l162
 36060  001FCC                     
 36061                           ;i2c_drv.c: 369: I2cWriteState = TxAssertStart;
 36062  001FCC  0E00               	movlw	0
 36063  001FCE  6E38               	movwf	I2c_WriteData@I2cWriteState,c
 36064                           
 36065                           ;i2c_drv.c: 370: I2cNextState = TxAssertStart;
 36066  001FD0  0E00               	movlw	0
 36067  001FD2  6E37               	movwf	I2c_WriteData@I2cNextState,c
 36068                           
 36069                           ;i2c_drv.c: 372: TentativeCounter = 0;
 36070  001FD4  0E00               	movlw	0
 36071  001FD6  6E36               	movwf	I2c_WriteData@TentativeCounter,c
 36072                           
 36073                           ;i2c_drv.c: 374: WriteStatus = I2cWriteNotOk;
 36074  001FD8  0E01               	movlw	1
 36075  001FDA                     L87:
 36076  001FDA  6E35               	movwf	I2c_WriteData@WriteStatus,c
 36077                           
 36078                           ;i2c_drv.c: 379: }
 36079                           
 36080                           ;i2c_drv.c: 378: break;
 36081                           
 36082                           ;i2c_drv.c: 377: default:
 36083                           
 36084                           ;i2c_drv.c: 375: break;
 36085  001FDC  D01F               	goto	l162
 36086  001FDE                     l160:
 36087  001FDE  5038               	movf	I2c_WriteData@I2cWriteState,w,c
 36088                           
 36089                           ; Switch size 1, requested type "space"
 36090                           ; Number of cases is 10, Range of values is 0 to 9
 36091                           ; switch strategies available:
 36092                           ; Name         Instructions Cycles
 36093                           ; simple_byte           31    16 (average)
 36094                           ;	Chosen strategy is simple_byte
 36095  001FE0  0A00               	xorlw	0	; case 0
 36096  001FE2  B4D8               	btfsc	status,2,c
 36097  001FE4  D767               	goto	l161
 36098  001FE6  0A01               	xorlw	1	; case 1
 36099  001FE8  B4D8               	btfsc	status,2,c
 36100  001FEA  D76A               	goto	l163
 36101  001FEC  0A03               	xorlw	3	; case 2
 36102  001FEE  B4D8               	btfsc	status,2,c
 36103  001FF0  D787               	goto	l164
 36104  001FF2  0A01               	xorlw	1	; case 3
 36105  001FF4  B4D8               	btfsc	status,2,c
 36106  001FF6  D78B               	goto	l166
 36107  001FF8  0A07               	xorlw	7	; case 4
 36108  001FFA  B4D8               	btfsc	status,2,c
 36109  001FFC  D79C               	goto	l167
 36110  001FFE  0A01               	xorlw	1	; case 5
 36111  002000  B4D8               	btfsc	status,2,c
 36112  002002  D7A2               	goto	l169
 36113  002004  0A03               	xorlw	3	; case 6
 36114  002006  B4D8               	btfsc	status,2,c
 36115  002008  D7C6               	goto	l173
 36116  00200A  0A01               	xorlw	1	; case 7
 36117  00200C  B4D8               	btfsc	status,2,c
 36118  00200E  D7C7               	goto	l174
 36119  002010  0A0F               	xorlw	15	; case 8
 36120  002012  B4D8               	btfsc	status,2,c
 36121  002014  D7CA               	goto	l175
 36122  002016  0A01               	xorlw	1	; case 9
 36123  002018  B4D8               	btfsc	status,2,c
 36124  00201A  D7D8               	goto	l179
 36125  00201C                     l162:
 36126                           
 36127                           ;i2c_drv.c: 382: return WriteStatus;
 36128  00201C  5035               	movf	I2c_WriteData@WriteStatus,w,c
 36129  00201E  0012               	return	
 36130  002020                     __end_of_I2c_WriteData:
 36131                           	opt stack 0
 36132                           tosu	equ	0xFFF
 36133                           tosh	equ	0xFFE
 36134                           tosl	equ	0xFFD
 36135                           pclath	equ	0xFFA
 36136                           tblptru	equ	0xFF8
 36137                           tblptrh	equ	0xFF7
 36138                           tblptrl	equ	0xFF6
 36139                           tablat	equ	0xFF5
 36140                           prodh	equ	0xFF4
 36141                           prodl	equ	0xFF3
 36142                           intcon	equ	0xFF2
 36143                           intcon2	equ	0xFF1
 36144                           intcon3	equ	0xFF0
 36145                           indf0	equ	0xFEF
 36146                           postinc0	equ	0xFEE
 36147                           plusw0	equ	0xFEB
 36148                           fsr0h	equ	0xFEA
 36149                           fsr0l	equ	0xFE9
 36150                           wreg	equ	0xFE8
 36151                           indf1	equ	0xFE7
 36152                           postinc1	equ	0xFE6
 36153                           postdec1	equ	0xFE5
 36154                           plusw1	equ	0xFE3
 36155                           fsr1h	equ	0xFE2
 36156                           fsr1l	equ	0xFE1
 36157                           indf2	equ	0xFDF
 36158                           postinc2	equ	0xFDE
 36159                           postdec2	equ	0xFDD
 36160                           plusw2	equ	0xFDB
 36161                           fsr2h	equ	0xFDA
 36162                           fsr2l	equ	0xFD9
 36163                           status	equ	0xFD8
 36164                           
 36165 ;; *************** function _I2c_ReadData *****************
 36166 ;; Defined at:
 36167 ;;		line 393 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 36168 ;; Parameters:    Size  Location     Type
 36169 ;;  ReadPacket      2   32[BANK0 ] PTR struct _I2cReadPacke
 36170 ;;		 -> I2cRxPacket(6), 
 36171 ;; Auto vars:     Size  Location     Type
 36172 ;;		None
 36173 ;; Return value:  Size  Location     Type
 36174 ;;                  1    wreg      enum E7787
 36175 ;; Registers used:
 36176 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 36177 ;; Tracked objects:
 36178 ;;		On entry : 0/0
 36179 ;;		On exit  : 0/0
 36180 ;;		Unchanged: 0/0
 36181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36182 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36183 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36184 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36185 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36186 ;;Total ram usage:        4 bytes
 36187 ;; Hardware stack levels used:    1
 36188 ;; Hardware stack levels required when called:   12
 36189 ;; This function calls:
 36190 ;;		_CheckAckStatus
 36191 ;;		_CheckTxStatus
 36192 ;;		_EnableReceiver
 36193 ;;		_GenerateEvt
 36194 ;;		_ReadByte
 36195 ;;		_SetAckStatus
 36196 ;;		_StartCondition
 36197 ;;		_StopCondition
 36198 ;;		_WriteByte
 36199 ;; This function is called by:
 36200 ;;		_I2cSendMsgSm
 36201 ;; This function uses a non-reentrant model
 36202 ;;
 36203                           
 36204                           	psect	text170
 36205  002180                     __ptext170:
 36206                           	opt stack 0
 36207  002180                     _I2c_ReadData:
 36208                           	opt stack 14
 36209                           
 36210                           ;i2c_drv.c: 396: static I2cReadStateType I2cReadState = RxAssertStart;
 36211                           ;i2c_drv.c: 397: static UINT8 DataCounter = 0;
 36212                           ;i2c_drv.c: 398: static UINT8 TentativeCounter = 0;
 36213                           ;i2c_drv.c: 400: static I2cReadStsType ReadStatus;
 36214                           ;i2c_drv.c: 402: switch (I2cReadState)
 36215                           
 36216                           ;incstack = 0
 36217  002180  D090               	goto	l192
 36218  002182                     
 36219                           ;i2c_drv.c: 406: StartCondition();
 36220  002182  EC54  F036         	call	_StartCondition	;wreg free
 36221                           
 36222                           ;i2c_drv.c: 408: ReadStatus = I2cReadInProgress;
 36223  002186  0E00               	movlw	0
 36224  002188  6E31               	movwf	I2c_ReadData@ReadStatus,c
 36225                           
 36226                           ;i2c_drv.c: 410: I2cReadState = RxSendSlaveAddr;
 36227  00218A  0E01               	movlw	1
 36228  00218C  D083               	goto	L96
 36229  00218E                     
 36230                           ;i2c_drv.c: 415: ReadPacket->SlaveAddress = ((ReadPacket->SlaveAddress) << 1) | ReadPack
      +                          et->ReadWrite;
 36231  00218E  0100               	movlb	0	; () banked
 36232  002190  EE20 F001          	lfsr	2,1
 36233  002194  5180               	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 36234  002196  26D9               	addwf	fsr2l,f,c
 36235  002198  5181               	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 36236  00219A  22DA               	addwfc	fsr2h,f,c
 36237  00219C  50DF               	movf	indf2,w,c
 36238  00219E  6F82               	movwf	??_I2c_ReadData& (0+255),b
 36239  0021A0  C080  FFD9         	movff	I2c_ReadData@ReadPacket,fsr2l
 36240  0021A4  C081  FFDA         	movff	I2c_ReadData@ReadPacket+1,fsr2h
 36241  0021A8  50DF               	movf	indf2,w,c
 36242  0021AA  6F83               	movwf	(??_I2c_ReadData+1)& (0+255),b
 36243  0021AC  90D8               	bcf	status,0,c
 36244  0021AE  3583               	rlcf	(??_I2c_ReadData+1)& (0+255),w,b
 36245  0021B0  1182               	iorwf	??_I2c_ReadData& (0+255),w,b
 36246  0021B2  C080  FFD9         	movff	I2c_ReadData@ReadPacket,fsr2l
 36247  0021B6  C081  FFDA         	movff	I2c_ReadData@ReadPacket+1,fsr2h
 36248  0021BA  6EDF               	movwf	indf2,c
 36249                           
 36250                           ; BSR set to: 0
 36251                           ;i2c_drv.c: 417: WriteByte(ReadPacket->SlaveAddress);
 36252  0021BC  C080  FFD9         	movff	I2c_ReadData@ReadPacket,fsr2l
 36253  0021C0  C081  FFDA         	movff	I2c_ReadData@ReadPacket+1,fsr2h
 36254  0021C4  50DF               	movf	indf2,w,c
 36255  0021C6  EC32  F036         	call	_WriteByte
 36256                           
 36257                           ;i2c_drv.c: 419: I2cReadState = RxCheckTxAddr;
 36258  0021CA  0E02               	movlw	2
 36259  0021CC  D063               	goto	L96
 36260  0021CE                     
 36261                           ;i2c_drv.c: 424: if (CheckTxStatus() == ((UINT8)(0)))
 36262  0021CE  EC3C  F036         	call	_CheckTxStatus	;wreg free
 36263  0021D2  0900               	iorlw	0
 36264  0021D4  A4D8               	btfss	status,2,c
 36265  0021D6  D081               	goto	l194
 36266                           
 36267                           ;i2c_drv.c: 425: {
 36268                           ;i2c_drv.c: 427: I2cReadState = RxCheckAck;
 36269  0021D8  0E03               	movlw	3
 36270  0021DA  D05C               	goto	L96
 36271  0021DC                     
 36272                           ;i2c_drv.c: 433: TentativeCounter++;
 36273  0021DC  2A32               	incf	I2c_ReadData@TentativeCounter,f,c
 36274                           
 36275                           ;i2c_drv.c: 435: if (CheckAckStatus() == ((UINT8)(0)))
 36276  0021DE  EC41  F036         	call	_CheckAckStatus	;wreg free
 36277  0021E2  0900               	iorlw	0
 36278  0021E4  A4D8               	btfss	status,2,c
 36279  0021E6  D004               	goto	l199
 36280                           
 36281                           ;i2c_drv.c: 436: {
 36282                           ;i2c_drv.c: 438: TentativeCounter = 0;
 36283  0021E8  0E00               	movlw	0
 36284  0021EA  6E32               	movwf	I2c_ReadData@TentativeCounter,c
 36285  0021EC                     
 36286                           ;i2c_drv.c: 440: I2cReadState = RxGetData;
 36287  0021EC  0E04               	movlw	4
 36288  0021EE  D052               	goto	L96
 36289  0021F0                     l199:
 36290                           
 36291                           ;i2c_drv.c: 442: else
 36292                           ;i2c_drv.c: 443: {
 36293                           ;i2c_drv.c: 445: if (TentativeCounter >= ((UINT8)(3)))
 36294  0021F0  0E02               	movlw	2
 36295  0021F2  6432               	cpfsgt	I2c_ReadData@TentativeCounter,c
 36296  0021F4  D072               	goto	l194
 36297                           
 36298                           ;i2c_drv.c: 446: {
 36299                           ;i2c_drv.c: 448: I2cReadState = RxErrorStatus;
 36300  0021F6  0E08               	movlw	8
 36301  0021F8  D04D               	goto	L96
 36302  0021FA                     
 36303                           ;i2c_drv.c: 455: EnableReceiver();
 36304  0021FA  EC56  F036         	call	_EnableReceiver	;wreg free
 36305                           
 36306                           ;i2c_drv.c: 457: I2cReadState = RxReadData;
 36307  0021FE  0E05               	movlw	5
 36308  002200  D049               	goto	L96
 36309  002202                     
 36310                           ;i2c_drv.c: 462: if (CheckTxStatus() == ((UINT8)(0)))
 36311  002202  EC3C  F036         	call	_CheckTxStatus	;wreg free
 36312  002206  0900               	iorlw	0
 36313  002208  A4D8               	btfss	status,2,c
 36314  00220A  D067               	goto	l194
 36315                           
 36316                           ;i2c_drv.c: 463: {
 36317                           ;i2c_drv.c: 465: *(ReadPacket->Buffer) = ReadByte();
 36318  00220C  0100               	movlb	0	; () banked
 36319  00220E  EE20 F002          	lfsr	2,2
 36320  002212  5180               	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 36321  002214  26D9               	addwf	fsr2l,f,c
 36322  002216  5181               	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 36323  002218  22DA               	addwfc	fsr2h,f,c
 36324  00221A  CFDE F082          	movff	postinc2,??_I2c_ReadData
 36325  00221E  CFDD F083          	movff	postdec2,??_I2c_ReadData+1
 36326  002222  C082  FFD9         	movff	??_I2c_ReadData,fsr2l
 36327  002226  C083  FFDA         	movff	??_I2c_ReadData+1,fsr2h
 36328  00222A  EC37  F036         	call	_ReadByte	;wreg free
 36329  00222E  6EDF               	movwf	indf2,c
 36330                           
 36331                           ;i2c_drv.c: 467: ReadPacket->Buffer++;
 36332  002230  0100               	movlb	0	; () banked
 36333  002232  EE20 F002          	lfsr	2,2
 36334  002236  5180               	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 36335  002238  26D9               	addwf	fsr2l,f,c
 36336  00223A  5181               	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 36337  00223C  22DA               	addwfc	fsr2h,f,c
 36338  00223E  2ADE               	incf	postinc2,f,c
 36339  002240  0E00               	movlw	0
 36340  002242  22DD               	addwfc	postdec2,f,c
 36341                           
 36342                           ; BSR set to: 0
 36343                           ;i2c_drv.c: 469: DataCounter++;
 36344  002244  2A33               	incf	I2c_ReadData@DataCounter,f,c
 36345                           
 36346                           ; BSR set to: 0
 36347                           ;i2c_drv.c: 471: I2cReadState = RxCheckLen;
 36348  002246  0E06               	movlw	6
 36349  002248  D025               	goto	L96
 36350  00224A                     
 36351                           ;i2c_drv.c: 477: if (DataCounter >= ReadPacket->Lenght)
 36352                           
 36353                           ; BSR set to: 0
 36354  00224A  0100               	movlb	0	; () banked
 36355  00224C  EE20 F004          	lfsr	2,4
 36356  002250  5180               	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 36357  002252  26D9               	addwf	fsr2l,f,c
 36358  002254  5181               	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 36359  002256  22DA               	addwfc	fsr2h,f,c
 36360  002258  50DE               	movf	postinc2,w,c
 36361  00225A  5C33               	subwf	I2c_ReadData@DataCounter,w,c
 36362  00225C  A0D8               	btfss	status,0,c
 36363  00225E  D008               	goto	l206
 36364                           
 36365                           ; BSR set to: 0
 36366                           ;i2c_drv.c: 478: {
 36367                           ;i2c_drv.c: 480: SetAckStatus(((UINT8)(1)));
 36368  002260  0E01               	movlw	1
 36369  002262  ECBA  F035         	call	_SetAckStatus
 36370                           
 36371                           ;i2c_drv.c: 482: I2cReadState = RxAssertStop;
 36372  002266  0E07               	movlw	7
 36373  002268  6E34               	movwf	I2c_ReadData@I2cReadState,c
 36374                           
 36375                           ;i2c_drv.c: 484: DataCounter = 0;
 36376  00226A  0E00               	movlw	0
 36377  00226C  6E33               	movwf	I2c_ReadData@DataCounter,c
 36378                           
 36379                           ;i2c_drv.c: 485: }
 36380  00226E  D035               	goto	l194
 36381  002270                     l206:
 36382                           
 36383                           ;i2c_drv.c: 486: else
 36384                           ;i2c_drv.c: 487: {
 36385                           ;i2c_drv.c: 489: SetAckStatus(((UINT8)(0)));
 36386  002270  0E00               	movlw	0
 36387  002272  ECBA  F035         	call	_SetAckStatus
 36388  002276  D7BA               	goto	L97
 36389  002278                     
 36390                           ;i2c_drv.c: 497: StopCondition();
 36391  002278  EC52  F036         	call	_StopCondition	;wreg free
 36392                           
 36393                           ;i2c_drv.c: 499: ReadStatus = I2cReadOk;
 36394  00227C  0E02               	movlw	2
 36395  00227E  6E31               	movwf	I2c_ReadData@ReadStatus,c
 36396                           
 36397                           ;i2c_drv.c: 501: GenerateEvt(&(ReadPacket->ReadCompleteEvt));
 36398  002280  0E05               	movlw	5
 36399  002282  0100               	movlb	0	; () banked
 36400  002284  2580               	addwf	I2c_ReadData@ReadPacket& (0+255),w,b
 36401  002286  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 36402  002288  0E00               	movlw	0
 36403  00228A  2181               	addwfc	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 36404  00228C  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 36405  00228E  EC82  F035         	call	_GenerateEvt	;wreg free
 36406                           
 36407                           ;i2c_drv.c: 503: I2cReadState = RxAssertStart;
 36408  002292  0E00               	movlw	0
 36409  002294                     L96:
 36410  002294  6E34               	movwf	I2c_ReadData@I2cReadState,c
 36411                           
 36412                           ;i2c_drv.c: 504: break;
 36413  002296  D021               	goto	l194
 36414  002298                     
 36415                           ;i2c_drv.c: 508: I2cReadState = RxAssertStart;
 36416  002298  0E00               	movlw	0
 36417  00229A  6E34               	movwf	I2c_ReadData@I2cReadState,c
 36418                           
 36419                           ;i2c_drv.c: 510: ReadStatus = I2cReadNotOk;
 36420  00229C  0E01               	movlw	1
 36421  00229E  6E31               	movwf	I2c_ReadData@ReadStatus,c
 36422                           
 36423                           ;i2c_drv.c: 515: }
 36424                           
 36425                           ;i2c_drv.c: 514: break;
 36426                           
 36427                           ;i2c_drv.c: 513: default:
 36428                           
 36429                           ;i2c_drv.c: 511: break;
 36430  0022A0  D01C               	goto	l194
 36431  0022A2                     l192:
 36432  0022A2  5034               	movf	I2c_ReadData@I2cReadState,w,c
 36433                           
 36434                           ; Switch size 1, requested type "space"
 36435                           ; Number of cases is 9, Range of values is 0 to 8
 36436                           ; switch strategies available:
 36437                           ; Name         Instructions Cycles
 36438                           ; simple_byte           28    15 (average)
 36439                           ;	Chosen strategy is simple_byte
 36440  0022A4  0A00               	xorlw	0	; case 0
 36441  0022A6  B4D8               	btfsc	status,2,c
 36442  0022A8  D76C               	goto	l193
 36443  0022AA  0A01               	xorlw	1	; case 1
 36444  0022AC  B4D8               	btfsc	status,2,c
 36445  0022AE  D76F               	goto	l195
 36446  0022B0  0A03               	xorlw	3	; case 2
 36447  0022B2  B4D8               	btfsc	status,2,c
 36448  0022B4  D78C               	goto	l196
 36449  0022B6  0A01               	xorlw	1	; case 3
 36450  0022B8  B4D8               	btfsc	status,2,c
 36451  0022BA  D790               	goto	l198
 36452  0022BC  0A07               	xorlw	7	; case 4
 36453  0022BE  B4D8               	btfsc	status,2,c
 36454  0022C0  D79C               	goto	l202
 36455  0022C2  0A01               	xorlw	1	; case 5
 36456  0022C4  B4D8               	btfsc	status,2,c
 36457  0022C6  D79D               	goto	l203
 36458  0022C8  0A03               	xorlw	3	; case 6
 36459  0022CA  B4D8               	btfsc	status,2,c
 36460  0022CC  D7BE               	goto	l205
 36461  0022CE  0A01               	xorlw	1	; case 7
 36462  0022D0  B4D8               	btfsc	status,2,c
 36463  0022D2  D7D2               	goto	l208
 36464  0022D4  0A0F               	xorlw	15	; case 8
 36465  0022D6  B4D8               	btfsc	status,2,c
 36466  0022D8  D7DF               	goto	l209
 36467  0022DA                     l194:
 36468                           
 36469                           ;i2c_drv.c: 518: return ReadStatus;
 36470  0022DA  5031               	movf	I2c_ReadData@ReadStatus,w,c
 36471  0022DC  0012               	return	
 36472  0022DE                     __end_of_I2c_ReadData:
 36473                           	opt stack 0
 36474                           tosu	equ	0xFFF
 36475                           tosh	equ	0xFFE
 36476                           tosl	equ	0xFFD
 36477                           pclath	equ	0xFFA
 36478                           tblptru	equ	0xFF8
 36479                           tblptrh	equ	0xFF7
 36480                           tblptrl	equ	0xFF6
 36481                           tablat	equ	0xFF5
 36482                           prodh	equ	0xFF4
 36483                           prodl	equ	0xFF3
 36484                           intcon	equ	0xFF2
 36485                           intcon2	equ	0xFF1
 36486                           intcon3	equ	0xFF0
 36487                           indf0	equ	0xFEF
 36488                           postinc0	equ	0xFEE
 36489                           plusw0	equ	0xFEB
 36490                           fsr0h	equ	0xFEA
 36491                           fsr0l	equ	0xFE9
 36492                           wreg	equ	0xFE8
 36493                           indf1	equ	0xFE7
 36494                           postinc1	equ	0xFE6
 36495                           postdec1	equ	0xFE5
 36496                           plusw1	equ	0xFE3
 36497                           fsr1h	equ	0xFE2
 36498                           fsr1l	equ	0xFE1
 36499                           indf2	equ	0xFDF
 36500                           postinc2	equ	0xFDE
 36501                           postdec2	equ	0xFDD
 36502                           plusw2	equ	0xFDB
 36503                           fsr2h	equ	0xFDA
 36504                           fsr2l	equ	0xFD9
 36505                           status	equ	0xFD8
 36506                           
 36507 ;; *************** function _WriteByte *****************
 36508 ;; Defined at:
 36509 ;;		line 190 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 36510 ;; Parameters:    Size  Location     Type
 36511 ;;  Byte            1    wreg     unsigned char 
 36512 ;; Auto vars:     Size  Location     Type
 36513 ;;  Byte            1   29[BANK0 ] unsigned char 
 36514 ;; Return value:  Size  Location     Type
 36515 ;;                  1    wreg      void 
 36516 ;; Registers used:
 36517 ;;		wreg
 36518 ;; Tracked objects:
 36519 ;;		On entry : 0/0
 36520 ;;		On exit  : 0/0
 36521 ;;		Unchanged: 0/0
 36522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36523 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36524 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36525 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36526 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36527 ;;Total ram usage:        1 bytes
 36528 ;; Hardware stack levels used:    1
 36529 ;; Hardware stack levels required when called:   11
 36530 ;; This function calls:
 36531 ;;		Nothing
 36532 ;; This function is called by:
 36533 ;;		_I2c_WriteData
 36534 ;;		_I2c_ReadData
 36535 ;; This function uses a non-reentrant model
 36536 ;;
 36537                           
 36538                           	psect	text171
 36539  006C64                     __ptext171:
 36540                           	opt stack 0
 36541  006C64                     _WriteByte:
 36542                           	opt stack 14
 36543                           
 36544                           ;incstack = 0
 36545                           ;WriteByte@Byte stored from wreg
 36546  006C64  0100               	movlb	0	; () banked
 36547  006C66  6F7D               	movwf	WriteByte@Byte& (0+255),b
 36548                           
 36549                           ;i2c_drv.c: 193: SSP2BUF = Byte;
 36550  006C68  C07D  FF75         	movff	WriteByte@Byte,3957	;volatile
 36551  006C6C  0012               	return		;funcret
 36552  006C6E                     __end_of_WriteByte:
 36553                           	opt stack 0
 36554                           tosu	equ	0xFFF
 36555                           tosh	equ	0xFFE
 36556                           tosl	equ	0xFFD
 36557                           pclath	equ	0xFFA
 36558                           tblptru	equ	0xFF8
 36559                           tblptrh	equ	0xFF7
 36560                           tblptrl	equ	0xFF6
 36561                           tablat	equ	0xFF5
 36562                           prodh	equ	0xFF4
 36563                           prodl	equ	0xFF3
 36564                           intcon	equ	0xFF2
 36565                           intcon2	equ	0xFF1
 36566                           intcon3	equ	0xFF0
 36567                           indf0	equ	0xFEF
 36568                           postinc0	equ	0xFEE
 36569                           plusw0	equ	0xFEB
 36570                           fsr0h	equ	0xFEA
 36571                           fsr0l	equ	0xFE9
 36572                           wreg	equ	0xFE8
 36573                           indf1	equ	0xFE7
 36574                           postinc1	equ	0xFE6
 36575                           postdec1	equ	0xFE5
 36576                           plusw1	equ	0xFE3
 36577                           fsr1h	equ	0xFE2
 36578                           fsr1l	equ	0xFE1
 36579                           indf2	equ	0xFDF
 36580                           postinc2	equ	0xFDE
 36581                           postdec2	equ	0xFDD
 36582                           plusw2	equ	0xFDB
 36583                           fsr2h	equ	0xFDA
 36584                           fsr2l	equ	0xFD9
 36585                           status	equ	0xFD8
 36586                           
 36587 ;; *************** function _StopCondition *****************
 36588 ;; Defined at:
 36589 ;;		line 120 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 36590 ;; Parameters:    Size  Location     Type
 36591 ;;		None
 36592 ;; Auto vars:     Size  Location     Type
 36593 ;;		None
 36594 ;; Return value:  Size  Location     Type
 36595 ;;                  1    wreg      void 
 36596 ;; Registers used:
 36597 ;;		status,2, status,0
 36598 ;; Tracked objects:
 36599 ;;		On entry : 0/0
 36600 ;;		On exit  : 0/0
 36601 ;;		Unchanged: 0/0
 36602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36603 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36604 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36605 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36606 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36607 ;;Total ram usage:        0 bytes
 36608 ;; Hardware stack levels used:    1
 36609 ;; Hardware stack levels required when called:   11
 36610 ;; This function calls:
 36611 ;;		Nothing
 36612 ;; This function is called by:
 36613 ;;		_I2c_WriteData
 36614 ;;		_I2c_ReadData
 36615 ;; This function uses a non-reentrant model
 36616 ;;
 36617                           
 36618                           	psect	text172
 36619  006CA4                     __ptext172:
 36620                           	opt stack 0
 36621  006CA4                     _StopCondition:
 36622                           	opt stack 14
 36623                           
 36624                           ;i2c_drv.c: 123: SSP2CON2 |= (((UINT8)(1)) << ((UINT8)(2)));
 36625                           
 36626                           ;incstack = 0
 36627  006CA4  8471               	bsf	3953,2,c	;volatile
 36628  006CA6  0012               	return		;funcret
 36629  006CA8                     __end_of_StopCondition:
 36630                           	opt stack 0
 36631                           tosu	equ	0xFFF
 36632                           tosh	equ	0xFFE
 36633                           tosl	equ	0xFFD
 36634                           pclath	equ	0xFFA
 36635                           tblptru	equ	0xFF8
 36636                           tblptrh	equ	0xFF7
 36637                           tblptrl	equ	0xFF6
 36638                           tablat	equ	0xFF5
 36639                           prodh	equ	0xFF4
 36640                           prodl	equ	0xFF3
 36641                           intcon	equ	0xFF2
 36642                           intcon2	equ	0xFF1
 36643                           intcon3	equ	0xFF0
 36644                           indf0	equ	0xFEF
 36645                           postinc0	equ	0xFEE
 36646                           plusw0	equ	0xFEB
 36647                           fsr0h	equ	0xFEA
 36648                           fsr0l	equ	0xFE9
 36649                           wreg	equ	0xFE8
 36650                           indf1	equ	0xFE7
 36651                           postinc1	equ	0xFE6
 36652                           postdec1	equ	0xFE5
 36653                           plusw1	equ	0xFE3
 36654                           fsr1h	equ	0xFE2
 36655                           fsr1l	equ	0xFE1
 36656                           indf2	equ	0xFDF
 36657                           postinc2	equ	0xFDE
 36658                           postdec2	equ	0xFDD
 36659                           plusw2	equ	0xFDB
 36660                           fsr2h	equ	0xFDA
 36661                           fsr2l	equ	0xFD9
 36662                           status	equ	0xFD8
 36663                           
 36664 ;; *************** function _StartCondition *****************
 36665 ;; Defined at:
 36666 ;;		line 92 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 36667 ;; Parameters:    Size  Location     Type
 36668 ;;		None
 36669 ;; Auto vars:     Size  Location     Type
 36670 ;;		None
 36671 ;; Return value:  Size  Location     Type
 36672 ;;                  1    wreg      void 
 36673 ;; Registers used:
 36674 ;;		status,2, status,0
 36675 ;; Tracked objects:
 36676 ;;		On entry : 0/0
 36677 ;;		On exit  : 0/0
 36678 ;;		Unchanged: 0/0
 36679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36680 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36681 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36683 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36684 ;;Total ram usage:        0 bytes
 36685 ;; Hardware stack levels used:    1
 36686 ;; Hardware stack levels required when called:   11
 36687 ;; This function calls:
 36688 ;;		Nothing
 36689 ;; This function is called by:
 36690 ;;		_I2c_WriteData
 36691 ;;		_I2c_ReadData
 36692 ;; This function uses a non-reentrant model
 36693 ;;
 36694                           
 36695                           	psect	text173
 36696  006CA8                     __ptext173:
 36697                           	opt stack 0
 36698  006CA8                     _StartCondition:
 36699                           	opt stack 14
 36700                           
 36701                           ;i2c_drv.c: 95: SSP2CON2 |= (((UINT8)(1)) << ((UINT8)(0)));
 36702                           
 36703                           ;incstack = 0
 36704  006CA8  8071               	bsf	3953,0,c	;volatile
 36705  006CAA  0012               	return		;funcret
 36706  006CAC                     __end_of_StartCondition:
 36707                           	opt stack 0
 36708                           tosu	equ	0xFFF
 36709                           tosh	equ	0xFFE
 36710                           tosl	equ	0xFFD
 36711                           pclath	equ	0xFFA
 36712                           tblptru	equ	0xFF8
 36713                           tblptrh	equ	0xFF7
 36714                           tblptrl	equ	0xFF6
 36715                           tablat	equ	0xFF5
 36716                           prodh	equ	0xFF4
 36717                           prodl	equ	0xFF3
 36718                           intcon	equ	0xFF2
 36719                           intcon2	equ	0xFF1
 36720                           intcon3	equ	0xFF0
 36721                           indf0	equ	0xFEF
 36722                           postinc0	equ	0xFEE
 36723                           plusw0	equ	0xFEB
 36724                           fsr0h	equ	0xFEA
 36725                           fsr0l	equ	0xFE9
 36726                           wreg	equ	0xFE8
 36727                           indf1	equ	0xFE7
 36728                           postinc1	equ	0xFE6
 36729                           postdec1	equ	0xFE5
 36730                           plusw1	equ	0xFE3
 36731                           fsr1h	equ	0xFE2
 36732                           fsr1l	equ	0xFE1
 36733                           indf2	equ	0xFDF
 36734                           postinc2	equ	0xFDE
 36735                           postdec2	equ	0xFDD
 36736                           plusw2	equ	0xFDB
 36737                           fsr2h	equ	0xFDA
 36738                           fsr2l	equ	0xFD9
 36739                           status	equ	0xFD8
 36740                           
 36741 ;; *************** function _SetAckStatus *****************
 36742 ;; Defined at:
 36743 ;;		line 162 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 36744 ;; Parameters:    Size  Location     Type
 36745 ;;  AckSts          1    wreg     unsigned char 
 36746 ;; Auto vars:     Size  Location     Type
 36747 ;;  AckSts          1   29[BANK0 ] unsigned char 
 36748 ;; Return value:  Size  Location     Type
 36749 ;;                  1    wreg      void 
 36750 ;; Registers used:
 36751 ;;		wreg
 36752 ;; Tracked objects:
 36753 ;;		On entry : 0/0
 36754 ;;		On exit  : 0/0
 36755 ;;		Unchanged: 0/0
 36756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36757 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36758 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36760 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36761 ;;Total ram usage:        1 bytes
 36762 ;; Hardware stack levels used:    1
 36763 ;; Hardware stack levels required when called:   11
 36764 ;; This function calls:
 36765 ;;		Nothing
 36766 ;; This function is called by:
 36767 ;;		_I2c_ReadData
 36768 ;; This function uses a non-reentrant model
 36769 ;;
 36770                           
 36771                           	psect	text174
 36772  006B74                     __ptext174:
 36773                           	opt stack 0
 36774  006B74                     _SetAckStatus:
 36775                           	opt stack 14
 36776                           
 36777                           ;incstack = 0
 36778                           ;SetAckStatus@AckSts stored from wreg
 36779  006B74  0100               	movlb	0	; () banked
 36780  006B76  6F7D               	movwf	SetAckStatus@AckSts& (0+255),b
 36781                           
 36782                           ;i2c_drv.c: 165: SSP2CON2bits.ACKDT = AckSts;
 36783  006B78  0100               	movlb	0	; () banked
 36784  006B7A  B17D               	btfsc	SetAckStatus@AckSts& (0+255),0,b
 36785  006B7C  D002               	bra	u12735
 36786  006B7E  9A71               	bcf	3953,5,c	;volatile
 36787  006B80  D001               	bra	u12736
 36788  006B82                     u12735:
 36789  006B82  8A71               	bsf	3953,5,c	;volatile
 36790  006B84                     u12736:
 36791                           
 36792                           ;i2c_drv.c: 166: SSP2CON2bits.ACKEN = ((UINT8)(1));
 36793  006B84  8871               	bsf	3953,4,c	;volatile
 36794  006B86  0012               	return		;funcret
 36795  006B88                     __end_of_SetAckStatus:
 36796                           	opt stack 0
 36797                           tosu	equ	0xFFF
 36798                           tosh	equ	0xFFE
 36799                           tosl	equ	0xFFD
 36800                           pclath	equ	0xFFA
 36801                           tblptru	equ	0xFF8
 36802                           tblptrh	equ	0xFF7
 36803                           tblptrl	equ	0xFF6
 36804                           tablat	equ	0xFF5
 36805                           prodh	equ	0xFF4
 36806                           prodl	equ	0xFF3
 36807                           intcon	equ	0xFF2
 36808                           intcon2	equ	0xFF1
 36809                           intcon3	equ	0xFF0
 36810                           indf0	equ	0xFEF
 36811                           postinc0	equ	0xFEE
 36812                           plusw0	equ	0xFEB
 36813                           fsr0h	equ	0xFEA
 36814                           fsr0l	equ	0xFE9
 36815                           wreg	equ	0xFE8
 36816                           indf1	equ	0xFE7
 36817                           postinc1	equ	0xFE6
 36818                           postdec1	equ	0xFE5
 36819                           plusw1	equ	0xFE3
 36820                           fsr1h	equ	0xFE2
 36821                           fsr1l	equ	0xFE1
 36822                           indf2	equ	0xFDF
 36823                           postinc2	equ	0xFDE
 36824                           postdec2	equ	0xFDD
 36825                           plusw2	equ	0xFDB
 36826                           fsr2h	equ	0xFDA
 36827                           fsr2l	equ	0xFD9
 36828                           status	equ	0xFD8
 36829                           
 36830 ;; *************** function _ReadByte *****************
 36831 ;; Defined at:
 36832 ;;		line 204 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 36833 ;; Parameters:    Size  Location     Type
 36834 ;;		None
 36835 ;; Auto vars:     Size  Location     Type
 36836 ;;  Byte            1   29[BANK0 ] unsigned char 
 36837 ;; Return value:  Size  Location     Type
 36838 ;;                  1    wreg      unsigned char 
 36839 ;; Registers used:
 36840 ;;		wreg, status,2
 36841 ;; Tracked objects:
 36842 ;;		On entry : 0/0
 36843 ;;		On exit  : 0/0
 36844 ;;		Unchanged: 0/0
 36845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36846 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36847 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36849 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36850 ;;Total ram usage:        1 bytes
 36851 ;; Hardware stack levels used:    1
 36852 ;; Hardware stack levels required when called:   11
 36853 ;; This function calls:
 36854 ;;		Nothing
 36855 ;; This function is called by:
 36856 ;;		_I2c_ReadData
 36857 ;; This function uses a non-reentrant model
 36858 ;;
 36859                           
 36860                           	psect	text175
 36861  006C6E                     __ptext175:
 36862                           	opt stack 0
 36863  006C6E                     _ReadByte:
 36864                           	opt stack 14
 36865                           
 36866                           ;i2c_drv.c: 207: UINT8 Byte;
 36867                           ;i2c_drv.c: 210: Byte = SSP2BUF;
 36868                           
 36869                           ;incstack = 0
 36870  006C6E  CF75 F07D          	movff	3957,ReadByte@Byte	;volatile
 36871                           
 36872                           ;i2c_drv.c: 213: return Byte;
 36873  006C72  0100               	movlb	0	; () banked
 36874  006C74  517D               	movf	ReadByte@Byte& (0+255),w,b
 36875  006C76  0012               	return	
 36876  006C78                     __end_of_ReadByte:
 36877                           	opt stack 0
 36878                           tosu	equ	0xFFF
 36879                           tosh	equ	0xFFE
 36880                           tosl	equ	0xFFD
 36881                           pclath	equ	0xFFA
 36882                           tblptru	equ	0xFF8
 36883                           tblptrh	equ	0xFF7
 36884                           tblptrl	equ	0xFF6
 36885                           tablat	equ	0xFF5
 36886                           prodh	equ	0xFF4
 36887                           prodl	equ	0xFF3
 36888                           intcon	equ	0xFF2
 36889                           intcon2	equ	0xFF1
 36890                           intcon3	equ	0xFF0
 36891                           indf0	equ	0xFEF
 36892                           postinc0	equ	0xFEE
 36893                           plusw0	equ	0xFEB
 36894                           fsr0h	equ	0xFEA
 36895                           fsr0l	equ	0xFE9
 36896                           wreg	equ	0xFE8
 36897                           indf1	equ	0xFE7
 36898                           postinc1	equ	0xFE6
 36899                           postdec1	equ	0xFE5
 36900                           plusw1	equ	0xFE3
 36901                           fsr1h	equ	0xFE2
 36902                           fsr1l	equ	0xFE1
 36903                           indf2	equ	0xFDF
 36904                           postinc2	equ	0xFDE
 36905                           postdec2	equ	0xFDD
 36906                           plusw2	equ	0xFDB
 36907                           fsr2h	equ	0xFDA
 36908                           fsr2l	equ	0xFD9
 36909                           status	equ	0xFD8
 36910                           
 36911 ;; *************** function _GenerateEvt *****************
 36912 ;; Defined at:
 36913 ;;		line 75 in file "../../MercuryFwk/Source/c/02_Osl/os_ser.c"
 36914 ;; Parameters:    Size  Location     Type
 36915 ;;  Event           2   29[BANK0 ] PTR struct EventStructur
 36916 ;;		 -> AlarmEvent(1), I2cRxPacket(6), I2cReadDataEvt(1), I2cWriteDataEvt(1), 
 36917 ;;		 -> GetMethod(1), InitNetwork(1), MdmStsReady(1), SmsTxtReady(1), 
 36918 ;;		 -> GetSmsText(1), SmsEvent(1), ClipEvent(1), RingEvent(1), 
 36919 ;;		 -> SendSmsEvent(1), NewStringMdmTerminal(1), NewMdmEvtParserRequest(1), NewStringReceived(1), 
 36920 ;;		 -> MdmOnOffPulseRequest(1), CallClosedEvent(1), IncomingCallEvent(1), NewSmsEvent(1), 
 36921 ;; Auto vars:     Size  Location     Type
 36922 ;;  EventStatus     1   31[BANK0 ] enum E7727
 36923 ;; Return value:  Size  Location     Type
 36924 ;;                  1    wreg      enum E7699
 36925 ;; Registers used:
 36926 ;;		wreg, fsr2l, fsr2h, status,2
 36927 ;; Tracked objects:
 36928 ;;		On entry : 0/0
 36929 ;;		On exit  : 0/0
 36930 ;;		Unchanged: 0/0
 36931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36932 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36933 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36935 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36936 ;;Total ram usage:        3 bytes
 36937 ;; Hardware stack levels used:    1
 36938 ;; Hardware stack levels required when called:   11
 36939 ;; This function calls:
 36940 ;;		Nothing
 36941 ;; This function is called by:
 36942 ;;		_I2c_ReadData
 36943 ;;		_CheckModem
 36944 ;;		_TurnOnModem
 36945 ;;		_ConfigureModem
 36946 ;;		_ModemEvtParser
 36947 ;;		_GetSmsSm
 36948 ;;		_Mdm_RequestSmsData
 36949 ;;		_I2cSlv_SendI2cMsg
 36950 ;;		_I2cSlv_ReceiveI2cMsg
 36951 ;;		_RiSm
 36952 ;;		_Mdm_SendSmsData
 36953 ;;		_MdmHttp_InitGprsNetwork
 36954 ;;		_MdmHttp_GetMethod
 36955 ;;		_Alarm
 36956 ;; This function uses a non-reentrant model
 36957 ;;
 36958                           
 36959                           	psect	text176
 36960  006B04                     __ptext176:
 36961                           	opt stack 0
 36962  006B04                     _GenerateEvt:
 36963                           	opt stack 13
 36964                           
 36965                           ;os_ser.c: 78: EventStatusType EventStatus = EventIdle;
 36966                           
 36967                           ; BSR set to: 0
 36968                           ;incstack = 0
 36969  006B04  0E00               	movlw	0
 36970  006B06  0100               	movlb	0	; () banked
 36971  006B08  6F7F               	movwf	GenerateEvt@EventStatus& (0+255),b
 36972                           
 36973                           ; BSR set to: 0
 36974                           ;os_ser.c: 81: Event->EventStatus = EventSent;
 36975  006B0A  C07D  FFD9         	movff	GenerateEvt@Event,fsr2l
 36976  006B0E  C07E  FFDA         	movff	GenerateEvt@Event+1,fsr2h
 36977  006B12  0E02               	movlw	2
 36978  006B14  6EDF               	movwf	indf2,c
 36979                           
 36980                           ; BSR set to: 0
 36981                           ;os_ser.c: 83: EventStatus = EventSent;
 36982  006B16  0E02               	movlw	2
 36983  006B18  6F7F               	movwf	GenerateEvt@EventStatus& (0+255),b
 36984  006B1A  0012               	return	
 36985  006B1C                     __end_of_GenerateEvt:
 36986                           	opt stack 0
 36987                           tosu	equ	0xFFF
 36988                           tosh	equ	0xFFE
 36989                           tosl	equ	0xFFD
 36990                           pclath	equ	0xFFA
 36991                           tblptru	equ	0xFF8
 36992                           tblptrh	equ	0xFF7
 36993                           tblptrl	equ	0xFF6
 36994                           tablat	equ	0xFF5
 36995                           prodh	equ	0xFF4
 36996                           prodl	equ	0xFF3
 36997                           intcon	equ	0xFF2
 36998                           intcon2	equ	0xFF1
 36999                           intcon3	equ	0xFF0
 37000                           indf0	equ	0xFEF
 37001                           postinc0	equ	0xFEE
 37002                           plusw0	equ	0xFEB
 37003                           fsr0h	equ	0xFEA
 37004                           fsr0l	equ	0xFE9
 37005                           wreg	equ	0xFE8
 37006                           indf1	equ	0xFE7
 37007                           postinc1	equ	0xFE6
 37008                           postdec1	equ	0xFE5
 37009                           plusw1	equ	0xFE3
 37010                           fsr1h	equ	0xFE2
 37011                           fsr1l	equ	0xFE1
 37012                           indf2	equ	0xFDF
 37013                           postinc2	equ	0xFDE
 37014                           postdec2	equ	0xFDD
 37015                           plusw2	equ	0xFDB
 37016                           fsr2h	equ	0xFDA
 37017                           fsr2l	equ	0xFD9
 37018                           status	equ	0xFD8
 37019                           
 37020 ;; *************** function _EnableReceiver *****************
 37021 ;; Defined at:
 37022 ;;		line 177 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 37023 ;; Parameters:    Size  Location     Type
 37024 ;;		None
 37025 ;; Auto vars:     Size  Location     Type
 37026 ;;		None
 37027 ;; Return value:  Size  Location     Type
 37028 ;;                  1    wreg      void 
 37029 ;; Registers used:
 37030 ;;		status,2, status,0
 37031 ;; Tracked objects:
 37032 ;;		On entry : 0/0
 37033 ;;		On exit  : 0/0
 37034 ;;		Unchanged: 0/0
 37035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37036 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37037 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37039 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37040 ;;Total ram usage:        0 bytes
 37041 ;; Hardware stack levels used:    1
 37042 ;; Hardware stack levels required when called:   11
 37043 ;; This function calls:
 37044 ;;		Nothing
 37045 ;; This function is called by:
 37046 ;;		_I2c_ReadData
 37047 ;; This function uses a non-reentrant model
 37048 ;;
 37049                           
 37050                           	psect	text177
 37051  006CAC                     __ptext177:
 37052                           	opt stack 0
 37053  006CAC                     _EnableReceiver:
 37054                           	opt stack 14
 37055                           
 37056                           ;i2c_drv.c: 179: SSP2CON2 |= ((((UINT8)(1)) << ((UINT8)(3))) & ((UINT8)(0x08)));
 37057                           
 37058                           ; BSR set to: 0
 37059                           ;incstack = 0
 37060  006CAC  8671               	bsf	3953,3,c	;volatile
 37061  006CAE  0012               	return		;funcret
 37062  006CB0                     __end_of_EnableReceiver:
 37063                           	opt stack 0
 37064                           tosu	equ	0xFFF
 37065                           tosh	equ	0xFFE
 37066                           tosl	equ	0xFFD
 37067                           pclath	equ	0xFFA
 37068                           tblptru	equ	0xFF8
 37069                           tblptrh	equ	0xFF7
 37070                           tblptrl	equ	0xFF6
 37071                           tablat	equ	0xFF5
 37072                           prodh	equ	0xFF4
 37073                           prodl	equ	0xFF3
 37074                           intcon	equ	0xFF2
 37075                           intcon2	equ	0xFF1
 37076                           intcon3	equ	0xFF0
 37077                           indf0	equ	0xFEF
 37078                           postinc0	equ	0xFEE
 37079                           plusw0	equ	0xFEB
 37080                           fsr0h	equ	0xFEA
 37081                           fsr0l	equ	0xFE9
 37082                           wreg	equ	0xFE8
 37083                           indf1	equ	0xFE7
 37084                           postinc1	equ	0xFE6
 37085                           postdec1	equ	0xFE5
 37086                           plusw1	equ	0xFE3
 37087                           fsr1h	equ	0xFE2
 37088                           fsr1l	equ	0xFE1
 37089                           indf2	equ	0xFDF
 37090                           postinc2	equ	0xFDE
 37091                           postdec2	equ	0xFDD
 37092                           plusw2	equ	0xFDB
 37093                           fsr2h	equ	0xFDA
 37094                           fsr2l	equ	0xFD9
 37095                           status	equ	0xFD8
 37096                           
 37097 ;; *************** function _CheckTxStatus *****************
 37098 ;; Defined at:
 37099 ;;		line 148 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 37100 ;; Parameters:    Size  Location     Type
 37101 ;;		None
 37102 ;; Auto vars:     Size  Location     Type
 37103 ;;		None
 37104 ;; Return value:  Size  Location     Type
 37105 ;;                  1    wreg      unsigned char 
 37106 ;; Registers used:
 37107 ;;		wreg, status,2, status,0
 37108 ;; Tracked objects:
 37109 ;;		On entry : 0/0
 37110 ;;		On exit  : 0/0
 37111 ;;		Unchanged: 0/0
 37112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37113 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37114 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37115 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37116 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37117 ;;Total ram usage:        0 bytes
 37118 ;; Hardware stack levels used:    1
 37119 ;; Hardware stack levels required when called:   11
 37120 ;; This function calls:
 37121 ;;		Nothing
 37122 ;; This function is called by:
 37123 ;;		_I2c_WriteData
 37124 ;;		_I2c_ReadData
 37125 ;; This function uses a non-reentrant model
 37126 ;;
 37127                           
 37128                           	psect	text178
 37129  006C78                     __ptext178:
 37130                           	opt stack 0
 37131  006C78                     _CheckTxStatus:
 37132                           	opt stack 14
 37133                           
 37134                           ;i2c_drv.c: 151: return ((SSP2STAT & ((UINT8)(0x04))) >> ((UINT8)(2)));
 37135                           
 37136                           ;incstack = 0
 37137  006C78  4073               	rrncf	3955,w,c	;volatile
 37138  006C7A  42E8               	rrncf	wreg,f,c
 37139  006C7C  0B3F               	andlw	63
 37140  006C7E  0B01               	andlw	1
 37141  006C80  0012               	return	
 37142  006C82                     __end_of_CheckTxStatus:
 37143                           	opt stack 0
 37144                           tosu	equ	0xFFF
 37145                           tosh	equ	0xFFE
 37146                           tosl	equ	0xFFD
 37147                           pclath	equ	0xFFA
 37148                           tblptru	equ	0xFF8
 37149                           tblptrh	equ	0xFF7
 37150                           tblptrl	equ	0xFF6
 37151                           tablat	equ	0xFF5
 37152                           prodh	equ	0xFF4
 37153                           prodl	equ	0xFF3
 37154                           intcon	equ	0xFF2
 37155                           intcon2	equ	0xFF1
 37156                           intcon3	equ	0xFF0
 37157                           indf0	equ	0xFEF
 37158                           postinc0	equ	0xFEE
 37159                           plusw0	equ	0xFEB
 37160                           fsr0h	equ	0xFEA
 37161                           fsr0l	equ	0xFE9
 37162                           wreg	equ	0xFE8
 37163                           indf1	equ	0xFE7
 37164                           postinc1	equ	0xFE6
 37165                           postdec1	equ	0xFE5
 37166                           plusw1	equ	0xFE3
 37167                           fsr1h	equ	0xFE2
 37168                           fsr1l	equ	0xFE1
 37169                           indf2	equ	0xFDF
 37170                           postinc2	equ	0xFDE
 37171                           postdec2	equ	0xFDD
 37172                           plusw2	equ	0xFDB
 37173                           fsr2h	equ	0xFDA
 37174                           fsr2l	equ	0xFD9
 37175                           status	equ	0xFD8
 37176                           
 37177 ;; *************** function _CheckAckStatus *****************
 37178 ;; Defined at:
 37179 ;;		line 134 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 37180 ;; Parameters:    Size  Location     Type
 37181 ;;		None
 37182 ;; Auto vars:     Size  Location     Type
 37183 ;;		None
 37184 ;; Return value:  Size  Location     Type
 37185 ;;                  1    wreg      unsigned char 
 37186 ;; Registers used:
 37187 ;;		wreg, status,2, status,0
 37188 ;; Tracked objects:
 37189 ;;		On entry : 0/0
 37190 ;;		On exit  : 0/0
 37191 ;;		Unchanged: 0/0
 37192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37193 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37194 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37195 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37196 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37197 ;;Total ram usage:        0 bytes
 37198 ;; Hardware stack levels used:    1
 37199 ;; Hardware stack levels required when called:   11
 37200 ;; This function calls:
 37201 ;;		Nothing
 37202 ;; This function is called by:
 37203 ;;		_I2c_WriteData
 37204 ;;		_I2c_ReadData
 37205 ;; This function uses a non-reentrant model
 37206 ;;
 37207                           
 37208                           	psect	text179
 37209  006C82                     __ptext179:
 37210                           	opt stack 0
 37211  006C82                     _CheckAckStatus:
 37212                           	opt stack 14
 37213                           
 37214                           ;i2c_drv.c: 137: return ((SSP2CON2 & ((UINT8)(0x40))) >> ((UINT8)(6)));
 37215                           
 37216                           ;incstack = 0
 37217  006C82  4471               	rlncf	3953,w,c	;volatile
 37218  006C84  46E8               	rlncf	wreg,f,c
 37219  006C86  0B03               	andlw	3
 37220  006C88  0B01               	andlw	1
 37221  006C8A  0012               	return	
 37222  006C8C                     __end_of_CheckAckStatus:
 37223                           	opt stack 0
 37224                           tosu	equ	0xFFF
 37225                           tosh	equ	0xFFE
 37226                           tosl	equ	0xFFD
 37227                           pclath	equ	0xFFA
 37228                           tblptru	equ	0xFF8
 37229                           tblptrh	equ	0xFF7
 37230                           tblptrl	equ	0xFF6
 37231                           tablat	equ	0xFF5
 37232                           prodh	equ	0xFF4
 37233                           prodl	equ	0xFF3
 37234                           intcon	equ	0xFF2
 37235                           intcon2	equ	0xFF1
 37236                           intcon3	equ	0xFF0
 37237                           indf0	equ	0xFEF
 37238                           postinc0	equ	0xFEE
 37239                           plusw0	equ	0xFEB
 37240                           fsr0h	equ	0xFEA
 37241                           fsr0l	equ	0xFE9
 37242                           wreg	equ	0xFE8
 37243                           indf1	equ	0xFE7
 37244                           postinc1	equ	0xFE6
 37245                           postdec1	equ	0xFE5
 37246                           plusw1	equ	0xFE3
 37247                           fsr1h	equ	0xFE2
 37248                           fsr1l	equ	0xFE1
 37249                           indf2	equ	0xFDF
 37250                           postinc2	equ	0xFDE
 37251                           postdec2	equ	0xFDD
 37252                           plusw2	equ	0xFDB
 37253                           fsr2h	equ	0xFDA
 37254                           fsr2l	equ	0xFD9
 37255                           status	equ	0xFD8
 37256                           
 37257 ;; *************** function _LowPriorityIsr *****************
 37258 ;; Defined at:
 37259 ;;		line 236 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/irq.c"
 37260 ;; Parameters:    Size  Location     Type
 37261 ;;		None
 37262 ;; Auto vars:     Size  Location     Type
 37263 ;;		None
 37264 ;; Return value:  Size  Location     Type
 37265 ;;                  1    wreg      void 
 37266 ;; Registers used:
 37267 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 37268 ;; Tracked objects:
 37269 ;;		On entry : 0/0
 37270 ;;		On exit  : 0/0
 37271 ;;		Unchanged: 0/0
 37272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37275 ;;      Temps:          0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37276 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37277 ;;Total ram usage:       21 bytes
 37278 ;; Hardware stack levels used:    1
 37279 ;; Hardware stack levels required when called:   10
 37280 ;; This function calls:
 37281 ;;		_Tmr_Tmr2Isr
 37282 ;; This function is called by:
 37283 ;;		Interrupt level 1
 37284 ;; This function uses a non-reentrant model
 37285 ;;
 37286                           
 37287                           	psect	intcodelo
 37288  000018                     __pintcodelo:
 37289                           	opt stack 0
 37290  000018                     _LowPriorityIsr:
 37291                           	opt stack 8
 37292                           
 37293                           ;incstack = 0
 37294  000018  8042               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 37295  00001A  CFD8 F068          	movff	status,??_LowPriorityIsr
 37296  00001E  CFE8 F069          	movff	wreg,??_LowPriorityIsr+1
 37297  000022  CFE0 F06A          	movff	bsr,??_LowPriorityIsr+2
 37298  000026  CFFA F06B          	movff	pclath,??_LowPriorityIsr+3
 37299  00002A  CFFB F06C          	movff	pclatu,??_LowPriorityIsr+4
 37300  00002E  CFE9 F06D          	movff	fsr0l,??_LowPriorityIsr+5
 37301  000032  CFEA F06E          	movff	fsr0h,??_LowPriorityIsr+6
 37302  000036  CFE1 F06F          	movff	fsr1l,??_LowPriorityIsr+7
 37303  00003A  CFE2 F070          	movff	fsr1h,??_LowPriorityIsr+8
 37304  00003E  CFD9 F071          	movff	fsr2l,??_LowPriorityIsr+9
 37305  000042  CFDA F072          	movff	fsr2h,??_LowPriorityIsr+10
 37306  000046  CFF3 F073          	movff	prodl,??_LowPriorityIsr+11
 37307  00004A  CFF4 F074          	movff	prodh,??_LowPriorityIsr+12
 37308  00004E  CFF6 F075          	movff	tblptrl,??_LowPriorityIsr+13
 37309  000052  CFF7 F076          	movff	tblptrh,??_LowPriorityIsr+14
 37310  000056  CFF8 F077          	movff	tblptru,??_LowPriorityIsr+15
 37311  00005A  CFF5 F078          	movff	tablat,??_LowPriorityIsr+16
 37312  00005E  C042  F079         	movff	btemp,??_LowPriorityIsr+17
 37313  000062  C043  F07A         	movff	btemp+1,??_LowPriorityIsr+18
 37314  000066  C044  F07B         	movff	btemp+2,??_LowPriorityIsr+19
 37315  00006A  C045  F07C         	movff	btemp+3,??_LowPriorityIsr+20
 37316                           
 37317                           ;irq.c: 258: if (PIR1bits.TMR2IF == ((UINT8)(1)))
 37318  00006E  B29E               	btfsc	3998,1,c	;volatile
 37319                           
 37320                           ;irq.c: 259: {
 37321                           ;irq.c: 261: Tmr_Tmr2Isr();
 37322  000070  EC45  F034         	call	_Tmr_Tmr2Isr	;wreg free
 37323  000074  C07C  F045         	movff	??_LowPriorityIsr+20,btemp+3
 37324  000078  C07B  F044         	movff	??_LowPriorityIsr+19,btemp+2
 37325  00007C  C07A  F043         	movff	??_LowPriorityIsr+18,btemp+1
 37326  000080  C079  F042         	movff	??_LowPriorityIsr+17,btemp
 37327  000084  C078  FFF5         	movff	??_LowPriorityIsr+16,tablat
 37328  000088  C077  FFF8         	movff	??_LowPriorityIsr+15,tblptru
 37329  00008C  C076  FFF7         	movff	??_LowPriorityIsr+14,tblptrh
 37330  000090  C075  FFF6         	movff	??_LowPriorityIsr+13,tblptrl
 37331  000094  C074  FFF4         	movff	??_LowPriorityIsr+12,prodh
 37332  000098  C073  FFF3         	movff	??_LowPriorityIsr+11,prodl
 37333  00009C  C072  FFDA         	movff	??_LowPriorityIsr+10,fsr2h
 37334  0000A0  C071  FFD9         	movff	??_LowPriorityIsr+9,fsr2l
 37335  0000A4  C070  FFE2         	movff	??_LowPriorityIsr+8,fsr1h
 37336  0000A8  C06F  FFE1         	movff	??_LowPriorityIsr+7,fsr1l
 37337  0000AC  C06E  FFEA         	movff	??_LowPriorityIsr+6,fsr0h
 37338  0000B0  C06D  FFE9         	movff	??_LowPriorityIsr+5,fsr0l
 37339  0000B4  C06C  FFFB         	movff	??_LowPriorityIsr+4,pclatu
 37340  0000B8  C06B  FFFA         	movff	??_LowPriorityIsr+3,pclath
 37341  0000BC  C06A  FFE0         	movff	??_LowPriorityIsr+2,bsr
 37342  0000C0  C069  FFE8         	movff	??_LowPriorityIsr+1,wreg
 37343  0000C4  C068  FFD8         	movff	??_LowPriorityIsr,status
 37344  0000C8  9042               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 37345  0000CA  0010               	retfie	
 37346  0000CC                     __end_of_LowPriorityIsr:
 37347                           	opt stack 0
 37348                           tosu	equ	0xFFF
 37349                           tosh	equ	0xFFE
 37350                           tosl	equ	0xFFD
 37351                           pclatu	equ	0xFFB
 37352                           pclath	equ	0xFFA
 37353                           tblptru	equ	0xFF8
 37354                           tblptrh	equ	0xFF7
 37355                           tblptrl	equ	0xFF6
 37356                           tablat	equ	0xFF5
 37357                           prodh	equ	0xFF4
 37358                           prodl	equ	0xFF3
 37359                           intcon	equ	0xFF2
 37360                           intcon2	equ	0xFF1
 37361                           intcon3	equ	0xFF0
 37362                           indf0	equ	0xFEF
 37363                           postinc0	equ	0xFEE
 37364                           plusw0	equ	0xFEB
 37365                           fsr0h	equ	0xFEA
 37366                           fsr0l	equ	0xFE9
 37367                           wreg	equ	0xFE8
 37368                           indf1	equ	0xFE7
 37369                           postinc1	equ	0xFE6
 37370                           postdec1	equ	0xFE5
 37371                           plusw1	equ	0xFE3
 37372                           fsr1h	equ	0xFE2
 37373                           fsr1l	equ	0xFE1
 37374                           bsr	equ	0xFE0
 37375                           indf2	equ	0xFDF
 37376                           postinc2	equ	0xFDE
 37377                           postdec2	equ	0xFDD
 37378                           plusw2	equ	0xFDB
 37379                           fsr2h	equ	0xFDA
 37380                           fsr2l	equ	0xFD9
 37381                           status	equ	0xFD8
 37382                           
 37383 ;; *************** function _Tmr_Tmr2Isr *****************
 37384 ;; Defined at:
 37385 ;;		line 308 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
 37386 ;; Parameters:    Size  Location     Type
 37387 ;;		None
 37388 ;; Auto vars:     Size  Location     Type
 37389 ;;		None
 37390 ;; Return value:  Size  Location     Type
 37391 ;;                  1    wreg      void 
 37392 ;; Registers used:
 37393 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 37394 ;; Tracked objects:
 37395 ;;		On entry : 0/0
 37396 ;;		On exit  : 0/0
 37397 ;;		Unchanged: 0/0
 37398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37399 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37400 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37402 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37403 ;;Total ram usage:        0 bytes
 37404 ;; Hardware stack levels used:    1
 37405 ;; Hardware stack levels required when called:    9
 37406 ;; This function calls:
 37407 ;;		Absolute function
 37408 ;;		_Sch_SchmIntService
 37409 ;; This function is called by:
 37410 ;;		_LowPriorityIsr
 37411 ;; This function uses a non-reentrant model
 37412 ;;
 37413                           
 37414                           	psect	text181
 37415  00688A                     __ptext181:
 37416                           	opt stack 0
 37417  00688A                     _Tmr_Tmr2Isr:
 37418                           	opt stack 8
 37419                           
 37420                           ;tmr_drv.c: 311: PIR1bits.TMR2IF = 0u;
 37421                           
 37422                           ;incstack = 0
 37423  00688A  929E               	bcf	3998,1,c	;volatile
 37424                           
 37425                           ;tmr_drv.c: 314: if (Tmr2IsrCallback != (0))
 37426  00688C  0102               	movlb	2	; () banked
 37427  00688E  51E7               	movf	_Tmr2IsrCallback& (0+255),w,b
 37428  006890  11E8               	iorwf	(_Tmr2IsrCallback+1)& (0+255),w,b
 37429  006892  B4D8               	btfsc	status,2,c
 37430  006894  0012               	return	
 37431                           
 37432                           ; BSR set to: 2
 37433                           ;tmr_drv.c: 315: {
 37434                           ;tmr_drv.c: 317: Tmr2IsrCallback();
 37435  006896  D801               	call	i1u1660_28
 37436  006898  0012               	return	
 37437  00689A                     i1u1660_28:
 37438  00689A  0005               	push	
 37439  00689C  6EFA               	movwf	pclath,c
 37440  00689E  51E7               	movf	_Tmr2IsrCallback& (0+255),w,b
 37441  0068A0  6EFD               	movwf	tosl,c
 37442  0068A2  51E8               	movf	(_Tmr2IsrCallback+1)& (0+255),w,b
 37443  0068A4  6EFE               	movwf	tosh,c
 37444  0068A6  50F8               	movf	tblptru,w,c
 37445  0068A8  6EFF               	movwf	tosu,c
 37446  0068AA  50FA               	movf	pclath,w,c
 37447  0068AC  0012               	return		;indir
 37448  0068AE                     __end_of_Tmr_Tmr2Isr:
 37449                           	opt stack 0
 37450                           tosu	equ	0xFFF
 37451                           tosh	equ	0xFFE
 37452                           tosl	equ	0xFFD
 37453                           pclatu	equ	0xFFB
 37454                           pclath	equ	0xFFA
 37455                           tblptru	equ	0xFF8
 37456                           tblptrh	equ	0xFF7
 37457                           tblptrl	equ	0xFF6
 37458                           tablat	equ	0xFF5
 37459                           prodh	equ	0xFF4
 37460                           prodl	equ	0xFF3
 37461                           intcon	equ	0xFF2
 37462                           intcon2	equ	0xFF1
 37463                           intcon3	equ	0xFF0
 37464                           indf0	equ	0xFEF
 37465                           postinc0	equ	0xFEE
 37466                           plusw0	equ	0xFEB
 37467                           fsr0h	equ	0xFEA
 37468                           fsr0l	equ	0xFE9
 37469                           wreg	equ	0xFE8
 37470                           indf1	equ	0xFE7
 37471                           postinc1	equ	0xFE6
 37472                           postdec1	equ	0xFE5
 37473                           plusw1	equ	0xFE3
 37474                           fsr1h	equ	0xFE2
 37475                           fsr1l	equ	0xFE1
 37476                           bsr	equ	0xFE0
 37477                           indf2	equ	0xFDF
 37478                           postinc2	equ	0xFDE
 37479                           postdec2	equ	0xFDD
 37480                           plusw2	equ	0xFDB
 37481                           fsr2h	equ	0xFDA
 37482                           fsr2l	equ	0xFD9
 37483                           status	equ	0xFD8
 37484                           
 37485 ;; *************** function _Sch_SchmIntService *****************
 37486 ;; Defined at:
 37487 ;;		line 214 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
 37488 ;; Parameters:    Size  Location     Type
 37489 ;;		None
 37490 ;; Auto vars:     Size  Location     Type
 37491 ;;		None
 37492 ;; Return value:  Size  Location     Type
 37493 ;;                  1    wreg      void 
 37494 ;; Registers used:
 37495 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 37496 ;; Tracked objects:
 37497 ;;		On entry : 0/0
 37498 ;;		On exit  : 0/0
 37499 ;;		Unchanged: 0/0
 37500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37501 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37502 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37504 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37505 ;;Total ram usage:        0 bytes
 37506 ;; Hardware stack levels used:    1
 37507 ;; Hardware stack levels required when called:    8
 37508 ;; This function calls:
 37509 ;;		_OsAlrm_ProcessOsAlarms
 37510 ;;		_UpdateOsCounters
 37511 ;;		_UpdateSchFlag
 37512 ;; This function is called by:
 37513 ;;		_SystemInit
 37514 ;;		_Tmr_Tmr2Isr
 37515 ;; This function uses a non-reentrant model
 37516 ;;
 37517                           
 37518                           	psect	text182
 37519  006C1E                     __ptext182:
 37520                           	opt stack 0
 37521  006C1E                     _Sch_SchmIntService:
 37522                           	opt stack 8
 37523                           
 37524                           ;os_sched.c: 217: UpdateSchFlag();
 37525                           
 37526                           ;incstack = 0
 37527  006C1E  EC1A  F035         	call	_UpdateSchFlag	;wreg free
 37528                           
 37529                           ;os_sched.c: 219: UpdateOsCounters();
 37530  006C22  ECF7  F035         	call	_UpdateOsCounters	;wreg free
 37531                           
 37532                           ;os_sched.c: 221: OsAlrm_ProcessOsAlarms();
 37533  006C26  EC1D  F012         	call	_OsAlrm_ProcessOsAlarms	;wreg free
 37534  006C2A  0012               	return		;funcret
 37535  006C2C                     __end_of_Sch_SchmIntService:
 37536                           	opt stack 0
 37537                           tosu	equ	0xFFF
 37538                           tosh	equ	0xFFE
 37539                           tosl	equ	0xFFD
 37540                           pclatu	equ	0xFFB
 37541                           pclath	equ	0xFFA
 37542                           tblptru	equ	0xFF8
 37543                           tblptrh	equ	0xFF7
 37544                           tblptrl	equ	0xFF6
 37545                           tablat	equ	0xFF5
 37546                           prodh	equ	0xFF4
 37547                           prodl	equ	0xFF3
 37548                           intcon	equ	0xFF2
 37549                           intcon2	equ	0xFF1
 37550                           intcon3	equ	0xFF0
 37551                           indf0	equ	0xFEF
 37552                           postinc0	equ	0xFEE
 37553                           plusw0	equ	0xFEB
 37554                           fsr0h	equ	0xFEA
 37555                           fsr0l	equ	0xFE9
 37556                           wreg	equ	0xFE8
 37557                           indf1	equ	0xFE7
 37558                           postinc1	equ	0xFE6
 37559                           postdec1	equ	0xFE5
 37560                           plusw1	equ	0xFE3
 37561                           fsr1h	equ	0xFE2
 37562                           fsr1l	equ	0xFE1
 37563                           bsr	equ	0xFE0
 37564                           indf2	equ	0xFDF
 37565                           postinc2	equ	0xFDE
 37566                           postdec2	equ	0xFDD
 37567                           plusw2	equ	0xFDB
 37568                           fsr2h	equ	0xFDA
 37569                           fsr2l	equ	0xFD9
 37570                           status	equ	0xFD8
 37571                           
 37572 ;; *************** function _UpdateSchFlag *****************
 37573 ;; Defined at:
 37574 ;;		line 132 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
 37575 ;; Parameters:    Size  Location     Type
 37576 ;;		None
 37577 ;; Auto vars:     Size  Location     Type
 37578 ;;		None
 37579 ;; Return value:  Size  Location     Type
 37580 ;;                  1    wreg      void 
 37581 ;; Registers used:
 37582 ;;		wreg, status,2, status,0
 37583 ;; Tracked objects:
 37584 ;;		On entry : 0/0
 37585 ;;		On exit  : 0/0
 37586 ;;		Unchanged: 0/0
 37587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37588 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37589 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37591 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37592 ;;Total ram usage:        0 bytes
 37593 ;; Hardware stack levels used:    1
 37594 ;; Hardware stack levels required when called:    4
 37595 ;; This function calls:
 37596 ;;		Nothing
 37597 ;; This function is called by:
 37598 ;;		_Sch_SchmIntService
 37599 ;; This function uses a non-reentrant model
 37600 ;;
 37601                           
 37602                           	psect	text183
 37603  006A34                     __ptext183:
 37604                           	opt stack 0
 37605  006A34                     _UpdateSchFlag:
 37606                           	opt stack 11
 37607                           
 37608                           ;os_sched.c: 135: static UINT16 InterruptCounter = 0;
 37609                           ;os_sched.c: 138: InterruptCounter++;
 37610                           
 37611                           ;incstack = 0
 37612  006A34  0102               	movlb	2	; () banked
 37613  006A36  4BD9               	infsnz	UpdateSchFlag@InterruptCounter& (0+255),f,b
 37614  006A38  2BDA               	incf	(UpdateSchFlag@InterruptCounter+1)& (0+255),f,b
 37615                           
 37616                           ; BSR set to: 2
 37617                           ;os_sched.c: 140: if (InterruptCounter >= ((((UINT16)(1000))*((UINT16)(1)))/1000))
 37618  006A3A  51D9               	movf	UpdateSchFlag@InterruptCounter& (0+255),w,b
 37619  006A3C  11DA               	iorwf	(UpdateSchFlag@InterruptCounter+1)& (0+255),w,b
 37620  006A3E  B4D8               	btfsc	status,2,c
 37621  006A40  0012               	return	
 37622                           
 37623                           ; BSR set to: 2
 37624                           ;os_sched.c: 141: {
 37625                           ;os_sched.c: 143: InterruptCounter = 0;
 37626  006A42  0E00               	movlw	0
 37627  006A44  6FDA               	movwf	(UpdateSchFlag@InterruptCounter+1)& (0+255),b
 37628  006A46  0E00               	movlw	0
 37629  006A48  6FD9               	movwf	UpdateSchFlag@InterruptCounter& (0+255),b
 37630                           
 37631                           ;os_sched.c: 145: MainSystemTimebaseFlag = CallTaskPhase;
 37632  006A4A  0E00               	movlw	0
 37633  006A4C  6FF2               	movwf	_MainSystemTimebaseFlag& (0+255),b
 37634  006A4E  0012               	return	
 37635  006A50                     __end_of_UpdateSchFlag:
 37636                           	opt stack 0
 37637                           tosu	equ	0xFFF
 37638                           tosh	equ	0xFFE
 37639                           tosl	equ	0xFFD
 37640                           pclatu	equ	0xFFB
 37641                           pclath	equ	0xFFA
 37642                           tblptru	equ	0xFF8
 37643                           tblptrh	equ	0xFF7
 37644                           tblptrl	equ	0xFF6
 37645                           tablat	equ	0xFF5
 37646                           prodh	equ	0xFF4
 37647                           prodl	equ	0xFF3
 37648                           intcon	equ	0xFF2
 37649                           intcon2	equ	0xFF1
 37650                           intcon3	equ	0xFF0
 37651                           indf0	equ	0xFEF
 37652                           postinc0	equ	0xFEE
 37653                           plusw0	equ	0xFEB
 37654                           fsr0h	equ	0xFEA
 37655                           fsr0l	equ	0xFE9
 37656                           wreg	equ	0xFE8
 37657                           indf1	equ	0xFE7
 37658                           postinc1	equ	0xFE6
 37659                           postdec1	equ	0xFE5
 37660                           plusw1	equ	0xFE3
 37661                           fsr1h	equ	0xFE2
 37662                           fsr1l	equ	0xFE1
 37663                           bsr	equ	0xFE0
 37664                           indf2	equ	0xFDF
 37665                           postinc2	equ	0xFDE
 37666                           postdec2	equ	0xFDD
 37667                           plusw2	equ	0xFDB
 37668                           fsr2h	equ	0xFDA
 37669                           fsr2l	equ	0xFD9
 37670                           status	equ	0xFD8
 37671                           
 37672 ;; *************** function _UpdateOsCounters *****************
 37673 ;; Defined at:
 37674 ;;		line 157 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
 37675 ;; Parameters:    Size  Location     Type
 37676 ;;		None
 37677 ;; Auto vars:     Size  Location     Type
 37678 ;;		None
 37679 ;; Return value:  Size  Location     Type
 37680 ;;                  1    wreg      void 
 37681 ;; Registers used:
 37682 ;;		wreg, status,2, status,0
 37683 ;; Tracked objects:
 37684 ;;		On entry : 0/0
 37685 ;;		On exit  : 0/0
 37686 ;;		Unchanged: 0/0
 37687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37688 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37689 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37690 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37691 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37692 ;;Total ram usage:        0 bytes
 37693 ;; Hardware stack levels used:    1
 37694 ;; Hardware stack levels required when called:    4
 37695 ;; This function calls:
 37696 ;;		Nothing
 37697 ;; This function is called by:
 37698 ;;		_Sch_SchmIntService
 37699 ;; This function uses a non-reentrant model
 37700 ;;
 37701                           
 37702                           	psect	text184
 37703  006BEE                     __ptext184:
 37704                           	opt stack 0
 37705  006BEE                     _UpdateOsCounters:
 37706                           	opt stack 11
 37707                           
 37708                           ;os_sched.c: 160: OsTmr_OsTickCounter++;
 37709                           
 37710                           ; BSR set to: 2
 37711                           ;incstack = 0
 37712  006BEE  0E01               	movlw	1
 37713  006BF0  0103               	movlb	3	; () banked
 37714  006BF2  2714               	addwf	_OsTmr_OsTickCounter& (0+255),f,b
 37715  006BF4  0E00               	movlw	0
 37716  006BF6  2315               	addwfc	(_OsTmr_OsTickCounter+1)& (0+255),f,b
 37717  006BF8  2316               	addwfc	(_OsTmr_OsTickCounter+2)& (0+255),f,b
 37718  006BFA  2317               	addwfc	(_OsTmr_OsTickCounter+3)& (0+255),f,b
 37719                           
 37720                           ; BSR set to: 3
 37721  006BFC  0012               	return		;funcret
 37722  006BFE                     __end_of_UpdateOsCounters:
 37723                           	opt stack 0
 37724                           tosu	equ	0xFFF
 37725                           tosh	equ	0xFFE
 37726                           tosl	equ	0xFFD
 37727                           pclatu	equ	0xFFB
 37728                           pclath	equ	0xFFA
 37729                           tblptru	equ	0xFF8
 37730                           tblptrh	equ	0xFF7
 37731                           tblptrl	equ	0xFF6
 37732                           tablat	equ	0xFF5
 37733                           prodh	equ	0xFF4
 37734                           prodl	equ	0xFF3
 37735                           intcon	equ	0xFF2
 37736                           intcon2	equ	0xFF1
 37737                           intcon3	equ	0xFF0
 37738                           indf0	equ	0xFEF
 37739                           postinc0	equ	0xFEE
 37740                           plusw0	equ	0xFEB
 37741                           fsr0h	equ	0xFEA
 37742                           fsr0l	equ	0xFE9
 37743                           wreg	equ	0xFE8
 37744                           indf1	equ	0xFE7
 37745                           postinc1	equ	0xFE6
 37746                           postdec1	equ	0xFE5
 37747                           plusw1	equ	0xFE3
 37748                           fsr1h	equ	0xFE2
 37749                           fsr1l	equ	0xFE1
 37750                           bsr	equ	0xFE0
 37751                           indf2	equ	0xFDF
 37752                           postinc2	equ	0xFDE
 37753                           postdec2	equ	0xFDD
 37754                           plusw2	equ	0xFDB
 37755                           fsr2h	equ	0xFDA
 37756                           fsr2l	equ	0xFD9
 37757                           status	equ	0xFD8
 37758                           
 37759 ;; *************** function _OsAlrm_ProcessOsAlarms *****************
 37760 ;; Defined at:
 37761 ;;		line 115 in file "../../MercuryFwk/Source/c/02_Osl/os_alarms.c"
 37762 ;; Parameters:    Size  Location     Type
 37763 ;;		None
 37764 ;; Auto vars:     Size  Location     Type
 37765 ;;  AlarmIndex      2   32[COMRAM] unsigned short 
 37766 ;; Return value:  Size  Location     Type
 37767 ;;                  1    wreg      void 
 37768 ;; Registers used:
 37769 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 37770 ;; Tracked objects:
 37771 ;;		On entry : 0/0
 37772 ;;		On exit  : 0/0
 37773 ;;		Unchanged: 0/0
 37774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37775 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37776 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37777 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37778 ;;      Totals:         2       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37779 ;;Total ram usage:       10 bytes
 37780 ;; Hardware stack levels used:    1
 37781 ;; Hardware stack levels required when called:    7
 37782 ;; This function calls:
 37783 ;;		_I2cDummyTx
 37784 ;;		_OsAlrm_ClearOsAlarm
 37785 ;;		i1___wmul
 37786 ;; This function is called by:
 37787 ;;		_Sch_SchmIntService
 37788 ;; This function uses a non-reentrant model
 37789 ;;
 37790                           
 37791                           	psect	text185
 37792  00243A                     __ptext185:
 37793                           	opt stack 0
 37794  00243A                     _OsAlrm_ProcessOsAlarms:
 37795                           	opt stack 8
 37796                           
 37797                           ;os_alarms.c: 117: UINT16 AlarmIndex;
 37798                           ;os_alarms.c: 120: for (AlarmIndex = 0; AlarmIndex < ((UINT8)(20)); AlarmIndex++)
 37799                           
 37800                           ; BSR set to: 3
 37801                           ;incstack = 0
 37802  00243A  0E00               	movlw	0
 37803  00243C  6E22               	movwf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,c
 37804  00243E  0E00               	movlw	0
 37805  002440  6E21               	movwf	OsAlrm_ProcessOsAlarms@AlarmIndex,c
 37806  002442  5022               	movf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,w,c
 37807  002444  E105               	bnz	i1u1635_20
 37808  002446  0E14               	movlw	20
 37809  002448  5C21               	subwf	OsAlrm_ProcessOsAlarms@AlarmIndex,w,c
 37810  00244A  B0D8               	btfsc	status,0,c
 37811  00244C  0012               	return	
 37812  00244E  D001               	goto	i1l742
 37813  002450                     i1u1635_20:
 37814  002450  0012               	return	
 37815  002452                     i1l742:
 37816                           
 37817                           ;os_alarms.c: 121: {
 37818                           ;os_alarms.c: 123: if (OsAlarms[AlarmIndex].Enabled == 1u)
 37819  002452  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 37820  002456  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 37821  00245A  0E00               	movlw	0
 37822  00245C  6E1C               	movwf	i1___wmul@multiplicand+1,c
 37823  00245E  0E0B               	movlw	11
 37824  002460  6E1B               	movwf	i1___wmul@multiplicand,c
 37825  002462  ECFC  F033         	call	i1___wmul	;wreg free
 37826  002466  0E00               	movlw	low _OsAlarms
 37827  002468  2419               	addwf	?i1___wmul,w,c
 37828  00246A  6ED9               	movwf	fsr2l,c
 37829  00246C  0E06               	movlw	high _OsAlarms
 37830  00246E  201A               	addwfc	?i1___wmul+1,w,c
 37831  002470  6EDA               	movwf	fsr2h,c
 37832  002472  04DE               	decf	postinc2,w,c
 37833  002474  A4D8               	btfss	status,2,c
 37834  002476  D086               	goto	i1u1639_29
 37835                           
 37836                           ;os_alarms.c: 124: {
 37837                           ;os_alarms.c: 126: OsAlarms[AlarmIndex].Counter++;
 37838  002478  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 37839  00247C  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 37840  002480  0E00               	movlw	0
 37841  002482  6E1C               	movwf	i1___wmul@multiplicand+1,c
 37842  002484  0E0B               	movlw	11
 37843  002486  6E1B               	movwf	i1___wmul@multiplicand,c
 37844  002488  ECFC  F033         	call	i1___wmul	;wreg free
 37845  00248C  0E01               	movlw	1
 37846  00248E  2619               	addwf	?i1___wmul,f,c
 37847  002490  0E00               	movlw	0
 37848  002492  221A               	addwfc	?i1___wmul+1,f,c
 37849  002494  0E00               	movlw	low _OsAlarms
 37850  002496  2419               	addwf	?i1___wmul,w,c
 37851  002498  6ED9               	movwf	fsr2l,c
 37852  00249A  0E06               	movlw	high _OsAlarms
 37853  00249C  201A               	addwfc	?i1___wmul+1,w,c
 37854  00249E  6EDA               	movwf	fsr2h,c
 37855  0024A0  2ADE               	incf	postinc2,f,c
 37856  0024A2  0E00               	movlw	0
 37857  0024A4  22DE               	addwfc	postinc2,f,c
 37858  0024A6  22DE               	addwfc	postinc2,f,c
 37859  0024A8  22DE               	addwfc	postinc2,f,c
 37860                           
 37861                           ;os_alarms.c: 128: if (OsAlarms[AlarmIndex].Counter >= OsAlarms[AlarmIndex].AlarmTime)
 37862  0024AA  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 37863  0024AE  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 37864  0024B2  0E00               	movlw	0
 37865  0024B4  6E1C               	movwf	i1___wmul@multiplicand+1,c
 37866  0024B6  0E0B               	movlw	11
 37867  0024B8  6E1B               	movwf	i1___wmul@multiplicand,c
 37868  0024BA  ECFC  F033         	call	i1___wmul	;wreg free
 37869  0024BE  0E05               	movlw	5
 37870  0024C0  2619               	addwf	?i1___wmul,f,c
 37871  0024C2  0E00               	movlw	0
 37872  0024C4  221A               	addwfc	?i1___wmul+1,f,c
 37873  0024C6  0E00               	movlw	low _OsAlarms
 37874  0024C8  2419               	addwf	?i1___wmul,w,c
 37875  0024CA  6ED9               	movwf	fsr2l,c
 37876  0024CC  0E06               	movlw	high _OsAlarms
 37877  0024CE  201A               	addwfc	?i1___wmul+1,w,c
 37878  0024D0  6EDA               	movwf	fsr2h,c
 37879  0024D2  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 37880  0024D6  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 37881  0024DA  0E00               	movlw	0
 37882  0024DC  6E1C               	movwf	i1___wmul@multiplicand+1,c
 37883  0024DE  0E0B               	movlw	11
 37884  0024E0  6E1B               	movwf	i1___wmul@multiplicand,c
 37885  0024E2  ECFC  F033         	call	i1___wmul	;wreg free
 37886  0024E6  0E01               	movlw	1
 37887  0024E8  2619               	addwf	?i1___wmul,f,c
 37888  0024EA  0E00               	movlw	0
 37889  0024EC  221A               	addwfc	?i1___wmul+1,f,c
 37890  0024EE  0E00               	movlw	low _OsAlarms
 37891  0024F0  2419               	addwf	?i1___wmul,w,c
 37892  0024F2  6EE1               	movwf	fsr1l,c
 37893  0024F4  0E06               	movlw	high _OsAlarms
 37894  0024F6  201A               	addwfc	?i1___wmul+1,w,c
 37895  0024F8  6EE2               	movwf	fsr1h,c
 37896  0024FA  50DE               	movf	postinc2,w,c
 37897  0024FC  5CE6               	subwf	postinc1,w,c
 37898  0024FE  50DE               	movf	postinc2,w,c
 37899  002500  58E6               	subwfb	postinc1,w,c
 37900  002502  50DE               	movf	postinc2,w,c
 37901  002504  58E6               	subwfb	postinc1,w,c
 37902  002506  50DE               	movf	postinc2,w,c
 37903  002508  58E6               	subwfb	postinc1,w,c
 37904  00250A  A0D8               	btfss	status,0,c
 37905  00250C  D03B               	goto	i1u1639_29
 37906                           
 37907                           ;os_alarms.c: 129: {
 37908                           ;os_alarms.c: 131: OsAlrm_ClearOsAlarm(AlarmIndex);
 37909  00250E  5021               	movf	OsAlrm_ProcessOsAlarms@AlarmIndex,w,c
 37910  002510  ECA1  F02D         	call	_OsAlrm_ClearOsAlarm
 37911                           
 37912                           ;os_alarms.c: 133: if (OsAlarms[AlarmIndex].AlrmCbk != (0))
 37913  002514  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 37914  002518  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 37915  00251C  0E00               	movlw	0
 37916  00251E  6E1C               	movwf	i1___wmul@multiplicand+1,c
 37917  002520  0E0B               	movlw	11
 37918  002522  6E1B               	movwf	i1___wmul@multiplicand,c
 37919  002524  ECFC  F033         	call	i1___wmul	;wreg free
 37920  002528  0E09               	movlw	9
 37921  00252A  2619               	addwf	?i1___wmul,f,c
 37922  00252C  0E00               	movlw	0
 37923  00252E  221A               	addwfc	?i1___wmul+1,f,c
 37924  002530  0E00               	movlw	low _OsAlarms
 37925  002532  2419               	addwf	?i1___wmul,w,c
 37926  002534  6ED9               	movwf	fsr2l,c
 37927  002536  0E06               	movlw	high _OsAlarms
 37928  002538  201A               	addwfc	?i1___wmul+1,w,c
 37929  00253A  6EDA               	movwf	fsr2h,c
 37930  00253C  50DE               	movf	postinc2,w,c
 37931  00253E  10DE               	iorwf	postinc2,w,c
 37932  002540  B4D8               	btfsc	status,2,c
 37933  002542  D020               	goto	i1u1639_29
 37934                           
 37935                           ;os_alarms.c: 134: {
 37936                           ;os_alarms.c: 136: OsAlarms[AlarmIndex].AlrmCbk();
 37937  002544  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 37938  002548  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 37939  00254C  0E00               	movlw	0
 37940  00254E  6E1C               	movwf	i1___wmul@multiplicand+1,c
 37941  002550  0E0B               	movlw	11
 37942  002552  6E1B               	movwf	i1___wmul@multiplicand,c
 37943  002554  ECFC  F033         	call	i1___wmul	;wreg free
 37944  002558  0E09               	movlw	9
 37945  00255A  2619               	addwf	?i1___wmul,f,c
 37946  00255C  0E00               	movlw	0
 37947  00255E  221A               	addwfc	?i1___wmul+1,f,c
 37948  002560  0E00               	movlw	low _OsAlarms
 37949  002562  2419               	addwf	?i1___wmul,w,c
 37950  002564  6ED9               	movwf	fsr2l,c
 37951  002566  0E06               	movlw	high _OsAlarms
 37952  002568  201A               	addwfc	?i1___wmul+1,w,c
 37953  00256A  6EDA               	movwf	fsr2h,c
 37954  00256C  D801               	call	i1u1639_28
 37955  00256E  D00A               	goto	i1u1639_29
 37956  002570                     i1u1639_28:
 37957  002570  0005               	push	
 37958  002572  6EFA               	movwf	pclath,c
 37959  002574  50DE               	movf	postinc2,w,c
 37960  002576  6EFD               	movwf	tosl,c
 37961  002578  50DE               	movf	postinc2,w,c
 37962  00257A  6EFE               	movwf	tosh,c
 37963  00257C  50F8               	movf	tblptru,w,c
 37964  00257E  6EFF               	movwf	tosu,c
 37965  002580  50FA               	movf	pclath,w,c
 37966  002582  0012               	return		;indir
 37967  002584                     i1u1639_29:
 37968  002584  4A21               	infsnz	OsAlrm_ProcessOsAlarms@AlarmIndex,f,c
 37969  002586  2A22               	incf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,f,c
 37970  002588  5022               	movf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,w,c
 37971  00258A  E101               	bnz	i1l747
 37972  00258C  D75C               	goto	L98
 37973  00258E                     i1l747:
 37974  00258E  0012               	return		;funcret
 37975  002590                     __end_of_OsAlrm_ProcessOsAlarms:
 37976                           	opt stack 0
 37977                           tosu	equ	0xFFF
 37978                           tosh	equ	0xFFE
 37979                           tosl	equ	0xFFD
 37980                           pclatu	equ	0xFFB
 37981                           pclath	equ	0xFFA
 37982                           tblptru	equ	0xFF8
 37983                           tblptrh	equ	0xFF7
 37984                           tblptrl	equ	0xFF6
 37985                           tablat	equ	0xFF5
 37986                           prodh	equ	0xFF4
 37987                           prodl	equ	0xFF3
 37988                           intcon	equ	0xFF2
 37989                           intcon2	equ	0xFF1
 37990                           intcon3	equ	0xFF0
 37991                           indf0	equ	0xFEF
 37992                           postinc0	equ	0xFEE
 37993                           plusw0	equ	0xFEB
 37994                           fsr0h	equ	0xFEA
 37995                           fsr0l	equ	0xFE9
 37996                           wreg	equ	0xFE8
 37997                           indf1	equ	0xFE7
 37998                           postinc1	equ	0xFE6
 37999                           postdec1	equ	0xFE5
 38000                           plusw1	equ	0xFE3
 38001                           fsr1h	equ	0xFE2
 38002                           fsr1l	equ	0xFE1
 38003                           bsr	equ	0xFE0
 38004                           indf2	equ	0xFDF
 38005                           postinc2	equ	0xFDE
 38006                           postdec2	equ	0xFDD
 38007                           plusw2	equ	0xFDB
 38008                           fsr2h	equ	0xFDA
 38009                           fsr2l	equ	0xFD9
 38010                           status	equ	0xFD8
 38011                           
 38012 ;; *************** function i1___wmul *****************
 38013 ;; Defined at:
 38014 ;;		line 15 in file "/opt/microchip/xc8/v1.45/sources/common/Umul16.c"
 38015 ;; Parameters:    Size  Location     Type
 38016 ;;  multiplier      2   24[COMRAM] unsigned int 
 38017 ;;  multiplicand    2   26[COMRAM] unsigned int 
 38018 ;; Auto vars:     Size  Location     Type
 38019 ;;  __wmul          2   28[COMRAM] unsigned int 
 38020 ;; Return value:  Size  Location     Type
 38021 ;;                  2   24[COMRAM] unsigned int 
 38022 ;; Registers used:
 38023 ;;		wreg, status,2, status,0, prodl, prodh
 38024 ;; Tracked objects:
 38025 ;;		On entry : 0/0
 38026 ;;		On exit  : 0/0
 38027 ;;		Unchanged: 0/0
 38028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38029 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38030 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38032 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38033 ;;Total ram usage:        6 bytes
 38034 ;; Hardware stack levels used:    1
 38035 ;; Hardware stack levels required when called:    4
 38036 ;; This function calls:
 38037 ;;		Nothing
 38038 ;; This function is called by:
 38039 ;;		_OsAlrm_ProcessOsAlarms
 38040 ;; This function uses a non-reentrant model
 38041 ;;
 38042                           
 38043                           	psect	text186
 38044  0067F8                     __ptext186:
 38045                           	opt stack 0
 38046  0067F8                     i1___wmul:
 38047                           	opt stack 10
 38048                           
 38049                           ;incstack = 0
 38050  0067F8  5019               	movf	i1___wmul@multiplier,w,c
 38051  0067FA  021B               	mulwf	i1___wmul@multiplicand,c
 38052  0067FC  CFF3 F01D          	movff	prodl,i1___wmul@product
 38053  006800  CFF4 F01E          	movff	prodh,i1___wmul@product+1
 38054  006804  5019               	movf	i1___wmul@multiplier,w,c
 38055  006806  021C               	mulwf	i1___wmul@multiplicand+1,c
 38056  006808  50F3               	movf	prodl,w,c
 38057  00680A  261E               	addwf	i1___wmul@product+1,f,c
 38058  00680C  501A               	movf	i1___wmul@multiplier+1,w,c
 38059  00680E  021B               	mulwf	i1___wmul@multiplicand,c
 38060  006810  50F3               	movf	prodl,w,c
 38061  006812  261E               	addwf	i1___wmul@product+1,f,c
 38062  006814  C01D  F019         	movff	i1___wmul@product,?i1___wmul
 38063  006818  C01E  F01A         	movff	i1___wmul@product+1,?i1___wmul+1
 38064  00681C  0012               	return	
 38065  00681E                     __end_ofi1___wmul:
 38066                           	opt stack 0
 38067                           tosu	equ	0xFFF
 38068                           tosh	equ	0xFFE
 38069                           tosl	equ	0xFFD
 38070                           pclatu	equ	0xFFB
 38071                           pclath	equ	0xFFA
 38072                           tblptru	equ	0xFF8
 38073                           tblptrh	equ	0xFF7
 38074                           tblptrl	equ	0xFF6
 38075                           tablat	equ	0xFF5
 38076                           prodh	equ	0xFF4
 38077                           prodl	equ	0xFF3
 38078                           intcon	equ	0xFF2
 38079                           intcon2	equ	0xFF1
 38080                           intcon3	equ	0xFF0
 38081                           indf0	equ	0xFEF
 38082                           postinc0	equ	0xFEE
 38083                           plusw0	equ	0xFEB
 38084                           fsr0h	equ	0xFEA
 38085                           fsr0l	equ	0xFE9
 38086                           wreg	equ	0xFE8
 38087                           indf1	equ	0xFE7
 38088                           postinc1	equ	0xFE6
 38089                           postdec1	equ	0xFE5
 38090                           plusw1	equ	0xFE3
 38091                           fsr1h	equ	0xFE2
 38092                           fsr1l	equ	0xFE1
 38093                           bsr	equ	0xFE0
 38094                           indf2	equ	0xFDF
 38095                           postinc2	equ	0xFDE
 38096                           postdec2	equ	0xFDD
 38097                           plusw2	equ	0xFDB
 38098                           fsr2h	equ	0xFDA
 38099                           fsr2l	equ	0xFD9
 38100                           status	equ	0xFD8
 38101                           
 38102 ;; *************** function _OsAlrm_ClearOsAlarm *****************
 38103 ;; Defined at:
 38104 ;;		line 97 in file "../../MercuryFwk/Source/c/02_Osl/os_alarms.c"
 38105 ;; Parameters:    Size  Location     Type
 38106 ;;  OsAlarmId       1    wreg     unsigned char 
 38107 ;; Auto vars:     Size  Location     Type
 38108 ;;  OsAlarmId       1   24[COMRAM] unsigned char 
 38109 ;; Return value:  Size  Location     Type
 38110 ;;                  1    wreg      void 
 38111 ;; Registers used:
 38112 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 38113 ;; Tracked objects:
 38114 ;;		On entry : 0/0
 38115 ;;		On exit  : 0/0
 38116 ;;		Unchanged: 0/0
 38117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38118 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38119 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38121 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38122 ;;Total ram usage:        1 bytes
 38123 ;; Hardware stack levels used:    1
 38124 ;; Hardware stack levels required when called:    4
 38125 ;; This function calls:
 38126 ;;		Nothing
 38127 ;; This function is called by:
 38128 ;;		_OsAlrm_ProcessOsAlarms
 38129 ;; This function uses a non-reentrant model
 38130 ;;
 38131                           
 38132                           	psect	text187
 38133  005B42                     __ptext187:
 38134                           	opt stack 0
 38135  005B42                     _OsAlrm_ClearOsAlarm:
 38136                           	opt stack 10
 38137                           
 38138                           ;incstack = 0
 38139                           ;OsAlrm_ClearOsAlarm@OsAlarmId stored from wreg
 38140  005B42  6E19               	movwf	OsAlrm_ClearOsAlarm@OsAlarmId,c
 38141                           
 38142                           ;os_alarms.c: 100: OsAlarms[OsAlarmId].Enabled = 0u;
 38143  005B44  5019               	movf	OsAlrm_ClearOsAlarm@OsAlarmId,w,c
 38144  005B46  0D0B               	mullw	11
 38145  005B48  0E00               	movlw	low _OsAlarms
 38146  005B4A  24F3               	addwf	prodl,w,c
 38147  005B4C  6ED9               	movwf	fsr2l,c
 38148  005B4E  0E06               	movlw	high _OsAlarms
 38149  005B50  20F4               	addwfc	prodh,w,c
 38150  005B52  6EDA               	movwf	fsr2h,c
 38151  005B54  0E00               	movlw	0
 38152  005B56  6EDF               	movwf	indf2,c
 38153                           
 38154                           ;os_alarms.c: 102: OsAlarms[OsAlarmId].Counter = 0;
 38155  005B58  5019               	movf	OsAlrm_ClearOsAlarm@OsAlarmId,w,c
 38156  005B5A  0D0B               	mullw	11
 38157  005B5C  0E01               	movlw	1
 38158  005B5E  26F3               	addwf	prodl,f,c
 38159  005B60  0E00               	movlw	0
 38160  005B62  22F4               	addwfc	prodh,f,c
 38161  005B64  0E00               	movlw	low _OsAlarms
 38162  005B66  24F3               	addwf	prodl,w,c
 38163  005B68  6ED9               	movwf	fsr2l,c
 38164  005B6A  0E06               	movlw	high _OsAlarms
 38165  005B6C  20F4               	addwfc	prodh,w,c
 38166  005B6E  6EDA               	movwf	fsr2h,c
 38167  005B70  6ADE               	clrf	postinc2,c
 38168  005B72  6ADE               	clrf	postinc2,c
 38169  005B74  6ADE               	clrf	postinc2,c
 38170  005B76  6ADD               	clrf	postdec2,c
 38171                           
 38172                           ;os_alarms.c: 104: OsAlarms[OsAlarmId].AlarmTime = 0;
 38173  005B78  5019               	movf	OsAlrm_ClearOsAlarm@OsAlarmId,w,c
 38174  005B7A  0D0B               	mullw	11
 38175  005B7C  0E05               	movlw	5
 38176  005B7E  26F3               	addwf	prodl,f,c
 38177  005B80  0E00               	movlw	0
 38178  005B82  22F4               	addwfc	prodh,f,c
 38179  005B84  0E00               	movlw	low _OsAlarms
 38180  005B86  24F3               	addwf	prodl,w,c
 38181  005B88  6ED9               	movwf	fsr2l,c
 38182  005B8A  0E06               	movlw	high _OsAlarms
 38183  005B8C  20F4               	addwfc	prodh,w,c
 38184  005B8E  6EDA               	movwf	fsr2h,c
 38185  005B90  6ADE               	clrf	postinc2,c
 38186  005B92  6ADE               	clrf	postinc2,c
 38187  005B94  6ADE               	clrf	postinc2,c
 38188  005B96  6ADD               	clrf	postdec2,c
 38189  005B98  0012               	return		;funcret
 38190  005B9A                     __end_of_OsAlrm_ClearOsAlarm:
 38191                           	opt stack 0
 38192                           tosu	equ	0xFFF
 38193                           tosh	equ	0xFFE
 38194                           tosl	equ	0xFFD
 38195                           pclatu	equ	0xFFB
 38196                           pclath	equ	0xFFA
 38197                           tblptru	equ	0xFF8
 38198                           tblptrh	equ	0xFF7
 38199                           tblptrl	equ	0xFF6
 38200                           tablat	equ	0xFF5
 38201                           prodh	equ	0xFF4
 38202                           prodl	equ	0xFF3
 38203                           intcon	equ	0xFF2
 38204                           intcon2	equ	0xFF1
 38205                           intcon3	equ	0xFF0
 38206                           indf0	equ	0xFEF
 38207                           postinc0	equ	0xFEE
 38208                           plusw0	equ	0xFEB
 38209                           fsr0h	equ	0xFEA
 38210                           fsr0l	equ	0xFE9
 38211                           wreg	equ	0xFE8
 38212                           indf1	equ	0xFE7
 38213                           postinc1	equ	0xFE6
 38214                           postdec1	equ	0xFE5
 38215                           plusw1	equ	0xFE3
 38216                           fsr1h	equ	0xFE2
 38217                           fsr1l	equ	0xFE1
 38218                           bsr	equ	0xFE0
 38219                           indf2	equ	0xFDF
 38220                           postinc2	equ	0xFDE
 38221                           postdec2	equ	0xFDD
 38222                           plusw2	equ	0xFDB
 38223                           fsr2h	equ	0xFDA
 38224                           fsr2l	equ	0xFD9
 38225                           status	equ	0xFD8
 38226                           
 38227 ;; *************** function _I2cDummyTx *****************
 38228 ;; Defined at:
 38229 ;;		line 193 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 38230 ;; Parameters:    Size  Location     Type
 38231 ;;		None
 38232 ;; Auto vars:     Size  Location     Type
 38233 ;;		None
 38234 ;; Return value:  Size  Location     Type
 38235 ;;                  1    wreg      void 
 38236 ;; Registers used:
 38237 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 38238 ;; Tracked objects:
 38239 ;;		On entry : 0/0
 38240 ;;		On exit  : 0/0
 38241 ;;		Unchanged: 0/0
 38242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38243 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38244 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38246 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38247 ;;Total ram usage:        0 bytes
 38248 ;; Hardware stack levels used:    1
 38249 ;; Hardware stack levels required when called:    6
 38250 ;; This function calls:
 38251 ;;		i1_I2cSlv_SendI2cMsg
 38252 ;; This function is called by:
 38253 ;;		_I2cSlv_MainTask
 38254 ;;		_OsAlrm_ProcessOsAlarms
 38255 ;; This function uses a non-reentrant model
 38256 ;;
 38257                           
 38258                           	psect	text188
 38259  006A50                     __ptext188:
 38260                           	opt stack 0
 38261  006A50                     _I2cDummyTx:
 38262                           	opt stack 8
 38263                           
 38264                           ;i2c_slv.c: 195: static UINT8 DummyBuffer = 0x00;
 38265                           ;i2c_slv.c: 198: I2cSlv_SendI2cMsg(&DummyBuffer,0x00,1);
 38266                           
 38267                           ;incstack = 0
 38268  006A50  0EFB               	movlw	low I2cDummyTx@DummyBuffer
 38269  006A52  6E1C               	movwf	i1I2cSlv_SendI2cMsg@TxBuffer,c
 38270  006A54  0E01               	movlw	high I2cDummyTx@DummyBuffer
 38271  006A56  6E1D               	movwf	i1I2cSlv_SendI2cMsg@TxBuffer+1,c
 38272  006A58  0E00               	movlw	0
 38273  006A5A  6E1E               	movwf	i1I2cSlv_SendI2cMsg@SlaveAddr,c
 38274  006A5C  0E01               	movlw	1
 38275  006A5E  6E1F               	movwf	i1I2cSlv_SendI2cMsg@DataLenght,c
 38276  006A60  EC60  F032         	call	i1_I2cSlv_SendI2cMsg	;wreg free
 38277                           
 38278                           ;i2c_slv.c: 200: I2cBusStatus = I2cBusReady;
 38279  006A64  0E01               	movlw	1
 38280  006A66  0101               	movlb	1	; () banked
 38281  006A68  6FE4               	movwf	_I2cBusStatus& (0+255),b
 38282                           
 38283                           ; BSR set to: 1
 38284  006A6A  0012               	return		;funcret
 38285  006A6C                     __end_of_I2cDummyTx:
 38286                           	opt stack 0
 38287                           tosu	equ	0xFFF
 38288                           tosh	equ	0xFFE
 38289                           tosl	equ	0xFFD
 38290                           pclatu	equ	0xFFB
 38291                           pclath	equ	0xFFA
 38292                           tblptru	equ	0xFF8
 38293                           tblptrh	equ	0xFF7
 38294                           tblptrl	equ	0xFF6
 38295                           tablat	equ	0xFF5
 38296                           prodh	equ	0xFF4
 38297                           prodl	equ	0xFF3
 38298                           intcon	equ	0xFF2
 38299                           intcon2	equ	0xFF1
 38300                           intcon3	equ	0xFF0
 38301                           indf0	equ	0xFEF
 38302                           postinc0	equ	0xFEE
 38303                           plusw0	equ	0xFEB
 38304                           fsr0h	equ	0xFEA
 38305                           fsr0l	equ	0xFE9
 38306                           wreg	equ	0xFE8
 38307                           indf1	equ	0xFE7
 38308                           postinc1	equ	0xFE6
 38309                           postdec1	equ	0xFE5
 38310                           plusw1	equ	0xFE3
 38311                           fsr1h	equ	0xFE2
 38312                           fsr1l	equ	0xFE1
 38313                           bsr	equ	0xFE0
 38314                           indf2	equ	0xFDF
 38315                           postinc2	equ	0xFDE
 38316                           postdec2	equ	0xFDD
 38317                           plusw2	equ	0xFDB
 38318                           fsr2h	equ	0xFDA
 38319                           fsr2l	equ	0xFD9
 38320                           status	equ	0xFD8
 38321                           
 38322 ;; *************** function i1_I2cSlv_SendI2cMsg *****************
 38323 ;; Defined at:
 38324 ;;		line 252 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 38325 ;; Parameters:    Size  Location     Type
 38326 ;;  TxBuffer        2   27[COMRAM] PTR unsigned char 
 38327 ;;		 -> relayBuffer(2), Terminal@TermTxBuffer(50), ReadAddress(1), EepromBuffer(15), 
 38328 ;;		 -> I2cDummyTx@DummyBuffer(1), 
 38329 ;;  SlaveAddr       1   29[COMRAM] unsigned char 
 38330 ;;  DataLenght      1   30[COMRAM] unsigned char 
 38331 ;; Auto vars:     Size  Location     Type
 38332 ;;  I2cSlv_SendI    1   31[COMRAM] unsigned char 
 38333 ;; Return value:  Size  Location     Type
 38334 ;;                  1    wreg      unsigned char 
 38335 ;; Registers used:
 38336 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 38337 ;; Tracked objects:
 38338 ;;		On entry : 0/0
 38339 ;;		On exit  : 0/0
 38340 ;;		Unchanged: 0/0
 38341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38342 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38343 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38345 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38346 ;;Total ram usage:        5 bytes
 38347 ;; Hardware stack levels used:    1
 38348 ;; Hardware stack levels required when called:    5
 38349 ;; This function calls:
 38350 ;;		i1_GenerateEvt
 38351 ;; This function is called by:
 38352 ;;		_I2cDummyTx
 38353 ;; This function uses a non-reentrant model
 38354 ;;
 38355                           
 38356                           	psect	text189
 38357  0064C0                     __ptext189:
 38358                           	opt stack 0
 38359  0064C0                     i1_I2cSlv_SendI2cMsg:
 38360                           	opt stack 8
 38361                           
 38362                           ;i2c_slv.c: 254: UINT8 TxSts = 0u;
 38363                           
 38364                           ; BSR set to: 1
 38365                           ;incstack = 0
 38366  0064C0  0E00               	movlw	0
 38367  0064C2  6E20               	movwf	i1I2cSlv_SendI2cMsg@TxSts,c
 38368                           
 38369                           ;i2c_slv.c: 256: if (I2cComSts != TxInProgress)
 38370  0064C4  0100               	movlb	0	; () banked
 38371  0064C6  05CF               	decf	_I2cComSts& (0+255),w,b
 38372  0064C8  B4D8               	btfsc	status,2,c
 38373  0064CA  D014               	goto	i1l1412
 38374                           
 38375                           ; BSR set to: 0
 38376                           ;i2c_slv.c: 257: {
 38377                           ;i2c_slv.c: 259: I2cTxPacket.SlaveAddress = SlaveAddr;
 38378  0064CC  C01E  F39B         	movff	i1I2cSlv_SendI2cMsg@SlaveAddr,_I2cTxPacket
 38379                           
 38380                           ; BSR set to: 0
 38381                           ;i2c_slv.c: 260: I2cTxPacket.ReadWrite = ((UINT8)(0));
 38382  0064D0  0E00               	movlw	0
 38383  0064D2  0103               	movlb	3	; () banked
 38384  0064D4  6F9C               	movwf	(_I2cTxPacket+1)& (0+255),b
 38385                           
 38386                           ; BSR set to: 3
 38387                           ;i2c_slv.c: 261: I2cTxPacket.Lenght = DataLenght;
 38388  0064D6  C01F  F39F         	movff	i1I2cSlv_SendI2cMsg@DataLenght,_I2cTxPacket+4
 38389                           
 38390                           ; BSR set to: 3
 38391                           ;i2c_slv.c: 262: I2cTxPacket.Buffer = TxBuffer;
 38392  0064DA  C01C  F39D         	movff	i1I2cSlv_SendI2cMsg@TxBuffer,_I2cTxPacket+2
 38393  0064DE  C01D  F39E         	movff	i1I2cSlv_SendI2cMsg@TxBuffer+1,_I2cTxPacket+3
 38394                           
 38395                           ; BSR set to: 3
 38396                           ;i2c_slv.c: 265: GenerateEvt(&I2cWriteDataEvt);
 38397  0064E2  0ED7               	movlw	low _I2cWriteDataEvt
 38398  0064E4  6E19               	movwf	i1GenerateEvt@Event,c
 38399  0064E6  0E00               	movlw	high _I2cWriteDataEvt
 38400  0064E8  6E1A               	movwf	i1GenerateEvt@Event+1,c
 38401  0064EA  ECA4  F035         	call	i1_GenerateEvt	;wreg free
 38402                           
 38403                           ;i2c_slv.c: 267: TxSts = 1u;
 38404  0064EE  0E01               	movlw	1
 38405  0064F0  6E20               	movwf	i1I2cSlv_SendI2cMsg@TxSts,c
 38406                           
 38407                           ;i2c_slv.c: 268: }
 38408  0064F2  0012               	return	
 38409  0064F4                     i1l1412:
 38410                           
 38411                           ;i2c_slv.c: 269: else
 38412                           ;i2c_slv.c: 270: {
 38413                           ;i2c_slv.c: 272: TxSts = 0u;
 38414  0064F4  0E00               	movlw	0
 38415  0064F6  6E20               	movwf	i1I2cSlv_SendI2cMsg@TxSts,c
 38416  0064F8  0012               	return	
 38417  0064FA                     __end_ofi1_I2cSlv_SendI2cMsg:
 38418                           	opt stack 0
 38419                           tosu	equ	0xFFF
 38420                           tosh	equ	0xFFE
 38421                           tosl	equ	0xFFD
 38422                           pclatu	equ	0xFFB
 38423                           pclath	equ	0xFFA
 38424                           tblptru	equ	0xFF8
 38425                           tblptrh	equ	0xFF7
 38426                           tblptrl	equ	0xFF6
 38427                           tablat	equ	0xFF5
 38428                           prodh	equ	0xFF4
 38429                           prodl	equ	0xFF3
 38430                           intcon	equ	0xFF2
 38431                           intcon2	equ	0xFF1
 38432                           intcon3	equ	0xFF0
 38433                           indf0	equ	0xFEF
 38434                           postinc0	equ	0xFEE
 38435                           plusw0	equ	0xFEB
 38436                           fsr0h	equ	0xFEA
 38437                           fsr0l	equ	0xFE9
 38438                           wreg	equ	0xFE8
 38439                           indf1	equ	0xFE7
 38440                           postinc1	equ	0xFE6
 38441                           postdec1	equ	0xFE5
 38442                           plusw1	equ	0xFE3
 38443                           fsr1h	equ	0xFE2
 38444                           fsr1l	equ	0xFE1
 38445                           bsr	equ	0xFE0
 38446                           indf2	equ	0xFDF
 38447                           postinc2	equ	0xFDE
 38448                           postdec2	equ	0xFDD
 38449                           plusw2	equ	0xFDB
 38450                           fsr2h	equ	0xFDA
 38451                           fsr2l	equ	0xFD9
 38452                           status	equ	0xFD8
 38453                           
 38454 ;; *************** function i1_GenerateEvt *****************
 38455 ;; Defined at:
 38456 ;;		line 75 in file "../../MercuryFwk/Source/c/02_Osl/os_ser.c"
 38457 ;; Parameters:    Size  Location     Type
 38458 ;;  Event           2   24[COMRAM] PTR struct EventStructur
 38459 ;;		 -> AlarmEvent(1), I2cRxPacket(6), I2cReadDataEvt(1), I2cWriteDataEvt(1), 
 38460 ;;		 -> GetMethod(1), InitNetwork(1), MdmStsReady(1), SmsTxtReady(1), 
 38461 ;;		 -> GetSmsText(1), SmsEvent(1), ClipEvent(1), RingEvent(1), 
 38462 ;;		 -> SendSmsEvent(1), NewStringMdmTerminal(1), NewMdmEvtParserRequest(1), NewStringReceived(1), 
 38463 ;;		 -> MdmOnOffPulseRequest(1), CallClosedEvent(1), IncomingCallEvent(1), NewSmsEvent(1), 
 38464 ;; Auto vars:     Size  Location     Type
 38465 ;;  GenerateEvt     1   26[COMRAM] enum E7727
 38466 ;; Return value:  Size  Location     Type
 38467 ;;                  1    wreg      enum E7699
 38468 ;; Registers used:
 38469 ;;		wreg, fsr2l, fsr2h, status,2
 38470 ;; Tracked objects:
 38471 ;;		On entry : 0/0
 38472 ;;		On exit  : 0/0
 38473 ;;		Unchanged: 0/0
 38474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38475 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38476 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38478 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38479 ;;Total ram usage:        3 bytes
 38480 ;; Hardware stack levels used:    1
 38481 ;; Hardware stack levels required when called:    4
 38482 ;; This function calls:
 38483 ;;		Nothing
 38484 ;; This function is called by:
 38485 ;;		i1_I2cSlv_SendI2cMsg
 38486 ;; This function uses a non-reentrant model
 38487 ;;
 38488                           
 38489                           	psect	text190
 38490  006B48                     __ptext190:
 38491                           	opt stack 0
 38492  006B48                     i1_GenerateEvt:
 38493                           	opt stack 8
 38494                           
 38495                           ;os_ser.c: 78: EventStatusType EventStatus = EventIdle;
 38496                           
 38497                           ;incstack = 0
 38498  006B48  0E00               	movlw	0
 38499  006B4A  6E1B               	movwf	i1GenerateEvt@EventStatus,c
 38500                           
 38501                           ;os_ser.c: 81: Event->EventStatus = EventSent;
 38502  006B4C  C019  FFD9         	movff	i1GenerateEvt@Event,fsr2l
 38503  006B50  C01A  FFDA         	movff	i1GenerateEvt@Event+1,fsr2h
 38504  006B54  0E02               	movlw	2
 38505  006B56  6EDF               	movwf	indf2,c
 38506                           
 38507                           ;os_ser.c: 83: EventStatus = EventSent;
 38508  006B58  0E02               	movlw	2
 38509  006B5A  6E1B               	movwf	i1GenerateEvt@EventStatus,c
 38510  006B5C  0012               	return	
 38511  006B5E                     __end_ofi1_GenerateEvt:
 38512                           	opt stack 0
 38513                           tosu	equ	0xFFF
 38514                           tosh	equ	0xFFE
 38515                           tosl	equ	0xFFD
 38516                           pclatu	equ	0xFFB
 38517                           pclath	equ	0xFFA
 38518                           tblptru	equ	0xFF8
 38519                           tblptrh	equ	0xFF7
 38520                           tblptrl	equ	0xFF6
 38521                           tablat	equ	0xFF5
 38522                           prodh	equ	0xFF4
 38523                           prodl	equ	0xFF3
 38524                           intcon	equ	0xFF2
 38525                           intcon2	equ	0xFF1
 38526                           intcon3	equ	0xFF0
 38527                           indf0	equ	0xFEF
 38528                           postinc0	equ	0xFEE
 38529                           plusw0	equ	0xFEB
 38530                           fsr0h	equ	0xFEA
 38531                           fsr0l	equ	0xFE9
 38532                           wreg	equ	0xFE8
 38533                           indf1	equ	0xFE7
 38534                           postinc1	equ	0xFE6
 38535                           postdec1	equ	0xFE5
 38536                           plusw1	equ	0xFE3
 38537                           fsr1h	equ	0xFE2
 38538                           fsr1l	equ	0xFE1
 38539                           bsr	equ	0xFE0
 38540                           indf2	equ	0xFDF
 38541                           postinc2	equ	0xFDE
 38542                           postdec2	equ	0xFDD
 38543                           plusw2	equ	0xFDB
 38544                           fsr2h	equ	0xFDA
 38545                           fsr2l	equ	0xFD9
 38546                           status	equ	0xFD8
 38547                           
 38548 ;; *************** function _HighPriorityIsr *****************
 38549 ;; Defined at:
 38550 ;;		line 153 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/irq.c"
 38551 ;; Parameters:    Size  Location     Type
 38552 ;;		None
 38553 ;; Auto vars:     Size  Location     Type
 38554 ;;		None
 38555 ;; Return value:  Size  Location     Type
 38556 ;;                  1    wreg      void 
 38557 ;; Registers used:
 38558 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 38559 ;; Tracked objects:
 38560 ;;		On entry : 0/0
 38561 ;;		On exit  : 0/0
 38562 ;;		Unchanged: 0/0
 38563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38564 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38565 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38566 ;;      Temps:         18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38567 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38568 ;;Total ram usage:       18 bytes
 38569 ;; Hardware stack levels used:    1
 38570 ;; Hardware stack levels required when called:    3
 38571 ;; This function calls:
 38572 ;;		_Mcu_Int0Isr
 38573 ;;		_Mcu_Int1Isr
 38574 ;;		_Rtcc_RtcIsr
 38575 ;;		_Uart_Uart1RxIsr
 38576 ;; This function is called by:
 38577 ;;		Interrupt level 2
 38578 ;; This function uses a non-reentrant model
 38579 ;;
 38580                           
 38581                           	psect	intcode
 38582  000008                     __pintcode:
 38583                           	opt stack 0
 38584  000008                     _HighPriorityIsr:
 38585                           	opt stack 8
 38586                           
 38587                           ;incstack = 0
 38588  000008  8242               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 38589  00000A  EF71  F023         	goto	int_func
 38590                           tosu	equ	0xFFF
 38591                           tosh	equ	0xFFE
 38592                           tosl	equ	0xFFD
 38593                           pclatu	equ	0xFFB
 38594                           pclath	equ	0xFFA
 38595                           tblptru	equ	0xFF8
 38596                           tblptrh	equ	0xFF7
 38597                           tblptrl	equ	0xFF6
 38598                           tablat	equ	0xFF5
 38599                           prodh	equ	0xFF4
 38600                           prodl	equ	0xFF3
 38601                           intcon	equ	0xFF2
 38602                           intcon2	equ	0xFF1
 38603                           intcon3	equ	0xFF0
 38604                           indf0	equ	0xFEF
 38605                           postinc0	equ	0xFEE
 38606                           plusw0	equ	0xFEB
 38607                           fsr0h	equ	0xFEA
 38608                           fsr0l	equ	0xFE9
 38609                           wreg	equ	0xFE8
 38610                           indf1	equ	0xFE7
 38611                           postinc1	equ	0xFE6
 38612                           postdec1	equ	0xFE5
 38613                           plusw1	equ	0xFE3
 38614                           fsr1h	equ	0xFE2
 38615                           fsr1l	equ	0xFE1
 38616                           bsr	equ	0xFE0
 38617                           indf2	equ	0xFDF
 38618                           postinc2	equ	0xFDE
 38619                           postdec2	equ	0xFDD
 38620                           plusw2	equ	0xFDB
 38621                           fsr2h	equ	0xFDA
 38622                           fsr2l	equ	0xFD9
 38623                           status	equ	0xFD8
 38624                           
 38625                           	psect	intcode_body
 38626  0046E2                     __pintcode_body:
 38627                           	opt stack 8
 38628  0046E2                     int_func:
 38629                           	opt stack 8
 38630  0046E2  CFFA F007          	movff	pclath,??_HighPriorityIsr
 38631  0046E6  CFFB F008          	movff	pclatu,??_HighPriorityIsr+1
 38632  0046EA  CFE9 F009          	movff	fsr0l,??_HighPriorityIsr+2
 38633  0046EE  CFEA F00A          	movff	fsr0h,??_HighPriorityIsr+3
 38634  0046F2  CFE1 F00B          	movff	fsr1l,??_HighPriorityIsr+4
 38635  0046F6  CFE2 F00C          	movff	fsr1h,??_HighPriorityIsr+5
 38636  0046FA  CFD9 F00D          	movff	fsr2l,??_HighPriorityIsr+6
 38637  0046FE  CFDA F00E          	movff	fsr2h,??_HighPriorityIsr+7
 38638  004702  CFF3 F00F          	movff	prodl,??_HighPriorityIsr+8
 38639  004706  CFF4 F010          	movff	prodh,??_HighPriorityIsr+9
 38640  00470A  CFF6 F011          	movff	tblptrl,??_HighPriorityIsr+10
 38641  00470E  CFF7 F012          	movff	tblptrh,??_HighPriorityIsr+11
 38642  004712  CFF8 F013          	movff	tblptru,??_HighPriorityIsr+12
 38643  004716  CFF5 F014          	movff	tablat,??_HighPriorityIsr+13
 38644  00471A  C042  F015         	movff	btemp,??_HighPriorityIsr+14
 38645  00471E  C043  F016         	movff	btemp+1,??_HighPriorityIsr+15
 38646  004722  C044  F017         	movff	btemp+2,??_HighPriorityIsr+16
 38647  004726  C045  F018         	movff	btemp+3,??_HighPriorityIsr+17
 38648                           
 38649                           ;irq.c: 157: if (INTCONbits.INT0IF == ((UINT8)(1)))
 38650  00472A  B2F2               	btfsc	intcon,1,c	;volatile
 38651                           
 38652                           ;irq.c: 158: {
 38653                           ;irq.c: 160: Mcu_Int0Isr();
 38654  00472C  EC5C  F036         	call	_Mcu_Int0Isr	;wreg free
 38655                           
 38656                           ;irq.c: 161: }
 38657                           ;irq.c: 166: if (INTCON3bits.INT1IF == ((UINT8)(1)))
 38658  004730  B0F0               	btfsc	intcon3,0,c	;volatile
 38659                           
 38660                           ;irq.c: 167: {
 38661                           ;irq.c: 169: Mcu_Int1Isr();
 38662  004732  EC5A  F036         	call	_Mcu_Int1Isr	;wreg free
 38663                           
 38664                           ;irq.c: 170: }
 38665                           ;irq.c: 202: if (PIR3bits.RTCCIF == ((UINT8)(1)))
 38666  004736  B0A4               	btfsc	4004,0,c	;volatile
 38667                           
 38668                           ;irq.c: 203: {
 38669                           ;irq.c: 205: Rtcc_RtcIsr();
 38670  004738  EC58  F036         	call	_Rtcc_RtcIsr	;wreg free
 38671                           
 38672                           ;irq.c: 206: }
 38673                           ;irq.c: 211: if (PIR1bits.RC1IF == ((UINT8)(1)))
 38674  00473C  BA9E               	btfsc	3998,5,c	;volatile
 38675                           
 38676                           ;irq.c: 212: {
 38677                           ;irq.c: 214: Uart_Uart1RxIsr();
 38678  00473E  ECFF  F035         	call	_Uart_Uart1RxIsr	;wreg free
 38679  004742  C018  F045         	movff	??_HighPriorityIsr+17,btemp+3
 38680  004746  C017  F044         	movff	??_HighPriorityIsr+16,btemp+2
 38681  00474A  C016  F043         	movff	??_HighPriorityIsr+15,btemp+1
 38682  00474E  C015  F042         	movff	??_HighPriorityIsr+14,btemp
 38683  004752  C014  FFF5         	movff	??_HighPriorityIsr+13,tablat
 38684  004756  C013  FFF8         	movff	??_HighPriorityIsr+12,tblptru
 38685  00475A  C012  FFF7         	movff	??_HighPriorityIsr+11,tblptrh
 38686  00475E  C011  FFF6         	movff	??_HighPriorityIsr+10,tblptrl
 38687  004762  C010  FFF4         	movff	??_HighPriorityIsr+9,prodh
 38688  004766  C00F  FFF3         	movff	??_HighPriorityIsr+8,prodl
 38689  00476A  C00E  FFDA         	movff	??_HighPriorityIsr+7,fsr2h
 38690  00476E  C00D  FFD9         	movff	??_HighPriorityIsr+6,fsr2l
 38691  004772  C00C  FFE2         	movff	??_HighPriorityIsr+5,fsr1h
 38692  004776  C00B  FFE1         	movff	??_HighPriorityIsr+4,fsr1l
 38693  00477A  C00A  FFEA         	movff	??_HighPriorityIsr+3,fsr0h
 38694  00477E  C009  FFE9         	movff	??_HighPriorityIsr+2,fsr0l
 38695  004782  C008  FFFB         	movff	??_HighPriorityIsr+1,pclatu
 38696  004786  C007  FFFA         	movff	??_HighPriorityIsr,pclath
 38697  00478A  9242               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 38698  00478C  0011               	retfie		f
 38699  00478E                     __end_of_HighPriorityIsr:
 38700                           	opt stack 0
 38701                           tosu	equ	0xFFF
 38702                           tosh	equ	0xFFE
 38703                           tosl	equ	0xFFD
 38704                           pclatu	equ	0xFFB
 38705                           pclath	equ	0xFFA
 38706                           tblptru	equ	0xFF8
 38707                           tblptrh	equ	0xFF7
 38708                           tblptrl	equ	0xFF6
 38709                           tablat	equ	0xFF5
 38710                           prodh	equ	0xFF4
 38711                           prodl	equ	0xFF3
 38712                           intcon	equ	0xFF2
 38713                           intcon2	equ	0xFF1
 38714                           intcon3	equ	0xFF0
 38715                           indf0	equ	0xFEF
 38716                           postinc0	equ	0xFEE
 38717                           plusw0	equ	0xFEB
 38718                           fsr0h	equ	0xFEA
 38719                           fsr0l	equ	0xFE9
 38720                           wreg	equ	0xFE8
 38721                           indf1	equ	0xFE7
 38722                           postinc1	equ	0xFE6
 38723                           postdec1	equ	0xFE5
 38724                           plusw1	equ	0xFE3
 38725                           fsr1h	equ	0xFE2
 38726                           fsr1l	equ	0xFE1
 38727                           bsr	equ	0xFE0
 38728                           indf2	equ	0xFDF
 38729                           postinc2	equ	0xFDE
 38730                           postdec2	equ	0xFDD
 38731                           plusw2	equ	0xFDB
 38732                           fsr2h	equ	0xFDA
 38733                           fsr2l	equ	0xFD9
 38734                           status	equ	0xFD8
 38735                           
 38736 ;; *************** function _Uart_Uart1RxIsr *****************
 38737 ;; Defined at:
 38738 ;;		line 584 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 38739 ;; Parameters:    Size  Location     Type
 38740 ;;		None
 38741 ;; Auto vars:     Size  Location     Type
 38742 ;;		None
 38743 ;; Return value:  Size  Location     Type
 38744 ;;                  1    wreg      void 
 38745 ;; Registers used:
 38746 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 38747 ;; Tracked objects:
 38748 ;;		On entry : 0/0
 38749 ;;		On exit  : 0/0
 38750 ;;		Unchanged: 0/0
 38751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38752 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38753 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38755 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38756 ;;Total ram usage:        0 bytes
 38757 ;; Hardware stack levels used:    1
 38758 ;; Hardware stack levels required when called:    2
 38759 ;; This function calls:
 38760 ;;		_Uart_MdmGsmGprsReadService
 38761 ;; This function is called by:
 38762 ;;		_HighPriorityIsr
 38763 ;; This function uses a non-reentrant model
 38764 ;;
 38765                           
 38766                           	psect	text192
 38767  006BFE                     __ptext192:
 38768                           	opt stack 0
 38769  006BFE                     _Uart_Uart1RxIsr:
 38770                           	opt stack 8
 38771                           
 38772                           ;uart_drv.c: 587: static UINT8 UartRxData = 0;
 38773                           ;uart_drv.c: 590: UartRxData = RCREG1;
 38774                           
 38775                           ;incstack = 0
 38776  006BFE  CFAF F02C          	movff	4015,Uart_Uart1RxIsr@UartRxData	;volatile
 38777                           
 38778                           ;uart_drv.c: 594: Uart_MdmGsmGprsReadService(1,UartRxData);
 38779  006C02  C02C  F004         	movff	Uart_Uart1RxIsr@UartRxData,Uart_MdmGsmGprsReadService@UartData
 38780  006C06  0E01               	movlw	1
 38781  006C08  ECB0  F01F         	call	_Uart_MdmGsmGprsReadService
 38782  006C0C  0012               	return		;funcret
 38783  006C0E                     __end_of_Uart_Uart1RxIsr:
 38784                           	opt stack 0
 38785                           tosu	equ	0xFFF
 38786                           tosh	equ	0xFFE
 38787                           tosl	equ	0xFFD
 38788                           pclatu	equ	0xFFB
 38789                           pclath	equ	0xFFA
 38790                           tblptru	equ	0xFF8
 38791                           tblptrh	equ	0xFF7
 38792                           tblptrl	equ	0xFF6
 38793                           tablat	equ	0xFF5
 38794                           prodh	equ	0xFF4
 38795                           prodl	equ	0xFF3
 38796                           intcon	equ	0xFF2
 38797                           intcon2	equ	0xFF1
 38798                           intcon3	equ	0xFF0
 38799                           indf0	equ	0xFEF
 38800                           postinc0	equ	0xFEE
 38801                           plusw0	equ	0xFEB
 38802                           fsr0h	equ	0xFEA
 38803                           fsr0l	equ	0xFE9
 38804                           wreg	equ	0xFE8
 38805                           indf1	equ	0xFE7
 38806                           postinc1	equ	0xFE6
 38807                           postdec1	equ	0xFE5
 38808                           plusw1	equ	0xFE3
 38809                           fsr1h	equ	0xFE2
 38810                           fsr1l	equ	0xFE1
 38811                           bsr	equ	0xFE0
 38812                           indf2	equ	0xFDF
 38813                           postinc2	equ	0xFDE
 38814                           postdec2	equ	0xFDD
 38815                           plusw2	equ	0xFDB
 38816                           fsr2h	equ	0xFDA
 38817                           fsr2l	equ	0xFD9
 38818                           status	equ	0xFD8
 38819                           
 38820 ;; *************** function _Uart_MdmGsmGprsReadService *****************
 38821 ;; Defined at:
 38822 ;;		line 376 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 38823 ;; Parameters:    Size  Location     Type
 38824 ;;  Module          1    wreg     unsigned char 
 38825 ;;  UartData        1    3[COMRAM] unsigned char 
 38826 ;; Auto vars:     Size  Location     Type
 38827 ;;  Module          1    0[COMRAM] unsigned char 
 38828 ;;  ServiceCount    2    4[COMRAM] unsigned short 
 38829 ;; Return value:  Size  Location     Type
 38830 ;;                  1    wreg      void 
 38831 ;; Registers used:
 38832 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 38833 ;; Tracked objects:
 38834 ;;		On entry : 0/0
 38835 ;;		On exit  : 0/0
 38836 ;;		Unchanged: 0/0
 38837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38838 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38839 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38840 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38841 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38842 ;;Total ram usage:        3 bytes
 38843 ;; Hardware stack levels used:    1
 38844 ;; Hardware stack levels required when called:    1
 38845 ;; This function calls:
 38846 ;;		i2_GenerateEvt
 38847 ;; This function is called by:
 38848 ;;		_Uart_Uart1RxIsr
 38849 ;; This function uses a non-reentrant model
 38850 ;;
 38851                           
 38852                           	psect	text193
 38853  003F60                     __ptext193:
 38854                           	opt stack 0
 38855  003F60                     _Uart_MdmGsmGprsReadService:
 38856                           	opt stack 8
 38857                           
 38858                           ;uart_drv.c: 378: static UINT16 RxCounter = 0;
 38859                           ;uart_drv.c: 379: static RxStateType RxState = ReadData;
 38860                           ;uart_drv.c: 380: static UINT8 LocalRxBuffer[((UINT16)(400))];
 38861                           ;uart_drv.c: 381: UINT16 ServiceCounter = 0;
 38862                           
 38863                           ;incstack = 0
 38864  003F60  0E00               	movlw	0
 38865  003F62  6E06               	movwf	Uart_MdmGsmGprsReadService@ServiceCounter+1,c
 38866  003F64  0E00               	movlw	0
 38867  003F66  6E05               	movwf	Uart_MdmGsmGprsReadService@ServiceCounter,c
 38868                           
 38869                           ;uart_drv.c: 383: switch (RxState)
 38870  003F68  D058               	goto	i2l680
 38871  003F6A                     
 38872                           ;uart_drv.c: 387: if (UartData == '\r')
 38873  003F6A  0E0D               	movlw	13
 38874  003F6C  1804               	xorwf	Uart_MdmGsmGprsReadService@UartData,w,c
 38875  003F6E  A4D8               	btfss	status,2,c
 38876  003F70  D003               	goto	i2l682
 38877                           
 38878                           ;uart_drv.c: 388: {
 38879                           ;uart_drv.c: 390: RxState = CheckTermSeq1;
 38880  003F72  0E01               	movlw	1
 38881  003F74  6E2D               	movwf	Uart_MdmGsmGprsReadService@RxState,c
 38882                           
 38883                           ;uart_drv.c: 391: }
 38884  003F76  0012               	return	
 38885  003F78                     i2l682:
 38886                           
 38887                           ;uart_drv.c: 392: else
 38888                           ;uart_drv.c: 393: {
 38889                           ;uart_drv.c: 394: if (RxCounter < ((UINT16)(400)))
 38890  003F78  0E90               	movlw	144
 38891  003F7A  5C23               	subwf	Uart_MdmGsmGprsReadService@RxCounter,w,c
 38892  003F7C  0E01               	movlw	1
 38893  003F7E  5824               	subwfb	Uart_MdmGsmGprsReadService@RxCounter+1,w,c
 38894  003F80  B0D8               	btfsc	status,0,c
 38895  003F82  0012               	return	
 38896                           
 38897                           ;uart_drv.c: 395: {
 38898                           ;uart_drv.c: 397: LocalRxBuffer[RxCounter] = UartData;
 38899  003F84  0EC8               	movlw	low Uart_MdmGsmGprsReadService@LocalRxBuffer
 38900  003F86  2423               	addwf	Uart_MdmGsmGprsReadService@RxCounter,w,c
 38901  003F88  6ED9               	movwf	fsr2l,c
 38902  003F8A  0E0A               	movlw	high Uart_MdmGsmGprsReadService@LocalRxBuffer
 38903  003F8C  2024               	addwfc	Uart_MdmGsmGprsReadService@RxCounter+1,w,c
 38904  003F8E  6EDA               	movwf	fsr2h,c
 38905  003F90  C004  FFDF         	movff	Uart_MdmGsmGprsReadService@UartData,indf2
 38906                           
 38907                           ;uart_drv.c: 399: RxCounter++;
 38908  003F94  4A23               	infsnz	Uart_MdmGsmGprsReadService@RxCounter,f,c
 38909  003F96  2A24               	incf	Uart_MdmGsmGprsReadService@RxCounter+1,f,c
 38910                           
 38911                           ;uart_drv.c: 400: }
 38912                           ;uart_drv.c: 401: }
 38913                           ;uart_drv.c: 402: break;
 38914  003F98  0012               	return	
 38915  003F9A                     
 38916                           ;uart_drv.c: 406: if (UartData == '\n')
 38917  003F9A  0E0A               	movlw	10
 38918  003F9C  1804               	xorwf	Uart_MdmGsmGprsReadService@UartData,w,c
 38919  003F9E  A4D8               	btfss	status,2,c
 38920  003FA0  D035               	goto	i2l688
 38921                           
 38922                           ;uart_drv.c: 407: {
 38923                           ;uart_drv.c: 409: if (RxCounter > 0)
 38924  003FA2  5023               	movf	Uart_MdmGsmGprsReadService@RxCounter,w,c
 38925  003FA4  1024               	iorwf	Uart_MdmGsmGprsReadService@RxCounter+1,w,c
 38926  003FA6  B4D8               	btfsc	status,2,c
 38927  003FA8  D031               	goto	i2l688
 38928                           
 38929                           ;uart_drv.c: 410: {
 38930                           ;uart_drv.c: 412: for (ServiceCounter = 0; ServiceCounter < RxCounter; ServiceCounter++)
 38931  003FAA  0E00               	movlw	0
 38932  003FAC  6E06               	movwf	Uart_MdmGsmGprsReadService@ServiceCounter+1,c
 38933  003FAE  0E00               	movlw	0
 38934  003FB0  6E05               	movwf	Uart_MdmGsmGprsReadService@ServiceCounter,c
 38935  003FB2  D010               	goto	i2l689
 38936  003FB4                     
 38937                           ;uart_drv.c: 413: {
 38938                           ;uart_drv.c: 414: RxBuffer[ServiceCounter] = LocalRxBuffer[ServiceCounter];
 38939  003FB4  0EC8               	movlw	low Uart_MdmGsmGprsReadService@LocalRxBuffer
 38940  003FB6  2405               	addwf	Uart_MdmGsmGprsReadService@ServiceCounter,w,c
 38941  003FB8  6ED9               	movwf	fsr2l,c
 38942  003FBA  0E0A               	movlw	high Uart_MdmGsmGprsReadService@LocalRxBuffer
 38943  003FBC  2006               	addwfc	Uart_MdmGsmGprsReadService@ServiceCounter+1,w,c
 38944  003FBE  6EDA               	movwf	fsr2h,c
 38945  003FC0  0E58               	movlw	low _RxBuffer
 38946  003FC2  2405               	addwf	Uart_MdmGsmGprsReadService@ServiceCounter,w,c
 38947  003FC4  6EE1               	movwf	fsr1l,c
 38948  003FC6  0E0C               	movlw	high _RxBuffer
 38949  003FC8  2006               	addwfc	Uart_MdmGsmGprsReadService@ServiceCounter+1,w,c
 38950  003FCA  6EE2               	movwf	fsr1h,c
 38951  003FCC  CFDF FFE7          	movff	indf2,indf1
 38952  003FD0  4A05               	infsnz	Uart_MdmGsmGprsReadService@ServiceCounter,f,c
 38953  003FD2  2A06               	incf	Uart_MdmGsmGprsReadService@ServiceCounter+1,f,c
 38954  003FD4                     i2l689:
 38955  003FD4  5023               	movf	Uart_MdmGsmGprsReadService@RxCounter,w,c
 38956  003FD6  5C05               	subwf	Uart_MdmGsmGprsReadService@ServiceCounter,w,c
 38957  003FD8  5024               	movf	Uart_MdmGsmGprsReadService@RxCounter+1,w,c
 38958  003FDA  5806               	subwfb	Uart_MdmGsmGprsReadService@ServiceCounter+1,w,c
 38959  003FDC  A0D8               	btfss	status,0,c
 38960  003FDE  D7EA               	goto	i2l690
 38961                           
 38962                           ;uart_drv.c: 415: }
 38963                           ;uart_drv.c: 417: RxLen = RxCounter;
 38964  003FE0  C023  F0C2         	movff	Uart_MdmGsmGprsReadService@RxCounter,_RxLen
 38965  003FE4  C024  F0C3         	movff	Uart_MdmGsmGprsReadService@RxCounter+1,_RxLen+1
 38966                           
 38967                           ;uart_drv.c: 419: GenerateEvt(&NewStringReceived);
 38968  003FE8  0E3C               	movlw	low _NewStringReceived
 38969  003FEA  6E01               	movwf	i2GenerateEvt@Event,c
 38970  003FEC  0E00               	movlw	high _NewStringReceived
 38971  003FEE  6E02               	movwf	i2GenerateEvt@Event+1,c
 38972  003FF0  ECAF  F035         	call	i2_GenerateEvt	;wreg free
 38973                           
 38974                           ;uart_drv.c: 420: GenerateEvt(&NewMdmEvtParserRequest);
 38975  003FF4  0E3B               	movlw	low _NewMdmEvtParserRequest
 38976  003FF6  6E01               	movwf	i2GenerateEvt@Event,c
 38977  003FF8  0E00               	movlw	high _NewMdmEvtParserRequest
 38978  003FFA  6E02               	movwf	i2GenerateEvt@Event+1,c
 38979  003FFC  ECAF  F035         	call	i2_GenerateEvt	;wreg free
 38980                           
 38981                           ;uart_drv.c: 421: GenerateEvt(&NewStringMdmTerminal);
 38982  004000  0E3A               	movlw	low _NewStringMdmTerminal
 38983  004002  6E01               	movwf	i2GenerateEvt@Event,c
 38984  004004  0E00               	movlw	high _NewStringMdmTerminal
 38985  004006  6E02               	movwf	i2GenerateEvt@Event+1,c
 38986  004008  ECAF  F035         	call	i2_GenerateEvt	;wreg free
 38987  00400C                     i2l688:
 38988                           
 38989                           ;uart_drv.c: 427: }
 38990                           ;uart_drv.c: 429: RxState = ReadData;
 38991                           
 38992                           ;uart_drv.c: 424: else
 38993                           ;uart_drv.c: 425: {
 38994                           
 38995                           ;uart_drv.c: 422: }
 38996                           ;uart_drv.c: 423: }
 38997  00400C  0E00               	movlw	0
 38998  00400E  6E2D               	movwf	Uart_MdmGsmGprsReadService@RxState,c
 38999                           
 39000                           ;uart_drv.c: 431: RxCounter = 0;
 39001  004010  0E00               	movlw	0
 39002  004012  6E24               	movwf	Uart_MdmGsmGprsReadService@RxCounter+1,c
 39003  004014  0E00               	movlw	0
 39004  004016  6E23               	movwf	Uart_MdmGsmGprsReadService@RxCounter,c
 39005                           
 39006                           ;uart_drv.c: 436: }
 39007                           
 39008                           ;uart_drv.c: 435: break;
 39009                           
 39010                           ;uart_drv.c: 434: default:
 39011                           
 39012                           ;uart_drv.c: 432: break;
 39013  004018  0012               	return	
 39014  00401A                     i2l680:
 39015  00401A  502D               	movf	Uart_MdmGsmGprsReadService@RxState,w,c
 39016                           
 39017                           ; Switch size 1, requested type "space"
 39018                           ; Number of cases is 2, Range of values is 0 to 1
 39019                           ; switch strategies available:
 39020                           ; Name         Instructions Cycles
 39021                           ; simple_byte            7     4 (average)
 39022                           ;	Chosen strategy is simple_byte
 39023  00401C  0A00               	xorlw	0	; case 0
 39024  00401E  B4D8               	btfsc	status,2,c
 39025  004020  D7A4               	goto	i2l681
 39026  004022  0A01               	xorlw	1	; case 1
 39027  004024  A4D8               	btfss	status,2,c
 39028  004026  0012               	return	
 39029  004028  D7B8               	goto	i2l686
 39030  00402A                     __end_of_Uart_MdmGsmGprsReadService:
 39031                           	opt stack 0
 39032                           tosu	equ	0xFFF
 39033                           tosh	equ	0xFFE
 39034                           tosl	equ	0xFFD
 39035                           pclatu	equ	0xFFB
 39036                           pclath	equ	0xFFA
 39037                           tblptru	equ	0xFF8
 39038                           tblptrh	equ	0xFF7
 39039                           tblptrl	equ	0xFF6
 39040                           tablat	equ	0xFF5
 39041                           prodh	equ	0xFF4
 39042                           prodl	equ	0xFF3
 39043                           intcon	equ	0xFF2
 39044                           intcon2	equ	0xFF1
 39045                           intcon3	equ	0xFF0
 39046                           indf0	equ	0xFEF
 39047                           postinc0	equ	0xFEE
 39048                           plusw0	equ	0xFEB
 39049                           fsr0h	equ	0xFEA
 39050                           fsr0l	equ	0xFE9
 39051                           wreg	equ	0xFE8
 39052                           indf1	equ	0xFE7
 39053                           postinc1	equ	0xFE6
 39054                           postdec1	equ	0xFE5
 39055                           plusw1	equ	0xFE3
 39056                           fsr1h	equ	0xFE2
 39057                           fsr1l	equ	0xFE1
 39058                           bsr	equ	0xFE0
 39059                           indf2	equ	0xFDF
 39060                           postinc2	equ	0xFDE
 39061                           postdec2	equ	0xFDD
 39062                           plusw2	equ	0xFDB
 39063                           fsr2h	equ	0xFDA
 39064                           fsr2l	equ	0xFD9
 39065                           status	equ	0xFD8
 39066                           
 39067 ;; *************** function i2_GenerateEvt *****************
 39068 ;; Defined at:
 39069 ;;		line 75 in file "../../MercuryFwk/Source/c/02_Osl/os_ser.c"
 39070 ;; Parameters:    Size  Location     Type
 39071 ;;  Event           2    0[COMRAM] PTR struct EventStructur
 39072 ;;		 -> AlarmEvent(1), I2cRxPacket(6), I2cReadDataEvt(1), I2cWriteDataEvt(1), 
 39073 ;;		 -> GetMethod(1), InitNetwork(1), MdmStsReady(1), SmsTxtReady(1), 
 39074 ;;		 -> GetSmsText(1), SmsEvent(1), ClipEvent(1), RingEvent(1), 
 39075 ;;		 -> SendSmsEvent(1), NewStringMdmTerminal(1), NewMdmEvtParserRequest(1), NewStringReceived(1), 
 39076 ;;		 -> MdmOnOffPulseRequest(1), CallClosedEvent(1), IncomingCallEvent(1), NewSmsEvent(1), 
 39077 ;; Auto vars:     Size  Location     Type
 39078 ;;  GenerateEvt     1    2[COMRAM] enum E7727
 39079 ;; Return value:  Size  Location     Type
 39080 ;;                  1    wreg      enum E7699
 39081 ;; Registers used:
 39082 ;;		wreg, fsr2l, fsr2h, status,2
 39083 ;; Tracked objects:
 39084 ;;		On entry : 0/0
 39085 ;;		On exit  : 0/0
 39086 ;;		Unchanged: 0/0
 39087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39088 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39089 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39091 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39092 ;;Total ram usage:        3 bytes
 39093 ;; Hardware stack levels used:    1
 39094 ;; This function calls:
 39095 ;;		Nothing
 39096 ;; This function is called by:
 39097 ;;		_Uart_MdmGsmGprsReadService
 39098 ;; This function uses a non-reentrant model
 39099 ;;
 39100                           
 39101                           	psect	text194
 39102  006B5E                     __ptext194:
 39103                           	opt stack 0
 39104  006B5E                     i2_GenerateEvt:
 39105                           	opt stack 8
 39106                           
 39107                           ;os_ser.c: 78: EventStatusType EventStatus = EventIdle;
 39108                           
 39109                           ;incstack = 0
 39110  006B5E  0E00               	movlw	0
 39111  006B60  6E03               	movwf	i2GenerateEvt@EventStatus,c
 39112                           
 39113                           ;os_ser.c: 81: Event->EventStatus = EventSent;
 39114  006B62  C001  FFD9         	movff	i2GenerateEvt@Event,fsr2l
 39115  006B66  C002  FFDA         	movff	i2GenerateEvt@Event+1,fsr2h
 39116  006B6A  0E02               	movlw	2
 39117  006B6C  6EDF               	movwf	indf2,c
 39118                           
 39119                           ;os_ser.c: 83: EventStatus = EventSent;
 39120  006B6E  0E02               	movlw	2
 39121  006B70  6E03               	movwf	i2GenerateEvt@EventStatus,c
 39122  006B72  0012               	return	
 39123  006B74                     __end_ofi2_GenerateEvt:
 39124                           	opt stack 0
 39125                           tosu	equ	0xFFF
 39126                           tosh	equ	0xFFE
 39127                           tosl	equ	0xFFD
 39128                           pclatu	equ	0xFFB
 39129                           pclath	equ	0xFFA
 39130                           tblptru	equ	0xFF8
 39131                           tblptrh	equ	0xFF7
 39132                           tblptrl	equ	0xFF6
 39133                           tablat	equ	0xFF5
 39134                           prodh	equ	0xFF4
 39135                           prodl	equ	0xFF3
 39136                           intcon	equ	0xFF2
 39137                           intcon2	equ	0xFF1
 39138                           intcon3	equ	0xFF0
 39139                           indf0	equ	0xFEF
 39140                           postinc0	equ	0xFEE
 39141                           plusw0	equ	0xFEB
 39142                           fsr0h	equ	0xFEA
 39143                           fsr0l	equ	0xFE9
 39144                           wreg	equ	0xFE8
 39145                           indf1	equ	0xFE7
 39146                           postinc1	equ	0xFE6
 39147                           postdec1	equ	0xFE5
 39148                           plusw1	equ	0xFE3
 39149                           fsr1h	equ	0xFE2
 39150                           fsr1l	equ	0xFE1
 39151                           bsr	equ	0xFE0
 39152                           indf2	equ	0xFDF
 39153                           postinc2	equ	0xFDE
 39154                           postdec2	equ	0xFDD
 39155                           plusw2	equ	0xFDB
 39156                           fsr2h	equ	0xFDA
 39157                           fsr2l	equ	0xFD9
 39158                           status	equ	0xFD8
 39159                           
 39160 ;; *************** function _Rtcc_RtcIsr *****************
 39161 ;; Defined at:
 39162 ;;		line 537 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 39163 ;; Parameters:    Size  Location     Type
 39164 ;;		None
 39165 ;; Auto vars:     Size  Location     Type
 39166 ;;		None
 39167 ;; Return value:  Size  Location     Type
 39168 ;;                  1    wreg      void 
 39169 ;; Registers used:
 39170 ;;		wreg, status,2, status,0
 39171 ;; Tracked objects:
 39172 ;;		On entry : 0/0
 39173 ;;		On exit  : 0/0
 39174 ;;		Unchanged: 0/0
 39175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39176 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39177 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39179 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39180 ;;Total ram usage:        0 bytes
 39181 ;; Hardware stack levels used:    1
 39182 ;; This function calls:
 39183 ;;		Nothing
 39184 ;; This function is called by:
 39185 ;;		_HighPriorityIsr
 39186 ;; This function uses a non-reentrant model
 39187 ;;
 39188                           
 39189                           	psect	text195
 39190  006CB0                     __ptext195:
 39191                           	opt stack 0
 39192  006CB0                     _Rtcc_RtcIsr:
 39193                           	opt stack 10
 39194                           
 39195                           ;rtcc_drv.c: 540: PIR3bits.RTCCIF = 0u;
 39196                           
 39197                           ;incstack = 0
 39198  006CB0  90A4               	bcf	4004,0,c	;volatile
 39199  006CB2  0012               	return	
 39200  006CB4                     __end_of_Rtcc_RtcIsr:
 39201                           	opt stack 0
 39202                           tosu	equ	0xFFF
 39203                           tosh	equ	0xFFE
 39204                           tosl	equ	0xFFD
 39205                           pclatu	equ	0xFFB
 39206                           pclath	equ	0xFFA
 39207                           tblptru	equ	0xFF8
 39208                           tblptrh	equ	0xFF7
 39209                           tblptrl	equ	0xFF6
 39210                           tablat	equ	0xFF5
 39211                           prodh	equ	0xFF4
 39212                           prodl	equ	0xFF3
 39213                           intcon	equ	0xFF2
 39214                           intcon2	equ	0xFF1
 39215                           intcon3	equ	0xFF0
 39216                           indf0	equ	0xFEF
 39217                           postinc0	equ	0xFEE
 39218                           plusw0	equ	0xFEB
 39219                           fsr0h	equ	0xFEA
 39220                           fsr0l	equ	0xFE9
 39221                           wreg	equ	0xFE8
 39222                           indf1	equ	0xFE7
 39223                           postinc1	equ	0xFE6
 39224                           postdec1	equ	0xFE5
 39225                           plusw1	equ	0xFE3
 39226                           fsr1h	equ	0xFE2
 39227                           fsr1l	equ	0xFE1
 39228                           bsr	equ	0xFE0
 39229                           indf2	equ	0xFDF
 39230                           postinc2	equ	0xFDE
 39231                           postdec2	equ	0xFDD
 39232                           plusw2	equ	0xFDB
 39233                           fsr2h	equ	0xFDA
 39234                           fsr2l	equ	0xFD9
 39235                           status	equ	0xFD8
 39236                           
 39237 ;; *************** function _Mcu_Int1Isr *****************
 39238 ;; Defined at:
 39239 ;;		line 161 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
 39240 ;; Parameters:    Size  Location     Type
 39241 ;;		None
 39242 ;; Auto vars:     Size  Location     Type
 39243 ;;		None
 39244 ;; Return value:  Size  Location     Type
 39245 ;;                  1    wreg      void 
 39246 ;; Registers used:
 39247 ;;		wreg, status,2, status,0
 39248 ;; Tracked objects:
 39249 ;;		On entry : 0/0
 39250 ;;		On exit  : 0/0
 39251 ;;		Unchanged: 0/0
 39252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39256 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39257 ;;Total ram usage:        0 bytes
 39258 ;; Hardware stack levels used:    1
 39259 ;; This function calls:
 39260 ;;		Nothing
 39261 ;; This function is called by:
 39262 ;;		_HighPriorityIsr
 39263 ;; This function uses a non-reentrant model
 39264 ;;
 39265                           
 39266                           	psect	text196
 39267  006CB4                     __ptext196:
 39268                           	opt stack 0
 39269  006CB4                     _Mcu_Int1Isr:
 39270                           	opt stack 10
 39271                           
 39272                           ;mcu_drv.c: 164: INTCON3bits.INT1IF = 0u;
 39273                           
 39274                           ;incstack = 0
 39275  006CB4  90F0               	bcf	intcon3,0,c	;volatile
 39276  006CB6  0012               	return	
 39277  006CB8                     __end_of_Mcu_Int1Isr:
 39278                           	opt stack 0
 39279                           tosu	equ	0xFFF
 39280                           tosh	equ	0xFFE
 39281                           tosl	equ	0xFFD
 39282                           pclatu	equ	0xFFB
 39283                           pclath	equ	0xFFA
 39284                           tblptru	equ	0xFF8
 39285                           tblptrh	equ	0xFF7
 39286                           tblptrl	equ	0xFF6
 39287                           tablat	equ	0xFF5
 39288                           prodh	equ	0xFF4
 39289                           prodl	equ	0xFF3
 39290                           intcon	equ	0xFF2
 39291                           intcon2	equ	0xFF1
 39292                           intcon3	equ	0xFF0
 39293                           indf0	equ	0xFEF
 39294                           postinc0	equ	0xFEE
 39295                           plusw0	equ	0xFEB
 39296                           fsr0h	equ	0xFEA
 39297                           fsr0l	equ	0xFE9
 39298                           wreg	equ	0xFE8
 39299                           indf1	equ	0xFE7
 39300                           postinc1	equ	0xFE6
 39301                           postdec1	equ	0xFE5
 39302                           plusw1	equ	0xFE3
 39303                           fsr1h	equ	0xFE2
 39304                           fsr1l	equ	0xFE1
 39305                           bsr	equ	0xFE0
 39306                           indf2	equ	0xFDF
 39307                           postinc2	equ	0xFDE
 39308                           postdec2	equ	0xFDD
 39309                           plusw2	equ	0xFDB
 39310                           fsr2h	equ	0xFDA
 39311                           fsr2l	equ	0xFD9
 39312                           status	equ	0xFD8
 39313                           
 39314 ;; *************** function _Mcu_Int0Isr *****************
 39315 ;; Defined at:
 39316 ;;		line 126 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
 39317 ;; Parameters:    Size  Location     Type
 39318 ;;		None
 39319 ;; Auto vars:     Size  Location     Type
 39320 ;;		None
 39321 ;; Return value:  Size  Location     Type
 39322 ;;                  1    wreg      void 
 39323 ;; Registers used:
 39324 ;;		wreg, status,2, status,0
 39325 ;; Tracked objects:
 39326 ;;		On entry : 0/0
 39327 ;;		On exit  : 0/0
 39328 ;;		Unchanged: 0/0
 39329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39330 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39331 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39333 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39334 ;;Total ram usage:        0 bytes
 39335 ;; Hardware stack levels used:    1
 39336 ;; This function calls:
 39337 ;;		Nothing
 39338 ;; This function is called by:
 39339 ;;		_HighPriorityIsr
 39340 ;; This function uses a non-reentrant model
 39341 ;;
 39342                           
 39343                           	psect	text197
 39344  006CB8                     __ptext197:
 39345                           	opt stack 0
 39346  006CB8                     _Mcu_Int0Isr:
 39347                           	opt stack 10
 39348                           
 39349                           ;mcu_drv.c: 129: INTCONbits.INT0IF = 0u;
 39350                           
 39351                           ;incstack = 0
 39352  006CB8  92F2               	bcf	intcon,1,c	;volatile
 39353  006CBA  0012               	return	
 39354  006CBC                     __end_of_Mcu_Int0Isr:
 39355                           	opt stack 0
 39356                           tosu	equ	0xFFF
 39357                           tosh	equ	0xFFE
 39358                           tosl	equ	0xFFD
 39359                           pclatu	equ	0xFFB
 39360                           pclath	equ	0xFFA
 39361                           tblptru	equ	0xFF8
 39362                           tblptrh	equ	0xFF7
 39363                           tblptrl	equ	0xFF6
 39364                           tablat	equ	0xFF5
 39365                           prodh	equ	0xFF4
 39366                           prodl	equ	0xFF3
 39367                           intcon	equ	0xFF2
 39368                           intcon2	equ	0xFF1
 39369                           intcon3	equ	0xFF0
 39370                           indf0	equ	0xFEF
 39371                           postinc0	equ	0xFEE
 39372                           plusw0	equ	0xFEB
 39373                           fsr0h	equ	0xFEA
 39374                           fsr0l	equ	0xFE9
 39375                           wreg	equ	0xFE8
 39376                           indf1	equ	0xFE7
 39377                           postinc1	equ	0xFE6
 39378                           postdec1	equ	0xFE5
 39379                           plusw1	equ	0xFE3
 39380                           fsr1h	equ	0xFE2
 39381                           fsr1l	equ	0xFE1
 39382                           bsr	equ	0xFE0
 39383                           indf2	equ	0xFDF
 39384                           postinc2	equ	0xFDE
 39385                           postdec2	equ	0xFDD
 39386                           plusw2	equ	0xFDB
 39387                           fsr2h	equ	0xFDA
 39388                           fsr2l	equ	0xFD9
 39389                           status	equ	0xFD8
 39390                           tosu	equ	0xFFF
 39391                           tosh	equ	0xFFE
 39392                           tosl	equ	0xFFD
 39393                           pclatu	equ	0xFFB
 39394                           pclath	equ	0xFFA
 39395                           tblptru	equ	0xFF8
 39396                           tblptrh	equ	0xFF7
 39397                           tblptrl	equ	0xFF6
 39398                           tablat	equ	0xFF5
 39399                           prodh	equ	0xFF4
 39400                           prodl	equ	0xFF3
 39401                           intcon	equ	0xFF2
 39402                           intcon2	equ	0xFF1
 39403                           intcon3	equ	0xFF0
 39404                           indf0	equ	0xFEF
 39405                           postinc0	equ	0xFEE
 39406                           plusw0	equ	0xFEB
 39407                           fsr0h	equ	0xFEA
 39408                           fsr0l	equ	0xFE9
 39409                           wreg	equ	0xFE8
 39410                           indf1	equ	0xFE7
 39411                           postinc1	equ	0xFE6
 39412                           postdec1	equ	0xFE5
 39413                           plusw1	equ	0xFE3
 39414                           fsr1h	equ	0xFE2
 39415                           fsr1l	equ	0xFE1
 39416                           bsr	equ	0xFE0
 39417                           indf2	equ	0xFDF
 39418                           postinc2	equ	0xFDE
 39419                           postdec2	equ	0xFDD
 39420                           plusw2	equ	0xFDB
 39421                           fsr2h	equ	0xFDA
 39422                           fsr2l	equ	0xFD9
 39423                           status	equ	0xFD8
 39424                           
 39425                           	psect	text198
 39426  000000                     __ptext198:
 39427                           	opt stack 0
 39428                           tosu	equ	0xFFF
 39429                           tosh	equ	0xFFE
 39430                           tosl	equ	0xFFD
 39431                           pclatu	equ	0xFFB
 39432                           pclath	equ	0xFFA
 39433                           tblptru	equ	0xFF8
 39434                           tblptrh	equ	0xFF7
 39435                           tblptrl	equ	0xFF6
 39436                           tablat	equ	0xFF5
 39437                           prodh	equ	0xFF4
 39438                           prodl	equ	0xFF3
 39439                           intcon	equ	0xFF2
 39440                           intcon2	equ	0xFF1
 39441                           intcon3	equ	0xFF0
 39442                           indf0	equ	0xFEF
 39443                           postinc0	equ	0xFEE
 39444                           plusw0	equ	0xFEB
 39445                           fsr0h	equ	0xFEA
 39446                           fsr0l	equ	0xFE9
 39447                           wreg	equ	0xFE8
 39448                           indf1	equ	0xFE7
 39449                           postinc1	equ	0xFE6
 39450                           postdec1	equ	0xFE5
 39451                           plusw1	equ	0xFE3
 39452                           fsr1h	equ	0xFE2
 39453                           fsr1l	equ	0xFE1
 39454                           bsr	equ	0xFE0
 39455                           indf2	equ	0xFDF
 39456                           postinc2	equ	0xFDE
 39457                           postdec2	equ	0xFDD
 39458                           plusw2	equ	0xFDB
 39459                           fsr2h	equ	0xFDA
 39460                           fsr2l	equ	0xFD9
 39461                           status	equ	0xFD8
 39462                           
 39463                           	psect	rparam
 39464  0000                     tosu	equ	0xFFF
 39465                           tosh	equ	0xFFE
 39466                           tosl	equ	0xFFD
 39467                           pclatu	equ	0xFFB
 39468                           pclath	equ	0xFFA
 39469                           tblptru	equ	0xFF8
 39470                           tblptrh	equ	0xFF7
 39471                           tblptrl	equ	0xFF6
 39472                           tablat	equ	0xFF5
 39473                           prodh	equ	0xFF4
 39474                           prodl	equ	0xFF3
 39475                           intcon	equ	0xFF2
 39476                           intcon2	equ	0xFF1
 39477                           intcon3	equ	0xFF0
 39478                           indf0	equ	0xFEF
 39479                           postinc0	equ	0xFEE
 39480                           plusw0	equ	0xFEB
 39481                           fsr0h	equ	0xFEA
 39482                           fsr0l	equ	0xFE9
 39483                           wreg	equ	0xFE8
 39484                           indf1	equ	0xFE7
 39485                           postinc1	equ	0xFE6
 39486                           postdec1	equ	0xFE5
 39487                           plusw1	equ	0xFE3
 39488                           fsr1h	equ	0xFE2
 39489                           fsr1l	equ	0xFE1
 39490                           bsr	equ	0xFE0
 39491                           indf2	equ	0xFDF
 39492                           postinc2	equ	0xFDE
 39493                           postdec2	equ	0xFDD
 39494                           plusw2	equ	0xFDB
 39495                           fsr2h	equ	0xFDA
 39496                           fsr2l	equ	0xFD9
 39497                           status	equ	0xFD8
 39498                           
 39499                           	psect	temp
 39500  000042                     btemp:
 39501                           	opt stack 0
 39502  000042                     	ds	1
 39503  0000                     int$flags	set	btemp
 39504  0000                     wtemp6	set	btemp+1
 39505                           tosu	equ	0xFFF
 39506                           tosh	equ	0xFFE
 39507                           tosl	equ	0xFFD
 39508                           pclatu	equ	0xFFB
 39509                           pclath	equ	0xFFA
 39510                           tblptru	equ	0xFF8
 39511                           tblptrh	equ	0xFF7
 39512                           tblptrl	equ	0xFF6
 39513                           tablat	equ	0xFF5
 39514                           prodh	equ	0xFF4
 39515                           prodl	equ	0xFF3
 39516                           intcon	equ	0xFF2
 39517                           intcon2	equ	0xFF1
 39518                           intcon3	equ	0xFF0
 39519                           indf0	equ	0xFEF
 39520                           postinc0	equ	0xFEE
 39521                           plusw0	equ	0xFEB
 39522                           fsr0h	equ	0xFEA
 39523                           fsr0l	equ	0xFE9
 39524                           wreg	equ	0xFE8
 39525                           indf1	equ	0xFE7
 39526                           postinc1	equ	0xFE6
 39527                           postdec1	equ	0xFE5
 39528                           plusw1	equ	0xFE3
 39529                           fsr1h	equ	0xFE2
 39530                           fsr1l	equ	0xFE1
 39531                           bsr	equ	0xFE0
 39532                           indf2	equ	0xFDF
 39533                           postinc2	equ	0xFDE
 39534                           postdec2	equ	0xFDD
 39535                           plusw2	equ	0xFDB
 39536                           fsr2h	equ	0xFDA
 39537                           fsr2l	equ	0xFD9
 39538                           status	equ	0xFD8


Data Sizes:
    Strings     408
    Constant    592
    Data        170
    BSS         2377
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     34      65
    BANK0           160     80     131
    BANK1           256    201     256
    BANK2           256    201     256
    BANK3           256      4     253
    BANK4           192      0     176
    BANK5           256      0     214
    BANK6           256      0     220
    BANK7           256      0     246
    BANK8           256      0     250
    BANK9           256      0     200
    BANK10          256    200     200
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          192      0       0

Pointer List with Targets:

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 48
		 -> USTATcopy(BANK0[1]), USBActiveConfiguration(BANK0[1]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    xtoi@s	PTR const unsigned char  size(2) Largest target is 4
		 -> Terminal@Addr(BANK3[4]), 

    strtol@endptr	PTR PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strtol@s	PTR const unsigned char  size(2) Largest target is 80
		 -> Terminal@Payload(BANK7[80]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 42
		 -> STR_23(CODE[20]), STR_21(CODE[42]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 200
		 -> Term_MainSm@Data(BANK4[50]), Terminal@UsbTxBuffer(BANK2[200]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 200
		 -> Term_MainSm@Data(BANK4[50]), Terminal@UsbTxBuffer(BANK2[200]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_26(CODE[3]), STR_25(CODE[2]), STR_24(CODE[2]), Term_MainSm@FwkBuildStr(BANK1[4]), 
		 -> Term_MainSm@FwkMinorStr(BANK1[4]), Term_MainSm@FwkMajorStr(BANK1[4]), 

    strcat@to	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    strcat@cp	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    memset@p1	PTR void  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), USBAlternateInterface(BANK2[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), USBAlternateInterface(BANK2[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memcpy@d1	PTR void  size(2) Largest target is 8
		 -> SetupPkt(BIGRAMh[8]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 8
		 -> SetupPkt(BIGRAMh[8]), 

    memcpy@s1	PTR const void  size(2) Largest target is 3775
		 -> RAM(DATA[3775]), CtrlTrfData(BIGRAMh[8]), SetupPkt(BIGRAMh[8]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 3775
		 -> RAM(DATA[3775]), CtrlTrfData(BIGRAMh[8]), SetupPkt(BIGRAMh[8]), 

    utoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> Term_MainSm@FwkBuildStr(BANK1[4]), Term_MainSm@FwkMinorStr(BANK1[4]), Term_MainSm@FwkMajorStr(BANK1[4]), Terminal@Payload(BANK7[80]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> Terminal@Payload(BANK7[80]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 80
		 -> Terminal@Payload(BANK7[80]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 4
		 -> Terminal@Len(BANK3[4]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_27(CODE[17]), 

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_32(CODE[7]), STR_28(CODE[12]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    triggerCmdFsm@receivedNumber	PTR unsigned char  size(2) Largest target is 13
		 -> receivedNumber(BANK4[13]), 

    delCmdFsm@smsText	PTR unsigned char  size(2) Largest target is 20
		 -> smsText(BANK4[20]), 

    delCmdFsm@receivedNumber	PTR unsigned char  size(2) Largest target is 13
		 -> receivedNumber(BANK4[13]), 

    delCmdFsm@isCmdSuccessfull	PTR unsigned char  size(2) Largest target is 1
		 -> MyApp_Task@isCmdSuccessfull(BANK0[1]), 

    addCmdFsm@smsText	PTR unsigned char  size(2) Largest target is 20
		 -> smsText(BANK4[20]), 

    addCmdFsm@receivedNumber	PTR unsigned char  size(2) Largest target is 13
		 -> receivedNumber(BANK4[13]), 

    addCmdFsm@isCmdSuccessfull	PTR unsigned char  size(2) Largest target is 1
		 -> MyApp_Task@isCmdSuccessfull(BANK0[1]), 

    findEmptySpot@positionInMemory	PTR unsigned char  size(2) Largest target is 1
		 -> addCmdFsm@numberInMemory(BANK1[1]), 

    isMasterNumber@phoneNumber	PTR unsigned char  size(2) Largest target is 13
		 -> receivedNumber(BANK4[13]), 

    isNumberInMemory@positionInMemory	PTR unsigned char  size(2) Largest target is 1
		 -> triggerCmdFsm@numberInMemory(BANK1[1]), delCmdFsm@numberInMemory(BANK1[1]), addCmdFsm@numberInMemory(BANK1[1]), 

    isNumberInMemory@phoneNumber	PTR unsigned char  size(2) Largest target is 20
		 -> receivedNumber(BANK4[13]), smsText(BANK4[20]), 

    isNumberValid@phoneNumber	PTR unsigned char  size(2) Largest target is 20
		 -> readBuffer(BANK3[13]), smsText(BANK4[20]), 

    saveNumberInMemory@phoneNumber	PTR unsigned char  size(2) Largest target is 20
		 -> delCmdFsm@emptyNumber(BANK1[13]), smsText(BANK4[20]), callerNumber(BANK4[13]), 

    secondsAppTimer@counter	PTR unsigned int  size(2) Largest target is 3775
		 -> blinkInSeconds(BANK3[2]), setupCallTicks(BANK3[2]), initGprsModem@modemCounter(BANK3[2]), RAM(DATA[3775]), 

    sp__initPreamble	PTR unsigned char  size(2) Largest target is 4
		 -> memoryPreamble(BANK3[4]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 80
		 -> Term_MainSm@FwkBuildStr(BANK1[4]), Term_MainSm@FwkMinorStr(BANK1[4]), Term_MainSm@FwkMajorStr(BANK1[4]), Terminal@Payload(BANK7[80]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 200
		 -> Term_MainSm@Data(BANK4[50]), Terminal@UsbTxBuffer(BANK2[200]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 80
		 -> Terminal@Payload(BANK7[80]), 

    ClearBuffer@Buffer	PTR unsigned char  size(2) Largest target is 400
		 -> GsmGprsTerminal@UartBuffer(BANK9[200]), EepromBuffer(BANK4[15]), HttpGetMethod@UartMessage(BANK1[200]), InitGprsNetwork@UartMessage(BANK1[50]), 
		 -> Mdm_SmsRx(BANK7[102]), callerNumber(BANK4[13]), RxBuffer(BIGRAMl[400]), 

    StringCopy@SourceStr	PTR unsigned char  size(2) Largest target is 400
		 -> delCmdFsm@emptyNumber(BANK1[13]), memoryPreamble(BANK3[4]), smsText(BANK4[20]), STR_15(CODE[20]), 
		 -> STR_9(CODE[21]), MessageText(BANK8[50]), PhoneNumber(BANK5[20]), STR_5(CODE[10]), 
		 -> Mdm_SmsRx.HeaderBuffer(BANK7[80]), Mdm_SmsRx(BANK7[102]), callerNumber(BANK4[13]), RxBuffer(BIGRAMl[400]), 

    StringCopy@DestStr	PTR unsigned char  size(2) Largest target is 200
		 -> receivedNumber(BANK4[13]), smsText(BANK4[20]), EepromBuffer(BANK4[15]), HttpGetMethod@UartMessage(BANK1[200]), 
		 -> InitGprsNetwork@UartMessage(BANK1[50]), MessageText(BANK8[50]), PhoneNumber(BANK5[20]), SendSmsSm@UartMessage(BANK1[50]), 
		 -> Mdm_SmsRx(BANK7[102]), callerNumber(BANK4[13]), 

    StringCompare@String2	PTR unsigned char  size(2) Largest target is 400
		 -> readBuffer(BANK3[13]), parseCommand@resetCmd(BANK0[4]), parseCommand@deleteNumberCmd(BANK0[4]), parseCommand@addNumberCmd(BANK0[4]), 
		 -> RxBuffer(BIGRAMl[400]), 

    StringCompare@String1	PTR unsigned char  size(2) Largest target is 20
		 -> receivedNumber(BANK4[13]), smsText(BANK4[20]), ModemEvtParser@CallReadyString(BANK0[10]), ModemEvtParser@SmsString(BANK0[5]), 
		 -> ModemEvtParser@ClipString(BANK0[5]), ModemEvtParser@RingString(BANK0[4]), 

    LedStateMachine@LedSts	PTR enum E8954 size(2) Largest target is 1
		 -> Led3Sts(BANK1[1]), Led2Sts(BANK1[1]), Led1Sts(BANK1[1]), 

    LedStateMachine@LedPulse	PTR struct _LedPulseType size(2) Largest target is 6
		 -> Led3Pulse(BANK3[6]), Led2Pulse(BANK3[6]), Led1Pulse(BANK3[6]), 

    LedStateMachine@LedBlink	PTR struct _LedBlinkType size(2) Largest target is 9
		 -> Led3Blink(BANK3[9]), Led2Blink(BANK3[9]), Led1Blink(BANK3[9]), 

    LedStateMachine@LedOut	PTR unsigned char  size(2) Largest target is 1
		 -> Led3OutSts(BANK1[1]), Led2OutSts(BANK1[1]), Led1OutSts(BANK1[1]), 

    LedPulseStateMachine@LedPulse	PTR struct _LedPulseType size(2) Largest target is 6
		 -> Led3Pulse(BANK3[6]), Led2Pulse(BANK3[6]), Led1Pulse(BANK3[6]), 

    LedBlinkStateMachine@LedBlink	PTR struct _LedBlinkType size(2) Largest target is 9
		 -> Led3Blink(BANK3[9]), Led2Blink(BANK3[9]), Led1Blink(BANK3[9]), 

    Eeprom_Read@ReadBuffer	PTR unsigned char  size(2) Largest target is 13
		 -> readBuffer(BANK3[13]), memoryPreamble(BANK3[4]), 

    Eeprom_Write@WriteBuffer	PTR unsigned char  size(2) Largest target is 20
		 -> delCmdFsm@emptyNumber(BANK1[13]), memoryPreamble(BANK3[4]), smsText(BANK4[20]), callerNumber(BANK4[13]), 

    putUSBUSART@data	PTR unsigned char  size(2) Largest target is 400
		 -> MsgReady(CODE[23]), Term_MainSm@Data(BANK4[50]), MsgFormat(CODE[240]), Welcome(CODE[137]), 
		 -> Terminal@UsbTxBuffer(BANK2[200]), Terminal@TermRxBuffer(BANK5[50]), Terminal@Payload(BANK7[80]), Terminal@UsbRxBuffer(BANK10[200]), 
		 -> RxBuffer(BIGRAMl[400]), 

    getsUSBUSART@buffer	PTR unsigned char  size(2) Largest target is 200
		 -> Terminal@UsbRxBuffer(BANK10[200]), GsmGprsTerminal@UsbBuffer(BANK8[200]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pCDCDst.wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S4616$wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S4616$bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S4616$wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S4616$bRam	PTR unsigned char  size(2) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    sp__memcpy	PTR void  size(2) Largest target is 8
		 -> SetupPkt(BIGRAMh[8]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pDst	PTR unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMh[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx(BANK7[64]), cdc_data_rx(BANK5[64]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    S3069$pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S3059$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S3059$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S3035$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S3035$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S3035$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S3035$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), USBAlternateInterface(BANK2[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 38
		 -> sd002(CODE[38]), sd001(CODE[30]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 

    I2cSlv_QueryI2cData@RxBuffer	PTR unsigned char  size(2) Largest target is 13
		 -> readBuffer(BANK3[13]), memoryPreamble(BANK3[4]), 

    I2cSlv_QueryI2cData@TxBuffer	PTR unsigned char  size(2) Largest target is 1
		 -> ReadAddress(BANK1[1]), 

    I2cSlv_ReceiveI2cMsg@RxBuffer	PTR unsigned char  size(2) Largest target is 50
		 -> readBuffer(BANK3[13]), memoryPreamble(BANK3[4]), Terminal@TermRxBuffer(BANK5[50]), 

    I2cSlv_SendI2cMsg@TxBuffer	PTR unsigned char  size(2) Largest target is 50
		 -> relayBuffer(BANK2[2]), Terminal@TermTxBuffer(BANK1[50]), ReadAddress(BANK1[1]), EepromBuffer(BANK4[15]), 
		 -> I2cDummyTx@DummyBuffer(BANK1[1]), 

    I2cRxPacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> readBuffer(BANK3[13]), memoryPreamble(BANK3[4]), Terminal@TermRxBuffer(BANK5[50]), 

    I2cTxPacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> relayBuffer(BANK2[2]), Terminal@TermTxBuffer(BANK1[50]), ReadAddress(BANK1[1]), EepromBuffer(BANK4[15]), 
		 -> I2cDummyTx@DummyBuffer(BANK1[1]), 

    MdmHttp_GetMethod@GetData.RespBuffer	PTR unsigned char  size(2) Largest target is 0

    MdmHttp_GetMethod@GetData.Url	PTR unsigned char  size(2) Largest target is 0

    ApnLocal	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    HttpGetMethod@GetData.RespBuffer	PTR unsigned char  size(2) Largest target is 0

    HttpGetMethod@GetData.Url	PTR unsigned char  size(2) Largest target is 0

    HttpGetMethod@GetData	PTR struct _HttpGetDataType size(2) Largest target is 7
		 -> HttpGetDataLocal(BANK3[5]), 

    InitGprsNetwork@Apn	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2536_HttpGetDataType$RespBuffer	PTR unsigned char  size(2) Largest target is 0

    HttpGetDataLocal.RespBuffer	PTR unsigned char  size(2) Largest target is 0

    S2536_HttpGetDataType$Url	PTR unsigned char  size(2) Largest target is 0

    HttpGetDataLocal.Url	PTR unsigned char  size(2) Largest target is 0

    sp__GetLastInteractionNumber	PTR unsigned char  size(2) Largest target is 13
		 -> callerNumber(BANK4[13]), 

    sp__GetCallerNumber	PTR unsigned char  size(2) Largest target is 13
		 -> callerNumber(BANK4[13]), 

    Mdm_GetSmsData@MessageText	PTR unsigned char  size(2) Largest target is 20
		 -> smsText(BANK4[20]), 

    OsTmr_GetTimerStatus@Timer	PTR struct _SwTimerType size(2) Largest target is 11
		 -> Term_MainSm@TermDelay(BANK3[11]), Terminal@SwTimer(BANK4[11]), I2cSlv_QueryI2cData@TimeoutTimer(BANK3[11]), I2cSlv_QueryI2cData@QueryTimer(BANK4[11]), 
		 -> ConnWait(BANK3[11]), ConnTimeout(BANK2[11]), SendSmsSm@SwTimer(BANK3[11]), CheckModem@Timeout(BANK3[11]), 

    OsTmr_Wait@WaitTimer	PTR struct _SwTimerType size(2) Largest target is 11
		 -> Terminal@SwTimer(BANK4[11]), I2cSlv_QueryI2cData@QueryTimer(BANK4[11]), 

    OsTmr_StartTimer@Timer	PTR struct _SwTimerType size(2) Largest target is 11
		 -> Term_MainSm@TermDelay(BANK3[11]), Terminal@SwTimer(BANK4[11]), I2cSlv_QueryI2cData@TimeoutTimer(BANK3[11]), I2cSlv_QueryI2cData@QueryTimer(BANK4[11]), 
		 -> ConnWait(BANK3[11]), ConnTimeout(BANK2[11]), SendSmsSm@SwTimer(BANK3[11]), CheckModem@Timeout(BANK3[11]), 

    ReceiveEvt@Event	PTR struct EventStructure size(2) Largest target is 7
		 -> I2cRxPacket(BANK3[6]), I2cReadDataEvt(COMRAM[1]), I2cWriteDataEvt(BANK0[1]), GetMethod(BANK1[1]), 
		 -> InitNetwork(BANK0[1]), SmsTxtReady(BANK0[1]), GetSmsText(BANK0[1]), SmsEvent(BANK0[1]), 
		 -> ClipEvent(BANK0[1]), RingEvent(BANK0[1]), SendSmsEvent(BANK0[1]), NewStringMdmTerminal(COMRAM[1]), 
		 -> NewMdmEvtParserRequest(COMRAM[1]), NewStringReceived(COMRAM[1]), MdmResetRequest(COMRAM[1]), MdmOnOffPulseRequest(BANK0[1]), 
		 -> ActivateRiDetection(COMRAM[1]), 

    GenerateEvt@Event	PTR struct EventStructure size(2) Largest target is 7
		 -> AlarmEvent(BANK1[1]), I2cRxPacket(BANK3[6]), I2cReadDataEvt(COMRAM[1]), I2cWriteDataEvt(BANK0[1]), 
		 -> GetMethod(BANK1[1]), InitNetwork(BANK0[1]), MdmStsReady(BANK1[1]), SmsTxtReady(BANK0[1]), 
		 -> GetSmsText(BANK0[1]), SmsEvent(BANK0[1]), ClipEvent(BANK0[1]), RingEvent(BANK0[1]), 
		 -> SendSmsEvent(BANK0[1]), NewStringMdmTerminal(COMRAM[1]), NewMdmEvtParserRequest(COMRAM[1]), NewStringReceived(COMRAM[1]), 
		 -> MdmOnOffPulseRequest(BANK0[1]), CallClosedEvent(COMRAM[1]), IncomingCallEvent(COMRAM[1]), NewSmsEvent(COMRAM[1]), 

    S2049_SchedTblType$Task	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> MyApp_Task(), Term_MainTask(), Rtcm_MainTask(), Led_MainTask(), 
		 -> Wdg_MainTask(), UsbDevice_MainTask(), MdmHttp_MainTask(), Mdm_MainTask(), 
		 -> I2cSlv_MainTask(), Mdm_DrvMainFn(), 

    TaskTable.Task	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> MyApp_Task(), Term_MainTask(), Rtcm_MainTask(), Led_MainTask(), 
		 -> Wdg_MainTask(), UsbDevice_MainTask(), MdmHttp_MainTask(), Mdm_MainTask(), 
		 -> I2cSlv_MainTask(), Mdm_DrvMainFn(), 

    OsAlrm_SetOsAlarm@AlarmCallback	PTR FTN()void  size(2) Largest target is 1
		 -> I2cDummyTx(), 

    S2014_OsAlarmType$AlrmCbk	PTR FTN()void  size(2) Largest target is 1
		 -> I2cDummyTx(), 

    OsAlarms.AlrmCbk	PTR FTN()void  size(2) Largest target is 1
		 -> I2cDummyTx(), 

    Uart_WriteStringLen@StringToWrite	PTR unsigned char  size(2) Largest target is 200
		 -> GsmGprsTerminal@UartBuffer(BANK9[200]), SendSmsSm@UartMessage(BANK1[50]), 

    Uart_WriteString@StringToWrite	PTR unsigned char  size(2) Largest target is 200
		 -> HttpGetMethod@UartMessage(BANK1[200]), InitGprsNetwork@UartMessage(BANK1[50]), Mdm_MakePhoneCall@UartMessage(COMRAM[25]), Mdm_SetSmsFormat@UartMessage(BANK0[20]), 
		 -> Mdm_PinUnlock@UartMessage(COMRAM[13]), 

    Uart_WriteConstString@ConstStringToWrite	PTR const unsigned char  size(2) Largest target is 31
		 -> STR_31(CODE[12]), STR_30(CODE[19]), STR_29(CODE[14]), STR_20(CODE[14]), 
		 -> STR_19(CODE[14]), STR_18(CODE[13]), STR_17(CODE[13]), STR_16(CODE[17]), 
		 -> STR_14(CODE[21]), STR_13(CODE[14]), STR_12(CODE[13]), STR_11(CODE[14]), 
		 -> STR_10(CODE[14]), STR_8(CODE[31]), STR_7(CODE[5]), STR_6(CODE[5]), 
		 -> STR_4(CODE[12]), STR_3(CODE[7]), STR_2(CODE[14]), STR_1(CODE[5]), 

    Uart_InitUartModule@UartConfig	PTR struct _UartConfig size(2) Largest target is 21
		 -> UartConfig(BANK3[21]), 

    SetUartBaudRate@UartConfig	PTR struct _UartConfig size(2) Largest target is 21
		 -> UartConfig(BANK3[21]), 

    Tmr4IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Tmr_RegisterTmr2IsrCallback@IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Sch_SchmIntService(), 

    Tmr2IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Sch_SchmIntService(), Absolute function(), 

    Tmr_TmrBConfig@TmrBConfig	PTR struct _TmrBConfigType size(2) Largest target is 7
		 -> InitAuxTimer@TmrBConfig(COMRAM[7]), InitSchedTimer@TmrBConfig(BANK0[7]), 

    RtccIsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Rtcc_AlarmConfig@AlarmConfig	PTR struct _RtccAlarmConfigType size(2) Largest target is 4
		 -> AlCfg(BANK3[4]), 

    Rtcc_RtcConfig@RtcConfig	PTR struct _RtccConfigType size(2) Largest target is 4
		 -> RtcConfig(BANK3[4]), 

    ExtInt1IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    ExtInt0IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S566_I2cReadPacket$Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> readBuffer(BANK3[13]), memoryPreamble(BANK3[4]), Terminal@TermRxBuffer(BANK5[50]), 

    I2c_ReadData@ReadPacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> readBuffer(BANK3[13]), memoryPreamble(BANK3[4]), Terminal@TermRxBuffer(BANK5[50]), 

    I2c_ReadData@ReadPacket	PTR struct _I2cReadPacket size(2) Largest target is 7
		 -> I2cRxPacket(BANK3[6]), 

    S539_I2cWritePacket$Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> relayBuffer(BANK2[2]), Terminal@TermTxBuffer(BANK1[50]), ReadAddress(BANK1[1]), EepromBuffer(BANK4[15]), 
		 -> I2cDummyTx@DummyBuffer(BANK1[1]), 

    I2c_WriteData@WritePacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> relayBuffer(BANK2[2]), Terminal@TermTxBuffer(BANK1[50]), ReadAddress(BANK1[1]), EepromBuffer(BANK4[15]), 
		 -> I2cDummyTx@DummyBuffer(BANK1[1]), 

    I2c_WriteData@WritePacket	PTR struct _I2cWritePacket size(2) Largest target is 6
		 -> I2cTxPacket(BANK3[5]), 

    I2c_InitI2cModule@I2cConfig	PTR struct _I2cConfig size(2) Largest target is 10
		 -> I2cConfig(BANK3[10]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _LowPriorityIsr in COMRAM

    _Sch_SchmIntService->_OsAlrm_ProcessOsAlarms
    _I2cDummyTx->i1_I2cSlv_SendI2cMsg
    i1_I2cSlv_SendI2cMsg->i1_GenerateEvt

Critical Paths under _HighPriorityIsr in COMRAM

    _Uart_Uart1RxIsr->_Uart_MdmGsmGprsReadService
    _Uart_MdmGsmGprsReadService->i2_GenerateEvt

Critical Paths under _main in BANK0

    _SystemInit->_InitSchedTimer
    _InitSchedTimer->_Tmr_TmrBConfig
    _Tmr_TmrBConfig->_Tmr_TmrBPrSet
    _Tmr_TmrBPrSet->___lldiv
    _Wdg_MainTask->_Mcu_SetWdgSts
    _UsbDevice_MainTask->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBDeviceInit->_memset
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService
    _CDCTxService->_USBTransferOnePacket
    _Term_MainSm->_Terminal
    _Terminal->_OsTmr_Wait
    _xtoi->_isxdigit
    _isxdigit->_isdigit
    _strtol->___lmul
    _isalpha->_isupper
    _putUSBUSART->_strlen
    _itoa->_utoa
    _utoa->___lwdiv
    _getsUSBUSART->_USBTransferOnePacket
    _atoi->___wmul
    _Rtcm_MainTask->_Rtcm_GetRtccDate
    _Rtcm_SetRtccDate->_Rtcc_SetRtccValue
    _Rtcc_SetRtccValue->___awdiv
    _Rtcm_GetRtccDate->_Rtcc_GetRtccValue
    _Rtcc_RtcConfig->_RtccIrqInit
    _triggerRelay->_I2cSlv_SendI2cMsg
    _waitSetupCall->_secondsAppTimer
    _savePreamble->_Eeprom_Write
    _initGprsModem->_Mdm_SetSmsFormat
    _Mdm_SetSmsFormat->_Uart_WriteString
    _initEeprom->_Eeprom_Read
    _detectCmd->_parseCommand
    _parseCommand->_StringCompare
    _Mdm_RequestSmsData->_GenerateEvt
    _Mdm_IsSmsReceived->_ReceiveEvt
    _Mdm_IsRinging->_ReceiveEvt
    _Mdm_HangPhoneCall->_Uart_WriteConstString
    _Mdm_GetSmsData->_StringCopy
    _GetCallerNumber->_ClearBuffer
    _cmdVisualEffet->_secondsAppTimer
    _secondsAppTimer->___lwdiv
    _saveNumberInMemory->_Eeprom_Write
    _Eeprom_Write->_StringCopy
    _isNumberInMemory->_Eeprom_Read
    _isMasterNumber->_Eeprom_Read
    _findEmptySpot->_Eeprom_Read
    _Eeprom_Read->_I2cSlv_QueryI2cData
    _I2cSlv_QueryI2cData->_OsTmr_Wait
    _OsTmr_Wait->_OsTmr_GetTimerStatus
    _I2cSlv_ReceiveI2cMsg->_GenerateEvt
    _I2cSlv_I2cReadMsgSts->_ReceiveEvt
    _Eeprom_Reset->_I2cSlv_SendI2cMsg
    _I2cSlv_SendI2cMsg->_GenerateEvt
    _Mdm_MainTask->_ModemEvtParser
    _TurnOnModem->_GenerateEvt
    _SendSmsSm->_OsTmr_GetTimerStatus
    _Uart_WriteStringLen->_UartTxBufferStatus
    _ModemEvtParser->_StringCopy
    _GetSmsSm->_StringCopy
    _ConfigureModem->_Uart_InitUartModule
    _Uart_InitUartModule->_SetUartBaudRate
    _SetUartBaudRate->___lldiv
    _CheckModem->_OsTmr_GetTimerStatus
    _MdmCntSm->_ReceiveEvt
    _MdmHttp_MainTask->_HttpGetMethod
    _InitGprsNetwork->_OsTmr_GetTimerStatus
    _HttpGetMethod->_OsTmr_GetTimerStatus
    _Uart_WriteString->_UartTxBufferStatus
    _Uart_WriteConstString->_UartTxBufferStatus
    _StringCopy->_GetCallerNumber
    _OsTmr_StartTimer->_GetOsTickCounter
    _OsTmr_GetTimerStatus->_GetElapsedTime
    _GetElapsedTime->_GetOsTickCounter
    _Led_MainTask->_LedStateMachine
    _LedStateMachine->_LedPulseStateMachine
    _LedPulseStateMachine->___lwdiv
    _LedBlinkStateMachine->___lwdiv
    ___lwdiv->___wmul
    _I2cSlv_MainTask->_I2c_InitI2cModule
    _OsAlrm_SetOsAlarm->___wmul
    _I2c_InitI2cModule->_SetBaudRate
    _SetBaudRate->___lldiv
    ___lldiv->___lmul
    _I2cSendMsgSm->_I2c_ReadData
    _I2c_WriteData->_WriteByte
    _I2c_ReadData->_GenerateEvt

Critical Paths under _LowPriorityIsr in BANK0

    _Sch_SchmIntService->_OsAlrm_ProcessOsAlarms

Critical Paths under _HighPriorityIsr in BANK0

    None.

Critical Paths under _main in BANK1

    _Term_MainTask->_Term_MainSm
    _Term_MainSm->_Terminal
    _MyApp_Task->_delCmdFsm
    _triggerCmdFsm->_isNumberInMemory
    _initFsm->_initEeprom
    _delCmdFsm->_isNumberInMemory
    _addCmdFsm->_isNumberInMemory
    _Mdm_MainTask->_SendSmsSm
    _MdmHttp_MainTask->_HttpGetMethod

Critical Paths under _LowPriorityIsr in BANK1

    None.

Critical Paths under _HighPriorityIsr in BANK1

    None.

Critical Paths under _main in BANK2

    _Sch_MainScheduler->_InitializeTasks
    _Sch_MainScheduler->_ScheduleTasks
    _Term_MainSm->_Terminal

Critical Paths under _LowPriorityIsr in BANK2

    None.

Critical Paths under _HighPriorityIsr in BANK2

    None.

Critical Paths under _main in BANK3

    _Sch_MainScheduler->_ScheduleTasks

Critical Paths under _LowPriorityIsr in BANK3

    None.

Critical Paths under _HighPriorityIsr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _LowPriorityIsr in BANK4

    None.

Critical Paths under _HighPriorityIsr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _LowPriorityIsr in BANK5

    None.

Critical Paths under _HighPriorityIsr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _LowPriorityIsr in BANK6

    None.

Critical Paths under _HighPriorityIsr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _LowPriorityIsr in BANK7

    None.

Critical Paths under _HighPriorityIsr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _LowPriorityIsr in BANK8

    None.

Critical Paths under _HighPriorityIsr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _LowPriorityIsr in BANK9

    None.

Critical Paths under _HighPriorityIsr in BANK9

    None.

Critical Paths under _main in BANK10

    _Term_MainSm->_Terminal

Critical Paths under _LowPriorityIsr in BANK10

    None.

Critical Paths under _HighPriorityIsr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _LowPriorityIsr in BANK11

    None.

Critical Paths under _HighPriorityIsr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _LowPriorityIsr in BANK12

    None.

Critical Paths under _HighPriorityIsr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _LowPriorityIsr in BANK13

    None.

Critical Paths under _HighPriorityIsr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _LowPriorityIsr in BANK14

    None.

Critical Paths under _HighPriorityIsr in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0 1296103
                  _Sch_MainScheduler
                         _SystemInit
 ---------------------------------------------------------------------------------
 (1) _SystemInit                                           0     0      0    4631
                     _InitSchedTimer
              _Irq_InitIntController
                   _Mcu_ConfigExtInt
                 _Mcu_StartSystemPll
             _Pm_DsReleasePinControl
        _Tmr_RegisterTmr2IsrCallback
 ---------------------------------------------------------------------------------
 (2) _Tmr_RegisterTmr2IsrCallback                          2     0      2     111
                                             29 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _Pm_DsReleasePinControl                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Mcu_StartSystemPll                                   2     2      0      23
                                             29 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _Mcu_ConfigExtInt                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Irq_InitIntController                                3     1      2     244
                                             29 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _InitSchedTimer                                       7     7      0    4253
                                             68 BANK0      7     7      0
                     _Tmr_TmrBConfig
 ---------------------------------------------------------------------------------
 (3) _Tmr_TmrBConfig                                       4     2      2    4007
                                             64 BANK0      4     2      2
                           _TmrBInit
                       _Tmr_StartTmr
                     _Tmr_TmrBIrqSet
                      _Tmr_TmrBPrSet
 ---------------------------------------------------------------------------------
 (4) _Tmr_TmrBPrSet                                       10     6      4    2589
                                             54 BANK0     10     6      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) _Tmr_TmrBIrqSet                                       3     1      2     466
                                             29 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (4) _Tmr_StartTmr                                         1     1      0      22
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _TmrBInit                                             4     2      2     288
                                             29 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _Sch_MainScheduler                                    0     0      0 1291472
                    _InitializeTasks
                      _ScheduleTasks
 ---------------------------------------------------------------------------------
 (2) _ScheduleTasks                                        5     5      0  645829
                                            200 BANK2      1     1      0
                                              0 BANK3      4     4      0
                    _I2cSlv_MainTask *
                       _Led_MainTask *
                   _MdmHttp_MainTask *
                      _Mdm_DrvMainFn *
                       _Mdm_MainTask *
                         _MyApp_Task *
                      _Rtcm_MainTask *
                      _Term_MainTask *
                 _UsbDevice_MainTask *
                       _Wdg_MainTask *
 ---------------------------------------------------------------------------------
 (2) _InitializeTasks                                      3     3      0  645643
                                            200 BANK2      1     1      0
                                              0 BANK3      2     2      0
                    _I2cSlv_MainTask *
                       _Led_MainTask *
                   _MdmHttp_MainTask *
                      _Mdm_DrvMainFn *
                       _Mdm_MainTask *
                         _MyApp_Task *
                      _Rtcm_MainTask *
                      _Term_MainTask *
                 _UsbDevice_MainTask *
                       _Wdg_MainTask *
 ---------------------------------------------------------------------------------
 (3) _Wdg_MainTask                                         1     1      0      31
                       _Mcu_ClearWdg
                      _Mcu_SetWdgSts
 ---------------------------------------------------------------------------------
 (4) _Mcu_SetWdgSts                                        1     1      0      31
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Mcu_ClearWdg                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _UsbDevice_MainTask                                   1     1      0   53592
                       _CDCTxService
                      _USBDeviceInit
                     _USBDeviceTasks
 ---------------------------------------------------------------------------------
 (4) _USBDeviceTasks                                       1     1      0   49060
                                             56 BANK0      1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                      _USBDeviceInit
      _USBIncrement1msInternalTimers
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBWakeFromSuspend                                   0     0      0    6134
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBSuspend                                           0     0      0    6134
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBStallHandler                                      1     1      0       0
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _USBIncrement1msInternalTimers                        0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _USBDeviceInit                                        1     1      0    2300
                                             37 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPService                                     1     1      0   28290
                                             55 BANK0      1     1      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
                             _memcpy
 ---------------------------------------------------------------------------------
 (6) _memcpy                                              11     5      6     520
                                             29 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfSetupHandler                               0     0      0   27433
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (7) _USBCtrlEPServiceComplete                             0     0      0     136
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (8) _USBCtrlEPAllowDataStage                              0     0      0     136
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (7) _USBCheckStdRequest                                   0     0      0   21163
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (8) _USBStdSetCfgHandler                                  1     1      0    8273
                                             49 BANK0      1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                             _memset
 ---------------------------------------------------------------------------------
 (8) _USBStdGetStatusHandler                               3     3      0      68
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (8) _USBStdGetDscHandler                                  2     2      0       0
                                             29 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (8) _USBStdFeatureReqHandler                              6     6      0    6688
                                             49 BANK0      6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USER_USB_CALLBACK_EVENT_HANDLER                      8     2      6    6134
                                             41 BANK0      8     2      6
                          _CDCInitEP
                 _USBCheckCDCRequest
 ---------------------------------------------------------------------------------
 (6) _USBCheckCDCRequest                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _CDCInitEP                                            0     0      0    2983
                  _USBEnableEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (7) _USBEnableEndpoint                                    4     3      1     952
                                             37 BANK0      4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (8) _USBConfigureEndpoint                                 8     7      1     524
                                             29 BANK0      8     7      1
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfOutHandler                                 0     0      0     167
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (7) _USBCtrlTrfRxService                                  2     2      0     167
                                             29 BANK0      2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (8) _USBCtrlEPAllowStatusStage                            0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfInHandler                                  1     1      0     170
                                             30 BANK0      1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (9) _USBCtrlTrfTxService                                  1     1      0     136
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _CDCTxService                                         2     2      0    2232
                                             36 BANK0      2     2      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _Term_MainTask                                        1     1      0   59354
                        _Term_MainSm
 ---------------------------------------------------------------------------------
 (4) _Term_MainSm                                         24    24      0   59354
                                             50 BANK1     12    12      0
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                           _Terminal
                             _memset
                        _putUSBUSART
                            _sprintf
                             _strcat
                             _strcpy
                             _strlen
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _strlen                                               6     4      2     338
                                             29 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcat                                               6     2      4    1391
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) _sprintf                                             21    15      6     579
                                             29 BANK0     12     6      6
 ---------------------------------------------------------------------------------
 (6) _memset                                               8     2      6    2009
                                             29 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (5) _Terminal                                           455   455      0   42144
                                             66 BANK0      5     5      0
                                              0 BANK1     50    50      0
                                              0 BANK2    200   200      0
                                              0 BANK10   200   200      0
               _I2cSlv_I2cReadMsgSts
               _I2cSlv_ReceiveI2cMsg
                  _I2cSlv_SendI2cMsg
                         _OsTmr_Wait
                               _atoi
                       _getsUSBUSART
                               _itoa
                        _putUSBUSART
                             _strcpy
                             _strtol
                               _xtoi
 ---------------------------------------------------------------------------------
 (6) _xtoi                                                 8     6      2    1300
                                             35 BANK0      8     6      2
                            _isdigit
                            _isspace
                            _isupper
                           _isxdigit
                            _tolower
 ---------------------------------------------------------------------------------
 (7) _tolower                                              1     1      0      96
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _isxdigit                                             3     3      0     291
                                             32 BANK0      3     3      0
                            _isdigit
 ---------------------------------------------------------------------------------
 (6) _strtol                                              16    10      6    2703
                                             41 BANK0     16    10      6
                             ___lmul
                            _isalpha
                            _isdigit
                            _isspace
                            _toupper
 ---------------------------------------------------------------------------------
 (7) _toupper                                              1     1      0      96
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _isspace                                              3     3      0     130
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (7) _isalpha                                              3     3      0     229
                                             32 BANK0      3     3      0
                            _isupper
 ---------------------------------------------------------------------------------
 (7) _isupper                                              3     3      0      99
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               6     2      4     525
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) _putUSBUSART                                          3     0      3    2350
                                             35 BANK0      3     0      3
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (6) _itoa                                                 8     2      6    3910
                                             51 BANK0      8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _utoa                                                 9     3      6    3365
                                             42 BANK0      9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (6) ___lwmod                                              5     1      4     440
                                             29 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (6) _getsUSBUSART                                         4     1      3    2543
                                             36 BANK0      4     1      3
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (7) _USBTransferOnePacket                                 7     3      4    2031
                                             29 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (6) _atoi                                                 7     5      2    9683
                                             35 BANK0      7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (8) _isdigit                                              3     3      0      99
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _Rtcm_MainTask                                        1     1      0    9096
                   _Rtcc_AlarmConfig
                       _Rtcc_LockRtc
                     _Rtcc_RtcConfig
                  _Rtcc_SetRtcStatus
                     _Rtcc_UnlockRtc
                   _Rtcm_GetRtccDate
                   _Rtcm_SetRtccDate
 ---------------------------------------------------------------------------------
 (4) _Rtcm_SetRtccDate                                     8     0      8    7818
                                             41 BANK0      8     0      8
                       _Rtcc_LockRtc
                  _Rtcc_SetRtccValue
                     _Rtcc_UnlockRtc
 ---------------------------------------------------------------------------------
 (5) _Rtcc_UnlockRtc                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _Rtcc_SetRtccValue                                    4     3      1    7479
                                             37 BANK0      4     3      1
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4    3137
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4    3149
                                             29 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (5) _Rtcc_LockRtc                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _Rtcm_GetRtccDate                                    17     9      8     729
                                             33 BANK0     17     9      8
                  _Rtcc_GetRtccValue
 ---------------------------------------------------------------------------------
 (5) _Rtcc_GetRtccValue                                    4     4      0     473
                                             29 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (4) _Rtcc_SetRtcStatus                                    1     1      0      31
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Rtcc_RtcConfig                                       3     1      2     290
                                             30 BANK0      3     1      2
                        _RtccIrqInit
 ---------------------------------------------------------------------------------
 (5) _RtccIrqInit                                          1     1      0      31
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Rtcc_AlarmConfig                                     3     1      2     228
                                             29 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (3) _MyApp_Task                                           1     1      0  379859
                       _Eeprom_Reset
                _Led_SetLedBlinkTime
                          _addCmdFsm
                     _cmdVisualEffet
                          _delCmdFsm
                          _detectCmd
                            _initFsm
                      _triggerCmdFsm
                _triggerVisualEffect
 ---------------------------------------------------------------------------------
 (4) _triggerVisualEffect                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _triggerCmdFsm                                        6     4      2   74374
                                              5 BANK1      6     4      2
                     _isMasterNumber
                   _isNumberInMemory
                    _secondsAppTimer
                       _triggerRelay
 ---------------------------------------------------------------------------------
 (5) _triggerRelay                                         2     2      0    4067
                                             37 BANK0      2     2      0
                  _I2cSlv_SendI2cMsg
 ---------------------------------------------------------------------------------
 (4) _initFsm                                              1     1      0   85008
                                              3 BANK1      1     1      0
                    _GetCallerNumber
                   _Led_SetLedStatus
                         _initEeprom
                      _initGprsModem
                 _saveNumberInMemory
                       _savePreamble
                      _waitSetupCall
 ---------------------------------------------------------------------------------
 (5) _waitSetupCall                                        1     1      0   17846
                                             51 BANK0      1     1      0
                   _Led_SetLedStatus
                       _getSetupCall
                    _secondsAppTimer
 ---------------------------------------------------------------------------------
 (6) _getSetupCall                                         1     1      0    5527
                                             35 BANK0      1     1      0
                  _Mdm_HangPhoneCall
                      _Mdm_IsRinging
 ---------------------------------------------------------------------------------
 (5) _savePreamble                                         0     0      0    9862
                       _Eeprom_Write
                       _initPreamble
 ---------------------------------------------------------------------------------
 (6) _initPreamble                                         2     0      2       0
                                             29 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) _initGprsModem                                        1     1      0   15786
                                             57 BANK0      1     1      0
                   _Mdm_SetSmsFormat
              _Uart_WriteConstString
                    _secondsAppTimer
 ---------------------------------------------------------------------------------
 (6) _Mdm_SetSmsFormat                                    22    22      0    1672
                                             35 BANK0     22    22      0
                   _Uart_WriteString
 ---------------------------------------------------------------------------------
 (5) _initEeprom                                           3     3      0   24954
                                              0 BANK1      3     3      0
                        _Eeprom_Read
 ---------------------------------------------------------------------------------
 (4) _detectCmd                                            1     1      0   35708
                                             53 BANK0      1     1      0
                    _GetCallerNumber
           _GetLastInteractionNumber
                     _Mdm_GetSmsData
                  _Mdm_HangPhoneCall
                      _Mdm_IsRinging
                  _Mdm_IsSmsReceived
                 _Mdm_RequestSmsData
                         _StringCopy
              _Uart_WriteConstString
                       _parseCommand
 ---------------------------------------------------------------------------------
 (5) _parseCommand                                        13    13      0    3986
                                             40 BANK0     13    13      0
                      _StringCompare
                      _isNumberValid
 ---------------------------------------------------------------------------------
 (5) _Mdm_RequestSmsData                                   0     0      0    2123
                        _GenerateEvt
 ---------------------------------------------------------------------------------
 (5) _Mdm_IsSmsReceived                                    1     1      0    2739
                                             33 BANK0      1     1      0
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (7) _Mdm_IsRinging                                        1     1      0    2739
                                             33 BANK0      1     1      0
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (7) _Mdm_HangPhoneCall                                    0     0      0    2751
              _Uart_WriteConstString
 ---------------------------------------------------------------------------------
 (5) _Mdm_GetSmsData                                       3     1      2    8061
                                             47 BANK0      3     1      2
                         _ReceiveEvt
                         _StringCopy
 ---------------------------------------------------------------------------------
 (5) _GetLastInteractionNumber                             2     0      2       0
                                             29 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) _GetCallerNumber                                      2     0      2    5331
                                             35 BANK0      2     0      2
                        _ClearBuffer
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (4) _delCmdFsm                                           23    17      6   69555
                                              5 BANK1     23    17      6
                     _isMasterNumber
                   _isNumberInMemory
                 _saveNumberInMemory
 ---------------------------------------------------------------------------------
 (4) _cmdVisualEffet                                       2     2      0   12350
                                             51 BANK0      2     2      0
                   _Led_SetLedStatus
                    _secondsAppTimer
 ---------------------------------------------------------------------------------
 (5) _secondsAppTimer                                      9     6      3   11326
                                             42 BANK0      9     6      3
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) _addCmdFsm                                           10     4      6   95545
                                              5 BANK1     10     4      6
                      _findEmptySpot
                     _isMasterNumber
                   _isNumberInMemory
                 _saveNumberInMemory
 ---------------------------------------------------------------------------------
 (5) _saveNumberInMemory                                   3     1      2   10236
                                             54 BANK0      3     1      2
                       _Eeprom_Write
                    _GetCallerNumber (ARG)
 ---------------------------------------------------------------------------------
 (6) _Eeprom_Write                                         7     4      3    9862
                                             47 BANK0      7     4      3
                  _I2cSlv_SendI2cMsg
                         _StringCopy
                       _initPreamble (ARG)
 ---------------------------------------------------------------------------------
 (5) _isNumberInMemory                                     5     1      4   29454
                                              0 BANK1      5     1      4
                        _Eeprom_Read
                      _StringCompare
                      _isNumberValid
 ---------------------------------------------------------------------------------
 (5) _isMasterNumber                                       3     1      2   29117
                                              0 BANK1      3     1      2
                        _Eeprom_Read
                      _StringCompare
                      _isNumberValid
 ---------------------------------------------------------------------------------
 (5) _findEmptySpot                                        3     1      2   25863
                                              0 BANK1      3     1      2
                        _Eeprom_Read
                      _isNumberValid
 ---------------------------------------------------------------------------------
 (6) _isNumberValid                                        5     3      2     786
                                             29 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (6) _Eeprom_Read                                          7     4      3   24874
                                             73 BANK0      7     4      3
                _I2cSlv_QueryI2cData
 ---------------------------------------------------------------------------------
 (7) _I2cSlv_QueryI2cData                                  7     0      7   23807
                                             66 BANK0      7     0      7
               _I2cSlv_I2cReadMsgSts
               _I2cSlv_ReceiveI2cMsg
                  _I2cSlv_SendI2cMsg
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _OsTmr_Wait
 ---------------------------------------------------------------------------------
 (6) _OsTmr_Wait                                           7     1      6    7061
                                             59 BANK0      7     1      6
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
 ---------------------------------------------------------------------------------
 (6) _I2cSlv_ReceiveI2cMsg                                 5     1      4    2856
                                             32 BANK0      5     1      4
                        _GenerateEvt
 ---------------------------------------------------------------------------------
 (6) _I2cSlv_I2cReadMsgSts                                 1     1      0    2739
                                             33 BANK0      1     1      0
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (4) _Led_SetLedBlinkTime                                  5     1      4     633
                                             29 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (4) _Eeprom_Reset                                         1     1      0    6686
                                             37 BANK0      1     1      0
                        _ClearBuffer
                  _I2cSlv_SendI2cMsg
 ---------------------------------------------------------------------------------
 (6) _I2cSlv_SendI2cMsg                                    5     1      4    4023
                                             32 BANK0      5     1      4
                        _GenerateEvt
 ---------------------------------------------------------------------------------
 (3) _Mdm_MainTask                                         1     1      0   73780
                         _CheckModem
                     _ConfigureModem
                           _GetSmsSm
                     _ModemEvtParser
                          _SendSmsSm
                        _TurnOnModem
                      _UartSetConfig
                _Uart_InitUartModule
 ---------------------------------------------------------------------------------
 (4) _UartSetConfig                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _TurnOnModem                                          0     0      0    2123
                        _GenerateEvt
 ---------------------------------------------------------------------------------
 (4) _SendSmsSm                                           52    52      0   16197
                                             59 BANK0      2     2      0
                                              0 BANK1     50    50      0
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _ReceiveEvt
                         _StringCopy
                _Uart_WriteStringLen
 ---------------------------------------------------------------------------------
 (5) _Uart_WriteStringLen                                  5     2      3    1540
                                             32 BANK0      5     2      3
                 _UartTxBufferStatus
                      _UartWriteByte
 ---------------------------------------------------------------------------------
 (4) _ModemEvtParser                                      26    26      0   13450
                                             47 BANK0     26    26      0
                        _GenerateEvt
                         _ReceiveEvt
                      _StringCompare
                         _StringCopy
                 _Uart_ClearRxBuffer
 ---------------------------------------------------------------------------------
 (5) _Uart_ClearRxBuffer                                   2     2      0     102
                                             29 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (6) _StringCompare                                       11     5      6    3040
                                             29 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (4) _GetSmsSm                                             0     0      0   15392
                        _ClearBuffer
                        _GenerateEvt
                         _ReceiveEvt
                         _StringCopy
              _Uart_WriteConstString
 ---------------------------------------------------------------------------------
 (4) _ConfigureModem                                       0     0      0    8747
                        _GenerateEvt
                   _UartSetConfigLow
                _Uart_InitUartModule
              _Uart_WriteConstString
 ---------------------------------------------------------------------------------
 (4) _Uart_InitUartModule                                  5     3      2    3873
                                             61 BANK0      5     3      2
                    _SetUartBaudRate
 ---------------------------------------------------------------------------------
 (5) _SetUartBaudRate                                      7     5      2    2735
                                             54 BANK0      7     5      2
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (5) ___lmul                                              12     4      8     844
                                             29 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (5) _UartSetConfigLow                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _CheckModem                                           0     0      0   13998
                        _GenerateEvt
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _ReceiveEvt
              _Uart_WriteConstString
 ---------------------------------------------------------------------------------
 (3) _Mdm_DrvMainFn                                        1     1      0    2702
                           _MdmCntSm
 ---------------------------------------------------------------------------------
 (4) _MdmCntSm                                             0     0      0    2702
                 _InitModemInterface
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (5) _InitModemInterface                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _MdmHttp_MainTask                                     1     1      0   43139
                      _HttpGetMethod
                    _InitGprsNetwork
 ---------------------------------------------------------------------------------
 (4) _InitGprsNetwork                                     56    53      3   21606
                                             59 BANK0      5     2      3
                                              0 BANK1     51    51      0
                        _ClearBuffer
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _ReceiveEvt
                         _StringCopy
              _Uart_WriteConstString
                   _Uart_WriteString
 ---------------------------------------------------------------------------------
 (4) _HttpGetMethod                                      207   205      2   21533
                                             59 BANK0      6     4      2
                                              0 BANK1    201   201      0
                        _ClearBuffer
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _ReceiveEvt
                         _StringCopy
              _Uart_WriteConstString
                   _Uart_WriteString
 ---------------------------------------------------------------------------------
 (7) _Uart_WriteString                                     3     1      2    1191
                                             32 BANK0      3     1      2
                 _UartTxBufferStatus
                      _UartWriteByte
 ---------------------------------------------------------------------------------
 (8) _Uart_WriteConstString                                3     1      2    2751
                                             32 BANK0      3     1      2
                 _UartTxBufferStatus
                      _UartWriteByte
 ---------------------------------------------------------------------------------
 (9) _UartWriteByte                                        2     1      1     436
                                             29 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (9) _UartTxBufferStatus                                   3     3      0     108
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (7) _StringCopy                                          10     4      6    5187
                                             37 BANK0     10     4      6
                    _GetCallerNumber (ARG)
           _GetLastInteractionNumber (ARG)
 ---------------------------------------------------------------------------------
 (7) _OsTmr_StartTimer                                     6     0      6    4315
                                             33 BANK0      6     0      6
                   _GetOsTickCounter
 ---------------------------------------------------------------------------------
 (7) _OsTmr_GetTimerStatus                                 6     4      2    2107
                                             53 BANK0      6     4      2
                     _GetElapsedTime
 ---------------------------------------------------------------------------------
 (8) _GetElapsedTime                                      20    16      4     538
                                             33 BANK0     20    16      4
                   _GetOsTickCounter
 ---------------------------------------------------------------------------------
 (8) _GetOsTickCounter                                     4     0      4       0
                                             29 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (6) _ClearBuffer                                          6     2      4    2629
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) _Led_MainTask                                         2     2      0    7139
                                             58 BANK0      1     1      0
                    _LedStateMachine
 ---------------------------------------------------------------------------------
 (4) _LedStateMachine                                     11     3      8    7139
                                             47 BANK0     11     3      8
               _LedBlinkStateMachine
               _LedPulseStateMachine
                   _Led_SetLedStatus
 ---------------------------------------------------------------------------------
 (5) _LedPulseStateMachine                                 5     2      3    2773
                                             42 BANK0      5     2      3
                   _Led_SetLedStatus
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (6) _Led_SetLedStatus                                     2     1      1     956
                                             29 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (5) _LedBlinkStateMachine                                 4     2      2    1837
                                             42 BANK0      4     2      2
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (6) ___lwdiv                                              7     3      4    1237
                                             35 BANK0      7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) _I2cSlv_MainTask                                      1     1      0   16818
                       _I2cSendMsgSm
                       _I2cSetConfig
                  _I2c_InitI2cModule
                  _OsAlrm_SetOsAlarm
 ---------------------------------------------------------------------------------
 (4) _OsAlrm_SetOsAlarm                                    8     0      8    9436
                                             35 BANK0      8     0      8
                             ___wmul
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4    8938
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) _I2c_InitI2cModule                                    4     2      2    1695
                                             66 BANK0      4     2      2
                        _SetBaudRate
 ---------------------------------------------------------------------------------
 (5) _SetBaudRate                                         12     4      8    1467
                                             54 BANK0     12     4      8
                            ___lldiv
 ---------------------------------------------------------------------------------
 (5) ___lldiv                                             13     5      8    1197
                                             41 BANK0     13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (4) _I2cSetConfig                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2cSendMsgSm                                         0     0      0    5687
                       _I2c_ReadData
                      _I2c_WriteData
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (7) _ReceiveEvt                                           4     2      2    2702
                                             29 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (5) _I2c_WriteData                                        4     2      2     414
                                             30 BANK0      4     2      2
                     _CheckAckStatus
                      _CheckTxStatus
                     _StartCondition
                      _StopCondition
                          _WriteByte
 ---------------------------------------------------------------------------------
 (5) _I2c_ReadData                                         4     2      2    2571
                                             32 BANK0      4     2      2
                     _CheckAckStatus
                      _CheckTxStatus
                     _EnableReceiver
                        _GenerateEvt
                           _ReadByte
                       _SetAckStatus
                     _StartCondition
                      _StopCondition
                          _WriteByte
 ---------------------------------------------------------------------------------
 (6) _WriteByte                                            1     1      0      31
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _StopCondition                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _StartCondition                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _SetAckStatus                                         1     1      0      31
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _ReadByte                                             1     1      0      34
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _GenerateEvt                                          3     1      2    2123
                                             29 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (6) _EnableReceiver                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _CheckTxStatus                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _CheckAckStatus                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _LowPriorityIsr                                     21    21      0    1029
                                              8 BANK0     21    21      0
                        _Tmr_Tmr2Isr
 ---------------------------------------------------------------------------------
 (14) _Tmr_Tmr2Isr                                         0     0      0    1029
                   Absolute function *
                 _Sch_SchmIntService *
 ---------------------------------------------------------------------------------
 (15) _Sch_SchmIntService                                  0     0      0    1029
             _OsAlrm_ProcessOsAlarms
                   _UpdateOsCounters
                      _UpdateSchFlag
 ---------------------------------------------------------------------------------
 (16) _UpdateSchFlag                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _UpdateOsCounters                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _OsAlrm_ProcessOsAlarms                             10    10      0    1029
                                             32 COMRAM     2     2      0
                                              0 BANK0      8     8      0
                         _I2cDummyTx *
                _OsAlrm_ClearOsAlarm
                           i1___wmul
 ---------------------------------------------------------------------------------
 (17) i1___wmul                                            6     2      4     469
                                             24 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (17) _OsAlrm_ClearOsAlarm                                 1     1      0      66
                                             24 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (17) _I2cDummyTx                                          0     0      0     209
                i1_I2cSlv_SendI2cMsg
 ---------------------------------------------------------------------------------
 (18) i1_I2cSlv_SendI2cMsg                                 5     1      4     209
                                             27 COMRAM     5     1      4
                      i1_GenerateEvt
 ---------------------------------------------------------------------------------
 (19) i1_GenerateEvt                                       3     1      2      56
                                             24 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (20) _HighPriorityIsr                                    18    18      0     332
                                              6 COMRAM    18    18      0
                        _Mcu_Int0Isr
                        _Mcu_Int1Isr
                        _Rtcc_RtcIsr
                    _Uart_Uart1RxIsr
 ---------------------------------------------------------------------------------
 (21) _Uart_Uart1RxIsr                                     0     0      0     332
         _Uart_MdmGsmGprsReadService
 ---------------------------------------------------------------------------------
 (22) _Uart_MdmGsmGprsReadService                          4     3      1     332
                                              3 COMRAM     3     2      1
                      i2_GenerateEvt
 ---------------------------------------------------------------------------------
 (23) i2_GenerateEvt                                       3     1      2     108
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (21) _Rtcc_RtcIsr                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (21) _Mcu_Int1Isr                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (21) _Mcu_Int0Isr                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 23
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Sch_MainScheduler
     _InitializeTasks
       _I2cSlv_MainTask *
         _I2cSendMsgSm
           _I2c_ReadData
             _CheckAckStatus
             _CheckTxStatus
             _EnableReceiver
             _GenerateEvt
             _ReadByte
             _SetAckStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _I2c_WriteData
             _CheckAckStatus
             _CheckTxStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _ReceiveEvt
         _I2cSetConfig
         _I2c_InitI2cModule
           _SetBaudRate
             ___lldiv
               ___lmul (ARG)
         _OsAlrm_SetOsAlarm
           ___wmul
       _Led_MainTask *
         _LedStateMachine
           _LedBlinkStateMachine
             ___lwdiv
               ___wmul (ARG)
           _LedPulseStateMachine
             _Led_SetLedStatus
             ___lwdiv
               ___wmul (ARG)
           _Led_SetLedStatus
       _MdmHttp_MainTask *
         _HttpGetMethod
           _ClearBuffer
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _Uart_WriteString
             _UartTxBufferStatus
             _UartWriteByte
         _InitGprsNetwork
           _ClearBuffer
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _Uart_WriteString
             _UartTxBufferStatus
             _UartWriteByte
       _Mdm_DrvMainFn *
         _MdmCntSm
           _InitModemInterface
           _ReceiveEvt
       _Mdm_MainTask *
         _CheckModem
           _GenerateEvt
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _ConfigureModem
           _GenerateEvt
           _UartSetConfigLow
           _Uart_InitUartModule
             _SetUartBaudRate
               ___lldiv
                 ___lmul (ARG)
               ___lmul
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _GetSmsSm
           _ClearBuffer
           _GenerateEvt
           _ReceiveEvt
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _ModemEvtParser
           _GenerateEvt
           _ReceiveEvt
           _StringCompare
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_ClearRxBuffer
         _SendSmsSm
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_WriteStringLen
             _UartTxBufferStatus
             _UartWriteByte
         _TurnOnModem
           _GenerateEvt
         _UartSetConfig
         _Uart_InitUartModule
           _SetUartBaudRate
             ___lldiv
               ___lmul (ARG)
             ___lmul
       _MyApp_Task *
         _Eeprom_Reset
           _ClearBuffer
           _I2cSlv_SendI2cMsg
             _GenerateEvt
         _Led_SetLedBlinkTime
         _addCmdFsm
           _findEmptySpot
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
             _isNumberValid
           _isMasterNumber
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
             _StringCompare
             _isNumberValid
           _isNumberInMemory
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
             _StringCompare
             _isNumberValid
           _saveNumberInMemory
             _Eeprom_Write
               _I2cSlv_SendI2cMsg
                 _GenerateEvt
               _StringCopy
                 _GetCallerNumber (ARG)
                   _ClearBuffer
                   _ReceiveEvt
                 _GetLastInteractionNumber (ARG)
               _initPreamble (ARG)
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
         _cmdVisualEffet
           _Led_SetLedStatus
           _secondsAppTimer
             ___lwdiv
               ___wmul (ARG)
             ___wmul
         _delCmdFsm
           _isMasterNumber
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
             _StringCompare
             _isNumberValid
           _isNumberInMemory
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
             _StringCompare
             _isNumberValid
           _saveNumberInMemory
             _Eeprom_Write
               _I2cSlv_SendI2cMsg
                 _GenerateEvt
               _StringCopy
                 _GetCallerNumber (ARG)
                   _ClearBuffer
                   _ReceiveEvt
                 _GetLastInteractionNumber (ARG)
               _initPreamble (ARG)
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
         _detectCmd
           _GetCallerNumber
             _ClearBuffer
             _ReceiveEvt
           _GetLastInteractionNumber
           _Mdm_GetSmsData
             _ReceiveEvt
             _StringCopy
               _GetCallerNumber (ARG)
                 _ClearBuffer
                 _ReceiveEvt
               _GetLastInteractionNumber (ARG)
           _Mdm_HangPhoneCall
             _Uart_WriteConstString
               _UartTxBufferStatus
               _UartWriteByte
           _Mdm_IsRinging
             _ReceiveEvt
           _Mdm_IsSmsReceived
             _ReceiveEvt
           _Mdm_RequestSmsData
             _GenerateEvt
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _parseCommand
             _StringCompare
             _isNumberValid
         _initFsm
           _GetCallerNumber
             _ClearBuffer
             _ReceiveEvt
           _Led_SetLedStatus
           _initEeprom
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
           _initGprsModem
             _Mdm_SetSmsFormat
               _Uart_WriteString
                 _UartTxBufferStatus
                 _UartWriteByte
             _Uart_WriteConstString
               _UartTxBufferStatus
               _UartWriteByte
             _secondsAppTimer
               ___lwdiv
                 ___wmul (ARG)
               ___wmul
           _saveNumberInMemory
             _Eeprom_Write
               _I2cSlv_SendI2cMsg
                 _GenerateEvt
               _StringCopy
                 _GetCallerNumber (ARG)
                   _ClearBuffer
                   _ReceiveEvt
                 _GetLastInteractionNumber (ARG)
               _initPreamble (ARG)
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
           _savePreamble
             _Eeprom_Write
               _I2cSlv_SendI2cMsg
                 _GenerateEvt
               _StringCopy
                 _GetCallerNumber (ARG)
                   _ClearBuffer
                   _ReceiveEvt
                 _GetLastInteractionNumber (ARG)
               _initPreamble (ARG)
             _initPreamble
           _waitSetupCall
             _Led_SetLedStatus
             _getSetupCall
               _Mdm_HangPhoneCall
                 _Uart_WriteConstString
                   _UartTxBufferStatus
                   _UartWriteByte
               _Mdm_IsRinging
                 _ReceiveEvt
             _secondsAppTimer
               ___lwdiv
                 ___wmul (ARG)
               ___wmul
         _triggerCmdFsm
           _isMasterNumber
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
             _StringCompare
             _isNumberValid
           _isNumberInMemory
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
             _StringCompare
             _isNumberValid
           _secondsAppTimer
             ___lwdiv
               ___wmul (ARG)
             ___wmul
           _triggerRelay
             _I2cSlv_SendI2cMsg
               _GenerateEvt
         _triggerVisualEffect
       _Rtcm_MainTask *
         _Rtcc_AlarmConfig
         _Rtcc_LockRtc
         _Rtcc_RtcConfig
           _RtccIrqInit
         _Rtcc_SetRtcStatus
         _Rtcc_UnlockRtc
         _Rtcm_GetRtccDate
           _Rtcc_GetRtccValue
         _Rtcm_SetRtccDate
           _Rtcc_LockRtc
           _Rtcc_SetRtccValue
             ___awdiv
             ___awmod
           _Rtcc_UnlockRtc
       _Term_MainTask *
         _Term_MainSm
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _Terminal
             _I2cSlv_I2cReadMsgSts
               _ReceiveEvt
             _I2cSlv_ReceiveI2cMsg
               _GenerateEvt
             _I2cSlv_SendI2cMsg
               _GenerateEvt
             _OsTmr_Wait
               _OsTmr_GetTimerStatus
                 _GetElapsedTime
                   _GetOsTickCounter
               _OsTmr_StartTimer
                 _GetOsTickCounter
             _atoi
               ___wmul
               _isdigit
             _getsUSBUSART
               _USBTransferOnePacket
             _itoa
               _utoa
                 ___lwdiv
                   ___wmul (ARG)
                 ___lwmod
             _putUSBUSART
               _strlen (ARG)
             _strcpy
             _strtol
               ___lmul
               _isalpha
                 _isupper
               _isdigit
               _isspace
               _toupper
             _xtoi
               _isdigit
               _isspace
               _isupper
               _isxdigit
                 _isdigit
               _tolower
           _memset
           _putUSBUSART
             _strlen (ARG)
           _sprintf
           _strcat
           _strcpy
           _strlen
           _utoa
             ___lwdiv
               ___wmul (ARG)
             ___lwmod
       _UsbDevice_MainTask *
         _CDCTxService
           _USBTransferOnePacket
         _USBDeviceInit
           _memset
         _USBDeviceTasks
           _USBCtrlEPAllowStatusStage
           _USBCtrlEPService
             _USBCtrlTrfInHandler
               _USBCtrlTrfTxService
             _USBCtrlTrfOutHandler
               _USBCtrlTrfRxService
                 _USBCtrlEPAllowStatusStage
             _USBCtrlTrfSetupHandler
               _USBCheckStdRequest
                 _USBStdFeatureReqHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                 _USBStdGetDscHandler
                 _USBStdGetStatusHandler
                 _USBStdSetCfgHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                   _memset
                 _USER_USB_CALLBACK_EVENT_HANDLER
                   _CDCInitEP
                     _USBEnableEndpoint
                       _USBConfigureEndpoint
                     _USBTransferOnePacket
                   _USBCheckCDCRequest
               _USBCtrlEPServiceComplete
                 _USBCtrlEPAllowDataStage
                   _USBCtrlTrfTxService
                 _USBCtrlEPAllowStatusStage
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   _USBTransferOnePacket
                 _USBCheckCDCRequest
             _memcpy
           _USBDeviceInit
             _memset
           _USBIncrement1msInternalTimers
           _USBStallHandler
           _USBSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USBWakeFromSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USER_USB_CALLBACK_EVENT_HANDLER
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBTransferOnePacket
             _USBCheckCDCRequest
       _Wdg_MainTask *
         _Mcu_ClearWdg
         _Mcu_SetWdgSts
     _ScheduleTasks
       _I2cSlv_MainTask *
         _I2cSendMsgSm
           _I2c_ReadData
             _CheckAckStatus
             _CheckTxStatus
             _EnableReceiver
             _GenerateEvt
             _ReadByte
             _SetAckStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _I2c_WriteData
             _CheckAckStatus
             _CheckTxStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _ReceiveEvt
         _I2cSetConfig
         _I2c_InitI2cModule
           _SetBaudRate
             ___lldiv
               ___lmul (ARG)
         _OsAlrm_SetOsAlarm
           ___wmul
       _Led_MainTask *
         _LedStateMachine
           _LedBlinkStateMachine
             ___lwdiv
               ___wmul (ARG)
           _LedPulseStateMachine
             _Led_SetLedStatus
             ___lwdiv
               ___wmul (ARG)
           _Led_SetLedStatus
       _MdmHttp_MainTask *
         _HttpGetMethod
           _ClearBuffer
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _Uart_WriteString
             _UartTxBufferStatus
             _UartWriteByte
         _InitGprsNetwork
           _ClearBuffer
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _Uart_WriteString
             _UartTxBufferStatus
             _UartWriteByte
       _Mdm_DrvMainFn *
         _MdmCntSm
           _InitModemInterface
           _ReceiveEvt
       _Mdm_MainTask *
         _CheckModem
           _GenerateEvt
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _ConfigureModem
           _GenerateEvt
           _UartSetConfigLow
           _Uart_InitUartModule
             _SetUartBaudRate
               ___lldiv
                 ___lmul (ARG)
               ___lmul
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _GetSmsSm
           _ClearBuffer
           _GenerateEvt
           _ReceiveEvt
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _ModemEvtParser
           _GenerateEvt
           _ReceiveEvt
           _StringCompare
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_ClearRxBuffer
         _SendSmsSm
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_WriteStringLen
             _UartTxBufferStatus
             _UartWriteByte
         _TurnOnModem
           _GenerateEvt
         _UartSetConfig
         _Uart_InitUartModule
           _SetUartBaudRate
             ___lldiv
               ___lmul (ARG)
             ___lmul
       _MyApp_Task *
         _Eeprom_Reset
           _ClearBuffer
           _I2cSlv_SendI2cMsg
             _GenerateEvt
         _Led_SetLedBlinkTime
         _addCmdFsm
           _findEmptySpot
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
             _isNumberValid
           _isMasterNumber
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
             _StringCompare
             _isNumberValid
           _isNumberInMemory
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
             _StringCompare
             _isNumberValid
           _saveNumberInMemory
             _Eeprom_Write
               _I2cSlv_SendI2cMsg
                 _GenerateEvt
               _StringCopy
                 _GetCallerNumber (ARG)
                   _ClearBuffer
                   _ReceiveEvt
                 _GetLastInteractionNumber (ARG)
               _initPreamble (ARG)
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
         _cmdVisualEffet
           _Led_SetLedStatus
           _secondsAppTimer
             ___lwdiv
               ___wmul (ARG)
             ___wmul
         _delCmdFsm
           _isMasterNumber
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
             _StringCompare
             _isNumberValid
           _isNumberInMemory
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
             _StringCompare
             _isNumberValid
           _saveNumberInMemory
             _Eeprom_Write
               _I2cSlv_SendI2cMsg
                 _GenerateEvt
               _StringCopy
                 _GetCallerNumber (ARG)
                   _ClearBuffer
                   _ReceiveEvt
                 _GetLastInteractionNumber (ARG)
               _initPreamble (ARG)
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
         _detectCmd
           _GetCallerNumber
             _ClearBuffer
             _ReceiveEvt
           _GetLastInteractionNumber
           _Mdm_GetSmsData
             _ReceiveEvt
             _StringCopy
               _GetCallerNumber (ARG)
                 _ClearBuffer
                 _ReceiveEvt
               _GetLastInteractionNumber (ARG)
           _Mdm_HangPhoneCall
             _Uart_WriteConstString
               _UartTxBufferStatus
               _UartWriteByte
           _Mdm_IsRinging
             _ReceiveEvt
           _Mdm_IsSmsReceived
             _ReceiveEvt
           _Mdm_RequestSmsData
             _GenerateEvt
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _parseCommand
             _StringCompare
             _isNumberValid
         _initFsm
           _GetCallerNumber
             _ClearBuffer
             _ReceiveEvt
           _Led_SetLedStatus
           _initEeprom
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
           _initGprsModem
             _Mdm_SetSmsFormat
               _Uart_WriteString
                 _UartTxBufferStatus
                 _UartWriteByte
             _Uart_WriteConstString
               _UartTxBufferStatus
               _UartWriteByte
             _secondsAppTimer
               ___lwdiv
                 ___wmul (ARG)
               ___wmul
           _saveNumberInMemory
             _Eeprom_Write
               _I2cSlv_SendI2cMsg
                 _GenerateEvt
               _StringCopy
                 _GetCallerNumber (ARG)
                   _ClearBuffer
                   _ReceiveEvt
                 _GetLastInteractionNumber (ARG)
               _initPreamble (ARG)
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
           _savePreamble
             _Eeprom_Write
               _I2cSlv_SendI2cMsg
                 _GenerateEvt
               _StringCopy
                 _GetCallerNumber (ARG)
                   _ClearBuffer
                   _ReceiveEvt
                 _GetLastInteractionNumber (ARG)
               _initPreamble (ARG)
             _initPreamble
           _waitSetupCall
             _Led_SetLedStatus
             _getSetupCall
               _Mdm_HangPhoneCall
                 _Uart_WriteConstString
                   _UartTxBufferStatus
                   _UartWriteByte
               _Mdm_IsRinging
                 _ReceiveEvt
             _secondsAppTimer
               ___lwdiv
                 ___wmul (ARG)
               ___wmul
         _triggerCmdFsm
           _isMasterNumber
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
             _StringCompare
             _isNumberValid
           _isNumberInMemory
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
             _StringCompare
             _isNumberValid
           _secondsAppTimer
             ___lwdiv
               ___wmul (ARG)
             ___wmul
           _triggerRelay
             _I2cSlv_SendI2cMsg
               _GenerateEvt
         _triggerVisualEffect
       _Rtcm_MainTask *
         _Rtcc_AlarmConfig
         _Rtcc_LockRtc
         _Rtcc_RtcConfig
           _RtccIrqInit
         _Rtcc_SetRtcStatus
         _Rtcc_UnlockRtc
         _Rtcm_GetRtccDate
           _Rtcc_GetRtccValue
         _Rtcm_SetRtccDate
           _Rtcc_LockRtc
           _Rtcc_SetRtccValue
             ___awdiv
             ___awmod
           _Rtcc_UnlockRtc
       _Term_MainTask *
         _Term_MainSm
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _Terminal
             _I2cSlv_I2cReadMsgSts
               _ReceiveEvt
             _I2cSlv_ReceiveI2cMsg
               _GenerateEvt
             _I2cSlv_SendI2cMsg
               _GenerateEvt
             _OsTmr_Wait
               _OsTmr_GetTimerStatus
                 _GetElapsedTime
                   _GetOsTickCounter
               _OsTmr_StartTimer
                 _GetOsTickCounter
             _atoi
               ___wmul
               _isdigit
             _getsUSBUSART
               _USBTransferOnePacket
             _itoa
               _utoa
                 ___lwdiv
                   ___wmul (ARG)
                 ___lwmod
             _putUSBUSART
               _strlen (ARG)
             _strcpy
             _strtol
               ___lmul
               _isalpha
                 _isupper
               _isdigit
               _isspace
               _toupper
             _xtoi
               _isdigit
               _isspace
               _isupper
               _isxdigit
                 _isdigit
               _tolower
           _memset
           _putUSBUSART
             _strlen (ARG)
           _sprintf
           _strcat
           _strcpy
           _strlen
           _utoa
             ___lwdiv
               ___wmul (ARG)
             ___lwmod
       _UsbDevice_MainTask *
         _CDCTxService
           _USBTransferOnePacket
         _USBDeviceInit
           _memset
         _USBDeviceTasks
           _USBCtrlEPAllowStatusStage
           _USBCtrlEPService
             _USBCtrlTrfInHandler
               _USBCtrlTrfTxService
             _USBCtrlTrfOutHandler
               _USBCtrlTrfRxService
                 _USBCtrlEPAllowStatusStage
             _USBCtrlTrfSetupHandler
               _USBCheckStdRequest
                 _USBStdFeatureReqHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                 _USBStdGetDscHandler
                 _USBStdGetStatusHandler
                 _USBStdSetCfgHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                   _memset
                 _USER_USB_CALLBACK_EVENT_HANDLER
                   _CDCInitEP
                     _USBEnableEndpoint
                       _USBConfigureEndpoint
                     _USBTransferOnePacket
                   _USBCheckCDCRequest
               _USBCtrlEPServiceComplete
                 _USBCtrlEPAllowDataStage
                   _USBCtrlTrfTxService
                 _USBCtrlEPAllowStatusStage
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   _USBTransferOnePacket
                 _USBCheckCDCRequest
             _memcpy
           _USBDeviceInit
             _memset
           _USBIncrement1msInternalTimers
           _USBStallHandler
           _USBSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USBWakeFromSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USER_USB_CALLBACK_EVENT_HANDLER
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBTransferOnePacket
             _USBCheckCDCRequest
       _Wdg_MainTask *
         _Mcu_ClearWdg
         _Mcu_SetWdgSts
   _SystemInit
     _InitSchedTimer
       _Tmr_TmrBConfig
         _TmrBInit
         _Tmr_StartTmr
         _Tmr_TmrBIrqSet
         _Tmr_TmrBPrSet
           ___lldiv
             ___lmul (ARG)
           ___lmul
     _Irq_InitIntController
     _Mcu_ConfigExtInt
     _Mcu_StartSystemPll
     _Pm_DsReleasePinControl
     _Tmr_RegisterTmr2IsrCallback

 _LowPriorityIsr (ROOT)
   _Tmr_Tmr2Isr
     Absolute function(Fake) *
     _Sch_SchmIntService *
       _OsAlrm_ProcessOsAlarms
         _I2cDummyTx *
           i1_I2cSlv_SendI2cMsg
             i1_GenerateEvt
         _OsAlrm_ClearOsAlarm *
         i1___wmul *
       _UpdateOsCounters
       _UpdateSchFlag

 _HighPriorityIsr (ROOT)
   _Mcu_Int0Isr
   _Mcu_Int1Isr
   _Rtcc_RtcIsr
   _Uart_Uart1RxIsr
     _Uart_MdmGsmGprsReadService
       i2_GenerateEvt

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMh            A80      0       0      35        0.0%
BIGRAMl            3FF      0     320      36       78.2%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100     C8      C8      26       78.1%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0      C8      24       78.1%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0      FA      22       97.7%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0      F6      20       96.1%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0      DC      18       85.9%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0      D6      16       83.6%
BITBANK3           100      0       0      11        0.0%
BANK3              100      4      FD      12       98.8%
BITBANK2           100      0       0       9        0.0%
BANK2              100     C9     100      10      100.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     C9     100       7      100.0%
BITBANK14           C0      0       0      33        0.0%
BANK14              C0      0       0      34        0.0%
BITBANK4            C0      0       0      13        0.0%
BANK4               C0      0      B0      14       91.7%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     50      83       5       81.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     22      41       1       69.1%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     9A3       8        0.0%
DATA                 0      0     CC3       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sat Apr  2 17:55:10 2022

                  __size_of_StringCompare 0052                  __end_of_UartSetConfigLow 5B42  
                 delCmdFsm@masterOpResult 0119                                _USB_SD_Ptr FC1C  
                          ??_getSetupCall 0083                 __size_of_Mdm_SetSmsFormat 0050  
                         ?_isMasterNumber 0100                      __size_of_TurnOnModem 004C  
                         ??_UpdateSchFlag 0019                        _Mcu_StartSystemPll 69DA  
             Mdm_SetSmsFormat@UartMessage 0084                     ?_LedPulseStateMachine 008A  
                            ___awdiv@sign 0082                    I2c_ReadData@ReadPacket 0080  
                                      bsr 000FE0                    ??_LedBlinkStateMachine 008C  
                           _USBDeviceInit 2590                       ___wmul@multiplicand 007F  
                        i1___wmul@product 001D                        __size_of_CDCInitEP 006C  
                      i2GenerateEvt@Event 0001                  InitSchedTimer@TmrBConfig 00A4  
                            __CFG_CP0$OFF 000000                OsAlrm_SetOsAlarm@OsAlarmId 0083  
    USER_USB_CALLBACK_EVENT_HANDLER@event 0089      USER_USB_CALLBACK_EVENT_HANDLER@pdata 008B  
                  I2c_ReadData@ReadStatus 0031                                       l202 21FA  
                                     l203 2202                                       l205 224A  
                                     l206 2270                                       l208 2278  
                                     l160 1FDE                                       l209 2298  
                                     l161 1EB4                                       l162 201C  
                                     l170 1F7C                                       l171 1F92  
                                     l163 1EC0                                       l315 496C  
                                     l323 4938                                       l164 1F00  
                                     l316 48E2                                       l420 4FAE  
                                     l500 4DC8                                       l173 1F96  
                                     l325 4952                                       l421 4FCE  
                                     l237 69E6                                       l174 1F9E  
                                     l166 1F0E                                       l318 48EC  
                                     l422 4FDA               __end_of_USBStdGetDscHandler 2D08  
                                     l510 4D9A                                       l502 4D5A  
                                     l175 1FAA                                       l167 1F36  
                                     l319 4912                                       l423 4FE6  
                                     l511 4D8A                                       l503 4D4A  
                                     l192 22A2                                       l176 1FC0  
                                     l416 4FFA                                       l424 4FF2  
                                     l512 4DAE                                       l504 4D70  
                                     l520 604C                                       l193 2182  
                                     l169 1F48                                       l417 4FA0  
                                     l441 17EC                                       l513 4D8E  
                                     l505 4D4E                                       l521 6018  
                                     l194 22DA                                       l418 5028  
                                     l442 15F4                                       l514 4D94  
                                     l506 4D54                                       l530 32FC  
                                     l195 218E                                       l179 1FCC  
                                     l419 4FA8                                       l523 6032  
                                     l531 3362                                       l196 21CE  
                                     l700 62B2                                       l444 163C  
                                     l532 3328                                       l445 1684  
                                     l541 6984                                       l198 21DC  
                                     l446 16CC                                       l199 21F0  
                                     l631 2A1E                                       l447 1714  
                                     l448 175C                                       l528 3368  
                                     l633 2A96                                       l625 29AA  
                                     l449 17A4                                       l529 3354  
                                     l538 6988                                       l546 4082  
                                     l651 5F9C                                       l707 63D6  
                                     l627 29CE                                       l715 634A  
                                     l539 6980                                       l547 409E  
                                     l660 5FC0                                       l652 5F96  
                                     l716 6320                                       l709 63F0  
                                     l629 29F6                                       l718 6338  
                                     l639 69CC                                       l832 6748  
                                     l844 4156                                       l668 0C44  
                                     _BDT 000400                                       l790 6A02  
                                     l855 5468                                       l775 2E2A  
                                     l864 51C0                                       l856 540E  
                                     l857 5482                                       l698 6296  
                                     l858 543E                                       l867 51D2  
                                     l982 215A                                       l983 2022  
                                     l985 2048                                       l987 2064  
                                     l988 209A                                       l989 210E  
                                     l998 2134                   secondsAppTimer@isCyclic 008C  
                                     _PR2 000FCB                                       _PR4 000F77  
                                     _UIE 000F36                                       _UIR 000F62  
                i2GenerateEvt@EventStatus 0003                   __end_of_HighPriorityIsr 478E  
                          ??_Mdm_MainTask 00A9                       ?_Mcu_StartSystemPll 0001  
                              _USBSuspend 65D0                              ___awmod@sign 0082  
                    USBStdSetCfgHandler@i 0091                                       prod 000FF3  
                                     tosl 000FFD                                       wreg 000FE8  
            I2cSlv_ReceiveI2cMsg@RxBuffer 0080                            _USBDeviceTasks 1BAA  
                            __CFG_IESO$ON 000000                            _USBDeviceState 00CE  
             Rtcc_AlarmConfig@AlarmConfig 007D              __end_of_I2cSlv_ReceiveI2cMsg 6314  
                           ??_Mcu_Int0Isr 0001                             ??_Mcu_Int1Isr 0001  
                   ??_USBCtrlTrfRxService 007D                            ??_getsUSBUSART 0087  
                USBEnableEndpoint@options 0085                                _CheckModem 2020  
           findEmptySpot@positionInMemory 0100             ??_Tmr_RegisterTmr2IsrCallback 007F  
                                    l1010 6060           InitGprsNetwork@GprsNetInitState 01E7  
                                    l1100 1B1A                                      l1101 1B66  
                                    l1013 607A                                      l1110 5EA0  
                             RiSm@Counter 02DD                                      l1031 3B68  
                                    l1111 5EB4                                      l1032 3BA2  
                                    l2000 5930                                      l1033 3BC8  
                                    l1009 6096                                      l1121 5F0C  
                                    l1027 3C02                                      l1035 3BE8  
                                    l1107 5EC6                                      l2100 2818  
                                    l1220 0DD0                                      l1028 3B56  
                                    l1052 1E86                                      l1060 1E58  
                                    l1108 5E8A                                      l2101 270C  
                                    l1053 1DA0                                      l2102 2790  
                                    l1222 10B0                                      l1230 0FB8  
                                    l1070 2BBC                                      l2006 5924  
                                    l2111 3516                                      l1231 0FBC  
                                    l1223 0DE8                                      l1071 2AB4  
                                    l1055 1EA0                                      l2112 345E  
                                    l1232 1000                                      l1224 0E22  
                                    l1056 1DD2                                      l1152 6884  
                                    l1136 6860                                      l2008 592A  
                                    l2113 3532                                      l2121 4A02  
                                    l1241 106E                                      l1225 0E96  
                                    l1129 5788                                      l2114 347C  
                                    l2122 4994                                      l1226 0E5E  
                                    l1074 2AD0                                      l1058 1E22  
                                    l2123 4A2A                                      l1219 1078  
                                    l1075 2AE8                                      l1091 1B80  
                                    l2116 34EC                                      l2124 49A4  
                                    l1252 0A54                                      l1260 073E  
                                    l1236 1010                                      l1228 0F3E  
                                    l1092 19FE                                      l1412 63C8  
                                    l1156 655A                                      l1404 5C32  
                                    l2220 525E                                      l2125 49B6  
                                    l1261 06F6                                      l1253 05F4  
                                    l1237 1054                                      l1229 0F78  
                                    l2045 5BBA                                      l2037 5CDC  
                                    l1405 5BF2                                      l2221 51E4  
                                    l2142 66DC                                      l2126 49D0  
                                    l1078 2B5A                                      l2046 5BEC  
                                    l1422 6970                                      l3110 38D4  
                                    l2134 3E82                                      l2143 66CA  
                                    l1255 0AB6                                      l1263 07F2  
                                    l1095 1A1A                                      l2151 5D28  
                                    l2039 5CE8                                      l3111 38CE  
                                    l1407 5C2C                                      l2135 3DCA  
                                    l2223 524A                                      l2128 49DE  
                                    l1280 09C4                                      l1272 092A  
                                    l1264 082C                                      l1256 060C  
                                    l1096 1AD0                                      l2152 5CF2  
                                    l1440 3CE0                                      l2145 66D0  
                                    l2129 49EC                                      l1281 0A32  
                                    l1273 096E                                      l1265 0856  
                                    l1257 0646                                      l1097 1AF4  
                                    l1417 630E                                      l1441 3C2A  
                                    l3113 3916                                      l2137 3DD8  
                                    l2146 66D6                                      l1266 0890  
                                    l1258 0680                                      l2250 5DFE  
                                    l2154 5D04                                      l1442 3CF6  
                                    l3130 5322                                      l2410 01E2  
                                    l1267 08CA                                      l1259 06BA  
                                    l2251 5E24                                      l2155 5D16  
                                    l1443 3C48                                      l1291 616E  
                                    l1268 090E                                      l3132 5340  
                                    l3116 3966                                      l2412 01AE  
                                    l1700 381E                                      l1604 25DA  
                                    l1620 1BF2                                      l1285 0A42  
                                    l1277 097E                                      l1445 3CA6  
                                    l3133 5338                                      l3117 3928  
                                    l3301 4796                                      l2405 05D2  
                                    l2413 019C                                      l1621 1C02  
                                    l1382 4322                                      l2262 658E  
                                    l1286 0A4A                                      l1278 09AA  
                                    l1446 3CBA                                      l3150 5556  
                                    l3142 5512                                      l2406 00E2  
                                    l1702 3882                                      l1606 2602  
                                    l1630 1C9E                                      l1622 1C0A  
                                    l2510 68BE                                      l1294 613C  
                                    l1391 42EC                                      l1383 4284  
                                    l2263 657A                                      l3151 5564  
                                    l3143 551E                                      l3119 399A  
                                    l3303 47D2                                      l2423 0392  
                                    l1703 3848                                      l1631 1CAA  
                                    l1623 1C20                                      l1615 1BD6  
                                    l2511 68B0                                      l1384 42A6  
                                    l2256 5914                                      l1448 3CD8  
                                    l3136 5360                                      l3304 4814  
                                    l2424 0326                                      l1608 263E  
                                    l1640 1D26                                      l1624 1C2C  
                                    l1616 1BCC                                      l1393 4308  
                                    l2257 58D4                                      l2249 5E28  
                                    l3137 536A                                      l3129 5312  
                                    l3145 5534                                      l2441 041E  
                                    l2425 02B4                                      l2409 0152  
                                    l1713 2E8A                                      l1633 1CBE  
                                    l1617 1BCA                                      l2513 68B8  
                                    l2601 3036                                      l1394 4314  
                                    l1386 42C8                                      l2098 2802  
                                    l3138 5378                                      l3146 552C  
                                    l1650 444C                                      l2450 0524  
                                    l2426 0250                                      l2418 01D0  
                                    l1706 38C4                                      l1714 2E64  
                                    l1626 1C54                                      l2610 3008  
                                    l2602 2F8E                                      l3331 53B2  
                                    l2099 26E4                                      l2451 0570  
                                    l2443 045E                                      l2435 0402  
                                    l1707 388A                                      l1643 61D8  
                                    l1811 372A                                      l3332 53A6  
                                    l1652 44A8                                      l2444 0578  
                                    l2436 03D2                                      l2428 0304  
                                    l1716 2F02                                      l1644 61E8  
                                    l1740 2CE0                                      l1812 3730  
                                    l1636 1CE4                                      l1628 1C68  
                                    l2612 3024                USBConfigureEndpoint@handle 0083  
                                    l1389 42D0                                      l3149 554C  
                                    l2429 02C6                                      l1717 2EE8  
                                    l1733 2CF0                                      l1725 3592  
                                    l1813 3736                                      l1629 1C74  
                                    l2605 2FA0                                      l2702 48BA  
                                    l2446 04B4                                      l3414 6680  
                                    l2470 10FA                                      l1902 46BE  
                                    l1830 143E                                      l1742 2CE8  
                                    l1734 2BEC                                      l1750 461C  
                                    l1814 374A                                      l1638 1D08  
                                    l2606 2FAA                                      l3335 53E6  
                                    l2703 4840                                      l2447 0478  
                                    l3415 666E                                      l1903 4658  
                                    l1831 1440                                      l1751 459E  
                                    l1727 3606                                      l1815 3750  
                                    l3336 53F4                                      l2800 4EB2  
                                    l2712 4896                                      l1648 4422  
                                    l1840 153E                                      l1832 145C  
                                    l1736 2C00                                      l1752 45A4  
                                    l1808 37B0                                      l3408 60DE  
                                    l1760 61C0                                      l2608 2FD8  
                                    l2705 48DA                                      l2713 48A2  
                                    l2465 131E                                      l2481 128E  
                                    l1905 4670                                      l1841 15BA  
                                    l1825 137E                                      l1737 2C88  
                                    l1753 45C4                                      l1817 3756  
                                    l1809 3720                                      l1673 4BC2  
                                    l3409 60BC                                      l1761 61BE  
                                    l2706 484E                                      l3610 363A  
                                    l2466 10B8                                      l1906 467E  
                                    l1834 14EA                                      l1826 1384  
                                    l1746 4606                                      l1818 3774  
                                    l2490 6A8E                                      l2803 4F00  
                                    l3291 6950                                      l2483 12F8  
                                    l2475 110E                                      l1667 3EDC  
                                    l1907 469C                                      l1739 2C90  
                                    l1747 458C                                      l1819 3790  
                                    l1675 4BDC                                      l2804 4EC0  
                                    l2660 5036                                      l2708 486A  
                                    l1924 4E6A                                      l3612 3668  
                                    l3540 59EE                                      l2468 10DE  
                                    l1908 46B4                                      l1844 1570  
                                    l1836 14B2                                      l1828 13F6  
                                    l1684 3200                                      l2805 4EDE  
                                    l2741 4ABE                                      l2709 4892  
                                    l2901 650E                                      l3621 3706  
                                    l3541 59E8                                      l2485 1318  
                                    l2477 112E                                      l1837 14D0  
                                    l1685 31A8                                      l2493 6A88  
                                    l2742 4ACE                                      l2750 612C  
                                    l2582 317C                                      l2574 3116  
                                    l2910 39D2                                      l3550 660C  
                                    l1846 15C6                                      l1774 4F88  
                                    l2575 3112                                      l1927 4E18  
                                    l3615 36C8                                      l3543 5A08  
                                    l2479 114E                                      l1679 4D12  
                                    l1839 1532                                      l1775 4F82  
                                    l3384 5D60                                      l2832 3458  
                                    l2680 514E                                      l2920 3A10  
                                    l1928 4E44                                      l3616 3680  
                                    l3544 59FE                                      l1960 2898  
                                    l1952 2840                                      l1768 64B4  
                                    l3385 5D58                                      l2761 58B2  
                                    l2833 33B0                                      l2681 5120  
                                    l2665 50BC                                      l2913 3A76  
                                    l2921 3A28                                      l1929 4E1E  
                                    l3297 622E                                      l3617 3698  
                                    l3609 3640                                      l1793 4378  
                                    l1785 579E                                      l1689 322A  
                                    l1769 64B2                                      l2762 58B8  
                                    l2770 44DC                                      l2834 33D8  
                                    l2578 3152                                      l2682 512C  
                                    l2666 5068                                      l2914 39DC  
                                    l3394 6264                                      l3618 36A8  
                                    l1970 294C                                      l1962 28F0  
                                    l1954 284E                                      l1698 3814  
                                    l1794 437E                                      l2827 343E  
                                    l2739 4A92                                      l2675 513A  
                                    l2659 50A0                                      l2667 507C  
                                    l2691 5F64                                      l2923 3A4E  
                                    l3395 625C                                      l3571 185C  
                                    l3555 6364                                      l1971 2950  
                                    l1963 28B8                                      l1795 43FA  
                                    l1787 57EC                                      l3388 5D80  
                                    l2772 456C                                      l2780 4564  
                                    l2828 3382                                      l2588 4C70  
                                    l2676 50D2                                      l2668 5094  
                                    l2908 3A56                                      l3652 67C8  
                                    l2940 3D6E                                      l3556 635E  
                                    l1956 2882                                      l1796 43C0  
                                    l3389 5D8A                                      l2773 44E8  
                                    l2845 3434                                      l2829 33A8  
                                    l2749 6106                                      l2589 4CA6  
                                    l2693 5F70                                      l2909 39B8  
                                    l3549 6616                                      l3581 18D8  
                                    l3573 1874                                      l2941 3D50  
                                    l2933 3D06                                      l2597 3060  
                                    l2774 4508                                      l2678 5118  
                                    l3398 627C                                      l3590 19A6  
                                    l3582 18E8                                      l2934 3D20  
                                    l1966 2932                                      l1798 43E0  
                                    l2598 2F5C                                      l2759 5880  
                                    l2839 33EA                                      l2871 3B50  
                                    l2687 69B4                                      l3399 6286  
                                    l3647 66BA                                      l3591 19E0  
                                    l3575 18C8                                      l2935 3D82  
                                    l1967 28FA                                      l1959 2894  
                                    l2872 3AD6                __size_of_Mdm_IsSmsReceived 0024  
                                    l3584 1902                                      l3664 647C  
                                    l2944 3DA2                                      l1992 6830  
                              _Led1OutSts 01F8                                      l2777 457A  
                                    l2873 3B20                                      l3657 690C  
                                    l1993 6820                                      l2778 4518  
                                    l2866 3B3C                                      l2938 3D26  
                                    l2867 3AA8                                      l3595 6B00  
                                    l3587 1914                                      l1995 6826  
                                    l2796 4E86                                      l2788 5648  
                                    l2868 3ACE                                      l3588 1980  
                                    l3668 6AE8                                      l2958 5AA4  
                                    l2798 4EF2                                      l2878 3B34  
                                    l2959 5AB8                                      l2799 4E92  
                                    STR_1 FFE6                                      STR_2 FF75  
                                    STR_3 FFDF                                      STR_4 FFC2  
                                    STR_5 FFCE                                      STR_6 FFF0  
                                    STR_7 FFEB                                      STR_8 FE89  
                                    STR_9 FEBD                                _Led2OutSts 01F6  
                              _Led3OutSts 01F4                     ??_USBCtrlTrfTxService 007D  
                                    u9205 602E                                      u9206 6030  
                                    u9215 603C                                      _UCFG 000F39  
                                    u9216 603E                                      u9225 6048  
                                    u9226 604A                                      _UEP0 000F26  
                                    _UEP1 000F27                                      u9195 6022  
                                    _UEIE 000F37                                      u9196 6024  
                __size_of_Uart_Uart1RxIsr 0010                                      _UEIR 000F63  
                                    _UCON 000F65                                _AlarmEvent 01F3  
                          ?_StopCondition 0001                              _triggerRelay 64FA  
                         ??_Mdm_DrvMainFn 0081                       _OsTmr_OsTickCounter 0314  
                           __CFG_FCMEN$ON 000000                        _InitModemInterface 6C8C  
                secondsAppTimer@isExpired 0090                           _CDCDataInHandle 01D1  
            I2c_ReadData@TentativeCounter 0032               Led_SetLedBlinkTime@OnTimeMs 007D  
            findEmptySpot@currentPosition 00E0    USBStdFeatureReqHandler@current_ep_data 0094  
                                    _pDst 02D5                      _NewStringMdmTerminal 003A  
                                    _atoi 38CC                                      _main 6C2C  
                         ??_Mdm_IsRinging 0081                                      _itoa 6208  
                        ?_SetUartBaudRate 0096                   __end_of_GetCallerNumber 6566  
                                    fsr0h 000FEA                                      fsr1h 000FE2  
                                    indf0 000FEF                                      fsr2h 000FDA  
                                    fsr0l 000FE9                                      indf1 000FE7  
                             _BaudRateGen 030C                                      indf2 000FDF  
                                    fsr1l 000FE1                                      fsr2l 000FD9  
                                    btemp 0042                                      _utoa 478E  
                                    _xtoi 362A                             __CFG_T1DIG$ON 000000  
                  _Pm_DsReleasePinControl 6C94               __size_of_Sch_SchmIntService 000E  
                       _Rtcc_GetRtccValue 4F9A               I2cSlv_SendI2cMsg@DataLenght 0083  
                    ??_Mcu_StartSystemPll 007D               __end_of_Uart_WriteStringLen 6354  
                                    prodh 000FF4                                      prodl 000FF3  
                                    start 00CC                       __end_of_Eeprom_Read 5CEC  
 Uart_MdmGsmGprsReadService@LocalRxBuffer 0AC8                         ??_secondsAppTimer 008D  
                     __end_of_GenerateEvt 6B1C                             _isNumberValid 585A  
                          ?_Mcu_SetWdgSts 0001                            ??_Mcu_ClearWdg 007D  
        isNumberInMemory@positionInMemory 0102                __end_of_USBCheckStdRequest 37F4  
                         _Rtcm_SystemDate 0459                    ??_USBCtrlTrfOutHandler 007F  
                __end_of_GetOsTickCounter 6BBE         __size_of_GetLastInteractionNumber 000C  
                      ?_Rtcc_GetRtccValue 0001                       ?_InitModemInterface 0001  
                      StringCompare@Index 0086                 ?_GetLastInteractionNumber 007D  
                          _GetElapsedTime 40F2             I2cSlv_ReceiveI2cMsg@SlaveAddr 0082  
                            ___param_bank 000000                 ??_USBStdFeatureReqHandler 0091  
            isNumberInMemory@currentState 00C5                       StringCopy@SourceStr 0085  
             __end_of_OsAlrm_ClearOsAlarm 5B9A                  Eeprom_Write@SlaveAddress 0094  
                   addCmdFsm@currentState 01D5                                     EECON2 000FA7  
              InitGprsNetwork@UartMessage 0100                  ??_USBStdGetStatusHandler 007D  
              waitSetupCall@isCallArrived 0093                       __size_of_I2cDummyTx 001C  
                        ??_Mdm_GetSmsData 0091                            ?_USBDeviceInit 0001  
                           __CFG_PLLDIV$2 000000                          _Uart_WriteString 63D0  
                     ??_Rtcc_GetRtccValue 007D                           __end_of_Welcome FDAB  
                       ?_UpdateOsCounters 0001                   Uart_ClearRxBuffer@Index 007D  
                              _GetSmsText 00DA                                     l13113 381E  
                                   l12351 69E6                                     l14131 3962  
                                   l13075 666E                                     l14307 4ACE  
                                   l13285 358A                                     l14269 5878  
                                   l14563 4FB4                                     l15605 1E52  
                                   l16093 1CB6                                     l17063 594A  
                                   l17065 597A                                     l15457 3368  
                                   l13949 60BC                                     l14749 25D2  
                                   l15583 1D98                                     l14689 65AE  
                                   l14777 2636                                     l15941 09A4  
                                   l15775 0FB0                                     l16751 2D12  
                                   l16739 5492                                     ?_atoi 0083  
                                   ?_main 0001                                     ?_itoa 0093  
                         __end_of___awdiv 5382                 delCmdFsm@isCmdSuccessfull 0109  
                                   STR_10 FF4B                                     STR_11 FF59  
                                   STR_12 FF9D                                     STR_20 FF3D  
                                   STR_13 FF67                                     STR_21 FE5F  
                                   STR_30 FEFA                                     STR_14 FEA8  
                                   STR_31 FFAA                                     STR_15 FEE6  
                                   STR_23 FED2                                     STR_24 FFF5  
                                   STR_32 FFD8                                     STR_16 FF1E  
                                   STR_25 FFF5                                     STR_17 FF83  
                                   STR_26 FE86                                     STR_18 FF90  
                                   STR_27 FF0D                                     STR_28 FFB6  
                         __end_of___awmod 556E                                     STR_29 FF2F  
                           _triggerCmdFsm 39A4         __size_of_USBCtrlEPServiceComplete 00FE  
                         __end_of___lldiv 5406                                     ?_utoa 008A  
                                   u12220 5D64                           ___awdiv@divisor 007F  
                                   u12310 590C                                     u13200 1864  
                                   u12250 6268                                     u12170 1554  
                  __end_of_USBDeviceTasks 1D30                                     u12317 5902  
                                   u13230 189E                                     u11710 3870  
                                   ?_xtoi 0083                                     u12600 67C4  
                                   u15001 1D4A                                     u12290 63FE  
                                   u13250 18AE                                     u11730 38B2  
                                   u15011 1D5C                                     u12620 66AA  
                                   u15021 1D6E                                     u11717 3866  
                                   u11590 5F92                                     u11750 62C0  
                                   u12710 646C                                     u12560 53B6  
                                   u11920 2C52                                     u11737 38A8  
                                   u13530 5538                                     u11930 2C82  
                                   u10875 678A                                     u10876 678C  
                                   u10885 6796                                     u13390 58BC  
                                   u14510 310E                                     u13470 5344  
                                   u14430 5A30                                     u11950 2CD4  
                                   u10886 6798                                     u12735 6B82  
                                   u11927 2C48                                     u10895 67A2  
                                   u12736 6B84                                     u16200 3430  
                                   u11880 35BE                                     u10896 67A4  
                                   u13705 0AF4                                     u11937 2C78  
                                   u12850 5E34                                     u15090 1EA6  
                                   u16210 3A8A                                     u12690 6460  
                                   u14370 04BE                 ?_USBCtrlEPServiceComplete 0001  
                                   u13715 0B14                                     u13565 5FE6  
                                   u13725 0B9E                                     u14437 5A26  
                                   u11957 2CCA                                     u12790 29F2  
                                   u16310 3A0C                                     u14560 5046  
                                   u13745 0C78                                     u14490 3DBA  
                                   u13850 25F6                                     u13755 0C98  
                                   u16260 3B30                                     u12980 4DF4  
                                   u14805 55D2                                     u13765 0D22  
                                   u13685 6B42                                     u16270 39CE  
                                   u13686 6B44                                     u14815 6B96  
                                   u14840 494A                                     u14920 20C2  
                                   u13880 269A                                     u14816 6B98  
                                   u16441 523C                                     u14850 4964  
                                   u16451 5254                                     u14940 20D6  
                                   u16528 54C8                                     u16529 54F6  
                                   u15770 1D2C                                     u14875 6B2C  
                                   u14876 6B30                                     u15860 28E0  
                                   u15951 5850                                     u15880 2922  
                                   u16568 2DDE                                     u16569 2E0C  
                                   u15890 293A                           __end_of___lwdiv 5D94  
                                   u15867 28D6                                     u15887 2918  
                         __end_of___lwmod 6290                 TurnOnModem@TurnOnMdmState 01F1  
                      ??_UpdateOsCounters 0019                                     i1l742 2452  
                                   i1l747 258E                                     i2l680 401A  
                                   i2l681 3F6A                                     i2l690 3FB4  
                                   i2l682 3F78                                     i2l686 3F9A  
                                   i2l688 400C                                     i2l689 3FD4  
                                   _UADDR 000F38                           ___awdiv@counter 0081  
                                   _AlCfg 03B1              Led_SetLedBlinkTime@OffTimeMs 007F  
                 I2cSendMsgSm@I2cComState 01E3                                     _USTAT 000F64  
                 __end_of_LedStateMachine 4A30        __size_of_USBCtrlEPAllowStatusStage 00CC  
                     ___lmul@multiplicand 0081                      ??_InitModemInterface 007D  
                                   _RxLen 00C2           __end_of_USBCtrlEPAllowDataStage 4C10  
                           _StringCompare 5DE6                                     _sd000 FE5B  
                                   _sd001 FE14                                     _sd002 FDEE  
          ?_USBIncrement1msInternalTimers 0001               Rtcc_GetRtccValue@RtccPtrVal 007E  
                    __end_of_Led_MainTask 3E94                               _ApnLenLocal 01EB  
                  ??_OsTmr_GetTimerStatus 0097              LedPulseStateMachine@LedPulse 008A  
                         __end_of_initFsm 48E0                           __end_of_isalpha 66C4  
                         __end_of_isdigit 6958                 saveNumberInMemory@address 0098  
                                   atoi@a 0088                                     atoi@s 0083  
                  Eeprom_Write@DataLength 0091                               _ClearBuffer 6566  
                         __end_of_isspace 67D0               I2cSlv_QueryI2cData@RxBuffer 00A5  
              I2c_WriteData@I2cWriteState 0038                 Rtcc_GetRtccValue@RegValue 0080  
                 __size_of_Rtcc_RtcConfig 00A0                           __end_of_isupper 6914  
                                   pclath 000FFA                                     tablat 000FF5  
                        __end_ofi1___wmul 681E                 __end_of_Rtcc_GetRtccValue 502E  
             I2cSlv_QueryI2cData@TxBuffer 00A2                                     plusw0 000FEB  
                                   plusw1 000FE3                                     plusw2 000FDB  
                       __end_of_CDCInitEP 56BA                                     utoa@c 0092  
                           ??_SetBaudRate 009E                                     utoa@v 0090  
                                   status 000FD8                           _I2cSlv_MainTask 5BF0  
               Rtcc_GetRtccValue@RetValue 007F                       i1___wmul@multiplier 0019  
                                   wtemp6 0043                           __end_of_sprintf 3DC8  
                         __end_of_tolower 6AEC                       __end_of_Mcu_Int0Isr 6CBC  
                     __end_of_Mcu_Int1Isr 6CB8                                     xtoi@c 008A  
                                   xtoi@s 0083                           __end_of_toupper 6B04  
                    __end_of_Eeprom_Reset 5BF0                    __end_of_GetElapsedTime 41BA  
                   __end_of_UartSetConfig 5A92                      __end_of_Eeprom_Write 5DE6  
                        delCmdFsm@smsText 0107                    __size_of_initGprsModem 0094  
                          ?_isNumberValid 007D               Rtcc_SetRtccValue@RtccPtrVal 0088  
                Eeprom_Read@MemoryAddress 00AC                     __end_of_Term_MainTask 6AA0  
                 LedStateMachine@LedBlink 0093                          __end_of_GetSmsSm 2BDA  
                 __CFG_DSWDTOSC$INTOSCREF 000000                           putUSBUSART@data 0083  
            __size_of_USBStdSetCfgHandler 00E6                   OsTmr_StartTimer@Timeout 0083  
                    __end_of_I2cSetConfig 677C                            _InitSchedTimer 66F4  
                         __initialization 22DE               __size_of_saveNumberInMemory 001A  
                        __end_of_MdmCntSm 4988                      __end_of_I2c_ReadData 22DE  
                 Rtcc_RtcConfig@RtcConfig 007E                      __end_of_I2cSendMsgSm 4346  
                 LedStateMachine@LedPulse 0095                                _MyApp_Task 2F52  
                            __end_of_atoi 39A4                              __end_of_main 6C38  
                     StringCompare@Result 0085                              __end_of_itoa 624C  
                  ??_LedPulseStateMachine 008D                     _control_signal_bitmap 01DB  
                            __end_of_utoa 4838                              __end_of_xtoi 3710  
                __end_of_Rtcm_SetRtccDate 5C98                   __size_of_Rtcc_UnlockRtc 0010  
                        ??_StartCondition 007D                          __end_of_ReadByte 6C78  
            __size_of_I2cSlv_QueryI2cData 00D2                      Term_MainSm@TermDelay 03CB  
                          __CFG_OSC$HSPLL 000000                          __end_of_MsgReady FE49  
               __size_of_USBCtrlEPService 0094                            ?_triggerCmdFsm 0105  
                                  ??_atoi 0085                                    ??_main 00B0  
            __size_of_Uart_InitUartModule 030C                                    ??_itoa 0099  
                                  ??_utoa 0090                                    ??_xtoi 0085  
                           __activetblptr 000002                           ?_USBDeviceTasks 0001  
                        __end_of_TmrBInit 4DDA                             ?_initPreamble 007D  
                              _ReceiveEvt 6722          Uart_WriteStringLen@StringToWrite 0080  
                             ?_USBSuspend 0001                         ?_Mcu_ConfigExtInt 0001  
                        ?_HighPriorityIsr 0001                        _Mdm_RequestSmsData 6BDE  
                          ?_StringCompare 007D                          __end_of_Terminal 05EC  
                    initFsm@isInitialized 0103                             ?_SetAckStatus 0001  
                       ?_Led_SetLedStatus 007D                                _OsTmr_Wait 5406  
                            _cdc_mem_type 01DC                        ??_Mcu_ConfigExtInt 007D  
                        addCmdFsm@smsText 0107                         CheckModem@Timeout 03EC  
                         ReceiveEvt@Event 007D                               ?_CheckModem 0001  
                        _CDCDataOutHandle 00BC                           ??_StopCondition 007D  
                      ??_Led_SetLedStatus 007E                          ___awdiv@dividend 007D  
      __end_of_Uart_MdmGsmGprsReadService 402A                _Uart_MdmGsmGprsReadService 3F60  
              __end_of_UsbDevice_MainTask 6842                           getsUSBUSART@len 0086  
                    __end_of_getSetupCall 69BA                       ?_Mdm_RequestSmsData 0001  
                   __end_of_UartWriteByte 69DA                     addCmdFsm@searchNumber 010E  
                        ??_LowPriorityIsr 0068                                    _DSGPR0 000F4E  
                                  _DSGPR1 000F4F                               _Eeprom_Read 5C98  
      Irq_InitIntController@IntPriorityEn 007F                     __size_of_CDCTxService 0146  
                                  i1l1412 64F4                               _GenerateEvt 6B04  
                          __CFG_WDTEN$OFF 000000                                    _RCREG1 000FAF  
                                  _RCREG2 000FAA                                    _RCSTA1 000FAC  
                                  _RCSTA2 000F9C                     triggerRelay@isRelayOn 0086  
               Uart_Uart1RxIsr@UartRxData 002C                             CDCTxService@i 0084  
                                  _RTCCAL 000F3E                                    _SPBRG1 000FB0  
                                  _SPBRG2 000FAB                                    _RPINR1 000EE7  
                              _TaskNumber FC30                            _cmdVisualEffet 60F2  
                          __CFG_WPCFG$OFF 000000                                    _TXREG1 000FAE  
                                  _TXREG2 000FA9                          ?_GetCallerNumber 0083  
                                  _TXSTA1 000FAD                                    _TXSTA2 000FA8  
                             _ConnTimeout 02F3                      Mdm_IsSmsReceived@Ret 0081  
                __end_of_Rtcc_AlarmConfig 5726                           ??_Mcu_SetWdgSts 007D  
                  __end_of_InitSchedTimer 6722                            __CFG_WPDIS$OFF 000000  
                         ?_GetElapsedTime 0081                            _EnableReceiver 6CAC  
                              _UartConfig 0322                      __end_of_Mdm_MainTask 5ED8  
                       ??_Uart_Uart1RxIsr 0007                         _shortPacketStatus 00CD  
                           ??_Term_MainSm 00A7                            __CFG_XINST$OFF 000000  
           __size_of_I2cSlv_I2cReadMsgSts 0022                  __end_of_MdmHttp_MainTask 6180  
                                  _SmsLen 00D3                           USBDeviceTasks@i 0098  
             USBStdFeatureReqHandler@pUEP 0092                  USBTransferOnePacket@data 007E  
              USBCtrlTrfInHandler@lastDTS 007E                             ??_RtccIrqInit 007D  
                ??_OsAlrm_ProcessOsAlarms 0060                           ??_USBDeviceInit 0085  
                     __end_of_SetBaudRate 6012                                    ___lmul 5A92  
                    _I2cSlv_ReceiveI2cMsg 62D4                        TurnOnModem@Counter 02D7  
                            ?_putUSBUSART 0083                                    ___wmul 67D0  
                               ??___awdiv 0081            GetElapsedTime@CurrentTimestamp 0091  
                          __CFG_STVREN$ON 000000                          _Mdm_SetSmsFormat 5ED8  
                               ??___awmod 0081                        __size_of_SendSmsSm 01B8  
                       ?_Rtcm_GetRtccDate 0081                       _Led_SetLedBlinkTime 5CEC  
                               ??___lldiv 0091                      __end_of_getsUSBUSART 4E70  
                    ??_Mdm_RequestSmsData 0080                                 ??___lwdiv 0087  
                  Tmr_TmrBPrSet@IntFreqHz 0096                                 ??___lwmod 0081  
               isMasterNumber@phoneNumber 0100                         _USBEnableEndpoint 61C4  
         __size_of_USBStdGetStatusHandler 00B2                             ??_Rtcc_RtcIsr 0001  
                            ReadByte@Byte 007D                       addCmdFsm@isComplete 010B  
                                  _memcpy 60AA                    __size_of_HttpGetMethod 04D0  
                                  _memset 6664                                    clear_0 239C  
                                  clear_1 23AE                                    clear_2 23BA  
                                  clear_3 23C6                                    clear_4 23D2  
                                  clear_5 23DE                                    clear_6 23EA  
                       parseCommand@F9030 FC26                                    clear_7 23F6  
                                  clear_8 2402                         parseCommand@F9032 FC22  
                                  clear_9 240E                         parseCommand@F9028 FC2A  
                        ___awdiv@quotient 0083                        ??_Rtcm_GetRtccDate 0089  
                         ___awmod@divisor 007F                        _ExtInt0IsrCallback 02E1  
                       ?_OsTmr_StartTimer 0081                                _PostMethod 01E8  
                         ___awmod@counter 0081                       UartWriteByte@Module 007E  
                     GetSmsSm@GetSmsState 01EE                        ?_USBEnableEndpoint 0085  
            __size_of_triggerVisualEffect 000C                            ??_initPreamble 007F  
                                  _strcat 59DE                                    _strcpy 6602  
                                  _strlen 6354                                    _strtol 181C  
                        ClearBuffer@Index 0081             __size_of_USBTransferOnePacket 00BE  
                        __end_of_isxdigit 6486                  HttpGetMethod@UartMessage 0100  
                               ??_initFsm 00B0                             _initGprsModem 502E  
                      ??_OsTmr_StartTimer 0087                                    itoa@cp 0099  
                               ??_isalpha 0080                                 ??_isdigit 007D  
                          ??_SetAckStatus 007D                       ModemEvtParser@F9110 03C7  
                     ModemEvtParser@F9112 03C2                       ModemEvtParser@F9114 03BD  
                     ModemEvtParser@F9116 04E6                              _CDCTxService 282A  
                     MdmCntSm@MdmCntState 002E                Mdm_SetSmsFormat@TextFormat 0098  
                        ?_LedStateMachine 008F                              __mediumconst FC0E  
                               ??_isspace 007D                    __size_of_CheckTxStatus 000A  
                            _callerNumber 04C3                                    tblptrh 000FF7  
                               ??_isupper 007D                                    tblptrl 000FF6  
                                  tblptru 000FF8                      __end_of_Mcu_ClearWdg 6CA4  
                     ??_USBEnableEndpoint 0086                               _MdmStsReady 01FD  
                 __end_of_I2cSlv_MainTask 5C44                           _InitGprsNetwork 0DC8  
                           ??_Tmr_Tmr2Isr 0023                              ??_I2cDummyTx 0021  
               OsTmr_GetTimerStatus@Timer 0095                               _Mcu_Int0Isr 6CB8  
                             _Mcu_Int1Isr 6CB4                      ?_Led_SetLedBlinkTime 007D  
                      __size_of_addCmdFsm 00EE                                 ??_sprintf 0083  
                               ??_tolower 007D                         parseCommand@state 0094  
                  __size_of_ScheduleTasks 0126                   delCmdFsm@receivedNumber 0105  
                             _CtrlTrfData 000438                                 ??_toupper 007D  
                     ModemEvtParser@Match 00A7                    __end_of_cmdVisualEffet 613A  
                    _controlTransferState 00CC                     __end_ofi1_GenerateEvt 6B5E  
                 Eeprom_Read@SlaveAddress 00AD                     __end_of_Rtcm_MainTask 5270  
              __size_of_Rtcc_GetRtccValue 0094                             ?_parseCommand 0001  
                      _ExtInt1IsrCallback 02DF                                __accesstop 0060  
                           ?_Wdg_MainTask 0001                   __end_of__initialization 242C  
                      Eeprom_Read@ReadSts 00AE                    Tmr_TmrBPrSet@Prescaler 0098  
                            __pbssBIGRAMl 0AC8                           ??_isNumberValid 007F  
                  __end_of_EnableReceiver 6CB0                        __size_of_WriteByte 000A  
                 __size_of_ModemEvtParser 0182               Uart_WriteConstString@Module 0082  
               Uart_WriteStringLen@Module 0084                             ___rparam_used 000001  
                             _ReadAddress 01FA                  __size_of_USBStallHandler 0044  
                         ?_InitSchedTimer 0001                __end_of_UartTxBufferStatus 5FC4  
                        ??_isMasterNumber 00B0           I2cSlv_QueryI2cData@TimeoutTimer 0344  
                    Terminal@FormatOption 02EA                           __CFG_IOL1WAY$ON 000000  
                              _StringCopy 58C0                            __pcstackBANK10 0A00  
                      __size_of_delCmdFsm 00D8                     I2cDummyTx@DummyBuffer 01FB  
                    __CFG_WPEND$PAGE_WPFP 000000                       __size_of_USBSuspend 0032  
                     initFsm@currentState 01D6  Uart_MdmGsmGprsReadService@ServiceCounter 0005  
                         MdmCntSm@Counter 02DB                     ?_I2cSlv_ReceiveI2cMsg 0080  
                          __pcstackCOMRAM 0001                 __end_of_USBEnableEndpoint 6208  
                             _InitNetwork 00D8                               ?_MyApp_Task 0001  
                LedStateMachine@LedOutSts 0098                             __end_of_sd000 FE5F  
                           __end_of_sd001 FE32                             __end_of_sd002 FE14  
                            __pidataBANK0 6CBC                              __pidataBANK1 6CBF  
                            __pidataBANK2 6C0E                              __pidataBANK3 640E  
                            __pidataBANK4 6C50                              __pidataBANK5 5E38  
               __end_ofparseCommand@F9030 FC2A                 __end_ofparseCommand@F9032 FC26  
               __end_ofparseCommand@F9028 FC2E                         ?_UartSetConfigLow 0001  
        __size_of_USBCtrlEPAllowDataStage 009E                     _Uart_WriteConstString 6290  
                     __size_of_CheckModem 0160                           ??_triggerCmdFsm 00B0  
              __end_of_Uart_ClearRxBuffer 65D0             __size_of_USBConfigureEndpoint 0098  
             parseCommand@deleteNumberCmd 008C                   addCmdFsm@numberInMemory 010D  
                __size_of_InitializeTasks 0074                        __end_of_I2cDummyTx 6A6C  
             __end_of_USBCtrlTrfInHandler 4408                           __CFG_DSWDTPS$G2 000000  
                    StringCompare@String1 007D                      StringCompare@String2 007F  
                      ??_UartSetConfigLow 007D                 __size_of_isNumberInMemory 00BA  
                     __end_of_Term_MainSm 135A                 initGprsModem@currentState 01D8  
                   LedStateMachine@LedOut 0091                     LedStateMachine@LedSts 008F  
                      LedStateMachine@Led 0099                                 ?i1___wmul 0019  
                          ?_initGprsModem 0001                       __end_of_RtccIrqInit 6B48  
                      __size_of_detectCmd 009C                     __size_of_Led_MainTask 00CC  
                         ??_StringCompare 0083             I2cSlv_QueryI2cData@I2cOpState 01E2  
                             ?_ReceiveEvt 007D                               _NewSmsEvent 0040  
                              _SystemInit 6634                                _cdc_notice 044F  
                   __end_of_Tmr_TmrBPrSet 336E                     __end_of_waitSetupCall 5F76  
                     __end_of_Rtcc_RtcIsr 6CB4                                _cdc_rx_len 00C9  
                       __end_of_MsgFormat FD22                                _cdc_tx_len 00C7  
                     Terminal@UsbRxBuffer 0A00                               ?_OsTmr_Wait 009B  
                   ??_Led_SetLedBlinkTime 0081                       Terminal@UsbTxBuffer 0200  
                               ?_GetSmsSm 0001               __end_ofi1_I2cSlv_SendI2cMsg 64FA  
                ??_USBCtrlTrfSetupHandler 0097                   _USBTicksSinceSuspendEnd 01DD  
                          ClearBuffer@Len 007F                           _secondsAppTimer 4A30  
        __end_of_GetLastInteractionNumber 6C50                                 ?_MdmCntSm 0001  
                   _Irq_InitIntController 677C                    _USBStdGetStatusHandler 4580  
                       __end_of_SendSmsSm 1BAA                     __size_of_Eeprom_Reset 0056  
     Mcu_StartSystemPll@PllStartupCounter 007D                            _GprsNetworkSts 01EA  
                          _Rtcc_RtcConfig 4AD2                     __size_of_Eeprom_Write 0052  
                              __pbssBANK0 00B0                                __pbssBANK1 01C9  
                          ??_parseCommand 0088                                __pbssBANK2 02C9  
                              __pbssBANK3 0300                                __pbssBANK4 0440  
                              __pbssBANK5 0500                                __pbssBANK6 0600  
                              __pbssBANK7 0700                                __pbssBANK8 0800  
                              __pbssBANK9 0900                           ?_cmdVisualEffet 0001  
                           _HttpGetMethod 05EC                   ?_Pm_DsReleasePinControl 0001  
                             _MessageText 08C8                            ??_Wdg_MainTask 007E  
                   __end_ofi2_GenerateEvt 6B74               isNumberInMemory@phoneNumber 0100  
                __end_of_Uart_WriteString 640E                   addCmdFsm@masterOpResult 010C  
            getSetupCall@isCalledReceived 0083                                 ?_ReadByte 0001  
                       MyApp_Task@Options 0001                     __size_of_I2cSetConfig 002C  
                         ?_EnableReceiver 0001                     __size_of_I2c_ReadData 015E  
                   __size_of_I2cSendMsgSm 00C4                       __end_of_Tmr_Tmr2Isr 68AE  
                             _SetBaudRate 5FC4                             ?_savePreamble 0001  
                   __end_of_findEmptySpot 4F06                 initGprsModem@modemCounter 03B9  
             __size_of_USBWakeFromSuspend 003A                SendSmsSm@SendSms_NextState 01EC  
                             _pBDTEntryIn 00B6          UartTxBufferStatus@TxBufferStatus 007F  
        __end_of_USBCtrlEPServiceComplete 3280                                 ?_TmrBInit 007D  
                           _CheckTxStatus 6C78                             ??_TurnOnModem 0080  
               addCmdFsm@isCmdSuccessfull 0109                   __size_of_Tmr_TmrBConfig 00C8  
             __size_of_USBCheckCDCRequest 00B0                  Uart_WriteStringLen@Index 0083  
                       ?_GetOsTickCounter 007D                   __size_of_Tmr_TmrBIrqSet 004C  
                    USBCtrlTrfRxService@i 007D                 findEmptySpot@currentState 00C4  
                               ?_Terminal 0001                      Eeprom_Write@WriteSts 0092  
                                 ?___lmul 007D                              _Led_MainTask 3DC8  
                          _Rtcc_UnlockRtc 6BBE                              _I2cBusStatus 01E4  
                                 ?___wmul 007D           __size_of_OsAlrm_ProcessOsAlarms 0156  
                           _ScheduleTasks 2D08                 Uart_InitUartModule@Module 00A1  
                   __end_of_I2c_WriteData 2020                         __end_of_addCmdFsm 345C  
                      ??_GetOsTickCounter 0081                                   ?_memcpy 007D  
                                 ?_memset 007D                            ___lmul@product 0085  
                              _device_dsc FE49                   __size_of_CheckAckStatus 000A  
                        _USBCtrlEPService 4F06                     __end_of_UpdateSchFlag 6A50  
                            _EepromBuffer 04A7                                _ep_data_in 02D2  
                         _I2cWriteDataEvt 00D7                  i1GenerateEvt@EventStatus 001B  
                           ?_Rtcc_LockRtc 0001                                   ?_strcat 007D  
                              ??i1___wmul 001D                   __end_of_InitGprsNetwork 10B6  
                                 ?_strcpy 007D                                   ?_strlen 007D  
                                 ?_strtol 0089             __size_of_LedBlinkStateMachine 0148  
             __end_of_USBCtrlTrfRxService 2F52                         __end_of_WriteByte 6C6E  
                      _USBCheckStdRequest 3710                         _configDescriptor1 FDAB  
                            _Eeprom_Reset 5B9A                       Wdg_MainTask@Options 0001  
                             _PhoneNumber 0572                              _Eeprom_Write 5D94  
                   __size_of_getSetupCall 0020               __end_of_USBCtrlTrfTxService 38CC  
                     _USBStdSetCfgHandler 3544                         __end_of_delCmdFsm 3B54  
                 __size_of_ConfigureModem 00D4                    I2cSlv_QueryI2cData@Ret 01E1  
               Eeprom_Write@MemoryAddress 0093                           __CFG_WDTPS$2048 000000  
                            _I2cSetConfig 6750                                   _SPBRGH1 000F7F  
                                 _SPBRGH2 000F7D                    __end_of_Rtcc_RtcConfig 4B72  
                                 _SSP2ADD 000F74                                ??_GetSmsSm 008F  
                                 _SSP2BUF 000F75                              _I2c_ReadData 2180  
                                 _RTCVALH 000F99                                   _RTCVALL 000F98  
                            _I2cSendMsgSm 4282                          ?_I2cSlv_MainTask 0001  
                      GsmGprsTerminal@SMS 01DA            __end_of_Pm_DsReleasePinControl 6C9A  
                     ?_USBCheckStdRequest 0001                     Mdm_SetSmsFormat@Index 0083  
            __size_of_USBStdGetDscHandler 012E                                ??_MdmCntSm 0081  
                          _blinkInSeconds 03F7                       __size_of_MyApp_Task 0120  
                                 _UIEbits 000F36                            ?_HttpGetMethod 009B  
                            ?_ClearBuffer 007D                      _MdmOnOffPulseRequest 00DF  
                                 _UIRbits 000F62                     CheckModem@CheckMdmSts 01F2  
               __size_of_UpdateOsCounters 0010                                   _Led1Sts 01F9  
                     _I2cSlv_QueryI2cData 3C28                                   _Led2Sts 01F7  
                                 _Led3Sts 01F5                __end_of_Sch_SchmIntService 6C2C  
                   __size_of_Mdm_MainTask 0050             ModemEvtParser@CallReadyString 008F  
                           _cdc_trf_state 00C8                                ??_ReadByte 007D  
                          ??_savePreamble 0096                       _Uart_InitUartModule 0ABC  
                   __end_of_Mdm_DrvMainFn 6CA0                      __end_of_initPreamble 6A34  
                  initEeprom@currentState 01D7                         __end_of_detectCmd 4CAC  
                        _ComChecCompleted 002B                            ?_CheckTxStatus 0001  
             __size_of_Mcu_StartSystemPll 001E                                   _pCDCDst 02C9  
                   __end_of_Mdm_IsRinging 688A                     InitGprsNetwork@ApnLen 009D  
                                 _pCDCSrc 02CC                     __size_of_getsUSBUSART 0096  
                             ?_StringCopy 0085                       __size_of_ReceiveEvt 002E  
                                 __Hparam 0000                                ??_TmrBInit 007F  
                  ??_I2cSlv_ReceiveI2cMsg 0084           ??_USBIncrement1msInternalTimers 007D  
                          _I2cReadDataEvt 0039                                 ?_isxdigit 0001  
                    ?_USBStdSetCfgHandler 0001                                 _CDCInitEP 564E  
                  __end_of_Rtcc_UnlockRtc 6BCE                                   __Lparam 0000  
         OsAlrm_SetOsAlarm@OsAlarmTimeout 0085                      __end_of_SetAckStatus 6B88  
                              _initEeprom 50C2                               _Term_MainSm 10B6  
 Uart_WriteConstString@ConstStringToWrite 0080                                   _Welcome FD22  
              __size_of_USBEnableEndpoint 0044                            ?_ScheduleTasks 0001  
                              ??_Terminal 00A2                         _Sch_MainScheduler 69F8  
                  ?_Uart_WriteConstString 0080                                _readBuffer 0337  
                     __size_of_OsTmr_Wait 0082                      ??_USBCheckStdRequest 0097  
                             _RtccIrqInit 6B32             __size_of_USBCtrlTrfOutHandler 0066  
                                 ___awdiv 52FC                      Term_MainTask@Options 0001  
                         __size_of___lmul 0058                  __size_of_SetUartBaudRate 0138  
                                 ___awmod 54FC                                   ___lldiv 5382  
                        ??_USBDeviceTasks 0098                           __size_of___wmul 0028  
                 triggerCmdFsm@isComplete 0107                                   ___lwdiv 5D40  
                       ??_USBStallHandler 007D                                   ___lwmod 624C  
                       ?_Rtcm_SetRtccDate 0089              __size_of_Uart_WriteStringLen 0040  
                      ?_Sch_MainScheduler 0001                              _getSetupCall 699A  
                    ?_I2cSlv_QueryI2cData 00A2                           ??_initGprsModem 0099  
                             _Rtcc_RtcIsr 6CB0                      __size_of_putUSBUSART 0022  
                                 __pcinit 22DE                        getsUSBUSART@buffer 0084  
                         __size_of_memcpy 0048                                 _I2cComSts 00CF  
                     __end_of_TurnOnModem 60AA                           __size_of_memset 0030  
                 initEeprom@isInitialized 0102                                 _I2cConfig 034F  
                          ??_Rtcc_LockRtc 007D                 __end_of_configDescriptor1 FDEE  
                                 __ramtop 0F00                Mdm_GetSmsData@GetSmsStatus 0091  
                             Terminal@Len 03AD                        ??_Rtcm_SetRtccDate 0091  
                   Tmr_TmrBIrqSet@TmrNumb 007F                      ?_Uart_InitUartModule 009D  
                                 __ptext0 6C2C                                   __ptext1 6634  
                                 __ptext2 6C5A                                   __ptext3 6C94  
                                 __ptext4 69DA                                   __ptext5 6A6C  
                                 __ptext6 677C                                   __ptext7 66F4  
                                 __ptext8 402A                                   __ptext9 3280  
                                 _inPipes 00B0                     __size_of_Mcu_ClearWdg 0004  
               GsmGprsTerminal@UartBuffer 0900               _USBDeferOUTDataStagePackets 0025  
                         __size_of_strcat 005C                   __end_of_secondsAppTimer 4AD2  
                         __size_of_strcpy 0032                           __size_of_strlen 003E  
            __size_of_OsAlrm_ClearOsAlarm 0058                                 _T1CONbits 000FCD  
                         __size_of_strtol 01D6                        InitGprsNetwork@Apn 009B  
                                 _initFsm 4838                              ??_USBSuspend 0091  
                               _T2CONbits 000FCA                                   _isalpha 6694  
                                 _isdigit 6936            isNumberInMemory@memoryOpResult 0104  
                           ?_Tmr_StartTmr 0001                       ??_Sch_MainScheduler 00B0  
                             ?_SystemInit 0001                                   clear_10 241A  
                                 clear_11 2426                          ___awmod@dividend 007D  
                       ??_InitializeTasks 03F9                                 _T4CONbits 000F76  
                         _Tmr2IsrCallback 02E7       __end_of_Tmr_RegisterTmr2IsrCallback 6C64  
             _Tmr_RegisterTmr2IsrCallback 6C5A                                   _isspace 67A6  
                            _Mdm_MainTask 5E88                                   _isupper 68F2  
             __size_of_InitModemInterface 0008                      HttpGetMethod@GetData 009B  
                  ?_Irq_InitIntController 007D                                   _smsText 0493  
                  Term_MainSm@FwkBuildStr 013A                           ?_Rtcc_RtcConfig 007E  
                  _OsAlrm_ProcessOsAlarms 243A                              ??_CheckModem 009B  
                      __end_of_USB_CD_Ptr FC30                       Mcu_SetWdgSts@WdgSts 007D  
                             _Tmr_Tmr2Isr 688A                                   _sprintf 3CFA  
                                 _tolower 6AD4           __size_of_USBCtrlTrfSetupHandler 008C  
                         _Uart_Uart1RxIsr 6BFE                          _HttpGetDataLocal 03A0  
                __end_of_Mdm_SetSmsFormat 5F28                    Term_MainSm@FwkMajorStr 0132  
                          __pintcode_body 46E2                                   _toupper 6AEC  
         secondsAppTimer@destinationTicks 0091                         ClearBuffer@Buffer 007D  
                    end_of_initialization 242C                              _getsUSBUSART 4DDA  
                            ?_Eeprom_Read 00A9                          ??_GetElapsedTime 0085  
                             _SmsTxtReady 00D9               ?_Uart_MdmGsmGprsReadService 0004  
           __size_of_OsTmr_GetTimerStatus 0090                              ?_GenerateEvt 007D  
                  _MainSystemTimebaseFlag 02F2             i1I2cSlv_SendI2cMsg@DataLenght 001F  
                      __end_of_USB_SD_Ptr FC22       Irq_InitIntController@PerInt_LowPInt 007E  
               triggerCmdFsm@currentState 01D3                                   memcpy@d 0084  
                                 memcpy@n 0081                                   memcpy@s 0086  
                     _pBDTEntryEP0OutNext 00BE                                   itoa@buf 0093  
                                 memset@c 007F                                   itoa@val 0095  
                                 memset@n 0081                    Term_MainSm@FwkMinorStr 0136  
                                 memset@p 0083                             __Lmediumconst FC0E  
                          _ModemEvtParser 1D30                       _triggerVisualEffect 6C38  
                                 int_func 46E2                           _USB1msTickCount 0310  
         _dummy_encapsulated_cmd_response 0374                  _GetLastInteractionNumber 6C44  
                               i1u1635_20 2450                                 i1u1660_28 689A  
                               i1u1639_28 2570                                 i1u1639_29 2584  
                ?_USBStdFeatureReqHandler 0001                 __size_of_Mcu_ConfigExtInt 001A  
              __end_of_saveNumberInMemory 6AD4                         ?_Rtcc_AlarmConfig 007D  
                   ??_USBStdSetCfgHandler 0091                           ___lldiv@divisor 008D  
               __end_of_Sch_MainScheduler 6A16                 __size_of_Led_SetLedStatus 0030  
                              ??_isxdigit 0080                                ?_CDCInitEP 0001  
                         ___lldiv@counter 0095                         _Rtcc_SetRtccValue 15EE  
                       _Rtcc_SetRtcStatus 6B1C                       _ActivateRiDetection 0041  
                         ?_Rtcc_UnlockRtc 0001                        ??_Rtcc_AlarmConfig 007F  
                      __end_of_USBSuspend 6602                             StringCopy@Len 0089  
                       ?_MdmHttp_MainTask 0001                  I2cSlv_QueryI2cData@RxLen 00A7  
                 _USBCtrlEPAllowDataStage 4B72                        _UsbDevice_MainTask 681E  
                I2cSlv_QueryI2cData@TxLen 00A4                              _Mcu_ClearWdg 6CA0  
               Eeprom_Reset@memoryAddress 00C6                                   postdec1 000FE5  
                                 postdec2 000FDD                        ?_Rtcc_SetRtccValue 0085  
                      ?_Rtcc_SetRtcStatus 0001                                   postinc0 000FEE  
                                 postinc1 000FE6                                   postinc2 000FDE  
                   ??_I2cSlv_QueryI2cData 00A9                                   utoa@buf 008A  
                      ??_MdmHttp_MainTask 00A1                  _USBCtrlEPServiceComplete 3182  
                                 utoa@val 008C                   HttpGetMethod@GetMOutSts 01E5  
                   i1___wmul@multiplicand 001B                        __end_of_CheckModem 2180  
                         _RtccIsrCallback 02E3          OsAlrm_ProcessOsAlarms@AlarmIndex 0021  
                      Terminal@EchoOption 02F1             __size_of_LedPulseStateMachine 00E8  
                                 strlen@s 007D                          _isNumberInMemory 44C6  
                    __end_of_parseCommand 3182                _USBStatusStageEnabledFlag1 0028  
              _USBStatusStageEnabledFlag2 0027                     ??_Uart_InitUartModule 009F  
                    __end_of_Wdg_MainTask 68D0                                   strtol@a 0094  
                                 strtol@c 0098                            _Rtcm_RtccAlarm 0300  
                                 strtol@s 0089                        USBEnableEndpoint@p 0086  
                    ?_triggerVisualEffect 0001                       ?_UsbDevice_MainTask 0001  
                                 xtoi@val 0088                                 _PORTDbits 000F83  
                               _PORTEbits 000F84                       ??_Rtcc_SetRtccValue 0086  
                     ??_Rtcc_SetRtcStatus 007D                          __CFG_DSBOREN$OFF 000000  
                        ?_InitGprsNetwork 009B                         _Mdm_HangPhoneCall 6B9A  
                          ??_Tmr_StartTmr 007D              __end_of_I2cSlv_I2cReadMsgSts 697A  
                i1I2cSlv_SendI2cMsg@TxSts 0020                         StringCopy@DestStr 0087  
                        __CFG_CPUDIV$OSC1 000000                        ?_Mdm_HangPhoneCall 0001  
                  __size_of_UartSetConfig 0058                           _Tmr4IsrCallback 02E5  
                        _HttpGetMethodSts 01E9                                 _TRISBbits 000F93  
                    SendSmsSm@UartMessage 0100                                 _TRISCbits 000F94  
                               _TRISDbits 000F95                                 _TRISEbits 000F96  
                     __size_of_StringCopy 0062                  isNumberValid@phoneNumber 007D  
                      _BothEP0OutUOWNsSet 01DE                           ??_HttpGetMethod 009D  
                 __size_of_Mdm_GetSmsData 0068                              strtol@endptr 008B  
                  __size_of_Term_MainTask 001A                              ?_Mcu_Int0Isr 0001  
               __size_of_Rtcm_GetRtccDate 0066                              ?_Mcu_Int1Isr 0001  
               I2c_WriteData@I2cNextState 0037                 USBConfigureEndpoint@EPNum 0082  
              ?_USBCtrlEPAllowStatusStage 0001                    __end_of_ModemEvtParser 1EB2  
                        ??_InitSchedTimer 00A4       USER_USB_CALLBACK_EVENT_HANDLER@size 008D  
                               _USTATcopy 00D5                     __end_of_StopCondition 6CA8  
                __size_of_HighPriorityIsr 4786                       ??_Mdm_HangPhoneCall 0083  
               Tmr_TmrBPrSet@TmrBPrCfgSts 009A                 __size_of_OsTmr_StartTimer 005E  
                  secondsAppTimer@counter 008A                                 _Led1Blink 036B  
                               _Led2Blink 0362                      ??_UsbDevice_MainTask 0099  
                               _Led3Blink 0359              __end_of_USBTransferOnePacket 44C6  
                         ??_CheckTxStatus 007D                                 _Led1Pulse 038F  
                  secondsAppTimer@seconds 008F                         __CFG_WPFP$PAGE_63 000000  
               __end_of_Rtcc_SetRtccValue 181C                 __end_of_Rtcc_SetRtcStatus 6B32  
                               _Led2Pulse 0389                                 _Led3Pulse 0383  
                       _I2cSlv_SendI2cMsg 6392           SetBaudRate@DesiredI2cBusClockHz 0096  
                     Eeprom_Read@QuerySts 00AF                           ??_ScheduleTasks 03F9  
                          _Tmr_TmrBConfig 402A                   Tmr_TmrBPrSet@Postscaler 0099  
                       putUSBUSART@length 0085                   MdmHttp_MainTask@Options 0001  
                   __end_of_Mcu_SetWdgSts 6B9A                         _OsAlrm_SetOsAlarm 41BA  
                    Terminal@TermRxBuffer 0540                        ?_I2cSlv_SendI2cMsg 0080  
                     __size_of_SystemInit 0030                            _Tmr_TmrBIrqSet 6012  
                             ?_initEeprom 0001                       __CFG_MSSP7B_EN$MSK7 000000  
                             _TurnOnModem 605E                                 _ClipEvent 00DC  
                            ??_MyApp_Task 00B0                      Terminal@TermTxBuffer 0100  
           saveNumberInMemory@phoneNumber 0096                                 _GetMethod 01FC  
                  _USBCtrlTrfSetupHandler 5270                        ?_OsAlrm_SetOsAlarm 0083  
                Eeprom_Reset@SlaveAddress 0085                  __size_of_GetCallerNumber 0036  
                   __end_of_USBDeviceInit 26E2     __end_of_USBIncrement1msInternalTimers 68F2  
  __size_of_USBIncrement1msInternalTimers 0022             _USBIncrement1msInternalTimers 68D0  
             __size_of_Mdm_RequestSmsData 0010                            __end_of___lmul 5AEA  
                          _CheckAckStatus 6C82                            __end_of___wmul 67F8  
                     ??_I2cSlv_SendI2cMsg 0084                 __end_of_Mdm_HangPhoneCall 6BAC  
                   ??_triggerVisualEffect 007D               triggerCmdFsm@numberInMemory 0108  
                  __size_of_UartWriteByte 0020                 triggerCmdFsm@searchNumber 010A  
                 addCmdFsm@receivedNumber 0105                             _secondCounter 0318  
                          __end_of_memcpy 60F2                        Terminal@PackageLen 02EC  
       Uart_MdmGsmGprsReadService@RxState 002D                            __end_of_memset 6694  
                      _UartTxBufferStatus 5F76                       ??_OsAlrm_SetOsAlarm 008B  
                    __end_of_savePreamble 6ABA                          __CFG_DSWDTEN$OFF 000000  
                            ??_ReceiveEvt 007F                         _USBBusIsSuspended 01DF  
                               _Mdm_SmsRx 0700                          ?_secondsAppTimer 008A  
                       ??_SetUartBaudRate 0098                   __end_of_Uart_Uart1RxIsr 6C0E  
                               _MdmStatus 00D1                            __end_of_strcat 5A3A  
                          __end_of_strcpy 6634                            __end_of_strlen 6392  
                          __end_of_strtol 19F2                       start_initialization 22DE  
         isNumberInMemory@currentPosition 00E1                         __size_ofi1___wmul 0026  
                 ?_USBStdGetStatusHandler 0001                            _ConfigureModem 3B54  
                        ??_cmdVisualEffet 0093                              ??_OsTmr_Wait 00A1  
                  Uart_WriteString@Module 0082             USBCtrlTrfRxService@byteToRead 007E  
                 __size_of_StartCondition 0004                      Rtcm_SetRtccDate@Date 0089  
                         _MdmResetRequest 003D                       ?_UartTxBufferStatus 0001  
                      _Uart_ClearRxBuffer 659C                 __size_of_UartSetConfigLow 0058  
                        ??_EnableReceiver 007D                               _cdc_data_rx 0500  
                             _cdc_data_tx 07B6              __end_of_USBConfigureEndpoint 4D44  
                   __size_of_initPreamble 001E           __end_of_USBStdFeatureReqHandler 15EE  
                               _MsgFormat FC32                        __end_of_MyApp_Task 3072  
                        _UpdateOsCounters 6BEE                           ?_ModemEvtParser 0001  
                           ?_triggerRelay 0001                I2c_InitI2cModule@I2cConfig 00A2  
                       __size_of_GetSmsSm 0132         __end_of_USBCtrlEPAllowStatusStage 3F60  
               __end_of_I2cSlv_SendI2cMsg 63D0                    Uart_WriteStringLen@Len 0082  
                __size_of_LedStateMachine 00A8                  __end_of_USBCtrlEPService 4F9A  
                       __size_of_MdmCntSm 00A8                         ?_Uart_WriteString 0080  
                   __size_of_SetAckStatus 0014               triggerCmdFsm@masterOpResult 0109  
                    __size_of_ClearBuffer 0036                      __end_of_Rtcc_LockRtc 6BDE  
                     ?_Uart_ClearRxBuffer 0001                              ?_SetBaudRate 0096  
                  __end_of_Tmr_TmrBConfig 40F2                                 _SendSmsSm 19F2  
               __end_of_OsAlrm_SetOsAlarm 4282                    __end_of_Tmr_TmrBIrqSet 605E  
                               _TaskTable 0586                                 _RingEvent 00DD  
               ??_USBCtrlEPAllowDataStage 007E                        ??_Uart_WriteString 0082  
                             _SystemState 00D4                     __end_of_isNumberValid 58C0  
            isMasterNumber@memoryOpResult 0102                         __size_of_ReadByte 000A  
                               _RtcConfig 03B5                __size_of_Sch_MainScheduler 001E  
           Uart_InitUartModule@UartConfig 009D                               ??_CDCInitEP 0089  
                          USBDeviceInit@i 0085                             _UartSetConfig 5A3A  
                  Led_SetLedBlinkTime@Led 0081                        __end_of_ReceiveEvt 6750  
                  _pBDTEntryEP0OutCurrent 00C0                             _Term_MainTask 6A86  
                 USBTransferOnePacket@dir 007D                      ??_UartTxBufferStatus 007D  
                 USBTransferOnePacket@len 0080                     Tmr_TmrBConfig@TmrNumb 00A3  
                 __size_of_LowPriorityIsr 00B4                    __end_of_CheckAckStatus 6C8C  
                                ??___lmul 0085                             _isxdigit$6733 0081  
                               Terminal@i 00A4                                  ??___wmul 0081  
                       __size_of_TmrBInit 0096    Tmr_RegisterTmr2IsrCallback@IsrCallback 007D  
                     _USBStdGetDscHandler 2BDA                I2cSlv_SendI2cMsg@SlaveAddr 0082  
                      __end_of_OsTmr_Wait 5488                        HttpGetMethod@Index 01C8  
                             __pdataBANK0 00E0                               __pdataBANK1 01FE  
                             __pdataBANK2 02F1                               __pdataBANK3 03BD  
                             __pdataBANK4 04E6                               __pdataBANK5 0586  
                        __CFG_LPT1OSC$OFF 000000                         __size_of_Terminal 051C  
                                ??_memcpy 0083                                  ??_memset 0083  
                   detectCmd@currentState 0095                     __end_of_triggerCmdFsm 3A7C  
                  __size_ofi1_GenerateEvt 0016                       Tmr_StartTmr@TmrNumb 007D  
                    ??_Uart_ClearRxBuffer 007D       __size_of_Uart_MdmGsmGprsReadService 00CA  
                                ??_strcat 0081                                  ??_strcpy 0081  
                                ??_strlen 007F                    __size_of_Rtcm_MainTask 008E  
                               _addCmdFsm 336E                                  ??_strtol 008F  
             __end_of_Led_SetLedBlinkTime 5D40                    __end_of_ConfigureModem 3C28  
                             _ALRMCFGbits 000F91                    _USBActiveConfiguration 00D6  
          __end_of_USBStdGetStatusHandler 4632                              _initPreamble 6A16  
                           WriteByte@Byte 007D                        __end_of_TaskNumber FC32  
                             __pbssCOMRAM 0023                   GetElapsedTime@TimeValue 008D  
                   __end_of_StringCompare 5E38                 __size_of_GetOsTickCounter 0012  
                           __pcstackBANK0 0060                             __pcstackBANK1 0100  
                           __pcstackBANK2 0200                             __pcstackBANK3 03F9  
            __size_of_USBCtrlTrfInHandler 00C2                           RiSm@MdmDrvState 002F  
                            _SetAckStatus 6B74                              _isalpha$6723 0081  
                  GenerateEvt@EventStatus 007F                                 _WriteByte 6C64  
                     __size_of_initEeprom 0090                      ?_USBStdGetDscHandler 0001  
                            _isdigit$6457 007E             UpdateSchFlag@InterruptCounter 02D9  
                          ??_triggerRelay 0085                 SetUartBaudRate@UartConfig 0096  
                     _Uart_WriteStringLen 6314                                 _delCmdFsm 3A7C  
     InitGprsNetwork@GprsNetInitNextState 002A                   GetElapsedTime@StartTime 0081  
                           _UartWriteByte 69BA                               _ALRMRPTbits 000F90  
              MyApp_Task@isCmdSuccessfull 00E2                __end_of_USBWakeFromSuspend 64C0  
            __end_of_LedBlinkStateMachine 282A                               sprintf@flag 0083  
                    __size_of_Eeprom_Read 0054                           _USBStallHandler 6180  
                              ?_SendSmsSm 0001                              _pBDTEntryOut 0306  
              __size_of_Rtcc_SetRtccValue 022E                      __size_of_GenerateEvt 0018  
                         ?_Tmr_TmrBConfig 00A0                __size_of_Rtcc_SetRtcStatus 0016  
                        _Mcu_ConfigExtInt 6A6C                __end_of_USBCheckCDCRequest 46E2  
            __size_ofi1_I2cSlv_SendI2cMsg 003A                       _OsAlrm_ClearOsAlarm 5B42  
                         ?_Tmr_TmrBIrqSet 007D                   ??_Uart_WriteConstString 0082  
                          ?_UartSetConfig 0001                      __end_of_Tmr_StartTmr 699A  
                            ??_StringCopy 008B                          _Led_SetLedStatus 66C4  
                       ??_HighPriorityIsr 0007                            ?_Term_MainTask 0001  
                        ___lwdiv@dividend 0083                              ?_Term_MainSm 0001  
                    _I2cSlv_I2cReadMsgSts 6958                          GenerateEvt@Event 007D  
                  __size_of_Tmr_TmrBPrSet 00EE                     __size_of_parseCommand 0110  
                  __size_of_waitSetupCall 004E                                 _detectCmd 4C10  
                   __size_of_Wdg_MainTask 0022                                 __pintcode 0008  
             findEmptySpot@memoryOpResult 0102             Uart_WriteString@StringToWrite 0080  
                           __pmediumconst FC0E                              ?_RtccIrqInit 0001  
                         ?_CheckAckStatus 0001                   Tmr_TmrBIrqSet@TmrIrqSts 007E  
                       __size_of_isxdigit 003C                                  ?___awdiv 007D  
                               __ptext100 50C2                                 __ptext101 4C10  
                               __ptext110 3A7C                                 __ptext102 3072  
                               __ptext111 60F2                                 __ptext103 6BDE  
                               __ptext120 5C98                                 __ptext112 4A30  
                               __ptext104 6842                                 __ptext121 3C28  
                               __ptext113 336E                                 __ptext105 6866  
                               __ptext130 19F2                                 __ptext122 5406  
                               __ptext114 6ABA                                 __ptext106 6B9A  
                           Terminal@Index 00A6                                 __ptext131 6314  
                               __ptext123 62D4                                 __ptext115 5D94  
                               __ptext107 5726                                 __ptext140 5AEA  
                               __ptext132 1D30                                 __ptext124 6958  
                               __ptext116 44C6                                 __ptext108 6C44  
                               __ptext141 2020                                 __ptext133 659C  
                               __ptext125 5CEC                                 __ptext117 55E0  
                               __ptext109 6530                                 __ptext150 58C0  
                               __ptext142 48E0                                 __ptext134 5DE6  
                               __ptext126 5B9A                                 __ptext118 4E70  
                               __ptext151 5980                                 __ptext143 6C8C  
                               __ptext135 2AA8                                 __ptext127 6392  
                               __ptext119 585A                                 __ptext160 5D40  
                               __ptext152 5152                                 __ptext144 0DC8  
                               __ptext136 3B54                                 __ptext128 5A3A  
                               __ptext161 41BA                                 __ptext153 40F2  
                               __ptext145 05EC                                 __ptext137 0ABC  
                               __ptext129 605E                                 __ptext170 2180  
                               __ptext162 67D0                                 __ptext154 6BAC  
                               __ptext146 63D0                                 __ptext138 2970  
                               __ptext171 6C64                                 __ptext163 556E  
                               __ptext155 6566                                 __ptext147 6290  
                               __ptext139 5A92                                 __ptext172 6CA4  
                               __ptext164 5FC4                                 __ptext156 4988  
                               __ptext148 69BA                                 __ptext181 688A  
                               __ptext173 6CA8                                 __ptext165 5382  
                               __ptext157 345C                                 __ptext149 5F76  
                               __ptext190 6B48                                 __ptext182 6C1E  
                               __ptext174 6B74                                 __ptext166 6750  
                               __ptext158 66C4                                 __ptext183 6A34  
                               __ptext175 6C6E                                 __ptext167 4282  
                               __ptext159 26E2                                 __ptext192 6BFE  
                               __ptext184 6BEE                                 __ptext176 6B04  
                               __ptext168 6722                                 __ptext193 3F60  
                               __ptext185 243A                                 __ptext177 6CAC  
                               __ptext169 1EB2                                 __ptext194 6B5E  
                               __ptext186 67F8                                 __ptext178 6C78  
                               __ptext195 6CB0                                 __ptext187 5B42  
                               __ptext179 6C82                                  ?___awmod 007D  
                      _Sch_SchmIntService 6C1E                                 __ptext196 6CB4  
                               __ptext188 6A50                                 __ptext197 6CB8  
                               __ptext189 64C0                                 __ptext198 0000  
                         _InitializeTasks 5488                                  ?___lldiv 0089  
                    ?_Uart_WriteStringLen 0080                                  ?___lwdiv 0083  
                                ?___lwmod 007D                           _CallClosedEvent 003E  
                            ?_Rtcc_RtcIsr 0001                               __pintcodelo 0018  
              __size_of_Mdm_HangPhoneCall 0012                   isNumberValid@isNumberOk 0080  
                 __size_of_isMasterNumber 006E                    __size_ofi2_GenerateEvt 0016  
           I2cSlv_QueryI2cData@QueryTimer 04DB                                ?_addCmdFsm 0105  
                 Eeprom_Write@WriteBuffer 008F                          ??_Rtcc_RtcConfig 0080  
                    ?_OsAlrm_ClearOsAlarm 0001                               _I2cRxPacket 0395  
                     Mdm_MainTask@Options 0001                       ?_Sch_SchmIntService 0001  
                    _USBTransferOnePacket 4408                           ?_ConfigureModem 0001  
                 ??_Irq_InitIntController 007F        Uart_MdmGsmGprsReadService@UartData 0004  
                                ?_initFsm 0001                   ?_OsAlrm_ProcessOsAlarms 0001  
                                _BAUDCON1 000F7E                                  _BAUDCON2 000F7C  
                        ?_Uart_Uart1RxIsr 0001                         ??_GetCallerNumber 0085  
                                ?_isalpha 0001                              ??_SystemInit 00AB  
                                ?_isdigit 0001                               _I2cTxPacket 039B  
          InitializeTasks@ActiveTaskIndex 02C8                    __size_of_findEmptySpot 0096  
                    __CFG_RTCOSC$T1OSCREF 000000                                  ?_isspace 0001  
                          _Mdm_GetSmsData 5726                      InitGprsNetwork@Index 0132  
                                ?_isupper 0001                Term_MainSm@TermMainSmState 02E9  
              ??_GetLastInteractionNumber 007F                           Terminal@Payload 0766  
                             _PADCFG1bits 000F3C              __end_of_USBCtrlTrfOutHandler 57F4  
                              ?_WriteByte 0001                     ??_USBStdGetDscHandler 007D  
                        _Rtcm_GetRtccDate 57F4                ConfigureModem@DelayCounter 031E  
                      __end_of_StringCopy 5922                               _ep_data_out 02CF  
                                _ALRMVALH 000F8F                                  _ALRMVALL 000F8E  
                        ___lwdiv@quotient 0088                              ?_Tmr_Tmr2Isr 0001  
                            _SendSmsEvent 00DE                           Terminal@SwTimer 04D0  
                initEeprom@memoryOpResult 0101                                  ?_sprintf 007D  
                                ?_tolower 0001                 __size_of_Rtcm_SetRtccDate 0054  
                          _setupCallTicks 03BB              __size_of_USBCtrlTrfRxService 0124  
           USBConfigureEndpoint@direction 007D                                  ?_toupper 0001  
                              ?_delCmdFsm 0105                         ?_Mdm_SetSmsFormat 0001  
                          ?_UartWriteByte 007D                    __size_of_I2c_WriteData 016E  
              ConfigureModem@DelayValueMs 0320                          _OsTmr_StartTimer 5980  
                    __size_of_Mcu_Int0Isr 0004                      __size_of_Mcu_Int1Isr 0004  
 Irq_InitIntController@GlobalInt_HighPInt 007D                __size_of_I2cSlv_SendI2cMsg 003E  
                __end_of_isNumberInMemory 4580              __size_of_USBCtrlTrfTxService 00D8  
                        ??_Rtcc_UnlockRtc 007D                             i1_GenerateEvt 6B48  
              __end_of_Mcu_StartSystemPll 69F8                              _parseCommand 3072  
                            _PhoneNumbLen 00D2                        ??_Mdm_SetSmsFormat 0083  
                            _Wdg_MainTask 68AE                             _Rtcm_MainTask 51E2  
                          ___wmul@product 0081                  ModemEvtParser@ClipString 0099  
                        SendSmsSm@SwTimer 03E1                     Terminal@ReceivedBytes 00A5  
                    ??_Sch_SchmIntService 0023                    __size_of_UpdateSchFlag 001C  
              __size_of_OsAlrm_SetOsAlarm 00C8                ??_USBCtrlEPServiceComplete 007E  
                __size_of_I2cSlv_MainTask 0054                                  _IPR1bits 000F9F  
                 LedPulseStateMachine@Led 008C                                  _IPR3bits 000FA5  
                                _PIE1bits 000F9D                                  _PIE2bits 000FA0  
                                _PIE3bits 000FA3      __size_of_Tmr_RegisterTmr2IsrCallback 000A  
            ConfigureModem@MdmConfigState 01F0           HttpGetMethod@GetMethodNextState 00D0  
                   ?_I2cSlv_I2cReadMsgSts 0001                         _I2c_InitI2cModule 556E  
                       _IncomingCallEvent 003F                                  _PIR1bits 000F9E  
                                _PIR2bits 000FA1                                  _PIR3bits 000FA4  
                       ??_LedStateMachine 0097                        __end_of_SystemInit 6664  
                                _RCONbits 000FD0                                ?_detectCmd 0001  
                           ??_putUSBUSART 0086                                  _UEP0bits 000F26  
           __size_of_I2cSlv_ReceiveI2cMsg 0040                _USBDeferINDataStagePackets 0026  
                      ?_I2c_InitI2cModule 00A2                     ??_Uart_WriteStringLen 0083  
                                _SSP2CON1 000F72                                  _SSP2CON2 000F71  
             __size_of_USBCheckStdRequest 00E4                      Rtcm_MainTask@Options 0001  
                   __size_of_savePreamble 001A              __end_of_OsTmr_GetTimerStatus 51E2  
                                _UCONbits 000F65                                  _SSP2STAT 000F73  
                ModemEvtParser@CompareIdx 00A8                      _USBConfigureEndpoint 4CAC  
                   delCmdFsm@currentState 01D4                      _UsbMasterPhoneNumber 0440  
        __size_of_USBStdFeatureReqHandler 0294                        _saveNumberInMemory 6ABA  
                   SetUartBaudRate@Module 0099            __end_of_OsAlrm_ProcessOsAlarms 2590  
                   ??_OsAlrm_ClearOsAlarm 0019                         ___wmul@multiplier 007D  
                   ?_USBTransferOnePacket 007D                                  i1___wmul 67F8  
                   __end_of_initGprsModem 50C2                       ??_I2c_InitI2cModule 00A4  
                          delCmdFsm@F9015 FC0F                 __size_of_Rtcc_AlarmConfig 006C  
              __end_of_InitModemInterface 6C94                    __end_of_Mdm_GetSmsData 578E  
                           ?_CDCTxService 0001            OsAlrm_SetOsAlarm@AlarmCallback 0089  
                  __size_of_Mdm_DrvMainFn 0006                              _RemoteWakeup 01E0  
                                _ApnLocal 031C                            _StartCondition 6CA8  
                      SetAckStatus@AckSts 007D                 __size_of_MdmHttp_MainTask 0046  
                  __size_of_Mdm_IsRinging 0024                          StringCompare@Len 0081  
             HttpGetMethod@GetMethodState 01E6                             _Tmr_TmrBPrSet 3280  
                           _waitSetupCall 5F28                       ?_saveNumberInMemory 0096  
                       _NewStringReceived 003C                              _isspace$6726 007E  
                        _UartSetConfigLow 5AEA                                  _GetSmsSm 2AA8  
                 __end_of_USBStallHandler 61C4                      Mdm_DrvMainFn@Options 0001  
                          _memoryPreamble 03A5                     __size_of_Rtcc_LockRtc 0010  
                                _ConnWait 03D6                                  _MdmCntSm 48E0  
                       ___lmul@multiplier 007D                               _INTCON2bits 000FF1  
                             _INTCON3bits 000FF0                    I2cSlv_MainTask@Options 0001  
                               copy_data0 22F2                                 copy_data1 2312  
                               copy_data2 2332                                 copy_data3 236A  
            __end_of_LedPulseStateMachine 3544                    I2cSlv_SendI2cMsg@TxSts 0084  
             ??_USBCtrlEPAllowStatusStage 007D               __end_of_USBStdSetCfgHandler 362A  
                          ?i1_GenerateEvt 0019                  Tmr_TmrBConfig@TmrBConfig 00A0  
                                _OsAlarms 0600                            ?_Rtcm_MainTask 0001  
                   OsTmr_StartTimer@Timer 0081              LedBlinkStateMachine@LedBlink 008A  
                                _ReadByte 6C6E                             i2_GenerateEvt 6B5E  
                         ??_UartSetConfig 007D                               ??_SendSmsSm 009B  
                   cmdVisualEffet@seconds 0094                        __end_of_device_dsc FE5B  
               __end_of_I2c_InitI2cModule 55E0                                  _MsgReady FE32  
                         ??_Term_MainTask 00A7                              _savePreamble 6AA0  
                 __end_of_InitializeTasks 54FC                initGprsModem@isInitialized 0099  
                 ?_USBCtrlTrfSetupHandler 0001                            isNumberValid@i 0081  
                           _findEmptySpot 4E70               __end_of_I2cSlv_QueryI2cData 3CFA  
                              _ANCON1bits 000F49                                  _RxBuffer 0C58  
                 USBStdGetStatusHandler@p 007E                                  __Hrparam 0000  
                                _TmrBInit 4D44                      __size_of_SetBaudRate 004E  
                            ??_initEeprom 00B0                      ??_saveNumberInMemory 0098  
                            ?_TurnOnModem 0001                            _LowPriorityIsr 0018  
                               memcpy@tmp 0083                      Tmr_TmrBPrSet@Divisor 009C  
                                __Lrparam 0000                    USBTransferOnePacket@ep 0081  
             __end_of_Uart_InitUartModule 0DC8                                  _SmsEvent 00DB  
                         _SetUartBaudRate 2970              i1I2cSlv_SendI2cMsg@SlaveAddr 001E  
                                _Terminal 00D0                                  _SetupPkt 000430  
               I2cSlv_SendI2cMsg@TxBuffer 0080                     SetBaudRate@McuClockHz 009A  
                   ?_USBConfigureEndpoint 007D              OsAlrm_ClearOsAlarm@OsAlarmId 0019  
                           _I2c_WriteData 1EB2                          __size_of___awdiv 0086  
                        __size_of___awmod 0072                  __end_of_UpdateOsCounters 6BFE  
                    __end_of_triggerRelay 6530                          __size_of___lldiv 0084  
                       Terminal@SlaveAddr 02EB                       OsTmr_Wait@WaitTimer 009B  
                        __size_of___lwdiv 0054                      Tmr_TmrBPrSet@TmrNumb 009B  
                  __end_ofdelCmdFsm@F9015 FC1C                          __size_of___lwmod 0044  
                I2c_WriteData@WritePacket 007E                         Terminal@TermState 02ED  
                             ??_addCmdFsm 00B0                             _UpdateSchFlag 6A34  
                     __end_of_putUSBUSART 6936                               _line_coding 037C  
                            _Rtcc_LockRtc 6BCE              I2cSlv_QueryI2cData@SlaveAddr 00A8  
                    _LedBlinkStateMachine 26E2               triggerCmdFsm@receivedNumber 0105  
                  __end_of_StartCondition 6CAC                            ??_CDCTxService 0084  
                ??_Pm_DsReleasePinControl 007D                    SendSmsSm@SendSms_State 01ED  
               Rtcm_GetRtccDate@LocalDate 008A                  parseCommand@addNumberCmd 0088  
                         ?_Mdm_GetSmsData 008F                  I2c_WriteData@WriteStatus 0035  
                            _isupper$6729 007E                                strcat@from 007F  
                 I2c_ReadData@DataCounter 0033                            ?_Tmr_TmrBPrSet 0096  
                        __size_of_initFsm 00A8                            ?_waitSetupCall 0001  
                        ??_ModemEvtParser 008F                          _GetOsTickCounter 6BAC  
                        __size_of_isalpha 0030                          __size_of_isdigit 0022  
                 __size_of_USBDeviceTasks 0186                           ___lwdiv@divisor 0085  
                            Terminal@Addr 03A9                  ModemEvtParser@RingString 00A3  
                             ??_WriteByte 007D                          __size_of_isspace 002A  
                         ___lwdiv@counter 0087                                  __ptext10 6012  
                                __ptext11 697A                                  __ptext20 681E  
                                __ptext12 4D44                                  __ptext21 613A  
                                __ptext13 69F8                           ??_UartWriteByte 007E  
                                __ptext30 65D0                                  __ptext22 5E88  
                                __ptext14 2D08                                  __ptext31 6180  
                                __ptext23 5BF0                                  __ptext15 5488  
                                __ptext40 3544                                  __ptext32 68D0  
                                __ptext24 6C9A                                  __ptext16 2F52  
                                __ptext41 4580                                  __ptext33 2590  
                                __ptext25 68AE                                  __ptext17 6A86  
                                __ptext50 2E2E                                  __ptext42 2BDA  
                                __ptext34 4F06                                  __ptext26 6B88  
                                __ptext18 51E2                                  __ptext51 3E94  
                                __ptext43 135A                                  __ptext35 60AA  
                                __ptext27 6CA0                                  __ptext19 3DC8  
                                __ptext60 00D0                                  __ptext52 4346  
                                __ptext44 5922                                  __ptext36 5270  
                                __ptext28 1BAA                                  __ptext61 362A  
                                __ptext53 37F4                                  __ptext45 4632  
                                __ptext37 3182                                  __ptext29 6486  
                                __ptext70 6914                                  __ptext62 6AD4  
                                __ptext54 282A                                  __ptext46 564E  
                                __ptext38 4B72                                  __ptext71 6208  
                                __ptext63 644A                                  __ptext55 10B6  
                                __ptext47 61C4                                  __ptext39 3710  
                                __ptext80 15EE                                  __ptext72 478E  
                                __ptext64 181C                                  __ptext56 6354  
                                __ptext48 4CAC                                  __ptext81 54FC  
                                __ptext73 624C                                  __ptext65 6AEC  
                                __ptext57 59DE                                  __ptext49 578E  
                                __ptext90 6C38                                  __ptext82 52FC  
                                __ptext74 4DDA                                  __ptext66 67A6  
                                __ptext58 3CFA                                  __ptext91 39A4  
                                __ptext83 6BCE                                  __ptext75 4408  
                                __ptext67 6694                                  __ptext59 6664  
                                __ptext92 64FA                                  __ptext84 57F4  
                                __ptext76 38CC                                  __ptext68 68F2  
                                __ptext93 4838                                  __ptext85 4F9A  
                                __ptext77 6936                                  __ptext69 6602  
                                __ptext94 5F28                                  __ptext86 6B1C  
                                __ptext78 5C44                                  __ptext95 699A  
                                __ptext87 4AD2                                  __ptext79 6BBE  
                                __ptext96 6AA0                                  __ptext88 6B32  
                                __ptext97 6A16                                  __ptext89 56BA  
                                __ptext98 502E                                  __ptext99 5ED8  
                        __size_of_isupper 0022                   initEeprom@addressToRead 0100  
                              _I2cDummyTx 6A50                    Tmr_TmrBIrqSet@Priority 007D  
                      __end_of_initEeprom 5152                     __end_of_HttpGetMethod 0ABC  
                    delCmdFsm@emptyNumber 010B                  __size_of_InitGprsNetwork 02EE  
                            _SSP2CON2bits 000F71                               ??_delCmdFsm 00B0  
                               isxdigit@c 0082                          __size_of_sprintf 00CE  
                        __size_of_tolower 0018                     __size_of_Tmr_StartTmr 0020  
                        __size_of_toupper 0018                           triggerRelay@res 0085  
                          ?i2_GenerateEvt 0001                                _DSCONHbits 000F4D  
                              strcpy@from 007F                         _Mmd_RingIndicator 0030  
                              _DSCONLbits 000F4C                        i1GenerateEvt@Event 0019  
                   delCmdFsm@searchNumber 011B                         _Mdm_IsSmsReceived 6842  
             __size_of_UsbDevice_MainTask 0024                             __size_of_atoi 00D8  
                      TmrBInit@Postscaler 007E            __end_of_USBCtrlTrfSetupHandler 52FC  
                           __size_of_main 000C                         ?_USBCtrlEPService 0001  
                           __size_of_itoa 0044                 Mdm_GetSmsData@MessageText 008F  
                           __size_of_utoa 00AA                       Led_MainTask@Options 0001  
                           __size_of_xtoi 00E6                    ??_I2cSlv_I2cReadMsgSts 0081  
                          ?_findEmptySpot 0100                    __end_of_LowPriorityIsr 00CC  
                   __end_of_CheckTxStatus 6C82                        ?_Mdm_IsSmsReceived 0001  
                           _Mdm_DrvMainFn 6C9A                        ??_USBCtrlEPService 0097  
                                _isxdigit 644A                             _Mdm_IsRinging 6866  
                     _USBCtrlTrfInHandler 4346                  I2c_ReadData@I2cReadState 0034  
             __end_of_triggerVisualEffect 6C44                __end_of_Mdm_RequestSmsData 6BEE  
          cmdVisualEffet@isCmdSuccessfull 0093                               ??_detectCmd 0095  
                   __end_of_ScheduleTasks 2E2E                   __size_of_GetElapsedTime 00C8  
                           ?_Led_MainTask 0001                                  _outPipes 01C9  
                    _USBCtrlTrfOutHandler 578E                       Led_SetLedStatus@Led 007E  
                                int$flags 0042                                strtol@base 008D  
                          ?_I2c_WriteData 007E                                  atoi@sign 0087  
                       ??_I2cSlv_MainTask 00A6                           StringCopy@Index 008D  
               _USBCtrlEPAllowStatusStage 3E94                       ??_Mdm_IsSmsReceived 0081  
                          _receivedNumber 04B6                      __size_of_Term_MainSm 02A4  
            ScheduleTasks@ActiveTaskIndex 02C8                                strtol@sign 0093  
                         Term_MainSm@Data 0461                       delCmdFsm@isComplete 0118  
                    __size_of_RtccIrqInit 0016                 __size_of_Uart_WriteString 003E  
                  ??_USBTransferOnePacket 0081                            _isMasterNumber 55E0  
                             _relayBuffer 02FE                            ?_UpdateSchFlag 0001  
                  __size_of_StopCondition 0004                     ?_LedBlinkStateMachine 008A  
                    __size_of_Rtcc_RtcIsr 0004                       i1_I2cSlv_SendI2cMsg 64C0  
                __end_of_Mcu_ConfigExtInt 6A86                             ?_Eeprom_Reset 0001  
                         ?_StartCondition 0001                 _USBDeferStatusStagePacket 00CA  
                CDCTxService@byte_to_send 0085                             ?_Eeprom_Write 008F  
           I2c_WriteData@TentativeCounter 0036                               _OSCTUNEbits 000F9B  
                              _INTCONbits 000FF2                  UartWriteByte@ByteToWrite 007D  
                            _Tmr_StartTmr 697A                  __end_of_Led_SetLedStatus 66F4  
                    ?_USBCtrlTrfInHandler 0001                                  memcpy@d1 007D  
                                memcpy@s1 007F                I2cSlv_I2cReadMsgSts@Result 0081  
           USBCtrlTrfTxService@byteToSend 007D                             ?_I2cSetConfig 0001  
                                itoa@base 0097               i1I2cSlv_SendI2cMsg@TxBuffer 001C  
                           ?_I2c_ReadData 0080                             ?_I2cSendMsgSm 0001  
                                isalpha@c 0082                    __size_of_Mcu_SetWdgSts 0012  
                                isdigit@c 007F                                  memset@p1 007D  
                   Eeprom_Read@DataLength 00AB                          ?_USBStallHandler 0001  
                         ??i1_GenerateEvt 001B                          _Rtcm_SetRtccDate 5C44  
                USBStdFeatureReqHandler@p 0095                          ??_Tmr_TmrBConfig 00A2  
                           ??_ClearBuffer 0081                           _HighPriorityIsr 0008  
                         ??_Rtcm_MainTask 0092                 __end_of_Mdm_IsSmsReceived 6866  
                        ??_Tmr_TmrBIrqSet 007F                  __size_of_secondsAppTimer 00A2  
                                intlevel1 0000                                  intlevel2 0000  
                    parseCommand@resetCmd 0090                      _OsTmr_GetTimerStatus 5152  
                               sprintf@ap 0084                                 sprintf@cp 0087  
                               sprintf@sp 007D                         TmrBInit@Prescaler 007D  
                    __size_of_Tmr_Tmr2Isr 0024                    __size_of_USBDeviceInit 0152  
 __end_of_USER_USB_CALLBACK_EVENT_HANDLER 5980  __size_of_USER_USB_CALLBACK_EVENT_HANDLER 005E  
       ??_USER_USB_CALLBACK_EVENT_HANDLER 008F          ?_USER_USB_CALLBACK_EVENT_HANDLER 0089  
         _USER_USB_CALLBACK_EVENT_HANDLER 5922                   Rtcc_SetRtcStatus@Status 007D  
                        ___lwmod@dividend 007D                   __end_of_SetUartBaudRate 2AA8  
                                isspace@c 007F                          ___lldiv@dividend 0089  
                GsmGprsTerminal@UsbBuffer 0800                      ?i1_I2cSlv_SendI2cMsg 001C  
              __size_of_I2c_InitI2cModule 0072                            ?_Mdm_DrvMainFn 0001  
                        ??_CheckAckStatus 007D                           ?_LowPriorityIsr 0001  
                        ?_InitializeTasks 0001                                  isupper@c 007F  
                          ?_Mdm_IsRinging 0001                                _OSCCONbits 000FD3  
               I2cSlv_ReceiveI2cMsg@RxSts 0084                    MyApp_Task@currentState 01D9  
          __size_of_Uart_WriteConstString 0044                   ModemEvtParser@SmsString 009E  
                          ??_Led_MainTask 009A             __end_of_Uart_WriteConstString 62D4  
                           OsTmr_Wait@Ret 00A1                         OsTmr_Wait@DelayMs 009D  
                 __size_of_InitSchedTimer 002E                    ??_USBConfigureEndpoint 007E  
                   ?_USBCtrlTrfOutHandler 0001               __size_of_UartTxBufferStatus 004E  
                         _GetCallerNumber 6530                  __end_of_Rtcm_GetRtccDate 585A  
                             _putUSBUSART 6914                 Eeprom_Write@CommandLength 0095  
                     _USBCtrlTrfRxService 2E2E                    __end_of_isMasterNumber 564E  
                        ??_ConfigureModem 00A2                    Rtcc_SetRtccValue@Value 0085  
                      _USBWakeFromSuspend 6486                             ?_getSetupCall 0001  
                 _USBStdFeatureReqHandler 135A                  __end_of_OsTmr_StartTimer 59DE  
                    _LedPulseStateMachine 345C                        _USBCheckCDCRequest 4632  
                     _USBCtrlTrfTxService 37F4                       RtccIrqInit@Priority 007D  
                                utoa@base 008E                            ??_Eeprom_Reset 0085  
                              _RTCCFGbits 000F3F               __size_of_Uart_ClearRxBuffer 0034  
                           _isMemoryEmpty 01FE                            ??_Eeprom_Write 0092  
                        _Rtcc_AlarmConfig 56BA                           ??_Tmr_TmrBPrSet 009A  
                         ??_waitSetupCall 0093                                  sprintf@c 0086  
                                sprintf@f 007F                                  tolower@c 007D  
                                strcat@cp 0081                                  strcat@to 007D  
                     ?_USBWakeFromSuspend 0001           __size_of_Pm_DsReleasePinControl 0006  
                        ___lldiv@quotient 0091                InitGprsNetwork@GprsInitSts 01FF  
                         ___lwmod@divisor 007F               GsmGprsTerminal@FirstRecFlag 02EE  
                   ??_USBCtrlTrfInHandler 007E                                  strcpy@cp 0081  
                                strlen@cp 0081                                  strcpy@to 007D  
               UsbDevice_MainTask@Options 0001                     _USBAlternateInterface 02EF  
                         ___lwmod@counter 0081                             ?_Mdm_MainTask 0001  
                          ??_I2cSetConfig 007D            __size_of_Irq_InitIntController 002A  
                                toupper@c 007D           SetUartBaudRate@BaudRateRegister 009A  
                     ?_USBCheckCDCRequest 0001                          _MdmHttp_MainTask 613A  
                  __size_of_isNumberValid 0066                            ??_I2c_ReadData 0082  
                          ??_I2cSendMsgSm 0084             __end_of_Irq_InitIntController 67A6  
                   ReceiveEvt@EventStatus 0080              ?_Tmr_RegisterTmr2IsrCallback 007D  
                 delCmdFsm@numberInMemory 011A                       USBEnableEndpoint@ep 0088  
                         _endpoint_number 00CB                                _WDTCONbits 000FC0  
                             ?_I2cDummyTx 0001                                  xtoi@sign 0087  
                  _NewMdmEvtParserRequest 003B       Uart_MdmGsmGprsReadService@RxCounter 0023  
                    ?_USBCtrlTrfRxService 0001                           ??i2_GenerateEvt 0003  
            __size_of_Led_SetLedBlinkTime 0054                             ?_getsUSBUSART 0084  
                           ??_Eeprom_Read 00AC                  UartTxBufferStatus@Module 007E  
                   ?_OsTmr_GetTimerStatus 0095             SetUartBaudRate@DivisionFactor 009C  
          I2cSlv_ReceiveI2cMsg@DataLenght 0083                             ??_GenerateEvt 007F  
                         _LedStateMachine 4988          Uart_MdmGsmGprsReadService@Module 0001  
                         TmrBInit@TmrNumb 0080                  ?_USBCtrlEPAllowDataStage 0001  
                    ?_USBCtrlTrfTxService 0001              ??_Uart_MdmGsmGprsReadService 0005  
                         ??_findEmptySpot 00B0                             _StopCondition 6CA4  
                   ??i1_I2cSlv_SendI2cMsg 0020                         ?_isNumberInMemory 0100  
                  Led_SetLedStatus@LedSts 007D              _USBStatusStageTimeoutCounter 0029  
                        Mdm_IsRinging@Ret 0081                    __size_of_triggerCmdFsm 00D8  
                 __size_of_cmdVisualEffet 0048                      ??_USBWakeFromSuspend 0091  
              USBTransferOnePacket@handle 0082                         ??_InitGprsNetwork 009E  
                     __end_of_ClearBuffer 659C                      __end_of_CDCTxService 2970  
                      ??_isNumberInMemory 00B0                      ??_USBCheckCDCRequest 007D  
                 __size_of_EnableReceiver 0004                                _USB_CD_Ptr FC2E  
                   __size_of_triggerRelay 0036                     Eeprom_Read@ReadBuffer 00A9  
                         ??_I2c_WriteData 0080                   ConfigureModem@NextState 01EF  
                 _UsbMasterPhoneNumberLen 031A                             ?_Mcu_ClearWdg 0001  
                           _Mcu_SetWdgSts 6B88  
