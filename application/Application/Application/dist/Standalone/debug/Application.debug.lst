

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sat Apr  2 13:09:19 2022

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F46J50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK3,global,class=CODE,delta=1,noexec
     9                           	psect	idataBANK4,global,class=CODE,delta=1,noexec
    10                           	psect	idataBANK5,global,class=CODE,delta=1,noexec
    11                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
    12                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    13                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    19                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    21                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    22                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    23                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    24                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    25                           	psect	dataBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    26                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    27                           	psect	bssBANK7,global,class=BANK7,space=1,delta=1,lowdata,noexec
    28                           	psect	bssBANK8,global,class=BANK8,space=1,delta=1,lowdata,noexec
    29                           	psect	bssBANK9,global,class=BANK9,space=1,delta=1,lowdata,noexec
    30                           	psect	bssBIGRAMl,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    31                           	psect	cstackBANK10,global,class=BANK10,space=1,delta=1,noexec
    32                           	psect	cstackBANK4,global,class=BANK4,space=1,delta=1,noexec
    33                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    34                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    35                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    36                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    37                           	psect	text0,global,reloc=2,class=CODE,delta=1
    38                           	psect	text1,global,reloc=2,class=CODE,delta=1
    39                           	psect	text2,global,reloc=2,class=CODE,delta=1
    40                           	psect	text3,global,reloc=2,class=CODE,delta=1
    41                           	psect	text4,global,reloc=2,class=CODE,delta=1
    42                           	psect	text5,global,reloc=2,class=CODE,delta=1
    43                           	psect	text6,global,reloc=2,class=CODE,delta=1
    44                           	psect	text7,global,reloc=2,class=CODE,delta=1
    45                           	psect	text8,global,reloc=2,class=CODE,delta=1
    46                           	psect	text9,global,reloc=2,class=CODE,delta=1
    47                           	psect	text10,global,reloc=2,class=CODE,delta=1
    48                           	psect	text11,global,reloc=2,class=CODE,delta=1
    49                           	psect	text12,global,reloc=2,class=CODE,delta=1
    50                           	psect	text13,global,reloc=2,class=CODE,delta=1
    51                           	psect	text14,global,reloc=2,class=CODE,delta=1
    52                           	psect	text15,global,reloc=2,class=CODE,delta=1
    53                           	psect	text16,global,reloc=2,class=CODE,delta=1
    54                           	psect	text17,global,reloc=2,class=CODE,delta=1
    55                           	psect	text18,global,reloc=2,class=CODE,delta=1
    56                           	psect	text19,global,reloc=2,class=CODE,delta=1
    57                           	psect	text20,global,reloc=2,class=CODE,delta=1
    58                           	psect	text21,global,reloc=2,class=CODE,delta=1
    59                           	psect	text22,global,reloc=2,class=CODE,delta=1
    60                           	psect	text23,global,reloc=2,class=CODE,delta=1
    61                           	psect	text24,global,reloc=2,class=CODE,delta=1
    62                           	psect	text25,global,reloc=2,class=CODE,delta=1
    63                           	psect	text26,global,reloc=2,class=CODE,delta=1
    64                           	psect	text27,global,reloc=2,class=CODE,delta=1
    65                           	psect	text28,global,reloc=2,class=CODE,delta=1
    66                           	psect	text29,global,reloc=2,class=CODE,delta=1
    67                           	psect	text30,global,reloc=2,class=CODE,delta=1
    68                           	psect	text31,global,reloc=2,class=CODE,delta=1
    69                           	psect	text32,global,reloc=2,class=CODE,delta=1
    70                           	psect	text33,global,reloc=2,class=CODE,delta=1
    71                           	psect	text34,global,reloc=2,class=CODE,delta=1
    72                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    73                           	psect	text36,global,reloc=2,class=CODE,delta=1
    74                           	psect	text37,global,reloc=2,class=CODE,delta=1
    75                           	psect	text38,global,reloc=2,class=CODE,delta=1
    76                           	psect	text39,global,reloc=2,class=CODE,delta=1
    77                           	psect	text40,global,reloc=2,class=CODE,delta=1
    78                           	psect	text41,global,reloc=2,class=CODE,delta=1
    79                           	psect	text42,global,reloc=2,class=CODE,delta=1
    80                           	psect	text43,global,reloc=2,class=CODE,delta=1
    81                           	psect	text44,global,reloc=2,class=CODE,delta=1
    82                           	psect	text45,global,reloc=2,class=CODE,delta=1
    83                           	psect	text46,global,reloc=2,class=CODE,delta=1
    84                           	psect	text47,global,reloc=2,class=CODE,delta=1
    85                           	psect	text48,global,reloc=2,class=CODE,delta=1
    86                           	psect	text49,global,reloc=2,class=CODE,delta=1
    87                           	psect	text50,global,reloc=2,class=CODE,delta=1
    88                           	psect	text51,global,reloc=2,class=CODE,delta=1
    89                           	psect	text52,global,reloc=2,class=CODE,delta=1
    90                           	psect	text53,global,reloc=2,class=CODE,delta=1
    91                           	psect	text54,global,reloc=2,class=CODE,delta=1
    92                           	psect	text55,global,reloc=2,class=CODE,delta=1
    93                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=1
    94                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    95                           	psect	text58,global,reloc=2,class=CODE,delta=1
    96                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    97                           	psect	text60,global,reloc=2,class=CODE,delta=1
    98                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=1
    99                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=1
   100                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=1
   101                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=1
   102                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=1
   103                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=1
   104                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=1
   105                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=1
   106                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=1
   107                           	psect	text70,global,reloc=2,class=CODE,delta=1
   108                           	psect	text71,global,reloc=2,class=CODE,delta=1,group=1
   109                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=1
   110                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=1
   111                           	psect	text74,global,reloc=2,class=CODE,delta=1
   112                           	psect	text75,global,reloc=2,class=CODE,delta=1
   113                           	psect	text76,global,reloc=2,class=CODE,delta=1,group=1
   114                           	psect	text77,global,reloc=2,class=CODE,delta=1,group=1
   115                           	psect	text78,global,reloc=2,class=CODE,delta=1
   116                           	psect	text79,global,reloc=2,class=CODE,delta=1
   117                           	psect	text80,global,reloc=2,class=CODE,delta=1
   118                           	psect	text81,global,reloc=2,class=CODE,delta=1,group=1
   119                           	psect	text82,global,reloc=2,class=CODE,delta=1,group=1
   120                           	psect	text83,global,reloc=2,class=CODE,delta=1
   121                           	psect	text84,global,reloc=2,class=CODE,delta=1
   122                           	psect	text85,global,reloc=2,class=CODE,delta=1
   123                           	psect	text86,global,reloc=2,class=CODE,delta=1
   124                           	psect	text87,global,reloc=2,class=CODE,delta=1
   125                           	psect	text88,global,reloc=2,class=CODE,delta=1
   126                           	psect	text89,global,reloc=2,class=CODE,delta=1
   127                           	psect	text90,global,reloc=2,class=CODE,delta=1
   128                           	psect	text91,global,reloc=2,class=CODE,delta=1
   129                           	psect	text92,global,reloc=2,class=CODE,delta=1
   130                           	psect	text93,global,reloc=2,class=CODE,delta=1
   131                           	psect	text94,global,reloc=2,class=CODE,delta=1
   132                           	psect	text95,global,reloc=2,class=CODE,delta=1
   133                           	psect	text96,global,reloc=2,class=CODE,delta=1
   134                           	psect	text97,global,reloc=2,class=CODE,delta=1
   135                           	psect	text98,global,reloc=2,class=CODE,delta=1
   136                           	psect	text99,global,reloc=2,class=CODE,delta=1
   137                           	psect	text100,global,reloc=2,class=CODE,delta=1
   138                           	psect	text101,global,reloc=2,class=CODE,delta=1
   139                           	psect	text102,global,reloc=2,class=CODE,delta=1
   140                           	psect	text103,global,reloc=2,class=CODE,delta=1
   141                           	psect	text104,global,reloc=2,class=CODE,delta=1
   142                           	psect	text105,global,reloc=2,class=CODE,delta=1
   143                           	psect	text106,global,reloc=2,class=CODE,delta=1
   144                           	psect	text107,global,reloc=2,class=CODE,delta=1
   145                           	psect	text108,global,reloc=2,class=CODE,delta=1
   146                           	psect	text109,global,reloc=2,class=CODE,delta=1
   147                           	psect	text110,global,reloc=2,class=CODE,delta=1
   148                           	psect	text111,global,reloc=2,class=CODE,delta=1
   149                           	psect	text112,global,reloc=2,class=CODE,delta=1
   150                           	psect	text113,global,reloc=2,class=CODE,delta=1
   151                           	psect	text114,global,reloc=2,class=CODE,delta=1
   152                           	psect	text115,global,reloc=2,class=CODE,delta=1
   153                           	psect	text116,global,reloc=2,class=CODE,delta=1
   154                           	psect	text117,global,reloc=2,class=CODE,delta=1
   155                           	psect	text118,global,reloc=2,class=CODE,delta=1
   156                           	psect	text119,global,reloc=2,class=CODE,delta=1
   157                           	psect	text120,global,reloc=2,class=CODE,delta=1
   158                           	psect	text121,global,reloc=2,class=CODE,delta=1
   159                           	psect	text122,global,reloc=2,class=CODE,delta=1
   160                           	psect	text123,global,reloc=2,class=CODE,delta=1
   161                           	psect	text124,global,reloc=2,class=CODE,delta=1
   162                           	psect	text125,global,reloc=2,class=CODE,delta=1
   163                           	psect	text126,global,reloc=2,class=CODE,delta=1
   164                           	psect	text127,global,reloc=2,class=CODE,delta=1
   165                           	psect	text128,global,reloc=2,class=CODE,delta=1
   166                           	psect	text129,global,reloc=2,class=CODE,delta=1
   167                           	psect	text130,global,reloc=2,class=CODE,delta=1
   168                           	psect	text131,global,reloc=2,class=CODE,delta=1
   169                           	psect	text132,global,reloc=2,class=CODE,delta=1
   170                           	psect	text133,global,reloc=2,class=CODE,delta=1
   171                           	psect	text134,global,reloc=2,class=CODE,delta=1
   172                           	psect	text135,global,reloc=2,class=CODE,delta=1
   173                           	psect	text136,global,reloc=2,class=CODE,delta=1
   174                           	psect	text137,global,reloc=2,class=CODE,delta=1,group=1
   175                           	psect	text138,global,reloc=2,class=CODE,delta=1
   176                           	psect	text139,global,reloc=2,class=CODE,delta=1
   177                           	psect	text140,global,reloc=2,class=CODE,delta=1
   178                           	psect	text141,global,reloc=2,class=CODE,delta=1
   179                           	psect	text142,global,reloc=2,class=CODE,delta=1
   180                           	psect	text143,global,reloc=2,class=CODE,delta=1
   181                           	psect	text144,global,reloc=2,class=CODE,delta=1
   182                           	psect	text145,global,reloc=2,class=CODE,delta=1
   183                           	psect	text146,global,reloc=2,class=CODE,delta=1
   184                           	psect	text147,global,reloc=2,class=CODE,delta=1
   185                           	psect	text148,global,reloc=2,class=CODE,delta=1
   186                           	psect	text149,global,reloc=2,class=CODE,delta=1
   187                           	psect	text150,global,reloc=2,class=CODE,delta=1
   188                           	psect	text151,global,reloc=2,class=CODE,delta=1
   189                           	psect	text152,global,reloc=2,class=CODE,delta=1
   190                           	psect	text153,global,reloc=2,class=CODE,delta=1
   191                           	psect	text154,global,reloc=2,class=CODE,delta=1
   192                           	psect	text155,global,reloc=2,class=CODE,delta=1
   193                           	psect	text156,global,reloc=2,class=CODE,delta=1
   194                           	psect	text157,global,reloc=2,class=CODE,delta=1
   195                           	psect	text158,global,reloc=2,class=CODE,delta=1,group=1
   196                           	psect	text159,global,reloc=2,class=CODE,delta=1
   197                           	psect	text160,global,reloc=2,class=CODE,delta=1,group=1
   198                           	psect	text161,global,reloc=2,class=CODE,delta=1
   199                           	psect	text162,global,reloc=2,class=CODE,delta=1
   200                           	psect	text163,global,reloc=2,class=CODE,delta=1,group=1
   201                           	psect	text164,global,reloc=2,class=CODE,delta=1
   202                           	psect	text165,global,reloc=2,class=CODE,delta=1
   203                           	psect	text166,global,reloc=2,class=CODE,delta=1
   204                           	psect	text167,global,reloc=2,class=CODE,delta=1
   205                           	psect	text168,global,reloc=2,class=CODE,delta=1
   206                           	psect	text169,global,reloc=2,class=CODE,delta=1
   207                           	psect	text170,global,reloc=2,class=CODE,delta=1
   208                           	psect	text171,global,reloc=2,class=CODE,delta=1
   209                           	psect	text172,global,reloc=2,class=CODE,delta=1
   210                           	psect	text173,global,reloc=2,class=CODE,delta=1
   211                           	psect	text174,global,reloc=2,class=CODE,delta=1
   212                           	psect	text175,global,reloc=2,class=CODE,delta=1
   213                           	psect	text176,global,reloc=2,class=CODE,delta=1
   214                           	psect	text177,global,reloc=2,class=CODE,delta=1
   215                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
   216                           	psect	text179,global,reloc=2,class=CODE,delta=1
   217                           	psect	text180,global,reloc=2,class=CODE,delta=1
   218                           	psect	text181,global,reloc=2,class=CODE,delta=1
   219                           	psect	text182,global,reloc=2,class=CODE,delta=1
   220                           	psect	text183,global,reloc=2,class=CODE,delta=1
   221                           	psect	text184,global,reloc=2,class=CODE,delta=1
   222                           	psect	text185,global,reloc=2,class=CODE,delta=1
   223                           	psect	text186,global,reloc=2,class=CODE,delta=1
   224                           	psect	text187,global,reloc=2,class=CODE,delta=1
   225                           	psect	text188,global,reloc=2,class=CODE,delta=1
   226                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   227                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   228                           	psect	text190,global,reloc=2,class=CODE,delta=1
   229                           	psect	text191,global,reloc=2,class=CODE,delta=1
   230                           	psect	text192,global,reloc=2,class=CODE,delta=1
   231                           	psect	text193,global,reloc=2,class=CODE,delta=1
   232                           	psect	text194,global,reloc=2,class=CODE,delta=1
   233                           	psect	text195,global,reloc=2,class=CODE,delta=1
   234                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   235                           	psect	text196,global,reloc=2,class=CODE,delta=1
   236                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   237                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   238                           	dabs	1,0x400,48,_BDT
   239                           	dabs	1,0x438,8,_CtrlTrfData
   240                           	dabs	1,0x430,8,_SetupPkt
   241  0000                     
   242                           ; Version 1.45
   243                           ; Generated 16/11/2017 GMT
   244                           ; 
   245                           ; Copyright © 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   246                           ; All rights reserved.
   247                           ; 
   248                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   249                           ; 
   250                           ; Redistribution and use in source and binary forms, with or without modification, are
   251                           ; permitted provided that the following conditions are met:
   252                           ; 
   253                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   254                           ;        conditions and the following disclaimer.
   255                           ; 
   256                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   257                           ;        of conditions and the following disclaimer in the documentation and/or other
   258                           ;        materials provided with the distribution.
   259                           ; 
   260                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   261                           ;        software without specific prior written permission.
   262                           ; 
   263                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   264                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   265                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   266                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   267                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   268                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   269                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   270                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   271                           ; 
   272                           ; 
   273                           ; Code-generator required, PIC18F46J50 Definitions
   274                           ; 
   275                           ; SFR Addresses
   276  0000                     
   277                           	psect	idataBANK0
   278  006B4E                     __pidataBANK0:
   279                           	opt stack 0
   280                           
   281                           ;initializer for findEmptySpot@currentPosition
   282  006B4E  20                 	db	32
   283                           
   284                           ;initializer for isNumberInMemory@currentPosition
   285  006B4F  20                 	db	32
   286                           
   287                           	psect	idataBANK1
   288  006B50                     __pidataBANK1:
   289                           	opt stack 0
   290                           
   291                           ;initializer for _isMemoryEmpty
   292  006B50  01                 	db	1
   293                           
   294                           ;initializer for InitGprsNetwork@GprsInitSts
   295  006B51  01                 	db	1
   296                           
   297                           	psect	idataBANK2
   298  006ABC                     __pidataBANK2:
   299                           	opt stack 0
   300                           
   301                           ;initializer for Terminal@EchoOption
   302  006ABC  01                 	db	1
   303                           
   304                           ;initializer for _MainSystemTimebaseFlag
   305  006ABD  01                 	db	1
   306                           
   307                           ;initializer for _ConnTimeout
   308  006ABE  00                 	db	0
   309  006ABF  01                 	db	1
   310  006AC0  0000               	dw	0
   311  006AC2  0000               	dw	0
   312  006AC4  0000               	dw	0
   313  006AC6  0000               	dw	0
   314  006AC8  00                 	db	0
   315                           
   316                           	psect	idataBANK3
   317  0062AE                     __pidataBANK3:
   318                           	opt stack 0
   319                           
   320                           ;initializer for ModemEvtParser@F9114
   321  0062AE  2B                 	db	43
   322  0062AF  43                 	db	67
   323  0062B0  4D                 	db	77
   324  0062B1  54                 	db	84
   325  0062B2  49                 	db	73
   326                           
   327                           ;initializer for ModemEvtParser@F9112
   328  0062B3  2B                 	db	43
   329  0062B4  43                 	db	67
   330  0062B5  4C                 	db	76
   331  0062B6  49                 	db	73
   332  0062B7  50                 	db	80
   333                           
   334                           ;initializer for ModemEvtParser@F9110
   335  0062B8  52                 	db	82
   336  0062B9  49                 	db	73
   337  0062BA  4E                 	db	78
   338  0062BB  47                 	db	71
   339                           
   340                           ;initializer for triggerRelay@F9012
   341  0062BC  50                 	db	80
   342  0062BD  00                 	db	0
   343                           
   344                           ;initializer for Term_MainSm@TermDelay
   345  0062BE  01                 	db	1
   346  0062BF  01                 	db	1
   347  0062C0  0000               	dw	0
   348  0062C2  0000               	dw	0
   349  0062C4  0000               	dw	0
   350  0062C6  0000               	dw	0
   351  0062C8  00                 	db	0
   352                           
   353                           ;initializer for _ConnWait
   354  0062C9  00                 	db	0
   355  0062CA  01                 	db	1
   356  0062CB  0000               	dw	0
   357  0062CD  0000               	dw	0
   358  0062CF  0000               	dw	0
   359  0062D1  0000               	dw	0
   360  0062D3  00                 	db	0
   361                           
   362                           ;initializer for SendSmsSm@SwTimer
   363  0062D4  01                 	db	1
   364  0062D5  01                 	db	1
   365  0062D6  0000               	dw	0
   366  0062D8  0000               	dw	0
   367  0062DA  0000               	dw	0
   368  0062DC  0000               	dw	0
   369  0062DE  00                 	db	0
   370                           
   371                           ;initializer for CheckModem@Timeout
   372  0062DF  00                 	db	0
   373  0062E0  01                 	db	1
   374  0062E1  0000               	dw	0
   375  0062E3  0000               	dw	0
   376  0062E5  0000               	dw	0
   377  0062E7  0000               	dw	0
   378  0062E9  00                 	db	0
   379                           
   380                           	psect	idataBANK4
   381  006AE2                     __pidataBANK4:
   382                           	opt stack 0
   383                           
   384                           ;initializer for ModemEvtParser@F9116
   385  006AE2  43                 	db	67
   386  006AE3  61                 	db	97
   387  006AE4  6C                 	db	108
   388  006AE5  6C                 	db	108
   389  006AE6  20                 	db	32
   390  006AE7  52                 	db	82
   391  006AE8  65                 	db	101
   392  006AE9  61                 	db	97
   393  006AEA  64                 	db	100
   394  006AEB  79                 	db	121
   395                           
   396                           	psect	idataBANK5
   397  005D20                     __pidataBANK5:
   398                           	opt stack 0
   399                           
   400                           ;initializer for _TaskTable
   401  005D20  2C                 	db	low _Mdm_DrvMainFn
   402  005D21  6B                 	db	high _Mdm_DrvMainFn
   403  005D22  00                 	db	0
   404  005D23  0000               	dw	0
   405  005D25  000A               	dw	10
   406  005D27  00                 	db	0
   407  005D28  D8                 	db	low _I2cSlv_MainTask
   408  005D29  5A                 	db	high _I2cSlv_MainTask
   409  005D2A  00                 	db	0
   410  005D2B  0000               	dw	0
   411  005D2D  0001               	dw	1
   412  005D2F  00                 	db	0
   413  005D30  70                 	db	low _Mdm_MainTask
   414  005D31  5D                 	db	high _Mdm_MainTask
   415  005D32  00                 	db	0
   416  005D33  0000               	dw	0
   417  005D35  0001               	dw	1
   418  005D37  00                 	db	0
   419  005D38  DA                 	db	low _MdmHttp_MainTask
   420  005D39  5F                 	db	high _MdmHttp_MainTask
   421  005D3A  00                 	db	0
   422  005D3B  0000               	dw	0
   423  005D3D  0001               	dw	1
   424  005D3F  00                 	db	0
   425  005D40  BE                 	db	low _UsbDevice_MainTask
   426  005D41  66                 	db	high _UsbDevice_MainTask
   427  005D42  00                 	db	0
   428  005D43  0000               	dw	0
   429  005D45  0001               	dw	1
   430  005D47  00                 	db	0
   431  005D48  4E                 	db	low _Wdg_MainTask
   432  005D49  67                 	db	high _Wdg_MainTask
   433  005D4A  00                 	db	0
   434  005D4B  0000               	dw	0
   435  005D4D  0064               	dw	100
   436  005D4F  00                 	db	0
   437  005D50  B6                 	db	low _Led_MainTask
   438  005D51  3B                 	db	high _Led_MainTask
   439  005D52  00                 	db	0
   440  005D53  0000               	dw	0
   441  005D55  0032               	dw	50
   442  005D57  00                 	db	0
   443  005D58  62                 	db	low _Rtcm_MainTask
   444  005D59  50                 	db	high _Rtcm_MainTask
   445  005D5A  00                 	db	0
   446  005D5B  0000               	dw	0
   447  005D5D  0064               	dw	100
   448  005D5F  00                 	db	0
   449  005D60  26                 	db	low _Term_MainTask
   450  005D61  69                 	db	high _Term_MainTask
   451  005D62  00                 	db	0
   452  005D63  0000               	dw	0
   453  005D65  0001               	dw	1
   454  005D67  00                 	db	0
   455  005D68  2C                 	db	low _MyApp_Task
   456  005D69  33                 	db	high _MyApp_Task
   457  005D6A  00                 	db	0
   458  005D6B  0000               	dw	0
   459  005D6D  0064               	dw	100
   460  005D6F  00                 	db	0
   461                           
   462                           	psect	mediumconst
   463  00FC0E                     __pmediumconst:
   464                           	opt stack 0
   465  00FC0E  00                 	db	0
   466  00FC0F                     delCmdFsm@F9013:
   467                           	opt stack 0
   468  00FC0F  00                 	db	0
   469  00FC10  00                 	db	0
   470  00FC11  00                 	db	0
   471  00FC12  00                 	db	0
   472  00FC13  00                 	db	0
   473  00FC14  00                 	db	0
   474  00FC15  00                 	db	0
   475  00FC16  00                 	db	0
   476  00FC17  00                 	db	0
   477  00FC18  00                 	db	0
   478  00FC19  00                 	db	0
   479  00FC1A  00                 	db	0
   480  00FC1B  00                 	db	0
   481  00FC1C                     __end_ofdelCmdFsm@F9013:
   482                           	opt stack 0
   483  00FC1C                     _USB_SD_Ptr:
   484                           	opt stack 0
   485  00FC1C  5B                 	db	low _sd000
   486  00FC1D  FE                 	db	high _sd000
   487  00FC1E  14                 	db	low _sd001
   488  00FC1F  FE                 	db	high _sd001
   489  00FC20  EE                 	db	low _sd002
   490  00FC21  FD                 	db	high _sd002
   491  00FC22                     __end_of_USB_SD_Ptr:
   492                           	opt stack 0
   493  00FC22                     parseCommand@F9030:
   494                           	opt stack 0
   495  00FC22  52                 	db	82
   496  00FC23  45                 	db	69
   497  00FC24  53                 	db	83
   498  00FC25  3B                 	db	59
   499  00FC26                     __end_ofparseCommand@F9030:
   500                           	opt stack 0
   501  00FC26                     parseCommand@F9028:
   502                           	opt stack 0
   503  00FC26  44                 	db	68
   504  00FC27  45                 	db	69
   505  00FC28  4C                 	db	76
   506  00FC29  3B                 	db	59
   507  00FC2A                     __end_ofparseCommand@F9028:
   508                           	opt stack 0
   509  00FC2A                     parseCommand@F9026:
   510                           	opt stack 0
   511  00FC2A  41                 	db	65
   512  00FC2B  44                 	db	68
   513  00FC2C  44                 	db	68
   514  00FC2D  3B                 	db	59
   515  00FC2E                     __end_ofparseCommand@F9026:
   516                           	opt stack 0
   517  00FC2E                     _USB_CD_Ptr:
   518                           	opt stack 0
   519  00FC2E  AB                 	db	low _configDescriptor1
   520  00FC2F  FD                 	db	high _configDescriptor1
   521  00FC30                     __end_of_USB_CD_Ptr:
   522                           	opt stack 0
   523  00FC30                     _TaskNumber:
   524                           	opt stack 0
   525  00FC30  000A               	dw	10
   526  00FC32                     __end_of_TaskNumber:
   527                           	opt stack 0
   528  00FC32                     _MsgFormat:
   529                           	opt stack 0
   530  00FC32  48                 	db	72
   531  00FC33  6F                 	db	111
   532  00FC34  73                 	db	115
   533  00FC35  74                 	db	116
   534  00FC36  20                 	db	32
   535  00FC37  6D                 	db	109
   536  00FC38  65                 	db	101
   537  00FC39  73                 	db	115
   538  00FC3A  73                 	db	115
   539  00FC3B  61                 	db	97
   540  00FC3C  67                 	db	103
   541  00FC3D  65                 	db	101
   542  00FC3E  20                 	db	32
   543  00FC3F  66                 	db	102
   544  00FC40  6F                 	db	111
   545  00FC41  72                 	db	114
   546  00FC42  6D                 	db	109
   547  00FC43  61                 	db	97
   548  00FC44  74                 	db	116
   549  00FC45  3A                 	db	58
   550  00FC46  20                 	db	32
   551  00FC47  0D                 	db	13
   552  00FC48  0A                 	db	10
   553  00FC49  5B                 	db	91
   554  00FC4A  6F                 	db	111
   555  00FC4B  70                 	db	112
   556  00FC4C  5F                 	db	95
   557  00FC4D  74                 	db	116
   558  00FC4E  79                 	db	121
   559  00FC4F  70                 	db	112
   560  00FC50  65                 	db	101
   561  00FC51  5D                 	db	93
   562  00FC52  3A                 	db	58
   563  00FC53  5B                 	db	91
   564  00FC54  6F                 	db	111
   565  00FC55  70                 	db	112
   566  00FC56  5D                 	db	93
   567  00FC57  3A                 	db	58
   568  00FC58  5B                 	db	91
   569  00FC59  6C                 	db	108
   570  00FC5A  65                 	db	101
   571  00FC5B  6E                 	db	110
   572  00FC5C  5D                 	db	93
   573  00FC5D  3A                 	db	58
   574  00FC5E  5B                 	db	91
   575  00FC5F  61                 	db	97
   576  00FC60  64                 	db	100
   577  00FC61  64                 	db	100
   578  00FC62  72                 	db	114
   579  00FC63  5D                 	db	93
   580  00FC64  3A                 	db	58
   581  00FC65  5B                 	db	91
   582  00FC66  70                 	db	112
   583  00FC67  61                 	db	97
   584  00FC68  79                 	db	121
   585  00FC69  6C                 	db	108
   586  00FC6A  6F                 	db	111
   587  00FC6B  61                 	db	97
   588  00FC6C  64                 	db	100
   589  00FC6D  5D                 	db	93
   590  00FC6E  0D                 	db	13
   591  00FC6F  0A                 	db	10
   592  00FC70  0D                 	db	13
   593  00FC71  0A                 	db	10
   594  00FC72  5B                 	db	91
   595  00FC73  6F                 	db	111
   596  00FC74  70                 	db	112
   597  00FC75  5F                 	db	95
   598  00FC76  74                 	db	116
   599  00FC77  79                 	db	121
   600  00FC78  70                 	db	112
   601  00FC79  65                 	db	101
   602  00FC7A  5D                 	db	93
   603  00FC7B  20                 	db	32
   604  00FC7C  3D                 	db	61
   605  00FC7D  20                 	db	32
   606  00FC7E  53                 	db	83
   607  00FC7F  4F                 	db	79
   608  00FC80  2C                 	db	44
   609  00FC81  53                 	db	83
   610  00FC82  42                 	db	66
   611  00FC83  0D                 	db	13
   612  00FC84  0A                 	db	10
   613  00FC85  5B                 	db	91
   614  00FC86  6F                 	db	111
   615  00FC87  70                 	db	112
   616  00FC88  5D                 	db	93
   617  00FC89  20                 	db	32
   618  00FC8A  3D                 	db	61
   619  00FC8B  20                 	db	32
   620  00FC8C  52                 	db	82
   621  00FC8D  3A                 	db	58
   622  00FC8E  20                 	db	32
   623  00FC8F  72                 	db	114
   624  00FC90  65                 	db	101
   625  00FC91  61                 	db	97
   626  00FC92  64                 	db	100
   627  00FC93  2C                 	db	44
   628  00FC94  57                 	db	87
   629  00FC95  3A                 	db	58
   630  00FC96  20                 	db	32
   631  00FC97  77                 	db	119
   632  00FC98  72                 	db	114
   633  00FC99  69                 	db	105
   634  00FC9A  74                 	db	116
   635  00FC9B  65                 	db	101
   636  00FC9C  0D                 	db	13
   637  00FC9D  0A                 	db	10
   638  00FC9E  5B                 	db	91
   639  00FC9F  6C                 	db	108
   640  00FCA0  65                 	db	101
   641  00FCA1  6E                 	db	110
   642  00FCA2  5D                 	db	93
   643  00FCA3  20                 	db	32
   644  00FCA4  3D                 	db	61
   645  00FCA5  20                 	db	32
   646  00FCA6  32                 	db	50
   647  00FCA7  20                 	db	32
   648  00FCA8  62                 	db	98
   649  00FCA9  79                 	db	121
   650  00FCAA  74                 	db	116
   651  00FCAB  65                 	db	101
   652  00FCAC  20                 	db	32
   653  00FCAD  41                 	db	65
   654  00FCAE  53                 	db	83
   655  00FCAF  43                 	db	67
   656  00FCB0  49                 	db	73
   657  00FCB1  49                 	db	73
   658  00FCB2  0D                 	db	13
   659  00FCB3  0A                 	db	10
   660  00FCB4  5B                 	db	91
   661  00FCB5  61                 	db	97
   662  00FCB6  64                 	db	100
   663  00FCB7  64                 	db	100
   664  00FCB8  72                 	db	114
   665  00FCB9  5D                 	db	93
   666  00FCBA  20                 	db	32
   667  00FCBB  3D                 	db	61
   668  00FCBC  20                 	db	32
   669  00FCBD  32                 	db	50
   670  00FCBE  20                 	db	32
   671  00FCBF  62                 	db	98
   672  00FCC0  79                 	db	121
   673  00FCC1  74                 	db	116
   674  00FCC2  65                 	db	101
   675  00FCC3  20                 	db	32
   676  00FCC4  41                 	db	65
   677  00FCC5  53                 	db	83
   678  00FCC6  43                 	db	67
   679  00FCC7  49                 	db	73
   680  00FCC8  49                 	db	73
   681  00FCC9  0D                 	db	13
   682  00FCCA  0A                 	db	10
   683  00FCCB  5B                 	db	91
   684  00FCCC  70                 	db	112
   685  00FCCD  61                 	db	97
   686  00FCCE  79                 	db	121
   687  00FCCF  6C                 	db	108
   688  00FCD0  6F                 	db	111
   689  00FCD1  61                 	db	97
   690  00FCD2  64                 	db	100
   691  00FCD3  5D                 	db	93
   692  00FCD4  20                 	db	32
   693  00FCD5  3D                 	db	61
   694  00FCD6  20                 	db	32
   695  00FCD7  6D                 	db	109
   696  00FCD8  61                 	db	97
   697  00FCD9  78                 	db	120
   698  00FCDA  20                 	db	32
   699  00FCDB  32                 	db	50
   700  00FCDC  30                 	db	48
   701  00FCDD  20                 	db	32
   702  00FCDE  62                 	db	98
   703  00FCDF  79                 	db	121
   704  00FCE0  74                 	db	116
   705  00FCE1  65                 	db	101
   706  00FCE2  20                 	db	32
   707  00FCE3  41                 	db	65
   708  00FCE4  53                 	db	83
   709  00FCE5  43                 	db	67
   710  00FCE6  49                 	db	73
   711  00FCE7  49                 	db	73
   712  00FCE8  0D                 	db	13
   713  00FCE9  0A                 	db	10
   714  00FCEA  0D                 	db	13
   715  00FCEB  0A                 	db	10
   716  00FCEC  54                 	db	84
   717  00FCED  65                 	db	101
   718  00FCEE  72                 	db	114
   719  00FCEF  6D                 	db	109
   720  00FCF0  69                 	db	105
   721  00FCF1  6E                 	db	110
   722  00FCF2  61                 	db	97
   723  00FCF3  6C                 	db	108
   724  00FCF4  20                 	db	32
   725  00FCF5  4D                 	db	77
   726  00FCF6  6F                 	db	111
   727  00FCF7  64                 	db	100
   728  00FCF8  65                 	db	101
   729  00FCF9  3A                 	db	58
   730  00FCFA  20                 	db	32
   731  00FCFB  43                 	db	67
   732  00FCFC  4F                 	db	79
   733  00FCFD  4D                 	db	77
   734  00FCFE  4D                 	db	77
   735  00FCFF  41                 	db	65
   736  00FD00  4E                 	db	78
   737  00FD01  44                 	db	68
   738  00FD02  20                 	db	32
   739  00FD03  4D                 	db	77
   740  00FD04  4F                 	db	79
   741  00FD05  44                 	db	68
   742  00FD06  45                 	db	69
   743  00FD07  0D                 	db	13
   744  00FD08  0A                 	db	10
   745  00FD09  4D                 	db	77
   746  00FD0A  6F                 	db	111
   747  00FD0B  64                 	db	100
   748  00FD0C  65                 	db	101
   749  00FD0D  6D                 	db	109
   750  00FD0E  20                 	db	32
   751  00FD0F  54                 	db	84
   752  00FD10  79                 	db	121
   753  00FD11  70                 	db	112
   754  00FD12  65                 	db	101
   755  00FD13  3A                 	db	58
   756  00FD14  20                 	db	32
   757  00FD15  47                 	db	71
   758  00FD16  53                 	db	83
   759  00FD17  4D                 	db	77
   760  00FD18  2F                 	db	47
   761  00FD19  47                 	db	71
   762  00FD1A  50                 	db	80
   763  00FD1B  52                 	db	82
   764  00FD1C  53                 	db	83
   765  00FD1D  0D                 	db	13
   766  00FD1E  0A                 	db	10
   767  00FD1F  0D                 	db	13
   768  00FD20  0A                 	db	10
   769  00FD21  00                 	db	0
   770  00FD22                     __end_of_MsgFormat:
   771                           	opt stack 0
   772  00FD22                     _Welcome:
   773                           	opt stack 0
   774  00FD22  2A                 	db	42
   775  00FD23  2A                 	db	42
   776  00FD24  2A                 	db	42
   777  00FD25  2A                 	db	42
   778  00FD26  2A                 	db	42
   779  00FD27  2A                 	db	42
   780  00FD28  2A                 	db	42
   781  00FD29  2A                 	db	42
   782  00FD2A  2A                 	db	42
   783  00FD2B  2A                 	db	42
   784  00FD2C  2A                 	db	42
   785  00FD2D  2A                 	db	42
   786  00FD2E  2A                 	db	42
   787  00FD2F  2A                 	db	42
   788  00FD30  2A                 	db	42
   789  00FD31  2A                 	db	42
   790  00FD32  2A                 	db	42
   791  00FD33  2A                 	db	42
   792  00FD34  2A                 	db	42
   793  00FD35  2A                 	db	42
   794  00FD36  2A                 	db	42
   795  00FD37  2A                 	db	42
   796  00FD38  2A                 	db	42
   797  00FD39  2A                 	db	42
   798  00FD3A  2A                 	db	42
   799  00FD3B  2A                 	db	42
   800  00FD3C  2A                 	db	42
   801  00FD3D  2A                 	db	42
   802  00FD3E  2A                 	db	42
   803  00FD3F  2A                 	db	42
   804  00FD40  2A                 	db	42
   805  00FD41  2A                 	db	42
   806  00FD42  2A                 	db	42
   807  00FD43  2A                 	db	42
   808  00FD44  2A                 	db	42
   809  00FD45  2A                 	db	42
   810  00FD46  2A                 	db	42
   811  00FD47  2A                 	db	42
   812  00FD48  2A                 	db	42
   813  00FD49  2A                 	db	42
   814  00FD4A  2A                 	db	42
   815  00FD4B  2A                 	db	42
   816  00FD4C  2A                 	db	42
   817  00FD4D  2A                 	db	42
   818  00FD4E  2A                 	db	42
   819  00FD4F  2A                 	db	42
   820  00FD50  2A                 	db	42
   821  00FD51  2A                 	db	42
   822  00FD52  2A                 	db	42
   823  00FD53  0D                 	db	13
   824  00FD54  0A                 	db	10
   825  00FD55  20                 	db	32
   826  00FD56  20                 	db	32
   827  00FD57  20                 	db	32
   828  00FD58  20                 	db	32
   829  00FD59  20                 	db	32
   830  00FD5A  20                 	db	32
   831  00FD5B  20                 	db	32
   832  00FD5C  20                 	db	32
   833  00FD5D  20                 	db	32
   834  00FD5E  20                 	db	32
   835  00FD5F  20                 	db	32
   836  00FD60  20                 	db	32
   837  00FD61  20                 	db	32
   838  00FD62  20                 	db	32
   839  00FD63  20                 	db	32
   840  00FD64  20                 	db	32
   841  00FD65  20                 	db	32
   842  00FD66  20                 	db	32
   843  00FD67  4D                 	db	77
   844  00FD68  45                 	db	69
   845  00FD69  52                 	db	82
   846  00FD6A  43                 	db	67
   847  00FD6B  55                 	db	85
   848  00FD6C  52                 	db	82
   849  00FD6D  59                 	db	89
   850  00FD6E  20                 	db	32
   851  00FD6F  53                 	db	83
   852  00FD70  59                 	db	89
   853  00FD71  53                 	db	83
   854  00FD72  54                 	db	84
   855  00FD73  45                 	db	69
   856  00FD74  4D                 	db	77
   857  00FD75  0D                 	db	13
   858  00FD76  0A                 	db	10
   859  00FD77  2A                 	db	42
   860  00FD78  2A                 	db	42
   861  00FD79  2A                 	db	42
   862  00FD7A  2A                 	db	42
   863  00FD7B  2A                 	db	42
   864  00FD7C  2A                 	db	42
   865  00FD7D  2A                 	db	42
   866  00FD7E  2A                 	db	42
   867  00FD7F  2A                 	db	42
   868  00FD80  2A                 	db	42
   869  00FD81  2A                 	db	42
   870  00FD82  2A                 	db	42
   871  00FD83  2A                 	db	42
   872  00FD84  2A                 	db	42
   873  00FD85  2A                 	db	42
   874  00FD86  2A                 	db	42
   875  00FD87  2A                 	db	42
   876  00FD88  2A                 	db	42
   877  00FD89  2A                 	db	42
   878  00FD8A  2A                 	db	42
   879  00FD8B  2A                 	db	42
   880  00FD8C  2A                 	db	42
   881  00FD8D  2A                 	db	42
   882  00FD8E  2A                 	db	42
   883  00FD8F  2A                 	db	42
   884  00FD90  2A                 	db	42
   885  00FD91  2A                 	db	42
   886  00FD92  2A                 	db	42
   887  00FD93  2A                 	db	42
   888  00FD94  2A                 	db	42
   889  00FD95  2A                 	db	42
   890  00FD96  2A                 	db	42
   891  00FD97  2A                 	db	42
   892  00FD98  2A                 	db	42
   893  00FD99  2A                 	db	42
   894  00FD9A  2A                 	db	42
   895  00FD9B  2A                 	db	42
   896  00FD9C  2A                 	db	42
   897  00FD9D  2A                 	db	42
   898  00FD9E  2A                 	db	42
   899  00FD9F  2A                 	db	42
   900  00FDA0  2A                 	db	42
   901  00FDA1  2A                 	db	42
   902  00FDA2  2A                 	db	42
   903  00FDA3  2A                 	db	42
   904  00FDA4  2A                 	db	42
   905  00FDA5  2A                 	db	42
   906  00FDA6  2A                 	db	42
   907  00FDA7  2A                 	db	42
   908  00FDA8  0D                 	db	13
   909  00FDA9  0A                 	db	10
   910  00FDAA  00                 	db	0
   911  00FDAB                     __end_of_Welcome:
   912                           	opt stack 0
   913  00FDAB                     _configDescriptor1:
   914                           	opt stack 0
   915  00FDAB  09                 	db	9
   916  00FDAC  02                 	db	2
   917  00FDAD  43                 	db	67
   918  00FDAE  00                 	db	0
   919  00FDAF  02                 	db	2
   920  00FDB0  01                 	db	1
   921  00FDB1  00                 	db	0
   922  00FDB2  C0                 	db	192
   923  00FDB3  32                 	db	50
   924  00FDB4  09                 	db	9
   925  00FDB5  04                 	db	4
   926  00FDB6  00                 	db	0
   927  00FDB7  00                 	db	0
   928  00FDB8  01                 	db	1
   929  00FDB9  02                 	db	2
   930  00FDBA  02                 	db	2
   931  00FDBB  01                 	db	1
   932  00FDBC  00                 	db	0
   933  00FDBD  05                 	db	5
   934  00FDBE  24                 	db	36
   935  00FDBF  00                 	db	0
   936  00FDC0  10                 	db	16
   937  00FDC1  01                 	db	1
   938  00FDC2  04                 	db	4
   939  00FDC3  24                 	db	36
   940  00FDC4  02                 	db	2
   941  00FDC5  02                 	db	2
   942  00FDC6  05                 	db	5
   943  00FDC7  24                 	db	36
   944  00FDC8  06                 	db	6
   945  00FDC9  00                 	db	0
   946  00FDCA  01                 	db	1
   947  00FDCB  05                 	db	5
   948  00FDCC  24                 	db	36
   949  00FDCD  01                 	db	1
   950  00FDCE  00                 	db	0
   951  00FDCF  01                 	db	1
   952  00FDD0  07                 	db	7
   953  00FDD1  05                 	db	5
   954  00FDD2  81                 	db	129
   955  00FDD3  03                 	db	3
   956  00FDD4  08                 	db	8
   957  00FDD5  00                 	db	0
   958  00FDD6  02                 	db	2
   959  00FDD7  09                 	db	9
   960  00FDD8  04                 	db	4
   961  00FDD9  01                 	db	1
   962  00FDDA  00                 	db	0
   963  00FDDB  02                 	db	2
   964  00FDDC  0A                 	db	10
   965  00FDDD  00                 	db	0
   966  00FDDE  00                 	db	0
   967  00FDDF  00                 	db	0
   968  00FDE0  07                 	db	7
   969  00FDE1  05                 	db	5
   970  00FDE2  02                 	db	2
   971  00FDE3  02                 	db	2
   972  00FDE4  40                 	db	64
   973  00FDE5  00                 	db	0
   974  00FDE6  00                 	db	0
   975  00FDE7  07                 	db	7
   976  00FDE8  05                 	db	5
   977  00FDE9  82                 	db	130
   978  00FDEA  02                 	db	2
   979  00FDEB  40                 	db	64
   980  00FDEC  00                 	db	0
   981  00FDED  00                 	db	0
   982  00FDEE                     __end_of_configDescriptor1:
   983                           	opt stack 0
   984  00FDEE                     _sd002:
   985                           	opt stack 0
   986  00FDEE  26                 	db	38
   987  00FDEF  03                 	db	3
   988  00FDF0  0054               	dw	84
   989  00FDF2  0065               	dw	101
   990  00FDF4  0072               	dw	114
   991  00FDF6  006D               	dw	109
   992  00FDF8  0069               	dw	105
   993  00FDFA  006E               	dw	110
   994  00FDFC  0061               	dw	97
   995  00FDFE  006C               	dw	108
   996  00FE00  0020               	dw	32
   997  00FE02  0049               	dw	73
   998  00FE04  006E               	dw	110
   999  00FE06  0074               	dw	116
  1000  00FE08  0065               	dw	101
  1001  00FE0A  0072               	dw	114
  1002  00FE0C  0066               	dw	102
  1003  00FE0E  0061               	dw	97
  1004  00FE10  0063               	dw	99
  1005  00FE12  0065               	dw	101
  1006  00FE14                     __end_of_sd002:
  1007                           	opt stack 0
  1008  00FE14                     _sd001:
  1009                           	opt stack 0
  1010  00FE14  1E                 	db	30
  1011  00FE15  03                 	db	3
  1012  00FE16  004D               	dw	77
  1013  00FE18  0065               	dw	101
  1014  00FE1A  0072               	dw	114
  1015  00FE1C  0063               	dw	99
  1016  00FE1E  0075               	dw	117
  1017  00FE20  0072               	dw	114
  1018  00FE22  0079               	dw	121
  1019  00FE24  0020               	dw	32
  1020  00FE26  0053               	dw	83
  1021  00FE28  0079               	dw	121
  1022  00FE2A  0073               	dw	115
  1023  00FE2C  0074               	dw	116
  1024  00FE2E  0065               	dw	101
  1025  00FE30  006D               	dw	109
  1026  00FE32                     __end_of_sd001:
  1027                           	opt stack 0
  1028  00FE32                     _MsgReady:
  1029                           	opt stack 0
  1030  00FE32  0D                 	db	13
  1031  00FE33  0A                 	db	10
  1032  00FE34  53                 	db	83
  1033  00FE35  79                 	db	121
  1034  00FE36  73                 	db	115
  1035  00FE37  74                 	db	116
  1036  00FE38  65                 	db	101
  1037  00FE39  6D                 	db	109
  1038  00FE3A  20                 	db	32
  1039  00FE3B  52                 	db	82
  1040  00FE3C  65                 	db	101
  1041  00FE3D  61                 	db	97
  1042  00FE3E  64                 	db	100
  1043  00FE3F  79                 	db	121
  1044  00FE40  2E                 	db	46
  1045  00FE41  2E                 	db	46
  1046  00FE42  2E                 	db	46
  1047  00FE43  20                 	db	32
  1048  00FE44  0D                 	db	13
  1049  00FE45  0A                 	db	10
  1050  00FE46  0D                 	db	13
  1051  00FE47  0A                 	db	10
  1052  00FE48  00                 	db	0
  1053  00FE49                     __end_of_MsgReady:
  1054                           	opt stack 0
  1055  00FE49                     _device_dsc:
  1056                           	opt stack 0
  1057  00FE49  12                 	db	18
  1058  00FE4A  01                 	db	1
  1059  00FE4B  0200               	dw	512
  1060  00FE4D  02                 	db	2
  1061  00FE4E  00                 	db	0
  1062  00FE4F  00                 	db	0
  1063  00FE50  08                 	db	8
  1064  00FE51  04D8               	dw	1240
  1065  00FE53  000A               	dw	10
  1066  00FE55  0100               	dw	256
  1067  00FE57  01                 	db	1
  1068  00FE58  02                 	db	2
  1069  00FE59  00                 	db	0
  1070  00FE5A  01                 	db	1
  1071  00FE5B                     __end_of_device_dsc:
  1072                           	opt stack 0
  1073  00FE5B                     _sd000:
  1074                           	opt stack 0
  1075  00FE5B  04                 	db	4
  1076  00FE5C  03                 	db	3
  1077  00FE5D  0409               	dw	1033
  1078  00FE5F                     __end_of_sd000:
  1079                           	opt stack 0
  1080  0000                     _RPINR1	set	3815
  1081  0000                     _UEP0bits	set	3878
  1082  0000                     _UIEbits	set	3894
  1083  0000                     _UADDR	set	3896
  1084  0000                     _UIE	set	3894
  1085  0000                     _UEIE	set	3895
  1086  0000                     _UCFG	set	3897
  1087  0000                     _RTCCAL	set	3902
  1088  0000                     _PADCFG1bits	set	3900
  1089  0000                     _RTCCFGbits	set	3903
  1090  0000                     _DSCONLbits	set	3916
  1091  0000                     _DSGPR1	set	3919
  1092  0000                     _DSGPR0	set	3918
  1093  0000                     _DSCONHbits	set	3917
  1094  0000                     _ANCON1bits	set	3913
  1095  0000                     _UEP1	set	3879
  1096  0000                     _UEP0	set	3878
  1097  0000                     _T1CONbits	set	4045
  1098  0000                     _PORTDbits	set	3971
  1099  0000                     _USTAT	set	3940
  1100  0000                     _PIR2bits	set	4001
  1101  0000                     _UCON	set	3941
  1102  0000                     _UIRbits	set	3938
  1103  0000                     _UCONbits	set	3941
  1104  0000                     _UIR	set	3938
  1105  0000                     _UEIR	set	3939
  1106  0000                     _PIE2bits	set	4000
  1107  0000                     _BAUDCON2	set	3964
  1108  0000                     _RCSTA2	set	3996
  1109  0000                     _BAUDCON1	set	3966
  1110  0000                     _RCSTA1	set	4012
  1111  0000                     _TRISCbits	set	3988
  1112  0000                     _TXSTA2	set	4008
  1113  0000                     _TXSTA1	set	4013
  1114  0000                     _RCREG2	set	4010
  1115  0000                     _RCREG1	set	4015
  1116  0000                     _TXREG2	set	4009
  1117  0000                     _TXREG1	set	4014
  1118  0000                     _SPBRG2	set	4011
  1119  0000                     _SPBRGH2	set	3965
  1120  0000                     _SPBRG1	set	4016
  1121  0000                     _SPBRGH1	set	3967
  1122  0000                     _PR4	set	3959
  1123  0000                     _PR2	set	4043
  1124  0000                     _PIE1bits	set	3997
  1125  0000                     _IPR1bits	set	3999
  1126  0000                     _T4CONbits	set	3958
  1127  0000                     _T2CONbits	set	4042
  1128  0000                     _ALRMVALL	set	3982
  1129  0000                     _ALRMVALH	set	3983
  1130  0000                     _RTCVALH	set	3993
  1131  0000                     _RTCVALL	set	3992
  1132  0000                     _ALRMRPTbits	set	3984
  1133  0000                     _ALRMCFGbits	set	3985
  1134  0000                     _PIE3bits	set	4003
  1135  0000                     _IPR3bits	set	4005
  1136  0000                     _OSCCONbits	set	4051
  1137  0000                     _PORTEbits	set	3972
  1138  0000                     _TRISEbits	set	3990
  1139  0000                     _WDTCONbits	set	4032
  1140  0000                     _INTCON2bits	set	4081
  1141  0000                     _TRISBbits	set	3987
  1142  0000                     _OSCTUNEbits	set	3995
  1143  0000                     _SSP2CON1	set	3954
  1144  0000                     _TRISDbits	set	3989
  1145  0000                     _SSP2BUF	set	3957
  1146  0000                     _SSP2CON2bits	set	3953
  1147  0000                     _SSP2STAT	set	3955
  1148  0000                     _SSP2CON2	set	3953
  1149  0000                     _SSP2ADD	set	3956
  1150  0000                     _PIR1bits	set	3998
  1151  0000                     _PIR3bits	set	4004
  1152  0000                     _INTCON3bits	set	4080
  1153  0000                     _INTCONbits	set	4082
  1154  0000                     _RCONbits	set	4048
  1155  00FE5F                     STR_21:
  1156  00FE5F  20                 	db	32
  1157  00FE60  4C                 	db	76	;'L'
  1158  00FE61  61                 	db	97	;'a'
  1159  00FE62  7A                 	db	122	;'z'
  1160  00FE63  79                 	db	121	;'y'
  1161  00FE64  20                 	db	32
  1162  00FE65  64                 	db	100	;'d'
  1163  00FE66  65                 	db	101	;'e'
  1164  00FE67  76                 	db	118	;'v'
  1165  00FE68  69                 	db	105	;'i'
  1166  00FE69  63                 	db	99	;'c'
  1167  00FE6A  65                 	db	101	;'e'
  1168  00FE6B  2E                 	db	46
  1169  00FE6C  2E                 	db	46
  1170  00FE6D  2E                 	db	46
  1171  00FE6E  79                 	db	121	;'y'
  1172  00FE6F  6F                 	db	111	;'o'
  1173  00FE70  75                 	db	117	;'u'
  1174  00FE71  27                 	db	39
  1175  00FE72  76                 	db	118	;'v'
  1176  00FE73  65                 	db	101	;'e'
  1177  00FE74  20                 	db	32
  1178  00FE75  62                 	db	98	;'b'
  1179  00FE76  65                 	db	101	;'e'
  1180  00FE77  65                 	db	101	;'e'
  1181  00FE78  6E                 	db	110	;'n'
  1182  00FE79  20                 	db	32
  1183  00FE7A  74                 	db	116	;'t'
  1184  00FE7B  69                 	db	105	;'i'
  1185  00FE7C  6D                 	db	109	;'m'
  1186  00FE7D  65                 	db	101	;'e'
  1187  00FE7E  64                 	db	100	;'d'
  1188  00FE7F  2D                 	db	45
  1189  00FE80  6F                 	db	111	;'o'
  1190  00FE81  75                 	db	117	;'u'
  1191  00FE82  74                 	db	116	;'t'
  1192  00FE83  21                 	db	33
  1193  00FE84  21                 	db	33
  1194  00FE85  21                 	db	33
  1195  00FE86  0D                 	db	13
  1196  00FE87  0A                 	db	10
  1197  00FE88  00                 	db	0
  1198  00FE89                     STR_8:
  1199  00FE89  41                 	db	65	;'A'
  1200  00FE8A  54                 	db	84	;'T'
  1201  00FE8B  2B                 	db	43
  1202  00FE8C  53                 	db	83	;'S'
  1203  00FE8D  41                 	db	65	;'A'
  1204  00FE8E  50                 	db	80	;'P'
  1205  00FE8F  42                 	db	66	;'B'
  1206  00FE90  52                 	db	82	;'R'
  1207  00FE91  3D                 	db	61	;'='
  1208  00FE92  33                 	db	51	;'3'
  1209  00FE93  2C                 	db	44
  1210  00FE94  31                 	db	49	;'1'
  1211  00FE95  2C                 	db	44
  1212  00FE96  22                 	db	34
  1213  00FE97  43                 	db	67	;'C'
  1214  00FE98  6F                 	db	111	;'o'
  1215  00FE99  6E                 	db	110	;'n'
  1216  00FE9A  74                 	db	116	;'t'
  1217  00FE9B  79                 	db	121	;'y'
  1218  00FE9C  70                 	db	112	;'p'
  1219  00FE9D  65                 	db	101	;'e'
  1220  00FE9E  22                 	db	34
  1221  00FE9F  2C                 	db	44
  1222  00FEA0  22                 	db	34
  1223  00FEA1  47                 	db	71	;'G'
  1224  00FEA2  50                 	db	80	;'P'
  1225  00FEA3  52                 	db	82	;'R'
  1226  00FEA4  53                 	db	83	;'S'
  1227  00FEA5  22                 	db	34
  1228  00FEA6  0D                 	db	13
  1229  00FEA7  00                 	db	0
  1230  00FEA8                     STR_14:
  1231  00FEA8  41                 	db	65	;'A'
  1232  00FEA9  54                 	db	84	;'T'
  1233  00FEAA  2B                 	db	43
  1234  00FEAB  48                 	db	72	;'H'
  1235  00FEAC  54                 	db	84	;'T'
  1236  00FEAD  54                 	db	84	;'T'
  1237  00FEAE  50                 	db	80	;'P'
  1238  00FEAF  50                 	db	80	;'P'
  1239  00FEB0  41                 	db	65	;'A'
  1240  00FEB1  52                 	db	82	;'R'
  1241  00FEB2  41                 	db	65	;'A'
  1242  00FEB3  3D                 	db	61	;'='
  1243  00FEB4  22                 	db	34
  1244  00FEB5  43                 	db	67	;'C'
  1245  00FEB6  49                 	db	73	;'I'
  1246  00FEB7  44                 	db	68	;'D'
  1247  00FEB8  22                 	db	34
  1248  00FEB9  2C                 	db	44
  1249  00FEBA  31                 	db	49	;'1'
  1250  00FEBB  0D                 	db	13
  1251  00FEBC  00                 	db	0
  1252  00FEBD                     STR_9:
  1253  00FEBD  41                 	db	65	;'A'
  1254  00FEBE  54                 	db	84	;'T'
  1255  00FEBF  2B                 	db	43
  1256  00FEC0  53                 	db	83	;'S'
  1257  00FEC1  41                 	db	65	;'A'
  1258  00FEC2  50                 	db	80	;'P'
  1259  00FEC3  42                 	db	66	;'B'
  1260  00FEC4  52                 	db	82	;'R'
  1261  00FEC5  3D                 	db	61	;'='
  1262  00FEC6  33                 	db	51	;'3'
  1263  00FEC7  2C                 	db	44
  1264  00FEC8  31                 	db	49	;'1'
  1265  00FEC9  2C                 	db	44
  1266  00FECA  22                 	db	34
  1267  00FECB  41                 	db	65	;'A'
  1268  00FECC  50                 	db	80	;'P'
  1269  00FECD  4E                 	db	78	;'N'
  1270  00FECE  22                 	db	34
  1271  00FECF  2C                 	db	44
  1272  00FED0  22                 	db	34
  1273  00FED1  00                 	db	0
  1274  00FED2                     STR_23:
  1275  00FED2  46                 	db	70	;'F'
  1276  00FED3  72                 	db	114	;'r'
  1277  00FED4  61                 	db	97	;'a'
  1278  00FED5  6D                 	db	109	;'m'
  1279  00FED6  65                 	db	101	;'e'
  1280  00FED7  77                 	db	119	;'w'
  1281  00FED8  6F                 	db	111	;'o'
  1282  00FED9  72                 	db	114	;'r'
  1283  00FEDA  6B                 	db	107	;'k'
  1284  00FEDB  20                 	db	32
  1285  00FEDC  56                 	db	86	;'V'
  1286  00FEDD  65                 	db	101	;'e'
  1287  00FEDE  72                 	db	114	;'r'
  1288  00FEDF  73                 	db	115	;'s'
  1289  00FEE0  69                 	db	105	;'i'
  1290  00FEE1  6F                 	db	111	;'o'
  1291  00FEE2  6E                 	db	110	;'n'
  1292  00FEE3  3A                 	db	58	;':'
  1293  00FEE4  20                 	db	32
  1294  00FEE5  00                 	db	0
  1295  00FEE6                     STR_15:
  1296  00FEE6  41                 	db	65	;'A'
  1297  00FEE7  54                 	db	84	;'T'
  1298  00FEE8  2B                 	db	43
  1299  00FEE9  48                 	db	72	;'H'
  1300  00FEEA  54                 	db	84	;'T'
  1301  00FEEB  54                 	db	84	;'T'
  1302  00FEEC  50                 	db	80	;'P'
  1303  00FEED  50                 	db	80	;'P'
  1304  00FEEE  41                 	db	65	;'A'
  1305  00FEEF  52                 	db	82	;'R'
  1306  00FEF0  41                 	db	65	;'A'
  1307  00FEF1  3D                 	db	61	;'='
  1308  00FEF2  22                 	db	34
  1309  00FEF3  55                 	db	85	;'U'
  1310  00FEF4  52                 	db	82	;'R'
  1311  00FEF5  4C                 	db	76	;'L'
  1312  00FEF6  22                 	db	34
  1313  00FEF7  2C                 	db	44
  1314  00FEF8  22                 	db	34
  1315  00FEF9  00                 	db	0
  1316  00FEFA                     STR_30:
  1317  00FEFA  41                 	db	65	;'A'
  1318  00FEFB  54                 	db	84	;'T'
  1319  00FEFC  2B                 	db	43
  1320  00FEFD  43                 	db	67	;'C'
  1321  00FEFE  4D                 	db	77	;'M'
  1322  00FEFF  47                 	db	71	;'G'
  1323  00FF00  44                 	db	68	;'D'
  1324  00FF01  41                 	db	65	;'A'
  1325  00FF02  3D                 	db	61	;'='
  1326  00FF03  44                 	db	68	;'D'
  1327  00FF04  45                 	db	69	;'E'
  1328  00FF05  4C                 	db	76	;'L'
  1329  00FF06  20                 	db	32
  1330  00FF07  41                 	db	65	;'A'
  1331  00FF08  4C                 	db	76	;'L'
  1332  00FF09  4C                 	db	76	;'L'
  1333  00FF0A  0D                 	db	13
  1334  00FF0B  0A                 	db	10
  1335  00FF0C  00                 	db	0
  1336  00FF0D                     STR_27:
  1337  00FF0D  42                 	db	66	;'B'
  1338  00FF0E  75                 	db	117	;'u'
  1339  00FF0F  69                 	db	105	;'i'
  1340  00FF10  6C                 	db	108	;'l'
  1341  00FF11  64                 	db	100	;'d'
  1342  00FF12  20                 	db	32
  1343  00FF13  44                 	db	68	;'D'
  1344  00FF14  61                 	db	97	;'a'
  1345  00FF15  74                 	db	116	;'t'
  1346  00FF16  65                 	db	101	;'e'
  1347  00FF17  3A                 	db	58	;':'
  1348  00FF18  20                 	db	32
  1349  00FF19  25                 	db	37
  1350  00FF1A  73                 	db	115	;'s'
  1351  00FF1B  0D                 	db	13
  1352  00FF1C  0A                 	db	10
  1353  00FF1D  00                 	db	0
  1354  00FF1E                     STR_16:
  1355  00FF1E  41                 	db	65	;'A'
  1356  00FF1F  54                 	db	84	;'T'
  1357  00FF20  2B                 	db	43
  1358  00FF21  48                 	db	72	;'H'
  1359  00FF22  54                 	db	84	;'T'
  1360  00FF23  54                 	db	84	;'T'
  1361  00FF24  50                 	db	80	;'P'
  1362  00FF25  41                 	db	65	;'A'
  1363  00FF26  43                 	db	67	;'C'
  1364  00FF27  54                 	db	84	;'T'
  1365  00FF28  49                 	db	73	;'I'
  1366  00FF29  4F                 	db	79	;'O'
  1367  00FF2A  4E                 	db	78	;'N'
  1368  00FF2B  3D                 	db	61	;'='
  1369  00FF2C  30                 	db	48	;'0'
  1370  00FF2D  0D                 	db	13
  1371  00FF2E  00                 	db	0
  1372  00FF2F                     STR_29:
  1373  00FF2F  41                 	db	65	;'A'
  1374  00FF30  54                 	db	84	;'T'
  1375  00FF31  2B                 	db	43
  1376  00FF32  43                 	db	67	;'C'
  1377  00FF33  4D                 	db	77	;'M'
  1378  00FF34  47                 	db	71	;'G'
  1379  00FF35  44                 	db	68	;'D'
  1380  00FF36  3D                 	db	61	;'='
  1381  00FF37  31                 	db	49	;'1'
  1382  00FF38  2C                 	db	44
  1383  00FF39  30                 	db	48	;'0'
  1384  00FF3A  0D                 	db	13
  1385  00FF3B  0A                 	db	10
  1386  00FF3C  00                 	db	0
  1387  00FF3D  41                 	db	65	;'A'
  1388  00FF3E  54                 	db	84	;'T'
  1389  00FF3F  2B                 	db	43
  1390  00FF40  48                 	db	72	;'H'
  1391  00FF41  54                 	db	84	;'T'
  1392  00FF42  54                 	db	84	;'T'
  1393  00FF43  50                 	db	80	;'P'
  1394  00FF44  53                 	db	83	;'S'
  1395  00FF45  53                 	db	83	;'S'
  1396  00FF46  4C                 	db	76	;'L'
  1397  00FF47  3D                 	db	61	;'='
  1398  00FF48  30                 	db	48	;'0'
  1399  00FF49  0D                 	db	13
  1400  00FF4A  00                 	db	0
  1401  00FF4B                     STR_10:
  1402  00FF4B  41                 	db	65	;'A'
  1403  00FF4C  54                 	db	84	;'T'
  1404  00FF4D  2B                 	db	43
  1405  00FF4E  53                 	db	83	;'S'
  1406  00FF4F  41                 	db	65	;'A'
  1407  00FF50  50                 	db	80	;'P'
  1408  00FF51  42                 	db	66	;'B'
  1409  00FF52  52                 	db	82	;'R'
  1410  00FF53  3D                 	db	61	;'='
  1411  00FF54  31                 	db	49	;'1'
  1412  00FF55  2C                 	db	44
  1413  00FF56  31                 	db	49	;'1'
  1414  00FF57  0D                 	db	13
  1415  00FF58  00                 	db	0
  1416  00FF59                     STR_11:
  1417  00FF59  41                 	db	65	;'A'
  1418  00FF5A  54                 	db	84	;'T'
  1419  00FF5B  2B                 	db	43
  1420  00FF5C  53                 	db	83	;'S'
  1421  00FF5D  41                 	db	65	;'A'
  1422  00FF5E  50                 	db	80	;'P'
  1423  00FF5F  42                 	db	66	;'B'
  1424  00FF60  52                 	db	82	;'R'
  1425  00FF61  3D                 	db	61	;'='
  1426  00FF62  32                 	db	50	;'2'
  1427  00FF63  2C                 	db	44
  1428  00FF64  31                 	db	49	;'1'
  1429  00FF65  0D                 	db	13
  1430  00FF66  00                 	db	0
  1431  00FF67                     STR_13:
  1432  00FF67  41                 	db	65	;'A'
  1433  00FF68  54                 	db	84	;'T'
  1434  00FF69  2B                 	db	43
  1435  00FF6A  48                 	db	72	;'H'
  1436  00FF6B  54                 	db	84	;'T'
  1437  00FF6C  54                 	db	84	;'T'
  1438  00FF6D  50                 	db	80	;'P'
  1439  00FF6E  53                 	db	83	;'S'
  1440  00FF6F  53                 	db	83	;'S'
  1441  00FF70  4C                 	db	76	;'L'
  1442  00FF71  3D                 	db	61	;'='
  1443  00FF72  31                 	db	49	;'1'
  1444  00FF73  0D                 	db	13
  1445  00FF74  00                 	db	0
  1446  00FF75                     STR_2:
  1447  00FF75  41                 	db	65	;'A'
  1448  00FF76  54                 	db	84	;'T'
  1449  00FF77  2B                 	db	43
  1450  00FF78  49                 	db	73	;'I'
  1451  00FF79  50                 	db	80	;'P'
  1452  00FF7A  52                 	db	82	;'R'
  1453  00FF7B  3D                 	db	61	;'='
  1454  00FF7C  39                 	db	57	;'9'
  1455  00FF7D  36                 	db	54	;'6'
  1456  00FF7E  30                 	db	48	;'0'
  1457  00FF7F  30                 	db	48	;'0'
  1458  00FF80  0D                 	db	13
  1459  00FF81  0A                 	db	10
  1460  00FF82  00                 	db	0
  1461  00FF83                     STR_17:
  1462  00FF83  41                 	db	65	;'A'
  1463  00FF84  54                 	db	84	;'T'
  1464  00FF85  2B                 	db	43
  1465  00FF86  48                 	db	72	;'H'
  1466  00FF87  54                 	db	84	;'T'
  1467  00FF88  54                 	db	84	;'T'
  1468  00FF89  50                 	db	80	;'P'
  1469  00FF8A  52                 	db	82	;'R'
  1470  00FF8B  45                 	db	69	;'E'
  1471  00FF8C  41                 	db	65	;'A'
  1472  00FF8D  44                 	db	68	;'D'
  1473  00FF8E  0D                 	db	13
  1474  00FF8F  00                 	db	0
  1475  00FF90                     STR_18:
  1476  00FF90  41                 	db	65	;'A'
  1477  00FF91  54                 	db	84	;'T'
  1478  00FF92  2B                 	db	43
  1479  00FF93  48                 	db	72	;'H'
  1480  00FF94  54                 	db	84	;'T'
  1481  00FF95  54                 	db	84	;'T'
  1482  00FF96  50                 	db	80	;'P'
  1483  00FF97  54                 	db	84	;'T'
  1484  00FF98  45                 	db	69	;'E'
  1485  00FF99  52                 	db	82	;'R'
  1486  00FF9A  4D                 	db	77	;'M'
  1487  00FF9B  0D                 	db	13
  1488  00FF9C  00                 	db	0
  1489  00FF9D                     STR_12:
  1490  00FF9D  41                 	db	65	;'A'
  1491  00FF9E  54                 	db	84	;'T'
  1492  00FF9F  2B                 	db	43
  1493  00FFA0  48                 	db	72	;'H'
  1494  00FFA1  54                 	db	84	;'T'
  1495  00FFA2  54                 	db	84	;'T'
  1496  00FFA3  50                 	db	80	;'P'
  1497  00FFA4  49                 	db	73	;'I'
  1498  00FFA5  4E                 	db	78	;'N'
  1499  00FFA6  49                 	db	73	;'I'
  1500  00FFA7  54                 	db	84	;'T'
  1501  00FFA8  0D                 	db	13
  1502  00FFA9  00                 	db	0
  1503  00FFAA                     STR_31:
  1504  00FFAA  41                 	db	65	;'A'
  1505  00FFAB  54                 	db	84	;'T'
  1506  00FFAC  2B                 	db	43
  1507  00FFAD  43                 	db	67	;'C'
  1508  00FFAE  4C                 	db	76	;'L'
  1509  00FFAF  49                 	db	73	;'I'
  1510  00FFB0  50                 	db	80	;'P'
  1511  00FFB1  3D                 	db	61	;'='
  1512  00FFB2  31                 	db	49	;'1'
  1513  00FFB3  0D                 	db	13
  1514  00FFB4  0A                 	db	10
  1515  00FFB5  00                 	db	0
  1516  00FFB6                     STR_28:
  1517  00FFB6  4D                 	db	77	;'M'
  1518  00FFB7  61                 	db	97	;'a'
  1519  00FFB8  72                 	db	114	;'r'
  1520  00FFB9  20                 	db	32
  1521  00FFBA  32                 	db	50	;'2'
  1522  00FFBB  37                 	db	55	;'7'
  1523  00FFBC  20                 	db	32
  1524  00FFBD  32                 	db	50	;'2'
  1525  00FFBE  30                 	db	48	;'0'
  1526  00FFBF  32                 	db	50	;'2'
  1527  00FFC0  32                 	db	50	;'2'
  1528  00FFC1  00                 	db	0
  1529  00FFC2                     STR_4:
  1530  00FFC2  41                 	db	65	;'A'
  1531  00FFC3  54                 	db	84	;'T'
  1532  00FFC4  2B                 	db	43
  1533  00FFC5  43                 	db	67	;'C'
  1534  00FFC6  4D                 	db	77	;'M'
  1535  00FFC7  47                 	db	71	;'G'
  1536  00FFC8  52                 	db	82	;'R'
  1537  00FFC9  3D                 	db	61	;'='
  1538  00FFCA  31                 	db	49	;'1'
  1539  00FFCB  0D                 	db	13
  1540  00FFCC  0A                 	db	10
  1541  00FFCD  00                 	db	0
  1542  00FFCE                     STR_5:
  1543  00FFCE  41                 	db	65	;'A'
  1544  00FFCF  54                 	db	84	;'T'
  1545  00FFD0  2B                 	db	43
  1546  00FFD1  43                 	db	67	;'C'
  1547  00FFD2  4D                 	db	77	;'M'
  1548  00FFD3  47                 	db	71	;'G'
  1549  00FFD4  53                 	db	83	;'S'
  1550  00FFD5  3D                 	db	61	;'='
  1551  00FFD6  22                 	db	34
  1552  00FFD7  00                 	db	0
  1553  00FFD8                     STR_32:
  1554  00FFD8  28                 	db	40
  1555  00FFD9  6E                 	db	110	;'n'
  1556  00FFDA  75                 	db	117	;'u'
  1557  00FFDB  6C                 	db	108	;'l'
  1558  00FFDC  6C                 	db	108	;'l'
  1559  00FFDD  29                 	db	41
  1560  00FFDE  00                 	db	0
  1561  00FFDF                     STR_3:
  1562  00FFDF  41                 	db	65	;'A'
  1563  00FFE0  54                 	db	84	;'T'
  1564  00FFE1  45                 	db	69	;'E'
  1565  00FFE2  30                 	db	48	;'0'
  1566  00FFE3  0D                 	db	13
  1567  00FFE4  0A                 	db	10
  1568  00FFE5  00                 	db	0
  1569  00FFE6                     STR_1:
  1570  00FFE6  41                 	db	65	;'A'
  1571  00FFE7  54                 	db	84	;'T'
  1572  00FFE8  0D                 	db	13
  1573  00FFE9  0A                 	db	10
  1574  00FFEA  00                 	db	0
  1575  00FFEB  41                 	db	65	;'A'
  1576  00FFEC  54                 	db	84	;'T'
  1577  00FFED  41                 	db	65	;'A'
  1578  00FFEE  0D                 	db	13
  1579  00FFEF  00                 	db	0
  1580  00FFF0                     STR_6:
  1581  00FFF0  41                 	db	65	;'A'
  1582  00FFF1  54                 	db	84	;'T'
  1583  00FFF2  48                 	db	72	;'H'
  1584  00FFF3  0D                 	db	13
  1585  00FFF4  00                 	db	0
  1586  00FFF5                     STR_24:
  1587  00FFF5  2E                 	db	46
  1588  00FFF6  00                 	db	0
  1589  0000                     
  1590                           ; #config settings
  1591  00FFF7  00                 	db	0	; dummy byte at the end
  1592  0000                     
  1593                           	psect	cinit
  1594  0022DE                     __pcinit:
  1595                           	opt stack 0
  1596  0022DE                     start_initialization:
  1597                           	opt stack 0
  1598  0022DE                     __initialization:
  1599                           	opt stack 0
  1600                           
  1601                           ; Initialize objects allocated to BANK5 (80 bytes)
  1602                           ; load TBLPTR registers with __pidataBANK5
  1603  0022DE  0E20               	movlw	low __pidataBANK5
  1604  0022E0  6EF6               	movwf	tblptrl,c
  1605  0022E2  0E5D               	movlw	high __pidataBANK5
  1606  0022E4  6EF7               	movwf	tblptrh,c
  1607  0022E6  0E00               	movlw	low (__pidataBANK5 shr (0+16))
  1608  0022E8  6EF8               	movwf	tblptru,c
  1609  0022EA  EE05  F0A4         	lfsr	0,__pdataBANK5
  1610  0022EE  EE10 F050          	lfsr	1,80
  1611  0022F2                     copy_data0:
  1612  0022F2  0009               	tblrd		*+
  1613  0022F4  CFF5 FFEE          	movff	tablat,postinc0
  1614  0022F8  50E5               	movf	postdec1,w,c
  1615  0022FA  50E1               	movf	fsr1l,w,c
  1616  0022FC  E1FA               	bnz	copy_data0
  1617                           
  1618                           ; Initialize objects allocated to BANK3 (60 bytes)
  1619                           ; load TBLPTR registers with __pidataBANK3
  1620  0022FE  0EAE               	movlw	low __pidataBANK3
  1621  002300  6EF6               	movwf	tblptrl,c
  1622  002302  0E62               	movlw	high __pidataBANK3
  1623  002304  6EF7               	movwf	tblptrh,c
  1624  002306  0E00               	movlw	low (__pidataBANK3 shr (0+16))
  1625  002308  6EF8               	movwf	tblptru,c
  1626  00230A  EE03  F0C4         	lfsr	0,__pdataBANK3
  1627  00230E  EE10 F03C          	lfsr	1,60
  1628  002312                     copy_data1:
  1629  002312  0009               	tblrd		*+
  1630  002314  CFF5 FFEE          	movff	tablat,postinc0
  1631  002318  50E5               	movf	postdec1,w,c
  1632  00231A  50E1               	movf	fsr1l,w,c
  1633  00231C  E1FA               	bnz	copy_data1
  1634                           
  1635                           ; Initialize objects allocated to BANK2 (13 bytes)
  1636                           ; load TBLPTR registers with __pidataBANK2
  1637  00231E  0EBC               	movlw	low __pidataBANK2
  1638  002320  6EF6               	movwf	tblptrl,c
  1639  002322  0E6A               	movlw	high __pidataBANK2
  1640  002324  6EF7               	movwf	tblptrh,c
  1641  002326  0E00               	movlw	low (__pidataBANK2 shr (0+16))
  1642  002328  6EF8               	movwf	tblptru,c
  1643  00232A  EE02  F0F3         	lfsr	0,__pdataBANK2
  1644  00232E  EE10 F00D          	lfsr	1,13
  1645  002332                     copy_data2:
  1646  002332  0009               	tblrd		*+
  1647  002334  CFF5 FFEE          	movff	tablat,postinc0
  1648  002338  50E5               	movf	postdec1,w,c
  1649  00233A  50E1               	movf	fsr1l,w,c
  1650  00233C  E1FA               	bnz	copy_data2
  1651                           
  1652                           ; Initialize objects allocated to BANK1 (2 bytes)
  1653                           ; load TBLPTR registers with __pidataBANK1
  1654  00233E  0E50               	movlw	low __pidataBANK1
  1655  002340  6EF6               	movwf	tblptrl,c
  1656  002342  0E6B               	movlw	high __pidataBANK1
  1657  002344  6EF7               	movwf	tblptrh,c
  1658  002346  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1659  002348  6EF8               	movwf	tblptru,c
  1660  00234A  0009               	tblrd		*+	;fetch initializer
  1661  00234C  CFF5 F1FE          	movff	tablat,__pdataBANK1
  1662  002350  0009               	tblrd		*+	;fetch initializer
  1663  002352  CFF5 F1FF          	movff	tablat,__pdataBANK1+1
  1664                           
  1665                           ; Initialize objects allocated to BANK4 (10 bytes)
  1666                           ; load TBLPTR registers with __pidataBANK4
  1667  002356  0EE2               	movlw	low __pidataBANK4
  1668  002358  6EF6               	movwf	tblptrl,c
  1669  00235A  0E6A               	movlw	high __pidataBANK4
  1670  00235C  6EF7               	movwf	tblptrh,c
  1671  00235E  0E00               	movlw	low (__pidataBANK4 shr (0+16))
  1672  002360  6EF8               	movwf	tblptru,c
  1673  002362  EE04  F0ED         	lfsr	0,__pdataBANK4
  1674  002366  EE10 F00A          	lfsr	1,10
  1675  00236A                     copy_data3:
  1676  00236A  0009               	tblrd		*+
  1677  00236C  CFF5 FFEE          	movff	tablat,postinc0
  1678  002370  50E5               	movf	postdec1,w,c
  1679  002372  50E1               	movf	fsr1l,w,c
  1680  002374  E1FA               	bnz	copy_data3
  1681                           
  1682                           ; Initialize objects allocated to BANK0 (2 bytes)
  1683                           ; load TBLPTR registers with __pidataBANK0
  1684  002376  0E4E               	movlw	low __pidataBANK0
  1685  002378  6EF6               	movwf	tblptrl,c
  1686  00237A  0E6B               	movlw	high __pidataBANK0
  1687  00237C  6EF7               	movwf	tblptrh,c
  1688  00237E  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1689  002380  6EF8               	movwf	tblptru,c
  1690  002382  0009               	tblrd		*+	;fetch initializer
  1691  002384  CFF5 F0E1          	movff	tablat,__pdataBANK0
  1692  002388  0009               	tblrd		*+	;fetch initializer
  1693  00238A  CFF5 F0E2          	movff	tablat,__pdataBANK0+1
  1694                           
  1695                           ; Clear objects allocated to BIGRAMl (800 bytes)
  1696  00238E  EE0A  F0C8         	lfsr	0,__pbssBIGRAMl
  1697  002392  EE13 F020          	lfsr	1,800
  1698  002396                     clear_0:
  1699  002396  6AEE               	clrf	postinc0,c
  1700  002398  50E5               	movf	postdec1,w,c
  1701  00239A  50E1               	movf	fsr1l,w,c
  1702  00239C  E1FC               	bnz	clear_0
  1703  00239E  50E2               	movf	fsr1h,w,c
  1704  0023A0  E1FA               	bnz	clear_0
  1705                           
  1706                           ; Clear objects allocated to BANK9 (200 bytes)
  1707  0023A2  EE09  F000         	lfsr	0,__pbssBANK9
  1708  0023A6  0EC8               	movlw	200
  1709  0023A8                     clear_1:
  1710  0023A8  6AEE               	clrf	postinc0,c
  1711  0023AA  06E8               	decf	wreg,f,c
  1712  0023AC  E1FD               	bnz	clear_1
  1713                           
  1714                           ; Clear objects allocated to BANK8 (200 bytes)
  1715  0023AE  EE08  F000         	lfsr	0,__pbssBANK8
  1716  0023B2  0EC8               	movlw	200
  1717  0023B4                     clear_2:
  1718  0023B4  6AEE               	clrf	postinc0,c
  1719  0023B6  06E8               	decf	wreg,f,c
  1720  0023B8  E1FD               	bnz	clear_2
  1721                           
  1722                           ; Clear objects allocated to BANK7 (246 bytes)
  1723  0023BA  EE07  F000         	lfsr	0,__pbssBANK7
  1724  0023BE  0EF6               	movlw	246
  1725  0023C0                     clear_3:
  1726  0023C0  6AEE               	clrf	postinc0,c
  1727  0023C2  06E8               	decf	wreg,f,c
  1728  0023C4  E1FD               	bnz	clear_3
  1729                           
  1730                           ; Clear objects allocated to BANK6 (220 bytes)
  1731  0023C6  EE06  F000         	lfsr	0,__pbssBANK6
  1732  0023CA  0EDC               	movlw	220
  1733  0023CC                     clear_4:
  1734  0023CC  6AEE               	clrf	postinc0,c
  1735  0023CE  06E8               	decf	wreg,f,c
  1736  0023D0  E1FD               	bnz	clear_4
  1737                           
  1738                           ; Clear objects allocated to BANK5 (164 bytes)
  1739  0023D2  EE05  F000         	lfsr	0,__pbssBANK5
  1740  0023D6  0EA4               	movlw	164
  1741  0023D8                     clear_5:
  1742  0023D8  6AEE               	clrf	postinc0,c
  1743  0023DA  06E8               	decf	wreg,f,c
  1744  0023DC  E1FD               	bnz	clear_5
  1745                           
  1746                           ; Clear objects allocated to BANK3 (196 bytes)
  1747  0023DE  EE03  F000         	lfsr	0,__pbssBANK3
  1748  0023E2  0EC4               	movlw	196
  1749  0023E4                     clear_6:
  1750  0023E4  6AEE               	clrf	postinc0,c
  1751  0023E6  06E8               	decf	wreg,f,c
  1752  0023E8  E1FD               	bnz	clear_6
  1753                           
  1754                           ; Clear objects allocated to BANK2 (43 bytes)
  1755  0023EA  EE02  F0C8         	lfsr	0,__pbssBANK2
  1756  0023EE  0E2B               	movlw	43
  1757  0023F0                     clear_7:
  1758  0023F0  6AEE               	clrf	postinc0,c
  1759  0023F2  06E8               	decf	wreg,f,c
  1760  0023F4  E1FD               	bnz	clear_7
  1761                           
  1762                           ; Clear objects allocated to BANK1 (53 bytes)
  1763  0023F6  EE01  F0C9         	lfsr	0,__pbssBANK1
  1764  0023FA  0E35               	movlw	53
  1765  0023FC                     clear_8:
  1766  0023FC  6AEE               	clrf	postinc0,c
  1767  0023FE  06E8               	decf	wreg,f,c
  1768  002400  E1FD               	bnz	clear_8
  1769                           
  1770                           ; Clear objects allocated to BANK4 (173 bytes)
  1771  002402  EE04  F040         	lfsr	0,__pbssBANK4
  1772  002406  0EAD               	movlw	173
  1773  002408                     clear_9:
  1774  002408  6AEE               	clrf	postinc0,c
  1775  00240A  06E8               	decf	wreg,f,c
  1776  00240C  E1FD               	bnz	clear_9
  1777                           
  1778                           ; Clear objects allocated to BANK0 (49 bytes)
  1779  00240E  EE00  F0B0         	lfsr	0,__pbssBANK0
  1780  002412  0E31               	movlw	49
  1781  002414                     clear_10:
  1782  002414  6AEE               	clrf	postinc0,c
  1783  002416  06E8               	decf	wreg,f,c
  1784  002418  E1FD               	bnz	clear_10
  1785                           
  1786                           ; Clear objects allocated to COMRAM (31 bytes)
  1787  00241A  EE00  F023         	lfsr	0,__pbssCOMRAM
  1788  00241E  0E1F               	movlw	31
  1789  002420                     clear_11:
  1790  002420  6AEE               	clrf	postinc0,c
  1791  002422  06E8               	decf	wreg,f,c
  1792  002424  E1FD               	bnz	clear_11
  1793  002426                     end_of_initialization:
  1794                           	opt stack 0
  1795  002426                     __end_of__initialization:
  1796                           	opt stack 0
  1797  002426  9042               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1798  002428  9242               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1799  00242A  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1800  00242C  6EF8               	movwf	tblptru,c
  1801  00242E  0100               	movlb	0
  1802  002430  EF65  F035         	goto	_main	;jump to C main() function
  1803                           tblptru	equ	0xFF8
  1804                           tblptrh	equ	0xFF7
  1805                           tblptrl	equ	0xFF6
  1806                           tablat	equ	0xFF5
  1807                           postinc0	equ	0xFEE
  1808                           wreg	equ	0xFE8
  1809                           postdec1	equ	0xFE5
  1810                           fsr1h	equ	0xFE2
  1811                           fsr1l	equ	0xFE1
  1812                           
  1813                           	psect	bssCOMRAM
  1814  000023                     __pbssCOMRAM:
  1815                           	opt stack 0
  1816  000023                     Uart_MdmGsmGprsReadService@RxCounter:
  1817                           	opt stack 0
  1818  000023                     	ds	2
  1819  000025                     _USBDeferOUTDataStagePackets:
  1820                           	opt stack 0
  1821  000025                     	ds	1
  1822  000026                     _USBDeferINDataStagePackets:
  1823                           	opt stack 0
  1824  000026                     	ds	1
  1825  000027                     _USBStatusStageEnabledFlag2:
  1826                           	opt stack 0
  1827  000027                     	ds	1
  1828  000028                     _USBStatusStageEnabledFlag1:
  1829                           	opt stack 0
  1830  000028                     	ds	1
  1831  000029                     _USBStatusStageTimeoutCounter:
  1832                           	opt stack 0
  1833  000029                     	ds	1
  1834  00002A                     InitGprsNetwork@GprsNetInitNextState:
  1835                           	opt stack 0
  1836  00002A                     	ds	1
  1837  00002B                     _ComChecCompleted:
  1838                           	opt stack 0
  1839  00002B                     	ds	1
  1840  00002C                     Uart_Uart1RxIsr@UartRxData:
  1841                           	opt stack 0
  1842  00002C                     	ds	1
  1843  00002D                     Uart_MdmGsmGprsReadService@RxState:
  1844                           	opt stack 0
  1845  00002D                     	ds	1
  1846  00002E                     MdmCntSm@MdmCntState:
  1847                           	opt stack 0
  1848  00002E                     	ds	1
  1849  00002F                     RiSm@MdmDrvState:
  1850                           	opt stack 0
  1851  00002F                     	ds	1
  1852  000030                     _Mmd_RingIndicator:
  1853                           	opt stack 0
  1854  000030                     	ds	1
  1855  000031                     I2c_ReadData@ReadStatus:
  1856                           	opt stack 0
  1857  000031                     	ds	1
  1858  000032                     I2c_ReadData@TentativeCounter:
  1859                           	opt stack 0
  1860  000032                     	ds	1
  1861  000033                     I2c_ReadData@DataCounter:
  1862                           	opt stack 0
  1863  000033                     	ds	1
  1864  000034                     I2c_ReadData@I2cReadState:
  1865                           	opt stack 0
  1866  000034                     	ds	1
  1867  000035                     I2c_WriteData@WriteStatus:
  1868                           	opt stack 0
  1869  000035                     	ds	1
  1870  000036                     I2c_WriteData@TentativeCounter:
  1871                           	opt stack 0
  1872  000036                     	ds	1
  1873  000037                     I2c_WriteData@I2cNextState:
  1874                           	opt stack 0
  1875  000037                     	ds	1
  1876  000038                     I2c_WriteData@I2cWriteState:
  1877                           	opt stack 0
  1878  000038                     	ds	1
  1879  000039                     _I2cReadDataEvt:
  1880                           	opt stack 0
  1881  000039                     	ds	1
  1882  00003A                     _NewStringMdmTerminal:
  1883                           	opt stack 0
  1884  00003A                     	ds	1
  1885  00003B                     _NewMdmEvtParserRequest:
  1886                           	opt stack 0
  1887  00003B                     	ds	1
  1888  00003C                     _NewStringReceived:
  1889                           	opt stack 0
  1890  00003C                     	ds	1
  1891  00003D                     _MdmResetRequest:
  1892                           	opt stack 0
  1893  00003D                     	ds	1
  1894  00003E                     _CallClosedEvent:
  1895                           	opt stack 0
  1896  00003E                     	ds	1
  1897  00003F                     _IncomingCallEvent:
  1898                           	opt stack 0
  1899  00003F                     	ds	1
  1900  000040                     _NewSmsEvent:
  1901                           	opt stack 0
  1902  000040                     	ds	1
  1903  000041                     _ActivateRiDetection:
  1904                           	opt stack 0
  1905  000041                     	ds	1
  1906                           tblptru	equ	0xFF8
  1907                           tblptrh	equ	0xFF7
  1908                           tblptrl	equ	0xFF6
  1909                           tablat	equ	0xFF5
  1910                           postinc0	equ	0xFEE
  1911                           wreg	equ	0xFE8
  1912                           postdec1	equ	0xFE5
  1913                           fsr1h	equ	0xFE2
  1914                           fsr1l	equ	0xFE1
  1915                           
  1916                           	psect	bssBANK0
  1917  0000B0                     __pbssBANK0:
  1918                           	opt stack 0
  1919  0000B0                     _inPipes:
  1920                           	opt stack 0
  1921  0000B0                     	ds	6
  1922  0000B6                     _pBDTEntryIn:
  1923                           	opt stack 0
  1924  0000B6                     	ds	6
  1925  0000BC                     _CDCDataOutHandle:
  1926                           	opt stack 0
  1927  0000BC                     	ds	2
  1928  0000BE                     _pBDTEntryEP0OutNext:
  1929                           	opt stack 0
  1930  0000BE                     	ds	2
  1931  0000C0                     _pBDTEntryEP0OutCurrent:
  1932                           	opt stack 0
  1933  0000C0                     	ds	2
  1934  0000C2                     _RxLen:
  1935                           	opt stack 0
  1936  0000C2                     	ds	2
  1937  0000C4                     findEmptySpot@currentState:
  1938                           	opt stack 0
  1939  0000C4                     	ds	1
  1940  0000C5                     isNumberInMemory@currentState:
  1941                           	opt stack 0
  1942  0000C5                     	ds	1
  1943  0000C6                     Eeprom_Reset@memoryAddress:
  1944                           	opt stack 0
  1945  0000C6                     	ds	1
  1946  0000C7                     _cdc_tx_len:
  1947                           	opt stack 0
  1948  0000C7                     	ds	1
  1949  0000C8                     _cdc_trf_state:
  1950                           	opt stack 0
  1951  0000C8                     	ds	1
  1952  0000C9                     _cdc_rx_len:
  1953                           	opt stack 0
  1954  0000C9                     	ds	1
  1955  0000CA                     _USBDeferStatusStagePacket:
  1956                           	opt stack 0
  1957  0000CA                     	ds	1
  1958  0000CB                     _endpoint_number:
  1959                           	opt stack 0
  1960  0000CB                     	ds	1
  1961  0000CC                     _controlTransferState:
  1962                           	opt stack 0
  1963  0000CC                     	ds	1
  1964  0000CD                     _shortPacketStatus:
  1965                           	opt stack 0
  1966  0000CD                     	ds	1
  1967  0000CE                     _USBDeviceState:
  1968                           	opt stack 0
  1969  0000CE                     	ds	1
  1970  0000CF                     _I2cComSts:
  1971                           	opt stack 0
  1972  0000CF                     	ds	1
  1973  0000D0                     HttpGetMethod@GetMethodNextState:
  1974                           	opt stack 0
  1975  0000D0                     	ds	1
  1976  0000D1                     _MdmStatus:
  1977                           	opt stack 0
  1978  0000D1                     	ds	1
  1979  0000D2                     _PhoneNumbLen:
  1980                           	opt stack 0
  1981  0000D2                     	ds	1
  1982  0000D3                     _SmsLen:
  1983                           	opt stack 0
  1984  0000D3                     	ds	1
  1985  0000D4                     _SystemState:
  1986                           	opt stack 0
  1987  0000D4                     	ds	1
  1988  0000D5                     _USTATcopy:
  1989                           	opt stack 0
  1990  0000D5                     	ds	1
  1991  0000D6                     _USBActiveConfiguration:
  1992                           	opt stack 0
  1993  0000D6                     	ds	1
  1994  0000D7                     _I2cWriteDataEvt:
  1995                           	opt stack 0
  1996  0000D7                     	ds	1
  1997  0000D8                     _GetMethod:
  1998                           	opt stack 0
  1999  0000D8                     	ds	1
  2000  0000D9                     _InitNetwork:
  2001                           	opt stack 0
  2002  0000D9                     	ds	1
  2003  0000DA                     _SmsTxtReady:
  2004                           	opt stack 0
  2005  0000DA                     	ds	1
  2006  0000DB                     _GetSmsText:
  2007                           	opt stack 0
  2008  0000DB                     	ds	1
  2009  0000DC                     _SmsEvent:
  2010                           	opt stack 0
  2011  0000DC                     	ds	1
  2012  0000DD                     _ClipEvent:
  2013                           	opt stack 0
  2014  0000DD                     	ds	1
  2015  0000DE                     _RingEvent:
  2016                           	opt stack 0
  2017  0000DE                     	ds	1
  2018  0000DF                     _SendSmsEvent:
  2019                           	opt stack 0
  2020  0000DF                     	ds	1
  2021  0000E0                     _MdmOnOffPulseRequest:
  2022                           	opt stack 0
  2023  0000E0                     	ds	1
  2024                           tblptru	equ	0xFF8
  2025                           tblptrh	equ	0xFF7
  2026                           tblptrl	equ	0xFF6
  2027                           tablat	equ	0xFF5
  2028                           postinc0	equ	0xFEE
  2029                           wreg	equ	0xFE8
  2030                           postdec1	equ	0xFE5
  2031                           fsr1h	equ	0xFE2
  2032                           fsr1l	equ	0xFE1
  2033                           
  2034                           	psect	dataBANK0
  2035  0000E1                     __pdataBANK0:
  2036                           	opt stack 0
  2037  0000E1                     findEmptySpot@currentPosition:
  2038                           	opt stack 0
  2039  0000E1                     	ds	1
  2040  0000E2                     isNumberInMemory@currentPosition:
  2041                           	opt stack 0
  2042  0000E2                     	ds	1
  2043                           tblptru	equ	0xFF8
  2044                           tblptrh	equ	0xFF7
  2045                           tblptrl	equ	0xFF6
  2046                           tablat	equ	0xFF5
  2047                           postinc0	equ	0xFEE
  2048                           wreg	equ	0xFE8
  2049                           postdec1	equ	0xFE5
  2050                           fsr1h	equ	0xFE2
  2051                           fsr1l	equ	0xFE1
  2052                           
  2053                           	psect	bssBANK1
  2054  0001C9                     __pbssBANK1:
  2055                           	opt stack 0
  2056  0001C9                     _outPipes:
  2057                           	opt stack 0
  2058  0001C9                     	ds	8
  2059  0001D1                     _CDCDataInHandle:
  2060                           	opt stack 0
  2061  0001D1                     	ds	2
  2062  0001D3                     triggerCmdFsm@currentState:
  2063                           	opt stack 0
  2064  0001D3                     	ds	1
  2065  0001D4                     delCmdFsm@currentState:
  2066                           	opt stack 0
  2067  0001D4                     	ds	1
  2068  0001D5                     addCmdFsm@currentState:
  2069                           	opt stack 0
  2070  0001D5                     	ds	1
  2071  0001D6                     initFsm@currentState:
  2072                           	opt stack 0
  2073  0001D6                     	ds	1
  2074  0001D7                     initEeprom@currentState:
  2075                           	opt stack 0
  2076  0001D7                     	ds	1
  2077  0001D8                     initGprsModem@currentState:
  2078                           	opt stack 0
  2079  0001D8                     	ds	1
  2080  0001D9                     MyApp_Task@currentState:
  2081                           	opt stack 0
  2082  0001D9                     	ds	1
  2083  0001DA                     GsmGprsTerminal@SMS:
  2084                           	opt stack 0
  2085  0001DA                     	ds	1
  2086  0001DB                     	ds	1
  2087  0001DC                     _control_signal_bitmap:
  2088                           	opt stack 0
  2089  0001DC                     	ds	1
  2090  0001DD                     _cdc_mem_type:
  2091                           	opt stack 0
  2092  0001DD                     	ds	1
  2093  0001DE                     _USBTicksSinceSuspendEnd:
  2094                           	opt stack 0
  2095  0001DE                     	ds	1
  2096  0001DF                     _BothEP0OutUOWNsSet:
  2097                           	opt stack 0
  2098  0001DF                     	ds	1
  2099  0001E0                     _USBBusIsSuspended:
  2100                           	opt stack 0
  2101  0001E0                     	ds	1
  2102  0001E1                     _RemoteWakeup:
  2103                           	opt stack 0
  2104  0001E1                     	ds	1
  2105  0001E2                     I2cSlv_QueryI2cData@Ret:
  2106                           	opt stack 0
  2107  0001E2                     	ds	1
  2108  0001E3                     I2cSlv_QueryI2cData@I2cOpState:
  2109                           	opt stack 0
  2110  0001E3                     	ds	1
  2111  0001E4                     I2cSendMsgSm@I2cComState:
  2112                           	opt stack 0
  2113  0001E4                     	ds	1
  2114  0001E5                     _I2cBusStatus:
  2115                           	opt stack 0
  2116  0001E5                     	ds	1
  2117  0001E6                     HttpGetMethod@GetMOutSts:
  2118                           	opt stack 0
  2119  0001E6                     	ds	1
  2120  0001E7                     HttpGetMethod@GetMethodState:
  2121                           	opt stack 0
  2122  0001E7                     	ds	1
  2123  0001E8                     InitGprsNetwork@GprsNetInitState:
  2124                           	opt stack 0
  2125  0001E8                     	ds	1
  2126  0001E9                     _PostMethod:
  2127                           	opt stack 0
  2128  0001E9                     	ds	1
  2129  0001EA                     _HttpGetMethodSts:
  2130                           	opt stack 0
  2131  0001EA                     	ds	1
  2132  0001EB                     _GprsNetworkSts:
  2133                           	opt stack 0
  2134  0001EB                     	ds	1
  2135  0001EC                     _ApnLenLocal:
  2136                           	opt stack 0
  2137  0001EC                     	ds	1
  2138  0001ED                     SendSmsSm@SendSms_NextState:
  2139                           	opt stack 0
  2140  0001ED                     	ds	1
  2141  0001EE                     SendSmsSm@SendSms_State:
  2142                           	opt stack 0
  2143  0001EE                     	ds	1
  2144  0001EF                     GetSmsSm@GetSmsState:
  2145                           	opt stack 0
  2146  0001EF                     	ds	1
  2147  0001F0                     ConfigureModem@NextState:
  2148                           	opt stack 0
  2149  0001F0                     	ds	1
  2150  0001F1                     ConfigureModem@MdmConfigState:
  2151                           	opt stack 0
  2152  0001F1                     	ds	1
  2153  0001F2                     TurnOnModem@TurnOnMdmState:
  2154                           	opt stack 0
  2155  0001F2                     	ds	1
  2156  0001F3                     CheckModem@CheckMdmSts:
  2157                           	opt stack 0
  2158  0001F3                     	ds	1
  2159  0001F4                     _AlarmEvent:
  2160                           	opt stack 0
  2161  0001F4                     	ds	1
  2162  0001F5                     _Led3OutSts:
  2163                           	opt stack 0
  2164  0001F5                     	ds	1
  2165  0001F6                     _Led3Sts:
  2166                           	opt stack 0
  2167  0001F6                     	ds	1
  2168  0001F7                     _Led2OutSts:
  2169                           	opt stack 0
  2170  0001F7                     	ds	1
  2171  0001F8                     _Led2Sts:
  2172                           	opt stack 0
  2173  0001F8                     	ds	1
  2174  0001F9                     _Led1OutSts:
  2175                           	opt stack 0
  2176  0001F9                     	ds	1
  2177  0001FA                     _Led1Sts:
  2178                           	opt stack 0
  2179  0001FA                     	ds	1
  2180  0001FB                     _ReadAddress:
  2181                           	opt stack 0
  2182  0001FB                     	ds	1
  2183  0001FC                     I2cDummyTx@DummyBuffer:
  2184                           	opt stack 0
  2185  0001FC                     	ds	1
  2186  0001FD                     _MdmStsReady:
  2187                           	opt stack 0
  2188  0001FD                     	ds	1
  2189                           tblptru	equ	0xFF8
  2190                           tblptrh	equ	0xFF7
  2191                           tblptrl	equ	0xFF6
  2192                           tablat	equ	0xFF5
  2193                           postinc0	equ	0xFEE
  2194                           wreg	equ	0xFE8
  2195                           postdec1	equ	0xFE5
  2196                           fsr1h	equ	0xFE2
  2197                           fsr1l	equ	0xFE1
  2198                           
  2199                           	psect	dataBANK1
  2200  0001FE                     __pdataBANK1:
  2201                           	opt stack 0
  2202  0001FE                     _isMemoryEmpty:
  2203                           	opt stack 0
  2204  0001FE                     	ds	1
  2205  0001FF                     InitGprsNetwork@GprsInitSts:
  2206                           	opt stack 0
  2207  0001FF                     	ds	1
  2208                           tblptru	equ	0xFF8
  2209                           tblptrh	equ	0xFF7
  2210                           tblptrl	equ	0xFF6
  2211                           tablat	equ	0xFF5
  2212                           postinc0	equ	0xFEE
  2213                           wreg	equ	0xFE8
  2214                           postdec1	equ	0xFE5
  2215                           fsr1h	equ	0xFE2
  2216                           fsr1l	equ	0xFE1
  2217                           
  2218                           	psect	bssBANK2
  2219  0002C8                     __pbssBANK2:
  2220                           	opt stack 0
  2221  0002C8                     _pCDCDst:
  2222                           	opt stack 0
  2223  0002C8                     	ds	3
  2224  0002CB                     _pCDCSrc:
  2225                           	opt stack 0
  2226  0002CB                     	ds	3
  2227  0002CE                     _ep_data_out:
  2228                           	opt stack 0
  2229  0002CE                     	ds	3
  2230  0002D1                     _ep_data_in:
  2231                           	opt stack 0
  2232  0002D1                     	ds	3
  2233  0002D4                     _pDst:
  2234                           	opt stack 0
  2235  0002D4                     	ds	2
  2236  0002D6                     ConfigureModem@DelayCounter:
  2237                           	opt stack 0
  2238  0002D6                     	ds	2
  2239  0002D8                     ConfigureModem@DelayValueMs:
  2240                           	opt stack 0
  2241  0002D8                     	ds	2
  2242  0002DA                     TurnOnModem@Counter:
  2243                           	opt stack 0
  2244  0002DA                     	ds	2
  2245  0002DC                     UpdateSchFlag@InterruptCounter:
  2246                           	opt stack 0
  2247  0002DC                     	ds	2
  2248  0002DE                     MdmCntSm@Counter:
  2249                           	opt stack 0
  2250  0002DE                     	ds	2
  2251  0002E0                     RiSm@Counter:
  2252                           	opt stack 0
  2253  0002E0                     	ds	2
  2254  0002E2                     _ExtInt1IsrCallback:
  2255                           	opt stack 0
  2256  0002E2                     	ds	2
  2257  0002E4                     _ExtInt0IsrCallback:
  2258                           	opt stack 0
  2259  0002E4                     	ds	2
  2260  0002E6                     _RtccIsrCallback:
  2261                           	opt stack 0
  2262  0002E6                     	ds	2
  2263  0002E8                     _Tmr4IsrCallback:
  2264                           	opt stack 0
  2265  0002E8                     	ds	2
  2266  0002EA                     _Tmr2IsrCallback:
  2267                           	opt stack 0
  2268  0002EA                     	ds	2
  2269  0002EC                     Term_MainSm@TermMainSmState:
  2270                           	opt stack 0
  2271  0002EC                     	ds	1
  2272  0002ED                     Terminal@FormatOption:
  2273                           	opt stack 0
  2274  0002ED                     	ds	1
  2275  0002EE                     Terminal@SlaveAddr:
  2276                           	opt stack 0
  2277  0002EE                     	ds	1
  2278  0002EF                     Terminal@PackageLen:
  2279                           	opt stack 0
  2280  0002EF                     	ds	1
  2281  0002F0                     Terminal@TermState:
  2282                           	opt stack 0
  2283  0002F0                     	ds	1
  2284  0002F1                     _USBAlternateInterface:
  2285                           	opt stack 0
  2286  0002F1                     	ds	2
  2287                           tblptru	equ	0xFF8
  2288                           tblptrh	equ	0xFF7
  2289                           tblptrl	equ	0xFF6
  2290                           tablat	equ	0xFF5
  2291                           postinc0	equ	0xFEE
  2292                           wreg	equ	0xFE8
  2293                           postdec1	equ	0xFE5
  2294                           fsr1h	equ	0xFE2
  2295                           fsr1l	equ	0xFE1
  2296                           
  2297                           	psect	dataBANK2
  2298  0002F3                     __pdataBANK2:
  2299                           	opt stack 0
  2300  0002F3                     Terminal@EchoOption:
  2301                           	opt stack 0
  2302  0002F3                     	ds	1
  2303  0002F4                     _MainSystemTimebaseFlag:
  2304                           	opt stack 0
  2305  0002F4                     	ds	1
  2306  0002F5                     _ConnTimeout:
  2307                           	opt stack 0
  2308  0002F5                     	ds	11
  2309                           tblptru	equ	0xFF8
  2310                           tblptrh	equ	0xFF7
  2311                           tblptrl	equ	0xFF6
  2312                           tablat	equ	0xFF5
  2313                           postinc0	equ	0xFEE
  2314                           wreg	equ	0xFE8
  2315                           postdec1	equ	0xFE5
  2316                           fsr1h	equ	0xFE2
  2317                           fsr1l	equ	0xFE1
  2318                           
  2319                           	psect	bssBANK3
  2320  000300                     __pbssBANK3:
  2321                           	opt stack 0
  2322  000300                     _Rtcm_RtccAlarm:
  2323                           	opt stack 0
  2324  000300                     	ds	6
  2325  000306                     _pBDTEntryOut:
  2326                           	opt stack 0
  2327  000306                     	ds	6
  2328  00030C                     _BaudRateGen:
  2329                           	opt stack 0
  2330  00030C                     	ds	4
  2331  000310                     _USB1msTickCount:
  2332                           	opt stack 0
  2333  000310                     	ds	4
  2334  000314                     _OsTmr_OsTickCounter:
  2335                           	opt stack 0
  2336  000314                     	ds	4
  2337  000318                     _UsbMasterPhoneNumberLen:
  2338                           	opt stack 0
  2339  000318                     	ds	2
  2340  00031A                     _ApnLocal:
  2341                           	opt stack 0
  2342  00031A                     	ds	2
  2343  00031C                     _UartConfig:
  2344                           	opt stack 0
  2345  00031C                     	ds	21
  2346  000331                     _readBuffer:
  2347                           	opt stack 0
  2348  000331                     	ds	13
  2349  00033E                     _callerNumber:
  2350                           	opt stack 0
  2351  00033E                     	ds	13
  2352  00034B                     I2cSlv_QueryI2cData@TimeoutTimer:
  2353                           	opt stack 0
  2354  00034B                     	ds	11
  2355  000356                     _I2cConfig:
  2356                           	opt stack 0
  2357  000356                     	ds	10
  2358  000360                     _Led3Blink:
  2359                           	opt stack 0
  2360  000360                     	ds	9
  2361  000369                     _Led2Blink:
  2362                           	opt stack 0
  2363  000369                     	ds	9
  2364  000372                     _Led1Blink:
  2365                           	opt stack 0
  2366  000372                     	ds	9
  2367  00037B                     _dummy_encapsulated_cmd_response:
  2368                           	opt stack 0
  2369  00037B                     	ds	8
  2370  000383                     _line_coding:
  2371                           	opt stack 0
  2372  000383                     	ds	7
  2373  00038A                     _Led3Pulse:
  2374                           	opt stack 0
  2375  00038A                     	ds	6
  2376  000390                     _Led2Pulse:
  2377                           	opt stack 0
  2378  000390                     	ds	6
  2379  000396                     _Led1Pulse:
  2380                           	opt stack 0
  2381  000396                     	ds	6
  2382  00039C                     _I2cRxPacket:
  2383                           	opt stack 0
  2384  00039C                     	ds	6
  2385  0003A2                     _I2cTxPacket:
  2386                           	opt stack 0
  2387  0003A2                     	ds	5
  2388  0003A7                     _HttpGetDataLocal:
  2389                           	opt stack 0
  2390  0003A7                     	ds	5
  2391  0003AC                     _memoryPreamble:
  2392                           	opt stack 0
  2393  0003AC                     	ds	4
  2394  0003B0                     Terminal@Addr:
  2395                           	opt stack 0
  2396  0003B0                     	ds	4
  2397  0003B4                     Terminal@Len:
  2398                           	opt stack 0
  2399  0003B4                     	ds	4
  2400  0003B8                     _AlCfg:
  2401                           	opt stack 0
  2402  0003B8                     	ds	4
  2403  0003BC                     _RtcConfig:
  2404                           	opt stack 0
  2405  0003BC                     	ds	4
  2406  0003C0                     initGprsModem@modemCounter:
  2407                           	opt stack 0
  2408  0003C0                     	ds	2
  2409  0003C2                     _setupCallTicks:
  2410                           	opt stack 0
  2411  0003C2                     	ds	2
  2412                           tblptru	equ	0xFF8
  2413                           tblptrh	equ	0xFF7
  2414                           tblptrl	equ	0xFF6
  2415                           tablat	equ	0xFF5
  2416                           postinc0	equ	0xFEE
  2417                           wreg	equ	0xFE8
  2418                           postdec1	equ	0xFE5
  2419                           fsr1h	equ	0xFE2
  2420                           fsr1l	equ	0xFE1
  2421                           
  2422                           	psect	dataBANK3
  2423  0003C4                     __pdataBANK3:
  2424                           	opt stack 0
  2425  0003C4                     ModemEvtParser@F9114:
  2426                           	opt stack 0
  2427  0003C4                     	ds	5
  2428  0003C9                     ModemEvtParser@F9112:
  2429                           	opt stack 0
  2430  0003C9                     	ds	5
  2431  0003CE                     ModemEvtParser@F9110:
  2432                           	opt stack 0
  2433  0003CE                     	ds	4
  2434  0003D2                     triggerRelay@F9012:
  2435                           	opt stack 0
  2436  0003D2                     	ds	2
  2437  0003D4                     Term_MainSm@TermDelay:
  2438                           	opt stack 0
  2439  0003D4                     	ds	11
  2440  0003DF                     _ConnWait:
  2441                           	opt stack 0
  2442  0003DF                     	ds	11
  2443  0003EA                     SendSmsSm@SwTimer:
  2444                           	opt stack 0
  2445  0003EA                     	ds	11
  2446  0003F5                     CheckModem@Timeout:
  2447                           	opt stack 0
  2448  0003F5                     	ds	11
  2449                           tblptru	equ	0xFF8
  2450                           tblptrh	equ	0xFF7
  2451                           tblptrl	equ	0xFF6
  2452                           tablat	equ	0xFF5
  2453                           postinc0	equ	0xFEE
  2454                           wreg	equ	0xFE8
  2455                           postdec1	equ	0xFE5
  2456                           fsr1h	equ	0xFE2
  2457                           fsr1l	equ	0xFE1
  2458                           
  2459                           	psect	bssBANK4
  2460  000440                     __pbssBANK4:
  2461                           	opt stack 0
  2462  000440                     _UsbMasterPhoneNumber:
  2463                           	opt stack 0
  2464  000440                     	ds	15
  2465  00044F                     _cdc_notice:
  2466                           	opt stack 0
  2467  00044F                     	ds	10
  2468  000459                     _Rtcm_SystemDate:
  2469                           	opt stack 0
  2470  000459                     	ds	8
  2471  000461                     Term_MainSm@Data:
  2472                           	opt stack 0
  2473  000461                     	ds	50
  2474  000493                     _smsText:
  2475                           	opt stack 0
  2476  000493                     	ds	20
  2477  0004A7                     _PhoneNumber:
  2478                           	opt stack 0
  2479  0004A7                     	ds	20
  2480  0004BB                     _EepromBuffer:
  2481                           	opt stack 0
  2482  0004BB                     	ds	15
  2483  0004CA                     _receivedNumber:
  2484                           	opt stack 0
  2485  0004CA                     	ds	13
  2486  0004D7                     Terminal@SwTimer:
  2487                           	opt stack 0
  2488  0004D7                     	ds	11
  2489  0004E2                     I2cSlv_QueryI2cData@QueryTimer:
  2490                           	opt stack 0
  2491  0004E2                     	ds	11
  2492                           tblptru	equ	0xFF8
  2493                           tblptrh	equ	0xFF7
  2494                           tblptrl	equ	0xFF6
  2495                           tablat	equ	0xFF5
  2496                           postinc0	equ	0xFEE
  2497                           wreg	equ	0xFE8
  2498                           postdec1	equ	0xFE5
  2499                           fsr1h	equ	0xFE2
  2500                           fsr1l	equ	0xFE1
  2501                           
  2502                           	psect	dataBANK4
  2503  0004ED                     __pdataBANK4:
  2504                           	opt stack 0
  2505  0004ED                     ModemEvtParser@F9116:
  2506                           	opt stack 0
  2507  0004ED                     	ds	10
  2508                           tblptru	equ	0xFF8
  2509                           tblptrh	equ	0xFF7
  2510                           tblptrl	equ	0xFF6
  2511                           tablat	equ	0xFF5
  2512                           postinc0	equ	0xFEE
  2513                           wreg	equ	0xFE8
  2514                           postdec1	equ	0xFE5
  2515                           fsr1h	equ	0xFE2
  2516                           fsr1l	equ	0xFE1
  2517                           
  2518                           	psect	bssBANK5
  2519  000500                     __pbssBANK5:
  2520                           	opt stack 0
  2521  000500                     _cdc_data_rx:
  2522                           	opt stack 0
  2523  000500                     	ds	64
  2524  000540                     Terminal@TermRxBuffer:
  2525                           	opt stack 0
  2526  000540                     	ds	50
  2527  000572                     _MessageText:
  2528                           	opt stack 0
  2529  000572                     	ds	50
  2530                           tblptru	equ	0xFF8
  2531                           tblptrh	equ	0xFF7
  2532                           tblptrl	equ	0xFF6
  2533                           tablat	equ	0xFF5
  2534                           postinc0	equ	0xFEE
  2535                           wreg	equ	0xFE8
  2536                           postdec1	equ	0xFE5
  2537                           fsr1h	equ	0xFE2
  2538                           fsr1l	equ	0xFE1
  2539                           
  2540                           	psect	dataBANK5
  2541  0005A4                     __pdataBANK5:
  2542                           	opt stack 0
  2543  0005A4                     _TaskTable:
  2544                           	opt stack 0
  2545  0005A4                     	ds	80
  2546                           tblptru	equ	0xFF8
  2547                           tblptrh	equ	0xFF7
  2548                           tblptrl	equ	0xFF6
  2549                           tablat	equ	0xFF5
  2550                           postinc0	equ	0xFEE
  2551                           wreg	equ	0xFE8
  2552                           postdec1	equ	0xFE5
  2553                           fsr1h	equ	0xFE2
  2554                           fsr1l	equ	0xFE1
  2555                           
  2556                           	psect	bssBANK6
  2557  000600                     __pbssBANK6:
  2558                           	opt stack 0
  2559  000600                     _OsAlarms:
  2560                           	opt stack 0
  2561  000600                     	ds	220
  2562                           tblptru	equ	0xFF8
  2563                           tblptrh	equ	0xFF7
  2564                           tblptrl	equ	0xFF6
  2565                           tablat	equ	0xFF5
  2566                           postinc0	equ	0xFEE
  2567                           wreg	equ	0xFE8
  2568                           postdec1	equ	0xFE5
  2569                           fsr1h	equ	0xFE2
  2570                           fsr1l	equ	0xFE1
  2571                           
  2572                           	psect	bssBANK7
  2573  000700                     __pbssBANK7:
  2574                           	opt stack 0
  2575  000700                     _Mdm_SmsRx:
  2576                           	opt stack 0
  2577  000700                     	ds	102
  2578  000766                     Terminal@Payload:
  2579                           	opt stack 0
  2580  000766                     	ds	80
  2581  0007B6                     _cdc_data_tx:
  2582                           	opt stack 0
  2583  0007B6                     	ds	64
  2584                           tblptru	equ	0xFF8
  2585                           tblptrh	equ	0xFF7
  2586                           tblptrl	equ	0xFF6
  2587                           tablat	equ	0xFF5
  2588                           postinc0	equ	0xFEE
  2589                           wreg	equ	0xFE8
  2590                           postdec1	equ	0xFE5
  2591                           fsr1h	equ	0xFE2
  2592                           fsr1l	equ	0xFE1
  2593                           
  2594                           	psect	bssBANK8
  2595  000800                     __pbssBANK8:
  2596                           	opt stack 0
  2597  000800                     GsmGprsTerminal@UsbBuffer:
  2598                           	opt stack 0
  2599  000800                     	ds	200
  2600                           tblptru	equ	0xFF8
  2601                           tblptrh	equ	0xFF7
  2602                           tblptrl	equ	0xFF6
  2603                           tablat	equ	0xFF5
  2604                           postinc0	equ	0xFEE
  2605                           wreg	equ	0xFE8
  2606                           postdec1	equ	0xFE5
  2607                           fsr1h	equ	0xFE2
  2608                           fsr1l	equ	0xFE1
  2609                           
  2610                           	psect	bssBANK9
  2611  000900                     __pbssBANK9:
  2612                           	opt stack 0
  2613  000900                     GsmGprsTerminal@UartBuffer:
  2614                           	opt stack 0
  2615  000900                     	ds	200
  2616                           tblptru	equ	0xFF8
  2617                           tblptrh	equ	0xFF7
  2618                           tblptrl	equ	0xFF6
  2619                           tablat	equ	0xFF5
  2620                           postinc0	equ	0xFEE
  2621                           wreg	equ	0xFE8
  2622                           postdec1	equ	0xFE5
  2623                           fsr1h	equ	0xFE2
  2624                           fsr1l	equ	0xFE1
  2625                           
  2626                           	psect	bssBIGRAMl
  2627  000AC8                     __pbssBIGRAMl:
  2628                           	opt stack 0
  2629  000AC8                     Uart_MdmGsmGprsReadService@LocalRxBuffer:
  2630                           	opt stack 0
  2631  000AC8                     	ds	400
  2632  000C58                     _RxBuffer:
  2633                           	opt stack 0
  2634  000C58                     	ds	400
  2635                           tblptru	equ	0xFF8
  2636                           tblptrh	equ	0xFF7
  2637                           tblptrl	equ	0xFF6
  2638                           tablat	equ	0xFF5
  2639                           postinc0	equ	0xFEE
  2640                           wreg	equ	0xFE8
  2641                           postdec1	equ	0xFE5
  2642                           fsr1h	equ	0xFE2
  2643                           fsr1l	equ	0xFE1
  2644                           
  2645                           	psect	cstackBANK10
  2646  000A00                     __pcstackBANK10:
  2647                           	opt stack 0
  2648  000A00                     Terminal@UsbRxBuffer:
  2649                           	opt stack 0
  2650                           
  2651                           ; 200 bytes @ 0x0
  2652  000A00                     	ds	200
  2653                           tblptru	equ	0xFF8
  2654                           tblptrh	equ	0xFF7
  2655                           tblptrl	equ	0xFF6
  2656                           tablat	equ	0xFF5
  2657                           postinc0	equ	0xFEE
  2658                           wreg	equ	0xFE8
  2659                           postdec1	equ	0xFE5
  2660                           fsr1h	equ	0xFE2
  2661                           fsr1l	equ	0xFE1
  2662                           
  2663                           	psect	cstackBANK4
  2664  0004F7                     __pcstackBANK4:
  2665                           	opt stack 0
  2666  0004F7                     ??_InitializeTasks:
  2667  0004F7                     ??_ScheduleTasks:
  2668                           
  2669                           ; 1 bytes @ 0x0
  2670  0004F7                     	ds	2
  2671  0004F9                     InitializeTasks@ActiveTaskIndex:
  2672                           	opt stack 0
  2673                           
  2674                           ; 1 bytes @ 0x2
  2675  0004F9                     	ds	2
  2676  0004FB                     ScheduleTasks@ActiveTaskIndex:
  2677                           	opt stack 0
  2678                           
  2679                           ; 1 bytes @ 0x4
  2680  0004FB                     	ds	1
  2681                           tblptru	equ	0xFF8
  2682                           tblptrh	equ	0xFF7
  2683                           tblptrl	equ	0xFF6
  2684                           tablat	equ	0xFF5
  2685                           postinc0	equ	0xFEE
  2686                           wreg	equ	0xFE8
  2687                           postdec1	equ	0xFE5
  2688                           fsr1h	equ	0xFE2
  2689                           fsr1l	equ	0xFE1
  2690                           
  2691                           	psect	cstackBANK2
  2692  000200                     __pcstackBANK2:
  2693                           	opt stack 0
  2694  000200                     Terminal@UsbTxBuffer:
  2695                           	opt stack 0
  2696                           
  2697                           ; 200 bytes @ 0x0
  2698  000200                     	ds	200
  2699                           tblptru	equ	0xFF8
  2700                           tblptrh	equ	0xFF7
  2701                           tblptrl	equ	0xFF6
  2702                           tablat	equ	0xFF5
  2703                           postinc0	equ	0xFEE
  2704                           wreg	equ	0xFE8
  2705                           postdec1	equ	0xFE5
  2706                           fsr1h	equ	0xFE2
  2707                           fsr1l	equ	0xFE1
  2708                           
  2709                           	psect	cstackBANK1
  2710  000100                     __pcstackBANK1:
  2711                           	opt stack 0
  2712  000100                     initEeprom@addressToRead:
  2713                           	opt stack 0
  2714  000100                     isNumberInMemory@phoneNumber:
  2715                           	opt stack 0
  2716  000100                     isMasterNumber@phoneNumber:
  2717                           	opt stack 0
  2718  000100                     findEmptySpot@positionInMemory:
  2719                           	opt stack 0
  2720  000100                     SendSmsSm@UartMessage:
  2721                           	opt stack 0
  2722  000100                     InitGprsNetwork@UartMessage:
  2723                           	opt stack 0
  2724  000100                     Terminal@TermTxBuffer:
  2725                           	opt stack 0
  2726  000100                     HttpGetMethod@UartMessage:
  2727                           	opt stack 0
  2728                           
  2729                           ; 200 bytes @ 0x0
  2730  000100                     	ds	1
  2731  000101                     initEeprom@memoryOpResult:
  2732                           	opt stack 0
  2733                           
  2734                           ; 1 bytes @ 0x1
  2735  000101                     	ds	1
  2736  000102                     initEeprom@isInitialized:
  2737                           	opt stack 0
  2738  000102                     isMasterNumber@memoryOpResult:
  2739                           	opt stack 0
  2740  000102                     findEmptySpot@memoryOpResult:
  2741                           	opt stack 0
  2742  000102                     isNumberInMemory@positionInMemory:
  2743                           	opt stack 0
  2744                           
  2745                           ; 2 bytes @ 0x2
  2746  000102                     	ds	1
  2747  000103                     initFsm@isInitialized:
  2748                           	opt stack 0
  2749  000103                     delCmdFsm@receivedNumber:
  2750                           	opt stack 0
  2751                           
  2752                           ; 2 bytes @ 0x3
  2753  000103                     	ds	1
  2754  000104                     isNumberInMemory@memoryOpResult:
  2755                           	opt stack 0
  2756                           
  2757                           ; 1 bytes @ 0x4
  2758  000104                     	ds	1
  2759  000105                     addCmdFsm@receivedNumber:
  2760                           	opt stack 0
  2761  000105                     delCmdFsm@smsText:
  2762                           	opt stack 0
  2763                           
  2764                           ; 2 bytes @ 0x5
  2765  000105                     	ds	2
  2766  000107                     addCmdFsm@smsText:
  2767                           	opt stack 0
  2768  000107                     delCmdFsm@emptyNumber:
  2769                           	opt stack 0
  2770                           
  2771                           ; 13 bytes @ 0x7
  2772  000107                     	ds	2
  2773  000109                     addCmdFsm@isComplete:
  2774                           	opt stack 0
  2775                           
  2776                           ; 1 bytes @ 0x9
  2777  000109                     	ds	1
  2778  00010A                     addCmdFsm@masterOpResult:
  2779                           	opt stack 0
  2780                           
  2781                           ; 1 bytes @ 0xA
  2782  00010A                     	ds	1
  2783  00010B                     addCmdFsm@numberInMemory:
  2784                           	opt stack 0
  2785                           
  2786                           ; 1 bytes @ 0xB
  2787  00010B                     	ds	1
  2788  00010C                     addCmdFsm@searchNumber:
  2789                           	opt stack 0
  2790                           
  2791                           ; 1 bytes @ 0xC
  2792  00010C                     	ds	8
  2793  000114                     delCmdFsm@isComplete:
  2794                           	opt stack 0
  2795                           
  2796                           ; 1 bytes @ 0x14
  2797  000114                     	ds	1
  2798  000115                     delCmdFsm@numberInMemory:
  2799                           	opt stack 0
  2800                           
  2801                           ; 1 bytes @ 0x15
  2802  000115                     	ds	29
  2803  000132                     InitGprsNetwork@Index:
  2804                           	opt stack 0
  2805  000132                     Term_MainSm@FwkMajorStr:
  2806                           	opt stack 0
  2807                           
  2808                           ; 4 bytes @ 0x32
  2809  000132                     	ds	4
  2810  000136                     Term_MainSm@FwkMinorStr:
  2811                           	opt stack 0
  2812                           
  2813                           ; 4 bytes @ 0x36
  2814  000136                     	ds	4
  2815  00013A                     Term_MainSm@FwkBuildStr:
  2816                           	opt stack 0
  2817                           
  2818                           ; 4 bytes @ 0x3A
  2819  00013A                     	ds	142
  2820  0001C8                     HttpGetMethod@Index:
  2821                           	opt stack 0
  2822                           
  2823                           ; 1 bytes @ 0xC8
  2824  0001C8                     	ds	1
  2825                           tblptru	equ	0xFF8
  2826                           tblptrh	equ	0xFF7
  2827                           tblptrl	equ	0xFF6
  2828                           tablat	equ	0xFF5
  2829                           postinc0	equ	0xFEE
  2830                           wreg	equ	0xFE8
  2831                           postdec1	equ	0xFE5
  2832                           fsr1h	equ	0xFE2
  2833                           fsr1l	equ	0xFE1
  2834                           
  2835                           	psect	cstackBANK0
  2836  000060                     __pcstackBANK0:
  2837                           	opt stack 0
  2838  000060                     
  2839                           ; 1 bytes @ 0x0
  2840  000060                     	ds	8
  2841  000068                     ??_LowPriorityIsr:
  2842                           
  2843                           ; 1 bytes @ 0x8
  2844  000068                     	ds	21
  2845  00007D                     ??_isdigit:
  2846  00007D                     ??_isspace:
  2847  00007D                     ??_isupper:
  2848  00007D                     ??_Rtcc_GetRtccValue:
  2849  00007D                     ??_UartTxBufferStatus:
  2850  00007D                     ??_USBStdGetDscHandler:
  2851  00007D                     ??_USBStdGetStatusHandler:
  2852  00007D                     ?_GetLastInteractionNumber:
  2853                           	opt stack 0
  2854  00007D                     ?_USBTransferOnePacket:
  2855                           	opt stack 0
  2856  00007D                     ?_strlen:
  2857                           	opt stack 0
  2858  00007D                     ?_sprintf:
  2859                           	opt stack 0
  2860  00007D                     ?_initPreamble:
  2861                           	opt stack 0
  2862  00007D                     ?___wmul:
  2863                           	opt stack 0
  2864  00007D                     ?___awdiv:
  2865                           	opt stack 0
  2866  00007D                     ?___awmod:
  2867                           	opt stack 0
  2868  00007D                     ?___lwmod:
  2869                           	opt stack 0
  2870  00007D                     ?_GetOsTickCounter:
  2871                           	opt stack 0
  2872  00007D                     ?___lmul:
  2873                           	opt stack 0
  2874  00007D                     Irq_InitIntController@GlobalInt_HighPInt:
  2875                           	opt stack 0
  2876  00007D                     SetAckStatus@AckSts:
  2877                           	opt stack 0
  2878  00007D                     WriteByte@Byte:
  2879                           	opt stack 0
  2880  00007D                     ReadByte@Byte:
  2881                           	opt stack 0
  2882  00007D                     Mcu_SetWdgSts@WdgSts:
  2883                           	opt stack 0
  2884  00007D                     RtccIrqInit@Priority:
  2885                           	opt stack 0
  2886  00007D                     Rtcc_SetRtcStatus@Status:
  2887                           	opt stack 0
  2888  00007D                     TmrBInit@Prescaler:
  2889                           	opt stack 0
  2890  00007D                     Tmr_TmrBIrqSet@Priority:
  2891                           	opt stack 0
  2892  00007D                     Tmr_StartTmr@TmrNumb:
  2893                           	opt stack 0
  2894  00007D                     UartWriteByte@ByteToWrite:
  2895                           	opt stack 0
  2896  00007D                     USBTransferOnePacket@dir:
  2897                           	opt stack 0
  2898  00007D                     USBConfigureEndpoint@direction:
  2899                           	opt stack 0
  2900  00007D                     USBCtrlTrfTxService@byteToSend:
  2901                           	opt stack 0
  2902  00007D                     USBCtrlTrfRxService@i:
  2903                           	opt stack 0
  2904  00007D                     Led_SetLedStatus@LedSts:
  2905                           	opt stack 0
  2906  00007D                     toupper@c:
  2907                           	opt stack 0
  2908  00007D                     tolower@c:
  2909                           	opt stack 0
  2910  00007D                     Mcu_StartSystemPll@PllStartupCounter:
  2911                           	opt stack 0
  2912  00007D                     Rtcc_AlarmConfig@AlarmConfig:
  2913                           	opt stack 0
  2914  00007D                     Tmr_RegisterTmr2IsrCallback@IsrCallback:
  2915                           	opt stack 0
  2916  00007D                     Uart_ClearRxBuffer@Index:
  2917                           	opt stack 0
  2918  00007D                     GenerateEvt@Event:
  2919                           	opt stack 0
  2920  00007D                     ReceiveEvt@Event:
  2921                           	opt stack 0
  2922  00007D                     Led_SetLedBlinkTime@OnTimeMs:
  2923                           	opt stack 0
  2924  00007D                     StringCompare@String1:
  2925                           	opt stack 0
  2926  00007D                     ClearBuffer@Buffer:
  2927                           	opt stack 0
  2928  00007D                     isNumberValid@phoneNumber:
  2929                           	opt stack 0
  2930  00007D                     sprintf@sp:
  2931                           	opt stack 0
  2932  00007D                     ___wmul@multiplier:
  2933                           	opt stack 0
  2934  00007D                     ___awdiv@dividend:
  2935                           	opt stack 0
  2936  00007D                     ___awmod@dividend:
  2937                           	opt stack 0
  2938  00007D                     ___lwmod@dividend:
  2939                           	opt stack 0
  2940  00007D                     memcpy@d1:
  2941                           	opt stack 0
  2942  00007D                     memset@p1:
  2943                           	opt stack 0
  2944  00007D                     strcat@to:
  2945                           	opt stack 0
  2946  00007D                     strcpy@to:
  2947                           	opt stack 0
  2948  00007D                     strlen@s:
  2949                           	opt stack 0
  2950  00007D                     ___lmul@multiplier:
  2951                           	opt stack 0
  2952                           
  2953                           ; 4 bytes @ 0x1D
  2954  00007D                     	ds	1
  2955  00007E                     ??_USBConfigureEndpoint:
  2956  00007E                     Irq_InitIntController@PerInt_LowPInt:
  2957                           	opt stack 0
  2958  00007E                     Rtcc_GetRtccValue@RtccPtrVal:
  2959                           	opt stack 0
  2960  00007E                     TmrBInit@Postscaler:
  2961                           	opt stack 0
  2962  00007E                     Tmr_TmrBIrqSet@TmrIrqSts:
  2963                           	opt stack 0
  2964  00007E                     UartWriteByte@Module:
  2965                           	opt stack 0
  2966  00007E                     UartTxBufferStatus@Module:
  2967                           	opt stack 0
  2968  00007E                     USBCtrlTrfRxService@byteToRead:
  2969                           	opt stack 0
  2970  00007E                     USBCtrlTrfInHandler@lastDTS:
  2971                           	opt stack 0
  2972  00007E                     Led_SetLedStatus@Led:
  2973                           	opt stack 0
  2974  00007E                     _isdigit$6416:
  2975                           	opt stack 0
  2976  00007E                     _isspace$6685:
  2977                           	opt stack 0
  2978  00007E                     _isupper$6688:
  2979                           	opt stack 0
  2980  00007E                     I2c_WriteData@WritePacket:
  2981                           	opt stack 0
  2982  00007E                     Rtcc_RtcConfig@RtcConfig:
  2983                           	opt stack 0
  2984  00007E                     USBTransferOnePacket@data:
  2985                           	opt stack 0
  2986  00007E                     USBStdGetStatusHandler@p:
  2987                           	opt stack 0
  2988                           
  2989                           ; 2 bytes @ 0x1E
  2990  00007E                     	ds	1
  2991  00007F                     ??_strlen:
  2992  00007F                     ??_Rtcc_AlarmConfig:
  2993  00007F                     ??_TmrBInit:
  2994  00007F                     Irq_InitIntController@IntPriorityEn:
  2995                           	opt stack 0
  2996  00007F                     Rtcc_GetRtccValue@RetValue:
  2997                           	opt stack 0
  2998  00007F                     Tmr_TmrBIrqSet@TmrNumb:
  2999                           	opt stack 0
  3000  00007F                     UartTxBufferStatus@TxBufferStatus:
  3001                           	opt stack 0
  3002  00007F                     GenerateEvt@EventStatus:
  3003                           	opt stack 0
  3004  00007F                     isdigit@c:
  3005                           	opt stack 0
  3006  00007F                     isspace@c:
  3007                           	opt stack 0
  3008  00007F                     isupper@c:
  3009                           	opt stack 0
  3010  00007F                     Led_SetLedBlinkTime@OffTimeMs:
  3011                           	opt stack 0
  3012  00007F                     StringCompare@String2:
  3013                           	opt stack 0
  3014  00007F                     ClearBuffer@Len:
  3015                           	opt stack 0
  3016  00007F                     sprintf@f:
  3017                           	opt stack 0
  3018  00007F                     ___wmul@multiplicand:
  3019                           	opt stack 0
  3020  00007F                     ___awdiv@divisor:
  3021                           	opt stack 0
  3022  00007F                     ___awmod@divisor:
  3023                           	opt stack 0
  3024  00007F                     ___lwmod@divisor:
  3025                           	opt stack 0
  3026  00007F                     memcpy@s1:
  3027                           	opt stack 0
  3028  00007F                     memset@c:
  3029                           	opt stack 0
  3030  00007F                     strcat@from:
  3031                           	opt stack 0
  3032  00007F                     strcpy@from:
  3033                           	opt stack 0
  3034                           
  3035                           ; 2 bytes @ 0x1F
  3036  00007F                     	ds	1
  3037  000080                     ??_isalpha:
  3038  000080                     ??_isxdigit:
  3039  000080                     ??_I2c_WriteData:
  3040  000080                     ??_Rtcc_RtcConfig:
  3041  000080                     Rtcc_GetRtccValue@RegValue:
  3042                           	opt stack 0
  3043  000080                     TmrBInit@TmrNumb:
  3044                           	opt stack 0
  3045  000080                     ReceiveEvt@EventStatus:
  3046                           	opt stack 0
  3047  000080                     USBTransferOnePacket@len:
  3048                           	opt stack 0
  3049  000080                     isNumberValid@isNumberOk:
  3050                           	opt stack 0
  3051  000080                     I2c_ReadData@ReadPacket:
  3052                           	opt stack 0
  3053  000080                     Uart_WriteConstString@ConstStringToWrite:
  3054                           	opt stack 0
  3055  000080                     Uart_WriteString@StringToWrite:
  3056                           	opt stack 0
  3057  000080                     Uart_WriteStringLen@StringToWrite:
  3058                           	opt stack 0
  3059  000080                     I2cSlv_SendI2cMsg@TxBuffer:
  3060                           	opt stack 0
  3061  000080                     I2cSlv_ReceiveI2cMsg@RxBuffer:
  3062                           	opt stack 0
  3063                           
  3064                           ; 2 bytes @ 0x20
  3065  000080                     	ds	1
  3066  000081                     ?_GetElapsedTime:
  3067                           	opt stack 0
  3068  000081                     ?_Rtcm_GetRtccDate:
  3069                           	opt stack 0
  3070  000081                     Mdm_IsSmsReceived@Ret:
  3071                           	opt stack 0
  3072  000081                     Mdm_IsRinging@Ret:
  3073                           	opt stack 0
  3074  000081                     I2cSlv_I2cReadMsgSts@Result:
  3075                           	opt stack 0
  3076  000081                     USBTransferOnePacket@ep:
  3077                           	opt stack 0
  3078  000081                     Led_SetLedBlinkTime@Led:
  3079                           	opt stack 0
  3080  000081                     isNumberValid@i:
  3081                           	opt stack 0
  3082  000081                     ___awdiv@counter:
  3083                           	opt stack 0
  3084  000081                     ___awmod@counter:
  3085                           	opt stack 0
  3086  000081                     ___lwmod@counter:
  3087                           	opt stack 0
  3088  000081                     _isalpha$6682:
  3089                           	opt stack 0
  3090  000081                     _isxdigit$6692:
  3091                           	opt stack 0
  3092  000081                     OsTmr_StartTimer@Timer:
  3093                           	opt stack 0
  3094  000081                     StringCompare@Len:
  3095                           	opt stack 0
  3096  000081                     ClearBuffer@Index:
  3097                           	opt stack 0
  3098  000081                     ___wmul@product:
  3099                           	opt stack 0
  3100  000081                     memcpy@n:
  3101                           	opt stack 0
  3102  000081                     memset@n:
  3103                           	opt stack 0
  3104  000081                     strcat@cp:
  3105                           	opt stack 0
  3106  000081                     strcpy@cp:
  3107                           	opt stack 0
  3108  000081                     strlen@cp:
  3109                           	opt stack 0
  3110  000081                     GetElapsedTime@StartTime:
  3111                           	opt stack 0
  3112  000081                     ___lmul@multiplicand:
  3113                           	opt stack 0
  3114                           
  3115                           ; 4 bytes @ 0x21
  3116  000081                     	ds	1
  3117  000082                     ??_I2c_ReadData:
  3118  000082                     Uart_WriteConstString@Module:
  3119                           	opt stack 0
  3120  000082                     Uart_WriteString@Module:
  3121                           	opt stack 0
  3122  000082                     Uart_WriteStringLen@Len:
  3123                           	opt stack 0
  3124  000082                     I2cSlv_SendI2cMsg@SlaveAddr:
  3125                           	opt stack 0
  3126  000082                     I2cSlv_ReceiveI2cMsg@SlaveAddr:
  3127                           	opt stack 0
  3128  000082                     USBConfigureEndpoint@EPNum:
  3129                           	opt stack 0
  3130  000082                     ___awdiv@sign:
  3131                           	opt stack 0
  3132  000082                     ___awmod@sign:
  3133                           	opt stack 0
  3134  000082                     isalpha@c:
  3135                           	opt stack 0
  3136  000082                     isxdigit@c:
  3137                           	opt stack 0
  3138  000082                     USBTransferOnePacket@handle:
  3139                           	opt stack 0
  3140                           
  3141                           ; 2 bytes @ 0x22
  3142  000082                     	ds	1
  3143  000083                     ?_GetCallerNumber:
  3144                           	opt stack 0
  3145  000083                     ?_atoi:
  3146                           	opt stack 0
  3147  000083                     ?_xtoi:
  3148                           	opt stack 0
  3149  000083                     ?___lwdiv:
  3150                           	opt stack 0
  3151  000083                     Uart_WriteStringLen@Index:
  3152                           	opt stack 0
  3153  000083                     Mdm_SetSmsFormat@Index:
  3154                           	opt stack 0
  3155  000083                     I2cSlv_SendI2cMsg@DataLenght:
  3156                           	opt stack 0
  3157  000083                     I2cSlv_ReceiveI2cMsg@DataLenght:
  3158                           	opt stack 0
  3159  000083                     getSetupCall@isCalledReceived:
  3160                           	opt stack 0
  3161  000083                     sprintf@flag:
  3162                           	opt stack 0
  3163  000083                     memcpy@tmp:
  3164                           	opt stack 0
  3165  000083                     OsAlrm_SetOsAlarm@OsAlarmId:
  3166                           	opt stack 0
  3167  000083                     USBConfigureEndpoint@handle:
  3168                           	opt stack 0
  3169  000083                     putUSBUSART@data:
  3170                           	opt stack 0
  3171  000083                     atoi@s:
  3172                           	opt stack 0
  3173  000083                     ___awdiv@quotient:
  3174                           	opt stack 0
  3175  000083                     ___lwdiv@dividend:
  3176                           	opt stack 0
  3177  000083                     memset@p:
  3178                           	opt stack 0
  3179  000083                     xtoi@s:
  3180                           	opt stack 0
  3181  000083                     OsTmr_StartTimer@Timeout:
  3182                           	opt stack 0
  3183                           
  3184                           ; 4 bytes @ 0x23
  3185  000083                     	ds	1
  3186  000084                     Uart_WriteStringLen@Module:
  3187                           	opt stack 0
  3188  000084                     I2cSlv_SendI2cMsg@TxSts:
  3189                           	opt stack 0
  3190  000084                     I2cSlv_ReceiveI2cMsg@RxSts:
  3191                           	opt stack 0
  3192  000084                     CDCTxService@i:
  3193                           	opt stack 0
  3194  000084                     getsUSBUSART@buffer:
  3195                           	opt stack 0
  3196  000084                     sprintf@ap:
  3197                           	opt stack 0
  3198  000084                     memcpy@d:
  3199                           	opt stack 0
  3200  000084                     Mdm_SetSmsFormat@UartMessage:
  3201                           	opt stack 0
  3202                           
  3203                           ; 20 bytes @ 0x24
  3204  000084                     	ds	1
  3205  000085                     ??_atoi:
  3206  000085                     ??_xtoi:
  3207  000085                     ??_GetElapsedTime:
  3208  000085                     Rtcc_SetRtccValue@Value:
  3209                           	opt stack 0
  3210  000085                     USBDeviceInit@i:
  3211                           	opt stack 0
  3212  000085                     USBEnableEndpoint@options:
  3213                           	opt stack 0
  3214  000085                     putUSBUSART@length:
  3215                           	opt stack 0
  3216  000085                     CDCTxService@byte_to_send:
  3217                           	opt stack 0
  3218  000085                     Eeprom_Reset@SlaveAddress:
  3219                           	opt stack 0
  3220  000085                     StringCompare@Result:
  3221                           	opt stack 0
  3222  000085                     triggerRelay@res:
  3223                           	opt stack 0
  3224  000085                     StringCopy@SourceStr:
  3225                           	opt stack 0
  3226  000085                     ___lwdiv@divisor:
  3227                           	opt stack 0
  3228  000085                     OsAlrm_SetOsAlarm@OsAlarmTimeout:
  3229                           	opt stack 0
  3230  000085                     ___lmul@product:
  3231                           	opt stack 0
  3232                           
  3233                           ; 4 bytes @ 0x25
  3234  000085                     	ds	1
  3235  000086                     ??_Rtcc_SetRtccValue:
  3236  000086                     getsUSBUSART@len:
  3237                           	opt stack 0
  3238  000086                     triggerRelay@isRelayOn:
  3239                           	opt stack 0
  3240  000086                     sprintf@c:
  3241                           	opt stack 0
  3242  000086                     USBEnableEndpoint@p:
  3243                           	opt stack 0
  3244  000086                     StringCompare@Index:
  3245                           	opt stack 0
  3246  000086                     memcpy@s:
  3247                           	opt stack 0
  3248                           
  3249                           ; 2 bytes @ 0x26
  3250  000086                     	ds	1
  3251  000087                     atoi@sign:
  3252                           	opt stack 0
  3253  000087                     ___lwdiv@counter:
  3254                           	opt stack 0
  3255  000087                     xtoi@sign:
  3256                           	opt stack 0
  3257  000087                     StringCopy@DestStr:
  3258                           	opt stack 0
  3259  000087                     triggerRelay@txBuffer:
  3260                           	opt stack 0
  3261  000087                     sprintf@cp:
  3262                           	opt stack 0
  3263                           
  3264                           ; 2 bytes @ 0x27
  3265  000087                     	ds	1
  3266  000088                     Rtcc_SetRtccValue@RtccPtrVal:
  3267                           	opt stack 0
  3268  000088                     USBEnableEndpoint@ep:
  3269                           	opt stack 0
  3270  000088                     atoi@a:
  3271                           	opt stack 0
  3272  000088                     ___lwdiv@quotient:
  3273                           	opt stack 0
  3274  000088                     xtoi@val:
  3275                           	opt stack 0
  3276  000088                     parseCommand@addNumberCmd:
  3277                           	opt stack 0
  3278                           
  3279                           ; 4 bytes @ 0x28
  3280  000088                     	ds	1
  3281  000089                     ??_Rtcm_GetRtccDate:
  3282  000089                     ?_strtol:
  3283                           	opt stack 0
  3284  000089                     ?___lldiv:
  3285                           	opt stack 0
  3286  000089                     OsAlrm_SetOsAlarm@AlarmCallback:
  3287                           	opt stack 0
  3288  000089                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  3289                           	opt stack 0
  3290  000089                     StringCopy@Len:
  3291                           	opt stack 0
  3292  000089                     triggerCmdFsm@receivedNumber:
  3293                           	opt stack 0
  3294  000089                     strtol@s:
  3295                           	opt stack 0
  3296  000089                     ___lldiv@dividend:
  3297                           	opt stack 0
  3298  000089                     Rtcm_SetRtccDate@Date:
  3299                           	opt stack 0
  3300                           
  3301                           ; 8 bytes @ 0x29
  3302  000089                     	ds	1
  3303  00008A                     xtoi@c:
  3304                           	opt stack 0
  3305  00008A                     LedBlinkStateMachine@LedBlink:
  3306                           	opt stack 0
  3307  00008A                     LedPulseStateMachine@LedPulse:
  3308                           	opt stack 0
  3309  00008A                     secondsAppTimer@counter:
  3310                           	opt stack 0
  3311  00008A                     utoa@buf:
  3312                           	opt stack 0
  3313  00008A                     Rtcm_GetRtccDate@LocalDate:
  3314                           	opt stack 0
  3315                           
  3316                           ; 8 bytes @ 0x2A
  3317  00008A                     	ds	1
  3318  00008B                     ??_StringCopy:
  3319  00008B                     triggerCmdFsm@isComplete:
  3320                           	opt stack 0
  3321  00008B                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  3322                           	opt stack 0
  3323  00008B                     strtol@endptr:
  3324                           	opt stack 0
  3325                           
  3326                           ; 2 bytes @ 0x2B
  3327  00008B                     	ds	1
  3328  00008C                     LedPulseStateMachine@Led:
  3329                           	opt stack 0
  3330  00008C                     secondsAppTimer@isCyclic:
  3331                           	opt stack 0
  3332  00008C                     triggerCmdFsm@numberInMemory:
  3333                           	opt stack 0
  3334  00008C                     utoa@val:
  3335                           	opt stack 0
  3336  00008C                     parseCommand@deleteNumberCmd:
  3337                           	opt stack 0
  3338                           
  3339                           ; 4 bytes @ 0x2C
  3340  00008C                     	ds	1
  3341  00008D                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  3342                           	opt stack 0
  3343  00008D                     StringCopy@Index:
  3344                           	opt stack 0
  3345  00008D                     strtol@base:
  3346                           	opt stack 0
  3347  00008D                     GetElapsedTime@TimeValue:
  3348                           	opt stack 0
  3349  00008D                     ___lldiv@divisor:
  3350                           	opt stack 0
  3351                           
  3352                           ; 4 bytes @ 0x2D
  3353  00008D                     	ds	1
  3354  00008E                     utoa@base:
  3355                           	opt stack 0
  3356                           
  3357                           ; 2 bytes @ 0x2E
  3358  00008E                     	ds	1
  3359  00008F                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  3360  00008F                     ??_strtol:
  3361  00008F                     secondsAppTimer@seconds:
  3362                           	opt stack 0
  3363  00008F                     Mdm_GetSmsData@MessageText:
  3364                           	opt stack 0
  3365  00008F                     Eeprom_Write@WriteBuffer:
  3366                           	opt stack 0
  3367  00008F                     LedStateMachine@LedSts:
  3368                           	opt stack 0
  3369  00008F                     ModemEvtParser@CallReadyString:
  3370                           	opt stack 0
  3371                           
  3372                           ; 10 bytes @ 0x2F
  3373  00008F                     	ds	1
  3374  000090                     secondsAppTimer@isExpired:
  3375                           	opt stack 0
  3376  000090                     utoa@v:
  3377                           	opt stack 0
  3378  000090                     parseCommand@resetCmd:
  3379                           	opt stack 0
  3380                           
  3381                           ; 4 bytes @ 0x30
  3382  000090                     	ds	1
  3383  000091                     ??_USBStdFeatureReqHandler:
  3384  000091                     Mdm_GetSmsData@GetSmsStatus:
  3385                           	opt stack 0
  3386  000091                     USBStdSetCfgHandler@i:
  3387                           	opt stack 0
  3388  000091                     Eeprom_Write@DataLength:
  3389                           	opt stack 0
  3390  000091                     LedStateMachine@LedOut:
  3391                           	opt stack 0
  3392  000091                     secondsAppTimer@destinationTicks:
  3393                           	opt stack 0
  3394  000091                     GetElapsedTime@CurrentTimestamp:
  3395                           	opt stack 0
  3396  000091                     ___lldiv@quotient:
  3397                           	opt stack 0
  3398                           
  3399                           ; 4 bytes @ 0x31
  3400  000091                     	ds	1
  3401  000092                     Eeprom_Write@WriteSts:
  3402                           	opt stack 0
  3403  000092                     utoa@c:
  3404                           	opt stack 0
  3405  000092                     USBStdFeatureReqHandler@pUEP:
  3406                           	opt stack 0
  3407                           
  3408                           ; 2 bytes @ 0x32
  3409  000092                     	ds	1
  3410  000093                     Eeprom_Write@MemoryAddress:
  3411                           	opt stack 0
  3412  000093                     waitSetupCall@isCallArrived:
  3413                           	opt stack 0
  3414  000093                     strtol@sign:
  3415                           	opt stack 0
  3416  000093                     LedStateMachine@LedBlink:
  3417                           	opt stack 0
  3418  000093                     itoa@buf:
  3419                           	opt stack 0
  3420                           
  3421                           ; 2 bytes @ 0x33
  3422  000093                     	ds	1
  3423  000094                     USBStdFeatureReqHandler@current_ep_data:
  3424                           	opt stack 0
  3425  000094                     Eeprom_Write@SlaveAddress:
  3426                           	opt stack 0
  3427  000094                     parseCommand@state:
  3428                           	opt stack 0
  3429  000094                     strtol@a:
  3430                           	opt stack 0
  3431                           
  3432                           ; 4 bytes @ 0x34
  3433  000094                     	ds	1
  3434  000095                     Eeprom_Write@CommandLength:
  3435                           	opt stack 0
  3436  000095                     detectCmd@currentState:
  3437                           	opt stack 0
  3438  000095                     ___lldiv@counter:
  3439                           	opt stack 0
  3440  000095                     OsTmr_GetTimerStatus@Timer:
  3441                           	opt stack 0
  3442  000095                     USBStdFeatureReqHandler@p:
  3443                           	opt stack 0
  3444  000095                     LedStateMachine@LedPulse:
  3445                           	opt stack 0
  3446  000095                     itoa@val:
  3447                           	opt stack 0
  3448                           
  3449                           ; 2 bytes @ 0x35
  3450  000095                     	ds	1
  3451  000096                     Tmr_TmrBPrSet@IntFreqHz:
  3452                           	opt stack 0
  3453  000096                     SetUartBaudRate@UartConfig:
  3454                           	opt stack 0
  3455  000096                     saveNumberInMemory@phoneNumber:
  3456                           	opt stack 0
  3457  000096                     SetBaudRate@DesiredI2cBusClockHz:
  3458                           	opt stack 0
  3459                           
  3460                           ; 4 bytes @ 0x36
  3461  000096                     	ds	1
  3462  000097                     ??_USBCtrlEPService:
  3463  000097                     itoa@base:
  3464                           	opt stack 0
  3465                           
  3466                           ; 2 bytes @ 0x37
  3467  000097                     	ds	1
  3468  000098                     Tmr_TmrBPrSet@Prescaler:
  3469                           	opt stack 0
  3470  000098                     Mdm_SetSmsFormat@TextFormat:
  3471                           	opt stack 0
  3472  000098                     USBDeviceTasks@i:
  3473                           	opt stack 0
  3474  000098                     LedStateMachine@LedOutSts:
  3475                           	opt stack 0
  3476  000098                     saveNumberInMemory@address:
  3477                           	opt stack 0
  3478  000098                     strtol@c:
  3479                           	opt stack 0
  3480                           
  3481                           ; 1 bytes @ 0x38
  3482  000098                     	ds	1
  3483  000099                     Tmr_TmrBPrSet@Postscaler:
  3484                           	opt stack 0
  3485  000099                     SetUartBaudRate@Module:
  3486                           	opt stack 0
  3487  000099                     LedStateMachine@Led:
  3488                           	opt stack 0
  3489  000099                     initGprsModem@isInitialized:
  3490                           	opt stack 0
  3491  000099                     itoa@cp:
  3492                           	opt stack 0
  3493  000099                     ModemEvtParser@ClipString:
  3494                           	opt stack 0
  3495                           
  3496                           ; 5 bytes @ 0x39
  3497  000099                     	ds	1
  3498  00009A                     ??_Led_MainTask:
  3499  00009A                     Tmr_TmrBPrSet@TmrBPrCfgSts:
  3500                           	opt stack 0
  3501  00009A                     SetUartBaudRate@BaudRateRegister:
  3502                           	opt stack 0
  3503  00009A                     SetBaudRate@McuClockHz:
  3504                           	opt stack 0
  3505                           
  3506                           ; 4 bytes @ 0x3A
  3507  00009A                     	ds	1
  3508  00009B                     ??_SendSmsSm:
  3509  00009B                     Tmr_TmrBPrSet@TmrNumb:
  3510                           	opt stack 0
  3511  00009B                     OsTmr_Wait@WaitTimer:
  3512                           	opt stack 0
  3513  00009B                     InitGprsNetwork@Apn:
  3514                           	opt stack 0
  3515  00009B                     HttpGetMethod@GetData:
  3516                           	opt stack 0
  3517                           
  3518                           ; 2 bytes @ 0x3B
  3519  00009B                     	ds	1
  3520  00009C                     SetUartBaudRate@DivisionFactor:
  3521                           	opt stack 0
  3522  00009C                     Tmr_TmrBPrSet@Divisor:
  3523                           	opt stack 0
  3524                           
  3525                           ; 4 bytes @ 0x3C
  3526  00009C                     	ds	1
  3527  00009D                     ??_HttpGetMethod:
  3528  00009D                     InitGprsNetwork@ApnLen:
  3529                           	opt stack 0
  3530  00009D                     Uart_InitUartModule@UartConfig:
  3531                           	opt stack 0
  3532  00009D                     OsTmr_Wait@DelayMs:
  3533                           	opt stack 0
  3534                           
  3535                           ; 4 bytes @ 0x3D
  3536  00009D                     	ds	1
  3537  00009E                     ??_SetBaudRate:
  3538  00009E                     ??_InitGprsNetwork:
  3539  00009E                     ModemEvtParser@SmsString:
  3540                           	opt stack 0
  3541                           
  3542                           ; 5 bytes @ 0x3E
  3543  00009E                     	ds	1
  3544  00009F                     ??_Uart_InitUartModule:
  3545                           
  3546                           ; 1 bytes @ 0x3F
  3547  00009F                     	ds	1
  3548  0000A0                     Tmr_TmrBConfig@TmrBConfig:
  3549                           	opt stack 0
  3550                           
  3551                           ; 2 bytes @ 0x40
  3552  0000A0                     	ds	1
  3553  0000A1                     Uart_InitUartModule@Module:
  3554                           	opt stack 0
  3555  0000A1                     OsTmr_Wait@Ret:
  3556                           	opt stack 0
  3557                           
  3558                           ; 1 bytes @ 0x41
  3559  0000A1                     	ds	1
  3560  0000A2                     ??_Terminal:
  3561  0000A2                     I2c_InitI2cModule@I2cConfig:
  3562                           	opt stack 0
  3563  0000A2                     I2cSlv_QueryI2cData@TxBuffer:
  3564                           	opt stack 0
  3565                           
  3566                           ; 2 bytes @ 0x42
  3567  0000A2                     	ds	1
  3568  0000A3                     Tmr_TmrBConfig@TmrNumb:
  3569                           	opt stack 0
  3570  0000A3                     ModemEvtParser@RingString:
  3571                           	opt stack 0
  3572                           
  3573                           ; 4 bytes @ 0x43
  3574  0000A3                     	ds	1
  3575  0000A4                     ??_I2c_InitI2cModule:
  3576  0000A4                     I2cSlv_QueryI2cData@TxLen:
  3577                           	opt stack 0
  3578  0000A4                     Terminal@i:
  3579                           	opt stack 0
  3580  0000A4                     InitSchedTimer@TmrBConfig:
  3581                           	opt stack 0
  3582                           
  3583                           ; 7 bytes @ 0x44
  3584  0000A4                     	ds	1
  3585  0000A5                     Terminal@ReceivedBytes:
  3586                           	opt stack 0
  3587  0000A5                     I2cSlv_QueryI2cData@RxBuffer:
  3588                           	opt stack 0
  3589                           
  3590                           ; 2 bytes @ 0x45
  3591  0000A5                     	ds	1
  3592  0000A6                     Terminal@Index:
  3593                           	opt stack 0
  3594                           
  3595                           ; 1 bytes @ 0x46
  3596  0000A6                     	ds	1
  3597  0000A7                     ModemEvtParser@Match:
  3598                           	opt stack 0
  3599  0000A7                     I2cSlv_QueryI2cData@RxLen:
  3600                           	opt stack 0
  3601                           
  3602                           ; 1 bytes @ 0x47
  3603  0000A7                     	ds	1
  3604  0000A8                     ModemEvtParser@CompareIdx:
  3605                           	opt stack 0
  3606  0000A8                     I2cSlv_QueryI2cData@SlaveAddr:
  3607                           	opt stack 0
  3608                           
  3609                           ; 1 bytes @ 0x48
  3610  0000A8                     	ds	1
  3611  0000A9                     Eeprom_Read@ReadBuffer:
  3612                           	opt stack 0
  3613                           
  3614                           ; 2 bytes @ 0x49
  3615  0000A9                     	ds	2
  3616  0000AB                     Eeprom_Read@DataLength:
  3617                           	opt stack 0
  3618                           
  3619                           ; 1 bytes @ 0x4B
  3620  0000AB                     	ds	1
  3621  0000AC                     Eeprom_Read@MemoryAddress:
  3622                           	opt stack 0
  3623                           
  3624                           ; 1 bytes @ 0x4C
  3625  0000AC                     	ds	1
  3626  0000AD                     Eeprom_Read@SlaveAddress:
  3627                           	opt stack 0
  3628                           
  3629                           ; 1 bytes @ 0x4D
  3630  0000AD                     	ds	1
  3631  0000AE                     Eeprom_Read@ReadSts:
  3632                           	opt stack 0
  3633                           
  3634                           ; 1 bytes @ 0x4E
  3635  0000AE                     	ds	1
  3636  0000AF                     Eeprom_Read@QuerySts:
  3637                           	opt stack 0
  3638                           
  3639                           ; 1 bytes @ 0x4F
  3640  0000AF                     	ds	1
  3641  0000B0                     tblptru	equ	0xFF8
  3642                           tblptrh	equ	0xFF7
  3643                           tblptrl	equ	0xFF6
  3644                           tablat	equ	0xFF5
  3645                           postinc0	equ	0xFEE
  3646                           wreg	equ	0xFE8
  3647                           postdec1	equ	0xFE5
  3648                           fsr1h	equ	0xFE2
  3649                           fsr1l	equ	0xFE1
  3650                           
  3651                           ; 1 bytes @ 0x50
  3652                           
  3653                           	psect	cstackCOMRAM
  3654  000001                     __pcstackCOMRAM:
  3655                           	opt stack 0
  3656  000001                     i2GenerateEvt@Event:
  3657                           	opt stack 0
  3658                           
  3659                           ; 2 bytes @ 0x0
  3660  000001                     	ds	2
  3661  000003                     i2GenerateEvt@EventStatus:
  3662                           	opt stack 0
  3663                           
  3664                           ; 1 bytes @ 0x2
  3665  000003                     	ds	1
  3666  000004                     Uart_MdmGsmGprsReadService@UartData:
  3667                           	opt stack 0
  3668                           
  3669                           ; 1 bytes @ 0x3
  3670  000004                     	ds	1
  3671  000005                     Uart_MdmGsmGprsReadService@ServiceCounter:
  3672                           	opt stack 0
  3673                           
  3674                           ; 2 bytes @ 0x4
  3675  000005                     	ds	2
  3676  000007                     ??_HighPriorityIsr:
  3677                           
  3678                           ; 1 bytes @ 0x6
  3679  000007                     	ds	18
  3680  000019                     ?i1___wmul:
  3681                           	opt stack 0
  3682  000019                     OsAlrm_ClearOsAlarm@OsAlarmId:
  3683                           	opt stack 0
  3684  000019                     i1GenerateEvt@Event:
  3685                           	opt stack 0
  3686  000019                     i1___wmul@multiplier:
  3687                           	opt stack 0
  3688                           
  3689                           ; 2 bytes @ 0x18
  3690  000019                     	ds	2
  3691  00001B                     i1GenerateEvt@EventStatus:
  3692                           	opt stack 0
  3693  00001B                     i1___wmul@multiplicand:
  3694                           	opt stack 0
  3695                           
  3696                           ; 2 bytes @ 0x1A
  3697  00001B                     	ds	1
  3698  00001C                     i1I2cSlv_SendI2cMsg@TxBuffer:
  3699                           	opt stack 0
  3700                           
  3701                           ; 2 bytes @ 0x1B
  3702  00001C                     	ds	1
  3703  00001D                     i1___wmul@product:
  3704                           	opt stack 0
  3705                           
  3706                           ; 2 bytes @ 0x1C
  3707  00001D                     	ds	1
  3708  00001E                     i1I2cSlv_SendI2cMsg@SlaveAddr:
  3709                           	opt stack 0
  3710                           
  3711                           ; 1 bytes @ 0x1D
  3712  00001E                     	ds	1
  3713  00001F                     i1I2cSlv_SendI2cMsg@DataLenght:
  3714                           	opt stack 0
  3715                           
  3716                           ; 1 bytes @ 0x1E
  3717  00001F                     	ds	1
  3718  000020                     i1I2cSlv_SendI2cMsg@TxSts:
  3719                           	opt stack 0
  3720                           
  3721                           ; 1 bytes @ 0x1F
  3722  000020                     	ds	1
  3723  000021                     OsAlrm_ProcessOsAlarms@AlarmIndex:
  3724                           	opt stack 0
  3725                           
  3726                           ; 2 bytes @ 0x20
  3727  000021                     	ds	2
  3728  000023                     tblptru	equ	0xFF8
  3729                           tblptrh	equ	0xFF7
  3730                           tblptrl	equ	0xFF6
  3731                           tablat	equ	0xFF5
  3732                           postinc0	equ	0xFEE
  3733                           wreg	equ	0xFE8
  3734                           postdec1	equ	0xFE5
  3735                           fsr1h	equ	0xFE2
  3736                           fsr1l	equ	0xFE1
  3737                           
  3738                           ; 1 bytes @ 0x22
  3739 ;;
  3740 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3741 ;;
  3742 ;; *************** function _main *****************
  3743 ;; Defined at:
  3744 ;;		line 58 in file "../../MercuryFwk/Source/c/00_Main/main.c"
  3745 ;; Parameters:    Size  Location     Type
  3746 ;;		None
  3747 ;; Auto vars:     Size  Location     Type
  3748 ;;		None
  3749 ;; Return value:  Size  Location     Type
  3750 ;;                  2   14[None  ] short 
  3751 ;; Registers used:
  3752 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  3753 ;; Tracked objects:
  3754 ;;		On entry : 0/0
  3755 ;;		On exit  : 0/0
  3756 ;;		Unchanged: 0/0
  3757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3759 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3761 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3762 ;;Total ram usage:        0 bytes
  3763 ;; Hardware stack levels required when called:   23
  3764 ;; This function calls:
  3765 ;;		_Sch_MainScheduler
  3766 ;;		_SystemInit
  3767 ;; This function is called by:
  3768 ;;		Startup code after reset
  3769 ;; This function uses a non-reentrant model
  3770 ;;
  3771                           
  3772                           	psect	text0
  3773  006ACA                     __ptext0:
  3774                           	opt stack 0
  3775  006ACA                     _main:
  3776                           	opt stack 8
  3777                           
  3778                           ;main.c: 61: SystemInit();
  3779                           
  3780                           ;incstack = 0
  3781  006ACA  EC6A  F032         	call	_SystemInit	;wreg free
  3782                           
  3783                           ;main.c: 64: Sch_MainScheduler();
  3784  006ACE  EC4C  F034         	call	_Sch_MainScheduler	;wreg free
  3785                           
  3786                           ;main.c: 67: return 0;
  3787                           ;	Return value of _main is never used
  3788  006AD2  EF66  F000         	goto	start
  3789  006AD6                     __end_of_main:
  3790                           	opt stack 0
  3791                           tblptru	equ	0xFF8
  3792                           tblptrh	equ	0xFF7
  3793                           tblptrl	equ	0xFF6
  3794                           tablat	equ	0xFF5
  3795                           postinc0	equ	0xFEE
  3796                           wreg	equ	0xFE8
  3797                           postdec1	equ	0xFE5
  3798                           fsr1h	equ	0xFE2
  3799                           fsr1l	equ	0xFE1
  3800                           
  3801 ;; *************** function _SystemInit *****************
  3802 ;; Defined at:
  3803 ;;		line 121 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/sys_init.c"
  3804 ;; Parameters:    Size  Location     Type
  3805 ;;		None
  3806 ;; Auto vars:     Size  Location     Type
  3807 ;;		None
  3808 ;; Return value:  Size  Location     Type
  3809 ;;                  1    wreg      void 
  3810 ;; Registers used:
  3811 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3812 ;; Tracked objects:
  3813 ;;		On entry : 0/0
  3814 ;;		On exit  : 0/0
  3815 ;;		Unchanged: 0/0
  3816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3817 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3818 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3819 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3820 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3821 ;;Total ram usage:        0 bytes
  3822 ;; Hardware stack levels used:    1
  3823 ;; Hardware stack levels required when called:   15
  3824 ;; This function calls:
  3825 ;;		_InitSchedTimer
  3826 ;;		_Irq_InitIntController
  3827 ;;		_Mcu_ConfigExtInt
  3828 ;;		_Mcu_StartSystemPll
  3829 ;;		_Pm_DsReleasePinControl
  3830 ;;		_Tmr_RegisterTmr2IsrCallback
  3831 ;; This function is called by:
  3832 ;;		_main
  3833 ;; This function uses a non-reentrant model
  3834 ;;
  3835                           
  3836                           	psect	text1
  3837  0064D4                     __ptext1:
  3838                           	opt stack 0
  3839  0064D4                     _SystemInit:
  3840                           	opt stack 15
  3841                           
  3842                           ;sys_init.c: 124: Pm_DsReleasePinControl();
  3843                           
  3844                           ;incstack = 0
  3845  0064D4  EC93  F035         	call	_Pm_DsReleasePinControl	;wreg free
  3846                           
  3847                           ;sys_init.c: 126: Mcu_StartSystemPll();
  3848  0064D8  EC3D  F034         	call	_Mcu_StartSystemPll	;wreg free
  3849                           
  3850                           ;sys_init.c: 128: Irq_InitIntController(IntPriorityMode,1u,1u);
  3851  0064DC  0E01               	movlw	1
  3852  0064DE  0100               	movlb	0	; () banked
  3853  0064E0  6F7D               	movwf	Irq_InitIntController@GlobalInt_HighPInt& (0+255),b
  3854  0064E2  0E01               	movlw	1
  3855  0064E4  6F7E               	movwf	Irq_InitIntController@PerInt_LowPInt& (0+255),b
  3856  0064E6  0E01               	movlw	1
  3857  0064E8  EC0E  F033         	call	_Irq_InitIntController
  3858                           
  3859                           ;sys_init.c: 130: Tmr_RegisterTmr2IsrCallback(&Sch_SchmIntService);
  3860  0064EC  0EAE               	movlw	low _Sch_SchmIntService
  3861  0064EE  0100               	movlb	0	; () banked
  3862  0064F0  6F7D               	movwf	Tmr_RegisterTmr2IsrCallback@IsrCallback& (0+255),b
  3863  0064F2  0E6A               	movlw	high _Sch_SchmIntService
  3864  0064F4  6F7E               	movwf	(Tmr_RegisterTmr2IsrCallback@IsrCallback+1)& (0+255),b
  3865  0064F6  EC76  F035         	call	_Tmr_RegisterTmr2IsrCallback	;wreg free
  3866                           
  3867                           ;sys_init.c: 132: InitSchedTimer();
  3868  0064FA  ECCA  F032         	call	_InitSchedTimer	;wreg free
  3869                           
  3870                           ;sys_init.c: 134: Mcu_ConfigExtInt();
  3871  0064FE  EC86  F034         	call	_Mcu_ConfigExtInt	;wreg free
  3872  006502  0012               	return		;funcret
  3873  006504                     __end_of_SystemInit:
  3874                           	opt stack 0
  3875                           tblptru	equ	0xFF8
  3876                           tblptrh	equ	0xFF7
  3877                           tblptrl	equ	0xFF6
  3878                           tablat	equ	0xFF5
  3879                           postinc0	equ	0xFEE
  3880                           wreg	equ	0xFE8
  3881                           postdec1	equ	0xFE5
  3882                           fsr1h	equ	0xFE2
  3883                           fsr1l	equ	0xFE1
  3884                           
  3885 ;; *************** function _Tmr_RegisterTmr2IsrCallback *****************
  3886 ;; Defined at:
  3887 ;;		line 329 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  3888 ;; Parameters:    Size  Location     Type
  3889 ;;  IsrCallback     2   29[BANK0 ] PTR FTN()void 
  3890 ;;		 -> Sch_SchmIntService(1), 
  3891 ;; Auto vars:     Size  Location     Type
  3892 ;;		None
  3893 ;; Return value:  Size  Location     Type
  3894 ;;                  1    wreg      void 
  3895 ;; Registers used:
  3896 ;;		wreg, status,2, status,0
  3897 ;; Tracked objects:
  3898 ;;		On entry : 0/0
  3899 ;;		On exit  : 0/0
  3900 ;;		Unchanged: 0/0
  3901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3902 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3903 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3904 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3905 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3906 ;;Total ram usage:        2 bytes
  3907 ;; Hardware stack levels used:    1
  3908 ;; Hardware stack levels required when called:   11
  3909 ;; This function calls:
  3910 ;;		Nothing
  3911 ;; This function is called by:
  3912 ;;		_SystemInit
  3913 ;; This function uses a non-reentrant model
  3914 ;;
  3915                           
  3916                           	psect	text2
  3917  006AEC                     __ptext2:
  3918                           	opt stack 0
  3919  006AEC                     _Tmr_RegisterTmr2IsrCallback:
  3920                           	opt stack 18
  3921                           
  3922                           ;tmr_drv.c: 332: Tmr2IsrCallback = IsrCallback;
  3923                           
  3924                           ;incstack = 0
  3925  006AEC  C07D  F2EA         	movff	Tmr_RegisterTmr2IsrCallback@IsrCallback,_Tmr2IsrCallback
  3926  006AF0  C07E  F2EB         	movff	Tmr_RegisterTmr2IsrCallback@IsrCallback+1,_Tmr2IsrCallback+1
  3927  006AF4  0012               	return		;funcret
  3928  006AF6                     __end_of_Tmr_RegisterTmr2IsrCallback:
  3929                           	opt stack 0
  3930                           tblptru	equ	0xFF8
  3931                           tblptrh	equ	0xFF7
  3932                           tblptrl	equ	0xFF6
  3933                           tablat	equ	0xFF5
  3934                           postinc0	equ	0xFEE
  3935                           wreg	equ	0xFE8
  3936                           postdec1	equ	0xFE5
  3937                           fsr1h	equ	0xFE2
  3938                           fsr1l	equ	0xFE1
  3939                           
  3940 ;; *************** function _Pm_DsReleasePinControl *****************
  3941 ;; Defined at:
  3942 ;;		line 166 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/pm_drv.c"
  3943 ;; Parameters:    Size  Location     Type
  3944 ;;		None
  3945 ;; Auto vars:     Size  Location     Type
  3946 ;;		None
  3947 ;; Return value:  Size  Location     Type
  3948 ;;                  1    wreg      void 
  3949 ;; Registers used:
  3950 ;;		None
  3951 ;; Tracked objects:
  3952 ;;		On entry : 0/0
  3953 ;;		On exit  : 0/0
  3954 ;;		Unchanged: 0/0
  3955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3956 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3957 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3958 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3959 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3960 ;;Total ram usage:        0 bytes
  3961 ;; Hardware stack levels used:    1
  3962 ;; Hardware stack levels required when called:   11
  3963 ;; This function calls:
  3964 ;;		Nothing
  3965 ;; This function is called by:
  3966 ;;		_SystemInit
  3967 ;; This function uses a non-reentrant model
  3968 ;;
  3969                           
  3970                           	psect	text3
  3971  006B26                     __ptext3:
  3972                           	opt stack 0
  3973  006B26                     _Pm_DsReleasePinControl:
  3974                           	opt stack 18
  3975                           
  3976                           ;pm_drv.c: 169: DSCONLbits.RELEASE = 0u;
  3977                           
  3978                           ;incstack = 0
  3979  006B26  010F               	movlb	15	; () banked
  3980  006B28  914C               	bcf	76,0,b	;volatile
  3981                           
  3982                           ; BSR set to: 15
  3983  006B2A  0012               	return		;funcret
  3984  006B2C                     __end_of_Pm_DsReleasePinControl:
  3985                           	opt stack 0
  3986                           tblptru	equ	0xFF8
  3987                           tblptrh	equ	0xFF7
  3988                           tblptrl	equ	0xFF6
  3989                           tablat	equ	0xFF5
  3990                           postinc0	equ	0xFEE
  3991                           wreg	equ	0xFE8
  3992                           postdec1	equ	0xFE5
  3993                           fsr1h	equ	0xFE2
  3994                           fsr1l	equ	0xFE1
  3995                           
  3996 ;; *************** function _Mcu_StartSystemPll *****************
  3997 ;; Defined at:
  3998 ;;		line 81 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
  3999 ;; Parameters:    Size  Location     Type
  4000 ;;		None
  4001 ;; Auto vars:     Size  Location     Type
  4002 ;;  PllStartupCo    2   29[BANK0 ] volatile unsigned short 
  4003 ;; Return value:  Size  Location     Type
  4004 ;;                  1    wreg      void 
  4005 ;; Registers used:
  4006 ;;		wreg, status,2, status,0
  4007 ;; Tracked objects:
  4008 ;;		On entry : 0/0
  4009 ;;		On exit  : 0/0
  4010 ;;		Unchanged: 0/0
  4011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4012 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4013 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4014 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4015 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4016 ;;Total ram usage:        2 bytes
  4017 ;; Hardware stack levels used:    1
  4018 ;; Hardware stack levels required when called:   11
  4019 ;; This function calls:
  4020 ;;		Nothing
  4021 ;; This function is called by:
  4022 ;;		_SystemInit
  4023 ;; This function uses a non-reentrant model
  4024 ;;
  4025                           
  4026                           	psect	text4
  4027  00687A                     __ptext4:
  4028                           	opt stack 0
  4029  00687A                     _Mcu_StartSystemPll:
  4030                           	opt stack 18
  4031                           
  4032                           ;mcu_drv.c: 83: volatile UINT16 PllStartupCounter = ((UINT16)(1000));
  4033                           
  4034                           ; BSR set to: 15
  4035                           ;incstack = 0
  4036  00687A  0E03               	movlw	3
  4037  00687C  0100               	movlb	0	; () banked
  4038  00687E  6F7E               	movwf	(Mcu_StartSystemPll@PllStartupCounter+1)& (0+255),b	;volatile
  4039  006880  0EE8               	movlw	232
  4040  006882  6F7D               	movwf	Mcu_StartSystemPll@PllStartupCounter& (0+255),b	;volatile
  4041                           
  4042                           ; BSR set to: 0
  4043                           ;mcu_drv.c: 86: OSCTUNEbits.PLLEN = ((UINT8)(1));
  4044  006884  8C9B               	bsf	3995,6,c	;volatile
  4045  006886                     l12224:
  4046                           
  4047                           ; BSR set to: 0
  4048  006886  077D               	decf	Mcu_StartSystemPll@PllStartupCounter& (0+255),f,b	;volatile
  4049  006888  A0D8               	btfss	status,0,c
  4050  00688A  077E               	decf	(Mcu_StartSystemPll@PllStartupCounter+1)& (0+255),f,b	;volatile
  4051  00688C  297D               	incf	Mcu_StartSystemPll@PllStartupCounter& (0+255),w,b	;volatile
  4052  00688E  E1FB               	bnz	l12224
  4053  006890  297E               	incf	(Mcu_StartSystemPll@PllStartupCounter+1)& (0+255),w,b	;volatile
  4054  006892  B4D8               	btfsc	status,2,c
  4055  006894  0012               	return	
  4056  006896  D7F7               	goto	l237
  4057  006898                     __end_of_Mcu_StartSystemPll:
  4058                           	opt stack 0
  4059                           tblptru	equ	0xFF8
  4060                           tblptrh	equ	0xFF7
  4061                           tblptrl	equ	0xFF6
  4062                           tablat	equ	0xFF5
  4063                           postinc0	equ	0xFEE
  4064                           wreg	equ	0xFE8
  4065                           postdec1	equ	0xFE5
  4066                           fsr1h	equ	0xFE2
  4067                           fsr1l	equ	0xFE1
  4068                           status	equ	0xFD8
  4069                           
  4070 ;; *************** function _Mcu_ConfigExtInt *****************
  4071 ;; Defined at:
  4072 ;;		line 99 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
  4073 ;; Parameters:    Size  Location     Type
  4074 ;;		None
  4075 ;; Auto vars:     Size  Location     Type
  4076 ;;		None
  4077 ;; Return value:  Size  Location     Type
  4078 ;;                  1    wreg      void 
  4079 ;; Registers used:
  4080 ;;		wreg, status,2
  4081 ;; Tracked objects:
  4082 ;;		On entry : 0/0
  4083 ;;		On exit  : 0/0
  4084 ;;		Unchanged: 0/0
  4085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4086 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4087 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4088 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4089 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4090 ;;Total ram usage:        0 bytes
  4091 ;; Hardware stack levels used:    1
  4092 ;; Hardware stack levels required when called:   11
  4093 ;; This function calls:
  4094 ;;		Nothing
  4095 ;; This function is called by:
  4096 ;;		_SystemInit
  4097 ;; This function uses a non-reentrant model
  4098 ;;
  4099                           
  4100                           	psect	text5
  4101  00690C                     __ptext5:
  4102                           	opt stack 0
  4103  00690C                     _Mcu_ConfigExtInt:
  4104                           	opt stack 18
  4105                           
  4106                           ;mcu_drv.c: 102: TRISBbits.TRISB0 = ((UINT8)(1));
  4107                           
  4108                           ; BSR set to: 0
  4109                           ;incstack = 0
  4110  00690C  8093               	bsf	3987,0,c	;volatile
  4111                           
  4112                           ;mcu_drv.c: 103: TRISDbits.TRISD3 = ((UINT8)(1));
  4113  00690E  8695               	bsf	3989,3,c	;volatile
  4114                           
  4115                           ;mcu_drv.c: 106: ANCON1bits.PCFG12 = 1u;
  4116  006910  010F               	movlb	15	; () banked
  4117  006912  8949               	bsf	73,4,b	;volatile
  4118                           
  4119                           ; BSR set to: 15
  4120                           ;mcu_drv.c: 108: RPINR1 = 20;
  4121  006914  0E14               	movlw	20
  4122  006916  010E               	movlb	14	; () banked
  4123  006918  6FE7               	movwf	231,b	;volatile
  4124                           
  4125                           ; BSR set to: 14
  4126                           ;mcu_drv.c: 111: INTCONbits.INT0IE = 1u;
  4127  00691A  88F2               	bsf	intcon,4,c	;volatile
  4128                           
  4129                           ; BSR set to: 14
  4130                           ;mcu_drv.c: 112: INTCON3bits.INT1IE = 1u;
  4131  00691C  86F0               	bsf	intcon3,3,c	;volatile
  4132                           
  4133                           ; BSR set to: 14
  4134                           ;mcu_drv.c: 113: INTCON3bits.INT1IP = 1u;
  4135  00691E  8CF0               	bsf	intcon3,6,c	;volatile
  4136                           
  4137                           ; BSR set to: 14
  4138                           ;mcu_drv.c: 114: INTCON2bits.INTEDG0 = 0u;
  4139  006920  9CF1               	bcf	intcon2,6,c	;volatile
  4140                           
  4141                           ; BSR set to: 14
  4142                           ;mcu_drv.c: 115: INTCON2bits.INTEDG1 = 0u;
  4143  006922  9AF1               	bcf	intcon2,5,c	;volatile
  4144                           
  4145                           ; BSR set to: 14
  4146  006924  0012               	return		;funcret
  4147  006926                     __end_of_Mcu_ConfigExtInt:
  4148                           	opt stack 0
  4149                           tblptru	equ	0xFF8
  4150                           tblptrh	equ	0xFF7
  4151                           tblptrl	equ	0xFF6
  4152                           tablat	equ	0xFF5
  4153                           intcon	equ	0xFF2
  4154                           intcon2	equ	0xFF1
  4155                           intcon3	equ	0xFF0
  4156                           postinc0	equ	0xFEE
  4157                           wreg	equ	0xFE8
  4158                           postdec1	equ	0xFE5
  4159                           fsr1h	equ	0xFE2
  4160                           fsr1l	equ	0xFE1
  4161                           status	equ	0xFD8
  4162                           
  4163 ;; *************** function _Irq_InitIntController *****************
  4164 ;; Defined at:
  4165 ;;		line 75 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/irq.c"
  4166 ;; Parameters:    Size  Location     Type
  4167 ;;  IntPriorityE    1    wreg     enum E7720
  4168 ;;  GlobalInt_Hi    1   29[BANK0 ] unsigned char 
  4169 ;;  PerInt_LowPI    1   30[BANK0 ] unsigned char 
  4170 ;; Auto vars:     Size  Location     Type
  4171 ;;  IntPriorityE    1   31[BANK0 ] enum E7720
  4172 ;; Return value:  Size  Location     Type
  4173 ;;                  1    wreg      void 
  4174 ;; Registers used:
  4175 ;;		wreg
  4176 ;; Tracked objects:
  4177 ;;		On entry : 0/0
  4178 ;;		On exit  : 0/0
  4179 ;;		Unchanged: 0/0
  4180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4181 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4182 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4184 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4185 ;;Total ram usage:        3 bytes
  4186 ;; Hardware stack levels used:    1
  4187 ;; Hardware stack levels required when called:   11
  4188 ;; This function calls:
  4189 ;;		Nothing
  4190 ;; This function is called by:
  4191 ;;		_SystemInit
  4192 ;; This function uses a non-reentrant model
  4193 ;;
  4194                           
  4195                           	psect	text6
  4196  00661C                     __ptext6:
  4197                           	opt stack 0
  4198  00661C                     _Irq_InitIntController:
  4199                           	opt stack 18
  4200                           
  4201                           ; BSR set to: 14
  4202                           ;incstack = 0
  4203                           ;Irq_InitIntController@IntPriorityEn stored from wreg
  4204  00661C  0100               	movlb	0	; () banked
  4205  00661E  6F7F               	movwf	Irq_InitIntController@IntPriorityEn& (0+255),b
  4206                           
  4207                           ;irq.c: 78: RCONbits.IPEN = IntPriorityEn;
  4208  006620  0100               	movlb	0	; () banked
  4209  006622  B17F               	btfsc	Irq_InitIntController@IntPriorityEn& (0+255),0,b
  4210  006624  D002               	bra	u10785
  4211  006626  9ED0               	bcf	4048,7,c	;volatile
  4212  006628  D001               	bra	u10786
  4213  00662A                     u10785:
  4214  00662A  8ED0               	bsf	4048,7,c	;volatile
  4215  00662C                     u10786:
  4216                           
  4217                           ;irq.c: 80: INTCONbits.GIE_GIEH = GlobalInt_HighPInt;
  4218  00662C  0100               	movlb	0	; () banked
  4219  00662E  B17D               	btfsc	Irq_InitIntController@GlobalInt_HighPInt& (0+255),0,b
  4220  006630  D002               	bra	u10795
  4221  006632  9EF2               	bcf	intcon,7,c	;volatile
  4222  006634  D001               	bra	u10796
  4223  006636                     u10795:
  4224  006636  8EF2               	bsf	intcon,7,c	;volatile
  4225  006638                     u10796:
  4226                           
  4227                           ;irq.c: 82: INTCONbits.PEIE_GIEL = PerInt_LowPInt;
  4228  006638  0100               	movlb	0	; () banked
  4229  00663A  B17E               	btfsc	Irq_InitIntController@PerInt_LowPInt& (0+255),0,b
  4230  00663C  D002               	bra	u10805
  4231  00663E  9CF2               	bcf	intcon,6,c	;volatile
  4232  006640  D001               	bra	u10806
  4233  006642                     u10805:
  4234  006642  8CF2               	bsf	intcon,6,c	;volatile
  4235  006644                     u10806:
  4236  006644  0012               	return		;funcret
  4237  006646                     __end_of_Irq_InitIntController:
  4238                           	opt stack 0
  4239                           tblptru	equ	0xFF8
  4240                           tblptrh	equ	0xFF7
  4241                           tblptrl	equ	0xFF6
  4242                           tablat	equ	0xFF5
  4243                           intcon	equ	0xFF2
  4244                           intcon2	equ	0xFF1
  4245                           intcon3	equ	0xFF0
  4246                           postinc0	equ	0xFEE
  4247                           wreg	equ	0xFE8
  4248                           postdec1	equ	0xFE5
  4249                           fsr1h	equ	0xFE2
  4250                           fsr1l	equ	0xFE1
  4251                           status	equ	0xFD8
  4252                           
  4253 ;; *************** function _InitSchedTimer *****************
  4254 ;; Defined at:
  4255 ;;		line 69 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/sys_init.c"
  4256 ;; Parameters:    Size  Location     Type
  4257 ;;		None
  4258 ;; Auto vars:     Size  Location     Type
  4259 ;;  TmrBConfig      7   68[BANK0 ] struct _TmrBConfigType
  4260 ;; Return value:  Size  Location     Type
  4261 ;;                  1    wreg      void 
  4262 ;; Registers used:
  4263 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4264 ;; Tracked objects:
  4265 ;;		On entry : 0/0
  4266 ;;		On exit  : 0/0
  4267 ;;		Unchanged: 0/0
  4268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4269 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4270 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4271 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4272 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4273 ;;Total ram usage:        7 bytes
  4274 ;; Hardware stack levels used:    1
  4275 ;; Hardware stack levels required when called:   14
  4276 ;; This function calls:
  4277 ;;		_Tmr_TmrBConfig
  4278 ;; This function is called by:
  4279 ;;		_SystemInit
  4280 ;; This function uses a non-reentrant model
  4281 ;;
  4282                           
  4283                           	psect	text7
  4284  006594                     __ptext7:
  4285                           	opt stack 0
  4286  006594                     _InitSchedTimer:
  4287                           	opt stack 15
  4288                           
  4289                           ;sys_init.c: 71: TmrBConfigType TmrBConfig;
  4290                           ;sys_init.c: 74: TmrBConfig.PreScaler = 4;
  4291                           
  4292                           ;incstack = 0
  4293  006594  0E04               	movlw	4
  4294  006596  0100               	movlb	0	; () banked
  4295  006598  6FA4               	movwf	InitSchedTimer@TmrBConfig& (0+255),b
  4296                           
  4297                           ;sys_init.c: 75: TmrBConfig.PostScaler = 12;
  4298  00659A  0E0C               	movlw	12
  4299  00659C  6FA5               	movwf	(InitSchedTimer@TmrBConfig+1)& (0+255),b
  4300                           
  4301                           ;sys_init.c: 76: TmrBConfig.IntPriority = 0u;
  4302  00659E  0E00               	movlw	0
  4303  0065A0  6FA7               	movwf	(InitSchedTimer@TmrBConfig+3)& (0+255),b
  4304                           
  4305                           ;sys_init.c: 77: TmrBConfig.IntEnable = 1u;
  4306  0065A2  0E01               	movlw	1
  4307  0065A4  6FA6               	movwf	(InitSchedTimer@TmrBConfig+2)& (0+255),b
  4308                           
  4309                           ;sys_init.c: 78: TmrBConfig.IntFreqHz = ((UINT16)(1000));
  4310  0065A6  0E03               	movlw	3
  4311  0065A8  6FA9               	movwf	(InitSchedTimer@TmrBConfig+5)& (0+255),b
  4312  0065AA  0EE8               	movlw	232
  4313  0065AC  6FA8               	movwf	(InitSchedTimer@TmrBConfig+4)& (0+255),b
  4314                           
  4315                           ;sys_init.c: 79: TmrBConfig.StartTmrRequest = StartTmrReq;
  4316  0065AE  0E01               	movlw	1
  4317  0065B0  6FAA               	movwf	(InitSchedTimer@TmrBConfig+6)& (0+255),b
  4318                           
  4319                           ; BSR set to: 0
  4320                           ;sys_init.c: 82: Tmr_TmrBConfig(((UINT8)(2)),&TmrBConfig);
  4321  0065B2  0EA4               	movlw	low InitSchedTimer@TmrBConfig
  4322  0065B4  6FA0               	movwf	Tmr_TmrBConfig@TmrBConfig& (0+255),b
  4323  0065B6  0E00               	movlw	high InitSchedTimer@TmrBConfig
  4324  0065B8  6FA1               	movwf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),b
  4325  0065BA  0E02               	movlw	2
  4326  0065BC  EC0C  F01F         	call	_Tmr_TmrBConfig
  4327  0065C0  0012               	return		;funcret
  4328  0065C2                     __end_of_InitSchedTimer:
  4329                           	opt stack 0
  4330                           tblptru	equ	0xFF8
  4331                           tblptrh	equ	0xFF7
  4332                           tblptrl	equ	0xFF6
  4333                           tablat	equ	0xFF5
  4334                           intcon	equ	0xFF2
  4335                           intcon2	equ	0xFF1
  4336                           intcon3	equ	0xFF0
  4337                           postinc0	equ	0xFEE
  4338                           wreg	equ	0xFE8
  4339                           postdec1	equ	0xFE5
  4340                           fsr1h	equ	0xFE2
  4341                           fsr1l	equ	0xFE1
  4342                           status	equ	0xFD8
  4343                           
  4344 ;; *************** function _Tmr_TmrBConfig *****************
  4345 ;; Defined at:
  4346 ;;		line 271 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  4347 ;; Parameters:    Size  Location     Type
  4348 ;;  TmrNumb         1    wreg     unsigned char 
  4349 ;;  TmrBConfig      2   64[BANK0 ] PTR struct _TmrBConfigTy
  4350 ;;		 -> InitAuxTimer@TmrBConfig(7), InitSchedTimer@TmrBConfig(7), 
  4351 ;; Auto vars:     Size  Location     Type
  4352 ;;  TmrNumb         1   67[BANK0 ] unsigned char 
  4353 ;; Return value:  Size  Location     Type
  4354 ;;                  1    wreg      void 
  4355 ;; Registers used:
  4356 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4357 ;; Tracked objects:
  4358 ;;		On entry : 0/0
  4359 ;;		On exit  : 0/0
  4360 ;;		Unchanged: 0/0
  4361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4362 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4363 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4364 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4365 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4366 ;;Total ram usage:        4 bytes
  4367 ;; Hardware stack levels used:    1
  4368 ;; Hardware stack levels required when called:   13
  4369 ;; This function calls:
  4370 ;;		_TmrBInit
  4371 ;;		_Tmr_StartTmr
  4372 ;;		_Tmr_TmrBIrqSet
  4373 ;;		_Tmr_TmrBPrSet
  4374 ;; This function is called by:
  4375 ;;		_InitSchedTimer
  4376 ;;		_InitAuxTimer
  4377 ;; This function uses a non-reentrant model
  4378 ;;
  4379                           
  4380                           	psect	text8
  4381  003E18                     __ptext8:
  4382                           	opt stack 0
  4383  003E18                     _Tmr_TmrBConfig:
  4384                           	opt stack 15
  4385                           
  4386                           ;incstack = 0
  4387                           ;Tmr_TmrBConfig@TmrNumb stored from wreg
  4388  003E18  0100               	movlb	0	; () banked
  4389  003E1A  6FA3               	movwf	Tmr_TmrBConfig@TmrNumb& (0+255),b
  4390                           
  4391                           ;tmr_drv.c: 274: TmrBInit(TmrNumb,TmrBConfig->PreScaler,TmrBConfig->PostScaler);
  4392  003E1C  C0A0  FFD9         	movff	Tmr_TmrBConfig@TmrBConfig,fsr2l
  4393  003E20  C0A1  FFDA         	movff	Tmr_TmrBConfig@TmrBConfig+1,fsr2h
  4394  003E24  50DF               	movf	indf2,w,c
  4395  003E26  0100               	movlb	0	; () banked
  4396  003E28  6F7D               	movwf	TmrBInit@Prescaler& (0+255),b
  4397  003E2A  EE20 F001          	lfsr	2,1
  4398  003E2E  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4399  003E30  26D9               	addwf	fsr2l,f,c
  4400  003E32  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4401  003E34  22DA               	addwfc	fsr2h,f,c
  4402  003E36  50DF               	movf	indf2,w,c
  4403  003E38  6F7E               	movwf	TmrBInit@Postscaler& (0+255),b
  4404  003E3A  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4405  003E3C  EC99  F025         	call	_TmrBInit
  4406                           
  4407                           ;tmr_drv.c: 276: if (TmrBConfig->IntEnable == EnableInt)
  4408  003E40  0100               	movlb	0	; () banked
  4409  003E42  EE20 F002          	lfsr	2,2
  4410  003E46  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4411  003E48  26D9               	addwf	fsr2l,f,c
  4412  003E4A  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4413  003E4C  22DA               	addwfc	fsr2h,f,c
  4414  003E4E  04DE               	decf	postinc2,w,c
  4415  003E50  A4D8               	btfss	status,2,c
  4416  003E52  D00E               	goto	l546
  4417                           
  4418                           ; BSR set to: 0
  4419                           ;tmr_drv.c: 277: {
  4420                           ;tmr_drv.c: 279: Tmr_TmrBIrqSet(TmrNumb,TmrBConfig->IntPriority,1u);
  4421  003E54  EE20 F003          	lfsr	2,3
  4422  003E58  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4423  003E5A  26D9               	addwf	fsr2l,f,c
  4424  003E5C  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4425  003E5E  22DA               	addwfc	fsr2h,f,c
  4426  003E60  50DF               	movf	indf2,w,c
  4427  003E62  6F7D               	movwf	Tmr_TmrBIrqSet@Priority& (0+255),b
  4428  003E64  0E01               	movlw	1
  4429  003E66  6F7E               	movwf	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),b
  4430  003E68  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4431  003E6A  EC7D  F02F         	call	_Tmr_TmrBIrqSet
  4432                           
  4433                           ;tmr_drv.c: 280: }
  4434  003E6E  D00E               	goto	l547
  4435  003E70                     l546:
  4436                           
  4437                           ;tmr_drv.c: 281: else
  4438                           ;tmr_drv.c: 282: {
  4439                           ;tmr_drv.c: 284: Tmr_TmrBIrqSet(TmrNumb,TmrBConfig->IntPriority,0u);
  4440  003E70  0100               	movlb	0	; () banked
  4441  003E72  EE20 F003          	lfsr	2,3
  4442  003E76  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4443  003E78  26D9               	addwf	fsr2l,f,c
  4444  003E7A  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4445  003E7C  22DA               	addwfc	fsr2h,f,c
  4446  003E7E  50DF               	movf	indf2,w,c
  4447  003E80  6F7D               	movwf	Tmr_TmrBIrqSet@Priority& (0+255),b
  4448  003E82  0E00               	movlw	0
  4449  003E84  6F7E               	movwf	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),b
  4450  003E86  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4451  003E88  EC7D  F02F         	call	_Tmr_TmrBIrqSet
  4452  003E8C                     l547:
  4453                           
  4454                           ;tmr_drv.c: 285: }
  4455                           ;tmr_drv.c: 287: Tmr_TmrBPrSet(TmrNumb,TmrBConfig->IntFreqHz,TmrBConfig->PreScaler,TmrBC
      +                          onfig->PostScaler);
  4456  003E8C  0100               	movlb	0	; () banked
  4457  003E8E  EE20 F004          	lfsr	2,4
  4458  003E92  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4459  003E94  26D9               	addwf	fsr2l,f,c
  4460  003E96  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4461  003E98  22DA               	addwfc	fsr2h,f,c
  4462  003E9A  CFDE F096          	movff	postinc2,Tmr_TmrBPrSet@IntFreqHz
  4463  003E9E  CFDD F097          	movff	postdec2,Tmr_TmrBPrSet@IntFreqHz+1
  4464  003EA2  C0A0  FFD9         	movff	Tmr_TmrBConfig@TmrBConfig,fsr2l
  4465  003EA6  C0A1  FFDA         	movff	Tmr_TmrBConfig@TmrBConfig+1,fsr2h
  4466  003EAA  50DF               	movf	indf2,w,c
  4467  003EAC  6F98               	movwf	Tmr_TmrBPrSet@Prescaler& (0+255),b
  4468  003EAE  EE20 F001          	lfsr	2,1
  4469  003EB2  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4470  003EB4  26D9               	addwf	fsr2l,f,c
  4471  003EB6  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4472  003EB8  22DA               	addwfc	fsr2h,f,c
  4473  003EBA  50DF               	movf	indf2,w,c
  4474  003EBC  6F99               	movwf	Tmr_TmrBPrSet@Postscaler& (0+255),b
  4475  003EBE  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4476  003EC0  ECAB  F018         	call	_Tmr_TmrBPrSet
  4477                           
  4478                           ;tmr_drv.c: 289: if (TmrBConfig->StartTmrRequest == StartTmrReq)
  4479  003EC4  0100               	movlb	0	; () banked
  4480  003EC6  EE20 F006          	lfsr	2,6
  4481  003ECA  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4482  003ECC  26D9               	addwf	fsr2l,f,c
  4483  003ECE  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4484  003ED0  22DA               	addwfc	fsr2h,f,c
  4485  003ED2  04DE               	decf	postinc2,w,c
  4486  003ED4  A4D8               	btfss	status,2,c
  4487  003ED6  0012               	return	
  4488                           
  4489                           ; BSR set to: 0
  4490                           ;tmr_drv.c: 290: {
  4491                           ;tmr_drv.c: 292: Tmr_StartTmr(TmrNumb);
  4492  003ED8  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4493  003EDA  EC0D  F034         	call	_Tmr_StartTmr
  4494                           
  4495                           ;tmr_drv.c: 293: }
  4496  003EDE  0012               	return	
  4497  003EE0                     __end_of_Tmr_TmrBConfig:
  4498                           	opt stack 0
  4499                           tblptru	equ	0xFF8
  4500                           tblptrh	equ	0xFF7
  4501                           tblptrl	equ	0xFF6
  4502                           tablat	equ	0xFF5
  4503                           intcon	equ	0xFF2
  4504                           intcon2	equ	0xFF1
  4505                           intcon3	equ	0xFF0
  4506                           postinc0	equ	0xFEE
  4507                           wreg	equ	0xFE8
  4508                           postdec1	equ	0xFE5
  4509                           fsr1h	equ	0xFE2
  4510                           fsr1l	equ	0xFE1
  4511                           indf2	equ	0xFDF
  4512                           postinc2	equ	0xFDE
  4513                           postdec2	equ	0xFDD
  4514                           fsr2h	equ	0xFDA
  4515                           fsr2l	equ	0xFD9
  4516                           status	equ	0xFD8
  4517                           
  4518 ;; *************** function _Tmr_TmrBPrSet *****************
  4519 ;; Defined at:
  4520 ;;		line 193 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  4521 ;; Parameters:    Size  Location     Type
  4522 ;;  TmrNumb         1    wreg     unsigned char 
  4523 ;;  IntFreqHz       2   54[BANK0 ] unsigned short 
  4524 ;;  Prescaler       1   56[BANK0 ] unsigned char 
  4525 ;;  Postscaler      1   57[BANK0 ] unsigned char 
  4526 ;; Auto vars:     Size  Location     Type
  4527 ;;  TmrNumb         1   59[BANK0 ] unsigned char 
  4528 ;;  Divisor         4   60[BANK0 ] unsigned long 
  4529 ;;  TmrBPrCfgSts    1   58[BANK0 ] enum E7736
  4530 ;; Return value:  Size  Location     Type
  4531 ;;                  1    wreg      enum E7736
  4532 ;; Registers used:
  4533 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4534 ;; Tracked objects:
  4535 ;;		On entry : 0/0
  4536 ;;		On exit  : 0/0
  4537 ;;		Unchanged: 0/0
  4538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4539 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4540 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4541 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4542 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4543 ;;Total ram usage:       10 bytes
  4544 ;; Hardware stack levels used:    1
  4545 ;; Hardware stack levels required when called:   12
  4546 ;; This function calls:
  4547 ;;		___lldiv
  4548 ;;		___lmul
  4549 ;; This function is called by:
  4550 ;;		_Tmr_TmrBConfig
  4551 ;; This function uses a non-reentrant model
  4552 ;;
  4553                           
  4554                           	psect	text9
  4555  003156                     __ptext9:
  4556                           	opt stack 0
  4557  003156                     _Tmr_TmrBPrSet:
  4558                           	opt stack 15
  4559                           
  4560                           ;incstack = 0
  4561                           ;Tmr_TmrBPrSet@TmrNumb stored from wreg
  4562  003156  0100               	movlb	0	; () banked
  4563  003158  6F9B               	movwf	Tmr_TmrBPrSet@TmrNumb& (0+255),b
  4564                           
  4565                           ;tmr_drv.c: 195: CfgStsType TmrBPrCfgSts;
  4566                           ;tmr_drv.c: 196: UINT32 Divisor = 0;
  4567  00315A  0E00               	movlw	0
  4568  00315C  0100               	movlb	0	; () banked
  4569  00315E  6F9C               	movwf	Tmr_TmrBPrSet@Divisor& (0+255),b
  4570  003160  0E00               	movlw	0
  4571  003162  6F9D               	movwf	(Tmr_TmrBPrSet@Divisor+1)& (0+255),b
  4572  003164  0E00               	movlw	0
  4573  003166  6F9E               	movwf	(Tmr_TmrBPrSet@Divisor+2)& (0+255),b
  4574  003168  0E00               	movlw	0
  4575  00316A  6F9F               	movwf	(Tmr_TmrBPrSet@Divisor+3)& (0+255),b
  4576                           
  4577                           ; BSR set to: 0
  4578                           ;tmr_drv.c: 199: Divisor = (UINT32)Prescaler*(UINT32)Postscaler*(UINT32)IntFreqHz;
  4579  00316C  5198               	movf	Tmr_TmrBPrSet@Prescaler& (0+255),w,b
  4580  00316E  0399               	mulwf	Tmr_TmrBPrSet@Postscaler& (0+255),b
  4581  003170  CFF3 F07D          	movff	prodl,___lmul@multiplier
  4582  003174  CFF4 F07E          	movff	prodh,___lmul@multiplier+1
  4583  003178  6B7F               	clrf	(___lmul@multiplier+2)& (0+255),b
  4584  00317A  6B80               	clrf	(___lmul@multiplier+3)& (0+255),b
  4585  00317C  C096  F081         	movff	Tmr_TmrBPrSet@IntFreqHz,___lmul@multiplicand
  4586  003180  C097  F082         	movff	Tmr_TmrBPrSet@IntFreqHz+1,___lmul@multiplicand+1
  4587  003184  6B83               	clrf	(___lmul@multiplicand+2)& (0+255),b
  4588  003186  6B84               	clrf	(___lmul@multiplicand+3)& (0+255),b
  4589  003188  ECBD  F02C         	call	___lmul	;wreg free
  4590  00318C  C07D  F09C         	movff	?___lmul,Tmr_TmrBPrSet@Divisor
  4591  003190  C07E  F09D         	movff	?___lmul+1,Tmr_TmrBPrSet@Divisor+1
  4592  003194  C07F  F09E         	movff	?___lmul+2,Tmr_TmrBPrSet@Divisor+2
  4593  003198  C080  F09F         	movff	?___lmul+3,Tmr_TmrBPrSet@Divisor+3
  4594                           
  4595                           ;tmr_drv.c: 202: if (((((UINT32)(48000000))/(UINT32)(4))/Divisor) <= 255)
  4596  00319C  0E00               	movlw	0
  4597  00319E  0100               	movlb	0	; () banked
  4598  0031A0  6F89               	movwf	___lldiv@dividend& (0+255),b
  4599  0031A2  0E1B               	movlw	27
  4600  0031A4  6F8A               	movwf	(___lldiv@dividend+1)& (0+255),b
  4601  0031A6  0EB7               	movlw	183
  4602  0031A8  6F8B               	movwf	(___lldiv@dividend+2)& (0+255),b
  4603  0031AA  0E00               	movlw	0
  4604  0031AC  6F8C               	movwf	(___lldiv@dividend+3)& (0+255),b
  4605  0031AE  C09C  F08D         	movff	Tmr_TmrBPrSet@Divisor,___lldiv@divisor
  4606  0031B2  C09D  F08E         	movff	Tmr_TmrBPrSet@Divisor+1,___lldiv@divisor+1
  4607  0031B6  C09E  F08F         	movff	Tmr_TmrBPrSet@Divisor+2,___lldiv@divisor+2
  4608  0031BA  C09F  F090         	movff	Tmr_TmrBPrSet@Divisor+3,___lldiv@divisor+3
  4609  0031BE  EC01  F029         	call	___lldiv	;wreg free
  4610  0031C2  0100               	movlb	0	; () banked
  4611  0031C4  518C               	movf	(?___lldiv+3)& (0+255),w,b
  4612  0031C6  118B               	iorwf	(?___lldiv+2)& (0+255),w,b
  4613  0031C8  E13A               	bnz	l15336
  4614  0031CA  058A               	decf	(?___lldiv+1)& (0+255),w,b
  4615  0031CC  A0D8               	btfss	status,0,c
  4616  0031CE  D02D               	goto	l529
  4617  0031D0  D036               	goto	l528
  4618  0031D2                     
  4619                           ; BSR set to: 0
  4620                           ;tmr_drv.c: 209: PR2 = (((UINT32)(48000000))/(UINT32)(4))/Divisor;
  4621                           
  4622                           ; BSR set to: 0
  4623  0031D2  0E00               	movlw	0
  4624  0031D4  6F89               	movwf	___lldiv@dividend& (0+255),b
  4625  0031D6  0E1B               	movlw	27
  4626  0031D8  6F8A               	movwf	(___lldiv@dividend+1)& (0+255),b
  4627  0031DA  0EB7               	movlw	183
  4628  0031DC  6F8B               	movwf	(___lldiv@dividend+2)& (0+255),b
  4629  0031DE  0E00               	movlw	0
  4630  0031E0  6F8C               	movwf	(___lldiv@dividend+3)& (0+255),b
  4631  0031E2  C09C  F08D         	movff	Tmr_TmrBPrSet@Divisor,___lldiv@divisor
  4632  0031E6  C09D  F08E         	movff	Tmr_TmrBPrSet@Divisor+1,___lldiv@divisor+1
  4633  0031EA  C09E  F08F         	movff	Tmr_TmrBPrSet@Divisor+2,___lldiv@divisor+2
  4634  0031EE  C09F  F090         	movff	Tmr_TmrBPrSet@Divisor+3,___lldiv@divisor+3
  4635  0031F2  EC01  F029         	call	___lldiv	;wreg free
  4636  0031F6  0100               	movlb	0	; () banked
  4637  0031F8  5189               	movf	?___lldiv& (0+255),w,b
  4638  0031FA  6ECB               	movwf	4043,c	;volatile
  4639                           
  4640                           ;tmr_drv.c: 210: break;
  4641  0031FC  D01D               	goto	l531
  4642  0031FE                     
  4643                           ; BSR set to: 0
  4644                           ;tmr_drv.c: 214: PR4 = (((UINT32)(48000000))/(UINT32)(4))/Divisor;
  4645                           
  4646                           ; BSR set to: 0
  4647  0031FE  0E00               	movlw	0
  4648  003200  6F89               	movwf	___lldiv@dividend& (0+255),b
  4649  003202  0E1B               	movlw	27
  4650  003204  6F8A               	movwf	(___lldiv@dividend+1)& (0+255),b
  4651  003206  0EB7               	movlw	183
  4652  003208  6F8B               	movwf	(___lldiv@dividend+2)& (0+255),b
  4653  00320A  0E00               	movlw	0
  4654  00320C  6F8C               	movwf	(___lldiv@dividend+3)& (0+255),b
  4655  00320E  C09C  F08D         	movff	Tmr_TmrBPrSet@Divisor,___lldiv@divisor
  4656  003212  C09D  F08E         	movff	Tmr_TmrBPrSet@Divisor+1,___lldiv@divisor+1
  4657  003216  C09E  F08F         	movff	Tmr_TmrBPrSet@Divisor+2,___lldiv@divisor+2
  4658  00321A  C09F  F090         	movff	Tmr_TmrBPrSet@Divisor+3,___lldiv@divisor+3
  4659  00321E  EC01  F029         	call	___lldiv	;wreg free
  4660  003222  0100               	movlb	0	; () banked
  4661  003224  5189               	movf	?___lldiv& (0+255),w,b
  4662  003226  6E77               	movwf	3959,c	;volatile
  4663                           
  4664                           ; BSR set to: 0
  4665                           ;tmr_drv.c: 219: }
  4666                           
  4667                           ; BSR set to: 0
  4668                           ;tmr_drv.c: 218: break;
  4669                           
  4670                           ;tmr_drv.c: 217: default:
  4671                           
  4672                           ;tmr_drv.c: 215: break;
  4673  003228  D007               	goto	l531
  4674  00322A                     l529:
  4675                           
  4676                           ; BSR set to: 0
  4677                           
  4678                           ; BSR set to: 0
  4679  00322A  519B               	movf	Tmr_TmrBPrSet@TmrNumb& (0+255),w,b
  4680                           
  4681                           ; Switch size 1, requested type "space"
  4682                           ; Number of cases is 2, Range of values is 2 to 4
  4683                           ; switch strategies available:
  4684                           ; Name         Instructions Cycles
  4685                           ; simple_byte            7     4 (average)
  4686                           ;	Chosen strategy is simple_byte
  4687  00322C  0A02               	xorlw	2	; case 2
  4688  00322E  B4D8               	btfsc	status,2,c
  4689  003230  D7D0               	goto	l530
  4690  003232  0A06               	xorlw	6	; case 4
  4691  003234  B4D8               	btfsc	status,2,c
  4692  003236  D7E3               	goto	l532
  4693  003238                     l531:
  4694                           
  4695                           ; BSR set to: 0
  4696                           ;tmr_drv.c: 222: TmrBPrCfgSts = CfgOk;
  4697                           
  4698                           ; BSR set to: 0
  4699  003238  0E00               	movlw	0
  4700  00323A  6F9A               	movwf	Tmr_TmrBPrSet@TmrBPrCfgSts& (0+255),b
  4701                           
  4702                           ;tmr_drv.c: 223: }
  4703  00323C  0012               	return	
  4704  00323E                     l528:
  4705  00323E                     l15336:
  4706                           
  4707                           ; BSR set to: 0
  4708                           ;tmr_drv.c: 224: else
  4709                           ;tmr_drv.c: 225: {
  4710                           ;tmr_drv.c: 227: TmrBPrCfgSts = CfgError;
  4711  00323E  0E01               	movlw	1
  4712  003240  6F9A               	movwf	Tmr_TmrBPrSet@TmrBPrCfgSts& (0+255),b
  4713                           
  4714                           ; BSR set to: 0
  4715  003242  0012               	return	
  4716  003244                     __end_of_Tmr_TmrBPrSet:
  4717                           	opt stack 0
  4718                           tblptru	equ	0xFF8
  4719                           tblptrh	equ	0xFF7
  4720                           tblptrl	equ	0xFF6
  4721                           tablat	equ	0xFF5
  4722                           prodh	equ	0xFF4
  4723                           prodl	equ	0xFF3
  4724                           intcon	equ	0xFF2
  4725                           intcon2	equ	0xFF1
  4726                           intcon3	equ	0xFF0
  4727                           postinc0	equ	0xFEE
  4728                           wreg	equ	0xFE8
  4729                           postdec1	equ	0xFE5
  4730                           fsr1h	equ	0xFE2
  4731                           fsr1l	equ	0xFE1
  4732                           indf2	equ	0xFDF
  4733                           postinc2	equ	0xFDE
  4734                           postdec2	equ	0xFDD
  4735                           fsr2h	equ	0xFDA
  4736                           fsr2l	equ	0xFD9
  4737                           status	equ	0xFD8
  4738                           
  4739 ;; *************** function _Tmr_TmrBIrqSet *****************
  4740 ;; Defined at:
  4741 ;;		line 153 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  4742 ;; Parameters:    Size  Location     Type
  4743 ;;  TmrNumb         1    wreg     unsigned char 
  4744 ;;  Priority        1   29[BANK0 ] enum E7716
  4745 ;;  TmrIrqSts       1   30[BANK0 ] unsigned char 
  4746 ;; Auto vars:     Size  Location     Type
  4747 ;;  TmrNumb         1   31[BANK0 ] unsigned char 
  4748 ;; Return value:  Size  Location     Type
  4749 ;;                  1    wreg      void 
  4750 ;; Registers used:
  4751 ;;		wreg, status,2, status,0
  4752 ;; Tracked objects:
  4753 ;;		On entry : 0/0
  4754 ;;		On exit  : 0/0
  4755 ;;		Unchanged: 0/0
  4756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4757 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4758 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4760 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4761 ;;Total ram usage:        3 bytes
  4762 ;; Hardware stack levels used:    1
  4763 ;; Hardware stack levels required when called:   11
  4764 ;; This function calls:
  4765 ;;		Nothing
  4766 ;; This function is called by:
  4767 ;;		_Tmr_TmrBConfig
  4768 ;; This function uses a non-reentrant model
  4769 ;;
  4770                           
  4771                           	psect	text10
  4772  005EFA                     __ptext10:
  4773                           	opt stack 0
  4774  005EFA                     _Tmr_TmrBIrqSet:
  4775                           	opt stack 16
  4776                           
  4777                           ; BSR set to: 0
  4778                           ;incstack = 0
  4779                           ;Tmr_TmrBIrqSet@TmrNumb stored from wreg
  4780  005EFA  0100               	movlb	0	; () banked
  4781  005EFC  6F7F               	movwf	Tmr_TmrBIrqSet@TmrNumb& (0+255),b
  4782                           
  4783                           ;tmr_drv.c: 156: switch (TmrNumb)
  4784  005EFE  D01A               	goto	l520
  4785  005F00                     l521:
  4786                           
  4787                           ; BSR set to: 0
  4788                           ;tmr_drv.c: 160: PIR1bits.TMR2IF = 0u;
  4789  005F00  929E               	bcf	3998,1,c	;volatile
  4790                           
  4791                           ;tmr_drv.c: 162: IPR1bits.TMR2IP = Priority;
  4792  005F02  B17D               	btfsc	Tmr_TmrBIrqSet@Priority& (0+255),0,b
  4793  005F04  D002               	bra	u9155
  4794  005F06  929F               	bcf	3999,1,c	;volatile
  4795  005F08  D001               	bra	u9156
  4796  005F0A                     u9155:
  4797  005F0A  829F               	bsf	3999,1,c	;volatile
  4798  005F0C                     u9156:
  4799                           
  4800                           ;tmr_drv.c: 164: PIE1bits.TMR2IE = TmrIrqSts;
  4801  005F0C  0100               	movlb	0	; () banked
  4802  005F0E  B17E               	btfsc	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),0,b
  4803  005F10  D002               	bra	u9165
  4804  005F12  929D               	bcf	3997,1,c	;volatile
  4805  005F14  D001               	bra	u9166
  4806  005F16                     u9165:
  4807  005F16  829D               	bsf	3997,1,c	;volatile
  4808  005F18                     u9166:
  4809                           
  4810                           ;tmr_drv.c: 165: break;
  4811  005F18  0012               	return	
  4812  005F1A                     l523:
  4813                           
  4814                           ; BSR set to: 0
  4815                           ;tmr_drv.c: 169: PIR3bits.TMR4IF = 0u;
  4816  005F1A  96A4               	bcf	4004,3,c	;volatile
  4817                           
  4818                           ;tmr_drv.c: 171: IPR3bits.TMR4IP = Priority;
  4819  005F1C  B17D               	btfsc	Tmr_TmrBIrqSet@Priority& (0+255),0,b
  4820  005F1E  D002               	bra	u9175
  4821  005F20  96A5               	bcf	4005,3,c	;volatile
  4822  005F22  D001               	bra	u9176
  4823  005F24                     u9175:
  4824  005F24  86A5               	bsf	4005,3,c	;volatile
  4825  005F26                     u9176:
  4826                           
  4827                           ;tmr_drv.c: 173: PIE3bits.TMR4IE = TmrIrqSts;
  4828  005F26  0100               	movlb	0	; () banked
  4829  005F28  B17E               	btfsc	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),0,b
  4830  005F2A  D002               	bra	u9185
  4831  005F2C  96A3               	bcf	4003,3,c	;volatile
  4832  005F2E  D001               	bra	u9186
  4833  005F30                     u9185:
  4834  005F30  86A3               	bsf	4003,3,c	;volatile
  4835  005F32                     u9186:
  4836                           
  4837                           ;tmr_drv.c: 178: }
  4838                           
  4839                           ;tmr_drv.c: 177: break;
  4840                           
  4841                           ;tmr_drv.c: 176: default:
  4842                           
  4843                           ;tmr_drv.c: 174: break;
  4844  005F32  0012               	return	
  4845  005F34                     l520:
  4846  005F34  0100               	movlb	0	; () banked
  4847  005F36  517F               	movf	Tmr_TmrBIrqSet@TmrNumb& (0+255),w,b
  4848                           
  4849                           ; Switch size 1, requested type "space"
  4850                           ; Number of cases is 2, Range of values is 2 to 4
  4851                           ; switch strategies available:
  4852                           ; Name         Instructions Cycles
  4853                           ; simple_byte            7     4 (average)
  4854                           ;	Chosen strategy is simple_byte
  4855  005F38  0A02               	xorlw	2	; case 2
  4856  005F3A  B4D8               	btfsc	status,2,c
  4857  005F3C  D7E1               	goto	l521
  4858  005F3E  0A06               	xorlw	6	; case 4
  4859  005F40  A4D8               	btfss	status,2,c
  4860  005F42  0012               	return	
  4861  005F44  D7EA               	goto	l523
  4862  005F46                     __end_of_Tmr_TmrBIrqSet:
  4863                           	opt stack 0
  4864                           tblptru	equ	0xFF8
  4865                           tblptrh	equ	0xFF7
  4866                           tblptrl	equ	0xFF6
  4867                           tablat	equ	0xFF5
  4868                           prodh	equ	0xFF4
  4869                           prodl	equ	0xFF3
  4870                           intcon	equ	0xFF2
  4871                           intcon2	equ	0xFF1
  4872                           intcon3	equ	0xFF0
  4873                           postinc0	equ	0xFEE
  4874                           wreg	equ	0xFE8
  4875                           postdec1	equ	0xFE5
  4876                           fsr1h	equ	0xFE2
  4877                           fsr1l	equ	0xFE1
  4878                           indf2	equ	0xFDF
  4879                           postinc2	equ	0xFDE
  4880                           postdec2	equ	0xFDD
  4881                           fsr2h	equ	0xFDA
  4882                           fsr2l	equ	0xFD9
  4883                           status	equ	0xFD8
  4884                           
  4885 ;; *************** function _Tmr_StartTmr *****************
  4886 ;; Defined at:
  4887 ;;		line 242 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  4888 ;; Parameters:    Size  Location     Type
  4889 ;;  TmrNumb         1    wreg     unsigned char 
  4890 ;; Auto vars:     Size  Location     Type
  4891 ;;  TmrNumb         1   29[BANK0 ] unsigned char 
  4892 ;; Return value:  Size  Location     Type
  4893 ;;                  1    wreg      void 
  4894 ;; Registers used:
  4895 ;;		wreg, status,2, status,0
  4896 ;; Tracked objects:
  4897 ;;		On entry : 0/0
  4898 ;;		On exit  : 0/0
  4899 ;;		Unchanged: 0/0
  4900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4901 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4902 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4903 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4904 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4905 ;;Total ram usage:        1 bytes
  4906 ;; Hardware stack levels used:    1
  4907 ;; Hardware stack levels required when called:   11
  4908 ;; This function calls:
  4909 ;;		Nothing
  4910 ;; This function is called by:
  4911 ;;		_Tmr_TmrBConfig
  4912 ;; This function uses a non-reentrant model
  4913 ;;
  4914                           
  4915                           	psect	text11
  4916  00681A                     __ptext11:
  4917                           	opt stack 0
  4918  00681A                     _Tmr_StartTmr:
  4919                           	opt stack 16
  4920                           
  4921                           ;incstack = 0
  4922                           ;Tmr_StartTmr@TmrNumb stored from wreg
  4923  00681A  0100               	movlb	0	; () banked
  4924  00681C  6F7D               	movwf	Tmr_StartTmr@TmrNumb& (0+255),b
  4925                           
  4926                           ;tmr_drv.c: 245: switch (TmrNumb)
  4927  00681E  D004               	goto	l538
  4928  006820                     l539:
  4929                           
  4930                           ; BSR set to: 0
  4931                           ;tmr_drv.c: 249: T2CONbits.TMR2ON = 1u;
  4932  006820  84CA               	bsf	4042,2,c	;volatile
  4933                           
  4934                           ;tmr_drv.c: 250: break;
  4935  006822  0012               	return	
  4936  006824                     l541:
  4937                           
  4938                           ; BSR set to: 0
  4939                           ;tmr_drv.c: 254: T4CONbits.TMR4ON = 1u;
  4940  006824  8476               	bsf	3958,2,c	;volatile
  4941                           
  4942                           ; BSR set to: 0
  4943                           ;tmr_drv.c: 259: }
  4944                           
  4945                           ; BSR set to: 0
  4946                           ;tmr_drv.c: 258: break;
  4947                           
  4948                           ;tmr_drv.c: 257: default:
  4949                           
  4950                           ;tmr_drv.c: 255: break;
  4951  006826  0012               	return	
  4952  006828                     l538:
  4953                           
  4954                           ; BSR set to: 0
  4955  006828  0100               	movlb	0	; () banked
  4956  00682A  517D               	movf	Tmr_StartTmr@TmrNumb& (0+255),w,b
  4957                           
  4958                           ; Switch size 1, requested type "space"
  4959                           ; Number of cases is 2, Range of values is 2 to 4
  4960                           ; switch strategies available:
  4961                           ; Name         Instructions Cycles
  4962                           ; simple_byte            7     4 (average)
  4963                           ;	Chosen strategy is simple_byte
  4964  00682C  0A02               	xorlw	2	; case 2
  4965  00682E  B4D8               	btfsc	status,2,c
  4966  006830  D7F7               	goto	l539
  4967  006832  0A06               	xorlw	6	; case 4
  4968  006834  A4D8               	btfss	status,2,c
  4969  006836  0012               	return	
  4970  006838  D7F5               	goto	l541
  4971  00683A                     __end_of_Tmr_StartTmr:
  4972                           	opt stack 0
  4973                           tblptru	equ	0xFF8
  4974                           tblptrh	equ	0xFF7
  4975                           tblptrl	equ	0xFF6
  4976                           tablat	equ	0xFF5
  4977                           prodh	equ	0xFF4
  4978                           prodl	equ	0xFF3
  4979                           intcon	equ	0xFF2
  4980                           intcon2	equ	0xFF1
  4981                           intcon3	equ	0xFF0
  4982                           postinc0	equ	0xFEE
  4983                           wreg	equ	0xFE8
  4984                           postdec1	equ	0xFE5
  4985                           fsr1h	equ	0xFE2
  4986                           fsr1l	equ	0xFE1
  4987                           indf2	equ	0xFDF
  4988                           postinc2	equ	0xFDE
  4989                           postdec2	equ	0xFDD
  4990                           fsr2h	equ	0xFDA
  4991                           fsr2l	equ	0xFD9
  4992                           status	equ	0xFD8
  4993                           
  4994 ;; *************** function _TmrBInit *****************
  4995 ;; Defined at:
  4996 ;;		line 72 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  4997 ;; Parameters:    Size  Location     Type
  4998 ;;  TmrNumb         1    wreg     unsigned char 
  4999 ;;  Prescaler       1   29[BANK0 ] unsigned char 
  5000 ;;  Postscaler      1   30[BANK0 ] unsigned char 
  5001 ;; Auto vars:     Size  Location     Type
  5002 ;;  TmrNumb         1   32[BANK0 ] unsigned char 
  5003 ;; Return value:  Size  Location     Type
  5004 ;;                  1    wreg      void 
  5005 ;; Registers used:
  5006 ;;		wreg, status,2, status,0
  5007 ;; Tracked objects:
  5008 ;;		On entry : 0/0
  5009 ;;		On exit  : 0/0
  5010 ;;		Unchanged: 0/0
  5011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5012 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5013 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5014 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5015 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5016 ;;Total ram usage:        4 bytes
  5017 ;; Hardware stack levels used:    1
  5018 ;; Hardware stack levels required when called:   11
  5019 ;; This function calls:
  5020 ;;		Nothing
  5021 ;; This function is called by:
  5022 ;;		_Tmr_TmrBConfig
  5023 ;; This function uses a non-reentrant model
  5024 ;;
  5025                           
  5026                           	psect	text12
  5027  004B32                     __ptext12:
  5028                           	opt stack 0
  5029  004B32                     _TmrBInit:
  5030                           	opt stack 16
  5031                           
  5032                           ; BSR set to: 0
  5033                           ;incstack = 0
  5034                           ;TmrBInit@TmrNumb stored from wreg
  5035  004B32  0100               	movlb	0	; () banked
  5036  004B34  6F80               	movwf	TmrBInit@TmrNumb& (0+255),b
  5037                           
  5038                           ;tmr_drv.c: 75: switch (TmrNumb)
  5039  004B36  D03F               	goto	l500
  5040  004B38                     l503:
  5041                           
  5042                           ; BSR set to: 0
  5043                           ;tmr_drv.c: 83: T2CONbits.T2CKPS0 = 0u;
  5044  004B38  90CA               	bcf	4042,0,c	;volatile
  5045  004B3A  D001               	goto	L1
  5046  004B3C                     l505:
  5047                           
  5048                           ; BSR set to: 0
  5049                           ;tmr_drv.c: 89: T2CONbits.T2CKPS0 = 1u;
  5050  004B3C  80CA               	bsf	4042,0,c	;volatile
  5051  004B3E                     L1:
  5052                           
  5053                           ;tmr_drv.c: 90: T2CONbits.T2CKPS1 = 0u;
  5054  004B3E  92CA               	bcf	4042,1,c	;volatile
  5055                           
  5056                           ;tmr_drv.c: 91: break;
  5057  004B40  D00E               	goto	l504
  5058  004B42                     l506:
  5059                           
  5060                           ; BSR set to: 0
  5061                           ;tmr_drv.c: 94: T2CONbits.T2CKPS0 = 1u;
  5062  004B42  80CA               	bsf	4042,0,c	;volatile
  5063                           
  5064                           ;tmr_drv.c: 95: T2CONbits.T2CKPS1 = 1u;
  5065  004B44  82CA               	bsf	4042,1,c	;volatile
  5066                           
  5067                           ; BSR set to: 0
  5068                           ;tmr_drv.c: 100: }
  5069                           
  5070                           ; BSR set to: 0
  5071                           ;tmr_drv.c: 99: break;
  5072                           
  5073                           ;tmr_drv.c: 98: default:
  5074                           
  5075                           ;tmr_drv.c: 96: break;
  5076  004B46  D00B               	goto	l504
  5077  004B48                     
  5078                           ; BSR set to: 0
  5079  004B48  0100               	movlb	0	; () banked
  5080  004B4A  517D               	movf	TmrBInit@Prescaler& (0+255),w,b
  5081                           
  5082                           ; Switch size 1, requested type "space"
  5083                           ; Number of cases is 3, Range of values is 1 to 16
  5084                           ; switch strategies available:
  5085                           ; Name         Instructions Cycles
  5086                           ; simple_byte           10     6 (average)
  5087                           ;	Chosen strategy is simple_byte
  5088  004B4C  0A01               	xorlw	1	; case 1
  5089  004B4E  B4D8               	btfsc	status,2,c
  5090  004B50  D7F3               	goto	l503
  5091  004B52  0A05               	xorlw	5	; case 4
  5092  004B54  B4D8               	btfsc	status,2,c
  5093  004B56  D7F2               	goto	l505
  5094  004B58  0A14               	xorlw	20	; case 16
  5095  004B5A  B4D8               	btfsc	status,2,c
  5096  004B5C  D7F2               	goto	l506
  5097  004B5E                     l504:
  5098                           
  5099                           ; BSR set to: 0
  5100                           ;tmr_drv.c: 103: T2CONbits.T2OUTPS = (Postscaler - 1);
  5101                           
  5102                           ; BSR set to: 0
  5103  004B5E  C07E  F07F         	movff	TmrBInit@Postscaler,??_TmrBInit
  5104  004B62  0EFF               	movlw	255
  5105  004B64  277F               	addwf	??_TmrBInit& (0+255),f,b
  5106  004B66  477F               	rlncf	??_TmrBInit& (0+255),f,b
  5107  004B68  477F               	rlncf	??_TmrBInit& (0+255),f,b
  5108  004B6A  477F               	rlncf	??_TmrBInit& (0+255),f,b
  5109  004B6C  50CA               	movf	4042,w,c	;volatile
  5110  004B6E  197F               	xorwf	??_TmrBInit& (0+255),w,b
  5111  004B70  0B87               	andlw	-121
  5112  004B72  197F               	xorwf	??_TmrBInit& (0+255),w,b
  5113  004B74  6ECA               	movwf	4042,c	;volatile
  5114                           
  5115                           ;tmr_drv.c: 104: break;
  5116  004B76  0012               	return	
  5117  004B78                     l511:
  5118                           
  5119                           ; BSR set to: 0
  5120                           ;tmr_drv.c: 112: T4CONbits.T4CKPS0 = 0u;
  5121  004B78  9076               	bcf	3958,0,c	;volatile
  5122  004B7A  D001               	goto	L2
  5123  004B7C                     l513:
  5124                           
  5125                           ; BSR set to: 0
  5126                           ;tmr_drv.c: 118: T4CONbits.T4CKPS0 = 1u;
  5127  004B7C  8076               	bsf	3958,0,c	;volatile
  5128  004B7E                     L2:
  5129                           
  5130                           ;tmr_drv.c: 119: T4CONbits.T4CKPS1 = 0u;
  5131  004B7E  9276               	bcf	3958,1,c	;volatile
  5132                           
  5133                           ;tmr_drv.c: 120: break;
  5134  004B80  D00D               	goto	l512
  5135  004B82                     l514:
  5136                           
  5137                           ; BSR set to: 0
  5138                           ;tmr_drv.c: 123: T4CONbits.T4CKPS0 = 1u;
  5139  004B82  8076               	bsf	3958,0,c	;volatile
  5140                           
  5141                           ;tmr_drv.c: 124: T4CONbits.T4CKPS1 = 1u;
  5142  004B84  8276               	bsf	3958,1,c	;volatile
  5143                           
  5144                           ; BSR set to: 0
  5145                           ;tmr_drv.c: 129: }
  5146                           
  5147                           ; BSR set to: 0
  5148                           ;tmr_drv.c: 128: break;
  5149                           
  5150                           ;tmr_drv.c: 127: default:
  5151                           
  5152                           ;tmr_drv.c: 125: break;
  5153  004B86  D00A               	goto	l512
  5154  004B88                     
  5155                           ; BSR set to: 0
  5156                           
  5157                           ; BSR set to: 0
  5158  004B88  517D               	movf	TmrBInit@Prescaler& (0+255),w,b
  5159                           
  5160                           ; Switch size 1, requested type "space"
  5161                           ; Number of cases is 3, Range of values is 1 to 16
  5162                           ; switch strategies available:
  5163                           ; Name         Instructions Cycles
  5164                           ; simple_byte           10     6 (average)
  5165                           ;	Chosen strategy is simple_byte
  5166  004B8A  0A01               	xorlw	1	; case 1
  5167  004B8C  B4D8               	btfsc	status,2,c
  5168  004B8E  D7F4               	goto	l511
  5169  004B90  0A05               	xorlw	5	; case 4
  5170  004B92  B4D8               	btfsc	status,2,c
  5171  004B94  D7F3               	goto	l513
  5172  004B96  0A14               	xorlw	20	; case 16
  5173  004B98  B4D8               	btfsc	status,2,c
  5174  004B9A  D7F3               	goto	l514
  5175  004B9C                     l512:
  5176                           
  5177                           ; BSR set to: 0
  5178                           ;tmr_drv.c: 132: T4CONbits.T4OUTPS = (Postscaler - 1);
  5179                           
  5180                           ; BSR set to: 0
  5181  004B9C  C07E  F07F         	movff	TmrBInit@Postscaler,??_TmrBInit
  5182  004BA0  0EFF               	movlw	255
  5183  004BA2  277F               	addwf	??_TmrBInit& (0+255),f,b
  5184  004BA4  477F               	rlncf	??_TmrBInit& (0+255),f,b
  5185  004BA6  477F               	rlncf	??_TmrBInit& (0+255),f,b
  5186  004BA8  477F               	rlncf	??_TmrBInit& (0+255),f,b
  5187  004BAA  5076               	movf	3958,w,c	;volatile
  5188  004BAC  197F               	xorwf	??_TmrBInit& (0+255),w,b
  5189  004BAE  0B87               	andlw	-121
  5190  004BB0  197F               	xorwf	??_TmrBInit& (0+255),w,b
  5191  004BB2  6E76               	movwf	3958,c	;volatile
  5192                           
  5193                           ; BSR set to: 0
  5194                           ;tmr_drv.c: 137: }
  5195                           
  5196                           ; BSR set to: 0
  5197                           ;tmr_drv.c: 136: break;
  5198                           
  5199                           ;tmr_drv.c: 135: default:
  5200                           
  5201                           ;tmr_drv.c: 133: break;
  5202  004BB4  0012               	return	
  5203  004BB6                     l500:
  5204                           
  5205                           ; BSR set to: 0
  5206  004BB6  0100               	movlb	0	; () banked
  5207  004BB8  5180               	movf	TmrBInit@TmrNumb& (0+255),w,b
  5208                           
  5209                           ; Switch size 1, requested type "space"
  5210                           ; Number of cases is 2, Range of values is 2 to 4
  5211                           ; switch strategies available:
  5212                           ; Name         Instructions Cycles
  5213                           ; simple_byte            7     4 (average)
  5214                           ;	Chosen strategy is simple_byte
  5215  004BBA  0A02               	xorlw	2	; case 2
  5216  004BBC  B4D8               	btfsc	status,2,c
  5217  004BBE  D7C4               	goto	l502
  5218  004BC0  0A06               	xorlw	6	; case 4
  5219  004BC2  A4D8               	btfss	status,2,c
  5220  004BC4  0012               	return	
  5221  004BC6  D7E0               	goto	l510
  5222  004BC8                     __end_of_TmrBInit:
  5223                           	opt stack 0
  5224                           tblptru	equ	0xFF8
  5225                           tblptrh	equ	0xFF7
  5226                           tblptrl	equ	0xFF6
  5227                           tablat	equ	0xFF5
  5228                           prodh	equ	0xFF4
  5229                           prodl	equ	0xFF3
  5230                           intcon	equ	0xFF2
  5231                           intcon2	equ	0xFF1
  5232                           intcon3	equ	0xFF0
  5233                           postinc0	equ	0xFEE
  5234                           wreg	equ	0xFE8
  5235                           postdec1	equ	0xFE5
  5236                           fsr1h	equ	0xFE2
  5237                           fsr1l	equ	0xFE1
  5238                           indf2	equ	0xFDF
  5239                           postinc2	equ	0xFDE
  5240                           postdec2	equ	0xFDD
  5241                           fsr2h	equ	0xFDA
  5242                           fsr2l	equ	0xFD9
  5243                           status	equ	0xFD8
  5244                           
  5245 ;; *************** function _Sch_MainScheduler *****************
  5246 ;; Defined at:
  5247 ;;		line 175 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
  5248 ;; Parameters:    Size  Location     Type
  5249 ;;		None
  5250 ;; Auto vars:     Size  Location     Type
  5251 ;;		None
  5252 ;; Return value:  Size  Location     Type
  5253 ;;                  1    wreg      void 
  5254 ;; Registers used:
  5255 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  5256 ;; Tracked objects:
  5257 ;;		On entry : 0/0
  5258 ;;		On exit  : 0/0
  5259 ;;		Unchanged: 0/0
  5260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5261 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5262 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5264 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5265 ;;Total ram usage:        0 bytes
  5266 ;; Hardware stack levels used:    1
  5267 ;; Hardware stack levels required when called:   22
  5268 ;; This function calls:
  5269 ;;		_InitializeTasks
  5270 ;;		_ScheduleTasks
  5271 ;; This function is called by:
  5272 ;;		_main
  5273 ;; This function uses a non-reentrant model
  5274 ;;
  5275                           
  5276                           	psect	text13
  5277  006898                     __ptext13:
  5278                           	opt stack 0
  5279  006898                     _Sch_MainScheduler:
  5280                           	opt stack 8
  5281                           
  5282                           ;os_sched.c: 178: InitializeTasks();
  5283                           
  5284                           ; BSR set to: 0
  5285                           ;incstack = 0
  5286  006898  ECF6  F029         	call	_InitializeTasks	;wreg free
  5287                           
  5288                           ;os_sched.c: 180: SystemState = RunningState;
  5289  00689C  0E01               	movlw	1
  5290  00689E  0100               	movlb	0	; () banked
  5291  0068A0  6FD4               	movwf	_SystemState& (0+255),b
  5292  0068A2                     
  5293                           ;os_sched.c: 188: {
  5294                           ;os_sched.c: 190: if (MainSystemTimebaseFlag == CallTaskPhase)
  5295                           
  5296                           ; BSR set to: 0
  5297  0068A2  0102               	movlb	2	; () banked
  5298  0068A4  51F4               	movf	_MainSystemTimebaseFlag& (0+255),w,b
  5299  0068A6  A4D8               	btfss	status,2,c
  5300  0068A8  D7FC               	goto	l790
  5301                           
  5302                           ; BSR set to: 2
  5303                           ;os_sched.c: 191: {
  5304                           ;os_sched.c: 196: ScheduleTasks();
  5305  0068AA  EC13  F017         	call	_ScheduleTasks	;wreg free
  5306                           
  5307                           ;os_sched.c: 201: MainSystemTimebaseFlag = WaitTriggerPhase;
  5308  0068AE  0E01               	movlw	1
  5309  0068B0  0102               	movlb	2	; () banked
  5310  0068B2  6FF4               	movwf	_MainSystemTimebaseFlag& (0+255),b
  5311                           
  5312                           ; BSR set to: 2
  5313                           
  5314                           ; BSR set to: 2
  5315  0068B4  D7F6               	goto	l790
  5316  0068B6                     __end_of_Sch_MainScheduler:
  5317                           	opt stack 0
  5318                           tblptru	equ	0xFF8
  5319                           tblptrh	equ	0xFF7
  5320                           tblptrl	equ	0xFF6
  5321                           tablat	equ	0xFF5
  5322                           prodh	equ	0xFF4
  5323                           prodl	equ	0xFF3
  5324                           intcon	equ	0xFF2
  5325                           intcon2	equ	0xFF1
  5326                           intcon3	equ	0xFF0
  5327                           postinc0	equ	0xFEE
  5328                           wreg	equ	0xFE8
  5329                           postdec1	equ	0xFE5
  5330                           fsr1h	equ	0xFE2
  5331                           fsr1l	equ	0xFE1
  5332                           indf2	equ	0xFDF
  5333                           postinc2	equ	0xFDE
  5334                           postdec2	equ	0xFDD
  5335                           fsr2h	equ	0xFDA
  5336                           fsr2l	equ	0xFD9
  5337                           status	equ	0xFD8
  5338                           
  5339 ;; *************** function _ScheduleTasks *****************
  5340 ;; Defined at:
  5341 ;;		line 99 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
  5342 ;; Parameters:    Size  Location     Type
  5343 ;;		None
  5344 ;; Auto vars:     Size  Location     Type
  5345 ;;  ActiveTaskIn    1    4[BANK4 ] unsigned char 
  5346 ;; Return value:  Size  Location     Type
  5347 ;;                  1    wreg      void 
  5348 ;; Registers used:
  5349 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  5350 ;; Tracked objects:
  5351 ;;		On entry : 0/0
  5352 ;;		On exit  : 0/0
  5353 ;;		Unchanged: 0/0
  5354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5355 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5356 ;;      Locals:         0       0       0       0       0       1       0       0       0       0       0       0       
      +0       0       0       0
  5357 ;;      Temps:          0       0       0       0       0       4       0       0       0       0       0       0       
      +0       0       0       0
  5358 ;;      Totals:         0       0       0       0       0       5       0       0       0       0       0       0       
      +0       0       0       0
  5359 ;;Total ram usage:        5 bytes
  5360 ;; Hardware stack levels used:    1
  5361 ;; Hardware stack levels required when called:   21
  5362 ;; This function calls:
  5363 ;;		_I2cSlv_MainTask
  5364 ;;		_Led_MainTask
  5365 ;;		_MdmHttp_MainTask
  5366 ;;		_Mdm_DrvMainFn
  5367 ;;		_Mdm_MainTask
  5368 ;;		_MyApp_Task
  5369 ;;		_Rtcm_MainTask
  5370 ;;		_Term_MainTask
  5371 ;;		_UsbDevice_MainTask
  5372 ;;		_Wdg_MainTask
  5373 ;; This function is called by:
  5374 ;;		_Sch_MainScheduler
  5375 ;; This function uses a non-reentrant model
  5376 ;;
  5377                           
  5378                           	psect	text14
  5379  002E26                     __ptext14:
  5380                           	opt stack 0
  5381  002E26                     _ScheduleTasks:
  5382                           	opt stack 8
  5383                           
  5384                           ;os_sched.c: 102: UINT8 ActiveTaskIndex = 0u;
  5385                           
  5386                           ; BSR set to: 2
  5387                           ;incstack = 0
  5388  002E26  0E00               	movlw	0
  5389  002E28  0104               	movlb	4	; () banked
  5390  002E2A  6FFB               	movwf	ScheduleTasks@ActiveTaskIndex& (0+255),b
  5391                           
  5392                           ;os_sched.c: 105: for (ActiveTaskIndex = 0u; ActiveTaskIndex < TaskNumber; ActiveTaskInd
      +                          ex++)
  5393  002E2C  0E00               	movlw	0
  5394  002E2E  6FFB               	movwf	ScheduleTasks@ActiveTaskIndex& (0+255),b
  5395  002E30                     l16580:
  5396                           
  5397                           ; BSR set to: 4
  5398  002E30  0E30               	movlw	low _TaskNumber
  5399  002E32  6EF6               	movwf	tblptrl,c
  5400  002E34                     	if	1	;There is more than 1 active tblptr byte
  5401  002E34  0EFC               	movlw	high _TaskNumber
  5402  002E36  6EF7               	movwf	tblptrh,c
  5403  002E38                     	endif
  5404  002E38                     	if	0	;There are less than 3 active tblptr bytes
  5405  002E38                     	endif
  5406  002E38  51FB               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5407  002E3A  6FF7               	movwf	??_ScheduleTasks& (0+255),b
  5408  002E3C  6BF8               	clrf	(??_ScheduleTasks+1)& (0+255),b
  5409  002E3E  0009               	tblrd		*+
  5410  002E40  50F5               	movf	tablat,w,c
  5411  002E42  5DF7               	subwf	??_ScheduleTasks& (0+255),w,b
  5412  002E44  0009               	tblrd		*+
  5413  002E46  50F5               	movf	tablat,w,c
  5414  002E48  59F8               	subwfb	(??_ScheduleTasks+1)& (0+255),w,b
  5415  002E4A  B0D8               	btfsc	status,0,c
  5416  002E4C  0012               	return	
  5417                           
  5418                           ; BSR set to: 4
  5419                           ;os_sched.c: 106: {
  5420                           ;os_sched.c: 108: TaskTable[ActiveTaskIndex].Counter++;
  5421                           
  5422                           ; BSR set to: 4
  5423                           
  5424                           ; BSR set to: 4
  5425  002E4E  51FB               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5426  002E50  0D08               	mullw	8
  5427  002E52  0E03               	movlw	3
  5428  002E54  26F3               	addwf	prodl,f,c
  5429  002E56  0E00               	movlw	0
  5430  002E58  22F4               	addwfc	prodh,f,c
  5431  002E5A  0EA4               	movlw	low _TaskTable
  5432  002E5C  24F3               	addwf	prodl,w,c
  5433  002E5E  6ED9               	movwf	fsr2l,c
  5434  002E60  0E05               	movlw	high _TaskTable
  5435  002E62  20F4               	addwfc	prodh,w,c
  5436  002E64  6EDA               	movwf	fsr2h,c
  5437  002E66  2ADE               	incf	postinc2,f,c
  5438  002E68  0E00               	movlw	0
  5439  002E6A  22DD               	addwfc	postdec2,f,c
  5440                           
  5441                           ; BSR set to: 4
  5442                           ;os_sched.c: 110: if (TaskTable[ActiveTaskIndex].Counter >= (TaskTable[ActiveTaskIndex].
      +                          TimeoutMs/((((UINT16)(1000))*((UINT16)(1)))/1000)))
  5443  002E6C  51FB               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5444  002E6E  0D08               	mullw	8
  5445  002E70  0E05               	movlw	5
  5446  002E72  26F3               	addwf	prodl,f,c
  5447  002E74  0E00               	movlw	0
  5448  002E76  22F4               	addwfc	prodh,f,c
  5449  002E78  0EA4               	movlw	low _TaskTable
  5450  002E7A  24F3               	addwf	prodl,w,c
  5451  002E7C  6ED9               	movwf	fsr2l,c
  5452  002E7E  0E05               	movlw	high _TaskTable
  5453  002E80  20F4               	addwfc	prodh,w,c
  5454  002E82  6EDA               	movwf	fsr2h,c
  5455  002E84  51FB               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5456  002E86  0D08               	mullw	8
  5457  002E88  0E03               	movlw	3
  5458  002E8A  26F3               	addwf	prodl,f,c
  5459  002E8C  0E00               	movlw	0
  5460  002E8E  22F4               	addwfc	prodh,f,c
  5461  002E90  0EA4               	movlw	low _TaskTable
  5462  002E92  24F3               	addwf	prodl,w,c
  5463  002E94  6EE1               	movwf	fsr1l,c
  5464  002E96  0E05               	movlw	high _TaskTable
  5465  002E98  20F4               	addwfc	prodh,w,c
  5466  002E9A  6EE2               	movwf	fsr1h,c
  5467  002E9C  50DE               	movf	postinc2,w,c
  5468  002E9E  5CE6               	subwf	postinc1,w,c
  5469  002EA0  50DE               	movf	postinc2,w,c
  5470  002EA2  58E6               	subwfb	postinc1,w,c
  5471  002EA4  A0D8               	btfss	status,0,c
  5472  002EA6  D04E               	goto	l775
  5473                           
  5474                           ; BSR set to: 4
  5475                           ;os_sched.c: 111: {
  5476                           ;os_sched.c: 112: TaskTable[ActiveTaskIndex].Counter = ((UINT8)(0));
  5477  002EA8  51FB               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5478  002EAA  0D08               	mullw	8
  5479  002EAC  0E03               	movlw	3
  5480  002EAE  26F3               	addwf	prodl,f,c
  5481  002EB0  0E00               	movlw	0
  5482  002EB2  22F4               	addwfc	prodh,f,c
  5483  002EB4  0EA4               	movlw	low _TaskTable
  5484  002EB6  24F3               	addwf	prodl,w,c
  5485  002EB8  6ED9               	movwf	fsr2l,c
  5486  002EBA  0E05               	movlw	high _TaskTable
  5487  002EBC  20F4               	addwfc	prodh,w,c
  5488  002EBE  6EDA               	movwf	fsr2h,c
  5489  002EC0  0E00               	movlw	0
  5490  002EC2  6EDE               	movwf	postinc2,c
  5491  002EC4  0E00               	movlw	0
  5492  002EC6  6EDD               	movwf	postdec2,c
  5493                           
  5494                           ;os_sched.c: 113: TaskTable[ActiveTaskIndex].State = TaskRunning;
  5495  002EC8  51FB               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5496  002ECA  0D08               	mullw	8
  5497  002ECC  0E02               	movlw	2
  5498  002ECE  26F3               	addwf	prodl,f,c
  5499  002ED0  0E00               	movlw	0
  5500  002ED2  22F4               	addwfc	prodh,f,c
  5501  002ED4  0EA4               	movlw	low _TaskTable
  5502  002ED6  24F3               	addwf	prodl,w,c
  5503  002ED8  6ED9               	movwf	fsr2l,c
  5504  002EDA  0E05               	movlw	high _TaskTable
  5505  002EDC  20F4               	addwfc	prodh,w,c
  5506  002EDE  6EDA               	movwf	fsr2h,c
  5507  002EE0  0E01               	movlw	1
  5508  002EE2  6EDF               	movwf	indf2,c
  5509                           
  5510                           ; BSR set to: 4
  5511                           ;os_sched.c: 114: TaskTable[ActiveTaskIndex].Task(TaskTable[ActiveTaskIndex].Options);
  5512  002EE4  51FB               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5513  002EE6  0D08               	mullw	8
  5514  002EE8  0EA4               	movlw	low _TaskTable
  5515  002EEA  24F3               	addwf	prodl,w,c
  5516  002EEC  6ED9               	movwf	fsr2l,c
  5517  002EEE  0E05               	movlw	high _TaskTable
  5518  002EF0  20F4               	addwfc	prodh,w,c
  5519  002EF2  6EDA               	movwf	fsr2h,c
  5520  002EF4  D801               	call	u16438
  5521  002EF6  D017               	goto	u16439
  5522  002EF8                     u16438:
  5523  002EF8  0005               	push	
  5524  002EFA  6EFA               	movwf	pclath,c
  5525  002EFC  50DE               	movf	postinc2,w,c
  5526  002EFE  6EFD               	movwf	tosl,c
  5527  002F00  50DE               	movf	postinc2,w,c
  5528  002F02  6EFE               	movwf	tosh,c
  5529  002F04  50F8               	movf	tblptru,w,c
  5530  002F06  6EFF               	movwf	tosu,c
  5531  002F08  50FA               	movf	pclath,w,c
  5532  002F0A  51FB               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5533  002F0C  0D08               	mullw	8
  5534  002F0E  0E07               	movlw	7
  5535  002F10  26F3               	addwf	prodl,f,c
  5536  002F12  0E00               	movlw	0
  5537  002F14  22F4               	addwfc	prodh,f,c
  5538  002F16  0EA4               	movlw	low _TaskTable
  5539  002F18  24F3               	addwf	prodl,w,c
  5540  002F1A  6ED9               	movwf	fsr2l,c
  5541  002F1C  0E05               	movlw	high _TaskTable
  5542  002F1E  20F4               	addwfc	prodh,w,c
  5543  002F20  6EDA               	movwf	fsr2h,c
  5544  002F22  50DF               	movf	indf2,w,c
  5545  002F24  0012               	return		;indir
  5546  002F26                     u16439:
  5547                           
  5548                           ;os_sched.c: 115: TaskTable[ActiveTaskIndex].State = TaskIdle;
  5549  002F26  0104               	movlb	4	; () banked
  5550  002F28  51FB               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5551  002F2A  0D08               	mullw	8
  5552  002F2C  0E02               	movlw	2
  5553  002F2E  26F3               	addwf	prodl,f,c
  5554  002F30  0E00               	movlw	0
  5555  002F32  22F4               	addwfc	prodh,f,c
  5556  002F34  0EA4               	movlw	low _TaskTable
  5557  002F36  24F3               	addwf	prodl,w,c
  5558  002F38  6ED9               	movwf	fsr2l,c
  5559  002F3A  0E05               	movlw	high _TaskTable
  5560  002F3C  20F4               	addwfc	prodh,w,c
  5561  002F3E  6EDA               	movwf	fsr2h,c
  5562  002F40  0E00               	movlw	0
  5563  002F42  6EDF               	movwf	indf2,c
  5564  002F44                     l775:
  5565                           
  5566                           ; BSR set to: 4
  5567                           
  5568                           ; BSR set to: 4
  5569                           
  5570                           ;os_sched.c: 117: else
  5571                           ;os_sched.c: 118: {
  5572                           
  5573                           ; BSR set to: 4
  5574  002F44  2BFB               	incf	ScheduleTasks@ActiveTaskIndex& (0+255),f,b
  5575  002F46  D774               	goto	l16580
  5576  002F48                     __end_of_ScheduleTasks:
  5577                           	opt stack 0
  5578                           tosu	equ	0xFFF
  5579                           tosh	equ	0xFFE
  5580                           tosl	equ	0xFFD
  5581                           pclath	equ	0xFFA
  5582                           tblptru	equ	0xFF8
  5583                           tblptrh	equ	0xFF7
  5584                           tblptrl	equ	0xFF6
  5585                           tablat	equ	0xFF5
  5586                           prodh	equ	0xFF4
  5587                           prodl	equ	0xFF3
  5588                           intcon	equ	0xFF2
  5589                           intcon2	equ	0xFF1
  5590                           intcon3	equ	0xFF0
  5591                           postinc0	equ	0xFEE
  5592                           wreg	equ	0xFE8
  5593                           postinc1	equ	0xFE6
  5594                           postdec1	equ	0xFE5
  5595                           fsr1h	equ	0xFE2
  5596                           fsr1l	equ	0xFE1
  5597                           indf2	equ	0xFDF
  5598                           postinc2	equ	0xFDE
  5599                           postdec2	equ	0xFDD
  5600                           fsr2h	equ	0xFDA
  5601                           fsr2l	equ	0xFD9
  5602                           status	equ	0xFD8
  5603                           
  5604 ;; *************** function _InitializeTasks *****************
  5605 ;; Defined at:
  5606 ;;		line 79 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
  5607 ;; Parameters:    Size  Location     Type
  5608 ;;		None
  5609 ;; Auto vars:     Size  Location     Type
  5610 ;;  ActiveTaskIn    1    2[BANK4 ] unsigned char 
  5611 ;; Return value:  Size  Location     Type
  5612 ;;                  1    wreg      void 
  5613 ;; Registers used:
  5614 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  5615 ;; Tracked objects:
  5616 ;;		On entry : 0/0
  5617 ;;		On exit  : 0/0
  5618 ;;		Unchanged: 0/0
  5619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5620 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5621 ;;      Locals:         0       0       0       0       0       1       0       0       0       0       0       0       
      +0       0       0       0
  5622 ;;      Temps:          0       0       0       0       0       2       0       0       0       0       0       0       
      +0       0       0       0
  5623 ;;      Totals:         0       0       0       0       0       3       0       0       0       0       0       0       
      +0       0       0       0
  5624 ;;Total ram usage:        3 bytes
  5625 ;; Hardware stack levels used:    1
  5626 ;; Hardware stack levels required when called:   21
  5627 ;; This function calls:
  5628 ;;		_I2cSlv_MainTask
  5629 ;;		_Led_MainTask
  5630 ;;		_MdmHttp_MainTask
  5631 ;;		_Mdm_DrvMainFn
  5632 ;;		_Mdm_MainTask
  5633 ;;		_MyApp_Task
  5634 ;;		_Rtcm_MainTask
  5635 ;;		_Term_MainTask
  5636 ;;		_UsbDevice_MainTask
  5637 ;;		_Wdg_MainTask
  5638 ;; This function is called by:
  5639 ;;		_Sch_MainScheduler
  5640 ;; This function uses a non-reentrant model
  5641 ;;
  5642                           
  5643                           	psect	text15
  5644  0053EC                     __ptext15:
  5645                           	opt stack 0
  5646  0053EC                     _InitializeTasks:
  5647                           	opt stack 8
  5648                           
  5649                           ;os_sched.c: 82: UINT8 ActiveTaskIndex = 0u;
  5650                           
  5651                           ; BSR set to: 4
  5652                           ;incstack = 0
  5653  0053EC  0E00               	movlw	0
  5654  0053EE  0104               	movlb	4	; () banked
  5655  0053F0  6FF9               	movwf	InitializeTasks@ActiveTaskIndex& (0+255),b
  5656                           
  5657                           ;os_sched.c: 85: for (ActiveTaskIndex = 0u; ActiveTaskIndex < TaskNumber; ActiveTaskInde
      +                          x++)
  5658  0053F2  0E00               	movlw	0
  5659  0053F4  6FF9               	movwf	InitializeTasks@ActiveTaskIndex& (0+255),b
  5660  0053F6                     l16568:
  5661                           
  5662                           ; BSR set to: 4
  5663  0053F6  0E30               	movlw	low _TaskNumber
  5664  0053F8  6EF6               	movwf	tblptrl,c
  5665  0053FA                     	if	1	;There is more than 1 active tblptr byte
  5666  0053FA  0EFC               	movlw	high _TaskNumber
  5667  0053FC  6EF7               	movwf	tblptrh,c
  5668  0053FE                     	endif
  5669  0053FE                     	if	0	;There are less than 3 active tblptr bytes
  5670  0053FE                     	endif
  5671  0053FE  51F9               	movf	InitializeTasks@ActiveTaskIndex& (0+255),w,b
  5672  005400  6FF7               	movwf	??_InitializeTasks& (0+255),b
  5673  005402  6BF8               	clrf	(??_InitializeTasks+1)& (0+255),b
  5674  005404  0009               	tblrd		*+
  5675  005406  50F5               	movf	tablat,w,c
  5676  005408  5DF7               	subwf	??_InitializeTasks& (0+255),w,b
  5677  00540A  0009               	tblrd		*+
  5678  00540C  50F5               	movf	tablat,w,c
  5679  00540E  59F8               	subwfb	(??_InitializeTasks+1)& (0+255),w,b
  5680  005410  B0D8               	btfsc	status,0,c
  5681  005412  0012               	return	
  5682                           
  5683                           ; BSR set to: 4
  5684                           ;os_sched.c: 86: {
  5685                           ;os_sched.c: 87: TaskTable[ActiveTaskIndex].Task(TaskTable[ActiveTaskIndex].Options);
  5686                           
  5687                           ; BSR set to: 4
  5688                           
  5689                           ; BSR set to: 4
  5690  005414  51F9               	movf	InitializeTasks@ActiveTaskIndex& (0+255),w,b
  5691  005416  0D08               	mullw	8
  5692  005418  0EA4               	movlw	low _TaskTable
  5693  00541A  24F3               	addwf	prodl,w,c
  5694  00541C  6ED9               	movwf	fsr2l,c
  5695  00541E  0E05               	movlw	high _TaskTable
  5696  005420  20F4               	addwfc	prodh,w,c
  5697  005422  6EDA               	movwf	fsr2h,c
  5698  005424  D801               	call	u16398
  5699  005426  D017               	goto	u16399
  5700  005428                     u16398:
  5701  005428  0005               	push	
  5702  00542A  6EFA               	movwf	pclath,c
  5703  00542C  50DE               	movf	postinc2,w,c
  5704  00542E  6EFD               	movwf	tosl,c
  5705  005430  50DE               	movf	postinc2,w,c
  5706  005432  6EFE               	movwf	tosh,c
  5707  005434  50F8               	movf	tblptru,w,c
  5708  005436  6EFF               	movwf	tosu,c
  5709  005438  50FA               	movf	pclath,w,c
  5710  00543A  51F9               	movf	InitializeTasks@ActiveTaskIndex& (0+255),w,b
  5711  00543C  0D08               	mullw	8
  5712  00543E  0E07               	movlw	7
  5713  005440  26F3               	addwf	prodl,f,c
  5714  005442  0E00               	movlw	0
  5715  005444  22F4               	addwfc	prodh,f,c
  5716  005446  0EA4               	movlw	low _TaskTable
  5717  005448  24F3               	addwf	prodl,w,c
  5718  00544A  6ED9               	movwf	fsr2l,c
  5719  00544C  0E05               	movlw	high _TaskTable
  5720  00544E  20F4               	addwfc	prodh,w,c
  5721  005450  6EDA               	movwf	fsr2h,c
  5722  005452  50DF               	movf	indf2,w,c
  5723  005454  0012               	return		;indir
  5724  005456                     u16399:
  5725  005456  0104               	movlb	4	; () banked
  5726  005458  2BF9               	incf	InitializeTasks@ActiveTaskIndex& (0+255),f,b
  5727  00545A  D7CD               	goto	l16568
  5728  00545C                     __end_of_InitializeTasks:
  5729                           	opt stack 0
  5730                           tosu	equ	0xFFF
  5731                           tosh	equ	0xFFE
  5732                           tosl	equ	0xFFD
  5733                           pclath	equ	0xFFA
  5734                           tblptru	equ	0xFF8
  5735                           tblptrh	equ	0xFF7
  5736                           tblptrl	equ	0xFF6
  5737                           tablat	equ	0xFF5
  5738                           prodh	equ	0xFF4
  5739                           prodl	equ	0xFF3
  5740                           intcon	equ	0xFF2
  5741                           intcon2	equ	0xFF1
  5742                           intcon3	equ	0xFF0
  5743                           postinc0	equ	0xFEE
  5744                           wreg	equ	0xFE8
  5745                           postinc1	equ	0xFE6
  5746                           postdec1	equ	0xFE5
  5747                           fsr1h	equ	0xFE2
  5748                           fsr1l	equ	0xFE1
  5749                           indf2	equ	0xFDF
  5750                           postinc2	equ	0xFDE
  5751                           postdec2	equ	0xFDD
  5752                           fsr2h	equ	0xFDA
  5753                           fsr2l	equ	0xFD9
  5754                           status	equ	0xFD8
  5755                           
  5756 ;; *************** function _MyApp_Task *****************
  5757 ;; Defined at:
  5758 ;;		line 148 in file "../Source/c/04_App/app.c"
  5759 ;; Parameters:    Size  Location     Type
  5760 ;;  Options         1    wreg     unsigned char 
  5761 ;; Auto vars:     Size  Location     Type
  5762 ;;  Options         1    0[COMRAM] unsigned char 
  5763 ;; Return value:  Size  Location     Type
  5764 ;;                  1    wreg      void 
  5765 ;; Registers used:
  5766 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5767 ;; Tracked objects:
  5768 ;;		On entry : 0/0
  5769 ;;		On exit  : 0/0
  5770 ;;		Unchanged: 0/0
  5771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5772 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5773 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5775 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5776 ;;Total ram usage:        0 bytes
  5777 ;; Hardware stack levels used:    1
  5778 ;; Hardware stack levels required when called:   19
  5779 ;; This function calls:
  5780 ;;		_Eeprom_Reset
  5781 ;;		_Led_SetLedBlinkTime
  5782 ;;		_addCmdFsm
  5783 ;;		_delCmdFsm
  5784 ;;		_detectCmd
  5785 ;;		_initFsm
  5786 ;;		_triggerCmdFsm
  5787 ;; This function is called by:
  5788 ;;		_InitializeTasks
  5789 ;;		_ScheduleTasks
  5790 ;; This function uses a non-reentrant model
  5791 ;;
  5792                           
  5793                           	psect	text16
  5794  00332C                     __ptext16:
  5795                           	opt stack 0
  5796  00332C                     _MyApp_Task:
  5797                           	opt stack 9
  5798                           
  5799                           ;app.c: 150: static gateFsmStates currentState = GATE_INIT;
  5800                           ;app.c: 152: switch (SystemState)
  5801                           
  5802                           ; BSR set to: 4
  5803                           ;incstack = 0
  5804  00332C  D069               	goto	l2591
  5805  00332E                     
  5806                           ;app.c: 157: Led_SetLedBlinkTime(1u,100,900);
  5807  00332E  0E00               	movlw	0
  5808  003330  0100               	movlb	0	; () banked
  5809  003332  6F7E               	movwf	(Led_SetLedBlinkTime@OnTimeMs+1)& (0+255),b
  5810  003334  0E64               	movlw	100
  5811  003336  6F7D               	movwf	Led_SetLedBlinkTime@OnTimeMs& (0+255),b
  5812  003338  0E03               	movlw	3
  5813  00333A  6F80               	movwf	(Led_SetLedBlinkTime@OffTimeMs+1)& (0+255),b
  5814  00333C  0E84               	movlw	132
  5815  00333E  6F7F               	movwf	Led_SetLedBlinkTime@OffTimeMs& (0+255),b
  5816  003340  0E01               	movlw	1
  5817  003342  ECEA  F02D         	call	_Led_SetLedBlinkTime
  5818                           
  5819                           ;app.c: 158: break;
  5820  003346  0012               	return	
  5821  003348                     
  5822                           ;app.c: 165: if (initFsm())
  5823  003348  EC13  F023         	call	_initFsm	;wreg free
  5824  00334C  0900               	iorlw	0
  5825  00334E  B4D8               	btfsc	status,2,c
  5826  003350  0012               	return	
  5827                           
  5828                           ;app.c: 166: {
  5829                           ;app.c: 167: currentState = GATE_WAIT_EVENT;
  5830  003352  0E01               	movlw	1
  5831  003354  0101               	movlb	1	; () banked
  5832  003356  6FD9               	movwf	MyApp_Task@currentState& (0+255),b
  5833                           
  5834                           ; BSR set to: 1
  5835                           ;app.c: 168: }
  5836                           ;app.c: 169: break;
  5837  003358  0012               	return	
  5838  00335A                     
  5839                           ; BSR set to: 1
  5840                           ;app.c: 172: currentState = detectCmd();
  5841                           
  5842                           ; BSR set to: 1
  5843  00335A  ECFF  F024         	call	_detectCmd	;wreg free
  5844  00335E  0101               	movlb	1	; () banked
  5845  003360  6FD9               	movwf	MyApp_Task@currentState& (0+255),b
  5846                           
  5847                           ;app.c: 173: break;
  5848  003362  0012               	return	
  5849  003364                     
  5850                           ; BSR set to: 1
  5851                           ;app.c: 176: if (addCmdFsm(receivedNumber, smsText))
  5852                           
  5853                           ; BSR set to: 1
  5854  003364  0ECA               	movlw	low _receivedNumber
  5855  003366  6F05               	movwf	addCmdFsm@receivedNumber& (0+255),b
  5856  003368  0E04               	movlw	high _receivedNumber
  5857  00336A  6F06               	movwf	(addCmdFsm@receivedNumber+1)& (0+255),b
  5858  00336C  0E93               	movlw	low _smsText
  5859  00336E  6F07               	movwf	addCmdFsm@smsText& (0+255),b
  5860  003370  0E04               	movlw	high _smsText
  5861  003372  6F08               	movwf	(addCmdFsm@smsText+1)& (0+255),b
  5862  003374  EC0C  F01D         	call	_addCmdFsm	;wreg free
  5863  003378  0900               	iorlw	0
  5864  00337A  B4D8               	btfsc	status,2,c
  5865  00337C  0012               	return	
  5866                           
  5867                           ;app.c: 177: {
  5868                           ;app.c: 178: currentState = GATE_WAIT_EVENT;
  5869  00337E  0E01               	movlw	1
  5870  003380  0101               	movlb	1	; () banked
  5871  003382  6FD9               	movwf	MyApp_Task@currentState& (0+255),b
  5872                           
  5873                           ; BSR set to: 1
  5874                           ;app.c: 179: }
  5875                           ;app.c: 180: break;
  5876  003384  0012               	return	
  5877  003386                     
  5878                           ; BSR set to: 1
  5879                           ;app.c: 183: if (delCmdFsm(receivedNumber, smsText))
  5880                           
  5881                           ; BSR set to: 1
  5882  003386  0ECA               	movlw	low _receivedNumber
  5883  003388  6F03               	movwf	delCmdFsm@receivedNumber& (0+255),b
  5884  00338A  0E04               	movlw	high _receivedNumber
  5885  00338C  6F04               	movwf	(delCmdFsm@receivedNumber+1)& (0+255),b
  5886  00338E  0E93               	movlw	low _smsText
  5887  003390  6F05               	movwf	delCmdFsm@smsText& (0+255),b
  5888  003392  0E04               	movlw	high _smsText
  5889  003394  6F06               	movwf	(delCmdFsm@smsText+1)& (0+255),b
  5890  003396  EC58  F027         	call	_delCmdFsm	;wreg free
  5891  00339A  0900               	iorlw	0
  5892  00339C  B4D8               	btfsc	status,2,c
  5893  00339E  0012               	return	
  5894                           
  5895                           ;app.c: 184: {
  5896                           ;app.c: 185: currentState = GATE_WAIT_EVENT;
  5897  0033A0  0E01               	movlw	1
  5898  0033A2  0101               	movlb	1	; () banked
  5899  0033A4  6FD9               	movwf	MyApp_Task@currentState& (0+255),b
  5900                           
  5901                           ; BSR set to: 1
  5902                           ;app.c: 186: }
  5903                           ;app.c: 187: break;
  5904  0033A6  0012               	return	
  5905  0033A8                     
  5906                           ; BSR set to: 1
  5907                           ;app.c: 190: if (triggerCmdFsm(receivedNumber))
  5908                           
  5909                           ; BSR set to: 1
  5910  0033A8  0ECA               	movlw	low _receivedNumber
  5911  0033AA  0100               	movlb	0	; () banked
  5912  0033AC  6F89               	movwf	triggerCmdFsm@receivedNumber& (0+255),b
  5913  0033AE  0E04               	movlw	high _receivedNumber
  5914  0033B0  6F8A               	movwf	(triggerCmdFsm@receivedNumber+1)& (0+255),b
  5915  0033B2  ECD1  F02A         	call	_triggerCmdFsm	;wreg free
  5916  0033B6  0900               	iorlw	0
  5917  0033B8  B4D8               	btfsc	status,2,c
  5918  0033BA  0012               	return	
  5919                           
  5920                           ;app.c: 191: {
  5921                           ;app.c: 192: currentState = GATE_WAIT_EVENT;
  5922  0033BC  0E01               	movlw	1
  5923  0033BE  0101               	movlb	1	; () banked
  5924  0033C0  6FD9               	movwf	MyApp_Task@currentState& (0+255),b
  5925                           
  5926                           ; BSR set to: 1
  5927                           ;app.c: 193: }
  5928                           ;app.c: 194: break;
  5929  0033C2  0012               	return	
  5930  0033C4                     
  5931                           ; BSR set to: 1
  5932                           ;app.c: 197: if (Eeprom_Reset() == 0)
  5933                           
  5934                           ; BSR set to: 1
  5935  0033C4  EC41  F02D         	call	_Eeprom_Reset	;wreg free
  5936  0033C8  0900               	iorlw	0
  5937  0033CA  A4D8               	btfss	status,2,c
  5938  0033CC  0012               	return	
  5939                           
  5940                           ;app.c: 198: {
  5941                           ;app.c: 199: currentState = GATE_INIT;
  5942  0033CE  0E00               	movlw	0
  5943  0033D0  0101               	movlb	1	; () banked
  5944  0033D2  6FD9               	movwf	MyApp_Task@currentState& (0+255),b
  5945                           
  5946                           ; BSR set to: 1
  5947                           ;app.c: 205: }
  5948                           
  5949                           ; BSR set to: 1
  5950                           ;app.c: 204: break;
  5951                           
  5952                           ;app.c: 203: default:
  5953                           
  5954                           ; BSR set to: 1
  5955                           ;app.c: 200: }
  5956                           ;app.c: 201: break;
  5957  0033D4  0012               	return	
  5958  0033D6                     
  5959                           ; BSR set to: 1
  5960  0033D6  0101               	movlb	1	; () banked
  5961  0033D8  51D9               	movf	MyApp_Task@currentState& (0+255),w,b
  5962                           
  5963                           ; Switch size 1, requested type "space"
  5964                           ; Number of cases is 6, Range of values is 0 to 5
  5965                           ; switch strategies available:
  5966                           ; Name         Instructions Cycles
  5967                           ; simple_byte           19    10 (average)
  5968                           ;	Chosen strategy is simple_byte
  5969  0033DA  0A00               	xorlw	0	; case 0
  5970  0033DC  B4D8               	btfsc	status,2,c
  5971  0033DE  D7B4               	goto	l2596
  5972  0033E0  0A01               	xorlw	1	; case 1
  5973  0033E2  B4D8               	btfsc	status,2,c
  5974  0033E4  D7BA               	goto	l2599
  5975  0033E6  0A03               	xorlw	3	; case 2
  5976  0033E8  B4D8               	btfsc	status,2,c
  5977  0033EA  D7BC               	goto	l2600
  5978  0033EC  0A01               	xorlw	1	; case 3
  5979  0033EE  B4D8               	btfsc	status,2,c
  5980  0033F0  D7CA               	goto	l2602
  5981  0033F2  0A07               	xorlw	7	; case 4
  5982  0033F4  B4D8               	btfsc	status,2,c
  5983  0033F6  D7D8               	goto	l2604
  5984  0033F8  0A01               	xorlw	1	; case 5
  5985  0033FA  A4D8               	btfss	status,2,c
  5986                           
  5987                           ; BSR set to: 1
  5988                           ;app.c: 211: }
  5989                           
  5990                           ; BSR set to: 1
  5991                           ;app.c: 210: break;
  5992                           
  5993                           ;app.c: 209: default:
  5994                           
  5995                           ; BSR set to: 1
  5996                           ;app.c: 206: break;
  5997  0033FC  0012               	return	
  5998  0033FE  D7E2               	goto	l2606
  5999  003400                     l2591:
  6000                           
  6001                           ; BSR set to: 1
  6002  003400  0100               	movlb	0	; () banked
  6003  003402  51D4               	movf	_SystemState& (0+255),w,b
  6004                           
  6005                           ; Switch size 1, requested type "space"
  6006                           ; Number of cases is 2, Range of values is 0 to 1
  6007                           ; switch strategies available:
  6008                           ; Name         Instructions Cycles
  6009                           ; simple_byte            7     4 (average)
  6010                           ;	Chosen strategy is simple_byte
  6011  003404  0A00               	xorlw	0	; case 0
  6012  003406  B4D8               	btfsc	status,2,c
  6013  003408  D792               	goto	l2592
  6014  00340A  0A01               	xorlw	1	; case 1
  6015  00340C  A4D8               	btfss	status,2,c
  6016  00340E  0012               	return	
  6017  003410  D7E2               	goto	l2595
  6018  003412                     __end_of_MyApp_Task:
  6019                           	opt stack 0
  6020                           tosu	equ	0xFFF
  6021                           tosh	equ	0xFFE
  6022                           tosl	equ	0xFFD
  6023                           pclath	equ	0xFFA
  6024                           tblptru	equ	0xFF8
  6025                           tblptrh	equ	0xFF7
  6026                           tblptrl	equ	0xFF6
  6027                           tablat	equ	0xFF5
  6028                           prodh	equ	0xFF4
  6029                           prodl	equ	0xFF3
  6030                           intcon	equ	0xFF2
  6031                           intcon2	equ	0xFF1
  6032                           intcon3	equ	0xFF0
  6033                           postinc0	equ	0xFEE
  6034                           wreg	equ	0xFE8
  6035                           postinc1	equ	0xFE6
  6036                           postdec1	equ	0xFE5
  6037                           fsr1h	equ	0xFE2
  6038                           fsr1l	equ	0xFE1
  6039                           indf2	equ	0xFDF
  6040                           postinc2	equ	0xFDE
  6041                           postdec2	equ	0xFDD
  6042                           fsr2h	equ	0xFDA
  6043                           fsr2l	equ	0xFD9
  6044                           status	equ	0xFD8
  6045                           
  6046 ;; *************** function _Term_MainTask *****************
  6047 ;; Defined at:
  6048 ;;		line 845 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/term.c"
  6049 ;; Parameters:    Size  Location     Type
  6050 ;;  Options         1    wreg     unsigned char 
  6051 ;; Auto vars:     Size  Location     Type
  6052 ;;  Options         1    0[COMRAM] unsigned char 
  6053 ;; Return value:  Size  Location     Type
  6054 ;;                  1    wreg      void 
  6055 ;; Registers used:
  6056 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6057 ;; Tracked objects:
  6058 ;;		On entry : 0/0
  6059 ;;		On exit  : 0/0
  6060 ;;		Unchanged: 0/0
  6061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6062 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6063 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6064 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6065 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6066 ;;Total ram usage:        0 bytes
  6067 ;; Hardware stack levels used:    1
  6068 ;; Hardware stack levels required when called:   17
  6069 ;; This function calls:
  6070 ;;		_Term_MainSm
  6071 ;; This function is called by:
  6072 ;;		_InitializeTasks
  6073 ;;		_ScheduleTasks
  6074 ;; This function uses a non-reentrant model
  6075 ;;
  6076                           
  6077                           	psect	text17
  6078  006926                     __ptext17:
  6079                           	opt stack 0
  6080  006926                     _Term_MainTask:
  6081                           	opt stack 11
  6082                           
  6083                           ;term.c: 847: switch (SystemState)
  6084                           
  6085                           ;incstack = 0
  6086  006926  D003               	goto	l2490
  6087  006928                     
  6088                           ;term.c: 858: Term_MainSm();
  6089  006928  EC5B  F008         	call	_Term_MainSm	;wreg free
  6090                           
  6091                           ;term.c: 865: }
  6092                           
  6093                           ;term.c: 864: break;
  6094                           
  6095                           ;term.c: 863: default:
  6096                           
  6097                           ;term.c: 860: break;
  6098  00692C  0012               	return	
  6099  00692E                     l2490:
  6100  00692E  0100               	movlb	0	; () banked
  6101  006930  51D4               	movf	_SystemState& (0+255),w,b
  6102                           
  6103                           ; Switch size 1, requested type "space"
  6104                           ; Number of cases is 2, Range of values is 0 to 1
  6105                           ; switch strategies available:
  6106                           ; Name         Instructions Cycles
  6107                           ; simple_byte            7     4 (average)
  6108                           ;	Chosen strategy is simple_byte
  6109  006932  0A00               	xorlw	0	; case 0
  6110  006934  B4D8               	btfsc	status,2,c
  6111  006936  0012               	return	
  6112  006938  0A01               	xorlw	1	; case 1
  6113  00693A  A4D8               	btfss	status,2,c
  6114  00693C  0012               	return	
  6115  00693E  D7F4               	goto	l2493
  6116  006940                     __end_of_Term_MainTask:
  6117                           	opt stack 0
  6118                           tosu	equ	0xFFF
  6119                           tosh	equ	0xFFE
  6120                           tosl	equ	0xFFD
  6121                           pclath	equ	0xFFA
  6122                           tblptru	equ	0xFF8
  6123                           tblptrh	equ	0xFF7
  6124                           tblptrl	equ	0xFF6
  6125                           tablat	equ	0xFF5
  6126                           prodh	equ	0xFF4
  6127                           prodl	equ	0xFF3
  6128                           intcon	equ	0xFF2
  6129                           intcon2	equ	0xFF1
  6130                           intcon3	equ	0xFF0
  6131                           postinc0	equ	0xFEE
  6132                           wreg	equ	0xFE8
  6133                           postinc1	equ	0xFE6
  6134                           postdec1	equ	0xFE5
  6135                           fsr1h	equ	0xFE2
  6136                           fsr1l	equ	0xFE1
  6137                           indf2	equ	0xFDF
  6138                           postinc2	equ	0xFDE
  6139                           postdec2	equ	0xFDD
  6140                           fsr2h	equ	0xFDA
  6141                           fsr2l	equ	0xFD9
  6142                           status	equ	0xFD8
  6143                           
  6144 ;; *************** function _Rtcm_MainTask *****************
  6145 ;; Defined at:
  6146 ;;		line 99 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/rtcm.c"
  6147 ;; Parameters:    Size  Location     Type
  6148 ;;  Options         1    wreg     unsigned char 
  6149 ;; Auto vars:     Size  Location     Type
  6150 ;;  Options         1    0[COMRAM] unsigned char 
  6151 ;; Return value:  Size  Location     Type
  6152 ;;                  1    wreg      void 
  6153 ;; Registers used:
  6154 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6155 ;; Tracked objects:
  6156 ;;		On entry : 0/0
  6157 ;;		On exit  : 0/0
  6158 ;;		Unchanged: 0/0
  6159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6160 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6161 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6162 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6163 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6164 ;;Total ram usage:        0 bytes
  6165 ;; Hardware stack levels used:    1
  6166 ;; Hardware stack levels required when called:   14
  6167 ;; This function calls:
  6168 ;;		_Rtcc_AlarmConfig
  6169 ;;		_Rtcc_LockRtc
  6170 ;;		_Rtcc_RtcConfig
  6171 ;;		_Rtcc_SetRtcStatus
  6172 ;;		_Rtcc_UnlockRtc
  6173 ;;		_Rtcm_GetRtccDate
  6174 ;;		_Rtcm_SetRtccDate
  6175 ;; This function is called by:
  6176 ;;		_InitializeTasks
  6177 ;;		_ScheduleTasks
  6178 ;; This function uses a non-reentrant model
  6179 ;;
  6180                           
  6181                           	psect	text18
  6182  005062                     __ptext18:
  6183                           	opt stack 0
  6184  005062                     _Rtcm_MainTask:
  6185                           	opt stack 14
  6186                           
  6187                           ;rtcm.c: 101: switch (SystemState)
  6188                           
  6189                           ;incstack = 0
  6190  005062  D03D               	goto	l2220
  6191  005064                     l2221:
  6192                           
  6193                           ; BSR set to: 0
  6194                           ;rtcm.c: 106: T1CONbits.T1OSCEN = 1u;
  6195  005064  86CD               	bsf	4045,3,c	;volatile
  6196                           
  6197                           ; BSR set to: 0
  6198                           ;rtcm.c: 108: RtcConfig.RtcOutPinEnable = 0u;
  6199  005066  0E00               	movlw	0
  6200  005068  0103               	movlb	3	; () banked
  6201  00506A  6FBC               	movwf	_RtcConfig& (0+255),b
  6202                           
  6203                           ;rtcm.c: 109: RtcConfig.RtcOutputSelectBit = RtccAlarmPulseOnRtccPin;
  6204  00506C  0E00               	movlw	0
  6205  00506E  6FBD               	movwf	(_RtcConfig+1)& (0+255),b
  6206                           
  6207                           ;rtcm.c: 110: RtcConfig.IntEnable = EnableInt;
  6208  005070  0E01               	movlw	1
  6209  005072  6FBE               	movwf	(_RtcConfig+2)& (0+255),b
  6210                           
  6211                           ;rtcm.c: 111: RtcConfig.IntPriority = 1u;
  6212  005074  0E01               	movlw	1
  6213  005076  6FBF               	movwf	(_RtcConfig+3)& (0+255),b
  6214                           
  6215                           ;rtcm.c: 114: AlCfg.RtcAlarmEnable = 1u;
  6216  005078  0E01               	movlw	1
  6217  00507A  6FB8               	movwf	_AlCfg& (0+255),b
  6218                           
  6219                           ;rtcm.c: 115: AlCfg.RtcChimeEnable = 1u;
  6220  00507C  0E01               	movlw	1
  6221  00507E  6FB9               	movwf	(_AlCfg+1)& (0+255),b
  6222                           
  6223                           ;rtcm.c: 116: AlCfg.AlarmMask = EverySecond;
  6224  005080  0E01               	movlw	1
  6225  005082  6FBA               	movwf	(_AlCfg+2)& (0+255),b
  6226                           
  6227                           ;rtcm.c: 117: AlCfg.AlarmRepeat = 0;
  6228  005084  0E00               	movlw	0
  6229  005086  6FBB               	movwf	(_AlCfg+3)& (0+255),b
  6230                           
  6231                           ; BSR set to: 3
  6232                           ;rtcm.c: 120: Rtcc_UnlockRtc();
  6233  005088  EC2F  F035         	call	_Rtcc_UnlockRtc	;wreg free
  6234                           
  6235                           ;rtcm.c: 122: Rtcc_RtcConfig(&RtcConfig);
  6236  00508C  0EBC               	movlw	low _RtcConfig
  6237  00508E  0100               	movlb	0	; () banked
  6238  005090  6F7E               	movwf	Rtcc_RtcConfig@RtcConfig& (0+255),b
  6239  005092  0E03               	movlw	high _RtcConfig
  6240  005094  6F7F               	movwf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),b
  6241  005096  EC60  F024         	call	_Rtcc_RtcConfig	;wreg free
  6242                           
  6243                           ;rtcm.c: 123: Rtcc_AlarmConfig(&AlCfg);
  6244  00509A  0EB8               	movlw	low _AlCfg
  6245  00509C  0100               	movlb	0	; () banked
  6246  00509E  6F7D               	movwf	Rtcc_AlarmConfig@AlarmConfig& (0+255),b
  6247  0050A0  0E03               	movlw	high _AlCfg
  6248  0050A2  6F7E               	movwf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),b
  6249  0050A4  EC9B  F02A         	call	_Rtcc_AlarmConfig	;wreg free
  6250                           
  6251                           ;rtcm.c: 125: Rtcc_SetRtcStatus(1u);
  6252  0050A8  0E01               	movlw	1
  6253  0050AA  ECDE  F034         	call	_Rtcc_SetRtcStatus
  6254                           
  6255                           ;rtcm.c: 127: Rtcc_LockRtc();
  6256  0050AE  EC37  F035         	call	_Rtcc_LockRtc	;wreg free
  6257                           
  6258                           ;rtcm.c: 129: Rtcm_SetRtccDate(Rtcm_SystemDate);
  6259  0050B2  EE24  F059         	lfsr	2,_Rtcm_SystemDate
  6260  0050B6  EE00  F089         	lfsr	0,Rtcm_SetRtccDate@Date
  6261  0050BA  0E07               	movlw	7
  6262  0050BC                     u16311:
  6263  0050BC  CFDB FFEB          	movff	plusw2,plusw0
  6264  0050C0  06E8               	decf	wreg,f,c
  6265  0050C2  E2FC               	bc	u16311
  6266  0050C4  EC96  F02D         	call	_Rtcm_SetRtccDate	;wreg free
  6267                           
  6268                           ;rtcm.c: 154: break;
  6269  0050C8  0012               	return	
  6270  0050CA                     
  6271                           ;rtcm.c: 159: Rtcm_SystemDate = Rtcm_GetRtccDate();
  6272  0050CA  EC6E  F02B         	call	_Rtcm_GetRtccDate	;wreg free
  6273  0050CE  EE24  F059         	lfsr	2,_Rtcm_SystemDate
  6274  0050D2  0E07               	movlw	7
  6275  0050D4                     u16321:
  6276  0050D4  CFEB FFDB          	movff	plusw0,plusw2
  6277  0050D8  06E8               	decf	wreg,f,c
  6278  0050DA  E2FC               	bc	u16321
  6279                           
  6280                           ;rtcm.c: 165: }
  6281                           
  6282                           ;rtcm.c: 164: break;
  6283                           
  6284                           ;rtcm.c: 163: default:
  6285                           
  6286                           ;rtcm.c: 160: break;
  6287  0050DC  0012               	return	
  6288  0050DE                     l2220:
  6289  0050DE  0100               	movlb	0	; () banked
  6290  0050E0  51D4               	movf	_SystemState& (0+255),w,b
  6291                           
  6292                           ; Switch size 1, requested type "space"
  6293                           ; Number of cases is 2, Range of values is 0 to 1
  6294                           ; switch strategies available:
  6295                           ; Name         Instructions Cycles
  6296                           ; simple_byte            7     4 (average)
  6297                           ;	Chosen strategy is simple_byte
  6298  0050E2  0A00               	xorlw	0	; case 0
  6299  0050E4  B4D8               	btfsc	status,2,c
  6300  0050E6  D7BE               	goto	l2221
  6301  0050E8  0A01               	xorlw	1	; case 1
  6302  0050EA  A4D8               	btfss	status,2,c
  6303  0050EC  0012               	return	
  6304  0050EE  D7ED               	goto	l2223
  6305  0050F0                     __end_of_Rtcm_MainTask:
  6306                           	opt stack 0
  6307                           tosu	equ	0xFFF
  6308                           tosh	equ	0xFFE
  6309                           tosl	equ	0xFFD
  6310                           pclath	equ	0xFFA
  6311                           tblptru	equ	0xFF8
  6312                           tblptrh	equ	0xFF7
  6313                           tblptrl	equ	0xFF6
  6314                           tablat	equ	0xFF5
  6315                           prodh	equ	0xFF4
  6316                           prodl	equ	0xFF3
  6317                           intcon	equ	0xFF2
  6318                           intcon2	equ	0xFF1
  6319                           intcon3	equ	0xFF0
  6320                           postinc0	equ	0xFEE
  6321                           plusw0	equ	0xFEB
  6322                           wreg	equ	0xFE8
  6323                           postinc1	equ	0xFE6
  6324                           postdec1	equ	0xFE5
  6325                           fsr1h	equ	0xFE2
  6326                           fsr1l	equ	0xFE1
  6327                           indf2	equ	0xFDF
  6328                           postinc2	equ	0xFDE
  6329                           postdec2	equ	0xFDD
  6330                           plusw2	equ	0xFDB
  6331                           fsr2h	equ	0xFDA
  6332                           fsr2l	equ	0xFD9
  6333                           status	equ	0xFD8
  6334                           
  6335 ;; *************** function _Led_MainTask *****************
  6336 ;; Defined at:
  6337 ;;		line 298 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
  6338 ;; Parameters:    Size  Location     Type
  6339 ;;  Options         1    wreg     unsigned char 
  6340 ;; Auto vars:     Size  Location     Type
  6341 ;;  Options         1    0[COMRAM] unsigned char 
  6342 ;; Return value:  Size  Location     Type
  6343 ;;                  1    wreg      void 
  6344 ;; Registers used:
  6345 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6346 ;; Tracked objects:
  6347 ;;		On entry : 0/0
  6348 ;;		On exit  : 0/0
  6349 ;;		Unchanged: 0/0
  6350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6351 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6352 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6353 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6354 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6355 ;;Total ram usage:        1 bytes
  6356 ;; Hardware stack levels used:    1
  6357 ;; Hardware stack levels required when called:   14
  6358 ;; This function calls:
  6359 ;;		_LedStateMachine
  6360 ;; This function is called by:
  6361 ;;		_InitializeTasks
  6362 ;;		_ScheduleTasks
  6363 ;; This function uses a non-reentrant model
  6364 ;;
  6365                           
  6366                           	psect	text19
  6367  003BB6                     __ptext19:
  6368                           	opt stack 0
  6369  003BB6                     _Led_MainTask:
  6370                           	opt stack 14
  6371                           
  6372                           ;led.c: 300: switch (SystemState)
  6373                           
  6374                           ;incstack = 0
  6375  003BB6  D05C               	goto	l2134
  6376  003BB8                     l2135:
  6377                           
  6378                           ; BSR set to: 0
  6379                           ;led.c: 305: TRISDbits.TRISD4 = ((UINT8)(0));
  6380  003BB8  9895               	bcf	3989,4,c	;volatile
  6381                           
  6382                           ;led.c: 306: TRISDbits.TRISD5 = ((UINT8)(0));
  6383  003BBA  9A95               	bcf	3989,5,c	;volatile
  6384                           
  6385                           ;led.c: 307: TRISDbits.TRISD6 = ((UINT8)(0));
  6386  003BBC  9C95               	bcf	3989,6,c	;volatile
  6387                           
  6388                           ;led.c: 308: PORTDbits.RD4 = ((UINT8)(0));
  6389  003BBE  9883               	bcf	3971,4,c	;volatile
  6390                           
  6391                           ;led.c: 309: PORTDbits.RD5 = ((UINT8)(0));
  6392  003BC0  9A83               	bcf	3971,5,c	;volatile
  6393                           
  6394                           ;led.c: 310: PORTDbits.RD6 = ((UINT8)(0));
  6395  003BC2  9C83               	bcf	3971,6,c	;volatile
  6396                           
  6397                           ;led.c: 311: break;
  6398  003BC4  0012               	return	
  6399  003BC6                     
  6400                           ; BSR set to: 0
  6401                           ;led.c: 316: PORTDbits.RD4 = LedStateMachine(1u,&Led1Sts,&Led1OutSts,&Led1Blink,&Led1Pul
      +                          se);
  6402                           
  6403                           ; BSR set to: 0
  6404  003BC6  0EFA               	movlw	low _Led1Sts
  6405  003BC8  6F8F               	movwf	LedStateMachine@LedSts& (0+255),b
  6406  003BCA  0E01               	movlw	high _Led1Sts
  6407  003BCC  6F90               	movwf	(LedStateMachine@LedSts+1)& (0+255),b
  6408  003BCE  0EF9               	movlw	low _Led1OutSts
  6409  003BD0  6F91               	movwf	LedStateMachine@LedOut& (0+255),b
  6410  003BD2  0E01               	movlw	high _Led1OutSts
  6411  003BD4  6F92               	movwf	(LedStateMachine@LedOut+1)& (0+255),b
  6412  003BD6  0E72               	movlw	low _Led1Blink
  6413  003BD8  6F93               	movwf	LedStateMachine@LedBlink& (0+255),b
  6414  003BDA  0E03               	movlw	high _Led1Blink
  6415  003BDC  6F94               	movwf	(LedStateMachine@LedBlink+1)& (0+255),b
  6416  003BDE  0E96               	movlw	low _Led1Pulse
  6417  003BE0  6F95               	movwf	LedStateMachine@LedPulse& (0+255),b
  6418  003BE2  0E03               	movlw	high _Led1Pulse
  6419  003BE4  6F96               	movwf	(LedStateMachine@LedPulse+1)& (0+255),b
  6420  003BE6  0E01               	movlw	1
  6421  003BE8  ECBB  F023         	call	_LedStateMachine
  6422  003BEC  0100               	movlb	0	; () banked
  6423  003BEE  6F9A               	movwf	??_Led_MainTask& (0+255),b
  6424  003BF0  3B9A               	swapf	??_Led_MainTask& (0+255),f,b
  6425  003BF2  5083               	movf	3971,w,c	;volatile
  6426  003BF4  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6427  003BF6  0BEF               	andlw	-17
  6428  003BF8  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6429  003BFA  6E83               	movwf	3971,c	;volatile
  6430                           
  6431                           ;led.c: 318: PORTDbits.RD5 = LedStateMachine(2u,&Led2Sts,&Led2OutSts,&Led2Blink,&Led2Pul
      +                          se);
  6432  003BFC  0EF8               	movlw	low _Led2Sts
  6433  003BFE  6F8F               	movwf	LedStateMachine@LedSts& (0+255),b
  6434  003C00  0E01               	movlw	high _Led2Sts
  6435  003C02  6F90               	movwf	(LedStateMachine@LedSts+1)& (0+255),b
  6436  003C04  0EF7               	movlw	low _Led2OutSts
  6437  003C06  6F91               	movwf	LedStateMachine@LedOut& (0+255),b
  6438  003C08  0E01               	movlw	high _Led2OutSts
  6439  003C0A  6F92               	movwf	(LedStateMachine@LedOut+1)& (0+255),b
  6440  003C0C  0E69               	movlw	low _Led2Blink
  6441  003C0E  6F93               	movwf	LedStateMachine@LedBlink& (0+255),b
  6442  003C10  0E03               	movlw	high _Led2Blink
  6443  003C12  6F94               	movwf	(LedStateMachine@LedBlink+1)& (0+255),b
  6444  003C14  0E90               	movlw	low _Led2Pulse
  6445  003C16  6F95               	movwf	LedStateMachine@LedPulse& (0+255),b
  6446  003C18  0E03               	movlw	high _Led2Pulse
  6447  003C1A  6F96               	movwf	(LedStateMachine@LedPulse+1)& (0+255),b
  6448  003C1C  0E02               	movlw	2
  6449  003C1E  ECBB  F023         	call	_LedStateMachine
  6450  003C22  0100               	movlb	0	; () banked
  6451  003C24  6F9A               	movwf	??_Led_MainTask& (0+255),b
  6452  003C26  3B9A               	swapf	??_Led_MainTask& (0+255),f,b
  6453  003C28  479A               	rlncf	??_Led_MainTask& (0+255),f,b
  6454  003C2A  5083               	movf	3971,w,c	;volatile
  6455  003C2C  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6456  003C2E  0BDF               	andlw	-33
  6457  003C30  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6458  003C32  6E83               	movwf	3971,c	;volatile
  6459                           
  6460                           ;led.c: 320: PORTDbits.RD6 = LedStateMachine(3u,&Led3Sts,&Led3OutSts,&Led3Blink,&Led3Pul
      +                          se);
  6461  003C34  0EF6               	movlw	low _Led3Sts
  6462  003C36  6F8F               	movwf	LedStateMachine@LedSts& (0+255),b
  6463  003C38  0E01               	movlw	high _Led3Sts
  6464  003C3A  6F90               	movwf	(LedStateMachine@LedSts+1)& (0+255),b
  6465  003C3C  0EF5               	movlw	low _Led3OutSts
  6466  003C3E  6F91               	movwf	LedStateMachine@LedOut& (0+255),b
  6467  003C40  0E01               	movlw	high _Led3OutSts
  6468  003C42  6F92               	movwf	(LedStateMachine@LedOut+1)& (0+255),b
  6469  003C44  0E60               	movlw	low _Led3Blink
  6470  003C46  6F93               	movwf	LedStateMachine@LedBlink& (0+255),b
  6471  003C48  0E03               	movlw	high _Led3Blink
  6472  003C4A  6F94               	movwf	(LedStateMachine@LedBlink+1)& (0+255),b
  6473  003C4C  0E8A               	movlw	low _Led3Pulse
  6474  003C4E  6F95               	movwf	LedStateMachine@LedPulse& (0+255),b
  6475  003C50  0E03               	movlw	high _Led3Pulse
  6476  003C52  6F96               	movwf	(LedStateMachine@LedPulse+1)& (0+255),b
  6477  003C54  0E03               	movlw	3
  6478  003C56  ECBB  F023         	call	_LedStateMachine
  6479  003C5A  0100               	movlb	0	; () banked
  6480  003C5C  6F9A               	movwf	??_Led_MainTask& (0+255),b
  6481  003C5E  3B9A               	swapf	??_Led_MainTask& (0+255),f,b
  6482  003C60  479A               	rlncf	??_Led_MainTask& (0+255),f,b
  6483  003C62  479A               	rlncf	??_Led_MainTask& (0+255),f,b
  6484  003C64  5083               	movf	3971,w,c	;volatile
  6485  003C66  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6486  003C68  0BBF               	andlw	-65
  6487  003C6A  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6488  003C6C  6E83               	movwf	3971,c	;volatile
  6489                           
  6490                           ; BSR set to: 0
  6491                           ;led.c: 326: }
  6492                           
  6493                           ; BSR set to: 0
  6494                           ;led.c: 325: break;
  6495                           
  6496                           ;led.c: 324: default:
  6497                           
  6498                           ;led.c: 321: break;
  6499  003C6E  0012               	return	
  6500  003C70                     l2134:
  6501                           
  6502                           ; BSR set to: 0
  6503  003C70  0100               	movlb	0	; () banked
  6504  003C72  51D4               	movf	_SystemState& (0+255),w,b
  6505                           
  6506                           ; Switch size 1, requested type "space"
  6507                           ; Number of cases is 2, Range of values is 0 to 1
  6508                           ; switch strategies available:
  6509                           ; Name         Instructions Cycles
  6510                           ; simple_byte            7     4 (average)
  6511                           ;	Chosen strategy is simple_byte
  6512  003C74  0A00               	xorlw	0	; case 0
  6513  003C76  B4D8               	btfsc	status,2,c
  6514  003C78  D79F               	goto	l2135
  6515  003C7A  0A01               	xorlw	1	; case 1
  6516  003C7C  A4D8               	btfss	status,2,c
  6517  003C7E  0012               	return	
  6518  003C80  D7A2               	goto	l2137
  6519  003C82                     __end_of_Led_MainTask:
  6520                           	opt stack 0
  6521                           tosu	equ	0xFFF
  6522                           tosh	equ	0xFFE
  6523                           tosl	equ	0xFFD
  6524                           pclath	equ	0xFFA
  6525                           tblptru	equ	0xFF8
  6526                           tblptrh	equ	0xFF7
  6527                           tblptrl	equ	0xFF6
  6528                           tablat	equ	0xFF5
  6529                           prodh	equ	0xFF4
  6530                           prodl	equ	0xFF3
  6531                           intcon	equ	0xFF2
  6532                           intcon2	equ	0xFF1
  6533                           intcon3	equ	0xFF0
  6534                           postinc0	equ	0xFEE
  6535                           plusw0	equ	0xFEB
  6536                           wreg	equ	0xFE8
  6537                           postinc1	equ	0xFE6
  6538                           postdec1	equ	0xFE5
  6539                           fsr1h	equ	0xFE2
  6540                           fsr1l	equ	0xFE1
  6541                           indf2	equ	0xFDF
  6542                           postinc2	equ	0xFDE
  6543                           postdec2	equ	0xFDD
  6544                           plusw2	equ	0xFDB
  6545                           fsr2h	equ	0xFDA
  6546                           fsr2l	equ	0xFD9
  6547                           status	equ	0xFD8
  6548                           
  6549 ;; *************** function _UsbDevice_MainTask *****************
  6550 ;; Defined at:
  6551 ;;		line 72 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_mgr.c"
  6552 ;; Parameters:    Size  Location     Type
  6553 ;;  Options         1    wreg     unsigned char 
  6554 ;; Auto vars:     Size  Location     Type
  6555 ;;  Options         1    0[COMRAM] unsigned char 
  6556 ;; Return value:  Size  Location     Type
  6557 ;;                  1    wreg      void 
  6558 ;; Registers used:
  6559 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6560 ;; Tracked objects:
  6561 ;;		On entry : 0/0
  6562 ;;		On exit  : 0/0
  6563 ;;		Unchanged: 0/0
  6564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6565 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6566 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6568 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6569 ;;Total ram usage:        0 bytes
  6570 ;; Hardware stack levels used:    1
  6571 ;; Hardware stack levels required when called:   20
  6572 ;; This function calls:
  6573 ;;		_CDCTxService
  6574 ;;		_USBDeviceInit
  6575 ;;		_USBDeviceTasks
  6576 ;; This function is called by:
  6577 ;;		_InitializeTasks
  6578 ;;		_ScheduleTasks
  6579 ;; This function uses a non-reentrant model
  6580 ;;
  6581                           
  6582                           	psect	text20
  6583  0066BE                     __ptext20:
  6584                           	opt stack 0
  6585  0066BE                     _UsbDevice_MainTask:
  6586                           	opt stack 8
  6587                           
  6588                           ;usb_device_mgr.c: 74: switch (SystemState)
  6589                           
  6590                           ; BSR set to: 0
  6591                           ;incstack = 0
  6592  0066BE  D008               	goto	l1992
  6593  0066C0                     
  6594                           ;usb_device_mgr.c: 79: USBDeviceInit();
  6595  0066C0  ECC5  F012         	call	_USBDeviceInit	;wreg free
  6596                           
  6597                           ;usb_device_mgr.c: 80: ;
  6598                           ;usb_device_mgr.c: 81: break;
  6599  0066C4  0012               	return	
  6600  0066C6                     
  6601                           ;usb_device_mgr.c: 86: USBDeviceTasks();
  6602  0066C6  ECD5  F00D         	call	_USBDeviceTasks	;wreg free
  6603                           
  6604                           ;usb_device_mgr.c: 90: CDCTxService();
  6605  0066CA  EC12  F014         	call	_CDCTxService	;wreg free
  6606                           
  6607                           ;usb_device_mgr.c: 101: }
  6608                           
  6609                           ;usb_device_mgr.c: 100: break;
  6610                           
  6611                           ;usb_device_mgr.c: 99: default:
  6612                           
  6613                           ;usb_device_mgr.c: 96: break;
  6614  0066CE  0012               	return	
  6615  0066D0                     l1992:
  6616  0066D0  0100               	movlb	0	; () banked
  6617  0066D2  51D4               	movf	_SystemState& (0+255),w,b
  6618                           
  6619                           ; Switch size 1, requested type "space"
  6620                           ; Number of cases is 2, Range of values is 0 to 1
  6621                           ; switch strategies available:
  6622                           ; Name         Instructions Cycles
  6623                           ; simple_byte            7     4 (average)
  6624                           ;	Chosen strategy is simple_byte
  6625  0066D4  0A00               	xorlw	0	; case 0
  6626  0066D6  B4D8               	btfsc	status,2,c
  6627  0066D8  D7F3               	goto	l1993
  6628  0066DA  0A01               	xorlw	1	; case 1
  6629  0066DC  A4D8               	btfss	status,2,c
  6630  0066DE  0012               	return	
  6631  0066E0  D7F2               	goto	l1995
  6632  0066E2                     __end_of_UsbDevice_MainTask:
  6633                           	opt stack 0
  6634                           tosu	equ	0xFFF
  6635                           tosh	equ	0xFFE
  6636                           tosl	equ	0xFFD
  6637                           pclath	equ	0xFFA
  6638                           tblptru	equ	0xFF8
  6639                           tblptrh	equ	0xFF7
  6640                           tblptrl	equ	0xFF6
  6641                           tablat	equ	0xFF5
  6642                           prodh	equ	0xFF4
  6643                           prodl	equ	0xFF3
  6644                           intcon	equ	0xFF2
  6645                           intcon2	equ	0xFF1
  6646                           intcon3	equ	0xFF0
  6647                           postinc0	equ	0xFEE
  6648                           plusw0	equ	0xFEB
  6649                           wreg	equ	0xFE8
  6650                           postinc1	equ	0xFE6
  6651                           postdec1	equ	0xFE5
  6652                           fsr1h	equ	0xFE2
  6653                           fsr1l	equ	0xFE1
  6654                           indf2	equ	0xFDF
  6655                           postinc2	equ	0xFDE
  6656                           postdec2	equ	0xFDD
  6657                           plusw2	equ	0xFDB
  6658                           fsr2h	equ	0xFDA
  6659                           fsr2l	equ	0xFD9
  6660                           status	equ	0xFD8
  6661                           
  6662 ;; *************** function _MdmHttp_MainTask *****************
  6663 ;; Defined at:
  6664 ;;		line 557 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs_http.c"
  6665 ;; Parameters:    Size  Location     Type
  6666 ;;  Options         1    wreg     unsigned char 
  6667 ;; Auto vars:     Size  Location     Type
  6668 ;;  Options         1    0[COMRAM] unsigned char 
  6669 ;; Return value:  Size  Location     Type
  6670 ;;                  1    wreg      void 
  6671 ;; Registers used:
  6672 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6673 ;; Tracked objects:
  6674 ;;		On entry : 0/0
  6675 ;;		On exit  : 0/0
  6676 ;;		Unchanged: 0/0
  6677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6678 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6679 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6680 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6681 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6682 ;;Total ram usage:        0 bytes
  6683 ;; Hardware stack levels used:    1
  6684 ;; Hardware stack levels required when called:   15
  6685 ;; This function calls:
  6686 ;;		_HttpGetMethod
  6687 ;;		_InitGprsNetwork
  6688 ;; This function is called by:
  6689 ;;		_InitializeTasks
  6690 ;;		_ScheduleTasks
  6691 ;; This function uses a non-reentrant model
  6692 ;;
  6693                           
  6694                           	psect	text21
  6695  005FDA                     __ptext21:
  6696                           	opt stack 0
  6697  005FDA                     _MdmHttp_MainTask:
  6698                           	opt stack 13
  6699                           
  6700                           ;mdm_gsm_gprs_http.c: 559: switch (SystemState)
  6701                           
  6702                           ;incstack = 0
  6703  005FDA  D019               	goto	l1291
  6704  005FDC                     
  6705                           ;mdm_gsm_gprs_http.c: 569: if (MdmStatus == ModemConfigured)
  6706  005FDC  0E03               	movlw	3
  6707  005FDE  0100               	movlb	0	; () banked
  6708  005FE0  19D1               	xorwf	_MdmStatus& (0+255),w,b
  6709  005FE2  A4D8               	btfss	status,2,c
  6710  005FE4  0012               	return	
  6711                           
  6712                           ; BSR set to: 0
  6713                           ;mdm_gsm_gprs_http.c: 570: {
  6714                           ;mdm_gsm_gprs_http.c: 572: GprsNetworkSts = InitGprsNetwork(ApnLocal,ApnLenLocal);
  6715  005FE6  C31A  F09B         	movff	_ApnLocal,InitGprsNetwork@Apn
  6716  005FEA  C31B  F09C         	movff	_ApnLocal+1,InitGprsNetwork@Apn+1
  6717  005FEE  C1EC  F09D         	movff	_ApnLenLocal,InitGprsNetwork@ApnLen
  6718  005FF2  ECE4  F006         	call	_InitGprsNetwork	;wreg free
  6719  005FF6  0101               	movlb	1	; () banked
  6720  005FF8  6FEB               	movwf	_GprsNetworkSts& (0+255),b
  6721                           
  6722                           ;mdm_gsm_gprs_http.c: 574: HttpGetMethodSts = HttpGetMethod(&HttpGetDataLocal);
  6723  005FFA  0EA7               	movlw	low _HttpGetDataLocal
  6724  005FFC  0100               	movlb	0	; () banked
  6725  005FFE  6F9B               	movwf	HttpGetMethod@GetData& (0+255),b
  6726  006000  0E03               	movlw	high _HttpGetDataLocal
  6727  006002  6F9C               	movwf	(HttpGetMethod@GetData+1)& (0+255),b
  6728  006004  ECF6  F002         	call	_HttpGetMethod	;wreg free
  6729  006008  0101               	movlb	1	; () banked
  6730  00600A  6FEA               	movwf	_HttpGetMethodSts& (0+255),b
  6731                           
  6732                           ; BSR set to: 1
  6733                           ;mdm_gsm_gprs_http.c: 581: }
  6734                           
  6735                           ; BSR set to: 1
  6736                           ;mdm_gsm_gprs_http.c: 580: break;
  6737                           
  6738                           ;mdm_gsm_gprs_http.c: 579: default:
  6739                           
  6740                           ; BSR set to: 1
  6741                           ;mdm_gsm_gprs_http.c: 575: }
  6742                           ;mdm_gsm_gprs_http.c: 576: break;
  6743  00600C  0012               	return	
  6744  00600E                     l1291:
  6745                           
  6746                           ; BSR set to: 1
  6747  00600E  0100               	movlb	0	; () banked
  6748  006010  51D4               	movf	_SystemState& (0+255),w,b
  6749                           
  6750                           ; Switch size 1, requested type "space"
  6751                           ; Number of cases is 2, Range of values is 0 to 1
  6752                           ; switch strategies available:
  6753                           ; Name         Instructions Cycles
  6754                           ; simple_byte            7     4 (average)
  6755                           ;	Chosen strategy is simple_byte
  6756  006012  0A00               	xorlw	0	; case 0
  6757  006014  B4D8               	btfsc	status,2,c
  6758  006016  0012               	return	
  6759  006018  0A01               	xorlw	1	; case 1
  6760  00601A  A4D8               	btfss	status,2,c
  6761  00601C  0012               	return	
  6762  00601E  D7DE               	goto	l1294
  6763  006020                     __end_of_MdmHttp_MainTask:
  6764                           	opt stack 0
  6765                           tosu	equ	0xFFF
  6766                           tosh	equ	0xFFE
  6767                           tosl	equ	0xFFD
  6768                           pclath	equ	0xFFA
  6769                           tblptru	equ	0xFF8
  6770                           tblptrh	equ	0xFF7
  6771                           tblptrl	equ	0xFF6
  6772                           tablat	equ	0xFF5
  6773                           prodh	equ	0xFF4
  6774                           prodl	equ	0xFF3
  6775                           intcon	equ	0xFF2
  6776                           intcon2	equ	0xFF1
  6777                           intcon3	equ	0xFF0
  6778                           postinc0	equ	0xFEE
  6779                           plusw0	equ	0xFEB
  6780                           wreg	equ	0xFE8
  6781                           postinc1	equ	0xFE6
  6782                           postdec1	equ	0xFE5
  6783                           fsr1h	equ	0xFE2
  6784                           fsr1l	equ	0xFE1
  6785                           indf2	equ	0xFDF
  6786                           postinc2	equ	0xFDE
  6787                           postdec2	equ	0xFDD
  6788                           plusw2	equ	0xFDB
  6789                           fsr2h	equ	0xFDA
  6790                           fsr2l	equ	0xFD9
  6791                           status	equ	0xFD8
  6792                           
  6793 ;; *************** function _Mdm_MainTask *****************
  6794 ;; Defined at:
  6795 ;;		line 754 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
  6796 ;; Parameters:    Size  Location     Type
  6797 ;;  Options         1    wreg     unsigned char 
  6798 ;; Auto vars:     Size  Location     Type
  6799 ;;  Options         1    0[COMRAM] unsigned char 
  6800 ;; Return value:  Size  Location     Type
  6801 ;;                  1    wreg      void 
  6802 ;; Registers used:
  6803 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6804 ;; Tracked objects:
  6805 ;;		On entry : 0/0
  6806 ;;		On exit  : 0/0
  6807 ;;		Unchanged: 0/0
  6808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6809 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6810 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6811 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6812 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6813 ;;Total ram usage:        0 bytes
  6814 ;; Hardware stack levels used:    1
  6815 ;; Hardware stack levels required when called:   15
  6816 ;; This function calls:
  6817 ;;		_CheckModem
  6818 ;;		_ConfigureModem
  6819 ;;		_GetSmsSm
  6820 ;;		_ModemEvtParser
  6821 ;;		_SendSmsSm
  6822 ;;		_TurnOnModem
  6823 ;;		_UartSetConfig
  6824 ;;		_Uart_InitUartModule
  6825 ;; This function is called by:
  6826 ;;		_InitializeTasks
  6827 ;;		_ScheduleTasks
  6828 ;; This function uses a non-reentrant model
  6829 ;;
  6830                           
  6831                           	psect	text22
  6832  005D70                     __ptext22:
  6833                           	opt stack 0
  6834  005D70                     _Mdm_MainTask:
  6835                           	opt stack 13
  6836                           
  6837                           ;mdm_gsm_gprs.c: 756: switch (SystemState)
  6838                           
  6839                           ;incstack = 0
  6840  005D70  D01E               	goto	l1107
  6841  005D72                     
  6842                           ;mdm_gsm_gprs.c: 761: UartSetConfig();
  6843  005D72  EC91  F02C         	call	_UartSetConfig	;wreg free
  6844                           
  6845                           ;mdm_gsm_gprs.c: 763: Uart_InitUartModule(1,&UartConfig);
  6846  005D76  0E1C               	movlw	low _UartConfig
  6847  005D78  0100               	movlb	0	; () banked
  6848  005D7A  6F9D               	movwf	Uart_InitUartModule@UartConfig& (0+255),b
  6849  005D7C  0E03               	movlw	high _UartConfig
  6850  005D7E  6F9E               	movwf	(Uart_InitUartModule@UartConfig+1)& (0+255),b
  6851  005D80  0E01               	movlw	1
  6852  005D82  EC5E  F005         	call	_Uart_InitUartModule
  6853                           
  6854                           ;mdm_gsm_gprs.c: 764: break;
  6855  005D86  0012               	return	
  6856  005D88                     
  6857                           ;mdm_gsm_gprs.c: 769: CheckModem();
  6858  005D88  EC10  F010         	call	_CheckModem	;wreg free
  6859                           
  6860                           ;mdm_gsm_gprs.c: 771: if ((ComChecCompleted == 1u) && (MdmStatus == ModemOff))
  6861  005D8C  042B               	decf	_ComChecCompleted,w,c
  6862  005D8E  A4D8               	btfss	status,2,c
  6863  005D90  D005               	goto	l1111
  6864  005D92  0100               	movlb	0	; () banked
  6865  005D94  51D1               	movf	_MdmStatus& (0+255),w,b
  6866  005D96  B4D8               	btfsc	status,2,c
  6867                           
  6868                           ; BSR set to: 0
  6869                           ;mdm_gsm_gprs.c: 772: {
  6870                           ;mdm_gsm_gprs.c: 774: TurnOnModem();
  6871  005D98  ECA3  F02F         	call	_TurnOnModem	;wreg free
  6872  005D9C                     l1111:
  6873                           
  6874                           ;mdm_gsm_gprs.c: 775: }
  6875                           ;mdm_gsm_gprs.c: 777: ConfigureModem();
  6876  005D9C  EC39  F01C         	call	_ConfigureModem	;wreg free
  6877                           
  6878                           ;mdm_gsm_gprs.c: 779: ModemEvtParser();
  6879  005DA0  EC98  F00E         	call	_ModemEvtParser	;wreg free
  6880                           
  6881                           ;mdm_gsm_gprs.c: 781: GetSmsSm();
  6882  005DA4  EC51  F015         	call	_GetSmsSm	;wreg free
  6883                           
  6884                           ;mdm_gsm_gprs.c: 783: SendSmsSm();
  6885  005DA8  ECF9  F00C         	call	_SendSmsSm	;wreg free
  6886                           
  6887                           ;mdm_gsm_gprs.c: 789: }
  6888                           
  6889                           ;mdm_gsm_gprs.c: 788: break;
  6890                           
  6891                           ;mdm_gsm_gprs.c: 787: default:
  6892                           
  6893                           ;mdm_gsm_gprs.c: 784: break;
  6894  005DAC  0012               	return	
  6895  005DAE                     l1107:
  6896  005DAE  0100               	movlb	0	; () banked
  6897  005DB0  51D4               	movf	_SystemState& (0+255),w,b
  6898                           
  6899                           ; Switch size 1, requested type "space"
  6900                           ; Number of cases is 2, Range of values is 0 to 1
  6901                           ; switch strategies available:
  6902                           ; Name         Instructions Cycles
  6903                           ; simple_byte            7     4 (average)
  6904                           ;	Chosen strategy is simple_byte
  6905  005DB2  0A00               	xorlw	0	; case 0
  6906  005DB4  B4D8               	btfsc	status,2,c
  6907  005DB6  D7DD               	goto	l1108
  6908  005DB8  0A01               	xorlw	1	; case 1
  6909  005DBA  A4D8               	btfss	status,2,c
  6910  005DBC  0012               	return	
  6911  005DBE  D7E4               	goto	l1110
  6912  005DC0                     __end_of_Mdm_MainTask:
  6913                           	opt stack 0
  6914                           tosu	equ	0xFFF
  6915                           tosh	equ	0xFFE
  6916                           tosl	equ	0xFFD
  6917                           pclath	equ	0xFFA
  6918                           tblptru	equ	0xFF8
  6919                           tblptrh	equ	0xFF7
  6920                           tblptrl	equ	0xFF6
  6921                           tablat	equ	0xFF5
  6922                           prodh	equ	0xFF4
  6923                           prodl	equ	0xFF3
  6924                           intcon	equ	0xFF2
  6925                           intcon2	equ	0xFF1
  6926                           intcon3	equ	0xFF0
  6927                           postinc0	equ	0xFEE
  6928                           plusw0	equ	0xFEB
  6929                           wreg	equ	0xFE8
  6930                           postinc1	equ	0xFE6
  6931                           postdec1	equ	0xFE5
  6932                           fsr1h	equ	0xFE2
  6933                           fsr1l	equ	0xFE1
  6934                           indf2	equ	0xFDF
  6935                           postinc2	equ	0xFDE
  6936                           postdec2	equ	0xFDD
  6937                           plusw2	equ	0xFDB
  6938                           fsr2h	equ	0xFDA
  6939                           fsr2l	equ	0xFD9
  6940                           status	equ	0xFD8
  6941                           
  6942 ;; *************** function _I2cSlv_MainTask *****************
  6943 ;; Defined at:
  6944 ;;		line 215 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
  6945 ;; Parameters:    Size  Location     Type
  6946 ;;  Options         1    wreg     unsigned char 
  6947 ;; Auto vars:     Size  Location     Type
  6948 ;;  Options         1    0[COMRAM] unsigned char 
  6949 ;; Return value:  Size  Location     Type
  6950 ;;                  1    wreg      void 
  6951 ;; Registers used:
  6952 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6953 ;; Tracked objects:
  6954 ;;		On entry : 0/0
  6955 ;;		On exit  : 0/0
  6956 ;;		Unchanged: 0/0
  6957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6958 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6961 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6962 ;;Total ram usage:        0 bytes
  6963 ;; Hardware stack levels used:    1
  6964 ;; Hardware stack levels required when called:   14
  6965 ;; This function calls:
  6966 ;;		_I2cSendMsgSm
  6967 ;;		_I2cSetConfig
  6968 ;;		_I2c_InitI2cModule
  6969 ;;		_OsAlrm_SetOsAlarm
  6970 ;; This function is called by:
  6971 ;;		_InitializeTasks
  6972 ;;		_ScheduleTasks
  6973 ;; This function uses a non-reentrant model
  6974 ;;
  6975                           
  6976                           	psect	text23
  6977  005AD8                     __ptext23:
  6978                           	opt stack 0
  6979  005AD8                     _I2cSlv_MainTask:
  6980                           	opt stack 14
  6981                           
  6982                           ;i2c_slv.c: 217: switch (SystemState)
  6983                           
  6984                           ;incstack = 0
  6985  005AD8  D020               	goto	l1404
  6986  005ADA                     
  6987                           ;i2c_slv.c: 222: I2cSetConfig();
  6988  005ADA  ECF8  F032         	call	_I2cSetConfig	;wreg free
  6989                           
  6990                           ;i2c_slv.c: 224: I2c_InitI2cModule(&I2cConfig);
  6991  005ADE  0E56               	movlw	low _I2cConfig
  6992  005AE0  0100               	movlb	0	; () banked
  6993  005AE2  6FA2               	movwf	I2c_InitI2cModule@I2cConfig& (0+255),b
  6994  005AE4  0E03               	movlw	high _I2cConfig
  6995  005AE6  6FA3               	movwf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),b
  6996  005AE8  ECBD  F029         	call	_I2c_InitI2cModule	;wreg free
  6997                           
  6998                           ;i2c_slv.c: 226: OsAlrm_SetOsAlarm(0x00,50,&I2cDummyTx);
  6999  005AEC  0E00               	movlw	0
  7000  005AEE  0100               	movlb	0	; () banked
  7001  005AF0  6F84               	movwf	(OsAlrm_SetOsAlarm@OsAlarmId+1)& (0+255),b
  7002  005AF2  0E00               	movlw	0
  7003  005AF4  6F83               	movwf	OsAlrm_SetOsAlarm@OsAlarmId& (0+255),b
  7004  005AF6  0E32               	movlw	50
  7005  005AF8  6F85               	movwf	OsAlrm_SetOsAlarm@OsAlarmTimeout& (0+255),b
  7006  005AFA  0E00               	movlw	0
  7007  005AFC  6F86               	movwf	(OsAlrm_SetOsAlarm@OsAlarmTimeout+1)& (0+255),b
  7008  005AFE  0E00               	movlw	0
  7009  005B00  6F87               	movwf	(OsAlrm_SetOsAlarm@OsAlarmTimeout+2)& (0+255),b
  7010  005B02  0E00               	movlw	0
  7011  005B04  6F88               	movwf	(OsAlrm_SetOsAlarm@OsAlarmTimeout+3)& (0+255),b
  7012  005B06  0EF0               	movlw	low _I2cDummyTx
  7013  005B08  6F89               	movwf	OsAlrm_SetOsAlarm@AlarmCallback& (0+255),b
  7014  005B0A  0E68               	movlw	high _I2cDummyTx
  7015  005B0C  6F8A               	movwf	(OsAlrm_SetOsAlarm@AlarmCallback+1)& (0+255),b
  7016  005B0E  ECD4  F01F         	call	_OsAlrm_SetOsAlarm	;wreg free
  7017                           
  7018                           ;i2c_slv.c: 227: break;
  7019  005B12  0012               	return	
  7020  005B14                     
  7021                           ;i2c_slv.c: 232: I2cSendMsgSm();
  7022  005B14  EC38  F020         	call	_I2cSendMsgSm	;wreg free
  7023                           
  7024                           ;i2c_slv.c: 238: }
  7025                           
  7026                           ;i2c_slv.c: 237: break;
  7027                           
  7028                           ;i2c_slv.c: 236: default:
  7029                           
  7030                           ;i2c_slv.c: 233: break;
  7031  005B18  0012               	return	
  7032  005B1A                     l1404:
  7033  005B1A  0100               	movlb	0	; () banked
  7034  005B1C  51D4               	movf	_SystemState& (0+255),w,b
  7035                           
  7036                           ; Switch size 1, requested type "space"
  7037                           ; Number of cases is 2, Range of values is 0 to 1
  7038                           ; switch strategies available:
  7039                           ; Name         Instructions Cycles
  7040                           ; simple_byte            7     4 (average)
  7041                           ;	Chosen strategy is simple_byte
  7042  005B1E  0A00               	xorlw	0	; case 0
  7043  005B20  B4D8               	btfsc	status,2,c
  7044  005B22  D7DB               	goto	l1405
  7045  005B24  0A01               	xorlw	1	; case 1
  7046  005B26  A4D8               	btfss	status,2,c
  7047  005B28  0012               	return	
  7048  005B2A  D7F4               	goto	l1407
  7049  005B2C                     __end_of_I2cSlv_MainTask:
  7050                           	opt stack 0
  7051                           tosu	equ	0xFFF
  7052                           tosh	equ	0xFFE
  7053                           tosl	equ	0xFFD
  7054                           pclath	equ	0xFFA
  7055                           tblptru	equ	0xFF8
  7056                           tblptrh	equ	0xFF7
  7057                           tblptrl	equ	0xFF6
  7058                           tablat	equ	0xFF5
  7059                           prodh	equ	0xFF4
  7060                           prodl	equ	0xFF3
  7061                           intcon	equ	0xFF2
  7062                           intcon2	equ	0xFF1
  7063                           intcon3	equ	0xFF0
  7064                           postinc0	equ	0xFEE
  7065                           plusw0	equ	0xFEB
  7066                           wreg	equ	0xFE8
  7067                           postinc1	equ	0xFE6
  7068                           postdec1	equ	0xFE5
  7069                           fsr1h	equ	0xFE2
  7070                           fsr1l	equ	0xFE1
  7071                           indf2	equ	0xFDF
  7072                           postinc2	equ	0xFDE
  7073                           postdec2	equ	0xFDD
  7074                           plusw2	equ	0xFDB
  7075                           fsr2h	equ	0xFDA
  7076                           fsr2l	equ	0xFD9
  7077                           status	equ	0xFD8
  7078                           
  7079 ;; *************** function _Mdm_DrvMainFn *****************
  7080 ;; Defined at:
  7081 ;;		line 304 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mdm_drv.c"
  7082 ;; Parameters:    Size  Location     Type
  7083 ;;  Options         1    wreg     unsigned char 
  7084 ;; Auto vars:     Size  Location     Type
  7085 ;;  Options         1    0[COMRAM] unsigned char 
  7086 ;; Return value:  Size  Location     Type
  7087 ;;                  1    wreg      void 
  7088 ;; Registers used:
  7089 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7090 ;; Tracked objects:
  7091 ;;		On entry : 0/0
  7092 ;;		On exit  : 0/0
  7093 ;;		Unchanged: 0/0
  7094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7095 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7096 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7097 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7098 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7099 ;;Total ram usage:        0 bytes
  7100 ;; Hardware stack levels used:    1
  7101 ;; Hardware stack levels required when called:   13
  7102 ;; This function calls:
  7103 ;;		_MdmCntSm
  7104 ;; This function is called by:
  7105 ;;		_InitializeTasks
  7106 ;;		_ScheduleTasks
  7107 ;; This function uses a non-reentrant model
  7108 ;;
  7109                           
  7110                           	psect	text24
  7111  006B2C                     __ptext24:
  7112                           	opt stack 0
  7113  006B2C                     _Mdm_DrvMainFn:
  7114                           	opt stack 15
  7115                           
  7116                           ;mdm_drv.c: 307: MdmCntSm();
  7117                           
  7118                           ;incstack = 0
  7119  006B2C  EC67  F023         	call	_MdmCntSm	;wreg free
  7120  006B30  0012               	return		;funcret
  7121  006B32                     __end_of_Mdm_DrvMainFn:
  7122                           	opt stack 0
  7123                           tosu	equ	0xFFF
  7124                           tosh	equ	0xFFE
  7125                           tosl	equ	0xFFD
  7126                           pclath	equ	0xFFA
  7127                           tblptru	equ	0xFF8
  7128                           tblptrh	equ	0xFF7
  7129                           tblptrl	equ	0xFF6
  7130                           tablat	equ	0xFF5
  7131                           prodh	equ	0xFF4
  7132                           prodl	equ	0xFF3
  7133                           intcon	equ	0xFF2
  7134                           intcon2	equ	0xFF1
  7135                           intcon3	equ	0xFF0
  7136                           postinc0	equ	0xFEE
  7137                           plusw0	equ	0xFEB
  7138                           wreg	equ	0xFE8
  7139                           postinc1	equ	0xFE6
  7140                           postdec1	equ	0xFE5
  7141                           fsr1h	equ	0xFE2
  7142                           fsr1l	equ	0xFE1
  7143                           indf2	equ	0xFDF
  7144                           postinc2	equ	0xFDE
  7145                           postdec2	equ	0xFDD
  7146                           plusw2	equ	0xFDB
  7147                           fsr2h	equ	0xFDA
  7148                           fsr2l	equ	0xFD9
  7149                           status	equ	0xFD8
  7150                           
  7151 ;; *************** function _Wdg_MainTask *****************
  7152 ;; Defined at:
  7153 ;;		line 73 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/wdg.c"
  7154 ;; Parameters:    Size  Location     Type
  7155 ;;  Options         1    wreg     unsigned char 
  7156 ;; Auto vars:     Size  Location     Type
  7157 ;;  Options         1    0[COMRAM] unsigned char 
  7158 ;; Return value:  Size  Location     Type
  7159 ;;                  1    wreg      void 
  7160 ;; Registers used:
  7161 ;;		wreg, status,2, status,0, cstack
  7162 ;; Tracked objects:
  7163 ;;		On entry : 0/0
  7164 ;;		On exit  : 0/0
  7165 ;;		Unchanged: 0/0
  7166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7167 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7168 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7169 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7170 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7171 ;;Total ram usage:        0 bytes
  7172 ;; Hardware stack levels used:    1
  7173 ;; Hardware stack levels required when called:   12
  7174 ;; This function calls:
  7175 ;;		_Mcu_ClearWdg
  7176 ;;		_Mcu_SetWdgSts
  7177 ;; This function is called by:
  7178 ;;		_InitializeTasks
  7179 ;;		_ScheduleTasks
  7180 ;; This function uses a non-reentrant model
  7181 ;;
  7182                           
  7183                           	psect	text25
  7184  00674E                     __ptext25:
  7185                           	opt stack 0
  7186  00674E                     _Wdg_MainTask:
  7187                           	opt stack 16
  7188                           
  7189                           ;wdg.c: 75: switch (SystemState)
  7190                           
  7191                           ;incstack = 0
  7192  00674E  D007               	goto	l2510
  7193  006750                     
  7194                           ;wdg.c: 80: Mcu_SetWdgSts(1u);
  7195  006750  0E01               	movlw	1
  7196  006752  EC14  F035         	call	_Mcu_SetWdgSts
  7197                           
  7198                           ;wdg.c: 81: break;
  7199  006756  0012               	return	
  7200  006758                     
  7201                           ;wdg.c: 86: Mcu_ClearWdg();
  7202  006758  EC99  F035         	call	_Mcu_ClearWdg	;wreg free
  7203                           
  7204                           ;wdg.c: 92: }
  7205                           
  7206                           ;wdg.c: 91: break;
  7207                           
  7208                           ;wdg.c: 90: default:
  7209                           
  7210                           ;wdg.c: 87: break;
  7211  00675C  0012               	return	
  7212  00675E                     l2510:
  7213  00675E  0100               	movlb	0	; () banked
  7214  006760  51D4               	movf	_SystemState& (0+255),w,b
  7215                           
  7216                           ; Switch size 1, requested type "space"
  7217                           ; Number of cases is 2, Range of values is 0 to 1
  7218                           ; switch strategies available:
  7219                           ; Name         Instructions Cycles
  7220                           ; simple_byte            7     4 (average)
  7221                           ;	Chosen strategy is simple_byte
  7222  006762  0A00               	xorlw	0	; case 0
  7223  006764  B4D8               	btfsc	status,2,c
  7224  006766  D7F4               	goto	l2511
  7225  006768  0A01               	xorlw	1	; case 1
  7226  00676A  A4D8               	btfss	status,2,c
  7227  00676C  0012               	return	
  7228  00676E  D7F4               	goto	l2513
  7229  006770                     __end_of_Wdg_MainTask:
  7230                           	opt stack 0
  7231                           tosu	equ	0xFFF
  7232                           tosh	equ	0xFFE
  7233                           tosl	equ	0xFFD
  7234                           pclath	equ	0xFFA
  7235                           tblptru	equ	0xFF8
  7236                           tblptrh	equ	0xFF7
  7237                           tblptrl	equ	0xFF6
  7238                           tablat	equ	0xFF5
  7239                           prodh	equ	0xFF4
  7240                           prodl	equ	0xFF3
  7241                           intcon	equ	0xFF2
  7242                           intcon2	equ	0xFF1
  7243                           intcon3	equ	0xFF0
  7244                           postinc0	equ	0xFEE
  7245                           plusw0	equ	0xFEB
  7246                           wreg	equ	0xFE8
  7247                           postinc1	equ	0xFE6
  7248                           postdec1	equ	0xFE5
  7249                           fsr1h	equ	0xFE2
  7250                           fsr1l	equ	0xFE1
  7251                           indf2	equ	0xFDF
  7252                           postinc2	equ	0xFDE
  7253                           postdec2	equ	0xFDD
  7254                           plusw2	equ	0xFDB
  7255                           fsr2h	equ	0xFDA
  7256                           fsr2l	equ	0xFD9
  7257                           status	equ	0xFD8
  7258                           
  7259 ;; *************** function _Mcu_SetWdgSts *****************
  7260 ;; Defined at:
  7261 ;;		line 196 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
  7262 ;; Parameters:    Size  Location     Type
  7263 ;;  WdgSts          1    wreg     unsigned char 
  7264 ;; Auto vars:     Size  Location     Type
  7265 ;;  WdgSts          1   29[BANK0 ] unsigned char 
  7266 ;; Return value:  Size  Location     Type
  7267 ;;                  1    wreg      void 
  7268 ;; Registers used:
  7269 ;;		wreg
  7270 ;; Tracked objects:
  7271 ;;		On entry : 0/0
  7272 ;;		On exit  : 0/0
  7273 ;;		Unchanged: 0/0
  7274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7275 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7276 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7277 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7278 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7279 ;;Total ram usage:        1 bytes
  7280 ;; Hardware stack levels used:    1
  7281 ;; Hardware stack levels required when called:   11
  7282 ;; This function calls:
  7283 ;;		Nothing
  7284 ;; This function is called by:
  7285 ;;		_Wdg_MainTask
  7286 ;; This function uses a non-reentrant model
  7287 ;;
  7288                           
  7289                           	psect	text26
  7290  006A28                     __ptext26:
  7291                           	opt stack 0
  7292  006A28                     _Mcu_SetWdgSts:
  7293                           	opt stack 16
  7294                           
  7295                           ;incstack = 0
  7296                           ;Mcu_SetWdgSts@WdgSts stored from wreg
  7297  006A28  0100               	movlb	0	; () banked
  7298  006A2A  6F7D               	movwf	Mcu_SetWdgSts@WdgSts& (0+255),b
  7299                           
  7300                           ;mcu_drv.c: 199: WDTCONbits.SWDTEN = WdgSts;
  7301  006A2C  0100               	movlb	0	; () banked
  7302  006A2E  B17D               	btfsc	Mcu_SetWdgSts@WdgSts& (0+255),0,b
  7303  006A30  D002               	bra	u14735
  7304  006A32  90C0               	bcf	4032,0,c	;volatile
  7305  006A34  D001               	bra	u14736
  7306  006A36                     u14735:
  7307  006A36  80C0               	bsf	4032,0,c	;volatile
  7308  006A38                     u14736:
  7309  006A38  0012               	return		;funcret
  7310  006A3A                     __end_of_Mcu_SetWdgSts:
  7311                           	opt stack 0
  7312                           tosu	equ	0xFFF
  7313                           tosh	equ	0xFFE
  7314                           tosl	equ	0xFFD
  7315                           pclath	equ	0xFFA
  7316                           tblptru	equ	0xFF8
  7317                           tblptrh	equ	0xFF7
  7318                           tblptrl	equ	0xFF6
  7319                           tablat	equ	0xFF5
  7320                           prodh	equ	0xFF4
  7321                           prodl	equ	0xFF3
  7322                           intcon	equ	0xFF2
  7323                           intcon2	equ	0xFF1
  7324                           intcon3	equ	0xFF0
  7325                           postinc0	equ	0xFEE
  7326                           plusw0	equ	0xFEB
  7327                           wreg	equ	0xFE8
  7328                           postinc1	equ	0xFE6
  7329                           postdec1	equ	0xFE5
  7330                           fsr1h	equ	0xFE2
  7331                           fsr1l	equ	0xFE1
  7332                           indf2	equ	0xFDF
  7333                           postinc2	equ	0xFDE
  7334                           postdec2	equ	0xFDD
  7335                           plusw2	equ	0xFDB
  7336                           fsr2h	equ	0xFDA
  7337                           fsr2l	equ	0xFD9
  7338                           status	equ	0xFD8
  7339                           
  7340 ;; *************** function _Mcu_ClearWdg *****************
  7341 ;; Defined at:
  7342 ;;		line 210 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
  7343 ;; Parameters:    Size  Location     Type
  7344 ;;		None
  7345 ;; Auto vars:     Size  Location     Type
  7346 ;;		None
  7347 ;; Return value:  Size  Location     Type
  7348 ;;                  1    wreg      void 
  7349 ;; Registers used:
  7350 ;;		None
  7351 ;; Tracked objects:
  7352 ;;		On entry : 0/0
  7353 ;;		On exit  : 0/0
  7354 ;;		Unchanged: 0/0
  7355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7356 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7357 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7359 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7360 ;;Total ram usage:        0 bytes
  7361 ;; Hardware stack levels used:    1
  7362 ;; Hardware stack levels required when called:   11
  7363 ;; This function calls:
  7364 ;;		Nothing
  7365 ;; This function is called by:
  7366 ;;		_Wdg_MainTask
  7367 ;; This function uses a non-reentrant model
  7368 ;;
  7369                           
  7370                           	psect	text27
  7371  006B32                     __ptext27:
  7372                           	opt stack 0
  7373  006B32                     _Mcu_ClearWdg:
  7374                           	opt stack 16
  7375                           
  7376                           ;incstack = 0
  7377  006B32  0004               	clrwdt		;# 
  7378  006B34  0012               	return		;funcret
  7379  006B36                     __end_of_Mcu_ClearWdg:
  7380                           	opt stack 0
  7381                           tosu	equ	0xFFF
  7382                           tosh	equ	0xFFE
  7383                           tosl	equ	0xFFD
  7384                           pclath	equ	0xFFA
  7385                           tblptru	equ	0xFF8
  7386                           tblptrh	equ	0xFF7
  7387                           tblptrl	equ	0xFF6
  7388                           tablat	equ	0xFF5
  7389                           prodh	equ	0xFF4
  7390                           prodl	equ	0xFF3
  7391                           intcon	equ	0xFF2
  7392                           intcon2	equ	0xFF1
  7393                           intcon3	equ	0xFF0
  7394                           postinc0	equ	0xFEE
  7395                           plusw0	equ	0xFEB
  7396                           wreg	equ	0xFE8
  7397                           postinc1	equ	0xFE6
  7398                           postdec1	equ	0xFE5
  7399                           fsr1h	equ	0xFE2
  7400                           fsr1l	equ	0xFE1
  7401                           indf2	equ	0xFDF
  7402                           postinc2	equ	0xFDE
  7403                           postdec2	equ	0xFDD
  7404                           plusw2	equ	0xFDB
  7405                           fsr2h	equ	0xFDA
  7406                           fsr2l	equ	0xFD9
  7407                           status	equ	0xFD8
  7408                           
  7409 ;; *************** function _USBDeviceTasks *****************
  7410 ;; Defined at:
  7411 ;;		line 495 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  7412 ;; Parameters:    Size  Location     Type
  7413 ;;		None
  7414 ;; Auto vars:     Size  Location     Type
  7415 ;;  i               1   56[BANK0 ] unsigned char 
  7416 ;; Return value:  Size  Location     Type
  7417 ;;                  1    wreg      void 
  7418 ;; Registers used:
  7419 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7420 ;; Tracked objects:
  7421 ;;		On entry : 0/0
  7422 ;;		On exit  : 0/0
  7423 ;;		Unchanged: 0/0
  7424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7425 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7426 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7428 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7429 ;;Total ram usage:        1 bytes
  7430 ;; Hardware stack levels used:    1
  7431 ;; Hardware stack levels required when called:   19
  7432 ;; This function calls:
  7433 ;;		_USBCtrlEPAllowStatusStage
  7434 ;;		_USBCtrlEPService
  7435 ;;		_USBDeviceInit
  7436 ;;		_USBIncrement1msInternalTimers
  7437 ;;		_USBStallHandler
  7438 ;;		_USBSuspend
  7439 ;;		_USBWakeFromSuspend
  7440 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7441 ;; This function is called by:
  7442 ;;		_UsbDevice_MainTask
  7443 ;; This function uses a non-reentrant model
  7444 ;;
  7445                           
  7446                           	psect	text28
  7447  001BAA                     __ptext28:
  7448                           	opt stack 0
  7449  001BAA                     _USBDeviceTasks:
  7450                           	opt stack 8
  7451                           
  7452                           ;usb_device.c: 562: }
  7453                           ;usb_device.c: 584: if(USBDeviceState == DETACHED_STATE)
  7454                           
  7455                           ; BSR set to: 0
  7456                           
  7457                           ; BSR set to: 0
  7458                           ;usb_device.c: 561: return;
  7459                           
  7460                           ; BSR set to: 0
  7461                           ;usb_device.c: 560: {PIR2bits.USBIF = 0;};
  7462                           
  7463                           ;usb_device.c: 532: USBDeviceState = DETACHED_STATE;
  7464                           
  7465                           ;usb_device.c: 529: UIE = 0;
  7466                           
  7467                           ;usb_device.c: 524: {
  7468                           ;usb_device.c: 526: UCON = 0;
  7469                           
  7470                           ;usb_device.c: 497: uint8_t i;
  7471                           ;usb_device.c: 523: if (1 != 1)
  7472                           
  7473                           ;incstack = 0
  7474  001BAA  0100               	movlb	0	; () banked
  7475  001BAC  51CE               	movf	_USBDeviceState& (0+255),w,b
  7476  001BAE  A4D8               	btfss	status,2,c
  7477  001BB0  D012               	goto	l1615
  7478                           
  7479                           ; BSR set to: 0
  7480                           ;usb_device.c: 585: {
  7481                           ;usb_device.c: 587: UCON = 0;
  7482  001BB2  0E00               	movlw	0
  7483  001BB4  6E65               	movwf	3941,c	;volatile
  7484                           
  7485                           ;usb_device.c: 590: UIE = 0;
  7486  001BB6  0E00               	movlw	0
  7487  001BB8  010F               	movlb	15	; () banked
  7488  001BBA  6F36               	movwf	54,b	;volatile
  7489                           
  7490                           ;usb_device.c: 594: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  7491  001BBC  0E16               	movlw	22
  7492  001BBE  6F39               	movwf	57,b	;volatile
  7493  001BC0  0E9F               	movlw	159
  7494  001BC2  6F37               	movwf	55,b	;volatile
  7495  001BC4  0E7B               	movlw	123
  7496  001BC6  6F36               	movwf	54,b	;volatile
  7497                           
  7498                           ;usb_device.c: 597: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
  7499  001BC8  D001               	goto	l1616
  7500  001BCA                     l1617:
  7501  001BCA  8665               	bsf	3941,3,c	;volatile
  7502  001BCC                     l1616:
  7503  001BCC  A665               	btfss	3941,3,c	;volatile
  7504  001BCE  D7FD               	goto	l1617
  7505                           
  7506                           ;usb_device.c: 600: USBDeviceState = ATTACHED_STATE;
  7507  001BD0  0E01               	movlw	1
  7508  001BD2  0100               	movlb	0	; () banked
  7509  001BD4  6FCE               	movwf	_USBDeviceState& (0+255),b
  7510  001BD6                     l1615:
  7511                           
  7512                           ; BSR set to: 0
  7513                           ;usb_device.c: 605: }
  7514                           ;usb_device.c: 608: if(USBDeviceState == ATTACHED_STATE)
  7515                           
  7516                           ; BSR set to: 0
  7517  001BD6  05CE               	decf	_USBDeviceState& (0+255),w,b
  7518  001BD8  B4D8               	btfsc	status,2,c
  7519                           
  7520                           ; BSR set to: 0
  7521                           ;usb_device.c: 609: {
  7522                           ;usb_device.c: 619: if(!UCONbits.SE0)
  7523  001BDA  BA65               	btfsc	3941,5,c	;volatile
  7524  001BDC  D00A               	goto	l1620
  7525                           
  7526                           ; BSR set to: 0
  7527                           ;usb_device.c: 620: {
  7528                           ;usb_device.c: 626: {UIR = 0;};
  7529  001BDE  0E00               	movlw	0
  7530  001BE0  6E62               	movwf	3938,c	;volatile
  7531                           
  7532                           ;usb_device.c: 630: UIE=0;
  7533  001BE2  0E00               	movlw	0
  7534  001BE4  010F               	movlb	15	; () banked
  7535  001BE6  6F36               	movwf	54,b	;volatile
  7536                           
  7537                           ; BSR set to: 15
  7538                           ;usb_device.c: 632: UIEbits.URSTIE = 1;
  7539  001BE8  8136               	bsf	54,0,b	;volatile
  7540                           
  7541                           ; BSR set to: 15
  7542                           ;usb_device.c: 633: UIEbits.IDLEIE = 1;
  7543  001BEA  8936               	bsf	54,4,b	;volatile
  7544                           
  7545                           ;usb_device.c: 634: USBDeviceState = POWERED_STATE;
  7546  001BEC  0E02               	movlw	2
  7547  001BEE  0100               	movlb	0	; () banked
  7548  001BF0  6FCE               	movwf	_USBDeviceState& (0+255),b
  7549  001BF2                     l1620:
  7550                           
  7551                           ; BSR set to: 0
  7552                           ;usb_device.c: 635: }
  7553                           ;usb_device.c: 636: }
  7554                           ;usb_device.c: 652: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
  7555                           
  7556                           ; BSR set to: 0
  7557                           
  7558                           ; BSR set to: 0
  7559  001BF2  A462               	btfss	3938,2,c	;volatile
  7560  001BF4  D006               	goto	l1621
  7561                           
  7562                           ; BSR set to: 0
  7563  001BF6  010F               	movlb	15	; () banked
  7564  001BF8  A536               	btfss	54,2,b	;volatile
  7565  001BFA  D003               	goto	l1621
  7566                           
  7567                           ; BSR set to: 15
  7568                           ;usb_device.c: 653: {
  7569                           ;usb_device.c: 654: (UIR &= 0xFB);
  7570  001BFC  9462               	bcf	3938,2,c	;volatile
  7571                           
  7572                           ; BSR set to: 15
  7573                           ;usb_device.c: 658: USBWakeFromSuspend();
  7574  001BFE  EC93  F031         	call	_USBWakeFromSuspend	;wreg free
  7575  001C02                     l1621:
  7576                           
  7577                           ;usb_device.c: 660: }
  7578                           ;usb_device.c: 665: if(UCONbits.SUSPND==1)
  7579  001C02  A265               	btfss	3941,1,c	;volatile
  7580  001C04  D002               	goto	l1622
  7581                           
  7582                           ;usb_device.c: 666: {
  7583                           ;usb_device.c: 667: {PIR2bits.USBIF = 0;};
  7584  001C06  98A1               	bcf	4001,4,c	;volatile
  7585                           
  7586                           ;usb_device.c: 668: return;
  7587  001C08  0012               	return	
  7588  001C0A                     l1622:
  7589                           
  7590                           ;usb_device.c: 669: }
  7591                           ;usb_device.c: 681: if(UIRbits.URSTIF && UIEbits.URSTIE)
  7592  001C0A  A062               	btfss	3938,0,c	;volatile
  7593  001C0C  D009               	goto	l1623
  7594  001C0E  010F               	movlb	15	; () banked
  7595  001C10  A136               	btfss	54,0,b	;volatile
  7596  001C12  D006               	goto	l1623
  7597                           
  7598                           ; BSR set to: 15
  7599                           ;usb_device.c: 682: {
  7600                           ;usb_device.c: 683: USBDeviceInit();
  7601  001C14  ECC5  F012         	call	_USBDeviceInit	;wreg free
  7602                           
  7603                           ;usb_device.c: 687: ;
  7604                           ;usb_device.c: 689: USBDeviceState = DEFAULT_STATE;
  7605  001C18  0E04               	movlw	4
  7606  001C1A  0100               	movlb	0	; () banked
  7607  001C1C  6FCE               	movwf	_USBDeviceState& (0+255),b
  7608                           
  7609                           ; BSR set to: 0
  7610                           ;usb_device.c: 699: (UIR &= 0xFE);
  7611  001C1E  9062               	bcf	3938,0,c	;volatile
  7612  001C20                     l1623:
  7613                           
  7614                           ;usb_device.c: 700: }
  7615                           ;usb_device.c: 705: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
  7616                           
  7617                           ; BSR set to: 0
  7618  001C20  A862               	btfss	3938,4,c	;volatile
  7619  001C22  D004               	goto	l1624
  7620  001C24  010F               	movlb	15	; () banked
  7621  001C26  B936               	btfsc	54,4,b	;volatile
  7622                           
  7623                           ; BSR set to: 15
  7624                           ;usb_device.c: 706: {
  7625                           ;usb_device.c: 712: USBSuspend();
  7626  001C28  EC38  F032         	call	_USBSuspend	;wreg free
  7627  001C2C                     l1624:
  7628                           
  7629                           ;usb_device.c: 714: }
  7630                           ;usb_device.c: 726: if(UIRbits.SOFIF)
  7631  001C2C  AC62               	btfss	3938,6,c	;volatile
  7632  001C2E  D01C               	goto	l1628
  7633                           
  7634                           ;usb_device.c: 727: {
  7635                           ;usb_device.c: 729: if(UIEbits.SOFIE)
  7636  001C30  010F               	movlb	15	; () banked
  7637  001C32  AD36               	btfss	54,6,b	;volatile
  7638  001C34  D00F               	goto	l1626
  7639                           
  7640                           ; BSR set to: 15
  7641                           ;usb_device.c: 730: {
  7642                           ;usb_device.c: 731: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
  7643  001C36  0E00               	movlw	0
  7644  001C38  0100               	movlb	0	; () banked
  7645  001C3A  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  7646  001C3C  0E73               	movlw	115
  7647  001C3E  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  7648  001C40  0E00               	movlw	0
  7649  001C42  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  7650  001C44  0E00               	movlw	0
  7651  001C46  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  7652  001C48  0E00               	movlw	0
  7653  001C4A  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  7654  001C4C  0E01               	movlw	1
  7655  001C4E  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  7656  001C50  EC05  F02C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7657  001C54                     l1626:
  7658                           
  7659                           ;usb_device.c: 732: }
  7660                           ;usb_device.c: 733: (UIR &= 0xBF);
  7661  001C54  9C62               	bcf	3938,6,c	;volatile
  7662                           
  7663                           ;usb_device.c: 736: USBIncrement1msInternalTimers();
  7664  001C56  ECB8  F033         	call	_USBIncrement1msInternalTimers	;wreg free
  7665                           
  7666                           ;usb_device.c: 753: if(USBStatusStageTimeoutCounter != 0u)
  7667  001C5A  5029               	movf	_USBStatusStageTimeoutCounter,w,c
  7668  001C5C  A4D8               	btfss	status,2,c
  7669                           
  7670                           ;usb_device.c: 754: {
  7671                           ;usb_device.c: 755: USBStatusStageTimeoutCounter--;
  7672  001C5E  0629               	decf	_USBStatusStageTimeoutCounter,f,c
  7673                           
  7674                           ;usb_device.c: 756: }
  7675                           ;usb_device.c: 762: if(USBStatusStageTimeoutCounter == 0)
  7676  001C60  5029               	movf	_USBStatusStageTimeoutCounter,w,c
  7677  001C62  B4D8               	btfsc	status,2,c
  7678                           
  7679                           ;usb_device.c: 763: {
  7680                           ;usb_device.c: 764: USBCtrlEPAllowStatusStage();
  7681  001C64  EC41  F01E         	call	_USBCtrlEPAllowStatusStage	;wreg free
  7682  001C68                     l1628:
  7683                           
  7684                           ;usb_device.c: 765: }
  7685                           ;usb_device.c: 767: }
  7686                           ;usb_device.c: 769: if(UIRbits.STALLIF && UIEbits.STALLIE)
  7687  001C68  AA62               	btfss	3938,5,c	;volatile
  7688  001C6A  D004               	goto	l1629
  7689  001C6C  010F               	movlb	15	; () banked
  7690  001C6E  BB36               	btfsc	54,5,b	;volatile
  7691                           
  7692                           ; BSR set to: 15
  7693                           ;usb_device.c: 770: {
  7694                           ;usb_device.c: 771: USBStallHandler();
  7695  001C70  EC10  F030         	call	_USBStallHandler	;wreg free
  7696  001C74                     l1629:
  7697                           
  7698                           ;usb_device.c: 772: }
  7699                           ;usb_device.c: 774: if(UIRbits.UERRIF && UIEbits.UERRIE)
  7700  001C74  A262               	btfss	3938,1,c	;volatile
  7701  001C76  D013               	goto	l1630
  7702  001C78  010F               	movlb	15	; () banked
  7703  001C7A  A336               	btfss	54,1,b	;volatile
  7704  001C7C  D010               	goto	l1630
  7705                           
  7706                           ; BSR set to: 15
  7707                           ;usb_device.c: 775: {
  7708                           ;usb_device.c: 776: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
  7709  001C7E  0E7F               	movlw	127
  7710  001C80  0100               	movlb	0	; () banked
  7711  001C82  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  7712  001C84  6989               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  7713  001C86  0E00               	movlw	0
  7714  001C88  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  7715  001C8A  0E00               	movlw	0
  7716  001C8C  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  7717  001C8E  0E00               	movlw	0
  7718  001C90  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  7719  001C92  0E01               	movlw	1
  7720  001C94  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  7721  001C96  EC05  F02C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7722                           
  7723                           ;usb_device.c: 777: {UEIR = 0;};
  7724  001C9A  0E00               	movlw	0
  7725  001C9C  6E63               	movwf	3939,c	;volatile
  7726  001C9E                     l1630:
  7727                           
  7728                           ;usb_device.c: 785: }
  7729                           ;usb_device.c: 792: if(USBDeviceState < DEFAULT_STATE)
  7730  001C9E  0E04               	movlw	4
  7731  001CA0  0100               	movlb	0	; () banked
  7732  001CA2  61CE               	cpfslt	_USBDeviceState& (0+255),b
  7733  001CA4  D002               	goto	l1631
  7734                           
  7735                           ; BSR set to: 0
  7736                           ;usb_device.c: 793: {
  7737                           ;usb_device.c: 794: {PIR2bits.USBIF = 0;};
  7738  001CA6  98A1               	bcf	4001,4,c	;volatile
  7739                           
  7740                           ;usb_device.c: 795: return;
  7741  001CA8  0012               	return	
  7742  001CAA                     l1631:
  7743                           
  7744                           ; BSR set to: 0
  7745                           ;usb_device.c: 796: }
  7746                           ;usb_device.c: 801: if(UIEbits.TRNIE)
  7747  001CAA  010F               	movlb	15	; () banked
  7748  001CAC  A736               	btfss	54,3,b	;volatile
  7749  001CAE  D03E               	goto	u15690
  7750                           
  7751                           ; BSR set to: 15
  7752                           ;usb_device.c: 802: {
  7753                           ;usb_device.c: 803: for(i = 0; i < 4u; i++)
  7754  001CB0  0E00               	movlw	0
  7755  001CB2  0100               	movlb	0	; () banked
  7756  001CB4  6F98               	movwf	USBDeviceTasks@i& (0+255),b
  7757  001CB6                     l15972:
  7758                           
  7759                           ; BSR set to: 0
  7760  001CB6  0E03               	movlw	3
  7761  001CB8  6598               	cpfsgt	USBDeviceTasks@i& (0+255),b
  7762  001CBA  D001               	goto	l1633
  7763  001CBC  D037               	goto	u15690
  7764  001CBE                     l1633:
  7765                           
  7766                           ; BSR set to: 0
  7767                           ;usb_device.c: 804: {
  7768                           ;usb_device.c: 805: if(UIRbits.TRNIF)
  7769  001CBE  A662               	btfss	3938,3,c	;volatile
  7770  001CC0  D035               	goto	u15690
  7771                           
  7772                           ; BSR set to: 0
  7773                           ;usb_device.c: 806: {
  7774                           ;usb_device.c: 808: USTATcopy.Val = USTAT;
  7775  001CC2  CF64 F0D5          	movff	3940,_USTATcopy	;volatile
  7776                           
  7777                           ; BSR set to: 0
  7778                           ;usb_device.c: 809: endpoint_number = USTATcopy.endpoint_number;
  7779  001CC6  31D5               	rrcf	_USTATcopy& (0+255),w,b
  7780  001CC8  32E8               	rrcf	wreg,f,c
  7781  001CCA  32E8               	rrcf	wreg,f,c
  7782  001CCC  0B0F               	andlw	15
  7783  001CCE  6FCB               	movwf	_endpoint_number& (0+255),b
  7784                           
  7785                           ; BSR set to: 0
  7786                           ;usb_device.c: 811: (UIR &= 0xF7);
  7787  001CD0  9662               	bcf	3938,3,c	;volatile
  7788                           
  7789                           ; BSR set to: 0
  7790                           ;usb_device.c: 816: if(USTATcopy.direction == 0)
  7791  001CD2  B5D5               	btfsc	_USTATcopy& (0+255),2,b
  7792  001CD4  D007               	goto	l1636
  7793                           
  7794                           ; BSR set to: 0
  7795                           ;usb_device.c: 817: {
  7796                           ;usb_device.c: 818: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
  7797  001CD6  51CB               	movf	_endpoint_number& (0+255),w,b
  7798  001CD8  0D01               	mullw	1
  7799  001CDA  0ECE               	movlw	low _ep_data_out
  7800  001CDC  24F3               	addwf	prodl,w,c
  7801  001CDE  6ED9               	movwf	fsr2l,c
  7802  001CE0  0E02               	movlw	high _ep_data_out
  7803  001CE2  D007               	goto	L3
  7804  001CE4                     l1636:
  7805                           
  7806                           ;usb_device.c: 820: else
  7807                           ;usb_device.c: 821: {
  7808                           ;usb_device.c: 822: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
  7809                           
  7810                           ; BSR set to: 2
  7811  001CE4  0100               	movlb	0	; () banked
  7812  001CE6  51CB               	movf	_endpoint_number& (0+255),w,b
  7813  001CE8  0D01               	mullw	1
  7814  001CEA  0ED1               	movlw	low _ep_data_in
  7815  001CEC  24F3               	addwf	prodl,w,c
  7816  001CEE  6ED9               	movwf	fsr2l,c
  7817  001CF0  0E02               	movlw	high _ep_data_in
  7818  001CF2                     L3:
  7819  001CF2  20F4               	addwfc	prodh,w,c
  7820  001CF4  6EDA               	movwf	fsr2h,c
  7821  001CF6  0102               	movlb	2	; () banked
  7822  001CF8  70DF               	btg	indf2,0,c
  7823                           
  7824                           ; BSR set to: 2
  7825                           ;usb_device.c: 823: }
  7826                           ;usb_device.c: 828: if(endpoint_number == 0)
  7827                           
  7828                           ; BSR set to: 2
  7829  001CFA  0100               	movlb	0	; () banked
  7830  001CFC  51CB               	movf	_endpoint_number& (0+255),w,b
  7831  001CFE  A4D8               	btfss	status,2,c
  7832  001D00  D003               	goto	l1638
  7833                           
  7834                           ; BSR set to: 0
  7835                           ;usb_device.c: 829: {
  7836                           ;usb_device.c: 830: USBCtrlEPService();
  7837  001D02  EC7A  F026         	call	_USBCtrlEPService	;wreg free
  7838                           
  7839                           ;usb_device.c: 831: }
  7840  001D06  D00F               	goto	l1640
  7841  001D08                     l1638:
  7842                           
  7843                           ;usb_device.c: 832: else
  7844                           ;usb_device.c: 833: {
  7845                           ;usb_device.c: 834: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
  7846  001D08  0E00               	movlw	0
  7847  001D0A  0100               	movlb	0	; () banked
  7848  001D0C  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  7849  001D0E  0E72               	movlw	114
  7850  001D10  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  7851  001D12  0ED5               	movlw	low _USTATcopy
  7852  001D14  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  7853  001D16  0E00               	movlw	high _USTATcopy
  7854  001D18  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  7855  001D1A  0E00               	movlw	0
  7856  001D1C  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  7857  001D1E  0E00               	movlw	0
  7858  001D20  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  7859  001D22  EC05  F02C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7860  001D26                     l1640:
  7861  001D26  0100               	movlb	0	; () banked
  7862  001D28  2B98               	incf	USBDeviceTasks@i& (0+255),f,b
  7863  001D2A  D7C5               	goto	l15972
  7864  001D2C                     u15690:
  7865                           
  7866                           ;usb_device.c: 840: }
  7867                           ;usb_device.c: 841: }
  7868                           ;usb_device.c: 842: }
  7869                           ;usb_device.c: 844: {PIR2bits.USBIF = 0;};
  7870                           
  7871                           ; BSR set to: 0
  7872  001D2C  98A1               	bcf	4001,4,c	;volatile
  7873  001D2E  0012               	return		;funcret
  7874  001D30                     __end_of_USBDeviceTasks:
  7875                           	opt stack 0
  7876                           tosu	equ	0xFFF
  7877                           tosh	equ	0xFFE
  7878                           tosl	equ	0xFFD
  7879                           pclath	equ	0xFFA
  7880                           tblptru	equ	0xFF8
  7881                           tblptrh	equ	0xFF7
  7882                           tblptrl	equ	0xFF6
  7883                           tablat	equ	0xFF5
  7884                           prodh	equ	0xFF4
  7885                           prodl	equ	0xFF3
  7886                           intcon	equ	0xFF2
  7887                           intcon2	equ	0xFF1
  7888                           intcon3	equ	0xFF0
  7889                           postinc0	equ	0xFEE
  7890                           plusw0	equ	0xFEB
  7891                           wreg	equ	0xFE8
  7892                           postinc1	equ	0xFE6
  7893                           postdec1	equ	0xFE5
  7894                           fsr1h	equ	0xFE2
  7895                           fsr1l	equ	0xFE1
  7896                           indf2	equ	0xFDF
  7897                           postinc2	equ	0xFDE
  7898                           postdec2	equ	0xFDD
  7899                           plusw2	equ	0xFDB
  7900                           fsr2h	equ	0xFDA
  7901                           fsr2l	equ	0xFD9
  7902                           status	equ	0xFD8
  7903                           
  7904 ;; *************** function _USBWakeFromSuspend *****************
  7905 ;; Defined at:
  7906 ;;		line 2321 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  7907 ;; Parameters:    Size  Location     Type
  7908 ;;		None
  7909 ;; Auto vars:     Size  Location     Type
  7910 ;;		None
  7911 ;; Return value:  Size  Location     Type
  7912 ;;                  1    wreg      void 
  7913 ;; Registers used:
  7914 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7915 ;; Tracked objects:
  7916 ;;		On entry : 0/0
  7917 ;;		On exit  : 0/0
  7918 ;;		Unchanged: 0/0
  7919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7920 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7923 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7924 ;;Total ram usage:        0 bytes
  7925 ;; Hardware stack levels used:    1
  7926 ;; Hardware stack levels required when called:   15
  7927 ;; This function calls:
  7928 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7929 ;; This function is called by:
  7930 ;;		_USBDeviceTasks
  7931 ;; This function uses a non-reentrant model
  7932 ;;
  7933                           
  7934                           	psect	text29
  7935  006326                     __ptext29:
  7936                           	opt stack 0
  7937  006326                     _USBWakeFromSuspend:
  7938                           	opt stack 11
  7939                           
  7940                           ;usb_device.c: 2323: USBBusIsSuspended = 0;
  7941                           
  7942                           ;incstack = 0
  7943  006326  0E00               	movlw	0
  7944  006328  0101               	movlb	1	; () banked
  7945  00632A  6FE0               	movwf	_USBBusIsSuspended& (0+255),b
  7946                           
  7947                           ; BSR set to: 1
  7948                           ;usb_device.c: 2329: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
  7949  00632C  0E00               	movlw	0
  7950  00632E  0100               	movlb	0	; () banked
  7951  006330  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  7952  006332  0E74               	movlw	116
  7953  006334  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  7954  006336  0E00               	movlw	0
  7955  006338  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  7956  00633A  0E00               	movlw	0
  7957  00633C  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  7958  00633E  0E00               	movlw	0
  7959  006340  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  7960  006342  0E00               	movlw	0
  7961  006344  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  7962  006346  EC05  F02C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7963                           
  7964                           ;usb_device.c: 2336: UCONbits.SUSPND = 0;
  7965  00634A  9265               	bcf	3941,1,c	;volatile
  7966                           
  7967                           ;usb_device.c: 2341: UIEbits.ACTVIE = 0;
  7968  00634C  010F               	movlb	15	; () banked
  7969  00634E  9536               	bcf	54,2,b	;volatile
  7970                           
  7971                           ;usb_device.c: 2359: while(UIRbits.ACTVIF)
  7972  006350  D001               	goto	l1768
  7973  006352                     
  7974                           ;usb_device.c: 2361: {
  7975                           ;usb_device.c: 2362: (UIR &= 0xFB);
  7976                           
  7977                           ; BSR set to: 15
  7978  006352  9462               	bcf	3938,2,c	;volatile
  7979  006354                     l1768:
  7980  006354  B462               	btfsc	3938,2,c	;volatile
  7981  006356  D7FD               	goto	l1769
  7982                           
  7983                           ;usb_device.c: 2363: }
  7984                           ;usb_device.c: 2365: USBTicksSinceSuspendEnd = 0;
  7985  006358  0E00               	movlw	0
  7986  00635A  0101               	movlb	1	; () banked
  7987  00635C  6FDE               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
  7988                           
  7989                           ; BSR set to: 1
  7990  00635E  0012               	return		;funcret
  7991  006360                     __end_of_USBWakeFromSuspend:
  7992                           	opt stack 0
  7993                           tosu	equ	0xFFF
  7994                           tosh	equ	0xFFE
  7995                           tosl	equ	0xFFD
  7996                           pclath	equ	0xFFA
  7997                           tblptru	equ	0xFF8
  7998                           tblptrh	equ	0xFF7
  7999                           tblptrl	equ	0xFF6
  8000                           tablat	equ	0xFF5
  8001                           prodh	equ	0xFF4
  8002                           prodl	equ	0xFF3
  8003                           intcon	equ	0xFF2
  8004                           intcon2	equ	0xFF1
  8005                           intcon3	equ	0xFF0
  8006                           postinc0	equ	0xFEE
  8007                           plusw0	equ	0xFEB
  8008                           wreg	equ	0xFE8
  8009                           postinc1	equ	0xFE6
  8010                           postdec1	equ	0xFE5
  8011                           fsr1h	equ	0xFE2
  8012                           fsr1l	equ	0xFE1
  8013                           indf2	equ	0xFDF
  8014                           postinc2	equ	0xFDE
  8015                           postdec2	equ	0xFDD
  8016                           plusw2	equ	0xFDB
  8017                           fsr2h	equ	0xFDA
  8018                           fsr2l	equ	0xFD9
  8019                           status	equ	0xFD8
  8020                           
  8021 ;; *************** function _USBSuspend *****************
  8022 ;; Defined at:
  8023 ;;		line 2263 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8024 ;; Parameters:    Size  Location     Type
  8025 ;;		None
  8026 ;; Auto vars:     Size  Location     Type
  8027 ;;		None
  8028 ;; Return value:  Size  Location     Type
  8029 ;;                  1    wreg      void 
  8030 ;; Registers used:
  8031 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8032 ;; Tracked objects:
  8033 ;;		On entry : 0/0
  8034 ;;		On exit  : 0/0
  8035 ;;		Unchanged: 0/0
  8036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8037 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8038 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8040 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8041 ;;Total ram usage:        0 bytes
  8042 ;; Hardware stack levels used:    1
  8043 ;; Hardware stack levels required when called:   15
  8044 ;; This function calls:
  8045 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  8046 ;; This function is called by:
  8047 ;;		_USBDeviceTasks
  8048 ;; This function uses a non-reentrant model
  8049 ;;
  8050                           
  8051                           	psect	text30
  8052  006470                     __ptext30:
  8053                           	opt stack 0
  8054  006470                     _USBSuspend:
  8055                           	opt stack 11
  8056                           
  8057                           ;usb_device.c: 2288: UIEbits.ACTVIE = 1;
  8058                           
  8059                           ; BSR set to: 1
  8060                           ;incstack = 0
  8061  006470  010F               	movlb	15	; () banked
  8062  006472  8536               	bsf	54,2,b	;volatile
  8063                           
  8064                           ; BSR set to: 15
  8065                           ;usb_device.c: 2289: (UIR &= 0xEF);
  8066  006474  9862               	bcf	3938,4,c	;volatile
  8067                           
  8068                           ; BSR set to: 15
  8069                           ;usb_device.c: 2292: UCONbits.SUSPND = 1;
  8070  006476  8265               	bsf	3941,1,c	;volatile
  8071                           
  8072                           ; BSR set to: 15
  8073                           ;usb_device.c: 2295: USBBusIsSuspended = 1;
  8074  006478  0E01               	movlw	1
  8075  00647A  0101               	movlb	1	; () banked
  8076  00647C  6FE0               	movwf	_USBBusIsSuspended& (0+255),b
  8077                           
  8078                           ; BSR set to: 1
  8079                           ;usb_device.c: 2296: USBTicksSinceSuspendEnd = 0;
  8080  00647E  0E00               	movlw	0
  8081  006480  6FDE               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
  8082                           
  8083                           ; BSR set to: 1
  8084                           ;usb_device.c: 2303: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
  8085  006482  0E00               	movlw	0
  8086  006484  0100               	movlb	0	; () banked
  8087  006486  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  8088  006488  0E75               	movlw	117
  8089  00648A  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  8090  00648C  0E00               	movlw	0
  8091  00648E  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  8092  006490  0E00               	movlw	0
  8093  006492  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  8094  006494  0E00               	movlw	0
  8095  006496  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  8096  006498  0E00               	movlw	0
  8097  00649A  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  8098  00649C  EC05  F02C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  8099  0064A0  0012               	return		;funcret
  8100  0064A2                     __end_of_USBSuspend:
  8101                           	opt stack 0
  8102                           tosu	equ	0xFFF
  8103                           tosh	equ	0xFFE
  8104                           tosl	equ	0xFFD
  8105                           pclath	equ	0xFFA
  8106                           tblptru	equ	0xFF8
  8107                           tblptrh	equ	0xFF7
  8108                           tblptrl	equ	0xFF6
  8109                           tablat	equ	0xFF5
  8110                           prodh	equ	0xFF4
  8111                           prodl	equ	0xFF3
  8112                           intcon	equ	0xFF2
  8113                           intcon2	equ	0xFF1
  8114                           intcon3	equ	0xFF0
  8115                           postinc0	equ	0xFEE
  8116                           plusw0	equ	0xFEB
  8117                           wreg	equ	0xFE8
  8118                           postinc1	equ	0xFE6
  8119                           postdec1	equ	0xFE5
  8120                           fsr1h	equ	0xFE2
  8121                           fsr1l	equ	0xFE1
  8122                           indf2	equ	0xFDF
  8123                           postinc2	equ	0xFDE
  8124                           postdec2	equ	0xFDD
  8125                           plusw2	equ	0xFDB
  8126                           fsr2h	equ	0xFDA
  8127                           fsr2l	equ	0xFD9
  8128                           status	equ	0xFD8
  8129                           
  8130 ;; *************** function _USBStallHandler *****************
  8131 ;; Defined at:
  8132 ;;		line 2220 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8133 ;; Parameters:    Size  Location     Type
  8134 ;;		None
  8135 ;; Auto vars:     Size  Location     Type
  8136 ;;		None
  8137 ;; Return value:  Size  Location     Type
  8138 ;;                  1    wreg      void 
  8139 ;; Registers used:
  8140 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8141 ;; Tracked objects:
  8142 ;;		On entry : 0/0
  8143 ;;		On exit  : 0/0
  8144 ;;		Unchanged: 0/0
  8145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8146 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8147 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8148 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8149 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8150 ;;Total ram usage:        1 bytes
  8151 ;; Hardware stack levels used:    1
  8152 ;; Hardware stack levels required when called:   11
  8153 ;; This function calls:
  8154 ;;		Nothing
  8155 ;; This function is called by:
  8156 ;;		_USBDeviceTasks
  8157 ;; This function uses a non-reentrant model
  8158 ;;
  8159                           
  8160                           	psect	text31
  8161  006020                     __ptext31:
  8162                           	opt stack 0
  8163  006020                     _USBStallHandler:
  8164                           	opt stack 15
  8165                           
  8166                           ;usb_device.c: 2232: if(UEP0bits.EPSTALL == 1)
  8167                           
  8168                           ;incstack = 0
  8169  006020  010F               	movlb	15	; () banked
  8170  006022  A126               	btfss	38,0,b	;volatile
  8171  006024  D01D               	goto	l1760
  8172                           
  8173                           ; BSR set to: 15
  8174                           ;usb_device.c: 2233: {
  8175                           ;usb_device.c: 2235: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
  8176  006026  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  8177  00602A  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  8178  00602E  0E80               	movlw	128
  8179  006030  18DE               	xorwf	postinc2,w,c
  8180  006032  A4D8               	btfss	status,2,c
  8181  006034  D014               	goto	l1761
  8182                           
  8183                           ; BSR set to: 15
  8184  006036  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
  8185  00603A  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  8186  00603E  0E84               	movlw	132
  8187  006040  18DE               	xorwf	postinc2,w,c
  8188  006042  A4D8               	btfss	status,2,c
  8189  006044  D00C               	goto	l1761
  8190                           
  8191                           ; BSR set to: 15
  8192                           ;usb_device.c: 2236: {
  8193                           ;usb_device.c: 2238: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  8194  006046  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  8195  00604A  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  8196  00604E  0E0C               	movlw	12
  8197  006050  6EDF               	movwf	indf2,c
  8198                           
  8199                           ; BSR set to: 15
  8200                           ;usb_device.c: 2239: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
  8201  006052  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  8202  006056  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  8203  00605A  0E00               	movlw	0
  8204  00605C  8EDB               	bsf	plusw2,7,c
  8205  00605E                     l1761:
  8206                           
  8207                           ; BSR set to: 15
  8208                           ;usb_device.c: 2240: }
  8209                           ;usb_device.c: 2241: UEP0bits.EPSTALL = 0;
  8210                           
  8211                           ; BSR set to: 15
  8212  00605E  9126               	bcf	38,0,b	;volatile
  8213  006060                     l1760:
  8214                           
  8215                           ; BSR set to: 15
  8216                           ;usb_device.c: 2242: }
  8217                           ;usb_device.c: 2244: (UIR &= 0xDF);
  8218  006060  9A62               	bcf	3938,5,c	;volatile
  8219                           
  8220                           ; BSR set to: 15
  8221  006062  0012               	return		;funcret
  8222  006064                     __end_of_USBStallHandler:
  8223                           	opt stack 0
  8224                           tosu	equ	0xFFF
  8225                           tosh	equ	0xFFE
  8226                           tosl	equ	0xFFD
  8227                           pclath	equ	0xFFA
  8228                           tblptru	equ	0xFF8
  8229                           tblptrh	equ	0xFF7
  8230                           tblptrl	equ	0xFF6
  8231                           tablat	equ	0xFF5
  8232                           prodh	equ	0xFF4
  8233                           prodl	equ	0xFF3
  8234                           intcon	equ	0xFF2
  8235                           intcon2	equ	0xFF1
  8236                           intcon3	equ	0xFF0
  8237                           postinc0	equ	0xFEE
  8238                           plusw0	equ	0xFEB
  8239                           wreg	equ	0xFE8
  8240                           postinc1	equ	0xFE6
  8241                           postdec1	equ	0xFE5
  8242                           fsr1h	equ	0xFE2
  8243                           fsr1l	equ	0xFE1
  8244                           indf2	equ	0xFDF
  8245                           postinc2	equ	0xFDE
  8246                           postdec2	equ	0xFDD
  8247                           plusw2	equ	0xFDB
  8248                           fsr2h	equ	0xFDA
  8249                           fsr2l	equ	0xFD9
  8250                           status	equ	0xFD8
  8251                           
  8252 ;; *************** function _USBIncrement1msInternalTimers *****************
  8253 ;; Defined at:
  8254 ;;		line 3042 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8255 ;; Parameters:    Size  Location     Type
  8256 ;;		None
  8257 ;; Auto vars:     Size  Location     Type
  8258 ;;		None
  8259 ;; Return value:  Size  Location     Type
  8260 ;;                  1    wreg      void 
  8261 ;; Registers used:
  8262 ;;		wreg, status,2, status,0
  8263 ;; Tracked objects:
  8264 ;;		On entry : 0/0
  8265 ;;		On exit  : 0/0
  8266 ;;		Unchanged: 0/0
  8267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8268 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8269 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8270 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8271 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8272 ;;Total ram usage:        0 bytes
  8273 ;; Hardware stack levels used:    1
  8274 ;; Hardware stack levels required when called:   11
  8275 ;; This function calls:
  8276 ;;		Nothing
  8277 ;; This function is called by:
  8278 ;;		_USBDeviceTasks
  8279 ;; This function uses a non-reentrant model
  8280 ;;
  8281                           
  8282                           	psect	text32
  8283  006770                     __ptext32:
  8284                           	opt stack 0
  8285  006770                     _USBIncrement1msInternalTimers:
  8286                           	opt stack 15
  8287                           
  8288                           ;usb_device.c: 3050: USB1msTickCount++;
  8289                           
  8290                           ; BSR set to: 15
  8291                           ;incstack = 0
  8292  006770  0E01               	movlw	1
  8293  006772  0103               	movlb	3	; () banked
  8294  006774  2710               	addwf	_USB1msTickCount& (0+255),f,b
  8295  006776  0E00               	movlw	0
  8296  006778  2311               	addwfc	(_USB1msTickCount+1)& (0+255),f,b
  8297  00677A  2312               	addwfc	(_USB1msTickCount+2)& (0+255),f,b
  8298  00677C  2313               	addwfc	(_USB1msTickCount+3)& (0+255),f,b
  8299                           
  8300                           ; BSR set to: 3
  8301                           ;usb_device.c: 3051: if(USBBusIsSuspended == 0)
  8302  00677E  0101               	movlb	1	; () banked
  8303  006780  51E0               	movf	_USBBusIsSuspended& (0+255),w,b
  8304  006782  A4D8               	btfss	status,2,c
  8305  006784  0012               	return	
  8306                           
  8307                           ; BSR set to: 1
  8308                           ;usb_device.c: 3052: {
  8309                           ;usb_device.c: 3053: USBTicksSinceSuspendEnd++;
  8310  006786  2BDE               	incf	_USBTicksSinceSuspendEnd& (0+255),f,b
  8311                           
  8312                           ; BSR set to: 1
  8313                           ;usb_device.c: 3055: if(USBTicksSinceSuspendEnd == 0)
  8314  006788  51DE               	movf	_USBTicksSinceSuspendEnd& (0+255),w,b
  8315  00678A  A4D8               	btfss	status,2,c
  8316  00678C  0012               	return	
  8317                           
  8318                           ; BSR set to: 1
  8319                           ;usb_device.c: 3056: {
  8320                           ;usb_device.c: 3057: USBTicksSinceSuspendEnd = 255;
  8321  00678E  69DE               	setf	_USBTicksSinceSuspendEnd& (0+255),b
  8322                           
  8323                           ; BSR set to: 1
  8324  006790  0012               	return	
  8325  006792                     __end_of_USBIncrement1msInternalTimers:
  8326                           	opt stack 0
  8327                           tosu	equ	0xFFF
  8328                           tosh	equ	0xFFE
  8329                           tosl	equ	0xFFD
  8330                           pclath	equ	0xFFA
  8331                           tblptru	equ	0xFF8
  8332                           tblptrh	equ	0xFF7
  8333                           tblptrl	equ	0xFF6
  8334                           tablat	equ	0xFF5
  8335                           prodh	equ	0xFF4
  8336                           prodl	equ	0xFF3
  8337                           intcon	equ	0xFF2
  8338                           intcon2	equ	0xFF1
  8339                           intcon3	equ	0xFF0
  8340                           postinc0	equ	0xFEE
  8341                           plusw0	equ	0xFEB
  8342                           wreg	equ	0xFE8
  8343                           postinc1	equ	0xFE6
  8344                           postdec1	equ	0xFE5
  8345                           fsr1h	equ	0xFE2
  8346                           fsr1l	equ	0xFE1
  8347                           indf2	equ	0xFDF
  8348                           postinc2	equ	0xFDE
  8349                           postdec2	equ	0xFDD
  8350                           plusw2	equ	0xFDB
  8351                           fsr2h	equ	0xFDA
  8352                           fsr2l	equ	0xFD9
  8353                           status	equ	0xFD8
  8354                           
  8355 ;; *************** function _USBDeviceInit *****************
  8356 ;; Defined at:
  8357 ;;		line 295 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8358 ;; Parameters:    Size  Location     Type
  8359 ;;		None
  8360 ;; Auto vars:     Size  Location     Type
  8361 ;;  i               1   37[BANK0 ] unsigned char 
  8362 ;; Return value:  Size  Location     Type
  8363 ;;                  1    wreg      void 
  8364 ;; Registers used:
  8365 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8366 ;; Tracked objects:
  8367 ;;		On entry : 0/0
  8368 ;;		On exit  : 0/0
  8369 ;;		Unchanged: 0/0
  8370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8371 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8372 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8373 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8374 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8375 ;;Total ram usage:        1 bytes
  8376 ;; Hardware stack levels used:    1
  8377 ;; Hardware stack levels required when called:   12
  8378 ;; This function calls:
  8379 ;;		_memset
  8380 ;; This function is called by:
  8381 ;;		_USBDeviceTasks
  8382 ;;		_UsbDevice_MainTask
  8383 ;; This function uses a non-reentrant model
  8384 ;;
  8385                           
  8386                           	psect	text33
  8387  00258A                     __ptext33:
  8388                           	opt stack 0
  8389  00258A                     _USBDeviceInit:
  8390                           	opt stack 14
  8391                           
  8392                           ;usb_device.c: 297: uint8_t i;
  8393                           ;usb_device.c: 299: {PIE2bits.USBIE = 0;};
  8394                           
  8395                           ; BSR set to: 1
  8396                           ;incstack = 0
  8397  00258A  98A0               	bcf	4000,4,c	;volatile
  8398                           
  8399                           ;usb_device.c: 303: ;
  8400                           ;usb_device.c: 306: {UEIR = 0;};
  8401  00258C  0E00               	movlw	0
  8402  00258E  6E63               	movwf	3939,c	;volatile
  8403                           
  8404                           ;usb_device.c: 309: {UIR = 0;};
  8405  002590  0E00               	movlw	0
  8406  002592  6E62               	movwf	3938,c	;volatile
  8407                           
  8408                           ;usb_device.c: 312: UEP0 = 0;
  8409  002594  0E00               	movlw	0
  8410  002596  010F               	movlb	15	; () banked
  8411  002598  6F26               	movwf	38,b	;volatile
  8412                           
  8413                           ; BSR set to: 15
  8414                           ;usb_device.c: 314: memset((void*)&UEP1,0x00,(2));;
  8415  00259A  0E27               	movlw	39
  8416  00259C  0100               	movlb	0	; () banked
  8417  00259E  6F7D               	movwf	memset@p1& (0+255),b
  8418  0025A0  0E0F               	movlw	15
  8419  0025A2  6F7E               	movwf	(memset@p1+1)& (0+255),b
  8420  0025A4  0E00               	movlw	0
  8421  0025A6  6F80               	movwf	(memset@c+1)& (0+255),b
  8422  0025A8  0E00               	movlw	0
  8423  0025AA  6F7F               	movwf	memset@c& (0+255),b
  8424  0025AC  0E00               	movlw	0
  8425  0025AE  6F82               	movwf	(memset@n+1)& (0+255),b
  8426  0025B0  0E02               	movlw	2
  8427  0025B2  6F81               	movwf	memset@n& (0+255),b
  8428  0025B4  EC82  F032         	call	_memset	;wreg free
  8429                           
  8430                           ;usb_device.c: 316: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  8431  0025B8  0E16               	movlw	22
  8432  0025BA  010F               	movlb	15	; () banked
  8433  0025BC  6F39               	movwf	57,b	;volatile
  8434                           
  8435                           ; BSR set to: 15
  8436  0025BE  0E9F               	movlw	159
  8437  0025C0  6F37               	movwf	55,b	;volatile
  8438                           
  8439                           ; BSR set to: 15
  8440  0025C2  0E7B               	movlw	123
  8441  0025C4  6F36               	movwf	54,b	;volatile
  8442                           
  8443                           ; BSR set to: 15
  8444                           ;usb_device.c: 319: ;
  8445                           ;usb_device.c: 322: ;
  8446                           ;usb_device.c: 325: for(i = 0; i < (sizeof(BDT)/sizeof(BDT_ENTRY)); i++)
  8447  0025C6  0E00               	movlw	0
  8448  0025C8  0100               	movlb	0	; () banked
  8449  0025CA  6F85               	movwf	USBDeviceInit@i& (0+255),b
  8450  0025CC                     l14628:
  8451                           
  8452                           ; BSR set to: 0
  8453  0025CC  0E0B               	movlw	11
  8454  0025CE  6585               	cpfsgt	USBDeviceInit@i& (0+255),b
  8455  0025D0  D001               	goto	l1604
  8456  0025D2  D00E               	goto	u13770
  8457  0025D4                     l1604:
  8458                           
  8459                           ; BSR set to: 0
  8460                           ;usb_device.c: 326: {
  8461                           ;usb_device.c: 327: BDT[i].Val = 0x00;
  8462                           
  8463                           ; BSR set to: 0
  8464  0025D4  5185               	movf	USBDeviceInit@i& (0+255),w,b
  8465  0025D6  0D04               	mullw	4
  8466  0025D8  0E00               	movlw	0
  8467  0025DA  24F3               	addwf	prodl,w,c
  8468  0025DC  6ED9               	movwf	fsr2l,c
  8469  0025DE  0E04               	movlw	4
  8470  0025E0  20F4               	addwfc	prodh,w,c
  8471  0025E2  6EDA               	movwf	fsr2h,c
  8472  0025E4  6ADE               	clrf	postinc2,c
  8473  0025E6  6ADE               	clrf	postinc2,c
  8474  0025E8  6ADE               	clrf	postinc2,c
  8475  0025EA  6ADD               	clrf	postdec2,c
  8476                           
  8477                           ; BSR set to: 0
  8478  0025EC  2B85               	incf	USBDeviceInit@i& (0+255),f,b
  8479  0025EE  D7EE               	goto	l14628
  8480  0025F0                     u13770:
  8481                           
  8482                           ; BSR set to: 0
  8483                           ;usb_device.c: 328: }
  8484                           ;usb_device.c: 331: UCONbits.PPBRST = 1;
  8485  0025F0  8C65               	bsf	3941,6,c	;volatile
  8486                           
  8487                           ; BSR set to: 0
  8488                           ;usb_device.c: 334: UADDR = 0x00;
  8489  0025F2  0E00               	movlw	0
  8490  0025F4  010F               	movlb	15	; () banked
  8491  0025F6  6F38               	movwf	56,b	;volatile
  8492                           
  8493                           ; BSR set to: 15
  8494                           ;usb_device.c: 337: UCONbits.PKTDIS = 0;
  8495  0025F8  9865               	bcf	3941,4,c	;volatile
  8496                           
  8497                           ; BSR set to: 15
  8498                           ;usb_device.c: 340: UCONbits.PPBRST = 0;
  8499  0025FA  9C65               	bcf	3941,6,c	;volatile
  8500  0025FC                     
  8501                           ;usb_device.c: 344: {
  8502                           ;usb_device.c: 345: (UIR &= 0xF7);
  8503                           
  8504                           ; BSR set to: 15
  8505  0025FC  9662               	bcf	3938,3,c	;volatile
  8506                           
  8507                           ;usb_device.c: 347: inPipes[0].info.Val = 0;
  8508  0025FE  0E00               	movlw	0
  8509  002600  0100               	movlb	0	; () banked
  8510  002602  6FB3               	movwf	(_inPipes+3)& (0+255),b
  8511                           
  8512                           ; BSR set to: 0
  8513                           ;usb_device.c: 348: outPipes[0].info.Val = 0;
  8514  002604  0E00               	movlw	0
  8515  002606  0101               	movlb	1	; () banked
  8516  002608  6FCC               	movwf	(_outPipes+3)& (0+255),b
  8517                           
  8518                           ; BSR set to: 1
  8519                           ;usb_device.c: 349: outPipes[0].wCount.Val = 0;
  8520  00260A  0E00               	movlw	0
  8521  00260C  6FCE               	movwf	(_outPipes+5)& (0+255),b
  8522  00260E  0E00               	movlw	0
  8523  002610  6FCD               	movwf	(_outPipes+4)& (0+255),b
  8524                           
  8525                           ; BSR set to: 1
  8526                           ;usb_device.c: 350: }while(UIRbits.TRNIF == 1);
  8527  002612  B662               	btfsc	3938,3,c	;volatile
  8528  002614  D7F3               	goto	l1606
  8529                           
  8530                           ; BSR set to: 1
  8531                           ;usb_device.c: 354: USBStatusStageEnabledFlag1 = 1;
  8532                           
  8533                           ; BSR set to: 1
  8534  002616  0E01               	movlw	1
  8535  002618  6E28               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
  8536                           
  8537                           ;usb_device.c: 355: USBStatusStageEnabledFlag2 = 1;
  8538  00261A  0E01               	movlw	1
  8539  00261C  6E27               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  8540                           
  8541                           ;usb_device.c: 357: USBDeferINDataStagePackets = 0;
  8542  00261E  0E00               	movlw	0
  8543  002620  6E26               	movwf	_USBDeferINDataStagePackets,c	;volatile
  8544                           
  8545                           ;usb_device.c: 358: USBDeferOUTDataStagePackets = 0;
  8546  002622  0E00               	movlw	0
  8547  002624  6E25               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
  8548                           
  8549                           ;usb_device.c: 359: USBBusIsSuspended = 0;
  8550  002626  0E00               	movlw	0
  8551  002628  6FE0               	movwf	_USBBusIsSuspended& (0+255),b
  8552                           
  8553                           ;usb_device.c: 363: for(i = 0; i < (uint8_t)(2+1u); i++)
  8554  00262A  0E00               	movlw	0
  8555  00262C  0100               	movlb	0	; () banked
  8556  00262E  6F85               	movwf	USBDeviceInit@i& (0+255),b
  8557  002630                     l14656:
  8558                           
  8559                           ; BSR set to: 0
  8560  002630  0E02               	movlw	2
  8561  002632  6585               	cpfsgt	USBDeviceInit@i& (0+255),b
  8562  002634  D001               	goto	l1608
  8563  002636  D02E               	goto	u13800
  8564  002638                     l1608:
  8565                           
  8566                           ; BSR set to: 0
  8567                           ;usb_device.c: 364: {
  8568                           ;usb_device.c: 365: pBDTEntryIn[i] = 0u;
  8569                           
  8570                           ; BSR set to: 0
  8571  002638  5185               	movf	USBDeviceInit@i& (0+255),w,b
  8572  00263A  0D02               	mullw	2
  8573  00263C  0EB6               	movlw	low _pBDTEntryIn
  8574  00263E  24F3               	addwf	prodl,w,c
  8575  002640  6ED9               	movwf	fsr2l,c
  8576  002642  0E00               	movlw	high _pBDTEntryIn
  8577  002644  20F4               	addwfc	prodh,w,c
  8578  002646  6EDA               	movwf	fsr2h,c
  8579  002648  0E00               	movlw	0
  8580  00264A  6EDE               	movwf	postinc2,c
  8581  00264C  0E00               	movlw	0
  8582  00264E  6EDD               	movwf	postdec2,c
  8583                           
  8584                           ;usb_device.c: 366: pBDTEntryOut[i] = 0u;
  8585  002650  5185               	movf	USBDeviceInit@i& (0+255),w,b
  8586  002652  0D02               	mullw	2
  8587  002654  0E06               	movlw	low _pBDTEntryOut
  8588  002656  24F3               	addwf	prodl,w,c
  8589  002658  6ED9               	movwf	fsr2l,c
  8590  00265A  0E03               	movlw	high _pBDTEntryOut
  8591  00265C  20F4               	addwfc	prodh,w,c
  8592  00265E  6EDA               	movwf	fsr2h,c
  8593  002660  0E00               	movlw	0
  8594  002662  6EDE               	movwf	postinc2,c
  8595  002664  0E00               	movlw	0
  8596  002666  6EDD               	movwf	postdec2,c
  8597                           
  8598                           ;usb_device.c: 367: ep_data_in[i].Val = 0u;
  8599  002668  5185               	movf	USBDeviceInit@i& (0+255),w,b
  8600  00266A  0D01               	mullw	1
  8601  00266C  0ED1               	movlw	low _ep_data_in
  8602  00266E  24F3               	addwf	prodl,w,c
  8603  002670  6ED9               	movwf	fsr2l,c
  8604  002672  0E02               	movlw	high _ep_data_in
  8605  002674  20F4               	addwfc	prodh,w,c
  8606  002676  6EDA               	movwf	fsr2h,c
  8607  002678  0E00               	movlw	0
  8608  00267A  6EDF               	movwf	indf2,c
  8609                           
  8610                           ;usb_device.c: 368: ep_data_out[i].Val = 0u;
  8611  00267C  5185               	movf	USBDeviceInit@i& (0+255),w,b
  8612  00267E  0D01               	mullw	1
  8613  002680  0ECE               	movlw	low _ep_data_out
  8614  002682  24F3               	addwf	prodl,w,c
  8615  002684  6ED9               	movwf	fsr2l,c
  8616  002686  0E02               	movlw	high _ep_data_out
  8617  002688  20F4               	addwfc	prodh,w,c
  8618  00268A  6EDA               	movwf	fsr2h,c
  8619  00268C  0E00               	movlw	0
  8620  00268E  6EDF               	movwf	indf2,c
  8621                           
  8622                           ; BSR set to: 0
  8623  002690  2B85               	incf	USBDeviceInit@i& (0+255),f,b
  8624  002692  D7CE               	goto	l14656
  8625  002694                     u13800:
  8626                           
  8627                           ; BSR set to: 0
  8628                           ;usb_device.c: 369: }
  8629                           ;usb_device.c: 372: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  8630                           
  8631                           ; BSR set to: 0
  8632  002694  0E08               	movlw	8
  8633  002696  6FB6               	movwf	_pBDTEntryIn& (0+255),b
  8634  002698  0E04               	movlw	4
  8635  00269A  6FB7               	movwf	(_pBDTEntryIn+1)& (0+255),b
  8636                           
  8637                           ; BSR set to: 0
  8638                           ;usb_device.c: 374: UEP0 = 0x06|0x10;
  8639  00269C  0E16               	movlw	22
  8640  00269E  010F               	movlb	15	; () banked
  8641  0026A0  6F26               	movwf	38,b	;volatile
  8642                           
  8643                           ; BSR set to: 15
  8644                           ;usb_device.c: 376: BDT[0].ADR = ((uint16_t)(&SetupPkt));
  8645  0026A2  0E04               	movlw	4
  8646  0026A4  0104               	movlb	4	; () banked
  8647  0026A6  6F03               	movwf	3,b	;volatile
  8648  0026A8  0E30               	movlw	48
  8649  0026AA  6F02               	movwf	2,b	;volatile
  8650                           
  8651                           ; BSR set to: 4
  8652                           ;usb_device.c: 377: BDT[0].CNT = 8;
  8653  0026AC  0E08               	movlw	8
  8654  0026AE  6F01               	movwf	1,b	;volatile
  8655                           
  8656                           ; BSR set to: 4
  8657                           ;usb_device.c: 378: BDT[0].STAT.Val = 0x00|0x04;
  8658  0026B0  0E04               	movlw	4
  8659  0026B2  6F00               	movwf	0,b	;volatile
  8660                           
  8661                           ; BSR set to: 4
  8662                           ;usb_device.c: 379: BDT[0].STAT.Val |= 0x80;
  8663  0026B4  8F00               	bsf	0,7,b	;volatile
  8664                           
  8665                           ; BSR set to: 4
  8666                           ;usb_device.c: 382: USBActiveConfiguration = 0;
  8667  0026B6  0E00               	movlw	0
  8668  0026B8  0100               	movlb	0	; () banked
  8669  0026BA  6FD6               	movwf	_USBActiveConfiguration& (0+255),b
  8670                           
  8671                           ; BSR set to: 0
  8672                           ;usb_device.c: 384: USB1msTickCount = 0;
  8673  0026BC  0E00               	movlw	0
  8674  0026BE  0103               	movlb	3	; () banked
  8675  0026C0  6F10               	movwf	_USB1msTickCount& (0+255),b
  8676  0026C2  0E00               	movlw	0
  8677  0026C4  6F11               	movwf	(_USB1msTickCount+1)& (0+255),b
  8678  0026C6  0E00               	movlw	0
  8679  0026C8  6F12               	movwf	(_USB1msTickCount+2)& (0+255),b
  8680  0026CA  0E00               	movlw	0
  8681  0026CC  6F13               	movwf	(_USB1msTickCount+3)& (0+255),b
  8682                           
  8683                           ; BSR set to: 3
  8684                           ;usb_device.c: 385: USBTicksSinceSuspendEnd = 0;
  8685  0026CE  0E00               	movlw	0
  8686  0026D0  0101               	movlb	1	; () banked
  8687  0026D2  6FDE               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
  8688                           
  8689                           ; BSR set to: 1
  8690                           ;usb_device.c: 388: USBDeviceState = DETACHED_STATE;
  8691  0026D4  0E00               	movlw	0
  8692  0026D6  0100               	movlb	0	; () banked
  8693  0026D8  6FCE               	movwf	_USBDeviceState& (0+255),b
  8694                           
  8695                           ; BSR set to: 0
  8696  0026DA  0012               	return		;funcret
  8697  0026DC                     __end_of_USBDeviceInit:
  8698                           	opt stack 0
  8699                           tosu	equ	0xFFF
  8700                           tosh	equ	0xFFE
  8701                           tosl	equ	0xFFD
  8702                           pclath	equ	0xFFA
  8703                           tblptru	equ	0xFF8
  8704                           tblptrh	equ	0xFF7
  8705                           tblptrl	equ	0xFF6
  8706                           tablat	equ	0xFF5
  8707                           prodh	equ	0xFF4
  8708                           prodl	equ	0xFF3
  8709                           intcon	equ	0xFF2
  8710                           intcon2	equ	0xFF1
  8711                           intcon3	equ	0xFF0
  8712                           postinc0	equ	0xFEE
  8713                           plusw0	equ	0xFEB
  8714                           wreg	equ	0xFE8
  8715                           postinc1	equ	0xFE6
  8716                           postdec1	equ	0xFE5
  8717                           fsr1h	equ	0xFE2
  8718                           fsr1l	equ	0xFE1
  8719                           indf2	equ	0xFDF
  8720                           postinc2	equ	0xFDE
  8721                           postdec2	equ	0xFDD
  8722                           plusw2	equ	0xFDB
  8723                           fsr2h	equ	0xFDA
  8724                           fsr2l	equ	0xFD9
  8725                           status	equ	0xFD8
  8726                           
  8727 ;; *************** function _USBCtrlEPService *****************
  8728 ;; Defined at:
  8729 ;;		line 2390 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8730 ;; Parameters:    Size  Location     Type
  8731 ;;		None
  8732 ;; Auto vars:     Size  Location     Type
  8733 ;;		None
  8734 ;; Return value:  Size  Location     Type
  8735 ;;                  1    wreg      void 
  8736 ;; Registers used:
  8737 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8738 ;; Tracked objects:
  8739 ;;		On entry : 0/0
  8740 ;;		On exit  : 0/0
  8741 ;;		Unchanged: 0/0
  8742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8743 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8744 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8745 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8746 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8747 ;;Total ram usage:        1 bytes
  8748 ;; Hardware stack levels used:    1
  8749 ;; Hardware stack levels required when called:   18
  8750 ;; This function calls:
  8751 ;;		_USBCtrlTrfInHandler
  8752 ;;		_USBCtrlTrfOutHandler
  8753 ;;		_USBCtrlTrfSetupHandler
  8754 ;;		_memcpy
  8755 ;; This function is called by:
  8756 ;;		_USBDeviceTasks
  8757 ;; This function uses a non-reentrant model
  8758 ;;
  8759                           
  8760                           	psect	text34
  8761  004CF4                     __ptext34:
  8762                           	opt stack 0
  8763  004CF4                     _USBCtrlEPService:
  8764                           	opt stack 8
  8765                           
  8766                           ;usb_device.c: 2396: USBStatusStageTimeoutCounter = (uint8_t)45;
  8767                           
  8768                           ; BSR set to: 0
  8769                           ;incstack = 0
  8770  004CF4  0E2D               	movlw	45
  8771  004CF6  6E29               	movwf	_USBStatusStageTimeoutCounter,c
  8772                           
  8773                           ;usb_device.c: 2400: if((USTATcopy.Val & ~0x02) == 0x00)
  8774  004CF8  C0D5  F097         	movff	_USTATcopy,??_USBCtrlEPService
  8775  004CFC  0EFD               	movlw	253
  8776  004CFE  0100               	movlb	0	; () banked
  8777  004D00  1797               	andwf	??_USBCtrlEPService& (0+255),f,b
  8778  004D02  A4D8               	btfss	status,2,c
  8779  004D04  D038               	goto	l1774
  8780                           
  8781                           ; BSR set to: 0
  8782                           ;usb_device.c: 2401: {
  8783                           ;usb_device.c: 2404: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
  8784  004D06  C0D5  F097         	movff	_USTATcopy,??_USBCtrlEPService
  8785  004D0A  90D8               	bcf	status,0,c
  8786  004D0C  3397               	rrcf	??_USBCtrlEPService& (0+255),f,b
  8787  004D0E  0E3F               	movlw	63
  8788  004D10  1797               	andwf	??_USBCtrlEPService& (0+255),f,b
  8789  004D12  5197               	movf	??_USBCtrlEPService& (0+255),w,b
  8790  004D14  0D04               	mullw	4
  8791  004D16  0E00               	movlw	0
  8792  004D18  24F3               	addwf	prodl,w,c
  8793  004D1A  6FC0               	movwf	_pBDTEntryEP0OutCurrent& (0+255),b
  8794  004D1C  0E04               	movlw	4
  8795  004D1E  20F4               	addwfc	prodh,w,c
  8796  004D20  6FC1               	movwf	(_pBDTEntryEP0OutCurrent+1)& (0+255),b
  8797                           
  8798                           ; BSR set to: 0
  8799                           ;usb_device.c: 2412: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  8800  004D22  C0C0  F0BE         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
  8801  004D26  C0C1  F0BF         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
  8802                           
  8803                           ; BSR set to: 0
  8804                           ;usb_device.c: 2414: ((uint8_t_VAL*)&pBDTEntryEP0OutNext)->Val ^= 0x0004;
  8805  004D2A  0E04               	movlw	4
  8806  004D2C  1BBE               	xorwf	_pBDTEntryEP0OutNext& (0+255),f,b
  8807                           
  8808                           ; BSR set to: 0
  8809                           ;usb_device.c: 2417: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
  8810  004D2E  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  8811  004D32  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  8812  004D36  30DF               	rrcf	223,w,c
  8813  004D38  32E8               	rrcf	wreg,f,c
  8814  004D3A  0B0F               	andlw	15
  8815  004D3C  0A0D               	xorlw	13
  8816  004D3E  A4D8               	btfss	status,2,c
  8817  004D40  D017               	goto	l1775
  8818                           
  8819                           ; BSR set to: 0
  8820                           ;usb_device.c: 2418: {
  8821                           ;usb_device.c: 2423: memcpy((uint8_t*)&SetupPkt, (uint8_t*)((void *)(pBDTEntryEP0OutCurr
      +                          ent->ADR)), 8);
  8822  004D42  0E30               	movlw	48
  8823  004D44  6F7D               	movwf	memcpy@d1& (0+255),b
  8824  004D46  0E04               	movlw	4
  8825  004D48  6F7E               	movwf	(memcpy@d1+1)& (0+255),b
  8826  004D4A  EE20 F002          	lfsr	2,2
  8827  004D4E  51C0               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
  8828  004D50  26D9               	addwf	fsr2l,f,c
  8829  004D52  51C1               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
  8830  004D54  22DA               	addwfc	fsr2h,f,c
  8831  004D56  CFDE F07F          	movff	postinc2,memcpy@s1
  8832  004D5A  CFDD F080          	movff	postdec2,memcpy@s1+1
  8833  004D5E  0E00               	movlw	0
  8834  004D60  6F82               	movwf	(memcpy@n+1)& (0+255),b
  8835  004D62  0E08               	movlw	8
  8836  004D64  6F81               	movwf	memcpy@n& (0+255),b
  8837  004D66  ECC9  F02F         	call	_memcpy	;wreg free
  8838                           
  8839                           ;usb_device.c: 2426: USBCtrlTrfSetupHandler();
  8840  004D6A  EC78  F028         	call	_USBCtrlTrfSetupHandler	;wreg free
  8841                           
  8842                           ;usb_device.c: 2427: }
  8843  004D6E  0012               	return	
  8844  004D70                     l1775:
  8845                           
  8846                           ;usb_device.c: 2428: else
  8847                           ;usb_device.c: 2429: {
  8848                           ;usb_device.c: 2431: USBCtrlTrfOutHandler();
  8849  004D70  EC3B  F02B         	call	_USBCtrlTrfOutHandler	;wreg free
  8850                           
  8851                           ;usb_device.c: 2432: }
  8852                           ;usb_device.c: 2433: }
  8853  004D74  0012               	return	
  8854  004D76                     l1774:
  8855                           
  8856                           ;usb_device.c: 2434: else if((USTATcopy.Val & ~0x02) == 0x04)
  8857  004D76  0100               	movlb	0	; () banked
  8858  004D78  51D5               	movf	_USTATcopy& (0+255),w,b
  8859  004D7A  0BFD               	andlw	253
  8860  004D7C  0A04               	xorlw	4
  8861  004D7E  A4D8               	btfss	status,2,c
  8862  004D80  0012               	return	
  8863                           
  8864                           ; BSR set to: 0
  8865                           ;usb_device.c: 2435: {
  8866                           ;usb_device.c: 2438: USBCtrlTrfInHandler();
  8867  004D82  EC9A  F020         	call	_USBCtrlTrfInHandler	;wreg free
  8868  004D86  0012               	return	
  8869  004D88                     __end_of_USBCtrlEPService:
  8870                           	opt stack 0
  8871                           tosu	equ	0xFFF
  8872                           tosh	equ	0xFFE
  8873                           tosl	equ	0xFFD
  8874                           pclath	equ	0xFFA
  8875                           tblptru	equ	0xFF8
  8876                           tblptrh	equ	0xFF7
  8877                           tblptrl	equ	0xFF6
  8878                           tablat	equ	0xFF5
  8879                           prodh	equ	0xFF4
  8880                           prodl	equ	0xFF3
  8881                           intcon	equ	0xFF2
  8882                           intcon2	equ	0xFF1
  8883                           intcon3	equ	0xFF0
  8884                           postinc0	equ	0xFEE
  8885                           plusw0	equ	0xFEB
  8886                           wreg	equ	0xFE8
  8887                           postinc1	equ	0xFE6
  8888                           postdec1	equ	0xFE5
  8889                           fsr1h	equ	0xFE2
  8890                           fsr1l	equ	0xFE1
  8891                           indf2	equ	0xFDF
  8892                           postinc2	equ	0xFDE
  8893                           postdec2	equ	0xFDD
  8894                           plusw2	equ	0xFDB
  8895                           fsr2h	equ	0xFDA
  8896                           fsr2l	equ	0xFD9
  8897                           status	equ	0xFD8
  8898                           
  8899 ;; *************** function _memcpy *****************
  8900 ;; Defined at:
  8901 ;;		line 27 in file "/opt/microchip/xc8/v1.45/sources/common/memcpy.c"
  8902 ;; Parameters:    Size  Location     Type
  8903 ;;  d1              2   29[BANK0 ] PTR void 
  8904 ;;		 -> SetupPkt(8), 
  8905 ;;  s1              2   31[BANK0 ] PTR const void 
  8906 ;;		 -> RAM(3775), CtrlTrfData(8), SetupPkt(8), 
  8907 ;;  n               2   33[BANK0 ] unsigned int 
  8908 ;; Auto vars:     Size  Location     Type
  8909 ;;  s               2   38[BANK0 ] PTR const unsigned char 
  8910 ;;		 -> RAM(3775), CtrlTrfData(8), SetupPkt(8), 
  8911 ;;  d               2   36[BANK0 ] PTR unsigned char 
  8912 ;;		 -> SetupPkt(8), 
  8913 ;;  tmp             1   35[BANK0 ] unsigned char 
  8914 ;; Return value:  Size  Location     Type
  8915 ;;                  2   29[BANK0 ] PTR void 
  8916 ;; Registers used:
  8917 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8918 ;; Tracked objects:
  8919 ;;		On entry : 0/0
  8920 ;;		On exit  : 0/0
  8921 ;;		Unchanged: 0/0
  8922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8923 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8924 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8926 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8927 ;;Total ram usage:       11 bytes
  8928 ;; Hardware stack levels used:    1
  8929 ;; Hardware stack levels required when called:   11
  8930 ;; This function calls:
  8931 ;;		Nothing
  8932 ;; This function is called by:
  8933 ;;		_USBCtrlEPService
  8934 ;; This function uses a non-reentrant model
  8935 ;;
  8936                           
  8937                           	psect	text35
  8938  005F92                     __ptext35:
  8939                           	opt stack 0
  8940  005F92                     _memcpy:
  8941                           	opt stack 14
  8942                           
  8943                           ;incstack = 0
  8944  005F92  C07F  F086         	movff	memcpy@s1,memcpy@s
  8945  005F96  C080  F087         	movff	memcpy@s1+1,memcpy@s+1
  8946  005F9A  C07D  F084         	movff	memcpy@d1,memcpy@d
  8947  005F9E  C07E  F085         	movff	memcpy@d1+1,memcpy@d+1
  8948  005FA2  D011               	goto	l3375
  8949  005FA4                     l13828:
  8950  005FA4  C086  FFD9         	movff	memcpy@s,fsr2l
  8951  005FA8  C087  FFDA         	movff	memcpy@s+1,fsr2h
  8952  005FAC  50DF               	movf	indf2,w,c
  8953  005FAE  0100               	movlb	0	; () banked
  8954  005FB0  6F83               	movwf	memcpy@tmp& (0+255),b
  8955                           
  8956                           ; BSR set to: 0
  8957  005FB2  4B86               	infsnz	memcpy@s& (0+255),f,b
  8958  005FB4  2B87               	incf	(memcpy@s+1)& (0+255),f,b
  8959                           
  8960                           ; BSR set to: 0
  8961  005FB6  C084  FFD9         	movff	memcpy@d,fsr2l
  8962  005FBA  C085  FFDA         	movff	memcpy@d+1,fsr2h
  8963  005FBE  C083  FFDF         	movff	memcpy@tmp,indf2
  8964                           
  8965                           ; BSR set to: 0
  8966  005FC2  4B84               	infsnz	memcpy@d& (0+255),f,b
  8967  005FC4  2B85               	incf	(memcpy@d+1)& (0+255),f,b
  8968  005FC6                     l3375:
  8969                           
  8970                           ; BSR set to: 0
  8971  005FC6  0100               	movlb	0	; () banked
  8972  005FC8  0781               	decf	memcpy@n& (0+255),f,b
  8973  005FCA  A0D8               	btfss	status,0,c
  8974  005FCC  0782               	decf	(memcpy@n+1)& (0+255),f,b
  8975  005FCE  2981               	incf	memcpy@n& (0+255),w,b
  8976  005FD0  E1E9               	bnz	l13828
  8977  005FD2  2982               	incf	(memcpy@n+1)& (0+255),w,b
  8978  005FD4  B4D8               	btfsc	status,2,c
  8979  005FD6  0012               	return	
  8980  005FD8  D7E5               	goto	l3376
  8981  005FDA                     __end_of_memcpy:
  8982                           	opt stack 0
  8983                           tosu	equ	0xFFF
  8984                           tosh	equ	0xFFE
  8985                           tosl	equ	0xFFD
  8986                           pclath	equ	0xFFA
  8987                           tblptru	equ	0xFF8
  8988                           tblptrh	equ	0xFF7
  8989                           tblptrl	equ	0xFF6
  8990                           tablat	equ	0xFF5
  8991                           prodh	equ	0xFF4
  8992                           prodl	equ	0xFF3
  8993                           intcon	equ	0xFF2
  8994                           intcon2	equ	0xFF1
  8995                           intcon3	equ	0xFF0
  8996                           postinc0	equ	0xFEE
  8997                           plusw0	equ	0xFEB
  8998                           wreg	equ	0xFE8
  8999                           postinc1	equ	0xFE6
  9000                           postdec1	equ	0xFE5
  9001                           fsr1h	equ	0xFE2
  9002                           fsr1l	equ	0xFE1
  9003                           indf2	equ	0xFDF
  9004                           postinc2	equ	0xFDE
  9005                           postdec2	equ	0xFDD
  9006                           plusw2	equ	0xFDB
  9007                           fsr2h	equ	0xFDA
  9008                           fsr2l	equ	0xFD9
  9009                           status	equ	0xFD8
  9010                           
  9011 ;; *************** function _USBCtrlTrfSetupHandler *****************
  9012 ;; Defined at:
  9013 ;;		line 2483 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  9014 ;; Parameters:    Size  Location     Type
  9015 ;;		None
  9016 ;; Auto vars:     Size  Location     Type
  9017 ;;		None
  9018 ;; Return value:  Size  Location     Type
  9019 ;;                  1    wreg      void 
  9020 ;; Registers used:
  9021 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9022 ;; Tracked objects:
  9023 ;;		On entry : 0/0
  9024 ;;		On exit  : 0/0
  9025 ;;		Unchanged: 0/0
  9026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9027 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9028 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9030 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9031 ;;Total ram usage:        0 bytes
  9032 ;; Hardware stack levels used:    1
  9033 ;; Hardware stack levels required when called:   17
  9034 ;; This function calls:
  9035 ;;		_USBCheckStdRequest
  9036 ;;		_USBCtrlEPServiceComplete
  9037 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  9038 ;; This function is called by:
  9039 ;;		_USBCtrlEPService
  9040 ;; This function uses a non-reentrant model
  9041 ;;
  9042                           
  9043                           	psect	text36
  9044  0050F0                     __ptext36:
  9045                           	opt stack 0
  9046  0050F0                     _USBCtrlTrfSetupHandler:
  9047                           	opt stack 8
  9048                           
  9049                           ;usb_device.c: 2488: shortPacketStatus = 0;
  9050                           
  9051                           ; BSR set to: 0
  9052                           ;incstack = 0
  9053  0050F0  0E00               	movlw	0
  9054  0050F2  0100               	movlb	0	; () banked
  9055  0050F4  6FCD               	movwf	_shortPacketStatus& (0+255),b
  9056                           
  9057                           ;usb_device.c: 2489: USBDeferStatusStagePacket = 0;
  9058  0050F6  0E00               	movlw	0
  9059  0050F8  6FCA               	movwf	_USBDeferStatusStagePacket& (0+255),b	;volatile
  9060                           
  9061                           ;usb_device.c: 2490: USBDeferINDataStagePackets = 0;
  9062  0050FA  0E00               	movlw	0
  9063  0050FC  6E26               	movwf	_USBDeferINDataStagePackets,c	;volatile
  9064                           
  9065                           ;usb_device.c: 2491: USBDeferOUTDataStagePackets = 0;
  9066  0050FE  0E00               	movlw	0
  9067  005100  6E25               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
  9068                           
  9069                           ;usb_device.c: 2492: BothEP0OutUOWNsSet = 0;
  9070  005102  0E00               	movlw	0
  9071  005104  0101               	movlb	1	; () banked
  9072  005106  6FDF               	movwf	_BothEP0OutUOWNsSet& (0+255),b
  9073                           
  9074                           ;usb_device.c: 2493: controlTransferState = 0;
  9075  005108  0E00               	movlw	0
  9076  00510A  0100               	movlb	0	; () banked
  9077  00510C  6FCC               	movwf	_controlTransferState& (0+255),b
  9078                           
  9079                           ; BSR set to: 0
  9080                           ;usb_device.c: 2502: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  9081  00510E  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
  9082  005112  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9083  005116  0E7F               	movlw	127
  9084  005118  16DF               	andwf	indf2,f,c
  9085                           
  9086                           ; BSR set to: 0
  9087                           ;usb_device.c: 2503: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  9088  00511A  0E04               	movlw	4
  9089  00511C  1BB6               	xorwf	_pBDTEntryIn& (0+255),f,b
  9090                           
  9091                           ; BSR set to: 0
  9092                           ;usb_device.c: 2504: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  9093  00511E  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
  9094  005122  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9095  005126  0E7F               	movlw	127
  9096  005128  16DF               	andwf	indf2,f,c
  9097                           
  9098                           ; BSR set to: 0
  9099                           ;usb_device.c: 2505: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  9100  00512A  0E04               	movlw	4
  9101  00512C  1BB6               	xorwf	_pBDTEntryIn& (0+255),f,b
  9102                           
  9103                           ; BSR set to: 0
  9104                           ;usb_device.c: 2506: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
  9105  00512E  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9106  005132  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9107  005136  0E7F               	movlw	127
  9108  005138  16DF               	andwf	indf2,f,c
  9109                           
  9110                           ; BSR set to: 0
  9111                           ;usb_device.c: 2508: inPipes[0].info.Val = 0;
  9112  00513A  0E00               	movlw	0
  9113  00513C  6FB3               	movwf	(_inPipes+3)& (0+255),b
  9114                           
  9115                           ; BSR set to: 0
  9116                           ;usb_device.c: 2509: inPipes[0].wCount.Val = 0;
  9117  00513E  0E00               	movlw	0
  9118  005140  6FB5               	movwf	(_inPipes+5)& (0+255),b
  9119  005142  0E00               	movlw	0
  9120  005144  6FB4               	movwf	(_inPipes+4)& (0+255),b
  9121                           
  9122                           ; BSR set to: 0
  9123                           ;usb_device.c: 2510: outPipes[0].info.Val = 0;
  9124  005146  0E00               	movlw	0
  9125  005148  0101               	movlb	1	; () banked
  9126  00514A  6FCC               	movwf	(_outPipes+3)& (0+255),b
  9127                           
  9128                           ; BSR set to: 1
  9129                           ;usb_device.c: 2511: outPipes[0].wCount.Val = 0;
  9130  00514C  0E00               	movlw	0
  9131  00514E  6FCE               	movwf	(_outPipes+5)& (0+255),b
  9132  005150  0E00               	movlw	0
  9133  005152  6FCD               	movwf	(_outPipes+4)& (0+255),b
  9134                           
  9135                           ; BSR set to: 1
  9136                           ;usb_device.c: 2517: USBCheckStdRequest();
  9137  005154  ECEF  F01A         	call	_USBCheckStdRequest	;wreg free
  9138                           
  9139                           ;usb_device.c: 2518: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
  9140  005158  0E00               	movlw	0
  9141  00515A  0100               	movlb	0	; () banked
  9142  00515C  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  9143  00515E  0E03               	movlw	3
  9144  005160  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  9145  005162  0E00               	movlw	0
  9146  005164  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  9147  005166  0E00               	movlw	0
  9148  005168  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  9149  00516A  0E00               	movlw	0
  9150  00516C  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  9151  00516E  0E00               	movlw	0
  9152  005170  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  9153  005172  EC05  F02C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  9154                           
  9155                           ;usb_device.c: 2531: USBCtrlEPServiceComplete();
  9156  005176  EC2C  F018         	call	_USBCtrlEPServiceComplete	;wreg free
  9157  00517A  0012               	return		;funcret
  9158  00517C                     __end_of_USBCtrlTrfSetupHandler:
  9159                           	opt stack 0
  9160                           tosu	equ	0xFFF
  9161                           tosh	equ	0xFFE
  9162                           tosl	equ	0xFFD
  9163                           pclath	equ	0xFFA
  9164                           tblptru	equ	0xFF8
  9165                           tblptrh	equ	0xFF7
  9166                           tblptrl	equ	0xFF6
  9167                           tablat	equ	0xFF5
  9168                           prodh	equ	0xFF4
  9169                           prodl	equ	0xFF3
  9170                           intcon	equ	0xFF2
  9171                           intcon2	equ	0xFF1
  9172                           intcon3	equ	0xFF0
  9173                           postinc0	equ	0xFEE
  9174                           plusw0	equ	0xFEB
  9175                           wreg	equ	0xFE8
  9176                           postinc1	equ	0xFE6
  9177                           postdec1	equ	0xFE5
  9178                           fsr1h	equ	0xFE2
  9179                           fsr1l	equ	0xFE1
  9180                           indf2	equ	0xFDF
  9181                           postinc2	equ	0xFDE
  9182                           postdec2	equ	0xFDD
  9183                           plusw2	equ	0xFDB
  9184                           fsr2h	equ	0xFDA
  9185                           fsr2l	equ	0xFD9
  9186                           status	equ	0xFD8
  9187                           
  9188 ;; *************** function _USBCtrlEPServiceComplete *****************
  9189 ;; Defined at:
  9190 ;;		line 1634 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  9191 ;; Parameters:    Size  Location     Type
  9192 ;;		None
  9193 ;; Auto vars:     Size  Location     Type
  9194 ;;		None
  9195 ;; Return value:  Size  Location     Type
  9196 ;;                  1    wreg      void 
  9197 ;; Registers used:
  9198 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9199 ;; Tracked objects:
  9200 ;;		On entry : 0/0
  9201 ;;		On exit  : 0/0
  9202 ;;		Unchanged: 0/0
  9203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9204 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9205 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9207 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9208 ;;Total ram usage:        0 bytes
  9209 ;; Hardware stack levels used:    1
  9210 ;; Hardware stack levels required when called:   13
  9211 ;; This function calls:
  9212 ;;		_USBCtrlEPAllowDataStage
  9213 ;;		_USBCtrlEPAllowStatusStage
  9214 ;; This function is called by:
  9215 ;;		_USBCtrlTrfSetupHandler
  9216 ;; This function uses a non-reentrant model
  9217 ;;
  9218                           
  9219                           	psect	text37
  9220  003058                     __ptext37:
  9221                           	opt stack 0
  9222  003058                     _USBCtrlEPServiceComplete:
  9223                           	opt stack 11
  9224                           
  9225                           ;usb_device.c: 1640: UCONbits.PKTDIS = 0;
  9226                           
  9227                           ;incstack = 0
  9228  003058  9865               	bcf	3941,4,c	;volatile
  9229                           
  9230                           ;usb_device.c: 1646: if(inPipes[0].info.bits.busy == 0)
  9231  00305A  0100               	movlb	0	; () banked
  9232  00305C  BFB3               	btfsc	(_inPipes+3)& (0+255),7,b
  9233  00305E  D03B               	goto	l1684
  9234                           
  9235                           ; BSR set to: 0
  9236                           ;usb_device.c: 1647: {
  9237                           ;usb_device.c: 1648: if(outPipes[0].info.bits.busy == 1)
  9238  003060  0101               	movlb	1	; () banked
  9239  003062  AFCC               	btfss	(_outPipes+3)& (0+255),7,b
  9240  003064  D00C               	goto	l1685
  9241                           
  9242                           ; BSR set to: 1
  9243                           ;usb_device.c: 1649: {
  9244                           ;usb_device.c: 1650: controlTransferState = 2;
  9245  003066  0E02               	movlw	2
  9246  003068  0100               	movlb	0	; () banked
  9247  00306A  6FCC               	movwf	_controlTransferState& (0+255),b
  9248                           
  9249                           ;usb_device.c: 1661: if(USBDeferOUTDataStagePackets == 0)
  9250  00306C  5025               	movf	_USBDeferOUTDataStagePackets,w,c	;volatile
  9251  00306E  B4D8               	btfsc	status,2,c
  9252                           
  9253                           ; BSR set to: 0
  9254                           ;usb_device.c: 1662: {
  9255                           ;usb_device.c: 1663: USBCtrlEPAllowDataStage();
  9256  003070  ECB0  F024         	call	_USBCtrlEPAllowDataStage	;wreg free
  9257                           
  9258                           ;usb_device.c: 1664: }
  9259                           ;usb_device.c: 1668: USBStatusStageEnabledFlag2 = 0;
  9260  003074  0E00               	movlw	0
  9261  003076  6E27               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  9262                           
  9263                           ;usb_device.c: 1669: USBStatusStageEnabledFlag1 = 0;
  9264  003078  0E00               	movlw	0
  9265  00307A  6E28               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
  9266                           
  9267                           ;usb_device.c: 1670: }
  9268  00307C  0012               	return	
  9269  00307E                     l1685:
  9270                           
  9271                           ;usb_device.c: 1671: else
  9272                           ;usb_device.c: 1672: {
  9273                           ;usb_device.c: 1677: pBDTEntryEP0OutNext->CNT = 8;
  9274  00307E  0100               	movlb	0	; () banked
  9275  003080  EE20 F001          	lfsr	2,1
  9276  003084  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9277  003086  26D9               	addwf	fsr2l,f,c
  9278  003088  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9279  00308A  22DA               	addwfc	fsr2h,f,c
  9280  00308C  0E08               	movlw	8
  9281  00308E  6EDF               	movwf	indf2,c
  9282                           
  9283                           ;usb_device.c: 1678: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
  9284  003090  EE20 F002          	lfsr	2,2
  9285  003094  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9286  003096  26D9               	addwf	fsr2l,f,c
  9287  003098  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9288  00309A  22DA               	addwfc	fsr2h,f,c
  9289  00309C  0E30               	movlw	48
  9290  00309E  6EDE               	movwf	postinc2,c
  9291  0030A0  0E04               	movlw	4
  9292  0030A2  6EDD               	movwf	postdec2,c
  9293                           
  9294                           ; BSR set to: 0
  9295                           ;usb_device.c: 1679: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  9296  0030A4  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9297  0030A8  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9298  0030AC  0E0C               	movlw	12
  9299  0030AE  6EDF               	movwf	indf2,c
  9300                           
  9301                           ; BSR set to: 0
  9302                           ;usb_device.c: 1680: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  9303  0030B0  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9304  0030B4  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9305  0030B8  0E00               	movlw	0
  9306  0030BA  8EDB               	bsf	plusw2,7,c
  9307                           
  9308                           ;usb_device.c: 1681: pBDTEntryIn[0]->STAT.Val = 0x04;
  9309  0030BC  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
  9310  0030C0  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9311  0030C4  0E04               	movlw	4
  9312  0030C6  6EDF               	movwf	indf2,c
  9313                           
  9314                           ; BSR set to: 0
  9315                           ;usb_device.c: 1682: pBDTEntryIn[0]->STAT.Val |= 0x80;
  9316  0030C8  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
  9317  0030CC  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9318  0030D0  0E00               	movlw	0
  9319  0030D2  8EDB               	bsf	plusw2,7,c
  9320                           
  9321                           ; BSR set to: 0
  9322                           ;usb_device.c: 1683: }
  9323                           ;usb_device.c: 1684: }
  9324  0030D4  0012               	return	
  9325  0030D6                     l1684:
  9326                           
  9327                           ; BSR set to: 0
  9328                           ;usb_device.c: 1685: else
  9329                           ;usb_device.c: 1686: {
  9330                           ;usb_device.c: 1687: if(SetupPkt.DataDir == (0x80>>7))
  9331  0030D6  0104               	movlb	4	; () banked
  9332  0030D8  AF30               	btfss	48,7,b	;volatile
  9333  0030DA  D012               	goto	l1689
  9334                           
  9335                           ; BSR set to: 4
  9336                           ;usb_device.c: 1688: {
  9337                           ;usb_device.c: 1689: controlTransferState = 1;
  9338  0030DC  0E01               	movlw	1
  9339  0030DE  0100               	movlb	0	; () banked
  9340  0030E0  6FCC               	movwf	_controlTransferState& (0+255),b
  9341                           
  9342                           ;usb_device.c: 1703: if(USBDeferINDataStagePackets == 0)
  9343  0030E2  5026               	movf	_USBDeferINDataStagePackets,w,c	;volatile
  9344  0030E4  B4D8               	btfsc	status,2,c
  9345                           
  9346                           ; BSR set to: 0
  9347                           ;usb_device.c: 1704: {
  9348                           ;usb_device.c: 1705: USBCtrlEPAllowDataStage();
  9349  0030E6  ECB0  F024         	call	_USBCtrlEPAllowDataStage	;wreg free
  9350                           
  9351                           ;usb_device.c: 1706: }
  9352                           ;usb_device.c: 1728: USBStatusStageEnabledFlag2 = 0;
  9353  0030EA  0E00               	movlw	0
  9354  0030EC  6E27               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  9355                           
  9356                           ;usb_device.c: 1729: USBStatusStageEnabledFlag1 = 0;
  9357  0030EE  0E00               	movlw	0
  9358  0030F0  6E28               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
  9359                           
  9360                           ;usb_device.c: 1730: if(USBDeferStatusStagePacket == 0)
  9361  0030F2  0100               	movlb	0	; () banked
  9362  0030F4  51CA               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
  9363  0030F6  A4D8               	btfss	status,2,c
  9364  0030F8  0012               	return	
  9365                           
  9366                           ; BSR set to: 0
  9367                           ;usb_device.c: 1731: {
  9368                           ;usb_device.c: 1732: USBCtrlEPAllowStatusStage();
  9369  0030FA  EC41  F01E         	call	_USBCtrlEPAllowStatusStage	;wreg free
  9370                           
  9371                           ;usb_device.c: 1733: }
  9372                           ;usb_device.c: 1734: }
  9373  0030FE  0012               	return	
  9374  003100                     l1689:
  9375                           
  9376                           ;usb_device.c: 1735: else
  9377                           ;usb_device.c: 1736: {
  9378                           ;usb_device.c: 1747: controlTransferState = 2;
  9379  003100  0E02               	movlw	2
  9380  003102  0100               	movlb	0	; () banked
  9381  003104  6FCC               	movwf	_controlTransferState& (0+255),b
  9382                           
  9383                           ; BSR set to: 0
  9384                           ;usb_device.c: 1750: pBDTEntryEP0OutNext->CNT = 8;
  9385  003106  EE20 F001          	lfsr	2,1
  9386  00310A  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9387  00310C  26D9               	addwf	fsr2l,f,c
  9388  00310E  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9389  003110  22DA               	addwfc	fsr2h,f,c
  9390  003112  0E08               	movlw	8
  9391  003114  6EDF               	movwf	indf2,c
  9392                           
  9393                           ; BSR set to: 0
  9394                           ;usb_device.c: 1751: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
  9395  003116  EE20 F002          	lfsr	2,2
  9396  00311A  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9397  00311C  26D9               	addwf	fsr2l,f,c
  9398  00311E  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9399  003120  22DA               	addwfc	fsr2h,f,c
  9400  003122  0E30               	movlw	48
  9401  003124  6EDE               	movwf	postinc2,c
  9402  003126  0E04               	movlw	4
  9403  003128  6EDD               	movwf	postdec2,c
  9404                           
  9405                           ; BSR set to: 0
  9406                           ;usb_device.c: 1752: pBDTEntryEP0OutNext->STAT.Val = 0x04;
  9407  00312A  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9408  00312E  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9409  003132  0E04               	movlw	4
  9410  003134  6EDF               	movwf	indf2,c
  9411                           
  9412                           ; BSR set to: 0
  9413                           ;usb_device.c: 1753: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  9414  003136  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9415  00313A  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9416  00313E  0E00               	movlw	0
  9417  003140  8EDB               	bsf	plusw2,7,c
  9418                           
  9419                           ; BSR set to: 0
  9420                           ;usb_device.c: 1756: USBStatusStageEnabledFlag2 = 0;
  9421  003142  0E00               	movlw	0
  9422  003144  6E27               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  9423                           
  9424                           ; BSR set to: 0
  9425                           ;usb_device.c: 1757: USBStatusStageEnabledFlag1 = 0;
  9426  003146  0E00               	movlw	0
  9427  003148  6E28               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
  9428                           
  9429                           ; BSR set to: 0
  9430                           ;usb_device.c: 1758: if(USBDeferStatusStagePacket == 0)
  9431  00314A  51CA               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
  9432  00314C  A4D8               	btfss	status,2,c
  9433  00314E  0012               	return	
  9434                           
  9435                           ; BSR set to: 0
  9436                           ;usb_device.c: 1759: {
  9437                           ;usb_device.c: 1760: USBCtrlEPAllowStatusStage();
  9438  003150  EC41  F01E         	call	_USBCtrlEPAllowStatusStage	;wreg free
  9439  003154  0012               	return	
  9440  003156                     __end_of_USBCtrlEPServiceComplete:
  9441                           	opt stack 0
  9442                           tosu	equ	0xFFF
  9443                           tosh	equ	0xFFE
  9444                           tosl	equ	0xFFD
  9445                           pclath	equ	0xFFA
  9446                           tblptru	equ	0xFF8
  9447                           tblptrh	equ	0xFF7
  9448                           tblptrl	equ	0xFF6
  9449                           tablat	equ	0xFF5
  9450                           prodh	equ	0xFF4
  9451                           prodl	equ	0xFF3
  9452                           intcon	equ	0xFF2
  9453                           intcon2	equ	0xFF1
  9454                           intcon3	equ	0xFF0
  9455                           postinc0	equ	0xFEE
  9456                           plusw0	equ	0xFEB
  9457                           wreg	equ	0xFE8
  9458                           postinc1	equ	0xFE6
  9459                           postdec1	equ	0xFE5
  9460                           fsr1h	equ	0xFE2
  9461                           fsr1l	equ	0xFE1
  9462                           indf2	equ	0xFDF
  9463                           postinc2	equ	0xFDE
  9464                           postdec2	equ	0xFDD
  9465                           plusw2	equ	0xFDB
  9466                           fsr2h	equ	0xFDA
  9467                           fsr2l	equ	0xFD9
  9468                           status	equ	0xFD8
  9469                           
  9470 ;; *************** function _USBCtrlEPAllowDataStage *****************
  9471 ;; Defined at:
  9472 ;;		line 1506 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  9473 ;; Parameters:    Size  Location     Type
  9474 ;;		None
  9475 ;; Auto vars:     Size  Location     Type
  9476 ;;		None
  9477 ;; Return value:  Size  Location     Type
  9478 ;;                  1    wreg      void 
  9479 ;; Registers used:
  9480 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9481 ;; Tracked objects:
  9482 ;;		On entry : 0/0
  9483 ;;		On exit  : 0/0
  9484 ;;		Unchanged: 0/0
  9485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9486 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9487 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9488 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9489 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9490 ;;Total ram usage:        0 bytes
  9491 ;; Hardware stack levels used:    1
  9492 ;; Hardware stack levels required when called:   12
  9493 ;; This function calls:
  9494 ;;		_USBCtrlTrfTxService
  9495 ;; This function is called by:
  9496 ;;		_USBCtrlEPServiceComplete
  9497 ;; This function uses a non-reentrant model
  9498 ;;
  9499                           
  9500                           	psect	text38
  9501  004960                     __ptext38:
  9502                           	opt stack 0
  9503  004960                     _USBCtrlEPAllowDataStage:
  9504                           	opt stack 11
  9505                           
  9506                           ;usb_device.c: 1508: USBDeferINDataStagePackets = 0;
  9507                           
  9508                           ;incstack = 0
  9509  004960  0E00               	movlw	0
  9510  004962  6E26               	movwf	_USBDeferINDataStagePackets,c	;volatile
  9511                           
  9512                           ;usb_device.c: 1509: USBDeferOUTDataStagePackets = 0;
  9513  004964  0E00               	movlw	0
  9514  004966  6E25               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
  9515                           
  9516                           ;usb_device.c: 1511: if(controlTransferState == 2)
  9517  004968  0E02               	movlw	2
  9518  00496A  0100               	movlb	0	; () banked
  9519  00496C  19CC               	xorwf	_controlTransferState& (0+255),w,b
  9520  00496E  A4D8               	btfss	status,2,c
  9521  004970  D01F               	goto	l1673
  9522                           
  9523                           ; BSR set to: 0
  9524                           ;usb_device.c: 1512: {
  9525                           ;usb_device.c: 1514: pBDTEntryEP0OutNext->CNT = 8;
  9526  004972  EE20 F001          	lfsr	2,1
  9527  004976  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9528  004978  26D9               	addwf	fsr2l,f,c
  9529  00497A  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9530  00497C  22DA               	addwfc	fsr2h,f,c
  9531  00497E  0E08               	movlw	8
  9532  004980  6EDF               	movwf	indf2,c
  9533                           
  9534                           ;usb_device.c: 1515: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
  9535  004982  EE20 F002          	lfsr	2,2
  9536  004986  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9537  004988  26D9               	addwf	fsr2l,f,c
  9538  00498A  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9539  00498C  22DA               	addwfc	fsr2h,f,c
  9540  00498E  0E38               	movlw	56
  9541  004990  6EDE               	movwf	postinc2,c
  9542  004992  0E04               	movlw	4
  9543  004994  6EDD               	movwf	postdec2,c
  9544                           
  9545                           ; BSR set to: 0
  9546                           ;usb_device.c: 1516: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
  9547  004996  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9548  00499A  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9549  00499E  0E48               	movlw	72
  9550  0049A0  6EDF               	movwf	indf2,c
  9551                           
  9552                           ; BSR set to: 0
  9553                           ;usb_device.c: 1517: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  9554  0049A2  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9555  0049A6  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9556  0049AA  0E00               	movlw	0
  9557  0049AC  8EDB               	bsf	plusw2,7,c
  9558                           
  9559                           ;usb_device.c: 1518: }
  9560  0049AE  0012               	return	
  9561  0049B0                     l1673:
  9562                           
  9563                           ; BSR set to: 0
  9564                           ;usb_device.c: 1519: else
  9565                           ;usb_device.c: 1520: {
  9566                           ;usb_device.c: 1523: if(SetupPkt.wLength < inPipes[0].wCount.Val)
  9567                           
  9568                           ; BSR set to: 0
  9569  0049B0  51B4               	movf	(_inPipes+4)& (0+255),w,b
  9570  0049B2  0104               	movlb	4	; () banked
  9571  0049B4  5D36               	subwf	54,w,b	;volatile
  9572  0049B6  0100               	movlb	0	; () banked
  9573  0049B8  51B5               	movf	(_inPipes+5)& (0+255),w,b
  9574  0049BA  0104               	movlb	4	; () banked
  9575  0049BC  5937               	subwfb	55,w,b	;volatile
  9576  0049BE  B0D8               	btfsc	status,0,c
  9577  0049C0  D004               	goto	l1675
  9578                           
  9579                           ; BSR set to: 4
  9580                           ;usb_device.c: 1524: {
  9581                           ;usb_device.c: 1525: inPipes[0].wCount.Val = SetupPkt.wLength;
  9582  0049C2  C436 F0B4          	movff	1078,_inPipes+4	;volatile
  9583  0049C6  C437 F0B5          	movff	1079,_inPipes+5	;volatile
  9584  0049CA                     l1675:
  9585                           
  9586                           ; BSR set to: 4
  9587                           ;usb_device.c: 1526: }
  9588                           ;usb_device.c: 1527: USBCtrlTrfTxService();
  9589                           
  9590                           ; BSR set to: 4
  9591  0049CA  EC61  F01B         	call	_USBCtrlTrfTxService	;wreg free
  9592                           
  9593                           ;usb_device.c: 1532: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
  9594  0049CE  0100               	movlb	0	; () banked
  9595  0049D0  EE20 F002          	lfsr	2,2
  9596  0049D4  51B6               	movf	_pBDTEntryIn& (0+255),w,b
  9597  0049D6  26D9               	addwf	fsr2l,f,c
  9598  0049D8  51B7               	movf	(_pBDTEntryIn+1)& (0+255),w,b
  9599  0049DA  22DA               	addwfc	fsr2h,f,c
  9600  0049DC  0E38               	movlw	56
  9601  0049DE  6EDE               	movwf	postinc2,c
  9602  0049E0  0E04               	movlw	4
  9603  0049E2  6EDD               	movwf	postdec2,c
  9604                           
  9605                           ; BSR set to: 0
  9606                           ;usb_device.c: 1533: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  9607  0049E4  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
  9608  0049E8  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9609  0049EC  0E48               	movlw	72
  9610  0049EE  6EDF               	movwf	indf2,c
  9611                           
  9612                           ; BSR set to: 0
  9613                           ;usb_device.c: 1534: pBDTEntryIn[0]->STAT.Val |= 0x80;
  9614  0049F0  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
  9615  0049F4  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9616  0049F8  0E00               	movlw	0
  9617  0049FA  8EDB               	bsf	plusw2,7,c
  9618  0049FC  0012               	return	
  9619  0049FE                     __end_of_USBCtrlEPAllowDataStage:
  9620                           	opt stack 0
  9621                           tosu	equ	0xFFF
  9622                           tosh	equ	0xFFE
  9623                           tosl	equ	0xFFD
  9624                           pclath	equ	0xFFA
  9625                           tblptru	equ	0xFF8
  9626                           tblptrh	equ	0xFF7
  9627                           tblptrl	equ	0xFF6
  9628                           tablat	equ	0xFF5
  9629                           prodh	equ	0xFF4
  9630                           prodl	equ	0xFF3
  9631                           intcon	equ	0xFF2
  9632                           intcon2	equ	0xFF1
  9633                           intcon3	equ	0xFF0
  9634                           postinc0	equ	0xFEE
  9635                           plusw0	equ	0xFEB
  9636                           wreg	equ	0xFE8
  9637                           postinc1	equ	0xFE6
  9638                           postdec1	equ	0xFE5
  9639                           fsr1h	equ	0xFE2
  9640                           fsr1l	equ	0xFE1
  9641                           indf2	equ	0xFDF
  9642                           postinc2	equ	0xFDE
  9643                           postdec2	equ	0xFDD
  9644                           plusw2	equ	0xFDB
  9645                           fsr2h	equ	0xFDA
  9646                           fsr2l	equ	0xFD9
  9647                           status	equ	0xFD8
  9648                           
  9649 ;; *************** function _USBCheckStdRequest *****************
  9650 ;; Defined at:
  9651 ;;		line 2703 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  9652 ;; Parameters:    Size  Location     Type
  9653 ;;		None
  9654 ;; Auto vars:     Size  Location     Type
  9655 ;;		None
  9656 ;; Return value:  Size  Location     Type
  9657 ;;                  1    wreg      void 
  9658 ;; Registers used:
  9659 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9660 ;; Tracked objects:
  9661 ;;		On entry : 0/0
  9662 ;;		On exit  : 0/0
  9663 ;;		Unchanged: 0/0
  9664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9665 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9666 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9667 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9668 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9669 ;;Total ram usage:        0 bytes
  9670 ;; Hardware stack levels used:    1
  9671 ;; Hardware stack levels required when called:   16
  9672 ;; This function calls:
  9673 ;;		_USBStdFeatureReqHandler
  9674 ;;		_USBStdGetDscHandler
  9675 ;;		_USBStdGetStatusHandler
  9676 ;;		_USBStdSetCfgHandler
  9677 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  9678 ;; This function is called by:
  9679 ;;		_USBCtrlTrfSetupHandler
  9680 ;; This function uses a non-reentrant model
  9681 ;;
  9682                           
  9683                           	psect	text39
  9684  0035DE                     __ptext39:
  9685                           	opt stack 0
  9686  0035DE                     _USBCheckStdRequest:
  9687                           	opt stack 8
  9688                           
  9689                           ;usb_device.c: 2705: if(SetupPkt.RequestType != (0x00>>5)) return;
  9690                           
  9691                           ; BSR set to: 0
  9692                           ;incstack = 0
  9693  0035DE  0104               	movlb	4	; () banked
  9694  0035E0  3930               	swapf	48,w,b	;volatile
  9695  0035E2  32E8               	rrcf	wreg,f,c
  9696  0035E4  0B03               	andlw	3
  9697  0035E6  0900               	iorlw	0
  9698  0035E8  A4D8               	btfss	status,2,c
  9699  0035EA  0012               	return	
  9700  0035EC  D048               	goto	l1808
  9701  0035EE                     l1809:
  9702                           
  9703                           ; BSR set to: 4
  9704                           ;usb_device.c: 2710: inPipes[0].info.bits.busy = 1;
  9705  0035EE  0100               	movlb	0	; () banked
  9706  0035F0  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
  9707                           
  9708                           ; BSR set to: 0
  9709                           ;usb_device.c: 2711: USBDeviceState = ADR_PENDING_STATE;
  9710  0035F2  0E08               	movlw	8
  9711  0035F4  6FCE               	movwf	_USBDeviceState& (0+255),b
  9712                           
  9713                           ;usb_device.c: 2713: break;
  9714  0035F6  0012               	return	
  9715  0035F8                     
  9716                           ;usb_device.c: 2715: USBStdGetDscHandler();
  9717                           
  9718                           ; BSR set to: 0
  9719  0035F8  ECEA  F015         	call	_USBStdGetDscHandler	;wreg free
  9720                           
  9721                           ;usb_device.c: 2716: break;
  9722  0035FC  0012               	return	
  9723  0035FE                     
  9724                           ;usb_device.c: 2718: USBStdSetCfgHandler();
  9725  0035FE  EC09  F01A         	call	_USBStdSetCfgHandler	;wreg free
  9726                           
  9727                           ;usb_device.c: 2719: break;
  9728  003602  0012               	return	
  9729  003604                     
  9730                           ;usb_device.c: 2721: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
  9731  003604  0ED6               	movlw	low _USBActiveConfiguration
  9732  003606  0100               	movlb	0	; () banked
  9733  003608  6FB0               	movwf	_inPipes& (0+255),b
  9734  00360A  0E00               	movlw	high _USBActiveConfiguration
  9735  00360C  6FB1               	movwf	(_inPipes+1)& (0+255),b
  9736                           
  9737                           ; BSR set to: 0
  9738                           ;usb_device.c: 2722: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  9739  00360E  81B3               	bsf	(_inPipes+3)& (0+255),0,b
  9740                           
  9741                           ; BSR set to: 0
  9742                           ;usb_device.c: 2723: inPipes[0].wCount.v[0] = 1;
  9743  003610  0E01               	movlw	1
  9744  003612  6FB4               	movwf	(_inPipes+4)& (0+255),b
  9745                           
  9746                           ; BSR set to: 0
  9747                           ;usb_device.c: 2724: inPipes[0].info.bits.busy = 1;
  9748  003614  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
  9749                           
  9750                           ;usb_device.c: 2725: break;
  9751  003616  0012               	return	
  9752  003618                     
  9753                           ;usb_device.c: 2727: USBStdGetStatusHandler();
  9754                           
  9755                           ; BSR set to: 0
  9756  003618  ECB7  F021         	call	_USBStdGetStatusHandler	;wreg free
  9757                           
  9758                           ;usb_device.c: 2728: break;
  9759  00361C  0012               	return	
  9760  00361E                     
  9761                           ;usb_device.c: 2730: case 3:
  9762                           ;usb_device.c: 2731: USBStdFeatureReqHandler();
  9763  00361E  ECAD  F009         	call	_USBStdFeatureReqHandler	;wreg free
  9764                           
  9765                           ;usb_device.c: 2732: break;
  9766  003622  0012               	return	
  9767  003624                     
  9768                           ;usb_device.c: 2734: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
  9769  003624  0104               	movlb	4	; () banked
  9770  003626  5134               	movf	52,w,b	;volatile
  9771  003628  0D01               	mullw	1
  9772  00362A  0EF1               	movlw	low _USBAlternateInterface
  9773  00362C  24F3               	addwf	prodl,w,c
  9774  00362E  0100               	movlb	0	; () banked
  9775  003630  6FB0               	movwf	_inPipes& (0+255),b
  9776  003632  0E02               	movlw	high _USBAlternateInterface
  9777  003634  20F4               	addwfc	prodh,w,c
  9778  003636  6FB1               	movwf	(_inPipes+1)& (0+255),b
  9779                           
  9780                           ; BSR set to: 0
  9781                           ;usb_device.c: 2735: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  9782  003638  81B3               	bsf	(_inPipes+3)& (0+255),0,b
  9783                           
  9784                           ; BSR set to: 0
  9785                           ;usb_device.c: 2736: inPipes[0].wCount.v[0] = 1;
  9786  00363A  0E01               	movlw	1
  9787  00363C  6FB4               	movwf	(_inPipes+4)& (0+255),b
  9788                           
  9789                           ; BSR set to: 0
  9790                           ;usb_device.c: 2737: inPipes[0].info.bits.busy = 1;
  9791  00363E  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
  9792                           
  9793                           ;usb_device.c: 2738: break;
  9794  003640  0012               	return	
  9795  003642                     l1818:
  9796                           
  9797                           ; BSR set to: 4
  9798                           ;usb_device.c: 2740: inPipes[0].info.bits.busy = 1;
  9799  003642  0100               	movlb	0	; () banked
  9800  003644  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
  9801                           
  9802                           ; BSR set to: 0
  9803                           ;usb_device.c: 2741: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
  9804  003646  0104               	movlb	4	; () banked
  9805  003648  5134               	movf	52,w,b	;volatile
  9806  00364A  0D01               	mullw	1
  9807  00364C  0EF1               	movlw	low _USBAlternateInterface
  9808  00364E  24F3               	addwf	prodl,w,c
  9809  003650  6ED9               	movwf	fsr2l,c
  9810  003652  0E02               	movlw	high _USBAlternateInterface
  9811  003654  20F4               	addwfc	prodh,w,c
  9812  003656  6EDA               	movwf	fsr2h,c
  9813  003658  C432 FFDF          	movff	1074,indf2	;volatile
  9814                           
  9815                           ;usb_device.c: 2742: break;
  9816  00365C  0012               	return	
  9817  00365E                     
  9818                           ; BSR set to: 4
  9819                           ;usb_device.c: 2744: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
  9820                           
  9821                           ; BSR set to: 4
  9822  00365E  0E00               	movlw	0
  9823  003660  0100               	movlb	0	; () banked
  9824  003662  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  9825  003664  0E02               	movlw	2
  9826  003666  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  9827  003668  0E00               	movlw	0
  9828  00366A  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  9829  00366C  0E00               	movlw	0
  9830  00366E  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  9831  003670  0E00               	movlw	0
  9832  003672  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  9833  003674  0E00               	movlw	0
  9834  003676  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  9835  003678  EC05  F02C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  9836                           
  9837                           ;usb_device.c: 2749: }
  9838                           
  9839                           ;usb_device.c: 2748: break;
  9840                           
  9841                           ;usb_device.c: 2747: default:
  9842                           
  9843                           ;usb_device.c: 2746: case 12:
  9844                           
  9845                           ;usb_device.c: 2745: break;
  9846  00367C  0012               	return	
  9847  00367E                     l1808:
  9848  00367E  0104               	movlb	4	; () banked
  9849  003680  5131               	movf	49,w,b	;volatile
  9850                           
  9851                           ; Switch size 1, requested type "space"
  9852                           ; Number of cases is 11, Range of values is 0 to 12
  9853                           ; switch strategies available:
  9854                           ; Name         Instructions Cycles
  9855                           ; simple_byte           34    18 (average)
  9856                           ;	Chosen strategy is simple_byte
  9857  003682  0A00               	xorlw	0	; case 0
  9858  003684  B4D8               	btfsc	status,2,c
  9859  003686  D7C8               	goto	l1814
  9860  003688  0A01               	xorlw	1	; case 1
  9861  00368A  B4D8               	btfsc	status,2,c
  9862  00368C  D7C8               	goto	l1815
  9863  00368E  0A02               	xorlw	2	; case 3
  9864  003690  B4D8               	btfsc	status,2,c
  9865  003692  D7C5               	goto	l1815
  9866  003694  0A06               	xorlw	6	; case 5
  9867  003696  B4D8               	btfsc	status,2,c
  9868  003698  D7AA               	goto	l1809
  9869  00369A  0A03               	xorlw	3	; case 6
  9870  00369C  B4D8               	btfsc	status,2,c
  9871  00369E  D7AC               	goto	l1811
  9872  0036A0  0A01               	xorlw	1	; case 7
  9873  0036A2  B4D8               	btfsc	status,2,c
  9874  0036A4  D7DC               	goto	l1819
  9875  0036A6  0A0F               	xorlw	15	; case 8
  9876  0036A8  B4D8               	btfsc	status,2,c
  9877  0036AA  D7AC               	goto	l1813
  9878  0036AC  0A01               	xorlw	1	; case 9
  9879  0036AE  B4D8               	btfsc	status,2,c
  9880  0036B0  D7A6               	goto	l1812
  9881  0036B2  0A03               	xorlw	3	; case 10
  9882  0036B4  B4D8               	btfsc	status,2,c
  9883  0036B6  D7B6               	goto	l1817
  9884  0036B8  0A01               	xorlw	1	; case 11
  9885  0036BA  B4D8               	btfsc	status,2,c
  9886  0036BC  D7C2               	goto	l1818
  9887  0036BE  0A07               	xorlw	7	; case 12
  9888  0036C0  0012               	return	
  9889  0036C2                     __end_of_USBCheckStdRequest:
  9890                           	opt stack 0
  9891                           tosu	equ	0xFFF
  9892                           tosh	equ	0xFFE
  9893                           tosl	equ	0xFFD
  9894                           pclath	equ	0xFFA
  9895                           tblptru	equ	0xFF8
  9896                           tblptrh	equ	0xFF7
  9897                           tblptrl	equ	0xFF6
  9898                           tablat	equ	0xFF5
  9899                           prodh	equ	0xFF4
  9900                           prodl	equ	0xFF3
  9901                           intcon	equ	0xFF2
  9902                           intcon2	equ	0xFF1
  9903                           intcon3	equ	0xFF0
  9904                           postinc0	equ	0xFEE
  9905                           plusw0	equ	0xFEB
  9906                           wreg	equ	0xFE8
  9907                           postinc1	equ	0xFE6
  9908                           postdec1	equ	0xFE5
  9909                           fsr1h	equ	0xFE2
  9910                           fsr1l	equ	0xFE1
  9911                           indf2	equ	0xFDF
  9912                           postinc2	equ	0xFDE
  9913                           postdec2	equ	0xFDD
  9914                           plusw2	equ	0xFDB
  9915                           fsr2h	equ	0xFDA
  9916                           fsr2l	equ	0xFD9
  9917                           status	equ	0xFD8
  9918                           
  9919 ;; *************** function _USBStdSetCfgHandler *****************
  9920 ;; Defined at:
  9921 ;;		line 1986 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  9922 ;; Parameters:    Size  Location     Type
  9923 ;;		None
  9924 ;; Auto vars:     Size  Location     Type
  9925 ;;  i               1   49[BANK0 ] unsigned char 
  9926 ;; Return value:  Size  Location     Type
  9927 ;;                  1    wreg      void 
  9928 ;; Registers used:
  9929 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9930 ;; Tracked objects:
  9931 ;;		On entry : 0/0
  9932 ;;		On exit  : 0/0
  9933 ;;		Unchanged: 0/0
  9934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9935 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9936 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9938 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9939 ;;Total ram usage:        1 bytes
  9940 ;; Hardware stack levels used:    1
  9941 ;; Hardware stack levels required when called:   15
  9942 ;; This function calls:
  9943 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  9944 ;;		_memset
  9945 ;; This function is called by:
  9946 ;;		_USBCheckStdRequest
  9947 ;; This function uses a non-reentrant model
  9948 ;;
  9949                           
  9950                           	psect	text40
  9951  003412                     __ptext40:
  9952                           	opt stack 0
  9953  003412                     _USBStdSetCfgHandler:
  9954                           	opt stack 8
  9955                           
  9956                           ;usb_device.c: 1988: uint8_t i;
  9957                           ;usb_device.c: 1991: inPipes[0].info.bits.busy = 1;
  9958                           
  9959                           ;incstack = 0
  9960  003412  0100               	movlb	0	; () banked
  9961  003414  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
  9962                           
  9963                           ; BSR set to: 0
  9964                           ;usb_device.c: 1994: memset((void*)&UEP1,0x00,(2));;
  9965  003416  0E27               	movlw	39
  9966  003418  6F7D               	movwf	memset@p1& (0+255),b
  9967  00341A  0E0F               	movlw	15
  9968  00341C  6F7E               	movwf	(memset@p1+1)& (0+255),b
  9969  00341E  0E00               	movlw	0
  9970  003420  6F80               	movwf	(memset@c+1)& (0+255),b
  9971  003422  0E00               	movlw	0
  9972  003424  6F7F               	movwf	memset@c& (0+255),b
  9973  003426  0E00               	movlw	0
  9974  003428  6F82               	movwf	(memset@n+1)& (0+255),b
  9975  00342A  0E02               	movlw	2
  9976  00342C  6F81               	movwf	memset@n& (0+255),b
  9977  00342E  EC82  F032         	call	_memset	;wreg free
  9978                           
  9979                           ;usb_device.c: 1997: memset((void*)&BDT[0], 0x00, sizeof(BDT));
  9980  003432  0E00               	movlw	0
  9981  003434  0100               	movlb	0	; () banked
  9982  003436  6F7D               	movwf	memset@p1& (0+255),b
  9983  003438  0E04               	movlw	4
  9984  00343A  6F7E               	movwf	(memset@p1+1)& (0+255),b
  9985  00343C  0E00               	movlw	0
  9986  00343E  6F80               	movwf	(memset@c+1)& (0+255),b
  9987  003440  0E00               	movlw	0
  9988  003442  6F7F               	movwf	memset@c& (0+255),b
  9989  003444  0E00               	movlw	0
  9990  003446  6F82               	movwf	(memset@n+1)& (0+255),b
  9991  003448  0E30               	movlw	48
  9992  00344A  6F81               	movwf	memset@n& (0+255),b
  9993  00344C  EC82  F032         	call	_memset	;wreg free
  9994                           
  9995                           ;usb_device.c: 2000: UCONbits.PPBRST = 1;
  9996  003450  8C65               	bsf	3941,6,c	;volatile
  9997                           
  9998                           ;usb_device.c: 2005: for(i = 0; i < (uint8_t)(2+1u); i++)
  9999  003452  0E00               	movlw	0
 10000  003454  0100               	movlb	0	; () banked
 10001  003456  6F91               	movwf	USBStdSetCfgHandler@i& (0+255),b
 10002  003458                     l13164:
 10003                           
 10004                           ; BSR set to: 0
 10005  003458  0E02               	movlw	2
 10006  00345A  6591               	cpfsgt	USBStdSetCfgHandler@i& (0+255),b
 10007  00345C  D001               	goto	l1725
 10008  00345E  D016               	goto	u11800
 10009  003460                     l1725:
 10010                           
 10011                           ; BSR set to: 0
 10012                           ;usb_device.c: 2006: {
 10013                           ;usb_device.c: 2007: ep_data_in[i].Val = 0u;
 10014                           
 10015                           ; BSR set to: 0
 10016  003460  5191               	movf	USBStdSetCfgHandler@i& (0+255),w,b
 10017  003462  0D01               	mullw	1
 10018  003464  0ED1               	movlw	low _ep_data_in
 10019  003466  24F3               	addwf	prodl,w,c
 10020  003468  6ED9               	movwf	fsr2l,c
 10021  00346A  0E02               	movlw	high _ep_data_in
 10022  00346C  20F4               	addwfc	prodh,w,c
 10023  00346E  6EDA               	movwf	fsr2h,c
 10024  003470  0E00               	movlw	0
 10025  003472  6EDF               	movwf	indf2,c
 10026                           
 10027                           ;usb_device.c: 2008: ep_data_out[i].Val = 0u;
 10028  003474  5191               	movf	USBStdSetCfgHandler@i& (0+255),w,b
 10029  003476  0D01               	mullw	1
 10030  003478  0ECE               	movlw	low _ep_data_out
 10031  00347A  24F3               	addwf	prodl,w,c
 10032  00347C  6ED9               	movwf	fsr2l,c
 10033  00347E  0E02               	movlw	high _ep_data_out
 10034  003480  20F4               	addwfc	prodh,w,c
 10035  003482  6EDA               	movwf	fsr2h,c
 10036  003484  0E00               	movlw	0
 10037  003486  6EDF               	movwf	indf2,c
 10038                           
 10039                           ; BSR set to: 0
 10040  003488  2B91               	incf	USBStdSetCfgHandler@i& (0+255),f,b
 10041  00348A  D7E6               	goto	l13164
 10042  00348C                     u11800:
 10043                           
 10044                           ; BSR set to: 0
 10045                           ;usb_device.c: 2009: }
 10046                           ;usb_device.c: 2012: memset((void*)&USBAlternateInterface,0x00,2);
 10047                           
 10048                           ; BSR set to: 0
 10049  00348C  0EF1               	movlw	low _USBAlternateInterface
 10050  00348E  6F7D               	movwf	memset@p1& (0+255),b
 10051  003490  0E02               	movlw	high _USBAlternateInterface
 10052  003492  6F7E               	movwf	(memset@p1+1)& (0+255),b
 10053  003494  0E00               	movlw	0
 10054  003496  6F80               	movwf	(memset@c+1)& (0+255),b
 10055  003498  0E00               	movlw	0
 10056  00349A  6F7F               	movwf	memset@c& (0+255),b
 10057  00349C  0E00               	movlw	0
 10058  00349E  6F82               	movwf	(memset@n+1)& (0+255),b
 10059  0034A0  0E02               	movlw	2
 10060  0034A2  6F81               	movwf	memset@n& (0+255),b
 10061  0034A4  EC82  F032         	call	_memset	;wreg free
 10062                           
 10063                           ;usb_device.c: 2015: UCONbits.PPBRST = 0;
 10064  0034A8  9C65               	bcf	3941,6,c	;volatile
 10065                           
 10066                           ;usb_device.c: 2017: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 10067  0034AA  0E08               	movlw	8
 10068  0034AC  0100               	movlb	0	; () banked
 10069  0034AE  6FB6               	movwf	_pBDTEntryIn& (0+255),b
 10070  0034B0  0E04               	movlw	4
 10071  0034B2  6FB7               	movwf	(_pBDTEntryIn+1)& (0+255),b
 10072                           
 10073                           ; BSR set to: 0
 10074                           ;usb_device.c: 2020: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 10075  0034B4  0E00               	movlw	0
 10076  0034B6  6FC0               	movwf	_pBDTEntryEP0OutCurrent& (0+255),b
 10077  0034B8  0E04               	movlw	4
 10078  0034BA  6FC1               	movwf	(_pBDTEntryEP0OutCurrent+1)& (0+255),b
 10079                           
 10080                           ; BSR set to: 0
 10081                           ;usb_device.c: 2021: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 10082  0034BC  C0C0  F0BE         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 10083  0034C0  C0C1  F0BF         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 10084                           
 10085                           ; BSR set to: 0
 10086                           ;usb_device.c: 2024: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 10087  0034C4  C432 F0D6          	movff	1074,_USBActiveConfiguration	;volatile
 10088                           
 10089                           ; BSR set to: 0
 10090                           ;usb_device.c: 2027: if(USBActiveConfiguration == 0)
 10091  0034C8  51D6               	movf	_USBActiveConfiguration& (0+255),w,b
 10092  0034CA  A4D8               	btfss	status,2,c
 10093  0034CC  D003               	goto	l1727
 10094                           
 10095                           ; BSR set to: 0
 10096                           ;usb_device.c: 2028: {
 10097                           ;usb_device.c: 2030: USBDeviceState = ADDRESS_STATE;
 10098  0034CE  0E10               	movlw	16
 10099  0034D0  6FCE               	movwf	_USBDeviceState& (0+255),b
 10100                           
 10101                           ;usb_device.c: 2031: }
 10102  0034D2  0012               	return	
 10103  0034D4                     l1727:
 10104                           
 10105                           ; BSR set to: 0
 10106                           ;usb_device.c: 2032: else
 10107                           ;usb_device.c: 2033: {
 10108                           ;usb_device.c: 2035: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
 10109                           
 10110                           ; BSR set to: 0
 10111  0034D4  0E00               	movlw	0
 10112  0034D6  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
 10113  0034D8  0E01               	movlw	1
 10114  0034DA  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
 10115  0034DC  0ED6               	movlw	low _USBActiveConfiguration
 10116  0034DE  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
 10117  0034E0  0E00               	movlw	high _USBActiveConfiguration
 10118  0034E2  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
 10119  0034E4  0E00               	movlw	0
 10120  0034E6  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
 10121  0034E8  0E01               	movlw	1
 10122  0034EA  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
 10123  0034EC  EC05  F02C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 10124                           
 10125                           ;usb_device.c: 2040: USBDeviceState = CONFIGURED_STATE;
 10126  0034F0  0E20               	movlw	32
 10127  0034F2  0100               	movlb	0	; () banked
 10128  0034F4  6FCE               	movwf	_USBDeviceState& (0+255),b
 10129  0034F6  0012               	return	
 10130  0034F8                     __end_of_USBStdSetCfgHandler:
 10131                           	opt stack 0
 10132                           tosu	equ	0xFFF
 10133                           tosh	equ	0xFFE
 10134                           tosl	equ	0xFFD
 10135                           pclath	equ	0xFFA
 10136                           tblptru	equ	0xFF8
 10137                           tblptrh	equ	0xFF7
 10138                           tblptrl	equ	0xFF6
 10139                           tablat	equ	0xFF5
 10140                           prodh	equ	0xFF4
 10141                           prodl	equ	0xFF3
 10142                           intcon	equ	0xFF2
 10143                           intcon2	equ	0xFF1
 10144                           intcon3	equ	0xFF0
 10145                           postinc0	equ	0xFEE
 10146                           plusw0	equ	0xFEB
 10147                           wreg	equ	0xFE8
 10148                           postinc1	equ	0xFE6
 10149                           postdec1	equ	0xFE5
 10150                           fsr1h	equ	0xFE2
 10151                           fsr1l	equ	0xFE1
 10152                           indf2	equ	0xFDF
 10153                           postinc2	equ	0xFDE
 10154                           postdec2	equ	0xFDD
 10155                           plusw2	equ	0xFDB
 10156                           fsr2h	equ	0xFDA
 10157                           fsr2l	equ	0xFD9
 10158                           status	equ	0xFD8
 10159                           
 10160 ;; *************** function _USBStdGetStatusHandler *****************
 10161 ;; Defined at:
 10162 ;;		line 2147 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 10163 ;; Parameters:    Size  Location     Type
 10164 ;;		None
 10165 ;; Auto vars:     Size  Location     Type
 10166 ;;  p               2   30[BANK0 ] PTR struct __BDT
 10167 ;;		 -> NULL(0), BDT(48), 
 10168 ;; Return value:  Size  Location     Type
 10169 ;;                  1    wreg      void 
 10170 ;; Registers used:
 10171 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10172 ;; Tracked objects:
 10173 ;;		On entry : 0/0
 10174 ;;		On exit  : 0/0
 10175 ;;		Unchanged: 0/0
 10176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10177 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10178 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10179 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10180 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10181 ;;Total ram usage:        3 bytes
 10182 ;; Hardware stack levels used:    1
 10183 ;; Hardware stack levels required when called:   11
 10184 ;; This function calls:
 10185 ;;		Nothing
 10186 ;; This function is called by:
 10187 ;;		_USBCheckStdRequest
 10188 ;; This function uses a non-reentrant model
 10189 ;;
 10190                           
 10191                           	psect	text41
 10192  00436E                     __ptext41:
 10193                           	opt stack 0
 10194  00436E                     _USBStdGetStatusHandler:
 10195                           	opt stack 12
 10196                           
 10197                           ;usb_device.c: 2149: CtrlTrfData[0] = 0;
 10198                           
 10199                           ; BSR set to: 0
 10200                           ;incstack = 0
 10201  00436E  0E00               	movlw	0
 10202  004370  0104               	movlb	4	; () banked
 10203  004372  6F38               	movwf	56,b	;volatile
 10204                           
 10205                           ;usb_device.c: 2150: CtrlTrfData[1] = 0;
 10206  004374  0E00               	movlw	0
 10207  004376  6F39               	movwf	57,b	;volatile
 10208                           
 10209                           ;usb_device.c: 2152: switch(SetupPkt.Recipient)
 10210  004378  D03D               	goto	l1746
 10211  00437A                     l1747:
 10212                           
 10213                           ; BSR set to: 4
 10214                           ;usb_device.c: 2155: inPipes[0].info.bits.busy = 1;
 10215  00437A  0100               	movlb	0	; () banked
 10216  00437C  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 10217                           
 10218                           ;usb_device.c: 2163: }
 10219                           ;usb_device.c: 2165: if(RemoteWakeup == 1)
 10220                           
 10221                           ; BSR set to: 4
 10222                           
 10223                           ; BSR set to: 0
 10224                           ;usb_device.c: 2161: {
 10225                           ;usb_device.c: 2162: CtrlTrfData[0]|=0x01;
 10226                           
 10227                           ;usb_device.c: 2160: if(0 == 1)
 10228  00437E  0101               	movlb	1	; () banked
 10229  004380  05E1               	decf	_RemoteWakeup& (0+255),w,b
 10230  004382  A4D8               	btfss	status,2,c
 10231  004384  D042               	goto	l1750
 10232                           
 10233                           ; BSR set to: 1
 10234                           ;usb_device.c: 2166: {
 10235                           ;usb_device.c: 2167: CtrlTrfData[0]|=0x02;
 10236  004386  0104               	movlb	4	; () banked
 10237  004388  8338               	bsf	56,1,b	;volatile
 10238                           
 10239                           ; BSR set to: 4
 10240                           ;usb_device.c: 2168: }
 10241                           ;usb_device.c: 2169: break;
 10242  00438A  D03F               	goto	l1750
 10243  00438C                     l1751:
 10244                           
 10245                           ; BSR set to: 4
 10246                           ;usb_device.c: 2171: inPipes[0].info.bits.busy = 1;
 10247  00438C  0100               	movlb	0	; () banked
 10248  00438E  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 10249                           
 10250                           ;usb_device.c: 2172: break;
 10251  004390  D03C               	goto	l1750
 10252  004392                     l1752:
 10253                           
 10254                           ; BSR set to: 4
 10255                           ;usb_device.c: 2174: inPipes[0].info.bits.busy = 1;
 10256  004392  0100               	movlb	0	; () banked
 10257  004394  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 10258                           
 10259                           ;usb_device.c: 2178: {
 10260                           ;usb_device.c: 2179: BDT_ENTRY *p;
 10261                           ;usb_device.c: 2181: if(SetupPkt.EPDir == 0)
 10262  004396  0104               	movlb	4	; () banked
 10263  004398  BF34               	btfsc	52,7,b	;volatile
 10264  00439A  D00B               	goto	l1753
 10265                           
 10266                           ; BSR set to: 4
 10267                           ;usb_device.c: 2182: {
 10268                           ;usb_device.c: 2183: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 10269  00439C  5134               	movf	52,w,b	;volatile
 10270  00439E  0B0F               	andlw	15
 10271  0043A0  0100               	movlb	0	; () banked
 10272  0043A2  6F7D               	movwf	??_USBStdGetStatusHandler& (0+255),b
 10273  0043A4  517D               	movf	??_USBStdGetStatusHandler& (0+255),w,b
 10274  0043A6  0D02               	mullw	2
 10275  0043A8  0E06               	movlw	low _pBDTEntryOut
 10276  0043AA  24F3               	addwf	prodl,w,c
 10277  0043AC  6ED9               	movwf	fsr2l,c
 10278  0043AE  0E03               	movlw	high _pBDTEntryOut
 10279  0043B0  D00B               	goto	L4
 10280  0043B2                     l1753:
 10281                           
 10282                           ;usb_device.c: 2185: else
 10283                           ;usb_device.c: 2186: {
 10284                           ;usb_device.c: 2187: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 10285                           
 10286                           ; BSR set to: 0
 10287  0043B2  0104               	movlb	4	; () banked
 10288  0043B4  5134               	movf	52,w,b	;volatile
 10289  0043B6  0B0F               	andlw	15
 10290  0043B8  0100               	movlb	0	; () banked
 10291  0043BA  6F7D               	movwf	??_USBStdGetStatusHandler& (0+255),b
 10292  0043BC  517D               	movf	??_USBStdGetStatusHandler& (0+255),w,b
 10293  0043BE  0D02               	mullw	2
 10294  0043C0  0EB6               	movlw	low _pBDTEntryIn
 10295  0043C2  24F3               	addwf	prodl,w,c
 10296  0043C4  6ED9               	movwf	fsr2l,c
 10297  0043C6  0E00               	movlw	high _pBDTEntryIn
 10298  0043C8                     L4:
 10299  0043C8  20F4               	addwfc	prodh,w,c
 10300  0043CA  6EDA               	movwf	fsr2h,c
 10301  0043CC  CFDE F07E          	movff	postinc2,USBStdGetStatusHandler@p
 10302  0043D0  CFDD F07F          	movff	postdec2,USBStdGetStatusHandler@p+1
 10303                           
 10304                           ; BSR set to: 0
 10305                           ;usb_device.c: 2188: }
 10306                           ;usb_device.c: 2190: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
 10307                           
 10308                           ; BSR set to: 0
 10309  0043D4  C07E  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 10310  0043D8  C07F  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 10311  0043DC  AEDF               	btfss	indf2,7,c
 10312  0043DE  D015               	goto	l1750
 10313                           
 10314                           ; BSR set to: 0
 10315  0043E0  C07E  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 10316  0043E4  C07F  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 10317  0043E8  A4DF               	btfss	indf2,2,c
 10318  0043EA  D00F               	goto	l1750
 10319                           
 10320                           ; BSR set to: 0
 10321                           ;usb_device.c: 2191: CtrlTrfData[0]=0x01;
 10322  0043EC  0E01               	movlw	1
 10323  0043EE  0104               	movlb	4	; () banked
 10324  0043F0  6F38               	movwf	56,b	;volatile
 10325                           
 10326                           ; BSR set to: 4
 10327                           ;usb_device.c: 2193: }
 10328                           ;usb_device.c: 2194: }
 10329                           
 10330                           ; BSR set to: 4
 10331                           ;usb_device.c: 2192: break;
 10332  0043F2  D00B               	goto	l1750
 10333  0043F4                     l1746:
 10334                           
 10335                           ; BSR set to: 4
 10336                           
 10337                           ; BSR set to: 4
 10338  0043F4  5130               	movf	48,w,b	;volatile
 10339  0043F6  0B1F               	andlw	31
 10340                           
 10341                           ; Switch size 1, requested type "space"
 10342                           ; Number of cases is 3, Range of values is 0 to 2
 10343                           ; switch strategies available:
 10344                           ; Name         Instructions Cycles
 10345                           ; simple_byte           10     6 (average)
 10346                           ;	Chosen strategy is simple_byte
 10347  0043F8  0A00               	xorlw	0	; case 0
 10348  0043FA  B4D8               	btfsc	status,2,c
 10349  0043FC  D7BE               	goto	l1747
 10350  0043FE  0A01               	xorlw	1	; case 1
 10351  004400  B4D8               	btfsc	status,2,c
 10352  004402  D7C4               	goto	l1751
 10353  004404  0A03               	xorlw	3	; case 2
 10354  004406  B4D8               	btfsc	status,2,c
 10355  004408  D7C4               	goto	l1752
 10356  00440A                     l1750:
 10357                           
 10358                           ;usb_device.c: 2196: if(inPipes[0].info.bits.busy == 1)
 10359  00440A  0100               	movlb	0	; () banked
 10360  00440C  AFB3               	btfss	(_inPipes+3)& (0+255),7,b
 10361  00440E  0012               	return	
 10362                           
 10363                           ; BSR set to: 0
 10364                           ;usb_device.c: 2197: {
 10365                           ;usb_device.c: 2198: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
 10366  004410  0E38               	movlw	56
 10367  004412  6FB0               	movwf	_inPipes& (0+255),b
 10368  004414  0E04               	movlw	4
 10369  004416  6FB1               	movwf	(_inPipes+1)& (0+255),b
 10370                           
 10371                           ; BSR set to: 0
 10372                           ;usb_device.c: 2199: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 10373  004418  81B3               	bsf	(_inPipes+3)& (0+255),0,b
 10374                           
 10375                           ; BSR set to: 0
 10376                           ;usb_device.c: 2200: inPipes[0].wCount.v[0] = 2;
 10377  00441A  0E02               	movlw	2
 10378  00441C  6FB4               	movwf	(_inPipes+4)& (0+255),b
 10379  00441E  0012               	return	
 10380  004420                     __end_of_USBStdGetStatusHandler:
 10381                           	opt stack 0
 10382                           tosu	equ	0xFFF
 10383                           tosh	equ	0xFFE
 10384                           tosl	equ	0xFFD
 10385                           pclath	equ	0xFFA
 10386                           tblptru	equ	0xFF8
 10387                           tblptrh	equ	0xFF7
 10388                           tblptrl	equ	0xFF6
 10389                           tablat	equ	0xFF5
 10390                           prodh	equ	0xFF4
 10391                           prodl	equ	0xFF3
 10392                           intcon	equ	0xFF2
 10393                           intcon2	equ	0xFF1
 10394                           intcon3	equ	0xFF0
 10395                           postinc0	equ	0xFEE
 10396                           plusw0	equ	0xFEB
 10397                           wreg	equ	0xFE8
 10398                           postinc1	equ	0xFE6
 10399                           postdec1	equ	0xFE5
 10400                           fsr1h	equ	0xFE2
 10401                           fsr1l	equ	0xFE1
 10402                           indf2	equ	0xFDF
 10403                           postinc2	equ	0xFDE
 10404                           postdec2	equ	0xFDD
 10405                           plusw2	equ	0xFDB
 10406                           fsr2h	equ	0xFDA
 10407                           fsr2l	equ	0xFD9
 10408                           status	equ	0xFD8
 10409                           
 10410 ;; *************** function _USBStdGetDscHandler *****************
 10411 ;; Defined at:
 10412 ;;		line 2061 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 10413 ;; Parameters:    Size  Location     Type
 10414 ;;		None
 10415 ;; Auto vars:     Size  Location     Type
 10416 ;;		None
 10417 ;; Return value:  Size  Location     Type
 10418 ;;                  1    wreg      void 
 10419 ;; Registers used:
 10420 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 10421 ;; Tracked objects:
 10422 ;;		On entry : 0/0
 10423 ;;		On exit  : 0/0
 10424 ;;		Unchanged: 0/0
 10425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10426 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10427 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10428 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10429 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10430 ;;Total ram usage:        2 bytes
 10431 ;; Hardware stack levels used:    1
 10432 ;; Hardware stack levels required when called:   11
 10433 ;; This function calls:
 10434 ;;		Nothing
 10435 ;; This function is called by:
 10436 ;;		_USBCheckStdRequest
 10437 ;; This function uses a non-reentrant model
 10438 ;;
 10439                           
 10440                           	psect	text42
 10441  002BD4                     __ptext42:
 10442                           	opt stack 0
 10443  002BD4                     _USBStdGetDscHandler:
 10444                           	opt stack 12
 10445                           
 10446                           ;usb_device.c: 2063: if(SetupPkt.bmRequestType == 0x80)
 10447                           
 10448                           ; BSR set to: 0
 10449                           ;incstack = 0
 10450  002BD4  0E80               	movlw	128
 10451  002BD6  0104               	movlb	4	; () banked
 10452  002BD8  1930               	xorwf	48,w,b	;volatile
 10453  002BDA  A4D8               	btfss	status,2,c
 10454  002BDC  0012               	return	
 10455                           
 10456                           ; BSR set to: 4
 10457                           ;usb_device.c: 2064: {
 10458                           ;usb_device.c: 2065: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 10459  002BDE  0EC0               	movlw	192
 10460  002BE0  0100               	movlb	0	; () banked
 10461  002BE2  6FB3               	movwf	(_inPipes+3)& (0+255),b
 10462                           
 10463                           ;usb_device.c: 2067: switch(SetupPkt.bDescriptorType)
 10464  002BE4  D082               	goto	l1733
 10465  002BE6                     
 10466                           ;usb_device.c: 2073: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 10467                           
 10468                           ; BSR set to: 0
 10469  002BE6  0E49               	movlw	low _device_dsc
 10470  002BE8  0100               	movlb	0	; () banked
 10471  002BEA  6FB0               	movwf	_inPipes& (0+255),b
 10472  002BEC  0EFE               	movlw	high _device_dsc
 10473  002BEE  6FB1               	movwf	(_inPipes+1)& (0+255),b
 10474                           
 10475                           ; BSR set to: 0
 10476                           ;usb_device.c: 2075: inPipes[0].wCount.Val = sizeof(device_dsc);
 10477  002BF0  0E00               	movlw	0
 10478  002BF2  6FB5               	movwf	(_inPipes+5)& (0+255),b
 10479  002BF4  0E12               	movlw	18
 10480  002BF6  6FB4               	movwf	(_inPipes+4)& (0+255),b
 10481                           
 10482                           ;usb_device.c: 2076: break;
 10483  002BF8  0012               	return	
 10484  002BFA                     
 10485                           ;usb_device.c: 2081: if(SetupPkt.bDscIndex < 1)
 10486                           
 10487                           ; BSR set to: 0
 10488  002BFA  0104               	movlb	4	; () banked
 10489  002BFC  5132               	movf	50,w,b	;volatile
 10490  002BFE  A4D8               	btfss	status,2,c
 10491  002C00  D040               	goto	l1737
 10492                           
 10493                           ; BSR set to: 4
 10494                           ;usb_device.c: 2082: {
 10495                           ;usb_device.c: 2086: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
 10496  002C02  5132               	movf	50,w,b	;volatile
 10497  002C04  0D02               	mullw	2
 10498  002C06  0E2E               	movlw	low _USB_CD_Ptr
 10499  002C08  24F3               	addwf	prodl,w,c
 10500  002C0A  6EF6               	movwf	tblptrl,c
 10501  002C0C  0EFC               	movlw	high _USB_CD_Ptr
 10502  002C0E  20F4               	addwfc	prodh,w,c
 10503  002C10  6EF7               	movwf	tblptrh,c
 10504  002C12                     	if	0	;There are less than 3 active tblptr bytes
 10505  002C12                     	endif
 10506  002C12  0009               	tblrd		*+
 10507  002C14  CFF5 F0B0          	movff	tablat,_inPipes
 10508  002C18  000A               	tblrd		*-
 10509  002C1A  CFF5 F0B1          	movff	tablat,_inPipes+1
 10510                           
 10511                           ; BSR set to: 4
 10512                           ;usb_device.c: 2092: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 10513  002C1E  0E02               	movlw	2
 10514  002C20  0100               	movlb	0	; () banked
 10515  002C22  25B0               	addwf	_inPipes& (0+255),w,b
 10516  002C24  6F7D               	movwf	??_USBStdGetDscHandler& (0+255),b
 10517  002C26  0E00               	movlw	0
 10518  002C28  21B1               	addwfc	(_inPipes+1)& (0+255),w,b
 10519  002C2A  6F7E               	movwf	(??_USBStdGetDscHandler+1)& (0+255),b
 10520  002C2C  C07D  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 10521  002C30  C07E  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 10522  002C34  6AF8               	clrf	tblptru,c
 10523  002C36  0E0E               	movlw	(high __ramtop+-1)
 10524  002C38  64F7               	cpfsgt	tblptrh,c
 10525  002C3A  D003               	bra	u11847
 10526  002C3C  0008               	tblrd		*
 10527  002C3E  50F5               	movf	tablat,w,c
 10528  002C40  D005               	bra	u11840
 10529  002C42                     u11847:
 10530  002C42  CFF6 FFE9          	movff	tblptrl,fsr0l
 10531  002C46  CFF7 FFEA          	movff	tblptrh,fsr0h
 10532  002C4A  50EF               	movf	indf0,w,c
 10533  002C4C                     u11840:
 10534  002C4C  0100               	movlb	0	; () banked
 10535  002C4E  6FB4               	movwf	(_inPipes+4)& (0+255),b
 10536                           
 10537                           ; BSR set to: 0
 10538                           ;usb_device.c: 2093: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 10539  002C50  0E03               	movlw	3
 10540  002C52  25B0               	addwf	_inPipes& (0+255),w,b
 10541  002C54  6F7D               	movwf	??_USBStdGetDscHandler& (0+255),b
 10542  002C56  0E00               	movlw	0
 10543  002C58  21B1               	addwfc	(_inPipes+1)& (0+255),w,b
 10544  002C5A  6F7E               	movwf	(??_USBStdGetDscHandler+1)& (0+255),b
 10545  002C5C  C07D  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 10546  002C60  C07E  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 10547  002C64  6AF8               	clrf	tblptru,c
 10548  002C66  0E0E               	movlw	(high __ramtop+-1)
 10549  002C68  64F7               	cpfsgt	tblptrh,c
 10550  002C6A  D003               	bra	u11857
 10551  002C6C  0008               	tblrd		*
 10552  002C6E  50F5               	movf	tablat,w,c
 10553  002C70  D005               	bra	u11850
 10554  002C72                     u11857:
 10555  002C72  CFF6 FFE9          	movff	tblptrl,fsr0l
 10556  002C76  CFF7 FFEA          	movff	tblptrh,fsr0h
 10557  002C7A  50EF               	movf	indf0,w,c
 10558  002C7C                     u11850:
 10559  002C7C  0100               	movlb	0	; () banked
 10560  002C7E  6FB5               	movwf	(_inPipes+5)& (0+255),b
 10561                           
 10562                           ;usb_device.c: 2094: }
 10563  002C80  0012               	return	
 10564  002C82                     l1737:
 10565                           
 10566                           ;usb_device.c: 2095: else
 10567                           ;usb_device.c: 2096: {
 10568                           ;usb_device.c: 2097: inPipes[0].info.Val = 0;
 10569                           
 10570                           ; BSR set to: 0
 10571  002C82  0E00               	movlw	0
 10572  002C84  0100               	movlb	0	; () banked
 10573  002C86  6FB3               	movwf	(_inPipes+3)& (0+255),b
 10574                           
 10575                           ; BSR set to: 0
 10576                           ;usb_device.c: 2098: }
 10577                           ;usb_device.c: 2099: break;
 10578  002C88  0012               	return	
 10579  002C8A                     
 10580                           ;usb_device.c: 2104: if(SetupPkt.bDscIndex<3)
 10581                           
 10582                           ; BSR set to: 0
 10583  002C8A  0E03               	movlw	3
 10584  002C8C  0104               	movlb	4	; () banked
 10585  002C8E  6132               	cpfslt	50,b	;volatile
 10586  002C90  D024               	goto	l1740
 10587                           
 10588                           ; BSR set to: 4
 10589                           ;usb_device.c: 2105: {
 10590                           ;usb_device.c: 2107: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
 10591  002C92  5132               	movf	50,w,b	;volatile
 10592  002C94  0D02               	mullw	2
 10593  002C96  0E1C               	movlw	low _USB_SD_Ptr
 10594  002C98  24F3               	addwf	prodl,w,c
 10595  002C9A  6EF6               	movwf	tblptrl,c
 10596  002C9C  0EFC               	movlw	high _USB_SD_Ptr
 10597  002C9E  20F4               	addwfc	prodh,w,c
 10598  002CA0  6EF7               	movwf	tblptrh,c
 10599  002CA2                     	if	0	;There are less than 3 active tblptr bytes
 10600  002CA2                     	endif
 10601  002CA2  0009               	tblrd		*+
 10602  002CA4  CFF5 F0B0          	movff	tablat,_inPipes
 10603  002CA8  000A               	tblrd		*-
 10604  002CAA  CFF5 F0B1          	movff	tablat,_inPipes+1
 10605                           
 10606                           ; BSR set to: 4
 10607                           ;usb_device.c: 2109: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 10608  002CAE  C0B0  FFF6         	movff	_inPipes,tblptrl
 10609  002CB2  C0B1  FFF7         	movff	_inPipes+1,tblptrh
 10610  002CB6  6AF8               	clrf	tblptru,c
 10611  002CB8  0E0E               	movlw	(high __ramtop+-1)
 10612  002CBA  64F7               	cpfsgt	tblptrh,c
 10613  002CBC  D003               	bra	u11877
 10614  002CBE  0008               	tblrd		*
 10615  002CC0  50F5               	movf	tablat,w,c
 10616  002CC2  D005               	bra	u11870
 10617  002CC4                     u11877:
 10618  002CC4  CFF6 FFE9          	movff	tblptrl,fsr0l
 10619  002CC8  CFF7 FFEA          	movff	tblptrh,fsr0h
 10620  002CCC  50EF               	movf	indf0,w,c
 10621  002CCE                     u11870:
 10622  002CCE  0100               	movlb	0	; () banked
 10623  002CD0  6F7D               	movwf	??_USBStdGetDscHandler& (0+255),b
 10624  002CD2  517D               	movf	??_USBStdGetDscHandler& (0+255),w,b
 10625  002CD4  6FB4               	movwf	(_inPipes+4)& (0+255),b
 10626  002CD6  6BB5               	clrf	(_inPipes+5)& (0+255),b
 10627                           
 10628                           ;usb_device.c: 2110: }
 10629  002CD8  0012               	return	
 10630  002CDA                     l1740:
 10631                           
 10632                           ;usb_device.c: 2120: else
 10633                           ;usb_device.c: 2121: {
 10634                           ;usb_device.c: 2122: inPipes[0].info.Val = 0;
 10635                           
 10636                           ; BSR set to: 0
 10637  002CDA  0E00               	movlw	0
 10638  002CDC  0100               	movlb	0	; () banked
 10639  002CDE  6FB3               	movwf	(_inPipes+3)& (0+255),b
 10640                           
 10641                           ; BSR set to: 0
 10642                           ;usb_device.c: 2123: }
 10643                           ;usb_device.c: 2124: break;
 10644  002CE0  0012               	return	
 10645  002CE2                     
 10646                           ;usb_device.c: 2126: inPipes[0].info.Val = 0;
 10647                           
 10648                           ; BSR set to: 0
 10649  002CE2  0E00               	movlw	0
 10650  002CE4  0100               	movlb	0	; () banked
 10651  002CE6  6FB3               	movwf	(_inPipes+3)& (0+255),b
 10652                           
 10653                           ; BSR set to: 0
 10654                           ;usb_device.c: 2128: }
 10655                           
 10656                           ;usb_device.c: 2127: break;
 10657  002CE8  0012               	return	
 10658  002CEA                     l1733:
 10659                           
 10660                           ; BSR set to: 0
 10661                           
 10662                           ; BSR set to: 0
 10663  002CEA  0104               	movlb	4	; () banked
 10664  002CEC  5133               	movf	51,w,b	;volatile
 10665                           
 10666                           ; Switch size 1, requested type "space"
 10667                           ; Number of cases is 3, Range of values is 1 to 3
 10668                           ; switch strategies available:
 10669                           ; Name         Instructions Cycles
 10670                           ; simple_byte           10     6 (average)
 10671                           ;	Chosen strategy is simple_byte
 10672  002CEE  0A01               	xorlw	1	; case 1
 10673  002CF0  B4D8               	btfsc	status,2,c
 10674  002CF2  D779               	goto	l1734
 10675  002CF4  0A03               	xorlw	3	; case 2
 10676  002CF6  B4D8               	btfsc	status,2,c
 10677  002CF8  D780               	goto	l1736
 10678  002CFA  0A01               	xorlw	1	; case 3
 10679  002CFC  B4D8               	btfsc	status,2,c
 10680  002CFE  D7C5               	goto	l1739
 10681  002D00  D7F0               	goto	l1742
 10682  002D02                     __end_of_USBStdGetDscHandler:
 10683                           	opt stack 0
 10684                           tosu	equ	0xFFF
 10685                           tosh	equ	0xFFE
 10686                           tosl	equ	0xFFD
 10687                           pclath	equ	0xFFA
 10688                           tblptru	equ	0xFF8
 10689                           tblptrh	equ	0xFF7
 10690                           tblptrl	equ	0xFF6
 10691                           tablat	equ	0xFF5
 10692                           prodh	equ	0xFF4
 10693                           prodl	equ	0xFF3
 10694                           intcon	equ	0xFF2
 10695                           intcon2	equ	0xFF1
 10696                           intcon3	equ	0xFF0
 10697                           indf0	equ	0xFEF
 10698                           postinc0	equ	0xFEE
 10699                           plusw0	equ	0xFEB
 10700                           fsr0h	equ	0xFEA
 10701                           fsr0l	equ	0xFE9
 10702                           wreg	equ	0xFE8
 10703                           postinc1	equ	0xFE6
 10704                           postdec1	equ	0xFE5
 10705                           fsr1h	equ	0xFE2
 10706                           fsr1l	equ	0xFE1
 10707                           indf2	equ	0xFDF
 10708                           postinc2	equ	0xFDE
 10709                           postdec2	equ	0xFDD
 10710                           plusw2	equ	0xFDB
 10711                           fsr2h	equ	0xFDA
 10712                           fsr2l	equ	0xFD9
 10713                           status	equ	0xFD8
 10714                           
 10715 ;; *************** function _USBStdFeatureReqHandler *****************
 10716 ;; Defined at:
 10717 ;;		line 2771 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 10718 ;; Parameters:    Size  Location     Type
 10719 ;;		None
 10720 ;; Auto vars:     Size  Location     Type
 10721 ;;  p               2   53[BANK0 ] PTR struct __BDT
 10722 ;;		 -> NULL(0), BDT(48), 
 10723 ;;  pUEP            2   50[BANK0 ] PTR unsigned char 
 10724 ;;		 -> UEP0(1), 
 10725 ;;  current_ep_d    1   52[BANK0 ] struct .
 10726 ;; Return value:  Size  Location     Type
 10727 ;;                  1    wreg      void 
 10728 ;; Registers used:
 10729 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10730 ;; Tracked objects:
 10731 ;;		On entry : 0/0
 10732 ;;		On exit  : 0/0
 10733 ;;		Unchanged: 0/0
 10734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10735 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10736 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10737 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10738 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10739 ;;Total ram usage:        6 bytes
 10740 ;; Hardware stack levels used:    1
 10741 ;; Hardware stack levels required when called:   15
 10742 ;; This function calls:
 10743 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 10744 ;; This function is called by:
 10745 ;;		_USBCheckStdRequest
 10746 ;; This function uses a non-reentrant model
 10747 ;;
 10748                           
 10749                           	psect	text43
 10750  00135A                     __ptext43:
 10751                           	opt stack 0
 10752  00135A                     _USBStdFeatureReqHandler:
 10753                           	opt stack 8
 10754                           
 10755                           ;usb_device.c: 2773: BDT_ENTRY *p;
 10756                           ;usb_device.c: 2774: EP_STATUS current_ep_data;
 10757                           ;usb_device.c: 2778: unsigned char* pUEP;
 10758                           ;usb_device.c: 2816: if((SetupPkt.bFeature == 1)&&
 10759                           ;usb_device.c: 2817: (SetupPkt.Recipient == (0x00)))
 10760                           
 10761                           ;incstack = 0
 10762  00135A  0104               	movlb	4	; () banked
 10763  00135C  0532               	decf	50,w,b	;volatile
 10764  00135E  A4D8               	btfss	status,2,c
 10765  001360  D011               	goto	l1826
 10766                           
 10767                           ; BSR set to: 4
 10768  001362  5130               	movf	48,w,b	;volatile
 10769  001364  0B1F               	andlw	31
 10770  001366  0900               	iorlw	0
 10771  001368  A4D8               	btfss	status,2,c
 10772  00136A  D00C               	goto	l1826
 10773                           
 10774                           ; BSR set to: 4
 10775                           ;usb_device.c: 2818: {
 10776                           ;usb_device.c: 2819: inPipes[0].info.bits.busy = 1;
 10777  00136C  0100               	movlb	0	; () banked
 10778  00136E  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 10779                           
 10780                           ; BSR set to: 0
 10781                           ;usb_device.c: 2820: if(SetupPkt.bRequest == 3)
 10782  001370  0E03               	movlw	3
 10783  001372  0104               	movlb	4	; () banked
 10784  001374  1931               	xorwf	49,w,b	;volatile
 10785  001376  A4D8               	btfss	status,2,c
 10786  001378  D002               	goto	l1825
 10787                           
 10788                           ; BSR set to: 4
 10789                           ;usb_device.c: 2821: RemoteWakeup = 1;
 10790  00137A  0E01               	movlw	1
 10791  00137C  D001               	goto	L5
 10792  00137E                     l1825:
 10793                           
 10794                           ;usb_device.c: 2822: else
 10795                           ;usb_device.c: 2823: RemoteWakeup = 0;
 10796                           
 10797                           ; BSR set to: 1
 10798  00137E  0E00               	movlw	0
 10799  001380                     L5:
 10800  001380  0101               	movlb	1	; () banked
 10801  001382  6FE1               	movwf	_RemoteWakeup& (0+255),b
 10802  001384                     l1826:
 10803                           
 10804                           ;usb_device.c: 2824: }
 10805                           ;usb_device.c: 2827: if((SetupPkt.bFeature == 0)&&
 10806                           ;usb_device.c: 2828: (SetupPkt.Recipient == (0x02))&&
 10807                           ;usb_device.c: 2829: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
 10808                           ;usb_device.c: 2830: (USBDeviceState == CONFIGURED_STATE))
 10809                           
 10810                           ; BSR set to: 1
 10811  001384  0104               	movlb	4	; () banked
 10812  001386  5132               	movf	50,w,b	;volatile
 10813  001388  A4D8               	btfss	status,2,c
 10814  00138A  0012               	return	
 10815                           
 10816                           ; BSR set to: 4
 10817  00138C  5130               	movf	48,w,b	;volatile
 10818  00138E  0B1F               	andlw	31
 10819  001390  0A02               	xorlw	2
 10820  001392  A4D8               	btfss	status,2,c
 10821  001394  0012               	return	
 10822                           
 10823                           ; BSR set to: 4
 10824  001396  5134               	movf	52,w,b	;volatile
 10825  001398  0B0F               	andlw	15
 10826  00139A  0900               	iorlw	0
 10827  00139C  B4D8               	btfsc	status,2,c
 10828  00139E  0012               	return	
 10829                           
 10830                           ; BSR set to: 4
 10831  0013A0  5134               	movf	52,w,b	;volatile
 10832  0013A2  0B0F               	andlw	15
 10833  0013A4  0100               	movlb	0	; () banked
 10834  0013A6  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10835  0013A8  0E03               	movlw	3
 10836  0013AA  6191               	cpfslt	??_USBStdFeatureReqHandler& (0+255),b
 10837  0013AC  0012               	return	
 10838                           
 10839                           ; BSR set to: 0
 10840  0013AE  0E20               	movlw	32
 10841  0013B0  19CE               	xorwf	_USBDeviceState& (0+255),w,b
 10842  0013B2  A4D8               	btfss	status,2,c
 10843  0013B4  0012               	return	
 10844                           
 10845                           ; BSR set to: 0
 10846                           ;usb_device.c: 2831: {
 10847                           ;usb_device.c: 2834: inPipes[0].info.bits.busy = 1;
 10848  0013B6  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 10849                           
 10850                           ;usb_device.c: 2837: if(SetupPkt.EPDir == 0)
 10851  0013B8  0104               	movlb	4	; () banked
 10852  0013BA  BF34               	btfsc	52,7,b	;volatile
 10853  0013BC  D01C               	goto	l1828
 10854                           
 10855                           ; BSR set to: 4
 10856                           ;usb_device.c: 2838: {
 10857                           ;usb_device.c: 2839: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 10858  0013BE  5134               	movf	52,w,b	;volatile
 10859  0013C0  0B0F               	andlw	15
 10860  0013C2  0100               	movlb	0	; () banked
 10861  0013C4  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10862  0013C6  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10863  0013C8  0D02               	mullw	2
 10864  0013CA  0E06               	movlw	low _pBDTEntryOut
 10865  0013CC  24F3               	addwf	prodl,w,c
 10866  0013CE  6ED9               	movwf	fsr2l,c
 10867  0013D0  0E03               	movlw	high _pBDTEntryOut
 10868  0013D2  20F4               	addwfc	prodh,w,c
 10869  0013D4  6EDA               	movwf	fsr2h,c
 10870  0013D6  CFDE F095          	movff	postinc2,USBStdFeatureReqHandler@p
 10871  0013DA  CFDD F096          	movff	postdec2,USBStdFeatureReqHandler@p+1
 10872                           
 10873                           ;usb_device.c: 2840: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 10874  0013DE  0104               	movlb	4	; () banked
 10875  0013E0  5134               	movf	52,w,b	;volatile
 10876  0013E2  0B0F               	andlw	15
 10877  0013E4  0100               	movlb	0	; () banked
 10878  0013E6  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10879  0013E8  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10880  0013EA  0D01               	mullw	1
 10881  0013EC  0ECE               	movlw	low _ep_data_out
 10882  0013EE  24F3               	addwf	prodl,w,c
 10883  0013F0  6ED9               	movwf	fsr2l,c
 10884  0013F2  0E02               	movlw	high _ep_data_out
 10885  0013F4  D01C               	goto	L6
 10886  0013F6                     l1828:
 10887                           
 10888                           ;usb_device.c: 2842: else
 10889                           ;usb_device.c: 2843: {
 10890                           ;usb_device.c: 2844: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 10891                           
 10892                           ; BSR set to: 0
 10893  0013F6  0104               	movlb	4	; () banked
 10894  0013F8  5134               	movf	52,w,b	;volatile
 10895  0013FA  0B0F               	andlw	15
 10896  0013FC  0100               	movlb	0	; () banked
 10897  0013FE  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10898  001400  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10899  001402  0D02               	mullw	2
 10900  001404  0EB6               	movlw	low _pBDTEntryIn
 10901  001406  24F3               	addwf	prodl,w,c
 10902  001408  6ED9               	movwf	fsr2l,c
 10903  00140A  0E00               	movlw	high _pBDTEntryIn
 10904  00140C  20F4               	addwfc	prodh,w,c
 10905  00140E  6EDA               	movwf	fsr2h,c
 10906  001410  CFDE F095          	movff	postinc2,USBStdFeatureReqHandler@p
 10907  001414  CFDD F096          	movff	postdec2,USBStdFeatureReqHandler@p+1
 10908                           
 10909                           ;usb_device.c: 2845: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 10910  001418  0104               	movlb	4	; () banked
 10911  00141A  5134               	movf	52,w,b	;volatile
 10912  00141C  0B0F               	andlw	15
 10913  00141E  0100               	movlb	0	; () banked
 10914  001420  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10915  001422  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10916  001424  0D01               	mullw	1
 10917  001426  0ED1               	movlw	low _ep_data_in
 10918  001428  24F3               	addwf	prodl,w,c
 10919  00142A  6ED9               	movwf	fsr2l,c
 10920  00142C  0E02               	movlw	high _ep_data_in
 10921  00142E                     L6:
 10922  00142E  20F4               	addwfc	prodh,w,c
 10923  001430  6EDA               	movwf	fsr2h,c
 10924  001432  50DF               	movf	indf2,w,c
 10925  001434  6F94               	movwf	USBStdFeatureReqHandler@current_ep_data& (0+255),b
 10926                           
 10927                           ; BSR set to: 0
 10928                           ;usb_device.c: 2846: }
 10929                           ;usb_device.c: 2852: if(current_ep_data.bits.ping_pong_state == 0)
 10930                           
 10931                           ; BSR set to: 0
 10932  001436  B194               	btfsc	USBStdFeatureReqHandler@current_ep_data& (0+255),0,b
 10933  001438  D002               	goto	l1830
 10934                           
 10935                           ; BSR set to: 0
 10936                           ;usb_device.c: 2853: {
 10937                           ;usb_device.c: 2854: {((uint8_t_VAL*)&p)->Val &= ~0x0004;};
 10938  00143A  9595               	bcf	USBStdFeatureReqHandler@p& (0+255),2,b
 10939                           
 10940                           ;usb_device.c: 2855: }
 10941  00143C  D001               	goto	l1831
 10942  00143E                     l1830:
 10943                           
 10944                           ; BSR set to: 0
 10945                           ;usb_device.c: 2856: else
 10946                           ;usb_device.c: 2857: {
 10947                           ;usb_device.c: 2858: {((uint8_t_VAL*)&p)->Val |= 0x0004;};
 10948                           
 10949                           ; BSR set to: 0
 10950  00143E  8595               	bsf	USBStdFeatureReqHandler@p& (0+255),2,b
 10951  001440                     l1831:
 10952                           
 10953                           ; BSR set to: 0
 10954                           ;usb_device.c: 2859: }
 10955                           ;usb_device.c: 2864: if(SetupPkt.EPDir == 0)
 10956                           
 10957                           ; BSR set to: 0
 10958  001440  0104               	movlb	4	; () banked
 10959  001442  BF34               	btfsc	52,7,b	;volatile
 10960  001444  D00B               	goto	l1832
 10961                           
 10962                           ; BSR set to: 4
 10963                           ;usb_device.c: 2865: {
 10964                           ;usb_device.c: 2866: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 10965  001446  5134               	movf	52,w,b	;volatile
 10966  001448  0B0F               	andlw	15
 10967  00144A  0100               	movlb	0	; () banked
 10968  00144C  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10969  00144E  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10970  001450  0D02               	mullw	2
 10971  001452  0E06               	movlw	low _pBDTEntryOut
 10972  001454  24F3               	addwf	prodl,w,c
 10973  001456  6ED9               	movwf	fsr2l,c
 10974  001458  0E03               	movlw	high _pBDTEntryOut
 10975  00145A  D00B               	goto	L7
 10976  00145C                     l1832:
 10977                           
 10978                           ;usb_device.c: 2868: else
 10979                           ;usb_device.c: 2869: {
 10980                           ;usb_device.c: 2870: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 10981                           
 10982                           ; BSR set to: 0
 10983  00145C  0104               	movlb	4	; () banked
 10984  00145E  5134               	movf	52,w,b	;volatile
 10985  001460  0B0F               	andlw	15
 10986  001462  0100               	movlb	0	; () banked
 10987  001464  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10988  001466  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10989  001468  0D02               	mullw	2
 10990  00146A  0EB6               	movlw	low _pBDTEntryIn
 10991  00146C  24F3               	addwf	prodl,w,c
 10992  00146E  6ED9               	movwf	fsr2l,c
 10993  001470  0E00               	movlw	high _pBDTEntryIn
 10994  001472                     L7:
 10995  001472  20F4               	addwfc	prodh,w,c
 10996  001474  6EDA               	movwf	fsr2h,c
 10997  001476  C095  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 10998  00147A  C096  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 10999                           
 11000                           ; BSR set to: 0
 11001                           ;usb_device.c: 2871: }
 11002                           ;usb_device.c: 2874: if(SetupPkt.bRequest == 3)
 11003                           
 11004                           ; BSR set to: 0
 11005  00147E  0E03               	movlw	3
 11006  001480  0104               	movlb	4	; () banked
 11007  001482  1931               	xorwf	49,w,b	;volatile
 11008  001484  A4D8               	btfss	status,2,c
 11009  001486  D031               	goto	l1834
 11010                           
 11011                           ; BSR set to: 4
 11012                           ;usb_device.c: 2875: {
 11013                           ;usb_device.c: 2876: if(p->STAT.UOWN == 1)
 11014  001488  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11015  00148C  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11016  001490  0100               	movlb	0	; () banked
 11017  001492  AEDF               	btfss	indf2,7,c
 11018  001494  D01D               	goto	l1837
 11019                           
 11020                           ; BSR set to: 0
 11021                           ;usb_device.c: 2877: {
 11022                           ;usb_device.c: 2880: if(SetupPkt.EPDir == 0)
 11023  001496  0104               	movlb	4	; () banked
 11024  001498  BF34               	btfsc	52,7,b	;volatile
 11025  00149A  D00B               	goto	l1836
 11026                           
 11027                           ; BSR set to: 4
 11028                           ;usb_device.c: 2881: {
 11029                           ;usb_device.c: 2882: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
 11030  00149C  5134               	movf	52,w,b	;volatile
 11031  00149E  0B0F               	andlw	15
 11032  0014A0  0100               	movlb	0	; () banked
 11033  0014A2  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11034  0014A4  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11035  0014A6  0D01               	mullw	1
 11036  0014A8  0ECE               	movlw	low _ep_data_out
 11037  0014AA  24F3               	addwf	prodl,w,c
 11038  0014AC  6ED9               	movwf	fsr2l,c
 11039  0014AE  0E02               	movlw	high _ep_data_out
 11040  0014B0  D00B               	goto	L8
 11041  0014B2                     l1836:
 11042                           
 11043                           ;usb_device.c: 2884: else
 11044                           ;usb_device.c: 2885: {
 11045                           ;usb_device.c: 2886: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
 11046                           
 11047                           ; BSR set to: 2
 11048  0014B2  0104               	movlb	4	; () banked
 11049  0014B4  5134               	movf	52,w,b	;volatile
 11050  0014B6  0B0F               	andlw	15
 11051  0014B8  0100               	movlb	0	; () banked
 11052  0014BA  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11053  0014BC  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11054  0014BE  0D01               	mullw	1
 11055  0014C0  0ED1               	movlw	low _ep_data_in
 11056  0014C2  24F3               	addwf	prodl,w,c
 11057  0014C4  6ED9               	movwf	fsr2l,c
 11058  0014C6  0E02               	movlw	high _ep_data_in
 11059  0014C8                     L8:
 11060  0014C8  20F4               	addwfc	prodh,w,c
 11061  0014CA  6EDA               	movwf	fsr2h,c
 11062  0014CC  0102               	movlb	2	; () banked
 11063  0014CE  82DF               	bsf	indf2,1,c
 11064  0014D0                     l1837:
 11065                           
 11066                           ;usb_device.c: 2887: }
 11067                           ;usb_device.c: 2888: }
 11068                           ;usb_device.c: 2891: p->STAT.Val |= 0x04;
 11069                           
 11070                           ; BSR set to: 2
 11071                           
 11072                           ; BSR set to: 2
 11073  0014D0  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11074  0014D4  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11075  0014D8  0E00               	movlw	0
 11076  0014DA  84DB               	bsf	plusw2,2,c
 11077                           
 11078                           ;usb_device.c: 2892: p->STAT.Val |= 0x80;
 11079  0014DC  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11080  0014E0  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11081  0014E4  0E00               	movlw	0
 11082  0014E6  8EDB               	bsf	plusw2,7,c
 11083                           
 11084                           ;usb_device.c: 2893: }
 11085  0014E8  0012               	return	
 11086  0014EA                     l1834:
 11087                           
 11088                           ;usb_device.c: 2894: else
 11089                           ;usb_device.c: 2895: {
 11090                           ;usb_device.c: 2899: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 11091  0014EA  0E04               	movlw	4
 11092  0014EC  0100               	movlb	0	; () banked
 11093  0014EE  1B95               	xorwf	USBStdFeatureReqHandler@p& (0+255),f,b
 11094                           
 11095                           ; BSR set to: 0
 11096                           ;usb_device.c: 2901: if(p->STAT.UOWN == 1)
 11097  0014F0  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11098  0014F4  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11099  0014F8  AEDF               	btfss	indf2,7,c
 11100  0014FA  D01B               	goto	l1839
 11101                           
 11102                           ; BSR set to: 0
 11103                           ;usb_device.c: 2902: {
 11104                           ;usb_device.c: 2905: p->STAT.Val &= (~0x80);
 11105  0014FC  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11106  001500  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11107  001504  0E7F               	movlw	127
 11108  001506  16DF               	andwf	indf2,f,c
 11109                           
 11110                           ; BSR set to: 0
 11111                           ;usb_device.c: 2906: p->STAT.Val |= 0x40;
 11112  001508  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11113  00150C  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11114  001510  0E00               	movlw	0
 11115  001512  8CDB               	bsf	plusw2,6,c
 11116                           
 11117                           ; BSR set to: 0
 11118                           ;usb_device.c: 2907: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 11119  001514  0E00               	movlw	0
 11120  001516  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
 11121  001518  0E05               	movlw	5
 11122  00151A  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
 11123  00151C  C095  F08B         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 11124  001520  C096  F08C         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 11125  001524  0E00               	movlw	0
 11126  001526  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
 11127  001528  0E02               	movlw	2
 11128  00152A  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
 11129  00152C  EC05  F02C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 11130                           
 11131                           ;usb_device.c: 2908: }
 11132  001530  D006               	goto	l1840
 11133  001532                     l1839:
 11134                           
 11135                           ;usb_device.c: 2909: else
 11136                           ;usb_device.c: 2910: {
 11137                           ;usb_device.c: 2912: p->STAT.Val |= 0x40;
 11138  001532  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11139  001536  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11140  00153A  0E00               	movlw	0
 11141  00153C  8CDB               	bsf	plusw2,6,c
 11142  00153E                     l1840:
 11143                           
 11144                           ;usb_device.c: 2913: }
 11145                           ;usb_device.c: 2917: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 11146  00153E  0E04               	movlw	4
 11147  001540  0100               	movlb	0	; () banked
 11148  001542  1B95               	xorwf	USBStdFeatureReqHandler@p& (0+255),f,b
 11149                           
 11150                           ; BSR set to: 0
 11151                           ;usb_device.c: 2923: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 11152  001544  B394               	btfsc	USBStdFeatureReqHandler@current_ep_data& (0+255),1,b
 11153  001546  D006               	goto	u12090
 11154                           
 11155                           ; BSR set to: 0
 11156  001548  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11157  00154C  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11158  001550  AEDF               	btfss	indf2,7,c
 11159  001552  D033               	goto	l1841
 11160  001554                     u12090:
 11161                           
 11162                           ; BSR set to: 0
 11163                           ;usb_device.c: 2924: {
 11164                           ;usb_device.c: 2925: if(SetupPkt.EPDir == 0)
 11165  001554  0104               	movlb	4	; () banked
 11166  001556  BF34               	btfsc	52,7,b	;volatile
 11167  001558  D00B               	goto	l1844
 11168                           
 11169                           ; BSR set to: 4
 11170                           ;usb_device.c: 2926: {
 11171                           ;usb_device.c: 2927: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
 11172  00155A  5134               	movf	52,w,b	;volatile
 11173  00155C  0B0F               	andlw	15
 11174  00155E  0100               	movlb	0	; () banked
 11175  001560  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11176  001562  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11177  001564  0D01               	mullw	1
 11178  001566  0ECE               	movlw	low _ep_data_out
 11179  001568  24F3               	addwf	prodl,w,c
 11180  00156A  6ED9               	movwf	fsr2l,c
 11181  00156C  0E02               	movlw	high _ep_data_out
 11182  00156E  D00B               	goto	L9
 11183  001570                     l1844:
 11184                           
 11185                           ;usb_device.c: 2929: else
 11186                           ;usb_device.c: 2930: {
 11187                           ;usb_device.c: 2931: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
 11188                           
 11189                           ; BSR set to: 2
 11190  001570  0104               	movlb	4	; () banked
 11191  001572  5134               	movf	52,w,b	;volatile
 11192  001574  0B0F               	andlw	15
 11193  001576  0100               	movlb	0	; () banked
 11194  001578  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11195  00157A  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11196  00157C  0D01               	mullw	1
 11197  00157E  0ED1               	movlw	low _ep_data_in
 11198  001580  24F3               	addwf	prodl,w,c
 11199  001582  6ED9               	movwf	fsr2l,c
 11200  001584  0E02               	movlw	high _ep_data_in
 11201  001586                     L9:
 11202  001586  20F4               	addwfc	prodh,w,c
 11203  001588  6EDA               	movwf	fsr2h,c
 11204  00158A  0102               	movlb	2	; () banked
 11205  00158C  92DF               	bcf	indf2,1,c
 11206                           
 11207                           ; BSR set to: 2
 11208                           ;usb_device.c: 2932: }
 11209                           ;usb_device.c: 2934: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 11210                           
 11211                           ; BSR set to: 2
 11212  00158E  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11213  001592  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11214  001596  0E3B               	movlw	59
 11215  001598  16DF               	andwf	indf2,f,c
 11216                           
 11217                           ; BSR set to: 2
 11218                           ;usb_device.c: 2937: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 11219  00159A  0E00               	movlw	0
 11220  00159C  0100               	movlb	0	; () banked
 11221  00159E  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
 11222  0015A0  0E05               	movlw	5
 11223  0015A2  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
 11224  0015A4  C095  F08B         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 11225  0015A8  C096  F08C         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 11226  0015AC  0E00               	movlw	0
 11227  0015AE  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
 11228  0015B0  0E02               	movlw	2
 11229  0015B2  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
 11230  0015B4  EC05  F02C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 11231                           
 11232                           ;usb_device.c: 2938: }
 11233  0015B8  D006               	goto	l1846
 11234  0015BA                     l1841:
 11235                           
 11236                           ;usb_device.c: 2939: else
 11237                           ;usb_device.c: 2940: {
 11238                           ;usb_device.c: 2942: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 11239  0015BA  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11240  0015BE  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11241  0015C2  0E3B               	movlw	59
 11242  0015C4  16DF               	andwf	indf2,f,c
 11243  0015C6                     l1846:
 11244                           
 11245                           ;usb_device.c: 2943: }
 11246                           ;usb_device.c: 2990: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
 11247  0015C6  0104               	movlb	4	; () banked
 11248  0015C8  5134               	movf	52,w,b	;volatile
 11249  0015CA  0B0F               	andlw	15
 11250  0015CC  0100               	movlb	0	; () banked
 11251  0015CE  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11252  0015D0  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11253  0015D2  0D01               	mullw	1
 11254  0015D4  0E26               	movlw	38
 11255  0015D6  24F3               	addwf	prodl,w,c
 11256  0015D8  6F92               	movwf	USBStdFeatureReqHandler@pUEP& (0+255),b
 11257  0015DA  0E0F               	movlw	15
 11258  0015DC  20F4               	addwfc	prodh,w,c
 11259  0015DE  6F93               	movwf	(USBStdFeatureReqHandler@pUEP+1)& (0+255),b
 11260                           
 11261                           ; BSR set to: 0
 11262                           ;usb_device.c: 2994: *pUEP &= ~0x0001;
 11263  0015E0  C092  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 11264  0015E4  C093  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 11265  0015E8  0EFE               	movlw	254
 11266  0015EA  16DF               	andwf	indf2,f,c
 11267                           
 11268                           ; BSR set to: 0
 11269  0015EC  0012               	return	
 11270  0015EE                     __end_of_USBStdFeatureReqHandler:
 11271                           	opt stack 0
 11272                           tosu	equ	0xFFF
 11273                           tosh	equ	0xFFE
 11274                           tosl	equ	0xFFD
 11275                           pclath	equ	0xFFA
 11276                           tblptru	equ	0xFF8
 11277                           tblptrh	equ	0xFF7
 11278                           tblptrl	equ	0xFF6
 11279                           tablat	equ	0xFF5
 11280                           prodh	equ	0xFF4
 11281                           prodl	equ	0xFF3
 11282                           intcon	equ	0xFF2
 11283                           intcon2	equ	0xFF1
 11284                           intcon3	equ	0xFF0
 11285                           indf0	equ	0xFEF
 11286                           postinc0	equ	0xFEE
 11287                           plusw0	equ	0xFEB
 11288                           fsr0h	equ	0xFEA
 11289                           fsr0l	equ	0xFE9
 11290                           wreg	equ	0xFE8
 11291                           postinc1	equ	0xFE6
 11292                           postdec1	equ	0xFE5
 11293                           fsr1h	equ	0xFE2
 11294                           fsr1l	equ	0xFE1
 11295                           indf2	equ	0xFDF
 11296                           postinc2	equ	0xFDE
 11297                           postdec2	equ	0xFDD
 11298                           plusw2	equ	0xFDB
 11299                           fsr2h	equ	0xFDA
 11300                           fsr2l	equ	0xFD9
 11301                           status	equ	0xFD8
 11302                           
 11303 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 11304 ;; Defined at:
 11305 ;;		line 104 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_mgr.c"
 11306 ;; Parameters:    Size  Location     Type
 11307 ;;  event           2   41[BANK0 ] enum E8366
 11308 ;;  pdata           2   43[BANK0 ] PTR void 
 11309 ;;		 -> USTATcopy(1), USBActiveConfiguration(1), NULL(0), BDT(48), 
 11310 ;;  size            2   45[BANK0 ] unsigned int 
 11311 ;; Auto vars:     Size  Location     Type
 11312 ;;		None
 11313 ;; Return value:  Size  Location     Type
 11314 ;;                  1    wreg      unsigned char 
 11315 ;; Registers used:
 11316 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11317 ;; Tracked objects:
 11318 ;;		On entry : 0/0
 11319 ;;		On exit  : 0/0
 11320 ;;		Unchanged: 0/0
 11321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11322 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11323 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11324 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11325 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11326 ;;Total ram usage:        8 bytes
 11327 ;; Hardware stack levels used:    1
 11328 ;; Hardware stack levels required when called:   14
 11329 ;; This function calls:
 11330 ;;		_CDCInitEP
 11331 ;;		_USBCheckCDCRequest
 11332 ;; This function is called by:
 11333 ;;		_USBDeviceTasks
 11334 ;;		_USBStdSetCfgHandler
 11335 ;;		_USBSuspend
 11336 ;;		_USBWakeFromSuspend
 11337 ;;		_USBCtrlTrfSetupHandler
 11338 ;;		_USBCheckStdRequest
 11339 ;;		_USBStdFeatureReqHandler
 11340 ;; This function uses a non-reentrant model
 11341 ;;
 11342                           
 11343                           	psect	text44
 11344  00580A                     __ptext44:
 11345                           	opt stack 0
 11346  00580A                     _USER_USB_CALLBACK_EVENT_HANDLER:
 11347                           	opt stack 12
 11348                           
 11349                           ;usb_device_mgr.c: 106: switch( (int) event )
 11350                           
 11351                           ;incstack = 0
 11352  00580A  D006               	goto	l2000
 11353  00580C                     
 11354                           ;usb_device_mgr.c: 134: CDCInitEP();
 11355  00580C  EC65  F02A         	call	_CDCInitEP	;wreg free
 11356                           
 11357                           ;usb_device_mgr.c: 142: break;
 11358                           
 11359                           ;usb_device_mgr.c: 141: case EVENT_SET_DESCRIPTOR:
 11360                           
 11361                           ;usb_device_mgr.c: 139: break;
 11362  005810  0012               	return	
 11363  005812                     
 11364                           ;usb_device_mgr.c: 148: USBCheckCDCRequest();
 11365  005812  EC10  F022         	call	_USBCheckCDCRequest	;wreg free
 11366                           
 11367                           ;usb_device_mgr.c: 163: }
 11368                           
 11369                           ;usb_device_mgr.c: 162: break;
 11370                           
 11371                           ;usb_device_mgr.c: 161: default:
 11372                           
 11373                           ;usb_device_mgr.c: 159: break;
 11374                           
 11375                           ;usb_device_mgr.c: 158: case EVENT_TRANSFER_TERMINATED:
 11376                           
 11377                           ;usb_device_mgr.c: 156: break;
 11378                           
 11379                           ;usb_device_mgr.c: 155: case EVENT_BUS_ERROR:
 11380                           
 11381                           ;usb_device_mgr.c: 153: break;
 11382  005816  0012               	return	
 11383  005818                     l2000:
 11384  005818  C089  F08F         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 11385  00581C  C08A  F090         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 11386                           
 11387                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 11388                           ; Switch size 1, requested type "space"
 11389                           ; Number of cases is 2, Range of values is 0 to 127
 11390                           ; switch strategies available:
 11391                           ; Name         Instructions Cycles
 11392                           ; simple_byte            7     4 (average)
 11393                           ;	Chosen strategy is simple_byte
 11394  005820  0100               	movlb	0	; () banked
 11395  005822  5190               	movf	(??_USER_USB_CALLBACK_EVENT_HANDLER+1)& (0+255),w,b
 11396  005824  0A00               	xorlw	0	; case 0
 11397  005826  B4D8               	btfsc	status,2,c
 11398  005828  D004               	goto	l16898
 11399  00582A  0A7F               	xorlw	127	; case 127
 11400  00582C  A4D8               	btfss	status,2,c
 11401  00582E  0012               	return	
 11402  005830  D018               	goto	l16900
 11403  005832                     l16898:
 11404                           
 11405                           ; BSR set to: 0
 11406                           ; Switch size 1, requested type "space"
 11407                           ; Number of cases is 8, Range of values is 1 to 117
 11408                           ; switch strategies available:
 11409                           ; Name         Instructions Cycles
 11410                           ; simple_byte           25    13 (average)
 11411                           ;	Chosen strategy is simple_byte
 11412  005832  518F               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER& (0+255),w,b
 11413  005834  0A01               	xorlw	1	; case 1
 11414  005836  B4D8               	btfsc	status,2,c
 11415  005838  D7E9               	goto	l2006
 11416  00583A  0A03               	xorlw	3	; case 2
 11417  00583C  B4D8               	btfsc	status,2,c
 11418  00583E  0012               	return	
 11419  005840  0A01               	xorlw	1	; case 3
 11420  005842  B4D8               	btfsc	status,2,c
 11421  005844  D7E6               	goto	l2008
 11422  005846  0A06               	xorlw	6	; case 5
 11423  005848  B4D8               	btfsc	status,2,c
 11424  00584A  0012               	return	
 11425  00584C  0A77               	xorlw	119	; case 114
 11426  00584E  B4D8               	btfsc	status,2,c
 11427  005850  0012               	return	
 11428  005852  0A01               	xorlw	1	; case 115
 11429  005854  B4D8               	btfsc	status,2,c
 11430  005856  0012               	return	
 11431  005858  0A07               	xorlw	7	; case 116
 11432  00585A  B4D8               	btfsc	status,2,c
 11433  00585C  0012               	return	
 11434  00585E  0A01               	xorlw	1	; case 117
 11435  005860  0012               	return	
 11436  005862                     l16900:
 11437                           
 11438                           ; BSR set to: 0
 11439                           ; Switch size 1, requested type "space"
 11440                           ; Number of cases is 1, Range of values is 255 to 255
 11441                           ; switch strategies available:
 11442                           ; Name         Instructions Cycles
 11443                           ; simple_byte            4     3 (average)
 11444                           ;	Chosen strategy is simple_byte
 11445  005862  518F               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER& (0+255),w,b
 11446  005864  0AFF               	xorlw	255	; case 255
 11447  005866  0012               	return	
 11448  005868                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 11449                           	opt stack 0
 11450                           tosu	equ	0xFFF
 11451                           tosh	equ	0xFFE
 11452                           tosl	equ	0xFFD
 11453                           pclath	equ	0xFFA
 11454                           tblptru	equ	0xFF8
 11455                           tblptrh	equ	0xFF7
 11456                           tblptrl	equ	0xFF6
 11457                           tablat	equ	0xFF5
 11458                           prodh	equ	0xFF4
 11459                           prodl	equ	0xFF3
 11460                           intcon	equ	0xFF2
 11461                           intcon2	equ	0xFF1
 11462                           intcon3	equ	0xFF0
 11463                           indf0	equ	0xFEF
 11464                           postinc0	equ	0xFEE
 11465                           plusw0	equ	0xFEB
 11466                           fsr0h	equ	0xFEA
 11467                           fsr0l	equ	0xFE9
 11468                           wreg	equ	0xFE8
 11469                           postinc1	equ	0xFE6
 11470                           postdec1	equ	0xFE5
 11471                           fsr1h	equ	0xFE2
 11472                           fsr1l	equ	0xFE1
 11473                           indf2	equ	0xFDF
 11474                           postinc2	equ	0xFDE
 11475                           postdec2	equ	0xFDD
 11476                           plusw2	equ	0xFDB
 11477                           fsr2h	equ	0xFDA
 11478                           fsr2l	equ	0xFD9
 11479                           status	equ	0xFD8
 11480                           
 11481 ;; *************** function _USBCheckCDCRequest *****************
 11482 ;; Defined at:
 11483 ;;		line 150 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 11484 ;; Parameters:    Size  Location     Type
 11485 ;;		None
 11486 ;; Auto vars:     Size  Location     Type
 11487 ;;		None
 11488 ;; Return value:  Size  Location     Type
 11489 ;;                  1    wreg      void 
 11490 ;; Registers used:
 11491 ;;		wreg, status,2, status,0
 11492 ;; Tracked objects:
 11493 ;;		On entry : 0/0
 11494 ;;		On exit  : 0/0
 11495 ;;		Unchanged: 0/0
 11496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11497 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11498 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11499 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11500 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11501 ;;Total ram usage:        0 bytes
 11502 ;; Hardware stack levels used:    1
 11503 ;; Hardware stack levels required when called:   11
 11504 ;; This function calls:
 11505 ;;		Nothing
 11506 ;; This function is called by:
 11507 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 11508 ;; This function uses a non-reentrant model
 11509 ;;
 11510                           
 11511                           	psect	text45
 11512  004420                     __ptext45:
 11513                           	opt stack 0
 11514  004420                     _USBCheckCDCRequest:
 11515                           	opt stack 14
 11516                           
 11517                           ;usb_device_cdc.c: 155: if(SetupPkt.Recipient != (0x01)) return;
 11518                           
 11519                           ;incstack = 0
 11520  004420  0104               	movlb	4	; () banked
 11521  004422  5130               	movf	48,w,b	;volatile
 11522  004424  0B1F               	andlw	31
 11523  004426  06E8               	decf	wreg,f,c
 11524  004428  A4D8               	btfss	status,2,c
 11525  00442A  0012               	return	
 11526                           
 11527                           ; BSR set to: 4
 11528                           ;usb_device_cdc.c: 160: if(SetupPkt.RequestType != (0x20>>5)) return;
 11529                           
 11530                           ; BSR set to: 4
 11531                           
 11532                           ; BSR set to: 4
 11533  00442C  3930               	swapf	48,w,b	;volatile
 11534  00442E  32E8               	rrcf	wreg,f,c
 11535  004430  0B03               	andlw	3
 11536  004432  06E8               	decf	wreg,f,c
 11537  004434  A4D8               	btfss	status,2,c
 11538  004436  0012               	return	
 11539                           
 11540                           ; BSR set to: 4
 11541                           ;usb_device_cdc.c: 166: if((SetupPkt.bIntfID != 0x0)&&
 11542                           ;usb_device_cdc.c: 167: (SetupPkt.bIntfID != 0x01)) return;
 11543                           
 11544                           ; BSR set to: 4
 11545                           
 11546                           ; BSR set to: 4
 11547  004438  5134               	movf	52,w,b	;volatile
 11548  00443A  B4D8               	btfsc	status,2,c
 11549  00443C  D037               	goto	l1902
 11550                           
 11551                           ; BSR set to: 4
 11552  00443E  0534               	decf	52,w,b	;volatile
 11553  004440  A4D8               	btfss	status,2,c
 11554  004442  0012               	return	
 11555  004444  D033               	goto	l1902
 11556  004446                     
 11557                           ; BSR set to: 4
 11558                           ;usb_device_cdc.c: 174: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 11559                           
 11560                           ; BSR set to: 4
 11561  004446  0E7B               	movlw	low _dummy_encapsulated_cmd_response
 11562  004448  0100               	movlb	0	; () banked
 11563  00444A  6FB0               	movwf	_inPipes& (0+255),b
 11564  00444C  0E03               	movlw	high _dummy_encapsulated_cmd_response
 11565  00444E  6FB1               	movwf	(_inPipes+1)& (0+255),b
 11566                           
 11567                           ; BSR set to: 0
 11568                           ;usb_device_cdc.c: 175: inPipes[0].wCount.Val = 0x08;
 11569  004450  0E00               	movlw	0
 11570  004452  6FB5               	movwf	(_inPipes+5)& (0+255),b
 11571  004454  0E08               	movlw	8
 11572  004456  6FB4               	movwf	(_inPipes+4)& (0+255),b
 11573                           
 11574                           ; BSR set to: 0
 11575                           ;usb_device_cdc.c: 176: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 11576  004458  81B3               	bsf	(_inPipes+3)& (0+255),0,b
 11577                           
 11578                           ; BSR set to: 0
 11579                           ;usb_device_cdc.c: 177: inPipes[0].info.bits.busy = 1;
 11580  00445A  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 11581                           
 11582                           ;usb_device_cdc.c: 178: break;
 11583  00445C  0012               	return	
 11584  00445E                     
 11585                           ;usb_device_cdc.c: 181: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 11586                           
 11587                           ; BSR set to: 0
 11588  00445E  0E7B               	movlw	low _dummy_encapsulated_cmd_response
 11589  004460  0100               	movlb	0	; () banked
 11590  004462  6FB0               	movwf	_inPipes& (0+255),b
 11591  004464  0E03               	movlw	high _dummy_encapsulated_cmd_response
 11592  004466  6FB1               	movwf	(_inPipes+1)& (0+255),b
 11593                           
 11594                           ; BSR set to: 0
 11595                           ;usb_device_cdc.c: 182: inPipes[0].info.bits.busy = 1;
 11596  004468  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 11597                           
 11598                           ;usb_device_cdc.c: 183: break;
 11599  00446A  0012               	return	
 11600  00446C                     l1906:
 11601                           
 11602                           ; BSR set to: 4
 11603                           ;usb_device_cdc.c: 188: outPipes[0].wCount.Val = SetupPkt.wLength;
 11604  00446C  C436 F1CD          	movff	1078,_outPipes+4	;volatile
 11605  004470  C437 F1CE          	movff	1079,_outPipes+5	;volatile
 11606                           
 11607                           ; BSR set to: 4
 11608                           ;usb_device_cdc.c: 189: outPipes[0].pDst.bRam = (uint8_t*)&line_coding._byte[0];
 11609  004474  0E83               	movlw	low _line_coding
 11610  004476  0101               	movlb	1	; () banked
 11611  004478  6FC9               	movwf	_outPipes& (0+255),b
 11612  00447A  0E03               	movlw	high _line_coding
 11613  00447C  6FCA               	movwf	(_outPipes+1)& (0+255),b
 11614                           
 11615                           ;usb_device_cdc.c: 190: outPipes[0].pFunc = (0);
 11616  00447E  0E00               	movlw	0
 11617  004480  6FCF               	movwf	(_outPipes+6)& (0+255),b
 11618  004482  0E00               	movlw	0
 11619  004484  6FD0               	movwf	(_outPipes+7)& (0+255),b
 11620                           
 11621                           ; BSR set to: 1
 11622                           ;usb_device_cdc.c: 191: outPipes[0].info.bits.busy = 1;
 11623  004486  8FCC               	bsf	(_outPipes+3)& (0+255),7,b
 11624                           
 11625                           ;usb_device_cdc.c: 192: break;
 11626  004488  0012               	return	
 11627  00448A                     
 11628                           ;usb_device_cdc.c: 195: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 11629                           
 11630                           ; BSR set to: 1
 11631  00448A  0E83               	movlw	low _line_coding
 11632  00448C  0100               	movlb	0	; () banked
 11633  00448E  6FB0               	movwf	_inPipes& (0+255),b
 11634  004490  0E03               	movlw	high _line_coding
 11635  004492  6FB1               	movwf	(_inPipes+1)& (0+255),b
 11636                           
 11637                           ; BSR set to: 0
 11638  004494  0E00               	movlw	0
 11639  004496  6FB5               	movwf	(_inPipes+5)& (0+255),b
 11640  004498  0E07               	movlw	7
 11641  00449A  6FB4               	movwf	(_inPipes+4)& (0+255),b
 11642                           
 11643                           ; BSR set to: 0
 11644  00449C  0EC1               	movlw	193
 11645  00449E  6FB3               	movwf	(_inPipes+3)& (0+255),b
 11646                           
 11647                           ;usb_device_cdc.c: 199: break;
 11648  0044A0  0012               	return	
 11649  0044A2                     l1908:
 11650                           
 11651                           ; BSR set to: 4
 11652                           ;usb_device_cdc.c: 202: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
 11653  0044A2  C432 F1DC          	movff	1074,_control_signal_bitmap	;volatile
 11654                           
 11655                           ;usb_device_cdc.c: 234: inPipes[0].info.bits.busy = 1;
 11656  0044A6  0100               	movlb	0	; () banked
 11657  0044A8  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 11658                           
 11659                           ; BSR set to: 0
 11660                           ;usb_device_cdc.c: 261: }
 11661                           
 11662                           ; BSR set to: 0
 11663                           ;usb_device_cdc.c: 260: break;
 11664                           
 11665                           ;usb_device_cdc.c: 259: default:
 11666                           
 11667                           ;usb_device_cdc.c: 235: break;
 11668  0044AA  0012               	return	
 11669  0044AC                     l1902:
 11670                           
 11671                           ; BSR set to: 0
 11672  0044AC  0104               	movlb	4	; () banked
 11673  0044AE  5131               	movf	49,w,b	;volatile
 11674                           
 11675                           ; Switch size 1, requested type "space"
 11676                           ; Number of cases is 5, Range of values is 0 to 34
 11677                           ; switch strategies available:
 11678                           ; Name         Instructions Cycles
 11679                           ; simple_byte           16     9 (average)
 11680                           ;	Chosen strategy is simple_byte
 11681  0044B0  0A00               	xorlw	0	; case 0
 11682  0044B2  B4D8               	btfsc	status,2,c
 11683  0044B4  D7C8               	goto	l1903
 11684  0044B6  0A01               	xorlw	1	; case 1
 11685  0044B8  B4D8               	btfsc	status,2,c
 11686  0044BA  D7D1               	goto	l1905
 11687  0044BC  0A21               	xorlw	33	; case 32
 11688  0044BE  B4D8               	btfsc	status,2,c
 11689  0044C0  D7D5               	goto	l1906
 11690  0044C2  0A01               	xorlw	1	; case 33
 11691  0044C4  B4D8               	btfsc	status,2,c
 11692  0044C6  D7E1               	goto	l1907
 11693  0044C8  0A03               	xorlw	3	; case 34
 11694  0044CA  A4D8               	btfss	status,2,c
 11695  0044CC  0012               	return	
 11696  0044CE  D7E9               	goto	l1908
 11697  0044D0                     __end_of_USBCheckCDCRequest:
 11698                           	opt stack 0
 11699                           tosu	equ	0xFFF
 11700                           tosh	equ	0xFFE
 11701                           tosl	equ	0xFFD
 11702                           pclath	equ	0xFFA
 11703                           tblptru	equ	0xFF8
 11704                           tblptrh	equ	0xFF7
 11705                           tblptrl	equ	0xFF6
 11706                           tablat	equ	0xFF5
 11707                           prodh	equ	0xFF4
 11708                           prodl	equ	0xFF3
 11709                           intcon	equ	0xFF2
 11710                           intcon2	equ	0xFF1
 11711                           intcon3	equ	0xFF0
 11712                           indf0	equ	0xFEF
 11713                           postinc0	equ	0xFEE
 11714                           plusw0	equ	0xFEB
 11715                           fsr0h	equ	0xFEA
 11716                           fsr0l	equ	0xFE9
 11717                           wreg	equ	0xFE8
 11718                           postinc1	equ	0xFE6
 11719                           postdec1	equ	0xFE5
 11720                           fsr1h	equ	0xFE2
 11721                           fsr1l	equ	0xFE1
 11722                           indf2	equ	0xFDF
 11723                           postinc2	equ	0xFDE
 11724                           postdec2	equ	0xFDD
 11725                           plusw2	equ	0xFDB
 11726                           fsr2h	equ	0xFDA
 11727                           fsr2l	equ	0xFD9
 11728                           status	equ	0xFD8
 11729                           
 11730 ;; *************** function _CDCInitEP *****************
 11731 ;; Defined at:
 11732 ;;		line 297 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 11733 ;; Parameters:    Size  Location     Type
 11734 ;;		None
 11735 ;; Auto vars:     Size  Location     Type
 11736 ;;		None
 11737 ;; Return value:  Size  Location     Type
 11738 ;;                  1    wreg      void 
 11739 ;; Registers used:
 11740 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11741 ;; Tracked objects:
 11742 ;;		On entry : 0/0
 11743 ;;		On exit  : 0/0
 11744 ;;		Unchanged: 0/0
 11745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11746 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11747 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11748 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11749 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11750 ;;Total ram usage:        0 bytes
 11751 ;; Hardware stack levels used:    1
 11752 ;; Hardware stack levels required when called:   13
 11753 ;; This function calls:
 11754 ;;		_USBEnableEndpoint
 11755 ;;		_USBTransferOnePacket
 11756 ;; This function is called by:
 11757 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 11758 ;; This function uses a non-reentrant model
 11759 ;;
 11760                           
 11761                           	psect	text46
 11762  0054CA                     __ptext46:
 11763                           	opt stack 0
 11764  0054CA                     _CDCInitEP:
 11765                           	opt stack 12
 11766                           
 11767                           ;usb_device_cdc.c: 300: line_coding.dwDTERate = 9600;
 11768                           
 11769                           ;incstack = 0
 11770  0054CA  0E80               	movlw	128
 11771  0054CC  0103               	movlb	3	; () banked
 11772  0054CE  6F83               	movwf	_line_coding& (0+255),b
 11773  0054D0  0E25               	movlw	37
 11774  0054D2  6F84               	movwf	(_line_coding+1)& (0+255),b
 11775  0054D4  0E00               	movlw	0
 11776  0054D6  6F85               	movwf	(_line_coding+2)& (0+255),b
 11777  0054D8  0E00               	movlw	0
 11778  0054DA  6F86               	movwf	(_line_coding+3)& (0+255),b
 11779                           
 11780                           ;usb_device_cdc.c: 301: line_coding.bCharFormat = 0x00;
 11781  0054DC  0E00               	movlw	0
 11782  0054DE  6F87               	movwf	(_line_coding+4)& (0+255),b
 11783                           
 11784                           ;usb_device_cdc.c: 302: line_coding.bParityType = 0x00;
 11785  0054E0  0E00               	movlw	0
 11786  0054E2  6F88               	movwf	(_line_coding+5)& (0+255),b
 11787                           
 11788                           ;usb_device_cdc.c: 303: line_coding.bDataBits = 0x08;
 11789  0054E4  0E08               	movlw	8
 11790  0054E6  6F89               	movwf	(_line_coding+6)& (0+255),b
 11791                           
 11792                           ;usb_device_cdc.c: 305: cdc_rx_len = 0;
 11793  0054E8  0E00               	movlw	0
 11794  0054EA  0100               	movlb	0	; () banked
 11795  0054EC  6FC9               	movwf	_cdc_rx_len& (0+255),b
 11796                           
 11797                           ; BSR set to: 0
 11798                           ;usb_device_cdc.c: 318: USBEnableEndpoint(1,0x02|0x10|0x08);
 11799  0054EE  0E1A               	movlw	26
 11800  0054F0  6F85               	movwf	USBEnableEndpoint@options& (0+255),b
 11801  0054F2  0E01               	movlw	1
 11802  0054F4  EC32  F030         	call	_USBEnableEndpoint
 11803                           
 11804                           ;usb_device_cdc.c: 319: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
 11805  0054F8  0E1E               	movlw	30
 11806  0054FA  0100               	movlb	0	; () banked
 11807  0054FC  6F85               	movwf	USBEnableEndpoint@options& (0+255),b
 11808  0054FE  0E02               	movlw	2
 11809  005500  EC32  F030         	call	_USBEnableEndpoint
 11810                           
 11811                           ;usb_device_cdc.c: 321: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 11812  005504  0E00               	movlw	0
 11813  005506  0100               	movlb	0	; () banked
 11814  005508  6F7D               	movwf	USBTransferOnePacket@dir& (0+255),b
 11815  00550A  0E00               	movlw	low _cdc_data_rx
 11816  00550C  6F7E               	movwf	USBTransferOnePacket@data& (0+255),b
 11817  00550E  0E05               	movlw	high _cdc_data_rx
 11818  005510  6F7F               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 11819  005512  0E40               	movlw	64
 11820  005514  6F80               	movwf	USBTransferOnePacket@len& (0+255),b
 11821  005516  0E02               	movlw	2
 11822  005518  ECFB  F020         	call	_USBTransferOnePacket
 11823  00551C  C07D  F0BC         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
 11824  005520  C07E  F0BD         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
 11825                           
 11826                           ;usb_device_cdc.c: 322: CDCDataInHandle = (0);
 11827  005524  0E00               	movlw	0
 11828  005526  0101               	movlb	1	; () banked
 11829  005528  6FD1               	movwf	_CDCDataInHandle& (0+255),b
 11830  00552A  0E00               	movlw	0
 11831  00552C  6FD2               	movwf	(_CDCDataInHandle+1)& (0+255),b
 11832                           
 11833                           ; BSR set to: 1
 11834                           ;usb_device_cdc.c: 349: cdc_trf_state = 0;
 11835  00552E  0E00               	movlw	0
 11836  005530  0100               	movlb	0	; () banked
 11837  005532  6FC8               	movwf	_cdc_trf_state& (0+255),b
 11838                           
 11839                           ; BSR set to: 0
 11840  005534  0012               	return		;funcret
 11841  005536                     __end_of_CDCInitEP:
 11842                           	opt stack 0
 11843                           tosu	equ	0xFFF
 11844                           tosh	equ	0xFFE
 11845                           tosl	equ	0xFFD
 11846                           pclath	equ	0xFFA
 11847                           tblptru	equ	0xFF8
 11848                           tblptrh	equ	0xFF7
 11849                           tblptrl	equ	0xFF6
 11850                           tablat	equ	0xFF5
 11851                           prodh	equ	0xFF4
 11852                           prodl	equ	0xFF3
 11853                           intcon	equ	0xFF2
 11854                           intcon2	equ	0xFF1
 11855                           intcon3	equ	0xFF0
 11856                           indf0	equ	0xFEF
 11857                           postinc0	equ	0xFEE
 11858                           plusw0	equ	0xFEB
 11859                           fsr0h	equ	0xFEA
 11860                           fsr0l	equ	0xFE9
 11861                           wreg	equ	0xFE8
 11862                           postinc1	equ	0xFE6
 11863                           postdec1	equ	0xFE5
 11864                           fsr1h	equ	0xFE2
 11865                           fsr1l	equ	0xFE1
 11866                           indf2	equ	0xFDF
 11867                           postinc2	equ	0xFDE
 11868                           postdec2	equ	0xFDD
 11869                           plusw2	equ	0xFDB
 11870                           fsr2h	equ	0xFDA
 11871                           fsr2l	equ	0xFD9
 11872                           status	equ	0xFD8
 11873                           
 11874 ;; *************** function _USBEnableEndpoint *****************
 11875 ;; Defined at:
 11876 ;;		line 896 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 11877 ;; Parameters:    Size  Location     Type
 11878 ;;  ep              1    wreg     unsigned char 
 11879 ;;  options         1   37[BANK0 ] unsigned char 
 11880 ;; Auto vars:     Size  Location     Type
 11881 ;;  ep              1   40[BANK0 ] unsigned char 
 11882 ;;  p               2   38[BANK0 ] PTR unsigned char 
 11883 ;;		 -> UEP0(1), 
 11884 ;; Return value:  Size  Location     Type
 11885 ;;                  1    wreg      void 
 11886 ;; Registers used:
 11887 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11888 ;; Tracked objects:
 11889 ;;		On entry : 0/0
 11890 ;;		On exit  : 0/0
 11891 ;;		Unchanged: 0/0
 11892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11893 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11894 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11895 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11896 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11897 ;;Total ram usage:        4 bytes
 11898 ;; Hardware stack levels used:    1
 11899 ;; Hardware stack levels required when called:   12
 11900 ;; This function calls:
 11901 ;;		_USBConfigureEndpoint
 11902 ;; This function is called by:
 11903 ;;		_CDCInitEP
 11904 ;; This function uses a non-reentrant model
 11905 ;;
 11906                           
 11907                           	psect	text47
 11908  006064                     __ptext47:
 11909                           	opt stack 0
 11910  006064                     _USBEnableEndpoint:
 11911                           	opt stack 12
 11912                           
 11913                           ; BSR set to: 0
 11914                           ;incstack = 0
 11915                           ;USBEnableEndpoint@ep stored from wreg
 11916  006064  0100               	movlb	0	; () banked
 11917  006066  6F88               	movwf	USBEnableEndpoint@ep& (0+255),b
 11918                           
 11919                           ;usb_device.c: 898: unsigned char* p;
 11920                           ;usb_device.c: 902: if(options & 0x04)
 11921  006068  0100               	movlb	0	; () banked
 11922  00606A  A585               	btfss	USBEnableEndpoint@options& (0+255),2,b
 11923  00606C  D005               	goto	l1643
 11924                           
 11925                           ; BSR set to: 0
 11926                           ;usb_device.c: 903: {
 11927                           ;usb_device.c: 904: USBConfigureEndpoint(ep, 0);
 11928  00606E  0E00               	movlw	0
 11929  006070  6F7D               	movwf	USBConfigureEndpoint@direction& (0+255),b
 11930  006072  5188               	movf	USBEnableEndpoint@ep& (0+255),w,b
 11931  006074  EC4D  F025         	call	_USBConfigureEndpoint
 11932  006078                     l1643:
 11933                           
 11934                           ;usb_device.c: 905: }
 11935                           ;usb_device.c: 906: if(options & 0x02)
 11936  006078  0100               	movlb	0	; () banked
 11937  00607A  A385               	btfss	USBEnableEndpoint@options& (0+255),1,b
 11938  00607C  D005               	goto	l1644
 11939                           
 11940                           ; BSR set to: 0
 11941                           ;usb_device.c: 907: {
 11942                           ;usb_device.c: 908: USBConfigureEndpoint(ep, 1);
 11943  00607E  0E01               	movlw	1
 11944  006080  6F7D               	movwf	USBConfigureEndpoint@direction& (0+255),b
 11945  006082  5188               	movf	USBEnableEndpoint@ep& (0+255),w,b
 11946  006084  EC4D  F025         	call	_USBConfigureEndpoint
 11947  006088                     l1644:
 11948                           
 11949                           ;usb_device.c: 909: }
 11950                           ;usb_device.c: 917: p = (unsigned char*)(&UEP0+ep);
 11951  006088  0100               	movlb	0	; () banked
 11952  00608A  5188               	movf	USBEnableEndpoint@ep& (0+255),w,b
 11953  00608C  0D01               	mullw	1
 11954  00608E  0E26               	movlw	38
 11955  006090  24F3               	addwf	prodl,w,c
 11956  006092  6F86               	movwf	USBEnableEndpoint@p& (0+255),b
 11957  006094  0E0F               	movlw	15
 11958  006096  20F4               	addwfc	prodh,w,c
 11959  006098  6F87               	movwf	(USBEnableEndpoint@p+1)& (0+255),b
 11960                           
 11961                           ; BSR set to: 0
 11962                           ;usb_device.c: 919: *p = options;
 11963  00609A  C086  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 11964  00609E  C087  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 11965  0060A2  C085  FFDF         	movff	USBEnableEndpoint@options,indf2
 11966                           
 11967                           ; BSR set to: 0
 11968  0060A6  0012               	return		;funcret
 11969  0060A8                     __end_of_USBEnableEndpoint:
 11970                           	opt stack 0
 11971                           tosu	equ	0xFFF
 11972                           tosh	equ	0xFFE
 11973                           tosl	equ	0xFFD
 11974                           pclath	equ	0xFFA
 11975                           tblptru	equ	0xFF8
 11976                           tblptrh	equ	0xFF7
 11977                           tblptrl	equ	0xFF6
 11978                           tablat	equ	0xFF5
 11979                           prodh	equ	0xFF4
 11980                           prodl	equ	0xFF3
 11981                           intcon	equ	0xFF2
 11982                           intcon2	equ	0xFF1
 11983                           intcon3	equ	0xFF0
 11984                           indf0	equ	0xFEF
 11985                           postinc0	equ	0xFEE
 11986                           plusw0	equ	0xFEB
 11987                           fsr0h	equ	0xFEA
 11988                           fsr0l	equ	0xFE9
 11989                           wreg	equ	0xFE8
 11990                           postinc1	equ	0xFE6
 11991                           postdec1	equ	0xFE5
 11992                           fsr1h	equ	0xFE2
 11993                           fsr1l	equ	0xFE1
 11994                           indf2	equ	0xFDF
 11995                           postinc2	equ	0xFDE
 11996                           postdec2	equ	0xFDD
 11997                           plusw2	equ	0xFDB
 11998                           fsr2h	equ	0xFDA
 11999                           fsr2l	equ	0xFD9
 12000                           status	equ	0xFD8
 12001                           
 12002 ;; *************** function _USBConfigureEndpoint *****************
 12003 ;; Defined at:
 12004 ;;		line 1561 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 12005 ;; Parameters:    Size  Location     Type
 12006 ;;  EPNum           1    wreg     unsigned char 
 12007 ;;  direction       1   29[BANK0 ] unsigned char 
 12008 ;; Auto vars:     Size  Location     Type
 12009 ;;  EPNum           1   34[BANK0 ] unsigned char 
 12010 ;;  handle          2   35[BANK0 ] PTR volatile struct __BD
 12011 ;;		 -> BDT(48), 
 12012 ;; Return value:  Size  Location     Type
 12013 ;;                  1    wreg      void 
 12014 ;; Registers used:
 12015 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 12016 ;; Tracked objects:
 12017 ;;		On entry : 0/0
 12018 ;;		On exit  : 0/0
 12019 ;;		Unchanged: 0/0
 12020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12021 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12022 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12023 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12024 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12025 ;;Total ram usage:        8 bytes
 12026 ;; Hardware stack levels used:    1
 12027 ;; Hardware stack levels required when called:   11
 12028 ;; This function calls:
 12029 ;;		Nothing
 12030 ;; This function is called by:
 12031 ;;		_USBEnableEndpoint
 12032 ;; This function uses a non-reentrant model
 12033 ;;
 12034                           
 12035                           	psect	text48
 12036  004A9A                     __ptext48:
 12037                           	opt stack 0
 12038  004A9A                     _USBConfigureEndpoint:
 12039                           	opt stack 12
 12040                           
 12041                           ; BSR set to: 0
 12042                           ;incstack = 0
 12043                           ;USBConfigureEndpoint@EPNum stored from wreg
 12044  004A9A  0100               	movlb	0	; () banked
 12045  004A9C  6F82               	movwf	USBConfigureEndpoint@EPNum& (0+255),b
 12046                           
 12047                           ;usb_device.c: 1563: volatile BDT_ENTRY* handle;
 12048                           ;usb_device.c: 1567: handle = (volatile BDT_ENTRY*)&BDT[0];
 12049  004A9E  0E00               	movlw	0
 12050  004AA0  0100               	movlb	0	; () banked
 12051  004AA2  6F83               	movwf	USBConfigureEndpoint@handle& (0+255),b
 12052  004AA4  0E04               	movlw	4
 12053  004AA6  6F84               	movwf	(USBConfigureEndpoint@handle+1)& (0+255),b
 12054                           
 12055                           ; BSR set to: 0
 12056                           ;usb_device.c: 1568: handle += (4*EPNum+2*direction+0u);
 12057  004AA8  517D               	movf	USBConfigureEndpoint@direction& (0+255),w,b
 12058  004AAA  6F7E               	movwf	??_USBConfigureEndpoint& (0+255),b
 12059  004AAC  6B7F               	clrf	(??_USBConfigureEndpoint+1)& (0+255),b
 12060  004AAE  90D8               	bcf	status,0,c
 12061  004AB0  377E               	rlcf	??_USBConfigureEndpoint& (0+255),f,b
 12062  004AB2  377F               	rlcf	(??_USBConfigureEndpoint+1)& (0+255),f,b
 12063  004AB4  5182               	movf	USBConfigureEndpoint@EPNum& (0+255),w,b
 12064  004AB6  6F80               	movwf	(??_USBConfigureEndpoint+2)& (0+255),b
 12065  004AB8  6B81               	clrf	(??_USBConfigureEndpoint+3)& (0+255),b
 12066  004ABA  90D8               	bcf	status,0,c
 12067  004ABC  3780               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 12068  004ABE  3781               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 12069  004AC0  90D8               	bcf	status,0,c
 12070  004AC2  3780               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 12071  004AC4  3781               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 12072  004AC6  517E               	movf	??_USBConfigureEndpoint& (0+255),w,b
 12073  004AC8  2780               	addwf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 12074  004ACA  517F               	movf	(??_USBConfigureEndpoint+1)& (0+255),w,b
 12075  004ACC  2381               	addwfc	(??_USBConfigureEndpoint+3)& (0+255),f,b
 12076  004ACE  90D8               	bcf	status,0,c
 12077  004AD0  3780               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 12078  004AD2  3781               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 12079  004AD4  90D8               	bcf	status,0,c
 12080  004AD6  3780               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 12081  004AD8  3781               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 12082  004ADA  5180               	movf	(??_USBConfigureEndpoint+2)& (0+255),w,b
 12083  004ADC  2783               	addwf	USBConfigureEndpoint@handle& (0+255),f,b
 12084  004ADE  5181               	movf	(??_USBConfigureEndpoint+3)& (0+255),w,b
 12085  004AE0  2384               	addwfc	(USBConfigureEndpoint@handle+1)& (0+255),f,b
 12086                           
 12087                           ; BSR set to: 0
 12088                           ;usb_device.c: 1570: handle->STAT.UOWN = 0;
 12089  004AE2  C083  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 12090  004AE6  C084  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 12091  004AEA  9EDF               	bcf	indf2,7,c
 12092                           
 12093                           ; BSR set to: 0
 12094                           ;usb_device.c: 1575: if(direction == 0)
 12095  004AEC  517D               	movf	USBConfigureEndpoint@direction& (0+255),w,b
 12096  004AEE  A4D8               	btfss	status,2,c
 12097  004AF0  D007               	goto	l1679
 12098                           
 12099                           ; BSR set to: 0
 12100                           ;usb_device.c: 1576: {
 12101                           ;usb_device.c: 1577: pBDTEntryOut[EPNum] = handle;
 12102  004AF2  5182               	movf	USBConfigureEndpoint@EPNum& (0+255),w,b
 12103  004AF4  0D02               	mullw	2
 12104  004AF6  0E06               	movlw	low _pBDTEntryOut
 12105  004AF8  24F3               	addwf	prodl,w,c
 12106  004AFA  6ED9               	movwf	fsr2l,c
 12107  004AFC  0E03               	movlw	high _pBDTEntryOut
 12108  004AFE  D006               	goto	L10
 12109  004B00                     l1679:
 12110                           
 12111                           ; BSR set to: 0
 12112                           ;usb_device.c: 1579: else
 12113                           ;usb_device.c: 1580: {
 12114                           ;usb_device.c: 1581: pBDTEntryIn[EPNum] = handle;
 12115                           
 12116                           ; BSR set to: 0
 12117  004B00  5182               	movf	USBConfigureEndpoint@EPNum& (0+255),w,b
 12118  004B02  0D02               	mullw	2
 12119  004B04  0EB6               	movlw	low _pBDTEntryIn
 12120  004B06  24F3               	addwf	prodl,w,c
 12121  004B08  6ED9               	movwf	fsr2l,c
 12122  004B0A  0E00               	movlw	high _pBDTEntryIn
 12123  004B0C                     L10:
 12124  004B0C  20F4               	addwfc	prodh,w,c
 12125  004B0E  6EDA               	movwf	fsr2h,c
 12126  004B10  C083  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 12127  004B14  C084  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 12128                           
 12129                           ; BSR set to: 0
 12130                           ;usb_device.c: 1582: }
 12131                           ;usb_device.c: 1585: handle->STAT.DTS = 0;
 12132                           
 12133                           ; BSR set to: 0
 12134  004B18  C083  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 12135  004B1C  C084  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 12136  004B20  9CDF               	bcf	indf2,6,c
 12137                           
 12138                           ; BSR set to: 0
 12139                           ;usb_device.c: 1586: (handle+1)->STAT.DTS = 1;
 12140  004B22  EE20 F004          	lfsr	2,4
 12141  004B26  5183               	movf	USBConfigureEndpoint@handle& (0+255),w,b
 12142  004B28  26D9               	addwf	fsr2l,f,c
 12143  004B2A  5184               	movf	(USBConfigureEndpoint@handle+1)& (0+255),w,b
 12144  004B2C  22DA               	addwfc	fsr2h,f,c
 12145  004B2E  8CDF               	bsf	indf2,6,c
 12146                           
 12147                           ; BSR set to: 0
 12148  004B30  0012               	return		;funcret
 12149  004B32                     __end_of_USBConfigureEndpoint:
 12150                           	opt stack 0
 12151                           tosu	equ	0xFFF
 12152                           tosh	equ	0xFFE
 12153                           tosl	equ	0xFFD
 12154                           pclath	equ	0xFFA
 12155                           tblptru	equ	0xFF8
 12156                           tblptrh	equ	0xFF7
 12157                           tblptrl	equ	0xFF6
 12158                           tablat	equ	0xFF5
 12159                           prodh	equ	0xFF4
 12160                           prodl	equ	0xFF3
 12161                           intcon	equ	0xFF2
 12162                           intcon2	equ	0xFF1
 12163                           intcon3	equ	0xFF0
 12164                           indf0	equ	0xFEF
 12165                           postinc0	equ	0xFEE
 12166                           plusw0	equ	0xFEB
 12167                           fsr0h	equ	0xFEA
 12168                           fsr0l	equ	0xFE9
 12169                           wreg	equ	0xFE8
 12170                           postinc1	equ	0xFE6
 12171                           postdec1	equ	0xFE5
 12172                           fsr1h	equ	0xFE2
 12173                           fsr1l	equ	0xFE1
 12174                           indf2	equ	0xFDF
 12175                           postinc2	equ	0xFDE
 12176                           postdec2	equ	0xFDD
 12177                           plusw2	equ	0xFDB
 12178                           fsr2h	equ	0xFDA
 12179                           fsr2l	equ	0xFD9
 12180                           status	equ	0xFD8
 12181                           
 12182 ;; *************** function _USBCtrlTrfOutHandler *****************
 12183 ;; Defined at:
 12184 ;;		line 2555 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 12185 ;; Parameters:    Size  Location     Type
 12186 ;;		None
 12187 ;; Auto vars:     Size  Location     Type
 12188 ;;		None
 12189 ;; Return value:  Size  Location     Type
 12190 ;;                  1    wreg      void 
 12191 ;; Registers used:
 12192 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12193 ;; Tracked objects:
 12194 ;;		On entry : 0/0
 12195 ;;		On exit  : 0/0
 12196 ;;		Unchanged: 0/0
 12197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12198 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12199 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12200 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12201 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12202 ;;Total ram usage:        0 bytes
 12203 ;; Hardware stack levels used:    1
 12204 ;; Hardware stack levels required when called:   13
 12205 ;; This function calls:
 12206 ;;		_USBCtrlTrfRxService
 12207 ;; This function is called by:
 12208 ;;		_USBCtrlEPService
 12209 ;; This function uses a non-reentrant model
 12210 ;;
 12211                           
 12212                           	psect	text49
 12213  005676                     __ptext49:
 12214                           	opt stack 0
 12215  005676                     _USBCtrlTrfOutHandler:
 12216                           	opt stack 12
 12217                           
 12218                           ;usb_device.c: 2557: if(controlTransferState == 2)
 12219                           
 12220                           ; BSR set to: 0
 12221                           ;incstack = 0
 12222  005676  0E02               	movlw	2
 12223  005678  0100               	movlb	0	; () banked
 12224  00567A  19CC               	xorwf	_controlTransferState& (0+255),w,b
 12225  00567C  A4D8               	btfss	status,2,c
 12226  00567E  D003               	goto	l1785
 12227                           
 12228                           ; BSR set to: 0
 12229                           ;usb_device.c: 2558: {
 12230                           ;usb_device.c: 2559: USBCtrlTrfRxService();
 12231  005680  EC81  F016         	call	_USBCtrlTrfRxService	;wreg free
 12232                           
 12233                           ;usb_device.c: 2560: }
 12234  005684  0012               	return	
 12235  005686                     l1785:
 12236                           
 12237                           ;usb_device.c: 2561: else
 12238                           ;usb_device.c: 2562: {
 12239                           ;usb_device.c: 2565: controlTransferState = 0;
 12240  005686  0E00               	movlw	0
 12241  005688  0100               	movlb	0	; () banked
 12242  00568A  6FCC               	movwf	_controlTransferState& (0+255),b
 12243                           
 12244                           ;usb_device.c: 2572: if(BothEP0OutUOWNsSet == 0)
 12245  00568C  0101               	movlb	1	; () banked
 12246  00568E  51DF               	movf	_BothEP0OutUOWNsSet& (0+255),w,b
 12247  005690  A4D8               	btfss	status,2,c
 12248  005692  D020               	goto	l1787
 12249                           
 12250                           ; BSR set to: 1
 12251                           ;usb_device.c: 2573: {
 12252                           ;usb_device.c: 2574: pBDTEntryEP0OutNext->CNT = 8;
 12253  005694  0100               	movlb	0	; () banked
 12254  005696  EE20 F001          	lfsr	2,1
 12255  00569A  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12256  00569C  26D9               	addwf	fsr2l,f,c
 12257  00569E  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12258  0056A0  22DA               	addwfc	fsr2h,f,c
 12259  0056A2  0E08               	movlw	8
 12260  0056A4  6EDF               	movwf	indf2,c
 12261                           
 12262                           ;usb_device.c: 2575: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 12263  0056A6  EE20 F002          	lfsr	2,2
 12264  0056AA  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12265  0056AC  26D9               	addwf	fsr2l,f,c
 12266  0056AE  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12267  0056B0  22DA               	addwfc	fsr2h,f,c
 12268  0056B2  0E30               	movlw	48
 12269  0056B4  6EDE               	movwf	postinc2,c
 12270  0056B6  0E04               	movlw	4
 12271  0056B8  6EDD               	movwf	postdec2,c
 12272                           
 12273                           ; BSR set to: 0
 12274                           ;usb_device.c: 2576: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 12275  0056BA  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12276  0056BE  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12277  0056C2  0E0C               	movlw	12
 12278  0056C4  6EDF               	movwf	indf2,c
 12279                           
 12280                           ; BSR set to: 0
 12281                           ;usb_device.c: 2577: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 12282  0056C6  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12283  0056CA  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12284  0056CE  0E00               	movlw	0
 12285  0056D0  8EDB               	bsf	plusw2,7,c
 12286                           
 12287                           ;usb_device.c: 2578: }
 12288  0056D2  0012               	return	
 12289  0056D4                     l1787:
 12290                           
 12291                           ;usb_device.c: 2579: else
 12292                           ;usb_device.c: 2580: {
 12293                           ;usb_device.c: 2581: BothEP0OutUOWNsSet = 0;
 12294                           
 12295                           ; BSR set to: 0
 12296  0056D4  0E00               	movlw	0
 12297  0056D6  0101               	movlb	1	; () banked
 12298  0056D8  6FDF               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 12299                           
 12300                           ; BSR set to: 1
 12301  0056DA  0012               	return	
 12302  0056DC                     __end_of_USBCtrlTrfOutHandler:
 12303                           	opt stack 0
 12304                           tosu	equ	0xFFF
 12305                           tosh	equ	0xFFE
 12306                           tosl	equ	0xFFD
 12307                           pclath	equ	0xFFA
 12308                           tblptru	equ	0xFF8
 12309                           tblptrh	equ	0xFF7
 12310                           tblptrl	equ	0xFF6
 12311                           tablat	equ	0xFF5
 12312                           prodh	equ	0xFF4
 12313                           prodl	equ	0xFF3
 12314                           intcon	equ	0xFF2
 12315                           intcon2	equ	0xFF1
 12316                           intcon3	equ	0xFF0
 12317                           indf0	equ	0xFEF
 12318                           postinc0	equ	0xFEE
 12319                           plusw0	equ	0xFEB
 12320                           fsr0h	equ	0xFEA
 12321                           fsr0l	equ	0xFE9
 12322                           wreg	equ	0xFE8
 12323                           postinc1	equ	0xFE6
 12324                           postdec1	equ	0xFE5
 12325                           fsr1h	equ	0xFE2
 12326                           fsr1l	equ	0xFE1
 12327                           indf2	equ	0xFDF
 12328                           postinc2	equ	0xFDE
 12329                           postdec2	equ	0xFDD
 12330                           plusw2	equ	0xFDB
 12331                           fsr2h	equ	0xFDA
 12332                           fsr2l	equ	0xFD9
 12333                           status	equ	0xFD8
 12334                           
 12335 ;; *************** function _USBCtrlTrfRxService *****************
 12336 ;; Defined at:
 12337 ;;		line 1870 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 12338 ;; Parameters:    Size  Location     Type
 12339 ;;		None
 12340 ;; Auto vars:     Size  Location     Type
 12341 ;;  byteToRead      1   30[BANK0 ] unsigned char 
 12342 ;;  i               1   29[BANK0 ] unsigned char 
 12343 ;; Return value:  Size  Location     Type
 12344 ;;                  1    wreg      void 
 12345 ;; Registers used:
 12346 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12347 ;; Tracked objects:
 12348 ;;		On entry : 0/0
 12349 ;;		On exit  : 0/0
 12350 ;;		Unchanged: 0/0
 12351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12352 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12353 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12354 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12355 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12356 ;;Total ram usage:        2 bytes
 12357 ;; Hardware stack levels used:    1
 12358 ;; Hardware stack levels required when called:   12
 12359 ;; This function calls:
 12360 ;;		_USBCtrlEPAllowStatusStage
 12361 ;; This function is called by:
 12362 ;;		_USBCtrlTrfOutHandler
 12363 ;; This function uses a non-reentrant model
 12364 ;;
 12365                           
 12366                           	psect	text50
 12367  002D02                     __ptext50:
 12368                           	opt stack 0
 12369  002D02                     _USBCtrlTrfRxService:
 12370                           	opt stack 12
 12371                           
 12372                           ;usb_device.c: 1872: uint8_t byteToRead;
 12373                           ;usb_device.c: 1873: uint8_t i;
 12374                           ;usb_device.c: 1877: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 12375                           
 12376                           ;incstack = 0
 12377  002D02  0100               	movlb	0	; () banked
 12378  002D04  EE20 F001          	lfsr	2,1
 12379  002D08  51C0               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 12380  002D0A  26D9               	addwf	fsr2l,f,c
 12381  002D0C  51C1               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 12382  002D0E  22DA               	addwfc	fsr2h,f,c
 12383  002D10  50DF               	movf	indf2,w,c
 12384  002D12  6F7E               	movwf	USBCtrlTrfRxService@byteToRead& (0+255),b
 12385                           
 12386                           ; BSR set to: 0
 12387                           ;usb_device.c: 1883: if(byteToRead > outPipes[0].wCount.Val)
 12388  002D14  517E               	movf	USBCtrlTrfRxService@byteToRead& (0+255),w,b
 12389  002D16  0101               	movlb	1	; () banked
 12390  002D18  5DCD               	subwf	(_outPipes+4)& (0+255),w,b
 12391  002D1A  0E00               	movlw	0
 12392  002D1C  59CE               	subwfb	(_outPipes+5)& (0+255),w,b
 12393  002D1E  A0D8               	btfss	status,0,c
 12394                           
 12395                           ; BSR set to: 1
 12396                           ;usb_device.c: 1884: {
 12397                           ;usb_device.c: 1885: byteToRead = outPipes[0].wCount.Val;
 12398  002D20  C1CD  F07E         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead
 12399                           
 12400                           ; BSR set to: 1
 12401                           ;usb_device.c: 1886: }
 12402                           ;usb_device.c: 1888: outPipes[0].wCount.Val -= byteToRead;
 12403                           
 12404                           ; BSR set to: 1
 12405  002D24  0100               	movlb	0	; () banked
 12406  002D26  517E               	movf	USBCtrlTrfRxService@byteToRead& (0+255),w,b
 12407  002D28  0101               	movlb	1	; () banked
 12408  002D2A  5FCD               	subwf	(_outPipes+4)& (0+255),f,b
 12409  002D2C  0E00               	movlw	0
 12410  002D2E  5BCE               	subwfb	(_outPipes+5)& (0+255),f,b
 12411                           
 12412                           ; BSR set to: 1
 12413                           ;usb_device.c: 1892: for(i=0;i<byteToRead;i++)
 12414  002D30  0E00               	movlw	0
 12415  002D32  0100               	movlb	0	; () banked
 12416  002D34  6F7D               	movwf	USBCtrlTrfRxService@i& (0+255),b
 12417  002D36  D013               	goto	l1713
 12418  002D38                     
 12419                           ; BSR set to: 0
 12420                           ;usb_device.c: 1893: {
 12421                           ;usb_device.c: 1894: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 12422                           
 12423                           ; BSR set to: 0
 12424  002D38  517D               	movf	USBCtrlTrfRxService@i& (0+255),w,b
 12425  002D3A  0D01               	mullw	1
 12426  002D3C  0E38               	movlw	56
 12427  002D3E  24F3               	addwf	prodl,w,c
 12428  002D40  6ED9               	movwf	fsr2l,c
 12429  002D42  0E04               	movlw	4
 12430  002D44  20F4               	addwfc	prodh,w,c
 12431  002D46  6EDA               	movwf	fsr2h,c
 12432  002D48  C1C9  FFE1         	movff	_outPipes,fsr1l
 12433  002D4C  C1CA  FFE2         	movff	_outPipes+1,fsr1h
 12434  002D50  CFDF FFE7          	movff	indf2,indf1
 12435                           
 12436                           ; BSR set to: 0
 12437  002D54  0101               	movlb	1	; () banked
 12438  002D56  4BC9               	infsnz	_outPipes& (0+255),f,b
 12439  002D58  2BCA               	incf	(_outPipes+1)& (0+255),f,b
 12440                           
 12441                           ; BSR set to: 1
 12442  002D5A  0100               	movlb	0	; () banked
 12443  002D5C  2B7D               	incf	USBCtrlTrfRxService@i& (0+255),f,b
 12444  002D5E                     l1713:
 12445                           
 12446                           ; BSR set to: 0
 12447                           
 12448                           ; BSR set to: 0
 12449  002D5E  517E               	movf	USBCtrlTrfRxService@byteToRead& (0+255),w,b
 12450  002D60  5D7D               	subwf	USBCtrlTrfRxService@i& (0+255),w,b
 12451  002D62  A0D8               	btfss	status,0,c
 12452  002D64  D7E9               	goto	l1714
 12453                           
 12454                           ; BSR set to: 0
 12455                           ;usb_device.c: 1895: }
 12456                           ;usb_device.c: 1899: if(outPipes[0].wCount.Val > 0)
 12457                           
 12458                           ; BSR set to: 0
 12459  002D66  0101               	movlb	1	; () banked
 12460  002D68  51CD               	movf	(_outPipes+4)& (0+255),w,b
 12461  002D6A  11CE               	iorwf	(_outPipes+5)& (0+255),w,b
 12462  002D6C  B4D8               	btfsc	status,2,c
 12463  002D6E  D033               	goto	l1716
 12464                           
 12465                           ; BSR set to: 1
 12466                           ;usb_device.c: 1900: {
 12467                           ;usb_device.c: 1901: pBDTEntryEP0OutNext->CNT = 8;
 12468  002D70  0100               	movlb	0	; () banked
 12469  002D72  EE20 F001          	lfsr	2,1
 12470  002D76  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12471  002D78  26D9               	addwf	fsr2l,f,c
 12472  002D7A  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12473  002D7C  22DA               	addwfc	fsr2h,f,c
 12474  002D7E  0E08               	movlw	8
 12475  002D80  6EDF               	movwf	indf2,c
 12476                           
 12477                           ;usb_device.c: 1902: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 12478  002D82  EE20 F002          	lfsr	2,2
 12479  002D86  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12480  002D88  26D9               	addwf	fsr2l,f,c
 12481  002D8A  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12482  002D8C  22DA               	addwfc	fsr2h,f,c
 12483  002D8E  0E38               	movlw	56
 12484  002D90  6EDE               	movwf	postinc2,c
 12485  002D92  0E04               	movlw	4
 12486  002D94  6EDD               	movwf	postdec2,c
 12487                           
 12488                           ; BSR set to: 0
 12489                           ;usb_device.c: 1903: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 12490  002D96  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 12491  002D9A  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 12492  002D9E  BCDF               	btfsc	indf2,6,c
 12493  002DA0  D00D               	goto	l1717
 12494                           
 12495                           ; BSR set to: 0
 12496                           ;usb_device.c: 1904: {
 12497                           ;usb_device.c: 1905: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 12498  002DA2  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12499  002DA6  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12500  002DAA  0E48               	movlw	72
 12501  002DAC  6EDF               	movwf	indf2,c
 12502                           
 12503                           ; BSR set to: 0
 12504                           ;usb_device.c: 1906: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 12505  002DAE  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12506  002DB2  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12507  002DB6  0E00               	movlw	0
 12508  002DB8  8EDB               	bsf	plusw2,7,c
 12509                           
 12510                           ;usb_device.c: 1907: }
 12511  002DBA  0012               	return	
 12512  002DBC                     l1717:
 12513                           
 12514                           ; BSR set to: 0
 12515                           ;usb_device.c: 1908: else
 12516                           ;usb_device.c: 1909: {
 12517                           ;usb_device.c: 1910: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
 12518                           
 12519                           ; BSR set to: 0
 12520  002DBC  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12521  002DC0  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12522  002DC4  0E08               	movlw	8
 12523  002DC6  6EDF               	movwf	indf2,c
 12524                           
 12525                           ; BSR set to: 0
 12526                           ;usb_device.c: 1911: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 12527  002DC8  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12528  002DCC  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12529  002DD0  0E00               	movlw	0
 12530  002DD2  8EDB               	bsf	plusw2,7,c
 12531                           
 12532                           ; BSR set to: 0
 12533                           ;usb_device.c: 1912: }
 12534                           ;usb_device.c: 1913: }
 12535  002DD4  0012               	return	
 12536  002DD6                     l1716:
 12537                           
 12538                           ;usb_device.c: 1914: else
 12539                           ;usb_device.c: 1915: {
 12540                           ;usb_device.c: 1919: pBDTEntryEP0OutNext->CNT = 8;
 12541                           
 12542                           ; BSR set to: 0
 12543  002DD6  0100               	movlb	0	; () banked
 12544  002DD8  EE20 F001          	lfsr	2,1
 12545  002DDC  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12546  002DDE  26D9               	addwf	fsr2l,f,c
 12547  002DE0  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12548  002DE2  22DA               	addwfc	fsr2h,f,c
 12549  002DE4  0E08               	movlw	8
 12550  002DE6  6EDF               	movwf	indf2,c
 12551                           
 12552                           ;usb_device.c: 1920: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 12553  002DE8  EE20 F002          	lfsr	2,2
 12554  002DEC  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12555  002DEE  26D9               	addwf	fsr2l,f,c
 12556  002DF0  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12557  002DF2  22DA               	addwfc	fsr2h,f,c
 12558  002DF4  0E30               	movlw	48
 12559  002DF6  6EDE               	movwf	postinc2,c
 12560  002DF8  0E04               	movlw	4
 12561  002DFA  6EDD               	movwf	postdec2,c
 12562                           
 12563                           ; BSR set to: 0
 12564                           ;usb_device.c: 1924: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 12565  002DFC  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12566  002E00  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12567  002E04  0E04               	movlw	4
 12568  002E06  6EDF               	movwf	indf2,c
 12569                           
 12570                           ; BSR set to: 0
 12571                           ;usb_device.c: 1925: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 12572  002E08  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12573  002E0C  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12574  002E10  0E00               	movlw	0
 12575  002E12  8EDB               	bsf	plusw2,7,c
 12576                           
 12577                           ; BSR set to: 0
 12578                           ;usb_device.c: 1944: }
 12579                           ;usb_device.c: 1945: outPipes[0].info.bits.busy = 0;
 12580                           
 12581                           ; BSR set to: 0
 12582  002E14  0101               	movlb	1	; () banked
 12583  002E16  9FCC               	bcf	(_outPipes+3)& (0+255),7,b
 12584                           
 12585                           ; BSR set to: 1
 12586                           ;usb_device.c: 1959: if(USBDeferStatusStagePacket == 0)
 12587  002E18  0100               	movlb	0	; () banked
 12588  002E1A  51CA               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 12589  002E1C  A4D8               	btfss	status,2,c
 12590  002E1E  0012               	return	
 12591                           
 12592                           ; BSR set to: 0
 12593                           ;usb_device.c: 1960: {
 12594                           ;usb_device.c: 1961: USBCtrlEPAllowStatusStage();
 12595  002E20  EC41  F01E         	call	_USBCtrlEPAllowStatusStage	;wreg free
 12596  002E24  0012               	return	
 12597  002E26                     __end_of_USBCtrlTrfRxService:
 12598                           	opt stack 0
 12599                           tosu	equ	0xFFF
 12600                           tosh	equ	0xFFE
 12601                           tosl	equ	0xFFD
 12602                           pclath	equ	0xFFA
 12603                           tblptru	equ	0xFF8
 12604                           tblptrh	equ	0xFF7
 12605                           tblptrl	equ	0xFF6
 12606                           tablat	equ	0xFF5
 12607                           prodh	equ	0xFF4
 12608                           prodl	equ	0xFF3
 12609                           intcon	equ	0xFF2
 12610                           intcon2	equ	0xFF1
 12611                           intcon3	equ	0xFF0
 12612                           indf0	equ	0xFEF
 12613                           postinc0	equ	0xFEE
 12614                           plusw0	equ	0xFEB
 12615                           fsr0h	equ	0xFEA
 12616                           fsr0l	equ	0xFE9
 12617                           wreg	equ	0xFE8
 12618                           indf1	equ	0xFE7
 12619                           postinc1	equ	0xFE6
 12620                           postdec1	equ	0xFE5
 12621                           fsr1h	equ	0xFE2
 12622                           fsr1l	equ	0xFE1
 12623                           indf2	equ	0xFDF
 12624                           postinc2	equ	0xFDE
 12625                           postdec2	equ	0xFDD
 12626                           plusw2	equ	0xFDB
 12627                           fsr2h	equ	0xFDA
 12628                           fsr2l	equ	0xFD9
 12629                           status	equ	0xFD8
 12630                           
 12631 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 12632 ;; Defined at:
 12633 ;;		line 1434 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 12634 ;; Parameters:    Size  Location     Type
 12635 ;;		None
 12636 ;; Auto vars:     Size  Location     Type
 12637 ;;		None
 12638 ;; Return value:  Size  Location     Type
 12639 ;;                  1    wreg      void 
 12640 ;; Registers used:
 12641 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12642 ;; Tracked objects:
 12643 ;;		On entry : 0/0
 12644 ;;		On exit  : 0/0
 12645 ;;		Unchanged: 0/0
 12646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12647 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12648 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12650 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12651 ;;Total ram usage:        0 bytes
 12652 ;; Hardware stack levels used:    1
 12653 ;; Hardware stack levels required when called:   11
 12654 ;; This function calls:
 12655 ;;		Nothing
 12656 ;; This function is called by:
 12657 ;;		_USBDeviceTasks
 12658 ;;		_USBCtrlEPServiceComplete
 12659 ;;		_USBCtrlTrfRxService
 12660 ;; This function uses a non-reentrant model
 12661 ;;
 12662                           
 12663                           	psect	text51
 12664  003C82                     __ptext51:
 12665                           	opt stack 0
 12666  003C82                     _USBCtrlEPAllowStatusStage:
 12667                           	opt stack 12
 12668                           
 12669                           ;usb_device.c: 1441: if(USBStatusStageEnabledFlag1 == 0)
 12670                           
 12671                           ;incstack = 0
 12672  003C82  5028               	movf	_USBStatusStageEnabledFlag1,w,c	;volatile
 12673  003C84  A4D8               	btfss	status,2,c
 12674  003C86  0012               	return	
 12675                           
 12676                           ;usb_device.c: 1442: {
 12677                           ;usb_device.c: 1443: USBStatusStageEnabledFlag1 = 1;
 12678  003C88  0E01               	movlw	1
 12679  003C8A  6E28               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 12680                           
 12681                           ;usb_device.c: 1444: if(USBStatusStageEnabledFlag2 == 0)
 12682  003C8C  5027               	movf	_USBStatusStageEnabledFlag2,w,c	;volatile
 12683  003C8E  A4D8               	btfss	status,2,c
 12684  003C90  0012               	return	
 12685                           
 12686                           ;usb_device.c: 1445: {
 12687                           ;usb_device.c: 1446: USBStatusStageEnabledFlag2 = 1;
 12688  003C92  0E01               	movlw	1
 12689  003C94  6E27               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 12690                           
 12691                           ;usb_device.c: 1450: if(controlTransferState == 2)
 12692  003C96  0E02               	movlw	2
 12693  003C98  0100               	movlb	0	; () banked
 12694  003C9A  19CC               	xorwf	_controlTransferState& (0+255),w,b
 12695  003C9C  A4D8               	btfss	status,2,c
 12696  003C9E  D015               	goto	l1667
 12697                           
 12698                           ; BSR set to: 0
 12699                           ;usb_device.c: 1451: {
 12700                           ;usb_device.c: 1452: pBDTEntryIn[0]->CNT = 0;
 12701  003CA0  EE20 F001          	lfsr	2,1
 12702  003CA4  51B6               	movf	_pBDTEntryIn& (0+255),w,b
 12703  003CA6  26D9               	addwf	fsr2l,f,c
 12704  003CA8  51B7               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 12705  003CAA  22DA               	addwfc	fsr2h,f,c
 12706  003CAC  0E00               	movlw	0
 12707  003CAE  6EDF               	movwf	indf2,c
 12708                           
 12709                           ; BSR set to: 0
 12710                           ;usb_device.c: 1453: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 12711  003CB0  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 12712  003CB4  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12713  003CB8  0E48               	movlw	72
 12714  003CBA  6EDF               	movwf	indf2,c
 12715                           
 12716                           ; BSR set to: 0
 12717                           ;usb_device.c: 1454: pBDTEntryIn[0]->STAT.Val |= 0x80;
 12718  003CBC  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 12719  003CC0  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12720  003CC4  0E00               	movlw	0
 12721  003CC6  8EDB               	bsf	plusw2,7,c
 12722                           
 12723                           ;usb_device.c: 1455: }
 12724  003CC8  0012               	return	
 12725  003CCA                     l1667:
 12726                           
 12727                           ; BSR set to: 0
 12728                           ;usb_device.c: 1456: else if(controlTransferState == 1)
 12729                           
 12730                           ; BSR set to: 0
 12731  003CCA  05CC               	decf	_controlTransferState& (0+255),w,b
 12732  003CCC  A4D8               	btfss	status,2,c
 12733  003CCE  0012               	return	
 12734                           
 12735                           ; BSR set to: 0
 12736                           ;usb_device.c: 1457: {
 12737                           ;usb_device.c: 1458: BothEP0OutUOWNsSet = 0;
 12738  003CD0  0E00               	movlw	0
 12739  003CD2  0101               	movlb	1	; () banked
 12740  003CD4  6FDF               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 12741                           
 12742                           ; BSR set to: 1
 12743                           ;usb_device.c: 1463: pBDTEntryEP0OutCurrent->CNT = 8;
 12744  003CD6  0100               	movlb	0	; () banked
 12745  003CD8  EE20 F001          	lfsr	2,1
 12746  003CDC  51C0               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 12747  003CDE  26D9               	addwf	fsr2l,f,c
 12748  003CE0  51C1               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 12749  003CE2  22DA               	addwfc	fsr2h,f,c
 12750  003CE4  0E08               	movlw	8
 12751  003CE6  6EDF               	movwf	indf2,c
 12752                           
 12753                           ; BSR set to: 0
 12754                           ;usb_device.c: 1464: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 12755  003CE8  EE20 F002          	lfsr	2,2
 12756  003CEC  51C0               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 12757  003CEE  26D9               	addwf	fsr2l,f,c
 12758  003CF0  51C1               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 12759  003CF2  22DA               	addwfc	fsr2h,f,c
 12760  003CF4  0E30               	movlw	48
 12761  003CF6  6EDE               	movwf	postinc2,c
 12762  003CF8  0E04               	movlw	4
 12763  003CFA  6EDD               	movwf	postdec2,c
 12764                           
 12765                           ; BSR set to: 0
 12766                           ;usb_device.c: 1465: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 12767  003CFC  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 12768  003D00  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 12769  003D04  0E04               	movlw	4
 12770  003D06  6EDF               	movwf	indf2,c
 12771                           
 12772                           ; BSR set to: 0
 12773                           ;usb_device.c: 1466: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 12774  003D08  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 12775  003D0C  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 12776  003D10  0E00               	movlw	0
 12777  003D12  8EDB               	bsf	plusw2,7,c
 12778                           
 12779                           ; BSR set to: 0
 12780                           ;usb_device.c: 1467: BothEP0OutUOWNsSet = 1;
 12781  003D14  0E01               	movlw	1
 12782  003D16  0101               	movlb	1	; () banked
 12783  003D18  6FDF               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 12784                           
 12785                           ; BSR set to: 1
 12786                           ;usb_device.c: 1471: pBDTEntryEP0OutNext->CNT = 8;
 12787  003D1A  0100               	movlb	0	; () banked
 12788  003D1C  EE20 F001          	lfsr	2,1
 12789  003D20  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12790  003D22  26D9               	addwf	fsr2l,f,c
 12791  003D24  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12792  003D26  22DA               	addwfc	fsr2h,f,c
 12793  003D28  0E08               	movlw	8
 12794  003D2A  6EDF               	movwf	indf2,c
 12795                           
 12796                           ; BSR set to: 0
 12797                           ;usb_device.c: 1472: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 12798  003D2C  EE20 F002          	lfsr	2,2
 12799  003D30  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12800  003D32  26D9               	addwf	fsr2l,f,c
 12801  003D34  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12802  003D36  22DA               	addwfc	fsr2h,f,c
 12803  003D38  0E30               	movlw	48
 12804  003D3A  6EDE               	movwf	postinc2,c
 12805  003D3C  0E04               	movlw	4
 12806  003D3E  6EDD               	movwf	postdec2,c
 12807                           
 12808                           ; BSR set to: 0
 12809                           ;usb_device.c: 1473: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 12810  003D40  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12811  003D44  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12812  003D48  0E80               	movlw	128
 12813  003D4A  6EDF               	movwf	indf2,c
 12814                           
 12815                           ; BSR set to: 0
 12816                           
 12817                           ; BSR set to: 0
 12818                           
 12819                           ; BSR set to: 0
 12820  003D4C  0012               	return	
 12821  003D4E                     __end_of_USBCtrlEPAllowStatusStage:
 12822                           	opt stack 0
 12823                           tosu	equ	0xFFF
 12824                           tosh	equ	0xFFE
 12825                           tosl	equ	0xFFD
 12826                           pclath	equ	0xFFA
 12827                           tblptru	equ	0xFF8
 12828                           tblptrh	equ	0xFF7
 12829                           tblptrl	equ	0xFF6
 12830                           tablat	equ	0xFF5
 12831                           prodh	equ	0xFF4
 12832                           prodl	equ	0xFF3
 12833                           intcon	equ	0xFF2
 12834                           intcon2	equ	0xFF1
 12835                           intcon3	equ	0xFF0
 12836                           indf0	equ	0xFEF
 12837                           postinc0	equ	0xFEE
 12838                           plusw0	equ	0xFEB
 12839                           fsr0h	equ	0xFEA
 12840                           fsr0l	equ	0xFE9
 12841                           wreg	equ	0xFE8
 12842                           indf1	equ	0xFE7
 12843                           postinc1	equ	0xFE6
 12844                           postdec1	equ	0xFE5
 12845                           fsr1h	equ	0xFE2
 12846                           fsr1l	equ	0xFE1
 12847                           indf2	equ	0xFDF
 12848                           postinc2	equ	0xFDE
 12849                           postdec2	equ	0xFDD
 12850                           plusw2	equ	0xFDB
 12851                           fsr2h	equ	0xFDA
 12852                           fsr2l	equ	0xFD9
 12853                           status	equ	0xFD8
 12854                           
 12855 ;; *************** function _USBCtrlTrfInHandler *****************
 12856 ;; Defined at:
 12857 ;;		line 2609 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 12858 ;; Parameters:    Size  Location     Type
 12859 ;;		None
 12860 ;; Auto vars:     Size  Location     Type
 12861 ;;  lastDTS         1   30[BANK0 ] unsigned char 
 12862 ;; Return value:  Size  Location     Type
 12863 ;;                  1    wreg      void 
 12864 ;; Registers used:
 12865 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12866 ;; Tracked objects:
 12867 ;;		On entry : 0/0
 12868 ;;		On exit  : 0/0
 12869 ;;		Unchanged: 0/0
 12870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12871 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12872 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12873 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12874 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12875 ;;Total ram usage:        1 bytes
 12876 ;; Hardware stack levels used:    1
 12877 ;; Hardware stack levels required when called:   12
 12878 ;; This function calls:
 12879 ;;		_USBCtrlTrfTxService
 12880 ;; This function is called by:
 12881 ;;		_USBCtrlEPService
 12882 ;; This function uses a non-reentrant model
 12883 ;;
 12884                           
 12885                           	psect	text52
 12886  004134                     __ptext52:
 12887                           	opt stack 0
 12888  004134                     _USBCtrlTrfInHandler:
 12889                           	opt stack 13
 12890                           
 12891                           ;usb_device.c: 2611: uint8_t lastDTS;
 12892                           ;usb_device.c: 2613: lastDTS = pBDTEntryIn[0]->STAT.DTS;
 12893                           
 12894                           ;incstack = 0
 12895  004134  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 12896  004138  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12897  00413C  0100               	movlb	0	; () banked
 12898  00413E  0E00               	movlw	0
 12899  004140  BCDF               	btfsc	indf2,6,c
 12900  004142  0E01               	movlw	1
 12901  004144  6F7E               	movwf	USBCtrlTrfInHandler@lastDTS& (0+255),b
 12902                           
 12903                           ; BSR set to: 0
 12904                           ;usb_device.c: 2616: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 12905  004146  0E04               	movlw	4
 12906  004148  1BB6               	xorwf	_pBDTEntryIn& (0+255),f,b
 12907                           
 12908                           ; BSR set to: 0
 12909                           ;usb_device.c: 2621: if(USBDeviceState == ADR_PENDING_STATE)
 12910  00414A  0E08               	movlw	8
 12911  00414C  19CE               	xorwf	_USBDeviceState& (0+255),w,b
 12912  00414E  A4D8               	btfss	status,2,c
 12913  004150  D00D               	goto	l1794
 12914                           
 12915                           ; BSR set to: 0
 12916                           ;usb_device.c: 2622: {
 12917                           ;usb_device.c: 2623: UADDR = (SetupPkt.bDevADR & 0x7F);
 12918  004152  0104               	movlb	4	; () banked
 12919  004154  5132               	movf	50,w,b	;volatile
 12920  004156  0B7F               	andlw	127
 12921  004158  010F               	movlb	15	; () banked
 12922  00415A  6F38               	movwf	56,b	;volatile
 12923                           
 12924                           ; BSR set to: 15
 12925                           ;usb_device.c: 2624: if(UADDR != 0u)
 12926  00415C  5138               	movf	56,w,b	;volatile
 12927  00415E  B4D8               	btfsc	status,2,c
 12928  004160  D002               	goto	l1793
 12929                           
 12930                           ; BSR set to: 15
 12931                           ;usb_device.c: 2625: {
 12932                           ;usb_device.c: 2626: USBDeviceState=ADDRESS_STATE;
 12933  004162  0E10               	movlw	16
 12934  004164  D001               	goto	L11
 12935  004166                     l1793:
 12936                           
 12937                           ;usb_device.c: 2628: else
 12938                           ;usb_device.c: 2629: {
 12939                           ;usb_device.c: 2630: USBDeviceState=DEFAULT_STATE;
 12940                           
 12941                           ; BSR set to: 0
 12942  004166  0E04               	movlw	4
 12943  004168                     L11:
 12944  004168  0100               	movlb	0	; () banked
 12945  00416A  6FCE               	movwf	_USBDeviceState& (0+255),b
 12946  00416C                     l1794:
 12947                           
 12948                           ; BSR set to: 0
 12949                           ;usb_device.c: 2631: }
 12950                           ;usb_device.c: 2632: }
 12951                           ;usb_device.c: 2635: if(controlTransferState == 1)
 12952                           
 12953                           ; BSR set to: 0
 12954                           
 12955                           ; BSR set to: 0
 12956  00416C  05CC               	decf	_controlTransferState& (0+255),w,b
 12957  00416E  A4D8               	btfss	status,2,c
 12958  004170  D03B               	goto	l1795
 12959                           
 12960                           ; BSR set to: 0
 12961                           ;usb_device.c: 2636: {
 12962                           ;usb_device.c: 2637: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData));
 12963  004172  EE20 F002          	lfsr	2,2
 12964  004176  51B6               	movf	_pBDTEntryIn& (0+255),w,b
 12965  004178  26D9               	addwf	fsr2l,f,c
 12966  00417A  51B7               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 12967  00417C  22DA               	addwfc	fsr2h,f,c
 12968  00417E  0E38               	movlw	56
 12969  004180  6EDE               	movwf	postinc2,c
 12970  004182  0E04               	movlw	4
 12971  004184  6EDD               	movwf	postdec2,c
 12972                           
 12973                           ; BSR set to: 0
 12974                           ;usb_device.c: 2638: USBCtrlTrfTxService();
 12975  004186  EC61  F01B         	call	_USBCtrlTrfTxService	;wreg free
 12976                           
 12977                           ;usb_device.c: 2644: if(shortPacketStatus == 2)
 12978  00418A  0E02               	movlw	2
 12979  00418C  0100               	movlb	0	; () banked
 12980  00418E  19CD               	xorwf	_shortPacketStatus& (0+255),w,b
 12981  004190  A4D8               	btfss	status,2,c
 12982  004192  D00D               	goto	l1796
 12983                           
 12984                           ; BSR set to: 0
 12985                           ;usb_device.c: 2645: {
 12986                           ;usb_device.c: 2648: pBDTEntryIn[0]->STAT.Val = 0x04;
 12987  004194  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 12988  004198  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12989  00419C  0E04               	movlw	4
 12990  00419E  6EDF               	movwf	indf2,c
 12991                           
 12992                           ; BSR set to: 0
 12993                           ;usb_device.c: 2649: pBDTEntryIn[0]->STAT.Val |= 0x80;
 12994  0041A0  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 12995  0041A4  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12996  0041A8  0E00               	movlw	0
 12997  0041AA  8EDB               	bsf	plusw2,7,c
 12998                           
 12999                           ;usb_device.c: 2650: }
 13000  0041AC  0012               	return	
 13001  0041AE                     l1796:
 13002                           
 13003                           ; BSR set to: 0
 13004                           ;usb_device.c: 2651: else
 13005                           ;usb_device.c: 2652: {
 13006                           ;usb_device.c: 2653: if(lastDTS == 0)
 13007                           
 13008                           ; BSR set to: 0
 13009  0041AE  517E               	movf	USBCtrlTrfInHandler@lastDTS& (0+255),w,b
 13010  0041B0  A4D8               	btfss	status,2,c
 13011  0041B2  D00D               	goto	l1798
 13012                           
 13013                           ; BSR set to: 0
 13014                           ;usb_device.c: 2654: {
 13015                           ;usb_device.c: 2655: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 13016  0041B4  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 13017  0041B8  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13018  0041BC  0E48               	movlw	72
 13019  0041BE  6EDF               	movwf	indf2,c
 13020                           
 13021                           ; BSR set to: 0
 13022                           ;usb_device.c: 2656: pBDTEntryIn[0]->STAT.Val |= 0x80;
 13023  0041C0  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 13024  0041C4  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13025  0041C8  0E00               	movlw	0
 13026  0041CA  8EDB               	bsf	plusw2,7,c
 13027                           
 13028                           ;usb_device.c: 2657: }
 13029  0041CC  0012               	return	
 13030  0041CE                     l1798:
 13031                           
 13032                           ; BSR set to: 0
 13033                           ;usb_device.c: 2658: else
 13034                           ;usb_device.c: 2659: {
 13035                           ;usb_device.c: 2660: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
 13036                           
 13037                           ; BSR set to: 0
 13038  0041CE  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 13039  0041D2  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13040  0041D6  0E08               	movlw	8
 13041  0041D8  6EDF               	movwf	indf2,c
 13042                           
 13043                           ; BSR set to: 0
 13044                           ;usb_device.c: 2661: pBDTEntryIn[0]->STAT.Val |= 0x80;
 13045  0041DA  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 13046  0041DE  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13047  0041E2  0E00               	movlw	0
 13048  0041E4  8EDB               	bsf	plusw2,7,c
 13049                           
 13050                           ; BSR set to: 0
 13051                           ;usb_device.c: 2662: }
 13052                           ;usb_device.c: 2663: }
 13053                           ;usb_device.c: 2664: }
 13054                           
 13055                           ; BSR set to: 0
 13056  0041E6  0012               	return	
 13057  0041E8                     l1795:
 13058                           
 13059                           ; BSR set to: 0
 13060                           ;usb_device.c: 2665: else
 13061                           ;usb_device.c: 2666: {
 13062                           ;usb_device.c: 2670: if(outPipes[0].info.bits.busy == 1)
 13063  0041E8  0101               	movlb	1	; () banked
 13064  0041EA  BFCC               	btfsc	(_outPipes+3)& (0+255),7,b
 13065                           
 13066                           ; BSR set to: 1
 13067                           ;usb_device.c: 2675: }
 13068                           ;usb_device.c: 2676: outPipes[0].info.bits.busy = 0;
 13069                           
 13070                           ; BSR set to: 1
 13071  0041EC  9FCC               	bcf	(_outPipes+3)& (0+255),7,b
 13072                           
 13073                           ; BSR set to: 1
 13074                           ;usb_device.c: 2677: }
 13075                           ;usb_device.c: 2679: controlTransferState = 0;
 13076                           
 13077                           ; BSR set to: 1
 13078  0041EE  0E00               	movlw	0
 13079  0041F0  0100               	movlb	0	; () banked
 13080  0041F2  6FCC               	movwf	_controlTransferState& (0+255),b
 13081  0041F4  0012               	return	
 13082  0041F6                     __end_of_USBCtrlTrfInHandler:
 13083                           	opt stack 0
 13084                           tosu	equ	0xFFF
 13085                           tosh	equ	0xFFE
 13086                           tosl	equ	0xFFD
 13087                           pclath	equ	0xFFA
 13088                           tblptru	equ	0xFF8
 13089                           tblptrh	equ	0xFF7
 13090                           tblptrl	equ	0xFF6
 13091                           tablat	equ	0xFF5
 13092                           prodh	equ	0xFF4
 13093                           prodl	equ	0xFF3
 13094                           intcon	equ	0xFF2
 13095                           intcon2	equ	0xFF1
 13096                           intcon3	equ	0xFF0
 13097                           indf0	equ	0xFEF
 13098                           postinc0	equ	0xFEE
 13099                           plusw0	equ	0xFEB
 13100                           fsr0h	equ	0xFEA
 13101                           fsr0l	equ	0xFE9
 13102                           wreg	equ	0xFE8
 13103                           indf1	equ	0xFE7
 13104                           postinc1	equ	0xFE6
 13105                           postdec1	equ	0xFE5
 13106                           fsr1h	equ	0xFE2
 13107                           fsr1l	equ	0xFE1
 13108                           indf2	equ	0xFDF
 13109                           postinc2	equ	0xFDE
 13110                           postdec2	equ	0xFDD
 13111                           plusw2	equ	0xFDB
 13112                           fsr2h	equ	0xFDA
 13113                           fsr2l	equ	0xFD9
 13114                           status	equ	0xFD8
 13115                           
 13116 ;; *************** function _USBCtrlTrfTxService *****************
 13117 ;; Defined at:
 13118 ;;		line 1789 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 13119 ;; Parameters:    Size  Location     Type
 13120 ;;		None
 13121 ;; Auto vars:     Size  Location     Type
 13122 ;;  byteToSend      1   29[BANK0 ] unsigned char 
 13123 ;; Return value:  Size  Location     Type
 13124 ;;                  1    wreg      void 
 13125 ;; Registers used:
 13126 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 13127 ;; Tracked objects:
 13128 ;;		On entry : 0/0
 13129 ;;		On exit  : 0/0
 13130 ;;		Unchanged: 0/0
 13131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13133 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13135 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13136 ;;Total ram usage:        1 bytes
 13137 ;; Hardware stack levels used:    1
 13138 ;; Hardware stack levels required when called:   11
 13139 ;; This function calls:
 13140 ;;		Nothing
 13141 ;; This function is called by:
 13142 ;;		_USBCtrlEPAllowDataStage
 13143 ;;		_USBCtrlTrfInHandler
 13144 ;; This function uses a non-reentrant model
 13145 ;;
 13146                           
 13147                           	psect	text53
 13148  0036C2                     __ptext53:
 13149                           	opt stack 0
 13150  0036C2                     _USBCtrlTrfTxService:
 13151                           	opt stack 11
 13152                           
 13153                           ;usb_device.c: 1791: uint8_t byteToSend;
 13154                           ;usb_device.c: 1795: byteToSend = 8;
 13155                           
 13156                           ; BSR set to: 0
 13157                           ;incstack = 0
 13158  0036C2  0E08               	movlw	8
 13159  0036C4  0100               	movlb	0	; () banked
 13160  0036C6  6F7D               	movwf	USBCtrlTrfTxService@byteToSend& (0+255),b
 13161                           
 13162                           ; BSR set to: 0
 13163                           ;usb_device.c: 1796: if(inPipes[0].wCount.Val < (uint8_t)8)
 13164  0036C8  51B5               	movf	(_inPipes+5)& (0+255),w,b
 13165  0036CA  E110               	bnz	l12992
 13166  0036CC  0E08               	movlw	8
 13167  0036CE  5DB4               	subwf	(_inPipes+4)& (0+255),w,b
 13168  0036D0  B0D8               	btfsc	status,0,c
 13169  0036D2  D00C               	goto	l1700
 13170                           
 13171                           ; BSR set to: 0
 13172                           ;usb_device.c: 1797: {
 13173                           ;usb_device.c: 1798: byteToSend = inPipes[0].wCount.Val;
 13174  0036D4  C0B4  F07D         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend
 13175                           
 13176                           ; BSR set to: 0
 13177                           ;usb_device.c: 1805: if(shortPacketStatus == 0)
 13178  0036D8  51CD               	movf	_shortPacketStatus& (0+255),w,b
 13179  0036DA  A4D8               	btfss	status,2,c
 13180  0036DC  D002               	goto	l1698
 13181                           
 13182                           ; BSR set to: 0
 13183                           ;usb_device.c: 1806: {
 13184                           ;usb_device.c: 1807: shortPacketStatus = 1;
 13185  0036DE  0E01               	movlw	1
 13186  0036E0  D004               	goto	L12
 13187  0036E2                     l1698:
 13188                           
 13189                           ; BSR set to: 0
 13190                           ;usb_device.c: 1809: else if(shortPacketStatus == 1)
 13191                           
 13192                           ; BSR set to: 0
 13193  0036E2  05CD               	decf	_shortPacketStatus& (0+255),w,b
 13194  0036E4  A4D8               	btfss	status,2,c
 13195  0036E6  D002               	goto	l1700
 13196                           
 13197                           ; BSR set to: 0
 13198                           ;usb_device.c: 1810: {
 13199                           ;usb_device.c: 1811: shortPacketStatus = 2;
 13200  0036E8  0E02               	movlw	2
 13201  0036EA                     L12:
 13202  0036EA  6FCD               	movwf	_shortPacketStatus& (0+255),b
 13203  0036EC                     l1700:
 13204  0036EC                     l12992:
 13205                           
 13206                           ; BSR set to: 0
 13207                           ;usb_device.c: 1812: }
 13208                           ;usb_device.c: 1813: }
 13209                           ;usb_device.c: 1817: inPipes[0].wCount.Val -= byteToSend;
 13210  0036EC  517D               	movf	USBCtrlTrfTxService@byteToSend& (0+255),w,b
 13211  0036EE  5FB4               	subwf	(_inPipes+4)& (0+255),f,b
 13212  0036F0  0E00               	movlw	0
 13213  0036F2  5BB5               	subwfb	(_inPipes+5)& (0+255),f,b
 13214                           
 13215                           ; BSR set to: 0
 13216                           ;usb_device.c: 1822: pBDTEntryIn[0]->CNT = byteToSend;
 13217  0036F4  EE20 F001          	lfsr	2,1
 13218  0036F8  51B6               	movf	_pBDTEntryIn& (0+255),w,b
 13219  0036FA  26D9               	addwf	fsr2l,f,c
 13220  0036FC  51B7               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 13221  0036FE  22DA               	addwfc	fsr2h,f,c
 13222  003700  C07D  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 13223                           
 13224                           ; BSR set to: 0
 13225                           ;usb_device.c: 1826: pDst = ( uint8_t*)CtrlTrfData;
 13226  003704  0E38               	movlw	56
 13227  003706  0102               	movlb	2	; () banked
 13228  003708  6FD4               	movwf	_pDst& (0+255),b
 13229  00370A  0E04               	movlw	4
 13230  00370C  6FD5               	movwf	(_pDst+1)& (0+255),b
 13231                           
 13232                           ; BSR set to: 2
 13233                           ;usb_device.c: 1827: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 13234  00370E  0100               	movlb	0	; () banked
 13235  003710  A1B3               	btfss	(_inPipes+3)& (0+255),0,b
 13236  003712  D01E               	goto	l1702
 13237  003714  D03E               	goto	l1706
 13238  003716                     
 13239                           ; BSR set to: 0
 13240                           ;usb_device.c: 1830: {
 13241                           ;usb_device.c: 1831: *pDst++ = *inPipes[0].pSrc.bRom++;
 13242                           
 13243                           ; BSR set to: 0
 13244  003716  C0B0  FFF6         	movff	_inPipes,tblptrl
 13245  00371A  C0B1  FFF7         	movff	_inPipes+1,tblptrh
 13246  00371E  6AF8               	clrf	tblptru,c
 13247  003720  C2D4  FFD9         	movff	_pDst,fsr2l
 13248  003724  C2D5  FFDA         	movff	_pDst+1,fsr2h
 13249  003728  0E0E               	movlw	(high __ramtop+-1)
 13250  00372A  64F7               	cpfsgt	tblptrh,c
 13251  00372C  D003               	bra	u11637
 13252  00372E  0008               	tblrd		*
 13253  003730  50F5               	movf	tablat,w,c
 13254  003732  D005               	bra	u11630
 13255  003734                     u11637:
 13256  003734  CFF6 FFE9          	movff	tblptrl,fsr0l
 13257  003738  CFF7 FFEA          	movff	tblptrh,fsr0h
 13258  00373C  50EF               	movf	indf0,w,c
 13259  00373E                     u11630:
 13260  00373E  6EDF               	movwf	indf2,c
 13261  003740  0100               	movlb	0	; () banked
 13262  003742  4BB0               	infsnz	_inPipes& (0+255),f,b
 13263  003744  2BB1               	incf	(_inPipes+1)& (0+255),f,b
 13264                           
 13265                           ; BSR set to: 0
 13266  003746  0102               	movlb	2	; () banked
 13267  003748  4BD4               	infsnz	_pDst& (0+255),f,b
 13268  00374A  2BD5               	incf	(_pDst+1)& (0+255),f,b
 13269                           
 13270                           ; BSR set to: 2
 13271                           ;usb_device.c: 1832: byteToSend--;
 13272  00374C  0100               	movlb	0	; () banked
 13273  00374E  077D               	decf	USBCtrlTrfTxService@byteToSend& (0+255),f,b
 13274  003750                     l1702:
 13275                           
 13276                           ; BSR set to: 0
 13277                           
 13278                           ; BSR set to: 0
 13279  003750  517D               	movf	USBCtrlTrfTxService@byteToSend& (0+255),w,b
 13280  003752  B4D8               	btfsc	status,2,c
 13281  003754  0012               	return	
 13282  003756  D7DF               	goto	l1703
 13283  003758                     
 13284                           ; BSR set to: 0
 13285                           ;usb_device.c: 1838: {
 13286                           ;usb_device.c: 1839: *pDst++ = *inPipes[0].pSrc.bRam++;
 13287                           
 13288                           ; BSR set to: 0
 13289  003758  C0B0  FFF6         	movff	_inPipes,tblptrl
 13290  00375C  C0B1  FFF7         	movff	_inPipes+1,tblptrh
 13291  003760  6AF8               	clrf	tblptru,c
 13292  003762  C2D4  FFD9         	movff	_pDst,fsr2l
 13293  003766  C2D5  FFDA         	movff	_pDst+1,fsr2h
 13294  00376A  0E0E               	movlw	(high __ramtop+-1)
 13295  00376C  64F7               	cpfsgt	tblptrh,c
 13296  00376E  D003               	bra	u11657
 13297  003770  0008               	tblrd		*
 13298  003772  50F5               	movf	tablat,w,c
 13299  003774  D005               	bra	u11650
 13300  003776                     u11657:
 13301  003776  CFF6 FFE9          	movff	tblptrl,fsr0l
 13302  00377A  CFF7 FFEA          	movff	tblptrh,fsr0h
 13303  00377E  50EF               	movf	indf0,w,c
 13304  003780                     u11650:
 13305  003780  6EDF               	movwf	indf2,c
 13306  003782  0100               	movlb	0	; () banked
 13307  003784  4BB0               	infsnz	_inPipes& (0+255),f,b
 13308  003786  2BB1               	incf	(_inPipes+1)& (0+255),f,b
 13309                           
 13310                           ; BSR set to: 0
 13311  003788  0102               	movlb	2	; () banked
 13312  00378A  4BD4               	infsnz	_pDst& (0+255),f,b
 13313  00378C  2BD5               	incf	(_pDst+1)& (0+255),f,b
 13314                           
 13315                           ; BSR set to: 2
 13316                           ;usb_device.c: 1840: byteToSend--;
 13317  00378E  0100               	movlb	0	; () banked
 13318  003790  077D               	decf	USBCtrlTrfTxService@byteToSend& (0+255),f,b
 13319  003792                     l1706:
 13320                           
 13321                           ; BSR set to: 0
 13322                           
 13323                           ; BSR set to: 0
 13324  003792  517D               	movf	USBCtrlTrfTxService@byteToSend& (0+255),w,b
 13325  003794  B4D8               	btfsc	status,2,c
 13326  003796  0012               	return	
 13327  003798  D7DF               	goto	l1707
 13328  00379A                     __end_of_USBCtrlTrfTxService:
 13329                           	opt stack 0
 13330                           tosu	equ	0xFFF
 13331                           tosh	equ	0xFFE
 13332                           tosl	equ	0xFFD
 13333                           pclath	equ	0xFFA
 13334                           tblptru	equ	0xFF8
 13335                           tblptrh	equ	0xFF7
 13336                           tblptrl	equ	0xFF6
 13337                           tablat	equ	0xFF5
 13338                           prodh	equ	0xFF4
 13339                           prodl	equ	0xFF3
 13340                           intcon	equ	0xFF2
 13341                           intcon2	equ	0xFF1
 13342                           intcon3	equ	0xFF0
 13343                           indf0	equ	0xFEF
 13344                           postinc0	equ	0xFEE
 13345                           plusw0	equ	0xFEB
 13346                           fsr0h	equ	0xFEA
 13347                           fsr0l	equ	0xFE9
 13348                           wreg	equ	0xFE8
 13349                           indf1	equ	0xFE7
 13350                           postinc1	equ	0xFE6
 13351                           postdec1	equ	0xFE5
 13352                           fsr1h	equ	0xFE2
 13353                           fsr1l	equ	0xFE1
 13354                           indf2	equ	0xFDF
 13355                           postinc2	equ	0xFDE
 13356                           postdec2	equ	0xFDD
 13357                           plusw2	equ	0xFDB
 13358                           fsr2h	equ	0xFDA
 13359                           fsr2l	equ	0xFD9
 13360                           status	equ	0xFD8
 13361                           
 13362 ;; *************** function _CDCTxService *****************
 13363 ;; Defined at:
 13364 ;;		line 839 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 13365 ;; Parameters:    Size  Location     Type
 13366 ;;		None
 13367 ;; Auto vars:     Size  Location     Type
 13368 ;;  byte_to_send    1   37[BANK0 ] unsigned char 
 13369 ;;  i               1   36[BANK0 ] unsigned char 
 13370 ;; Return value:  Size  Location     Type
 13371 ;;                  1    wreg      void 
 13372 ;; Registers used:
 13373 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13374 ;; Tracked objects:
 13375 ;;		On entry : 0/0
 13376 ;;		On exit  : 0/0
 13377 ;;		Unchanged: 0/0
 13378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13379 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13380 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13382 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13383 ;;Total ram usage:        2 bytes
 13384 ;; Hardware stack levels used:    1
 13385 ;; Hardware stack levels required when called:   12
 13386 ;; This function calls:
 13387 ;;		_USBTransferOnePacket
 13388 ;; This function is called by:
 13389 ;;		_UsbDevice_MainTask
 13390 ;; This function uses a non-reentrant model
 13391 ;;
 13392                           
 13393                           	psect	text54
 13394  002824                     __ptext54:
 13395                           	opt stack 0
 13396  002824                     _CDCTxService:
 13397                           	opt stack 15
 13398                           
 13399                           ;usb_device_cdc.c: 841: uint8_t byte_to_send;
 13400                           ;usb_device_cdc.c: 842: uint8_t i;
 13401                           ;usb_device_cdc.c: 844: ;
 13402                           ;usb_device_cdc.c: 846: {};
 13403                           ;usb_device_cdc.c: 848: if(((CDCDataInHandle != 0x0000) && ((*(volatile uint8_t*)CDCData
      +                          InHandle & 0x80) != 0x00)))
 13404                           
 13405                           ; BSR set to: 0
 13406                           ;incstack = 0
 13407  002824  0101               	movlb	1	; () banked
 13408  002826  51D1               	movf	_CDCDataInHandle& (0+255),w,b
 13409  002828  11D2               	iorwf	(_CDCDataInHandle+1)& (0+255),w,b
 13410  00282A  B4D8               	btfsc	status,2,c
 13411  00282C  D006               	goto	l1952
 13412                           
 13413                           ; BSR set to: 1
 13414  00282E  C1D1  FFD9         	movff	_CDCDataInHandle,fsr2l
 13415  002832  C1D2  FFDA         	movff	_CDCDataInHandle+1,fsr2h
 13416  002836  BEDF               	btfsc	indf2,7,c
 13417  002838  0012               	return	
 13418  00283A                     l1952:
 13419                           
 13420                           ; BSR set to: 1
 13421                           ;usb_device_cdc.c: 852: }
 13422                           ;usb_device_cdc.c: 859: if(cdc_trf_state == 3)
 13423                           
 13424                           ; BSR set to: 1
 13425  00283A  0E03               	movlw	3
 13426  00283C  0100               	movlb	0	; () banked
 13427  00283E  19C8               	xorwf	_cdc_trf_state& (0+255),w,b
 13428  002840  A4D8               	btfss	status,2,c
 13429  002842  D002               	goto	l1954
 13430                           
 13431                           ; BSR set to: 0
 13432                           ;usb_device_cdc.c: 860: cdc_trf_state = 0;
 13433  002844  0E00               	movlw	0
 13434  002846  6FC8               	movwf	_cdc_trf_state& (0+255),b
 13435  002848                     l1954:
 13436                           
 13437                           ; BSR set to: 0
 13438                           ;usb_device_cdc.c: 865: if(cdc_trf_state == 0)
 13439  002848  51C8               	movf	_cdc_trf_state& (0+255),w,b
 13440  00284A  B4D8               	btfsc	status,2,c
 13441  00284C  0012               	return	
 13442                           
 13443                           ; BSR set to: 0
 13444                           ;usb_device_cdc.c: 869: }
 13445                           ;usb_device_cdc.c: 874: if(cdc_trf_state == 2)
 13446                           
 13447                           ; BSR set to: 0
 13448                           
 13449                           ; BSR set to: 0
 13450                           ;usb_device_cdc.c: 866: {
 13451                           ;usb_device_cdc.c: 867: ;
 13452                           ;usb_device_cdc.c: 868: return;
 13453  00284E  0E02               	movlw	2
 13454  002850  19C8               	xorwf	_cdc_trf_state& (0+255),w,b
 13455  002852  A4D8               	btfss	status,2,c
 13456  002854  D013               	goto	l1956
 13457                           
 13458                           ; BSR set to: 0
 13459                           ;usb_device_cdc.c: 875: {
 13460                           ;usb_device_cdc.c: 876: CDCDataInHandle = USBTransferOnePacket(2,1,(0),0);
 13461  002856  0E01               	movlw	1
 13462  002858  6F7D               	movwf	USBTransferOnePacket@dir& (0+255),b
 13463  00285A  0E00               	movlw	0
 13464  00285C  6F7E               	movwf	USBTransferOnePacket@data& (0+255),b
 13465  00285E  0E00               	movlw	0
 13466  002860  6F7F               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 13467  002862  0E00               	movlw	0
 13468  002864  6F80               	movwf	USBTransferOnePacket@len& (0+255),b
 13469  002866  0E02               	movlw	2
 13470  002868  ECFB  F020         	call	_USBTransferOnePacket
 13471  00286C  C07D  F1D1         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 13472  002870  C07E  F1D2         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 13473                           
 13474                           ;usb_device_cdc.c: 878: cdc_trf_state = 3;
 13475  002874  0E03               	movlw	3
 13476  002876  0100               	movlb	0	; () banked
 13477  002878  6FC8               	movwf	_cdc_trf_state& (0+255),b
 13478                           
 13479                           ;usb_device_cdc.c: 879: }
 13480  00287A  0012               	return	
 13481  00287C                     l1956:
 13482                           
 13483                           ; BSR set to: 0
 13484                           ;usb_device_cdc.c: 880: else if(cdc_trf_state == 1)
 13485                           
 13486                           ; BSR set to: 0
 13487  00287C  05C8               	decf	_cdc_trf_state& (0+255),w,b
 13488  00287E  A4D8               	btfss	status,2,c
 13489  002880  0012               	return	
 13490                           
 13491                           ; BSR set to: 0
 13492                           ;usb_device_cdc.c: 881: {
 13493                           ;usb_device_cdc.c: 885: if(cdc_tx_len > sizeof(cdc_data_tx))
 13494  002882  0E40               	movlw	64
 13495  002884  65C7               	cpfsgt	_cdc_tx_len& (0+255),b
 13496  002886  D003               	goto	l1959
 13497                           
 13498                           ; BSR set to: 0
 13499                           ;usb_device_cdc.c: 886: byte_to_send = sizeof(cdc_data_tx);
 13500  002888  0E40               	movlw	64
 13501  00288A  6F85               	movwf	CDCTxService@byte_to_send& (0+255),b
 13502  00288C  D002               	goto	l1960
 13503  00288E                     l1959:
 13504                           
 13505                           ; BSR set to: 0
 13506                           ;usb_device_cdc.c: 887: else
 13507                           ;usb_device_cdc.c: 888: byte_to_send = cdc_tx_len;
 13508  00288E  C0C7  F085         	movff	_cdc_tx_len,CDCTxService@byte_to_send
 13509  002892                     l1960:
 13510                           
 13511                           ; BSR set to: 0
 13512                           ;usb_device_cdc.c: 893: cdc_tx_len = cdc_tx_len - byte_to_send;
 13513                           
 13514                           ; BSR set to: 0
 13515  002892  5185               	movf	CDCTxService@byte_to_send& (0+255),w,b
 13516  002894  0800               	sublw	0
 13517  002896  25C7               	addwf	_cdc_tx_len& (0+255),w,b
 13518  002898  6FC7               	movwf	_cdc_tx_len& (0+255),b
 13519                           
 13520                           ;usb_device_cdc.c: 895: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
 13521  00289A  0EB6               	movlw	low _cdc_data_tx
 13522  00289C  0102               	movlb	2	; () banked
 13523  00289E  6FC8               	movwf	_pCDCDst& (0+255),b
 13524  0028A0  0E07               	movlw	high _cdc_data_tx
 13525  0028A2  6FC9               	movwf	(_pCDCDst+1)& (0+255),b
 13526                           
 13527                           ; BSR set to: 2
 13528                           ;usb_device_cdc.c: 897: i = byte_to_send;
 13529  0028A4  C085  F084         	movff	CDCTxService@byte_to_send,CDCTxService@i
 13530                           
 13531                           ; BSR set to: 2
 13532                           ;usb_device_cdc.c: 898: if(cdc_mem_type == 0x00)
 13533  0028A8  0101               	movlb	1	; () banked
 13534  0028AA  51DD               	movf	_cdc_mem_type& (0+255),w,b
 13535  0028AC  B4D8               	btfsc	status,2,c
 13536  0028AE  D01D               	goto	l1962
 13537  0028B0  D03D               	goto	l1966
 13538  0028B2                     
 13539                           ;usb_device_cdc.c: 901: {
 13540                           ;usb_device_cdc.c: 902: *pCDCDst.bRam = *pCDCSrc.bRom;
 13541                           
 13542                           ; BSR set to: 1
 13543  0028B2  C2CB  FFF6         	movff	_pCDCSrc,tblptrl
 13544  0028B6  C2CC  FFF7         	movff	_pCDCSrc+1,tblptrh
 13545  0028BA  6AF8               	clrf	tblptru,c
 13546  0028BC  C2C8  FFD9         	movff	_pCDCDst,fsr2l
 13547  0028C0  C2C9  FFDA         	movff	_pCDCDst+1,fsr2h
 13548  0028C4  0E0E               	movlw	(high __ramtop+-1)
 13549  0028C6  64F7               	cpfsgt	tblptrh,c
 13550  0028C8  D003               	bra	u15787
 13551  0028CA  0008               	tblrd		*
 13552  0028CC  50F5               	movf	tablat,w,c
 13553  0028CE  D005               	bra	u15780
 13554  0028D0                     u15787:
 13555  0028D0  CFF6 FFE9          	movff	tblptrl,fsr0l
 13556  0028D4  CFF7 FFEA          	movff	tblptrh,fsr0h
 13557  0028D8  50EF               	movf	indf0,w,c
 13558  0028DA                     u15780:
 13559  0028DA  6EDF               	movwf	indf2,c
 13560                           
 13561                           ;usb_device_cdc.c: 903: pCDCDst.bRam++;
 13562  0028DC  0102               	movlb	2	; () banked
 13563  0028DE  4BC8               	infsnz	_pCDCDst& (0+255),f,b
 13564  0028E0  2BC9               	incf	(_pCDCDst+1)& (0+255),f,b
 13565                           
 13566                           ; BSR set to: 2
 13567                           ;usb_device_cdc.c: 904: pCDCSrc.bRom++;
 13568  0028E2  4BCB               	infsnz	_pCDCSrc& (0+255),f,b
 13569  0028E4  2BCC               	incf	(_pCDCSrc+1)& (0+255),f,b
 13570                           
 13571                           ; BSR set to: 2
 13572                           ;usb_device_cdc.c: 905: i--;
 13573  0028E6  0100               	movlb	0	; () banked
 13574  0028E8  0784               	decf	CDCTxService@i& (0+255),f,b
 13575  0028EA                     l1962:
 13576                           
 13577                           ; BSR set to: 0
 13578  0028EA  0100               	movlb	0	; () banked
 13579  0028EC  5184               	movf	CDCTxService@i& (0+255),w,b
 13580  0028EE  B4D8               	btfsc	status,2,c
 13581  0028F0  D021               	goto	u15810
 13582  0028F2  D7DF               	goto	l1963
 13583  0028F4                     
 13584                           ; BSR set to: 0
 13585                           ;usb_device_cdc.c: 911: {
 13586                           ;usb_device_cdc.c: 912: *pCDCDst.bRam = *pCDCSrc.bRam;
 13587                           
 13588                           ; BSR set to: 0
 13589  0028F4  C2CB  FFF6         	movff	_pCDCSrc,tblptrl
 13590  0028F8  C2CC  FFF7         	movff	_pCDCSrc+1,tblptrh
 13591  0028FC  6AF8               	clrf	tblptru,c
 13592  0028FE  C2C8  FFD9         	movff	_pCDCDst,fsr2l
 13593  002902  C2C9  FFDA         	movff	_pCDCDst+1,fsr2h
 13594  002906  0E0E               	movlw	(high __ramtop+-1)
 13595  002908  64F7               	cpfsgt	tblptrh,c
 13596  00290A  D003               	bra	u15807
 13597  00290C  0008               	tblrd		*
 13598  00290E  50F5               	movf	tablat,w,c
 13599  002910  D005               	bra	u15800
 13600  002912                     u15807:
 13601  002912  CFF6 FFE9          	movff	tblptrl,fsr0l
 13602  002916  CFF7 FFEA          	movff	tblptrh,fsr0h
 13603  00291A  50EF               	movf	indf0,w,c
 13604  00291C                     u15800:
 13605  00291C  6EDF               	movwf	indf2,c
 13606                           
 13607                           ;usb_device_cdc.c: 913: pCDCDst.bRam++;
 13608  00291E  0102               	movlb	2	; () banked
 13609  002920  4BC8               	infsnz	_pCDCDst& (0+255),f,b
 13610  002922  2BC9               	incf	(_pCDCDst+1)& (0+255),f,b
 13611                           
 13612                           ; BSR set to: 2
 13613                           ;usb_device_cdc.c: 914: pCDCSrc.bRam++;
 13614  002924  4BCB               	infsnz	_pCDCSrc& (0+255),f,b
 13615  002926  2BCC               	incf	(_pCDCSrc+1)& (0+255),f,b
 13616                           
 13617                           ; BSR set to: 2
 13618                           ;usb_device_cdc.c: 915: i--;
 13619  002928  0100               	movlb	0	; () banked
 13620  00292A  0784               	decf	CDCTxService@i& (0+255),f,b
 13621  00292C                     l1966:
 13622                           
 13623                           ; BSR set to: 0
 13624  00292C  0100               	movlb	0	; () banked
 13625  00292E  5184               	movf	CDCTxService@i& (0+255),w,b
 13626  002930  A4D8               	btfss	status,2,c
 13627  002932  D7E0               	goto	l1967
 13628  002934                     u15810:
 13629                           
 13630                           ; BSR set to: 0
 13631                           ;usb_device_cdc.c: 916: }
 13632                           ;usb_device_cdc.c: 917: }
 13633                           ;usb_device_cdc.c: 923: if(cdc_tx_len == 0)
 13634                           
 13635                           ; BSR set to: 0
 13636                           
 13637                           ; BSR set to: 0
 13638  002934  51C7               	movf	_cdc_tx_len& (0+255),w,b
 13639  002936  A4D8               	btfss	status,2,c
 13640  002938  D008               	goto	l1971
 13641                           
 13642                           ; BSR set to: 0
 13643                           ;usb_device_cdc.c: 924: {
 13644                           ;usb_device_cdc.c: 925: if(byte_to_send == 64)
 13645  00293A  0E40               	movlw	64
 13646  00293C  1985               	xorwf	CDCTxService@byte_to_send& (0+255),w,b
 13647  00293E  A4D8               	btfss	status,2,c
 13648  002940  D002               	goto	l1970
 13649                           
 13650                           ; BSR set to: 0
 13651                           ;usb_device_cdc.c: 926: cdc_trf_state = 2;
 13652  002942  0E02               	movlw	2
 13653  002944  D001               	goto	L13
 13654  002946                     l1970:
 13655                           
 13656                           ; BSR set to: 0
 13657                           ;usb_device_cdc.c: 927: else
 13658                           ;usb_device_cdc.c: 928: cdc_trf_state = 3;
 13659                           
 13660                           ; BSR set to: 0
 13661  002946  0E03               	movlw	3
 13662  002948                     L13:
 13663  002948  6FC8               	movwf	_cdc_trf_state& (0+255),b
 13664  00294A                     l1971:
 13665                           
 13666                           ; BSR set to: 0
 13667                           ;usb_device_cdc.c: 929: }
 13668                           ;usb_device_cdc.c: 930: CDCDataInHandle = USBTransferOnePacket(2,1,(uint8_t*)&cdc_data_t
      +                          x,byte_to_send);
 13669                           
 13670                           ; BSR set to: 0
 13671                           
 13672                           ; BSR set to: 0
 13673  00294A  0E01               	movlw	1
 13674  00294C  6F7D               	movwf	USBTransferOnePacket@dir& (0+255),b
 13675  00294E  0EB6               	movlw	low _cdc_data_tx
 13676  002950  6F7E               	movwf	USBTransferOnePacket@data& (0+255),b
 13677  002952  0E07               	movlw	high _cdc_data_tx
 13678  002954  6F7F               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 13679  002956  C085  F080         	movff	CDCTxService@byte_to_send,USBTransferOnePacket@len
 13680  00295A  0E02               	movlw	2
 13681  00295C  ECFB  F020         	call	_USBTransferOnePacket
 13682  002960  C07D  F1D1         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 13683  002964  C07E  F1D2         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 13684  002968  0012               	return	
 13685  00296A                     __end_of_CDCTxService:
 13686                           	opt stack 0
 13687                           tosu	equ	0xFFF
 13688                           tosh	equ	0xFFE
 13689                           tosl	equ	0xFFD
 13690                           pclath	equ	0xFFA
 13691                           tblptru	equ	0xFF8
 13692                           tblptrh	equ	0xFF7
 13693                           tblptrl	equ	0xFF6
 13694                           tablat	equ	0xFF5
 13695                           prodh	equ	0xFF4
 13696                           prodl	equ	0xFF3
 13697                           intcon	equ	0xFF2
 13698                           intcon2	equ	0xFF1
 13699                           intcon3	equ	0xFF0
 13700                           indf0	equ	0xFEF
 13701                           postinc0	equ	0xFEE
 13702                           plusw0	equ	0xFEB
 13703                           fsr0h	equ	0xFEA
 13704                           fsr0l	equ	0xFE9
 13705                           wreg	equ	0xFE8
 13706                           indf1	equ	0xFE7
 13707                           postinc1	equ	0xFE6
 13708                           postdec1	equ	0xFE5
 13709                           fsr1h	equ	0xFE2
 13710                           fsr1l	equ	0xFE1
 13711                           indf2	equ	0xFDF
 13712                           postinc2	equ	0xFDE
 13713                           postdec2	equ	0xFDD
 13714                           plusw2	equ	0xFDB
 13715                           fsr2h	equ	0xFDA
 13716                           fsr2l	equ	0xFD9
 13717                           status	equ	0xFD8
 13718                           
 13719 ;; *************** function _Term_MainSm *****************
 13720 ;; Defined at:
 13721 ;;		line 707 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/term.c"
 13722 ;; Parameters:    Size  Location     Type
 13723 ;;		None
 13724 ;; Auto vars:     Size  Location     Type
 13725 ;;  FwkBuildStr     4   58[BANK1 ] unsigned char [4]
 13726 ;;  FwkMinorStr     4   54[BANK1 ] unsigned char [4]
 13727 ;;  FwkMajorStr     4   50[BANK1 ] unsigned char [4]
 13728 ;;  FwkBuildYear    4    0        unsigned char [4]
 13729 ;;  FwkBuildMont    4    0        unsigned char [4]
 13730 ;;  FwkBuildDayS    4    0        unsigned char [4]
 13731 ;; Return value:  Size  Location     Type
 13732 ;;                  1    wreg      void 
 13733 ;; Registers used:
 13734 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13735 ;; Tracked objects:
 13736 ;;		On entry : 0/0
 13737 ;;		On exit  : 0/0
 13738 ;;		Unchanged: 0/0
 13739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13740 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13741 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13742 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13743 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13744 ;;Total ram usage:       12 bytes
 13745 ;; Hardware stack levels used:    1
 13746 ;; Hardware stack levels required when called:   16
 13747 ;; This function calls:
 13748 ;;		_OsTmr_GetTimerStatus
 13749 ;;		_OsTmr_StartTimer
 13750 ;;		_Terminal
 13751 ;;		_memset
 13752 ;;		_putUSBUSART
 13753 ;;		_sprintf
 13754 ;;		_strcat
 13755 ;;		_strcpy
 13756 ;;		_strlen
 13757 ;;		_utoa
 13758 ;; This function is called by:
 13759 ;;		_Term_MainTask
 13760 ;; This function uses a non-reentrant model
 13761 ;;
 13762                           
 13763                           	psect	text55
 13764  0010B6                     __ptext55:
 13765                           	opt stack 0
 13766  0010B6                     _Term_MainSm:
 13767                           	opt stack 11
 13768                           
 13769                           ;term.c: 709: static TermMainSmStateType TermMainSmState = Term_StartTmr;
 13770                           ;term.c: 710: static SwTimerType TermDelay = { 1u, SwTimerExpired, 0, 0, DelayNotExpired
      +                          , };
 13771                           ;term.c: 711: static UINT8 Data[50];
 13772                           ;term.c: 712: UINT8 FwkMajorStr[4];
 13773                           ;term.c: 713: UINT8 FwkMinorStr[4];
 13774                           ;term.c: 714: UINT8 FwkBuildStr[4];
 13775                           ;term.c: 715: UINT8 FwkBuildDayStr[4];
 13776                           ;term.c: 716: UINT8 FwkBuildMonthStr[4];
 13777                           ;term.c: 717: UINT8 FwkBuildYearStr[4];
 13778                           ;term.c: 719: switch (TermMainSmState)
 13779                           
 13780                           ;incstack = 0
 13781  0010B6  D133               	goto	l2465
 13782  0010B8                     
 13783                           ;term.c: 723: OsTmr_StartTimer(&TermDelay,2000);
 13784  0010B8  0ED4               	movlw	low Term_MainSm@TermDelay
 13785  0010BA  0100               	movlb	0	; () banked
 13786  0010BC  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 13787  0010BE  0E03               	movlw	high Term_MainSm@TermDelay
 13788  0010C0  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 13789  0010C2  0ED0               	movlw	208
 13790  0010C4  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 13791  0010C6  0E07               	movlw	7
 13792  0010C8  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 13793  0010CA  0E00               	movlw	0
 13794  0010CC  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 13795  0010CE  0E00               	movlw	0
 13796  0010D0  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 13797  0010D2  EC34  F02C         	call	_OsTmr_StartTimer	;wreg free
 13798                           
 13799                           ;term.c: 725: TermMainSmState = Term_InitDelay;
 13800  0010D6  0E01               	movlw	1
 13801  0010D8  0102               	movlb	2	; () banked
 13802  0010DA  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13803                           
 13804                           ;term.c: 726: break;
 13805  0010DC  0012               	return	
 13806  0010DE                     
 13807                           ; BSR set to: 2
 13808                           ;term.c: 730: if (OsTmr_GetTimerStatus(&TermDelay) == SwTimerExpired)
 13809                           
 13810                           ; BSR set to: 2
 13811  0010DE  0ED4               	movlw	low Term_MainSm@TermDelay
 13812  0010E0  0100               	movlb	0	; () banked
 13813  0010E2  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 13814  0010E4  0E03               	movlw	high Term_MainSm@TermDelay
 13815  0010E6  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 13816  0010E8  ECE9  F027         	call	_OsTmr_GetTimerStatus	;wreg free
 13817  0010EC  06E8               	decf	wreg,f,c
 13818  0010EE  A4D8               	btfss	status,2,c
 13819  0010F0  0012               	return	
 13820                           
 13821                           ;term.c: 731: {
 13822                           ;term.c: 733: TermMainSmState = Term_InitState;
 13823  0010F2  0E02               	movlw	2
 13824  0010F4  0102               	movlb	2	; () banked
 13825  0010F6  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13826                           
 13827                           ; BSR set to: 2
 13828                           ;term.c: 734: }
 13829                           ;term.c: 735: break;
 13830  0010F8  0012               	return	
 13831  0010FA                     
 13832                           ; BSR set to: 2
 13833                           ;term.c: 739: if((USBDeviceState < CONFIGURED_STATE)||(UCONbits.SUSPND == 1))
 13834                           
 13835                           ; BSR set to: 2
 13836  0010FA  0E1F               	movlw	31
 13837  0010FC  0100               	movlb	0	; () banked
 13838  0010FE  65CE               	cpfsgt	_USBDeviceState& (0+255),b
 13839  001100  0012               	return	
 13840                           
 13841                           ; BSR set to: 0
 13842  001102  B265               	btfsc	3941,1,c	;volatile
 13843  001104  0012               	return	
 13844                           
 13845                           ; BSR set to: 0
 13846                           ;term.c: 743: else
 13847                           ;term.c: 744: {
 13848                           ;term.c: 746: TermMainSmState = Term_WelcomeState;
 13849                           
 13850                           ; BSR set to: 0
 13851                           
 13852                           ; BSR set to: 0
 13853                           ;term.c: 740: {
 13854                           ;term.c: 742: }
 13855  001106  0E03               	movlw	3
 13856  001108  0102               	movlb	2	; () banked
 13857  00110A  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13858                           
 13859                           ; BSR set to: 2
 13860                           ;term.c: 747: }
 13861                           ;term.c: 748: break;
 13862  00110C  0012               	return	
 13863  00110E                     
 13864                           ; BSR set to: 2
 13865                           ;term.c: 752: if((cdc_trf_state == 0))
 13866                           
 13867                           ; BSR set to: 2
 13868  00110E  0100               	movlb	0	; () banked
 13869  001110  51C8               	movf	_cdc_trf_state& (0+255),w,b
 13870  001112  A4D8               	btfss	status,2,c
 13871  001114  0012               	return	
 13872                           
 13873                           ; BSR set to: 0
 13874                           ;term.c: 753: {
 13875                           ;term.c: 755: putUSBUSART((void*)Welcome,(sizeof(Welcome) - 1));
 13876  001116  0E22               	movlw	low _Welcome
 13877  001118  6F83               	movwf	putUSBUSART@data& (0+255),b
 13878  00111A  0EFD               	movlw	high _Welcome
 13879  00111C  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 13880  00111E  0E88               	movlw	136
 13881  001120  6F85               	movwf	putUSBUSART@length& (0+255),b
 13882  001122  ECDA  F033         	call	_putUSBUSART	;wreg free
 13883                           
 13884                           ;term.c: 757: TermMainSmState = Term_InstDescState;
 13885  001126  0E04               	movlw	4
 13886  001128  0102               	movlb	2	; () banked
 13887  00112A  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13888                           
 13889                           ; BSR set to: 2
 13890                           ;term.c: 758: }
 13891                           ;term.c: 759: break;
 13892  00112C  0012               	return	
 13893  00112E                     
 13894                           ; BSR set to: 2
 13895                           ;term.c: 763: if((cdc_trf_state == 0))
 13896                           
 13897                           ; BSR set to: 2
 13898  00112E  0100               	movlb	0	; () banked
 13899  001130  51C8               	movf	_cdc_trf_state& (0+255),w,b
 13900  001132  A4D8               	btfss	status,2,c
 13901  001134  0012               	return	
 13902                           
 13903                           ; BSR set to: 0
 13904                           ;term.c: 764: {
 13905                           ;term.c: 766: putUSBUSART((void*)MsgFormat,(sizeof(MsgFormat) - 1));
 13906  001136  0E32               	movlw	low _MsgFormat
 13907  001138  6F83               	movwf	putUSBUSART@data& (0+255),b
 13908  00113A  0EFC               	movlw	high _MsgFormat
 13909  00113C  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 13910  00113E  0EEF               	movlw	239
 13911  001140  6F85               	movwf	putUSBUSART@length& (0+255),b
 13912  001142  ECDA  F033         	call	_putUSBUSART	;wreg free
 13913                           
 13914                           ;term.c: 768: TermMainSmState = Term_FwkVerState;
 13915  001146  0E05               	movlw	5
 13916  001148  0102               	movlb	2	; () banked
 13917  00114A  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13918                           
 13919                           ; BSR set to: 2
 13920                           ;term.c: 769: }
 13921                           ;term.c: 770: break;
 13922  00114C  0012               	return	
 13923  00114E                     
 13924                           ; BSR set to: 2
 13925                           ;term.c: 774: if((cdc_trf_state == 0))
 13926                           
 13927                           ; BSR set to: 2
 13928  00114E  0100               	movlb	0	; () banked
 13929  001150  51C8               	movf	_cdc_trf_state& (0+255),w,b
 13930  001152  A4D8               	btfss	status,2,c
 13931  001154  0012               	return	
 13932                           
 13933                           ; BSR set to: 0
 13934                           ;term.c: 775: {
 13935                           ;term.c: 777: memset(Data,0,50);
 13936  001156  0E61               	movlw	low Term_MainSm@Data
 13937  001158  6F7D               	movwf	memset@p1& (0+255),b
 13938  00115A  0E04               	movlw	high Term_MainSm@Data
 13939  00115C  6F7E               	movwf	(memset@p1+1)& (0+255),b
 13940  00115E  0E00               	movlw	0
 13941  001160  6F80               	movwf	(memset@c+1)& (0+255),b
 13942  001162  0E00               	movlw	0
 13943  001164  6F7F               	movwf	memset@c& (0+255),b
 13944  001166  0E00               	movlw	0
 13945  001168  6F82               	movwf	(memset@n+1)& (0+255),b
 13946  00116A  0E32               	movlw	50
 13947  00116C  6F81               	movwf	memset@n& (0+255),b
 13948  00116E  EC82  F032         	call	_memset	;wreg free
 13949                           
 13950                           ;term.c: 779: utoa(FwkMajorStr,1,10);
 13951  001172  0E32               	movlw	low Term_MainSm@FwkMajorStr
 13952  001174  0100               	movlb	0	; () banked
 13953  001176  6F8A               	movwf	utoa@buf& (0+255),b
 13954  001178  0E01               	movlw	high Term_MainSm@FwkMajorStr
 13955  00117A  6F8B               	movwf	(utoa@buf+1)& (0+255),b
 13956  00117C  0E00               	movlw	0
 13957  00117E  6F8D               	movwf	(utoa@val+1)& (0+255),b
 13958  001180  0E01               	movlw	1
 13959  001182  6F8C               	movwf	utoa@val& (0+255),b
 13960  001184  0E00               	movlw	0
 13961  001186  6F8F               	movwf	(utoa@base+1)& (0+255),b
 13962  001188  0E0A               	movlw	10
 13963  00118A  6F8E               	movwf	utoa@base& (0+255),b
 13964  00118C  ECBE  F022         	call	_utoa	;wreg free
 13965                           
 13966                           ;term.c: 780: utoa(FwkMinorStr,2,10);
 13967  001190  0E36               	movlw	low Term_MainSm@FwkMinorStr
 13968  001192  0100               	movlb	0	; () banked
 13969  001194  6F8A               	movwf	utoa@buf& (0+255),b
 13970  001196  0E01               	movlw	high Term_MainSm@FwkMinorStr
 13971  001198  6F8B               	movwf	(utoa@buf+1)& (0+255),b
 13972  00119A  0E00               	movlw	0
 13973  00119C  6F8D               	movwf	(utoa@val+1)& (0+255),b
 13974  00119E  0E02               	movlw	2
 13975  0011A0  6F8C               	movwf	utoa@val& (0+255),b
 13976  0011A2  0E00               	movlw	0
 13977  0011A4  6F8F               	movwf	(utoa@base+1)& (0+255),b
 13978  0011A6  0E0A               	movlw	10
 13979  0011A8  6F8E               	movwf	utoa@base& (0+255),b
 13980  0011AA  ECBE  F022         	call	_utoa	;wreg free
 13981                           
 13982                           ;term.c: 781: utoa(FwkBuildStr,0,10);
 13983  0011AE  0E3A               	movlw	low Term_MainSm@FwkBuildStr
 13984  0011B0  0100               	movlb	0	; () banked
 13985  0011B2  6F8A               	movwf	utoa@buf& (0+255),b
 13986  0011B4  0E01               	movlw	high Term_MainSm@FwkBuildStr
 13987  0011B6  6F8B               	movwf	(utoa@buf+1)& (0+255),b
 13988  0011B8  0E00               	movlw	0
 13989  0011BA  6F8D               	movwf	(utoa@val+1)& (0+255),b
 13990  0011BC  0E00               	movlw	0
 13991  0011BE  6F8C               	movwf	utoa@val& (0+255),b
 13992  0011C0  0E00               	movlw	0
 13993  0011C2  6F8F               	movwf	(utoa@base+1)& (0+255),b
 13994  0011C4  0E0A               	movlw	10
 13995  0011C6  6F8E               	movwf	utoa@base& (0+255),b
 13996  0011C8  ECBE  F022         	call	_utoa	;wreg free
 13997                           
 13998                           ;term.c: 782: strcpy(Data,"Framework Version: ");
 13999  0011CC  0E61               	movlw	low Term_MainSm@Data
 14000  0011CE  0100               	movlb	0	; () banked
 14001  0011D0  6F7D               	movwf	strcpy@to& (0+255),b
 14002  0011D2  0E04               	movlw	high Term_MainSm@Data
 14003  0011D4  6F7E               	movwf	(strcpy@to+1)& (0+255),b
 14004  0011D6  0ED2               	movlw	low STR_23
 14005  0011D8  6F7F               	movwf	strcpy@from& (0+255),b
 14006  0011DA  0EFE               	movlw	high STR_23
 14007  0011DC  6F80               	movwf	(strcpy@from+1)& (0+255),b
 14008  0011DE  EC51  F032         	call	_strcpy	;wreg free
 14009                           
 14010                           ;term.c: 783: strcat(Data,FwkMajorStr);
 14011  0011E2  0E61               	movlw	low Term_MainSm@Data
 14012  0011E4  0100               	movlb	0	; () banked
 14013  0011E6  6F7D               	movwf	strcat@to& (0+255),b
 14014  0011E8  0E04               	movlw	high Term_MainSm@Data
 14015  0011EA  6F7E               	movwf	(strcat@to+1)& (0+255),b
 14016  0011EC  0E32               	movlw	low Term_MainSm@FwkMajorStr
 14017  0011EE  6F7F               	movwf	strcat@from& (0+255),b
 14018  0011F0  0E01               	movlw	high Term_MainSm@FwkMajorStr
 14019  0011F2  6F80               	movwf	(strcat@from+1)& (0+255),b
 14020  0011F4  EC63  F02C         	call	_strcat	;wreg free
 14021                           
 14022                           ;term.c: 784: strcat(Data,".");
 14023  0011F8  0E61               	movlw	low Term_MainSm@Data
 14024  0011FA  0100               	movlb	0	; () banked
 14025  0011FC  6F7D               	movwf	strcat@to& (0+255),b
 14026  0011FE  0E04               	movlw	high Term_MainSm@Data
 14027  001200  6F7E               	movwf	(strcat@to+1)& (0+255),b
 14028  001202  0EF5               	movlw	low STR_24
 14029  001204  6F7F               	movwf	strcat@from& (0+255),b
 14030  001206  0EFF               	movlw	high STR_24
 14031  001208  6F80               	movwf	(strcat@from+1)& (0+255),b
 14032  00120A  EC63  F02C         	call	_strcat	;wreg free
 14033                           
 14034                           ;term.c: 785: strcat(Data,FwkMinorStr);
 14035  00120E  0E61               	movlw	low Term_MainSm@Data
 14036  001210  0100               	movlb	0	; () banked
 14037  001212  6F7D               	movwf	strcat@to& (0+255),b
 14038  001214  0E04               	movlw	high Term_MainSm@Data
 14039  001216  6F7E               	movwf	(strcat@to+1)& (0+255),b
 14040  001218  0E36               	movlw	low Term_MainSm@FwkMinorStr
 14041  00121A  6F7F               	movwf	strcat@from& (0+255),b
 14042  00121C  0E01               	movlw	high Term_MainSm@FwkMinorStr
 14043  00121E  6F80               	movwf	(strcat@from+1)& (0+255),b
 14044  001220  EC63  F02C         	call	_strcat	;wreg free
 14045                           
 14046                           ;term.c: 786: strcat(Data,".");
 14047  001224  0E61               	movlw	low Term_MainSm@Data
 14048  001226  0100               	movlb	0	; () banked
 14049  001228  6F7D               	movwf	strcat@to& (0+255),b
 14050  00122A  0E04               	movlw	high Term_MainSm@Data
 14051  00122C  6F7E               	movwf	(strcat@to+1)& (0+255),b
 14052  00122E  0EF5               	movlw	low STR_24
 14053  001230  6F7F               	movwf	strcat@from& (0+255),b
 14054  001232  0EFF               	movlw	high STR_24
 14055  001234  6F80               	movwf	(strcat@from+1)& (0+255),b
 14056  001236  EC63  F02C         	call	_strcat	;wreg free
 14057                           
 14058                           ;term.c: 787: strcat(Data,FwkBuildStr);
 14059  00123A  0E61               	movlw	low Term_MainSm@Data
 14060  00123C  0100               	movlb	0	; () banked
 14061  00123E  6F7D               	movwf	strcat@to& (0+255),b
 14062  001240  0E04               	movlw	high Term_MainSm@Data
 14063  001242  6F7E               	movwf	(strcat@to+1)& (0+255),b
 14064  001244  0E3A               	movlw	low Term_MainSm@FwkBuildStr
 14065  001246  6F7F               	movwf	strcat@from& (0+255),b
 14066  001248  0E01               	movlw	high Term_MainSm@FwkBuildStr
 14067  00124A  6F80               	movwf	(strcat@from+1)& (0+255),b
 14068  00124C  EC63  F02C         	call	_strcat	;wreg free
 14069                           
 14070                           ;term.c: 788: strcat(Data,"\r\n");
 14071  001250  0E61               	movlw	low Term_MainSm@Data
 14072  001252  0100               	movlb	0	; () banked
 14073  001254  6F7D               	movwf	strcat@to& (0+255),b
 14074  001256  0E04               	movlw	high Term_MainSm@Data
 14075  001258  6F7E               	movwf	(strcat@to+1)& (0+255),b
 14076  00125A  0E86               	movlw	low (STR_21+39)
 14077  00125C  6F7F               	movwf	strcat@from& (0+255),b
 14078  00125E  0EFE               	movlw	high (STR_21+39)
 14079  001260  6F80               	movwf	(strcat@from+1)& (0+255),b
 14080  001262  EC63  F02C         	call	_strcat	;wreg free
 14081                           
 14082                           ;term.c: 790: putUSBUSART((void*)Data,strlen(Data));
 14083  001266  0E61               	movlw	low Term_MainSm@Data
 14084  001268  0100               	movlb	0	; () banked
 14085  00126A  6F83               	movwf	putUSBUSART@data& (0+255),b
 14086  00126C  0E04               	movlw	high Term_MainSm@Data
 14087  00126E  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 14088  001270  0E61               	movlw	low Term_MainSm@Data
 14089  001272  6F7D               	movwf	strlen@s& (0+255),b
 14090  001274  0E04               	movlw	high Term_MainSm@Data
 14091  001276  6F7E               	movwf	(strlen@s+1)& (0+255),b
 14092  001278  ECFA  F030         	call	_strlen	;wreg free
 14093  00127C  0100               	movlb	0	; () banked
 14094  00127E  517D               	movf	?_strlen& (0+255),w,b
 14095  001280  6F85               	movwf	putUSBUSART@length& (0+255),b
 14096  001282  ECDA  F033         	call	_putUSBUSART	;wreg free
 14097                           
 14098                           ;term.c: 792: TermMainSmState = Term_FwkBuildDateState;
 14099  001286  0E06               	movlw	6
 14100  001288  0102               	movlb	2	; () banked
 14101  00128A  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 14102                           
 14103                           ; BSR set to: 2
 14104                           ;term.c: 793: }
 14105                           ;term.c: 794: break;
 14106  00128C  0012               	return	
 14107  00128E                     
 14108                           ; BSR set to: 2
 14109                           ;term.c: 798: if((cdc_trf_state == 0))
 14110                           
 14111                           ; BSR set to: 2
 14112  00128E  0100               	movlb	0	; () banked
 14113  001290  51C8               	movf	_cdc_trf_state& (0+255),w,b
 14114  001292  A4D8               	btfss	status,2,c
 14115  001294  0012               	return	
 14116                           
 14117                           ; BSR set to: 0
 14118                           ;term.c: 799: {
 14119                           ;term.c: 801: memset(Data,0,50);
 14120  001296  0E61               	movlw	low Term_MainSm@Data
 14121  001298  6F7D               	movwf	memset@p1& (0+255),b
 14122  00129A  0E04               	movlw	high Term_MainSm@Data
 14123  00129C  6F7E               	movwf	(memset@p1+1)& (0+255),b
 14124  00129E  0E00               	movlw	0
 14125  0012A0  6F80               	movwf	(memset@c+1)& (0+255),b
 14126  0012A2  0E00               	movlw	0
 14127  0012A4  6F7F               	movwf	memset@c& (0+255),b
 14128  0012A6  0E00               	movlw	0
 14129  0012A8  6F82               	movwf	(memset@n+1)& (0+255),b
 14130  0012AA  0E32               	movlw	50
 14131  0012AC  6F81               	movwf	memset@n& (0+255),b
 14132  0012AE  EC82  F032         	call	_memset	;wreg free
 14133                           
 14134                           ;term.c: 803: sprintf(Data,"Build Date: %s\r\n","Mar 27 2022");
 14135  0012B2  0E61               	movlw	low Term_MainSm@Data
 14136  0012B4  0100               	movlb	0	; () banked
 14137  0012B6  6F7D               	movwf	sprintf@sp& (0+255),b
 14138  0012B8  0E04               	movlw	high Term_MainSm@Data
 14139  0012BA  6F7E               	movwf	(sprintf@sp+1)& (0+255),b
 14140  0012BC  0E0D               	movlw	low STR_27
 14141  0012BE  6F7F               	movwf	sprintf@f& (0+255),b
 14142  0012C0  0EFF               	movlw	high STR_27
 14143  0012C2  6F80               	movwf	(sprintf@f+1)& (0+255),b
 14144  0012C4  0EB6               	movlw	low STR_28
 14145  0012C6  6F81               	movwf	(?_sprintf+4)& (0+255),b
 14146  0012C8  0EFF               	movlw	high STR_28
 14147  0012CA  6F82               	movwf	(?_sprintf+5)& (0+255),b
 14148  0012CC  EC74  F01D         	call	_sprintf	;wreg free
 14149                           
 14150                           ;term.c: 805: putUSBUSART((void*)Data,strlen(Data));
 14151  0012D0  0E61               	movlw	low Term_MainSm@Data
 14152  0012D2  0100               	movlb	0	; () banked
 14153  0012D4  6F83               	movwf	putUSBUSART@data& (0+255),b
 14154  0012D6  0E04               	movlw	high Term_MainSm@Data
 14155  0012D8  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 14156  0012DA  0E61               	movlw	low Term_MainSm@Data
 14157  0012DC  6F7D               	movwf	strlen@s& (0+255),b
 14158  0012DE  0E04               	movlw	high Term_MainSm@Data
 14159  0012E0  6F7E               	movwf	(strlen@s+1)& (0+255),b
 14160  0012E2  ECFA  F030         	call	_strlen	;wreg free
 14161  0012E6  0100               	movlb	0	; () banked
 14162  0012E8  517D               	movf	?_strlen& (0+255),w,b
 14163  0012EA  6F85               	movwf	putUSBUSART@length& (0+255),b
 14164  0012EC  ECDA  F033         	call	_putUSBUSART	;wreg free
 14165                           
 14166                           ;term.c: 807: TermMainSmState = Term_SysInitState;
 14167  0012F0  0E07               	movlw	7
 14168  0012F2  0102               	movlb	2	; () banked
 14169  0012F4  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 14170                           
 14171                           ; BSR set to: 2
 14172                           ;term.c: 808: }
 14173                           ;term.c: 809: break;
 14174  0012F6  0012               	return	
 14175  0012F8                     
 14176                           ; BSR set to: 2
 14177                           ;term.c: 813: if((cdc_trf_state == 0))
 14178                           
 14179                           ; BSR set to: 2
 14180  0012F8  0100               	movlb	0	; () banked
 14181  0012FA  51C8               	movf	_cdc_trf_state& (0+255),w,b
 14182  0012FC  A4D8               	btfss	status,2,c
 14183  0012FE  0012               	return	
 14184                           
 14185                           ; BSR set to: 0
 14186                           ;term.c: 814: {
 14187                           ;term.c: 816: putUSBUSART((void*)MsgReady,(sizeof(MsgReady) - 1));
 14188  001300  0E32               	movlw	low _MsgReady
 14189  001302  6F83               	movwf	putUSBUSART@data& (0+255),b
 14190  001304  0EFE               	movlw	high _MsgReady
 14191  001306  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 14192  001308  0E16               	movlw	22
 14193  00130A  6F85               	movwf	putUSBUSART@length& (0+255),b
 14194  00130C  ECDA  F033         	call	_putUSBUSART	;wreg free
 14195                           
 14196                           ;term.c: 818: TermMainSmState = Term_FinalState;
 14197  001310  0E08               	movlw	8
 14198  001312  0102               	movlb	2	; () banked
 14199  001314  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 14200                           
 14201                           ; BSR set to: 2
 14202                           ;term.c: 819: }
 14203                           ;term.c: 820: break;
 14204  001316  0012               	return	
 14205  001318                     
 14206                           ; BSR set to: 2
 14207                           ;term.c: 824: Terminal();
 14208                           
 14209                           ; BSR set to: 2
 14210  001318  EC68  F000         	call	_Terminal	;wreg free
 14211                           
 14212                           ;term.c: 829: }
 14213                           
 14214                           ;term.c: 828: break;
 14215                           
 14216                           ;term.c: 827: default:
 14217                           
 14218                           ;term.c: 825: break;
 14219  00131C  0012               	return	
 14220  00131E                     l2465:
 14221  00131E  0102               	movlb	2	; () banked
 14222  001320  51EC               	movf	Term_MainSm@TermMainSmState& (0+255),w,b
 14223                           
 14224                           ; Switch size 1, requested type "space"
 14225                           ; Number of cases is 9, Range of values is 0 to 8
 14226                           ; switch strategies available:
 14227                           ; Name         Instructions Cycles
 14228                           ; simple_byte           28    15 (average)
 14229                           ;	Chosen strategy is simple_byte
 14230  001322  0A00               	xorlw	0	; case 0
 14231  001324  B4D8               	btfsc	status,2,c
 14232  001326  D6C8               	goto	l2466
 14233  001328  0A01               	xorlw	1	; case 1
 14234  00132A  B4D8               	btfsc	status,2,c
 14235  00132C  D6D8               	goto	l2468
 14236  00132E  0A03               	xorlw	3	; case 2
 14237  001330  B4D8               	btfsc	status,2,c
 14238  001332  D6E3               	goto	l2470
 14239  001334  0A01               	xorlw	1	; case 3
 14240  001336  B4D8               	btfsc	status,2,c
 14241  001338  D6EA               	goto	l2475
 14242  00133A  0A07               	xorlw	7	; case 4
 14243  00133C  B4D8               	btfsc	status,2,c
 14244  00133E  D6F7               	goto	l2477
 14245  001340  0A01               	xorlw	1	; case 5
 14246  001342  B4D8               	btfsc	status,2,c
 14247  001344  D704               	goto	l2479
 14248  001346  0A03               	xorlw	3	; case 6
 14249  001348  B4D8               	btfsc	status,2,c
 14250  00134A  D7A1               	goto	l2481
 14251  00134C  0A01               	xorlw	1	; case 7
 14252  00134E  B4D8               	btfsc	status,2,c
 14253  001350  D7D3               	goto	l2483
 14254  001352  0A0F               	xorlw	15	; case 8
 14255  001354  A4D8               	btfss	status,2,c
 14256  001356  0012               	return	
 14257  001358  D7DF               	goto	l2485
 14258  00135A                     __end_of_Term_MainSm:
 14259                           	opt stack 0
 14260                           tosu	equ	0xFFF
 14261                           tosh	equ	0xFFE
 14262                           tosl	equ	0xFFD
 14263                           pclath	equ	0xFFA
 14264                           tblptru	equ	0xFF8
 14265                           tblptrh	equ	0xFF7
 14266                           tblptrl	equ	0xFF6
 14267                           tablat	equ	0xFF5
 14268                           prodh	equ	0xFF4
 14269                           prodl	equ	0xFF3
 14270                           intcon	equ	0xFF2
 14271                           intcon2	equ	0xFF1
 14272                           intcon3	equ	0xFF0
 14273                           indf0	equ	0xFEF
 14274                           postinc0	equ	0xFEE
 14275                           plusw0	equ	0xFEB
 14276                           fsr0h	equ	0xFEA
 14277                           fsr0l	equ	0xFE9
 14278                           wreg	equ	0xFE8
 14279                           indf1	equ	0xFE7
 14280                           postinc1	equ	0xFE6
 14281                           postdec1	equ	0xFE5
 14282                           fsr1h	equ	0xFE2
 14283                           fsr1l	equ	0xFE1
 14284                           indf2	equ	0xFDF
 14285                           postinc2	equ	0xFDE
 14286                           postdec2	equ	0xFDD
 14287                           plusw2	equ	0xFDB
 14288                           fsr2h	equ	0xFDA
 14289                           fsr2l	equ	0xFD9
 14290                           status	equ	0xFD8
 14291                           
 14292 ;; *************** function _strlen *****************
 14293 ;; Defined at:
 14294 ;;		line 4 in file "/opt/microchip/xc8/v1.45/sources/common/strlen.c"
 14295 ;; Parameters:    Size  Location     Type
 14296 ;;  s               2   29[BANK0 ] PTR const unsigned char 
 14297 ;;		 -> Term_MainSm@Data(50), 
 14298 ;; Auto vars:     Size  Location     Type
 14299 ;;  cp              2   33[BANK0 ] PTR const unsigned char 
 14300 ;;		 -> Term_MainSm@Data(50), 
 14301 ;; Return value:  Size  Location     Type
 14302 ;;                  2   29[BANK0 ] unsigned int 
 14303 ;; Registers used:
 14304 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14305 ;; Tracked objects:
 14306 ;;		On entry : 0/0
 14307 ;;		On exit  : 0/0
 14308 ;;		Unchanged: 0/0
 14309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14310 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14311 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14312 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14313 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14314 ;;Total ram usage:        6 bytes
 14315 ;; Hardware stack levels used:    1
 14316 ;; Hardware stack levels required when called:   11
 14317 ;; This function calls:
 14318 ;;		Nothing
 14319 ;; This function is called by:
 14320 ;;		_Term_MainSm
 14321 ;; This function uses a non-reentrant model
 14322 ;;
 14323                           
 14324                           	psect	text56
 14325  0061F4                     __ptext56:
 14326                           	opt stack 0
 14327  0061F4                     _strlen:
 14328                           	opt stack 15
 14329                           
 14330                           ;incstack = 0
 14331  0061F4  C07D  F081         	movff	strlen@s,strlen@cp
 14332  0061F8  C07E  F082         	movff	strlen@s+1,strlen@cp+1
 14333  0061FC  D003               	goto	l3522
 14334  0061FE  0100               	movlb	0	; () banked
 14335  006200  4B81               	infsnz	strlen@cp& (0+255),f,b
 14336  006202  2B82               	incf	(strlen@cp+1)& (0+255),f,b
 14337  006204                     l3522:
 14338                           
 14339                           ; BSR set to: 0
 14340  006204  C081  FFD9         	movff	strlen@cp,fsr2l
 14341  006208  C082  FFDA         	movff	strlen@cp+1,fsr2h
 14342  00620C  50DF               	movf	indf2,w,c
 14343  00620E  A4D8               	btfss	status,2,c
 14344  006210  D7F6               	goto	l3523
 14345  006212  C07D  F07F         	movff	strlen@s,??_strlen
 14346  006216  C07E  F080         	movff	strlen@s+1,??_strlen+1
 14347  00621A  0100               	movlb	0	; () banked
 14348  00621C  1F7F               	comf	??_strlen& (0+255),f,b
 14349  00621E  1F80               	comf	(??_strlen+1)& (0+255),f,b
 14350  006220  4B7F               	infsnz	??_strlen& (0+255),f,b
 14351  006222  2B80               	incf	(??_strlen+1)& (0+255),f,b
 14352  006224  5181               	movf	strlen@cp& (0+255),w,b
 14353  006226  257F               	addwf	??_strlen& (0+255),w,b
 14354  006228  6F7D               	movwf	?_strlen& (0+255),b
 14355  00622A  5182               	movf	(strlen@cp+1)& (0+255),w,b
 14356  00622C  2180               	addwfc	(??_strlen+1)& (0+255),w,b
 14357  00622E  6F7E               	movwf	(?_strlen+1)& (0+255),b
 14358  006230  0012               	return	
 14359  006232                     __end_of_strlen:
 14360                           	opt stack 0
 14361                           tosu	equ	0xFFF
 14362                           tosh	equ	0xFFE
 14363                           tosl	equ	0xFFD
 14364                           pclath	equ	0xFFA
 14365                           tblptru	equ	0xFF8
 14366                           tblptrh	equ	0xFF7
 14367                           tblptrl	equ	0xFF6
 14368                           tablat	equ	0xFF5
 14369                           prodh	equ	0xFF4
 14370                           prodl	equ	0xFF3
 14371                           intcon	equ	0xFF2
 14372                           intcon2	equ	0xFF1
 14373                           intcon3	equ	0xFF0
 14374                           indf0	equ	0xFEF
 14375                           postinc0	equ	0xFEE
 14376                           plusw0	equ	0xFEB
 14377                           fsr0h	equ	0xFEA
 14378                           fsr0l	equ	0xFE9
 14379                           wreg	equ	0xFE8
 14380                           indf1	equ	0xFE7
 14381                           postinc1	equ	0xFE6
 14382                           postdec1	equ	0xFE5
 14383                           fsr1h	equ	0xFE2
 14384                           fsr1l	equ	0xFE1
 14385                           indf2	equ	0xFDF
 14386                           postinc2	equ	0xFDE
 14387                           postdec2	equ	0xFDD
 14388                           plusw2	equ	0xFDB
 14389                           fsr2h	equ	0xFDA
 14390                           fsr2l	equ	0xFD9
 14391                           status	equ	0xFD8
 14392                           
 14393 ;; *************** function _strcat *****************
 14394 ;; Defined at:
 14395 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/strcat.c"
 14396 ;; Parameters:    Size  Location     Type
 14397 ;;  to              2   29[BANK0 ] PTR unsigned char 
 14398 ;;		 -> Term_MainSm@Data(50), 
 14399 ;;  from            2   31[BANK0 ] PTR const unsigned char 
 14400 ;;		 -> STR_26(3), STR_25(2), STR_24(2), Term_MainSm@FwkBuildStr(4), 
 14401 ;;		 -> Term_MainSm@FwkMinorStr(4), Term_MainSm@FwkMajorStr(4), 
 14402 ;; Auto vars:     Size  Location     Type
 14403 ;;  cp              2   33[BANK0 ] PTR unsigned char 
 14404 ;;		 -> Term_MainSm@Data(50), 
 14405 ;; Return value:  Size  Location     Type
 14406 ;;                  2   29[BANK0 ] PTR unsigned char 
 14407 ;; Registers used:
 14408 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 14409 ;; Tracked objects:
 14410 ;;		On entry : 0/0
 14411 ;;		On exit  : 0/0
 14412 ;;		Unchanged: 0/0
 14413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14414 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14415 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14416 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14417 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14418 ;;Total ram usage:        6 bytes
 14419 ;; Hardware stack levels used:    1
 14420 ;; Hardware stack levels required when called:   11
 14421 ;; This function calls:
 14422 ;;		Nothing
 14423 ;; This function is called by:
 14424 ;;		_Term_MainSm
 14425 ;; This function uses a non-reentrant model
 14426 ;;
 14427                           
 14428                           	psect	text57
 14429  0058C6                     __ptext57:
 14430                           	opt stack 0
 14431  0058C6                     _strcat:
 14432                           	opt stack 15
 14433                           
 14434                           ; BSR set to: 0
 14435                           ;incstack = 0
 14436  0058C6  C07D  F081         	movff	strcat@to,strcat@cp
 14437  0058CA  C07E  F082         	movff	strcat@to+1,strcat@cp+1
 14438  0058CE  D003               	goto	l3507
 14439  0058D0  0100               	movlb	0	; () banked
 14440  0058D2  4B81               	infsnz	strcat@cp& (0+255),f,b
 14441  0058D4  2B82               	incf	(strcat@cp+1)& (0+255),f,b
 14442  0058D6                     l3507:
 14443                           
 14444                           ; BSR set to: 0
 14445  0058D6  C081  FFD9         	movff	strcat@cp,fsr2l
 14446  0058DA  C082  FFDA         	movff	strcat@cp+1,fsr2h
 14447  0058DE  50DF               	movf	indf2,w,c
 14448  0058E0  B4D8               	btfsc	status,2,c
 14449  0058E2  D006               	goto	l3510
 14450  0058E4  D7F5               	goto	l3508
 14451  0058E6  0100               	movlb	0	; () banked
 14452  0058E8  4B81               	infsnz	strcat@cp& (0+255),f,b
 14453  0058EA  2B82               	incf	(strcat@cp+1)& (0+255),f,b
 14454  0058EC  4B7F               	infsnz	strcat@from& (0+255),f,b
 14455  0058EE  2B80               	incf	(strcat@from+1)& (0+255),f,b
 14456  0058F0                     l3510:
 14457                           
 14458                           ; BSR set to: 0
 14459  0058F0  C07F  FFF6         	movff	strcat@from,tblptrl
 14460  0058F4  C080  FFF7         	movff	strcat@from+1,tblptrh
 14461  0058F8  6AF8               	clrf	tblptru,c
 14462  0058FA  C081  FFD9         	movff	strcat@cp,fsr2l
 14463  0058FE  C082  FFDA         	movff	strcat@cp+1,fsr2h
 14464  005902  0E0E               	movlw	(high __ramtop+-1)
 14465  005904  64F7               	cpfsgt	tblptrh,c
 14466  005906  D003               	bra	u14357
 14467  005908  0008               	tblrd		*
 14468  00590A  50F5               	movf	tablat,w,c
 14469  00590C  D005               	bra	u14350
 14470  00590E                     u14357:
 14471  00590E  CFF6 FFE9          	movff	tblptrl,fsr0l
 14472  005912  CFF7 FFEA          	movff	tblptrh,fsr0h
 14473  005916  50EF               	movf	indf0,w,c
 14474  005918                     u14350:
 14475  005918  6EDF               	movwf	indf2,c
 14476  00591A  50DF               	movf	indf2,w,c
 14477  00591C  B4D8               	btfsc	status,2,c
 14478  00591E  0012               	return	
 14479  005920  D7E2               	goto	l3511
 14480  005922                     __end_of_strcat:
 14481                           	opt stack 0
 14482                           tosu	equ	0xFFF
 14483                           tosh	equ	0xFFE
 14484                           tosl	equ	0xFFD
 14485                           pclath	equ	0xFFA
 14486                           tblptru	equ	0xFF8
 14487                           tblptrh	equ	0xFF7
 14488                           tblptrl	equ	0xFF6
 14489                           tablat	equ	0xFF5
 14490                           prodh	equ	0xFF4
 14491                           prodl	equ	0xFF3
 14492                           intcon	equ	0xFF2
 14493                           intcon2	equ	0xFF1
 14494                           intcon3	equ	0xFF0
 14495                           indf0	equ	0xFEF
 14496                           postinc0	equ	0xFEE
 14497                           plusw0	equ	0xFEB
 14498                           fsr0h	equ	0xFEA
 14499                           fsr0l	equ	0xFE9
 14500                           wreg	equ	0xFE8
 14501                           indf1	equ	0xFE7
 14502                           postinc1	equ	0xFE6
 14503                           postdec1	equ	0xFE5
 14504                           fsr1h	equ	0xFE2
 14505                           fsr1l	equ	0xFE1
 14506                           indf2	equ	0xFDF
 14507                           postinc2	equ	0xFDE
 14508                           postdec2	equ	0xFDD
 14509                           plusw2	equ	0xFDB
 14510                           fsr2h	equ	0xFDA
 14511                           fsr2l	equ	0xFD9
 14512                           status	equ	0xFD8
 14513                           
 14514 ;; *************** function _sprintf *****************
 14515 ;; Defined at:
 14516 ;;		line 492 in file "/opt/microchip/xc8/v1.45/sources/common/doprnt.c"
 14517 ;; Parameters:    Size  Location     Type
 14518 ;;  sp              2   29[BANK0 ] PTR unsigned char 
 14519 ;;		 -> Term_MainSm@Data(50), 
 14520 ;;  f               2   31[BANK0 ] PTR const unsigned char 
 14521 ;;		 -> STR_27(17), 
 14522 ;; Auto vars:     Size  Location     Type
 14523 ;;  tmpval          4    0        struct .
 14524 ;;  cp              2   39[BANK0 ] PTR const unsigned char 
 14525 ;;		 -> STR_32(7), STR_28(12), 
 14526 ;;  ap              2   36[BANK0 ] PTR void [1]
 14527 ;;		 -> ?_sprintf(2), 
 14528 ;;  len             2    0        unsigned int 
 14529 ;;  val             2    0        unsigned int 
 14530 ;;  c               1   38[BANK0 ] char 
 14531 ;;  flag            1   35[BANK0 ] unsigned char 
 14532 ;;  prec            1    0        char 
 14533 ;; Return value:  Size  Location     Type
 14534 ;;                  2   29[BANK0 ] int 
 14535 ;; Registers used:
 14536 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 14537 ;; Tracked objects:
 14538 ;;		On entry : 0/0
 14539 ;;		On exit  : 0/0
 14540 ;;		Unchanged: 0/0
 14541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14542 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14543 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14544 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14545 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14546 ;;Total ram usage:       12 bytes
 14547 ;; Hardware stack levels used:    1
 14548 ;; Hardware stack levels required when called:   11
 14549 ;; This function calls:
 14550 ;;		Nothing
 14551 ;; This function is called by:
 14552 ;;		_Term_MainSm
 14553 ;; This function uses a non-reentrant model
 14554 ;;
 14555                           
 14556                           	psect	text58
 14557  003AE8                     __ptext58:
 14558                           	opt stack 0
 14559  003AE8                     _sprintf:
 14560                           	opt stack 15
 14561                           
 14562                           ;doprnt.c: 494: va_list ap;
 14563                           ;doprnt.c: 499: signed char c;
 14564                           ;doprnt.c: 506: signed char prec;
 14565                           ;doprnt.c: 508: unsigned char flag;
 14566                           ;doprnt.c: 523: union {
 14567                           ;doprnt.c: 524: unsigned long vd;
 14568                           ;doprnt.c: 525: double integ;
 14569                           ;doprnt.c: 526: } tmpval;
 14570                           ;doprnt.c: 528: unsigned int val;
 14571                           ;doprnt.c: 529: unsigned len;
 14572                           ;doprnt.c: 530: const char * cp;
 14573                           ;doprnt.c: 533: *ap = __va_start();
 14574                           
 14575                           ;incstack = 0
 14576  003AE8  0E81               	movlw	low (?_sprintf+4)
 14577  003AEA  0100               	movlb	0	; () banked
 14578  003AEC  6F84               	movwf	sprintf@ap& (0+255),b
 14579  003AEE  0E00               	movlw	high (?_sprintf+4)
 14580  003AF0  6F85               	movwf	(sprintf@ap+1)& (0+255),b
 14581                           
 14582                           ;doprnt.c: 536: while(c = *f++) {
 14583  003AF2  D04E               	goto	l2911
 14584  003AF4                     
 14585                           ; BSR set to: 0
 14586                           ;doprnt.c: 538: if(c != '%')
 14587                           
 14588                           ; BSR set to: 0
 14589  003AF4  0E25               	movlw	37
 14590  003AF6  1986               	xorwf	sprintf@c& (0+255),w,b
 14591  003AF8  B4D8               	btfsc	status,2,c
 14592  003AFA  D009               	goto	l2901
 14593                           
 14594                           ; BSR set to: 0
 14595                           ;doprnt.c: 540: {
 14596                           ;doprnt.c: 541: ((*sp++ = (c)));
 14597  003AFC  C07D  FFD9         	movff	sprintf@sp,fsr2l
 14598  003B00  C07E  FFDA         	movff	sprintf@sp+1,fsr2h
 14599  003B04  C086  FFDF         	movff	sprintf@c,indf2
 14600                           
 14601                           ; BSR set to: 0
 14602  003B08  4B7D               	infsnz	sprintf@sp& (0+255),f,b
 14603  003B0A  2B7E               	incf	(sprintf@sp+1)& (0+255),f,b
 14604                           
 14605                           ;doprnt.c: 542: continue;
 14606  003B0C  D041               	goto	l2911
 14607  003B0E                     l2901:
 14608                           
 14609                           ; BSR set to: 0
 14610                           ;doprnt.c: 543: }
 14611                           ;doprnt.c: 548: flag = 0;
 14612                           
 14613                           ; BSR set to: 0
 14614  003B0E  0E00               	movlw	0
 14615  003B10  6F83               	movwf	sprintf@flag& (0+255),b
 14616                           
 14617                           ;doprnt.c: 635: switch(c = *f++) {
 14618  003B12  D02E               	goto	l2902
 14619  003B14                     
 14620                           ; BSR set to: 0
 14621                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
 14622                           
 14623                           ; BSR set to: 0
 14624  003B14  C084  FFD9         	movff	sprintf@ap,fsr2l
 14625  003B18  C085  FFDA         	movff	sprintf@ap+1,fsr2h
 14626  003B1C  CFDE F087          	movff	postinc2,sprintf@cp
 14627  003B20  CFDD F088          	movff	postdec2,sprintf@cp+1
 14628                           
 14629                           ; BSR set to: 0
 14630  003B24  0E02               	movlw	2
 14631  003B26  2784               	addwf	sprintf@ap& (0+255),f,b
 14632  003B28  0E00               	movlw	0
 14633  003B2A  2385               	addwfc	(sprintf@ap+1)& (0+255),f,b
 14634                           
 14635                           ; BSR set to: 0
 14636                           ;doprnt.c: 740: if(!cp)
 14637  003B2C  5187               	movf	sprintf@cp& (0+255),w,b
 14638  003B2E  1188               	iorwf	(sprintf@cp+1)& (0+255),w,b
 14639  003B30  A4D8               	btfss	status,2,c
 14640  003B32  D014               	goto	l2907
 14641                           
 14642                           ; BSR set to: 0
 14643                           ;doprnt.c: 741: cp = "(null)";
 14644  003B34  0ED8               	movlw	low STR_32
 14645  003B36  6F87               	movwf	sprintf@cp& (0+255),b
 14646  003B38  0EFF               	movlw	high STR_32
 14647  003B3A  6F88               	movwf	(sprintf@cp+1)& (0+255),b
 14648                           
 14649                           ; BSR set to: 0
 14650                           ;doprnt.c: 777: while(*cp)
 14651  003B3C  D00F               	goto	l2907
 14652  003B3E                     
 14653                           ; BSR set to: 0
 14654                           ;doprnt.c: 778: ((*sp++ = (*cp++)));
 14655                           
 14656                           ; BSR set to: 0
 14657  003B3E  C087  FFF6         	movff	sprintf@cp,tblptrl
 14658  003B42  C088  FFF7         	movff	sprintf@cp+1,tblptrh
 14659  003B46                     	if	0	;tblptru may be non-zero
 14660  003B46                     	endif
 14661  003B46                     	if	0	;tblptru may be non-zero
 14662  003B46                     	endif
 14663  003B46  C07D  FFD9         	movff	sprintf@sp,fsr2l
 14664  003B4A  C07E  FFDA         	movff	sprintf@sp+1,fsr2h
 14665  003B4E  0008               	tblrd		*
 14666  003B50  CFF5 FFDF          	movff	tablat,indf2
 14667                           
 14668                           ; BSR set to: 0
 14669  003B54  4B87               	infsnz	sprintf@cp& (0+255),f,b
 14670  003B56  2B88               	incf	(sprintf@cp+1)& (0+255),f,b
 14671                           
 14672                           ; BSR set to: 0
 14673  003B58  4B7D               	infsnz	sprintf@sp& (0+255),f,b
 14674  003B5A  2B7E               	incf	(sprintf@sp+1)& (0+255),f,b
 14675  003B5C                     l2907:
 14676                           
 14677                           ; BSR set to: 0
 14678                           
 14679                           ; BSR set to: 0
 14680  003B5C  C087  FFF6         	movff	sprintf@cp,tblptrl
 14681  003B60  C088  FFF7         	movff	sprintf@cp+1,tblptrh
 14682  003B64                     	if	0	;tblptru may be non-zero
 14683  003B64                     	endif
 14684  003B64                     	if	0	;tblptru may be non-zero
 14685  003B64                     	endif
 14686  003B64  0008               	tblrd		*
 14687  003B66  50F5               	movf	tablat,w,c
 14688  003B68  0900               	iorlw	0
 14689  003B6A  B4D8               	btfsc	status,2,c
 14690  003B6C  D011               	goto	l2911
 14691  003B6E  D7E7               	goto	l2908
 14692  003B70                     l2902:
 14693                           
 14694                           ; BSR set to: 0
 14695                           
 14696                           ; BSR set to: 0
 14697  003B70  C07F  FFF6         	movff	sprintf@f,tblptrl
 14698  003B74  C080  FFF7         	movff	sprintf@f+1,tblptrh
 14699  003B78  4B7F               	infsnz	sprintf@f& (0+255),f,b
 14700  003B7A  2B80               	incf	(sprintf@f+1)& (0+255),f,b
 14701  003B7C                     	if	0	;tblptru may be non-zero
 14702  003B7C                     	endif
 14703  003B7C                     	if	0	;tblptru may be non-zero
 14704  003B7C                     	endif
 14705  003B7C  0008               	tblrd		*
 14706  003B7E  CFF5 F086          	movff	tablat,sprintf@c
 14707  003B82  5186               	movf	sprintf@c& (0+255),w,b
 14708                           
 14709                           ; Switch size 1, requested type "space"
 14710                           ; Number of cases is 2, Range of values is 0 to 115
 14711                           ; switch strategies available:
 14712                           ; Name         Instructions Cycles
 14713                           ; simple_byte            7     4 (average)
 14714                           ;	Chosen strategy is simple_byte
 14715  003B84  0A00               	xorlw	0	; case 0
 14716  003B86  B4D8               	btfsc	status,2,c
 14717  003B88  D00F               	goto	u14410
 14718  003B8A  0A73               	xorlw	115	; case 115
 14719  003B8C  B4D8               	btfsc	status,2,c
 14720  003B8E  D7C2               	goto	l2905
 14721  003B90                     l2911:
 14722                           
 14723                           ; BSR set to: 0
 14724                           
 14725                           ; BSR set to: 0
 14726                           
 14727                           ;doprnt.c: 1422: {
 14728                           
 14729                           ; BSR set to: 0
 14730  003B90  C07F  FFF6         	movff	sprintf@f,tblptrl
 14731  003B94  C080  FFF7         	movff	sprintf@f+1,tblptrh
 14732  003B98  4B7F               	infsnz	sprintf@f& (0+255),f,b
 14733  003B9A  2B80               	incf	(sprintf@f+1)& (0+255),f,b
 14734  003B9C                     	if	0	;tblptru may be non-zero
 14735  003B9C                     	endif
 14736  003B9C                     	if	0	;tblptru may be non-zero
 14737  003B9C                     	endif
 14738  003B9C  0008               	tblrd		*
 14739  003B9E  CFF5 F086          	movff	tablat,sprintf@c
 14740  003BA2  5186               	movf	sprintf@c& (0+255),w,b
 14741  003BA4  A4D8               	btfss	status,2,c
 14742  003BA6  D7A6               	goto	l2900
 14743  003BA8                     u14410:
 14744                           
 14745                           ; BSR set to: 0
 14746                           ;doprnt.c: 1538: *sp = 0;
 14747                           
 14748                           ; BSR set to: 0
 14749                           
 14750                           ;doprnt.c: 1469: }
 14751                           ;doprnt.c: 1533: }
 14752                           ;doprnt.c: 1535: alldone:
 14753                           
 14754                           ; BSR set to: 0
 14755  003BA8  C07D  FFD9         	movff	sprintf@sp,fsr2l
 14756  003BAC  C07E  FFDA         	movff	sprintf@sp+1,fsr2h
 14757  003BB0  0E00               	movlw	0
 14758  003BB2  6EDF               	movwf	indf2,c
 14759  003BB4  0012               	return	
 14760  003BB6                     __end_of_sprintf:
 14761                           	opt stack 0
 14762                           tosu	equ	0xFFF
 14763                           tosh	equ	0xFFE
 14764                           tosl	equ	0xFFD
 14765                           pclath	equ	0xFFA
 14766                           tblptru	equ	0xFF8
 14767                           tblptrh	equ	0xFF7
 14768                           tblptrl	equ	0xFF6
 14769                           tablat	equ	0xFF5
 14770                           prodh	equ	0xFF4
 14771                           prodl	equ	0xFF3
 14772                           intcon	equ	0xFF2
 14773                           intcon2	equ	0xFF1
 14774                           intcon3	equ	0xFF0
 14775                           indf0	equ	0xFEF
 14776                           postinc0	equ	0xFEE
 14777                           plusw0	equ	0xFEB
 14778                           fsr0h	equ	0xFEA
 14779                           fsr0l	equ	0xFE9
 14780                           wreg	equ	0xFE8
 14781                           indf1	equ	0xFE7
 14782                           postinc1	equ	0xFE6
 14783                           postdec1	equ	0xFE5
 14784                           fsr1h	equ	0xFE2
 14785                           fsr1l	equ	0xFE1
 14786                           indf2	equ	0xFDF
 14787                           postinc2	equ	0xFDE
 14788                           postdec2	equ	0xFDD
 14789                           plusw2	equ	0xFDB
 14790                           fsr2h	equ	0xFDA
 14791                           fsr2l	equ	0xFD9
 14792                           status	equ	0xFD8
 14793                           
 14794 ;; *************** function _memset *****************
 14795 ;; Defined at:
 14796 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/memset.c"
 14797 ;; Parameters:    Size  Location     Type
 14798 ;;  p1              2   29[BANK0 ] PTR void 
 14799 ;;		 -> Term_MainSm@Data(50), USBAlternateInterface(2), BDT(48), UEP1(1), 
 14800 ;;  c               2   31[BANK0 ] int 
 14801 ;;  n               2   33[BANK0 ] unsigned int 
 14802 ;; Auto vars:     Size  Location     Type
 14803 ;;  p               2   35[BANK0 ] PTR unsigned char 
 14804 ;;		 -> Term_MainSm@Data(50), USBAlternateInterface(2), BDT(48), UEP1(1), 
 14805 ;; Return value:  Size  Location     Type
 14806 ;;                  2   29[BANK0 ] PTR void 
 14807 ;; Registers used:
 14808 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14809 ;; Tracked objects:
 14810 ;;		On entry : 0/0
 14811 ;;		On exit  : 0/0
 14812 ;;		Unchanged: 0/0
 14813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14814 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14815 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14817 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14818 ;;Total ram usage:        8 bytes
 14819 ;; Hardware stack levels used:    1
 14820 ;; Hardware stack levels required when called:   11
 14821 ;; This function calls:
 14822 ;;		Nothing
 14823 ;; This function is called by:
 14824 ;;		_USBDeviceInit
 14825 ;;		_USBStdSetCfgHandler
 14826 ;;		_Term_MainSm
 14827 ;; This function uses a non-reentrant model
 14828 ;;
 14829                           
 14830                           	psect	text59
 14831  006504                     __ptext59:
 14832                           	opt stack 0
 14833  006504                     _memset:
 14834                           	opt stack 14
 14835                           
 14836                           ; BSR set to: 0
 14837                           ;incstack = 0
 14838  006504  C07D  F083         	movff	memset@p1,memset@p
 14839  006508  C07E  F084         	movff	memset@p1+1,memset@p+1
 14840  00650C  D009               	goto	l3381
 14841  00650E                     l12954:
 14842  00650E  C083  FFD9         	movff	memset@p,fsr2l
 14843  006512  C084  FFDA         	movff	memset@p+1,fsr2h
 14844  006516  C07F  FFDF         	movff	memset@c,indf2
 14845  00651A  0100               	movlb	0	; () banked
 14846  00651C  4B83               	infsnz	memset@p& (0+255),f,b
 14847  00651E  2B84               	incf	(memset@p+1)& (0+255),f,b
 14848  006520                     l3381:
 14849                           
 14850                           ; BSR set to: 0
 14851  006520  0100               	movlb	0	; () banked
 14852  006522  0781               	decf	memset@n& (0+255),f,b
 14853  006524  A0D8               	btfss	status,0,c
 14854  006526  0782               	decf	(memset@n+1)& (0+255),f,b
 14855  006528  2981               	incf	memset@n& (0+255),w,b
 14856  00652A  E1F1               	bnz	l12954
 14857  00652C  2982               	incf	(memset@n+1)& (0+255),w,b
 14858  00652E  B4D8               	btfsc	status,2,c
 14859  006530  0012               	return	
 14860  006532  D7ED               	goto	l3382
 14861  006534                     __end_of_memset:
 14862                           	opt stack 0
 14863                           tosu	equ	0xFFF
 14864                           tosh	equ	0xFFE
 14865                           tosl	equ	0xFFD
 14866                           pclath	equ	0xFFA
 14867                           tblptru	equ	0xFF8
 14868                           tblptrh	equ	0xFF7
 14869                           tblptrl	equ	0xFF6
 14870                           tablat	equ	0xFF5
 14871                           prodh	equ	0xFF4
 14872                           prodl	equ	0xFF3
 14873                           intcon	equ	0xFF2
 14874                           intcon2	equ	0xFF1
 14875                           intcon3	equ	0xFF0
 14876                           indf0	equ	0xFEF
 14877                           postinc0	equ	0xFEE
 14878                           plusw0	equ	0xFEB
 14879                           fsr0h	equ	0xFEA
 14880                           fsr0l	equ	0xFE9
 14881                           wreg	equ	0xFE8
 14882                           indf1	equ	0xFE7
 14883                           postinc1	equ	0xFE6
 14884                           postdec1	equ	0xFE5
 14885                           fsr1h	equ	0xFE2
 14886                           fsr1l	equ	0xFE1
 14887                           indf2	equ	0xFDF
 14888                           postinc2	equ	0xFDE
 14889                           postdec2	equ	0xFDD
 14890                           plusw2	equ	0xFDB
 14891                           fsr2h	equ	0xFDA
 14892                           fsr2l	equ	0xFD9
 14893                           status	equ	0xFD8
 14894                           
 14895 ;; *************** function _Terminal *****************
 14896 ;; Defined at:
 14897 ;;		line 428 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/term.c"
 14898 ;; Parameters:    Size  Location     Type
 14899 ;;		None
 14900 ;; Auto vars:     Size  Location     Type
 14901 ;;  i               1   68[BANK0 ] unsigned char 
 14902 ;;  UsbRxBuffer   200    0[BANK10] unsigned char [200]
 14903 ;;  UsbTxBuffer   200    0[BANK2 ] unsigned char [200]
 14904 ;;  TermTxBuffer   50    0[BANK1 ] unsigned char [50]
 14905 ;;  Index           1   70[BANK0 ] unsigned char 
 14906 ;;  ReceivedByte    1   69[BANK0 ] unsigned char 
 14907 ;; Return value:  Size  Location     Type
 14908 ;;                  1    wreg      void 
 14909 ;; Registers used:
 14910 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14911 ;; Tracked objects:
 14912 ;;		On entry : 0/0
 14913 ;;		On exit  : 0/0
 14914 ;;		Unchanged: 0/0
 14915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14916 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14917 ;;      Locals:         0       3      50     200       0       0       0       0       0       0       0     200       
      +0       0       0       0
 14918 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14919 ;;      Totals:         0       5      50     200       0       0       0       0       0       0       0     200       
      +0       0       0       0
 14920 ;;Total ram usage:      455 bytes
 14921 ;; Hardware stack levels used:    1
 14922 ;; Hardware stack levels required when called:   15
 14923 ;; This function calls:
 14924 ;;		_I2cSlv_I2cReadMsgSts
 14925 ;;		_I2cSlv_ReceiveI2cMsg
 14926 ;;		_I2cSlv_SendI2cMsg
 14927 ;;		_OsTmr_Wait
 14928 ;;		_atoi
 14929 ;;		_getsUSBUSART
 14930 ;;		_itoa
 14931 ;;		_putUSBUSART
 14932 ;;		_strcpy
 14933 ;;		_strtol
 14934 ;;		_xtoi
 14935 ;; This function is called by:
 14936 ;;		_Term_MainSm
 14937 ;; This function uses a non-reentrant model
 14938 ;;
 14939                           
 14940                           	psect	text60
 14941  0000D0                     __ptext60:
 14942                           	opt stack 0
 14943  0000D0                     _Terminal:
 14944                           	opt stack 11
 14945                           
 14946                           ;term.c: 430: static TermStateType TermState = Term_GetData;
 14947                           ;term.c: 431: UINT8 UsbRxBuffer[200u];
 14948                           ;term.c: 432: UINT8 UsbTxBuffer[200u];
 14949                           ;term.c: 433: UINT8 TermTxBuffer[50u];
 14950                           ;term.c: 434: static UINT8 TermRxBuffer[50u];
 14951                           ;term.c: 435: UINT8 Index;
 14952                           ;term.c: 436: static UINT8 Len[4];
 14953                           ;term.c: 437: static UINT8 PackageLen;
 14954                           ;term.c: 438: static UINT8 Addr[4];
 14955                           ;term.c: 439: static UINT8 SlaveAddr;
 14956                           ;term.c: 440: static PayloadType Payload[20u];
 14957                           ;term.c: 441: UINT8 ReceivedBytes = 0;
 14958                           
 14959                           ; BSR set to: 0
 14960                           ;incstack = 0
 14961  0000D0  0E00               	movlw	0
 14962  0000D2  0100               	movlb	0	; () banked
 14963  0000D4  6FA5               	movwf	Terminal@ReceivedBytes& (0+255),b
 14964                           
 14965                           ; BSR set to: 0
 14966                           ;term.c: 443: static UINT8 FormatOption = 0u;
 14967                           ;term.c: 444: static UINT8 EchoOption = 1u;
 14968                           ;term.c: 445: static SwTimerType SwTimer;
 14969                           ;term.c: 448: if((USBDeviceState < CONFIGURED_STATE)||(UCONbits.SUSPND==1)) return;
 14970  0000D6  0E1F               	movlw	31
 14971  0000D8  65CE               	cpfsgt	_USBDeviceState& (0+255),b
 14972  0000DA  0012               	return	
 14973                           
 14974                           ; BSR set to: 0
 14975  0000DC  B265               	btfsc	3941,1,c	;volatile
 14976  0000DE  0012               	return	
 14977  0000E0  D278               	goto	l2405
 14978  0000E2                     
 14979                           ;term.c: 455: ReceivedBytes = getsUSBUSART(UsbRxBuffer,200u);
 14980                           
 14981                           ; BSR set to: 0
 14982  0000E2  0E00               	movlw	low Terminal@UsbRxBuffer
 14983  0000E4  0100               	movlb	0	; () banked
 14984  0000E6  6F84               	movwf	getsUSBUSART@buffer& (0+255),b
 14985  0000E8  0E0A               	movlw	high Terminal@UsbRxBuffer
 14986  0000EA  6F85               	movwf	(getsUSBUSART@buffer+1)& (0+255),b
 14987  0000EC  0EC8               	movlw	200
 14988  0000EE  6F86               	movwf	getsUSBUSART@len& (0+255),b
 14989  0000F0  ECE4  F025         	call	_getsUSBUSART	;wreg free
 14990  0000F4  0100               	movlb	0	; () banked
 14991  0000F6  6FA5               	movwf	Terminal@ReceivedBytes& (0+255),b
 14992                           
 14993                           ; BSR set to: 0
 14994                           ;term.c: 458: if (ReceivedBytes > 0)
 14995  0000F8  51A5               	movf	Terminal@ReceivedBytes& (0+255),w,b
 14996  0000FA  B4D8               	btfsc	status,2,c
 14997  0000FC  0012               	return	
 14998                           
 14999                           ; BSR set to: 0
 15000                           ;term.c: 459: {
 15001                           ;term.c: 461: if (EchoOption == 1u)
 15002  0000FE  0102               	movlb	2	; () banked
 15003  000100  05F3               	decf	Terminal@EchoOption& (0+255),w,b
 15004  000102  A4D8               	btfss	status,2,c
 15005  000104  D026               	goto	l2409
 15006                           
 15007                           ; BSR set to: 2
 15008                           ;term.c: 462: {
 15009                           ;term.c: 464: if((cdc_trf_state == 0))
 15010  000106  0100               	movlb	0	; () banked
 15011  000108  51C8               	movf	_cdc_trf_state& (0+255),w,b
 15012  00010A  A4D8               	btfss	status,2,c
 15013  00010C  D022               	goto	l2409
 15014                           
 15015                           ; BSR set to: 0
 15016                           ;term.c: 465: {
 15017                           ;term.c: 466: UsbRxBuffer[ReceivedBytes] = '\r';
 15018  00010E  51A5               	movf	Terminal@ReceivedBytes& (0+255),w,b
 15019  000110  0D01               	mullw	1
 15020  000112  0E00               	movlw	low Terminal@UsbRxBuffer
 15021  000114  24F3               	addwf	prodl,w,c
 15022  000116  6ED9               	movwf	fsr2l,c
 15023  000118  0E0A               	movlw	high Terminal@UsbRxBuffer
 15024  00011A  20F4               	addwfc	prodh,w,c
 15025  00011C  6EDA               	movwf	fsr2h,c
 15026  00011E  0E0D               	movlw	13
 15027  000120  6EDF               	movwf	indf2,c
 15028                           
 15029                           ; BSR set to: 0
 15030                           ;term.c: 467: UsbRxBuffer[ReceivedBytes + 1] = '\n';
 15031  000122  51A5               	movf	Terminal@ReceivedBytes& (0+255),w,b
 15032  000124  6FA2               	movwf	??_Terminal& (0+255),b
 15033  000126  6BA3               	clrf	(??_Terminal+1)& (0+255),b
 15034  000128  0E01               	movlw	1
 15035  00012A  27A2               	addwf	??_Terminal& (0+255),f,b
 15036  00012C  0E00               	movlw	0
 15037  00012E  23A3               	addwfc	(??_Terminal+1)& (0+255),f,b
 15038  000130  0E00               	movlw	low Terminal@UsbRxBuffer
 15039  000132  25A2               	addwf	??_Terminal& (0+255),w,b
 15040  000134  6ED9               	movwf	fsr2l,c
 15041  000136  0E0A               	movlw	high Terminal@UsbRxBuffer
 15042  000138  21A3               	addwfc	(??_Terminal+1)& (0+255),w,b
 15043  00013A  6EDA               	movwf	fsr2h,c
 15044  00013C  0E0A               	movlw	10
 15045  00013E  6EDF               	movwf	indf2,c
 15046                           
 15047                           ; BSR set to: 0
 15048                           ;term.c: 468: putUSBUSART(UsbRxBuffer,ReceivedBytes + 2);
 15049  000140  0E00               	movlw	low Terminal@UsbRxBuffer
 15050  000142  6F83               	movwf	putUSBUSART@data& (0+255),b
 15051  000144  0E0A               	movlw	high Terminal@UsbRxBuffer
 15052  000146  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 15053  000148  51A5               	movf	Terminal@ReceivedBytes& (0+255),w,b
 15054  00014A  0F02               	addlw	2
 15055  00014C  6F85               	movwf	putUSBUSART@length& (0+255),b
 15056  00014E  ECDA  F033         	call	_putUSBUSART	;wreg free
 15057  000152                     l2409:
 15058                           
 15059                           ;term.c: 469: }
 15060                           ;term.c: 470: }
 15061                           ;term.c: 473: if ((UsbRxBuffer[0u] == 'S') &&
 15062                           ;term.c: 474: (UsbRxBuffer[0u + 1u] == 'O') &&
 15063                           ;term.c: 475: (UsbRxBuffer[0u + 1u + 1u] == ':'))
 15064  000152  0E53               	movlw	83
 15065  000154  010A               	movlb	10	; () banked
 15066  000156  1900               	xorwf	Terminal@UsbRxBuffer& (0+255),w,b
 15067  000158  A4D8               	btfss	status,2,c
 15068  00015A  D043               	goto	l2410
 15069                           
 15070                           ; BSR set to: 10
 15071  00015C  0E4F               	movlw	79
 15072  00015E  1901               	xorwf	(Terminal@UsbRxBuffer+1)& (0+255),w,b
 15073  000160  A4D8               	btfss	status,2,c
 15074  000162  D03F               	goto	l2410
 15075                           
 15076                           ; BSR set to: 10
 15077  000164  0E3A               	movlw	58
 15078  000166  1902               	xorwf	(Terminal@UsbRxBuffer+2)& (0+255),w,b
 15079  000168  A4D8               	btfss	status,2,c
 15080  00016A  D03B               	goto	l2410
 15081                           
 15082                           ; BSR set to: 10
 15083                           ;term.c: 476: {
 15084                           ;term.c: 478: if ((UsbRxBuffer[0u + 1u + 1u + 1u] == 'G') && (UsbRxBuffer[0u + 1u + 1u +
      +                           1u + 1] == ':'))
 15085  00016C  0E47               	movlw	71
 15086  00016E  1903               	xorwf	(Terminal@UsbRxBuffer+3)& (0+255),w,b
 15087  000170  A4D8               	btfss	status,2,c
 15088  000172  0012               	return	
 15089                           
 15090                           ; BSR set to: 10
 15091  000174  0E3A               	movlw	58
 15092  000176  1904               	xorwf	(Terminal@UsbRxBuffer+4)& (0+255),w,b
 15093  000178  A4D8               	btfss	status,2,c
 15094  00017A  0012               	return	
 15095                           
 15096                           ; BSR set to: 10
 15097                           ;term.c: 479: {
 15098                           ;term.c: 481: if ((UsbRxBuffer[0u + 1u + 1u + 1u + 2u] == 'D') && (UsbRxBuffer[0u + 1u +
      +                           1u + 1u + 2u + 1] == 'F'))
 15099  00017C  0E44               	movlw	68
 15100  00017E  1905               	xorwf	(Terminal@UsbRxBuffer+5)& (0+255),w,b
 15101  000180  A4D8               	btfss	status,2,c
 15102  000182  D015               	goto	l2412
 15103                           
 15104                           ; BSR set to: 10
 15105  000184  0E46               	movlw	70
 15106  000186  1906               	xorwf	(Terminal@UsbRxBuffer+6)& (0+255),w,b
 15107  000188  A4D8               	btfss	status,2,c
 15108  00018A  D011               	goto	l2412
 15109                           
 15110                           ; BSR set to: 10
 15111                           ;term.c: 482: {
 15112                           ;term.c: 483: if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == 'A')
 15113  00018C  0E41               	movlw	65
 15114  00018E  1908               	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 15115  000190  A4D8               	btfss	status,2,c
 15116  000192  D004               	goto	l2413
 15117                           
 15118                           ; BSR set to: 10
 15119                           ;term.c: 484: {
 15120                           ;term.c: 485: FormatOption = 1u;
 15121  000194  0E01               	movlw	1
 15122  000196  0102               	movlb	2	; () banked
 15123  000198  6FED               	movwf	Terminal@FormatOption& (0+255),b
 15124                           
 15125                           ;term.c: 486: }
 15126  00019A  0012               	return	
 15127  00019C                     l2413:
 15128                           
 15129                           ;term.c: 487: else if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == 'B')
 15130                           
 15131                           ; BSR set to: 2
 15132  00019C  0E42               	movlw	66
 15133  00019E  010A               	movlb	10	; () banked
 15134  0001A0  1908               	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 15135  0001A2  A4D8               	btfss	status,2,c
 15136  0001A4  0012               	return	
 15137                           
 15138                           ; BSR set to: 10
 15139                           ;term.c: 488: {
 15140                           ;term.c: 489: FormatOption = 0u;
 15141  0001A6  0E00               	movlw	0
 15142  0001A8  0102               	movlb	2	; () banked
 15143  0001AA  6FED               	movwf	Terminal@FormatOption& (0+255),b
 15144                           
 15145                           ; BSR set to: 2
 15146                           ;term.c: 490: }
 15147                           ;term.c: 491: }
 15148                           
 15149                           ; BSR set to: 2
 15150  0001AC  0012               	return	
 15151  0001AE                     l2412:
 15152                           
 15153                           ;term.c: 493: else if ((UsbRxBuffer[0u + 1u + 1u + 1u + 2u] == 'E') && (UsbRxBuffer[0u +
      +                           1u + 1u + 1u + 2u + 1] == 'M'))
 15154                           
 15155                           ; BSR set to: 2
 15156  0001AE  0E45               	movlw	69
 15157  0001B0  010A               	movlb	10	; () banked
 15158  0001B2  1905               	xorwf	(Terminal@UsbRxBuffer+5)& (0+255),w,b
 15159  0001B4  A4D8               	btfss	status,2,c
 15160  0001B6  0012               	return	
 15161                           
 15162                           ; BSR set to: 10
 15163  0001B8  0E4D               	movlw	77
 15164  0001BA  1906               	xorwf	(Terminal@UsbRxBuffer+6)& (0+255),w,b
 15165  0001BC  A4D8               	btfss	status,2,c
 15166  0001BE  0012               	return	
 15167                           
 15168                           ; BSR set to: 10
 15169                           ;term.c: 494: {
 15170                           ;term.c: 495: if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == '1')
 15171  0001C0  0E31               	movlw	49
 15172  0001C2  1908               	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 15173  0001C4  A4D8               	btfss	status,2,c
 15174  0001C6  D004               	goto	l2418
 15175                           
 15176                           ; BSR set to: 10
 15177                           ;term.c: 496: {
 15178                           ;term.c: 497: EchoOption = 1u;
 15179  0001C8  0E01               	movlw	1
 15180  0001CA  0102               	movlb	2	; () banked
 15181  0001CC  6FF3               	movwf	Terminal@EchoOption& (0+255),b
 15182                           
 15183                           ;term.c: 498: }
 15184  0001CE  0012               	return	
 15185  0001D0                     l2418:
 15186                           
 15187                           ;term.c: 499: else if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == '0')
 15188                           
 15189                           ; BSR set to: 2
 15190  0001D0  0E30               	movlw	48
 15191  0001D2  010A               	movlb	10	; () banked
 15192  0001D4  1908               	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 15193  0001D6  A4D8               	btfss	status,2,c
 15194  0001D8  0012               	return	
 15195                           
 15196                           ; BSR set to: 10
 15197                           ;term.c: 500: {
 15198                           ;term.c: 501: EchoOption = 0u;
 15199  0001DA  0E00               	movlw	0
 15200  0001DC  0102               	movlb	2	; () banked
 15201  0001DE  6FF3               	movwf	Terminal@EchoOption& (0+255),b
 15202                           
 15203                           ; BSR set to: 2
 15204                           ;term.c: 507: }
 15205                           ;term.c: 508: }
 15206                           ;term.c: 509: }
 15207                           
 15208                           ; BSR set to: 2
 15209                           
 15210                           ; BSR set to: 2
 15211                           
 15212                           ;term.c: 504: else
 15213                           ;term.c: 505: {
 15214                           
 15215                           ; BSR set to: 2
 15216                           
 15217                           ; BSR set to: 2
 15218                           ;term.c: 502: }
 15219                           ;term.c: 503: }
 15220                           
 15221                           ; BSR set to: 2
 15222  0001E0  0012               	return	
 15223  0001E2                     l2410:
 15224                           
 15225                           ;term.c: 510: else if ((UsbRxBuffer[0u] == 'S') &&
 15226                           ;term.c: 511: (UsbRxBuffer[0u + 1u] == 'B') &&
 15227                           ;term.c: 512: (UsbRxBuffer[0u + 1u + 1u] == ':'))
 15228                           
 15229                           ; BSR set to: 2
 15230  0001E2  0E53               	movlw	83
 15231  0001E4  010A               	movlb	10	; () banked
 15232  0001E6  1900               	xorwf	Terminal@UsbRxBuffer& (0+255),w,b
 15233  0001E8  A4D8               	btfss	status,2,c
 15234  0001EA  D0D3               	goto	l2423
 15235                           
 15236                           ; BSR set to: 10
 15237  0001EC  0E42               	movlw	66
 15238  0001EE  1901               	xorwf	(Terminal@UsbRxBuffer+1)& (0+255),w,b
 15239  0001F0  A4D8               	btfss	status,2,c
 15240  0001F2  D0CF               	goto	l2423
 15241                           
 15242                           ; BSR set to: 10
 15243  0001F4  0E3A               	movlw	58
 15244  0001F6  1902               	xorwf	(Terminal@UsbRxBuffer+2)& (0+255),w,b
 15245  0001F8  A4D8               	btfss	status,2,c
 15246  0001FA  D0CB               	goto	l2423
 15247                           
 15248                           ; BSR set to: 10
 15249                           ;term.c: 513: {
 15250                           ;term.c: 514: if ((UsbRxBuffer[0u + 1u + 1u + 1u] == 'W') && (UsbRxBuffer[0u + 1u + 1u +
      +                           1u + 1] == ':'))
 15251  0001FC  0E57               	movlw	87
 15252  0001FE  1903               	xorwf	(Terminal@UsbRxBuffer+3)& (0+255),w,b
 15253  000200  A4D8               	btfss	status,2,c
 15254  000202  D091               	goto	l2424
 15255                           
 15256                           ; BSR set to: 10
 15257  000204  0E3A               	movlw	58
 15258  000206  1904               	xorwf	(Terminal@UsbRxBuffer+4)& (0+255),w,b
 15259  000208  A4D8               	btfss	status,2,c
 15260  00020A  D08D               	goto	l2424
 15261                           
 15262                           ; BSR set to: 10
 15263                           ;term.c: 515: {
 15264                           ;term.c: 517: Len[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u];
 15265  00020C  CA05  F3B4         	movff	Terminal@UsbRxBuffer+5,Terminal@Len
 15266                           
 15267                           ;term.c: 518: Len[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 1];
 15268  000210  CA06  F3B5         	movff	Terminal@UsbRxBuffer+6,Terminal@Len+1
 15269                           
 15270                           ;term.c: 520: Addr[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u];
 15271  000214  CA08  F3B0         	movff	Terminal@UsbRxBuffer+8,Terminal@Addr
 15272                           
 15273                           ;term.c: 521: Addr[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u + 1];
 15274  000218  CA09  F3B1         	movff	Terminal@UsbRxBuffer+9,Terminal@Addr+1
 15275                           
 15276                           ; BSR set to: 10
 15277                           ;term.c: 523: PackageLen = atoi((void*)Len);
 15278  00021C  0EB4               	movlw	low Terminal@Len
 15279  00021E  0100               	movlb	0	; () banked
 15280  000220  6F83               	movwf	atoi@s& (0+255),b
 15281  000222  0E03               	movlw	high Terminal@Len
 15282  000224  6F84               	movwf	(atoi@s+1)& (0+255),b
 15283  000226  ECCD  F01B         	call	_atoi	;wreg free
 15284  00022A  0100               	movlb	0	; () banked
 15285  00022C  5183               	movf	?_atoi& (0+255),w,b
 15286  00022E  0102               	movlb	2	; () banked
 15287  000230  6FEF               	movwf	Terminal@PackageLen& (0+255),b
 15288                           
 15289                           ; BSR set to: 2
 15290                           ;term.c: 524: SlaveAddr = xtoi((void*)Addr);
 15291  000232  0EB0               	movlw	low Terminal@Addr
 15292  000234  0100               	movlb	0	; () banked
 15293  000236  6F83               	movwf	xtoi@s& (0+255),b
 15294  000238  0E03               	movlw	high Terminal@Addr
 15295  00023A  6F84               	movwf	(xtoi@s+1)& (0+255),b
 15296  00023C  EC7C  F01A         	call	_xtoi	;wreg free
 15297  000240  0100               	movlb	0	; () banked
 15298  000242  5183               	movf	?_xtoi& (0+255),w,b
 15299  000244  0102               	movlb	2	; () banked
 15300  000246  6FEE               	movwf	Terminal@SlaveAddr& (0+255),b
 15301                           
 15302                           ; BSR set to: 2
 15303                           ;term.c: 526: for (Index = 0; Index <= PackageLen; Index++)
 15304  000248  0E00               	movlw	0
 15305  00024A  0100               	movlb	0	; () banked
 15306  00024C  6FA6               	movwf	Terminal@Index& (0+255),b
 15307  00024E  D032               	goto	l2425
 15308  000250                     
 15309                           ;term.c: 527: {
 15310                           ;term.c: 528: Payload[Index].Byte[0] = UsbRxBuffer[2*Index + 0u + 1u + 1u + 1u + 2u + 3u
      +                           + 3u];
 15311                           
 15312                           ; BSR set to: 0
 15313  000250  0100               	movlb	0	; () banked
 15314  000252  51A6               	movf	Terminal@Index& (0+255),w,b
 15315  000254  0D02               	mullw	2
 15316  000256  0E0B               	movlw	11
 15317  000258  26F3               	addwf	prodl,f,c
 15318  00025A  0E00               	movlw	0
 15319  00025C  22F4               	addwfc	prodh,f,c
 15320  00025E  0E00               	movlw	low Terminal@UsbRxBuffer
 15321  000260  24F3               	addwf	prodl,w,c
 15322  000262  6ED9               	movwf	fsr2l,c
 15323  000264  0E0A               	movlw	high Terminal@UsbRxBuffer
 15324  000266  20F4               	addwfc	prodh,w,c
 15325  000268  6EDA               	movwf	fsr2h,c
 15326  00026A  51A6               	movf	Terminal@Index& (0+255),w,b
 15327  00026C  0D04               	mullw	4
 15328  00026E  0E66               	movlw	low Terminal@Payload
 15329  000270  24F3               	addwf	prodl,w,c
 15330  000272  6EE1               	movwf	fsr1l,c
 15331  000274  0E07               	movlw	high Terminal@Payload
 15332  000276  20F4               	addwfc	prodh,w,c
 15333  000278  6EE2               	movwf	fsr1h,c
 15334  00027A  CFDF FFE7          	movff	indf2,indf1
 15335                           
 15336                           ;term.c: 529: Payload[Index].Byte[1] = UsbRxBuffer[2*Index + 0u + 1u + 1u + 1u + 2u + 3u
      +                           + 3u + 1];
 15337  00027E  51A6               	movf	Terminal@Index& (0+255),w,b
 15338  000280  0D02               	mullw	2
 15339  000282  0E0C               	movlw	12
 15340  000284  26F3               	addwf	prodl,f,c
 15341  000286  0E00               	movlw	0
 15342  000288  22F4               	addwfc	prodh,f,c
 15343  00028A  0E00               	movlw	low Terminal@UsbRxBuffer
 15344  00028C  24F3               	addwf	prodl,w,c
 15345  00028E  6ED9               	movwf	fsr2l,c
 15346  000290  0E0A               	movlw	high Terminal@UsbRxBuffer
 15347  000292  20F4               	addwfc	prodh,w,c
 15348  000294  6EDA               	movwf	fsr2h,c
 15349  000296  51A6               	movf	Terminal@Index& (0+255),w,b
 15350  000298  0D04               	mullw	4
 15351  00029A  0E01               	movlw	1
 15352  00029C  26F3               	addwf	prodl,f,c
 15353  00029E  0E00               	movlw	0
 15354  0002A0  22F4               	addwfc	prodh,f,c
 15355  0002A2  0E66               	movlw	low Terminal@Payload
 15356  0002A4  24F3               	addwf	prodl,w,c
 15357  0002A6  6EE1               	movwf	fsr1l,c
 15358  0002A8  0E07               	movlw	high Terminal@Payload
 15359  0002AA  20F4               	addwfc	prodh,w,c
 15360  0002AC  6EE2               	movwf	fsr1h,c
 15361  0002AE  CFDF FFE7          	movff	indf2,indf1
 15362                           
 15363                           ; BSR set to: 0
 15364  0002B2  2BA6               	incf	Terminal@Index& (0+255),f,b
 15365  0002B4                     l2425:
 15366                           
 15367                           ; BSR set to: 0
 15368                           
 15369                           ; BSR set to: 0
 15370  0002B4  51A6               	movf	Terminal@Index& (0+255),w,b
 15371  0002B6  0102               	movlb	2	; () banked
 15372  0002B8  5DEF               	subwf	Terminal@PackageLen& (0+255),w,b
 15373  0002BA  B0D8               	btfsc	status,0,c
 15374  0002BC  D7C9               	goto	l2426
 15375                           
 15376                           ; BSR set to: 2
 15377                           ;term.c: 530: }
 15378                           ;term.c: 532: for (Index = 0; Index <= PackageLen; Index++)
 15379                           
 15380                           ; BSR set to: 2
 15381  0002BE  0E00               	movlw	0
 15382  0002C0  0100               	movlb	0	; () banked
 15383  0002C2  6FA6               	movwf	Terminal@Index& (0+255),b
 15384  0002C4  D01F               	goto	l2428
 15385  0002C6                     
 15386                           ;term.c: 533: {
 15387                           ;term.c: 537: TermTxBuffer[Index] = strtol((void*)&(Payload[Index]), (0), 16);
 15388                           
 15389                           ; BSR set to: 0
 15390  0002C6  0100               	movlb	0	; () banked
 15391  0002C8  51A6               	movf	Terminal@Index& (0+255),w,b
 15392  0002CA  0D04               	mullw	4
 15393  0002CC  0E66               	movlw	low Terminal@Payload
 15394  0002CE  24F3               	addwf	prodl,w,c
 15395  0002D0  6F89               	movwf	strtol@s& (0+255),b
 15396  0002D2  0E07               	movlw	high Terminal@Payload
 15397  0002D4  20F4               	addwfc	prodh,w,c
 15398  0002D6  6F8A               	movwf	(strtol@s+1)& (0+255),b
 15399  0002D8  0E00               	movlw	0
 15400  0002DA  6F8B               	movwf	strtol@endptr& (0+255),b
 15401  0002DC  0E00               	movlw	0
 15402  0002DE  6F8C               	movwf	(strtol@endptr+1)& (0+255),b
 15403  0002E0  0E00               	movlw	0
 15404  0002E2  6F8E               	movwf	(strtol@base+1)& (0+255),b
 15405  0002E4  0E10               	movlw	16
 15406  0002E6  6F8D               	movwf	strtol@base& (0+255),b
 15407  0002E8  EC0E  F00C         	call	_strtol	;wreg free
 15408  0002EC  0100               	movlb	0	; () banked
 15409  0002EE  51A6               	movf	Terminal@Index& (0+255),w,b
 15410  0002F0  0D01               	mullw	1
 15411  0002F2  0E00               	movlw	low Terminal@TermTxBuffer
 15412  0002F4  24F3               	addwf	prodl,w,c
 15413  0002F6  6ED9               	movwf	fsr2l,c
 15414  0002F8  0E01               	movlw	high Terminal@TermTxBuffer
 15415  0002FA  20F4               	addwfc	prodh,w,c
 15416  0002FC  6EDA               	movwf	fsr2h,c
 15417  0002FE  C089  FFDF         	movff	?_strtol,indf2
 15418                           
 15419                           ; BSR set to: 0
 15420  000302  2BA6               	incf	Terminal@Index& (0+255),f,b
 15421  000304                     l2428:
 15422                           
 15423                           ; BSR set to: 0
 15424                           
 15425                           ; BSR set to: 0
 15426  000304  51A6               	movf	Terminal@Index& (0+255),w,b
 15427  000306  0102               	movlb	2	; () banked
 15428  000308  5DEF               	subwf	Terminal@PackageLen& (0+255),w,b
 15429  00030A  B0D8               	btfsc	status,0,c
 15430  00030C  D7DC               	goto	l2429
 15431                           
 15432                           ; BSR set to: 2
 15433                           ;term.c: 539: }
 15434                           ;term.c: 542: I2cSlv_SendI2cMsg(TermTxBuffer, SlaveAddr, PackageLen);
 15435                           
 15436                           ; BSR set to: 2
 15437  00030E  0E00               	movlw	low Terminal@TermTxBuffer
 15438  000310  0100               	movlb	0	; () banked
 15439  000312  6F80               	movwf	I2cSlv_SendI2cMsg@TxBuffer& (0+255),b
 15440  000314  0E01               	movlw	high Terminal@TermTxBuffer
 15441  000316  6F81               	movwf	(I2cSlv_SendI2cMsg@TxBuffer+1)& (0+255),b
 15442  000318  C2EE  F082         	movff	Terminal@SlaveAddr,I2cSlv_SendI2cMsg@SlaveAddr
 15443  00031C  C2EF  F083         	movff	Terminal@PackageLen,I2cSlv_SendI2cMsg@DataLenght
 15444  000320  EC19  F031         	call	_I2cSlv_SendI2cMsg	;wreg free
 15445                           
 15446                           ;term.c: 543: }
 15447  000324  0012               	return	
 15448  000326                     l2424:
 15449                           
 15450                           ;term.c: 544: else if ((UsbRxBuffer[0u + 1u + 1u + 1u] == 'R') && (UsbRxBuffer[0u + 1u +
      +                           1u + 1u + 1] == ':'))
 15451  000326  0E52               	movlw	82
 15452  000328  010A               	movlb	10	; () banked
 15453  00032A  1903               	xorwf	(Terminal@UsbRxBuffer+3)& (0+255),w,b
 15454  00032C  A4D8               	btfss	status,2,c
 15455  00032E  0012               	return	
 15456                           
 15457                           ; BSR set to: 10
 15458  000330  0E3A               	movlw	58
 15459  000332  1904               	xorwf	(Terminal@UsbRxBuffer+4)& (0+255),w,b
 15460  000334  A4D8               	btfss	status,2,c
 15461  000336  0012               	return	
 15462                           
 15463                           ; BSR set to: 10
 15464                           ;term.c: 545: {
 15465                           ;term.c: 547: Len[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u];
 15466  000338  CA05  F3B4         	movff	Terminal@UsbRxBuffer+5,Terminal@Len
 15467                           
 15468                           ;term.c: 548: Len[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 1];
 15469  00033C  CA06  F3B5         	movff	Terminal@UsbRxBuffer+6,Terminal@Len+1
 15470                           
 15471                           ;term.c: 550: Addr[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u];
 15472  000340  CA08  F3B0         	movff	Terminal@UsbRxBuffer+8,Terminal@Addr
 15473                           
 15474                           ;term.c: 551: Addr[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u + 1];
 15475  000344  CA09  F3B1         	movff	Terminal@UsbRxBuffer+9,Terminal@Addr+1
 15476                           
 15477                           ; BSR set to: 10
 15478                           ;term.c: 553: PackageLen = atoi((void*)Len);
 15479  000348  0EB4               	movlw	low Terminal@Len
 15480  00034A  0100               	movlb	0	; () banked
 15481  00034C  6F83               	movwf	atoi@s& (0+255),b
 15482  00034E  0E03               	movlw	high Terminal@Len
 15483  000350  6F84               	movwf	(atoi@s+1)& (0+255),b
 15484  000352  ECCD  F01B         	call	_atoi	;wreg free
 15485  000356  0100               	movlb	0	; () banked
 15486  000358  5183               	movf	?_atoi& (0+255),w,b
 15487  00035A  0102               	movlb	2	; () banked
 15488  00035C  6FEF               	movwf	Terminal@PackageLen& (0+255),b
 15489                           
 15490                           ; BSR set to: 2
 15491                           ;term.c: 554: SlaveAddr = xtoi((void*)Addr);
 15492  00035E  0EB0               	movlw	low Terminal@Addr
 15493  000360  0100               	movlb	0	; () banked
 15494  000362  6F83               	movwf	xtoi@s& (0+255),b
 15495  000364  0E03               	movlw	high Terminal@Addr
 15496  000366  6F84               	movwf	(xtoi@s+1)& (0+255),b
 15497  000368  EC7C  F01A         	call	_xtoi	;wreg free
 15498  00036C  0100               	movlb	0	; () banked
 15499  00036E  5183               	movf	?_xtoi& (0+255),w,b
 15500  000370  0102               	movlb	2	; () banked
 15501  000372  6FEE               	movwf	Terminal@SlaveAddr& (0+255),b
 15502                           
 15503                           ; BSR set to: 2
 15504                           ;term.c: 557: I2cSlv_ReceiveI2cMsg(TermRxBuffer, SlaveAddr, PackageLen);
 15505  000374  0E40               	movlw	low Terminal@TermRxBuffer
 15506  000376  0100               	movlb	0	; () banked
 15507  000378  6F80               	movwf	I2cSlv_ReceiveI2cMsg@RxBuffer& (0+255),b
 15508  00037A  0E05               	movlw	high Terminal@TermRxBuffer
 15509  00037C  6F81               	movwf	(I2cSlv_ReceiveI2cMsg@RxBuffer+1)& (0+255),b
 15510  00037E  C2EE  F082         	movff	Terminal@SlaveAddr,I2cSlv_ReceiveI2cMsg@SlaveAddr
 15511  000382  C2EF  F083         	movff	Terminal@PackageLen,I2cSlv_ReceiveI2cMsg@DataLenght
 15512  000386  ECBA  F030         	call	_I2cSlv_ReceiveI2cMsg	;wreg free
 15513                           
 15514                           ;term.c: 560: TermState = Term_PrepSlvI2cResp;
 15515  00038A  0E01               	movlw	1
 15516  00038C  0102               	movlb	2	; () banked
 15517  00038E  6FF0               	movwf	Terminal@TermState& (0+255),b
 15518                           
 15519                           ; BSR set to: 2
 15520                           ;term.c: 561: }
 15521                           ;term.c: 562: }
 15522                           
 15523                           ; BSR set to: 2
 15524  000390  0012               	return	
 15525  000392                     l2423:
 15526                           
 15527                           ;term.c: 563: else if ((UsbRxBuffer[0u] == 'T') &&
 15528                           ;term.c: 564: (UsbRxBuffer[0u + 1u] == 'E') &&
 15529                           ;term.c: 565: (UsbRxBuffer[0u + 1u + 1u] == 'L'))
 15530                           
 15531                           ; BSR set to: 2
 15532  000392  0E54               	movlw	84
 15533  000394  010A               	movlb	10	; () banked
 15534  000396  1900               	xorwf	Terminal@UsbRxBuffer& (0+255),w,b
 15535  000398  A4D8               	btfss	status,2,c
 15536  00039A  0012               	return	
 15537                           
 15538                           ; BSR set to: 10
 15539  00039C  0E45               	movlw	69
 15540  00039E  1901               	xorwf	(Terminal@UsbRxBuffer+1)& (0+255),w,b
 15541  0003A0  A4D8               	btfss	status,2,c
 15542  0003A2  0012               	return	
 15543                           
 15544                           ; BSR set to: 10
 15545  0003A4  0E4C               	movlw	76
 15546  0003A6  1902               	xorwf	(Terminal@UsbRxBuffer+2)& (0+255),w,b
 15547  0003A8  A4D8               	btfss	status,2,c
 15548  0003AA  0012               	return	
 15549                           
 15550                           ; BSR set to: 10
 15551                           ;term.c: 566: {
 15552                           ;term.c: 568: Len[0] = UsbRxBuffer[0u + 1u + 1u + 1u];
 15553  0003AC  CA03  F3B4         	movff	Terminal@UsbRxBuffer+3,Terminal@Len
 15554                           
 15555                           ;term.c: 569: Len[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 1];
 15556  0003B0  CA04  F3B5         	movff	Terminal@UsbRxBuffer+4,Terminal@Len+1
 15557                           
 15558                           ; BSR set to: 10
 15559                           ;term.c: 570: UsbMasterPhoneNumberLen = atoi(Len);
 15560  0003B4  0EB4               	movlw	low Terminal@Len
 15561  0003B6  0100               	movlb	0	; () banked
 15562  0003B8  6F83               	movwf	atoi@s& (0+255),b
 15563  0003BA  0E03               	movlw	high Terminal@Len
 15564  0003BC  6F84               	movwf	(atoi@s+1)& (0+255),b
 15565  0003BE  ECCD  F01B         	call	_atoi	;wreg free
 15566  0003C2  C083  F318         	movff	?_atoi,_UsbMasterPhoneNumberLen
 15567  0003C6  C084  F319         	movff	?_atoi+1,_UsbMasterPhoneNumberLen+1
 15568                           
 15569                           ;term.c: 572: for (UINT8 i = 0; i < UsbMasterPhoneNumberLen; i++)
 15570  0003CA  0E00               	movlw	0
 15571  0003CC  0100               	movlb	0	; () banked
 15572  0003CE  6FA4               	movwf	Terminal@i& (0+255),b
 15573  0003D0  D018               	goto	l2435
 15574  0003D2                     
 15575                           ; BSR set to: 0
 15576                           ;term.c: 573: {
 15577                           ;term.c: 574: UsbMasterPhoneNumber[i] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + i];
 15578                           
 15579                           ; BSR set to: 0
 15580  0003D2  51A4               	movf	Terminal@i& (0+255),w,b
 15581  0003D4  6FA2               	movwf	??_Terminal& (0+255),b
 15582  0003D6  6BA3               	clrf	(??_Terminal+1)& (0+255),b
 15583  0003D8  0E05               	movlw	5
 15584  0003DA  27A2               	addwf	??_Terminal& (0+255),f,b
 15585  0003DC  0E00               	movlw	0
 15586  0003DE  23A3               	addwfc	(??_Terminal+1)& (0+255),f,b
 15587  0003E0  0E00               	movlw	low Terminal@UsbRxBuffer
 15588  0003E2  25A2               	addwf	??_Terminal& (0+255),w,b
 15589  0003E4  6ED9               	movwf	fsr2l,c
 15590  0003E6  0E0A               	movlw	high Terminal@UsbRxBuffer
 15591  0003E8  21A3               	addwfc	(??_Terminal+1)& (0+255),w,b
 15592  0003EA  6EDA               	movwf	fsr2h,c
 15593  0003EC  51A4               	movf	Terminal@i& (0+255),w,b
 15594  0003EE  0D01               	mullw	1
 15595  0003F0  0E40               	movlw	low _UsbMasterPhoneNumber
 15596  0003F2  24F3               	addwf	prodl,w,c
 15597  0003F4  6EE1               	movwf	fsr1l,c
 15598  0003F6  0E04               	movlw	high _UsbMasterPhoneNumber
 15599  0003F8  20F4               	addwfc	prodh,w,c
 15600  0003FA  6EE2               	movwf	fsr1h,c
 15601  0003FC  CFDF FFE7          	movff	indf2,indf1
 15602                           
 15603                           ; BSR set to: 0
 15604  000400  2BA4               	incf	Terminal@i& (0+255),f,b
 15605  000402                     l2435:
 15606                           
 15607                           ; BSR set to: 0
 15608                           
 15609                           ; BSR set to: 0
 15610  000402  51A4               	movf	Terminal@i& (0+255),w,b
 15611  000404  6FA2               	movwf	??_Terminal& (0+255),b
 15612  000406  6BA3               	clrf	(??_Terminal+1)& (0+255),b
 15613  000408  0103               	movlb	3	; () banked
 15614  00040A  5118               	movf	_UsbMasterPhoneNumberLen& (0+255),w,b
 15615  00040C  0100               	movlb	0	; () banked
 15616  00040E  5DA2               	subwf	??_Terminal& (0+255),w,b
 15617  000410  0103               	movlb	3	; () banked
 15618  000412  5119               	movf	(_UsbMasterPhoneNumberLen+1)& (0+255),w,b
 15619  000414  0100               	movlb	0	; () banked
 15620  000416  59A3               	subwfb	(??_Terminal+1)& (0+255),w,b
 15621  000418  B0D8               	btfsc	status,0,c
 15622  00041A  0012               	return	
 15623  00041C  D7DA               	goto	l2436
 15624  00041E                     
 15625                           ;term.c: 619: if((cdc_trf_state == 0))
 15626                           
 15627                           ; BSR set to: 0
 15628  00041E  0100               	movlb	0	; () banked
 15629  000420  51C8               	movf	_cdc_trf_state& (0+255),w,b
 15630  000422  A4D8               	btfss	status,2,c
 15631  000424  0012               	return	
 15632                           
 15633                           ; BSR set to: 0
 15634                           ;term.c: 620: {
 15635                           ;term.c: 621: UsbTxBuffer[0] = 'S';
 15636  000426  0E53               	movlw	83
 15637  000428  0102               	movlb	2	; () banked
 15638  00042A  6F00               	movwf	Terminal@UsbTxBuffer& (0+255),b
 15639                           
 15640                           ;term.c: 622: UsbTxBuffer[1] = 'B';
 15641  00042C  0E42               	movlw	66
 15642  00042E  6F01               	movwf	(Terminal@UsbTxBuffer+1)& (0+255),b
 15643                           
 15644                           ;term.c: 623: UsbTxBuffer[2] = '[';
 15645  000430  0E5B               	movlw	91
 15646  000432  6F02               	movwf	(Terminal@UsbTxBuffer+2)& (0+255),b
 15647                           
 15648                           ; BSR set to: 2
 15649                           ;term.c: 624: UsbTxBuffer[3] = Addr[0];
 15650  000434  C3B0  F203         	movff	Terminal@Addr,Terminal@UsbTxBuffer+3
 15651                           
 15652                           ; BSR set to: 2
 15653                           ;term.c: 625: UsbTxBuffer[4] = Addr[1];
 15654  000438  C3B1  F204         	movff	Terminal@Addr+1,Terminal@UsbTxBuffer+4
 15655                           
 15656                           ;term.c: 626: UsbTxBuffer[5] = ']';
 15657  00043C  0E5D               	movlw	93
 15658  00043E  6F05               	movwf	(Terminal@UsbTxBuffer+5)& (0+255),b
 15659                           
 15660                           ;term.c: 627: UsbTxBuffer[6] = ':';
 15661  000440  0E3A               	movlw	58
 15662  000442  6F06               	movwf	(Terminal@UsbTxBuffer+6)& (0+255),b
 15663                           
 15664                           ; BSR set to: 2
 15665                           ;term.c: 628: putUSBUSART(UsbTxBuffer,7);
 15666  000444  0E00               	movlw	low Terminal@UsbTxBuffer
 15667  000446  0100               	movlb	0	; () banked
 15668  000448  6F83               	movwf	putUSBUSART@data& (0+255),b
 15669  00044A  0E02               	movlw	high Terminal@UsbTxBuffer
 15670  00044C  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 15671  00044E  0E07               	movlw	7
 15672  000450  6F85               	movwf	putUSBUSART@length& (0+255),b
 15673  000452  ECDA  F033         	call	_putUSBUSART	;wreg free
 15674                           
 15675                           ;term.c: 631: TermState = Term_ReadSlvI2cData;
 15676  000456  0E02               	movlw	2
 15677  000458  0102               	movlb	2	; () banked
 15678  00045A  6FF0               	movwf	Terminal@TermState& (0+255),b
 15679                           
 15680                           ; BSR set to: 2
 15681                           ;term.c: 632: }
 15682                           ;term.c: 633: break;
 15683  00045C  0012               	return	
 15684  00045E                     
 15685                           ; BSR set to: 2
 15686                           ;term.c: 637: if (I2cSlv_I2cReadMsgSts() == MessageReceived)
 15687                           
 15688                           ; BSR set to: 2
 15689  00045E  ECFC  F033         	call	_I2cSlv_I2cReadMsgSts	;wreg free
 15690  000462  06E8               	decf	wreg,f,c
 15691  000464  A4D8               	btfss	status,2,c
 15692  000466  D088               	goto	l2444
 15693                           
 15694                           ;term.c: 638: {
 15695                           ;term.c: 640: if (FormatOption == 1u)
 15696  000468  0102               	movlb	2	; () banked
 15697  00046A  05ED               	decf	Terminal@FormatOption& (0+255),w,b
 15698  00046C  A4D8               	btfss	status,2,c
 15699  00046E  D027               	goto	u14290
 15700                           
 15701                           ; BSR set to: 2
 15702                           ;term.c: 641: {
 15703                           ;term.c: 643: for (Index = 0; Index <= PackageLen; Index++)
 15704  000470  0E00               	movlw	0
 15705  000472  0100               	movlb	0	; () banked
 15706  000474  6FA6               	movwf	Terminal@Index& (0+255),b
 15707  000476  D01E               	goto	l2446
 15708  000478                     
 15709                           ;term.c: 644: {
 15710                           ;term.c: 645: itoa(((void*)&(Payload[Index])),TermRxBuffer[Index],10);
 15711                           
 15712                           ; BSR set to: 0
 15713  000478  0100               	movlb	0	; () banked
 15714  00047A  51A6               	movf	Terminal@Index& (0+255),w,b
 15715  00047C  0D04               	mullw	4
 15716  00047E  0E66               	movlw	low Terminal@Payload
 15717  000480  24F3               	addwf	prodl,w,c
 15718  000482  6F93               	movwf	itoa@buf& (0+255),b
 15719  000484  0E07               	movlw	high Terminal@Payload
 15720  000486  20F4               	addwfc	prodh,w,c
 15721  000488  6F94               	movwf	(itoa@buf+1)& (0+255),b
 15722  00048A  51A6               	movf	Terminal@Index& (0+255),w,b
 15723  00048C  0D01               	mullw	1
 15724  00048E  0E40               	movlw	low Terminal@TermRxBuffer
 15725  000490  24F3               	addwf	prodl,w,c
 15726  000492  6ED9               	movwf	fsr2l,c
 15727  000494  0E05               	movlw	high Terminal@TermRxBuffer
 15728  000496  20F4               	addwfc	prodh,w,c
 15729  000498  6EDA               	movwf	fsr2h,c
 15730  00049A  50DF               	movf	indf2,w,c
 15731  00049C  6FA2               	movwf	??_Terminal& (0+255),b
 15732  00049E  51A2               	movf	??_Terminal& (0+255),w,b
 15733  0004A0  6F95               	movwf	itoa@val& (0+255),b
 15734  0004A2  6B96               	clrf	(itoa@val+1)& (0+255),b
 15735  0004A4  0E00               	movlw	0
 15736  0004A6  6F98               	movwf	(itoa@base+1)& (0+255),b
 15737  0004A8  0E0A               	movlw	10
 15738  0004AA  6F97               	movwf	itoa@base& (0+255),b
 15739  0004AC  EC54  F030         	call	_itoa	;wreg free
 15740  0004B0  0100               	movlb	0	; () banked
 15741  0004B2  2BA6               	incf	Terminal@Index& (0+255),f,b
 15742  0004B4                     l2446:
 15743                           
 15744                           ; BSR set to: 0
 15745                           
 15746                           ; BSR set to: 0
 15747  0004B4  51A6               	movf	Terminal@Index& (0+255),w,b
 15748  0004B6  0102               	movlb	2	; () banked
 15749  0004B8  5DEF               	subwf	Terminal@PackageLen& (0+255),w,b
 15750  0004BA  B0D8               	btfsc	status,0,c
 15751  0004BC  D7DD               	goto	l2447
 15752  0004BE                     u14290:
 15753                           
 15754                           ; BSR set to: 2
 15755                           ;term.c: 646: }
 15756                           ;term.c: 647: }
 15757                           ;term.c: 650: if((cdc_trf_state == 0))
 15758                           
 15759                           ; BSR set to: 2
 15760                           
 15761                           ; BSR set to: 2
 15762  0004BE  0100               	movlb	0	; () banked
 15763  0004C0  51C8               	movf	_cdc_trf_state& (0+255),w,b
 15764  0004C2  A4D8               	btfss	status,2,c
 15765  0004C4  0012               	return	
 15766                           
 15767                           ; BSR set to: 0
 15768                           ;term.c: 651: {
 15769                           ;term.c: 653: if (FormatOption == 1u)
 15770  0004C6  0102               	movlb	2	; () banked
 15771  0004C8  05ED               	decf	Terminal@FormatOption& (0+255),w,b
 15772  0004CA  A4D8               	btfss	status,2,c
 15773  0004CC  D02B               	goto	l2450
 15774                           
 15775                           ; BSR set to: 2
 15776                           ;term.c: 654: {
 15777                           ;term.c: 655: Payload[(2*PackageLen)].Byte[3] = '\r';
 15778  0004CE  51EF               	movf	Terminal@PackageLen& (0+255),w,b
 15779  0004D0  0D08               	mullw	8
 15780  0004D2  0E03               	movlw	3
 15781  0004D4  26F3               	addwf	prodl,f,c
 15782  0004D6  0E00               	movlw	0
 15783  0004D8  22F4               	addwfc	prodh,f,c
 15784  0004DA  0E66               	movlw	low Terminal@Payload
 15785  0004DC  24F3               	addwf	prodl,w,c
 15786  0004DE  6ED9               	movwf	fsr2l,c
 15787  0004E0  0E07               	movlw	high Terminal@Payload
 15788  0004E2  20F4               	addwfc	prodh,w,c
 15789  0004E4  6EDA               	movwf	fsr2h,c
 15790  0004E6  0E0D               	movlw	13
 15791  0004E8  6EDF               	movwf	indf2,c
 15792                           
 15793                           ;term.c: 656: Payload[(2*PackageLen)].Byte[2] = '\n';
 15794  0004EA  51EF               	movf	Terminal@PackageLen& (0+255),w,b
 15795  0004EC  0D08               	mullw	8
 15796  0004EE  0E02               	movlw	2
 15797  0004F0  26F3               	addwf	prodl,f,c
 15798  0004F2  0E00               	movlw	0
 15799  0004F4  22F4               	addwfc	prodh,f,c
 15800  0004F6  0E66               	movlw	low Terminal@Payload
 15801  0004F8  24F3               	addwf	prodl,w,c
 15802  0004FA  6ED9               	movwf	fsr2l,c
 15803  0004FC  0E07               	movlw	high Terminal@Payload
 15804  0004FE  20F4               	addwfc	prodh,w,c
 15805  000500  6EDA               	movwf	fsr2h,c
 15806  000502  0E0A               	movlw	10
 15807  000504  6EDF               	movwf	indf2,c
 15808                           
 15809                           ; BSR set to: 2
 15810                           ;term.c: 658: putUSBUSART((void*)Payload,(2*PackageLen) + 4);
 15811  000506  0E66               	movlw	low Terminal@Payload
 15812  000508  0100               	movlb	0	; () banked
 15813  00050A  6F83               	movwf	putUSBUSART@data& (0+255),b
 15814  00050C  0E07               	movlw	high Terminal@Payload
 15815  00050E  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 15816  000510  0102               	movlb	2	; () banked
 15817  000512  51EF               	movf	Terminal@PackageLen& (0+255),w,b
 15818  000514  0D02               	mullw	2
 15819  000516  50F3               	movf	prodl,w,c
 15820  000518  0F04               	addlw	4
 15821  00051A  0100               	movlb	0	; () banked
 15822  00051C  6F85               	movwf	putUSBUSART@length& (0+255),b
 15823  00051E  ECDA  F033         	call	_putUSBUSART	;wreg free
 15824                           
 15825                           ;term.c: 659: }
 15826  000522  D026               	goto	l2451
 15827  000524                     l2450:
 15828                           
 15829                           ;term.c: 660: else
 15830                           ;term.c: 661: {
 15831                           ;term.c: 662: TermRxBuffer[PackageLen] = '\r';
 15832  000524  0102               	movlb	2	; () banked
 15833  000526  51EF               	movf	Terminal@PackageLen& (0+255),w,b
 15834  000528  0D01               	mullw	1
 15835  00052A  0E40               	movlw	low Terminal@TermRxBuffer
 15836  00052C  24F3               	addwf	prodl,w,c
 15837  00052E  6ED9               	movwf	fsr2l,c
 15838  000530  0E05               	movlw	high Terminal@TermRxBuffer
 15839  000532  20F4               	addwfc	prodh,w,c
 15840  000534  6EDA               	movwf	fsr2h,c
 15841  000536  0E0D               	movlw	13
 15842  000538  6EDF               	movwf	indf2,c
 15843                           
 15844                           ; BSR set to: 2
 15845                           ;term.c: 663: TermRxBuffer[PackageLen + 1] = '\n';
 15846  00053A  51EF               	movf	Terminal@PackageLen& (0+255),w,b
 15847  00053C  0100               	movlb	0	; () banked
 15848  00053E  6FA2               	movwf	??_Terminal& (0+255),b
 15849  000540  6BA3               	clrf	(??_Terminal+1)& (0+255),b
 15850  000542  0E01               	movlw	1
 15851  000544  27A2               	addwf	??_Terminal& (0+255),f,b
 15852  000546  0E00               	movlw	0
 15853  000548  23A3               	addwfc	(??_Terminal+1)& (0+255),f,b
 15854  00054A  0E40               	movlw	low Terminal@TermRxBuffer
 15855  00054C  25A2               	addwf	??_Terminal& (0+255),w,b
 15856  00054E  6ED9               	movwf	fsr2l,c
 15857  000550  0E05               	movlw	high Terminal@TermRxBuffer
 15858  000552  21A3               	addwfc	(??_Terminal+1)& (0+255),w,b
 15859  000554  6EDA               	movwf	fsr2h,c
 15860  000556  0E0A               	movlw	10
 15861  000558  6EDF               	movwf	indf2,c
 15862                           
 15863                           ; BSR set to: 0
 15864                           ;term.c: 665: putUSBUSART(TermRxBuffer,PackageLen + 2);
 15865  00055A  0E40               	movlw	low Terminal@TermRxBuffer
 15866  00055C  6F83               	movwf	putUSBUSART@data& (0+255),b
 15867  00055E  0E05               	movlw	high Terminal@TermRxBuffer
 15868  000560  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 15869  000562  0102               	movlb	2	; () banked
 15870  000564  51EF               	movf	Terminal@PackageLen& (0+255),w,b
 15871  000566  0F02               	addlw	2
 15872  000568  0100               	movlb	0	; () banked
 15873  00056A  6F85               	movwf	putUSBUSART@length& (0+255),b
 15874  00056C  ECDA  F033         	call	_putUSBUSART	;wreg free
 15875  000570                     l2451:
 15876                           
 15877                           ;term.c: 666: }
 15878                           ;term.c: 668: TermState = Term_GetData;
 15879  000570  0E00               	movlw	0
 15880  000572  0102               	movlb	2	; () banked
 15881  000574  6FF0               	movwf	Terminal@TermState& (0+255),b
 15882                           
 15883                           ; BSR set to: 2
 15884                           ;term.c: 669: }
 15885                           ;term.c: 670: }
 15886  000576  0012               	return	
 15887  000578                     l2444:
 15888                           
 15889                           ;term.c: 671: else
 15890                           ;term.c: 672: {
 15891                           ;term.c: 674: if (OsTmr_Wait(&SwTimer,3000u) == DelayExpired)
 15892                           
 15893                           ; BSR set to: 2
 15894  000578  0ED7               	movlw	low Terminal@SwTimer
 15895  00057A  0100               	movlb	0	; () banked
 15896  00057C  6F9B               	movwf	OsTmr_Wait@WaitTimer& (0+255),b
 15897  00057E  0E04               	movlw	high Terminal@SwTimer
 15898  000580  6F9C               	movwf	(OsTmr_Wait@WaitTimer+1)& (0+255),b
 15899  000582  0EB8               	movlw	184
 15900  000584  6F9D               	movwf	OsTmr_Wait@DelayMs& (0+255),b
 15901  000586  0E0B               	movlw	11
 15902  000588  6F9E               	movwf	(OsTmr_Wait@DelayMs+1)& (0+255),b
 15903  00058A  0E00               	movlw	0
 15904  00058C  6F9F               	movwf	(OsTmr_Wait@DelayMs+2)& (0+255),b
 15905  00058E  0E00               	movlw	0
 15906  000590  6FA0               	movwf	(OsTmr_Wait@DelayMs+3)& (0+255),b
 15907  000592  EC43  F029         	call	_OsTmr_Wait	;wreg free
 15908  000596  06E8               	decf	wreg,f,c
 15909  000598  A4D8               	btfss	status,2,c
 15910  00059A  0012               	return	
 15911                           
 15912                           ;term.c: 675: {
 15913                           ;term.c: 677: if((cdc_trf_state == 0))
 15914  00059C  0100               	movlb	0	; () banked
 15915  00059E  51C8               	movf	_cdc_trf_state& (0+255),w,b
 15916  0005A0  A4D8               	btfss	status,2,c
 15917  0005A2  0012               	return	
 15918                           
 15919                           ; BSR set to: 0
 15920                           ;term.c: 678: {
 15921                           ;term.c: 679: strcpy(UsbTxBuffer," Lazy device...you've been timed-out!!!\r\n");
 15922  0005A4  0E00               	movlw	low Terminal@UsbTxBuffer
 15923  0005A6  6F7D               	movwf	strcpy@to& (0+255),b
 15924  0005A8  0E02               	movlw	high Terminal@UsbTxBuffer
 15925  0005AA  6F7E               	movwf	(strcpy@to+1)& (0+255),b
 15926  0005AC  0E5F               	movlw	low STR_21
 15927  0005AE  6F7F               	movwf	strcpy@from& (0+255),b
 15928  0005B0  0EFE               	movlw	high STR_21
 15929  0005B2  6F80               	movwf	(strcpy@from+1)& (0+255),b
 15930  0005B4  EC51  F032         	call	_strcpy	;wreg free
 15931                           
 15932                           ;term.c: 680: putUSBUSART(UsbTxBuffer,sizeof(" Lazy device...you've been timed-out!!!\r\
      +                          n")-1);
 15933  0005B8  0E00               	movlw	low Terminal@UsbTxBuffer
 15934  0005BA  0100               	movlb	0	; () banked
 15935  0005BC  6F83               	movwf	putUSBUSART@data& (0+255),b
 15936  0005BE  0E02               	movlw	high Terminal@UsbTxBuffer
 15937  0005C0  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 15938  0005C2  0E29               	movlw	41
 15939  0005C4  6F85               	movwf	putUSBUSART@length& (0+255),b
 15940  0005C6  ECDA  F033         	call	_putUSBUSART	;wreg free
 15941                           
 15942                           ;term.c: 682: TermState = Term_GetData;
 15943  0005CA  0E00               	movlw	0
 15944  0005CC  0102               	movlb	2	; () banked
 15945  0005CE  6FF0               	movwf	Terminal@TermState& (0+255),b
 15946                           
 15947                           ; BSR set to: 2
 15948                           ;term.c: 693: }
 15949                           
 15950                           ; BSR set to: 2
 15951                           ;term.c: 692: break;
 15952                           
 15953                           ;term.c: 691: default:
 15954                           
 15955                           ; BSR set to: 2
 15956                           ;term.c: 689: break;
 15957                           
 15958                           ;term.c: 688: case Term_ReadSlvUartData:
 15959                           
 15960                           ; BSR set to: 2
 15961                           ;term.c: 683: }
 15962                           ;term.c: 684: }
 15963                           ;term.c: 685: }
 15964                           ;term.c: 686: break;
 15965                           
 15966                           ; BSR set to: 2
 15967                           
 15968                           ; BSR set to: 2
 15969  0005D0  0012               	return	
 15970  0005D2                     l2405:
 15971                           
 15972                           ; BSR set to: 2
 15973  0005D2  0102               	movlb	2	; () banked
 15974  0005D4  51F0               	movf	Terminal@TermState& (0+255),w,b
 15975                           
 15976                           ; Switch size 1, requested type "space"
 15977                           ; Number of cases is 4, Range of values is 0 to 3
 15978                           ; switch strategies available:
 15979                           ; Name         Instructions Cycles
 15980                           ; simple_byte           13     7 (average)
 15981                           ;	Chosen strategy is simple_byte
 15982  0005D6  0A00               	xorlw	0	; case 0
 15983  0005D8  B4D8               	btfsc	status,2,c
 15984  0005DA  D583               	goto	l2406
 15985  0005DC  0A01               	xorlw	1	; case 1
 15986  0005DE  B4D8               	btfsc	status,2,c
 15987  0005E0  D71E               	goto	l2441
 15988  0005E2  0A03               	xorlw	3	; case 2
 15989  0005E4  B4D8               	btfsc	status,2,c
 15990  0005E6  D73B               	goto	l2443
 15991  0005E8  0A01               	xorlw	1	; case 3
 15992  0005EA  0012               	return	
 15993  0005EC                     __end_of_Terminal:
 15994                           	opt stack 0
 15995                           tosu	equ	0xFFF
 15996                           tosh	equ	0xFFE
 15997                           tosl	equ	0xFFD
 15998                           pclath	equ	0xFFA
 15999                           tblptru	equ	0xFF8
 16000                           tblptrh	equ	0xFF7
 16001                           tblptrl	equ	0xFF6
 16002                           tablat	equ	0xFF5
 16003                           prodh	equ	0xFF4
 16004                           prodl	equ	0xFF3
 16005                           intcon	equ	0xFF2
 16006                           intcon2	equ	0xFF1
 16007                           intcon3	equ	0xFF0
 16008                           indf0	equ	0xFEF
 16009                           postinc0	equ	0xFEE
 16010                           plusw0	equ	0xFEB
 16011                           fsr0h	equ	0xFEA
 16012                           fsr0l	equ	0xFE9
 16013                           wreg	equ	0xFE8
 16014                           indf1	equ	0xFE7
 16015                           postinc1	equ	0xFE6
 16016                           postdec1	equ	0xFE5
 16017                           fsr1h	equ	0xFE2
 16018                           fsr1l	equ	0xFE1
 16019                           indf2	equ	0xFDF
 16020                           postinc2	equ	0xFDE
 16021                           postdec2	equ	0xFDD
 16022                           plusw2	equ	0xFDB
 16023                           fsr2h	equ	0xFDA
 16024                           fsr2l	equ	0xFD9
 16025                           status	equ	0xFD8
 16026                           
 16027 ;; *************** function _xtoi *****************
 16028 ;; Defined at:
 16029 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/xtoi.c"
 16030 ;; Parameters:    Size  Location     Type
 16031 ;;  s               2   35[BANK0 ] PTR const unsigned char 
 16032 ;;		 -> Terminal@Addr(4), 
 16033 ;; Auto vars:     Size  Location     Type
 16034 ;;  val             2   40[BANK0 ] unsigned int 
 16035 ;;  c               1   42[BANK0 ] unsigned char 
 16036 ;;  sign            1   39[BANK0 ] unsigned char 
 16037 ;; Return value:  Size  Location     Type
 16038 ;;                  2   35[BANK0 ] unsigned int 
 16039 ;; Registers used:
 16040 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16041 ;; Tracked objects:
 16042 ;;		On entry : 0/0
 16043 ;;		On exit  : 0/0
 16044 ;;		Unchanged: 0/0
 16045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16046 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16047 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16048 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16049 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16050 ;;Total ram usage:        8 bytes
 16051 ;; Hardware stack levels used:    1
 16052 ;; Hardware stack levels required when called:   13
 16053 ;; This function calls:
 16054 ;;		_isdigit
 16055 ;;		_isspace
 16056 ;;		_isupper
 16057 ;;		_isxdigit
 16058 ;;		_tolower
 16059 ;; This function is called by:
 16060 ;;		_Terminal
 16061 ;; This function uses a non-reentrant model
 16062 ;;
 16063                           
 16064                           	psect	text61
 16065  0034F8                     __ptext61:
 16066                           	opt stack 0
 16067  0034F8                     _xtoi:
 16068                           	opt stack 12
 16069                           
 16070                           ;incstack = 0
 16071  0034F8  0E00               	movlw	0
 16072  0034FA  0100               	movlb	0	; () banked
 16073  0034FC  6F87               	movwf	xtoi@sign& (0+255),b
 16074  0034FE  0E00               	movlw	0
 16075  003500  6F89               	movwf	(xtoi@val+1)& (0+255),b
 16076  003502  0E00               	movlw	0
 16077  003504  6F88               	movwf	xtoi@val& (0+255),b
 16078  003506  D003               	goto	l3576
 16079  003508                     
 16080                           ; BSR set to: 0
 16081  003508  0100               	movlb	0	; () banked
 16082  00350A  4B83               	infsnz	xtoi@s& (0+255),f,b
 16083  00350C  2B84               	incf	(xtoi@s+1)& (0+255),f,b
 16084  00350E                     l3576:
 16085                           
 16086                           ; BSR set to: 0
 16087                           
 16088                           ; BSR set to: 0
 16089  00350E  C083  FFD9         	movff	xtoi@s,fsr2l
 16090  003512  C084  FFDA         	movff	xtoi@s+1,fsr2h
 16091  003516  50DF               	movf	indf2,w,c
 16092  003518  EC23  F033         	call	_isspace
 16093  00351C  B0D8               	btfsc	status,0,c
 16094  00351E  D7F4               	goto	l3577
 16095  003520  C083  FFD9         	movff	xtoi@s,fsr2l
 16096  003524  C084  FFDA         	movff	xtoi@s+1,fsr2h
 16097  003528  0E2D               	movlw	45
 16098  00352A  18DE               	xorwf	postinc2,w,c
 16099  00352C  A4D8               	btfss	status,2,c
 16100  00352E  D003               	goto	l3579
 16101  003530  0100               	movlb	0	; () banked
 16102  003532  2B87               	incf	xtoi@sign& (0+255),f,b
 16103  003534  D009               	goto	L15
 16104  003536                     l3579:
 16105                           
 16106                           ; BSR set to: 0
 16107  003536  C083  FFD9         	movff	xtoi@s,fsr2l
 16108  00353A  C084  FFDA         	movff	xtoi@s+1,fsr2h
 16109  00353E  0E2B               	movlw	43
 16110  003540  18DE               	xorwf	postinc2,w,c
 16111  003542  A4D8               	btfss	status,2,c
 16112  003544  D028               	goto	l3582
 16113  003546  0100               	movlb	0	; () banked
 16114  003548                     L15:
 16115  003548  4B83               	infsnz	xtoi@s& (0+255),f,b
 16116  00354A  2B84               	incf	(xtoi@s+1)& (0+255),f,b
 16117                           
 16118                           ; BSR set to: 0
 16119                           
 16120                           ; BSR set to: 0
 16121  00354C  D024               	goto	l3582
 16122  00354E                     
 16123                           ; BSR set to: 0
 16124  00354E  0100               	movlb	0	; () banked
 16125  003550  518A               	movf	xtoi@c& (0+255),w,b
 16126  003552  ECC9  F033         	call	_isupper
 16127  003556  A0D8               	btfss	status,0,c
 16128  003558  D006               	goto	l3584
 16129  00355A  0100               	movlb	0	; () banked
 16130  00355C  518A               	movf	xtoi@c& (0+255),w,b
 16131  00355E  ECBA  F034         	call	_tolower
 16132  003562  0100               	movlb	0	; () banked
 16133  003564  6F8A               	movwf	xtoi@c& (0+255),b
 16134  003566                     l3584:
 16135  003566  0100               	movlb	0	; () banked
 16136  003568  518A               	movf	xtoi@c& (0+255),w,b
 16137  00356A  ECEB  F033         	call	_isdigit
 16138  00356E  A0D8               	btfss	status,0,c
 16139  003570  D002               	goto	l3585
 16140  003572  0E30               	movlw	48
 16141  003574  D001               	goto	L14
 16142  003576                     l3585:
 16143                           
 16144                           ; BSR set to: 0
 16145  003576  0E57               	movlw	87
 16146  003578                     L14:
 16147  003578  0100               	movlb	0	; () banked
 16148  00357A  5F8A               	subwf	xtoi@c& (0+255),f,b
 16149                           
 16150                           ; BSR set to: 0
 16151  00357C  3B88               	swapf	xtoi@val& (0+255),f,b
 16152  00357E  3B89               	swapf	(xtoi@val+1)& (0+255),f,b
 16153  003580  0EF0               	movlw	240
 16154  003582  1789               	andwf	(xtoi@val+1)& (0+255),f,b
 16155  003584  5188               	movf	xtoi@val& (0+255),w,b
 16156  003586  0B0F               	andlw	15
 16157  003588  1389               	iorwf	(xtoi@val+1)& (0+255),f,b
 16158  00358A  0EF0               	movlw	240
 16159  00358C  1788               	andwf	xtoi@val& (0+255),f,b
 16160  00358E  518A               	movf	xtoi@c& (0+255),w,b
 16161  003590  2788               	addwf	xtoi@val& (0+255),f,b
 16162  003592  0E00               	movlw	0
 16163  003594  2389               	addwfc	(xtoi@val+1)& (0+255),f,b
 16164  003596                     l3582:
 16165                           
 16166                           ; BSR set to: 0
 16167  003596  C083  FFD9         	movff	xtoi@s,fsr2l
 16168  00359A  C084  FFDA         	movff	xtoi@s+1,fsr2h
 16169  00359E  0100               	movlb	0	; () banked
 16170  0035A0  4B83               	infsnz	xtoi@s& (0+255),f,b
 16171  0035A2  2B84               	incf	(xtoi@s+1)& (0+255),f,b
 16172  0035A4  50DF               	movf	indf2,w,c
 16173  0035A6  6F8A               	movwf	xtoi@c& (0+255),b
 16174  0035A8  518A               	movf	xtoi@c& (0+255),w,b
 16175  0035AA  EC75  F031         	call	_isxdigit
 16176  0035AE  B0D8               	btfsc	status,0,c
 16177  0035B0  D7CE               	goto	l3583
 16178  0035B2  0100               	movlb	0	; () banked
 16179  0035B4  5187               	movf	xtoi@sign& (0+255),w,b
 16180  0035B6  B4D8               	btfsc	status,2,c
 16181  0035B8  D00D               	goto	l3588
 16182                           
 16183                           ; BSR set to: 0
 16184  0035BA  C088  F085         	movff	xtoi@val,??_xtoi
 16185  0035BE  C089  F086         	movff	xtoi@val+1,??_xtoi+1
 16186  0035C2  1F85               	comf	??_xtoi& (0+255),f,b
 16187  0035C4  1F86               	comf	(??_xtoi+1)& (0+255),f,b
 16188  0035C6  4B85               	infsnz	??_xtoi& (0+255),f,b
 16189  0035C8  2B86               	incf	(??_xtoi+1)& (0+255),f,b
 16190  0035CA  C085  F083         	movff	??_xtoi,?_xtoi
 16191  0035CE  C086  F084         	movff	??_xtoi+1,?_xtoi+1
 16192  0035D2  0012               	return	
 16193  0035D4                     l3588:
 16194                           
 16195                           ; BSR set to: 0
 16196  0035D4  C088  F083         	movff	xtoi@val,?_xtoi
 16197  0035D8  C089  F084         	movff	xtoi@val+1,?_xtoi+1
 16198                           
 16199                           ; BSR set to: 0
 16200  0035DC  0012               	return		;funcret
 16201  0035DE                     __end_of_xtoi:
 16202                           	opt stack 0
 16203                           tosu	equ	0xFFF
 16204                           tosh	equ	0xFFE
 16205                           tosl	equ	0xFFD
 16206                           pclath	equ	0xFFA
 16207                           tblptru	equ	0xFF8
 16208                           tblptrh	equ	0xFF7
 16209                           tblptrl	equ	0xFF6
 16210                           tablat	equ	0xFF5
 16211                           prodh	equ	0xFF4
 16212                           prodl	equ	0xFF3
 16213                           intcon	equ	0xFF2
 16214                           intcon2	equ	0xFF1
 16215                           intcon3	equ	0xFF0
 16216                           indf0	equ	0xFEF
 16217                           postinc0	equ	0xFEE
 16218                           plusw0	equ	0xFEB
 16219                           fsr0h	equ	0xFEA
 16220                           fsr0l	equ	0xFE9
 16221                           wreg	equ	0xFE8
 16222                           indf1	equ	0xFE7
 16223                           postinc1	equ	0xFE6
 16224                           postdec1	equ	0xFE5
 16225                           fsr1h	equ	0xFE2
 16226                           fsr1l	equ	0xFE1
 16227                           indf2	equ	0xFDF
 16228                           postinc2	equ	0xFDE
 16229                           postdec2	equ	0xFDD
 16230                           plusw2	equ	0xFDB
 16231                           fsr2h	equ	0xFDA
 16232                           fsr2l	equ	0xFD9
 16233                           status	equ	0xFD8
 16234                           
 16235 ;; *************** function _tolower *****************
 16236 ;; Defined at:
 16237 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/tolower.c"
 16238 ;; Parameters:    Size  Location     Type
 16239 ;;  c               1    wreg     unsigned char 
 16240 ;; Auto vars:     Size  Location     Type
 16241 ;;  c               1   29[BANK0 ] unsigned char 
 16242 ;; Return value:  Size  Location     Type
 16243 ;;                  1    wreg      unsigned char 
 16244 ;; Registers used:
 16245 ;;		wreg, status,2, status,0
 16246 ;; Tracked objects:
 16247 ;;		On entry : 0/0
 16248 ;;		On exit  : 0/0
 16249 ;;		Unchanged: 0/0
 16250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16251 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16252 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16254 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16255 ;;Total ram usage:        1 bytes
 16256 ;; Hardware stack levels used:    1
 16257 ;; Hardware stack levels required when called:   11
 16258 ;; This function calls:
 16259 ;;		Nothing
 16260 ;; This function is called by:
 16261 ;;		_xtoi
 16262 ;; This function uses a non-reentrant model
 16263 ;;
 16264                           
 16265                           	psect	text62
 16266  006974                     __ptext62:
 16267                           	opt stack 0
 16268  006974                     _tolower:
 16269                           	opt stack 13
 16270                           
 16271                           ; BSR set to: 0
 16272                           ;incstack = 0
 16273                           ;tolower@c stored from wreg
 16274  006974  0100               	movlb	0	; () banked
 16275  006976  6F7D               	movwf	tolower@c& (0+255),b
 16276  006978  0E5B               	movlw	91
 16277  00697A  0100               	movlb	0	; () banked
 16278  00697C  617D               	cpfslt	tolower@c& (0+255),b
 16279  00697E  D004               	goto	l3635
 16280                           
 16281                           ; BSR set to: 0
 16282  006980  0E40               	movlw	64
 16283  006982  657D               	cpfsgt	tolower@c& (0+255),b
 16284  006984  D001               	goto	l3635
 16285                           
 16286                           ; BSR set to: 0
 16287  006986  8B7D               	bsf	tolower@c& (0+255),5,b
 16288  006988                     l3635:
 16289                           
 16290                           ; BSR set to: 0
 16291                           
 16292                           ; BSR set to: 0
 16293  006988  517D               	movf	tolower@c& (0+255),w,b
 16294  00698A  0012               	return	
 16295  00698C                     __end_of_tolower:
 16296                           	opt stack 0
 16297                           tosu	equ	0xFFF
 16298                           tosh	equ	0xFFE
 16299                           tosl	equ	0xFFD
 16300                           pclath	equ	0xFFA
 16301                           tblptru	equ	0xFF8
 16302                           tblptrh	equ	0xFF7
 16303                           tblptrl	equ	0xFF6
 16304                           tablat	equ	0xFF5
 16305                           prodh	equ	0xFF4
 16306                           prodl	equ	0xFF3
 16307                           intcon	equ	0xFF2
 16308                           intcon2	equ	0xFF1
 16309                           intcon3	equ	0xFF0
 16310                           indf0	equ	0xFEF
 16311                           postinc0	equ	0xFEE
 16312                           plusw0	equ	0xFEB
 16313                           fsr0h	equ	0xFEA
 16314                           fsr0l	equ	0xFE9
 16315                           wreg	equ	0xFE8
 16316                           indf1	equ	0xFE7
 16317                           postinc1	equ	0xFE6
 16318                           postdec1	equ	0xFE5
 16319                           fsr1h	equ	0xFE2
 16320                           fsr1l	equ	0xFE1
 16321                           indf2	equ	0xFDF
 16322                           postinc2	equ	0xFDE
 16323                           postdec2	equ	0xFDD
 16324                           plusw2	equ	0xFDB
 16325                           fsr2h	equ	0xFDA
 16326                           fsr2l	equ	0xFD9
 16327                           status	equ	0xFD8
 16328                           
 16329 ;; *************** function _isxdigit *****************
 16330 ;; Defined at:
 16331 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isxdigit.c"
 16332 ;; Parameters:    Size  Location     Type
 16333 ;;  c               1    wreg     unsigned char 
 16334 ;; Auto vars:     Size  Location     Type
 16335 ;;  c               1   34[BANK0 ] unsigned char 
 16336 ;; Return value:  Size  Location     Type
 16337 ;;		None               void
 16338 ;; Registers used:
 16339 ;;		wreg, status,2, status,0, cstack
 16340 ;; Tracked objects:
 16341 ;;		On entry : 0/0
 16342 ;;		On exit  : 0/0
 16343 ;;		Unchanged: 0/0
 16344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16345 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16346 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16347 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16348 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16349 ;;Total ram usage:        3 bytes
 16350 ;; Hardware stack levels used:    1
 16351 ;; Hardware stack levels required when called:   12
 16352 ;; This function calls:
 16353 ;;		_isdigit
 16354 ;; This function is called by:
 16355 ;;		_xtoi
 16356 ;; This function uses a non-reentrant model
 16357 ;;
 16358                           
 16359                           	psect	text63
 16360  0062EA                     __ptext63:
 16361                           	opt stack 0
 16362  0062EA                     _isxdigit:
 16363                           	opt stack 12
 16364                           
 16365                           ; BSR set to: 0
 16366                           ;incstack = 0
 16367                           ;isxdigit@c stored from wreg
 16368  0062EA  0100               	movlb	0	; () banked
 16369  0062EC  6F82               	movwf	isxdigit@c& (0+255),b
 16370  0062EE  0E01               	movlw	1
 16371  0062F0  0100               	movlb	0	; () banked
 16372  0062F2  6F81               	movwf	_isxdigit$6692& (0+255),b
 16373                           
 16374                           ; BSR set to: 0
 16375  0062F4  0E67               	movlw	103
 16376  0062F6  6182               	cpfslt	isxdigit@c& (0+255),b
 16377  0062F8  D003               	goto	u12610
 16378                           
 16379                           ; BSR set to: 0
 16380  0062FA  0E61               	movlw	97
 16381  0062FC  6182               	cpfslt	isxdigit@c& (0+255),b
 16382  0062FE  D00E               	goto	l3631
 16383  006300                     u12610:
 16384                           
 16385                           ; BSR set to: 0
 16386                           
 16387                           ; BSR set to: 0
 16388  006300  0E47               	movlw	71
 16389  006302  6182               	cpfslt	isxdigit@c& (0+255),b
 16390  006304  D003               	goto	u12630
 16391                           
 16392                           ; BSR set to: 0
 16393  006306  0E41               	movlw	65
 16394  006308  6182               	cpfslt	isxdigit@c& (0+255),b
 16395  00630A  D008               	goto	l3631
 16396  00630C                     u12630:
 16397                           
 16398                           ; BSR set to: 0
 16399                           
 16400                           ; BSR set to: 0
 16401  00630C  5182               	movf	isxdigit@c& (0+255),w,b
 16402  00630E  ECEB  F033         	call	_isdigit
 16403  006312  B0D8               	btfsc	status,0,c
 16404  006314  D003               	goto	l3631
 16405  006316  0E00               	movlw	0
 16406  006318  0100               	movlb	0	; () banked
 16407  00631A  6F81               	movwf	_isxdigit$6692& (0+255),b
 16408  00631C                     l3631:
 16409                           
 16410                           ; BSR set to: 0
 16411  00631C  C081  F080         	movff	_isxdigit$6692,??_isxdigit
 16412  006320  0100               	movlb	0	; () banked
 16413  006322  3180               	rrcf	??_isxdigit& (0+255),w,b
 16414  006324  0012               	return	
 16415  006326                     __end_of_isxdigit:
 16416                           	opt stack 0
 16417                           tosu	equ	0xFFF
 16418                           tosh	equ	0xFFE
 16419                           tosl	equ	0xFFD
 16420                           pclath	equ	0xFFA
 16421                           tblptru	equ	0xFF8
 16422                           tblptrh	equ	0xFF7
 16423                           tblptrl	equ	0xFF6
 16424                           tablat	equ	0xFF5
 16425                           prodh	equ	0xFF4
 16426                           prodl	equ	0xFF3
 16427                           intcon	equ	0xFF2
 16428                           intcon2	equ	0xFF1
 16429                           intcon3	equ	0xFF0
 16430                           indf0	equ	0xFEF
 16431                           postinc0	equ	0xFEE
 16432                           plusw0	equ	0xFEB
 16433                           fsr0h	equ	0xFEA
 16434                           fsr0l	equ	0xFE9
 16435                           wreg	equ	0xFE8
 16436                           indf1	equ	0xFE7
 16437                           postinc1	equ	0xFE6
 16438                           postdec1	equ	0xFE5
 16439                           fsr1h	equ	0xFE2
 16440                           fsr1l	equ	0xFE1
 16441                           indf2	equ	0xFDF
 16442                           postinc2	equ	0xFDE
 16443                           postdec2	equ	0xFDD
 16444                           plusw2	equ	0xFDB
 16445                           fsr2h	equ	0xFDA
 16446                           fsr2l	equ	0xFD9
 16447                           status	equ	0xFD8
 16448                           
 16449 ;; *************** function _strtol *****************
 16450 ;; Defined at:
 16451 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/strtol.c"
 16452 ;; Parameters:    Size  Location     Type
 16453 ;;  s               2   41[BANK0 ] PTR const unsigned char 
 16454 ;;		 -> Terminal@Payload(80), 
 16455 ;;  endptr          2   43[BANK0 ] PTR PTR unsigned char 
 16456 ;;		 -> NULL(0), 
 16457 ;;  base            2   45[BANK0 ] int 
 16458 ;; Auto vars:     Size  Location     Type
 16459 ;;  a               4   52[BANK0 ] long 
 16460 ;;  c               1   56[BANK0 ] unsigned char 
 16461 ;;  sign            1   51[BANK0 ] unsigned char 
 16462 ;; Return value:  Size  Location     Type
 16463 ;;                  4   41[BANK0 ] long 
 16464 ;; Registers used:
 16465 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16466 ;; Tracked objects:
 16467 ;;		On entry : 0/0
 16468 ;;		On exit  : 0/0
 16469 ;;		Unchanged: 0/0
 16470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16471 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16472 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16473 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16474 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16475 ;;Total ram usage:       16 bytes
 16476 ;; Hardware stack levels used:    1
 16477 ;; Hardware stack levels required when called:   13
 16478 ;; This function calls:
 16479 ;;		___lmul
 16480 ;;		_isalpha
 16481 ;;		_isdigit
 16482 ;;		_isspace
 16483 ;;		_toupper
 16484 ;; This function is called by:
 16485 ;;		_Terminal
 16486 ;; This function uses a non-reentrant model
 16487 ;;
 16488                           
 16489                           	psect	text64
 16490  00181C                     __ptext64:
 16491                           	opt stack 0
 16492  00181C                     _strtol:
 16493                           	opt stack 12
 16494                           
 16495                           ; BSR set to: 0
 16496                           ;incstack = 0
 16497  00181C  C089  FFD9         	movff	strtol@s,fsr2l
 16498  001820  C08A  FFDA         	movff	strtol@s+1,fsr2h
 16499  001824  50DF               	movf	indf2,w,c
 16500  001826  0100               	movlb	0	; () banked
 16501  001828  6F98               	movwf	strtol@c& (0+255),b
 16502                           
 16503                           ; BSR set to: 0
 16504  00182A  4B89               	infsnz	strtol@s& (0+255),f,b
 16505  00182C  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 16506                           
 16507                           ; BSR set to: 0
 16508  00182E  5198               	movf	strtol@c& (0+255),w,b
 16509  001830  EC23  F033         	call	_isspace
 16510  001834  B0D8               	btfsc	status,0,c
 16511  001836  D7F2               	goto	_strtol
 16512  001838  0E00               	movlw	0
 16513  00183A  0100               	movlb	0	; () banked
 16514  00183C  6F94               	movwf	strtol@a& (0+255),b
 16515  00183E  0E00               	movlw	0
 16516  001840  6F95               	movwf	(strtol@a+1)& (0+255),b
 16517  001842  0E00               	movlw	0
 16518  001844  6F96               	movwf	(strtol@a+2)& (0+255),b
 16519  001846  0E00               	movlw	0
 16520  001848  6F97               	movwf	(strtol@a+3)& (0+255),b
 16521  00184A  0E00               	movlw	0
 16522  00184C  6F93               	movwf	strtol@sign& (0+255),b
 16523                           
 16524                           ; BSR set to: 0
 16525  00184E  0E2D               	movlw	45
 16526  001850  1998               	xorwf	strtol@c& (0+255),w,b
 16527  001852  A4D8               	btfss	status,2,c
 16528  001854  D003               	goto	l3538
 16529                           
 16530                           ; BSR set to: 0
 16531  001856  0E01               	movlw	1
 16532  001858  6F93               	movwf	strtol@sign& (0+255),b
 16533  00185A  D004               	goto	u13120
 16534  00185C                     l3538:
 16535                           
 16536                           ; BSR set to: 0
 16537                           
 16538                           ; BSR set to: 0
 16539  00185C  0E2B               	movlw	43
 16540  00185E  1998               	xorwf	strtol@c& (0+255),w,b
 16541  001860  A4D8               	btfss	status,2,c
 16542  001862  D008               	goto	l3540
 16543  001864                     u13120:
 16544                           
 16545                           ; BSR set to: 0
 16546  001864  C089  FFD9         	movff	strtol@s,fsr2l
 16547  001868  C08A  FFDA         	movff	strtol@s+1,fsr2h
 16548  00186C  50DF               	movf	indf2,w,c
 16549  00186E  6F98               	movwf	strtol@c& (0+255),b
 16550                           
 16551                           ; BSR set to: 0
 16552  001870  4B89               	infsnz	strtol@s& (0+255),f,b
 16553  001872  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 16554  001874                     l3540:
 16555                           
 16556                           ; BSR set to: 0
 16557                           
 16558                           ; BSR set to: 0
 16559                           
 16560                           ; BSR set to: 0
 16561  001874  0E30               	movlw	48
 16562  001876  1998               	xorwf	strtol@c& (0+255),w,b
 16563  001878  A4D8               	btfss	status,2,c
 16564  00187A  D02E               	goto	l3548
 16565                           
 16566                           ; BSR set to: 0
 16567  00187C  C089  FFD9         	movff	strtol@s,fsr2l
 16568  001880  C08A  FFDA         	movff	strtol@s+1,fsr2h
 16569  001884  50DF               	movf	indf2,w,c
 16570  001886  6F98               	movwf	strtol@c& (0+255),b
 16571                           
 16572                           ; BSR set to: 0
 16573  001888  4B89               	infsnz	strtol@s& (0+255),f,b
 16574  00188A  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 16575                           
 16576                           ; BSR set to: 0
 16577  00188C  518D               	movf	strtol@base& (0+255),w,b
 16578  00188E  118E               	iorwf	(strtol@base+1)& (0+255),w,b
 16579  001890  B4D8               	btfsc	status,2,c
 16580  001892  D005               	goto	u13150
 16581                           
 16582                           ; BSR set to: 0
 16583  001894  0E10               	movlw	16
 16584  001896  198D               	xorwf	strtol@base& (0+255),w,b
 16585  001898  118E               	iorwf	(strtol@base+1)& (0+255),w,b
 16586  00189A  A4D8               	btfss	status,2,c
 16587  00189C  D015               	goto	l3542
 16588  00189E                     u13150:
 16589                           
 16590                           ; BSR set to: 0
 16591                           
 16592                           ; BSR set to: 0
 16593  00189E  0E78               	movlw	120
 16594  0018A0  1998               	xorwf	strtol@c& (0+255),w,b
 16595  0018A2  B4D8               	btfsc	status,2,c
 16596  0018A4  D004               	goto	u13170
 16597                           
 16598                           ; BSR set to: 0
 16599  0018A6  0E58               	movlw	88
 16600  0018A8  1998               	xorwf	strtol@c& (0+255),w,b
 16601  0018AA  A4D8               	btfss	status,2,c
 16602  0018AC  D00D               	goto	l3542
 16603  0018AE                     u13170:
 16604                           
 16605                           ; BSR set to: 0
 16606                           
 16607                           ; BSR set to: 0
 16608  0018AE  0E00               	movlw	0
 16609  0018B0  6F8E               	movwf	(strtol@base+1)& (0+255),b
 16610  0018B2  0E10               	movlw	16
 16611  0018B4  6F8D               	movwf	strtol@base& (0+255),b
 16612                           
 16613                           ; BSR set to: 0
 16614  0018B6  C089  FFD9         	movff	strtol@s,fsr2l
 16615  0018BA  C08A  FFDA         	movff	strtol@s+1,fsr2h
 16616  0018BE  50DF               	movf	indf2,w,c
 16617  0018C0  6F98               	movwf	strtol@c& (0+255),b
 16618                           
 16619                           ; BSR set to: 0
 16620  0018C2  4B89               	infsnz	strtol@s& (0+255),f,b
 16621  0018C4  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 16622  0018C6  D008               	goto	l3548
 16623  0018C8                     l3542:
 16624                           
 16625                           ; BSR set to: 0
 16626                           
 16627                           ; BSR set to: 0
 16628  0018C8  518D               	movf	strtol@base& (0+255),w,b
 16629  0018CA  118E               	iorwf	(strtol@base+1)& (0+255),w,b
 16630  0018CC  A4D8               	btfss	status,2,c
 16631  0018CE  D004               	goto	l3548
 16632                           
 16633                           ; BSR set to: 0
 16634  0018D0  0E00               	movlw	0
 16635  0018D2  6F8E               	movwf	(strtol@base+1)& (0+255),b
 16636  0018D4  0E08               	movlw	8
 16637  0018D6  6F8D               	movwf	strtol@base& (0+255),b
 16638  0018D8                     l3548:
 16639                           
 16640                           ; BSR set to: 0
 16641                           
 16642                           ; BSR set to: 0
 16643                           
 16644                           ; BSR set to: 0
 16645                           
 16646                           ; BSR set to: 0
 16647  0018D8  518D               	movf	strtol@base& (0+255),w,b
 16648  0018DA  118E               	iorwf	(strtol@base+1)& (0+255),w,b
 16649  0018DC  A4D8               	btfss	status,2,c
 16650  0018DE  D004               	goto	l3549
 16651                           
 16652                           ; BSR set to: 0
 16653  0018E0  0E00               	movlw	0
 16654  0018E2  6F8E               	movwf	(strtol@base+1)& (0+255),b
 16655  0018E4  0E0A               	movlw	10
 16656  0018E6  6F8D               	movwf	strtol@base& (0+255),b
 16657  0018E8                     l3549:
 16658                           
 16659                           ; BSR set to: 0
 16660                           
 16661                           ; BSR set to: 0
 16662                           
 16663                           ; BSR set to: 0
 16664  0018E8  5198               	movf	strtol@c& (0+255),w,b
 16665  0018EA  EC9A  F032         	call	_isalpha
 16666  0018EE  A0D8               	btfss	status,0,c
 16667  0018F0  D008               	goto	l3551
 16668  0018F2  0100               	movlb	0	; () banked
 16669  0018F4  5198               	movf	strtol@c& (0+255),w,b
 16670  0018F6  ECC6  F034         	call	_toupper
 16671  0018FA  0FC9               	addlw	201
 16672  0018FC  0100               	movlb	0	; () banked
 16673  0018FE  6F98               	movwf	strtol@c& (0+255),b
 16674  001900  D009               	goto	l3554
 16675  001902                     l3551:
 16676                           
 16677                           ; BSR set to: 0
 16678  001902  0100               	movlb	0	; () banked
 16679  001904  5198               	movf	strtol@c& (0+255),w,b
 16680  001906  ECEB  F033         	call	_isdigit
 16681  00190A  A0D8               	btfss	status,0,c
 16682  00190C  D039               	goto	l3555
 16683  00190E  0E30               	movlw	48
 16684  001910  0100               	movlb	0	; () banked
 16685  001912  5F98               	subwf	strtol@c& (0+255),f,b
 16686  001914                     l3554:
 16687                           
 16688                           ; BSR set to: 0
 16689                           
 16690                           ; BSR set to: 0
 16691                           
 16692                           ; BSR set to: 0
 16693  001914  5198               	movf	strtol@c& (0+255),w,b
 16694  001916  6F8F               	movwf	??_strtol& (0+255),b
 16695  001918  6B90               	clrf	(??_strtol+1)& (0+255),b
 16696  00191A  518D               	movf	strtol@base& (0+255),w,b
 16697  00191C  5D8F               	subwf	??_strtol& (0+255),w,b
 16698  00191E  5190               	movf	(??_strtol+1)& (0+255),w,b
 16699  001920  0A80               	xorlw	128
 16700  001922  6F91               	movwf	(??_strtol+2)& (0+255),b
 16701  001924  518E               	movf	(strtol@base+1)& (0+255),w,b
 16702  001926  0A80               	xorlw	128
 16703  001928  5991               	subwfb	(??_strtol+2)& (0+255),w,b
 16704  00192A  B0D8               	btfsc	status,0,c
 16705  00192C  D029               	goto	l3555
 16706                           
 16707                           ; BSR set to: 0
 16708                           
 16709                           ; BSR set to: 0
 16710                           
 16711                           ; BSR set to: 0
 16712  00192E  C08D  F07D         	movff	strtol@base,___lmul@multiplier
 16713  001932  C08E  F07E         	movff	strtol@base+1,___lmul@multiplier+1
 16714  001936  0E00               	movlw	0
 16715  001938  BF7E               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
 16716  00193A  0EFF               	movlw	-1
 16717  00193C  6F7F               	movwf	(___lmul@multiplier+2)& (0+255),b
 16718  00193E  6F80               	movwf	(___lmul@multiplier+3)& (0+255),b
 16719  001940  C094  F081         	movff	strtol@a,___lmul@multiplicand
 16720  001944  C095  F082         	movff	strtol@a+1,___lmul@multiplicand+1
 16721  001948  C096  F083         	movff	strtol@a+2,___lmul@multiplicand+2
 16722  00194C  C097  F084         	movff	strtol@a+3,___lmul@multiplicand+3
 16723  001950  ECBD  F02C         	call	___lmul	;wreg free
 16724  001954  0100               	movlb	0	; () banked
 16725  001956  5198               	movf	strtol@c& (0+255),w,b
 16726  001958  257D               	addwf	?___lmul& (0+255),w,b
 16727  00195A  6F94               	movwf	strtol@a& (0+255),b
 16728  00195C  0E00               	movlw	0
 16729  00195E  217E               	addwfc	(?___lmul+1)& (0+255),w,b
 16730  001960  6F95               	movwf	(strtol@a+1)& (0+255),b
 16731  001962  0E00               	movlw	0
 16732  001964  217F               	addwfc	(?___lmul+2)& (0+255),w,b
 16733  001966  6F96               	movwf	(strtol@a+2)& (0+255),b
 16734  001968  0E00               	movlw	0
 16735  00196A  2180               	addwfc	(?___lmul+3)& (0+255),w,b
 16736  00196C  6F97               	movwf	(strtol@a+3)& (0+255),b
 16737                           
 16738                           ; BSR set to: 0
 16739  00196E  C089  FFD9         	movff	strtol@s,fsr2l
 16740  001972  C08A  FFDA         	movff	strtol@s+1,fsr2h
 16741  001976  50DF               	movf	indf2,w,c
 16742  001978  6F98               	movwf	strtol@c& (0+255),b
 16743                           
 16744                           ; BSR set to: 0
 16745  00197A  4B89               	infsnz	strtol@s& (0+255),f,b
 16746  00197C  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 16747  00197E  D7B4               	goto	l3549
 16748  001980                     l3555:
 16749                           
 16750                           ; BSR set to: 0
 16751  001980  0100               	movlb	0	; () banked
 16752  001982  518B               	movf	strtol@endptr& (0+255),w,b
 16753  001984  118C               	iorwf	(strtol@endptr+1)& (0+255),w,b
 16754  001986  B4D8               	btfsc	status,2,c
 16755  001988  D00E               	goto	l3557
 16756                           
 16757                           ; BSR set to: 0
 16758  00198A  0EFF               	movlw	255
 16759  00198C  2589               	addwf	strtol@s& (0+255),w,b
 16760  00198E  6F8F               	movwf	??_strtol& (0+255),b
 16761  001990  0EFF               	movlw	255
 16762  001992  218A               	addwfc	(strtol@s+1)& (0+255),w,b
 16763  001994  6F90               	movwf	(??_strtol+1)& (0+255),b
 16764  001996  C08B  FFD9         	movff	strtol@endptr,fsr2l
 16765  00199A  C08C  FFDA         	movff	strtol@endptr+1,fsr2h
 16766  00199E  C08F  FFDE         	movff	??_strtol,postinc2
 16767  0019A2  C090  FFDD         	movff	??_strtol+1,postdec2
 16768  0019A6                     l3557:
 16769                           
 16770                           ; BSR set to: 0
 16771                           
 16772                           ; BSR set to: 0
 16773  0019A6  5193               	movf	strtol@sign& (0+255),w,b
 16774  0019A8  B4D8               	btfsc	status,2,c
 16775  0019AA  D01A               	goto	l3558
 16776                           
 16777                           ; BSR set to: 0
 16778  0019AC  C094  F08F         	movff	strtol@a,??_strtol
 16779  0019B0  C095  F090         	movff	strtol@a+1,??_strtol+1
 16780  0019B4  C096  F091         	movff	strtol@a+2,??_strtol+2
 16781  0019B8  C097  F092         	movff	strtol@a+3,??_strtol+3
 16782  0019BC  1F8F               	comf	??_strtol& (0+255),f,b
 16783  0019BE  1F90               	comf	(??_strtol+1)& (0+255),f,b
 16784  0019C0  1F91               	comf	(??_strtol+2)& (0+255),f,b
 16785  0019C2  1F92               	comf	(??_strtol+3)& (0+255),f,b
 16786  0019C4  2B8F               	incf	??_strtol& (0+255),f,b
 16787  0019C6  0E00               	movlw	0
 16788  0019C8  2390               	addwfc	(??_strtol+1)& (0+255),f,b
 16789  0019CA  2391               	addwfc	(??_strtol+2)& (0+255),f,b
 16790  0019CC  2392               	addwfc	(??_strtol+3)& (0+255),f,b
 16791  0019CE  C08F  F089         	movff	??_strtol,?_strtol
 16792  0019D2  C090  F08A         	movff	??_strtol+1,?_strtol+1
 16793  0019D6  C091  F08B         	movff	??_strtol+2,?_strtol+2
 16794  0019DA  C092  F08C         	movff	??_strtol+3,?_strtol+3
 16795                           
 16796                           ; BSR set to: 0
 16797  0019DE  0012               	return	
 16798  0019E0                     l3558:
 16799                           
 16800                           ; BSR set to: 0
 16801  0019E0  C094  F089         	movff	strtol@a,?_strtol
 16802  0019E4  C095  F08A         	movff	strtol@a+1,?_strtol+1
 16803  0019E8  C096  F08B         	movff	strtol@a+2,?_strtol+2
 16804  0019EC  C097  F08C         	movff	strtol@a+3,?_strtol+3
 16805                           
 16806                           ; BSR set to: 0
 16807  0019F0  0012               	return		;funcret
 16808  0019F2                     __end_of_strtol:
 16809                           	opt stack 0
 16810                           tosu	equ	0xFFF
 16811                           tosh	equ	0xFFE
 16812                           tosl	equ	0xFFD
 16813                           pclath	equ	0xFFA
 16814                           tblptru	equ	0xFF8
 16815                           tblptrh	equ	0xFF7
 16816                           tblptrl	equ	0xFF6
 16817                           tablat	equ	0xFF5
 16818                           prodh	equ	0xFF4
 16819                           prodl	equ	0xFF3
 16820                           intcon	equ	0xFF2
 16821                           intcon2	equ	0xFF1
 16822                           intcon3	equ	0xFF0
 16823                           indf0	equ	0xFEF
 16824                           postinc0	equ	0xFEE
 16825                           plusw0	equ	0xFEB
 16826                           fsr0h	equ	0xFEA
 16827                           fsr0l	equ	0xFE9
 16828                           wreg	equ	0xFE8
 16829                           indf1	equ	0xFE7
 16830                           postinc1	equ	0xFE6
 16831                           postdec1	equ	0xFE5
 16832                           fsr1h	equ	0xFE2
 16833                           fsr1l	equ	0xFE1
 16834                           indf2	equ	0xFDF
 16835                           postinc2	equ	0xFDE
 16836                           postdec2	equ	0xFDD
 16837                           plusw2	equ	0xFDB
 16838                           fsr2h	equ	0xFDA
 16839                           fsr2l	equ	0xFD9
 16840                           status	equ	0xFD8
 16841                           
 16842 ;; *************** function _toupper *****************
 16843 ;; Defined at:
 16844 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/toupper.c"
 16845 ;; Parameters:    Size  Location     Type
 16846 ;;  c               1    wreg     unsigned char 
 16847 ;; Auto vars:     Size  Location     Type
 16848 ;;  c               1   29[BANK0 ] unsigned char 
 16849 ;; Return value:  Size  Location     Type
 16850 ;;                  1    wreg      unsigned char 
 16851 ;; Registers used:
 16852 ;;		wreg, status,2, status,0
 16853 ;; Tracked objects:
 16854 ;;		On entry : 0/0
 16855 ;;		On exit  : 0/0
 16856 ;;		Unchanged: 0/0
 16857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16858 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16859 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16861 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16862 ;;Total ram usage:        1 bytes
 16863 ;; Hardware stack levels used:    1
 16864 ;; Hardware stack levels required when called:   11
 16865 ;; This function calls:
 16866 ;;		Nothing
 16867 ;; This function is called by:
 16868 ;;		_strtol
 16869 ;; This function uses a non-reentrant model
 16870 ;;
 16871                           
 16872                           	psect	text65
 16873  00698C                     __ptext65:
 16874                           	opt stack 0
 16875  00698C                     _toupper:
 16876                           	opt stack 13
 16877                           
 16878                           ; BSR set to: 0
 16879                           ;incstack = 0
 16880                           ;toupper@c stored from wreg
 16881  00698C  0100               	movlb	0	; () banked
 16882  00698E  6F7D               	movwf	toupper@c& (0+255),b
 16883  006990  0E7B               	movlw	123
 16884  006992  0100               	movlb	0	; () banked
 16885  006994  617D               	cpfslt	toupper@c& (0+255),b
 16886  006996  D004               	goto	l3562
 16887                           
 16888                           ; BSR set to: 0
 16889  006998  0E60               	movlw	96
 16890  00699A  657D               	cpfsgt	toupper@c& (0+255),b
 16891  00699C  D001               	goto	l3562
 16892                           
 16893                           ; BSR set to: 0
 16894  00699E  9B7D               	bcf	toupper@c& (0+255),5,b
 16895  0069A0                     l3562:
 16896                           
 16897                           ; BSR set to: 0
 16898                           
 16899                           ; BSR set to: 0
 16900  0069A0  517D               	movf	toupper@c& (0+255),w,b
 16901  0069A2  0012               	return	
 16902  0069A4                     __end_of_toupper:
 16903                           	opt stack 0
 16904                           tosu	equ	0xFFF
 16905                           tosh	equ	0xFFE
 16906                           tosl	equ	0xFFD
 16907                           pclath	equ	0xFFA
 16908                           tblptru	equ	0xFF8
 16909                           tblptrh	equ	0xFF7
 16910                           tblptrl	equ	0xFF6
 16911                           tablat	equ	0xFF5
 16912                           prodh	equ	0xFF4
 16913                           prodl	equ	0xFF3
 16914                           intcon	equ	0xFF2
 16915                           intcon2	equ	0xFF1
 16916                           intcon3	equ	0xFF0
 16917                           indf0	equ	0xFEF
 16918                           postinc0	equ	0xFEE
 16919                           plusw0	equ	0xFEB
 16920                           fsr0h	equ	0xFEA
 16921                           fsr0l	equ	0xFE9
 16922                           wreg	equ	0xFE8
 16923                           indf1	equ	0xFE7
 16924                           postinc1	equ	0xFE6
 16925                           postdec1	equ	0xFE5
 16926                           fsr1h	equ	0xFE2
 16927                           fsr1l	equ	0xFE1
 16928                           indf2	equ	0xFDF
 16929                           postinc2	equ	0xFDE
 16930                           postdec2	equ	0xFDD
 16931                           plusw2	equ	0xFDB
 16932                           fsr2h	equ	0xFDA
 16933                           fsr2l	equ	0xFD9
 16934                           status	equ	0xFD8
 16935                           
 16936 ;; *************** function _isspace *****************
 16937 ;; Defined at:
 16938 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isspace.c"
 16939 ;; Parameters:    Size  Location     Type
 16940 ;;  c               1    wreg     unsigned char 
 16941 ;; Auto vars:     Size  Location     Type
 16942 ;;  c               1   31[BANK0 ] unsigned char 
 16943 ;; Return value:  Size  Location     Type
 16944 ;;		None               void
 16945 ;; Registers used:
 16946 ;;		wreg, status,2, status,0
 16947 ;; Tracked objects:
 16948 ;;		On entry : 0/0
 16949 ;;		On exit  : 0/0
 16950 ;;		Unchanged: 0/0
 16951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16952 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16953 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16954 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16955 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16956 ;;Total ram usage:        3 bytes
 16957 ;; Hardware stack levels used:    1
 16958 ;; Hardware stack levels required when called:   11
 16959 ;; This function calls:
 16960 ;;		Nothing
 16961 ;; This function is called by:
 16962 ;;		_strtol
 16963 ;;		_xtoi
 16964 ;; This function uses a non-reentrant model
 16965 ;;
 16966                           
 16967                           	psect	text66
 16968  006646                     __ptext66:
 16969                           	opt stack 0
 16970  006646                     _isspace:
 16971                           	opt stack 13
 16972                           
 16973                           ; BSR set to: 0
 16974                           ;incstack = 0
 16975                           ;isspace@c stored from wreg
 16976  006646  0100               	movlb	0	; () banked
 16977  006648  6F7F               	movwf	isspace@c& (0+255),b
 16978  00664A  0E01               	movlw	1
 16979  00664C  0100               	movlb	0	; () banked
 16980  00664E  6F7E               	movwf	_isspace$6685& (0+255),b
 16981                           
 16982                           ; BSR set to: 0
 16983  006650  0E20               	movlw	32
 16984  006652  197F               	xorwf	isspace@c& (0+255),w,b
 16985  006654  B4D8               	btfsc	status,2,c
 16986  006656  D008               	goto	l3619
 16987                           
 16988                           ; BSR set to: 0
 16989  006658  0E0E               	movlw	14
 16990  00665A  617F               	cpfslt	isspace@c& (0+255),b
 16991  00665C  D003               	goto	u12520
 16992                           
 16993                           ; BSR set to: 0
 16994  00665E  0E09               	movlw	9
 16995  006660  617F               	cpfslt	isspace@c& (0+255),b
 16996  006662  D002               	goto	l3619
 16997  006664                     u12520:
 16998                           
 16999                           ; BSR set to: 0
 17000                           
 17001                           ; BSR set to: 0
 17002  006664  0E00               	movlw	0
 17003  006666  6F7E               	movwf	_isspace$6685& (0+255),b
 17004  006668                     l3619:
 17005                           
 17006                           ; BSR set to: 0
 17007                           
 17008                           ; BSR set to: 0
 17009  006668  C07E  F07D         	movff	_isspace$6685,??_isspace
 17010  00666C  317D               	rrcf	??_isspace& (0+255),w,b
 17011  00666E  0012               	return	
 17012  006670                     __end_of_isspace:
 17013                           	opt stack 0
 17014                           tosu	equ	0xFFF
 17015                           tosh	equ	0xFFE
 17016                           tosl	equ	0xFFD
 17017                           pclath	equ	0xFFA
 17018                           tblptru	equ	0xFF8
 17019                           tblptrh	equ	0xFF7
 17020                           tblptrl	equ	0xFF6
 17021                           tablat	equ	0xFF5
 17022                           prodh	equ	0xFF4
 17023                           prodl	equ	0xFF3
 17024                           intcon	equ	0xFF2
 17025                           intcon2	equ	0xFF1
 17026                           intcon3	equ	0xFF0
 17027                           indf0	equ	0xFEF
 17028                           postinc0	equ	0xFEE
 17029                           plusw0	equ	0xFEB
 17030                           fsr0h	equ	0xFEA
 17031                           fsr0l	equ	0xFE9
 17032                           wreg	equ	0xFE8
 17033                           indf1	equ	0xFE7
 17034                           postinc1	equ	0xFE6
 17035                           postdec1	equ	0xFE5
 17036                           fsr1h	equ	0xFE2
 17037                           fsr1l	equ	0xFE1
 17038                           indf2	equ	0xFDF
 17039                           postinc2	equ	0xFDE
 17040                           postdec2	equ	0xFDD
 17041                           plusw2	equ	0xFDB
 17042                           fsr2h	equ	0xFDA
 17043                           fsr2l	equ	0xFD9
 17044                           status	equ	0xFD8
 17045                           
 17046 ;; *************** function _isalpha *****************
 17047 ;; Defined at:
 17048 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isalpha.c"
 17049 ;; Parameters:    Size  Location     Type
 17050 ;;  c               1    wreg     unsigned char 
 17051 ;; Auto vars:     Size  Location     Type
 17052 ;;  c               1   34[BANK0 ] unsigned char 
 17053 ;; Return value:  Size  Location     Type
 17054 ;;		None               void
 17055 ;; Registers used:
 17056 ;;		wreg, status,2, status,0, cstack
 17057 ;; Tracked objects:
 17058 ;;		On entry : 0/0
 17059 ;;		On exit  : 0/0
 17060 ;;		Unchanged: 0/0
 17061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17062 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17063 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17064 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17065 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17066 ;;Total ram usage:        3 bytes
 17067 ;; Hardware stack levels used:    1
 17068 ;; Hardware stack levels required when called:   12
 17069 ;; This function calls:
 17070 ;;		_isupper
 17071 ;; This function is called by:
 17072 ;;		_strtol
 17073 ;; This function uses a non-reentrant model
 17074 ;;
 17075                           
 17076                           	psect	text67
 17077  006534                     __ptext67:
 17078                           	opt stack 0
 17079  006534                     _isalpha:
 17080                           	opt stack 12
 17081                           
 17082                           ; BSR set to: 0
 17083                           ;incstack = 0
 17084                           ;isalpha@c stored from wreg
 17085  006534  0100               	movlb	0	; () banked
 17086  006536  6F82               	movwf	isalpha@c& (0+255),b
 17087  006538  0E01               	movlw	1
 17088  00653A  0100               	movlb	0	; () banked
 17089  00653C  6F81               	movwf	_isalpha$6682& (0+255),b
 17090                           
 17091                           ; BSR set to: 0
 17092  00653E  0E7B               	movlw	123
 17093  006540  6182               	cpfslt	isalpha@c& (0+255),b
 17094  006542  D003               	goto	u12540
 17095                           
 17096                           ; BSR set to: 0
 17097  006544  0E61               	movlw	97
 17098  006546  6182               	cpfslt	isalpha@c& (0+255),b
 17099  006548  D008               	goto	l3614
 17100  00654A                     u12540:
 17101                           
 17102                           ; BSR set to: 0
 17103                           
 17104                           ; BSR set to: 0
 17105  00654A  5182               	movf	isalpha@c& (0+255),w,b
 17106  00654C  ECC9  F033         	call	_isupper
 17107  006550  B0D8               	btfsc	status,0,c
 17108  006552  D003               	goto	l3614
 17109  006554  0E00               	movlw	0
 17110  006556  0100               	movlb	0	; () banked
 17111  006558  6F81               	movwf	_isalpha$6682& (0+255),b
 17112  00655A                     l3614:
 17113                           
 17114                           ; BSR set to: 0
 17115  00655A  C081  F080         	movff	_isalpha$6682,??_isalpha
 17116  00655E  0100               	movlb	0	; () banked
 17117  006560  3180               	rrcf	??_isalpha& (0+255),w,b
 17118  006562  0012               	return	
 17119  006564                     __end_of_isalpha:
 17120                           	opt stack 0
 17121                           tosu	equ	0xFFF
 17122                           tosh	equ	0xFFE
 17123                           tosl	equ	0xFFD
 17124                           pclath	equ	0xFFA
 17125                           tblptru	equ	0xFF8
 17126                           tblptrh	equ	0xFF7
 17127                           tblptrl	equ	0xFF6
 17128                           tablat	equ	0xFF5
 17129                           prodh	equ	0xFF4
 17130                           prodl	equ	0xFF3
 17131                           intcon	equ	0xFF2
 17132                           intcon2	equ	0xFF1
 17133                           intcon3	equ	0xFF0
 17134                           indf0	equ	0xFEF
 17135                           postinc0	equ	0xFEE
 17136                           plusw0	equ	0xFEB
 17137                           fsr0h	equ	0xFEA
 17138                           fsr0l	equ	0xFE9
 17139                           wreg	equ	0xFE8
 17140                           indf1	equ	0xFE7
 17141                           postinc1	equ	0xFE6
 17142                           postdec1	equ	0xFE5
 17143                           fsr1h	equ	0xFE2
 17144                           fsr1l	equ	0xFE1
 17145                           indf2	equ	0xFDF
 17146                           postinc2	equ	0xFDE
 17147                           postdec2	equ	0xFDD
 17148                           plusw2	equ	0xFDB
 17149                           fsr2h	equ	0xFDA
 17150                           fsr2l	equ	0xFD9
 17151                           status	equ	0xFD8
 17152                           
 17153 ;; *************** function _isupper *****************
 17154 ;; Defined at:
 17155 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isupper.c"
 17156 ;; Parameters:    Size  Location     Type
 17157 ;;  c               1    wreg     unsigned char 
 17158 ;; Auto vars:     Size  Location     Type
 17159 ;;  c               1   31[BANK0 ] unsigned char 
 17160 ;; Return value:  Size  Location     Type
 17161 ;;		None               void
 17162 ;; Registers used:
 17163 ;;		wreg, status,2, status,0
 17164 ;; Tracked objects:
 17165 ;;		On entry : 0/0
 17166 ;;		On exit  : 0/0
 17167 ;;		Unchanged: 0/0
 17168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17169 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17170 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17171 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17172 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17173 ;;Total ram usage:        3 bytes
 17174 ;; Hardware stack levels used:    1
 17175 ;; Hardware stack levels required when called:   11
 17176 ;; This function calls:
 17177 ;;		Nothing
 17178 ;; This function is called by:
 17179 ;;		_xtoi
 17180 ;;		_isalpha
 17181 ;; This function uses a non-reentrant model
 17182 ;;
 17183                           
 17184                           	psect	text68
 17185  006792                     __ptext68:
 17186                           	opt stack 0
 17187  006792                     _isupper:
 17188                           	opt stack 13
 17189                           
 17190                           ; BSR set to: 0
 17191                           ;incstack = 0
 17192                           ;isupper@c stored from wreg
 17193  006792  0100               	movlb	0	; () banked
 17194  006794  6F7F               	movwf	isupper@c& (0+255),b
 17195  006796  0E00               	movlw	0
 17196  006798  0100               	movlb	0	; () banked
 17197  00679A  6F7E               	movwf	_isupper$6688& (0+255),b
 17198                           
 17199                           ; BSR set to: 0
 17200  00679C  0E5B               	movlw	91
 17201  00679E  617F               	cpfslt	isupper@c& (0+255),b
 17202  0067A0  D005               	goto	l3624
 17203                           
 17204                           ; BSR set to: 0
 17205  0067A2  0E40               	movlw	64
 17206  0067A4  657F               	cpfsgt	isupper@c& (0+255),b
 17207  0067A6  D002               	goto	l3624
 17208                           
 17209                           ; BSR set to: 0
 17210  0067A8  0E01               	movlw	1
 17211  0067AA  6F7E               	movwf	_isupper$6688& (0+255),b
 17212  0067AC                     l3624:
 17213                           
 17214                           ; BSR set to: 0
 17215                           
 17216                           ; BSR set to: 0
 17217  0067AC  C07E  F07D         	movff	_isupper$6688,??_isupper
 17218  0067B0  317D               	rrcf	??_isupper& (0+255),w,b
 17219  0067B2  0012               	return	
 17220  0067B4                     __end_of_isupper:
 17221                           	opt stack 0
 17222                           tosu	equ	0xFFF
 17223                           tosh	equ	0xFFE
 17224                           tosl	equ	0xFFD
 17225                           pclath	equ	0xFFA
 17226                           tblptru	equ	0xFF8
 17227                           tblptrh	equ	0xFF7
 17228                           tblptrl	equ	0xFF6
 17229                           tablat	equ	0xFF5
 17230                           prodh	equ	0xFF4
 17231                           prodl	equ	0xFF3
 17232                           intcon	equ	0xFF2
 17233                           intcon2	equ	0xFF1
 17234                           intcon3	equ	0xFF0
 17235                           indf0	equ	0xFEF
 17236                           postinc0	equ	0xFEE
 17237                           plusw0	equ	0xFEB
 17238                           fsr0h	equ	0xFEA
 17239                           fsr0l	equ	0xFE9
 17240                           wreg	equ	0xFE8
 17241                           indf1	equ	0xFE7
 17242                           postinc1	equ	0xFE6
 17243                           postdec1	equ	0xFE5
 17244                           fsr1h	equ	0xFE2
 17245                           fsr1l	equ	0xFE1
 17246                           indf2	equ	0xFDF
 17247                           postinc2	equ	0xFDE
 17248                           postdec2	equ	0xFDD
 17249                           plusw2	equ	0xFDB
 17250                           fsr2h	equ	0xFDA
 17251                           fsr2l	equ	0xFD9
 17252                           status	equ	0xFD8
 17253                           
 17254 ;; *************** function _strcpy *****************
 17255 ;; Defined at:
 17256 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/strcpy.c"
 17257 ;; Parameters:    Size  Location     Type
 17258 ;;  to              2   29[BANK0 ] PTR unsigned char 
 17259 ;;		 -> Term_MainSm@Data(50), Terminal@UsbTxBuffer(200), 
 17260 ;;  from            2   31[BANK0 ] PTR const unsigned char 
 17261 ;;		 -> STR_23(20), STR_21(42), 
 17262 ;; Auto vars:     Size  Location     Type
 17263 ;;  cp              2   33[BANK0 ] PTR unsigned char 
 17264 ;;		 -> Term_MainSm@Data(50), Terminal@UsbTxBuffer(200), 
 17265 ;; Return value:  Size  Location     Type
 17266 ;;                  2   29[BANK0 ] PTR unsigned char 
 17267 ;; Registers used:
 17268 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 17269 ;; Tracked objects:
 17270 ;;		On entry : 0/0
 17271 ;;		On exit  : 0/0
 17272 ;;		Unchanged: 0/0
 17273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17274 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17275 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17277 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17278 ;;Total ram usage:        6 bytes
 17279 ;; Hardware stack levels used:    1
 17280 ;; Hardware stack levels required when called:   11
 17281 ;; This function calls:
 17282 ;;		Nothing
 17283 ;; This function is called by:
 17284 ;;		_Terminal
 17285 ;;		_Term_MainSm
 17286 ;; This function uses a non-reentrant model
 17287 ;;
 17288                           
 17289                           	psect	text69
 17290  0064A2                     __ptext69:
 17291                           	opt stack 0
 17292  0064A2                     _strcpy:
 17293                           	opt stack 15
 17294                           
 17295                           ; BSR set to: 0
 17296                           ;incstack = 0
 17297  0064A2  C07D  F081         	movff	strcpy@to,strcpy@cp
 17298  0064A6  C07E  F082         	movff	strcpy@to+1,strcpy@cp+1
 17299  0064AA  D005               	goto	l3516
 17300  0064AC  0100               	movlb	0	; () banked
 17301  0064AE  4B81               	infsnz	strcpy@cp& (0+255),f,b
 17302  0064B0  2B82               	incf	(strcpy@cp+1)& (0+255),f,b
 17303  0064B2  4B7F               	infsnz	strcpy@from& (0+255),f,b
 17304  0064B4  2B80               	incf	(strcpy@from+1)& (0+255),f,b
 17305  0064B6                     l3516:
 17306                           
 17307                           ; BSR set to: 0
 17308  0064B6  C07F  FFF6         	movff	strcpy@from,tblptrl
 17309  0064BA  C080  FFF7         	movff	strcpy@from+1,tblptrh
 17310  0064BE                     	if	0	;tblptru may be non-zero
 17311  0064BE                     	endif
 17312  0064BE                     	if	0	;tblptru may be non-zero
 17313  0064BE                     	endif
 17314  0064BE  C081  FFD9         	movff	strcpy@cp,fsr2l
 17315  0064C2  C082  FFDA         	movff	strcpy@cp+1,fsr2h
 17316  0064C6  0008               	tblrd		*
 17317  0064C8  CFF5 FFDF          	movff	tablat,indf2
 17318  0064CC  50DF               	movf	indf2,w,c
 17319  0064CE  B4D8               	btfsc	status,2,c
 17320  0064D0  0012               	return	
 17321  0064D2  D7EC               	goto	l3517
 17322  0064D4                     __end_of_strcpy:
 17323                           	opt stack 0
 17324                           tosu	equ	0xFFF
 17325                           tosh	equ	0xFFE
 17326                           tosl	equ	0xFFD
 17327                           pclath	equ	0xFFA
 17328                           tblptru	equ	0xFF8
 17329                           tblptrh	equ	0xFF7
 17330                           tblptrl	equ	0xFF6
 17331                           tablat	equ	0xFF5
 17332                           prodh	equ	0xFF4
 17333                           prodl	equ	0xFF3
 17334                           intcon	equ	0xFF2
 17335                           intcon2	equ	0xFF1
 17336                           intcon3	equ	0xFF0
 17337                           indf0	equ	0xFEF
 17338                           postinc0	equ	0xFEE
 17339                           plusw0	equ	0xFEB
 17340                           fsr0h	equ	0xFEA
 17341                           fsr0l	equ	0xFE9
 17342                           wreg	equ	0xFE8
 17343                           indf1	equ	0xFE7
 17344                           postinc1	equ	0xFE6
 17345                           postdec1	equ	0xFE5
 17346                           fsr1h	equ	0xFE2
 17347                           fsr1l	equ	0xFE1
 17348                           indf2	equ	0xFDF
 17349                           postinc2	equ	0xFDE
 17350                           postdec2	equ	0xFDD
 17351                           plusw2	equ	0xFDB
 17352                           fsr2h	equ	0xFDA
 17353                           fsr2l	equ	0xFD9
 17354                           status	equ	0xFD8
 17355                           
 17356 ;; *************** function _putUSBUSART *****************
 17357 ;; Defined at:
 17358 ;;		line 559 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 17359 ;; Parameters:    Size  Location     Type
 17360 ;;  data            2   35[BANK0 ] PTR unsigned char 
 17361 ;;		 -> MsgReady(23), Term_MainSm@Data(50), MsgFormat(240), Welcome(137), 
 17362 ;;		 -> Terminal@UsbTxBuffer(200), Terminal@TermRxBuffer(50), Terminal@Payload(80), Terminal@UsbRxBuffer(200), 
 17363 ;;		 -> RxBuffer(400), 
 17364 ;;  length          1   37[BANK0 ] unsigned char 
 17365 ;; Auto vars:     Size  Location     Type
 17366 ;;		None
 17367 ;; Return value:  Size  Location     Type
 17368 ;;                  1    wreg      void 
 17369 ;; Registers used:
 17370 ;;		wreg, status,2, status,0
 17371 ;; Tracked objects:
 17372 ;;		On entry : 0/0
 17373 ;;		On exit  : 0/0
 17374 ;;		Unchanged: 0/0
 17375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17376 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17379 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17380 ;;Total ram usage:        3 bytes
 17381 ;; Hardware stack levels used:    1
 17382 ;; Hardware stack levels required when called:   11
 17383 ;; This function calls:
 17384 ;;		Nothing
 17385 ;; This function is called by:
 17386 ;;		_Terminal
 17387 ;;		_Term_MainSm
 17388 ;;		_GsmGprsTerminal
 17389 ;; This function uses a non-reentrant model
 17390 ;;
 17391                           
 17392                           	psect	text70
 17393  0067B4                     __ptext70:
 17394                           	opt stack 0
 17395  0067B4                     _putUSBUSART:
 17396                           	opt stack 15
 17397                           
 17398                           ;usb_device_cdc.c: 584: ;
 17399                           ;usb_device_cdc.c: 585: if(cdc_trf_state == 0)
 17400                           
 17401                           ;incstack = 0
 17402  0067B4  0100               	movlb	0	; () banked
 17403  0067B6  51C8               	movf	_cdc_trf_state& (0+255),w,b
 17404  0067B8  A4D8               	btfss	status,2,c
 17405  0067BA  0012               	return	
 17406                           
 17407                           ; BSR set to: 0
 17408                           ;usb_device_cdc.c: 586: {
 17409                           ;usb_device_cdc.c: 587: { pCDCSrc.bRam = (uint8_t*)data; cdc_tx_len = length; cdc_mem_ty
      +                          pe = 0x01; cdc_trf_state = 1; };
 17410  0067BC  C083  F2CB         	movff	putUSBUSART@data,_pCDCSrc
 17411  0067C0  C084  F2CC         	movff	putUSBUSART@data+1,_pCDCSrc+1
 17412                           
 17413                           ; BSR set to: 0
 17414  0067C4  C085  F0C7         	movff	putUSBUSART@length,_cdc_tx_len
 17415                           
 17416                           ; BSR set to: 0
 17417  0067C8  0E01               	movlw	1
 17418  0067CA  0101               	movlb	1	; () banked
 17419  0067CC  6FDD               	movwf	_cdc_mem_type& (0+255),b
 17420                           
 17421                           ; BSR set to: 1
 17422  0067CE  0E01               	movlw	1
 17423  0067D0  0100               	movlb	0	; () banked
 17424  0067D2  6FC8               	movwf	_cdc_trf_state& (0+255),b
 17425  0067D4  0012               	return	
 17426  0067D6                     __end_of_putUSBUSART:
 17427                           	opt stack 0
 17428                           tosu	equ	0xFFF
 17429                           tosh	equ	0xFFE
 17430                           tosl	equ	0xFFD
 17431                           pclath	equ	0xFFA
 17432                           tblptru	equ	0xFF8
 17433                           tblptrh	equ	0xFF7
 17434                           tblptrl	equ	0xFF6
 17435                           tablat	equ	0xFF5
 17436                           prodh	equ	0xFF4
 17437                           prodl	equ	0xFF3
 17438                           intcon	equ	0xFF2
 17439                           intcon2	equ	0xFF1
 17440                           intcon3	equ	0xFF0
 17441                           indf0	equ	0xFEF
 17442                           postinc0	equ	0xFEE
 17443                           plusw0	equ	0xFEB
 17444                           fsr0h	equ	0xFEA
 17445                           fsr0l	equ	0xFE9
 17446                           wreg	equ	0xFE8
 17447                           indf1	equ	0xFE7
 17448                           postinc1	equ	0xFE6
 17449                           postdec1	equ	0xFE5
 17450                           fsr1h	equ	0xFE2
 17451                           fsr1l	equ	0xFE1
 17452                           indf2	equ	0xFDF
 17453                           postinc2	equ	0xFDE
 17454                           postdec2	equ	0xFDD
 17455                           plusw2	equ	0xFDB
 17456                           fsr2h	equ	0xFDA
 17457                           fsr2l	equ	0xFD9
 17458                           status	equ	0xFD8
 17459                           
 17460 ;; *************** function _itoa *****************
 17461 ;; Defined at:
 17462 ;;		line 4 in file "/opt/microchip/xc8/v1.45/sources/common/itoa.c"
 17463 ;; Parameters:    Size  Location     Type
 17464 ;;  buf             2   51[BANK0 ] PTR unsigned char 
 17465 ;;		 -> Terminal@Payload(80), 
 17466 ;;  val             2   53[BANK0 ] int 
 17467 ;;  base            2   55[BANK0 ] int 
 17468 ;; Auto vars:     Size  Location     Type
 17469 ;;  cp              2   57[BANK0 ] PTR unsigned char 
 17470 ;;		 -> Terminal@Payload(80), 
 17471 ;; Return value:  Size  Location     Type
 17472 ;;                  2   51[BANK0 ] PTR unsigned char 
 17473 ;; Registers used:
 17474 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17475 ;; Tracked objects:
 17476 ;;		On entry : 0/0
 17477 ;;		On exit  : 0/0
 17478 ;;		Unchanged: 0/0
 17479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17480 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17481 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17482 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17483 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17484 ;;Total ram usage:        8 bytes
 17485 ;; Hardware stack levels used:    1
 17486 ;; Hardware stack levels required when called:   13
 17487 ;; This function calls:
 17488 ;;		_utoa
 17489 ;; This function is called by:
 17490 ;;		_Terminal
 17491 ;; This function uses a non-reentrant model
 17492 ;;
 17493                           
 17494                           	psect	text71
 17495  0060A8                     __ptext71:
 17496                           	opt stack 0
 17497  0060A8                     _itoa:
 17498                           	opt stack 12
 17499                           
 17500                           ; BSR set to: 0
 17501                           ;incstack = 0
 17502  0060A8  C093  F099         	movff	itoa@buf,itoa@cp
 17503  0060AC  C094  F09A         	movff	itoa@buf+1,itoa@cp+1
 17504  0060B0  0100               	movlb	0	; () banked
 17505  0060B2  AF96               	btfss	(itoa@val+1)& (0+255),7,b
 17506  0060B4  D00C               	goto	l3264
 17507                           
 17508                           ; BSR set to: 0
 17509  0060B6  C093  FFD9         	movff	itoa@buf,fsr2l
 17510  0060BA  C094  FFDA         	movff	itoa@buf+1,fsr2h
 17511  0060BE  0E2D               	movlw	45
 17512  0060C0  6EDF               	movwf	indf2,c
 17513                           
 17514                           ; BSR set to: 0
 17515  0060C2  4B93               	infsnz	itoa@buf& (0+255),f,b
 17516  0060C4  2B94               	incf	(itoa@buf+1)& (0+255),f,b
 17517                           
 17518                           ; BSR set to: 0
 17519  0060C6  6D95               	negf	itoa@val& (0+255),b
 17520  0060C8  1F96               	comf	(itoa@val+1)& (0+255),f,b
 17521  0060CA  B0D8               	btfsc	status,0,c
 17522  0060CC  2B96               	incf	(itoa@val+1)& (0+255),f,b
 17523  0060CE                     l3264:
 17524                           
 17525                           ; BSR set to: 0
 17526                           
 17527                           ; BSR set to: 0
 17528  0060CE  C093  F08A         	movff	itoa@buf,utoa@buf
 17529  0060D2  C094  F08B         	movff	itoa@buf+1,utoa@buf+1
 17530  0060D6  C095  F08C         	movff	itoa@val,utoa@val
 17531  0060DA  C096  F08D         	movff	itoa@val+1,utoa@val+1
 17532  0060DE  C097  F08E         	movff	itoa@base,utoa@base
 17533  0060E2  C098  F08F         	movff	itoa@base+1,utoa@base+1
 17534  0060E6  ECBE  F022         	call	_utoa	;wreg free
 17535  0060EA  0012               	return	
 17536  0060EC                     __end_of_itoa:
 17537                           	opt stack 0
 17538                           tosu	equ	0xFFF
 17539                           tosh	equ	0xFFE
 17540                           tosl	equ	0xFFD
 17541                           pclath	equ	0xFFA
 17542                           tblptru	equ	0xFF8
 17543                           tblptrh	equ	0xFF7
 17544                           tblptrl	equ	0xFF6
 17545                           tablat	equ	0xFF5
 17546                           prodh	equ	0xFF4
 17547                           prodl	equ	0xFF3
 17548                           intcon	equ	0xFF2
 17549                           intcon2	equ	0xFF1
 17550                           intcon3	equ	0xFF0
 17551                           indf0	equ	0xFEF
 17552                           postinc0	equ	0xFEE
 17553                           plusw0	equ	0xFEB
 17554                           fsr0h	equ	0xFEA
 17555                           fsr0l	equ	0xFE9
 17556                           wreg	equ	0xFE8
 17557                           indf1	equ	0xFE7
 17558                           postinc1	equ	0xFE6
 17559                           postdec1	equ	0xFE5
 17560                           fsr1h	equ	0xFE2
 17561                           fsr1l	equ	0xFE1
 17562                           indf2	equ	0xFDF
 17563                           postinc2	equ	0xFDE
 17564                           postdec2	equ	0xFDD
 17565                           plusw2	equ	0xFDB
 17566                           fsr2h	equ	0xFDA
 17567                           fsr2l	equ	0xFD9
 17568                           status	equ	0xFD8
 17569                           
 17570 ;; *************** function _utoa *****************
 17571 ;; Defined at:
 17572 ;;		line 17 in file "/opt/microchip/xc8/v1.45/sources/common/itoa.c"
 17573 ;; Parameters:    Size  Location     Type
 17574 ;;  buf             2   42[BANK0 ] PTR unsigned char 
 17575 ;;		 -> Term_MainSm@FwkBuildStr(4), Term_MainSm@FwkMinorStr(4), Term_MainSm@FwkMajorStr(4), Terminal@Payload(80), 
 17576 ;;  val             2   44[BANK0 ] unsigned int 
 17577 ;;  base            2   46[BANK0 ] int 
 17578 ;; Auto vars:     Size  Location     Type
 17579 ;;  v               2   48[BANK0 ] unsigned int 
 17580 ;;  c               1   50[BANK0 ] unsigned char 
 17581 ;; Return value:  Size  Location     Type
 17582 ;;                  2   42[BANK0 ] PTR unsigned char 
 17583 ;; Registers used:
 17584 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17585 ;; Tracked objects:
 17586 ;;		On entry : 0/0
 17587 ;;		On exit  : 0/0
 17588 ;;		Unchanged: 0/0
 17589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17590 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17591 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17593 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17594 ;;Total ram usage:        9 bytes
 17595 ;; Hardware stack levels used:    1
 17596 ;; Hardware stack levels required when called:   12
 17597 ;; This function calls:
 17598 ;;		___lwdiv
 17599 ;;		___lwmod
 17600 ;; This function is called by:
 17601 ;;		_Term_MainSm
 17602 ;;		_itoa
 17603 ;; This function uses a non-reentrant model
 17604 ;;
 17605                           
 17606                           	psect	text72
 17607  00457C                     __ptext72:
 17608                           	opt stack 0
 17609  00457C                     _utoa:
 17610                           	opt stack 14
 17611                           
 17612                           ;incstack = 0
 17613  00457C  C08C  F090         	movff	utoa@val,utoa@v
 17614  004580  C08D  F091         	movff	utoa@val+1,utoa@v+1
 17615  004584  C090  F083         	movff	utoa@v,___lwdiv@dividend
 17616  004588  C091  F084         	movff	utoa@v+1,___lwdiv@dividend+1
 17617  00458C  C08E  F085         	movff	utoa@base,___lwdiv@divisor
 17618  004590  C08F  F086         	movff	utoa@base+1,___lwdiv@divisor+1
 17619  004594  EC14  F02E         	call	___lwdiv	;wreg free
 17620  004598  C083  F090         	movff	?___lwdiv,utoa@v
 17621  00459C  C084  F091         	movff	?___lwdiv+1,utoa@v+1
 17622  0045A0  0100               	movlb	0	; () banked
 17623  0045A2  4B8A               	infsnz	utoa@buf& (0+255),f,b
 17624  0045A4  2B8B               	incf	(utoa@buf+1)& (0+255),f,b
 17625                           
 17626                           ; BSR set to: 0
 17627  0045A6  5190               	movf	utoa@v& (0+255),w,b
 17628  0045A8  1191               	iorwf	(utoa@v+1)& (0+255),w,b
 17629  0045AA  A4D8               	btfss	status,2,c
 17630  0045AC  D7EB               	goto	l3268
 17631                           
 17632                           ; BSR set to: 0
 17633                           
 17634                           ; BSR set to: 0
 17635  0045AE  C08A  FFD9         	movff	utoa@buf,fsr2l
 17636  0045B2  C08B  FFDA         	movff	utoa@buf+1,fsr2h
 17637  0045B6  0E00               	movlw	0
 17638  0045B8  6EDF               	movwf	indf2,c
 17639                           
 17640                           ; BSR set to: 0
 17641  0045BA  078A               	decf	utoa@buf& (0+255),f,b
 17642  0045BC  A0D8               	btfss	status,0,c
 17643  0045BE  078B               	decf	(utoa@buf+1)& (0+255),f,b
 17644  0045C0                     
 17645                           ; BSR set to: 0
 17646                           
 17647                           ; BSR set to: 0
 17648  0045C0  C08C  F07D         	movff	utoa@val,___lwmod@dividend
 17649  0045C4  C08D  F07E         	movff	utoa@val+1,___lwmod@dividend+1
 17650  0045C8  C08E  F07F         	movff	utoa@base,___lwmod@divisor
 17651  0045CC  C08F  F080         	movff	utoa@base+1,___lwmod@divisor+1
 17652  0045D0  EC76  F030         	call	___lwmod	;wreg free
 17653  0045D4  0100               	movlb	0	; () banked
 17654  0045D6  517D               	movf	?___lwmod& (0+255),w,b
 17655  0045D8  6F92               	movwf	utoa@c& (0+255),b
 17656                           
 17657                           ; BSR set to: 0
 17658  0045DA  C08C  F083         	movff	utoa@val,___lwdiv@dividend
 17659  0045DE  C08D  F084         	movff	utoa@val+1,___lwdiv@dividend+1
 17660  0045E2  C08E  F085         	movff	utoa@base,___lwdiv@divisor
 17661  0045E6  C08F  F086         	movff	utoa@base+1,___lwdiv@divisor+1
 17662  0045EA  EC14  F02E         	call	___lwdiv	;wreg free
 17663  0045EE  C083  F08C         	movff	?___lwdiv,utoa@val
 17664  0045F2  C084  F08D         	movff	?___lwdiv+1,utoa@val+1
 17665  0045F6  0E09               	movlw	9
 17666  0045F8  0100               	movlb	0	; () banked
 17667  0045FA  6592               	cpfsgt	utoa@c& (0+255),b
 17668  0045FC  D002               	goto	l3271
 17669                           
 17670                           ; BSR set to: 0
 17671  0045FE  0E07               	movlw	7
 17672  004600  2792               	addwf	utoa@c& (0+255),f,b
 17673  004602                     l3271:
 17674                           
 17675                           ; BSR set to: 0
 17676  004602  0E30               	movlw	48
 17677  004604  2792               	addwf	utoa@c& (0+255),f,b
 17678                           
 17679                           ; BSR set to: 0
 17680  004606  C08A  FFD9         	movff	utoa@buf,fsr2l
 17681  00460A  C08B  FFDA         	movff	utoa@buf+1,fsr2h
 17682  00460E  C092  FFDF         	movff	utoa@c,indf2
 17683                           
 17684                           ; BSR set to: 0
 17685  004612  078A               	decf	utoa@buf& (0+255),f,b
 17686  004614  A0D8               	btfss	status,0,c
 17687  004616  078B               	decf	(utoa@buf+1)& (0+255),f,b
 17688                           
 17689                           ; BSR set to: 0
 17690  004618  518C               	movf	utoa@val& (0+255),w,b
 17691  00461A  118D               	iorwf	(utoa@val+1)& (0+255),w,b
 17692  00461C  A4D8               	btfss	status,2,c
 17693  00461E  D7D0               	goto	l3270
 17694                           
 17695                           ; BSR set to: 0
 17696                           ;	Return value of _utoa is never used
 17697                           
 17698                           ; BSR set to: 0
 17699  004620  4B8A               	infsnz	utoa@buf& (0+255),f,b
 17700  004622  2B8B               	incf	(utoa@buf+1)& (0+255),f,b
 17701  004624  0012               	return	
 17702  004626                     __end_of_utoa:
 17703                           	opt stack 0
 17704                           tosu	equ	0xFFF
 17705                           tosh	equ	0xFFE
 17706                           tosl	equ	0xFFD
 17707                           pclath	equ	0xFFA
 17708                           tblptru	equ	0xFF8
 17709                           tblptrh	equ	0xFF7
 17710                           tblptrl	equ	0xFF6
 17711                           tablat	equ	0xFF5
 17712                           prodh	equ	0xFF4
 17713                           prodl	equ	0xFF3
 17714                           intcon	equ	0xFF2
 17715                           intcon2	equ	0xFF1
 17716                           intcon3	equ	0xFF0
 17717                           indf0	equ	0xFEF
 17718                           postinc0	equ	0xFEE
 17719                           plusw0	equ	0xFEB
 17720                           fsr0h	equ	0xFEA
 17721                           fsr0l	equ	0xFE9
 17722                           wreg	equ	0xFE8
 17723                           indf1	equ	0xFE7
 17724                           postinc1	equ	0xFE6
 17725                           postdec1	equ	0xFE5
 17726                           fsr1h	equ	0xFE2
 17727                           fsr1l	equ	0xFE1
 17728                           indf2	equ	0xFDF
 17729                           postinc2	equ	0xFDE
 17730                           postdec2	equ	0xFDD
 17731                           plusw2	equ	0xFDB
 17732                           fsr2h	equ	0xFDA
 17733                           fsr2l	equ	0xFD9
 17734                           status	equ	0xFD8
 17735                           
 17736 ;; *************** function ___lwmod *****************
 17737 ;; Defined at:
 17738 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/lwmod.c"
 17739 ;; Parameters:    Size  Location     Type
 17740 ;;  dividend        2   29[BANK0 ] unsigned int 
 17741 ;;  divisor         2   31[BANK0 ] unsigned int 
 17742 ;; Auto vars:     Size  Location     Type
 17743 ;;  counter         1   33[BANK0 ] unsigned char 
 17744 ;; Return value:  Size  Location     Type
 17745 ;;                  2   29[BANK0 ] unsigned int 
 17746 ;; Registers used:
 17747 ;;		wreg, status,2, status,0
 17748 ;; Tracked objects:
 17749 ;;		On entry : 0/0
 17750 ;;		On exit  : 0/0
 17751 ;;		Unchanged: 0/0
 17752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17753 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17754 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17755 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17756 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17757 ;;Total ram usage:        5 bytes
 17758 ;; Hardware stack levels used:    1
 17759 ;; Hardware stack levels required when called:   11
 17760 ;; This function calls:
 17761 ;;		Nothing
 17762 ;; This function is called by:
 17763 ;;		_utoa
 17764 ;; This function uses a non-reentrant model
 17765 ;;
 17766                           
 17767                           	psect	text73
 17768  0060EC                     __ptext73:
 17769                           	opt stack 0
 17770  0060EC                     ___lwmod:
 17771                           	opt stack 14
 17772                           
 17773                           ; BSR set to: 0
 17774                           ;incstack = 0
 17775  0060EC  0100               	movlb	0	; () banked
 17776  0060EE  517F               	movf	___lwmod@divisor& (0+255),w,b
 17777  0060F0  1180               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 17778  0060F2  B4D8               	btfsc	status,2,c
 17779  0060F4  D018               	goto	l3366
 17780                           
 17781                           ; BSR set to: 0
 17782  0060F6  0E01               	movlw	1
 17783  0060F8  6F81               	movwf	___lwmod@counter& (0+255),b
 17784  0060FA  D004               	goto	l3361
 17785  0060FC                     
 17786                           ; BSR set to: 0
 17787                           
 17788                           ; BSR set to: 0
 17789  0060FC  90D8               	bcf	status,0,c
 17790  0060FE  377F               	rlcf	___lwmod@divisor& (0+255),f,b
 17791  006100  3780               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 17792  006102  2B81               	incf	___lwmod@counter& (0+255),f,b
 17793  006104                     l3361:
 17794                           
 17795                           ; BSR set to: 0
 17796                           
 17797                           ; BSR set to: 0
 17798  006104  AF80               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 17799  006106  D7FA               	goto	l3362
 17800  006108                     u12170:
 17801                           
 17802                           ; BSR set to: 0
 17803                           
 17804                           ; BSR set to: 0
 17805                           
 17806                           ; BSR set to: 0
 17807  006108  517F               	movf	___lwmod@divisor& (0+255),w,b
 17808  00610A  5D7D               	subwf	___lwmod@dividend& (0+255),w,b
 17809  00610C  5180               	movf	(___lwmod@divisor+1)& (0+255),w,b
 17810  00610E  597E               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 17811  006110  A0D8               	btfss	status,0,c
 17812  006112  D004               	goto	l3365
 17813                           
 17814                           ; BSR set to: 0
 17815  006114  517F               	movf	___lwmod@divisor& (0+255),w,b
 17816  006116  5F7D               	subwf	___lwmod@dividend& (0+255),f,b
 17817  006118  5180               	movf	(___lwmod@divisor+1)& (0+255),w,b
 17818  00611A  5B7E               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 17819  00611C                     l3365:
 17820                           
 17821                           ; BSR set to: 0
 17822                           
 17823                           ; BSR set to: 0
 17824  00611C  90D8               	bcf	status,0,c
 17825  00611E  3380               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 17826  006120  337F               	rrcf	___lwmod@divisor& (0+255),f,b
 17827                           
 17828                           ; BSR set to: 0
 17829  006122  2F81               	decfsz	___lwmod@counter& (0+255),f,b
 17830  006124  D7F1               	goto	u12170
 17831  006126                     l3366:
 17832                           
 17833                           ; BSR set to: 0
 17834                           
 17835                           ; BSR set to: 0
 17836  006126  C07D  F07D         	movff	___lwmod@dividend,?___lwmod
 17837  00612A  C07E  F07E         	movff	___lwmod@dividend+1,?___lwmod+1
 17838                           
 17839                           ; BSR set to: 0
 17840  00612E  0012               	return		;funcret
 17841  006130                     __end_of___lwmod:
 17842                           	opt stack 0
 17843                           tosu	equ	0xFFF
 17844                           tosh	equ	0xFFE
 17845                           tosl	equ	0xFFD
 17846                           pclath	equ	0xFFA
 17847                           tblptru	equ	0xFF8
 17848                           tblptrh	equ	0xFF7
 17849                           tblptrl	equ	0xFF6
 17850                           tablat	equ	0xFF5
 17851                           prodh	equ	0xFF4
 17852                           prodl	equ	0xFF3
 17853                           intcon	equ	0xFF2
 17854                           intcon2	equ	0xFF1
 17855                           intcon3	equ	0xFF0
 17856                           indf0	equ	0xFEF
 17857                           postinc0	equ	0xFEE
 17858                           plusw0	equ	0xFEB
 17859                           fsr0h	equ	0xFEA
 17860                           fsr0l	equ	0xFE9
 17861                           wreg	equ	0xFE8
 17862                           indf1	equ	0xFE7
 17863                           postinc1	equ	0xFE6
 17864                           postdec1	equ	0xFE5
 17865                           fsr1h	equ	0xFE2
 17866                           fsr1l	equ	0xFE1
 17867                           indf2	equ	0xFDF
 17868                           postinc2	equ	0xFDE
 17869                           postdec2	equ	0xFDD
 17870                           plusw2	equ	0xFDB
 17871                           fsr2h	equ	0xFDA
 17872                           fsr2l	equ	0xFD9
 17873                           status	equ	0xFD8
 17874                           
 17875 ;; *************** function _getsUSBUSART *****************
 17876 ;; Defined at:
 17877 ;;		line 488 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 17878 ;; Parameters:    Size  Location     Type
 17879 ;;  buffer          2   36[BANK0 ] PTR unsigned char 
 17880 ;;		 -> Terminal@UsbRxBuffer(200), GsmGprsTerminal@UsbBuffer(200), 
 17881 ;;  len             1   38[BANK0 ] unsigned char 
 17882 ;; Auto vars:     Size  Location     Type
 17883 ;;		None
 17884 ;; Return value:  Size  Location     Type
 17885 ;;                  1    wreg      unsigned char 
 17886 ;; Registers used:
 17887 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17888 ;; Tracked objects:
 17889 ;;		On entry : 0/0
 17890 ;;		On exit  : 0/0
 17891 ;;		Unchanged: 0/0
 17892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17893 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17894 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17895 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17896 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17897 ;;Total ram usage:        4 bytes
 17898 ;; Hardware stack levels used:    1
 17899 ;; Hardware stack levels required when called:   12
 17900 ;; This function calls:
 17901 ;;		_USBTransferOnePacket
 17902 ;; This function is called by:
 17903 ;;		_Terminal
 17904 ;;		_GsmGprsTerminal
 17905 ;; This function uses a non-reentrant model
 17906 ;;
 17907                           
 17908                           	psect	text74
 17909  004BC8                     __ptext74:
 17910                           	opt stack 0
 17911  004BC8                     _getsUSBUSART:
 17912                           	opt stack 13
 17913                           
 17914                           ;usb_device_cdc.c: 490: cdc_rx_len = 0;
 17915                           
 17916                           ; BSR set to: 0
 17917                           ;incstack = 0
 17918  004BC8  0E00               	movlw	0
 17919  004BCA  0100               	movlb	0	; () banked
 17920  004BCC  6FC9               	movwf	_cdc_rx_len& (0+255),b
 17921                           
 17922                           ; BSR set to: 0
 17923                           ;usb_device_cdc.c: 492: if(!((CDCDataOutHandle != 0x0000) && ((*(volatile uint8_t*)CDCDa
      +                          taOutHandle & 0x80) != 0x00)))
 17924  004BCE  51BC               	movf	_CDCDataOutHandle& (0+255),w,b
 17925  004BD0  11BD               	iorwf	(_CDCDataOutHandle+1)& (0+255),w,b
 17926  004BD2  B4D8               	btfsc	status,2,c
 17927  004BD4  D006               	goto	u12900
 17928                           
 17929                           ; BSR set to: 0
 17930  004BD6  C0BC  FFD9         	movff	_CDCDataOutHandle,fsr2l
 17931  004BDA  C0BD  FFDA         	movff	_CDCDataOutHandle+1,fsr2h
 17932  004BDE  BEDF               	btfsc	indf2,7,c
 17933  004BE0  D03B               	goto	l1924
 17934  004BE2                     u12900:
 17935                           
 17936                           ; BSR set to: 0
 17937                           ;usb_device_cdc.c: 493: {
 17938                           ;usb_device_cdc.c: 498: if(len > (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT))
 17939                           
 17940                           ; BSR set to: 0
 17941  004BE2  EE20 F001          	lfsr	2,1
 17942  004BE6  51BC               	movf	_CDCDataOutHandle& (0+255),w,b
 17943  004BE8  26D9               	addwf	fsr2l,f,c
 17944  004BEA  51BD               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 17945  004BEC  22DA               	addwfc	fsr2h,f,c
 17946  004BEE  5186               	movf	getsUSBUSART@len& (0+255),w,b
 17947  004BF0  5CDE               	subwf	postinc2,w,c
 17948  004BF2  B0D8               	btfsc	status,0,c
 17949  004BF4  D008               	goto	l1927
 17950                           
 17951                           ; BSR set to: 0
 17952                           ;usb_device_cdc.c: 499: len = (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT);
 17953  004BF6  EE20 F001          	lfsr	2,1
 17954  004BFA  51BC               	movf	_CDCDataOutHandle& (0+255),w,b
 17955  004BFC  26D9               	addwf	fsr2l,f,c
 17956  004BFE  51BD               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 17957  004C00  22DA               	addwfc	fsr2h,f,c
 17958  004C02  50DF               	movf	indf2,w,c
 17959  004C04  6F86               	movwf	getsUSBUSART@len& (0+255),b
 17960  004C06                     l1927:
 17961                           
 17962                           ; BSR set to: 0
 17963                           ;usb_device_cdc.c: 504: for(cdc_rx_len = 0; cdc_rx_len < len; cdc_rx_len++)
 17964                           
 17965                           ; BSR set to: 0
 17966  004C06  0E00               	movlw	0
 17967  004C08  6FC9               	movwf	_cdc_rx_len& (0+255),b
 17968  004C0A  D013               	goto	l1928
 17969  004C0C                     
 17970                           ; BSR set to: 0
 17971                           ;usb_device_cdc.c: 505: buffer[cdc_rx_len] = cdc_data_rx[cdc_rx_len];
 17972                           
 17973                           ; BSR set to: 0
 17974  004C0C  51C9               	movf	_cdc_rx_len& (0+255),w,b
 17975  004C0E  0D01               	mullw	1
 17976  004C10  0E00               	movlw	low _cdc_data_rx
 17977  004C12  24F3               	addwf	prodl,w,c
 17978  004C14  6ED9               	movwf	fsr2l,c
 17979  004C16  0E05               	movlw	high _cdc_data_rx
 17980  004C18  20F4               	addwfc	prodh,w,c
 17981  004C1A  6EDA               	movwf	fsr2h,c
 17982  004C1C  51C9               	movf	_cdc_rx_len& (0+255),w,b
 17983  004C1E  0D01               	mullw	1
 17984  004C20  50F3               	movf	prodl,w,c
 17985  004C22  2584               	addwf	getsUSBUSART@buffer& (0+255),w,b
 17986  004C24  6EE1               	movwf	fsr1l,c
 17987  004C26  50F4               	movf	prodh,w,c
 17988  004C28  2185               	addwfc	(getsUSBUSART@buffer+1)& (0+255),w,b
 17989  004C2A  6EE2               	movwf	fsr1h,c
 17990  004C2C  CFDF FFE7          	movff	indf2,indf1
 17991                           
 17992                           ; BSR set to: 0
 17993  004C30  2BC9               	incf	_cdc_rx_len& (0+255),f,b
 17994  004C32                     l1928:
 17995                           
 17996                           ; BSR set to: 0
 17997                           
 17998                           ; BSR set to: 0
 17999  004C32  5186               	movf	getsUSBUSART@len& (0+255),w,b
 18000  004C34  5DC9               	subwf	_cdc_rx_len& (0+255),w,b
 18001  004C36  A0D8               	btfss	status,0,c
 18002  004C38  D7E9               	goto	l1929
 18003                           
 18004                           ; BSR set to: 0
 18005                           ;usb_device_cdc.c: 511: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 18006                           
 18007                           ; BSR set to: 0
 18008  004C3A  0E00               	movlw	0
 18009  004C3C  6F7D               	movwf	USBTransferOnePacket@dir& (0+255),b
 18010  004C3E  0E00               	movlw	low _cdc_data_rx
 18011  004C40  6F7E               	movwf	USBTransferOnePacket@data& (0+255),b
 18012  004C42  0E05               	movlw	high _cdc_data_rx
 18013  004C44  6F7F               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 18014  004C46  0E40               	movlw	64
 18015  004C48  6F80               	movwf	USBTransferOnePacket@len& (0+255),b
 18016  004C4A  0E02               	movlw	2
 18017  004C4C  ECFB  F020         	call	_USBTransferOnePacket
 18018  004C50  C07D  F0BC         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
 18019  004C54  C07E  F0BD         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
 18020  004C58                     l1924:
 18021                           
 18022                           ;usb_device_cdc.c: 513: }
 18023                           ;usb_device_cdc.c: 515: return cdc_rx_len;
 18024  004C58  0100               	movlb	0	; () banked
 18025  004C5A  51C9               	movf	_cdc_rx_len& (0+255),w,b
 18026  004C5C  0012               	return	
 18027  004C5E                     __end_of_getsUSBUSART:
 18028                           	opt stack 0
 18029                           tosu	equ	0xFFF
 18030                           tosh	equ	0xFFE
 18031                           tosl	equ	0xFFD
 18032                           pclath	equ	0xFFA
 18033                           tblptru	equ	0xFF8
 18034                           tblptrh	equ	0xFF7
 18035                           tblptrl	equ	0xFF6
 18036                           tablat	equ	0xFF5
 18037                           prodh	equ	0xFF4
 18038                           prodl	equ	0xFF3
 18039                           intcon	equ	0xFF2
 18040                           intcon2	equ	0xFF1
 18041                           intcon3	equ	0xFF0
 18042                           indf0	equ	0xFEF
 18043                           postinc0	equ	0xFEE
 18044                           plusw0	equ	0xFEB
 18045                           fsr0h	equ	0xFEA
 18046                           fsr0l	equ	0xFE9
 18047                           wreg	equ	0xFE8
 18048                           indf1	equ	0xFE7
 18049                           postinc1	equ	0xFE6
 18050                           postdec1	equ	0xFE5
 18051                           fsr1h	equ	0xFE2
 18052                           fsr1l	equ	0xFE1
 18053                           indf2	equ	0xFDF
 18054                           postinc2	equ	0xFDE
 18055                           postdec2	equ	0xFDD
 18056                           plusw2	equ	0xFDB
 18057                           fsr2h	equ	0xFDA
 18058                           fsr2l	equ	0xFD9
 18059                           status	equ	0xFD8
 18060                           
 18061 ;; *************** function _USBTransferOnePacket *****************
 18062 ;; Defined at:
 18063 ;;		line 1013 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 18064 ;; Parameters:    Size  Location     Type
 18065 ;;  ep              1    wreg     unsigned char 
 18066 ;;  dir             1   29[BANK0 ] unsigned char 
 18067 ;;  data            2   30[BANK0 ] PTR unsigned char 
 18068 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 18069 ;;  len             1   32[BANK0 ] unsigned char 
 18070 ;; Auto vars:     Size  Location     Type
 18071 ;;  ep              1   33[BANK0 ] unsigned char 
 18072 ;;  handle          2   34[BANK0 ] PTR volatile struct __BD
 18073 ;;		 -> NULL(0), BDT(48), 
 18074 ;; Return value:  Size  Location     Type
 18075 ;;                  2   29[BANK0 ] PTR void 
 18076 ;; Registers used:
 18077 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 18078 ;; Tracked objects:
 18079 ;;		On entry : 0/0
 18080 ;;		On exit  : 0/0
 18081 ;;		Unchanged: 0/0
 18082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18083 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18084 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18085 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18086 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18087 ;;Total ram usage:        7 bytes
 18088 ;; Hardware stack levels used:    1
 18089 ;; Hardware stack levels required when called:   11
 18090 ;; This function calls:
 18091 ;;		Nothing
 18092 ;; This function is called by:
 18093 ;;		_CDCInitEP
 18094 ;;		_getsUSBUSART
 18095 ;;		_CDCTxService
 18096 ;;		_USBCDCEventHandler
 18097 ;; This function uses a non-reentrant model
 18098 ;;
 18099                           
 18100                           	psect	text75
 18101  0041F6                     __ptext75:
 18102                           	opt stack 0
 18103  0041F6                     _USBTransferOnePacket:
 18104                           	opt stack 13
 18105                           
 18106                           ; BSR set to: 0
 18107                           ;incstack = 0
 18108                           ;USBTransferOnePacket@ep stored from wreg
 18109  0041F6  0100               	movlb	0	; () banked
 18110  0041F8  6F81               	movwf	USBTransferOnePacket@ep& (0+255),b
 18111                           
 18112                           ;usb_device.c: 1015: volatile BDT_ENTRY* handle;
 18113                           ;usb_device.c: 1018: if(dir != 0)
 18114  0041FA  0100               	movlb	0	; () banked
 18115  0041FC  517D               	movf	USBTransferOnePacket@dir& (0+255),w,b
 18116  0041FE  B4D8               	btfsc	status,2,c
 18117  004200  D007               	goto	l1648
 18118                           
 18119                           ; BSR set to: 0
 18120                           ;usb_device.c: 1019: {
 18121                           ;usb_device.c: 1021: handle = pBDTEntryIn[ep];
 18122  004202  5181               	movf	USBTransferOnePacket@ep& (0+255),w,b
 18123  004204  0D02               	mullw	2
 18124  004206  0EB6               	movlw	low _pBDTEntryIn
 18125  004208  24F3               	addwf	prodl,w,c
 18126  00420A  6ED9               	movwf	fsr2l,c
 18127  00420C  0E00               	movlw	high _pBDTEntryIn
 18128  00420E  D006               	goto	L16
 18129  004210                     l1648:
 18130                           
 18131                           ; BSR set to: 0
 18132                           ;usb_device.c: 1023: else
 18133                           ;usb_device.c: 1024: {
 18134                           ;usb_device.c: 1026: handle = pBDTEntryOut[ep];
 18135                           
 18136                           ; BSR set to: 0
 18137  004210  5181               	movf	USBTransferOnePacket@ep& (0+255),w,b
 18138  004212  0D02               	mullw	2
 18139  004214  0E06               	movlw	low _pBDTEntryOut
 18140  004216  24F3               	addwf	prodl,w,c
 18141  004218  6ED9               	movwf	fsr2l,c
 18142  00421A  0E03               	movlw	high _pBDTEntryOut
 18143  00421C                     L16:
 18144  00421C  20F4               	addwfc	prodh,w,c
 18145  00421E  6EDA               	movwf	fsr2h,c
 18146  004220  CFDE F082          	movff	postinc2,USBTransferOnePacket@handle
 18147  004224  CFDD F083          	movff	postdec2,USBTransferOnePacket@handle+1
 18148                           
 18149                           ; BSR set to: 0
 18150                           ;usb_device.c: 1027: }
 18151                           ;usb_device.c: 1031: if(handle == 0)
 18152                           
 18153                           ; BSR set to: 0
 18154  004228  5182               	movf	USBTransferOnePacket@handle& (0+255),w,b
 18155  00422A  1183               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 18156  00422C  A4D8               	btfss	status,2,c
 18157  00422E  D005               	goto	l1650
 18158                           
 18159                           ; BSR set to: 0
 18160                           ;usb_device.c: 1032: {
 18161                           ;usb_device.c: 1033: return 0;
 18162  004230  0E00               	movlw	0
 18163  004232  6F7D               	movwf	?_USBTransferOnePacket& (0+255),b
 18164  004234  0E00               	movlw	0
 18165  004236  6F7E               	movwf	(?_USBTransferOnePacket+1)& (0+255),b
 18166                           
 18167                           ; BSR set to: 0
 18168  004238  0012               	return	
 18169  00423A                     l1650:
 18170                           
 18171                           ; BSR set to: 0
 18172                           ;usb_device.c: 1034: }
 18173                           ;usb_device.c: 1047: handle->ADR = ((uint16_t)(data));
 18174                           
 18175                           ; BSR set to: 0
 18176  00423A  EE20 F002          	lfsr	2,2
 18177  00423E  5182               	movf	USBTransferOnePacket@handle& (0+255),w,b
 18178  004240  26D9               	addwf	fsr2l,f,c
 18179  004242  5183               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 18180  004244  22DA               	addwfc	fsr2h,f,c
 18181  004246  C07E  FFDE         	movff	USBTransferOnePacket@data,postinc2
 18182  00424A  C07F  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 18183                           
 18184                           ;usb_device.c: 1048: handle->CNT = len;
 18185  00424E  EE20 F001          	lfsr	2,1
 18186  004252  5182               	movf	USBTransferOnePacket@handle& (0+255),w,b
 18187  004254  26D9               	addwf	fsr2l,f,c
 18188  004256  5183               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 18189  004258  22DA               	addwfc	fsr2h,f,c
 18190  00425A  C080  FFDF         	movff	USBTransferOnePacket@len,indf2
 18191                           
 18192                           ; BSR set to: 0
 18193                           ;usb_device.c: 1049: handle->STAT.Val &= 0x40;
 18194  00425E  C082  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 18195  004262  C083  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 18196  004266  0E40               	movlw	64
 18197  004268  16DF               	andwf	indf2,f,c
 18198                           
 18199                           ; BSR set to: 0
 18200                           ;usb_device.c: 1050: handle->STAT.Val |= (0x08 & 0x08);
 18201  00426A  C082  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 18202  00426E  C083  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 18203  004272  0E00               	movlw	0
 18204  004274  86DB               	bsf	plusw2,3,c
 18205                           
 18206                           ; BSR set to: 0
 18207                           ;usb_device.c: 1051: handle->STAT.Val |= 0x80;
 18208  004276  C082  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 18209  00427A  C083  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 18210  00427E  0E00               	movlw	0
 18211  004280  8EDB               	bsf	plusw2,7,c
 18212                           
 18213                           ; BSR set to: 0
 18214                           ;usb_device.c: 1054: if(dir != 0)
 18215  004282  517D               	movf	USBTransferOnePacket@dir& (0+255),w,b
 18216  004284  B4D8               	btfsc	status,2,c
 18217  004286  D007               	goto	l1652
 18218                           
 18219                           ; BSR set to: 0
 18220                           ;usb_device.c: 1055: {
 18221                           ;usb_device.c: 1057: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 18222  004288  5181               	movf	USBTransferOnePacket@ep& (0+255),w,b
 18223  00428A  0D02               	mullw	2
 18224  00428C  0EB6               	movlw	low _pBDTEntryIn
 18225  00428E  24F3               	addwf	prodl,w,c
 18226  004290  6ED9               	movwf	fsr2l,c
 18227  004292  0E00               	movlw	high _pBDTEntryIn
 18228  004294  D006               	goto	L17
 18229  004296                     l1652:
 18230                           
 18231                           ; BSR set to: 0
 18232                           ;usb_device.c: 1059: else
 18233                           ;usb_device.c: 1060: {
 18234                           ;usb_device.c: 1062: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 18235                           
 18236                           ; BSR set to: 0
 18237  004296  5181               	movf	USBTransferOnePacket@ep& (0+255),w,b
 18238  004298  0D02               	mullw	2
 18239  00429A  0E06               	movlw	low _pBDTEntryOut
 18240  00429C  24F3               	addwf	prodl,w,c
 18241  00429E  6ED9               	movwf	fsr2l,c
 18242  0042A0  0E03               	movlw	high _pBDTEntryOut
 18243  0042A2                     L17:
 18244  0042A2  20F4               	addwfc	prodh,w,c
 18245  0042A4  6EDA               	movwf	fsr2h,c
 18246  0042A6  0E04               	movlw	4
 18247  0042A8  1ADF               	xorwf	indf2,f,c
 18248                           
 18249                           ; BSR set to: 0
 18250                           ;usb_device.c: 1063: }
 18251                           ;usb_device.c: 1064: return (void*)handle;
 18252                           
 18253                           ; BSR set to: 0
 18254  0042AA  C082  F07D         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 18255  0042AE  C083  F07E         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 18256  0042B2  0012               	return	
 18257  0042B4                     __end_of_USBTransferOnePacket:
 18258                           	opt stack 0
 18259                           tosu	equ	0xFFF
 18260                           tosh	equ	0xFFE
 18261                           tosl	equ	0xFFD
 18262                           pclath	equ	0xFFA
 18263                           tblptru	equ	0xFF8
 18264                           tblptrh	equ	0xFF7
 18265                           tblptrl	equ	0xFF6
 18266                           tablat	equ	0xFF5
 18267                           prodh	equ	0xFF4
 18268                           prodl	equ	0xFF3
 18269                           intcon	equ	0xFF2
 18270                           intcon2	equ	0xFF1
 18271                           intcon3	equ	0xFF0
 18272                           indf0	equ	0xFEF
 18273                           postinc0	equ	0xFEE
 18274                           plusw0	equ	0xFEB
 18275                           fsr0h	equ	0xFEA
 18276                           fsr0l	equ	0xFE9
 18277                           wreg	equ	0xFE8
 18278                           indf1	equ	0xFE7
 18279                           postinc1	equ	0xFE6
 18280                           postdec1	equ	0xFE5
 18281                           fsr1h	equ	0xFE2
 18282                           fsr1l	equ	0xFE1
 18283                           indf2	equ	0xFDF
 18284                           postinc2	equ	0xFDE
 18285                           postdec2	equ	0xFDD
 18286                           plusw2	equ	0xFDB
 18287                           fsr2h	equ	0xFDA
 18288                           fsr2l	equ	0xFD9
 18289                           status	equ	0xFD8
 18290                           
 18291 ;; *************** function _atoi *****************
 18292 ;; Defined at:
 18293 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/atoi.c"
 18294 ;; Parameters:    Size  Location     Type
 18295 ;;  s               2   35[BANK0 ] PTR const unsigned char 
 18296 ;;		 -> Terminal@Len(4), 
 18297 ;; Auto vars:     Size  Location     Type
 18298 ;;  a               2   40[BANK0 ] int 
 18299 ;;  sign            1   39[BANK0 ] unsigned char 
 18300 ;; Return value:  Size  Location     Type
 18301 ;;                  2   35[BANK0 ] int 
 18302 ;; Registers used:
 18303 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18304 ;; Tracked objects:
 18305 ;;		On entry : 0/0
 18306 ;;		On exit  : 0/0
 18307 ;;		Unchanged: 0/0
 18308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18309 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18310 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18311 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18312 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18313 ;;Total ram usage:        7 bytes
 18314 ;; Hardware stack levels used:    1
 18315 ;; Hardware stack levels required when called:   12
 18316 ;; This function calls:
 18317 ;;		___wmul
 18318 ;;		_isdigit
 18319 ;; This function is called by:
 18320 ;;		_Terminal
 18321 ;; This function uses a non-reentrant model
 18322 ;;
 18323                           
 18324                           	psect	text76
 18325  00379A                     __ptext76:
 18326                           	opt stack 0
 18327  00379A                     _atoi:
 18328                           	opt stack 13
 18329                           
 18330                           ; BSR set to: 0
 18331                           ;incstack = 0
 18332  00379A  D003               	goto	l3077
 18333  00379C  0100               	movlb	0	; () banked
 18334  00379E  4B83               	infsnz	atoi@s& (0+255),f,b
 18335  0037A0  2B84               	incf	(atoi@s+1)& (0+255),f,b
 18336  0037A2                     l3077:
 18337                           
 18338                           ; BSR set to: 0
 18339  0037A2  C083  FFD9         	movff	atoi@s,fsr2l
 18340  0037A6  C084  FFDA         	movff	atoi@s+1,fsr2h
 18341  0037AA  0E20               	movlw	32
 18342  0037AC  18DE               	xorwf	postinc2,w,c
 18343  0037AE  B4D8               	btfsc	status,2,c
 18344  0037B0  D7F5               	goto	l3078
 18345  0037B2  C083  FFD9         	movff	atoi@s,fsr2l
 18346  0037B6  C084  FFDA         	movff	atoi@s+1,fsr2h
 18347  0037BA  0E09               	movlw	9
 18348  0037BC  18DE               	xorwf	postinc2,w,c
 18349  0037BE  B4D8               	btfsc	status,2,c
 18350  0037C0  D7ED               	goto	l3078
 18351  0037C2  0E00               	movlw	0
 18352  0037C4  0100               	movlb	0	; () banked
 18353  0037C6  6F89               	movwf	(atoi@a+1)& (0+255),b
 18354  0037C8  0E00               	movlw	0
 18355  0037CA  6F88               	movwf	atoi@a& (0+255),b
 18356  0037CC  0E00               	movlw	0
 18357  0037CE  6F87               	movwf	atoi@sign& (0+255),b
 18358                           
 18359                           ; BSR set to: 0
 18360  0037D0  C083  FFD9         	movff	atoi@s,fsr2l
 18361  0037D4  C084  FFDA         	movff	atoi@s+1,fsr2h
 18362  0037D8  0E2D               	movlw	45
 18363  0037DA  18DE               	xorwf	postinc2,w,c
 18364  0037DC  A4D8               	btfss	status,2,c
 18365  0037DE  D002               	goto	l3080
 18366                           
 18367                           ; BSR set to: 0
 18368  0037E0  2B87               	incf	atoi@sign& (0+255),f,b
 18369  0037E2  D026               	goto	l14010
 18370  0037E4                     l3080:
 18371                           
 18372                           ; BSR set to: 0
 18373                           
 18374                           ; BSR set to: 0
 18375  0037E4  C083  FFD9         	movff	atoi@s,fsr2l
 18376  0037E8  C084  FFDA         	movff	atoi@s+1,fsr2h
 18377  0037EC  0E2B               	movlw	43
 18378  0037EE  18DE               	xorwf	postinc2,w,c
 18379  0037F0  A4D8               	btfss	status,2,c
 18380  0037F2  D020               	goto	l3083
 18381  0037F4  D01D               	goto	l14010
 18382  0037F6                     
 18383                           ; BSR set to: 0
 18384  0037F6  C088  F07D         	movff	atoi@a,___wmul@multiplier
 18385  0037FA  C089  F07E         	movff	atoi@a+1,___wmul@multiplier+1
 18386  0037FE  0E00               	movlw	0
 18387  003800  0100               	movlb	0	; () banked
 18388  003802  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 18389  003804  0E0A               	movlw	10
 18390  003806  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 18391  003808  EC38  F033         	call	___wmul	;wreg free
 18392  00380C  C083  FFD9         	movff	atoi@s,fsr2l
 18393  003810  C084  FFDA         	movff	atoi@s+1,fsr2h
 18394  003814  50DF               	movf	indf2,w,c
 18395  003816  0100               	movlb	0	; () banked
 18396  003818  6F85               	movwf	??_atoi& (0+255),b
 18397  00381A  6B86               	clrf	(??_atoi+1)& (0+255),b
 18398  00381C  517D               	movf	?___wmul& (0+255),w,b
 18399  00381E  2785               	addwf	??_atoi& (0+255),f,b
 18400  003820  517E               	movf	(?___wmul+1)& (0+255),w,b
 18401  003822  2386               	addwfc	(??_atoi+1)& (0+255),f,b
 18402  003824  0ED0               	movlw	208
 18403  003826  2585               	addwf	??_atoi& (0+255),w,b
 18404  003828  6F88               	movwf	atoi@a& (0+255),b
 18405  00382A  0EFF               	movlw	255
 18406  00382C  2186               	addwfc	(??_atoi+1)& (0+255),w,b
 18407  00382E  6F89               	movwf	(atoi@a+1)& (0+255),b
 18408  003830                     l14010:
 18409                           
 18410                           ; BSR set to: 0
 18411  003830  4B83               	infsnz	atoi@s& (0+255),f,b
 18412  003832  2B84               	incf	(atoi@s+1)& (0+255),f,b
 18413  003834                     l3083:
 18414                           
 18415                           ; BSR set to: 0
 18416                           
 18417                           ; BSR set to: 0
 18418  003834  C083  FFD9         	movff	atoi@s,fsr2l
 18419  003838  C084  FFDA         	movff	atoi@s+1,fsr2h
 18420  00383C  50DF               	movf	indf2,w,c
 18421  00383E  ECEB  F033         	call	_isdigit
 18422  003842  B0D8               	btfsc	status,0,c
 18423  003844  D7D8               	goto	l3084
 18424  003846  0100               	movlb	0	; () banked
 18425  003848  5187               	movf	atoi@sign& (0+255),w,b
 18426  00384A  B4D8               	btfsc	status,2,c
 18427  00384C  D00D               	goto	l3086
 18428                           
 18429                           ; BSR set to: 0
 18430  00384E  C088  F085         	movff	atoi@a,??_atoi
 18431  003852  C089  F086         	movff	atoi@a+1,??_atoi+1
 18432  003856  1F85               	comf	??_atoi& (0+255),f,b
 18433  003858  1F86               	comf	(??_atoi+1)& (0+255),f,b
 18434  00385A  4B85               	infsnz	??_atoi& (0+255),f,b
 18435  00385C  2B86               	incf	(??_atoi+1)& (0+255),f,b
 18436  00385E  C085  F083         	movff	??_atoi,?_atoi
 18437  003862  C086  F084         	movff	??_atoi+1,?_atoi+1
 18438  003866  0012               	return	
 18439  003868                     l3086:
 18440                           
 18441                           ; BSR set to: 0
 18442  003868  C088  F083         	movff	atoi@a,?_atoi
 18443  00386C  C089  F084         	movff	atoi@a+1,?_atoi+1
 18444                           
 18445                           ; BSR set to: 0
 18446  003870  0012               	return		;funcret
 18447  003872                     __end_of_atoi:
 18448                           	opt stack 0
 18449                           tosu	equ	0xFFF
 18450                           tosh	equ	0xFFE
 18451                           tosl	equ	0xFFD
 18452                           pclath	equ	0xFFA
 18453                           tblptru	equ	0xFF8
 18454                           tblptrh	equ	0xFF7
 18455                           tblptrl	equ	0xFF6
 18456                           tablat	equ	0xFF5
 18457                           prodh	equ	0xFF4
 18458                           prodl	equ	0xFF3
 18459                           intcon	equ	0xFF2
 18460                           intcon2	equ	0xFF1
 18461                           intcon3	equ	0xFF0
 18462                           indf0	equ	0xFEF
 18463                           postinc0	equ	0xFEE
 18464                           plusw0	equ	0xFEB
 18465                           fsr0h	equ	0xFEA
 18466                           fsr0l	equ	0xFE9
 18467                           wreg	equ	0xFE8
 18468                           indf1	equ	0xFE7
 18469                           postinc1	equ	0xFE6
 18470                           postdec1	equ	0xFE5
 18471                           fsr1h	equ	0xFE2
 18472                           fsr1l	equ	0xFE1
 18473                           indf2	equ	0xFDF
 18474                           postinc2	equ	0xFDE
 18475                           postdec2	equ	0xFDD
 18476                           plusw2	equ	0xFDB
 18477                           fsr2h	equ	0xFDA
 18478                           fsr2l	equ	0xFD9
 18479                           status	equ	0xFD8
 18480                           
 18481 ;; *************** function _isdigit *****************
 18482 ;; Defined at:
 18483 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isdigit.c"
 18484 ;; Parameters:    Size  Location     Type
 18485 ;;  c               1    wreg     unsigned char 
 18486 ;; Auto vars:     Size  Location     Type
 18487 ;;  c               1   31[BANK0 ] unsigned char 
 18488 ;; Return value:  Size  Location     Type
 18489 ;;		None               void
 18490 ;; Registers used:
 18491 ;;		wreg, status,2, status,0
 18492 ;; Tracked objects:
 18493 ;;		On entry : 0/0
 18494 ;;		On exit  : 0/0
 18495 ;;		Unchanged: 0/0
 18496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18497 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18498 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18499 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18500 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18501 ;;Total ram usage:        3 bytes
 18502 ;; Hardware stack levels used:    1
 18503 ;; Hardware stack levels required when called:   11
 18504 ;; This function calls:
 18505 ;;		Nothing
 18506 ;; This function is called by:
 18507 ;;		_atoi
 18508 ;;		_strtol
 18509 ;;		_xtoi
 18510 ;;		_isxdigit
 18511 ;; This function uses a non-reentrant model
 18512 ;;
 18513                           
 18514                           	psect	text77
 18515  0067D6                     __ptext77:
 18516                           	opt stack 0
 18517  0067D6                     _isdigit:
 18518                           	opt stack 12
 18519                           
 18520                           ; BSR set to: 0
 18521                           ;incstack = 0
 18522                           ;isdigit@c stored from wreg
 18523  0067D6  0100               	movlb	0	; () banked
 18524  0067D8  6F7F               	movwf	isdigit@c& (0+255),b
 18525  0067DA  0E00               	movlw	0
 18526  0067DC  0100               	movlb	0	; () banked
 18527  0067DE  6F7E               	movwf	_isdigit$6416& (0+255),b
 18528                           
 18529                           ; BSR set to: 0
 18530  0067E0  0E3A               	movlw	58
 18531  0067E2  617F               	cpfslt	isdigit@c& (0+255),b
 18532  0067E4  D005               	goto	l3258
 18533                           
 18534                           ; BSR set to: 0
 18535  0067E6  0E2F               	movlw	47
 18536  0067E8  657F               	cpfsgt	isdigit@c& (0+255),b
 18537  0067EA  D002               	goto	l3258
 18538                           
 18539                           ; BSR set to: 0
 18540  0067EC  0E01               	movlw	1
 18541  0067EE  6F7E               	movwf	_isdigit$6416& (0+255),b
 18542  0067F0                     l3258:
 18543                           
 18544                           ; BSR set to: 0
 18545                           
 18546                           ; BSR set to: 0
 18547  0067F0  C07E  F07D         	movff	_isdigit$6416,??_isdigit
 18548  0067F4  317D               	rrcf	??_isdigit& (0+255),w,b
 18549  0067F6  0012               	return	
 18550  0067F8                     __end_of_isdigit:
 18551                           	opt stack 0
 18552                           tosu	equ	0xFFF
 18553                           tosh	equ	0xFFE
 18554                           tosl	equ	0xFFD
 18555                           pclath	equ	0xFFA
 18556                           tblptru	equ	0xFF8
 18557                           tblptrh	equ	0xFF7
 18558                           tblptrl	equ	0xFF6
 18559                           tablat	equ	0xFF5
 18560                           prodh	equ	0xFF4
 18561                           prodl	equ	0xFF3
 18562                           intcon	equ	0xFF2
 18563                           intcon2	equ	0xFF1
 18564                           intcon3	equ	0xFF0
 18565                           indf0	equ	0xFEF
 18566                           postinc0	equ	0xFEE
 18567                           plusw0	equ	0xFEB
 18568                           fsr0h	equ	0xFEA
 18569                           fsr0l	equ	0xFE9
 18570                           wreg	equ	0xFE8
 18571                           indf1	equ	0xFE7
 18572                           postinc1	equ	0xFE6
 18573                           postdec1	equ	0xFE5
 18574                           fsr1h	equ	0xFE2
 18575                           fsr1l	equ	0xFE1
 18576                           indf2	equ	0xFDF
 18577                           postinc2	equ	0xFDE
 18578                           postdec2	equ	0xFDD
 18579                           plusw2	equ	0xFDB
 18580                           fsr2h	equ	0xFDA
 18581                           fsr2l	equ	0xFD9
 18582                           status	equ	0xFD8
 18583                           
 18584 ;; *************** function _Rtcm_SetRtccDate *****************
 18585 ;; Defined at:
 18586 ;;		line 176 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/rtcm.c"
 18587 ;; Parameters:    Size  Location     Type
 18588 ;;  Date            8   41[BANK0 ] struct _RtccDateType
 18589 ;; Auto vars:     Size  Location     Type
 18590 ;;		None
 18591 ;; Return value:  Size  Location     Type
 18592 ;;                  1    wreg      void 
 18593 ;; Registers used:
 18594 ;;		wreg, status,2, status,0, cstack
 18595 ;; Tracked objects:
 18596 ;;		On entry : 0/0
 18597 ;;		On exit  : 0/0
 18598 ;;		Unchanged: 0/0
 18599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18600 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18601 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18602 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18603 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18604 ;;Total ram usage:        8 bytes
 18605 ;; Hardware stack levels used:    1
 18606 ;; Hardware stack levels required when called:   13
 18607 ;; This function calls:
 18608 ;;		_Rtcc_LockRtc
 18609 ;;		_Rtcc_SetRtccValue
 18610 ;;		_Rtcc_UnlockRtc
 18611 ;; This function is called by:
 18612 ;;		_Rtcm_MainTask
 18613 ;; This function uses a non-reentrant model
 18614 ;;
 18615                           
 18616                           	psect	text78
 18617  005B2C                     __ptext78:
 18618                           	opt stack 0
 18619  005B2C                     _Rtcm_SetRtccDate:
 18620                           	opt stack 14
 18621                           
 18622                           ;rtcm.c: 179: Rtcc_UnlockRtc();
 18623                           
 18624                           ; BSR set to: 0
 18625                           ;incstack = 0
 18626  005B2C  EC2F  F035         	call	_Rtcc_UnlockRtc	;wreg free
 18627                           
 18628                           ;rtcm.c: 182: Rtcc_SetRtccValue(ValPtrYear,(Date.Year - 2000));
 18629  005B30  0100               	movlb	0	; () banked
 18630  005B32  5189               	movf	Rtcm_SetRtccDate@Date& (0+255),w,b
 18631  005B34  0F30               	addlw	48
 18632  005B36  6F85               	movwf	Rtcc_SetRtccValue@Value& (0+255),b
 18633  005B38  0E00               	movlw	0
 18634  005B3A  ECF7  F00A         	call	_Rtcc_SetRtccValue
 18635                           
 18636                           ;rtcm.c: 183: Rtcc_SetRtccValue(ValPtrMonth,Date.Month);
 18637  005B3E  C08B  F085         	movff	Rtcm_SetRtccDate@Date+2,Rtcc_SetRtccValue@Value
 18638  005B42  0E01               	movlw	1
 18639  005B44  ECF7  F00A         	call	_Rtcc_SetRtccValue
 18640                           
 18641                           ;rtcm.c: 184: Rtcc_SetRtccValue(ValPtrDay,Date.Day);
 18642  005B48  C08C  F085         	movff	Rtcm_SetRtccDate@Date+3,Rtcc_SetRtccValue@Value
 18643  005B4C  0E02               	movlw	2
 18644  005B4E  ECF7  F00A         	call	_Rtcc_SetRtccValue
 18645                           
 18646                           ;rtcm.c: 185: Rtcc_SetRtccValue(ValPtrWeekday,Date.Weekday);
 18647  005B52  C08D  F085         	movff	Rtcm_SetRtccDate@Date+4,Rtcc_SetRtccValue@Value
 18648  005B56  0E03               	movlw	3
 18649  005B58  ECF7  F00A         	call	_Rtcc_SetRtccValue
 18650                           
 18651                           ;rtcm.c: 186: Rtcc_SetRtccValue(ValPtrHours,Date.Hour);
 18652  005B5C  C08E  F085         	movff	Rtcm_SetRtccDate@Date+5,Rtcc_SetRtccValue@Value
 18653  005B60  0E04               	movlw	4
 18654  005B62  ECF7  F00A         	call	_Rtcc_SetRtccValue
 18655                           
 18656                           ;rtcm.c: 187: Rtcc_SetRtccValue(ValPtrMinutes,Date.Minute);
 18657  005B66  C08F  F085         	movff	Rtcm_SetRtccDate@Date+6,Rtcc_SetRtccValue@Value
 18658  005B6A  0E05               	movlw	5
 18659  005B6C  ECF7  F00A         	call	_Rtcc_SetRtccValue
 18660                           
 18661                           ;rtcm.c: 188: Rtcc_SetRtccValue(ValPtrSeconds,Date.Second);
 18662  005B70  C090  F085         	movff	Rtcm_SetRtccDate@Date+7,Rtcc_SetRtccValue@Value
 18663  005B74  0E06               	movlw	6
 18664  005B76  ECF7  F00A         	call	_Rtcc_SetRtccValue
 18665                           
 18666                           ;rtcm.c: 191: Rtcc_LockRtc();
 18667  005B7A  EC37  F035         	call	_Rtcc_LockRtc	;wreg free
 18668  005B7E  0012               	return		;funcret
 18669  005B80                     __end_of_Rtcm_SetRtccDate:
 18670                           	opt stack 0
 18671                           tosu	equ	0xFFF
 18672                           tosh	equ	0xFFE
 18673                           tosl	equ	0xFFD
 18674                           pclath	equ	0xFFA
 18675                           tblptru	equ	0xFF8
 18676                           tblptrh	equ	0xFF7
 18677                           tblptrl	equ	0xFF6
 18678                           tablat	equ	0xFF5
 18679                           prodh	equ	0xFF4
 18680                           prodl	equ	0xFF3
 18681                           intcon	equ	0xFF2
 18682                           intcon2	equ	0xFF1
 18683                           intcon3	equ	0xFF0
 18684                           indf0	equ	0xFEF
 18685                           postinc0	equ	0xFEE
 18686                           plusw0	equ	0xFEB
 18687                           fsr0h	equ	0xFEA
 18688                           fsr0l	equ	0xFE9
 18689                           wreg	equ	0xFE8
 18690                           indf1	equ	0xFE7
 18691                           postinc1	equ	0xFE6
 18692                           postdec1	equ	0xFE5
 18693                           fsr1h	equ	0xFE2
 18694                           fsr1l	equ	0xFE1
 18695                           indf2	equ	0xFDF
 18696                           postinc2	equ	0xFDE
 18697                           postdec2	equ	0xFDD
 18698                           plusw2	equ	0xFDB
 18699                           fsr2h	equ	0xFDA
 18700                           fsr2l	equ	0xFD9
 18701                           status	equ	0xFD8
 18702                           
 18703 ;; *************** function _Rtcc_UnlockRtc *****************
 18704 ;; Defined at:
 18705 ;;		line 163 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 18706 ;; Parameters:    Size  Location     Type
 18707 ;;		None
 18708 ;; Auto vars:     Size  Location     Type
 18709 ;;		None
 18710 ;; Return value:  Size  Location     Type
 18711 ;;                  1    wreg      void 
 18712 ;; Registers used:
 18713 ;;		None
 18714 ;; Tracked objects:
 18715 ;;		On entry : 0/0
 18716 ;;		On exit  : 0/0
 18717 ;;		Unchanged: 0/0
 18718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18719 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18720 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18721 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18722 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18723 ;;Total ram usage:        0 bytes
 18724 ;; Hardware stack levels used:    1
 18725 ;; Hardware stack levels required when called:   11
 18726 ;; This function calls:
 18727 ;;		Nothing
 18728 ;; This function is called by:
 18729 ;;		_Rtcm_MainTask
 18730 ;;		_Rtcm_SetRtccDate
 18731 ;;		_Rtcm_SetRtccAlarm
 18732 ;; This function uses a non-reentrant model
 18733 ;;
 18734                           
 18735                           	psect	text79
 18736  006A5E                     __ptext79:
 18737                           	opt stack 0
 18738  006A5E                     _Rtcc_UnlockRtc:
 18739                           	opt stack 15
 18740                           
 18741                           ;incstack = 0
 18742  006A5E  010F               	movlb	15	;# 
 18743  006A60  0E55               	movlw	85	;# 
 18744  006A62  6EA7               	movwf	4007,c	;# 
 18745  006A64  0EAA               	movlw	170	;# 
 18746  006A66  6EA7               	movwf	4007,c	;# 
 18747                           
 18748                           ;rtcc_drv.c: 172: RTCCFGbits.RTCWREN = 1u;
 18749  006A68  010F               	movlb	15	; () banked
 18750  006A6A  8B3F               	bsf	63,5,b	;volatile
 18751                           
 18752                           ; BSR set to: 15
 18753  006A6C  0012               	return		;funcret
 18754  006A6E                     __end_of_Rtcc_UnlockRtc:
 18755                           	opt stack 0
 18756                           tosu	equ	0xFFF
 18757                           tosh	equ	0xFFE
 18758                           tosl	equ	0xFFD
 18759                           pclath	equ	0xFFA
 18760                           tblptru	equ	0xFF8
 18761                           tblptrh	equ	0xFF7
 18762                           tblptrl	equ	0xFF6
 18763                           tablat	equ	0xFF5
 18764                           prodh	equ	0xFF4
 18765                           prodl	equ	0xFF3
 18766                           intcon	equ	0xFF2
 18767                           intcon2	equ	0xFF1
 18768                           intcon3	equ	0xFF0
 18769                           indf0	equ	0xFEF
 18770                           postinc0	equ	0xFEE
 18771                           plusw0	equ	0xFEB
 18772                           fsr0h	equ	0xFEA
 18773                           fsr0l	equ	0xFE9
 18774                           wreg	equ	0xFE8
 18775                           indf1	equ	0xFE7
 18776                           postinc1	equ	0xFE6
 18777                           postdec1	equ	0xFE5
 18778                           fsr1h	equ	0xFE2
 18779                           fsr1l	equ	0xFE1
 18780                           indf2	equ	0xFDF
 18781                           postinc2	equ	0xFDE
 18782                           postdec2	equ	0xFDD
 18783                           plusw2	equ	0xFDB
 18784                           fsr2h	equ	0xFDA
 18785                           fsr2l	equ	0xFD9
 18786                           status	equ	0xFD8
 18787                           
 18788 ;; *************** function _Rtcc_SetRtccValue *****************
 18789 ;; Defined at:
 18790 ;;		line 383 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 18791 ;; Parameters:    Size  Location     Type
 18792 ;;  RtccPtrVal      1    wreg     enum E7757
 18793 ;;  Value           1   37[BANK0 ] unsigned char 
 18794 ;; Auto vars:     Size  Location     Type
 18795 ;;  RtccPtrVal      1   40[BANK0 ] enum E7757
 18796 ;; Return value:  Size  Location     Type
 18797 ;;                  1    wreg      void 
 18798 ;; Registers used:
 18799 ;;		wreg, status,2, status,0, cstack
 18800 ;; Tracked objects:
 18801 ;;		On entry : 0/0
 18802 ;;		On exit  : 0/0
 18803 ;;		Unchanged: 0/0
 18804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18805 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18806 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18807 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18808 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18809 ;;Total ram usage:        4 bytes
 18810 ;; Hardware stack levels used:    1
 18811 ;; Hardware stack levels required when called:   12
 18812 ;; This function calls:
 18813 ;;		___awdiv
 18814 ;;		___awmod
 18815 ;; This function is called by:
 18816 ;;		_Rtcm_SetRtccDate
 18817 ;; This function uses a non-reentrant model
 18818 ;;
 18819                           
 18820                           	psect	text80
 18821  0015EE                     __ptext80:
 18822                           	opt stack 0
 18823  0015EE                     _Rtcc_SetRtccValue:
 18824                           	opt stack 14
 18825                           
 18826                           ; BSR set to: 15
 18827                           ;incstack = 0
 18828                           ;Rtcc_SetRtccValue@RtccPtrVal stored from wreg
 18829  0015EE  0100               	movlb	0	; () banked
 18830  0015F0  6F88               	movwf	Rtcc_SetRtccValue@RtccPtrVal& (0+255),b
 18831                           
 18832                           ;rtcc_drv.c: 385: switch (RtccPtrVal)
 18833  0015F2  D0FC               	goto	l441
 18834  0015F4                     l442:
 18835                           
 18836                           ; BSR set to: 0
 18837                           ;rtcc_drv.c: 389: RTCCFGbits.RTCPTR1 = 1U;
 18838  0015F4  010F               	movlb	15	; () banked
 18839  0015F6  833F               	bsf	63,1,b	;volatile
 18840                           
 18841                           ;rtcc_drv.c: 390: RTCCFGbits.RTCPTR0 = 1U;
 18842  0015F8  813F               	bsf	63,0,b	;volatile
 18843                           
 18844                           ; BSR set to: 15
 18845                           ;rtcc_drv.c: 392: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 18846  0015FA  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 18847  0015FE  0100               	movlb	0	; () banked
 18848  001600  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 18849  001602  0E00               	movlw	0
 18850  001604  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 18851  001606  0E0A               	movlw	10
 18852  001608  6F7F               	movwf	___awmod@divisor& (0+255),b
 18853  00160A  EC84  F029         	call	___awmod	;wreg free
 18854  00160E  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 18855  001612  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 18856  001616  0E0F               	movlw	15
 18857  001618  0100               	movlb	0	; () banked
 18858  00161A  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 18859  00161C  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 18860  001620  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 18861  001622  0E00               	movlw	0
 18862  001624  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 18863  001626  0E0A               	movlw	10
 18864  001628  6F7F               	movwf	___awdiv@divisor& (0+255),b
 18865  00162A  ECBE  F028         	call	___awdiv	;wreg free
 18866  00162E  0100               	movlb	0	; () banked
 18867  001630  397D               	swapf	?___awdiv& (0+255),w,b
 18868  001632  0BF0               	andlw	240
 18869  001634  0BF0               	andlw	240
 18870  001636  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 18871  001638  6E98               	movwf	3992,c	;volatile
 18872                           
 18873                           ;rtcc_drv.c: 393: break;
 18874  00163A  0012               	return	
 18875  00163C                     l444:
 18876                           
 18877                           ; BSR set to: 0
 18878                           ;rtcc_drv.c: 397: RTCCFGbits.RTCPTR1 = 1U;
 18879  00163C  010F               	movlb	15	; () banked
 18880  00163E  833F               	bsf	63,1,b	;volatile
 18881                           
 18882                           ;rtcc_drv.c: 398: RTCCFGbits.RTCPTR0 = 0U;
 18883  001640  913F               	bcf	63,0,b	;volatile
 18884                           
 18885                           ; BSR set to: 15
 18886                           ;rtcc_drv.c: 400: RTCVALH = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 18887  001642  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 18888  001646  0100               	movlb	0	; () banked
 18889  001648  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 18890  00164A  0E00               	movlw	0
 18891  00164C  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 18892  00164E  0E0A               	movlw	10
 18893  001650  6F7F               	movwf	___awmod@divisor& (0+255),b
 18894  001652  EC84  F029         	call	___awmod	;wreg free
 18895  001656  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 18896  00165A  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 18897  00165E  0E0F               	movlw	15
 18898  001660  0100               	movlb	0	; () banked
 18899  001662  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 18900  001664  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 18901  001668  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 18902  00166A  0E00               	movlw	0
 18903  00166C  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 18904  00166E  0E0A               	movlw	10
 18905  001670  6F7F               	movwf	___awdiv@divisor& (0+255),b
 18906  001672  ECBE  F028         	call	___awdiv	;wreg free
 18907  001676  0100               	movlb	0	; () banked
 18908  001678  397D               	swapf	?___awdiv& (0+255),w,b
 18909  00167A  0BF0               	andlw	240
 18910  00167C  0BF0               	andlw	240
 18911  00167E  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 18912  001680  6E99               	movwf	3993,c	;volatile
 18913                           
 18914                           ;rtcc_drv.c: 401: break;
 18915  001682  0012               	return	
 18916  001684                     l445:
 18917                           
 18918                           ; BSR set to: 0
 18919                           ;rtcc_drv.c: 405: RTCCFGbits.RTCPTR1 = 1U;
 18920  001684  010F               	movlb	15	; () banked
 18921  001686  833F               	bsf	63,1,b	;volatile
 18922                           
 18923                           ;rtcc_drv.c: 406: RTCCFGbits.RTCPTR0 = 0U;
 18924  001688  913F               	bcf	63,0,b	;volatile
 18925                           
 18926                           ; BSR set to: 15
 18927                           ;rtcc_drv.c: 408: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 18928  00168A  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 18929  00168E  0100               	movlb	0	; () banked
 18930  001690  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 18931  001692  0E00               	movlw	0
 18932  001694  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 18933  001696  0E0A               	movlw	10
 18934  001698  6F7F               	movwf	___awmod@divisor& (0+255),b
 18935  00169A  EC84  F029         	call	___awmod	;wreg free
 18936  00169E  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 18937  0016A2  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 18938  0016A6  0E0F               	movlw	15
 18939  0016A8  0100               	movlb	0	; () banked
 18940  0016AA  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 18941  0016AC  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 18942  0016B0  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 18943  0016B2  0E00               	movlw	0
 18944  0016B4  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 18945  0016B6  0E0A               	movlw	10
 18946  0016B8  6F7F               	movwf	___awdiv@divisor& (0+255),b
 18947  0016BA  ECBE  F028         	call	___awdiv	;wreg free
 18948  0016BE  0100               	movlb	0	; () banked
 18949  0016C0  397D               	swapf	?___awdiv& (0+255),w,b
 18950  0016C2  0BF0               	andlw	240
 18951  0016C4  0BF0               	andlw	240
 18952  0016C6  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 18953  0016C8  6E98               	movwf	3992,c	;volatile
 18954                           
 18955                           ;rtcc_drv.c: 409: break;
 18956  0016CA  0012               	return	
 18957  0016CC                     l446:
 18958                           
 18959                           ; BSR set to: 0
 18960                           ;rtcc_drv.c: 413: RTCCFGbits.RTCPTR1 = 0U;
 18961  0016CC  010F               	movlb	15	; () banked
 18962  0016CE  933F               	bcf	63,1,b	;volatile
 18963                           
 18964                           ;rtcc_drv.c: 414: RTCCFGbits.RTCPTR0 = 1U;
 18965  0016D0  813F               	bsf	63,0,b	;volatile
 18966                           
 18967                           ; BSR set to: 15
 18968                           ;rtcc_drv.c: 416: RTCVALH = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 18969  0016D2  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 18970  0016D6  0100               	movlb	0	; () banked
 18971  0016D8  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 18972  0016DA  0E00               	movlw	0
 18973  0016DC  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 18974  0016DE  0E0A               	movlw	10
 18975  0016E0  6F7F               	movwf	___awmod@divisor& (0+255),b
 18976  0016E2  EC84  F029         	call	___awmod	;wreg free
 18977  0016E6  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 18978  0016EA  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 18979  0016EE  0E0F               	movlw	15
 18980  0016F0  0100               	movlb	0	; () banked
 18981  0016F2  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 18982  0016F4  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 18983  0016F8  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 18984  0016FA  0E00               	movlw	0
 18985  0016FC  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 18986  0016FE  0E0A               	movlw	10
 18987  001700  6F7F               	movwf	___awdiv@divisor& (0+255),b
 18988  001702  ECBE  F028         	call	___awdiv	;wreg free
 18989  001706  0100               	movlb	0	; () banked
 18990  001708  397D               	swapf	?___awdiv& (0+255),w,b
 18991  00170A  0BF0               	andlw	240
 18992  00170C  0BF0               	andlw	240
 18993  00170E  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 18994  001710  6E99               	movwf	3993,c	;volatile
 18995                           
 18996                           ;rtcc_drv.c: 417: break;
 18997  001712  0012               	return	
 18998  001714                     l447:
 18999                           
 19000                           ; BSR set to: 0
 19001                           ;rtcc_drv.c: 421: RTCCFGbits.RTCPTR1 = 0U;
 19002  001714  010F               	movlb	15	; () banked
 19003  001716  933F               	bcf	63,1,b	;volatile
 19004                           
 19005                           ;rtcc_drv.c: 422: RTCCFGbits.RTCPTR0 = 1U;
 19006  001718  813F               	bsf	63,0,b	;volatile
 19007                           
 19008                           ; BSR set to: 15
 19009                           ;rtcc_drv.c: 424: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19010  00171A  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19011  00171E  0100               	movlb	0	; () banked
 19012  001720  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19013  001722  0E00               	movlw	0
 19014  001724  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19015  001726  0E0A               	movlw	10
 19016  001728  6F7F               	movwf	___awmod@divisor& (0+255),b
 19017  00172A  EC84  F029         	call	___awmod	;wreg free
 19018  00172E  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19019  001732  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19020  001736  0E0F               	movlw	15
 19021  001738  0100               	movlb	0	; () banked
 19022  00173A  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19023  00173C  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19024  001740  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19025  001742  0E00               	movlw	0
 19026  001744  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19027  001746  0E0A               	movlw	10
 19028  001748  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19029  00174A  ECBE  F028         	call	___awdiv	;wreg free
 19030  00174E  0100               	movlb	0	; () banked
 19031  001750  397D               	swapf	?___awdiv& (0+255),w,b
 19032  001752  0BF0               	andlw	240
 19033  001754  0BF0               	andlw	240
 19034  001756  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19035  001758  6E98               	movwf	3992,c	;volatile
 19036                           
 19037                           ;rtcc_drv.c: 425: break;
 19038  00175A  0012               	return	
 19039  00175C                     l448:
 19040                           
 19041                           ; BSR set to: 0
 19042                           ;rtcc_drv.c: 429: RTCCFGbits.RTCPTR1 = 0U;
 19043  00175C  010F               	movlb	15	; () banked
 19044  00175E  933F               	bcf	63,1,b	;volatile
 19045                           
 19046                           ;rtcc_drv.c: 430: RTCCFGbits.RTCPTR0 = 0U;
 19047  001760  913F               	bcf	63,0,b	;volatile
 19048                           
 19049                           ; BSR set to: 15
 19050                           ;rtcc_drv.c: 432: RTCVALH = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19051  001762  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19052  001766  0100               	movlb	0	; () banked
 19053  001768  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19054  00176A  0E00               	movlw	0
 19055  00176C  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19056  00176E  0E0A               	movlw	10
 19057  001770  6F7F               	movwf	___awmod@divisor& (0+255),b
 19058  001772  EC84  F029         	call	___awmod	;wreg free
 19059  001776  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19060  00177A  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19061  00177E  0E0F               	movlw	15
 19062  001780  0100               	movlb	0	; () banked
 19063  001782  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19064  001784  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19065  001788  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19066  00178A  0E00               	movlw	0
 19067  00178C  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19068  00178E  0E0A               	movlw	10
 19069  001790  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19070  001792  ECBE  F028         	call	___awdiv	;wreg free
 19071  001796  0100               	movlb	0	; () banked
 19072  001798  397D               	swapf	?___awdiv& (0+255),w,b
 19073  00179A  0BF0               	andlw	240
 19074  00179C  0BF0               	andlw	240
 19075  00179E  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19076  0017A0  6E99               	movwf	3993,c	;volatile
 19077                           
 19078                           ;rtcc_drv.c: 433: break;
 19079  0017A2  0012               	return	
 19080  0017A4                     l449:
 19081                           
 19082                           ; BSR set to: 0
 19083                           ;rtcc_drv.c: 437: RTCCFGbits.RTCPTR1 = 0U;
 19084  0017A4  010F               	movlb	15	; () banked
 19085  0017A6  933F               	bcf	63,1,b	;volatile
 19086                           
 19087                           ;rtcc_drv.c: 438: RTCCFGbits.RTCPTR0 = 0U;
 19088  0017A8  913F               	bcf	63,0,b	;volatile
 19089                           
 19090                           ; BSR set to: 15
 19091                           ;rtcc_drv.c: 440: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19092  0017AA  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19093  0017AE  0100               	movlb	0	; () banked
 19094  0017B0  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19095  0017B2  0E00               	movlw	0
 19096  0017B4  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19097  0017B6  0E0A               	movlw	10
 19098  0017B8  6F7F               	movwf	___awmod@divisor& (0+255),b
 19099  0017BA  EC84  F029         	call	___awmod	;wreg free
 19100  0017BE  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19101  0017C2  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19102  0017C6  0E0F               	movlw	15
 19103  0017C8  0100               	movlb	0	; () banked
 19104  0017CA  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19105  0017CC  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19106  0017D0  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19107  0017D2  0E00               	movlw	0
 19108  0017D4  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19109  0017D6  0E0A               	movlw	10
 19110  0017D8  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19111  0017DA  ECBE  F028         	call	___awdiv	;wreg free
 19112  0017DE  0100               	movlb	0	; () banked
 19113  0017E0  397D               	swapf	?___awdiv& (0+255),w,b
 19114  0017E2  0BF0               	andlw	240
 19115  0017E4  0BF0               	andlw	240
 19116  0017E6  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19117  0017E8  6E98               	movwf	3992,c	;volatile
 19118                           
 19119                           ; BSR set to: 0
 19120                           ;rtcc_drv.c: 445: }
 19121                           
 19122                           ; BSR set to: 0
 19123                           ;rtcc_drv.c: 444: break;
 19124                           
 19125                           ;rtcc_drv.c: 443: default:
 19126                           
 19127                           ;rtcc_drv.c: 441: break;
 19128  0017EA  0012               	return	
 19129  0017EC                     l441:
 19130                           
 19131                           ; BSR set to: 0
 19132  0017EC  0100               	movlb	0	; () banked
 19133  0017EE  5188               	movf	Rtcc_SetRtccValue@RtccPtrVal& (0+255),w,b
 19134                           
 19135                           ; Switch size 1, requested type "space"
 19136                           ; Number of cases is 7, Range of values is 0 to 6
 19137                           ; switch strategies available:
 19138                           ; Name         Instructions Cycles
 19139                           ; simple_byte           22    12 (average)
 19140                           ;	Chosen strategy is simple_byte
 19141  0017F0  0A00               	xorlw	0	; case 0
 19142  0017F2  B4D8               	btfsc	status,2,c
 19143  0017F4  D6FF               	goto	l442
 19144  0017F6  0A01               	xorlw	1	; case 1
 19145  0017F8  B4D8               	btfsc	status,2,c
 19146  0017FA  D720               	goto	l444
 19147  0017FC  0A03               	xorlw	3	; case 2
 19148  0017FE  B4D8               	btfsc	status,2,c
 19149  001800  D741               	goto	l445
 19150  001802  0A01               	xorlw	1	; case 3
 19151  001804  B4D8               	btfsc	status,2,c
 19152  001806  D762               	goto	l446
 19153  001808  0A07               	xorlw	7	; case 4
 19154  00180A  B4D8               	btfsc	status,2,c
 19155  00180C  D783               	goto	l447
 19156  00180E  0A01               	xorlw	1	; case 5
 19157  001810  B4D8               	btfsc	status,2,c
 19158  001812  D7A4               	goto	l448
 19159  001814  0A03               	xorlw	3	; case 6
 19160  001816  A4D8               	btfss	status,2,c
 19161  001818  0012               	return	
 19162  00181A  D7C4               	goto	l449
 19163  00181C                     __end_of_Rtcc_SetRtccValue:
 19164                           	opt stack 0
 19165                           tosu	equ	0xFFF
 19166                           tosh	equ	0xFFE
 19167                           tosl	equ	0xFFD
 19168                           pclath	equ	0xFFA
 19169                           tblptru	equ	0xFF8
 19170                           tblptrh	equ	0xFF7
 19171                           tblptrl	equ	0xFF6
 19172                           tablat	equ	0xFF5
 19173                           prodh	equ	0xFF4
 19174                           prodl	equ	0xFF3
 19175                           intcon	equ	0xFF2
 19176                           intcon2	equ	0xFF1
 19177                           intcon3	equ	0xFF0
 19178                           indf0	equ	0xFEF
 19179                           postinc0	equ	0xFEE
 19180                           plusw0	equ	0xFEB
 19181                           fsr0h	equ	0xFEA
 19182                           fsr0l	equ	0xFE9
 19183                           wreg	equ	0xFE8
 19184                           indf1	equ	0xFE7
 19185                           postinc1	equ	0xFE6
 19186                           postdec1	equ	0xFE5
 19187                           fsr1h	equ	0xFE2
 19188                           fsr1l	equ	0xFE1
 19189                           indf2	equ	0xFDF
 19190                           postinc2	equ	0xFDE
 19191                           postdec2	equ	0xFDD
 19192                           plusw2	equ	0xFDB
 19193                           fsr2h	equ	0xFDA
 19194                           fsr2l	equ	0xFD9
 19195                           status	equ	0xFD8
 19196                           
 19197 ;; *************** function ___awmod *****************
 19198 ;; Defined at:
 19199 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/awmod.c"
 19200 ;; Parameters:    Size  Location     Type
 19201 ;;  dividend        2   29[BANK0 ] int 
 19202 ;;  divisor         2   31[BANK0 ] int 
 19203 ;; Auto vars:     Size  Location     Type
 19204 ;;  sign            1   34[BANK0 ] unsigned char 
 19205 ;;  counter         1   33[BANK0 ] unsigned char 
 19206 ;; Return value:  Size  Location     Type
 19207 ;;                  2   29[BANK0 ] int 
 19208 ;; Registers used:
 19209 ;;		wreg, status,2, status,0
 19210 ;; Tracked objects:
 19211 ;;		On entry : 0/0
 19212 ;;		On exit  : 0/0
 19213 ;;		Unchanged: 0/0
 19214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19215 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19216 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19218 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19219 ;;Total ram usage:        6 bytes
 19220 ;; Hardware stack levels used:    1
 19221 ;; Hardware stack levels required when called:   11
 19222 ;; This function calls:
 19223 ;;		Nothing
 19224 ;; This function is called by:
 19225 ;;		_Rtcc_SetRtccValue
 19226 ;;		_Rtcc_SetRtccAlarm
 19227 ;; This function uses a non-reentrant model
 19228 ;;
 19229                           
 19230                           	psect	text81
 19231  005308                     __ptext81:
 19232                           	opt stack 0
 19233  005308                     ___awmod:
 19234                           	opt stack 14
 19235                           
 19236                           ; BSR set to: 0
 19237                           ;incstack = 0
 19238  005308  0E00               	movlw	0
 19239  00530A  0100               	movlb	0	; () banked
 19240  00530C  6F82               	movwf	___awmod@sign& (0+255),b
 19241                           
 19242                           ; BSR set to: 0
 19243  00530E  AF7E               	btfss	(___awmod@dividend+1)& (0+255),7,b
 19244  005310  D006               	goto	l3109
 19245                           
 19246                           ; BSR set to: 0
 19247  005312  6D7D               	negf	___awmod@dividend& (0+255),b
 19248  005314  1F7E               	comf	(___awmod@dividend+1)& (0+255),f,b
 19249  005316  B0D8               	btfsc	status,0,c
 19250  005318  2B7E               	incf	(___awmod@dividend+1)& (0+255),f,b
 19251                           
 19252                           ; BSR set to: 0
 19253  00531A  0E01               	movlw	1
 19254  00531C  6F82               	movwf	___awmod@sign& (0+255),b
 19255  00531E                     l3109:
 19256                           
 19257                           ; BSR set to: 0
 19258                           
 19259                           ; BSR set to: 0
 19260  00531E  AF80               	btfss	(___awmod@divisor+1)& (0+255),7,b
 19261  005320  D004               	goto	l3110
 19262                           
 19263                           ; BSR set to: 0
 19264  005322  6D7F               	negf	___awmod@divisor& (0+255),b
 19265  005324  1F80               	comf	(___awmod@divisor+1)& (0+255),f,b
 19266  005326  B0D8               	btfsc	status,0,c
 19267  005328  2B80               	incf	(___awmod@divisor+1)& (0+255),f,b
 19268  00532A                     l3110:
 19269                           
 19270                           ; BSR set to: 0
 19271                           
 19272                           ; BSR set to: 0
 19273  00532A  517F               	movf	___awmod@divisor& (0+255),w,b
 19274  00532C  1180               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 19275  00532E  B4D8               	btfsc	status,2,c
 19276  005330  D018               	goto	l3117
 19277                           
 19278                           ; BSR set to: 0
 19279  005332  0E01               	movlw	1
 19280  005334  6F81               	movwf	___awmod@counter& (0+255),b
 19281  005336  D004               	goto	l3112
 19282  005338                     
 19283                           ; BSR set to: 0
 19284                           
 19285                           ; BSR set to: 0
 19286  005338  90D8               	bcf	status,0,c
 19287  00533A  377F               	rlcf	___awmod@divisor& (0+255),f,b
 19288  00533C  3780               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 19289  00533E  2B81               	incf	___awmod@counter& (0+255),f,b
 19290  005340                     l3112:
 19291                           
 19292                           ; BSR set to: 0
 19293                           
 19294                           ; BSR set to: 0
 19295  005340  AF80               	btfss	(___awmod@divisor+1)& (0+255),7,b
 19296  005342  D7FA               	goto	l3113
 19297  005344                     u13450:
 19298                           
 19299                           ; BSR set to: 0
 19300                           
 19301                           ; BSR set to: 0
 19302                           
 19303                           ; BSR set to: 0
 19304  005344  517F               	movf	___awmod@divisor& (0+255),w,b
 19305  005346  5D7D               	subwf	___awmod@dividend& (0+255),w,b
 19306  005348  5180               	movf	(___awmod@divisor+1)& (0+255),w,b
 19307  00534A  597E               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 19308  00534C  A0D8               	btfss	status,0,c
 19309  00534E  D004               	goto	l3116
 19310                           
 19311                           ; BSR set to: 0
 19312  005350  517F               	movf	___awmod@divisor& (0+255),w,b
 19313  005352  5F7D               	subwf	___awmod@dividend& (0+255),f,b
 19314  005354  5180               	movf	(___awmod@divisor+1)& (0+255),w,b
 19315  005356  5B7E               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 19316  005358                     l3116:
 19317                           
 19318                           ; BSR set to: 0
 19319                           
 19320                           ; BSR set to: 0
 19321  005358  90D8               	bcf	status,0,c
 19322  00535A  3380               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 19323  00535C  337F               	rrcf	___awmod@divisor& (0+255),f,b
 19324                           
 19325                           ; BSR set to: 0
 19326  00535E  2F81               	decfsz	___awmod@counter& (0+255),f,b
 19327  005360  D7F1               	goto	u13450
 19328  005362                     l3117:
 19329                           
 19330                           ; BSR set to: 0
 19331                           
 19332                           ; BSR set to: 0
 19333                           
 19334                           ; BSR set to: 0
 19335  005362  5182               	movf	___awmod@sign& (0+255),w,b
 19336  005364  B4D8               	btfsc	status,2,c
 19337  005366  D004               	goto	l3118
 19338                           
 19339                           ; BSR set to: 0
 19340  005368  6D7D               	negf	___awmod@dividend& (0+255),b
 19341  00536A  1F7E               	comf	(___awmod@dividend+1)& (0+255),f,b
 19342  00536C  B0D8               	btfsc	status,0,c
 19343  00536E  2B7E               	incf	(___awmod@dividend+1)& (0+255),f,b
 19344  005370                     l3118:
 19345                           
 19346                           ; BSR set to: 0
 19347                           
 19348                           ; BSR set to: 0
 19349  005370  C07D  F07D         	movff	___awmod@dividend,?___awmod
 19350  005374  C07E  F07E         	movff	___awmod@dividend+1,?___awmod+1
 19351  005378  0012               	return	
 19352  00537A                     __end_of___awmod:
 19353                           	opt stack 0
 19354                           tosu	equ	0xFFF
 19355                           tosh	equ	0xFFE
 19356                           tosl	equ	0xFFD
 19357                           pclath	equ	0xFFA
 19358                           tblptru	equ	0xFF8
 19359                           tblptrh	equ	0xFF7
 19360                           tblptrl	equ	0xFF6
 19361                           tablat	equ	0xFF5
 19362                           prodh	equ	0xFF4
 19363                           prodl	equ	0xFF3
 19364                           intcon	equ	0xFF2
 19365                           intcon2	equ	0xFF1
 19366                           intcon3	equ	0xFF0
 19367                           indf0	equ	0xFEF
 19368                           postinc0	equ	0xFEE
 19369                           plusw0	equ	0xFEB
 19370                           fsr0h	equ	0xFEA
 19371                           fsr0l	equ	0xFE9
 19372                           wreg	equ	0xFE8
 19373                           indf1	equ	0xFE7
 19374                           postinc1	equ	0xFE6
 19375                           postdec1	equ	0xFE5
 19376                           fsr1h	equ	0xFE2
 19377                           fsr1l	equ	0xFE1
 19378                           indf2	equ	0xFDF
 19379                           postinc2	equ	0xFDE
 19380                           postdec2	equ	0xFDD
 19381                           plusw2	equ	0xFDB
 19382                           fsr2h	equ	0xFDA
 19383                           fsr2l	equ	0xFD9
 19384                           status	equ	0xFD8
 19385                           
 19386 ;; *************** function ___awdiv *****************
 19387 ;; Defined at:
 19388 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/awdiv.c"
 19389 ;; Parameters:    Size  Location     Type
 19390 ;;  dividend        2   29[BANK0 ] int 
 19391 ;;  divisor         2   31[BANK0 ] int 
 19392 ;; Auto vars:     Size  Location     Type
 19393 ;;  quotient        2   35[BANK0 ] int 
 19394 ;;  sign            1   34[BANK0 ] unsigned char 
 19395 ;;  counter         1   33[BANK0 ] unsigned char 
 19396 ;; Return value:  Size  Location     Type
 19397 ;;                  2   29[BANK0 ] int 
 19398 ;; Registers used:
 19399 ;;		wreg, status,2, status,0
 19400 ;; Tracked objects:
 19401 ;;		On entry : 0/0
 19402 ;;		On exit  : 0/0
 19403 ;;		Unchanged: 0/0
 19404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19405 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19406 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19408 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19409 ;;Total ram usage:        8 bytes
 19410 ;; Hardware stack levels used:    1
 19411 ;; Hardware stack levels required when called:   11
 19412 ;; This function calls:
 19413 ;;		Nothing
 19414 ;; This function is called by:
 19415 ;;		_Rtcc_SetRtccValue
 19416 ;;		_Rtcc_SetRtccAlarm
 19417 ;; This function uses a non-reentrant model
 19418 ;;
 19419                           
 19420                           	psect	text82
 19421  00517C                     __ptext82:
 19422                           	opt stack 0
 19423  00517C                     ___awdiv:
 19424                           	opt stack 14
 19425                           
 19426                           ; BSR set to: 0
 19427                           ;incstack = 0
 19428  00517C  0E00               	movlw	0
 19429  00517E  0100               	movlb	0	; () banked
 19430  005180  6F82               	movwf	___awdiv@sign& (0+255),b
 19431                           
 19432                           ; BSR set to: 0
 19433  005182  AF80               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 19434  005184  D006               	goto	l3096
 19435                           
 19436                           ; BSR set to: 0
 19437  005186  6D7F               	negf	___awdiv@divisor& (0+255),b
 19438  005188  1F80               	comf	(___awdiv@divisor+1)& (0+255),f,b
 19439  00518A  B0D8               	btfsc	status,0,c
 19440  00518C  2B80               	incf	(___awdiv@divisor+1)& (0+255),f,b
 19441                           
 19442                           ; BSR set to: 0
 19443  00518E  0E01               	movlw	1
 19444  005190  6F82               	movwf	___awdiv@sign& (0+255),b
 19445  005192                     l3096:
 19446                           
 19447                           ; BSR set to: 0
 19448                           
 19449                           ; BSR set to: 0
 19450  005192  AF7E               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 19451  005194  D006               	goto	l3097
 19452                           
 19453                           ; BSR set to: 0
 19454  005196  6D7D               	negf	___awdiv@dividend& (0+255),b
 19455  005198  1F7E               	comf	(___awdiv@dividend+1)& (0+255),f,b
 19456  00519A  B0D8               	btfsc	status,0,c
 19457  00519C  2B7E               	incf	(___awdiv@dividend+1)& (0+255),f,b
 19458                           
 19459                           ; BSR set to: 0
 19460  00519E  0E01               	movlw	1
 19461  0051A0  1B82               	xorwf	___awdiv@sign& (0+255),f,b
 19462  0051A2                     l3097:
 19463                           
 19464                           ; BSR set to: 0
 19465                           
 19466                           ; BSR set to: 0
 19467  0051A2  0E00               	movlw	0
 19468  0051A4  6F84               	movwf	(___awdiv@quotient+1)& (0+255),b
 19469  0051A6  0E00               	movlw	0
 19470  0051A8  6F83               	movwf	___awdiv@quotient& (0+255),b
 19471                           
 19472                           ; BSR set to: 0
 19473  0051AA  517F               	movf	___awdiv@divisor& (0+255),w,b
 19474  0051AC  1180               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 19475  0051AE  B4D8               	btfsc	status,2,c
 19476  0051B0  D01C               	goto	l3104
 19477                           
 19478                           ; BSR set to: 0
 19479  0051B2  0E01               	movlw	1
 19480  0051B4  6F81               	movwf	___awdiv@counter& (0+255),b
 19481  0051B6  D004               	goto	l3099
 19482  0051B8                     
 19483                           ; BSR set to: 0
 19484                           
 19485                           ; BSR set to: 0
 19486  0051B8  90D8               	bcf	status,0,c
 19487  0051BA  377F               	rlcf	___awdiv@divisor& (0+255),f,b
 19488  0051BC  3780               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 19489  0051BE  2B81               	incf	___awdiv@counter& (0+255),f,b
 19490  0051C0                     l3099:
 19491                           
 19492                           ; BSR set to: 0
 19493                           
 19494                           ; BSR set to: 0
 19495  0051C0  AF80               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 19496  0051C2  D7FA               	goto	l3100
 19497  0051C4                     u13390:
 19498                           
 19499                           ; BSR set to: 0
 19500                           
 19501                           ; BSR set to: 0
 19502                           
 19503                           ; BSR set to: 0
 19504  0051C4  90D8               	bcf	status,0,c
 19505  0051C6  3783               	rlcf	___awdiv@quotient& (0+255),f,b
 19506  0051C8  3784               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 19507                           
 19508                           ; BSR set to: 0
 19509  0051CA  517F               	movf	___awdiv@divisor& (0+255),w,b
 19510  0051CC  5D7D               	subwf	___awdiv@dividend& (0+255),w,b
 19511  0051CE  5180               	movf	(___awdiv@divisor+1)& (0+255),w,b
 19512  0051D0  597E               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 19513  0051D2  A0D8               	btfss	status,0,c
 19514  0051D4  D005               	goto	l3103
 19515                           
 19516                           ; BSR set to: 0
 19517  0051D6  517F               	movf	___awdiv@divisor& (0+255),w,b
 19518  0051D8  5F7D               	subwf	___awdiv@dividend& (0+255),f,b
 19519  0051DA  5180               	movf	(___awdiv@divisor+1)& (0+255),w,b
 19520  0051DC  5B7E               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 19521                           
 19522                           ; BSR set to: 0
 19523  0051DE  8183               	bsf	___awdiv@quotient& (0+255),0,b
 19524  0051E0                     l3103:
 19525                           
 19526                           ; BSR set to: 0
 19527                           
 19528                           ; BSR set to: 0
 19529  0051E0  90D8               	bcf	status,0,c
 19530  0051E2  3380               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 19531  0051E4  337F               	rrcf	___awdiv@divisor& (0+255),f,b
 19532                           
 19533                           ; BSR set to: 0
 19534  0051E6  2F81               	decfsz	___awdiv@counter& (0+255),f,b
 19535  0051E8  D7ED               	goto	u13390
 19536  0051EA                     l3104:
 19537                           
 19538                           ; BSR set to: 0
 19539                           
 19540                           ; BSR set to: 0
 19541                           
 19542                           ; BSR set to: 0
 19543  0051EA  5182               	movf	___awdiv@sign& (0+255),w,b
 19544  0051EC  B4D8               	btfsc	status,2,c
 19545  0051EE  D004               	goto	l3105
 19546                           
 19547                           ; BSR set to: 0
 19548  0051F0  6D83               	negf	___awdiv@quotient& (0+255),b
 19549  0051F2  1F84               	comf	(___awdiv@quotient+1)& (0+255),f,b
 19550  0051F4  B0D8               	btfsc	status,0,c
 19551  0051F6  2B84               	incf	(___awdiv@quotient+1)& (0+255),f,b
 19552  0051F8                     l3105:
 19553                           
 19554                           ; BSR set to: 0
 19555                           
 19556                           ; BSR set to: 0
 19557  0051F8  C083  F07D         	movff	___awdiv@quotient,?___awdiv
 19558  0051FC  C084  F07E         	movff	___awdiv@quotient+1,?___awdiv+1
 19559  005200  0012               	return	
 19560  005202                     __end_of___awdiv:
 19561                           	opt stack 0
 19562                           tosu	equ	0xFFF
 19563                           tosh	equ	0xFFE
 19564                           tosl	equ	0xFFD
 19565                           pclath	equ	0xFFA
 19566                           tblptru	equ	0xFF8
 19567                           tblptrh	equ	0xFF7
 19568                           tblptrl	equ	0xFF6
 19569                           tablat	equ	0xFF5
 19570                           prodh	equ	0xFF4
 19571                           prodl	equ	0xFF3
 19572                           intcon	equ	0xFF2
 19573                           intcon2	equ	0xFF1
 19574                           intcon3	equ	0xFF0
 19575                           indf0	equ	0xFEF
 19576                           postinc0	equ	0xFEE
 19577                           plusw0	equ	0xFEB
 19578                           fsr0h	equ	0xFEA
 19579                           fsr0l	equ	0xFE9
 19580                           wreg	equ	0xFE8
 19581                           indf1	equ	0xFE7
 19582                           postinc1	equ	0xFE6
 19583                           postdec1	equ	0xFE5
 19584                           fsr1h	equ	0xFE2
 19585                           fsr1l	equ	0xFE1
 19586                           indf2	equ	0xFDF
 19587                           postinc2	equ	0xFDE
 19588                           postdec2	equ	0xFDD
 19589                           plusw2	equ	0xFDB
 19590                           fsr2h	equ	0xFDA
 19591                           fsr2l	equ	0xFD9
 19592                           status	equ	0xFD8
 19593                           
 19594 ;; *************** function _Rtcc_LockRtc *****************
 19595 ;; Defined at:
 19596 ;;		line 183 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 19597 ;; Parameters:    Size  Location     Type
 19598 ;;		None
 19599 ;; Auto vars:     Size  Location     Type
 19600 ;;		None
 19601 ;; Return value:  Size  Location     Type
 19602 ;;                  1    wreg      void 
 19603 ;; Registers used:
 19604 ;;		None
 19605 ;; Tracked objects:
 19606 ;;		On entry : 0/0
 19607 ;;		On exit  : 0/0
 19608 ;;		Unchanged: 0/0
 19609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19610 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19611 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19613 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19614 ;;Total ram usage:        0 bytes
 19615 ;; Hardware stack levels used:    1
 19616 ;; Hardware stack levels required when called:   11
 19617 ;; This function calls:
 19618 ;;		Nothing
 19619 ;; This function is called by:
 19620 ;;		_Rtcm_MainTask
 19621 ;;		_Rtcm_SetRtccDate
 19622 ;;		_Rtcm_SetRtccAlarm
 19623 ;; This function uses a non-reentrant model
 19624 ;;
 19625                           
 19626                           	psect	text83
 19627  006A6E                     __ptext83:
 19628                           	opt stack 0
 19629  006A6E                     _Rtcc_LockRtc:
 19630                           	opt stack 15
 19631                           
 19632                           ; BSR set to: 0
 19633                           ;incstack = 0
 19634  006A6E  010F               	movlb	15	;# 
 19635  006A70  0E55               	movlw	85	;# 
 19636  006A72  6EA7               	movwf	4007,c	;# 
 19637  006A74  0EAA               	movlw	170	;# 
 19638  006A76  6EA7               	movwf	4007,c	;# 
 19639                           
 19640                           ;rtcc_drv.c: 192: RTCCFGbits.RTCWREN = 0u;
 19641  006A78  010F               	movlb	15	; () banked
 19642  006A7A  9B3F               	bcf	63,5,b	;volatile
 19643                           
 19644                           ; BSR set to: 15
 19645  006A7C  0012               	return		;funcret
 19646  006A7E                     __end_of_Rtcc_LockRtc:
 19647                           	opt stack 0
 19648                           tosu	equ	0xFFF
 19649                           tosh	equ	0xFFE
 19650                           tosl	equ	0xFFD
 19651                           pclath	equ	0xFFA
 19652                           tblptru	equ	0xFF8
 19653                           tblptrh	equ	0xFF7
 19654                           tblptrl	equ	0xFF6
 19655                           tablat	equ	0xFF5
 19656                           prodh	equ	0xFF4
 19657                           prodl	equ	0xFF3
 19658                           intcon	equ	0xFF2
 19659                           intcon2	equ	0xFF1
 19660                           intcon3	equ	0xFF0
 19661                           indf0	equ	0xFEF
 19662                           postinc0	equ	0xFEE
 19663                           plusw0	equ	0xFEB
 19664                           fsr0h	equ	0xFEA
 19665                           fsr0l	equ	0xFE9
 19666                           wreg	equ	0xFE8
 19667                           indf1	equ	0xFE7
 19668                           postinc1	equ	0xFE6
 19669                           postdec1	equ	0xFE5
 19670                           fsr1h	equ	0xFE2
 19671                           fsr1l	equ	0xFE1
 19672                           indf2	equ	0xFDF
 19673                           postinc2	equ	0xFDE
 19674                           postdec2	equ	0xFDD
 19675                           plusw2	equ	0xFDB
 19676                           fsr2h	equ	0xFDA
 19677                           fsr2l	equ	0xFD9
 19678                           status	equ	0xFD8
 19679                           
 19680 ;; *************** function _Rtcm_GetRtccDate *****************
 19681 ;; Defined at:
 19682 ;;		line 202 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/rtcm.c"
 19683 ;; Parameters:    Size  Location     Type
 19684 ;;		None
 19685 ;; Auto vars:     Size  Location     Type
 19686 ;;  LocalDate       8   42[BANK0 ] struct _RtccDateType
 19687 ;; Return value:  Size  Location     Type
 19688 ;;                  8   33[BANK0 ] struct _RtccDateType
 19689 ;; Registers used:
 19690 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19691 ;; Tracked objects:
 19692 ;;		On entry : 0/0
 19693 ;;		On exit  : 0/0
 19694 ;;		Unchanged: 0/0
 19695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19696 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19697 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19698 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19699 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19700 ;;Total ram usage:       17 bytes
 19701 ;; Hardware stack levels used:    1
 19702 ;; Hardware stack levels required when called:   12
 19703 ;; This function calls:
 19704 ;;		_Rtcc_GetRtccValue
 19705 ;; This function is called by:
 19706 ;;		_Rtcm_MainTask
 19707 ;; This function uses a non-reentrant model
 19708 ;;
 19709                           
 19710                           	psect	text84
 19711  0056DC                     __ptext84:
 19712                           	opt stack 0
 19713  0056DC                     _Rtcm_GetRtccDate:
 19714                           	opt stack 15
 19715                           
 19716                           ;rtcm.c: 204: RtccDateType LocalDate;
 19717                           ;rtcm.c: 207: LocalDate.Year = 2000 + Rtcc_GetRtccValue(ValPtrYear);
 19718                           
 19719                           ; BSR set to: 15
 19720                           ;incstack = 0
 19721  0056DC  0E00               	movlw	0
 19722  0056DE  ECC4  F026         	call	_Rtcc_GetRtccValue
 19723  0056E2  0100               	movlb	0	; () banked
 19724  0056E4  6F89               	movwf	??_Rtcm_GetRtccDate& (0+255),b
 19725  0056E6  0ED0               	movlw	208
 19726  0056E8  2589               	addwf	??_Rtcm_GetRtccDate& (0+255),w,b
 19727  0056EA  6F8A               	movwf	Rtcm_GetRtccDate@LocalDate& (0+255),b
 19728  0056EC  6B8B               	clrf	(Rtcm_GetRtccDate@LocalDate+1)& (0+255),b
 19729  0056EE  0E07               	movlw	7
 19730  0056F0  238B               	addwfc	(Rtcm_GetRtccDate@LocalDate+1)& (0+255),f,b
 19731                           
 19732                           ;rtcm.c: 208: LocalDate.Month = Rtcc_GetRtccValue(ValPtrMonth);
 19733  0056F2  0E01               	movlw	1
 19734  0056F4  ECC4  F026         	call	_Rtcc_GetRtccValue
 19735  0056F8  0100               	movlb	0	; () banked
 19736  0056FA  6F8C               	movwf	(Rtcm_GetRtccDate@LocalDate+2)& (0+255),b
 19737                           
 19738                           ;rtcm.c: 209: LocalDate.Day = Rtcc_GetRtccValue(ValPtrDay);
 19739  0056FC  0E02               	movlw	2
 19740  0056FE  ECC4  F026         	call	_Rtcc_GetRtccValue
 19741  005702  0100               	movlb	0	; () banked
 19742  005704  6F8D               	movwf	(Rtcm_GetRtccDate@LocalDate+3)& (0+255),b
 19743                           
 19744                           ;rtcm.c: 210: LocalDate.Weekday = Rtcc_GetRtccValue(ValPtrWeekday);
 19745  005706  0E03               	movlw	3
 19746  005708  ECC4  F026         	call	_Rtcc_GetRtccValue
 19747  00570C  0100               	movlb	0	; () banked
 19748  00570E  6F8E               	movwf	(Rtcm_GetRtccDate@LocalDate+4)& (0+255),b
 19749                           
 19750                           ;rtcm.c: 211: LocalDate.Hour = Rtcc_GetRtccValue(ValPtrHours);
 19751  005710  0E04               	movlw	4
 19752  005712  ECC4  F026         	call	_Rtcc_GetRtccValue
 19753  005716  0100               	movlb	0	; () banked
 19754  005718  6F8F               	movwf	(Rtcm_GetRtccDate@LocalDate+5)& (0+255),b
 19755                           
 19756                           ;rtcm.c: 212: LocalDate.Minute = Rtcc_GetRtccValue(ValPtrMinutes);
 19757  00571A  0E05               	movlw	5
 19758  00571C  ECC4  F026         	call	_Rtcc_GetRtccValue
 19759  005720  0100               	movlb	0	; () banked
 19760  005722  6F90               	movwf	(Rtcm_GetRtccDate@LocalDate+6)& (0+255),b
 19761                           
 19762                           ;rtcm.c: 213: LocalDate.Second = Rtcc_GetRtccValue(ValPtrSeconds);
 19763  005724  0E06               	movlw	6
 19764  005726  ECC4  F026         	call	_Rtcc_GetRtccValue
 19765  00572A  0100               	movlb	0	; () banked
 19766  00572C  6F91               	movwf	(Rtcm_GetRtccDate@LocalDate+7)& (0+255),b
 19767                           
 19768                           ; BSR set to: 0
 19769                           ;rtcm.c: 216: return LocalDate;
 19770  00572E  EE20  F08A         	lfsr	2,Rtcm_GetRtccDate@LocalDate
 19771  005732  EE00  F081         	lfsr	0,?_Rtcm_GetRtccDate
 19772  005736  0E07               	movlw	7
 19773  005738                     u15871:
 19774  005738  CFDB FFEB          	movff	plusw2,plusw0
 19775  00573C  06E8               	decf	wreg,f,c
 19776  00573E  E2FC               	bc	u15871
 19777  005740  0012               	return	
 19778  005742                     __end_of_Rtcm_GetRtccDate:
 19779                           	opt stack 0
 19780                           tosu	equ	0xFFF
 19781                           tosh	equ	0xFFE
 19782                           tosl	equ	0xFFD
 19783                           pclath	equ	0xFFA
 19784                           tblptru	equ	0xFF8
 19785                           tblptrh	equ	0xFF7
 19786                           tblptrl	equ	0xFF6
 19787                           tablat	equ	0xFF5
 19788                           prodh	equ	0xFF4
 19789                           prodl	equ	0xFF3
 19790                           intcon	equ	0xFF2
 19791                           intcon2	equ	0xFF1
 19792                           intcon3	equ	0xFF0
 19793                           indf0	equ	0xFEF
 19794                           postinc0	equ	0xFEE
 19795                           plusw0	equ	0xFEB
 19796                           fsr0h	equ	0xFEA
 19797                           fsr0l	equ	0xFE9
 19798                           wreg	equ	0xFE8
 19799                           indf1	equ	0xFE7
 19800                           postinc1	equ	0xFE6
 19801                           postdec1	equ	0xFE5
 19802                           fsr1h	equ	0xFE2
 19803                           fsr1l	equ	0xFE1
 19804                           indf2	equ	0xFDF
 19805                           postinc2	equ	0xFDE
 19806                           postdec2	equ	0xFDD
 19807                           plusw2	equ	0xFDB
 19808                           fsr2h	equ	0xFDA
 19809                           fsr2l	equ	0xFD9
 19810                           status	equ	0xFD8
 19811                           
 19812 ;; *************** function _Rtcc_GetRtccValue *****************
 19813 ;; Defined at:
 19814 ;;		line 205 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 19815 ;; Parameters:    Size  Location     Type
 19816 ;;  RtccPtrVal      1    wreg     enum E7757
 19817 ;; Auto vars:     Size  Location     Type
 19818 ;;  RtccPtrVal      1   30[BANK0 ] enum E7757
 19819 ;;  RegValue        1   32[BANK0 ] unsigned char 
 19820 ;;  RetValue        1   31[BANK0 ] unsigned char 
 19821 ;; Return value:  Size  Location     Type
 19822 ;;                  1    wreg      unsigned char 
 19823 ;; Registers used:
 19824 ;;		wreg, status,2, status,0, prodl, prodh
 19825 ;; Tracked objects:
 19826 ;;		On entry : 0/0
 19827 ;;		On exit  : 0/0
 19828 ;;		Unchanged: 0/0
 19829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19830 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19831 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19832 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19833 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19834 ;;Total ram usage:        4 bytes
 19835 ;; Hardware stack levels used:    1
 19836 ;; Hardware stack levels required when called:   11
 19837 ;; This function calls:
 19838 ;;		Nothing
 19839 ;; This function is called by:
 19840 ;;		_Rtcm_GetRtccDate
 19841 ;; This function uses a non-reentrant model
 19842 ;;
 19843                           
 19844                           	psect	text85
 19845  004D88                     __ptext85:
 19846                           	opt stack 0
 19847  004D88                     _Rtcc_GetRtccValue:
 19848                           	opt stack 15
 19849                           
 19850                           ; BSR set to: 0
 19851                           ;incstack = 0
 19852                           ;Rtcc_GetRtccValue@RtccPtrVal stored from wreg
 19853  004D88  0100               	movlb	0	; () banked
 19854  004D8A  6F7E               	movwf	Rtcc_GetRtccValue@RtccPtrVal& (0+255),b
 19855                           
 19856                           ;rtcc_drv.c: 208: UINT8 RegValue;
 19857                           ;rtcc_drv.c: 209: UINT8 RetValue;
 19858                           ;rtcc_drv.c: 211: switch (RtccPtrVal)
 19859  004D8C  D02D               	goto	l416
 19860  004D8E                     l417:
 19861                           
 19862                           ; BSR set to: 0
 19863                           ;rtcc_drv.c: 215: RTCCFGbits.RTCPTR1 = 1U;
 19864  004D8E  010F               	movlb	15	; () banked
 19865  004D90  833F               	bsf	63,1,b	;volatile
 19866  004D92                     
 19867                           ;rtcc_drv.c: 216: RTCCFGbits.RTCPTR0 = 1U;
 19868  004D92  813F               	bsf	63,0,b	;volatile
 19869  004D94  D01C               	goto	L18
 19870  004D96                     l419:
 19871                           
 19872                           ; BSR set to: 0
 19873                           ;rtcc_drv.c: 225: RTCCFGbits.RTCPTR1 = 1U;
 19874  004D96  010F               	movlb	15	; () banked
 19875  004D98  833F               	bsf	63,1,b	;volatile
 19876  004D9A  D01E               	goto	L19
 19877  004D9C                     l420:
 19878                           
 19879                           ; BSR set to: 0
 19880                           ;rtcc_drv.c: 235: RTCCFGbits.RTCPTR1 = 1U;
 19881  004D9C  010F               	movlb	15	; () banked
 19882  004D9E  833F               	bsf	63,1,b	;volatile
 19883  004DA0  D021               	goto	L22
 19884  004DA2                     l14442:
 19885                           
 19886                           ; BSR set to: 15
 19887                           ;rtcc_drv.c: 240: RetValue = (((RegValue & 0xF0) >> 4U) * 10) + (RegValue & 0x0F);
 19888  004DA2  C080  F07D         	movff	Rtcc_GetRtccValue@RegValue,??_Rtcc_GetRtccValue
 19889  004DA6  0E0F               	movlw	15
 19890  004DA8  0100               	movlb	0	; () banked
 19891  004DAA  177D               	andwf	??_Rtcc_GetRtccValue& (0+255),f,b
 19892  004DAC  3980               	swapf	Rtcc_GetRtccValue@RegValue& (0+255),w,b
 19893  004DAE  0B0F               	andlw	15
 19894  004DB0  0B0F               	andlw	15
 19895  004DB2  0D0A               	mullw	10
 19896  004DB4  50F3               	movf	prodl,w,c
 19897  004DB6  257D               	addwf	??_Rtcc_GetRtccValue& (0+255),w,b
 19898  004DB8  6F7F               	movwf	Rtcc_GetRtccValue@RetValue& (0+255),b
 19899                           
 19900                           ;rtcc_drv.c: 241: break;
 19901  004DBA  D02D               	goto	l418
 19902  004DBC                     l421:
 19903                           
 19904                           ; BSR set to: 0
 19905                           ;rtcc_drv.c: 245: RTCCFGbits.RTCPTR1 = 0U;
 19906  004DBC  010F               	movlb	15	; () banked
 19907  004DBE  933F               	bcf	63,1,b	;volatile
 19908                           
 19909                           ;rtcc_drv.c: 246: RTCCFGbits.RTCPTR0 = 1U;
 19910  004DC0  813F               	bsf	63,0,b	;volatile
 19911                           
 19912                           ;rtcc_drv.c: 248: RetValue = RTCVALH;
 19913  004DC2  CF99 F07F          	movff	3993,Rtcc_GetRtccValue@RetValue	;volatile
 19914                           
 19915                           ;rtcc_drv.c: 249: break;
 19916  004DC6  D027               	goto	l418
 19917  004DC8                     l422:
 19918                           
 19919                           ; BSR set to: 0
 19920                           ;rtcc_drv.c: 253: RTCCFGbits.RTCPTR1 = 0U;
 19921  004DC8  010F               	movlb	15	; () banked
 19922  004DCA  933F               	bcf	63,1,b	;volatile
 19923  004DCC  D7E2               	goto	L20
 19924  004DCE                     L18:
 19925                           
 19926                           ;rtcc_drv.c: 256: RegValue = RTCVALL;
 19927  004DCE  CF98 F080          	movff	3992,Rtcc_GetRtccValue@RegValue	;volatile
 19928  004DD2  D7E7               	goto	l14442
 19929  004DD4                     l423:
 19930                           
 19931                           ; BSR set to: 0
 19932                           ;rtcc_drv.c: 263: RTCCFGbits.RTCPTR1 = 0U;
 19933  004DD4  010F               	movlb	15	; () banked
 19934  004DD6  933F               	bcf	63,1,b	;volatile
 19935  004DD8                     L19:
 19936                           
 19937                           ;rtcc_drv.c: 264: RTCCFGbits.RTCPTR0 = 0U;
 19938  004DD8  913F               	bcf	63,0,b	;volatile
 19939                           
 19940                           ;rtcc_drv.c: 266: RegValue = RTCVALH;
 19941  004DDA  CF99 F080          	movff	3993,Rtcc_GetRtccValue@RegValue	;volatile
 19942  004DDE  D7E1               	goto	l14442
 19943  004DE0                     l424:
 19944                           
 19945                           ; BSR set to: 0
 19946                           ;rtcc_drv.c: 273: RTCCFGbits.RTCPTR1 = 0U;
 19947  004DE0  010F               	movlb	15	; () banked
 19948  004DE2  933F               	bcf	63,1,b	;volatile
 19949  004DE4                     L22:
 19950                           
 19951                           ;rtcc_drv.c: 274: RTCCFGbits.RTCPTR0 = 0U;
 19952  004DE4  913F               	bcf	63,0,b	;volatile
 19953  004DE6  D7F3               	goto	L18
 19954  004DE8                     l416:
 19955                           
 19956                           ; BSR set to: 0
 19957  004DE8  0100               	movlb	0	; () banked
 19958  004DEA  517E               	movf	Rtcc_GetRtccValue@RtccPtrVal& (0+255),w,b
 19959                           
 19960                           ; Switch size 1, requested type "space"
 19961                           ; Number of cases is 7, Range of values is 0 to 6
 19962                           ; switch strategies available:
 19963                           ; Name         Instructions Cycles
 19964                           ; simple_byte           22    12 (average)
 19965                           ;	Chosen strategy is simple_byte
 19966  004DEC  0A00               	xorlw	0	; case 0
 19967  004DEE  B4D8               	btfsc	status,2,c
 19968  004DF0  D7CE               	goto	l417
 19969  004DF2  0A01               	xorlw	1	; case 1
 19970  004DF4  B4D8               	btfsc	status,2,c
 19971  004DF6  D7CF               	goto	l419
 19972  004DF8  0A03               	xorlw	3	; case 2
 19973  004DFA  B4D8               	btfsc	status,2,c
 19974  004DFC  D7CF               	goto	l420
 19975  004DFE  0A01               	xorlw	1	; case 3
 19976  004E00  B4D8               	btfsc	status,2,c
 19977  004E02  D7DC               	goto	l421
 19978  004E04  0A07               	xorlw	7	; case 4
 19979  004E06  B4D8               	btfsc	status,2,c
 19980  004E08  D7DF               	goto	l422
 19981  004E0A  0A01               	xorlw	1	; case 5
 19982  004E0C  B4D8               	btfsc	status,2,c
 19983  004E0E  D7E2               	goto	l423
 19984  004E10  0A03               	xorlw	3	; case 6
 19985  004E12  B4D8               	btfsc	status,2,c
 19986  004E14  D7E5               	goto	l424
 19987  004E16                     l418:
 19988                           
 19989                           ;rtcc_drv.c: 286: return RetValue;
 19990                           
 19991                           ; BSR set to: 0
 19992  004E16  0100               	movlb	0	; () banked
 19993  004E18  517F               	movf	Rtcc_GetRtccValue@RetValue& (0+255),w,b
 19994  004E1A  0012               	return	
 19995  004E1C                     __end_of_Rtcc_GetRtccValue:
 19996                           	opt stack 0
 19997                           tosu	equ	0xFFF
 19998                           tosh	equ	0xFFE
 19999                           tosl	equ	0xFFD
 20000                           pclath	equ	0xFFA
 20001                           tblptru	equ	0xFF8
 20002                           tblptrh	equ	0xFF7
 20003                           tblptrl	equ	0xFF6
 20004                           tablat	equ	0xFF5
 20005                           prodh	equ	0xFF4
 20006                           prodl	equ	0xFF3
 20007                           intcon	equ	0xFF2
 20008                           intcon2	equ	0xFF1
 20009                           intcon3	equ	0xFF0
 20010                           indf0	equ	0xFEF
 20011                           postinc0	equ	0xFEE
 20012                           plusw0	equ	0xFEB
 20013                           fsr0h	equ	0xFEA
 20014                           fsr0l	equ	0xFE9
 20015                           wreg	equ	0xFE8
 20016                           indf1	equ	0xFE7
 20017                           postinc1	equ	0xFE6
 20018                           postdec1	equ	0xFE5
 20019                           fsr1h	equ	0xFE2
 20020                           fsr1l	equ	0xFE1
 20021                           indf2	equ	0xFDF
 20022                           postinc2	equ	0xFDE
 20023                           postdec2	equ	0xFDD
 20024                           plusw2	equ	0xFDB
 20025                           fsr2h	equ	0xFDA
 20026                           fsr2l	equ	0xFD9
 20027                           status	equ	0xFD8
 20028                           
 20029 ;; *************** function _Rtcc_SetRtcStatus *****************
 20030 ;; Defined at:
 20031 ;;		line 149 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 20032 ;; Parameters:    Size  Location     Type
 20033 ;;  Status          1    wreg     unsigned char 
 20034 ;; Auto vars:     Size  Location     Type
 20035 ;;  Status          1   29[BANK0 ] unsigned char 
 20036 ;; Return value:  Size  Location     Type
 20037 ;;                  1    wreg      void 
 20038 ;; Registers used:
 20039 ;;		wreg
 20040 ;; Tracked objects:
 20041 ;;		On entry : 0/0
 20042 ;;		On exit  : 0/0
 20043 ;;		Unchanged: 0/0
 20044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20045 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20046 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20048 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20049 ;;Total ram usage:        1 bytes
 20050 ;; Hardware stack levels used:    1
 20051 ;; Hardware stack levels required when called:   11
 20052 ;; This function calls:
 20053 ;;		Nothing
 20054 ;; This function is called by:
 20055 ;;		_Rtcm_MainTask
 20056 ;; This function uses a non-reentrant model
 20057 ;;
 20058                           
 20059                           	psect	text86
 20060  0069BC                     __ptext86:
 20061                           	opt stack 0
 20062  0069BC                     _Rtcc_SetRtcStatus:
 20063                           	opt stack 16
 20064                           
 20065                           ; BSR set to: 0
 20066                           ;incstack = 0
 20067                           ;Rtcc_SetRtcStatus@Status stored from wreg
 20068  0069BC  0100               	movlb	0	; () banked
 20069  0069BE  6F7D               	movwf	Rtcc_SetRtcStatus@Status& (0+255),b
 20070                           
 20071                           ;rtcc_drv.c: 152: RTCCFGbits.RTCEN = Status;
 20072  0069C0  0100               	movlb	0	; () banked
 20073  0069C2  B17D               	btfsc	Rtcc_SetRtcStatus@Status& (0+255),0,b
 20074  0069C4  D003               	bra	u14795
 20075  0069C6  010F               	movlb	15	; () banked
 20076  0069C8  9F3F               	bcf	63,7,b	;volatile
 20077  0069CA  D002               	bra	u14796
 20078  0069CC                     u14795:
 20079  0069CC  010F               	movlb	15	; () banked
 20080  0069CE  8F3F               	bsf	63,7,b	;volatile
 20081  0069D0                     u14796:
 20082                           
 20083                           ; BSR set to: 15
 20084  0069D0  0012               	return		;funcret
 20085  0069D2                     __end_of_Rtcc_SetRtcStatus:
 20086                           	opt stack 0
 20087                           tosu	equ	0xFFF
 20088                           tosh	equ	0xFFE
 20089                           tosl	equ	0xFFD
 20090                           pclath	equ	0xFFA
 20091                           tblptru	equ	0xFF8
 20092                           tblptrh	equ	0xFF7
 20093                           tblptrl	equ	0xFF6
 20094                           tablat	equ	0xFF5
 20095                           prodh	equ	0xFF4
 20096                           prodl	equ	0xFF3
 20097                           intcon	equ	0xFF2
 20098                           intcon2	equ	0xFF1
 20099                           intcon3	equ	0xFF0
 20100                           indf0	equ	0xFEF
 20101                           postinc0	equ	0xFEE
 20102                           plusw0	equ	0xFEB
 20103                           fsr0h	equ	0xFEA
 20104                           fsr0l	equ	0xFE9
 20105                           wreg	equ	0xFE8
 20106                           indf1	equ	0xFE7
 20107                           postinc1	equ	0xFE6
 20108                           postdec1	equ	0xFE5
 20109                           fsr1h	equ	0xFE2
 20110                           fsr1l	equ	0xFE1
 20111                           indf2	equ	0xFDF
 20112                           postinc2	equ	0xFDE
 20113                           postdec2	equ	0xFDD
 20114                           plusw2	equ	0xFDB
 20115                           fsr2h	equ	0xFDA
 20116                           fsr2l	equ	0xFD9
 20117                           status	equ	0xFD8
 20118                           
 20119 ;; *************** function _Rtcc_RtcConfig *****************
 20120 ;; Defined at:
 20121 ;;		line 106 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 20122 ;; Parameters:    Size  Location     Type
 20123 ;;  RtcConfig       2   30[BANK0 ] PTR struct _RtccConfigTy
 20124 ;;		 -> RtcConfig(4), 
 20125 ;; Auto vars:     Size  Location     Type
 20126 ;;		None
 20127 ;; Return value:  Size  Location     Type
 20128 ;;                  1    wreg      void 
 20129 ;; Registers used:
 20130 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 20131 ;; Tracked objects:
 20132 ;;		On entry : 0/0
 20133 ;;		On exit  : 0/0
 20134 ;;		Unchanged: 0/0
 20135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20136 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20137 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20138 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20139 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20140 ;;Total ram usage:        3 bytes
 20141 ;; Hardware stack levels used:    1
 20142 ;; Hardware stack levels required when called:   12
 20143 ;; This function calls:
 20144 ;;		_RtccIrqInit
 20145 ;; This function is called by:
 20146 ;;		_Rtcm_MainTask
 20147 ;; This function uses a non-reentrant model
 20148 ;;
 20149                           
 20150                           	psect	text87
 20151  0048C0                     __ptext87:
 20152                           	opt stack 0
 20153  0048C0                     _Rtcc_RtcConfig:
 20154                           	opt stack 15
 20155                           
 20156                           ;rtcc_drv.c: 109: RTCCFGbits.RTCOE = RtcConfig->RtcOutPinEnable;
 20157                           
 20158                           ; BSR set to: 15
 20159                           ;incstack = 0
 20160  0048C0  C07E  FFD9         	movff	Rtcc_RtcConfig@RtcConfig,fsr2l
 20161  0048C4  C07F  FFDA         	movff	Rtcc_RtcConfig@RtcConfig+1,fsr2h
 20162  0048C8  50DF               	movf	indf2,w,c
 20163  0048CA  0100               	movlb	0	; () banked
 20164  0048CC  6F80               	movwf	??_Rtcc_RtcConfig& (0+255),b
 20165  0048CE  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20166  0048D0  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20167  0048D2  010F               	movlb	15	; () banked
 20168  0048D4  513F               	movf	63,w,b	;volatile
 20169  0048D6  0100               	movlb	0	; () banked
 20170  0048D8  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20171  0048DA  0BFB               	andlw	-5
 20172  0048DC  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20173  0048DE  010F               	movlb	15	; () banked
 20174  0048E0  6F3F               	movwf	63,b	;volatile
 20175                           
 20176                           ;rtcc_drv.c: 111: PADCFG1bits.RTSECSEL0 = ((RtcConfig->RtcOutputSelectBit) & 0x01);
 20177  0048E2  0100               	movlb	0	; () banked
 20178  0048E4  EE20 F001          	lfsr	2,1
 20179  0048E8  517E               	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 20180  0048EA  26D9               	addwf	fsr2l,f,c
 20181  0048EC  517F               	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 20182  0048EE  22DA               	addwfc	fsr2h,f,c
 20183  0048F0  50DF               	movf	indf2,w,c
 20184  0048F2  6F80               	movwf	??_Rtcc_RtcConfig& (0+255),b
 20185  0048F4  0E01               	movlw	1
 20186  0048F6  1780               	andwf	??_Rtcc_RtcConfig& (0+255),f,b
 20187  0048F8  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20188  0048FA  010F               	movlb	15	; () banked
 20189  0048FC  513C               	movf	60,w,b	;volatile
 20190  0048FE  0100               	movlb	0	; () banked
 20191  004900  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20192  004902  0BFD               	andlw	-3
 20193  004904  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20194  004906  010F               	movlb	15	; () banked
 20195  004908  6F3C               	movwf	60,b	;volatile
 20196                           
 20197                           ;rtcc_drv.c: 112: PADCFG1bits.RTSECSEL1 = ((RtcConfig->RtcOutputSelectBit >> 1) & 0x01);
 20198  00490A  0100               	movlb	0	; () banked
 20199  00490C  EE20 F001          	lfsr	2,1
 20200  004910  517E               	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 20201  004912  26D9               	addwf	fsr2l,f,c
 20202  004914  517F               	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 20203  004916  22DA               	addwfc	fsr2h,f,c
 20204  004918  50DF               	movf	indf2,w,c
 20205  00491A  6F80               	movwf	??_Rtcc_RtcConfig& (0+255),b
 20206  00491C  90D8               	bcf	status,0,c
 20207  00491E  3380               	rrcf	??_Rtcc_RtcConfig& (0+255),f,b
 20208  004920  0E01               	movlw	1
 20209  004922  1780               	andwf	??_Rtcc_RtcConfig& (0+255),f,b
 20210  004924  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20211  004926  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20212  004928  010F               	movlb	15	; () banked
 20213  00492A  513C               	movf	60,w,b	;volatile
 20214  00492C  0100               	movlb	0	; () banked
 20215  00492E  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20216  004930  0BFB               	andlw	-5
 20217  004932  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20218  004934  010F               	movlb	15	; () banked
 20219  004936  6F3C               	movwf	60,b	;volatile
 20220                           
 20221                           ;rtcc_drv.c: 114: if (RtcConfig->IntEnable == EnableInt)
 20222  004938  0100               	movlb	0	; () banked
 20223  00493A  EE20 F002          	lfsr	2,2
 20224  00493E  517E               	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 20225  004940  26D9               	addwf	fsr2l,f,c
 20226  004942  517F               	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 20227  004944  22DA               	addwfc	fsr2h,f,c
 20228  004946  04DE               	decf	postinc2,w,c
 20229  004948  A4D8               	btfss	status,2,c
 20230  00494A  0012               	return	
 20231                           
 20232                           ; BSR set to: 0
 20233                           ;rtcc_drv.c: 115: {
 20234                           ;rtcc_drv.c: 117: RtccIrqInit(RtcConfig->IntPriority);
 20235  00494C  EE20 F003          	lfsr	2,3
 20236  004950  517E               	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 20237  004952  26D9               	addwf	fsr2l,f,c
 20238  004954  517F               	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 20239  004956  22DA               	addwfc	fsr2h,f,c
 20240  004958  50DF               	movf	indf2,w,c
 20241  00495A  ECE9  F034         	call	_RtccIrqInit
 20242  00495E  0012               	return	
 20243  004960                     __end_of_Rtcc_RtcConfig:
 20244                           	opt stack 0
 20245                           tosu	equ	0xFFF
 20246                           tosh	equ	0xFFE
 20247                           tosl	equ	0xFFD
 20248                           pclath	equ	0xFFA
 20249                           tblptru	equ	0xFF8
 20250                           tblptrh	equ	0xFF7
 20251                           tblptrl	equ	0xFF6
 20252                           tablat	equ	0xFF5
 20253                           prodh	equ	0xFF4
 20254                           prodl	equ	0xFF3
 20255                           intcon	equ	0xFF2
 20256                           intcon2	equ	0xFF1
 20257                           intcon3	equ	0xFF0
 20258                           indf0	equ	0xFEF
 20259                           postinc0	equ	0xFEE
 20260                           plusw0	equ	0xFEB
 20261                           fsr0h	equ	0xFEA
 20262                           fsr0l	equ	0xFE9
 20263                           wreg	equ	0xFE8
 20264                           indf1	equ	0xFE7
 20265                           postinc1	equ	0xFE6
 20266                           postdec1	equ	0xFE5
 20267                           fsr1h	equ	0xFE2
 20268                           fsr1l	equ	0xFE1
 20269                           indf2	equ	0xFDF
 20270                           postinc2	equ	0xFDE
 20271                           postdec2	equ	0xFDD
 20272                           plusw2	equ	0xFDB
 20273                           fsr2h	equ	0xFDA
 20274                           fsr2l	equ	0xFD9
 20275                           status	equ	0xFD8
 20276                           
 20277 ;; *************** function _RtccIrqInit *****************
 20278 ;; Defined at:
 20279 ;;		line 84 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 20280 ;; Parameters:    Size  Location     Type
 20281 ;;  Priority        1    wreg     enum E7716
 20282 ;; Auto vars:     Size  Location     Type
 20283 ;;  Priority        1   29[BANK0 ] enum E7716
 20284 ;; Return value:  Size  Location     Type
 20285 ;;                  1    wreg      void 
 20286 ;; Registers used:
 20287 ;;		wreg
 20288 ;; Tracked objects:
 20289 ;;		On entry : 0/0
 20290 ;;		On exit  : 0/0
 20291 ;;		Unchanged: 0/0
 20292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20293 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20294 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20296 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20297 ;;Total ram usage:        1 bytes
 20298 ;; Hardware stack levels used:    1
 20299 ;; Hardware stack levels required when called:   11
 20300 ;; This function calls:
 20301 ;;		Nothing
 20302 ;; This function is called by:
 20303 ;;		_Rtcc_RtcConfig
 20304 ;; This function uses a non-reentrant model
 20305 ;;
 20306                           
 20307                           	psect	text88
 20308  0069D2                     __ptext88:
 20309                           	opt stack 0
 20310  0069D2                     _RtccIrqInit:
 20311                           	opt stack 15
 20312                           
 20313                           ;incstack = 0
 20314                           ;RtccIrqInit@Priority stored from wreg
 20315  0069D2  0100               	movlb	0	; () banked
 20316  0069D4  6F7D               	movwf	RtccIrqInit@Priority& (0+255),b
 20317                           
 20318                           ;rtcc_drv.c: 87: PIR3bits.RTCCIF = 0u;
 20319  0069D6  90A4               	bcf	4004,0,c	;volatile
 20320                           
 20321                           ;rtcc_drv.c: 89: IPR3bits.RTCCIP = Priority;
 20322  0069D8  0100               	movlb	0	; () banked
 20323  0069DA  B17D               	btfsc	RtccIrqInit@Priority& (0+255),0,b
 20324  0069DC  D002               	bra	u13605
 20325  0069DE  90A5               	bcf	4005,0,c	;volatile
 20326  0069E0  D001               	bra	u13606
 20327  0069E2                     u13605:
 20328  0069E2  80A5               	bsf	4005,0,c	;volatile
 20329  0069E4                     u13606:
 20330                           
 20331                           ;rtcc_drv.c: 91: PIE3bits.RTCCIE = 1u;
 20332  0069E4  80A3               	bsf	4003,0,c	;volatile
 20333  0069E6  0012               	return		;funcret
 20334  0069E8                     __end_of_RtccIrqInit:
 20335                           	opt stack 0
 20336                           tosu	equ	0xFFF
 20337                           tosh	equ	0xFFE
 20338                           tosl	equ	0xFFD
 20339                           pclath	equ	0xFFA
 20340                           tblptru	equ	0xFF8
 20341                           tblptrh	equ	0xFF7
 20342                           tblptrl	equ	0xFF6
 20343                           tablat	equ	0xFF5
 20344                           prodh	equ	0xFF4
 20345                           prodl	equ	0xFF3
 20346                           intcon	equ	0xFF2
 20347                           intcon2	equ	0xFF1
 20348                           intcon3	equ	0xFF0
 20349                           indf0	equ	0xFEF
 20350                           postinc0	equ	0xFEE
 20351                           plusw0	equ	0xFEB
 20352                           fsr0h	equ	0xFEA
 20353                           fsr0l	equ	0xFE9
 20354                           wreg	equ	0xFE8
 20355                           indf1	equ	0xFE7
 20356                           postinc1	equ	0xFE6
 20357                           postdec1	equ	0xFE5
 20358                           fsr1h	equ	0xFE2
 20359                           fsr1l	equ	0xFE1
 20360                           indf2	equ	0xFDF
 20361                           postinc2	equ	0xFDE
 20362                           postdec2	equ	0xFDD
 20363                           plusw2	equ	0xFDB
 20364                           fsr2h	equ	0xFDA
 20365                           fsr2l	equ	0xFD9
 20366                           status	equ	0xFD8
 20367                           
 20368 ;; *************** function _Rtcc_AlarmConfig *****************
 20369 ;; Defined at:
 20370 ;;		line 129 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 20371 ;; Parameters:    Size  Location     Type
 20372 ;;  AlarmConfig     2   29[BANK0 ] PTR struct _RtccAlarmCon
 20373 ;;		 -> AlCfg(4), 
 20374 ;; Auto vars:     Size  Location     Type
 20375 ;;		None
 20376 ;; Return value:  Size  Location     Type
 20377 ;;                  1    wreg      void 
 20378 ;; Registers used:
 20379 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 20380 ;; Tracked objects:
 20381 ;;		On entry : 0/0
 20382 ;;		On exit  : 0/0
 20383 ;;		Unchanged: 0/0
 20384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20385 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20386 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20387 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20388 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20389 ;;Total ram usage:        3 bytes
 20390 ;; Hardware stack levels used:    1
 20391 ;; Hardware stack levels required when called:   11
 20392 ;; This function calls:
 20393 ;;		Nothing
 20394 ;; This function is called by:
 20395 ;;		_Rtcm_MainTask
 20396 ;; This function uses a non-reentrant model
 20397 ;;
 20398                           
 20399                           	psect	text89
 20400  005536                     __ptext89:
 20401                           	opt stack 0
 20402  005536                     _Rtcc_AlarmConfig:
 20403                           	opt stack 16
 20404                           
 20405                           ;rtcc_drv.c: 132: ALRMCFGbits.ALRMEN = AlarmConfig->RtcAlarmEnable;
 20406                           
 20407                           ;incstack = 0
 20408  005536  C07D  FFD9         	movff	Rtcc_AlarmConfig@AlarmConfig,fsr2l
 20409  00553A  C07E  FFDA         	movff	Rtcc_AlarmConfig@AlarmConfig+1,fsr2h
 20410  00553E  50DF               	movf	indf2,w,c
 20411  005540  0100               	movlb	0	; () banked
 20412  005542  6F7F               	movwf	??_Rtcc_AlarmConfig& (0+255),b
 20413  005544  337F               	rrcf	??_Rtcc_AlarmConfig& (0+255),f,b
 20414  005546  337F               	rrcf	??_Rtcc_AlarmConfig& (0+255),f,b
 20415  005548  5091               	movf	3985,w,c	;volatile
 20416  00554A  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20417  00554C  0B7F               	andlw	-129
 20418  00554E  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20419  005550  6E91               	movwf	3985,c	;volatile
 20420                           
 20421                           ;rtcc_drv.c: 134: ALRMCFGbits.CHIME = AlarmConfig->RtcChimeEnable;
 20422  005552  EE20 F001          	lfsr	2,1
 20423  005556  517D               	movf	Rtcc_AlarmConfig@AlarmConfig& (0+255),w,b
 20424  005558  26D9               	addwf	fsr2l,f,c
 20425  00555A  517E               	movf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),w,b
 20426  00555C  22DA               	addwfc	fsr2h,f,c
 20427  00555E  50DF               	movf	indf2,w,c
 20428  005560  6F7F               	movwf	??_Rtcc_AlarmConfig& (0+255),b
 20429  005562  3B7F               	swapf	??_Rtcc_AlarmConfig& (0+255),f,b
 20430  005564  477F               	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 20431  005566  477F               	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 20432  005568  5091               	movf	3985,w,c	;volatile
 20433  00556A  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20434  00556C  0BBF               	andlw	-65
 20435  00556E  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20436  005570  6E91               	movwf	3985,c	;volatile
 20437                           
 20438                           ;rtcc_drv.c: 136: ALRMCFGbits.AMASK = AlarmConfig->AlarmMask;
 20439  005572  EE20 F002          	lfsr	2,2
 20440  005576  517D               	movf	Rtcc_AlarmConfig@AlarmConfig& (0+255),w,b
 20441  005578  26D9               	addwf	fsr2l,f,c
 20442  00557A  517E               	movf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),w,b
 20443  00557C  22DA               	addwfc	fsr2h,f,c
 20444  00557E  50DF               	movf	indf2,w,c
 20445  005580  6F7F               	movwf	??_Rtcc_AlarmConfig& (0+255),b
 20446  005582  477F               	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 20447  005584  477F               	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 20448  005586  5091               	movf	3985,w,c	;volatile
 20449  005588  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20450  00558A  0BC3               	andlw	-61
 20451  00558C  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20452  00558E  6E91               	movwf	3985,c	;volatile
 20453                           
 20454                           ;rtcc_drv.c: 138: ALRMRPTbits.ARPT = AlarmConfig->AlarmRepeat;
 20455  005590  EE20 F003          	lfsr	2,3
 20456  005594  517D               	movf	Rtcc_AlarmConfig@AlarmConfig& (0+255),w,b
 20457  005596  26D9               	addwf	fsr2l,f,c
 20458  005598  517E               	movf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),w,b
 20459  00559A  22DA               	addwfc	fsr2h,f,c
 20460  00559C  50DF               	movf	indf2,w,c
 20461  00559E  6E90               	movwf	3984,c	;volatile
 20462                           
 20463                           ; BSR set to: 0
 20464  0055A0  0012               	return		;funcret
 20465  0055A2                     __end_of_Rtcc_AlarmConfig:
 20466                           	opt stack 0
 20467                           tosu	equ	0xFFF
 20468                           tosh	equ	0xFFE
 20469                           tosl	equ	0xFFD
 20470                           pclath	equ	0xFFA
 20471                           tblptru	equ	0xFF8
 20472                           tblptrh	equ	0xFF7
 20473                           tblptrl	equ	0xFF6
 20474                           tablat	equ	0xFF5
 20475                           prodh	equ	0xFF4
 20476                           prodl	equ	0xFF3
 20477                           intcon	equ	0xFF2
 20478                           intcon2	equ	0xFF1
 20479                           intcon3	equ	0xFF0
 20480                           indf0	equ	0xFEF
 20481                           postinc0	equ	0xFEE
 20482                           plusw0	equ	0xFEB
 20483                           fsr0h	equ	0xFEA
 20484                           fsr0l	equ	0xFE9
 20485                           wreg	equ	0xFE8
 20486                           indf1	equ	0xFE7
 20487                           postinc1	equ	0xFE6
 20488                           postdec1	equ	0xFE5
 20489                           fsr1h	equ	0xFE2
 20490                           fsr1l	equ	0xFE1
 20491                           indf2	equ	0xFDF
 20492                           postinc2	equ	0xFDE
 20493                           postdec2	equ	0xFDD
 20494                           plusw2	equ	0xFDB
 20495                           fsr2h	equ	0xFDA
 20496                           fsr2l	equ	0xFD9
 20497                           status	equ	0xFD8
 20498                           
 20499 ;; *************** function _triggerCmdFsm *****************
 20500 ;; Defined at:
 20501 ;;		line 83 in file "../Source/c/04_App/app_triggerCmd.c"
 20502 ;; Parameters:    Size  Location     Type
 20503 ;;  receivedNumb    2   41[BANK0 ] PTR unsigned char 
 20504 ;;		 -> receivedNumber(13), 
 20505 ;; Auto vars:     Size  Location     Type
 20506 ;;  numberInMemo    1   44[BANK0 ] unsigned char 
 20507 ;;  isComplete      1   43[BANK0 ] unsigned char 
 20508 ;; Return value:  Size  Location     Type
 20509 ;;                  1    wreg      unsigned char 
 20510 ;; Registers used:
 20511 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 20512 ;; Tracked objects:
 20513 ;;		On entry : 0/0
 20514 ;;		On exit  : 0/0
 20515 ;;		Unchanged: 0/0
 20516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20517 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20518 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20520 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20521 ;;Total ram usage:        4 bytes
 20522 ;; Hardware stack levels used:    1
 20523 ;; Hardware stack levels required when called:   14
 20524 ;; This function calls:
 20525 ;;		_triggerRelay
 20526 ;; This function is called by:
 20527 ;;		_MyApp_Task
 20528 ;; This function uses a non-reentrant model
 20529 ;;
 20530                           
 20531                           	psect	text90
 20532  0055A2                     __ptext90:
 20533                           	opt stack 0
 20534  0055A2                     _triggerCmdFsm:
 20535                           	opt stack 13
 20536                           
 20537                           ;app_triggerCmd.c: 85: static triggerFsmStates currentState = TRIGGER_FSM_CHECK_NUMBER;
 20538                           ;app_triggerCmd.c: 86: bool isComplete = 0;
 20539                           
 20540                           ; BSR set to: 0
 20541                           ;incstack = 0
 20542  0055A2  0E00               	movlw	0
 20543  0055A4  0100               	movlb	0	; () banked
 20544  0055A6  6F8B               	movwf	triggerCmdFsm@isComplete& (0+255),b
 20545                           
 20546                           ;app_triggerCmd.c: 87: uint8_t numberInMemory = 1;
 20547  0055A8  0E01               	movlw	1
 20548  0055AA  6F8C               	movwf	triggerCmdFsm@numberInMemory& (0+255),b
 20549                           
 20550                           ;app_triggerCmd.c: 89: switch (currentState)
 20551  0055AC  D01F               	goto	l2882
 20552  0055AE                     
 20553                           ;app_triggerCmd.c: 94: if (numberInMemory == 1)
 20554                           
 20555                           ; BSR set to: 0
 20556  0055AE  0100               	movlb	0	; () banked
 20557  0055B0  058C               	decf	triggerCmdFsm@numberInMemory& (0+255),w,b
 20558  0055B2  A4D8               	btfss	status,2,c
 20559  0055B4  D002               	goto	l2884
 20560  0055B6                     u16170:
 20561                           
 20562                           ; BSR set to: 0
 20563                           ;app_triggerCmd.c: 95: {
 20564                           ;app_triggerCmd.c: 96: currentState = TRIGGER_FSM_COMPLETE;
 20565  0055B6  0E03               	movlw	3
 20566  0055B8  D016               	goto	L26
 20567  0055BA                     l2884:
 20568                           
 20569                           ;app_triggerCmd.c: 98: else if (numberInMemory != 0 && numberInMemory != 1)
 20570                           
 20571                           ; BSR set to: 1
 20572  0055BA  0100               	movlb	0	; () banked
 20573  0055BC  518C               	movf	triggerCmdFsm@numberInMemory& (0+255),w,b
 20574  0055BE  B4D8               	btfsc	status,2,c
 20575  0055C0  D023               	goto	l2887
 20576                           
 20577                           ; BSR set to: 0
 20578  0055C2  058C               	decf	triggerCmdFsm@numberInMemory& (0+255),w,b
 20579  0055C4  B4D8               	btfsc	status,2,c
 20580  0055C6  D020               	goto	l2887
 20581                           
 20582                           ; BSR set to: 0
 20583                           ;app_triggerCmd.c: 99: {
 20584                           ;app_triggerCmd.c: 100: currentState = TRIGGER_FSM_ACTIVATE_RELAY;
 20585  0055C8  0E01               	movlw	1
 20586  0055CA  D00D               	goto	L26
 20587  0055CC                     
 20588                           ; BSR set to: 1
 20589                           ;app_triggerCmd.c: 105: triggerRelay(1);
 20590                           
 20591                           ; BSR set to: 1
 20592  0055CC  0E01               	movlw	1
 20593  0055CE  ECCD  F031         	call	_triggerRelay
 20594                           
 20595                           ;app_triggerCmd.c: 106: currentState = TRIGGER_FSM_DEACTIVATE_RELAY;
 20596  0055D2  0E02               	movlw	2
 20597  0055D4  D008               	goto	L26
 20598  0055D6                     
 20599                           ; BSR set to: 1
 20600                           ;app_triggerCmd.c: 111: triggerRelay(0);
 20601                           
 20602                           ; BSR set to: 1
 20603  0055D6  0E00               	movlw	0
 20604  0055D8  ECCD  F031         	call	_triggerRelay
 20605  0055DC  D7EC               	goto	u16170
 20606  0055DE                     
 20607                           ; BSR set to: 1
 20608                           ;app_triggerCmd.c: 116: isComplete = 1;
 20609                           
 20610                           ; BSR set to: 1
 20611  0055DE  0E01               	movlw	1
 20612  0055E0  0100               	movlb	0	; () banked
 20613  0055E2  6F8B               	movwf	triggerCmdFsm@isComplete& (0+255),b
 20614                           
 20615                           ;app_triggerCmd.c: 117: currentState = TRIGGER_FSM_CHECK_NUMBER;
 20616  0055E4  0E00               	movlw	0
 20617  0055E6                     L26:
 20618  0055E6  0101               	movlb	1	; () banked
 20619  0055E8  6FD3               	movwf	triggerCmdFsm@currentState& (0+255),b
 20620                           
 20621                           ; BSR set to: 1
 20622                           ;app_triggerCmd.c: 122: }
 20623                           
 20624                           ; BSR set to: 1
 20625                           ;app_triggerCmd.c: 121: break;
 20626                           
 20627                           ;app_triggerCmd.c: 120: default:
 20628                           
 20629                           ;app_triggerCmd.c: 118: break;
 20630  0055EA  D00E               	goto	l2887
 20631  0055EC                     l2882:
 20632                           
 20633                           ; BSR set to: 1
 20634  0055EC  0101               	movlb	1	; () banked
 20635  0055EE  51D3               	movf	triggerCmdFsm@currentState& (0+255),w,b
 20636                           
 20637                           ; Switch size 1, requested type "space"
 20638                           ; Number of cases is 4, Range of values is 0 to 3
 20639                           ; switch strategies available:
 20640                           ; Name         Instructions Cycles
 20641                           ; simple_byte           13     7 (average)
 20642                           ;	Chosen strategy is simple_byte
 20643  0055F0  0A00               	xorlw	0	; case 0
 20644  0055F2  B4D8               	btfsc	status,2,c
 20645  0055F4  D7DC               	goto	l2883
 20646  0055F6  0A01               	xorlw	1	; case 1
 20647  0055F8  B4D8               	btfsc	status,2,c
 20648  0055FA  D7E8               	goto	l2888
 20649  0055FC  0A03               	xorlw	3	; case 2
 20650  0055FE  B4D8               	btfsc	status,2,c
 20651  005600  D7EA               	goto	l2889
 20652  005602  0A01               	xorlw	1	; case 3
 20653  005604  B4D8               	btfsc	status,2,c
 20654  005606  D7EB               	goto	l2890
 20655  005608                     l2887:
 20656                           
 20657                           ;app_triggerCmd.c: 123: return isComplete;
 20658                           
 20659                           ; BSR set to: 1
 20660  005608  0100               	movlb	0	; () banked
 20661  00560A  518B               	movf	triggerCmdFsm@isComplete& (0+255),w,b
 20662  00560C  0012               	return	
 20663  00560E                     __end_of_triggerCmdFsm:
 20664                           	opt stack 0
 20665                           tosu	equ	0xFFF
 20666                           tosh	equ	0xFFE
 20667                           tosl	equ	0xFFD
 20668                           pclath	equ	0xFFA
 20669                           tblptru	equ	0xFF8
 20670                           tblptrh	equ	0xFF7
 20671                           tblptrl	equ	0xFF6
 20672                           tablat	equ	0xFF5
 20673                           prodh	equ	0xFF4
 20674                           prodl	equ	0xFF3
 20675                           intcon	equ	0xFF2
 20676                           intcon2	equ	0xFF1
 20677                           intcon3	equ	0xFF0
 20678                           indf0	equ	0xFEF
 20679                           postinc0	equ	0xFEE
 20680                           plusw0	equ	0xFEB
 20681                           fsr0h	equ	0xFEA
 20682                           fsr0l	equ	0xFE9
 20683                           wreg	equ	0xFE8
 20684                           indf1	equ	0xFE7
 20685                           postinc1	equ	0xFE6
 20686                           postdec1	equ	0xFE5
 20687                           fsr1h	equ	0xFE2
 20688                           fsr1l	equ	0xFE1
 20689                           indf2	equ	0xFDF
 20690                           postinc2	equ	0xFDE
 20691                           postdec2	equ	0xFDD
 20692                           plusw2	equ	0xFDB
 20693                           fsr2h	equ	0xFDA
 20694                           fsr2l	equ	0xFD9
 20695                           status	equ	0xFD8
 20696                           
 20697 ;; *************** function _triggerRelay *****************
 20698 ;; Defined at:
 20699 ;;		line 64 in file "../Source/c/04_App/app_triggerCmd.c"
 20700 ;; Parameters:    Size  Location     Type
 20701 ;;  isRelayOn       1    wreg     unsigned char 
 20702 ;; Auto vars:     Size  Location     Type
 20703 ;;  isRelayOn       1   38[BANK0 ] unsigned char 
 20704 ;;  txBuffer        2   39[BANK0 ] unsigned char [2]
 20705 ;;  res             1   37[BANK0 ] unsigned char 
 20706 ;; Return value:  Size  Location     Type
 20707 ;;                  1    wreg      unsigned char 
 20708 ;; Registers used:
 20709 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 20710 ;; Tracked objects:
 20711 ;;		On entry : 0/0
 20712 ;;		On exit  : 0/0
 20713 ;;		Unchanged: 0/0
 20714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20716 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20718 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20719 ;;Total ram usage:        4 bytes
 20720 ;; Hardware stack levels used:    1
 20721 ;; Hardware stack levels required when called:   13
 20722 ;; This function calls:
 20723 ;;		_I2cSlv_SendI2cMsg
 20724 ;; This function is called by:
 20725 ;;		_triggerCmdFsm
 20726 ;; This function uses a non-reentrant model
 20727 ;;
 20728                           
 20729                           	psect	text91
 20730  00639A                     __ptext91:
 20731                           	opt stack 0
 20732  00639A                     _triggerRelay:
 20733                           	opt stack 13
 20734                           
 20735                           ; BSR set to: 0
 20736                           ;incstack = 0
 20737                           ;triggerRelay@isRelayOn stored from wreg
 20738  00639A  0100               	movlb	0	; () banked
 20739  00639C  6F86               	movwf	triggerRelay@isRelayOn& (0+255),b
 20740                           
 20741                           ;app_triggerCmd.c: 66: uint8_t txBuffer[2] = {0x50, 0x00};
 20742  00639E  C3D2  F087         	movff	triggerRelay@F9012,triggerRelay@txBuffer
 20743  0063A2  C3D3  F088         	movff	triggerRelay@F9012+1,triggerRelay@txBuffer+1
 20744                           
 20745                           ;app_triggerCmd.c: 67: uint8_t res = 0u;
 20746  0063A6  0E00               	movlw	0
 20747  0063A8  0100               	movlb	0	; () banked
 20748  0063AA  6F85               	movwf	triggerRelay@res& (0+255),b
 20749                           
 20750                           ; BSR set to: 0
 20751                           ;app_triggerCmd.c: 68: if (isRelayOn)
 20752  0063AC  5186               	movf	triggerRelay@isRelayOn& (0+255),w,b
 20753  0063AE  B4D8               	btfsc	status,2,c
 20754  0063B0  D002               	goto	l2876
 20755                           
 20756                           ; BSR set to: 0
 20757                           ;app_triggerCmd.c: 69: {
 20758                           ;app_triggerCmd.c: 70: txBuffer[1] = 0x01;
 20759  0063B2  0E01               	movlw	1
 20760  0063B4  6F88               	movwf	(triggerRelay@txBuffer+1)& (0+255),b
 20761  0063B6                     l2876:
 20762                           
 20763                           ; BSR set to: 0
 20764                           ;app_triggerCmd.c: 71: }
 20765                           ;app_triggerCmd.c: 72: res = I2cSlv_SendI2cMsg(txBuffer, 1, 2);
 20766                           
 20767                           ; BSR set to: 0
 20768  0063B6  0E87               	movlw	low triggerRelay@txBuffer
 20769  0063B8  6F80               	movwf	I2cSlv_SendI2cMsg@TxBuffer& (0+255),b
 20770  0063BA  0E00               	movlw	high triggerRelay@txBuffer
 20771  0063BC  6F81               	movwf	(I2cSlv_SendI2cMsg@TxBuffer+1)& (0+255),b
 20772  0063BE  0E01               	movlw	1
 20773  0063C0  6F82               	movwf	I2cSlv_SendI2cMsg@SlaveAddr& (0+255),b
 20774  0063C2  0E02               	movlw	2
 20775  0063C4  6F83               	movwf	I2cSlv_SendI2cMsg@DataLenght& (0+255),b
 20776  0063C6  EC19  F031         	call	_I2cSlv_SendI2cMsg	;wreg free
 20777  0063CA  0100               	movlb	0	; () banked
 20778  0063CC  6F85               	movwf	triggerRelay@res& (0+255),b
 20779  0063CE  0012               	return	
 20780  0063D0                     __end_of_triggerRelay:
 20781                           	opt stack 0
 20782                           tosu	equ	0xFFF
 20783                           tosh	equ	0xFFE
 20784                           tosl	equ	0xFFD
 20785                           pclath	equ	0xFFA
 20786                           tblptru	equ	0xFF8
 20787                           tblptrh	equ	0xFF7
 20788                           tblptrl	equ	0xFF6
 20789                           tablat	equ	0xFF5
 20790                           prodh	equ	0xFF4
 20791                           prodl	equ	0xFF3
 20792                           intcon	equ	0xFF2
 20793                           intcon2	equ	0xFF1
 20794                           intcon3	equ	0xFF0
 20795                           indf0	equ	0xFEF
 20796                           postinc0	equ	0xFEE
 20797                           plusw0	equ	0xFEB
 20798                           fsr0h	equ	0xFEA
 20799                           fsr0l	equ	0xFE9
 20800                           wreg	equ	0xFE8
 20801                           indf1	equ	0xFE7
 20802                           postinc1	equ	0xFE6
 20803                           postdec1	equ	0xFE5
 20804                           fsr1h	equ	0xFE2
 20805                           fsr1l	equ	0xFE1
 20806                           indf2	equ	0xFDF
 20807                           postinc2	equ	0xFDE
 20808                           postdec2	equ	0xFDD
 20809                           plusw2	equ	0xFDB
 20810                           fsr2h	equ	0xFDA
 20811                           fsr2l	equ	0xFD9
 20812                           status	equ	0xFD8
 20813                           
 20814 ;; *************** function _initFsm *****************
 20815 ;; Defined at:
 20816 ;;		line 225 in file "../Source/c/04_App/app_init.c"
 20817 ;; Parameters:    Size  Location     Type
 20818 ;;		None
 20819 ;; Auto vars:     Size  Location     Type
 20820 ;;  isInitialize    1    3[BANK1 ] unsigned char 
 20821 ;; Return value:  Size  Location     Type
 20822 ;;                  1    wreg      unsigned char 
 20823 ;; Registers used:
 20824 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20825 ;; Tracked objects:
 20826 ;;		On entry : 0/0
 20827 ;;		On exit  : 0/0
 20828 ;;		Unchanged: 0/0
 20829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20830 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20831 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20832 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20833 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20834 ;;Total ram usage:        1 bytes
 20835 ;; Hardware stack levels used:    1
 20836 ;; Hardware stack levels required when called:   18
 20837 ;; This function calls:
 20838 ;;		_GetCallerNumber
 20839 ;;		_Led_SetLedStatus
 20840 ;;		_initEeprom
 20841 ;;		_initGprsModem
 20842 ;;		_saveNumberInMemory
 20843 ;;		_savePreamble
 20844 ;;		_waitSetupCall
 20845 ;; This function is called by:
 20846 ;;		_MyApp_Task
 20847 ;; This function uses a non-reentrant model
 20848 ;;
 20849                           
 20850                           	psect	text92
 20851  004626                     __ptext92:
 20852                           	opt stack 0
 20853  004626                     _initFsm:
 20854                           	opt stack 9
 20855                           
 20856                           ;app_init.c: 227: static initFsmStates currentState = INIT_FSM_MODEM;
 20857                           ;app_init.c: 228: bool isInitialized = 0;
 20858                           
 20859                           ; BSR set to: 0
 20860                           ;incstack = 0
 20861  004626  0E00               	movlw	0
 20862  004628  0101               	movlb	1	; () banked
 20863  00462A  6F03               	movwf	initFsm@isInitialized& (0+255),b
 20864                           
 20865                           ;app_init.c: 230: switch (currentState)
 20866  00462C  D03D               	goto	l2696
 20867  00462E                     
 20868                           ; BSR set to: 1
 20869                           ;app_init.c: 233: if (initGprsModem())
 20870                           
 20871                           ; BSR set to: 1
 20872  00462E  EC0E  F027         	call	_initGprsModem	;wreg free
 20873  004632  0900               	iorlw	0
 20874  004634  B4D8               	btfsc	status,2,c
 20875  004636  D048               	goto	l2699
 20876                           
 20877                           ;app_init.c: 234: {
 20878                           ;app_init.c: 235: currentState = INIT_FSM_EEPROM;
 20879  004638  0E01               	movlw	1
 20880  00463A  D027               	goto	L30
 20881  00463C                     
 20882                           ; BSR set to: 1
 20883                           ;app_init.c: 240: if (initEeprom())
 20884                           
 20885                           ; BSR set to: 1
 20886  00463C  ECA1  F027         	call	_initEeprom	;wreg free
 20887  004640  0900               	iorlw	0
 20888  004642  B4D8               	btfsc	status,2,c
 20889  004644  D041               	goto	l2699
 20890                           
 20891                           ;app_init.c: 241: {
 20892                           ;app_init.c: 242: currentState = INIT_FSM_WAIT_CMD;
 20893  004646  0E02               	movlw	2
 20894  004648  0101               	movlb	1	; () banked
 20895  00464A  6FD6               	movwf	initFsm@currentState& (0+255),b
 20896                           
 20897                           ;app_init.c: 243: setupCallTicks = 0;
 20898  00464C  0E00               	movlw	0
 20899  00464E  0103               	movlb	3	; () banked
 20900  004650  6FC3               	movwf	(_setupCallTicks+1)& (0+255),b
 20901  004652  0E00               	movlw	0
 20902  004654  6FC2               	movwf	_setupCallTicks& (0+255),b
 20903                           
 20904                           ; BSR set to: 3
 20905                           ;app_init.c: 244: }
 20906                           ;app_init.c: 245: break;
 20907  004656  D038               	goto	l2699
 20908  004658                     
 20909                           ;app_init.c: 248: if (isMemoryEmpty)
 20910                           
 20911                           ; BSR set to: 3
 20912  004658  0101               	movlb	1	; () banked
 20913  00465A  51FE               	movf	_isMemoryEmpty& (0+255),w,b
 20914  00465C  B4D8               	btfsc	status,2,c
 20915  00465E  D010               	goto	l2703
 20916                           
 20917                           ; BSR set to: 1
 20918                           ;app_init.c: 249: {
 20919                           ;app_init.c: 250: if (waitSetupCall())
 20920  004660  EC08  F02F         	call	_waitSetupCall	;wreg free
 20921  004664  0900               	iorlw	0
 20922  004666  B4D8               	btfsc	status,2,c
 20923  004668  D02F               	goto	l2699
 20924                           
 20925                           ;app_init.c: 251: {
 20926                           ;app_init.c: 252: saveNumberInMemory(16, GetCallerNumber());
 20927  00466A  ECE8  F031         	call	_GetCallerNumber	;wreg free
 20928  00466E  C083  F096         	movff	?_GetCallerNumber,saveNumberInMemory@phoneNumber
 20929  004672  C084  F097         	movff	?_GetCallerNumber+1,saveNumberInMemory@phoneNumber+1
 20930  004676  0E10               	movlw	16
 20931  004678  ECAD  F034         	call	_saveNumberInMemory
 20932                           
 20933                           ;app_init.c: 253: currentState = INIT_FSM_PREAMBLE;
 20934  00467C  0E03               	movlw	3
 20935  00467E  D005               	goto	L30
 20936  004680                     l2703:
 20937                           
 20938                           ; BSR set to: 1
 20939                           ;app_init.c: 257: else
 20940                           ;app_init.c: 258: {
 20941                           ;app_init.c: 259: currentState = INIT_FSM_COMPLETE;
 20942                           
 20943                           ; BSR set to: 1
 20944  004680  0E04               	movlw	4
 20945  004682  D004               	goto	L29
 20946  004684                     
 20947                           ; BSR set to: 1
 20948                           ;app_init.c: 264: savePreamble();
 20949                           
 20950                           ; BSR set to: 1
 20951  004684  ECA0  F034         	call	_savePreamble	;wreg free
 20952                           
 20953                           ;app_init.c: 265: currentState = INIT_FSM_COMPLETE;
 20954  004688  0E04               	movlw	4
 20955  00468A                     L30:
 20956  00468A  0101               	movlb	1	; () banked
 20957  00468C                     L29:
 20958  00468C  6FD6               	movwf	initFsm@currentState& (0+255),b
 20959                           
 20960                           ;app_init.c: 266: break;
 20961  00468E  D01C               	goto	l2699
 20962  004690                     
 20963                           ; BSR set to: 1
 20964                           ;app_init.c: 269: Led_SetLedStatus(1u, LED_STS_ON);
 20965                           
 20966                           ; BSR set to: 1
 20967  004690  0E01               	movlw	1
 20968  004692  0100               	movlb	0	; () banked
 20969  004694  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 20970  004696  0E01               	movlw	1
 20971  004698  ECB2  F032         	call	_Led_SetLedStatus
 20972                           
 20973                           ;app_init.c: 270: currentState = INIT_FSM_MODEM;
 20974  00469C  0E00               	movlw	0
 20975  00469E  0101               	movlb	1	; () banked
 20976  0046A0  6FD6               	movwf	initFsm@currentState& (0+255),b
 20977                           
 20978                           ; BSR set to: 1
 20979                           ;app_init.c: 271: isInitialized = 1;
 20980  0046A2  0E01               	movlw	1
 20981  0046A4  6F03               	movwf	initFsm@isInitialized& (0+255),b
 20982                           
 20983                           ; BSR set to: 1
 20984                           ;app_init.c: 276: }
 20985                           
 20986                           ; BSR set to: 1
 20987                           ;app_init.c: 275: break;
 20988                           
 20989                           ;app_init.c: 274: default:
 20990                           
 20991                           ;app_init.c: 272: break;
 20992  0046A6  D010               	goto	l2699
 20993  0046A8                     l2696:
 20994                           
 20995                           ; BSR set to: 1
 20996                           
 20997                           ; BSR set to: 1
 20998  0046A8  51D6               	movf	initFsm@currentState& (0+255),w,b
 20999                           
 21000                           ; Switch size 1, requested type "space"
 21001                           ; Number of cases is 5, Range of values is 0 to 4
 21002                           ; switch strategies available:
 21003                           ; Name         Instructions Cycles
 21004                           ; simple_byte           16     9 (average)
 21005                           ;	Chosen strategy is simple_byte
 21006  0046AA  0A00               	xorlw	0	; case 0
 21007  0046AC  B4D8               	btfsc	status,2,c
 21008  0046AE  D7BF               	goto	l2697
 21009  0046B0  0A01               	xorlw	1	; case 1
 21010  0046B2  B4D8               	btfsc	status,2,c
 21011  0046B4  D7C3               	goto	l2700
 21012  0046B6  0A03               	xorlw	3	; case 2
 21013  0046B8  B4D8               	btfsc	status,2,c
 21014  0046BA  D7CE               	goto	l2702
 21015  0046BC  0A01               	xorlw	1	; case 3
 21016  0046BE  B4D8               	btfsc	status,2,c
 21017  0046C0  D7E1               	goto	l2706
 21018  0046C2  0A07               	xorlw	7	; case 4
 21019  0046C4  B4D8               	btfsc	status,2,c
 21020  0046C6  D7E4               	goto	l2707
 21021  0046C8                     l2699:
 21022                           
 21023                           ;app_init.c: 277: return isInitialized;
 21024                           
 21025                           ; BSR set to: 1
 21026  0046C8  0101               	movlb	1	; () banked
 21027  0046CA  5103               	movf	initFsm@isInitialized& (0+255),w,b
 21028  0046CC  0012               	return	
 21029  0046CE                     __end_of_initFsm:
 21030                           	opt stack 0
 21031                           tosu	equ	0xFFF
 21032                           tosh	equ	0xFFE
 21033                           tosl	equ	0xFFD
 21034                           pclath	equ	0xFFA
 21035                           tblptru	equ	0xFF8
 21036                           tblptrh	equ	0xFF7
 21037                           tblptrl	equ	0xFF6
 21038                           tablat	equ	0xFF5
 21039                           prodh	equ	0xFF4
 21040                           prodl	equ	0xFF3
 21041                           intcon	equ	0xFF2
 21042                           intcon2	equ	0xFF1
 21043                           intcon3	equ	0xFF0
 21044                           indf0	equ	0xFEF
 21045                           postinc0	equ	0xFEE
 21046                           plusw0	equ	0xFEB
 21047                           fsr0h	equ	0xFEA
 21048                           fsr0l	equ	0xFE9
 21049                           wreg	equ	0xFE8
 21050                           indf1	equ	0xFE7
 21051                           postinc1	equ	0xFE6
 21052                           postdec1	equ	0xFE5
 21053                           fsr1h	equ	0xFE2
 21054                           fsr1l	equ	0xFE1
 21055                           indf2	equ	0xFDF
 21056                           postinc2	equ	0xFDE
 21057                           postdec2	equ	0xFDD
 21058                           plusw2	equ	0xFDB
 21059                           fsr2h	equ	0xFDA
 21060                           fsr2l	equ	0xFD9
 21061                           status	equ	0xFD8
 21062                           
 21063 ;; *************** function _waitSetupCall *****************
 21064 ;; Defined at:
 21065 ;;		line 195 in file "../Source/c/04_App/app_init.c"
 21066 ;; Parameters:    Size  Location     Type
 21067 ;;		None
 21068 ;; Auto vars:     Size  Location     Type
 21069 ;;  isCallArrive    1   51[BANK0 ] unsigned char 
 21070 ;; Return value:  Size  Location     Type
 21071 ;;                  1    wreg      unsigned char 
 21072 ;; Registers used:
 21073 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21074 ;; Tracked objects:
 21075 ;;		On entry : 0/0
 21076 ;;		On exit  : 0/0
 21077 ;;		Unchanged: 0/0
 21078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21079 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21080 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21082 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21083 ;;Total ram usage:        1 bytes
 21084 ;; Hardware stack levels used:    1
 21085 ;; Hardware stack levels required when called:   15
 21086 ;; This function calls:
 21087 ;;		_Led_SetLedStatus
 21088 ;;		_getSetupCall
 21089 ;;		_secondsAppTimer
 21090 ;; This function is called by:
 21091 ;;		_initFsm
 21092 ;; This function uses a non-reentrant model
 21093 ;;
 21094                           
 21095                           	psect	text93
 21096  005E10                     __ptext93:
 21097                           	opt stack 0
 21098  005E10                     _waitSetupCall:
 21099                           	opt stack 11
 21100                           
 21101                           ;app_init.c: 197: bool isCallArrived = 0;
 21102                           
 21103                           ; BSR set to: 1
 21104                           ;incstack = 0
 21105  005E10  0E00               	movlw	0
 21106  005E12  0100               	movlb	0	; () banked
 21107  005E14  6F93               	movwf	waitSetupCall@isCallArrived& (0+255),b
 21108                           
 21109                           ; BSR set to: 0
 21110                           ;app_init.c: 198: if (!secondsAppTimer(30, &setupCallTicks, 0))
 21111  005E16  0EC2               	movlw	low _setupCallTicks
 21112  005E18  6F8A               	movwf	secondsAppTimer@counter& (0+255),b
 21113  005E1A  0E03               	movlw	high _setupCallTicks
 21114  005E1C  6F8B               	movwf	(secondsAppTimer@counter+1)& (0+255),b
 21115  005E1E  0E00               	movlw	0
 21116  005E20  6F8C               	movwf	secondsAppTimer@isCyclic& (0+255),b
 21117  005E22  0E1E               	movlw	30
 21118  005E24  EC0F  F024         	call	_secondsAppTimer
 21119  005E28  0900               	iorlw	0
 21120  005E2A  A4D8               	btfss	status,2,c
 21121  005E2C  D00F               	goto	l2685
 21122                           
 21123                           ;app_init.c: 199: {
 21124                           ;app_init.c: 200: Led_SetLedStatus(1u, LED_STS_BLINK);
 21125  005E2E  0E03               	movlw	3
 21126  005E30  0100               	movlb	0	; () banked
 21127  005E32  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 21128  005E34  0E01               	movlw	1
 21129  005E36  ECB2  F032         	call	_Led_SetLedStatus
 21130                           
 21131                           ;app_init.c: 201: if (getSetupCall())
 21132  005E3A  EC1D  F034         	call	_getSetupCall	;wreg free
 21133  005E3E  0900               	iorlw	0
 21134  005E40  B4D8               	btfsc	status,2,c
 21135  005E42  D00A               	goto	l2687
 21136                           
 21137                           ;app_init.c: 202: {
 21138                           ;app_init.c: 203: isCallArrived = 1;
 21139  005E44  0E01               	movlw	1
 21140  005E46  0100               	movlb	0	; () banked
 21141  005E48  6F93               	movwf	waitSetupCall@isCallArrived& (0+255),b
 21142                           
 21143                           ; BSR set to: 0
 21144                           ;app_init.c: 204: }
 21145                           ;app_init.c: 205: }
 21146  005E4A  D006               	goto	l2687
 21147  005E4C                     l2685:
 21148                           
 21149                           ;app_init.c: 206: else
 21150                           ;app_init.c: 207: {
 21151                           ;app_init.c: 208: Led_SetLedStatus(1u, LED_STS_ON);
 21152                           
 21153                           ; BSR set to: 0
 21154  005E4C  0E01               	movlw	1
 21155  005E4E  0100               	movlb	0	; () banked
 21156  005E50  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 21157  005E52  0E01               	movlw	1
 21158  005E54  ECB2  F032         	call	_Led_SetLedStatus
 21159  005E58                     l2687:
 21160                           
 21161                           ;app_init.c: 209: }
 21162                           ;app_init.c: 210: return isCallArrived;
 21163  005E58  0100               	movlb	0	; () banked
 21164  005E5A  5193               	movf	waitSetupCall@isCallArrived& (0+255),w,b
 21165  005E5C  0012               	return	
 21166  005E5E                     __end_of_waitSetupCall:
 21167                           	opt stack 0
 21168                           tosu	equ	0xFFF
 21169                           tosh	equ	0xFFE
 21170                           tosl	equ	0xFFD
 21171                           pclath	equ	0xFFA
 21172                           tblptru	equ	0xFF8
 21173                           tblptrh	equ	0xFF7
 21174                           tblptrl	equ	0xFF6
 21175                           tablat	equ	0xFF5
 21176                           prodh	equ	0xFF4
 21177                           prodl	equ	0xFF3
 21178                           intcon	equ	0xFF2
 21179                           intcon2	equ	0xFF1
 21180                           intcon3	equ	0xFF0
 21181                           indf0	equ	0xFEF
 21182                           postinc0	equ	0xFEE
 21183                           plusw0	equ	0xFEB
 21184                           fsr0h	equ	0xFEA
 21185                           fsr0l	equ	0xFE9
 21186                           wreg	equ	0xFE8
 21187                           indf1	equ	0xFE7
 21188                           postinc1	equ	0xFE6
 21189                           postdec1	equ	0xFE5
 21190                           fsr1h	equ	0xFE2
 21191                           fsr1l	equ	0xFE1
 21192                           indf2	equ	0xFDF
 21193                           postinc2	equ	0xFDE
 21194                           postdec2	equ	0xFDD
 21195                           plusw2	equ	0xFDB
 21196                           fsr2h	equ	0xFDA
 21197                           fsr2l	equ	0xFD9
 21198                           status	equ	0xFD8
 21199                           
 21200 ;; *************** function _getSetupCall *****************
 21201 ;; Defined at:
 21202 ;;		line 179 in file "../Source/c/04_App/app_init.c"
 21203 ;; Parameters:    Size  Location     Type
 21204 ;;		None
 21205 ;; Auto vars:     Size  Location     Type
 21206 ;;  isCalledRece    1   35[BANK0 ] unsigned char 
 21207 ;; Return value:  Size  Location     Type
 21208 ;;                  1    wreg      unsigned char 
 21209 ;; Registers used:
 21210 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21211 ;; Tracked objects:
 21212 ;;		On entry : 0/0
 21213 ;;		On exit  : 0/0
 21214 ;;		Unchanged: 0/0
 21215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21216 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21217 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21219 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21220 ;;Total ram usage:        1 bytes
 21221 ;; Hardware stack levels used:    1
 21222 ;; Hardware stack levels required when called:   14
 21223 ;; This function calls:
 21224 ;;		_Mdm_HangPhoneCall
 21225 ;;		_Mdm_IsRinging
 21226 ;; This function is called by:
 21227 ;;		_waitSetupCall
 21228 ;; This function uses a non-reentrant model
 21229 ;;
 21230                           
 21231                           	psect	text94
 21232  00683A                     __ptext94:
 21233                           	opt stack 0
 21234  00683A                     _getSetupCall:
 21235                           	opt stack 11
 21236                           
 21237                           ;app_init.c: 181: bool isCalledReceived = 0;
 21238                           
 21239                           ; BSR set to: 0
 21240                           ;incstack = 0
 21241  00683A  0E00               	movlw	0
 21242  00683C  0100               	movlb	0	; () banked
 21243  00683E  6F83               	movwf	getSetupCall@isCalledReceived& (0+255),b
 21244                           
 21245                           ; BSR set to: 0
 21246                           ;app_init.c: 183: if (Mdm_IsRinging())
 21247  006840  EC83  F033         	call	_Mdm_IsRinging	;wreg free
 21248  006844  0900               	iorlw	0
 21249  006846  B4D8               	btfsc	status,2,c
 21250  006848  D005               	goto	l2681
 21251                           
 21252                           ;app_init.c: 184: {
 21253                           ;app_init.c: 185: Mdm_HangPhoneCall();
 21254  00684A  EC1D  F035         	call	_Mdm_HangPhoneCall	;wreg free
 21255                           
 21256                           ;app_init.c: 186: isCalledReceived = 1;
 21257  00684E  0E01               	movlw	1
 21258  006850  0100               	movlb	0	; () banked
 21259  006852  6F83               	movwf	getSetupCall@isCalledReceived& (0+255),b
 21260  006854                     l2681:
 21261                           
 21262                           ;app_init.c: 187: }
 21263                           ;app_init.c: 188: return isCalledReceived;
 21264                           
 21265                           ; BSR set to: 0
 21266  006854  0100               	movlb	0	; () banked
 21267  006856  5183               	movf	getSetupCall@isCalledReceived& (0+255),w,b
 21268  006858  0012               	return	
 21269  00685A                     __end_of_getSetupCall:
 21270                           	opt stack 0
 21271                           tosu	equ	0xFFF
 21272                           tosh	equ	0xFFE
 21273                           tosl	equ	0xFFD
 21274                           pclath	equ	0xFFA
 21275                           tblptru	equ	0xFF8
 21276                           tblptrh	equ	0xFF7
 21277                           tblptrl	equ	0xFF6
 21278                           tablat	equ	0xFF5
 21279                           prodh	equ	0xFF4
 21280                           prodl	equ	0xFF3
 21281                           intcon	equ	0xFF2
 21282                           intcon2	equ	0xFF1
 21283                           intcon3	equ	0xFF0
 21284                           indf0	equ	0xFEF
 21285                           postinc0	equ	0xFEE
 21286                           plusw0	equ	0xFEB
 21287                           fsr0h	equ	0xFEA
 21288                           fsr0l	equ	0xFE9
 21289                           wreg	equ	0xFE8
 21290                           indf1	equ	0xFE7
 21291                           postinc1	equ	0xFE6
 21292                           postdec1	equ	0xFE5
 21293                           fsr1h	equ	0xFE2
 21294                           fsr1l	equ	0xFE1
 21295                           indf2	equ	0xFDF
 21296                           postinc2	equ	0xFDE
 21297                           postdec2	equ	0xFDD
 21298                           plusw2	equ	0xFDB
 21299                           fsr2h	equ	0xFDA
 21300                           fsr2l	equ	0xFD9
 21301                           status	equ	0xFD8
 21302                           
 21303 ;; *************** function _savePreamble *****************
 21304 ;; Defined at:
 21305 ;;		line 213 in file "../Source/c/04_App/app_init.c"
 21306 ;; Parameters:    Size  Location     Type
 21307 ;;		None
 21308 ;; Auto vars:     Size  Location     Type
 21309 ;;		None
 21310 ;; Return value:  Size  Location     Type
 21311 ;;                  1    wreg      void 
 21312 ;; Registers used:
 21313 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21314 ;; Tracked objects:
 21315 ;;		On entry : 0/0
 21316 ;;		On exit  : 0/0
 21317 ;;		Unchanged: 0/0
 21318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21319 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21322 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21323 ;;Total ram usage:        0 bytes
 21324 ;; Hardware stack levels used:    1
 21325 ;; Hardware stack levels required when called:   14
 21326 ;; This function calls:
 21327 ;;		_Eeprom_Write
 21328 ;;		_initPreamble
 21329 ;; This function is called by:
 21330 ;;		_initFsm
 21331 ;; This function uses a non-reentrant model
 21332 ;;
 21333                           
 21334                           	psect	text95
 21335  006940                     __ptext95:
 21336                           	opt stack 0
 21337  006940                     _savePreamble:
 21338                           	opt stack 12
 21339                           
 21340                           ;app_init.c: 215: Eeprom_Write(0, initPreamble(), 4);
 21341                           
 21342                           ; BSR set to: 0
 21343                           ;incstack = 0
 21344  006940  EC5B  F034         	call	_initPreamble	;wreg free
 21345  006944  C07D  F08F         	movff	?_initPreamble,Eeprom_Write@WriteBuffer
 21346  006948  C07E  F090         	movff	?_initPreamble+1,Eeprom_Write@WriteBuffer+1
 21347  00694C  0E04               	movlw	4
 21348  00694E  0100               	movlb	0	; () banked
 21349  006950  6F91               	movwf	Eeprom_Write@DataLength& (0+255),b
 21350  006952  0E00               	movlw	0
 21351  006954  EC3E  F02E         	call	_Eeprom_Write
 21352  006958  0012               	return		;funcret
 21353  00695A                     __end_of_savePreamble:
 21354                           	opt stack 0
 21355                           tosu	equ	0xFFF
 21356                           tosh	equ	0xFFE
 21357                           tosl	equ	0xFFD
 21358                           pclath	equ	0xFFA
 21359                           tblptru	equ	0xFF8
 21360                           tblptrh	equ	0xFF7
 21361                           tblptrl	equ	0xFF6
 21362                           tablat	equ	0xFF5
 21363                           prodh	equ	0xFF4
 21364                           prodl	equ	0xFF3
 21365                           intcon	equ	0xFF2
 21366                           intcon2	equ	0xFF1
 21367                           intcon3	equ	0xFF0
 21368                           indf0	equ	0xFEF
 21369                           postinc0	equ	0xFEE
 21370                           plusw0	equ	0xFEB
 21371                           fsr0h	equ	0xFEA
 21372                           fsr0l	equ	0xFE9
 21373                           wreg	equ	0xFE8
 21374                           indf1	equ	0xFE7
 21375                           postinc1	equ	0xFE6
 21376                           postdec1	equ	0xFE5
 21377                           fsr1h	equ	0xFE2
 21378                           fsr1l	equ	0xFE1
 21379                           indf2	equ	0xFDF
 21380                           postinc2	equ	0xFDE
 21381                           postdec2	equ	0xFDD
 21382                           plusw2	equ	0xFDB
 21383                           fsr2h	equ	0xFDA
 21384                           fsr2l	equ	0xFD9
 21385                           status	equ	0xFD8
 21386                           
 21387 ;; *************** function _initPreamble *****************
 21388 ;; Defined at:
 21389 ;;		line 285 in file "../Source/c/04_App/app_init.c"
 21390 ;; Parameters:    Size  Location     Type
 21391 ;;		None
 21392 ;; Auto vars:     Size  Location     Type
 21393 ;;		None
 21394 ;; Return value:  Size  Location     Type
 21395 ;;                  2   29[BANK0 ] PTR unsigned char 
 21396 ;; Registers used:
 21397 ;;		wreg, status,2, status,0
 21398 ;; Tracked objects:
 21399 ;;		On entry : 0/0
 21400 ;;		On exit  : 0/0
 21401 ;;		Unchanged: 0/0
 21402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21403 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21404 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21405 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21406 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21407 ;;Total ram usage:        2 bytes
 21408 ;; Hardware stack levels used:    1
 21409 ;; Hardware stack levels required when called:   11
 21410 ;; This function calls:
 21411 ;;		Nothing
 21412 ;; This function is called by:
 21413 ;;		_savePreamble
 21414 ;; This function uses a non-reentrant model
 21415 ;;
 21416                           
 21417                           	psect	text96
 21418  0068B6                     __ptext96:
 21419                           	opt stack 0
 21420  0068B6                     _initPreamble:
 21421                           	opt stack 14
 21422                           
 21423                           ;app_init.c: 287: memoryPreamble[0] = 'U';
 21424                           
 21425                           ;incstack = 0
 21426  0068B6  0E55               	movlw	85
 21427  0068B8  0103               	movlb	3	; () banked
 21428  0068BA  6FAC               	movwf	_memoryPreamble& (0+255),b
 21429                           
 21430                           ;app_init.c: 288: memoryPreamble[1] = 'S';
 21431  0068BC  0E53               	movlw	83
 21432  0068BE  6FAD               	movwf	(_memoryPreamble+1)& (0+255),b
 21433                           
 21434                           ;app_init.c: 289: memoryPreamble[2] = 'I';
 21435  0068C0  0E49               	movlw	73
 21436  0068C2  6FAE               	movwf	(_memoryPreamble+2)& (0+255),b
 21437                           
 21438                           ;app_init.c: 290: memoryPreamble[3] = 'M';
 21439  0068C4  0E4D               	movlw	77
 21440  0068C6  6FAF               	movwf	(_memoryPreamble+3)& (0+255),b
 21441                           
 21442                           ; BSR set to: 3
 21443                           ;app_init.c: 291: return memoryPreamble;
 21444  0068C8  0EAC               	movlw	low _memoryPreamble
 21445  0068CA  0100               	movlb	0	; () banked
 21446  0068CC  6F7D               	movwf	?_initPreamble& (0+255),b
 21447  0068CE  0E03               	movlw	high _memoryPreamble
 21448  0068D0  6F7E               	movwf	(?_initPreamble+1)& (0+255),b
 21449  0068D2  0012               	return	
 21450  0068D4                     __end_of_initPreamble:
 21451                           	opt stack 0
 21452                           tosu	equ	0xFFF
 21453                           tosh	equ	0xFFE
 21454                           tosl	equ	0xFFD
 21455                           pclath	equ	0xFFA
 21456                           tblptru	equ	0xFF8
 21457                           tblptrh	equ	0xFF7
 21458                           tblptrl	equ	0xFF6
 21459                           tablat	equ	0xFF5
 21460                           prodh	equ	0xFF4
 21461                           prodl	equ	0xFF3
 21462                           intcon	equ	0xFF2
 21463                           intcon2	equ	0xFF1
 21464                           intcon3	equ	0xFF0
 21465                           indf0	equ	0xFEF
 21466                           postinc0	equ	0xFEE
 21467                           plusw0	equ	0xFEB
 21468                           fsr0h	equ	0xFEA
 21469                           fsr0l	equ	0xFE9
 21470                           wreg	equ	0xFE8
 21471                           indf1	equ	0xFE7
 21472                           postinc1	equ	0xFE6
 21473                           postdec1	equ	0xFE5
 21474                           fsr1h	equ	0xFE2
 21475                           fsr1l	equ	0xFE1
 21476                           indf2	equ	0xFDF
 21477                           postinc2	equ	0xFDE
 21478                           postdec2	equ	0xFDD
 21479                           plusw2	equ	0xFDB
 21480                           fsr2h	equ	0xFDA
 21481                           fsr2l	equ	0xFD9
 21482                           status	equ	0xFD8
 21483                           
 21484 ;; *************** function _initGprsModem *****************
 21485 ;; Defined at:
 21486 ;;		line 86 in file "../Source/c/04_App/app_init.c"
 21487 ;; Parameters:    Size  Location     Type
 21488 ;;		None
 21489 ;; Auto vars:     Size  Location     Type
 21490 ;;  isInitialize    1   57[BANK0 ] unsigned char 
 21491 ;; Return value:  Size  Location     Type
 21492 ;;                  1    wreg      unsigned char 
 21493 ;; Registers used:
 21494 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21495 ;; Tracked objects:
 21496 ;;		On entry : 0/0
 21497 ;;		On exit  : 0/0
 21498 ;;		Unchanged: 0/0
 21499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21500 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21501 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21503 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21504 ;;Total ram usage:        1 bytes
 21505 ;; Hardware stack levels used:    1
 21506 ;; Hardware stack levels required when called:   14
 21507 ;; This function calls:
 21508 ;;		_Mdm_SetSmsFormat
 21509 ;;		_Uart_WriteConstString
 21510 ;;		_secondsAppTimer
 21511 ;; This function is called by:
 21512 ;;		_initFsm
 21513 ;; This function uses a non-reentrant model
 21514 ;;
 21515                           
 21516                           	psect	text97
 21517  004E1C                     __ptext97:
 21518                           	opt stack 0
 21519  004E1C                     _initGprsModem:
 21520                           	opt stack 12
 21521                           
 21522                           ;app_init.c: 88: static uint16_t modemCounter = 0;
 21523                           ;app_init.c: 89: static modemStates currentState = MODEM_INIT;
 21524                           ;app_init.c: 90: bool isInitialized = 0;
 21525                           
 21526                           ; BSR set to: 0
 21527                           ;incstack = 0
 21528  004E1C  0E00               	movlw	0
 21529  004E1E  0100               	movlb	0	; () banked
 21530  004E20  6F99               	movwf	initGprsModem@isInitialized& (0+255),b
 21531                           
 21532                           ;app_init.c: 92: switch(currentState)
 21533  004E22  D035               	goto	l2653
 21534  004E24                     
 21535                           ;app_init.c: 95: if (MdmStatus == ModemConfigured || MdmStatus == ModemOn)
 21536                           
 21537                           ; BSR set to: 0
 21538  004E24  0E03               	movlw	3
 21539  004E26  0100               	movlb	0	; () banked
 21540  004E28  19D1               	xorwf	_MdmStatus& (0+255),w,b
 21541  004E2A  B4D8               	btfsc	status,2,c
 21542  004E2C  D003               	goto	u14480
 21543                           
 21544                           ; BSR set to: 0
 21545  004E2E  05D1               	decf	_MdmStatus& (0+255),w,b
 21546  004E30  A4D8               	btfss	status,2,c
 21547  004E32  D03B               	goto	l2659
 21548  004E34                     u14480:
 21549                           
 21550                           ; BSR set to: 0
 21551                           ;app_init.c: 96: {
 21552                           ;app_init.c: 97: if (secondsAppTimer(5, &modemCounter, 0))
 21553                           
 21554                           ; BSR set to: 0
 21555  004E34  0EC0               	movlw	low initGprsModem@modemCounter
 21556  004E36  6F8A               	movwf	secondsAppTimer@counter& (0+255),b
 21557  004E38  0E03               	movlw	high initGprsModem@modemCounter
 21558  004E3A  6F8B               	movwf	(secondsAppTimer@counter+1)& (0+255),b
 21559  004E3C  0E00               	movlw	0
 21560  004E3E  6F8C               	movwf	secondsAppTimer@isCyclic& (0+255),b
 21561  004E40  0E05               	movlw	5
 21562  004E42  EC0F  F024         	call	_secondsAppTimer
 21563  004E46  0900               	iorlw	0
 21564  004E48  B4D8               	btfsc	status,2,c
 21565  004E4A  D02F               	goto	l2659
 21566                           
 21567                           ;app_init.c: 98: {
 21568                           ;app_init.c: 99: Mdm_SetSmsFormat(1);
 21569  004E4C  0E01               	movlw	1
 21570  004E4E  ECE0  F02E         	call	_Mdm_SetSmsFormat
 21571                           
 21572                           ;app_init.c: 100: currentState = MODEM_DELETE_SMS;
 21573  004E52  0E01               	movlw	1
 21574  004E54  D013               	goto	L32
 21575  004E56                     
 21576                           ; BSR set to: 1
 21577                           ;app_init.c: 106: Uart_WriteConstString(1,"AT+CMGDA=DEL ALL\r\n");
 21578                           
 21579                           ; BSR set to: 1
 21580  004E56  0EFA               	movlw	low STR_30
 21581  004E58  0100               	movlb	0	; () banked
 21582  004E5A  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 21583  004E5C  0EFE               	movlw	high STR_30
 21584  004E5E  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 21585  004E60  0E01               	movlw	1
 21586  004E62  EC98  F030         	call	_Uart_WriteConstString
 21587                           
 21588                           ;app_init.c: 107: currentState = MODEM_SET_CALLER_ID;
 21589  004E66  0E02               	movlw	2
 21590  004E68  D009               	goto	L32
 21591  004E6A                     
 21592                           ; BSR set to: 1
 21593                           ;app_init.c: 111: Uart_WriteConstString(1,"AT+CLIP=1\r\n");
 21594                           
 21595                           ; BSR set to: 1
 21596  004E6A  0EAA               	movlw	low STR_31
 21597  004E6C  0100               	movlb	0	; () banked
 21598  004E6E  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 21599  004E70  0EFF               	movlw	high STR_31
 21600  004E72  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 21601  004E74  0E01               	movlw	1
 21602  004E76  EC98  F030         	call	_Uart_WriteConstString
 21603                           
 21604                           ;app_init.c: 112: currentState = MODEM_INIT_COMPLETE;
 21605  004E7A  0E03               	movlw	3
 21606  004E7C                     L32:
 21607  004E7C  0101               	movlb	1	; () banked
 21608  004E7E  6FD8               	movwf	initGprsModem@currentState& (0+255),b
 21609                           
 21610                           ;app_init.c: 113: break;
 21611  004E80  D014               	goto	l2659
 21612  004E82                     
 21613                           ; BSR set to: 1
 21614                           ;app_init.c: 116: currentState = MODEM_INIT;
 21615                           
 21616                           ; BSR set to: 1
 21617  004E82  0E00               	movlw	0
 21618  004E84  6FD8               	movwf	initGprsModem@currentState& (0+255),b
 21619                           
 21620                           ;app_init.c: 117: isInitialized = 1;
 21621  004E86  0E01               	movlw	1
 21622  004E88  0100               	movlb	0	; () banked
 21623  004E8A  6F99               	movwf	initGprsModem@isInitialized& (0+255),b
 21624                           
 21625                           ; BSR set to: 0
 21626                           ;app_init.c: 122: }
 21627                           
 21628                           ; BSR set to: 0
 21629                           ;app_init.c: 121: break;
 21630                           
 21631                           ;app_init.c: 120: default:
 21632                           
 21633                           ;app_init.c: 118: break;
 21634  004E8C  D00E               	goto	l2659
 21635  004E8E                     l2653:
 21636                           
 21637                           ; BSR set to: 0
 21638                           
 21639                           ; BSR set to: 0
 21640  004E8E  0101               	movlb	1	; () banked
 21641  004E90  51D8               	movf	initGprsModem@currentState& (0+255),w,b
 21642                           
 21643                           ; Switch size 1, requested type "space"
 21644                           ; Number of cases is 4, Range of values is 0 to 3
 21645                           ; switch strategies available:
 21646                           ; Name         Instructions Cycles
 21647                           ; simple_byte           13     7 (average)
 21648                           ;	Chosen strategy is simple_byte
 21649  004E92  0A00               	xorlw	0	; case 0
 21650  004E94  B4D8               	btfsc	status,2,c
 21651  004E96  D7C6               	goto	l2654
 21652  004E98  0A01               	xorlw	1	; case 1
 21653  004E9A  B4D8               	btfsc	status,2,c
 21654  004E9C  D7DC               	goto	l2660
 21655  004E9E  0A03               	xorlw	3	; case 2
 21656  004EA0  B4D8               	btfsc	status,2,c
 21657  004EA2  D7E3               	goto	l2661
 21658  004EA4  0A01               	xorlw	1	; case 3
 21659  004EA6  B4D8               	btfsc	status,2,c
 21660  004EA8  D7EC               	goto	l2662
 21661  004EAA                     l2659:
 21662                           
 21663                           ;app_init.c: 123: return isInitialized;
 21664                           
 21665                           ; BSR set to: 1
 21666  004EAA  0100               	movlb	0	; () banked
 21667  004EAC  5199               	movf	initGprsModem@isInitialized& (0+255),w,b
 21668  004EAE  0012               	return	
 21669  004EB0                     __end_of_initGprsModem:
 21670                           	opt stack 0
 21671                           tosu	equ	0xFFF
 21672                           tosh	equ	0xFFE
 21673                           tosl	equ	0xFFD
 21674                           pclath	equ	0xFFA
 21675                           tblptru	equ	0xFF8
 21676                           tblptrh	equ	0xFF7
 21677                           tblptrl	equ	0xFF6
 21678                           tablat	equ	0xFF5
 21679                           prodh	equ	0xFF4
 21680                           prodl	equ	0xFF3
 21681                           intcon	equ	0xFF2
 21682                           intcon2	equ	0xFF1
 21683                           intcon3	equ	0xFF0
 21684                           indf0	equ	0xFEF
 21685                           postinc0	equ	0xFEE
 21686                           plusw0	equ	0xFEB
 21687                           fsr0h	equ	0xFEA
 21688                           fsr0l	equ	0xFE9
 21689                           wreg	equ	0xFE8
 21690                           indf1	equ	0xFE7
 21691                           postinc1	equ	0xFE6
 21692                           postdec1	equ	0xFE5
 21693                           fsr1h	equ	0xFE2
 21694                           fsr1l	equ	0xFE1
 21695                           indf2	equ	0xFDF
 21696                           postinc2	equ	0xFDE
 21697                           postdec2	equ	0xFDD
 21698                           plusw2	equ	0xFDB
 21699                           fsr2h	equ	0xFDA
 21700                           fsr2l	equ	0xFD9
 21701                           status	equ	0xFD8
 21702                           
 21703 ;; *************** function _secondsAppTimer *****************
 21704 ;; Defined at:
 21705 ;;		line 68 in file "../Source/c/04_App/app_utils.c"
 21706 ;; Parameters:    Size  Location     Type
 21707 ;;  seconds         1    wreg     unsigned char 
 21708 ;;  counter         2   42[BANK0 ] PTR unsigned int 
 21709 ;;		 -> setupCallTicks(2), initGprsModem@modemCounter(2), 
 21710 ;;  isCyclic        1   44[BANK0 ] unsigned char 
 21711 ;; Auto vars:     Size  Location     Type
 21712 ;;  seconds         1   47[BANK0 ] unsigned char 
 21713 ;;  destinationT    2   49[BANK0 ] unsigned int 
 21714 ;;  isExpired       1   48[BANK0 ] unsigned char 
 21715 ;; Return value:  Size  Location     Type
 21716 ;;                  1    wreg      unsigned char 
 21717 ;; Registers used:
 21718 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21719 ;; Tracked objects:
 21720 ;;		On entry : 0/0
 21721 ;;		On exit  : 0/0
 21722 ;;		Unchanged: 0/0
 21723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21724 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21725 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21726 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21727 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21728 ;;Total ram usage:        9 bytes
 21729 ;; Hardware stack levels used:    1
 21730 ;; Hardware stack levels required when called:   12
 21731 ;; This function calls:
 21732 ;;		___lwdiv
 21733 ;;		___wmul
 21734 ;; This function is called by:
 21735 ;;		_initGprsModem
 21736 ;;		_waitSetupCall
 21737 ;;		_blinkForSeconds
 21738 ;; This function uses a non-reentrant model
 21739 ;;
 21740                           
 21741                           	psect	text98
 21742  00481E                     __ptext98:
 21743                           	opt stack 0
 21744  00481E                     _secondsAppTimer:
 21745                           	opt stack 13
 21746                           
 21747                           ; BSR set to: 0
 21748                           ;incstack = 0
 21749                           ;secondsAppTimer@seconds stored from wreg
 21750  00481E  0100               	movlb	0	; () banked
 21751  004820  6F8F               	movwf	secondsAppTimer@seconds& (0+255),b
 21752                           
 21753                           ;app_utils.c: 70: bool isExpired = 1;
 21754  004822  0E01               	movlw	1
 21755  004824  0100               	movlb	0	; () banked
 21756  004826  6F90               	movwf	secondsAppTimer@isExpired& (0+255),b
 21757                           
 21758                           ; BSR set to: 0
 21759                           ;app_utils.c: 71: uint16_t destinationTicks = (uint16_t) (seconds * 1000) / ((UINT16)(10
      +                          0));
 21760  004828  C08F  F07D         	movff	secondsAppTimer@seconds,___wmul@multiplier
 21761  00482C  6B7E               	clrf	(___wmul@multiplier+1)& (0+255),b
 21762  00482E  0E03               	movlw	3
 21763  004830  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 21764  004832  0EE8               	movlw	232
 21765  004834  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 21766  004836  EC38  F033         	call	___wmul	;wreg free
 21767  00483A  C07D  F083         	movff	?___wmul,___lwdiv@dividend
 21768  00483E  C07E  F084         	movff	?___wmul+1,___lwdiv@dividend+1
 21769  004842  0E00               	movlw	0
 21770  004844  0100               	movlb	0	; () banked
 21771  004846  6F86               	movwf	(___lwdiv@divisor+1)& (0+255),b
 21772  004848  0E64               	movlw	100
 21773  00484A  6F85               	movwf	___lwdiv@divisor& (0+255),b
 21774  00484C  EC14  F02E         	call	___lwdiv	;wreg free
 21775  004850  C083  F091         	movff	?___lwdiv,secondsAppTimer@destinationTicks
 21776  004854  C084  F092         	movff	?___lwdiv+1,secondsAppTimer@destinationTicks+1
 21777                           
 21778                           ;app_utils.c: 73: if (*counter < destinationTicks)
 21779  004858  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 21780  00485C  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 21781  004860  0100               	movlb	0	; () banked
 21782  004862  5191               	movf	secondsAppTimer@destinationTicks& (0+255),w,b
 21783  004864  5CDE               	subwf	postinc2,w,c
 21784  004866  5192               	movf	(secondsAppTimer@destinationTicks+1)& (0+255),w,b
 21785  004868  58DE               	subwfb	postinc2,w,c
 21786  00486A  B0D8               	btfsc	status,0,c
 21787  00486C  D009               	goto	l2731
 21788                           
 21789                           ; BSR set to: 0
 21790                           ;app_utils.c: 74: {
 21791                           ;app_utils.c: 75: *counter += 1;
 21792  00486E  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 21793  004872  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 21794  004876  2ADE               	incf	postinc2,f,c
 21795  004878  0E00               	movlw	0
 21796  00487A  22DD               	addwfc	postdec2,f,c
 21797                           
 21798                           ; BSR set to: 0
 21799                           ;app_utils.c: 76: isExpired = 0;
 21800  00487C  0E00               	movlw	0
 21801  00487E  6F90               	movwf	secondsAppTimer@isExpired& (0+255),b
 21802  004880                     l2731:
 21803                           
 21804                           ; BSR set to: 0
 21805                           ;app_utils.c: 77: }
 21806                           ;app_utils.c: 78: if (*counter == destinationTicks)
 21807                           
 21808                           ; BSR set to: 0
 21809  004880  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 21810  004884  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 21811  004888  5191               	movf	secondsAppTimer@destinationTicks& (0+255),w,b
 21812  00488A  18DE               	xorwf	postinc2,w,c
 21813  00488C  E117               	bnz	l14186
 21814  00488E  5192               	movf	(secondsAppTimer@destinationTicks+1)& (0+255),w,b
 21815  004890  18DE               	xorwf	postinc2,w,c
 21816  004892  A4D8               	btfss	status,2,c
 21817  004894  D013               	goto	l2734
 21818                           
 21819                           ; BSR set to: 0
 21820                           ;app_utils.c: 79: {
 21821                           ;app_utils.c: 80: if (isCyclic)
 21822  004896  518C               	movf	secondsAppTimer@isCyclic& (0+255),w,b
 21823  004898  B4D8               	btfsc	status,2,c
 21824  00489A  D008               	goto	l2733
 21825                           
 21826                           ; BSR set to: 0
 21827                           ;app_utils.c: 81: {
 21828                           ;app_utils.c: 82: *counter = 0;
 21829  00489C  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 21830  0048A0  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 21831  0048A4  0E00               	movlw	0
 21832  0048A6  6EDE               	movwf	postinc2,c
 21833  0048A8  0E00               	movlw	0
 21834  0048AA  D007               	goto	L33
 21835  0048AC                     l2733:
 21836                           
 21837                           ; BSR set to: 0
 21838                           ;app_utils.c: 84: else
 21839                           ;app_utils.c: 85: {
 21840                           ;app_utils.c: 86: *counter = 0xFFFF;
 21841                           
 21842                           ; BSR set to: 0
 21843  0048AC  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 21844  0048B0  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 21845  0048B4  0EFF               	movlw	255
 21846  0048B6  6EDE               	movwf	postinc2,c
 21847  0048B8  0EFF               	movlw	255
 21848  0048BA                     L33:
 21849  0048BA  6EDD               	movwf	postdec2,c
 21850  0048BC                     l2734:
 21851  0048BC                     l14186:
 21852                           
 21853                           ; BSR set to: 0
 21854                           ;app_utils.c: 87: }
 21855                           ;app_utils.c: 88: }
 21856                           ;app_utils.c: 89: return isExpired;
 21857  0048BC  5190               	movf	secondsAppTimer@isExpired& (0+255),w,b
 21858  0048BE  0012               	return	
 21859  0048C0                     __end_of_secondsAppTimer:
 21860                           	opt stack 0
 21861                           tosu	equ	0xFFF
 21862                           tosh	equ	0xFFE
 21863                           tosl	equ	0xFFD
 21864                           pclath	equ	0xFFA
 21865                           tblptru	equ	0xFF8
 21866                           tblptrh	equ	0xFF7
 21867                           tblptrl	equ	0xFF6
 21868                           tablat	equ	0xFF5
 21869                           prodh	equ	0xFF4
 21870                           prodl	equ	0xFF3
 21871                           intcon	equ	0xFF2
 21872                           intcon2	equ	0xFF1
 21873                           intcon3	equ	0xFF0
 21874                           indf0	equ	0xFEF
 21875                           postinc0	equ	0xFEE
 21876                           plusw0	equ	0xFEB
 21877                           fsr0h	equ	0xFEA
 21878                           fsr0l	equ	0xFE9
 21879                           wreg	equ	0xFE8
 21880                           indf1	equ	0xFE7
 21881                           postinc1	equ	0xFE6
 21882                           postdec1	equ	0xFE5
 21883                           fsr1h	equ	0xFE2
 21884                           fsr1l	equ	0xFE1
 21885                           indf2	equ	0xFDF
 21886                           postinc2	equ	0xFDE
 21887                           postdec2	equ	0xFDD
 21888                           plusw2	equ	0xFDB
 21889                           fsr2h	equ	0xFDA
 21890                           fsr2l	equ	0xFD9
 21891                           status	equ	0xFD8
 21892                           
 21893 ;; *************** function _Mdm_SetSmsFormat *****************
 21894 ;; Defined at:
 21895 ;;		line 837 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 21896 ;; Parameters:    Size  Location     Type
 21897 ;;  TextFormat      1    wreg     unsigned char 
 21898 ;; Auto vars:     Size  Location     Type
 21899 ;;  TextFormat      1   56[BANK0 ] unsigned char 
 21900 ;;  UartMessage    20   36[BANK0 ] unsigned char [20]
 21901 ;;  Index           1   35[BANK0 ] unsigned char 
 21902 ;; Return value:  Size  Location     Type
 21903 ;;                  1    wreg      void 
 21904 ;; Registers used:
 21905 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 21906 ;; Tracked objects:
 21907 ;;		On entry : 0/0
 21908 ;;		On exit  : 0/0
 21909 ;;		Unchanged: 0/0
 21910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21911 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21912 ;;      Locals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21913 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21914 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21915 ;;Total ram usage:       22 bytes
 21916 ;; Hardware stack levels used:    1
 21917 ;; Hardware stack levels required when called:   13
 21918 ;; This function calls:
 21919 ;;		_Uart_WriteString
 21920 ;; This function is called by:
 21921 ;;		_initGprsModem
 21922 ;; This function uses a non-reentrant model
 21923 ;;
 21924                           
 21925                           	psect	text99
 21926  005DC0                     __ptext99:
 21927                           	opt stack 0
 21928  005DC0                     _Mdm_SetSmsFormat:
 21929                           	opt stack 12
 21930                           
 21931                           ; BSR set to: 0
 21932                           ;incstack = 0
 21933                           ;Mdm_SetSmsFormat@TextFormat stored from wreg
 21934  005DC0  0100               	movlb	0	; () banked
 21935  005DC2  6F98               	movwf	Mdm_SetSmsFormat@TextFormat& (0+255),b
 21936                           
 21937                           ;mdm_gsm_gprs.c: 839: UINT8 UartMessage[20];
 21938                           ;mdm_gsm_gprs.c: 840: UINT8 Index = 0;
 21939  005DC4  0E00               	movlw	0
 21940  005DC6  0100               	movlb	0	; () banked
 21941  005DC8  6F83               	movwf	Mdm_SetSmsFormat@Index& (0+255),b
 21942                           
 21943                           ;mdm_gsm_gprs.c: 843: UartMessage[0] = 'A';
 21944  005DCA  0E41               	movlw	65
 21945  005DCC  6F84               	movwf	Mdm_SetSmsFormat@UartMessage& (0+255),b
 21946                           
 21947                           ;mdm_gsm_gprs.c: 844: UartMessage[1] = 'T';
 21948  005DCE  0E54               	movlw	84
 21949  005DD0  6F85               	movwf	(Mdm_SetSmsFormat@UartMessage+1)& (0+255),b
 21950                           
 21951                           ;mdm_gsm_gprs.c: 845: UartMessage[2] = '+';
 21952  005DD2  0E2B               	movlw	43
 21953  005DD4  6F86               	movwf	(Mdm_SetSmsFormat@UartMessage+2)& (0+255),b
 21954                           
 21955                           ;mdm_gsm_gprs.c: 846: UartMessage[3] = 'C';
 21956  005DD6  0E43               	movlw	67
 21957  005DD8  6F87               	movwf	(Mdm_SetSmsFormat@UartMessage+3)& (0+255),b
 21958                           
 21959                           ;mdm_gsm_gprs.c: 847: UartMessage[4] = 'M';
 21960  005DDA  0E4D               	movlw	77
 21961  005DDC  6F88               	movwf	(Mdm_SetSmsFormat@UartMessage+4)& (0+255),b
 21962                           
 21963                           ;mdm_gsm_gprs.c: 848: UartMessage[5] = 'G';
 21964  005DDE  0E47               	movlw	71
 21965  005DE0  6F89               	movwf	(Mdm_SetSmsFormat@UartMessage+5)& (0+255),b
 21966                           
 21967                           ;mdm_gsm_gprs.c: 849: UartMessage[6] = 'F';
 21968  005DE2  0E46               	movlw	70
 21969  005DE4  6F8A               	movwf	(Mdm_SetSmsFormat@UartMessage+6)& (0+255),b
 21970                           
 21971                           ;mdm_gsm_gprs.c: 850: UartMessage[7] = '=';
 21972  005DE6  0E3D               	movlw	61
 21973  005DE8  6F8B               	movwf	(Mdm_SetSmsFormat@UartMessage+7)& (0+255),b
 21974                           
 21975                           ; BSR set to: 0
 21976                           ;mdm_gsm_gprs.c: 853: if (TextFormat == 1u)
 21977  005DEA  0598               	decf	Mdm_SetSmsFormat@TextFormat& (0+255),w,b
 21978  005DEC  A4D8               	btfss	status,2,c
 21979  005DEE  D002               	goto	l1121
 21980                           
 21981                           ; BSR set to: 0
 21982                           ;mdm_gsm_gprs.c: 854: {
 21983                           ;mdm_gsm_gprs.c: 855: UartMessage[8] = '1';
 21984  005DF0  0E31               	movlw	49
 21985  005DF2  D001               	goto	L34
 21986  005DF4                     l1121:
 21987                           
 21988                           ; BSR set to: 0
 21989                           ;mdm_gsm_gprs.c: 857: else
 21990                           ;mdm_gsm_gprs.c: 858: {
 21991                           ;mdm_gsm_gprs.c: 859: UartMessage[8] = '0';
 21992                           
 21993                           ; BSR set to: 0
 21994  005DF4  0E30               	movlw	48
 21995  005DF6                     L34:
 21996  005DF6  6F8C               	movwf	(Mdm_SetSmsFormat@UartMessage+8)& (0+255),b
 21997                           
 21998                           ; BSR set to: 0
 21999                           ;mdm_gsm_gprs.c: 860: }
 22000                           ;mdm_gsm_gprs.c: 862: UartMessage[9] = '\r';
 22001  005DF8  0E0D               	movlw	13
 22002  005DFA  6F8D               	movwf	(Mdm_SetSmsFormat@UartMessage+9)& (0+255),b
 22003                           
 22004                           ;mdm_gsm_gprs.c: 863: UartMessage[10] = (0);
 22005  005DFC  0E00               	movlw	0
 22006  005DFE  6F8E               	movwf	(Mdm_SetSmsFormat@UartMessage+10)& (0+255),b
 22007                           
 22008                           ; BSR set to: 0
 22009                           ;mdm_gsm_gprs.c: 866: Uart_WriteString(1, UartMessage);
 22010  005E00  0E84               	movlw	low Mdm_SetSmsFormat@UartMessage
 22011  005E02  6F80               	movwf	Uart_WriteString@StringToWrite& (0+255),b
 22012  005E04  0E00               	movlw	high Mdm_SetSmsFormat@UartMessage
 22013  005E06  6F81               	movwf	(Uart_WriteString@StringToWrite+1)& (0+255),b
 22014  005E08  0E01               	movlw	1
 22015  005E0A  EC38  F031         	call	_Uart_WriteString
 22016  005E0E  0012               	return		;funcret
 22017  005E10                     __end_of_Mdm_SetSmsFormat:
 22018                           	opt stack 0
 22019                           tosu	equ	0xFFF
 22020                           tosh	equ	0xFFE
 22021                           tosl	equ	0xFFD
 22022                           pclath	equ	0xFFA
 22023                           tblptru	equ	0xFF8
 22024                           tblptrh	equ	0xFF7
 22025                           tblptrl	equ	0xFF6
 22026                           tablat	equ	0xFF5
 22027                           prodh	equ	0xFF4
 22028                           prodl	equ	0xFF3
 22029                           intcon	equ	0xFF2
 22030                           intcon2	equ	0xFF1
 22031                           intcon3	equ	0xFF0
 22032                           indf0	equ	0xFEF
 22033                           postinc0	equ	0xFEE
 22034                           plusw0	equ	0xFEB
 22035                           fsr0h	equ	0xFEA
 22036                           fsr0l	equ	0xFE9
 22037                           wreg	equ	0xFE8
 22038                           indf1	equ	0xFE7
 22039                           postinc1	equ	0xFE6
 22040                           postdec1	equ	0xFE5
 22041                           fsr1h	equ	0xFE2
 22042                           fsr1l	equ	0xFE1
 22043                           indf2	equ	0xFDF
 22044                           postinc2	equ	0xFDE
 22045                           postdec2	equ	0xFDD
 22046                           plusw2	equ	0xFDB
 22047                           fsr2h	equ	0xFDA
 22048                           fsr2l	equ	0xFD9
 22049                           status	equ	0xFD8
 22050                           
 22051 ;; *************** function _initEeprom *****************
 22052 ;; Defined at:
 22053 ;;		line 130 in file "../Source/c/04_App/app_init.c"
 22054 ;; Parameters:    Size  Location     Type
 22055 ;;		None
 22056 ;; Auto vars:     Size  Location     Type
 22057 ;;  isInitialize    1    2[BANK1 ] unsigned char 
 22058 ;;  memoryOpResu    1    1[BANK1 ] enum E8246
 22059 ;;  addressToRea    1    0[BANK1 ] const unsigned char 
 22060 ;; Return value:  Size  Location     Type
 22061 ;;                  1    wreg      unsigned char 
 22062 ;; Registers used:
 22063 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 22064 ;; Tracked objects:
 22065 ;;		On entry : 0/0
 22066 ;;		On exit  : 0/0
 22067 ;;		Unchanged: 0/0
 22068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22069 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22070 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22071 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22072 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22073 ;;Total ram usage:        3 bytes
 22074 ;; Hardware stack levels used:    1
 22075 ;; Hardware stack levels required when called:   17
 22076 ;; This function calls:
 22077 ;;		_Eeprom_Read
 22078 ;; This function is called by:
 22079 ;;		_initFsm
 22080 ;; This function uses a non-reentrant model
 22081 ;;
 22082                           
 22083                           	psect	text100
 22084  004F42                     __ptext100:
 22085                           	opt stack 0
 22086  004F42                     _initEeprom:
 22087                           	opt stack 9
 22088                           
 22089                           ;app_init.c: 132: const uint8_t addressToRead = 0;
 22090                           
 22091                           ;incstack = 0
 22092  004F42  0E00               	movlw	0
 22093  004F44  0101               	movlb	1	; () banked
 22094  004F46  6F00               	movwf	initEeprom@addressToRead& (0+255),b
 22095                           
 22096                           ;app_init.c: 133: static eepromStates currentState = EEPROM_INIT;
 22097                           ;app_init.c: 134: EepromStsType memoryOpResult = OP_PENDING;
 22098  004F48  0E02               	movlw	2
 22099  004F4A  6F01               	movwf	initEeprom@memoryOpResult& (0+255),b
 22100                           
 22101                           ;app_init.c: 135: bool isInitialized = 0;
 22102  004F4C  0E00               	movlw	0
 22103  004F4E  6F02               	movwf	initEeprom@isInitialized& (0+255),b
 22104                           
 22105                           ;app_init.c: 137: switch (currentState)
 22106  004F50  D034               	goto	l2669
 22107  004F52                     
 22108                           ; BSR set to: 1
 22109                           ;app_init.c: 140: memoryOpResult = Eeprom_Read(0, memoryPreamble, 4);
 22110                           
 22111                           ; BSR set to: 1
 22112  004F52  0EAC               	movlw	low _memoryPreamble
 22113  004F54  0100               	movlb	0	; () banked
 22114  004F56  6FA9               	movwf	Eeprom_Read@ReadBuffer& (0+255),b
 22115  004F58  0E03               	movlw	high _memoryPreamble
 22116  004F5A  6FAA               	movwf	(Eeprom_Read@ReadBuffer+1)& (0+255),b
 22117  004F5C  0E04               	movlw	4
 22118  004F5E  6FAB               	movwf	Eeprom_Read@DataLength& (0+255),b
 22119  004F60  0E00               	movlw	0
 22120  004F62  ECC0  F02D         	call	_Eeprom_Read
 22121  004F66  0101               	movlb	1	; () banked
 22122  004F68  6F01               	movwf	initEeprom@memoryOpResult& (0+255),b
 22123                           
 22124                           ; BSR set to: 1
 22125                           ;app_init.c: 141: if (memoryOpResult != OP_PENDING)
 22126  004F6A  0E02               	movlw	2
 22127  004F6C  1901               	xorwf	initEeprom@memoryOpResult& (0+255),w,b
 22128  004F6E  B4D8               	btfsc	status,2,c
 22129  004F70  D02E               	goto	l2674
 22130                           
 22131                           ; BSR set to: 1
 22132                           ;app_init.c: 142: {
 22133                           ;app_init.c: 143: if (memoryPreamble[0] == 'U' &&
 22134                           ;app_init.c: 144: memoryPreamble[1] == 'S' &&
 22135                           ;app_init.c: 145: memoryPreamble[2] == 'I' &&
 22136                           ;app_init.c: 146: memoryPreamble[3] == 'M')
 22137  004F72  0E55               	movlw	85
 22138  004F74  0103               	movlb	3	; () banked
 22139  004F76  19AC               	xorwf	_memoryPreamble& (0+255),w,b
 22140  004F78  A4D8               	btfss	status,2,c
 22141  004F7A  D00E               	goto	l2672
 22142                           
 22143                           ; BSR set to: 3
 22144  004F7C  0E53               	movlw	83
 22145  004F7E  19AD               	xorwf	(_memoryPreamble+1)& (0+255),w,b
 22146  004F80  A4D8               	btfss	status,2,c
 22147  004F82  D00A               	goto	l2672
 22148                           
 22149                           ; BSR set to: 3
 22150  004F84  0E49               	movlw	73
 22151  004F86  19AE               	xorwf	(_memoryPreamble+2)& (0+255),w,b
 22152  004F88  A4D8               	btfss	status,2,c
 22153  004F8A  D006               	goto	l2672
 22154                           
 22155                           ; BSR set to: 3
 22156  004F8C  0E4D               	movlw	77
 22157  004F8E  19AF               	xorwf	(_memoryPreamble+3)& (0+255),w,b
 22158  004F90  A4D8               	btfss	status,2,c
 22159  004F92  D002               	goto	l2672
 22160                           
 22161                           ; BSR set to: 3
 22162                           ;app_init.c: 147: {
 22163                           ;app_init.c: 148: currentState = EEPROM_NOT_EMPTY;
 22164  004F94  0E02               	movlw	2
 22165  004F96  D001               	goto	L35
 22166  004F98                     l2672:
 22167                           
 22168                           ;app_init.c: 150: else
 22169                           ;app_init.c: 151: {
 22170                           ;app_init.c: 152: currentState = EEPROM_EMPTY;
 22171                           
 22172                           ; BSR set to: 1
 22173  004F98  0E01               	movlw	1
 22174  004F9A                     L35:
 22175  004F9A  0101               	movlb	1	; () banked
 22176  004F9C  6FD7               	movwf	initEeprom@currentState& (0+255),b
 22177                           
 22178                           ; BSR set to: 1
 22179                           ;app_init.c: 153: }
 22180                           ;app_init.c: 154: }
 22181                           ;app_init.c: 155: break;
 22182                           
 22183                           ; BSR set to: 1
 22184  004F9E  D017               	goto	l2674
 22185  004FA0                     
 22186                           ; BSR set to: 1
 22187                           ;app_init.c: 158: currentState = EEPROM_INIT;
 22188                           
 22189                           ; BSR set to: 1
 22190  004FA0  0E00               	movlw	0
 22191  004FA2  6FD7               	movwf	initEeprom@currentState& (0+255),b
 22192                           
 22193                           ;app_init.c: 159: isInitialized = 1;
 22194  004FA4  0E01               	movlw	1
 22195  004FA6  6F02               	movwf	initEeprom@isInitialized& (0+255),b
 22196                           
 22197                           ;app_init.c: 160: isMemoryEmpty = 1;
 22198  004FA8  0E01               	movlw	1
 22199  004FAA  D005               	goto	L36
 22200  004FAC                     
 22201                           ; BSR set to: 1
 22202                           ;app_init.c: 164: currentState = EEPROM_INIT;
 22203                           
 22204                           ; BSR set to: 1
 22205  004FAC  0E00               	movlw	0
 22206  004FAE  6FD7               	movwf	initEeprom@currentState& (0+255),b
 22207                           
 22208                           ;app_init.c: 165: isInitialized = 1;
 22209  004FB0  0E01               	movlw	1
 22210  004FB2  6F02               	movwf	initEeprom@isInitialized& (0+255),b
 22211                           
 22212                           ;app_init.c: 166: isMemoryEmpty = 0;
 22213  004FB4  0E00               	movlw	0
 22214  004FB6                     L36:
 22215  004FB6  6FFE               	movwf	_isMemoryEmpty& (0+255),b
 22216                           
 22217                           ; BSR set to: 1
 22218                           ;app_init.c: 171: }
 22219                           
 22220                           ; BSR set to: 1
 22221                           ;app_init.c: 170: break;
 22222                           
 22223                           ;app_init.c: 169: default:
 22224                           
 22225                           ;app_init.c: 167: break;
 22226  004FB8  D00A               	goto	l2674
 22227  004FBA                     l2669:
 22228                           
 22229                           ; BSR set to: 1
 22230                           
 22231                           ; BSR set to: 1
 22232  004FBA  51D7               	movf	initEeprom@currentState& (0+255),w,b
 22233                           
 22234                           ; Switch size 1, requested type "space"
 22235                           ; Number of cases is 3, Range of values is 0 to 2
 22236                           ; switch strategies available:
 22237                           ; Name         Instructions Cycles
 22238                           ; simple_byte           10     6 (average)
 22239                           ;	Chosen strategy is simple_byte
 22240  004FBC  0A00               	xorlw	0	; case 0
 22241  004FBE  B4D8               	btfsc	status,2,c
 22242  004FC0  D7C8               	goto	l2670
 22243  004FC2  0A01               	xorlw	1	; case 1
 22244  004FC4  B4D8               	btfsc	status,2,c
 22245  004FC6  D7EC               	goto	l2675
 22246  004FC8  0A03               	xorlw	3	; case 2
 22247  004FCA  B4D8               	btfsc	status,2,c
 22248  004FCC  D7EF               	goto	l2676
 22249  004FCE                     l2674:
 22250                           
 22251                           ; BSR set to: 1
 22252                           ;app_init.c: 172: return isInitialized;
 22253                           
 22254                           ; BSR set to: 1
 22255  004FCE  5102               	movf	initEeprom@isInitialized& (0+255),w,b
 22256  004FD0  0012               	return	
 22257  004FD2                     __end_of_initEeprom:
 22258                           	opt stack 0
 22259                           tosu	equ	0xFFF
 22260                           tosh	equ	0xFFE
 22261                           tosl	equ	0xFFD
 22262                           pclath	equ	0xFFA
 22263                           tblptru	equ	0xFF8
 22264                           tblptrh	equ	0xFF7
 22265                           tblptrl	equ	0xFF6
 22266                           tablat	equ	0xFF5
 22267                           prodh	equ	0xFF4
 22268                           prodl	equ	0xFF3
 22269                           intcon	equ	0xFF2
 22270                           intcon2	equ	0xFF1
 22271                           intcon3	equ	0xFF0
 22272                           indf0	equ	0xFEF
 22273                           postinc0	equ	0xFEE
 22274                           plusw0	equ	0xFEB
 22275                           fsr0h	equ	0xFEA
 22276                           fsr0l	equ	0xFE9
 22277                           wreg	equ	0xFE8
 22278                           indf1	equ	0xFE7
 22279                           postinc1	equ	0xFE6
 22280                           postdec1	equ	0xFE5
 22281                           fsr1h	equ	0xFE2
 22282                           fsr1l	equ	0xFE1
 22283                           indf2	equ	0xFDF
 22284                           postinc2	equ	0xFDE
 22285                           postdec2	equ	0xFDD
 22286                           plusw2	equ	0xFDB
 22287                           fsr2h	equ	0xFDA
 22288                           fsr2l	equ	0xFD9
 22289                           status	equ	0xFD8
 22290                           
 22291 ;; *************** function _detectCmd *****************
 22292 ;; Defined at:
 22293 ;;		line 114 in file "../Source/c/04_App/app.c"
 22294 ;; Parameters:    Size  Location     Type
 22295 ;;		None
 22296 ;; Auto vars:     Size  Location     Type
 22297 ;;  currentState    1   53[BANK0 ] enum E9012
 22298 ;; Return value:  Size  Location     Type
 22299 ;;                  1    wreg      enum E9012
 22300 ;; Registers used:
 22301 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22302 ;; Tracked objects:
 22303 ;;		On entry : 0/0
 22304 ;;		On exit  : 0/0
 22305 ;;		Unchanged: 0/0
 22306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22307 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22308 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22310 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22311 ;;Total ram usage:        1 bytes
 22312 ;; Hardware stack levels used:    1
 22313 ;; Hardware stack levels required when called:   14
 22314 ;; This function calls:
 22315 ;;		_GetCallerNumber
 22316 ;;		_GetLastInteractionNumber
 22317 ;;		_Mdm_GetSmsData
 22318 ;;		_Mdm_HangPhoneCall
 22319 ;;		_Mdm_IsRinging
 22320 ;;		_Mdm_IsSmsReceived
 22321 ;;		_Mdm_RequestSmsData
 22322 ;;		_StringCopy
 22323 ;;		_Uart_WriteConstString
 22324 ;;		_parseCommand
 22325 ;; This function is called by:
 22326 ;;		_MyApp_Task
 22327 ;; This function uses a non-reentrant model
 22328 ;;
 22329                           
 22330                           	psect	text101
 22331  0049FE                     __ptext101:
 22332                           	opt stack 0
 22333  0049FE                     _detectCmd:
 22334                           	opt stack 13
 22335                           
 22336                           ;app.c: 116: gateFsmStates currentState = GATE_WAIT_EVENT;
 22337                           
 22338                           ; BSR set to: 1
 22339                           ;incstack = 0
 22340  0049FE  0E01               	movlw	1
 22341  004A00  0100               	movlb	0	; () banked
 22342  004A02  6F95               	movwf	detectCmd@currentState& (0+255),b
 22343                           
 22344                           ; BSR set to: 0
 22345                           ;app.c: 117: if (Mdm_IsSmsReceived())
 22346  004A04  EC71  F033         	call	_Mdm_IsSmsReceived	;wreg free
 22347  004A08  0900               	iorlw	0
 22348  004A0A  A4D8               	btfss	status,2,c
 22349                           
 22350                           ;app.c: 118: {
 22351                           ;app.c: 119: Mdm_RequestSmsData();
 22352  004A0C  EC3F  F035         	call	_Mdm_RequestSmsData	;wreg free
 22353                           
 22354                           ;app.c: 120: }
 22355                           ;app.c: 121: if (Mdm_GetSmsData(smsText) == SmsDataReady)
 22356  004A10  0E93               	movlw	low _smsText
 22357  004A12  0100               	movlb	0	; () banked
 22358  004A14  6F8F               	movwf	Mdm_GetSmsData@MessageText& (0+255),b
 22359  004A16  0E04               	movlw	high _smsText
 22360  004A18  6F90               	movwf	(Mdm_GetSmsData@MessageText+1)& (0+255),b
 22361  004A1A  EC07  F02B         	call	_Mdm_GetSmsData	;wreg free
 22362  004A1E  06E8               	decf	wreg,f,c
 22363  004A20  A4D8               	btfss	status,2,c
 22364  004A22  D01D               	goto	l2584
 22365                           
 22366                           ;app.c: 122: {
 22367                           ;app.c: 123: Uart_WriteConstString(1,"AT+CMGD=1,0\r\n");
 22368  004A24  0E2F               	movlw	low STR_29
 22369  004A26  0100               	movlb	0	; () banked
 22370  004A28  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 22371  004A2A  0EFF               	movlw	high STR_29
 22372  004A2C  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 22373  004A2E  0E01               	movlw	1
 22374  004A30  EC98  F030         	call	_Uart_WriteConstString
 22375                           
 22376                           ;app.c: 124: currentState = parseCommand();
 22377  004A34  ECA4  F017         	call	_parseCommand	;wreg free
 22378  004A38  0100               	movlb	0	; () banked
 22379  004A3A  6F95               	movwf	detectCmd@currentState& (0+255),b
 22380                           
 22381                           ; BSR set to: 0
 22382                           ;app.c: 125: StringCopy(GetLastInteractionNumber(), receivedNumber, ((UINT8)(13)));
 22383  004A3C  EC6B  F035         	call	_GetLastInteractionNumber	;wreg free
 22384  004A40  C07D  F085         	movff	?_GetLastInteractionNumber,StringCopy@SourceStr
 22385  004A44  C07E  F086         	movff	?_GetLastInteractionNumber+1,StringCopy@SourceStr+1
 22386  004A48  0ECA               	movlw	low _receivedNumber
 22387  004A4A  0100               	movlb	0	; () banked
 22388  004A4C  6F87               	movwf	StringCopy@DestStr& (0+255),b
 22389  004A4E  0E04               	movlw	high _receivedNumber
 22390  004A50  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 22391  004A52  0E00               	movlw	0
 22392  004A54  6F8A               	movwf	(StringCopy@Len+1)& (0+255),b
 22393  004A56  0E0D               	movlw	13
 22394  004A58  6F89               	movwf	StringCopy@Len& (0+255),b
 22395  004A5A  ECD4  F02B         	call	_StringCopy	;wreg free
 22396  004A5E                     l2584:
 22397                           
 22398                           ;app.c: 126: }
 22399                           ;app.c: 127: if (Mdm_IsRinging())
 22400  004A5E  EC83  F033         	call	_Mdm_IsRinging	;wreg free
 22401  004A62  0900               	iorlw	0
 22402  004A64  B4D8               	btfsc	status,2,c
 22403  004A66  D016               	goto	l2585
 22404                           
 22405                           ;app.c: 128: {
 22406                           ;app.c: 129: Mdm_HangPhoneCall();
 22407  004A68  EC1D  F035         	call	_Mdm_HangPhoneCall	;wreg free
 22408                           
 22409                           ;app.c: 130: currentState = GATE_TRIGGER_CMD;
 22410  004A6C  0E04               	movlw	4
 22411  004A6E  0100               	movlb	0	; () banked
 22412  004A70  6F95               	movwf	detectCmd@currentState& (0+255),b
 22413                           
 22414                           ; BSR set to: 0
 22415                           ;app.c: 131: StringCopy(GetCallerNumber(), receivedNumber, ((UINT8)(13)));
 22416  004A72  ECE8  F031         	call	_GetCallerNumber	;wreg free
 22417  004A76  C083  F085         	movff	?_GetCallerNumber,StringCopy@SourceStr
 22418  004A7A  C084  F086         	movff	?_GetCallerNumber+1,StringCopy@SourceStr+1
 22419  004A7E  0ECA               	movlw	low _receivedNumber
 22420  004A80  0100               	movlb	0	; () banked
 22421  004A82  6F87               	movwf	StringCopy@DestStr& (0+255),b
 22422  004A84  0E04               	movlw	high _receivedNumber
 22423  004A86  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 22424  004A88  0E00               	movlw	0
 22425  004A8A  6F8A               	movwf	(StringCopy@Len+1)& (0+255),b
 22426  004A8C  0E0D               	movlw	13
 22427  004A8E  6F89               	movwf	StringCopy@Len& (0+255),b
 22428  004A90  ECD4  F02B         	call	_StringCopy	;wreg free
 22429  004A94                     l2585:
 22430                           
 22431                           ;app.c: 132: }
 22432                           ;app.c: 133: return currentState;
 22433  004A94  0100               	movlb	0	; () banked
 22434  004A96  5195               	movf	detectCmd@currentState& (0+255),w,b
 22435  004A98  0012               	return	
 22436  004A9A                     __end_of_detectCmd:
 22437                           	opt stack 0
 22438                           tosu	equ	0xFFF
 22439                           tosh	equ	0xFFE
 22440                           tosl	equ	0xFFD
 22441                           pclath	equ	0xFFA
 22442                           tblptru	equ	0xFF8
 22443                           tblptrh	equ	0xFF7
 22444                           tblptrl	equ	0xFF6
 22445                           tablat	equ	0xFF5
 22446                           prodh	equ	0xFF4
 22447                           prodl	equ	0xFF3
 22448                           intcon	equ	0xFF2
 22449                           intcon2	equ	0xFF1
 22450                           intcon3	equ	0xFF0
 22451                           indf0	equ	0xFEF
 22452                           postinc0	equ	0xFEE
 22453                           plusw0	equ	0xFEB
 22454                           fsr0h	equ	0xFEA
 22455                           fsr0l	equ	0xFE9
 22456                           wreg	equ	0xFE8
 22457                           indf1	equ	0xFE7
 22458                           postinc1	equ	0xFE6
 22459                           postdec1	equ	0xFE5
 22460                           fsr1h	equ	0xFE2
 22461                           fsr1l	equ	0xFE1
 22462                           indf2	equ	0xFDF
 22463                           postinc2	equ	0xFDE
 22464                           postdec2	equ	0xFDD
 22465                           plusw2	equ	0xFDB
 22466                           fsr2h	equ	0xFDA
 22467                           fsr2l	equ	0xFD9
 22468                           status	equ	0xFD8
 22469                           
 22470 ;; *************** function _parseCommand *****************
 22471 ;; Defined at:
 22472 ;;		line 74 in file "../Source/c/04_App/app.c"
 22473 ;; Parameters:    Size  Location     Type
 22474 ;;		None
 22475 ;; Auto vars:     Size  Location     Type
 22476 ;;  resetCmd        4   48[BANK0 ] const unsigned char [4]
 22477 ;;  deleteNumber    4   44[BANK0 ] const unsigned char [4]
 22478 ;;  addNumberCmd    4   40[BANK0 ] const unsigned char [4]
 22479 ;;  state           1   52[BANK0 ] enum E9012
 22480 ;; Return value:  Size  Location     Type
 22481 ;;                  1    wreg      enum E9012
 22482 ;; Registers used:
 22483 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22484 ;; Tracked objects:
 22485 ;;		On entry : 0/0
 22486 ;;		On exit  : 0/0
 22487 ;;		Unchanged: 0/0
 22488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22489 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22490 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22491 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22492 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22493 ;;Total ram usage:       13 bytes
 22494 ;; Hardware stack levels used:    1
 22495 ;; Hardware stack levels required when called:   12
 22496 ;; This function calls:
 22497 ;;		_StringCompare
 22498 ;;		_isNumberValid
 22499 ;; This function is called by:
 22500 ;;		_detectCmd
 22501 ;; This function uses a non-reentrant model
 22502 ;;
 22503                           
 22504                           	psect	text102
 22505  002F48                     __ptext102:
 22506                           	opt stack 0
 22507  002F48                     _parseCommand:
 22508                           	opt stack 14
 22509                           
 22510                           ;app.c: 76: const uint8_t addNumberCmd[] = {'A', 'D', 'D', ';'};
 22511                           
 22512                           ; BSR set to: 0
 22513                           ;incstack = 0
 22514  002F48  0E2A               	movlw	low parseCommand@F9026
 22515  002F4A  6EF6               	movwf	tblptrl,c
 22516  002F4C                     	if	1	;There is more than 1 active tblptr byte
 22517  002F4C  0EFC               	movlw	high parseCommand@F9026
 22518  002F4E  6EF7               	movwf	tblptrh,c
 22519  002F50                     	endif
 22520  002F50                     	if	0	;There are less than 3 active tblptr bytes
 22521  002F50                     	endif
 22522  002F50  0009               	tblrd		*+
 22523  002F52  CFF5 F088          	movff	tablat,parseCommand@addNumberCmd
 22524  002F56  0009               	tblrd		*+
 22525  002F58  CFF5 F089          	movff	tablat,parseCommand@addNumberCmd+1
 22526  002F5C  0009               	tblrd		*+
 22527  002F5E  CFF5 F08A          	movff	tablat,parseCommand@addNumberCmd+2
 22528  002F62  000A               	tblrd		*-
 22529  002F64  CFF5 F08B          	movff	tablat,parseCommand@addNumberCmd+3
 22530                           
 22531                           ;app.c: 77: const uint8_t deleteNumberCmd[] = {'D', 'E', 'L', ';'};
 22532  002F68  0E26               	movlw	low parseCommand@F9028
 22533  002F6A  6EF6               	movwf	tblptrl,c
 22534  002F6C                     	if	1	;There is more than 1 active tblptr byte
 22535  002F6C  0EFC               	movlw	high parseCommand@F9028
 22536  002F6E  6EF7               	movwf	tblptrh,c
 22537  002F70                     	endif
 22538  002F70                     	if	0	;There are less than 3 active tblptr bytes
 22539  002F70                     	endif
 22540  002F70  0009               	tblrd		*+
 22541  002F72  CFF5 F08C          	movff	tablat,parseCommand@deleteNumberCmd
 22542  002F76  0009               	tblrd		*+
 22543  002F78  CFF5 F08D          	movff	tablat,parseCommand@deleteNumberCmd+1
 22544  002F7C  0009               	tblrd		*+
 22545  002F7E  CFF5 F08E          	movff	tablat,parseCommand@deleteNumberCmd+2
 22546  002F82  000A               	tblrd		*-
 22547  002F84  CFF5 F08F          	movff	tablat,parseCommand@deleteNumberCmd+3
 22548                           
 22549                           ;app.c: 78: const uint8_t resetCmd[] = {'R', 'E', 'S', ';'};
 22550  002F88  0E22               	movlw	low parseCommand@F9030
 22551  002F8A  6EF6               	movwf	tblptrl,c
 22552  002F8C                     	if	1	;There is more than 1 active tblptr byte
 22553  002F8C  0EFC               	movlw	high parseCommand@F9030
 22554  002F8E  6EF7               	movwf	tblptrh,c
 22555  002F90                     	endif
 22556  002F90                     	if	0	;There are less than 3 active tblptr bytes
 22557  002F90                     	endif
 22558  002F90  0009               	tblrd		*+
 22559  002F92  CFF5 F090          	movff	tablat,parseCommand@resetCmd
 22560  002F96  0009               	tblrd		*+
 22561  002F98  CFF5 F091          	movff	tablat,parseCommand@resetCmd+1
 22562  002F9C  0009               	tblrd		*+
 22563  002F9E  CFF5 F092          	movff	tablat,parseCommand@resetCmd+2
 22564  002FA2  000A               	tblrd		*-
 22565  002FA4  CFF5 F093          	movff	tablat,parseCommand@resetCmd+3
 22566                           
 22567                           ;app.c: 79: gateFsmStates state = GATE_WAIT_EVENT;
 22568  002FA8  0E01               	movlw	1
 22569  002FAA  0100               	movlb	0	; () banked
 22570  002FAC  6F94               	movwf	parseCommand@state& (0+255),b
 22571                           
 22572                           ; BSR set to: 0
 22573                           ;app.c: 81: if (StringCompare(smsText, addNumberCmd, sizeof(addNumberCmd)))
 22574  002FAE  0E93               	movlw	low _smsText
 22575  002FB0  6F7D               	movwf	StringCompare@String1& (0+255),b
 22576  002FB2  0E04               	movlw	high _smsText
 22577  002FB4  6F7E               	movwf	(StringCompare@String1+1)& (0+255),b
 22578  002FB6  0E88               	movlw	low parseCommand@addNumberCmd
 22579  002FB8  6F7F               	movwf	StringCompare@String2& (0+255),b
 22580  002FBA  0E00               	movlw	high parseCommand@addNumberCmd
 22581  002FBC  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 22582  002FBE  0E00               	movlw	0
 22583  002FC0  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 22584  002FC2  0E04               	movlw	4
 22585  002FC4  6F81               	movwf	StringCompare@Len& (0+255),b
 22586  002FC6  EC67  F02E         	call	_StringCompare	;wreg free
 22587  002FCA  0900               	iorlw	0
 22588  002FCC  B4D8               	btfsc	status,2,c
 22589  002FCE  D00E               	goto	l2570
 22590                           
 22591                           ;app.c: 82: {
 22592                           ;app.c: 83: if (!isNumberValid(smsText + 4))
 22593  002FD0  0E97               	movlw	low (_smsText+4)
 22594  002FD2  0100               	movlb	0	; () banked
 22595  002FD4  6F7D               	movwf	isNumberValid@phoneNumber& (0+255),b
 22596  002FD6  0E04               	movlw	high (_smsText+4)
 22597  002FD8  6F7E               	movwf	(isNumberValid@phoneNumber+1)& (0+255),b
 22598  002FDA  ECA1  F02B         	call	_isNumberValid	;wreg free
 22599  002FDE  0900               	iorlw	0
 22600  002FE0  A4D8               	btfss	status,2,c
 22601  002FE2  D002               	goto	l2571
 22602  002FE4                     u14430:
 22603                           
 22604                           ;app.c: 84: {
 22605                           ;app.c: 85: state = GATE_WAIT_EVENT;
 22606  002FE4  0E01               	movlw	1
 22607  002FE6  D033               	goto	L40
 22608  002FE8                     l2571:
 22609                           
 22610                           ;app.c: 87: else
 22611                           ;app.c: 88: {
 22612                           ;app.c: 89: state = GATE_ADD_CMD;
 22613                           
 22614                           ; BSR set to: 0
 22615  002FE8  0E02               	movlw	2
 22616  002FEA  D031               	goto	L40
 22617  002FEC                     l2570:
 22618                           
 22619                           ;app.c: 92: else if (StringCompare(smsText, deleteNumberCmd, sizeof(deleteNumberCmd)))
 22620                           
 22621                           ; BSR set to: 0
 22622  002FEC  0E93               	movlw	low _smsText
 22623  002FEE  0100               	movlb	0	; () banked
 22624  002FF0  6F7D               	movwf	StringCompare@String1& (0+255),b
 22625  002FF2  0E04               	movlw	high _smsText
 22626  002FF4  6F7E               	movwf	(StringCompare@String1+1)& (0+255),b
 22627  002FF6  0E8C               	movlw	low parseCommand@deleteNumberCmd
 22628  002FF8  6F7F               	movwf	StringCompare@String2& (0+255),b
 22629  002FFA  0E00               	movlw	high parseCommand@deleteNumberCmd
 22630  002FFC  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 22631  002FFE  0E00               	movlw	0
 22632  003000  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 22633  003002  0E04               	movlw	4
 22634  003004  6F81               	movwf	StringCompare@Len& (0+255),b
 22635  003006  EC67  F02E         	call	_StringCompare	;wreg free
 22636  00300A  0900               	iorlw	0
 22637  00300C  B4D8               	btfsc	status,2,c
 22638  00300E  D00C               	goto	l2574
 22639                           
 22640                           ;app.c: 93: {
 22641                           ;app.c: 94: if (!isNumberValid(smsText + 4))
 22642  003010  0E97               	movlw	low (_smsText+4)
 22643  003012  0100               	movlb	0	; () banked
 22644  003014  6F7D               	movwf	isNumberValid@phoneNumber& (0+255),b
 22645  003016  0E04               	movlw	high (_smsText+4)
 22646  003018  6F7E               	movwf	(isNumberValid@phoneNumber+1)& (0+255),b
 22647  00301A  ECA1  F02B         	call	_isNumberValid	;wreg free
 22648  00301E  0900               	iorlw	0
 22649  003020  B4D8               	btfsc	status,2,c
 22650  003022  D7E0               	goto	u14430
 22651                           
 22652                           ;app.c: 98: else
 22653                           ;app.c: 99: {
 22654                           ;app.c: 100: state = GATE_DEL_CMD;
 22655                           
 22656                           ; BSR set to: 0
 22657                           
 22658                           ;app.c: 97: }
 22659                           
 22660                           ;app.c: 95: {
 22661                           ;app.c: 96: state = GATE_WAIT_EVENT;
 22662  003024  0E03               	movlw	3
 22663  003026  D013               	goto	L40
 22664  003028                     l2574:
 22665                           
 22666                           ;app.c: 103: else if (StringCompare(smsText, resetCmd, sizeof(resetCmd)))
 22667                           
 22668                           ; BSR set to: 0
 22669  003028  0E93               	movlw	low _smsText
 22670  00302A  0100               	movlb	0	; () banked
 22671  00302C  6F7D               	movwf	StringCompare@String1& (0+255),b
 22672  00302E  0E04               	movlw	high _smsText
 22673  003030  6F7E               	movwf	(StringCompare@String1+1)& (0+255),b
 22674  003032  0E90               	movlw	low parseCommand@resetCmd
 22675  003034  6F7F               	movwf	StringCompare@String2& (0+255),b
 22676  003036  0E00               	movlw	high parseCommand@resetCmd
 22677  003038  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 22678  00303A  0E00               	movlw	0
 22679  00303C  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 22680  00303E  0E04               	movlw	4
 22681  003040  6F81               	movwf	StringCompare@Len& (0+255),b
 22682  003042  EC67  F02E         	call	_StringCompare	;wreg free
 22683  003046  0900               	iorlw	0
 22684  003048  B4D8               	btfsc	status,2,c
 22685  00304A  D003               	goto	l2578
 22686                           
 22687                           ;app.c: 104: {
 22688                           ;app.c: 105: state = GATE_RESET;
 22689  00304C  0E05               	movlw	5
 22690  00304E                     L40:
 22691  00304E  0100               	movlb	0	; () banked
 22692  003050  6F94               	movwf	parseCommand@state& (0+255),b
 22693  003052                     l2578:
 22694                           
 22695                           ;app.c: 110: }
 22696                           ;app.c: 111: return state;
 22697                           
 22698                           ; BSR set to: 0
 22699                           
 22700                           ; BSR set to: 0
 22701                           
 22702                           ; BSR set to: 0
 22703                           
 22704                           ;app.c: 107: else
 22705                           ;app.c: 108: {
 22706                           
 22707                           ; BSR set to: 0
 22708  003052  0100               	movlb	0	; () banked
 22709  003054  5194               	movf	parseCommand@state& (0+255),w,b
 22710  003056  0012               	return	
 22711  003058                     __end_of_parseCommand:
 22712                           	opt stack 0
 22713                           tosu	equ	0xFFF
 22714                           tosh	equ	0xFFE
 22715                           tosl	equ	0xFFD
 22716                           pclath	equ	0xFFA
 22717                           tblptru	equ	0xFF8
 22718                           tblptrh	equ	0xFF7
 22719                           tblptrl	equ	0xFF6
 22720                           tablat	equ	0xFF5
 22721                           prodh	equ	0xFF4
 22722                           prodl	equ	0xFF3
 22723                           intcon	equ	0xFF2
 22724                           intcon2	equ	0xFF1
 22725                           intcon3	equ	0xFF0
 22726                           indf0	equ	0xFEF
 22727                           postinc0	equ	0xFEE
 22728                           plusw0	equ	0xFEB
 22729                           fsr0h	equ	0xFEA
 22730                           fsr0l	equ	0xFE9
 22731                           wreg	equ	0xFE8
 22732                           indf1	equ	0xFE7
 22733                           postinc1	equ	0xFE6
 22734                           postdec1	equ	0xFE5
 22735                           fsr1h	equ	0xFE2
 22736                           fsr1l	equ	0xFE1
 22737                           indf2	equ	0xFDF
 22738                           postinc2	equ	0xFDE
 22739                           postdec2	equ	0xFDD
 22740                           plusw2	equ	0xFDB
 22741                           fsr2h	equ	0xFDA
 22742                           fsr2l	equ	0xFD9
 22743                           status	equ	0xFD8
 22744                           
 22745 ;; *************** function _Mdm_RequestSmsData *****************
 22746 ;; Defined at:
 22747 ;;		line 877 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 22748 ;; Parameters:    Size  Location     Type
 22749 ;;		None
 22750 ;; Auto vars:     Size  Location     Type
 22751 ;;		None
 22752 ;; Return value:  Size  Location     Type
 22753 ;;                  1    wreg      void 
 22754 ;; Registers used:
 22755 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 22756 ;; Tracked objects:
 22757 ;;		On entry : 0/0
 22758 ;;		On exit  : 0/0
 22759 ;;		Unchanged: 0/0
 22760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22761 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22762 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22764 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22765 ;;Total ram usage:        0 bytes
 22766 ;; Hardware stack levels used:    1
 22767 ;; Hardware stack levels required when called:   12
 22768 ;; This function calls:
 22769 ;;		_GenerateEvt
 22770 ;; This function is called by:
 22771 ;;		_detectCmd
 22772 ;; This function uses a non-reentrant model
 22773 ;;
 22774                           
 22775                           	psect	text103
 22776  006A7E                     __ptext103:
 22777                           	opt stack 0
 22778  006A7E                     _Mdm_RequestSmsData:
 22779                           	opt stack 14
 22780                           
 22781                           ;mdm_gsm_gprs.c: 880: GenerateEvt(&GetSmsText);
 22782                           
 22783                           ; BSR set to: 0
 22784                           ;incstack = 0
 22785  006A7E  0EDB               	movlw	low _GetSmsText
 22786  006A80  0100               	movlb	0	; () banked
 22787  006A82  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 22788  006A84  0E00               	movlw	high _GetSmsText
 22789  006A86  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 22790  006A88  ECD2  F034         	call	_GenerateEvt	;wreg free
 22791  006A8C  0012               	return		;funcret
 22792  006A8E                     __end_of_Mdm_RequestSmsData:
 22793                           	opt stack 0
 22794                           tosu	equ	0xFFF
 22795                           tosh	equ	0xFFE
 22796                           tosl	equ	0xFFD
 22797                           pclath	equ	0xFFA
 22798                           tblptru	equ	0xFF8
 22799                           tblptrh	equ	0xFF7
 22800                           tblptrl	equ	0xFF6
 22801                           tablat	equ	0xFF5
 22802                           prodh	equ	0xFF4
 22803                           prodl	equ	0xFF3
 22804                           intcon	equ	0xFF2
 22805                           intcon2	equ	0xFF1
 22806                           intcon3	equ	0xFF0
 22807                           indf0	equ	0xFEF
 22808                           postinc0	equ	0xFEE
 22809                           plusw0	equ	0xFEB
 22810                           fsr0h	equ	0xFEA
 22811                           fsr0l	equ	0xFE9
 22812                           wreg	equ	0xFE8
 22813                           indf1	equ	0xFE7
 22814                           postinc1	equ	0xFE6
 22815                           postdec1	equ	0xFE5
 22816                           fsr1h	equ	0xFE2
 22817                           fsr1l	equ	0xFE1
 22818                           indf2	equ	0xFDF
 22819                           postinc2	equ	0xFDE
 22820                           postdec2	equ	0xFDD
 22821                           plusw2	equ	0xFDB
 22822                           fsr2h	equ	0xFDA
 22823                           fsr2l	equ	0xFD9
 22824                           status	equ	0xFD8
 22825                           
 22826 ;; *************** function _Mdm_IsSmsReceived *****************
 22827 ;; Defined at:
 22828 ;;		line 941 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 22829 ;; Parameters:    Size  Location     Type
 22830 ;;		None
 22831 ;; Auto vars:     Size  Location     Type
 22832 ;;  Ret             1   33[BANK0 ] enum E8930
 22833 ;; Return value:  Size  Location     Type
 22834 ;;                  1    wreg      enum E8930
 22835 ;; Registers used:
 22836 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 22837 ;; Tracked objects:
 22838 ;;		On entry : 0/0
 22839 ;;		On exit  : 0/0
 22840 ;;		Unchanged: 0/0
 22841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22842 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22843 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22845 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22846 ;;Total ram usage:        1 bytes
 22847 ;; Hardware stack levels used:    1
 22848 ;; Hardware stack levels required when called:   12
 22849 ;; This function calls:
 22850 ;;		_ReceiveEvt
 22851 ;; This function is called by:
 22852 ;;		_detectCmd
 22853 ;; This function uses a non-reentrant model
 22854 ;;
 22855                           
 22856                           	psect	text104
 22857  0066E2                     __ptext104:
 22858                           	opt stack 0
 22859  0066E2                     _Mdm_IsSmsReceived:
 22860                           	opt stack 14
 22861                           
 22862                           ;mdm_gsm_gprs.c: 943: SmsRxStsType Ret = SmsNotReceived;
 22863                           
 22864                           ;incstack = 0
 22865  0066E2  0E00               	movlw	0
 22866  0066E4  0100               	movlb	0	; () banked
 22867  0066E6  6F81               	movwf	Mdm_IsSmsReceived@Ret& (0+255),b
 22868                           
 22869                           ; BSR set to: 0
 22870                           ;mdm_gsm_gprs.c: 946: if (ReceiveEvt(&SmsEvent))
 22871  0066E8  0EDC               	movlw	low _SmsEvent
 22872  0066EA  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 22873  0066EC  0E00               	movlw	high _SmsEvent
 22874  0066EE  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 22875  0066F0  ECE1  F032         	call	_ReceiveEvt	;wreg free
 22876  0066F4  0900               	iorlw	0
 22877  0066F6  B4D8               	btfsc	status,2,c
 22878  0066F8  D003               	goto	l1136
 22879                           
 22880                           ;mdm_gsm_gprs.c: 947: {
 22881                           ;mdm_gsm_gprs.c: 948: Ret = SmsReceived;
 22882  0066FA  0E01               	movlw	1
 22883  0066FC  0100               	movlb	0	; () banked
 22884  0066FE  6F81               	movwf	Mdm_IsSmsReceived@Ret& (0+255),b
 22885  006700                     l1136:
 22886                           
 22887                           ;mdm_gsm_gprs.c: 949: }
 22888                           ;mdm_gsm_gprs.c: 951: return Ret;
 22889  006700  0100               	movlb	0	; () banked
 22890  006702  5181               	movf	Mdm_IsSmsReceived@Ret& (0+255),w,b
 22891  006704  0012               	return	
 22892  006706                     __end_of_Mdm_IsSmsReceived:
 22893                           	opt stack 0
 22894                           tosu	equ	0xFFF
 22895                           tosh	equ	0xFFE
 22896                           tosl	equ	0xFFD
 22897                           pclath	equ	0xFFA
 22898                           tblptru	equ	0xFF8
 22899                           tblptrh	equ	0xFF7
 22900                           tblptrl	equ	0xFF6
 22901                           tablat	equ	0xFF5
 22902                           prodh	equ	0xFF4
 22903                           prodl	equ	0xFF3
 22904                           intcon	equ	0xFF2
 22905                           intcon2	equ	0xFF1
 22906                           intcon3	equ	0xFF0
 22907                           indf0	equ	0xFEF
 22908                           postinc0	equ	0xFEE
 22909                           plusw0	equ	0xFEB
 22910                           fsr0h	equ	0xFEA
 22911                           fsr0l	equ	0xFE9
 22912                           wreg	equ	0xFE8
 22913                           indf1	equ	0xFE7
 22914                           postinc1	equ	0xFE6
 22915                           postdec1	equ	0xFE5
 22916                           fsr1h	equ	0xFE2
 22917                           fsr1l	equ	0xFE1
 22918                           indf2	equ	0xFDF
 22919                           postinc2	equ	0xFDE
 22920                           postdec2	equ	0xFDD
 22921                           plusw2	equ	0xFDB
 22922                           fsr2h	equ	0xFDA
 22923                           fsr2l	equ	0xFD9
 22924                           status	equ	0xFD8
 22925                           
 22926 ;; *************** function _Mdm_IsRinging *****************
 22927 ;; Defined at:
 22928 ;;		line 1024 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 22929 ;; Parameters:    Size  Location     Type
 22930 ;;		None
 22931 ;; Auto vars:     Size  Location     Type
 22932 ;;  Ret             1   33[BANK0 ] enum E8926
 22933 ;; Return value:  Size  Location     Type
 22934 ;;                  1    wreg      enum E8926
 22935 ;; Registers used:
 22936 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 22937 ;; Tracked objects:
 22938 ;;		On entry : 0/0
 22939 ;;		On exit  : 0/0
 22940 ;;		Unchanged: 0/0
 22941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22942 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22943 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22945 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22946 ;;Total ram usage:        1 bytes
 22947 ;; Hardware stack levels used:    1
 22948 ;; Hardware stack levels required when called:   12
 22949 ;; This function calls:
 22950 ;;		_ReceiveEvt
 22951 ;; This function is called by:
 22952 ;;		_detectCmd
 22953 ;;		_getSetupCall
 22954 ;; This function uses a non-reentrant model
 22955 ;;
 22956                           
 22957                           	psect	text105
 22958  006706                     __ptext105:
 22959                           	opt stack 0
 22960  006706                     _Mdm_IsRinging:
 22961                           	opt stack 12
 22962                           
 22963                           ;mdm_gsm_gprs.c: 1026: RingStsType Ret = PhoneNotRinging;
 22964                           
 22965                           ; BSR set to: 0
 22966                           ;incstack = 0
 22967  006706  0E00               	movlw	0
 22968  006708  0100               	movlb	0	; () banked
 22969  00670A  6F81               	movwf	Mdm_IsRinging@Ret& (0+255),b
 22970                           
 22971                           ; BSR set to: 0
 22972                           ;mdm_gsm_gprs.c: 1029: if (ReceiveEvt(&RingEvent))
 22973  00670C  0EDE               	movlw	low _RingEvent
 22974  00670E  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 22975  006710  0E00               	movlw	high _RingEvent
 22976  006712  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 22977  006714  ECE1  F032         	call	_ReceiveEvt	;wreg free
 22978  006718  0900               	iorlw	0
 22979  00671A  B4D8               	btfsc	status,2,c
 22980  00671C  D003               	goto	l1152
 22981                           
 22982                           ;mdm_gsm_gprs.c: 1030: {
 22983                           ;mdm_gsm_gprs.c: 1031: Ret = PhoneRinging;
 22984  00671E  0E01               	movlw	1
 22985  006720  0100               	movlb	0	; () banked
 22986  006722  6F81               	movwf	Mdm_IsRinging@Ret& (0+255),b
 22987  006724                     l1152:
 22988                           
 22989                           ;mdm_gsm_gprs.c: 1032: }
 22990                           ;mdm_gsm_gprs.c: 1034: return Ret;
 22991  006724  0100               	movlb	0	; () banked
 22992  006726  5181               	movf	Mdm_IsRinging@Ret& (0+255),w,b
 22993  006728  0012               	return	
 22994  00672A                     __end_of_Mdm_IsRinging:
 22995                           	opt stack 0
 22996                           tosu	equ	0xFFF
 22997                           tosh	equ	0xFFE
 22998                           tosl	equ	0xFFD
 22999                           pclath	equ	0xFFA
 23000                           tblptru	equ	0xFF8
 23001                           tblptrh	equ	0xFF7
 23002                           tblptrl	equ	0xFF6
 23003                           tablat	equ	0xFF5
 23004                           prodh	equ	0xFF4
 23005                           prodl	equ	0xFF3
 23006                           intcon	equ	0xFF2
 23007                           intcon2	equ	0xFF1
 23008                           intcon3	equ	0xFF0
 23009                           indf0	equ	0xFEF
 23010                           postinc0	equ	0xFEE
 23011                           plusw0	equ	0xFEB
 23012                           fsr0h	equ	0xFEA
 23013                           fsr0l	equ	0xFE9
 23014                           wreg	equ	0xFE8
 23015                           indf1	equ	0xFE7
 23016                           postinc1	equ	0xFE6
 23017                           postdec1	equ	0xFE5
 23018                           fsr1h	equ	0xFE2
 23019                           fsr1l	equ	0xFE1
 23020                           indf2	equ	0xFDF
 23021                           postinc2	equ	0xFDE
 23022                           postdec2	equ	0xFDD
 23023                           plusw2	equ	0xFDB
 23024                           fsr2h	equ	0xFDA
 23025                           fsr2l	equ	0xFD9
 23026                           status	equ	0xFD8
 23027                           
 23028 ;; *************** function _Mdm_HangPhoneCall *****************
 23029 ;; Defined at:
 23030 ;;		line 996 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 23031 ;; Parameters:    Size  Location     Type
 23032 ;;		None
 23033 ;; Auto vars:     Size  Location     Type
 23034 ;;		None
 23035 ;; Return value:  Size  Location     Type
 23036 ;;                  1    wreg      void 
 23037 ;; Registers used:
 23038 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 23039 ;; Tracked objects:
 23040 ;;		On entry : 0/0
 23041 ;;		On exit  : 0/0
 23042 ;;		Unchanged: 0/0
 23043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23044 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23045 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23046 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23047 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23048 ;;Total ram usage:        0 bytes
 23049 ;; Hardware stack levels used:    1
 23050 ;; Hardware stack levels required when called:   13
 23051 ;; This function calls:
 23052 ;;		_Uart_WriteConstString
 23053 ;; This function is called by:
 23054 ;;		_detectCmd
 23055 ;;		_getSetupCall
 23056 ;; This function uses a non-reentrant model
 23057 ;;
 23058                           
 23059                           	psect	text106
 23060  006A3A                     __ptext106:
 23061                           	opt stack 0
 23062  006A3A                     _Mdm_HangPhoneCall:
 23063                           	opt stack 11
 23064                           
 23065                           ;mdm_gsm_gprs.c: 999: Uart_WriteConstString(1, "ATH\r");
 23066                           
 23067                           ; BSR set to: 0
 23068                           ;incstack = 0
 23069  006A3A  0EF0               	movlw	low STR_6
 23070  006A3C  0100               	movlb	0	; () banked
 23071  006A3E  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 23072  006A40  0EFF               	movlw	high STR_6
 23073  006A42  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 23074  006A44  0E01               	movlw	1
 23075  006A46  EC98  F030         	call	_Uart_WriteConstString
 23076  006A4A  0012               	return		;funcret
 23077  006A4C                     __end_of_Mdm_HangPhoneCall:
 23078                           	opt stack 0
 23079                           tosu	equ	0xFFF
 23080                           tosh	equ	0xFFE
 23081                           tosl	equ	0xFFD
 23082                           pclath	equ	0xFFA
 23083                           tblptru	equ	0xFF8
 23084                           tblptrh	equ	0xFF7
 23085                           tblptrl	equ	0xFF6
 23086                           tablat	equ	0xFF5
 23087                           prodh	equ	0xFF4
 23088                           prodl	equ	0xFF3
 23089                           intcon	equ	0xFF2
 23090                           intcon2	equ	0xFF1
 23091                           intcon3	equ	0xFF0
 23092                           indf0	equ	0xFEF
 23093                           postinc0	equ	0xFEE
 23094                           plusw0	equ	0xFEB
 23095                           fsr0h	equ	0xFEA
 23096                           fsr0l	equ	0xFE9
 23097                           wreg	equ	0xFE8
 23098                           indf1	equ	0xFE7
 23099                           postinc1	equ	0xFE6
 23100                           postdec1	equ	0xFE5
 23101                           fsr1h	equ	0xFE2
 23102                           fsr1l	equ	0xFE1
 23103                           indf2	equ	0xFDF
 23104                           postinc2	equ	0xFDE
 23105                           postdec2	equ	0xFDD
 23106                           plusw2	equ	0xFDB
 23107                           fsr2h	equ	0xFDA
 23108                           fsr2l	equ	0xFD9
 23109                           status	equ	0xFD8
 23110                           
 23111 ;; *************** function _Mdm_GetSmsData *****************
 23112 ;; Defined at:
 23113 ;;		line 892 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 23114 ;; Parameters:    Size  Location     Type
 23115 ;;  MessageText     2   47[BANK0 ] PTR unsigned char 
 23116 ;;		 -> smsText(20), 
 23117 ;; Auto vars:     Size  Location     Type
 23118 ;;  GetSmsStatus    1   49[BANK0 ] enum E8922
 23119 ;; Return value:  Size  Location     Type
 23120 ;;                  1    wreg      enum E8922
 23121 ;; Registers used:
 23122 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 23123 ;; Tracked objects:
 23124 ;;		On entry : 0/0
 23125 ;;		On exit  : 0/0
 23126 ;;		Unchanged: 0/0
 23127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23128 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23129 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23131 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23132 ;;Total ram usage:        3 bytes
 23133 ;; Hardware stack levels used:    1
 23134 ;; Hardware stack levels required when called:   12
 23135 ;; This function calls:
 23136 ;;		_ReceiveEvt
 23137 ;;		_StringCopy
 23138 ;; This function is called by:
 23139 ;;		_detectCmd
 23140 ;; This function uses a non-reentrant model
 23141 ;;
 23142                           
 23143                           	psect	text107
 23144  00560E                     __ptext107:
 23145                           	opt stack 0
 23146  00560E                     _Mdm_GetSmsData:
 23147                           	opt stack 14
 23148                           
 23149                           ;mdm_gsm_gprs.c: 894: GetSmsStatusType GetSmsStatus = SmsDataNotReady;
 23150                           
 23151                           ;incstack = 0
 23152  00560E  0E00               	movlw	0
 23153  005610  0100               	movlb	0	; () banked
 23154  005612  6F91               	movwf	Mdm_GetSmsData@GetSmsStatus& (0+255),b
 23155                           
 23156                           ; BSR set to: 0
 23157                           ;mdm_gsm_gprs.c: 897: if (ReceiveEvt(&SmsTxtReady))
 23158  005614  0EDA               	movlw	low _SmsTxtReady
 23159  005616  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 23160  005618  0E00               	movlw	high _SmsTxtReady
 23161  00561A  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 23162  00561C  ECE1  F032         	call	_ReceiveEvt	;wreg free
 23163  005620  0900               	iorlw	0
 23164  005622  B4D8               	btfsc	status,2,c
 23165  005624  D025               	goto	l1129
 23166                           
 23167                           ;mdm_gsm_gprs.c: 898: {
 23168                           ;mdm_gsm_gprs.c: 900: StringCopy(Mdm_SmsRx.MessageBuffer, MessageText, Mdm_SmsRx.TextLen
      +                           + 1);
 23169  005626  0E50               	movlw	low (_Mdm_SmsRx+80)
 23170  005628  0100               	movlb	0	; () banked
 23171  00562A  6F85               	movwf	StringCopy@SourceStr& (0+255),b
 23172  00562C  0E07               	movlw	high (_Mdm_SmsRx+80)
 23173  00562E  6F86               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 23174  005630  C08F  F087         	movff	Mdm_GetSmsData@MessageText,StringCopy@DestStr
 23175  005634  C090  F088         	movff	Mdm_GetSmsData@MessageText+1,StringCopy@DestStr+1
 23176  005638  0E01               	movlw	1
 23177  00563A  0107               	movlb	7	; () banked
 23178  00563C  2565               	addwf	(_Mdm_SmsRx+101)& (0+255),w,b
 23179  00563E  0100               	movlb	0	; () banked
 23180  005640  6F89               	movwf	StringCopy@Len& (0+255),b
 23181  005642  6B8A               	clrf	(StringCopy@Len+1)& (0+255),b
 23182  005644  0E00               	movlw	0
 23183  005646  238A               	addwfc	(StringCopy@Len+1)& (0+255),f,b
 23184  005648  ECD4  F02B         	call	_StringCopy	;wreg free
 23185                           
 23186                           ;mdm_gsm_gprs.c: 901: StringCopy(Mdm_SmsRx.HeaderBuffer + 21, callerNumber, ((UINT8)(13)
      +                          ));
 23187  00564C  0E15               	movlw	low (_Mdm_SmsRx+21)
 23188  00564E  0100               	movlb	0	; () banked
 23189  005650  6F85               	movwf	StringCopy@SourceStr& (0+255),b
 23190  005652  0E07               	movlw	high (_Mdm_SmsRx+21)
 23191  005654  6F86               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 23192  005656  0E3E               	movlw	low _callerNumber
 23193  005658  6F87               	movwf	StringCopy@DestStr& (0+255),b
 23194  00565A  0E03               	movlw	high _callerNumber
 23195  00565C  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 23196  00565E  0E00               	movlw	0
 23197  005660  6F8A               	movwf	(StringCopy@Len+1)& (0+255),b
 23198  005662  0E0D               	movlw	13
 23199  005664  6F89               	movwf	StringCopy@Len& (0+255),b
 23200  005666  ECD4  F02B         	call	_StringCopy	;wreg free
 23201                           
 23202                           ;mdm_gsm_gprs.c: 903: GetSmsStatus = SmsDataReady;
 23203  00566A  0E01               	movlw	1
 23204  00566C  0100               	movlb	0	; () banked
 23205  00566E  6F91               	movwf	Mdm_GetSmsData@GetSmsStatus& (0+255),b
 23206  005670                     l1129:
 23207                           
 23208                           ;mdm_gsm_gprs.c: 904: }
 23209                           ;mdm_gsm_gprs.c: 907: return GetSmsStatus;
 23210                           
 23211                           ; BSR set to: 0
 23212  005670  0100               	movlb	0	; () banked
 23213  005672  5191               	movf	Mdm_GetSmsData@GetSmsStatus& (0+255),w,b
 23214  005674  0012               	return	
 23215  005676                     __end_of_Mdm_GetSmsData:
 23216                           	opt stack 0
 23217                           tosu	equ	0xFFF
 23218                           tosh	equ	0xFFE
 23219                           tosl	equ	0xFFD
 23220                           pclath	equ	0xFFA
 23221                           tblptru	equ	0xFF8
 23222                           tblptrh	equ	0xFF7
 23223                           tblptrl	equ	0xFF6
 23224                           tablat	equ	0xFF5
 23225                           prodh	equ	0xFF4
 23226                           prodl	equ	0xFF3
 23227                           intcon	equ	0xFF2
 23228                           intcon2	equ	0xFF1
 23229                           intcon3	equ	0xFF0
 23230                           indf0	equ	0xFEF
 23231                           postinc0	equ	0xFEE
 23232                           plusw0	equ	0xFEB
 23233                           fsr0h	equ	0xFEA
 23234                           fsr0l	equ	0xFE9
 23235                           wreg	equ	0xFE8
 23236                           indf1	equ	0xFE7
 23237                           postinc1	equ	0xFE6
 23238                           postdec1	equ	0xFE5
 23239                           fsr1h	equ	0xFE2
 23240                           fsr1l	equ	0xFE1
 23241                           indf2	equ	0xFDF
 23242                           postinc2	equ	0xFDE
 23243                           postdec2	equ	0xFDD
 23244                           plusw2	equ	0xFDB
 23245                           fsr2h	equ	0xFDA
 23246                           fsr2l	equ	0xFD9
 23247                           status	equ	0xFD8
 23248                           
 23249 ;; *************** function _GetLastInteractionNumber *****************
 23250 ;; Defined at:
 23251 ;;		line 1046 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 23252 ;; Parameters:    Size  Location     Type
 23253 ;;		None
 23254 ;; Auto vars:     Size  Location     Type
 23255 ;;		None
 23256 ;; Return value:  Size  Location     Type
 23257 ;;                  2   29[BANK0 ] PTR unsigned char 
 23258 ;; Registers used:
 23259 ;;		wreg, status,2, status,0
 23260 ;; Tracked objects:
 23261 ;;		On entry : 0/0
 23262 ;;		On exit  : 0/0
 23263 ;;		Unchanged: 0/0
 23264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23265 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23266 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23268 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23269 ;;Total ram usage:        2 bytes
 23270 ;; Hardware stack levels used:    1
 23271 ;; Hardware stack levels required when called:   11
 23272 ;; This function calls:
 23273 ;;		Nothing
 23274 ;; This function is called by:
 23275 ;;		_detectCmd
 23276 ;; This function uses a non-reentrant model
 23277 ;;
 23278                           
 23279                           	psect	text108
 23280  006AD6                     __ptext108:
 23281                           	opt stack 0
 23282  006AD6                     _GetLastInteractionNumber:
 23283                           	opt stack 15
 23284                           
 23285                           ;mdm_gsm_gprs.c: 1048: return callerNumber;
 23286                           
 23287                           ; BSR set to: 0
 23288                           ;incstack = 0
 23289  006AD6  0E3E               	movlw	low _callerNumber
 23290  006AD8  0100               	movlb	0	; () banked
 23291  006ADA  6F7D               	movwf	?_GetLastInteractionNumber& (0+255),b
 23292  006ADC  0E03               	movlw	high _callerNumber
 23293  006ADE  6F7E               	movwf	(?_GetLastInteractionNumber+1)& (0+255),b
 23294  006AE0  0012               	return	
 23295  006AE2                     __end_of_GetLastInteractionNumber:
 23296                           	opt stack 0
 23297                           tosu	equ	0xFFF
 23298                           tosh	equ	0xFFE
 23299                           tosl	equ	0xFFD
 23300                           pclath	equ	0xFFA
 23301                           tblptru	equ	0xFF8
 23302                           tblptrh	equ	0xFF7
 23303                           tblptrl	equ	0xFF6
 23304                           tablat	equ	0xFF5
 23305                           prodh	equ	0xFF4
 23306                           prodl	equ	0xFF3
 23307                           intcon	equ	0xFF2
 23308                           intcon2	equ	0xFF1
 23309                           intcon3	equ	0xFF0
 23310                           indf0	equ	0xFEF
 23311                           postinc0	equ	0xFEE
 23312                           plusw0	equ	0xFEB
 23313                           fsr0h	equ	0xFEA
 23314                           fsr0l	equ	0xFE9
 23315                           wreg	equ	0xFE8
 23316                           indf1	equ	0xFE7
 23317                           postinc1	equ	0xFE6
 23318                           postdec1	equ	0xFE5
 23319                           fsr1h	equ	0xFE2
 23320                           fsr1l	equ	0xFE1
 23321                           indf2	equ	0xFDF
 23322                           postinc2	equ	0xFDE
 23323                           postdec2	equ	0xFDD
 23324                           plusw2	equ	0xFDB
 23325                           fsr2h	equ	0xFDA
 23326                           fsr2l	equ	0xFD9
 23327                           status	equ	0xFD8
 23328                           
 23329 ;; *************** function _GetCallerNumber *****************
 23330 ;; Defined at:
 23331 ;;		line 1037 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 23332 ;; Parameters:    Size  Location     Type
 23333 ;;		None
 23334 ;; Auto vars:     Size  Location     Type
 23335 ;;		None
 23336 ;; Return value:  Size  Location     Type
 23337 ;;                  2   35[BANK0 ] PTR unsigned char 
 23338 ;; Registers used:
 23339 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23340 ;; Tracked objects:
 23341 ;;		On entry : 0/0
 23342 ;;		On exit  : 0/0
 23343 ;;		Unchanged: 0/0
 23344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23345 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23346 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23348 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23349 ;;Total ram usage:        2 bytes
 23350 ;; Hardware stack levels used:    1
 23351 ;; Hardware stack levels required when called:   12
 23352 ;; This function calls:
 23353 ;;		_ClearBuffer
 23354 ;;		_ReceiveEvt
 23355 ;; This function is called by:
 23356 ;;		_detectCmd
 23357 ;;		_initFsm
 23358 ;; This function uses a non-reentrant model
 23359 ;;
 23360                           
 23361                           	psect	text109
 23362  0063D0                     __ptext109:
 23363                           	opt stack 0
 23364  0063D0                     _GetCallerNumber:
 23365                           	opt stack 14
 23366                           
 23367                           ;mdm_gsm_gprs.c: 1039: if (!ReceiveEvt(&ClipEvent))
 23368                           
 23369                           ; BSR set to: 0
 23370                           ;incstack = 0
 23371  0063D0  0EDD               	movlw	low _ClipEvent
 23372  0063D2  0100               	movlb	0	; () banked
 23373  0063D4  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 23374  0063D6  0E00               	movlw	high _ClipEvent
 23375  0063D8  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 23376  0063DA  ECE1  F032         	call	_ReceiveEvt	;wreg free
 23377  0063DE  0900               	iorlw	0
 23378  0063E0  A4D8               	btfss	status,2,c
 23379  0063E2  D00B               	goto	l1156
 23380                           
 23381                           ;mdm_gsm_gprs.c: 1040: {
 23382                           ;mdm_gsm_gprs.c: 1041: ClearBuffer(callerNumber, ((UINT8)(13)));
 23383  0063E4  0E3E               	movlw	low _callerNumber
 23384  0063E6  0100               	movlb	0	; () banked
 23385  0063E8  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 23386  0063EA  0E03               	movlw	high _callerNumber
 23387  0063EC  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 23388  0063EE  0E00               	movlw	0
 23389  0063F0  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 23390  0063F2  0E0D               	movlw	13
 23391  0063F4  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 23392  0063F6  EC03  F032         	call	_ClearBuffer	;wreg free
 23393  0063FA                     l1156:
 23394                           
 23395                           ;mdm_gsm_gprs.c: 1042: }
 23396                           ;mdm_gsm_gprs.c: 1043: return callerNumber;
 23397  0063FA  0E3E               	movlw	low _callerNumber
 23398  0063FC  0100               	movlb	0	; () banked
 23399  0063FE  6F83               	movwf	?_GetCallerNumber& (0+255),b
 23400  006400  0E03               	movlw	high _callerNumber
 23401  006402  6F84               	movwf	(?_GetCallerNumber+1)& (0+255),b
 23402  006404  0012               	return	
 23403  006406                     __end_of_GetCallerNumber:
 23404                           	opt stack 0
 23405                           tosu	equ	0xFFF
 23406                           tosh	equ	0xFFE
 23407                           tosl	equ	0xFFD
 23408                           pclath	equ	0xFFA
 23409                           tblptru	equ	0xFF8
 23410                           tblptrh	equ	0xFF7
 23411                           tblptrl	equ	0xFF6
 23412                           tablat	equ	0xFF5
 23413                           prodh	equ	0xFF4
 23414                           prodl	equ	0xFF3
 23415                           intcon	equ	0xFF2
 23416                           intcon2	equ	0xFF1
 23417                           intcon3	equ	0xFF0
 23418                           indf0	equ	0xFEF
 23419                           postinc0	equ	0xFEE
 23420                           plusw0	equ	0xFEB
 23421                           fsr0h	equ	0xFEA
 23422                           fsr0l	equ	0xFE9
 23423                           wreg	equ	0xFE8
 23424                           indf1	equ	0xFE7
 23425                           postinc1	equ	0xFE6
 23426                           postdec1	equ	0xFE5
 23427                           fsr1h	equ	0xFE2
 23428                           fsr1l	equ	0xFE1
 23429                           indf2	equ	0xFDF
 23430                           postinc2	equ	0xFDE
 23431                           postdec2	equ	0xFDD
 23432                           plusw2	equ	0xFDB
 23433                           fsr2h	equ	0xFDA
 23434                           fsr2l	equ	0xFD9
 23435                           status	equ	0xFD8
 23436                           
 23437 ;; *************** function _delCmdFsm *****************
 23438 ;; Defined at:
 23439 ;;		line 71 in file "../Source/c/04_App/app_delCmd.c"
 23440 ;; Parameters:    Size  Location     Type
 23441 ;;  receivedNumb    2    3[BANK1 ] PTR unsigned char 
 23442 ;;		 -> receivedNumber(13), 
 23443 ;;  smsText         2    5[BANK1 ] PTR unsigned char 
 23444 ;;		 -> smsText(20), 
 23445 ;; Auto vars:     Size  Location     Type
 23446 ;;  emptyNumber    13    7[BANK1 ] const unsigned char [13]
 23447 ;;  numberInMemo    1   21[BANK1 ] unsigned char 
 23448 ;;  isComplete      1   20[BANK1 ] unsigned char 
 23449 ;; Return value:  Size  Location     Type
 23450 ;;                  1    wreg      unsigned char 
 23451 ;; Registers used:
 23452 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23453 ;; Tracked objects:
 23454 ;;		On entry : 0/0
 23455 ;;		On exit  : 0/0
 23456 ;;		Unchanged: 0/0
 23457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23458 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23459 ;;      Locals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23461 ;;      Totals:         0       0      19       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23462 ;;Total ram usage:       19 bytes
 23463 ;; Hardware stack levels used:    1
 23464 ;; Hardware stack levels required when called:   18
 23465 ;; This function calls:
 23466 ;;		_isMasterNumber
 23467 ;;		_saveNumberInMemory
 23468 ;; This function is called by:
 23469 ;;		_MyApp_Task
 23470 ;; This function uses a non-reentrant model
 23471 ;;
 23472                           
 23473                           	psect	text110
 23474  004EB0                     __ptext110:
 23475                           	opt stack 0
 23476  004EB0                     _delCmdFsm:
 23477                           	opt stack 9
 23478                           
 23479                           ;app_delCmd.c: 73: const uint8_t emptyNumber[((UINT8)(13))] = {0};
 23480                           
 23481                           ; BSR set to: 0
 23482                           ;incstack = 0
 23483  004EB0  0E0F               	movlw	low delCmdFsm@F9013
 23484  004EB2  6EF6               	movwf	tblptrl,c
 23485  004EB4                     	if	1	;There is more than 1 active tblptr byte
 23486  004EB4  0EFC               	movlw	high delCmdFsm@F9013
 23487  004EB6  6EF7               	movwf	tblptrh,c
 23488  004EB8                     	endif
 23489  004EB8                     	if	0	;There are less than 3 active tblptr bytes
 23490  004EB8                     	endif
 23491  004EB8  EE21  F007         	lfsr	2,delCmdFsm@emptyNumber
 23492  004EBC  0E0C               	movlw	12
 23493  004EBE                     u16110:
 23494  004EBE  0009               	tblrd		*+
 23495  004EC0  CFF5 FFDE          	movff	tablat,postinc2
 23496  004EC4  06E8               	decf	wreg,f,c
 23497  004EC6  E2FB               	bc	u16110
 23498                           
 23499                           ;app_delCmd.c: 74: static delFsmStates currentState = DEL_FSM_CHECK_MASTER;
 23500                           ;app_delCmd.c: 75: bool isComplete = 0;
 23501  004EC8  0E00               	movlw	0
 23502  004ECA  0101               	movlb	1	; () banked
 23503  004ECC  6F14               	movwf	delCmdFsm@isComplete& (0+255),b
 23504                           
 23505                           ; BSR set to: 1
 23506                           ;app_delCmd.c: 76: uint8_t numberInMemory = 1;
 23507  004ECE  0E01               	movlw	1
 23508  004ED0  6F15               	movwf	delCmdFsm@numberInMemory& (0+255),b
 23509                           
 23510                           ;app_delCmd.c: 78: switch (currentState)
 23511  004ED2  D02B               	goto	l2852
 23512  004ED4                     
 23513                           ; BSR set to: 1
 23514                           ;app_delCmd.c: 81: if (isMasterNumber(receivedNumber) == OP_SUCCESS)
 23515                           
 23516                           ; BSR set to: 1
 23517  004ED4  C103  F100         	movff	delCmdFsm@receivedNumber,isMasterNumber@phoneNumber
 23518  004ED8  C104  F101         	movff	delCmdFsm@receivedNumber+1,isMasterNumber@phoneNumber+1
 23519  004EDC  EC2E  F02A         	call	_isMasterNumber	;wreg free
 23520  004EE0  0900               	iorlw	0
 23521  004EE2  A4D8               	btfss	status,2,c
 23522  004EE4  D01B               	goto	l16340
 23523                           
 23524                           ;app_delCmd.c: 82: {
 23525                           ;app_delCmd.c: 83: currentState = DEL_FSM_REMOVE_NUMBER;
 23526  004EE6  0E01               	movlw	1
 23527  004EE8                     L41:
 23528  004EE8  0101               	movlb	1	; () banked
 23529  004EEA  D01D               	goto	L44
 23530  004EEC                     
 23531                           ; BSR set to: 1
 23532                           ;app_delCmd.c: 93: if (numberInMemory == 1)
 23533                           
 23534                           ; BSR set to: 1
 23535  004EEC  0515               	decf	delCmdFsm@numberInMemory& (0+255),w,b
 23536  004EEE  A4D8               	btfss	status,2,c
 23537  004EF0  D002               	goto	l2858
 23538                           
 23539                           ; BSR set to: 1
 23540                           ;app_delCmd.c: 94: {
 23541                           ;app_delCmd.c: 95: currentState = DEL_FSM_COMPLETE;
 23542  004EF2  0E02               	movlw	2
 23543  004EF4  D018               	goto	L44
 23544  004EF6                     l2858:
 23545                           
 23546                           ; BSR set to: 1
 23547                           ;app_delCmd.c: 97: else if (numberInMemory != 0 && numberInMemory != 1 && numberInMemory
      +                           != 32)
 23548                           
 23549                           ; BSR set to: 1
 23550  004EF6  5115               	movf	delCmdFsm@numberInMemory& (0+255),w,b
 23551  004EF8  B4D8               	btfsc	status,2,c
 23552  004EFA  D021               	goto	l2856
 23553                           
 23554                           ; BSR set to: 1
 23555  004EFC  0515               	decf	delCmdFsm@numberInMemory& (0+255),w,b
 23556  004EFE  B4D8               	btfsc	status,2,c
 23557  004F00  D01E               	goto	l2856
 23558                           
 23559                           ; BSR set to: 1
 23560  004F02  0E20               	movlw	32
 23561  004F04  1915               	xorwf	delCmdFsm@numberInMemory& (0+255),w,b
 23562  004F06  B4D8               	btfsc	status,2,c
 23563  004F08  D01A               	goto	l2856
 23564                           
 23565                           ; BSR set to: 1
 23566                           ;app_delCmd.c: 98: {
 23567                           ;app_delCmd.c: 99: saveNumberInMemory(numberInMemory, emptyNumber);
 23568  004F0A  0E07               	movlw	low delCmdFsm@emptyNumber
 23569  004F0C  0100               	movlb	0	; () banked
 23570  004F0E  6F96               	movwf	saveNumberInMemory@phoneNumber& (0+255),b
 23571  004F10  0E01               	movlw	high delCmdFsm@emptyNumber
 23572  004F12  6F97               	movwf	(saveNumberInMemory@phoneNumber+1)& (0+255),b
 23573  004F14  0101               	movlb	1	; () banked
 23574  004F16  5115               	movf	delCmdFsm@numberInMemory& (0+255),w,b
 23575  004F18  ECAD  F034         	call	_saveNumberInMemory
 23576  004F1C                     l16340:
 23577                           
 23578                           ;app_delCmd.c: 100: currentState = DEL_FSM_COMPLETE;
 23579  004F1C  0E02               	movlw	2
 23580  004F1E  D7E4               	goto	L41
 23581  004F20                     
 23582                           ; BSR set to: 1
 23583                           ;app_delCmd.c: 105: isComplete = 1;
 23584                           
 23585                           ; BSR set to: 1
 23586  004F20  0E01               	movlw	1
 23587  004F22  6F14               	movwf	delCmdFsm@isComplete& (0+255),b
 23588                           
 23589                           ;app_delCmd.c: 106: currentState = DEL_FSM_CHECK_MASTER;
 23590  004F24  0E00               	movlw	0
 23591  004F26                     L44:
 23592  004F26  6FD4               	movwf	delCmdFsm@currentState& (0+255),b
 23593                           
 23594                           ; BSR set to: 1
 23595                           ;app_delCmd.c: 111: }
 23596                           
 23597                           ; BSR set to: 1
 23598                           ;app_delCmd.c: 110: break;
 23599                           
 23600                           ;app_delCmd.c: 109: default:
 23601                           
 23602                           ;app_delCmd.c: 107: break;
 23603  004F28  D00A               	goto	l2856
 23604  004F2A                     l2852:
 23605                           
 23606                           ; BSR set to: 1
 23607                           
 23608                           ; BSR set to: 1
 23609  004F2A  51D4               	movf	delCmdFsm@currentState& (0+255),w,b
 23610                           
 23611                           ; Switch size 1, requested type "space"
 23612                           ; Number of cases is 3, Range of values is 0 to 2
 23613                           ; switch strategies available:
 23614                           ; Name         Instructions Cycles
 23615                           ; simple_byte           10     6 (average)
 23616                           ;	Chosen strategy is simple_byte
 23617  004F2C  0A00               	xorlw	0	; case 0
 23618  004F2E  B4D8               	btfsc	status,2,c
 23619  004F30  D7D1               	goto	l2853
 23620  004F32  0A01               	xorlw	1	; case 1
 23621  004F34  B4D8               	btfsc	status,2,c
 23622  004F36  D7DA               	goto	l2857
 23623  004F38  0A03               	xorlw	3	; case 2
 23624  004F3A  B4D8               	btfsc	status,2,c
 23625  004F3C  D7F1               	goto	l2861
 23626  004F3E                     l2856:
 23627                           
 23628                           ; BSR set to: 1
 23629                           ;app_delCmd.c: 112: return isComplete;
 23630                           
 23631                           ; BSR set to: 1
 23632  004F3E  5114               	movf	delCmdFsm@isComplete& (0+255),w,b
 23633  004F40  0012               	return	
 23634  004F42                     __end_of_delCmdFsm:
 23635                           	opt stack 0
 23636                           tosu	equ	0xFFF
 23637                           tosh	equ	0xFFE
 23638                           tosl	equ	0xFFD
 23639                           pclath	equ	0xFFA
 23640                           tblptru	equ	0xFF8
 23641                           tblptrh	equ	0xFF7
 23642                           tblptrl	equ	0xFF6
 23643                           tablat	equ	0xFF5
 23644                           prodh	equ	0xFF4
 23645                           prodl	equ	0xFF3
 23646                           intcon	equ	0xFF2
 23647                           intcon2	equ	0xFF1
 23648                           intcon3	equ	0xFF0
 23649                           indf0	equ	0xFEF
 23650                           postinc0	equ	0xFEE
 23651                           plusw0	equ	0xFEB
 23652                           fsr0h	equ	0xFEA
 23653                           fsr0l	equ	0xFE9
 23654                           wreg	equ	0xFE8
 23655                           indf1	equ	0xFE7
 23656                           postinc1	equ	0xFE6
 23657                           postdec1	equ	0xFE5
 23658                           fsr1h	equ	0xFE2
 23659                           fsr1l	equ	0xFE1
 23660                           indf2	equ	0xFDF
 23661                           postinc2	equ	0xFDE
 23662                           postdec2	equ	0xFDD
 23663                           plusw2	equ	0xFDB
 23664                           fsr2h	equ	0xFDA
 23665                           fsr2l	equ	0xFD9
 23666                           status	equ	0xFD8
 23667                           
 23668 ;; *************** function _addCmdFsm *****************
 23669 ;; Defined at:
 23670 ;;		line 72 in file "../Source/c/04_App/app_addCmd.c"
 23671 ;; Parameters:    Size  Location     Type
 23672 ;;  receivedNumb    2    5[BANK1 ] PTR unsigned char 
 23673 ;;		 -> receivedNumber(13), 
 23674 ;;  smsText         2    7[BANK1 ] PTR unsigned char 
 23675 ;;		 -> smsText(20), 
 23676 ;; Auto vars:     Size  Location     Type
 23677 ;;  searchNumber    1   12[BANK1 ] unsigned char 
 23678 ;;  numberInMemo    1   11[BANK1 ] unsigned char 
 23679 ;;  masterOpResu    1   10[BANK1 ] unsigned char 
 23680 ;;  isComplete      1    9[BANK1 ] unsigned char 
 23681 ;; Return value:  Size  Location     Type
 23682 ;;                  1    wreg      unsigned char 
 23683 ;; Registers used:
 23684 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23685 ;; Tracked objects:
 23686 ;;		On entry : 0/0
 23687 ;;		On exit  : 0/0
 23688 ;;		Unchanged: 0/0
 23689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23690 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23691 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23693 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23694 ;;Total ram usage:        8 bytes
 23695 ;; Hardware stack levels used:    1
 23696 ;; Hardware stack levels required when called:   18
 23697 ;; This function calls:
 23698 ;;		_findEmptySpot
 23699 ;;		_isMasterNumber
 23700 ;;		_isNumberInMemory
 23701 ;;		_saveNumberInMemory
 23702 ;; This function is called by:
 23703 ;;		_MyApp_Task
 23704 ;; This function uses a non-reentrant model
 23705 ;;
 23706                           
 23707                           	psect	text111
 23708  003A18                     __ptext111:
 23709                           	opt stack 0
 23710  003A18                     _addCmdFsm:
 23711                           	opt stack 9
 23712                           
 23713                           ;app_addCmd.c: 74: static addFsmStates currentState = ADD_FSM_CHECK_MASTER;
 23714                           ;app_addCmd.c: 75: bool isComplete = 0;
 23715                           
 23716                           ; BSR set to: 1
 23717                           ;incstack = 0
 23718  003A18  0E00               	movlw	0
 23719  003A1A  0101               	movlb	1	; () banked
 23720  003A1C  6F09               	movwf	addCmdFsm@isComplete& (0+255),b
 23721                           
 23722                           ;app_addCmd.c: 76: uint8_t numberInMemory = 0;
 23723  003A1E  0E00               	movlw	0
 23724  003A20  6F0B               	movwf	addCmdFsm@numberInMemory& (0+255),b
 23725                           
 23726                           ;app_addCmd.c: 77: uint8_t masterOpResult = OP_FAILED;
 23727  003A22  0E01               	movlw	1
 23728  003A24  6F0A               	movwf	addCmdFsm@masterOpResult& (0+255),b
 23729                           
 23730                           ;app_addCmd.c: 78: uint8_t searchNumber = OP_FAILED;
 23731  003A26  0E01               	movlw	1
 23732  003A28  6F0C               	movwf	addCmdFsm@searchNumber& (0+255),b
 23733                           
 23734                           ;app_addCmd.c: 80: switch (currentState)
 23735  003A2A  D04F               	goto	l2815
 23736  003A2C                     
 23737                           ; BSR set to: 1
 23738                           ;app_addCmd.c: 83: masterOpResult = isMasterNumber(receivedNumber);
 23739                           
 23740                           ; BSR set to: 1
 23741  003A2C  C105  F100         	movff	addCmdFsm@receivedNumber,isMasterNumber@phoneNumber
 23742  003A30  C106  F101         	movff	addCmdFsm@receivedNumber+1,isMasterNumber@phoneNumber+1
 23743  003A34  EC2E  F02A         	call	_isMasterNumber	;wreg free
 23744  003A38  0101               	movlb	1	; () banked
 23745  003A3A  6F0A               	movwf	addCmdFsm@masterOpResult& (0+255),b
 23746                           
 23747                           ; BSR set to: 1
 23748                           ;app_addCmd.c: 84: if (masterOpResult == OP_SUCCESS)
 23749  003A3C  510A               	movf	addCmdFsm@masterOpResult& (0+255),w,b
 23750  003A3E  A4D8               	btfss	status,2,c
 23751  003A40  D002               	goto	l2817
 23752                           
 23753                           ; BSR set to: 1
 23754                           ;app_addCmd.c: 85: {
 23755                           ;app_addCmd.c: 86: currentState = ADD_FSM_CHECK_DUPLICATED;
 23756  003A42  0E01               	movlw	1
 23757  003A44  D03B               	goto	L49
 23758  003A46                     l2817:
 23759                           
 23760                           ; BSR set to: 1
 23761                           ;app_addCmd.c: 88: else if (masterOpResult == OP_FAILED)
 23762                           
 23763                           ; BSR set to: 1
 23764  003A46  050A               	decf	addCmdFsm@masterOpResult& (0+255),w,b
 23765  003A48  D036               	goto	L106
 23766  003A4A                     
 23767                           ; BSR set to: 1
 23768                           ;app_addCmd.c: 95: searchNumber = isNumberInMemory(smsText + 4, &numberInMemory);
 23769                           
 23770                           ; BSR set to: 1
 23771  003A4A  0E04               	movlw	4
 23772  003A4C  2507               	addwf	addCmdFsm@smsText& (0+255),w,b
 23773  003A4E  6F00               	movwf	isNumberInMemory@phoneNumber& (0+255),b
 23774  003A50  0E00               	movlw	0
 23775  003A52  2108               	addwfc	(addCmdFsm@smsText+1)& (0+255),w,b
 23776  003A54  6F01               	movwf	(isNumberInMemory@phoneNumber+1)& (0+255),b
 23777  003A56  0E0B               	movlw	low addCmdFsm@numberInMemory
 23778  003A58  6F02               	movwf	isNumberInMemory@positionInMemory& (0+255),b
 23779  003A5A  0E01               	movlw	high addCmdFsm@numberInMemory
 23780  003A5C  6F03               	movwf	(isNumberInMemory@positionInMemory+1)& (0+255),b
 23781  003A5E  EC5A  F021         	call	_isNumberInMemory	;wreg free
 23782  003A62  0101               	movlb	1	; () banked
 23783  003A64  6F0C               	movwf	addCmdFsm@searchNumber& (0+255),b
 23784                           
 23785                           ; BSR set to: 1
 23786                           ;app_addCmd.c: 96: if (searchNumber == SEARCH_FSM_NOT_FOUND)
 23787  003A66  0E04               	movlw	4
 23788  003A68  190C               	xorwf	addCmdFsm@searchNumber& (0+255),w,b
 23789  003A6A  A4D8               	btfss	status,2,c
 23790  003A6C  D01E               	goto	l2828
 23791                           
 23792                           ; BSR set to: 1
 23793                           ;app_addCmd.c: 97: {
 23794                           ;app_addCmd.c: 98: currentState = ADD_FSM_SAVE_NEW;
 23795  003A6E  0E02               	movlw	2
 23796  003A70  D025               	goto	L49
 23797  003A72                     
 23798                           ; BSR set to: 1
 23799                           ;app_addCmd.c: 107: searchNumber = findEmptySpot(&numberInMemory);
 23800                           
 23801                           ; BSR set to: 1
 23802  003A72  0E0B               	movlw	low addCmdFsm@numberInMemory
 23803  003A74  6F00               	movwf	findEmptySpot@positionInMemory& (0+255),b
 23804  003A76  0E01               	movlw	high addCmdFsm@numberInMemory
 23805  003A78  6F01               	movwf	(findEmptySpot@positionInMemory+1)& (0+255),b
 23806  003A7A  EC2F  F026         	call	_findEmptySpot	;wreg free
 23807  003A7E  0101               	movlb	1	; () banked
 23808  003A80  6F0C               	movwf	addCmdFsm@searchNumber& (0+255),b
 23809                           
 23810                           ; BSR set to: 1
 23811                           ;app_addCmd.c: 108: if (searchNumber == SEARCH_FSM_NOT_FOUND)
 23812  003A82  0E04               	movlw	4
 23813  003A84  190C               	xorwf	addCmdFsm@searchNumber& (0+255),w,b
 23814  003A86  A4D8               	btfss	status,2,c
 23815  003A88  D010               	goto	l2828
 23816                           
 23817                           ; BSR set to: 1
 23818                           ;app_addCmd.c: 109: {
 23819                           ;app_addCmd.c: 110: saveNumberInMemory(numberInMemory, smsText + 4);
 23820  003A8A  0E04               	movlw	4
 23821  003A8C  2507               	addwf	addCmdFsm@smsText& (0+255),w,b
 23822  003A8E  0100               	movlb	0	; () banked
 23823  003A90  6F96               	movwf	saveNumberInMemory@phoneNumber& (0+255),b
 23824  003A92  0E00               	movlw	0
 23825  003A94  0101               	movlb	1	; () banked
 23826  003A96  2108               	addwfc	(addCmdFsm@smsText+1)& (0+255),w,b
 23827  003A98  0100               	movlb	0	; () banked
 23828  003A9A  6F97               	movwf	(saveNumberInMemory@phoneNumber+1)& (0+255),b
 23829  003A9C  0101               	movlb	1	; () banked
 23830  003A9E  510B               	movf	addCmdFsm@numberInMemory& (0+255),w,b
 23831  003AA0  ECAD  F034         	call	_saveNumberInMemory
 23832                           
 23833                           ;app_addCmd.c: 111: currentState = ADD_FSM_COMPLETE;
 23834  003AA4  0E03               	movlw	3
 23835  003AA6  0101               	movlb	1	; () banked
 23836  003AA8  D009               	goto	L49
 23837  003AAA                     l2828:
 23838                           
 23839                           ; BSR set to: 1
 23840                           ;app_addCmd.c: 113: else if (searchNumber == SEARCH_FSM_FOUND || searchNumber == SEARCH_
      +                          FSM_ERROR)
 23841                           
 23842                           ; BSR set to: 1
 23843  003AAA  0E03               	movlw	3
 23844  003AAC  190C               	xorwf	addCmdFsm@searchNumber& (0+255),w,b
 23845  003AAE  B4D8               	btfsc	status,2,c
 23846  003AB0  D004               	goto	u16100
 23847                           
 23848                           ; BSR set to: 1
 23849  003AB2  0E02               	movlw	2
 23850  003AB4  190C               	xorwf	addCmdFsm@searchNumber& (0+255),w,b
 23851  003AB6                     L106:
 23852  003AB6  A4D8               	btfss	status,2,c
 23853  003AB8  D015               	goto	l2820
 23854  003ABA                     u16100:
 23855                           
 23856                           ; BSR set to: 1
 23857                           ;app_addCmd.c: 114: {
 23858                           ;app_addCmd.c: 115: currentState = ADD_FSM_COMPLETE;
 23859                           
 23860                           ; BSR set to: 1
 23861  003ABA  0E03               	movlw	3
 23862  003ABC                     L49:
 23863  003ABC  6FD5               	movwf	addCmdFsm@currentState& (0+255),b
 23864                           
 23865                           ; BSR set to: 1
 23866                           ;app_addCmd.c: 116: }
 23867                           ;app_addCmd.c: 117: break;
 23868                           
 23869                           ; BSR set to: 1
 23870  003ABE  D012               	goto	l2820
 23871  003AC0                     
 23872                           ; BSR set to: 1
 23873                           ;app_addCmd.c: 120: currentState = ADD_FSM_CHECK_MASTER;
 23874                           
 23875                           ; BSR set to: 1
 23876  003AC0  0E00               	movlw	0
 23877  003AC2  6FD5               	movwf	addCmdFsm@currentState& (0+255),b
 23878                           
 23879                           ;app_addCmd.c: 121: isComplete = 1;
 23880  003AC4  0E01               	movlw	1
 23881  003AC6  6F09               	movwf	addCmdFsm@isComplete& (0+255),b
 23882                           
 23883                           ; BSR set to: 1
 23884                           ;app_addCmd.c: 126: }
 23885                           
 23886                           ; BSR set to: 1
 23887                           ;app_addCmd.c: 125: break;
 23888                           
 23889                           ;app_addCmd.c: 124: default:
 23890                           
 23891                           ;app_addCmd.c: 122: break;
 23892  003AC8  D00D               	goto	l2820
 23893  003ACA                     l2815:
 23894                           
 23895                           ; BSR set to: 1
 23896                           
 23897                           ; BSR set to: 1
 23898  003ACA  51D5               	movf	addCmdFsm@currentState& (0+255),w,b
 23899                           
 23900                           ; Switch size 1, requested type "space"
 23901                           ; Number of cases is 4, Range of values is 0 to 3
 23902                           ; switch strategies available:
 23903                           ; Name         Instructions Cycles
 23904                           ; simple_byte           13     7 (average)
 23905                           ;	Chosen strategy is simple_byte
 23906  003ACC  0A00               	xorlw	0	; case 0
 23907  003ACE  B4D8               	btfsc	status,2,c
 23908  003AD0  D7AD               	goto	l2816
 23909  003AD2  0A01               	xorlw	1	; case 1
 23910  003AD4  B4D8               	btfsc	status,2,c
 23911  003AD6  D7B9               	goto	l2821
 23912  003AD8  0A03               	xorlw	3	; case 2
 23913  003ADA  B4D8               	btfsc	status,2,c
 23914  003ADC  D7CA               	goto	l2827
 23915  003ADE  0A01               	xorlw	1	; case 3
 23916  003AE0  B4D8               	btfsc	status,2,c
 23917  003AE2  D7EE               	goto	l2833
 23918  003AE4                     l2820:
 23919                           
 23920                           ; BSR set to: 1
 23921                           ;app_addCmd.c: 127: return isComplete;
 23922                           
 23923                           ; BSR set to: 1
 23924  003AE4  5109               	movf	addCmdFsm@isComplete& (0+255),w,b
 23925  003AE6  0012               	return	
 23926  003AE8                     __end_of_addCmdFsm:
 23927                           	opt stack 0
 23928                           tosu	equ	0xFFF
 23929                           tosh	equ	0xFFE
 23930                           tosl	equ	0xFFD
 23931                           pclath	equ	0xFFA
 23932                           tblptru	equ	0xFF8
 23933                           tblptrh	equ	0xFF7
 23934                           tblptrl	equ	0xFF6
 23935                           tablat	equ	0xFF5
 23936                           prodh	equ	0xFF4
 23937                           prodl	equ	0xFF3
 23938                           intcon	equ	0xFF2
 23939                           intcon2	equ	0xFF1
 23940                           intcon3	equ	0xFF0
 23941                           indf0	equ	0xFEF
 23942                           postinc0	equ	0xFEE
 23943                           plusw0	equ	0xFEB
 23944                           fsr0h	equ	0xFEA
 23945                           fsr0l	equ	0xFE9
 23946                           wreg	equ	0xFE8
 23947                           indf1	equ	0xFE7
 23948                           postinc1	equ	0xFE6
 23949                           postdec1	equ	0xFE5
 23950                           fsr1h	equ	0xFE2
 23951                           fsr1l	equ	0xFE1
 23952                           indf2	equ	0xFDF
 23953                           postinc2	equ	0xFDE
 23954                           postdec2	equ	0xFDD
 23955                           plusw2	equ	0xFDB
 23956                           fsr2h	equ	0xFDA
 23957                           fsr2l	equ	0xFD9
 23958                           status	equ	0xFD8
 23959                           
 23960 ;; *************** function _saveNumberInMemory *****************
 23961 ;; Defined at:
 23962 ;;		line 117 in file "../Source/c/04_App/app_utils.c"
 23963 ;; Parameters:    Size  Location     Type
 23964 ;;  address         1    wreg     unsigned char 
 23965 ;;  phoneNumber     2   54[BANK0 ] PTR unsigned char 
 23966 ;;		 -> delCmdFsm@emptyNumber(13), smsText(20), callerNumber(13), 
 23967 ;; Auto vars:     Size  Location     Type
 23968 ;;  address         1   56[BANK0 ] unsigned char 
 23969 ;; Return value:  Size  Location     Type
 23970 ;;                  1    wreg      void 
 23971 ;; Registers used:
 23972 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 23973 ;; Tracked objects:
 23974 ;;		On entry : 0/0
 23975 ;;		On exit  : 0/0
 23976 ;;		Unchanged: 0/0
 23977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23978 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23979 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23981 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23982 ;;Total ram usage:        3 bytes
 23983 ;; Hardware stack levels used:    1
 23984 ;; Hardware stack levels required when called:   14
 23985 ;; This function calls:
 23986 ;;		_Eeprom_Write
 23987 ;; This function is called by:
 23988 ;;		_initFsm
 23989 ;;		_addCmdFsm
 23990 ;;		_delCmdFsm
 23991 ;; This function uses a non-reentrant model
 23992 ;;
 23993                           
 23994                           	psect	text112
 23995  00695A                     __ptext112:
 23996                           	opt stack 0
 23997  00695A                     _saveNumberInMemory:
 23998                           	opt stack 12
 23999                           
 24000                           ; BSR set to: 1
 24001                           ;incstack = 0
 24002                           ;saveNumberInMemory@address stored from wreg
 24003  00695A  0100               	movlb	0	; () banked
 24004  00695C  6F98               	movwf	saveNumberInMemory@address& (0+255),b
 24005                           
 24006                           ;app_utils.c: 119: Eeprom_Write(address, phoneNumber, ((UINT8)(13)));
 24007  00695E  C096  F08F         	movff	saveNumberInMemory@phoneNumber,Eeprom_Write@WriteBuffer
 24008  006962  C097  F090         	movff	saveNumberInMemory@phoneNumber+1,Eeprom_Write@WriteBuffer+1
 24009  006966  0E0D               	movlw	13
 24010  006968  0100               	movlb	0	; () banked
 24011  00696A  6F91               	movwf	Eeprom_Write@DataLength& (0+255),b
 24012  00696C  5198               	movf	saveNumberInMemory@address& (0+255),w,b
 24013  00696E  EC3E  F02E         	call	_Eeprom_Write
 24014  006972  0012               	return		;funcret
 24015  006974                     __end_of_saveNumberInMemory:
 24016                           	opt stack 0
 24017                           tosu	equ	0xFFF
 24018                           tosh	equ	0xFFE
 24019                           tosl	equ	0xFFD
 24020                           pclath	equ	0xFFA
 24021                           tblptru	equ	0xFF8
 24022                           tblptrh	equ	0xFF7
 24023                           tblptrl	equ	0xFF6
 24024                           tablat	equ	0xFF5
 24025                           prodh	equ	0xFF4
 24026                           prodl	equ	0xFF3
 24027                           intcon	equ	0xFF2
 24028                           intcon2	equ	0xFF1
 24029                           intcon3	equ	0xFF0
 24030                           indf0	equ	0xFEF
 24031                           postinc0	equ	0xFEE
 24032                           plusw0	equ	0xFEB
 24033                           fsr0h	equ	0xFEA
 24034                           fsr0l	equ	0xFE9
 24035                           wreg	equ	0xFE8
 24036                           indf1	equ	0xFE7
 24037                           postinc1	equ	0xFE6
 24038                           postdec1	equ	0xFE5
 24039                           fsr1h	equ	0xFE2
 24040                           fsr1l	equ	0xFE1
 24041                           indf2	equ	0xFDF
 24042                           postinc2	equ	0xFDE
 24043                           postdec2	equ	0xFDD
 24044                           plusw2	equ	0xFDB
 24045                           fsr2h	equ	0xFDA
 24046                           fsr2l	equ	0xFD9
 24047                           status	equ	0xFD8
 24048                           
 24049 ;; *************** function _Eeprom_Write *****************
 24050 ;; Defined at:
 24051 ;;		line 78 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/05_Eeprom/eeprom_if.c"
 24052 ;; Parameters:    Size  Location     Type
 24053 ;;  MemoryAddres    1    wreg     unsigned char 
 24054 ;;  WriteBuffer     2   47[BANK0 ] PTR unsigned char 
 24055 ;;		 -> delCmdFsm@emptyNumber(13), memoryPreamble(4), smsText(20), callerNumber(13), 
 24056 ;;  DataLength      1   49[BANK0 ] unsigned char 
 24057 ;; Auto vars:     Size  Location     Type
 24058 ;;  MemoryAddres    1   51[BANK0 ] unsigned char 
 24059 ;;  CommandLengt    1   53[BANK0 ] const unsigned char 
 24060 ;;  SlaveAddress    1   52[BANK0 ] const unsigned char 
 24061 ;;  WriteSts        1   50[BANK0 ] unsigned char 
 24062 ;; Return value:  Size  Location     Type
 24063 ;;                  1    wreg      unsigned char 
 24064 ;; Registers used:
 24065 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 24066 ;; Tracked objects:
 24067 ;;		On entry : 0/0
 24068 ;;		On exit  : 0/0
 24069 ;;		Unchanged: 0/0
 24070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24071 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24072 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24073 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24074 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24075 ;;Total ram usage:        7 bytes
 24076 ;; Hardware stack levels used:    1
 24077 ;; Hardware stack levels required when called:   13
 24078 ;; This function calls:
 24079 ;;		_I2cSlv_SendI2cMsg
 24080 ;;		_StringCopy
 24081 ;; This function is called by:
 24082 ;;		_savePreamble
 24083 ;;		_saveNumberInMemory
 24084 ;; This function uses a non-reentrant model
 24085 ;;
 24086                           
 24087                           	psect	text113
 24088  005C7C                     __ptext113:
 24089                           	opt stack 0
 24090  005C7C                     _Eeprom_Write:
 24091                           	opt stack 12
 24092                           
 24093                           ;incstack = 0
 24094                           ;Eeprom_Write@MemoryAddress stored from wreg
 24095  005C7C  0100               	movlb	0	; () banked
 24096  005C7E  6F93               	movwf	Eeprom_Write@MemoryAddress& (0+255),b
 24097                           
 24098                           ;eeprom_if.c: 80: const UINT8 SlaveAddress = 0x50;
 24099  005C80  0E50               	movlw	80
 24100  005C82  0100               	movlb	0	; () banked
 24101  005C84  6F94               	movwf	Eeprom_Write@SlaveAddress& (0+255),b
 24102                           
 24103                           ; BSR set to: 0
 24104                           ;eeprom_if.c: 81: const UINT8 CommandLength = DataLength + 1;
 24105  005C86  2991               	incf	Eeprom_Write@DataLength& (0+255),w,b
 24106  005C88  6F95               	movwf	Eeprom_Write@CommandLength& (0+255),b
 24107                           
 24108                           ; BSR set to: 0
 24109                           ;eeprom_if.c: 82: UINT8 WriteSts = 0u;
 24110  005C8A  0E00               	movlw	0
 24111  005C8C  6F92               	movwf	Eeprom_Write@WriteSts& (0+255),b
 24112                           
 24113                           ; BSR set to: 0
 24114                           ;eeprom_if.c: 84: if (CommandLength <= 15)
 24115  005C8E  0E10               	movlw	16
 24116  005C90  6195               	cpfslt	Eeprom_Write@CommandLength& (0+255),b
 24117  005C92  0012               	return	
 24118                           
 24119                           ; BSR set to: 0
 24120                           ;eeprom_if.c: 85: {
 24121                           ;eeprom_if.c: 86: EepromBuffer[0] = MemoryAddress;
 24122  005C94  C093  F4BB         	movff	Eeprom_Write@MemoryAddress,_EepromBuffer
 24123                           
 24124                           ; BSR set to: 0
 24125                           ;eeprom_if.c: 87: StringCopy(WriteBuffer, EepromBuffer + 1, DataLength);
 24126  005C98  C08F  F085         	movff	Eeprom_Write@WriteBuffer,StringCopy@SourceStr
 24127  005C9C  C090  F086         	movff	Eeprom_Write@WriteBuffer+1,StringCopy@SourceStr+1
 24128  005CA0  0EBC               	movlw	low (_EepromBuffer+1)
 24129  005CA2  6F87               	movwf	StringCopy@DestStr& (0+255),b
 24130  005CA4  0E04               	movlw	high (_EepromBuffer+1)
 24131  005CA6  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 24132  005CA8  C091  F089         	movff	Eeprom_Write@DataLength,StringCopy@Len
 24133  005CAC  6B8A               	clrf	(StringCopy@Len+1)& (0+255),b
 24134  005CAE  ECD4  F02B         	call	_StringCopy	;wreg free
 24135                           
 24136                           ;eeprom_if.c: 89: WriteSts = I2cSlv_SendI2cMsg(EepromBuffer, SlaveAddress, CommandLength
      +                          );
 24137  005CB2  0EBB               	movlw	low _EepromBuffer
 24138  005CB4  0100               	movlb	0	; () banked
 24139  005CB6  6F80               	movwf	I2cSlv_SendI2cMsg@TxBuffer& (0+255),b
 24140  005CB8  0E04               	movlw	high _EepromBuffer
 24141  005CBA  6F81               	movwf	(I2cSlv_SendI2cMsg@TxBuffer+1)& (0+255),b
 24142  005CBC  C094  F082         	movff	Eeprom_Write@SlaveAddress,I2cSlv_SendI2cMsg@SlaveAddr
 24143  005CC0  C095  F083         	movff	Eeprom_Write@CommandLength,I2cSlv_SendI2cMsg@DataLenght
 24144  005CC4  EC19  F031         	call	_I2cSlv_SendI2cMsg	;wreg free
 24145  005CC8  0100               	movlb	0	; () banked
 24146  005CCA  6F92               	movwf	Eeprom_Write@WriteSts& (0+255),b
 24147                           
 24148                           ; BSR set to: 0
 24149  005CCC  0012               	return	
 24150  005CCE                     __end_of_Eeprom_Write:
 24151                           	opt stack 0
 24152                           tosu	equ	0xFFF
 24153                           tosh	equ	0xFFE
 24154                           tosl	equ	0xFFD
 24155                           pclath	equ	0xFFA
 24156                           tblptru	equ	0xFF8
 24157                           tblptrh	equ	0xFF7
 24158                           tblptrl	equ	0xFF6
 24159                           tablat	equ	0xFF5
 24160                           prodh	equ	0xFF4
 24161                           prodl	equ	0xFF3
 24162                           intcon	equ	0xFF2
 24163                           intcon2	equ	0xFF1
 24164                           intcon3	equ	0xFF0
 24165                           indf0	equ	0xFEF
 24166                           postinc0	equ	0xFEE
 24167                           plusw0	equ	0xFEB
 24168                           fsr0h	equ	0xFEA
 24169                           fsr0l	equ	0xFE9
 24170                           wreg	equ	0xFE8
 24171                           indf1	equ	0xFE7
 24172                           postinc1	equ	0xFE6
 24173                           postdec1	equ	0xFE5
 24174                           fsr1h	equ	0xFE2
 24175                           fsr1l	equ	0xFE1
 24176                           indf2	equ	0xFDF
 24177                           postinc2	equ	0xFDE
 24178                           postdec2	equ	0xFDD
 24179                           plusw2	equ	0xFDB
 24180                           fsr2h	equ	0xFDA
 24181                           fsr2l	equ	0xFD9
 24182                           status	equ	0xFD8
 24183                           
 24184 ;; *************** function _isNumberInMemory *****************
 24185 ;; Defined at:
 24186 ;;		line 144 in file "../Source/c/04_App/app_utils.c"
 24187 ;; Parameters:    Size  Location     Type
 24188 ;;  phoneNumber     2    0[BANK1 ] PTR unsigned char 
 24189 ;;		 -> smsText(20), 
 24190 ;;  positionInMe    2    2[BANK1 ] PTR unsigned char 
 24191 ;;		 -> addCmdFsm@numberInMemory(1), 
 24192 ;; Auto vars:     Size  Location     Type
 24193 ;;  memoryOpResu    1    4[BANK1 ] enum E8246
 24194 ;; Return value:  Size  Location     Type
 24195 ;;                  1    wreg      enum E8973
 24196 ;; Registers used:
 24197 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24198 ;; Tracked objects:
 24199 ;;		On entry : 0/0
 24200 ;;		On exit  : 0/0
 24201 ;;		Unchanged: 0/0
 24202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24203 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24204 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24205 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24206 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24207 ;;Total ram usage:        5 bytes
 24208 ;; Hardware stack levels used:    1
 24209 ;; Hardware stack levels required when called:   17
 24210 ;; This function calls:
 24211 ;;		_Eeprom_Read
 24212 ;;		_StringCompare
 24213 ;;		_isNumberValid
 24214 ;; This function is called by:
 24215 ;;		_addCmdFsm
 24216 ;; This function uses a non-reentrant model
 24217 ;;
 24218                           
 24219                           	psect	text114
 24220  0042B4                     __ptext114:
 24221                           	opt stack 0
 24222  0042B4                     _isNumberInMemory:
 24223                           	opt stack 9
 24224                           
 24225                           ;app_utils.c: 146: static searchFsmStates currentState = SEARCH_FSM_START;
 24226                           ;app_utils.c: 147: static uint8_t currentPosition = 32;
 24227                           ;app_utils.c: 148: EepromStsType memoryOpResult = OP_PENDING;
 24228                           
 24229                           ; BSR set to: 0
 24230                           ;incstack = 0
 24231  0042B4  0E02               	movlw	2
 24232  0042B6  0101               	movlb	1	; () banked
 24233  0042B8  6F04               	movwf	isNumberInMemory@memoryOpResult& (0+255),b
 24234                           
 24235                           ; BSR set to: 1
 24236                           ;app_utils.c: 150: if (currentState > SEARCH_FSM_CHECK_NUMBER)
 24237  0042BA  0E01               	movlw	1
 24238  0042BC  0100               	movlb	0	; () banked
 24239  0042BE  65C5               	cpfsgt	isNumberInMemory@currentState& (0+255),b
 24240  0042C0  D004               	goto	l2758
 24241                           
 24242                           ; BSR set to: 0
 24243                           ;app_utils.c: 151: {
 24244                           ;app_utils.c: 152: currentState = SEARCH_FSM_START;
 24245  0042C2  0E00               	movlw	0
 24246  0042C4  6FC5               	movwf	isNumberInMemory@currentState& (0+255),b
 24247                           
 24248                           ;app_utils.c: 153: currentPosition = 32;
 24249  0042C6  0E20               	movlw	32
 24250  0042C8  6FE2               	movwf	isNumberInMemory@currentPosition& (0+255),b
 24251  0042CA                     l2758:
 24252                           
 24253                           ; BSR set to: 0
 24254                           ;app_utils.c: 154: }
 24255                           ;app_utils.c: 155: if (currentPosition >= (32 + (16 * 10)))
 24256                           
 24257                           ; BSR set to: 0
 24258  0042CA  0EBF               	movlw	191
 24259  0042CC  65E2               	cpfsgt	isNumberInMemory@currentPosition& (0+255),b
 24260  0042CE  D045               	goto	l2760
 24261                           
 24262                           ; BSR set to: 0
 24263                           ;app_utils.c: 156: {
 24264                           ;app_utils.c: 157: currentState = SEARCH_FSM_NOT_FOUND;
 24265  0042D0  0E04               	movlw	4
 24266  0042D2  6FC5               	movwf	isNumberInMemory@currentState& (0+255),b
 24267                           
 24268                           ; BSR set to: 0
 24269                           ;app_utils.c: 158: }
 24270                           ;app_utils.c: 160: switch (currentState)
 24271  0042D4  D042               	goto	l2760
 24272  0042D6                     
 24273                           ; BSR set to: 0
 24274                           ;app_utils.c: 163: memoryOpResult = Eeprom_Read(currentPosition, readBuffer, ((UINT8)(13
      +                          )));
 24275                           
 24276                           ; BSR set to: 0
 24277  0042D6  0E31               	movlw	low _readBuffer
 24278  0042D8  6FA9               	movwf	Eeprom_Read@ReadBuffer& (0+255),b
 24279  0042DA  0E03               	movlw	high _readBuffer
 24280  0042DC  6FAA               	movwf	(Eeprom_Read@ReadBuffer+1)& (0+255),b
 24281  0042DE  0E0D               	movlw	13
 24282  0042E0  6FAB               	movwf	Eeprom_Read@DataLength& (0+255),b
 24283  0042E2  51E2               	movf	isNumberInMemory@currentPosition& (0+255),w,b
 24284  0042E4  ECC0  F02D         	call	_Eeprom_Read
 24285  0042E8  0101               	movlb	1	; () banked
 24286  0042EA  6F04               	movwf	isNumberInMemory@memoryOpResult& (0+255),b
 24287                           
 24288                           ; BSR set to: 1
 24289                           ;app_utils.c: 164: if (memoryOpResult == OP_FAILED)
 24290  0042EC  0504               	decf	isNumberInMemory@memoryOpResult& (0+255),w,b
 24291  0042EE  A4D8               	btfss	status,2,c
 24292  0042F0  D002               	goto	l2762
 24293                           
 24294                           ; BSR set to: 1
 24295                           ;app_utils.c: 165: {
 24296                           ;app_utils.c: 166: currentState = SEARCH_FSM_ERROR;
 24297  0042F2  0E02               	movlw	2
 24298  0042F4  D005               	goto	L51
 24299  0042F6                     l2762:
 24300                           
 24301                           ;app_utils.c: 168: else if (memoryOpResult == OP_SUCCESS)
 24302                           
 24303                           ; BSR set to: 0
 24304  0042F6  0101               	movlb	1	; () banked
 24305  0042F8  5104               	movf	isNumberInMemory@memoryOpResult& (0+255),w,b
 24306  0042FA  A4D8               	btfss	status,2,c
 24307  0042FC  D035               	goto	l2765
 24308                           
 24309                           ; BSR set to: 1
 24310                           ;app_utils.c: 169: {
 24311                           ;app_utils.c: 170: currentState = SEARCH_FSM_CHECK_NUMBER;
 24312  0042FE  0E01               	movlw	1
 24313  004300                     L51:
 24314  004300  0100               	movlb	0	; () banked
 24315  004302  6FC5               	movwf	isNumberInMemory@currentState& (0+255),b
 24316                           
 24317                           ; BSR set to: 0
 24318                           ;app_utils.c: 171: }
 24319                           ;app_utils.c: 172: break;
 24320                           
 24321                           ; BSR set to: 0
 24322  004304  D031               	goto	l2765
 24323  004306                     
 24324                           ; BSR set to: 0
 24325                           ;app_utils.c: 175: currentState = SEARCH_FSM_START;
 24326                           
 24327                           ; BSR set to: 0
 24328  004306  0E00               	movlw	0
 24329  004308  6FC5               	movwf	isNumberInMemory@currentState& (0+255),b
 24330                           
 24331                           ; BSR set to: 0
 24332                           ;app_utils.c: 176: if (isNumberValid(readBuffer))
 24333  00430A  0E31               	movlw	low _readBuffer
 24334  00430C  6F7D               	movwf	isNumberValid@phoneNumber& (0+255),b
 24335  00430E  0E03               	movlw	high _readBuffer
 24336  004310  6F7E               	movwf	(isNumberValid@phoneNumber+1)& (0+255),b
 24337  004312  ECA1  F02B         	call	_isNumberValid	;wreg free
 24338  004316  0900               	iorlw	0
 24339  004318  B4D8               	btfsc	status,2,c
 24340  00431A  D01B               	goto	l2768
 24341                           
 24342                           ;app_utils.c: 177: {
 24343                           ;app_utils.c: 178: if (StringCompare(phoneNumber, readBuffer, ((UINT8)(13))))
 24344  00431C  C100  F07D         	movff	isNumberInMemory@phoneNumber,StringCompare@String1
 24345  004320  C101  F07E         	movff	isNumberInMemory@phoneNumber+1,StringCompare@String1+1
 24346  004324  0E31               	movlw	low _readBuffer
 24347  004326  0100               	movlb	0	; () banked
 24348  004328  6F7F               	movwf	StringCompare@String2& (0+255),b
 24349  00432A  0E03               	movlw	high _readBuffer
 24350  00432C  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 24351  00432E  0E00               	movlw	0
 24352  004330  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 24353  004332  0E0D               	movlw	13
 24354  004334  6F81               	movwf	StringCompare@Len& (0+255),b
 24355  004336  EC67  F02E         	call	_StringCompare	;wreg free
 24356  00433A  0900               	iorlw	0
 24357  00433C  B4D8               	btfsc	status,2,c
 24358  00433E  D009               	goto	l2768
 24359                           
 24360                           ;app_utils.c: 179: {
 24361                           ;app_utils.c: 180: *positionInMemory = currentPosition;
 24362  004340  C102  FFD9         	movff	isNumberInMemory@positionInMemory,fsr2l
 24363  004344  C103  FFDA         	movff	isNumberInMemory@positionInMemory+1,fsr2h
 24364  004348  C0E2  FFDF         	movff	isNumberInMemory@currentPosition,indf2
 24365                           
 24366                           ;app_utils.c: 181: currentState = SEARCH_FSM_FOUND;
 24367  00434C  0E03               	movlw	3
 24368  00434E  0100               	movlb	0	; () banked
 24369  004350  6FC5               	movwf	isNumberInMemory@currentState& (0+255),b
 24370  004352                     l2768:
 24371                           
 24372                           ;app_utils.c: 186: }
 24373                           ;app_utils.c: 187: }
 24374                           ;app_utils.c: 188: currentPosition += 16;
 24375                           
 24376                           ; BSR set to: 0
 24377                           
 24378                           ; BSR set to: 0
 24379                           
 24380                           ;app_utils.c: 183: else
 24381                           ;app_utils.c: 184: {
 24382                           
 24383                           ; BSR set to: 0
 24384  004352  0E10               	movlw	16
 24385  004354  0100               	movlb	0	; () banked
 24386  004356  27E2               	addwf	isNumberInMemory@currentPosition& (0+255),f,b
 24387                           
 24388                           ; BSR set to: 0
 24389                           ;app_utils.c: 193: }
 24390                           
 24391                           ; BSR set to: 0
 24392                           ;app_utils.c: 192: break;
 24393                           
 24394                           ;app_utils.c: 191: default:
 24395                           
 24396                           ;app_utils.c: 189: break;
 24397  004358  D007               	goto	l2765
 24398  00435A                     l2760:
 24399                           
 24400                           ; BSR set to: 0
 24401                           
 24402                           ; BSR set to: 0
 24403  00435A  51C5               	movf	isNumberInMemory@currentState& (0+255),w,b
 24404                           
 24405                           ; Switch size 1, requested type "space"
 24406                           ; Number of cases is 2, Range of values is 0 to 1
 24407                           ; switch strategies available:
 24408                           ; Name         Instructions Cycles
 24409                           ; simple_byte            7     4 (average)
 24410                           ;	Chosen strategy is simple_byte
 24411  00435C  0A00               	xorlw	0	; case 0
 24412  00435E  B4D8               	btfsc	status,2,c
 24413  004360  D7BA               	goto	l2761
 24414  004362  0A01               	xorlw	1	; case 1
 24415  004364  B4D8               	btfsc	status,2,c
 24416  004366  D7CF               	goto	l2766
 24417  004368                     l2765:
 24418                           
 24419                           ;app_utils.c: 194: return currentState;
 24420                           
 24421                           ; BSR set to: 0
 24422  004368  0100               	movlb	0	; () banked
 24423  00436A  51C5               	movf	isNumberInMemory@currentState& (0+255),w,b
 24424  00436C  0012               	return	
 24425  00436E                     __end_of_isNumberInMemory:
 24426                           	opt stack 0
 24427                           tosu	equ	0xFFF
 24428                           tosh	equ	0xFFE
 24429                           tosl	equ	0xFFD
 24430                           pclath	equ	0xFFA
 24431                           tblptru	equ	0xFF8
 24432                           tblptrh	equ	0xFF7
 24433                           tblptrl	equ	0xFF6
 24434                           tablat	equ	0xFF5
 24435                           prodh	equ	0xFF4
 24436                           prodl	equ	0xFF3
 24437                           intcon	equ	0xFF2
 24438                           intcon2	equ	0xFF1
 24439                           intcon3	equ	0xFF0
 24440                           indf0	equ	0xFEF
 24441                           postinc0	equ	0xFEE
 24442                           plusw0	equ	0xFEB
 24443                           fsr0h	equ	0xFEA
 24444                           fsr0l	equ	0xFE9
 24445                           wreg	equ	0xFE8
 24446                           indf1	equ	0xFE7
 24447                           postinc1	equ	0xFE6
 24448                           postdec1	equ	0xFE5
 24449                           fsr1h	equ	0xFE2
 24450                           fsr1l	equ	0xFE1
 24451                           indf2	equ	0xFDF
 24452                           postinc2	equ	0xFDE
 24453                           postdec2	equ	0xFDD
 24454                           plusw2	equ	0xFDB
 24455                           fsr2h	equ	0xFDA
 24456                           fsr2l	equ	0xFD9
 24457                           status	equ	0xFD8
 24458                           
 24459 ;; *************** function _isMasterNumber *****************
 24460 ;; Defined at:
 24461 ;;		line 232 in file "../Source/c/04_App/app_utils.c"
 24462 ;; Parameters:    Size  Location     Type
 24463 ;;  phoneNumber     2    0[BANK1 ] PTR unsigned char 
 24464 ;;		 -> receivedNumber(13), 
 24465 ;; Auto vars:     Size  Location     Type
 24466 ;;  memoryOpResu    1    2[BANK1 ] enum E8246
 24467 ;; Return value:  Size  Location     Type
 24468 ;;                  1    wreg      unsigned char 
 24469 ;; Registers used:
 24470 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24471 ;; Tracked objects:
 24472 ;;		On entry : 0/0
 24473 ;;		On exit  : 0/0
 24474 ;;		Unchanged: 0/0
 24475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24476 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24477 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24478 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24479 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24480 ;;Total ram usage:        3 bytes
 24481 ;; Hardware stack levels used:    1
 24482 ;; Hardware stack levels required when called:   17
 24483 ;; This function calls:
 24484 ;;		_Eeprom_Read
 24485 ;;		_StringCompare
 24486 ;;		_isNumberValid
 24487 ;; This function is called by:
 24488 ;;		_addCmdFsm
 24489 ;;		_delCmdFsm
 24490 ;; This function uses a non-reentrant model
 24491 ;;
 24492                           
 24493                           	psect	text115
 24494  00545C                     __ptext115:
 24495                           	opt stack 0
 24496  00545C                     _isMasterNumber:
 24497                           	opt stack 9
 24498                           
 24499                           ;app_utils.c: 234: EepromStsType memoryOpResult = OP_PENDING;
 24500                           
 24501                           ; BSR set to: 0
 24502                           ;incstack = 0
 24503  00545C  0E02               	movlw	2
 24504  00545E  0101               	movlb	1	; () banked
 24505  005460  6F02               	movwf	isMasterNumber@memoryOpResult& (0+255),b
 24506                           
 24507                           ; BSR set to: 1
 24508                           ;app_utils.c: 236: memoryOpResult = Eeprom_Read(16, readBuffer, ((UINT8)(13)));
 24509  005462  0E31               	movlw	low _readBuffer
 24510  005464  0100               	movlb	0	; () banked
 24511  005466  6FA9               	movwf	Eeprom_Read@ReadBuffer& (0+255),b
 24512  005468  0E03               	movlw	high _readBuffer
 24513  00546A  6FAA               	movwf	(Eeprom_Read@ReadBuffer+1)& (0+255),b
 24514  00546C  0E0D               	movlw	13
 24515  00546E  6FAB               	movwf	Eeprom_Read@DataLength& (0+255),b
 24516  005470  0E10               	movlw	16
 24517  005472  ECC0  F02D         	call	_Eeprom_Read
 24518  005476  0101               	movlb	1	; () banked
 24519  005478  6F02               	movwf	isMasterNumber@memoryOpResult& (0+255),b
 24520                           
 24521                           ; BSR set to: 1
 24522                           ;app_utils.c: 237: if (memoryOpResult != OP_PENDING)
 24523  00547A  0E02               	movlw	2
 24524  00547C  1902               	xorwf	isMasterNumber@memoryOpResult& (0+255),w,b
 24525  00547E  B4D8               	btfsc	status,2,c
 24526  005480  D021               	goto	l2776
 24527                           
 24528                           ; BSR set to: 1
 24529                           ;app_utils.c: 238: {
 24530                           ;app_utils.c: 239: memoryOpResult = OP_FAILED;
 24531  005482  0E01               	movlw	1
 24532  005484  6F02               	movwf	isMasterNumber@memoryOpResult& (0+255),b
 24533                           
 24534                           ; BSR set to: 1
 24535                           ;app_utils.c: 240: if (isNumberValid(readBuffer))
 24536  005486  0E31               	movlw	low _readBuffer
 24537  005488  0100               	movlb	0	; () banked
 24538  00548A  6F7D               	movwf	isNumberValid@phoneNumber& (0+255),b
 24539  00548C  0E03               	movlw	high _readBuffer
 24540  00548E  6F7E               	movwf	(isNumberValid@phoneNumber+1)& (0+255),b
 24541  005490  ECA1  F02B         	call	_isNumberValid	;wreg free
 24542  005494  0900               	iorlw	0
 24543  005496  B4D8               	btfsc	status,2,c
 24544  005498  D015               	goto	l2776
 24545                           
 24546                           ;app_utils.c: 241: {
 24547                           ;app_utils.c: 242: if (StringCompare(phoneNumber, readBuffer, ((UINT8)(13))))
 24548  00549A  C100  F07D         	movff	isMasterNumber@phoneNumber,StringCompare@String1
 24549  00549E  C101  F07E         	movff	isMasterNumber@phoneNumber+1,StringCompare@String1+1
 24550  0054A2  0E31               	movlw	low _readBuffer
 24551  0054A4  0100               	movlb	0	; () banked
 24552  0054A6  6F7F               	movwf	StringCompare@String2& (0+255),b
 24553  0054A8  0E03               	movlw	high _readBuffer
 24554  0054AA  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 24555  0054AC  0E00               	movlw	0
 24556  0054AE  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 24557  0054B0  0E0D               	movlw	13
 24558  0054B2  6F81               	movwf	StringCompare@Len& (0+255),b
 24559  0054B4  EC67  F02E         	call	_StringCompare	;wreg free
 24560  0054B8  0900               	iorlw	0
 24561  0054BA  B4D8               	btfsc	status,2,c
 24562  0054BC  D003               	goto	l2776
 24563                           
 24564                           ;app_utils.c: 243: {
 24565                           ;app_utils.c: 244: memoryOpResult = OP_SUCCESS;
 24566  0054BE  0E00               	movlw	0
 24567  0054C0  0101               	movlb	1	; () banked
 24568  0054C2  6F02               	movwf	isMasterNumber@memoryOpResult& (0+255),b
 24569  0054C4                     l2776:
 24570                           
 24571                           ;app_utils.c: 245: }
 24572                           ;app_utils.c: 246: }
 24573                           ;app_utils.c: 247: }
 24574                           ;app_utils.c: 248: return memoryOpResult;
 24575                           
 24576                           ; BSR set to: 1
 24577                           
 24578                           ; BSR set to: 1
 24579  0054C4  0101               	movlb	1	; () banked
 24580  0054C6  5102               	movf	isMasterNumber@memoryOpResult& (0+255),w,b
 24581  0054C8  0012               	return	
 24582  0054CA                     __end_of_isMasterNumber:
 24583                           	opt stack 0
 24584                           tosu	equ	0xFFF
 24585                           tosh	equ	0xFFE
 24586                           tosl	equ	0xFFD
 24587                           pclath	equ	0xFFA
 24588                           tblptru	equ	0xFF8
 24589                           tblptrh	equ	0xFF7
 24590                           tblptrl	equ	0xFF6
 24591                           tablat	equ	0xFF5
 24592                           prodh	equ	0xFF4
 24593                           prodl	equ	0xFF3
 24594                           intcon	equ	0xFF2
 24595                           intcon2	equ	0xFF1
 24596                           intcon3	equ	0xFF0
 24597                           indf0	equ	0xFEF
 24598                           postinc0	equ	0xFEE
 24599                           plusw0	equ	0xFEB
 24600                           fsr0h	equ	0xFEA
 24601                           fsr0l	equ	0xFE9
 24602                           wreg	equ	0xFE8
 24603                           indf1	equ	0xFE7
 24604                           postinc1	equ	0xFE6
 24605                           postdec1	equ	0xFE5
 24606                           fsr1h	equ	0xFE2
 24607                           fsr1l	equ	0xFE1
 24608                           indf2	equ	0xFDF
 24609                           postinc2	equ	0xFDE
 24610                           postdec2	equ	0xFDD
 24611                           plusw2	equ	0xFDB
 24612                           fsr2h	equ	0xFDA
 24613                           fsr2l	equ	0xFD9
 24614                           status	equ	0xFD8
 24615                           
 24616 ;; *************** function _findEmptySpot *****************
 24617 ;; Defined at:
 24618 ;;		line 282 in file "../Source/c/04_App/app_utils.c"
 24619 ;; Parameters:    Size  Location     Type
 24620 ;;  positionInMe    2    0[BANK1 ] PTR unsigned char 
 24621 ;;		 -> addCmdFsm@numberInMemory(1), 
 24622 ;; Auto vars:     Size  Location     Type
 24623 ;;  memoryOpResu    1    2[BANK1 ] enum E8246
 24624 ;; Return value:  Size  Location     Type
 24625 ;;                  1    wreg      enum E8973
 24626 ;; Registers used:
 24627 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24628 ;; Tracked objects:
 24629 ;;		On entry : 0/0
 24630 ;;		On exit  : 0/0
 24631 ;;		Unchanged: 0/0
 24632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24633 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24634 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24636 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24637 ;;Total ram usage:        3 bytes
 24638 ;; Hardware stack levels used:    1
 24639 ;; Hardware stack levels required when called:   17
 24640 ;; This function calls:
 24641 ;;		_Eeprom_Read
 24642 ;;		_isNumberValid
 24643 ;; This function is called by:
 24644 ;;		_addCmdFsm
 24645 ;; This function uses a non-reentrant model
 24646 ;;
 24647                           
 24648                           	psect	text116
 24649  004C5E                     __ptext116:
 24650                           	opt stack 0
 24651  004C5E                     _findEmptySpot:
 24652                           	opt stack 9
 24653                           
 24654                           ;app_utils.c: 284: static searchFsmStates currentState = SEARCH_FSM_START;
 24655                           ;app_utils.c: 285: static uint8_t currentPosition = 32;
 24656                           ;app_utils.c: 286: EepromStsType memoryOpResult = OP_PENDING;
 24657                           
 24658                           ; BSR set to: 1
 24659                           ;incstack = 0
 24660  004C5E  0E02               	movlw	2
 24661  004C60  0101               	movlb	1	; () banked
 24662  004C62  6F02               	movwf	findEmptySpot@memoryOpResult& (0+255),b
 24663                           
 24664                           ; BSR set to: 1
 24665                           ;app_utils.c: 288: if (currentState > SEARCH_FSM_CHECK_NUMBER)
 24666  004C64  0E01               	movlw	1
 24667  004C66  0100               	movlb	0	; () banked
 24668  004C68  65C4               	cpfsgt	findEmptySpot@currentState& (0+255),b
 24669  004C6A  D004               	goto	l2784
 24670                           
 24671                           ; BSR set to: 0
 24672                           ;app_utils.c: 289: {
 24673                           ;app_utils.c: 290: currentState = SEARCH_FSM_START;
 24674  004C6C  0E00               	movlw	0
 24675  004C6E  6FC4               	movwf	findEmptySpot@currentState& (0+255),b
 24676                           
 24677                           ;app_utils.c: 291: currentPosition = 32;
 24678  004C70  0E20               	movlw	32
 24679  004C72  6FE1               	movwf	findEmptySpot@currentPosition& (0+255),b
 24680  004C74                     l2784:
 24681                           
 24682                           ; BSR set to: 0
 24683                           ;app_utils.c: 292: }
 24684                           ;app_utils.c: 293: if (currentPosition >= (32 + (16 * 10)))
 24685                           
 24686                           ; BSR set to: 0
 24687  004C74  0EBF               	movlw	191
 24688  004C76  65E1               	cpfsgt	findEmptySpot@currentPosition& (0+255),b
 24689  004C78  D033               	goto	l2786
 24690                           
 24691                           ; BSR set to: 0
 24692                           ;app_utils.c: 294: {
 24693                           ;app_utils.c: 295: currentState = SEARCH_FSM_NOT_FOUND;
 24694  004C7A  0E04               	movlw	4
 24695  004C7C  6FC4               	movwf	findEmptySpot@currentState& (0+255),b
 24696                           
 24697                           ; BSR set to: 0
 24698                           ;app_utils.c: 296: }
 24699                           ;app_utils.c: 298: switch (currentState)
 24700  004C7E  D030               	goto	l2786
 24701  004C80                     
 24702                           ; BSR set to: 0
 24703                           ;app_utils.c: 301: memoryOpResult = Eeprom_Read(currentPosition, readBuffer, ((UINT8)(13
      +                          )));
 24704                           
 24705                           ; BSR set to: 0
 24706  004C80  0E31               	movlw	low _readBuffer
 24707  004C82  6FA9               	movwf	Eeprom_Read@ReadBuffer& (0+255),b
 24708  004C84  0E03               	movlw	high _readBuffer
 24709  004C86  6FAA               	movwf	(Eeprom_Read@ReadBuffer+1)& (0+255),b
 24710  004C88  0E0D               	movlw	13
 24711  004C8A  6FAB               	movwf	Eeprom_Read@DataLength& (0+255),b
 24712  004C8C  51E1               	movf	findEmptySpot@currentPosition& (0+255),w,b
 24713  004C8E  ECC0  F02D         	call	_Eeprom_Read
 24714  004C92  0101               	movlb	1	; () banked
 24715  004C94  6F02               	movwf	findEmptySpot@memoryOpResult& (0+255),b
 24716                           
 24717                           ; BSR set to: 1
 24718                           ;app_utils.c: 302: if (memoryOpResult == OP_FAILED)
 24719  004C96  0502               	decf	findEmptySpot@memoryOpResult& (0+255),w,b
 24720  004C98  A4D8               	btfss	status,2,c
 24721  004C9A  D002               	goto	l2788
 24722                           
 24723                           ; BSR set to: 1
 24724                           ;app_utils.c: 303: {
 24725                           ;app_utils.c: 304: currentState = SEARCH_FSM_ERROR;
 24726  004C9C  0E02               	movlw	2
 24727  004C9E  D005               	goto	L52
 24728  004CA0                     l2788:
 24729                           
 24730                           ;app_utils.c: 306: else if (memoryOpResult == OP_SUCCESS)
 24731                           
 24732                           ; BSR set to: 0
 24733  004CA0  0101               	movlb	1	; () banked
 24734  004CA2  5102               	movf	findEmptySpot@memoryOpResult& (0+255),w,b
 24735  004CA4  A4D8               	btfss	status,2,c
 24736  004CA6  D023               	goto	l2791
 24737                           
 24738                           ; BSR set to: 1
 24739                           ;app_utils.c: 307: {
 24740                           ;app_utils.c: 308: currentState = SEARCH_FSM_CHECK_NUMBER;
 24741  004CA8  0E01               	movlw	1
 24742  004CAA                     L52:
 24743  004CAA  0100               	movlb	0	; () banked
 24744  004CAC  D00D               	goto	L53
 24745  004CAE                     
 24746                           ; BSR set to: 0
 24747                           ;app_utils.c: 313: if (isNumberValid(readBuffer))
 24748                           
 24749                           ; BSR set to: 0
 24750  004CAE  0E31               	movlw	low _readBuffer
 24751  004CB0  6F7D               	movwf	isNumberValid@phoneNumber& (0+255),b
 24752  004CB2  0E03               	movlw	high _readBuffer
 24753  004CB4  6F7E               	movwf	(isNumberValid@phoneNumber+1)& (0+255),b
 24754  004CB6  ECA1  F02B         	call	_isNumberValid	;wreg free
 24755  004CBA  0900               	iorlw	0
 24756  004CBC  B4D8               	btfsc	status,2,c
 24757  004CBE  D006               	goto	l2793
 24758                           
 24759                           ;app_utils.c: 314: {
 24760                           ;app_utils.c: 315: currentPosition += 16;
 24761  004CC0  0E10               	movlw	16
 24762  004CC2  0100               	movlb	0	; () banked
 24763  004CC4  27E1               	addwf	findEmptySpot@currentPosition& (0+255),f,b
 24764                           
 24765                           ; BSR set to: 0
 24766                           ;app_utils.c: 316: currentState = SEARCH_FSM_START;
 24767  004CC6  0E00               	movlw	0
 24768  004CC8                     L53:
 24769  004CC8  6FC4               	movwf	findEmptySpot@currentState& (0+255),b
 24770                           
 24771                           ;app_utils.c: 317: }
 24772  004CCA  D011               	goto	l2791
 24773  004CCC                     l2793:
 24774                           
 24775                           ;app_utils.c: 318: else
 24776                           ;app_utils.c: 319: {
 24777                           ;app_utils.c: 320: currentState = SEARCH_FSM_NOT_FOUND;
 24778                           
 24779                           ; BSR set to: 0
 24780  004CCC  0E04               	movlw	4
 24781  004CCE  0100               	movlb	0	; () banked
 24782  004CD0  6FC4               	movwf	findEmptySpot@currentState& (0+255),b
 24783                           
 24784                           ; BSR set to: 0
 24785                           ;app_utils.c: 321: *positionInMemory = currentPosition;
 24786  004CD2  C100  FFD9         	movff	findEmptySpot@positionInMemory,fsr2l
 24787  004CD6  C101  FFDA         	movff	findEmptySpot@positionInMemory+1,fsr2h
 24788  004CDA  C0E1  FFDF         	movff	findEmptySpot@currentPosition,indf2
 24789                           
 24790                           ; BSR set to: 0
 24791                           ;app_utils.c: 327: }
 24792                           
 24793                           ; BSR set to: 0
 24794                           ;app_utils.c: 326: break;
 24795                           
 24796                           ;app_utils.c: 325: default:
 24797                           
 24798                           ; BSR set to: 0
 24799                           ;app_utils.c: 322: }
 24800                           ;app_utils.c: 323: break;
 24801  004CDE  D007               	goto	l2791
 24802  004CE0                     l2786:
 24803                           
 24804                           ; BSR set to: 0
 24805                           
 24806                           ; BSR set to: 0
 24807  004CE0  51C4               	movf	findEmptySpot@currentState& (0+255),w,b
 24808                           
 24809                           ; Switch size 1, requested type "space"
 24810                           ; Number of cases is 2, Range of values is 0 to 1
 24811                           ; switch strategies available:
 24812                           ; Name         Instructions Cycles
 24813                           ; simple_byte            7     4 (average)
 24814                           ;	Chosen strategy is simple_byte
 24815  004CE2  0A00               	xorlw	0	; case 0
 24816  004CE4  B4D8               	btfsc	status,2,c
 24817  004CE6  D7CC               	goto	l2787
 24818  004CE8  0A01               	xorlw	1	; case 1
 24819  004CEA  B4D8               	btfsc	status,2,c
 24820  004CEC  D7E0               	goto	l2792
 24821  004CEE                     l2791:
 24822                           
 24823                           ;app_utils.c: 328: return currentState;
 24824                           
 24825                           ; BSR set to: 0
 24826  004CEE  0100               	movlb	0	; () banked
 24827  004CF0  51C4               	movf	findEmptySpot@currentState& (0+255),w,b
 24828  004CF2  0012               	return	
 24829  004CF4                     __end_of_findEmptySpot:
 24830                           	opt stack 0
 24831                           tosu	equ	0xFFF
 24832                           tosh	equ	0xFFE
 24833                           tosl	equ	0xFFD
 24834                           pclath	equ	0xFFA
 24835                           tblptru	equ	0xFF8
 24836                           tblptrh	equ	0xFF7
 24837                           tblptrl	equ	0xFF6
 24838                           tablat	equ	0xFF5
 24839                           prodh	equ	0xFF4
 24840                           prodl	equ	0xFF3
 24841                           intcon	equ	0xFF2
 24842                           intcon2	equ	0xFF1
 24843                           intcon3	equ	0xFF0
 24844                           indf0	equ	0xFEF
 24845                           postinc0	equ	0xFEE
 24846                           plusw0	equ	0xFEB
 24847                           fsr0h	equ	0xFEA
 24848                           fsr0l	equ	0xFE9
 24849                           wreg	equ	0xFE8
 24850                           indf1	equ	0xFE7
 24851                           postinc1	equ	0xFE6
 24852                           postdec1	equ	0xFE5
 24853                           fsr1h	equ	0xFE2
 24854                           fsr1l	equ	0xFE1
 24855                           indf2	equ	0xFDF
 24856                           postinc2	equ	0xFDE
 24857                           postdec2	equ	0xFDD
 24858                           plusw2	equ	0xFDB
 24859                           fsr2h	equ	0xFDA
 24860                           fsr2l	equ	0xFD9
 24861                           status	equ	0xFD8
 24862                           
 24863 ;; *************** function _isNumberValid *****************
 24864 ;; Defined at:
 24865 ;;		line 122 in file "../Source/c/04_App/app_utils.c"
 24866 ;; Parameters:    Size  Location     Type
 24867 ;;  phoneNumber     2   29[BANK0 ] PTR unsigned char 
 24868 ;;		 -> readBuffer(13), smsText(20), 
 24869 ;; Auto vars:     Size  Location     Type
 24870 ;;  i               1   33[BANK0 ] unsigned char 
 24871 ;;  isNumberOk      1   32[BANK0 ] unsigned char 
 24872 ;; Return value:  Size  Location     Type
 24873 ;;                  1    wreg      unsigned char 
 24874 ;; Registers used:
 24875 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 24876 ;; Tracked objects:
 24877 ;;		On entry : 0/0
 24878 ;;		On exit  : 0/0
 24879 ;;		Unchanged: 0/0
 24880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24881 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24882 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24883 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24884 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24885 ;;Total ram usage:        5 bytes
 24886 ;; Hardware stack levels used:    1
 24887 ;; Hardware stack levels required when called:   11
 24888 ;; This function calls:
 24889 ;;		Nothing
 24890 ;; This function is called by:
 24891 ;;		_parseCommand
 24892 ;;		_isNumberInMemory
 24893 ;;		_isMasterNumber
 24894 ;;		_findEmptySpot
 24895 ;; This function uses a non-reentrant model
 24896 ;;
 24897                           
 24898                           	psect	text117
 24899  005742                     __ptext117:
 24900                           	opt stack 0
 24901  005742                     _isNumberValid:
 24902                           	opt stack 14
 24903                           
 24904                           ;app_utils.c: 124: bool isNumberOk = 0;
 24905                           
 24906                           ; BSR set to: 0
 24907                           ;incstack = 0
 24908  005742  0E00               	movlw	0
 24909  005744  0100               	movlb	0	; () banked
 24910  005746  6F80               	movwf	isNumberValid@isNumberOk& (0+255),b
 24911                           
 24912                           ;app_utils.c: 125: uint8_t i = 0;
 24913  005748  0E00               	movlw	0
 24914  00574A  6F81               	movwf	isNumberValid@i& (0+255),b
 24915                           
 24916                           ; BSR set to: 0
 24917                           ;app_utils.c: 126: if (phoneNumber[0] == '+')
 24918  00574C  C07D  FFD9         	movff	isNumberValid@phoneNumber,fsr2l
 24919  005750  C07E  FFDA         	movff	isNumberValid@phoneNumber+1,fsr2h
 24920  005754  0E2B               	movlw	43
 24921  005756  18DE               	xorwf	postinc2,w,c
 24922  005758  A4D8               	btfss	status,2,c
 24923  00575A  D024               	goto	u13310
 24924                           
 24925                           ; BSR set to: 0
 24926                           ;app_utils.c: 127: {
 24927                           ;app_utils.c: 128: for (i = 1; i < ((UINT8)(13)); i++)
 24928  00575C  0E01               	movlw	1
 24929  00575E  6F81               	movwf	isNumberValid@i& (0+255),b
 24930  005760                     l14148:
 24931                           
 24932                           ; BSR set to: 0
 24933  005760  0E0C               	movlw	12
 24934  005762  6581               	cpfsgt	isNumberValid@i& (0+255),b
 24935  005764  D001               	goto	l2747
 24936  005766  D01E               	goto	u13310
 24937  005768                     l2747:
 24938                           
 24939                           ; BSR set to: 0
 24940                           ;app_utils.c: 129: {
 24941                           ;app_utils.c: 130: if (phoneNumber[i] >= '0' && phoneNumber[i] <= '9')
 24942                           
 24943                           ; BSR set to: 0
 24944  005768  5181               	movf	isNumberValid@i& (0+255),w,b
 24945  00576A  0D01               	mullw	1
 24946  00576C  50F3               	movf	prodl,w,c
 24947  00576E  257D               	addwf	isNumberValid@phoneNumber& (0+255),w,b
 24948  005770  6ED9               	movwf	fsr2l,c
 24949  005772  50F4               	movf	prodh,w,c
 24950  005774  217E               	addwfc	(isNumberValid@phoneNumber+1)& (0+255),w,b
 24951  005776  6EDA               	movwf	fsr2h,c
 24952  005778  0E2F               	movlw	47
 24953  00577A  64DF               	cpfsgt	indf2,c
 24954  00577C  D00E               	goto	l2749
 24955                           
 24956                           ; BSR set to: 0
 24957  00577E  5181               	movf	isNumberValid@i& (0+255),w,b
 24958  005780  0D01               	mullw	1
 24959  005782  50F3               	movf	prodl,w,c
 24960  005784  257D               	addwf	isNumberValid@phoneNumber& (0+255),w,b
 24961  005786  6ED9               	movwf	fsr2l,c
 24962  005788  50F4               	movf	prodh,w,c
 24963  00578A  217E               	addwfc	(isNumberValid@phoneNumber+1)& (0+255),w,b
 24964  00578C  6EDA               	movwf	fsr2h,c
 24965  00578E  0E3A               	movlw	58
 24966  005790  60DF               	cpfslt	indf2,c
 24967  005792  D003               	goto	l2749
 24968                           
 24969                           ; BSR set to: 0
 24970                           ;app_utils.c: 131: {
 24971                           ;app_utils.c: 132: isNumberOk = 1;
 24972  005794  0E01               	movlw	1
 24973  005796  6F80               	movwf	isNumberValid@isNumberOk& (0+255),b
 24974                           
 24975                           ;app_utils.c: 133: }
 24976  005798  D003               	goto	l2750
 24977  00579A                     l2749:
 24978                           
 24979                           ; BSR set to: 0
 24980                           ;app_utils.c: 134: else
 24981                           ;app_utils.c: 135: {
 24982                           ;app_utils.c: 136: isNumberOk = 0;
 24983                           
 24984                           ; BSR set to: 0
 24985  00579A  0E00               	movlw	0
 24986  00579C  6F80               	movwf	isNumberValid@isNumberOk& (0+255),b
 24987                           
 24988                           ;app_utils.c: 137: break;
 24989  00579E  D002               	goto	u13310
 24990  0057A0                     l2750:
 24991                           
 24992                           ; BSR set to: 0
 24993                           
 24994                           ; BSR set to: 0
 24995  0057A0  2B81               	incf	isNumberValid@i& (0+255),f,b
 24996  0057A2  D7DE               	goto	l14148
 24997  0057A4                     u13310:
 24998                           
 24999                           ; BSR set to: 0
 25000                           ;app_utils.c: 138: }
 25001                           ;app_utils.c: 139: }
 25002                           ;app_utils.c: 140: }
 25003                           ;app_utils.c: 141: return isNumberOk;
 25004                           
 25005                           ; BSR set to: 0
 25006                           
 25007                           ; BSR set to: 0
 25008  0057A4  5180               	movf	isNumberValid@isNumberOk& (0+255),w,b
 25009  0057A6  0012               	return	
 25010  0057A8                     __end_of_isNumberValid:
 25011                           	opt stack 0
 25012                           tosu	equ	0xFFF
 25013                           tosh	equ	0xFFE
 25014                           tosl	equ	0xFFD
 25015                           pclath	equ	0xFFA
 25016                           tblptru	equ	0xFF8
 25017                           tblptrh	equ	0xFF7
 25018                           tblptrl	equ	0xFF6
 25019                           tablat	equ	0xFF5
 25020                           prodh	equ	0xFF4
 25021                           prodl	equ	0xFF3
 25022                           intcon	equ	0xFF2
 25023                           intcon2	equ	0xFF1
 25024                           intcon3	equ	0xFF0
 25025                           indf0	equ	0xFEF
 25026                           postinc0	equ	0xFEE
 25027                           plusw0	equ	0xFEB
 25028                           fsr0h	equ	0xFEA
 25029                           fsr0l	equ	0xFE9
 25030                           wreg	equ	0xFE8
 25031                           indf1	equ	0xFE7
 25032                           postinc1	equ	0xFE6
 25033                           postdec1	equ	0xFE5
 25034                           fsr1h	equ	0xFE2
 25035                           fsr1l	equ	0xFE1
 25036                           indf2	equ	0xFDF
 25037                           postinc2	equ	0xFDE
 25038                           postdec2	equ	0xFDD
 25039                           plusw2	equ	0xFDB
 25040                           fsr2h	equ	0xFDA
 25041                           fsr2l	equ	0xFD9
 25042                           status	equ	0xFD8
 25043                           
 25044 ;; *************** function _Eeprom_Read *****************
 25045 ;; Defined at:
 25046 ;;		line 104 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/05_Eeprom/eeprom_if.c"
 25047 ;; Parameters:    Size  Location     Type
 25048 ;;  MemoryAddres    1    wreg     unsigned char 
 25049 ;;  ReadBuffer      2   73[BANK0 ] PTR unsigned char 
 25050 ;;		 -> readBuffer(13), memoryPreamble(4), 
 25051 ;;  DataLength      1   75[BANK0 ] unsigned char 
 25052 ;; Auto vars:     Size  Location     Type
 25053 ;;  MemoryAddres    1   76[BANK0 ] unsigned char 
 25054 ;;  QuerySts        1   79[BANK0 ] enum E8932
 25055 ;;  ReadSts         1   78[BANK0 ] enum E8958
 25056 ;;  SlaveAddress    1   77[BANK0 ] const unsigned char 
 25057 ;; Return value:  Size  Location     Type
 25058 ;;                  1    wreg      enum E8958
 25059 ;; Registers used:
 25060 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 25061 ;; Tracked objects:
 25062 ;;		On entry : 0/0
 25063 ;;		On exit  : 0/0
 25064 ;;		Unchanged: 0/0
 25065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25066 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25067 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25069 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25070 ;;Total ram usage:        7 bytes
 25071 ;; Hardware stack levels used:    1
 25072 ;; Hardware stack levels required when called:   16
 25073 ;; This function calls:
 25074 ;;		_I2cSlv_QueryI2cData
 25075 ;; This function is called by:
 25076 ;;		_initEeprom
 25077 ;;		_isNumberInMemory
 25078 ;;		_isMasterNumber
 25079 ;;		_findEmptySpot
 25080 ;; This function uses a non-reentrant model
 25081 ;;
 25082                           
 25083                           	psect	text118
 25084  005B80                     __ptext118:
 25085                           	opt stack 0
 25086  005B80                     _Eeprom_Read:
 25087                           	opt stack 9
 25088                           
 25089                           ; BSR set to: 0
 25090                           ;incstack = 0
 25091                           ;Eeprom_Read@MemoryAddress stored from wreg
 25092  005B80  0100               	movlb	0	; () banked
 25093  005B82  6FAC               	movwf	Eeprom_Read@MemoryAddress& (0+255),b
 25094                           
 25095                           ;eeprom_if.c: 106: const UINT8 SlaveAddress = 0x50;
 25096  005B84  0E50               	movlw	80
 25097  005B86  0100               	movlb	0	; () banked
 25098  005B88  6FAD               	movwf	Eeprom_Read@SlaveAddress& (0+255),b
 25099                           
 25100                           ;eeprom_if.c: 107: I2cOpStsType QuerySts = OP_IN_PROGRESS;
 25101  005B8A  0E00               	movlw	0
 25102  005B8C  6FAF               	movwf	Eeprom_Read@QuerySts& (0+255),b
 25103                           
 25104                           ;eeprom_if.c: 108: EepromStsType ReadSts = OP_PENDING;
 25105  005B8E  0E02               	movlw	2
 25106  005B90  6FAE               	movwf	Eeprom_Read@ReadSts& (0+255),b
 25107                           
 25108                           ; BSR set to: 0
 25109                           ;eeprom_if.c: 109: ReadAddress[0] = MemoryAddress;
 25110  005B92  C0AC  F1FB         	movff	Eeprom_Read@MemoryAddress,_ReadAddress
 25111                           
 25112                           ; BSR set to: 0
 25113                           ;eeprom_if.c: 111: QuerySts = I2cSlv_QueryI2cData(ReadAddress, 1, ReadBuffer, DataLength
      +                          , SlaveAddress);
 25114  005B96  0EFB               	movlw	low _ReadAddress
 25115  005B98  6FA2               	movwf	I2cSlv_QueryI2cData@TxBuffer& (0+255),b
 25116  005B9A  0E01               	movlw	high _ReadAddress
 25117  005B9C  6FA3               	movwf	(I2cSlv_QueryI2cData@TxBuffer+1)& (0+255),b
 25118  005B9E  0E01               	movlw	1
 25119  005BA0  6FA4               	movwf	I2cSlv_QueryI2cData@TxLen& (0+255),b
 25120  005BA2  C0A9  F0A5         	movff	Eeprom_Read@ReadBuffer,I2cSlv_QueryI2cData@RxBuffer
 25121  005BA6  C0AA  F0A6         	movff	Eeprom_Read@ReadBuffer+1,I2cSlv_QueryI2cData@RxBuffer+1
 25122  005BAA  C0AB  F0A7         	movff	Eeprom_Read@DataLength,I2cSlv_QueryI2cData@RxLen
 25123  005BAE  C0AD  F0A8         	movff	Eeprom_Read@SlaveAddress,I2cSlv_QueryI2cData@SlaveAddr
 25124  005BB2  ECA3  F01C         	call	_I2cSlv_QueryI2cData	;wreg free
 25125  005BB6  0100               	movlb	0	; () banked
 25126  005BB8  6FAF               	movwf	Eeprom_Read@QuerySts& (0+255),b
 25127                           
 25128                           ; BSR set to: 0
 25129                           ;eeprom_if.c: 113: if (QuerySts == OP_COMPLETE)
 25130  005BBA  05AF               	decf	Eeprom_Read@QuerySts& (0+255),w,b
 25131  005BBC  A4D8               	btfss	status,2,c
 25132  005BBE  D002               	goto	l2037
 25133                           
 25134                           ; BSR set to: 0
 25135                           ;eeprom_if.c: 114: {
 25136                           ;eeprom_if.c: 115: ReadSts = OP_SUCCESS;
 25137  005BC0  0E00               	movlw	0
 25138  005BC2  D005               	goto	L54
 25139  005BC4                     l2037:
 25140                           
 25141                           ; BSR set to: 0
 25142                           ;eeprom_if.c: 117: else if (QuerySts == OP_TIMEOUT)
 25143                           
 25144                           ; BSR set to: 0
 25145  005BC4  0E02               	movlw	2
 25146  005BC6  19AF               	xorwf	Eeprom_Read@QuerySts& (0+255),w,b
 25147  005BC8  A4D8               	btfss	status,2,c
 25148  005BCA  D002               	goto	l2039
 25149                           
 25150                           ; BSR set to: 0
 25151                           ;eeprom_if.c: 118: {
 25152                           ;eeprom_if.c: 119: ReadSts = OP_FAILED;
 25153  005BCC  0E01               	movlw	1
 25154  005BCE                     L54:
 25155  005BCE  6FAE               	movwf	Eeprom_Read@ReadSts& (0+255),b
 25156  005BD0                     l2039:
 25157                           
 25158                           ; BSR set to: 0
 25159                           ;eeprom_if.c: 120: }
 25160                           ;eeprom_if.c: 121: return ReadSts;
 25161                           
 25162                           ; BSR set to: 0
 25163  005BD0  51AE               	movf	Eeprom_Read@ReadSts& (0+255),w,b
 25164  005BD2  0012               	return	
 25165  005BD4                     __end_of_Eeprom_Read:
 25166                           	opt stack 0
 25167                           tosu	equ	0xFFF
 25168                           tosh	equ	0xFFE
 25169                           tosl	equ	0xFFD
 25170                           pclath	equ	0xFFA
 25171                           tblptru	equ	0xFF8
 25172                           tblptrh	equ	0xFF7
 25173                           tblptrl	equ	0xFF6
 25174                           tablat	equ	0xFF5
 25175                           prodh	equ	0xFF4
 25176                           prodl	equ	0xFF3
 25177                           intcon	equ	0xFF2
 25178                           intcon2	equ	0xFF1
 25179                           intcon3	equ	0xFF0
 25180                           indf0	equ	0xFEF
 25181                           postinc0	equ	0xFEE
 25182                           plusw0	equ	0xFEB
 25183                           fsr0h	equ	0xFEA
 25184                           fsr0l	equ	0xFE9
 25185                           wreg	equ	0xFE8
 25186                           indf1	equ	0xFE7
 25187                           postinc1	equ	0xFE6
 25188                           postdec1	equ	0xFE5
 25189                           fsr1h	equ	0xFE2
 25190                           fsr1l	equ	0xFE1
 25191                           indf2	equ	0xFDF
 25192                           postinc2	equ	0xFDE
 25193                           postdec2	equ	0xFDD
 25194                           plusw2	equ	0xFDB
 25195                           fsr2h	equ	0xFDA
 25196                           fsr2l	equ	0xFD9
 25197                           status	equ	0xFD8
 25198                           
 25199 ;; *************** function _I2cSlv_QueryI2cData *****************
 25200 ;; Defined at:
 25201 ;;		line 381 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 25202 ;; Parameters:    Size  Location     Type
 25203 ;;  TxBuffer        2   66[BANK0 ] PTR unsigned char 
 25204 ;;		 -> ReadAddress(1), 
 25205 ;;  TxLen           1   68[BANK0 ] unsigned char 
 25206 ;;  RxBuffer        2   69[BANK0 ] PTR unsigned char 
 25207 ;;		 -> readBuffer(13), memoryPreamble(4), 
 25208 ;;  RxLen           1   71[BANK0 ] unsigned char 
 25209 ;;  SlaveAddr       1   72[BANK0 ] unsigned char 
 25210 ;; Auto vars:     Size  Location     Type
 25211 ;;		None
 25212 ;; Return value:  Size  Location     Type
 25213 ;;                  1    wreg      enum E8947
 25214 ;; Registers used:
 25215 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 25216 ;; Tracked objects:
 25217 ;;		On entry : 0/0
 25218 ;;		On exit  : 0/0
 25219 ;;		Unchanged: 0/0
 25220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25221 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25222 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25223 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25224 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25225 ;;Total ram usage:        7 bytes
 25226 ;; Hardware stack levels used:    1
 25227 ;; Hardware stack levels required when called:   15
 25228 ;; This function calls:
 25229 ;;		_I2cSlv_I2cReadMsgSts
 25230 ;;		_I2cSlv_ReceiveI2cMsg
 25231 ;;		_I2cSlv_SendI2cMsg
 25232 ;;		_OsTmr_GetTimerStatus
 25233 ;;		_OsTmr_StartTimer
 25234 ;;		_OsTmr_Wait
 25235 ;; This function is called by:
 25236 ;;		_Eeprom_Read
 25237 ;; This function uses a non-reentrant model
 25238 ;;
 25239                           
 25240                           	psect	text119
 25241  003946                     __ptext119:
 25242                           	opt stack 0
 25243  003946                     _I2cSlv_QueryI2cData:
 25244                           	opt stack 9
 25245                           
 25246                           ;i2c_slv.c: 383: static I2cOpStateType I2cOpState = ASK_DATA;
 25247                           ;i2c_slv.c: 384: static SwTimerType QueryTimer;
 25248                           ;i2c_slv.c: 385: static SwTimerType TimeoutTimer;
 25249                           ;i2c_slv.c: 386: static I2cOpStsType Ret;
 25250                           ;i2c_slv.c: 388: switch(I2cOpState)
 25251                           
 25252                           ; BSR set to: 0
 25253                           ;incstack = 0
 25254  003946  D05B               	goto	l1440
 25255  003948                     
 25256                           ;i2c_slv.c: 392: I2cSlv_SendI2cMsg(TxBuffer, SlaveAddr, TxLen);
 25257  003948  C0A2  F080         	movff	I2cSlv_QueryI2cData@TxBuffer,I2cSlv_SendI2cMsg@TxBuffer
 25258  00394C  C0A3  F081         	movff	I2cSlv_QueryI2cData@TxBuffer+1,I2cSlv_SendI2cMsg@TxBuffer+1
 25259  003950  C0A8  F082         	movff	I2cSlv_QueryI2cData@SlaveAddr,I2cSlv_SendI2cMsg@SlaveAddr
 25260  003954  C0A4  F083         	movff	I2cSlv_QueryI2cData@TxLen,I2cSlv_SendI2cMsg@DataLenght
 25261  003958  EC19  F031         	call	_I2cSlv_SendI2cMsg	;wreg free
 25262                           
 25263                           ;i2c_slv.c: 394: I2cOpState = REQ_DATA;
 25264  00395C  0E01               	movlw	1
 25265  00395E  0101               	movlb	1	; () banked
 25266  003960  6FE3               	movwf	I2cSlv_QueryI2cData@I2cOpState& (0+255),b
 25267                           
 25268                           ; BSR set to: 1
 25269                           ;i2c_slv.c: 396: Ret = OP_IN_PROGRESS;
 25270  003962  0E00               	movlw	0
 25271  003964  D04A               	goto	L58
 25272  003966                     
 25273                           ; BSR set to: 1
 25274                           ;i2c_slv.c: 401: if (OsTmr_Wait(&QueryTimer,500u) == DelayExpired)
 25275                           
 25276                           ; BSR set to: 1
 25277  003966  0EE2               	movlw	low I2cSlv_QueryI2cData@QueryTimer
 25278  003968  0100               	movlb	0	; () banked
 25279  00396A  6F9B               	movwf	OsTmr_Wait@WaitTimer& (0+255),b
 25280  00396C  0E04               	movlw	high I2cSlv_QueryI2cData@QueryTimer
 25281  00396E  6F9C               	movwf	(OsTmr_Wait@WaitTimer+1)& (0+255),b
 25282  003970  0EF4               	movlw	244
 25283  003972  6F9D               	movwf	OsTmr_Wait@DelayMs& (0+255),b
 25284  003974  0E01               	movlw	1
 25285  003976  6F9E               	movwf	(OsTmr_Wait@DelayMs+1)& (0+255),b
 25286  003978  0E00               	movlw	0
 25287  00397A  6F9F               	movwf	(OsTmr_Wait@DelayMs+2)& (0+255),b
 25288  00397C  0E00               	movlw	0
 25289  00397E  6FA0               	movwf	(OsTmr_Wait@DelayMs+3)& (0+255),b
 25290  003980  EC43  F029         	call	_OsTmr_Wait	;wreg free
 25291  003984  06E8               	decf	wreg,f,c
 25292  003986  A4D8               	btfss	status,2,c
 25293  003988  D036               	goto	l1448
 25294                           
 25295                           ;i2c_slv.c: 402: {
 25296                           ;i2c_slv.c: 403: OsTmr_StartTimer(&TimeoutTimer,500u * 5u);
 25297  00398A  0E4B               	movlw	low I2cSlv_QueryI2cData@TimeoutTimer
 25298  00398C  0100               	movlb	0	; () banked
 25299  00398E  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 25300  003990  0E03               	movlw	high I2cSlv_QueryI2cData@TimeoutTimer
 25301  003992  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 25302  003994  0EC4               	movlw	196
 25303  003996  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 25304  003998  0E09               	movlw	9
 25305  00399A  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 25306  00399C  0E00               	movlw	0
 25307  00399E  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 25308  0039A0  0E00               	movlw	0
 25309  0039A2  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 25310  0039A4  EC34  F02C         	call	_OsTmr_StartTimer	;wreg free
 25311                           
 25312                           ;i2c_slv.c: 404: I2cSlv_ReceiveI2cMsg(RxBuffer, SlaveAddr, RxLen);
 25313  0039A8  C0A5  F080         	movff	I2cSlv_QueryI2cData@RxBuffer,I2cSlv_ReceiveI2cMsg@RxBuffer
 25314  0039AC  C0A6  F081         	movff	I2cSlv_QueryI2cData@RxBuffer+1,I2cSlv_ReceiveI2cMsg@RxBuffer+1
 25315  0039B0  C0A8  F082         	movff	I2cSlv_QueryI2cData@SlaveAddr,I2cSlv_ReceiveI2cMsg@SlaveAddr
 25316  0039B4  C0A7  F083         	movff	I2cSlv_QueryI2cData@RxLen,I2cSlv_ReceiveI2cMsg@DataLenght
 25317  0039B8  ECBA  F030         	call	_I2cSlv_ReceiveI2cMsg	;wreg free
 25318                           
 25319                           ;i2c_slv.c: 405: I2cOpState = GET_DATA;
 25320  0039BC  0E02               	movlw	2
 25321  0039BE  0101               	movlb	1	; () banked
 25322  0039C0  6FE3               	movwf	I2cSlv_QueryI2cData@I2cOpState& (0+255),b
 25323  0039C2  D019               	goto	l1448
 25324  0039C4                     
 25325                           ; BSR set to: 1
 25326                           ;i2c_slv.c: 413: if (I2cSlv_I2cReadMsgSts() == MessageReceived)
 25327                           
 25328                           ; BSR set to: 1
 25329  0039C4  ECFC  F033         	call	_I2cSlv_I2cReadMsgSts	;wreg free
 25330  0039C8  06E8               	decf	wreg,f,c
 25331  0039CA  A4D8               	btfss	status,2,c
 25332  0039CC  D005               	goto	l1446
 25333                           
 25334                           ;i2c_slv.c: 414: {
 25335                           ;i2c_slv.c: 416: I2cOpState = ASK_DATA;
 25336  0039CE  0E00               	movlw	0
 25337  0039D0  0101               	movlb	1	; () banked
 25338  0039D2  6FE3               	movwf	I2cSlv_QueryI2cData@I2cOpState& (0+255),b
 25339                           
 25340                           ;i2c_slv.c: 418: Ret = OP_COMPLETE;
 25341  0039D4  0E01               	movlw	1
 25342  0039D6  D011               	goto	L58
 25343  0039D8                     l1446:
 25344                           
 25345                           ;i2c_slv.c: 420: else
 25346                           ;i2c_slv.c: 421: {
 25347                           ;i2c_slv.c: 422: if (OsTmr_GetTimerStatus(&TimeoutTimer) == SwTimerExpired)
 25348                           
 25349                           ; BSR set to: 1
 25350  0039D8  0E4B               	movlw	low I2cSlv_QueryI2cData@TimeoutTimer
 25351  0039DA  0100               	movlb	0	; () banked
 25352  0039DC  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 25353  0039DE  0E03               	movlw	high I2cSlv_QueryI2cData@TimeoutTimer
 25354  0039E0  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 25355  0039E2  ECE9  F027         	call	_OsTmr_GetTimerStatus	;wreg free
 25356  0039E6  06E8               	decf	wreg,f,c
 25357  0039E8  A4D8               	btfss	status,2,c
 25358  0039EA  D005               	goto	l1448
 25359                           
 25360                           ;i2c_slv.c: 423: {
 25361                           ;i2c_slv.c: 425: I2cOpState = ASK_DATA;
 25362  0039EC  0E00               	movlw	0
 25363  0039EE  0101               	movlb	1	; () banked
 25364  0039F0  6FE3               	movwf	I2cSlv_QueryI2cData@I2cOpState& (0+255),b
 25365                           
 25366                           ;i2c_slv.c: 427: Ret = OP_TIMEOUT;
 25367  0039F2  0E02               	movlw	2
 25368  0039F4  D002               	goto	L58
 25369  0039F6                     l1448:
 25370                           
 25371                           ;i2c_slv.c: 429: else
 25372                           ;i2c_slv.c: 430: {
 25373                           ;i2c_slv.c: 432: Ret = OP_IN_PROGRESS;
 25374                           
 25375                           ; BSR set to: 1
 25376  0039F6  0E00               	movlw	0
 25377  0039F8  0101               	movlb	1	; () banked
 25378  0039FA                     L58:
 25379  0039FA  6FE2               	movwf	I2cSlv_QueryI2cData@Ret& (0+255),b
 25380                           
 25381                           ; BSR set to: 1
 25382                           ;i2c_slv.c: 439: }
 25383                           
 25384                           ; BSR set to: 1
 25385                           ;i2c_slv.c: 438: break;
 25386                           
 25387                           ;i2c_slv.c: 437: default:
 25388                           
 25389                           ; BSR set to: 1
 25390                           ;i2c_slv.c: 433: }
 25391                           ;i2c_slv.c: 434: }
 25392                           ;i2c_slv.c: 435: break;
 25393                           
 25394                           ; BSR set to: 1
 25395  0039FC  D00B               	goto	l1442
 25396  0039FE                     l1440:
 25397                           
 25398                           ; BSR set to: 1
 25399  0039FE  0101               	movlb	1	; () banked
 25400  003A00  51E3               	movf	I2cSlv_QueryI2cData@I2cOpState& (0+255),w,b
 25401                           
 25402                           ; Switch size 1, requested type "space"
 25403                           ; Number of cases is 3, Range of values is 0 to 2
 25404                           ; switch strategies available:
 25405                           ; Name         Instructions Cycles
 25406                           ; simple_byte           10     6 (average)
 25407                           ;	Chosen strategy is simple_byte
 25408  003A02  0A00               	xorlw	0	; case 0
 25409  003A04  B4D8               	btfsc	status,2,c
 25410  003A06  D7A0               	goto	l1441
 25411  003A08  0A01               	xorlw	1	; case 1
 25412  003A0A  B4D8               	btfsc	status,2,c
 25413  003A0C  D7AC               	goto	l1443
 25414  003A0E  0A03               	xorlw	3	; case 2
 25415  003A10  B4D8               	btfsc	status,2,c
 25416  003A12  D7D8               	goto	l1445
 25417  003A14                     l1442:
 25418                           
 25419                           ; BSR set to: 1
 25420                           ;i2c_slv.c: 441: return Ret;
 25421                           
 25422                           ; BSR set to: 1
 25423  003A14  51E2               	movf	I2cSlv_QueryI2cData@Ret& (0+255),w,b
 25424  003A16  0012               	return	
 25425  003A18                     __end_of_I2cSlv_QueryI2cData:
 25426                           	opt stack 0
 25427                           tosu	equ	0xFFF
 25428                           tosh	equ	0xFFE
 25429                           tosl	equ	0xFFD
 25430                           pclath	equ	0xFFA
 25431                           tblptru	equ	0xFF8
 25432                           tblptrh	equ	0xFF7
 25433                           tblptrl	equ	0xFF6
 25434                           tablat	equ	0xFF5
 25435                           prodh	equ	0xFF4
 25436                           prodl	equ	0xFF3
 25437                           intcon	equ	0xFF2
 25438                           intcon2	equ	0xFF1
 25439                           intcon3	equ	0xFF0
 25440                           indf0	equ	0xFEF
 25441                           postinc0	equ	0xFEE
 25442                           plusw0	equ	0xFEB
 25443                           fsr0h	equ	0xFEA
 25444                           fsr0l	equ	0xFE9
 25445                           wreg	equ	0xFE8
 25446                           indf1	equ	0xFE7
 25447                           postinc1	equ	0xFE6
 25448                           postdec1	equ	0xFE5
 25449                           fsr1h	equ	0xFE2
 25450                           fsr1l	equ	0xFE1
 25451                           indf2	equ	0xFDF
 25452                           postinc2	equ	0xFDE
 25453                           postdec2	equ	0xFDD
 25454                           plusw2	equ	0xFDB
 25455                           fsr2h	equ	0xFDA
 25456                           fsr2l	equ	0xFD9
 25457                           status	equ	0xFD8
 25458                           
 25459 ;; *************** function _OsTmr_Wait *****************
 25460 ;; Defined at:
 25461 ;;		line 154 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 25462 ;; Parameters:    Size  Location     Type
 25463 ;;  WaitTimer       2   59[BANK0 ] PTR struct _SwTimerType
 25464 ;;		 -> Terminal@SwTimer(11), I2cSlv_QueryI2cData@QueryTimer(11), 
 25465 ;;  DelayMs         4   61[BANK0 ] unsigned long 
 25466 ;; Auto vars:     Size  Location     Type
 25467 ;;  Ret             1   65[BANK0 ] enum E7749
 25468 ;; Return value:  Size  Location     Type
 25469 ;;                  1    wreg      enum E7749
 25470 ;; Registers used:
 25471 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 25472 ;; Tracked objects:
 25473 ;;		On entry : 0/0
 25474 ;;		On exit  : 0/0
 25475 ;;		Unchanged: 0/0
 25476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25477 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25478 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25479 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25480 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25481 ;;Total ram usage:        7 bytes
 25482 ;; Hardware stack levels used:    1
 25483 ;; Hardware stack levels required when called:   14
 25484 ;; This function calls:
 25485 ;;		_OsTmr_GetTimerStatus
 25486 ;;		_OsTmr_StartTimer
 25487 ;; This function is called by:
 25488 ;;		_I2cSlv_QueryI2cData
 25489 ;;		_Terminal
 25490 ;; This function uses a non-reentrant model
 25491 ;;
 25492                           
 25493                           	psect	text120
 25494  005286                     __ptext120:
 25495                           	opt stack 0
 25496  005286                     _OsTmr_Wait:
 25497                           	opt stack 11
 25498                           
 25499                           ;os_timers.c: 156: DelayStatusType Ret = DelayNotExpired;
 25500                           
 25501                           ; BSR set to: 1
 25502                           ;incstack = 0
 25503  005286  0E00               	movlw	0
 25504  005288  0100               	movlb	0	; () banked
 25505  00528A  6FA1               	movwf	OsTmr_Wait@Ret& (0+255),b
 25506                           
 25507                           ;os_timers.c: 158: switch (WaitTimer->WaitState)
 25508  00528C  D02D               	goto	l855
 25509  00528E                     
 25510                           ; BSR set to: 0
 25511                           ;os_timers.c: 162: OsTmr_StartTimer(WaitTimer,DelayMs);
 25512                           
 25513                           ; BSR set to: 0
 25514  00528E  C09B  F081         	movff	OsTmr_Wait@WaitTimer,OsTmr_StartTimer@Timer
 25515  005292  C09C  F082         	movff	OsTmr_Wait@WaitTimer+1,OsTmr_StartTimer@Timer+1
 25516  005296  C09D  F083         	movff	OsTmr_Wait@DelayMs,OsTmr_StartTimer@Timeout
 25517  00529A  C09E  F084         	movff	OsTmr_Wait@DelayMs+1,OsTmr_StartTimer@Timeout+1
 25518  00529E  C09F  F085         	movff	OsTmr_Wait@DelayMs+2,OsTmr_StartTimer@Timeout+2
 25519  0052A2  C0A0  F086         	movff	OsTmr_Wait@DelayMs+3,OsTmr_StartTimer@Timeout+3
 25520  0052A6  EC34  F02C         	call	_OsTmr_StartTimer	;wreg free
 25521                           
 25522                           ;os_timers.c: 164: WaitTimer->WaitState = WtWait;
 25523  0052AA  0100               	movlb	0	; () banked
 25524  0052AC  EE20 F00A          	lfsr	2,10
 25525  0052B0  519B               	movf	OsTmr_Wait@WaitTimer& (0+255),w,b
 25526  0052B2  26D9               	addwf	fsr2l,f,c
 25527  0052B4  519C               	movf	(OsTmr_Wait@WaitTimer+1)& (0+255),w,b
 25528  0052B6  22DA               	addwfc	fsr2h,f,c
 25529  0052B8  0E01               	movlw	1
 25530  0052BA  6EDF               	movwf	indf2,c
 25531                           
 25532                           ;os_timers.c: 165: break;
 25533  0052BC  D022               	goto	l857
 25534  0052BE                     
 25535                           ; BSR set to: 0
 25536                           ;os_timers.c: 169: if (OsTmr_GetTimerStatus(WaitTimer) == SwTimerExpired)
 25537                           
 25538                           ; BSR set to: 0
 25539  0052BE  C09B  F095         	movff	OsTmr_Wait@WaitTimer,OsTmr_GetTimerStatus@Timer
 25540  0052C2  C09C  F096         	movff	OsTmr_Wait@WaitTimer+1,OsTmr_GetTimerStatus@Timer+1
 25541  0052C6  ECE9  F027         	call	_OsTmr_GetTimerStatus	;wreg free
 25542  0052CA  06E8               	decf	wreg,f,c
 25543  0052CC  A4D8               	btfss	status,2,c
 25544  0052CE  D019               	goto	l857
 25545                           
 25546                           ;os_timers.c: 170: {
 25547                           ;os_timers.c: 172: WaitTimer->WaitState = WtStartSwTimer;
 25548  0052D0  0100               	movlb	0	; () banked
 25549  0052D2  EE20 F00A          	lfsr	2,10
 25550  0052D6  519B               	movf	OsTmr_Wait@WaitTimer& (0+255),w,b
 25551  0052D8  26D9               	addwf	fsr2l,f,c
 25552  0052DA  519C               	movf	(OsTmr_Wait@WaitTimer+1)& (0+255),w,b
 25553  0052DC  22DA               	addwfc	fsr2h,f,c
 25554  0052DE  0E00               	movlw	0
 25555  0052E0  6EDF               	movwf	indf2,c
 25556                           
 25557                           ; BSR set to: 0
 25558                           ;os_timers.c: 174: Ret = DelayExpired;
 25559  0052E2  0E01               	movlw	1
 25560  0052E4  6FA1               	movwf	OsTmr_Wait@Ret& (0+255),b
 25561                           
 25562                           ; BSR set to: 0
 25563                           ;os_timers.c: 180: }
 25564                           
 25565                           ; BSR set to: 0
 25566                           ;os_timers.c: 179: break;
 25567                           
 25568                           ;os_timers.c: 178: default:
 25569                           
 25570                           ; BSR set to: 0
 25571                           ;os_timers.c: 175: }
 25572                           ;os_timers.c: 176: break;
 25573  0052E6  D00D               	goto	l857
 25574  0052E8                     l855:
 25575                           
 25576                           ; BSR set to: 0
 25577                           
 25578                           ; BSR set to: 0
 25579  0052E8  EE20 F00A          	lfsr	2,10
 25580  0052EC  519B               	movf	OsTmr_Wait@WaitTimer& (0+255),w,b
 25581  0052EE  26D9               	addwf	fsr2l,f,c
 25582  0052F0  519C               	movf	(OsTmr_Wait@WaitTimer+1)& (0+255),w,b
 25583  0052F2  22DA               	addwfc	fsr2h,f,c
 25584  0052F4  50DF               	movf	indf2,w,c
 25585                           
 25586                           ; Switch size 1, requested type "space"
 25587                           ; Number of cases is 2, Range of values is 0 to 1
 25588                           ; switch strategies available:
 25589                           ; Name         Instructions Cycles
 25590                           ; simple_byte            7     4 (average)
 25591                           ;	Chosen strategy is simple_byte
 25592  0052F6  0A00               	xorlw	0	; case 0
 25593  0052F8  B4D8               	btfsc	status,2,c
 25594  0052FA  D7C9               	goto	l856
 25595  0052FC  0A01               	xorlw	1	; case 1
 25596  0052FE  B4D8               	btfsc	status,2,c
 25597  005300  D7DE               	goto	l858
 25598  005302                     l857:
 25599                           
 25600                           ;os_timers.c: 182: return Ret;
 25601                           
 25602                           ; BSR set to: 0
 25603  005302  0100               	movlb	0	; () banked
 25604  005304  51A1               	movf	OsTmr_Wait@Ret& (0+255),w,b
 25605  005306  0012               	return	
 25606  005308                     __end_of_OsTmr_Wait:
 25607                           	opt stack 0
 25608                           tosu	equ	0xFFF
 25609                           tosh	equ	0xFFE
 25610                           tosl	equ	0xFFD
 25611                           pclath	equ	0xFFA
 25612                           tblptru	equ	0xFF8
 25613                           tblptrh	equ	0xFF7
 25614                           tblptrl	equ	0xFF6
 25615                           tablat	equ	0xFF5
 25616                           prodh	equ	0xFF4
 25617                           prodl	equ	0xFF3
 25618                           intcon	equ	0xFF2
 25619                           intcon2	equ	0xFF1
 25620                           intcon3	equ	0xFF0
 25621                           indf0	equ	0xFEF
 25622                           postinc0	equ	0xFEE
 25623                           plusw0	equ	0xFEB
 25624                           fsr0h	equ	0xFEA
 25625                           fsr0l	equ	0xFE9
 25626                           wreg	equ	0xFE8
 25627                           indf1	equ	0xFE7
 25628                           postinc1	equ	0xFE6
 25629                           postdec1	equ	0xFE5
 25630                           fsr1h	equ	0xFE2
 25631                           fsr1l	equ	0xFE1
 25632                           indf2	equ	0xFDF
 25633                           postinc2	equ	0xFDE
 25634                           postdec2	equ	0xFDD
 25635                           plusw2	equ	0xFDB
 25636                           fsr2h	equ	0xFDA
 25637                           fsr2l	equ	0xFD9
 25638                           status	equ	0xFD8
 25639                           
 25640 ;; *************** function _I2cSlv_ReceiveI2cMsg *****************
 25641 ;; Defined at:
 25642 ;;		line 289 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 25643 ;; Parameters:    Size  Location     Type
 25644 ;;  RxBuffer        2   32[BANK0 ] PTR unsigned char 
 25645 ;;		 -> readBuffer(13), memoryPreamble(4), Terminal@TermRxBuffer(50), 
 25646 ;;  SlaveAddr       1   34[BANK0 ] unsigned char 
 25647 ;;  DataLenght      1   35[BANK0 ] unsigned char 
 25648 ;; Auto vars:     Size  Location     Type
 25649 ;;  RxSts           1   36[BANK0 ] unsigned char 
 25650 ;; Return value:  Size  Location     Type
 25651 ;;                  1    wreg      unsigned char 
 25652 ;; Registers used:
 25653 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 25654 ;; Tracked objects:
 25655 ;;		On entry : 0/0
 25656 ;;		On exit  : 0/0
 25657 ;;		Unchanged: 0/0
 25658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25659 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25660 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25662 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25663 ;;Total ram usage:        5 bytes
 25664 ;; Hardware stack levels used:    1
 25665 ;; Hardware stack levels required when called:   12
 25666 ;; This function calls:
 25667 ;;		_GenerateEvt
 25668 ;; This function is called by:
 25669 ;;		_I2cSlv_QueryI2cData
 25670 ;;		_Terminal
 25671 ;; This function uses a non-reentrant model
 25672 ;;
 25673                           
 25674                           	psect	text121
 25675  006174                     __ptext121:
 25676                           	opt stack 0
 25677  006174                     _I2cSlv_ReceiveI2cMsg:
 25678                           	opt stack 13
 25679                           
 25680                           ;i2c_slv.c: 291: UINT8 RxSts = 0u;
 25681                           
 25682                           ; BSR set to: 0
 25683                           ;incstack = 0
 25684  006174  0E00               	movlw	0
 25685  006176  0100               	movlb	0	; () banked
 25686  006178  6F84               	movwf	I2cSlv_ReceiveI2cMsg@RxSts& (0+255),b
 25687                           
 25688                           ; BSR set to: 0
 25689                           ;i2c_slv.c: 293: if (I2cComSts != RxInProgress)
 25690  00617A  0E02               	movlw	2
 25691  00617C  19CF               	xorwf	_I2cComSts& (0+255),w,b
 25692  00617E  B4D8               	btfsc	status,2,c
 25693  006180  D016               	goto	l1417
 25694                           
 25695                           ; BSR set to: 0
 25696                           ;i2c_slv.c: 294: {
 25697                           ;i2c_slv.c: 296: I2cRxPacket.SlaveAddress = SlaveAddr;
 25698  006182  C082  F39C         	movff	I2cSlv_ReceiveI2cMsg@SlaveAddr,_I2cRxPacket
 25699                           
 25700                           ; BSR set to: 0
 25701                           ;i2c_slv.c: 297: I2cRxPacket.ReadWrite = ((UINT8)(1));
 25702  006186  0E01               	movlw	1
 25703  006188  0103               	movlb	3	; () banked
 25704  00618A  6F9D               	movwf	(_I2cRxPacket+1)& (0+255),b
 25705                           
 25706                           ; BSR set to: 3
 25707                           ;i2c_slv.c: 298: I2cRxPacket.Lenght = DataLenght;
 25708  00618C  C083  F3A0         	movff	I2cSlv_ReceiveI2cMsg@DataLenght,_I2cRxPacket+4
 25709                           
 25710                           ; BSR set to: 3
 25711                           ;i2c_slv.c: 299: I2cRxPacket.Buffer = RxBuffer;
 25712  006190  C080  F39E         	movff	I2cSlv_ReceiveI2cMsg@RxBuffer,_I2cRxPacket+2
 25713  006194  C081  F39F         	movff	I2cSlv_ReceiveI2cMsg@RxBuffer+1,_I2cRxPacket+3
 25714                           
 25715                           ; BSR set to: 3
 25716                           ;i2c_slv.c: 302: GenerateEvt(&I2cReadDataEvt);
 25717  006198  0E39               	movlw	low _I2cReadDataEvt
 25718  00619A  0100               	movlb	0	; () banked
 25719  00619C  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 25720  00619E  0E00               	movlw	high _I2cReadDataEvt
 25721  0061A0  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 25722  0061A2  ECD2  F034         	call	_GenerateEvt	;wreg free
 25723                           
 25724                           ;i2c_slv.c: 304: RxSts = 1u;
 25725  0061A6  0E01               	movlw	1
 25726  0061A8  0100               	movlb	0	; () banked
 25727  0061AA  6F84               	movwf	I2cSlv_ReceiveI2cMsg@RxSts& (0+255),b
 25728                           
 25729                           ;i2c_slv.c: 305: }
 25730  0061AC  0012               	return	
 25731  0061AE                     l1417:
 25732                           
 25733                           ; BSR set to: 0
 25734                           ;i2c_slv.c: 306: else
 25735                           ;i2c_slv.c: 307: {
 25736                           ;i2c_slv.c: 309: RxSts = 0u;
 25737                           
 25738                           ; BSR set to: 0
 25739  0061AE  0E00               	movlw	0
 25740  0061B0  6F84               	movwf	I2cSlv_ReceiveI2cMsg@RxSts& (0+255),b
 25741                           
 25742                           ; BSR set to: 0
 25743  0061B2  0012               	return	
 25744  0061B4                     __end_of_I2cSlv_ReceiveI2cMsg:
 25745                           	opt stack 0
 25746                           tosu	equ	0xFFF
 25747                           tosh	equ	0xFFE
 25748                           tosl	equ	0xFFD
 25749                           pclath	equ	0xFFA
 25750                           tblptru	equ	0xFF8
 25751                           tblptrh	equ	0xFF7
 25752                           tblptrl	equ	0xFF6
 25753                           tablat	equ	0xFF5
 25754                           prodh	equ	0xFF4
 25755                           prodl	equ	0xFF3
 25756                           intcon	equ	0xFF2
 25757                           intcon2	equ	0xFF1
 25758                           intcon3	equ	0xFF0
 25759                           indf0	equ	0xFEF
 25760                           postinc0	equ	0xFEE
 25761                           plusw0	equ	0xFEB
 25762                           fsr0h	equ	0xFEA
 25763                           fsr0l	equ	0xFE9
 25764                           wreg	equ	0xFE8
 25765                           indf1	equ	0xFE7
 25766                           postinc1	equ	0xFE6
 25767                           postdec1	equ	0xFE5
 25768                           fsr1h	equ	0xFE2
 25769                           fsr1l	equ	0xFE1
 25770                           indf2	equ	0xFDF
 25771                           postinc2	equ	0xFDE
 25772                           postdec2	equ	0xFDD
 25773                           plusw2	equ	0xFDB
 25774                           fsr2h	equ	0xFDA
 25775                           fsr2l	equ	0xFD9
 25776                           status	equ	0xFD8
 25777                           
 25778 ;; *************** function _I2cSlv_I2cReadMsgSts *****************
 25779 ;; Defined at:
 25780 ;;		line 324 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 25781 ;; Parameters:    Size  Location     Type
 25782 ;;		None
 25783 ;; Auto vars:     Size  Location     Type
 25784 ;;  Result          1   33[BANK0 ] enum E8935
 25785 ;; Return value:  Size  Location     Type
 25786 ;;                  1    wreg      enum E8935
 25787 ;; Registers used:
 25788 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 25789 ;; Tracked objects:
 25790 ;;		On entry : 0/0
 25791 ;;		On exit  : 0/0
 25792 ;;		Unchanged: 0/0
 25793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25794 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25795 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25797 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25798 ;;Total ram usage:        1 bytes
 25799 ;; Hardware stack levels used:    1
 25800 ;; Hardware stack levels required when called:   12
 25801 ;; This function calls:
 25802 ;;		_ReceiveEvt
 25803 ;; This function is called by:
 25804 ;;		_I2cSlv_QueryI2cData
 25805 ;;		_Terminal
 25806 ;; This function uses a non-reentrant model
 25807 ;;
 25808                           
 25809                           	psect	text122
 25810  0067F8                     __ptext122:
 25811                           	opt stack 0
 25812  0067F8                     _I2cSlv_I2cReadMsgSts:
 25813                           	opt stack 13
 25814                           
 25815                           ;i2c_slv.c: 327: I2cReadMsgStsType Result;
 25816                           ;i2c_slv.c: 330: if (ReceiveEvt(&(I2cRxPacket.ReadCompleteEvt)))
 25817                           
 25818                           ; BSR set to: 0
 25819                           ;incstack = 0
 25820  0067F8  0EA1               	movlw	low (_I2cRxPacket+5)
 25821  0067FA  0100               	movlb	0	; () banked
 25822  0067FC  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 25823  0067FE  0E03               	movlw	high (_I2cRxPacket+5)
 25824  006800  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 25825  006802  ECE1  F032         	call	_ReceiveEvt	;wreg free
 25826  006806  0900               	iorlw	0
 25827  006808  B4D8               	btfsc	status,2,c
 25828  00680A  D002               	goto	l1422
 25829                           
 25830                           ;i2c_slv.c: 331: {
 25831                           ;i2c_slv.c: 332: Result = MessageReceived;
 25832  00680C  0E01               	movlw	1
 25833  00680E  D001               	goto	L59
 25834  006810                     l1422:
 25835                           
 25836                           ;i2c_slv.c: 334: else
 25837                           ;i2c_slv.c: 335: {
 25838                           ;i2c_slv.c: 336: Result = MessageNotReceived;
 25839                           
 25840                           ; BSR set to: 0
 25841  006810  0E00               	movlw	0
 25842  006812                     L59:
 25843  006812  0100               	movlb	0	; () banked
 25844  006814  6F81               	movwf	I2cSlv_I2cReadMsgSts@Result& (0+255),b
 25845                           
 25846                           ; BSR set to: 0
 25847                           ;i2c_slv.c: 337: }
 25848                           ;i2c_slv.c: 339: return Result;
 25849  006816  5181               	movf	I2cSlv_I2cReadMsgSts@Result& (0+255),w,b
 25850  006818  0012               	return	
 25851  00681A                     __end_of_I2cSlv_I2cReadMsgSts:
 25852                           	opt stack 0
 25853                           tosu	equ	0xFFF
 25854                           tosh	equ	0xFFE
 25855                           tosl	equ	0xFFD
 25856                           pclath	equ	0xFFA
 25857                           tblptru	equ	0xFF8
 25858                           tblptrh	equ	0xFF7
 25859                           tblptrl	equ	0xFF6
 25860                           tablat	equ	0xFF5
 25861                           prodh	equ	0xFF4
 25862                           prodl	equ	0xFF3
 25863                           intcon	equ	0xFF2
 25864                           intcon2	equ	0xFF1
 25865                           intcon3	equ	0xFF0
 25866                           indf0	equ	0xFEF
 25867                           postinc0	equ	0xFEE
 25868                           plusw0	equ	0xFEB
 25869                           fsr0h	equ	0xFEA
 25870                           fsr0l	equ	0xFE9
 25871                           wreg	equ	0xFE8
 25872                           indf1	equ	0xFE7
 25873                           postinc1	equ	0xFE6
 25874                           postdec1	equ	0xFE5
 25875                           fsr1h	equ	0xFE2
 25876                           fsr1l	equ	0xFE1
 25877                           indf2	equ	0xFDF
 25878                           postinc2	equ	0xFDE
 25879                           postdec2	equ	0xFDD
 25880                           plusw2	equ	0xFDB
 25881                           fsr2h	equ	0xFDA
 25882                           fsr2l	equ	0xFD9
 25883                           status	equ	0xFD8
 25884                           
 25885 ;; *************** function _Led_SetLedBlinkTime *****************
 25886 ;; Defined at:
 25887 ;;		line 371 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 25888 ;; Parameters:    Size  Location     Type
 25889 ;;  Led             1    wreg     unsigned char 
 25890 ;;  OnTimeMs        2   29[BANK0 ] unsigned short 
 25891 ;;  OffTimeMs       2   31[BANK0 ] unsigned short 
 25892 ;; Auto vars:     Size  Location     Type
 25893 ;;  Led             1   33[BANK0 ] unsigned char 
 25894 ;; Return value:  Size  Location     Type
 25895 ;;                  1    wreg      void 
 25896 ;; Registers used:
 25897 ;;		wreg, status,2, status,0
 25898 ;; Tracked objects:
 25899 ;;		On entry : 0/0
 25900 ;;		On exit  : 0/0
 25901 ;;		Unchanged: 0/0
 25902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25903 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25904 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25905 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25906 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25907 ;;Total ram usage:        5 bytes
 25908 ;; Hardware stack levels used:    1
 25909 ;; Hardware stack levels required when called:   11
 25910 ;; This function calls:
 25911 ;;		Nothing
 25912 ;; This function is called by:
 25913 ;;		_MyApp_Task
 25914 ;; This function uses a non-reentrant model
 25915 ;;
 25916                           
 25917                           	psect	text123
 25918  005BD4                     __ptext123:
 25919                           	opt stack 0
 25920  005BD4                     _Led_SetLedBlinkTime:
 25921                           	opt stack 16
 25922                           
 25923                           ; BSR set to: 0
 25924                           ;incstack = 0
 25925                           ;Led_SetLedBlinkTime@Led stored from wreg
 25926  005BD4  0100               	movlb	0	; () banked
 25927  005BD6  6F81               	movwf	Led_SetLedBlinkTime@Led& (0+255),b
 25928                           
 25929                           ;led.c: 374: switch (Led)
 25930  005BD8  D01B               	goto	l2151
 25931  005BDA                     l2152:
 25932                           
 25933                           ; BSR set to: 0
 25934                           ;led.c: 377: Led1Blink.LedOnTimeMs = OnTimeMs;
 25935  005BDA  C07D  F376         	movff	Led_SetLedBlinkTime@OnTimeMs,_Led1Blink+4
 25936  005BDE  C07E  F377         	movff	Led_SetLedBlinkTime@OnTimeMs+1,_Led1Blink+5
 25937                           
 25938                           ;led.c: 378: Led1Blink.LedOffTimeMs = OffTimeMs;
 25939  005BE2  C07F  F378         	movff	Led_SetLedBlinkTime@OffTimeMs,_Led1Blink+6
 25940  005BE6  C080  F379         	movff	Led_SetLedBlinkTime@OffTimeMs+1,_Led1Blink+7
 25941                           
 25942                           ;led.c: 379: break;
 25943  005BEA  0012               	return	
 25944  005BEC                     l2154:
 25945                           
 25946                           ; BSR set to: 0
 25947                           ;led.c: 382: Led2Blink.LedOnTimeMs = OnTimeMs;
 25948  005BEC  C07D  F36D         	movff	Led_SetLedBlinkTime@OnTimeMs,_Led2Blink+4
 25949  005BF0  C07E  F36E         	movff	Led_SetLedBlinkTime@OnTimeMs+1,_Led2Blink+5
 25950                           
 25951                           ;led.c: 383: Led2Blink.LedOffTimeMs = OffTimeMs;
 25952  005BF4  C07F  F36F         	movff	Led_SetLedBlinkTime@OffTimeMs,_Led2Blink+6
 25953  005BF8  C080  F370         	movff	Led_SetLedBlinkTime@OffTimeMs+1,_Led2Blink+7
 25954                           
 25955                           ;led.c: 384: break;
 25956  005BFC  0012               	return	
 25957  005BFE                     l2155:
 25958                           
 25959                           ; BSR set to: 0
 25960                           ;led.c: 387: Led2Blink.LedOnTimeMs = OnTimeMs;
 25961  005BFE  C07D  F36D         	movff	Led_SetLedBlinkTime@OnTimeMs,_Led2Blink+4
 25962  005C02  C07E  F36E         	movff	Led_SetLedBlinkTime@OnTimeMs+1,_Led2Blink+5
 25963                           
 25964                           ;led.c: 388: Led2Blink.LedOffTimeMs = OffTimeMs;
 25965  005C06  C07F  F36F         	movff	Led_SetLedBlinkTime@OffTimeMs,_Led2Blink+6
 25966  005C0A  C080  F370         	movff	Led_SetLedBlinkTime@OffTimeMs+1,_Led2Blink+7
 25967                           
 25968                           ; BSR set to: 0
 25969                           ;led.c: 393: }
 25970                           
 25971                           ; BSR set to: 0
 25972                           ;led.c: 392: break;
 25973                           
 25974                           ;led.c: 391: default:
 25975                           
 25976                           ;led.c: 389: break;
 25977  005C0E  0012               	return	
 25978  005C10                     l2151:
 25979                           
 25980                           ; BSR set to: 0
 25981  005C10  0100               	movlb	0	; () banked
 25982  005C12  5181               	movf	Led_SetLedBlinkTime@Led& (0+255),w,b
 25983                           
 25984                           ; Switch size 1, requested type "space"
 25985                           ; Number of cases is 3, Range of values is 1 to 3
 25986                           ; switch strategies available:
 25987                           ; Name         Instructions Cycles
 25988                           ; simple_byte           10     6 (average)
 25989                           ;	Chosen strategy is simple_byte
 25990  005C14  0A01               	xorlw	1	; case 1
 25991  005C16  B4D8               	btfsc	status,2,c
 25992  005C18  D7E0               	goto	l2152
 25993  005C1A  0A03               	xorlw	3	; case 2
 25994  005C1C  B4D8               	btfsc	status,2,c
 25995  005C1E  D7E6               	goto	l2154
 25996  005C20  0A01               	xorlw	1	; case 3
 25997  005C22  A4D8               	btfss	status,2,c
 25998  005C24  0012               	return	
 25999  005C26  D7EB               	goto	l2155
 26000  005C28                     __end_of_Led_SetLedBlinkTime:
 26001                           	opt stack 0
 26002                           tosu	equ	0xFFF
 26003                           tosh	equ	0xFFE
 26004                           tosl	equ	0xFFD
 26005                           pclath	equ	0xFFA
 26006                           tblptru	equ	0xFF8
 26007                           tblptrh	equ	0xFF7
 26008                           tblptrl	equ	0xFF6
 26009                           tablat	equ	0xFF5
 26010                           prodh	equ	0xFF4
 26011                           prodl	equ	0xFF3
 26012                           intcon	equ	0xFF2
 26013                           intcon2	equ	0xFF1
 26014                           intcon3	equ	0xFF0
 26015                           indf0	equ	0xFEF
 26016                           postinc0	equ	0xFEE
 26017                           plusw0	equ	0xFEB
 26018                           fsr0h	equ	0xFEA
 26019                           fsr0l	equ	0xFE9
 26020                           wreg	equ	0xFE8
 26021                           indf1	equ	0xFE7
 26022                           postinc1	equ	0xFE6
 26023                           postdec1	equ	0xFE5
 26024                           fsr1h	equ	0xFE2
 26025                           fsr1l	equ	0xFE1
 26026                           indf2	equ	0xFDF
 26027                           postinc2	equ	0xFDE
 26028                           postdec2	equ	0xFDD
 26029                           plusw2	equ	0xFDB
 26030                           fsr2h	equ	0xFDA
 26031                           fsr2l	equ	0xFD9
 26032                           status	equ	0xFD8
 26033                           
 26034 ;; *************** function _Eeprom_Reset *****************
 26035 ;; Defined at:
 26036 ;;		line 131 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/05_Eeprom/eeprom_if.c"
 26037 ;; Parameters:    Size  Location     Type
 26038 ;;		None
 26039 ;; Auto vars:     Size  Location     Type
 26040 ;;  SlaveAddress    1   37[BANK0 ] const unsigned char 
 26041 ;; Return value:  Size  Location     Type
 26042 ;;                  1    wreg      unsigned char 
 26043 ;; Registers used:
 26044 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 26045 ;; Tracked objects:
 26046 ;;		On entry : 0/0
 26047 ;;		On exit  : 0/0
 26048 ;;		Unchanged: 0/0
 26049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26050 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26051 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26053 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26054 ;;Total ram usage:        1 bytes
 26055 ;; Hardware stack levels used:    1
 26056 ;; Hardware stack levels required when called:   13
 26057 ;; This function calls:
 26058 ;;		_ClearBuffer
 26059 ;;		_I2cSlv_SendI2cMsg
 26060 ;; This function is called by:
 26061 ;;		_MyApp_Task
 26062 ;; This function uses a non-reentrant model
 26063 ;;
 26064                           
 26065                           	psect	text124
 26066  005A82                     __ptext124:
 26067                           	opt stack 0
 26068  005A82                     _Eeprom_Reset:
 26069                           	opt stack 14
 26070                           
 26071                           ;eeprom_if.c: 133: const UINT8 SlaveAddress = 0x50;
 26072                           
 26073                           ; BSR set to: 0
 26074                           ;incstack = 0
 26075  005A82  0E50               	movlw	80
 26076  005A84  0100               	movlb	0	; () banked
 26077  005A86  6F85               	movwf	Eeprom_Reset@SlaveAddress& (0+255),b
 26078                           
 26079                           ;eeprom_if.c: 134: static UINT8 memoryAddress = 0;
 26080                           ;eeprom_if.c: 136: if (memoryAddress == 0)
 26081  005A88  51C6               	movf	Eeprom_Reset@memoryAddress& (0+255),w,b
 26082  005A8A  A4D8               	btfss	status,2,c
 26083  005A8C  D00A               	goto	l2045
 26084                           
 26085                           ; BSR set to: 0
 26086                           ;eeprom_if.c: 137: {
 26087                           ;eeprom_if.c: 138: ClearBuffer(EepromBuffer, 15);
 26088  005A8E  0EBB               	movlw	low _EepromBuffer
 26089  005A90  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 26090  005A92  0E04               	movlw	high _EepromBuffer
 26091  005A94  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 26092  005A96  0E00               	movlw	0
 26093  005A98  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 26094  005A9A  0E0F               	movlw	15
 26095  005A9C  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 26096  005A9E  EC03  F032         	call	_ClearBuffer	;wreg free
 26097  005AA2                     l2045:
 26098                           
 26099                           ;eeprom_if.c: 139: }
 26100                           ;eeprom_if.c: 141: EepromBuffer[0] = memoryAddress;
 26101  005AA2  C0C6  F4BB         	movff	Eeprom_Reset@memoryAddress,_EepromBuffer
 26102                           
 26103                           ;eeprom_if.c: 142: I2cSlv_SendI2cMsg(EepromBuffer, SlaveAddress, 15);
 26104  005AA6  0EBB               	movlw	low _EepromBuffer
 26105  005AA8  0100               	movlb	0	; () banked
 26106  005AAA  6F80               	movwf	I2cSlv_SendI2cMsg@TxBuffer& (0+255),b
 26107  005AAC  0E04               	movlw	high _EepromBuffer
 26108  005AAE  6F81               	movwf	(I2cSlv_SendI2cMsg@TxBuffer+1)& (0+255),b
 26109  005AB0  C085  F082         	movff	Eeprom_Reset@SlaveAddress,I2cSlv_SendI2cMsg@SlaveAddr
 26110  005AB4  0E0F               	movlw	15
 26111  005AB6  6F83               	movwf	I2cSlv_SendI2cMsg@DataLenght& (0+255),b
 26112  005AB8  EC19  F031         	call	_I2cSlv_SendI2cMsg	;wreg free
 26113                           
 26114                           ;eeprom_if.c: 144: memoryAddress += 16;
 26115  005ABC  0E10               	movlw	16
 26116  005ABE  0100               	movlb	0	; () banked
 26117  005AC0  27C6               	addwf	Eeprom_Reset@memoryAddress& (0+255),f,b
 26118                           
 26119                           ; BSR set to: 0
 26120                           ;eeprom_if.c: 145: if (memoryAddress >= 224)
 26121  005AC2  0EDF               	movlw	223
 26122  005AC4  65C6               	cpfsgt	Eeprom_Reset@memoryAddress& (0+255),b
 26123  005AC6  D006               	goto	l2046
 26124                           
 26125                           ; BSR set to: 0
 26126                           ;eeprom_if.c: 146: {
 26127                           ;eeprom_if.c: 147: EepromBuffer[0] = 0;
 26128  005AC8  0E00               	movlw	0
 26129  005ACA  0104               	movlb	4	; () banked
 26130  005ACC  6FBB               	movwf	_EepromBuffer& (0+255),b
 26131                           
 26132                           ;eeprom_if.c: 148: memoryAddress = 0;
 26133  005ACE  0E00               	movlw	0
 26134  005AD0  0100               	movlb	0	; () banked
 26135  005AD2  6FC6               	movwf	Eeprom_Reset@memoryAddress& (0+255),b
 26136  005AD4                     l2046:
 26137                           
 26138                           ; BSR set to: 0
 26139                           ;eeprom_if.c: 149: }
 26140                           ;eeprom_if.c: 150: return memoryAddress;
 26141  005AD4  51C6               	movf	Eeprom_Reset@memoryAddress& (0+255),w,b
 26142  005AD6  0012               	return	
 26143  005AD8                     __end_of_Eeprom_Reset:
 26144                           	opt stack 0
 26145                           tosu	equ	0xFFF
 26146                           tosh	equ	0xFFE
 26147                           tosl	equ	0xFFD
 26148                           pclath	equ	0xFFA
 26149                           tblptru	equ	0xFF8
 26150                           tblptrh	equ	0xFF7
 26151                           tblptrl	equ	0xFF6
 26152                           tablat	equ	0xFF5
 26153                           prodh	equ	0xFF4
 26154                           prodl	equ	0xFF3
 26155                           intcon	equ	0xFF2
 26156                           intcon2	equ	0xFF1
 26157                           intcon3	equ	0xFF0
 26158                           indf0	equ	0xFEF
 26159                           postinc0	equ	0xFEE
 26160                           plusw0	equ	0xFEB
 26161                           fsr0h	equ	0xFEA
 26162                           fsr0l	equ	0xFE9
 26163                           wreg	equ	0xFE8
 26164                           indf1	equ	0xFE7
 26165                           postinc1	equ	0xFE6
 26166                           postdec1	equ	0xFE5
 26167                           fsr1h	equ	0xFE2
 26168                           fsr1l	equ	0xFE1
 26169                           indf2	equ	0xFDF
 26170                           postinc2	equ	0xFDE
 26171                           postdec2	equ	0xFDD
 26172                           plusw2	equ	0xFDB
 26173                           fsr2h	equ	0xFDA
 26174                           fsr2l	equ	0xFD9
 26175                           status	equ	0xFD8
 26176                           
 26177 ;; *************** function _I2cSlv_SendI2cMsg *****************
 26178 ;; Defined at:
 26179 ;;		line 252 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 26180 ;; Parameters:    Size  Location     Type
 26181 ;;  TxBuffer        2   32[BANK0 ] PTR unsigned char 
 26182 ;;		 -> triggerRelay@txBuffer(2), Terminal@TermTxBuffer(50), ReadAddress(1), EepromBuffer(15), 
 26183 ;;		 -> I2cDummyTx@DummyBuffer(1), 
 26184 ;;  SlaveAddr       1   34[BANK0 ] unsigned char 
 26185 ;;  DataLenght      1   35[BANK0 ] unsigned char 
 26186 ;; Auto vars:     Size  Location     Type
 26187 ;;  TxSts           1   36[BANK0 ] unsigned char 
 26188 ;; Return value:  Size  Location     Type
 26189 ;;                  1    wreg      unsigned char 
 26190 ;; Registers used:
 26191 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 26192 ;; Tracked objects:
 26193 ;;		On entry : 0/0
 26194 ;;		On exit  : 0/0
 26195 ;;		Unchanged: 0/0
 26196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26197 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26198 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26199 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26200 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26201 ;;Total ram usage:        5 bytes
 26202 ;; Hardware stack levels used:    1
 26203 ;; Hardware stack levels required when called:   12
 26204 ;; This function calls:
 26205 ;;		_GenerateEvt
 26206 ;; This function is called by:
 26207 ;;		_I2cSlv_QueryI2cData
 26208 ;;		_Eeprom_Write
 26209 ;;		_Eeprom_Reset
 26210 ;;		_Terminal
 26211 ;;		_triggerRelay
 26212 ;; This function uses a non-reentrant model
 26213 ;;
 26214                           
 26215                           	psect	text125
 26216  006232                     __ptext125:
 26217                           	opt stack 0
 26218  006232                     _I2cSlv_SendI2cMsg:
 26219                           	opt stack 13
 26220                           
 26221                           ;i2c_slv.c: 254: UINT8 TxSts = 0u;
 26222                           
 26223                           ; BSR set to: 0
 26224                           ;incstack = 0
 26225  006232  0E00               	movlw	0
 26226  006234  0100               	movlb	0	; () banked
 26227  006236  6F84               	movwf	I2cSlv_SendI2cMsg@TxSts& (0+255),b
 26228                           
 26229                           ; BSR set to: 0
 26230                           ;i2c_slv.c: 256: if (I2cComSts != TxInProgress)
 26231  006238  05CF               	decf	_I2cComSts& (0+255),w,b
 26232  00623A  B4D8               	btfsc	status,2,c
 26233  00623C  D015               	goto	l1412
 26234                           
 26235                           ; BSR set to: 0
 26236                           ;i2c_slv.c: 257: {
 26237                           ;i2c_slv.c: 259: I2cTxPacket.SlaveAddress = SlaveAddr;
 26238  00623E  C082  F3A2         	movff	I2cSlv_SendI2cMsg@SlaveAddr,_I2cTxPacket
 26239                           
 26240                           ; BSR set to: 0
 26241                           ;i2c_slv.c: 260: I2cTxPacket.ReadWrite = ((UINT8)(0));
 26242  006242  0E00               	movlw	0
 26243  006244  0103               	movlb	3	; () banked
 26244  006246  6FA3               	movwf	(_I2cTxPacket+1)& (0+255),b
 26245                           
 26246                           ; BSR set to: 3
 26247                           ;i2c_slv.c: 261: I2cTxPacket.Lenght = DataLenght;
 26248  006248  C083  F3A6         	movff	I2cSlv_SendI2cMsg@DataLenght,_I2cTxPacket+4
 26249                           
 26250                           ; BSR set to: 3
 26251                           ;i2c_slv.c: 262: I2cTxPacket.Buffer = TxBuffer;
 26252  00624C  C080  F3A4         	movff	I2cSlv_SendI2cMsg@TxBuffer,_I2cTxPacket+2
 26253  006250  C081  F3A5         	movff	I2cSlv_SendI2cMsg@TxBuffer+1,_I2cTxPacket+3
 26254                           
 26255                           ; BSR set to: 3
 26256                           ;i2c_slv.c: 265: GenerateEvt(&I2cWriteDataEvt);
 26257  006254  0ED7               	movlw	low _I2cWriteDataEvt
 26258  006256  0100               	movlb	0	; () banked
 26259  006258  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 26260  00625A  0E00               	movlw	high _I2cWriteDataEvt
 26261  00625C  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 26262  00625E  ECD2  F034         	call	_GenerateEvt	;wreg free
 26263                           
 26264                           ;i2c_slv.c: 267: TxSts = 1u;
 26265  006262  0E01               	movlw	1
 26266  006264  0100               	movlb	0	; () banked
 26267  006266  D001               	goto	L60
 26268  006268                     l1412:
 26269                           
 26270                           ; BSR set to: 0
 26271                           ;i2c_slv.c: 269: else
 26272                           ;i2c_slv.c: 270: {
 26273                           ;i2c_slv.c: 272: TxSts = 0u;
 26274                           
 26275                           ; BSR set to: 0
 26276  006268  0E00               	movlw	0
 26277  00626A                     L60:
 26278  00626A  6F84               	movwf	I2cSlv_SendI2cMsg@TxSts& (0+255),b
 26279                           
 26280                           ; BSR set to: 0
 26281                           ;i2c_slv.c: 273: }
 26282                           ;i2c_slv.c: 275: return TxSts;
 26283  00626C  5184               	movf	I2cSlv_SendI2cMsg@TxSts& (0+255),w,b
 26284  00626E  0012               	return	
 26285  006270                     __end_of_I2cSlv_SendI2cMsg:
 26286                           	opt stack 0
 26287                           tosu	equ	0xFFF
 26288                           tosh	equ	0xFFE
 26289                           tosl	equ	0xFFD
 26290                           pclath	equ	0xFFA
 26291                           tblptru	equ	0xFF8
 26292                           tblptrh	equ	0xFF7
 26293                           tblptrl	equ	0xFF6
 26294                           tablat	equ	0xFF5
 26295                           prodh	equ	0xFF4
 26296                           prodl	equ	0xFF3
 26297                           intcon	equ	0xFF2
 26298                           intcon2	equ	0xFF1
 26299                           intcon3	equ	0xFF0
 26300                           indf0	equ	0xFEF
 26301                           postinc0	equ	0xFEE
 26302                           plusw0	equ	0xFEB
 26303                           fsr0h	equ	0xFEA
 26304                           fsr0l	equ	0xFE9
 26305                           wreg	equ	0xFE8
 26306                           indf1	equ	0xFE7
 26307                           postinc1	equ	0xFE6
 26308                           postdec1	equ	0xFE5
 26309                           fsr1h	equ	0xFE2
 26310                           fsr1l	equ	0xFE1
 26311                           indf2	equ	0xFDF
 26312                           postinc2	equ	0xFDE
 26313                           postdec2	equ	0xFDD
 26314                           plusw2	equ	0xFDB
 26315                           fsr2h	equ	0xFDA
 26316                           fsr2l	equ	0xFD9
 26317                           status	equ	0xFD8
 26318                           
 26319 ;; *************** function _UartSetConfig *****************
 26320 ;; Defined at:
 26321 ;;		line 190 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 26322 ;; Parameters:    Size  Location     Type
 26323 ;;		None
 26324 ;; Auto vars:     Size  Location     Type
 26325 ;;		None
 26326 ;; Return value:  Size  Location     Type
 26327 ;;                  1    wreg      void 
 26328 ;; Registers used:
 26329 ;;		wreg, status,2
 26330 ;; Tracked objects:
 26331 ;;		On entry : 0/0
 26332 ;;		On exit  : 0/0
 26333 ;;		Unchanged: 0/0
 26334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26335 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26336 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26338 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26339 ;;Total ram usage:        0 bytes
 26340 ;; Hardware stack levels used:    1
 26341 ;; Hardware stack levels required when called:   11
 26342 ;; This function calls:
 26343 ;;		Nothing
 26344 ;; This function is called by:
 26345 ;;		_Mdm_MainTask
 26346 ;; This function uses a non-reentrant model
 26347 ;;
 26348                           
 26349                           	psect	text126
 26350  005922                     __ptext126:
 26351                           	opt stack 0
 26352  005922                     _UartSetConfig:
 26353                           	opt stack 16
 26354                           
 26355                           ;mdm_gsm_gprs.c: 192: UartConfig.UartEnable = ((UINT8)(1));
 26356                           
 26357                           ; BSR set to: 0
 26358                           ;incstack = 0
 26359  005922  0E01               	movlw	1
 26360  005924  0103               	movlb	3	; () banked
 26361  005926  6F1C               	movwf	_UartConfig& (0+255),b
 26362                           
 26363                           ;mdm_gsm_gprs.c: 193: UartConfig.UartMode = ((UINT8)(0));
 26364  005928  0E00               	movlw	0
 26365  00592A  6F1D               	movwf	(_UartConfig+1)& (0+255),b
 26366                           
 26367                           ;mdm_gsm_gprs.c: 195: UartConfig.BaudRateMode = ((UINT8)(0));
 26368  00592C  0E00               	movlw	0
 26369  00592E  6F1E               	movwf	(_UartConfig+2)& (0+255),b
 26370                           
 26371                           ;mdm_gsm_gprs.c: 200: UartConfig.HighBaudMode = ((UINT8)(0));
 26372  005930  0E00               	movlw	0
 26373  005932  6F1F               	movwf	(_UartConfig+3)& (0+255),b
 26374                           
 26375                           ;mdm_gsm_gprs.c: 204: UartConfig.Tx9bitMode = ((UINT8)(0));
 26376  005934  0E00               	movlw	0
 26377  005936  6F20               	movwf	(_UartConfig+4)& (0+255),b
 26378                           
 26379                           ;mdm_gsm_gprs.c: 205: UartConfig.Rx9bitMode = ((UINT8)(0));
 26380  005938  0E00               	movlw	0
 26381  00593A  6F21               	movwf	(_UartConfig+5)& (0+255),b
 26382                           
 26383                           ;mdm_gsm_gprs.c: 206: UartConfig.TxEnable = ((UINT8)(1));
 26384  00593C  0E01               	movlw	1
 26385  00593E  6F22               	movwf	(_UartConfig+6)& (0+255),b
 26386                           
 26387                           ;mdm_gsm_gprs.c: 207: UartConfig.RxEnable = ((UINT8)(1));
 26388  005940  0E01               	movlw	1
 26389  005942  6F23               	movwf	(_UartConfig+7)& (0+255),b
 26390                           
 26391                           ;mdm_gsm_gprs.c: 208: UartConfig.SendBreakEnable = ((UINT8)(0));
 26392  005944  0E00               	movlw	0
 26393  005946  6F24               	movwf	(_UartConfig+8)& (0+255),b
 26394                           
 26395                           ;mdm_gsm_gprs.c: 209: UartConfig.AutobaudEnable = ((UINT8)(0));
 26396  005948  0E00               	movlw	0
 26397  00594A  6F25               	movwf	(_UartConfig+9)& (0+255),b
 26398                           
 26399                           ;mdm_gsm_gprs.c: 210: UartConfig.WakeUpEnable = ((UINT8)(0));
 26400  00594C  0E00               	movlw	0
 26401  00594E  6F26               	movwf	(_UartConfig+10)& (0+255),b
 26402                           
 26403                           ;mdm_gsm_gprs.c: 211: UartConfig.TxInterruptEnable = ((UINT8)(0));
 26404  005950  0E00               	movlw	0
 26405  005952  6F27               	movwf	(_UartConfig+11)& (0+255),b
 26406                           
 26407                           ;mdm_gsm_gprs.c: 212: UartConfig.RxInterruptEnable = ((UINT8)(1));
 26408  005954  0E01               	movlw	1
 26409  005956  6F28               	movwf	(_UartConfig+12)& (0+255),b
 26410                           
 26411                           ;mdm_gsm_gprs.c: 213: UartConfig.McuBusClock = ((UINT32)(48000000));
 26412  005958  0E00               	movlw	0
 26413  00595A  6F29               	movwf	(_UartConfig+13)& (0+255),b
 26414  00595C  0E6C               	movlw	108
 26415  00595E  6F2A               	movwf	(_UartConfig+14)& (0+255),b
 26416  005960  0EDC               	movlw	220
 26417  005962  6F2B               	movwf	(_UartConfig+15)& (0+255),b
 26418  005964  0E02               	movlw	2
 26419  005966  6F2C               	movwf	(_UartConfig+16)& (0+255),b
 26420                           
 26421                           ;mdm_gsm_gprs.c: 215: UartConfig.DesiredBaudRate = ((UINT32)(9600));
 26422  005968  0E80               	movlw	128
 26423  00596A  6F2D               	movwf	(_UartConfig+17)& (0+255),b
 26424  00596C  0E25               	movlw	37
 26425  00596E  6F2E               	movwf	(_UartConfig+18)& (0+255),b
 26426  005970  0E00               	movlw	0
 26427  005972  6F2F               	movwf	(_UartConfig+19)& (0+255),b
 26428  005974  0E00               	movlw	0
 26429  005976  6F30               	movwf	(_UartConfig+20)& (0+255),b
 26430                           
 26431                           ; BSR set to: 3
 26432  005978  0012               	return		;funcret
 26433  00597A                     __end_of_UartSetConfig:
 26434                           	opt stack 0
 26435                           tosu	equ	0xFFF
 26436                           tosh	equ	0xFFE
 26437                           tosl	equ	0xFFD
 26438                           pclath	equ	0xFFA
 26439                           tblptru	equ	0xFF8
 26440                           tblptrh	equ	0xFF7
 26441                           tblptrl	equ	0xFF6
 26442                           tablat	equ	0xFF5
 26443                           prodh	equ	0xFF4
 26444                           prodl	equ	0xFF3
 26445                           intcon	equ	0xFF2
 26446                           intcon2	equ	0xFF1
 26447                           intcon3	equ	0xFF0
 26448                           indf0	equ	0xFEF
 26449                           postinc0	equ	0xFEE
 26450                           plusw0	equ	0xFEB
 26451                           fsr0h	equ	0xFEA
 26452                           fsr0l	equ	0xFE9
 26453                           wreg	equ	0xFE8
 26454                           indf1	equ	0xFE7
 26455                           postinc1	equ	0xFE6
 26456                           postdec1	equ	0xFE5
 26457                           fsr1h	equ	0xFE2
 26458                           fsr1l	equ	0xFE1
 26459                           indf2	equ	0xFDF
 26460                           postinc2	equ	0xFDE
 26461                           postdec2	equ	0xFDD
 26462                           plusw2	equ	0xFDB
 26463                           fsr2h	equ	0xFDA
 26464                           fsr2l	equ	0xFD9
 26465                           status	equ	0xFD8
 26466                           
 26467 ;; *************** function _TurnOnModem *****************
 26468 ;; Defined at:
 26469 ;;		line 376 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 26470 ;; Parameters:    Size  Location     Type
 26471 ;;		None
 26472 ;; Auto vars:     Size  Location     Type
 26473 ;;		None
 26474 ;; Return value:  Size  Location     Type
 26475 ;;                  1    wreg      void 
 26476 ;; Registers used:
 26477 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 26478 ;; Tracked objects:
 26479 ;;		On entry : 0/0
 26480 ;;		On exit  : 0/0
 26481 ;;		Unchanged: 0/0
 26482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26483 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26484 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26485 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26486 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26487 ;;Total ram usage:        0 bytes
 26488 ;; Hardware stack levels used:    1
 26489 ;; Hardware stack levels required when called:   12
 26490 ;; This function calls:
 26491 ;;		_GenerateEvt
 26492 ;; This function is called by:
 26493 ;;		_Mdm_MainTask
 26494 ;; This function uses a non-reentrant model
 26495 ;;
 26496                           
 26497                           	psect	text127
 26498  005F46                     __ptext127:
 26499                           	opt stack 0
 26500  005F46                     _TurnOnModem:
 26501                           	opt stack 15
 26502                           
 26503                           ;mdm_gsm_gprs.c: 378: static TurnOnMdmStateType TurnOnMdmState = TurnOnDelay;
 26504                           ;mdm_gsm_gprs.c: 379: static UINT16 Counter = 0;
 26505                           ;mdm_gsm_gprs.c: 381: switch (TurnOnMdmState)
 26506                           
 26507                           ; BSR set to: 3
 26508                           ;incstack = 0
 26509  005F46  D01B               	goto	l1009
 26510  005F48                     
 26511                           ;mdm_gsm_gprs.c: 385: Counter++;
 26512  005F48  0102               	movlb	2	; () banked
 26513  005F4A  4BDA               	infsnz	TurnOnModem@Counter& (0+255),f,b
 26514  005F4C  2BDB               	incf	(TurnOnModem@Counter+1)& (0+255),f,b
 26515                           
 26516                           ; BSR set to: 2
 26517                           ;mdm_gsm_gprs.c: 387: if (Counter >= (((UINT16)(3000))/((UINT16)(1))))
 26518  005F4E  0EB8               	movlw	184
 26519  005F50  5DDA               	subwf	TurnOnModem@Counter& (0+255),w,b
 26520  005F52  0E0B               	movlw	11
 26521  005F54  59DB               	subwfb	(TurnOnModem@Counter+1)& (0+255),w,b
 26522  005F56  A0D8               	btfss	status,0,c
 26523  005F58  0012               	return	
 26524                           
 26525                           ; BSR set to: 2
 26526                           ;mdm_gsm_gprs.c: 388: {
 26527                           ;mdm_gsm_gprs.c: 390: TurnOnMdmState = TurnOnModuleReq;
 26528  005F5A  0E01               	movlw	1
 26529  005F5C  0101               	movlb	1	; () banked
 26530  005F5E  6FF2               	movwf	TurnOnModem@TurnOnMdmState& (0+255),b
 26531                           
 26532                           ; BSR set to: 1
 26533                           ;mdm_gsm_gprs.c: 391: }
 26534                           ;mdm_gsm_gprs.c: 392: break;
 26535  005F60  0012               	return	
 26536  005F62                     
 26537                           ; BSR set to: 1
 26538                           ;mdm_gsm_gprs.c: 396: GenerateEvt(&MdmOnOffPulseRequest);
 26539                           
 26540                           ; BSR set to: 1
 26541  005F62  0EE0               	movlw	low _MdmOnOffPulseRequest
 26542  005F64  0100               	movlb	0	; () banked
 26543  005F66  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 26544  005F68  0E00               	movlw	high _MdmOnOffPulseRequest
 26545  005F6A  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 26546  005F6C  ECD2  F034         	call	_GenerateEvt	;wreg free
 26547                           
 26548                           ;mdm_gsm_gprs.c: 398: MdmStatus = ModemOn;
 26549  005F70  0E01               	movlw	1
 26550  005F72  0100               	movlb	0	; () banked
 26551  005F74  6FD1               	movwf	_MdmStatus& (0+255),b
 26552                           
 26553                           ; BSR set to: 0
 26554                           ;mdm_gsm_gprs.c: 400: TurnOnMdmState = Stop;
 26555  005F76  0E02               	movlw	2
 26556  005F78  0101               	movlb	1	; () banked
 26557  005F7A  6FF2               	movwf	TurnOnModem@TurnOnMdmState& (0+255),b
 26558                           
 26559                           ; BSR set to: 1
 26560                           ;mdm_gsm_gprs.c: 408: }
 26561                           
 26562                           ; BSR set to: 1
 26563                           ;mdm_gsm_gprs.c: 407: break;
 26564                           
 26565                           ;mdm_gsm_gprs.c: 406: default:
 26566                           
 26567                           ; BSR set to: 1
 26568                           ;mdm_gsm_gprs.c: 404: break;
 26569                           
 26570                           ;mdm_gsm_gprs.c: 403: case Stop:
 26571                           
 26572                           ;mdm_gsm_gprs.c: 401: break;
 26573  005F7C  0012               	return	
 26574  005F7E                     l1009:
 26575                           
 26576                           ; BSR set to: 1
 26577  005F7E  0101               	movlb	1	; () banked
 26578  005F80  51F2               	movf	TurnOnModem@TurnOnMdmState& (0+255),w,b
 26579                           
 26580                           ; Switch size 1, requested type "space"
 26581                           ; Number of cases is 3, Range of values is 0 to 2
 26582                           ; switch strategies available:
 26583                           ; Name         Instructions Cycles
 26584                           ; simple_byte           10     6 (average)
 26585                           ;	Chosen strategy is simple_byte
 26586  005F82  0A00               	xorlw	0	; case 0
 26587  005F84  B4D8               	btfsc	status,2,c
 26588  005F86  D7E0               	goto	l1010
 26589  005F88  0A01               	xorlw	1	; case 1
 26590  005F8A  B4D8               	btfsc	status,2,c
 26591  005F8C  D7EA               	goto	l1013
 26592  005F8E  0A03               	xorlw	3	; case 2
 26593  005F90  0012               	return	
 26594  005F92                     __end_of_TurnOnModem:
 26595                           	opt stack 0
 26596                           tosu	equ	0xFFF
 26597                           tosh	equ	0xFFE
 26598                           tosl	equ	0xFFD
 26599                           pclath	equ	0xFFA
 26600                           tblptru	equ	0xFF8
 26601                           tblptrh	equ	0xFF7
 26602                           tblptrl	equ	0xFF6
 26603                           tablat	equ	0xFF5
 26604                           prodh	equ	0xFF4
 26605                           prodl	equ	0xFF3
 26606                           intcon	equ	0xFF2
 26607                           intcon2	equ	0xFF1
 26608                           intcon3	equ	0xFF0
 26609                           indf0	equ	0xFEF
 26610                           postinc0	equ	0xFEE
 26611                           plusw0	equ	0xFEB
 26612                           fsr0h	equ	0xFEA
 26613                           fsr0l	equ	0xFE9
 26614                           wreg	equ	0xFE8
 26615                           indf1	equ	0xFE7
 26616                           postinc1	equ	0xFE6
 26617                           postdec1	equ	0xFE5
 26618                           fsr1h	equ	0xFE2
 26619                           fsr1l	equ	0xFE1
 26620                           indf2	equ	0xFDF
 26621                           postinc2	equ	0xFDE
 26622                           postdec2	equ	0xFDD
 26623                           plusw2	equ	0xFDB
 26624                           fsr2h	equ	0xFDA
 26625                           fsr2l	equ	0xFD9
 26626                           status	equ	0xFD8
 26627                           
 26628 ;; *************** function _SendSmsSm *****************
 26629 ;; Defined at:
 26630 ;;		line 656 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 26631 ;; Parameters:    Size  Location     Type
 26632 ;;		None
 26633 ;; Auto vars:     Size  Location     Type
 26634 ;;  UartMessage    50    0[BANK1 ] unsigned char [50]
 26635 ;; Return value:  Size  Location     Type
 26636 ;;                  1    wreg      void 
 26637 ;; Registers used:
 26638 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26639 ;; Tracked objects:
 26640 ;;		On entry : 0/0
 26641 ;;		On exit  : 0/0
 26642 ;;		Unchanged: 0/0
 26643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26644 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26645 ;;      Locals:         0       0      50       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26646 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26647 ;;      Totals:         0       2      50       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26648 ;;Total ram usage:       52 bytes
 26649 ;; Hardware stack levels used:    1
 26650 ;; Hardware stack levels required when called:   14
 26651 ;; This function calls:
 26652 ;;		_OsTmr_GetTimerStatus
 26653 ;;		_OsTmr_StartTimer
 26654 ;;		_ReceiveEvt
 26655 ;;		_StringCopy
 26656 ;;		_Uart_WriteStringLen
 26657 ;; This function is called by:
 26658 ;;		_Mdm_MainTask
 26659 ;; This function uses a non-reentrant model
 26660 ;;
 26661                           
 26662                           	psect	text128
 26663  0019F2                     __ptext128:
 26664                           	opt stack 0
 26665  0019F2                     _SendSmsSm:
 26666                           	opt stack 13
 26667                           
 26668                           ;mdm_gsm_gprs.c: 658: static SendSms_StateType SendSms_State = SendSms_WaitEvt;
 26669                           ;mdm_gsm_gprs.c: 659: static SendSms_StateType SendSms_NextState = SendSms_WaitEvt;
 26670                           ;mdm_gsm_gprs.c: 660: static SwTimerType SwTimer = { 1u, SwTimerExpired, 0, 0, DelayNotE
      +                          xpired, };
 26671                           ;mdm_gsm_gprs.c: 661: UINT8 UartMessage[50];
 26672                           ;mdm_gsm_gprs.c: 664: if (MdmStatus == ModemConfigured)
 26673                           
 26674                           ;incstack = 0
 26675  0019F2  0E03               	movlw	3
 26676  0019F4  0100               	movlb	0	; () banked
 26677  0019F6  19D1               	xorwf	_MdmStatus& (0+255),w,b
 26678  0019F8  A4D8               	btfss	status,2,c
 26679  0019FA  0012               	return	
 26680  0019FC  D0C1               	goto	l1091
 26681  0019FE                     
 26682                           ;mdm_gsm_gprs.c: 670: if (ReceiveEvt(&SendSmsEvent))
 26683                           
 26684                           ; BSR set to: 0
 26685  0019FE  0EDF               	movlw	low _SendSmsEvent
 26686  001A00  0100               	movlb	0	; () banked
 26687  001A02  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 26688  001A04  0E00               	movlw	high _SendSmsEvent
 26689  001A06  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 26690  001A08  ECE1  F032         	call	_ReceiveEvt	;wreg free
 26691  001A0C  0900               	iorlw	0
 26692  001A0E  B4D8               	btfsc	status,2,c
 26693  001A10  0012               	return	
 26694                           
 26695                           ;mdm_gsm_gprs.c: 671: {
 26696                           ;mdm_gsm_gprs.c: 673: SendSms_State = SendSms_CmgsCmd;
 26697  001A12  0E01               	movlw	1
 26698  001A14  0101               	movlb	1	; () banked
 26699  001A16  6FEE               	movwf	SendSmsSm@SendSms_State& (0+255),b
 26700                           
 26701                           ; BSR set to: 1
 26702                           ;mdm_gsm_gprs.c: 674: }
 26703                           ;mdm_gsm_gprs.c: 675: break;
 26704  001A18  0012               	return	
 26705  001A1A                     
 26706                           ; BSR set to: 1
 26707                           ;mdm_gsm_gprs.c: 679: StringCopy((void*)("AT+CMGS=\""),UartMessage,9);
 26708                           
 26709                           ; BSR set to: 1
 26710  001A1A  0ECE               	movlw	low STR_5
 26711  001A1C  0100               	movlb	0	; () banked
 26712  001A1E  6F85               	movwf	StringCopy@SourceStr& (0+255),b
 26713  001A20  0EFF               	movlw	high STR_5
 26714  001A22  6F86               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 26715  001A24  0E00               	movlw	low SendSmsSm@UartMessage
 26716  001A26  6F87               	movwf	StringCopy@DestStr& (0+255),b
 26717  001A28  0E01               	movlw	high SendSmsSm@UartMessage
 26718  001A2A  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 26719  001A2C  0E00               	movlw	0
 26720  001A2E  6F8A               	movwf	(StringCopy@Len+1)& (0+255),b
 26721  001A30  0E09               	movlw	9
 26722  001A32  6F89               	movwf	StringCopy@Len& (0+255),b
 26723  001A34  ECD4  F02B         	call	_StringCopy	;wreg free
 26724                           
 26725                           ;mdm_gsm_gprs.c: 681: StringCopy(PhoneNumber,&UartMessage[9],PhoneNumbLen);
 26726  001A38  0EA7               	movlw	low _PhoneNumber
 26727  001A3A  0100               	movlb	0	; () banked
 26728  001A3C  6F85               	movwf	StringCopy@SourceStr& (0+255),b
 26729  001A3E  0E04               	movlw	high _PhoneNumber
 26730  001A40  6F86               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 26731  001A42  0E09               	movlw	low (SendSmsSm@UartMessage+9)
 26732  001A44  6F87               	movwf	StringCopy@DestStr& (0+255),b
 26733  001A46  0E01               	movlw	high (SendSmsSm@UartMessage+9)
 26734  001A48  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 26735  001A4A  C0D2  F089         	movff	_PhoneNumbLen,StringCopy@Len
 26736  001A4E  6B8A               	clrf	(StringCopy@Len+1)& (0+255),b
 26737  001A50  ECD4  F02B         	call	_StringCopy	;wreg free
 26738                           
 26739                           ;mdm_gsm_gprs.c: 683: UartMessage[PhoneNumbLen + 9] = '"';
 26740  001A54  0100               	movlb	0	; () banked
 26741  001A56  51D2               	movf	_PhoneNumbLen& (0+255),w,b
 26742  001A58  6F9B               	movwf	??_SendSmsSm& (0+255),b
 26743  001A5A  6B9C               	clrf	(??_SendSmsSm+1)& (0+255),b
 26744  001A5C  0E09               	movlw	9
 26745  001A5E  279B               	addwf	??_SendSmsSm& (0+255),f,b
 26746  001A60  0E00               	movlw	0
 26747  001A62  239C               	addwfc	(??_SendSmsSm+1)& (0+255),f,b
 26748  001A64  0E00               	movlw	low SendSmsSm@UartMessage
 26749  001A66  259B               	addwf	??_SendSmsSm& (0+255),w,b
 26750  001A68  6ED9               	movwf	fsr2l,c
 26751  001A6A  0E01               	movlw	high SendSmsSm@UartMessage
 26752  001A6C  219C               	addwfc	(??_SendSmsSm+1)& (0+255),w,b
 26753  001A6E  6EDA               	movwf	fsr2h,c
 26754  001A70  0E22               	movlw	34
 26755  001A72  6EDF               	movwf	indf2,c
 26756                           
 26757                           ; BSR set to: 0
 26758                           ;mdm_gsm_gprs.c: 684: UartMessage[PhoneNumbLen + 10] = '\r';
 26759  001A74  51D2               	movf	_PhoneNumbLen& (0+255),w,b
 26760  001A76  6F9B               	movwf	??_SendSmsSm& (0+255),b
 26761  001A78  6B9C               	clrf	(??_SendSmsSm+1)& (0+255),b
 26762  001A7A  0E0A               	movlw	10
 26763  001A7C  279B               	addwf	??_SendSmsSm& (0+255),f,b
 26764  001A7E  0E00               	movlw	0
 26765  001A80  239C               	addwfc	(??_SendSmsSm+1)& (0+255),f,b
 26766  001A82  0E00               	movlw	low SendSmsSm@UartMessage
 26767  001A84  259B               	addwf	??_SendSmsSm& (0+255),w,b
 26768  001A86  6ED9               	movwf	fsr2l,c
 26769  001A88  0E01               	movlw	high SendSmsSm@UartMessage
 26770  001A8A  219C               	addwfc	(??_SendSmsSm+1)& (0+255),w,b
 26771  001A8C  6EDA               	movwf	fsr2h,c
 26772  001A8E  0E0D               	movlw	13
 26773  001A90  6EDF               	movwf	indf2,c
 26774                           
 26775                           ; BSR set to: 0
 26776                           ;mdm_gsm_gprs.c: 686: Uart_WriteStringLen(((UINT8)(1)), UartMessage,(PhoneNumbLen + 11))
      +                          ;
 26777  001A92  0E00               	movlw	low SendSmsSm@UartMessage
 26778  001A94  6F80               	movwf	Uart_WriteStringLen@StringToWrite& (0+255),b
 26779  001A96  0E01               	movlw	high SendSmsSm@UartMessage
 26780  001A98  6F81               	movwf	(Uart_WriteStringLen@StringToWrite+1)& (0+255),b
 26781  001A9A  51D2               	movf	_PhoneNumbLen& (0+255),w,b
 26782  001A9C  0F0B               	addlw	11
 26783  001A9E  6F82               	movwf	Uart_WriteStringLen@Len& (0+255),b
 26784  001AA0  0E01               	movlw	1
 26785  001AA2  ECDA  F030         	call	_Uart_WriteStringLen
 26786                           
 26787                           ;mdm_gsm_gprs.c: 688: OsTmr_StartTimer(&SwTimer,2500);
 26788  001AA6  0EEA               	movlw	low SendSmsSm@SwTimer
 26789  001AA8  0100               	movlb	0	; () banked
 26790  001AAA  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 26791  001AAC  0E03               	movlw	high SendSmsSm@SwTimer
 26792  001AAE  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 26793  001AB0  0EC4               	movlw	196
 26794  001AB2  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 26795  001AB4  0E09               	movlw	9
 26796  001AB6  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 26797  001AB8  0E00               	movlw	0
 26798  001ABA  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 26799  001ABC  0E00               	movlw	0
 26800  001ABE  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 26801  001AC0  EC34  F02C         	call	_OsTmr_StartTimer	;wreg free
 26802                           
 26803                           ;mdm_gsm_gprs.c: 689: SendSms_State = SendSms_Delay;
 26804  001AC4  0E05               	movlw	5
 26805  001AC6  0101               	movlb	1	; () banked
 26806  001AC8  6FEE               	movwf	SendSmsSm@SendSms_State& (0+255),b
 26807                           
 26808                           ; BSR set to: 1
 26809                           ;mdm_gsm_gprs.c: 690: SendSms_NextState = SendSms_EnterCmd;
 26810  001ACA  0E02               	movlw	2
 26811  001ACC  6FED               	movwf	SendSmsSm@SendSms_NextState& (0+255),b
 26812                           
 26813                           ;mdm_gsm_gprs.c: 691: break;
 26814  001ACE  0012               	return	
 26815  001AD0                     
 26816                           ; BSR set to: 1
 26817                           ;mdm_gsm_gprs.c: 695: UartMessage[0] = '\n';
 26818                           
 26819                           ; BSR set to: 1
 26820  001AD0  0E0A               	movlw	10
 26821  001AD2  6F00               	movwf	SendSmsSm@UartMessage& (0+255),b
 26822                           
 26823                           ;mdm_gsm_gprs.c: 696: UartMessage[1] = '\r';
 26824  001AD4  0E0D               	movlw	13
 26825  001AD6  6F01               	movwf	(SendSmsSm@UartMessage+1)& (0+255),b
 26826                           
 26827                           ; BSR set to: 1
 26828                           ;mdm_gsm_gprs.c: 698: Uart_WriteStringLen(((UINT8)(1)), UartMessage,2);
 26829  001AD8  0E00               	movlw	low SendSmsSm@UartMessage
 26830  001ADA  0100               	movlb	0	; () banked
 26831  001ADC  6F80               	movwf	Uart_WriteStringLen@StringToWrite& (0+255),b
 26832  001ADE  0E01               	movlw	high SendSmsSm@UartMessage
 26833  001AE0  6F81               	movwf	(Uart_WriteStringLen@StringToWrite+1)& (0+255),b
 26834  001AE2  0E02               	movlw	2
 26835  001AE4  6F82               	movwf	Uart_WriteStringLen@Len& (0+255),b
 26836  001AE6  0E01               	movlw	1
 26837  001AE8  ECDA  F030         	call	_Uart_WriteStringLen
 26838                           
 26839                           ;mdm_gsm_gprs.c: 700: SendSms_State = SendSms_WaitConf;
 26840  001AEC  0E03               	movlw	3
 26841  001AEE  0101               	movlb	1	; () banked
 26842  001AF0  6FEE               	movwf	SendSmsSm@SendSms_State& (0+255),b
 26843                           
 26844                           ;mdm_gsm_gprs.c: 701: break;
 26845  001AF2  0012               	return	
 26846  001AF4                     
 26847                           ; BSR set to: 1
 26848                           ;mdm_gsm_gprs.c: 705: if (ReceiveEvt(&NewStringReceived))
 26849                           
 26850                           ; BSR set to: 1
 26851  001AF4  0E3C               	movlw	low _NewStringReceived
 26852  001AF6  0100               	movlb	0	; () banked
 26853  001AF8  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 26854  001AFA  0E00               	movlw	high _NewStringReceived
 26855  001AFC  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 26856  001AFE  ECE1  F032         	call	_ReceiveEvt	;wreg free
 26857  001B02  0900               	iorlw	0
 26858  001B04  B4D8               	btfsc	status,2,c
 26859  001B06  0012               	return	
 26860                           
 26861                           ;mdm_gsm_gprs.c: 706: {
 26862                           ;mdm_gsm_gprs.c: 708: if (RxBuffer[0] == '>')
 26863  001B08  CC58  FFE8         	movff	_RxBuffer,wreg
 26864  001B0C  0A3E               	xorlw	62
 26865  001B0E  A4D8               	btfss	status,2,c
 26866  001B10  0012               	return	
 26867                           
 26868                           ;mdm_gsm_gprs.c: 709: {
 26869                           ;mdm_gsm_gprs.c: 711: SendSms_State = SendSms_SendSmsText;
 26870  001B12  0E04               	movlw	4
 26871  001B14  0101               	movlb	1	; () banked
 26872  001B16  6FEE               	movwf	SendSmsSm@SendSms_State& (0+255),b
 26873                           
 26874                           ; BSR set to: 1
 26875                           ;mdm_gsm_gprs.c: 712: }
 26876                           ;mdm_gsm_gprs.c: 713: }
 26877                           ;mdm_gsm_gprs.c: 714: break;
 26878                           
 26879                           ; BSR set to: 1
 26880  001B18  0012               	return	
 26881  001B1A                     
 26882                           ; BSR set to: 1
 26883                           ;mdm_gsm_gprs.c: 718: StringCopy(MessageText,UartMessage,SmsLen);
 26884                           
 26885                           ; BSR set to: 1
 26886  001B1A  0E72               	movlw	low _MessageText
 26887  001B1C  0100               	movlb	0	; () banked
 26888  001B1E  6F85               	movwf	StringCopy@SourceStr& (0+255),b
 26889  001B20  0E05               	movlw	high _MessageText
 26890  001B22  6F86               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 26891  001B24  0E00               	movlw	low SendSmsSm@UartMessage
 26892  001B26  6F87               	movwf	StringCopy@DestStr& (0+255),b
 26893  001B28  0E01               	movlw	high SendSmsSm@UartMessage
 26894  001B2A  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 26895  001B2C  C0D3  F089         	movff	_SmsLen,StringCopy@Len
 26896  001B30  6B8A               	clrf	(StringCopy@Len+1)& (0+255),b
 26897  001B32  ECD4  F02B         	call	_StringCopy	;wreg free
 26898                           
 26899                           ;mdm_gsm_gprs.c: 720: UartMessage[SmsLen] = 0x1A;
 26900  001B36  0100               	movlb	0	; () banked
 26901  001B38  51D3               	movf	_SmsLen& (0+255),w,b
 26902  001B3A  0D01               	mullw	1
 26903  001B3C  0E00               	movlw	low SendSmsSm@UartMessage
 26904  001B3E  24F3               	addwf	prodl,w,c
 26905  001B40  6ED9               	movwf	fsr2l,c
 26906  001B42  0E01               	movlw	high SendSmsSm@UartMessage
 26907  001B44  20F4               	addwfc	prodh,w,c
 26908  001B46  6EDA               	movwf	fsr2h,c
 26909  001B48  0E1A               	movlw	26
 26910  001B4A  6EDF               	movwf	indf2,c
 26911                           
 26912                           ; BSR set to: 0
 26913                           ;mdm_gsm_gprs.c: 722: Uart_WriteStringLen(((UINT8)(1)), UartMessage,(SmsLen + 1));
 26914  001B4C  0E00               	movlw	low SendSmsSm@UartMessage
 26915  001B4E  6F80               	movwf	Uart_WriteStringLen@StringToWrite& (0+255),b
 26916  001B50  0E01               	movlw	high SendSmsSm@UartMessage
 26917  001B52  6F81               	movwf	(Uart_WriteStringLen@StringToWrite+1)& (0+255),b
 26918  001B54  29D3               	incf	_SmsLen& (0+255),w,b
 26919  001B56  6F82               	movwf	Uart_WriteStringLen@Len& (0+255),b
 26920  001B58  0E01               	movlw	1
 26921  001B5A  ECDA  F030         	call	_Uart_WriteStringLen
 26922                           
 26923                           ;mdm_gsm_gprs.c: 724: SendSms_State = SendSms_WaitEvt;
 26924  001B5E  0E00               	movlw	0
 26925  001B60  0101               	movlb	1	; () banked
 26926  001B62  6FEE               	movwf	SendSmsSm@SendSms_State& (0+255),b
 26927                           
 26928                           ;mdm_gsm_gprs.c: 725: break;
 26929  001B64  0012               	return	
 26930  001B66                     
 26931                           ; BSR set to: 1
 26932                           ;mdm_gsm_gprs.c: 729: if (OsTmr_GetTimerStatus(&SwTimer) == SwTimerExpired)
 26933                           
 26934                           ; BSR set to: 1
 26935  001B66  0EEA               	movlw	low SendSmsSm@SwTimer
 26936  001B68  0100               	movlb	0	; () banked
 26937  001B6A  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 26938  001B6C  0E03               	movlw	high SendSmsSm@SwTimer
 26939  001B6E  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 26940  001B70  ECE9  F027         	call	_OsTmr_GetTimerStatus	;wreg free
 26941  001B74  06E8               	decf	wreg,f,c
 26942  001B76  A4D8               	btfss	status,2,c
 26943  001B78  0012               	return	
 26944                           
 26945                           ;mdm_gsm_gprs.c: 730: {
 26946                           ;mdm_gsm_gprs.c: 732: SendSms_State = SendSms_NextState;
 26947  001B7A  C1ED  F1EE         	movff	SendSmsSm@SendSms_NextState,SendSmsSm@SendSms_State
 26948                           
 26949                           ;mdm_gsm_gprs.c: 738: }
 26950                           
 26951                           ;mdm_gsm_gprs.c: 737: break;
 26952                           
 26953                           ;mdm_gsm_gprs.c: 736: default:
 26954                           
 26955                           ;mdm_gsm_gprs.c: 733: }
 26956                           ;mdm_gsm_gprs.c: 734: break;
 26957  001B7E  0012               	return	
 26958  001B80                     l1091:
 26959  001B80  0101               	movlb	1	; () banked
 26960  001B82  51EE               	movf	SendSmsSm@SendSms_State& (0+255),w,b
 26961                           
 26962                           ; Switch size 1, requested type "space"
 26963                           ; Number of cases is 6, Range of values is 0 to 5
 26964                           ; switch strategies available:
 26965                           ; Name         Instructions Cycles
 26966                           ; simple_byte           19    10 (average)
 26967                           ;	Chosen strategy is simple_byte
 26968  001B84  0A00               	xorlw	0	; case 0
 26969  001B86  B4D8               	btfsc	status,2,c
 26970  001B88  D73A               	goto	l1092
 26971  001B8A  0A01               	xorlw	1	; case 1
 26972  001B8C  B4D8               	btfsc	status,2,c
 26973  001B8E  D745               	goto	l1095
 26974  001B90  0A03               	xorlw	3	; case 2
 26975  001B92  B4D8               	btfsc	status,2,c
 26976  001B94  D79D               	goto	l1096
 26977  001B96  0A01               	xorlw	1	; case 3
 26978  001B98  B4D8               	btfsc	status,2,c
 26979  001B9A  D7AC               	goto	l1097
 26980  001B9C  0A07               	xorlw	7	; case 4
 26981  001B9E  B4D8               	btfsc	status,2,c
 26982  001BA0  D7BC               	goto	l1100
 26983  001BA2  0A01               	xorlw	1	; case 5
 26984  001BA4  A4D8               	btfss	status,2,c
 26985                           
 26986                           ; BSR set to: 1
 26987  001BA6  0012               	return	
 26988  001BA8  D7DE               	goto	l1101
 26989  001BAA                     __end_of_SendSmsSm:
 26990                           	opt stack 0
 26991                           tosu	equ	0xFFF
 26992                           tosh	equ	0xFFE
 26993                           tosl	equ	0xFFD
 26994                           pclath	equ	0xFFA
 26995                           tblptru	equ	0xFF8
 26996                           tblptrh	equ	0xFF7
 26997                           tblptrl	equ	0xFF6
 26998                           tablat	equ	0xFF5
 26999                           prodh	equ	0xFF4
 27000                           prodl	equ	0xFF3
 27001                           intcon	equ	0xFF2
 27002                           intcon2	equ	0xFF1
 27003                           intcon3	equ	0xFF0
 27004                           indf0	equ	0xFEF
 27005                           postinc0	equ	0xFEE
 27006                           plusw0	equ	0xFEB
 27007                           fsr0h	equ	0xFEA
 27008                           fsr0l	equ	0xFE9
 27009                           wreg	equ	0xFE8
 27010                           indf1	equ	0xFE7
 27011                           postinc1	equ	0xFE6
 27012                           postdec1	equ	0xFE5
 27013                           fsr1h	equ	0xFE2
 27014                           fsr1l	equ	0xFE1
 27015                           indf2	equ	0xFDF
 27016                           postinc2	equ	0xFDE
 27017                           postdec2	equ	0xFDD
 27018                           plusw2	equ	0xFDB
 27019                           fsr2h	equ	0xFDA
 27020                           fsr2l	equ	0xFD9
 27021                           status	equ	0xFD8
 27022                           
 27023 ;; *************** function _Uart_WriteStringLen *****************
 27024 ;; Defined at:
 27025 ;;		line 542 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 27026 ;; Parameters:    Size  Location     Type
 27027 ;;  Module          1    wreg     unsigned char 
 27028 ;;  StringToWrit    2   32[BANK0 ] PTR unsigned char 
 27029 ;;		 -> GsmGprsTerminal@UartBuffer(200), SendSmsSm@UartMessage(50), 
 27030 ;;  Len             1   34[BANK0 ] unsigned char 
 27031 ;; Auto vars:     Size  Location     Type
 27032 ;;  Module          1   36[BANK0 ] unsigned char 
 27033 ;;  Index           1   35[BANK0 ] unsigned char 
 27034 ;; Return value:  Size  Location     Type
 27035 ;;                  1    wreg      void 
 27036 ;; Registers used:
 27037 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 27038 ;; Tracked objects:
 27039 ;;		On entry : 0/0
 27040 ;;		On exit  : 0/0
 27041 ;;		Unchanged: 0/0
 27042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27043 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27044 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27046 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27047 ;;Total ram usage:        5 bytes
 27048 ;; Hardware stack levels used:    1
 27049 ;; Hardware stack levels required when called:   12
 27050 ;; This function calls:
 27051 ;;		_UartTxBufferStatus
 27052 ;;		_UartWriteByte
 27053 ;; This function is called by:
 27054 ;;		_SendSmsSm
 27055 ;;		_GsmGprsTerminal
 27056 ;; This function uses a non-reentrant model
 27057 ;;
 27058                           
 27059                           	psect	text129
 27060  0061B4                     __ptext129:
 27061                           	opt stack 0
 27062  0061B4                     _Uart_WriteStringLen:
 27063                           	opt stack 14
 27064                           
 27065                           ;incstack = 0
 27066                           ;Uart_WriteStringLen@Module stored from wreg
 27067  0061B4  0100               	movlb	0	; () banked
 27068  0061B6  6F84               	movwf	Uart_WriteStringLen@Module& (0+255),b
 27069                           
 27070                           ;uart_drv.c: 544: UINT8 Index;
 27071                           ;uart_drv.c: 546: for (Index = 0; Index < Len; Index++)
 27072  0061B8  0E00               	movlw	0
 27073  0061BA  0100               	movlb	0	; () banked
 27074  0061BC  6F83               	movwf	Uart_WriteStringLen@Index& (0+255),b
 27075  0061BE  D015               	goto	l715
 27076  0061C0                     
 27077                           ; BSR set to: 0
 27078                           ;uart_drv.c: 547: {
 27079                           ;uart_drv.c: 549: UartWriteByte(Module, *StringToWrite);
 27080                           
 27081                           ; BSR set to: 0
 27082  0061C0  C080  FFD9         	movff	Uart_WriteStringLen@StringToWrite,fsr2l
 27083  0061C4  C081  FFDA         	movff	Uart_WriteStringLen@StringToWrite+1,fsr2h
 27084  0061C8  50DF               	movf	indf2,w,c
 27085  0061CA  6F7D               	movwf	UartWriteByte@ByteToWrite& (0+255),b
 27086  0061CC  5184               	movf	Uart_WriteStringLen@Module& (0+255),w,b
 27087  0061CE  EC2D  F034         	call	_UartWriteByte
 27088                           
 27089                           ;uart_drv.c: 551: StringToWrite++;
 27090  0061D2  0100               	movlb	0	; () banked
 27091  0061D4  4B80               	infsnz	Uart_WriteStringLen@StringToWrite& (0+255),f,b
 27092  0061D6  2B81               	incf	(Uart_WriteStringLen@StringToWrite+1)& (0+255),f,b
 27093  0061D8                     
 27094                           ; BSR set to: 0
 27095                           
 27096                           ; BSR set to: 0
 27097  0061D8  0100               	movlb	0	; () banked
 27098  0061DA  5184               	movf	Uart_WriteStringLen@Module& (0+255),w,b
 27099  0061DC  EC2F  F02F         	call	_UartTxBufferStatus
 27100  0061E0  06E8               	decf	wreg,f,c
 27101  0061E2  B4D8               	btfsc	status,2,c
 27102  0061E4  D7F9               	goto	l718
 27103  0061E6  0100               	movlb	0	; () banked
 27104  0061E8  2B83               	incf	Uart_WriteStringLen@Index& (0+255),f,b
 27105  0061EA                     l715:
 27106                           
 27107                           ; BSR set to: 0
 27108                           
 27109                           ; BSR set to: 0
 27110  0061EA  5182               	movf	Uart_WriteStringLen@Len& (0+255),w,b
 27111  0061EC  5D83               	subwf	Uart_WriteStringLen@Index& (0+255),w,b
 27112  0061EE  B0D8               	btfsc	status,0,c
 27113  0061F0  0012               	return	
 27114  0061F2  D7E6               	goto	l716
 27115  0061F4                     __end_of_Uart_WriteStringLen:
 27116                           	opt stack 0
 27117                           tosu	equ	0xFFF
 27118                           tosh	equ	0xFFE
 27119                           tosl	equ	0xFFD
 27120                           pclath	equ	0xFFA
 27121                           tblptru	equ	0xFF8
 27122                           tblptrh	equ	0xFF7
 27123                           tblptrl	equ	0xFF6
 27124                           tablat	equ	0xFF5
 27125                           prodh	equ	0xFF4
 27126                           prodl	equ	0xFF3
 27127                           intcon	equ	0xFF2
 27128                           intcon2	equ	0xFF1
 27129                           intcon3	equ	0xFF0
 27130                           indf0	equ	0xFEF
 27131                           postinc0	equ	0xFEE
 27132                           plusw0	equ	0xFEB
 27133                           fsr0h	equ	0xFEA
 27134                           fsr0l	equ	0xFE9
 27135                           wreg	equ	0xFE8
 27136                           indf1	equ	0xFE7
 27137                           postinc1	equ	0xFE6
 27138                           postdec1	equ	0xFE5
 27139                           fsr1h	equ	0xFE2
 27140                           fsr1l	equ	0xFE1
 27141                           indf2	equ	0xFDF
 27142                           postinc2	equ	0xFDE
 27143                           postdec2	equ	0xFDD
 27144                           plusw2	equ	0xFDB
 27145                           fsr2h	equ	0xFDA
 27146                           fsr2l	equ	0xFD9
 27147                           status	equ	0xFD8
 27148                           
 27149 ;; *************** function _ModemEvtParser *****************
 27150 ;; Defined at:
 27151 ;;		line 499 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 27152 ;; Parameters:    Size  Location     Type
 27153 ;;		None
 27154 ;; Auto vars:     Size  Location     Type
 27155 ;;  CallReadyStr   10   47[BANK0 ] unsigned char [10]
 27156 ;;  SmsString       5   62[BANK0 ] unsigned char [5]
 27157 ;;  ClipString      5   57[BANK0 ] unsigned char [5]
 27158 ;;  RingString      4   67[BANK0 ] unsigned char [4]
 27159 ;;  CompareIdx      1   72[BANK0 ] unsigned char 
 27160 ;;  Match           1   71[BANK0 ] unsigned char 
 27161 ;; Return value:  Size  Location     Type
 27162 ;;                  1    wreg      void 
 27163 ;; Registers used:
 27164 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 27165 ;; Tracked objects:
 27166 ;;		On entry : 0/0
 27167 ;;		On exit  : 0/0
 27168 ;;		Unchanged: 0/0
 27169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27170 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27171 ;;      Locals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27173 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27174 ;;Total ram usage:       26 bytes
 27175 ;; Hardware stack levels used:    1
 27176 ;; Hardware stack levels required when called:   12
 27177 ;; This function calls:
 27178 ;;		_GenerateEvt
 27179 ;;		_ReceiveEvt
 27180 ;;		_StringCompare
 27181 ;;		_StringCopy
 27182 ;;		_Uart_ClearRxBuffer
 27183 ;; This function is called by:
 27184 ;;		_Mdm_MainTask
 27185 ;; This function uses a non-reentrant model
 27186 ;;
 27187                           
 27188                           	psect	text130
 27189  001D30                     __ptext130:
 27190                           	opt stack 0
 27191  001D30                     _ModemEvtParser:
 27192                           	opt stack 15
 27193                           
 27194                           ;mdm_gsm_gprs.c: 501: UINT8 RingString[] = {'R','I','N','G'};
 27195                           
 27196                           ; BSR set to: 0
 27197                           ;incstack = 0
 27198  001D30  C3CE  F0A3         	movff	ModemEvtParser@F9110,ModemEvtParser@RingString
 27199  001D34  C3CF  F0A4         	movff	ModemEvtParser@F9110+1,ModemEvtParser@RingString+1
 27200  001D38  C3D0  F0A5         	movff	ModemEvtParser@F9110+2,ModemEvtParser@RingString+2
 27201  001D3C  C3D1  F0A6         	movff	ModemEvtParser@F9110+3,ModemEvtParser@RingString+3
 27202                           
 27203                           ;mdm_gsm_gprs.c: 502: UINT8 ClipString[] = {'+','C','L','I', 'P'};
 27204  001D40  EE23  F0C9         	lfsr	2,ModemEvtParser@F9112
 27205  001D44  EE10  F099         	lfsr	1,ModemEvtParser@ClipString
 27206  001D48  0E04               	movlw	4
 27207  001D4A                     u14921:
 27208  001D4A  CFDB FFE3          	movff	plusw2,plusw1
 27209  001D4E  06E8               	decf	wreg,f,c
 27210  001D50  E2FC               	bc	u14921
 27211                           
 27212                           ;mdm_gsm_gprs.c: 503: UINT8 SmsString[] = {'+','C','M','T','I'};
 27213  001D52  EE23  F0C4         	lfsr	2,ModemEvtParser@F9114
 27214  001D56  EE10  F09E         	lfsr	1,ModemEvtParser@SmsString
 27215  001D5A  0E04               	movlw	4
 27216  001D5C                     u14931:
 27217  001D5C  CFDB FFE3          	movff	plusw2,plusw1
 27218  001D60  06E8               	decf	wreg,f,c
 27219  001D62  E2FC               	bc	u14931
 27220                           
 27221                           ;mdm_gsm_gprs.c: 504: UINT8 CallReadyString[] = {'C','a','l','l',' ','R','e','a','d','y'
      +                          };
 27222  001D64  EE24  F0ED         	lfsr	2,ModemEvtParser@F9116
 27223  001D68  EE10  F08F         	lfsr	1,ModemEvtParser@CallReadyString
 27224  001D6C  0E09               	movlw	9
 27225  001D6E                     u14941:
 27226  001D6E  CFDB FFE3          	movff	plusw2,plusw1
 27227  001D72  06E8               	decf	wreg,f,c
 27228  001D74  E2FC               	bc	u14941
 27229                           
 27230                           ;mdm_gsm_gprs.c: 505: UINT8 CompareIdx = 0;
 27231  001D76  0E00               	movlw	0
 27232  001D78  0100               	movlb	0	; () banked
 27233  001D7A  6FA8               	movwf	ModemEvtParser@CompareIdx& (0+255),b
 27234                           
 27235                           ; BSR set to: 0
 27236                           ;mdm_gsm_gprs.c: 506: UINT8 Match = 0;
 27237  001D7C  0E00               	movlw	0
 27238  001D7E  6FA7               	movwf	ModemEvtParser@Match& (0+255),b
 27239                           
 27240                           ; BSR set to: 0
 27241                           ;mdm_gsm_gprs.c: 509: if (ReceiveEvt(&NewMdmEvtParserRequest))
 27242  001D80  0E3B               	movlw	low _NewMdmEvtParserRequest
 27243  001D82  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 27244  001D84  0E00               	movlw	high _NewMdmEvtParserRequest
 27245  001D86  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 27246  001D88  ECE1  F032         	call	_ReceiveEvt	;wreg free
 27247  001D8C  0900               	iorlw	0
 27248  001D8E  B4D8               	btfsc	status,2,c
 27249  001D90  0012               	return	
 27250                           
 27251                           ;mdm_gsm_gprs.c: 510: {
 27252                           ;mdm_gsm_gprs.c: 511: for (CompareIdx = 0; CompareIdx < ((UINT8)(4)); CompareIdx++)
 27253  001D92  0E00               	movlw	0
 27254  001D94  0100               	movlb	0	; () banked
 27255  001D96  6FA8               	movwf	ModemEvtParser@CompareIdx& (0+255),b
 27256  001D98                     l15462:
 27257                           
 27258                           ; BSR set to: 0
 27259  001D98  0E03               	movlw	3
 27260  001D9A  65A8               	cpfsgt	ModemEvtParser@CompareIdx& (0+255),b
 27261  001D9C  D074               	goto	l1052
 27262  001D9E  D083               	goto	u15010
 27263  001DA0                     
 27264                           ; BSR set to: 0
 27265                           ;mdm_gsm_gprs.c: 517: if (StringCompare(RingString, RxBuffer, sizeof(RingString)))
 27266                           
 27267                           ; BSR set to: 0
 27268  001DA0  0EA3               	movlw	low ModemEvtParser@RingString
 27269  001DA2  6F7D               	movwf	StringCompare@String1& (0+255),b
 27270  001DA4  0E00               	movlw	high ModemEvtParser@RingString
 27271  001DA6  6F7E               	movwf	(StringCompare@String1+1)& (0+255),b
 27272  001DA8  0E58               	movlw	low _RxBuffer
 27273  001DAA  6F7F               	movwf	StringCompare@String2& (0+255),b
 27274  001DAC  0E0C               	movlw	high _RxBuffer
 27275  001DAE  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 27276  001DB0  0E00               	movlw	0
 27277  001DB2  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 27278  001DB4  0E04               	movlw	4
 27279  001DB6  6F81               	movwf	StringCompare@Len& (0+255),b
 27280  001DB8  EC67  F02E         	call	_StringCompare	;wreg free
 27281  001DBC  0900               	iorlw	0
 27282  001DBE  B4D8               	btfsc	status,2,c
 27283  001DC0  D06F               	goto	l1055
 27284                           
 27285                           ;mdm_gsm_gprs.c: 518: {
 27286                           ;mdm_gsm_gprs.c: 520: GenerateEvt(&RingEvent);
 27287  001DC2  0EDE               	movlw	low _RingEvent
 27288  001DC4  0100               	movlb	0	; () banked
 27289  001DC6  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 27290  001DC8  0E00               	movlw	high _RingEvent
 27291  001DCA  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 27292  001DCC  ECD2  F034         	call	_GenerateEvt	;wreg free
 27293  001DD0  D040               	goto	l15484
 27294  001DD2                     
 27295                           ; BSR set to: 0
 27296                           ;mdm_gsm_gprs.c: 528: if (StringCompare(ClipString, RxBuffer, sizeof(ClipString)))
 27297                           
 27298                           ; BSR set to: 0
 27299  001DD2  0E99               	movlw	low ModemEvtParser@ClipString
 27300  001DD4  6F7D               	movwf	StringCompare@String1& (0+255),b
 27301  001DD6  0E00               	movlw	high ModemEvtParser@ClipString
 27302  001DD8  6F7E               	movwf	(StringCompare@String1+1)& (0+255),b
 27303  001DDA  0E58               	movlw	low _RxBuffer
 27304  001DDC  6F7F               	movwf	StringCompare@String2& (0+255),b
 27305  001DDE  0E0C               	movlw	high _RxBuffer
 27306  001DE0  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 27307  001DE2  0E00               	movlw	0
 27308  001DE4  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 27309  001DE6  0E05               	movlw	5
 27310  001DE8  6F81               	movwf	StringCompare@Len& (0+255),b
 27311  001DEA  EC67  F02E         	call	_StringCompare	;wreg free
 27312  001DEE  0900               	iorlw	0
 27313  001DF0  B4D8               	btfsc	status,2,c
 27314  001DF2  D056               	goto	l1055
 27315                           
 27316                           ;mdm_gsm_gprs.c: 529: {
 27317                           ;mdm_gsm_gprs.c: 530: StringCopy(RxBuffer + 8, callerNumber, ((UINT8)(13)));
 27318  001DF4  0E60               	movlw	low (_RxBuffer+8)
 27319  001DF6  0100               	movlb	0	; () banked
 27320  001DF8  6F85               	movwf	StringCopy@SourceStr& (0+255),b
 27321  001DFA  0E0C               	movlw	high (_RxBuffer+8)
 27322  001DFC  6F86               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 27323  001DFE  0E3E               	movlw	low _callerNumber
 27324  001E00  6F87               	movwf	StringCopy@DestStr& (0+255),b
 27325  001E02  0E03               	movlw	high _callerNumber
 27326  001E04  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 27327  001E06  0E00               	movlw	0
 27328  001E08  6F8A               	movwf	(StringCopy@Len+1)& (0+255),b
 27329  001E0A  0E0D               	movlw	13
 27330  001E0C  6F89               	movwf	StringCopy@Len& (0+255),b
 27331  001E0E  ECD4  F02B         	call	_StringCopy	;wreg free
 27332                           
 27333                           ;mdm_gsm_gprs.c: 532: GenerateEvt(&ClipEvent);
 27334  001E12  0EDD               	movlw	low _ClipEvent
 27335  001E14  0100               	movlb	0	; () banked
 27336  001E16  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 27337  001E18  0E00               	movlw	high _ClipEvent
 27338  001E1A  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 27339  001E1C  ECD2  F034         	call	_GenerateEvt	;wreg free
 27340  001E20  D018               	goto	l15484
 27341  001E22                     
 27342                           ; BSR set to: 0
 27343                           ;mdm_gsm_gprs.c: 540: if (StringCompare(SmsString, RxBuffer, sizeof(SmsString)))
 27344                           
 27345                           ; BSR set to: 0
 27346  001E22  0E9E               	movlw	low ModemEvtParser@SmsString
 27347  001E24  6F7D               	movwf	StringCompare@String1& (0+255),b
 27348  001E26  0E00               	movlw	high ModemEvtParser@SmsString
 27349  001E28  6F7E               	movwf	(StringCompare@String1+1)& (0+255),b
 27350  001E2A  0E58               	movlw	low _RxBuffer
 27351  001E2C  6F7F               	movwf	StringCompare@String2& (0+255),b
 27352  001E2E  0E0C               	movlw	high _RxBuffer
 27353  001E30  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 27354  001E32  0E00               	movlw	0
 27355  001E34  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 27356  001E36  0E05               	movlw	5
 27357  001E38  6F81               	movwf	StringCompare@Len& (0+255),b
 27358  001E3A  EC67  F02E         	call	_StringCompare	;wreg free
 27359  001E3E  0900               	iorlw	0
 27360  001E40  B4D8               	btfsc	status,2,c
 27361  001E42  D02E               	goto	l1055
 27362                           
 27363                           ;mdm_gsm_gprs.c: 541: {
 27364                           ;mdm_gsm_gprs.c: 543: GenerateEvt(&SmsEvent);
 27365  001E44  0EDC               	movlw	low _SmsEvent
 27366  001E46  0100               	movlb	0	; () banked
 27367  001E48  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 27368  001E4A  0E00               	movlw	high _SmsEvent
 27369  001E4C  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 27370  001E4E  ECD2  F034         	call	_GenerateEvt	;wreg free
 27371  001E52                     l15484:
 27372                           
 27373                           ;mdm_gsm_gprs.c: 545: Match = 1;
 27374  001E52  0E01               	movlw	1
 27375  001E54  0100               	movlb	0	; () banked
 27376  001E56  D015               	goto	L61
 27377  001E58                     
 27378                           ; BSR set to: 0
 27379                           ;mdm_gsm_gprs.c: 551: if (StringCompare(CallReadyString, RxBuffer, sizeof(CallReadyStrin
      +                          g)))
 27380                           
 27381                           ; BSR set to: 0
 27382  001E58  0E8F               	movlw	low ModemEvtParser@CallReadyString
 27383  001E5A  6F7D               	movwf	StringCompare@String1& (0+255),b
 27384  001E5C  0E00               	movlw	high ModemEvtParser@CallReadyString
 27385  001E5E  6F7E               	movwf	(StringCompare@String1+1)& (0+255),b
 27386  001E60  0E58               	movlw	low _RxBuffer
 27387  001E62  6F7F               	movwf	StringCompare@String2& (0+255),b
 27388  001E64  0E0C               	movlw	high _RxBuffer
 27389  001E66  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 27390  001E68  0E00               	movlw	0
 27391  001E6A  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 27392  001E6C  0E0A               	movlw	10
 27393  001E6E  6F81               	movwf	StringCompare@Len& (0+255),b
 27394  001E70  EC67  F02E         	call	_StringCompare	;wreg free
 27395  001E74  0900               	iorlw	0
 27396  001E76  B4D8               	btfsc	status,2,c
 27397  001E78  D013               	goto	l1055
 27398                           
 27399                           ;mdm_gsm_gprs.c: 552: {
 27400                           ;mdm_gsm_gprs.c: 554: MdmStatus = ModemReady;
 27401  001E7A  0E02               	movlw	2
 27402  001E7C  0100               	movlb	0	; () banked
 27403  001E7E  6FD1               	movwf	_MdmStatus& (0+255),b
 27404                           
 27405                           ;mdm_gsm_gprs.c: 556: Match = 1;
 27406  001E80  0E01               	movlw	1
 27407  001E82                     L61:
 27408  001E82  6FA7               	movwf	ModemEvtParser@Match& (0+255),b
 27409                           
 27410                           ; BSR set to: 0
 27411                           ;mdm_gsm_gprs.c: 562: }
 27412                           
 27413                           ; BSR set to: 0
 27414                           ;mdm_gsm_gprs.c: 561: break;
 27415                           
 27416                           ;mdm_gsm_gprs.c: 560: default:
 27417                           
 27418                           ; BSR set to: 0
 27419                           ;mdm_gsm_gprs.c: 557: }
 27420                           ;mdm_gsm_gprs.c: 558: break;
 27421  001E84  D00D               	goto	l1055
 27422  001E86                     l1052:
 27423                           
 27424                           ; BSR set to: 0
 27425                           
 27426                           ; BSR set to: 0
 27427  001E86  51A8               	movf	ModemEvtParser@CompareIdx& (0+255),w,b
 27428                           
 27429                           ; Switch size 1, requested type "space"
 27430                           ; Number of cases is 4, Range of values is 0 to 3
 27431                           ; switch strategies available:
 27432                           ; Name         Instructions Cycles
 27433                           ; simple_byte           13     7 (average)
 27434                           ;	Chosen strategy is simple_byte
 27435  001E88  0A00               	xorlw	0	; case 0
 27436  001E8A  B4D8               	btfsc	status,2,c
 27437  001E8C  D789               	goto	l1053
 27438  001E8E  0A01               	xorlw	1	; case 1
 27439  001E90  B4D8               	btfsc	status,2,c
 27440  001E92  D7C7               	goto	l1058
 27441  001E94  0A03               	xorlw	3	; case 2
 27442  001E96  B4D8               	btfsc	status,2,c
 27443  001E98  D7DF               	goto	l1060
 27444  001E9A  0A01               	xorlw	1	; case 3
 27445  001E9C  B4D8               	btfsc	status,2,c
 27446  001E9E  D799               	goto	l1056
 27447  001EA0                     l1055:
 27448                           
 27449                           ; BSR set to: 0
 27450  001EA0  0100               	movlb	0	; () banked
 27451  001EA2  2BA8               	incf	ModemEvtParser@CompareIdx& (0+255),f,b
 27452  001EA4  D779               	goto	l15462
 27453  001EA6                     u15010:
 27454                           
 27455                           ; BSR set to: 0
 27456                           ;mdm_gsm_gprs.c: 563: }
 27457                           ;mdm_gsm_gprs.c: 566: if (Match == 1)
 27458                           
 27459                           ; BSR set to: 0
 27460  001EA6  05A7               	decf	ModemEvtParser@Match& (0+255),w,b
 27461  001EA8  A4D8               	btfss	status,2,c
 27462  001EAA  0012               	return	
 27463                           
 27464                           ; BSR set to: 0
 27465                           ;mdm_gsm_gprs.c: 567: {
 27466                           ;mdm_gsm_gprs.c: 570: Uart_ClearRxBuffer();
 27467  001EAC  EC1E  F032         	call	_Uart_ClearRxBuffer	;wreg free
 27468  001EB0  0012               	return	
 27469  001EB2                     __end_of_ModemEvtParser:
 27470                           	opt stack 0
 27471                           tosu	equ	0xFFF
 27472                           tosh	equ	0xFFE
 27473                           tosl	equ	0xFFD
 27474                           pclath	equ	0xFFA
 27475                           tblptru	equ	0xFF8
 27476                           tblptrh	equ	0xFF7
 27477                           tblptrl	equ	0xFF6
 27478                           tablat	equ	0xFF5
 27479                           prodh	equ	0xFF4
 27480                           prodl	equ	0xFF3
 27481                           intcon	equ	0xFF2
 27482                           intcon2	equ	0xFF1
 27483                           intcon3	equ	0xFF0
 27484                           indf0	equ	0xFEF
 27485                           postinc0	equ	0xFEE
 27486                           plusw0	equ	0xFEB
 27487                           fsr0h	equ	0xFEA
 27488                           fsr0l	equ	0xFE9
 27489                           wreg	equ	0xFE8
 27490                           indf1	equ	0xFE7
 27491                           postinc1	equ	0xFE6
 27492                           postdec1	equ	0xFE5
 27493                           plusw1	equ	0xFE3
 27494                           fsr1h	equ	0xFE2
 27495                           fsr1l	equ	0xFE1
 27496                           indf2	equ	0xFDF
 27497                           postinc2	equ	0xFDE
 27498                           postdec2	equ	0xFDD
 27499                           plusw2	equ	0xFDB
 27500                           fsr2h	equ	0xFDA
 27501                           fsr2l	equ	0xFD9
 27502                           status	equ	0xFD8
 27503                           
 27504 ;; *************** function _Uart_ClearRxBuffer *****************
 27505 ;; Defined at:
 27506 ;;		line 565 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 27507 ;; Parameters:    Size  Location     Type
 27508 ;;		None
 27509 ;; Auto vars:     Size  Location     Type
 27510 ;;  Index           2   29[BANK0 ] unsigned short 
 27511 ;; Return value:  Size  Location     Type
 27512 ;;                  1    wreg      void 
 27513 ;; Registers used:
 27514 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 27515 ;; Tracked objects:
 27516 ;;		On entry : 0/0
 27517 ;;		On exit  : 0/0
 27518 ;;		Unchanged: 0/0
 27519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27520 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27521 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27522 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27523 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27524 ;;Total ram usage:        2 bytes
 27525 ;; Hardware stack levels used:    1
 27526 ;; Hardware stack levels required when called:   11
 27527 ;; This function calls:
 27528 ;;		Nothing
 27529 ;; This function is called by:
 27530 ;;		_ModemEvtParser
 27531 ;; This function uses a non-reentrant model
 27532 ;;
 27533                           
 27534                           	psect	text131
 27535  00643C                     __ptext131:
 27536                           	opt stack 0
 27537  00643C                     _Uart_ClearRxBuffer:
 27538                           	opt stack 15
 27539                           
 27540                           ;uart_drv.c: 567: UINT16 Index = 0;
 27541                           
 27542                           ;incstack = 0
 27543  00643C  0E00               	movlw	0
 27544  00643E  0100               	movlb	0	; () banked
 27545  006440  6F7E               	movwf	(Uart_ClearRxBuffer@Index+1)& (0+255),b
 27546  006442  0E00               	movlw	0
 27547  006444  6F7D               	movwf	Uart_ClearRxBuffer@Index& (0+255),b
 27548                           
 27549                           ;uart_drv.c: 570: for (Index = 0; Index <= (((UINT16)(400)) - 1); Index++)
 27550  006446  0E00               	movlw	0
 27551  006448  6F7E               	movwf	(Uart_ClearRxBuffer@Index+1)& (0+255),b
 27552  00644A  0E00               	movlw	0
 27553  00644C  6F7D               	movwf	Uart_ClearRxBuffer@Index& (0+255),b
 27554  00644E                     l14568:
 27555                           
 27556                           ; BSR set to: 0
 27557  00644E  0E90               	movlw	144
 27558  006450  5D7D               	subwf	Uart_ClearRxBuffer@Index& (0+255),w,b
 27559  006452  0E01               	movlw	1
 27560  006454  597E               	subwfb	(Uart_ClearRxBuffer@Index+1)& (0+255),w,b
 27561  006456  B0D8               	btfsc	status,0,c
 27562  006458  0012               	return	
 27563                           
 27564                           ; BSR set to: 0
 27565                           ;uart_drv.c: 571: {
 27566                           ;uart_drv.c: 572: RxBuffer[Index] = 0;
 27567                           
 27568                           ; BSR set to: 0
 27569                           
 27570                           ; BSR set to: 0
 27571  00645A  0E58               	movlw	low _RxBuffer
 27572  00645C  257D               	addwf	Uart_ClearRxBuffer@Index& (0+255),w,b
 27573  00645E  6ED9               	movwf	fsr2l,c
 27574  006460  0E0C               	movlw	high _RxBuffer
 27575  006462  217E               	addwfc	(Uart_ClearRxBuffer@Index+1)& (0+255),w,b
 27576  006464  6EDA               	movwf	fsr2h,c
 27577  006466  0E00               	movlw	0
 27578  006468  6EDF               	movwf	indf2,c
 27579                           
 27580                           ; BSR set to: 0
 27581  00646A  4B7D               	infsnz	Uart_ClearRxBuffer@Index& (0+255),f,b
 27582  00646C  2B7E               	incf	(Uart_ClearRxBuffer@Index+1)& (0+255),f,b
 27583  00646E  D7EF               	goto	l14568
 27584  006470                     __end_of_Uart_ClearRxBuffer:
 27585                           	opt stack 0
 27586                           tosu	equ	0xFFF
 27587                           tosh	equ	0xFFE
 27588                           tosl	equ	0xFFD
 27589                           pclath	equ	0xFFA
 27590                           tblptru	equ	0xFF8
 27591                           tblptrh	equ	0xFF7
 27592                           tblptrl	equ	0xFF6
 27593                           tablat	equ	0xFF5
 27594                           prodh	equ	0xFF4
 27595                           prodl	equ	0xFF3
 27596                           intcon	equ	0xFF2
 27597                           intcon2	equ	0xFF1
 27598                           intcon3	equ	0xFF0
 27599                           indf0	equ	0xFEF
 27600                           postinc0	equ	0xFEE
 27601                           plusw0	equ	0xFEB
 27602                           fsr0h	equ	0xFEA
 27603                           fsr0l	equ	0xFE9
 27604                           wreg	equ	0xFE8
 27605                           indf1	equ	0xFE7
 27606                           postinc1	equ	0xFE6
 27607                           postdec1	equ	0xFE5
 27608                           plusw1	equ	0xFE3
 27609                           fsr1h	equ	0xFE2
 27610                           fsr1l	equ	0xFE1
 27611                           indf2	equ	0xFDF
 27612                           postinc2	equ	0xFDE
 27613                           postdec2	equ	0xFDD
 27614                           plusw2	equ	0xFDB
 27615                           fsr2h	equ	0xFDA
 27616                           fsr2l	equ	0xFD9
 27617                           status	equ	0xFD8
 27618                           
 27619 ;; *************** function _StringCompare *****************
 27620 ;; Defined at:
 27621 ;;		line 75 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/sf.c"
 27622 ;; Parameters:    Size  Location     Type
 27623 ;;  String1         2   29[BANK0 ] PTR unsigned char 
 27624 ;;		 -> receivedNumber(13), smsText(20), ModemEvtParser@CallReadyString(10), ModemEvtParser@SmsString(5), 
 27625 ;;		 -> ModemEvtParser@ClipString(5), ModemEvtParser@RingString(4), 
 27626 ;;  String2         2   31[BANK0 ] PTR unsigned char 
 27627 ;;		 -> readBuffer(13), parseCommand@resetCmd(4), parseCommand@deleteNumberCmd(4), parseCommand@addNumberCmd(4), 
 27628 ;;		 -> RxBuffer(400), 
 27629 ;;  Len             2   33[BANK0 ] unsigned short 
 27630 ;; Auto vars:     Size  Location     Type
 27631 ;;  Index           2   38[BANK0 ] unsigned short 
 27632 ;;  Result          1   37[BANK0 ] unsigned char 
 27633 ;; Return value:  Size  Location     Type
 27634 ;;                  1    wreg      unsigned char 
 27635 ;; Registers used:
 27636 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 27637 ;; Tracked objects:
 27638 ;;		On entry : 0/0
 27639 ;;		On exit  : 0/0
 27640 ;;		Unchanged: 0/0
 27641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27642 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27643 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27644 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27645 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27646 ;;Total ram usage:       11 bytes
 27647 ;; Hardware stack levels used:    1
 27648 ;; Hardware stack levels required when called:   11
 27649 ;; This function calls:
 27650 ;;		Nothing
 27651 ;; This function is called by:
 27652 ;;		_ModemEvtParser
 27653 ;;		_parseCommand
 27654 ;;		_isNumberInMemory
 27655 ;;		_isMasterNumber
 27656 ;; This function uses a non-reentrant model
 27657 ;;
 27658                           
 27659                           	psect	text132
 27660  005CCE                     __ptext132:
 27661                           	opt stack 0
 27662  005CCE                     _StringCompare:
 27663                           	opt stack 14
 27664                           
 27665                           ;sf.c: 77: UINT16 Index = 0;
 27666                           
 27667                           ; BSR set to: 0
 27668                           ;incstack = 0
 27669  005CCE  0E00               	movlw	0
 27670  005CD0  0100               	movlb	0	; () banked
 27671  005CD2  6F87               	movwf	(StringCompare@Index+1)& (0+255),b
 27672  005CD4  0E00               	movlw	0
 27673  005CD6  6F86               	movwf	StringCompare@Index& (0+255),b
 27674                           
 27675                           ;sf.c: 78: UINT8 Result = 1;
 27676  005CD8  0E01               	movlw	1
 27677  005CDA  6F85               	movwf	StringCompare@Result& (0+255),b
 27678                           
 27679                           ;sf.c: 81: for (Index = 0; Index < Len; Index++)
 27680  005CDC  0E00               	movlw	0
 27681  005CDE  6F87               	movwf	(StringCompare@Index+1)& (0+255),b
 27682  005CE0  0E00               	movlw	0
 27683  005CE2  6F86               	movwf	StringCompare@Index& (0+255),b
 27684  005CE4  D015               	goto	l2249
 27685  005CE6                     
 27686                           ; BSR set to: 0
 27687                           ;sf.c: 82: {
 27688                           ;sf.c: 83: if (String1[Index] != String2[Index])
 27689                           
 27690                           ; BSR set to: 0
 27691  005CE6  5186               	movf	StringCompare@Index& (0+255),w,b
 27692  005CE8  257F               	addwf	StringCompare@String2& (0+255),w,b
 27693  005CEA  6ED9               	movwf	fsr2l,c
 27694  005CEC  5187               	movf	(StringCompare@Index+1)& (0+255),w,b
 27695  005CEE  2180               	addwfc	(StringCompare@String2+1)& (0+255),w,b
 27696  005CF0  6EDA               	movwf	fsr2h,c
 27697  005CF2  5186               	movf	StringCompare@Index& (0+255),w,b
 27698  005CF4  257D               	addwf	StringCompare@String1& (0+255),w,b
 27699  005CF6  6EE1               	movwf	fsr1l,c
 27700  005CF8  5187               	movf	(StringCompare@Index+1)& (0+255),w,b
 27701  005CFA  217E               	addwfc	(StringCompare@String1+1)& (0+255),w,b
 27702  005CFC  6EE2               	movwf	fsr1h,c
 27703  005CFE  50DE               	movf	postinc2,w,c
 27704  005D00  18E6               	xorwf	postinc1,w,c
 27705  005D02  B4D8               	btfsc	status,2,c
 27706  005D04  D003               	goto	l2251
 27707                           
 27708                           ; BSR set to: 0
 27709                           ;sf.c: 84: {
 27710                           ;sf.c: 85: Result = 0;
 27711  005D06  0E00               	movlw	0
 27712  005D08  6F85               	movwf	StringCompare@Result& (0+255),b
 27713                           
 27714                           ;sf.c: 86: break;
 27715  005D0A  D008               	goto	u12770
 27716  005D0C                     l2251:
 27717                           
 27718                           ; BSR set to: 0
 27719                           
 27720                           ; BSR set to: 0
 27721  005D0C  4B86               	infsnz	StringCompare@Index& (0+255),f,b
 27722  005D0E  2B87               	incf	(StringCompare@Index+1)& (0+255),f,b
 27723  005D10                     l2249:
 27724                           
 27725                           ; BSR set to: 0
 27726                           
 27727                           ; BSR set to: 0
 27728  005D10  5181               	movf	StringCompare@Len& (0+255),w,b
 27729  005D12  5D86               	subwf	StringCompare@Index& (0+255),w,b
 27730  005D14  5182               	movf	(StringCompare@Len+1)& (0+255),w,b
 27731  005D16  5987               	subwfb	(StringCompare@Index+1)& (0+255),w,b
 27732  005D18  A0D8               	btfss	status,0,c
 27733  005D1A  D7E5               	goto	l2250
 27734  005D1C                     u12770:
 27735                           
 27736                           ; BSR set to: 0
 27737                           ;sf.c: 87: }
 27738                           ;sf.c: 88: }
 27739                           ;sf.c: 91: return Result;
 27740                           
 27741                           ; BSR set to: 0
 27742  005D1C  5185               	movf	StringCompare@Result& (0+255),w,b
 27743  005D1E  0012               	return	
 27744  005D20                     __end_of_StringCompare:
 27745                           	opt stack 0
 27746                           tosu	equ	0xFFF
 27747                           tosh	equ	0xFFE
 27748                           tosl	equ	0xFFD
 27749                           pclath	equ	0xFFA
 27750                           tblptru	equ	0xFF8
 27751                           tblptrh	equ	0xFF7
 27752                           tblptrl	equ	0xFF6
 27753                           tablat	equ	0xFF5
 27754                           prodh	equ	0xFF4
 27755                           prodl	equ	0xFF3
 27756                           intcon	equ	0xFF2
 27757                           intcon2	equ	0xFF1
 27758                           intcon3	equ	0xFF0
 27759                           indf0	equ	0xFEF
 27760                           postinc0	equ	0xFEE
 27761                           plusw0	equ	0xFEB
 27762                           fsr0h	equ	0xFEA
 27763                           fsr0l	equ	0xFE9
 27764                           wreg	equ	0xFE8
 27765                           indf1	equ	0xFE7
 27766                           postinc1	equ	0xFE6
 27767                           postdec1	equ	0xFE5
 27768                           plusw1	equ	0xFE3
 27769                           fsr1h	equ	0xFE2
 27770                           fsr1l	equ	0xFE1
 27771                           indf2	equ	0xFDF
 27772                           postinc2	equ	0xFDE
 27773                           postdec2	equ	0xFDD
 27774                           plusw2	equ	0xFDB
 27775                           fsr2h	equ	0xFDA
 27776                           fsr2l	equ	0xFD9
 27777                           status	equ	0xFD8
 27778                           
 27779 ;; *************** function _GetSmsSm *****************
 27780 ;; Defined at:
 27781 ;;		line 584 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 27782 ;; Parameters:    Size  Location     Type
 27783 ;;		None
 27784 ;; Auto vars:     Size  Location     Type
 27785 ;;		None
 27786 ;; Return value:  Size  Location     Type
 27787 ;;                  1    wreg      void 
 27788 ;; Registers used:
 27789 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 27790 ;; Tracked objects:
 27791 ;;		On entry : 0/0
 27792 ;;		On exit  : 0/0
 27793 ;;		Unchanged: 0/0
 27794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27795 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27796 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27797 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27798 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27799 ;;Total ram usage:        0 bytes
 27800 ;; Hardware stack levels used:    1
 27801 ;; Hardware stack levels required when called:   13
 27802 ;; This function calls:
 27803 ;;		_ClearBuffer
 27804 ;;		_GenerateEvt
 27805 ;;		_ReceiveEvt
 27806 ;;		_StringCopy
 27807 ;;		_Uart_WriteConstString
 27808 ;; This function is called by:
 27809 ;;		_Mdm_MainTask
 27810 ;; This function uses a non-reentrant model
 27811 ;;
 27812                           
 27813                           	psect	text133
 27814  002AA2                     __ptext133:
 27815                           	opt stack 0
 27816  002AA2                     _GetSmsSm:
 27817                           	opt stack 14
 27818                           
 27819                           ;mdm_gsm_gprs.c: 586: static GetSmsStateType GetSmsState = GetSms_CheckReq;
 27820                           ;mdm_gsm_gprs.c: 589: if (MdmStatus == ModemConfigured)
 27821                           
 27822                           ; BSR set to: 0
 27823                           ;incstack = 0
 27824  002AA2  0E03               	movlw	3
 27825  002AA4  0100               	movlb	0	; () banked
 27826  002AA6  19D1               	xorwf	_MdmStatus& (0+255),w,b
 27827  002AA8  A4D8               	btfss	status,2,c
 27828  002AAA  0012               	return	
 27829  002AAC  D084               	goto	l1070
 27830  002AAE                     
 27831                           ;mdm_gsm_gprs.c: 595: if (ReceiveEvt(&GetSmsText))
 27832                           
 27833                           ; BSR set to: 0
 27834  002AAE  0EDB               	movlw	low _GetSmsText
 27835  002AB0  0100               	movlb	0	; () banked
 27836  002AB2  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 27837  002AB4  0E00               	movlw	high _GetSmsText
 27838  002AB6  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 27839  002AB8  ECE1  F032         	call	_ReceiveEvt	;wreg free
 27840  002ABC  0900               	iorlw	0
 27841  002ABE  B4D8               	btfsc	status,2,c
 27842  002AC0  0012               	return	
 27843                           
 27844                           ;mdm_gsm_gprs.c: 596: {
 27845                           ;mdm_gsm_gprs.c: 598: GetSmsState = GetSms_SendAtCmd;
 27846  002AC2  0E01               	movlw	1
 27847  002AC4  0101               	movlb	1	; () banked
 27848  002AC6  6FEF               	movwf	GetSmsSm@GetSmsState& (0+255),b
 27849                           
 27850                           ; BSR set to: 1
 27851                           ;mdm_gsm_gprs.c: 599: }
 27852                           ;mdm_gsm_gprs.c: 600: break;
 27853  002AC8  0012               	return	
 27854  002ACA                     
 27855                           ; BSR set to: 1
 27856                           ;mdm_gsm_gprs.c: 604: Uart_WriteConstString(1,"AT+CMGR=1\r\n");
 27857                           
 27858                           ; BSR set to: 1
 27859  002ACA  0EC2               	movlw	low STR_4
 27860  002ACC  0100               	movlb	0	; () banked
 27861  002ACE  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 27862  002AD0  0EFF               	movlw	high STR_4
 27863  002AD2  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 27864  002AD4  0E01               	movlw	1
 27865  002AD6  EC98  F030         	call	_Uart_WriteConstString
 27866                           
 27867                           ;mdm_gsm_gprs.c: 606: GetSmsState = GetSms_StoreHeader;
 27868  002ADA  0E02               	movlw	2
 27869  002ADC  0101               	movlb	1	; () banked
 27870  002ADE  6FEF               	movwf	GetSmsSm@GetSmsState& (0+255),b
 27871                           
 27872                           ;mdm_gsm_gprs.c: 607: break;
 27873  002AE0  0012               	return	
 27874  002AE2                     
 27875                           ; BSR set to: 1
 27876                           ;mdm_gsm_gprs.c: 611: if (ReceiveEvt(&NewStringReceived))
 27877                           
 27878                           ; BSR set to: 1
 27879  002AE2  0E3C               	movlw	low _NewStringReceived
 27880  002AE4  0100               	movlb	0	; () banked
 27881  002AE6  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 27882  002AE8  0E00               	movlw	high _NewStringReceived
 27883  002AEA  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 27884  002AEC  ECE1  F032         	call	_ReceiveEvt	;wreg free
 27885  002AF0  0900               	iorlw	0
 27886  002AF2  B4D8               	btfsc	status,2,c
 27887  002AF4  0012               	return	
 27888                           
 27889                           ;mdm_gsm_gprs.c: 612: {
 27890                           ;mdm_gsm_gprs.c: 613: if ((RxBuffer[0] == '+') && (RxBuffer[1] == 'C') && (RxBuffer[2] =
      +                          = 'M'))
 27891  002AF6  CC58  FFE8         	movff	_RxBuffer,wreg
 27892  002AFA  0A2B               	xorlw	43
 27893  002AFC  A4D8               	btfss	status,2,c
 27894  002AFE  0012               	return	
 27895  002B00  CC59  FFE8         	movff	_RxBuffer+1,wreg
 27896  002B04  0A43               	xorlw	67
 27897  002B06  A4D8               	btfss	status,2,c
 27898  002B08  0012               	return	
 27899  002B0A  CC5A  FFE8         	movff	_RxBuffer+2,wreg
 27900  002B0E  0A4D               	xorlw	77
 27901  002B10  A4D8               	btfss	status,2,c
 27902  002B12  0012               	return	
 27903                           
 27904                           ;mdm_gsm_gprs.c: 614: {
 27905                           ;mdm_gsm_gprs.c: 616: ClearBuffer(Mdm_SmsRx.HeaderBuffer, sizeof(Mdm_SmsRx.HeaderBuffer)
      +                          );
 27906  002B14  0E00               	movlw	low _Mdm_SmsRx
 27907  002B16  0100               	movlb	0	; () banked
 27908  002B18  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 27909  002B1A  0E07               	movlw	high _Mdm_SmsRx
 27910  002B1C  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 27911  002B1E  0E00               	movlw	0
 27912  002B20  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 27913  002B22  0E50               	movlw	80
 27914  002B24  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 27915  002B26  EC03  F032         	call	_ClearBuffer	;wreg free
 27916                           
 27917                           ;mdm_gsm_gprs.c: 617: StringCopy(RxBuffer,Mdm_SmsRx.HeaderBuffer,RxLen);
 27918  002B2A  0E58               	movlw	low _RxBuffer
 27919  002B2C  0100               	movlb	0	; () banked
 27920  002B2E  6F85               	movwf	StringCopy@SourceStr& (0+255),b
 27921  002B30  0E0C               	movlw	high _RxBuffer
 27922  002B32  6F86               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 27923  002B34  0E00               	movlw	low _Mdm_SmsRx
 27924  002B36  6F87               	movwf	StringCopy@DestStr& (0+255),b
 27925  002B38  0E07               	movlw	high _Mdm_SmsRx
 27926  002B3A  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 27927  002B3C  C0C2  F089         	movff	_RxLen,StringCopy@Len
 27928  002B40  C0C3  F08A         	movff	_RxLen+1,StringCopy@Len+1
 27929  002B44  ECD4  F02B         	call	_StringCopy	;wreg free
 27930                           
 27931                           ;mdm_gsm_gprs.c: 619: Mdm_SmsRx.HeadLen = RxLen;
 27932  002B48  C0C2  F764         	movff	_RxLen,_Mdm_SmsRx+100
 27933                           
 27934                           ;mdm_gsm_gprs.c: 621: GetSmsState = GetSms_StoreText;
 27935  002B4C  0E03               	movlw	3
 27936  002B4E  0101               	movlb	1	; () banked
 27937  002B50  6FEF               	movwf	GetSmsSm@GetSmsState& (0+255),b
 27938                           
 27939                           ; BSR set to: 1
 27940                           ;mdm_gsm_gprs.c: 622: }
 27941                           ;mdm_gsm_gprs.c: 623: }
 27942                           ;mdm_gsm_gprs.c: 624: break;
 27943                           
 27944                           ; BSR set to: 1
 27945  002B52  0012               	return	
 27946  002B54                     
 27947                           ; BSR set to: 1
 27948                           ;mdm_gsm_gprs.c: 628: if (ReceiveEvt(&NewStringReceived))
 27949                           
 27950                           ; BSR set to: 1
 27951  002B54  0E3C               	movlw	low _NewStringReceived
 27952  002B56  0100               	movlb	0	; () banked
 27953  002B58  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 27954  002B5A  0E00               	movlw	high _NewStringReceived
 27955  002B5C  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 27956  002B5E  ECE1  F032         	call	_ReceiveEvt	;wreg free
 27957  002B62  0900               	iorlw	0
 27958  002B64  B4D8               	btfsc	status,2,c
 27959  002B66  0012               	return	
 27960                           
 27961                           ;mdm_gsm_gprs.c: 629: {
 27962                           ;mdm_gsm_gprs.c: 631: ClearBuffer(Mdm_SmsRx.MessageBuffer, sizeof(Mdm_SmsRx.MessageBuffe
      +                          r));
 27963  002B68  0E50               	movlw	low (_Mdm_SmsRx+80)
 27964  002B6A  0100               	movlb	0	; () banked
 27965  002B6C  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 27966  002B6E  0E07               	movlw	high (_Mdm_SmsRx+80)
 27967  002B70  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 27968  002B72  0E00               	movlw	0
 27969  002B74  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 27970  002B76  0E14               	movlw	20
 27971  002B78  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 27972  002B7A  EC03  F032         	call	_ClearBuffer	;wreg free
 27973                           
 27974                           ;mdm_gsm_gprs.c: 632: StringCopy(RxBuffer,Mdm_SmsRx.MessageBuffer,RxLen);
 27975  002B7E  0E58               	movlw	low _RxBuffer
 27976  002B80  0100               	movlb	0	; () banked
 27977  002B82  6F85               	movwf	StringCopy@SourceStr& (0+255),b
 27978  002B84  0E0C               	movlw	high _RxBuffer
 27979  002B86  6F86               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 27980  002B88  0E50               	movlw	low (_Mdm_SmsRx+80)
 27981  002B8A  6F87               	movwf	StringCopy@DestStr& (0+255),b
 27982  002B8C  0E07               	movlw	high (_Mdm_SmsRx+80)
 27983  002B8E  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 27984  002B90  C0C2  F089         	movff	_RxLen,StringCopy@Len
 27985  002B94  C0C3  F08A         	movff	_RxLen+1,StringCopy@Len+1
 27986  002B98  ECD4  F02B         	call	_StringCopy	;wreg free
 27987                           
 27988                           ;mdm_gsm_gprs.c: 634: Mdm_SmsRx.TextLen = RxLen;
 27989  002B9C  C0C2  F765         	movff	_RxLen,_Mdm_SmsRx+101
 27990                           
 27991                           ;mdm_gsm_gprs.c: 636: GetSmsState = GetSms_CheckReq;
 27992  002BA0  0E00               	movlw	0
 27993  002BA2  0101               	movlb	1	; () banked
 27994  002BA4  6FEF               	movwf	GetSmsSm@GetSmsState& (0+255),b
 27995                           
 27996                           ; BSR set to: 1
 27997                           ;mdm_gsm_gprs.c: 638: GenerateEvt(&SmsTxtReady);
 27998  002BA6  0EDA               	movlw	low _SmsTxtReady
 27999  002BA8  0100               	movlb	0	; () banked
 28000  002BAA  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 28001  002BAC  0E00               	movlw	high _SmsTxtReady
 28002  002BAE  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 28003  002BB0  ECD2  F034         	call	_GenerateEvt	;wreg free
 28004                           
 28005                           ;mdm_gsm_gprs.c: 644: }
 28006                           
 28007                           ;mdm_gsm_gprs.c: 643: break;
 28008                           
 28009                           ;mdm_gsm_gprs.c: 642: default:
 28010                           
 28011                           ;mdm_gsm_gprs.c: 639: }
 28012                           ;mdm_gsm_gprs.c: 640: break;
 28013  002BB4  0012               	return	
 28014  002BB6                     l1070:
 28015  002BB6  0101               	movlb	1	; () banked
 28016  002BB8  51EF               	movf	GetSmsSm@GetSmsState& (0+255),w,b
 28017                           
 28018                           ; Switch size 1, requested type "space"
 28019                           ; Number of cases is 4, Range of values is 0 to 3
 28020                           ; switch strategies available:
 28021                           ; Name         Instructions Cycles
 28022                           ; simple_byte           13     7 (average)
 28023                           ;	Chosen strategy is simple_byte
 28024  002BBA  0A00               	xorlw	0	; case 0
 28025  002BBC  B4D8               	btfsc	status,2,c
 28026  002BBE  D777               	goto	l1071
 28027  002BC0  0A01               	xorlw	1	; case 1
 28028  002BC2  B4D8               	btfsc	status,2,c
 28029  002BC4  D782               	goto	l1074
 28030  002BC6  0A03               	xorlw	3	; case 2
 28031  002BC8  B4D8               	btfsc	status,2,c
 28032  002BCA  D78B               	goto	l1075
 28033  002BCC  0A01               	xorlw	1	; case 3
 28034  002BCE  A4D8               	btfss	status,2,c
 28035                           
 28036                           ; BSR set to: 1
 28037  002BD0  0012               	return	
 28038  002BD2  D7C0               	goto	l1078
 28039  002BD4                     __end_of_GetSmsSm:
 28040                           	opt stack 0
 28041                           tosu	equ	0xFFF
 28042                           tosh	equ	0xFFE
 28043                           tosl	equ	0xFFD
 28044                           pclath	equ	0xFFA
 28045                           tblptru	equ	0xFF8
 28046                           tblptrh	equ	0xFF7
 28047                           tblptrl	equ	0xFF6
 28048                           tablat	equ	0xFF5
 28049                           prodh	equ	0xFF4
 28050                           prodl	equ	0xFF3
 28051                           intcon	equ	0xFF2
 28052                           intcon2	equ	0xFF1
 28053                           intcon3	equ	0xFF0
 28054                           indf0	equ	0xFEF
 28055                           postinc0	equ	0xFEE
 28056                           plusw0	equ	0xFEB
 28057                           fsr0h	equ	0xFEA
 28058                           fsr0l	equ	0xFE9
 28059                           wreg	equ	0xFE8
 28060                           indf1	equ	0xFE7
 28061                           postinc1	equ	0xFE6
 28062                           postdec1	equ	0xFE5
 28063                           plusw1	equ	0xFE3
 28064                           fsr1h	equ	0xFE2
 28065                           fsr1l	equ	0xFE1
 28066                           indf2	equ	0xFDF
 28067                           postinc2	equ	0xFDE
 28068                           postdec2	equ	0xFDD
 28069                           plusw2	equ	0xFDB
 28070                           fsr2h	equ	0xFDA
 28071                           fsr2l	equ	0xFD9
 28072                           status	equ	0xFD8
 28073                           
 28074 ;; *************** function _ConfigureModem *****************
 28075 ;; Defined at:
 28076 ;;		line 419 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 28077 ;; Parameters:    Size  Location     Type
 28078 ;;		None
 28079 ;; Auto vars:     Size  Location     Type
 28080 ;;		None
 28081 ;; Return value:  Size  Location     Type
 28082 ;;                  1    wreg      void 
 28083 ;; Registers used:
 28084 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 28085 ;; Tracked objects:
 28086 ;;		On entry : 0/0
 28087 ;;		On exit  : 0/0
 28088 ;;		Unchanged: 0/0
 28089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28090 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28091 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28092 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28093 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28094 ;;Total ram usage:        0 bytes
 28095 ;; Hardware stack levels used:    1
 28096 ;; Hardware stack levels required when called:   14
 28097 ;; This function calls:
 28098 ;;		_GenerateEvt
 28099 ;;		_UartSetConfigLow
 28100 ;;		_Uart_InitUartModule
 28101 ;;		_Uart_WriteConstString
 28102 ;; This function is called by:
 28103 ;;		_Mdm_MainTask
 28104 ;; This function uses a non-reentrant model
 28105 ;;
 28106                           
 28107                           	psect	text134
 28108  003872                     __ptext134:
 28109                           	opt stack 0
 28110  003872                     _ConfigureModem:
 28111                           	opt stack 13
 28112                           
 28113                           ;mdm_gsm_gprs.c: 421: static MdmConfigStateType MdmConfigState = MdmCfg_Init;
 28114                           ;mdm_gsm_gprs.c: 422: static MdmConfigStateType NextState = MdmCfg_Init;
 28115                           ;mdm_gsm_gprs.c: 423: static UINT16 DelayValueMs = 0;
 28116                           ;mdm_gsm_gprs.c: 424: static UINT16 DelayCounter = 0;
 28117                           ;mdm_gsm_gprs.c: 426: switch (MdmConfigState)
 28118                           
 28119                           ;incstack = 0
 28120  003872  D056               	goto	l1027
 28121  003874                     
 28122                           ;mdm_gsm_gprs.c: 430: if (MdmStatus == ModemReady)
 28123  003874  0E02               	movlw	2
 28124  003876  0100               	movlb	0	; () banked
 28125  003878  19D1               	xorwf	_MdmStatus& (0+255),w,b
 28126  00387A  A4D8               	btfss	status,2,c
 28127  00387C  0012               	return	
 28128                           
 28129                           ; BSR set to: 0
 28130                           ;mdm_gsm_gprs.c: 431: {
 28131                           ;mdm_gsm_gprs.c: 433: MdmConfigState = MdmCfg_ChangeBaud;
 28132  00387E  0E01               	movlw	1
 28133  003880  0101               	movlb	1	; () banked
 28134  003882  6FF1               	movwf	ConfigureModem@MdmConfigState& (0+255),b
 28135                           
 28136                           ; BSR set to: 1
 28137                           ;mdm_gsm_gprs.c: 434: }
 28138                           ;mdm_gsm_gprs.c: 435: break;
 28139  003884  0012               	return	
 28140  003886                     
 28141                           ; BSR set to: 1
 28142                           ;mdm_gsm_gprs.c: 439: Uart_WriteConstString(1,"AT+IPR=9600\r\n");
 28143                           
 28144                           ; BSR set to: 1
 28145  003886  0E75               	movlw	low STR_2
 28146  003888  0100               	movlb	0	; () banked
 28147  00388A  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 28148  00388C  0EFF               	movlw	high STR_2
 28149  00388E  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 28150  003890  0E01               	movlw	1
 28151  003892  EC98  F030         	call	_Uart_WriteConstString
 28152                           
 28153                           ;mdm_gsm_gprs.c: 441: UartSetConfigLow();
 28154  003896  ECE9  F02C         	call	_UartSetConfigLow	;wreg free
 28155                           
 28156                           ;mdm_gsm_gprs.c: 443: Uart_InitUartModule(1,&UartConfig);
 28157  00389A  0E1C               	movlw	low _UartConfig
 28158  00389C  0100               	movlb	0	; () banked
 28159  00389E  6F9D               	movwf	Uart_InitUartModule@UartConfig& (0+255),b
 28160  0038A0  0E03               	movlw	high _UartConfig
 28161  0038A2  6F9E               	movwf	(Uart_InitUartModule@UartConfig+1)& (0+255),b
 28162  0038A4  0E01               	movlw	1
 28163  0038A6  EC5E  F005         	call	_Uart_InitUartModule
 28164                           
 28165                           ;mdm_gsm_gprs.c: 445: DelayValueMs = (((UINT16)(1000))/((UINT16)(1)));
 28166  0038AA  0E03               	movlw	3
 28167  0038AC  0102               	movlb	2	; () banked
 28168  0038AE  6FD9               	movwf	(ConfigureModem@DelayValueMs+1)& (0+255),b
 28169  0038B0  0EE8               	movlw	232
 28170  0038B2  6FD8               	movwf	ConfigureModem@DelayValueMs& (0+255),b
 28171                           
 28172                           ; BSR set to: 2
 28173                           ;mdm_gsm_gprs.c: 447: NextState = MdmCfg_SetMdmEchoMode;
 28174  0038B4  0E02               	movlw	2
 28175  0038B6  0101               	movlb	1	; () banked
 28176  0038B8  6FF0               	movwf	ConfigureModem@NextState& (0+255),b
 28177                           
 28178                           ; BSR set to: 1
 28179                           ;mdm_gsm_gprs.c: 448: MdmConfigState = MdmCfg_Delay;
 28180  0038BA  0E04               	movlw	4
 28181  0038BC  6FF1               	movwf	ConfigureModem@MdmConfigState& (0+255),b
 28182                           
 28183                           ;mdm_gsm_gprs.c: 449: break;
 28184  0038BE  0012               	return	
 28185  0038C0                     
 28186                           ; BSR set to: 1
 28187                           ;mdm_gsm_gprs.c: 453: Uart_WriteConstString(1,"ATE0\r\n");
 28188                           
 28189                           ; BSR set to: 1
 28190  0038C0  0EDF               	movlw	low STR_3
 28191  0038C2  0100               	movlb	0	; () banked
 28192  0038C4  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 28193  0038C6  0EFF               	movlw	high STR_3
 28194  0038C8  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 28195  0038CA  0E01               	movlw	1
 28196  0038CC  EC98  F030         	call	_Uart_WriteConstString
 28197                           
 28198                           ;mdm_gsm_gprs.c: 455: DelayValueMs = (((UINT16)(1000))/((UINT16)(1)));
 28199  0038D0  0E03               	movlw	3
 28200  0038D2  0102               	movlb	2	; () banked
 28201  0038D4  6FD9               	movwf	(ConfigureModem@DelayValueMs+1)& (0+255),b
 28202  0038D6  0EE8               	movlw	232
 28203  0038D8  6FD8               	movwf	ConfigureModem@DelayValueMs& (0+255),b
 28204                           
 28205                           ; BSR set to: 2
 28206                           ;mdm_gsm_gprs.c: 457: NextState = MdmCfg_UpdateMdmSts;
 28207  0038DA  0E05               	movlw	5
 28208  0038DC  0101               	movlb	1	; () banked
 28209  0038DE  6FF0               	movwf	ConfigureModem@NextState& (0+255),b
 28210                           
 28211                           ; BSR set to: 1
 28212                           ;mdm_gsm_gprs.c: 458: MdmConfigState = MdmCfg_Delay;
 28213  0038E0  0E04               	movlw	4
 28214  0038E2  6FF1               	movwf	ConfigureModem@MdmConfigState& (0+255),b
 28215                           
 28216                           ;mdm_gsm_gprs.c: 459: break;
 28217  0038E4  0012               	return	
 28218  0038E6                     
 28219                           ; BSR set to: 1
 28220                           ;mdm_gsm_gprs.c: 463: DelayCounter++;
 28221                           
 28222                           ; BSR set to: 1
 28223  0038E6  0102               	movlb	2	; () banked
 28224  0038E8  4BD6               	infsnz	ConfigureModem@DelayCounter& (0+255),f,b
 28225  0038EA  2BD7               	incf	(ConfigureModem@DelayCounter+1)& (0+255),f,b
 28226                           
 28227                           ; BSR set to: 2
 28228                           ;mdm_gsm_gprs.c: 465: if (DelayCounter >= DelayValueMs)
 28229  0038EC  51D8               	movf	ConfigureModem@DelayValueMs& (0+255),w,b
 28230  0038EE  5DD6               	subwf	ConfigureModem@DelayCounter& (0+255),w,b
 28231  0038F0  51D9               	movf	(ConfigureModem@DelayValueMs+1)& (0+255),w,b
 28232  0038F2  59D7               	subwfb	(ConfigureModem@DelayCounter+1)& (0+255),w,b
 28233  0038F4  A0D8               	btfss	status,0,c
 28234  0038F6  0012               	return	
 28235                           
 28236                           ; BSR set to: 2
 28237                           ;mdm_gsm_gprs.c: 466: {
 28238                           ;mdm_gsm_gprs.c: 468: DelayCounter = 0;
 28239  0038F8  0E00               	movlw	0
 28240  0038FA  6FD7               	movwf	(ConfigureModem@DelayCounter+1)& (0+255),b
 28241  0038FC  0E00               	movlw	0
 28242  0038FE  6FD6               	movwf	ConfigureModem@DelayCounter& (0+255),b
 28243                           
 28244                           ; BSR set to: 2
 28245                           ;mdm_gsm_gprs.c: 470: MdmConfigState = NextState;
 28246  003900  C1F0  F1F1         	movff	ConfigureModem@NextState,ConfigureModem@MdmConfigState
 28247                           
 28248                           ; BSR set to: 2
 28249                           ;mdm_gsm_gprs.c: 471: }
 28250                           ;mdm_gsm_gprs.c: 472: break;
 28251  003904  0012               	return	
 28252  003906                     
 28253                           ;mdm_gsm_gprs.c: 476: MdmStatus = ModemConfigured;
 28254                           
 28255                           ; BSR set to: 2
 28256  003906  0E03               	movlw	3
 28257  003908  0100               	movlb	0	; () banked
 28258  00390A  6FD1               	movwf	_MdmStatus& (0+255),b
 28259                           
 28260                           ; BSR set to: 0
 28261                           ;mdm_gsm_gprs.c: 478: GenerateEvt(&MdmStsReady);
 28262  00390C  0EFD               	movlw	low _MdmStsReady
 28263  00390E  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 28264  003910  0E01               	movlw	high _MdmStsReady
 28265  003912  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 28266  003914  ECD2  F034         	call	_GenerateEvt	;wreg free
 28267                           
 28268                           ;mdm_gsm_gprs.c: 480: MdmConfigState = MdmCfg_Stop;
 28269  003918  0E06               	movlw	6
 28270  00391A  0101               	movlb	1	; () banked
 28271  00391C  6FF1               	movwf	ConfigureModem@MdmConfigState& (0+255),b
 28272                           
 28273                           ; BSR set to: 1
 28274                           ;mdm_gsm_gprs.c: 488: }
 28275                           
 28276                           ; BSR set to: 1
 28277                           ;mdm_gsm_gprs.c: 487: break;
 28278                           
 28279                           ;mdm_gsm_gprs.c: 486: default:
 28280                           
 28281                           ; BSR set to: 1
 28282                           ;mdm_gsm_gprs.c: 484: break;
 28283                           
 28284                           ;mdm_gsm_gprs.c: 483: case MdmCfg_Stop:
 28285                           
 28286                           ;mdm_gsm_gprs.c: 481: break;
 28287  00391E  0012               	return	
 28288  003920                     l1027:
 28289                           
 28290                           ; BSR set to: 1
 28291  003920  0101               	movlb	1	; () banked
 28292  003922  51F1               	movf	ConfigureModem@MdmConfigState& (0+255),w,b
 28293                           
 28294                           ; Switch size 1, requested type "space"
 28295                           ; Number of cases is 6, Range of values is 0 to 6
 28296                           ; switch strategies available:
 28297                           ; Name         Instructions Cycles
 28298                           ; simple_byte           19    10 (average)
 28299                           ;	Chosen strategy is simple_byte
 28300  003924  0A00               	xorlw	0	; case 0
 28301  003926  B4D8               	btfsc	status,2,c
 28302  003928  D7A5               	goto	l1028
 28303  00392A  0A01               	xorlw	1	; case 1
 28304  00392C  B4D8               	btfsc	status,2,c
 28305  00392E  D7AB               	goto	l1031
 28306  003930  0A03               	xorlw	3	; case 2
 28307  003932  B4D8               	btfsc	status,2,c
 28308  003934  D7C5               	goto	l1032
 28309  003936  0A06               	xorlw	6	; case 4
 28310  003938  B4D8               	btfsc	status,2,c
 28311  00393A  D7D5               	goto	l1033
 28312  00393C  0A01               	xorlw	1	; case 5
 28313  00393E  B4D8               	btfsc	status,2,c
 28314  003940  D7E2               	goto	l1035
 28315  003942  0A03               	xorlw	3	; case 6
 28316  003944  0012               	return	
 28317  003946                     __end_of_ConfigureModem:
 28318                           	opt stack 0
 28319                           tosu	equ	0xFFF
 28320                           tosh	equ	0xFFE
 28321                           tosl	equ	0xFFD
 28322                           pclath	equ	0xFFA
 28323                           tblptru	equ	0xFF8
 28324                           tblptrh	equ	0xFF7
 28325                           tblptrl	equ	0xFF6
 28326                           tablat	equ	0xFF5
 28327                           prodh	equ	0xFF4
 28328                           prodl	equ	0xFF3
 28329                           intcon	equ	0xFF2
 28330                           intcon2	equ	0xFF1
 28331                           intcon3	equ	0xFF0
 28332                           indf0	equ	0xFEF
 28333                           postinc0	equ	0xFEE
 28334                           plusw0	equ	0xFEB
 28335                           fsr0h	equ	0xFEA
 28336                           fsr0l	equ	0xFE9
 28337                           wreg	equ	0xFE8
 28338                           indf1	equ	0xFE7
 28339                           postinc1	equ	0xFE6
 28340                           postdec1	equ	0xFE5
 28341                           plusw1	equ	0xFE3
 28342                           fsr1h	equ	0xFE2
 28343                           fsr1l	equ	0xFE1
 28344                           indf2	equ	0xFDF
 28345                           postinc2	equ	0xFDE
 28346                           postdec2	equ	0xFDD
 28347                           plusw2	equ	0xFDB
 28348                           fsr2h	equ	0xFDA
 28349                           fsr2l	equ	0xFD9
 28350                           status	equ	0xFD8
 28351                           
 28352 ;; *************** function _Uart_InitUartModule *****************
 28353 ;; Defined at:
 28354 ;;		line 288 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 28355 ;; Parameters:    Size  Location     Type
 28356 ;;  Module          1    wreg     unsigned char 
 28357 ;;  UartConfig      2   61[BANK0 ] PTR struct _UartConfig
 28358 ;;		 -> UartConfig(21), 
 28359 ;; Auto vars:     Size  Location     Type
 28360 ;;  Module          1   65[BANK0 ] unsigned char 
 28361 ;; Return value:  Size  Location     Type
 28362 ;;                  1    wreg      void 
 28363 ;; Registers used:
 28364 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 28365 ;; Tracked objects:
 28366 ;;		On entry : 0/0
 28367 ;;		On exit  : 0/0
 28368 ;;		Unchanged: 0/0
 28369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28370 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28371 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28372 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28373 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28374 ;;Total ram usage:        5 bytes
 28375 ;; Hardware stack levels used:    1
 28376 ;; Hardware stack levels required when called:   13
 28377 ;; This function calls:
 28378 ;;		_SetUartBaudRate
 28379 ;; This function is called by:
 28380 ;;		_ConfigureModem
 28381 ;;		_Mdm_MainTask
 28382 ;; This function uses a non-reentrant model
 28383 ;;
 28384                           
 28385                           	psect	text135
 28386  000ABC                     __ptext135:
 28387                           	opt stack 0
 28388  000ABC                     _Uart_InitUartModule:
 28389                           	opt stack 14
 28390                           
 28391                           ;incstack = 0
 28392                           ;Uart_InitUartModule@Module stored from wreg
 28393  000ABC  0100               	movlb	0	; () banked
 28394  000ABE  6FA1               	movwf	Uart_InitUartModule@Module& (0+255),b
 28395                           
 28396                           ;uart_drv.c: 290: if (Module == ((UINT8)(1)))
 28397  000AC0  0100               	movlb	0	; () banked
 28398  000AC2  05A1               	decf	Uart_InitUartModule@Module& (0+255),w,b
 28399  000AC4  A4D8               	btfss	status,2,c
 28400  000AC6  D0BE               	goto	l668
 28401                           
 28402                           ; BSR set to: 0
 28403                           ;uart_drv.c: 291: {
 28404                           ;uart_drv.c: 293: TRISCbits.TRISC6 = ((UINT8)(0));
 28405  000AC8  9C94               	bcf	3988,6,c	;volatile
 28406                           
 28407                           ;uart_drv.c: 294: TRISCbits.TRISC7 = ((UINT8)(1));
 28408  000ACA  8E94               	bsf	3988,7,c	;volatile
 28409                           
 28410                           ; BSR set to: 0
 28411                           ;uart_drv.c: 297: SetUartBaudRate(((UINT8)(1)), UartConfig);
 28412  000ACC  C09D  F096         	movff	Uart_InitUartModule@UartConfig,SetUartBaudRate@UartConfig
 28413  000AD0  C09E  F097         	movff	Uart_InitUartModule@UartConfig+1,SetUartBaudRate@UartConfig+1
 28414  000AD4  0E01               	movlw	1
 28415  000AD6  ECB5  F014         	call	_SetUartBaudRate
 28416                           
 28417                           ;uart_drv.c: 302: TXSTA1 = 0x00;
 28418  000ADA  0E00               	movlw	0
 28419  000ADC  6EAD               	movwf	4013,c	;volatile
 28420                           
 28421                           ;uart_drv.c: 303: TXSTA1 |= (UartConfig->Tx9bitMode) << ((UINT8)(6));
 28422  000ADE  0100               	movlb	0	; () banked
 28423  000AE0  EE20 F004          	lfsr	2,4
 28424  000AE4  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 28425  000AE6  26D9               	addwf	fsr2l,f,c
 28426  000AE8  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 28427  000AEA  22DA               	addwfc	fsr2h,f,c
 28428  000AEC  50DF               	movf	indf2,w,c
 28429  000AEE  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28430  000AF0  0E06               	movlw	6
 28431  000AF2  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 28432  000AF4                     u13625:
 28433  000AF4  90D8               	bcf	status,0,c
 28434  000AF6  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 28435  000AF8  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 28436  000AFA  D7FC               	goto	u13625
 28437  000AFC  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 28438  000AFE  12AD               	iorwf	4013,f,c	;volatile
 28439                           
 28440                           ; BSR set to: 0
 28441                           ;uart_drv.c: 304: TXSTA1 |= (UartConfig->TxEnable) << ((UINT8)(5));
 28442  000B00  EE20 F006          	lfsr	2,6
 28443  000B04  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 28444  000B06  26D9               	addwf	fsr2l,f,c
 28445  000B08  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 28446  000B0A  22DA               	addwfc	fsr2h,f,c
 28447  000B0C  50DF               	movf	indf2,w,c
 28448  000B0E  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28449  000B10  0E05               	movlw	5
 28450  000B12  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 28451  000B14                     u13635:
 28452  000B14  90D8               	bcf	status,0,c
 28453  000B16  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 28454  000B18  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 28455  000B1A  D7FC               	goto	u13635
 28456  000B1C  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 28457  000B1E  12AD               	iorwf	4013,f,c	;volatile
 28458                           
 28459                           ; BSR set to: 0
 28460                           ;uart_drv.c: 305: TXSTA1 |= (UartConfig->UartMode) << ((UINT8)(4));
 28461  000B20  EE20 F001          	lfsr	2,1
 28462  000B24  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 28463  000B26  26D9               	addwf	fsr2l,f,c
 28464  000B28  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 28465  000B2A  22DA               	addwfc	fsr2h,f,c
 28466  000B2C  50DF               	movf	indf2,w,c
 28467  000B2E  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28468  000B30  399F               	swapf	??_Uart_InitUartModule& (0+255),w,b
 28469  000B32  0BF0               	andlw	240
 28470  000B34  12AD               	iorwf	4013,f,c	;volatile
 28471                           
 28472                           ; BSR set to: 0
 28473                           ;uart_drv.c: 306: TXSTA1 |= (UartConfig->SendBreakEnable) << ((UINT8)(3));
 28474  000B36  EE20 F008          	lfsr	2,8
 28475  000B3A  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 28476  000B3C  26D9               	addwf	fsr2l,f,c
 28477  000B3E  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 28478  000B40  22DA               	addwfc	fsr2h,f,c
 28479  000B42  50DF               	movf	indf2,w,c
 28480  000B44  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28481  000B46  90D8               	bcf	status,0,c
 28482  000B48  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 28483  000B4A  90D8               	bcf	status,0,c
 28484  000B4C  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 28485  000B4E  90D8               	bcf	status,0,c
 28486  000B50  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 28487  000B52  12AD               	iorwf	4013,f,c	;volatile
 28488                           
 28489                           ; BSR set to: 0
 28490                           ;uart_drv.c: 307: TXSTA1 |= (UartConfig->HighBaudMode) << ((UINT8)(2));
 28491  000B54  EE20 F003          	lfsr	2,3
 28492  000B58  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 28493  000B5A  26D9               	addwf	fsr2l,f,c
 28494  000B5C  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 28495  000B5E  22DA               	addwfc	fsr2h,f,c
 28496  000B60  50DF               	movf	indf2,w,c
 28497  000B62  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28498  000B64  90D8               	bcf	status,0,c
 28499  000B66  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 28500  000B68  90D8               	bcf	status,0,c
 28501  000B6A  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 28502  000B6C  12AD               	iorwf	4013,f,c	;volatile
 28503                           
 28504                           ; BSR set to: 0
 28505                           ;uart_drv.c: 310: RCSTA1 = 0x00;
 28506  000B6E  0E00               	movlw	0
 28507  000B70  6EAC               	movwf	4012,c	;volatile
 28508                           
 28509                           ; BSR set to: 0
 28510                           ;uart_drv.c: 311: RCSTA1 |= (UartConfig->UartEnable) << ((UINT8)(7));
 28511  000B72  C09D  FFD9         	movff	Uart_InitUartModule@UartConfig,fsr2l
 28512  000B76  C09E  FFDA         	movff	Uart_InitUartModule@UartConfig+1,fsr2h
 28513  000B7A  50DF               	movf	indf2,w,c
 28514  000B7C  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28515  000B7E  0E00               	movlw	0
 28516  000B80  B19F               	btfsc	??_Uart_InitUartModule& (0+255),0,b
 28517  000B82  0E80               	movlw	128
 28518  000B84  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28519  000B86  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 28520  000B88  12AC               	iorwf	4012,f,c	;volatile
 28521                           
 28522                           ; BSR set to: 0
 28523                           ;uart_drv.c: 312: RCSTA1 |= (UartConfig->Rx9bitMode) << ((UINT8)(6));
 28524  000B8A  EE20 F005          	lfsr	2,5
 28525  000B8E  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 28526  000B90  26D9               	addwf	fsr2l,f,c
 28527  000B92  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 28528  000B94  22DA               	addwfc	fsr2h,f,c
 28529  000B96  50DF               	movf	indf2,w,c
 28530  000B98  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28531  000B9A  0E06               	movlw	6
 28532  000B9C  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 28533  000B9E                     u13645:
 28534  000B9E  90D8               	bcf	status,0,c
 28535  000BA0  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 28536  000BA2  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 28537  000BA4  D7FC               	goto	u13645
 28538  000BA6  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 28539  000BA8  12AC               	iorwf	4012,f,c	;volatile
 28540                           
 28541                           ; BSR set to: 0
 28542                           ;uart_drv.c: 313: RCSTA1 |= (UartConfig->RxEnable) << ((UINT8)(4));
 28543  000BAA  EE20 F007          	lfsr	2,7
 28544  000BAE  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 28545  000BB0  26D9               	addwf	fsr2l,f,c
 28546  000BB2  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 28547  000BB4  22DA               	addwfc	fsr2h,f,c
 28548  000BB6  50DF               	movf	indf2,w,c
 28549  000BB8  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28550  000BBA  399F               	swapf	??_Uart_InitUartModule& (0+255),w,b
 28551  000BBC  0BF0               	andlw	240
 28552  000BBE  12AC               	iorwf	4012,f,c	;volatile
 28553                           
 28554                           ; BSR set to: 0
 28555                           ;uart_drv.c: 316: BAUDCON1 = 0x00;
 28556  000BC0  0E00               	movlw	0
 28557  000BC2  6E7E               	movwf	3966,c	;volatile
 28558                           
 28559                           ; BSR set to: 0
 28560                           ;uart_drv.c: 317: BAUDCON1 |= (UartConfig->BaudRateMode) << ((UINT8)(3));
 28561  000BC4  EE20 F002          	lfsr	2,2
 28562  000BC8  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 28563  000BCA  26D9               	addwf	fsr2l,f,c
 28564  000BCC  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 28565  000BCE  22DA               	addwfc	fsr2h,f,c
 28566  000BD0  50DF               	movf	indf2,w,c
 28567  000BD2  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28568  000BD4  90D8               	bcf	status,0,c
 28569  000BD6  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 28570  000BD8  90D8               	bcf	status,0,c
 28571  000BDA  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 28572  000BDC  90D8               	bcf	status,0,c
 28573  000BDE  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 28574  000BE0  127E               	iorwf	3966,f,c	;volatile
 28575                           
 28576                           ; BSR set to: 0
 28577                           ;uart_drv.c: 318: BAUDCON1 |= (UartConfig->WakeUpEnable) << ((UINT8)(1));
 28578  000BE2  EE20 F00A          	lfsr	2,10
 28579  000BE6  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 28580  000BE8  26D9               	addwf	fsr2l,f,c
 28581  000BEA  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 28582  000BEC  22DA               	addwfc	fsr2h,f,c
 28583  000BEE  50DF               	movf	indf2,w,c
 28584  000BF0  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28585  000BF2  90D8               	bcf	status,0,c
 28586  000BF4  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 28587  000BF6  127E               	iorwf	3966,f,c	;volatile
 28588                           
 28589                           ; BSR set to: 0
 28590                           ;uart_drv.c: 319: BAUDCON1 |= (UartConfig->AutobaudEnable) << ((UINT8)(0));
 28591  000BF8  EE20 F009          	lfsr	2,9
 28592  000BFC  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 28593  000BFE  26D9               	addwf	fsr2l,f,c
 28594  000C00  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 28595  000C02  22DA               	addwfc	fsr2h,f,c
 28596  000C04  50DF               	movf	indf2,w,c
 28597  000C06  127E               	iorwf	3966,f,c	;volatile
 28598                           
 28599                           ; BSR set to: 0
 28600                           ;uart_drv.c: 322: PIE1bits.TX1IE = UartConfig->TxInterruptEnable;
 28601  000C08  EE20 F00B          	lfsr	2,11
 28602  000C0C  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 28603  000C0E  26D9               	addwf	fsr2l,f,c
 28604  000C10  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 28605  000C12  22DA               	addwfc	fsr2h,f,c
 28606  000C14  50DF               	movf	indf2,w,c
 28607  000C16  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28608  000C18  3B9F               	swapf	??_Uart_InitUartModule& (0+255),f,b
 28609  000C1A  509D               	movf	3997,w,c	;volatile
 28610  000C1C  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 28611  000C1E  0BEF               	andlw	-17
 28612  000C20  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 28613  000C22  6E9D               	movwf	3997,c	;volatile
 28614                           
 28615                           ; BSR set to: 0
 28616                           ;uart_drv.c: 323: PIE1bits.RC1IE = UartConfig->RxInterruptEnable;
 28617  000C24  EE20 F00C          	lfsr	2,12
 28618  000C28  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 28619  000C2A  26D9               	addwf	fsr2l,f,c
 28620  000C2C  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 28621  000C2E  22DA               	addwfc	fsr2h,f,c
 28622  000C30  50DF               	movf	indf2,w,c
 28623  000C32  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28624  000C34  3B9F               	swapf	??_Uart_InitUartModule& (0+255),f,b
 28625  000C36  479F               	rlncf	??_Uart_InitUartModule& (0+255),f,b
 28626  000C38  509D               	movf	3997,w,c	;volatile
 28627  000C3A  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 28628  000C3C  0BDF               	andlw	-33
 28629  000C3E  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 28630  000C40  6E9D               	movwf	3997,c	;volatile
 28631                           
 28632                           ;uart_drv.c: 326: }
 28633  000C42  0012               	return	
 28634  000C44                     l668:
 28635                           
 28636                           ; BSR set to: 0
 28637                           ;uart_drv.c: 327: else if (Module == ((UINT8)(2)))
 28638                           
 28639                           ; BSR set to: 0
 28640  000C44  0E02               	movlw	2
 28641  000C46  19A1               	xorwf	Uart_InitUartModule@Module& (0+255),w,b
 28642  000C48  A4D8               	btfss	status,2,c
 28643  000C4A  0012               	return	
 28644                           
 28645                           ; BSR set to: 0
 28646                           ;uart_drv.c: 328: {
 28647                           ;uart_drv.c: 330: TRISCbits.TRISC0 = ((UINT8)(0));
 28648  000C4C  9094               	bcf	3988,0,c	;volatile
 28649                           
 28650                           ;uart_drv.c: 331: TRISCbits.TRISC1 = ((UINT8)(1));
 28651  000C4E  8294               	bsf	3988,1,c	;volatile
 28652                           
 28653                           ; BSR set to: 0
 28654                           ;uart_drv.c: 334: SetUartBaudRate(((UINT8)(2)), UartConfig);
 28655  000C50  C09D  F096         	movff	Uart_InitUartModule@UartConfig,SetUartBaudRate@UartConfig
 28656  000C54  C09E  F097         	movff	Uart_InitUartModule@UartConfig+1,SetUartBaudRate@UartConfig+1
 28657  000C58  0E02               	movlw	2
 28658  000C5A  ECB5  F014         	call	_SetUartBaudRate
 28659                           
 28660                           ;uart_drv.c: 339: TXSTA2 = 0x00;
 28661  000C5E  0E00               	movlw	0
 28662  000C60  6EA8               	movwf	4008,c	;volatile
 28663                           
 28664                           ;uart_drv.c: 340: TXSTA2 |= (UartConfig->Tx9bitMode) << ((UINT8)(6));
 28665  000C62  0100               	movlb	0	; () banked
 28666  000C64  EE20 F004          	lfsr	2,4
 28667  000C68  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 28668  000C6A  26D9               	addwf	fsr2l,f,c
 28669  000C6C  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 28670  000C6E  22DA               	addwfc	fsr2h,f,c
 28671  000C70  50DF               	movf	indf2,w,c
 28672  000C72  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28673  000C74  0E06               	movlw	6
 28674  000C76  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 28675  000C78                     u13665:
 28676  000C78  90D8               	bcf	status,0,c
 28677  000C7A  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 28678  000C7C  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 28679  000C7E  D7FC               	goto	u13665
 28680  000C80  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 28681  000C82  12A8               	iorwf	4008,f,c	;volatile
 28682                           
 28683                           ; BSR set to: 0
 28684                           ;uart_drv.c: 341: TXSTA2 |= (UartConfig->TxEnable) << ((UINT8)(5));
 28685  000C84  EE20 F006          	lfsr	2,6
 28686  000C88  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 28687  000C8A  26D9               	addwf	fsr2l,f,c
 28688  000C8C  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 28689  000C8E  22DA               	addwfc	fsr2h,f,c
 28690  000C90  50DF               	movf	indf2,w,c
 28691  000C92  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28692  000C94  0E05               	movlw	5
 28693  000C96  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 28694  000C98                     u13675:
 28695  000C98  90D8               	bcf	status,0,c
 28696  000C9A  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 28697  000C9C  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 28698  000C9E  D7FC               	goto	u13675
 28699  000CA0  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 28700  000CA2  12A8               	iorwf	4008,f,c	;volatile
 28701                           
 28702                           ; BSR set to: 0
 28703                           ;uart_drv.c: 342: TXSTA2 |= (UartConfig->UartMode) << ((UINT8)(4));
 28704  000CA4  EE20 F001          	lfsr	2,1
 28705  000CA8  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 28706  000CAA  26D9               	addwf	fsr2l,f,c
 28707  000CAC  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 28708  000CAE  22DA               	addwfc	fsr2h,f,c
 28709  000CB0  50DF               	movf	indf2,w,c
 28710  000CB2  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28711  000CB4  399F               	swapf	??_Uart_InitUartModule& (0+255),w,b
 28712  000CB6  0BF0               	andlw	240
 28713  000CB8  12A8               	iorwf	4008,f,c	;volatile
 28714                           
 28715                           ; BSR set to: 0
 28716                           ;uart_drv.c: 343: TXSTA2 |= (UartConfig->SendBreakEnable) << ((UINT8)(3));
 28717  000CBA  EE20 F008          	lfsr	2,8
 28718  000CBE  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 28719  000CC0  26D9               	addwf	fsr2l,f,c
 28720  000CC2  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 28721  000CC4  22DA               	addwfc	fsr2h,f,c
 28722  000CC6  50DF               	movf	indf2,w,c
 28723  000CC8  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28724  000CCA  90D8               	bcf	status,0,c
 28725  000CCC  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 28726  000CCE  90D8               	bcf	status,0,c
 28727  000CD0  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 28728  000CD2  90D8               	bcf	status,0,c
 28729  000CD4  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 28730  000CD6  12A8               	iorwf	4008,f,c	;volatile
 28731                           
 28732                           ; BSR set to: 0
 28733                           ;uart_drv.c: 344: TXSTA2 |= (UartConfig->HighBaudMode) << ((UINT8)(2));
 28734  000CD8  EE20 F003          	lfsr	2,3
 28735  000CDC  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 28736  000CDE  26D9               	addwf	fsr2l,f,c
 28737  000CE0  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 28738  000CE2  22DA               	addwfc	fsr2h,f,c
 28739  000CE4  50DF               	movf	indf2,w,c
 28740  000CE6  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28741  000CE8  90D8               	bcf	status,0,c
 28742  000CEA  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 28743  000CEC  90D8               	bcf	status,0,c
 28744  000CEE  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 28745  000CF0  12A8               	iorwf	4008,f,c	;volatile
 28746                           
 28747                           ; BSR set to: 0
 28748                           ;uart_drv.c: 347: RCSTA2 = 0x00;
 28749  000CF2  0E00               	movlw	0
 28750  000CF4  6E9C               	movwf	3996,c	;volatile
 28751                           
 28752                           ; BSR set to: 0
 28753                           ;uart_drv.c: 348: RCSTA2 |= (UartConfig->UartEnable) << ((UINT8)(7));
 28754  000CF6  C09D  FFD9         	movff	Uart_InitUartModule@UartConfig,fsr2l
 28755  000CFA  C09E  FFDA         	movff	Uart_InitUartModule@UartConfig+1,fsr2h
 28756  000CFE  50DF               	movf	indf2,w,c
 28757  000D00  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28758  000D02  0E00               	movlw	0
 28759  000D04  B19F               	btfsc	??_Uart_InitUartModule& (0+255),0,b
 28760  000D06  0E80               	movlw	128
 28761  000D08  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28762  000D0A  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 28763  000D0C  129C               	iorwf	3996,f,c	;volatile
 28764                           
 28765                           ; BSR set to: 0
 28766                           ;uart_drv.c: 349: RCSTA2 |= (UartConfig->Rx9bitMode) << ((UINT8)(6));
 28767  000D0E  EE20 F005          	lfsr	2,5
 28768  000D12  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 28769  000D14  26D9               	addwf	fsr2l,f,c
 28770  000D16  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 28771  000D18  22DA               	addwfc	fsr2h,f,c
 28772  000D1A  50DF               	movf	indf2,w,c
 28773  000D1C  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28774  000D1E  0E06               	movlw	6
 28775  000D20  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 28776  000D22                     u13685:
 28777  000D22  90D8               	bcf	status,0,c
 28778  000D24  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 28779  000D26  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 28780  000D28  D7FC               	goto	u13685
 28781  000D2A  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 28782  000D2C  129C               	iorwf	3996,f,c	;volatile
 28783                           
 28784                           ; BSR set to: 0
 28785                           ;uart_drv.c: 350: RCSTA2 |= (UartConfig->RxEnable) << ((UINT8)(4));
 28786  000D2E  EE20 F007          	lfsr	2,7
 28787  000D32  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 28788  000D34  26D9               	addwf	fsr2l,f,c
 28789  000D36  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 28790  000D38  22DA               	addwfc	fsr2h,f,c
 28791  000D3A  50DF               	movf	indf2,w,c
 28792  000D3C  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28793  000D3E  399F               	swapf	??_Uart_InitUartModule& (0+255),w,b
 28794  000D40  0BF0               	andlw	240
 28795  000D42  129C               	iorwf	3996,f,c	;volatile
 28796                           
 28797                           ; BSR set to: 0
 28798                           ;uart_drv.c: 353: BAUDCON2 = 0x00;
 28799  000D44  0E00               	movlw	0
 28800  000D46  6E7C               	movwf	3964,c	;volatile
 28801                           
 28802                           ; BSR set to: 0
 28803                           ;uart_drv.c: 354: BAUDCON2 |= (UartConfig->BaudRateMode) << ((UINT8)(3));
 28804  000D48  EE20 F002          	lfsr	2,2
 28805  000D4C  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 28806  000D4E  26D9               	addwf	fsr2l,f,c
 28807  000D50  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 28808  000D52  22DA               	addwfc	fsr2h,f,c
 28809  000D54  50DF               	movf	indf2,w,c
 28810  000D56  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28811  000D58  90D8               	bcf	status,0,c
 28812  000D5A  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 28813  000D5C  90D8               	bcf	status,0,c
 28814  000D5E  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 28815  000D60  90D8               	bcf	status,0,c
 28816  000D62  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 28817  000D64  127C               	iorwf	3964,f,c	;volatile
 28818                           
 28819                           ; BSR set to: 0
 28820                           ;uart_drv.c: 355: BAUDCON2 |= (UartConfig->WakeUpEnable) << ((UINT8)(1));
 28821  000D66  EE20 F00A          	lfsr	2,10
 28822  000D6A  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 28823  000D6C  26D9               	addwf	fsr2l,f,c
 28824  000D6E  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 28825  000D70  22DA               	addwfc	fsr2h,f,c
 28826  000D72  50DF               	movf	indf2,w,c
 28827  000D74  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28828  000D76  90D8               	bcf	status,0,c
 28829  000D78  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 28830  000D7A  127C               	iorwf	3964,f,c	;volatile
 28831                           
 28832                           ; BSR set to: 0
 28833                           ;uart_drv.c: 356: BAUDCON2 |= (UartConfig->AutobaudEnable) << ((UINT8)(0));
 28834  000D7C  EE20 F009          	lfsr	2,9
 28835  000D80  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 28836  000D82  26D9               	addwf	fsr2l,f,c
 28837  000D84  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 28838  000D86  22DA               	addwfc	fsr2h,f,c
 28839  000D88  50DF               	movf	indf2,w,c
 28840  000D8A  127C               	iorwf	3964,f,c	;volatile
 28841                           
 28842                           ; BSR set to: 0
 28843                           ;uart_drv.c: 359: PIE3bits.TX2IE = UartConfig->TxInterruptEnable;
 28844  000D8C  EE20 F00B          	lfsr	2,11
 28845  000D90  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 28846  000D92  26D9               	addwf	fsr2l,f,c
 28847  000D94  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 28848  000D96  22DA               	addwfc	fsr2h,f,c
 28849  000D98  50DF               	movf	indf2,w,c
 28850  000D9A  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28851  000D9C  3B9F               	swapf	??_Uart_InitUartModule& (0+255),f,b
 28852  000D9E  50A3               	movf	4003,w,c	;volatile
 28853  000DA0  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 28854  000DA2  0BEF               	andlw	-17
 28855  000DA4  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 28856  000DA6  6EA3               	movwf	4003,c	;volatile
 28857                           
 28858                           ; BSR set to: 0
 28859                           ;uart_drv.c: 360: PIE3bits.RC2IE = UartConfig->RxInterruptEnable;
 28860  000DA8  EE20 F00C          	lfsr	2,12
 28861  000DAC  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 28862  000DAE  26D9               	addwf	fsr2l,f,c
 28863  000DB0  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 28864  000DB2  22DA               	addwfc	fsr2h,f,c
 28865  000DB4  50DF               	movf	indf2,w,c
 28866  000DB6  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28867  000DB8  3B9F               	swapf	??_Uart_InitUartModule& (0+255),f,b
 28868  000DBA  479F               	rlncf	??_Uart_InitUartModule& (0+255),f,b
 28869  000DBC  50A3               	movf	4003,w,c	;volatile
 28870  000DBE  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 28871  000DC0  0BDF               	andlw	-33
 28872  000DC2  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 28873  000DC4  6EA3               	movwf	4003,c	;volatile
 28874                           
 28875                           ; BSR set to: 0
 28876  000DC6  0012               	return	
 28877  000DC8                     __end_of_Uart_InitUartModule:
 28878                           	opt stack 0
 28879                           tosu	equ	0xFFF
 28880                           tosh	equ	0xFFE
 28881                           tosl	equ	0xFFD
 28882                           pclath	equ	0xFFA
 28883                           tblptru	equ	0xFF8
 28884                           tblptrh	equ	0xFF7
 28885                           tblptrl	equ	0xFF6
 28886                           tablat	equ	0xFF5
 28887                           prodh	equ	0xFF4
 28888                           prodl	equ	0xFF3
 28889                           intcon	equ	0xFF2
 28890                           intcon2	equ	0xFF1
 28891                           intcon3	equ	0xFF0
 28892                           indf0	equ	0xFEF
 28893                           postinc0	equ	0xFEE
 28894                           plusw0	equ	0xFEB
 28895                           fsr0h	equ	0xFEA
 28896                           fsr0l	equ	0xFE9
 28897                           wreg	equ	0xFE8
 28898                           indf1	equ	0xFE7
 28899                           postinc1	equ	0xFE6
 28900                           postdec1	equ	0xFE5
 28901                           plusw1	equ	0xFE3
 28902                           fsr1h	equ	0xFE2
 28903                           fsr1l	equ	0xFE1
 28904                           indf2	equ	0xFDF
 28905                           postinc2	equ	0xFDE
 28906                           postdec2	equ	0xFDD
 28907                           plusw2	equ	0xFDB
 28908                           fsr2h	equ	0xFDA
 28909                           fsr2l	equ	0xFD9
 28910                           status	equ	0xFD8
 28911                           
 28912 ;; *************** function _SetUartBaudRate *****************
 28913 ;; Defined at:
 28914 ;;		line 121 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 28915 ;; Parameters:    Size  Location     Type
 28916 ;;  Module          1    wreg     unsigned char 
 28917 ;;  UartConfig      2   54[BANK0 ] PTR struct _UartConfig
 28918 ;;		 -> UartConfig(21), 
 28919 ;; Auto vars:     Size  Location     Type
 28920 ;;  Module          1   57[BANK0 ] unsigned char 
 28921 ;;  BaudRateRegi    2   58[BANK0 ] unsigned short 
 28922 ;;  DivisionFact    1   60[BANK0 ] unsigned char 
 28923 ;; Return value:  Size  Location     Type
 28924 ;;                  1    wreg      void 
 28925 ;; Registers used:
 28926 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 28927 ;; Tracked objects:
 28928 ;;		On entry : 0/0
 28929 ;;		On exit  : 0/0
 28930 ;;		Unchanged: 0/0
 28931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28932 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28933 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28934 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28935 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28936 ;;Total ram usage:        7 bytes
 28937 ;; Hardware stack levels used:    1
 28938 ;; Hardware stack levels required when called:   12
 28939 ;; This function calls:
 28940 ;;		___lldiv
 28941 ;;		___lmul
 28942 ;; This function is called by:
 28943 ;;		_Uart_InitUartModule
 28944 ;; This function uses a non-reentrant model
 28945 ;;
 28946                           
 28947                           	psect	text136
 28948  00296A                     __ptext136:
 28949                           	opt stack 0
 28950  00296A                     _SetUartBaudRate:
 28951                           	opt stack 14
 28952                           
 28953                           ; BSR set to: 0
 28954                           ;incstack = 0
 28955                           ;SetUartBaudRate@Module stored from wreg
 28956  00296A  0100               	movlb	0	; () banked
 28957  00296C  6F99               	movwf	SetUartBaudRate@Module& (0+255),b
 28958                           
 28959                           ;uart_drv.c: 123: UINT16 BaudRateRegister = 0;
 28960  00296E  0E00               	movlw	0
 28961  002970  0100               	movlb	0	; () banked
 28962  002972  6F9B               	movwf	(SetUartBaudRate@BaudRateRegister+1)& (0+255),b
 28963  002974  0E00               	movlw	0
 28964  002976  6F9A               	movwf	SetUartBaudRate@BaudRateRegister& (0+255),b
 28965                           
 28966                           ;uart_drv.c: 124: UINT8 DivisionFactor = 0;
 28967  002978  0E00               	movlw	0
 28968  00297A  6F9C               	movwf	SetUartBaudRate@DivisionFactor& (0+255),b
 28969                           
 28970                           ; BSR set to: 0
 28971                           ;uart_drv.c: 127: if ((UartConfig->BaudRateMode == ((UINT8)(0))) && (UartConfig->BaudRat
      +                          eMode == ((UINT8)(0))))
 28972  00297C  EE20 F002          	lfsr	2,2
 28973  002980  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 28974  002982  26D9               	addwf	fsr2l,f,c
 28975  002984  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 28976  002986  22DA               	addwfc	fsr2h,f,c
 28977  002988  50DF               	movf	indf2,w,c
 28978  00298A  A4D8               	btfss	status,2,c
 28979  00298C  D00B               	goto	l625
 28980                           
 28981                           ; BSR set to: 0
 28982  00298E  EE20 F002          	lfsr	2,2
 28983  002992  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 28984  002994  26D9               	addwf	fsr2l,f,c
 28985  002996  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 28986  002998  22DA               	addwfc	fsr2h,f,c
 28987  00299A  50DF               	movf	indf2,w,c
 28988  00299C  A4D8               	btfss	status,2,c
 28989  00299E  D002               	goto	l625
 28990                           
 28991                           ; BSR set to: 0
 28992                           ;uart_drv.c: 128: {
 28993                           ;uart_drv.c: 129: DivisionFactor = 64;
 28994  0029A0  0E40               	movlw	64
 28995  0029A2  D039               	goto	L63
 28996  0029A4                     l625:
 28997                           
 28998                           ; BSR set to: 0
 28999                           ;uart_drv.c: 131: else if ((UartConfig->BaudRateMode == ((UINT8)(1))) && (UartConfig->Ba
      +                          udRateMode == ((UINT8)(0))))
 29000                           
 29001                           ; BSR set to: 0
 29002  0029A4  EE20 F002          	lfsr	2,2
 29003  0029A8  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 29004  0029AA  26D9               	addwf	fsr2l,f,c
 29005  0029AC  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 29006  0029AE  22DA               	addwfc	fsr2h,f,c
 29007  0029B0  04DE               	decf	postinc2,w,c
 29008  0029B2  A4D8               	btfss	status,2,c
 29009  0029B4  D009               	goto	l627
 29010                           
 29011                           ; BSR set to: 0
 29012  0029B6  EE20 F002          	lfsr	2,2
 29013  0029BA  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 29014  0029BC  26D9               	addwf	fsr2l,f,c
 29015  0029BE  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 29016  0029C0  22DA               	addwfc	fsr2h,f,c
 29017  0029C2  50DF               	movf	indf2,w,c
 29018  0029C4  B4D8               	btfsc	status,2,c
 29019  0029C6  D012               	goto	u12710
 29020  0029C8                     l627:
 29021                           
 29022                           ; BSR set to: 0
 29023                           ;uart_drv.c: 135: else if ((UartConfig->BaudRateMode == ((UINT8)(0))) && (UartConfig->Ba
      +                          udRateMode == ((UINT8)(1))))
 29024                           
 29025                           ; BSR set to: 0
 29026  0029C8  EE20 F002          	lfsr	2,2
 29027  0029CC  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 29028  0029CE  26D9               	addwf	fsr2l,f,c
 29029  0029D0  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 29030  0029D2  22DA               	addwfc	fsr2h,f,c
 29031  0029D4  50DF               	movf	indf2,w,c
 29032  0029D6  A4D8               	btfss	status,2,c
 29033  0029D8  D00B               	goto	l629
 29034                           
 29035                           ; BSR set to: 0
 29036  0029DA  EE20 F002          	lfsr	2,2
 29037  0029DE  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 29038  0029E0  26D9               	addwf	fsr2l,f,c
 29039  0029E2  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 29040  0029E4  22DA               	addwfc	fsr2h,f,c
 29041  0029E6  04DE               	decf	postinc2,w,c
 29042  0029E8  A4D8               	btfss	status,2,c
 29043  0029EA  D002               	goto	l629
 29044  0029EC                     u12710:
 29045                           
 29046                           ; BSR set to: 0
 29047                           ;uart_drv.c: 136: {
 29048                           ;uart_drv.c: 137: DivisionFactor = 16;
 29049  0029EC  0E10               	movlw	16
 29050  0029EE  D013               	goto	L63
 29051  0029F0                     l629:
 29052                           
 29053                           ; BSR set to: 0
 29054                           ;uart_drv.c: 139: else if ((UartConfig->BaudRateMode == ((UINT8)(1))) && (UartConfig->Ba
      +                          udRateMode == ((UINT8)(1))))
 29055                           
 29056                           ; BSR set to: 0
 29057  0029F0  EE20 F002          	lfsr	2,2
 29058  0029F4  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 29059  0029F6  26D9               	addwf	fsr2l,f,c
 29060  0029F8  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 29061  0029FA  22DA               	addwfc	fsr2h,f,c
 29062  0029FC  04DE               	decf	postinc2,w,c
 29063  0029FE  A4D8               	btfss	status,2,c
 29064  002A00  D00B               	goto	l631
 29065                           
 29066                           ; BSR set to: 0
 29067  002A02  EE20 F002          	lfsr	2,2
 29068  002A06  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 29069  002A08  26D9               	addwf	fsr2l,f,c
 29070  002A0A  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 29071  002A0C  22DA               	addwfc	fsr2h,f,c
 29072  002A0E  04DE               	decf	postinc2,w,c
 29073  002A10  A4D8               	btfss	status,2,c
 29074  002A12  D002               	goto	l631
 29075                           
 29076                           ; BSR set to: 0
 29077                           ;uart_drv.c: 140: {
 29078                           ;uart_drv.c: 141: DivisionFactor = 4;
 29079  002A14  0E04               	movlw	4
 29080  002A16                     L63:
 29081  002A16  6F9C               	movwf	SetUartBaudRate@DivisionFactor& (0+255),b
 29082  002A18                     l631:
 29083                           
 29084                           ; BSR set to: 0
 29085                           ;uart_drv.c: 146: }
 29086                           ;uart_drv.c: 149: BaudRateRegister = ((UartConfig->McuBusClock/(DivisionFactor * UartCon
      +                          fig->DesiredBaudRate)) - 1);
 29087                           
 29088                           ; BSR set to: 0
 29089                           
 29090                           ; BSR set to: 0
 29091                           
 29092                           ; BSR set to: 0
 29093                           
 29094                           ; BSR set to: 0
 29095                           
 29096                           ;uart_drv.c: 143: else
 29097                           ;uart_drv.c: 144: {
 29098                           
 29099                           ; BSR set to: 0
 29100  002A18  EE20 F00D          	lfsr	2,13
 29101  002A1C  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 29102  002A1E  26D9               	addwf	fsr2l,f,c
 29103  002A20  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 29104  002A22  22DA               	addwfc	fsr2h,f,c
 29105  002A24  CFDE F089          	movff	postinc2,___lldiv@dividend
 29106  002A28  CFDE F08A          	movff	postinc2,___lldiv@dividend+1
 29107  002A2C  CFDE F08B          	movff	postinc2,___lldiv@dividend+2
 29108  002A30  CFDE F08C          	movff	postinc2,___lldiv@dividend+3
 29109  002A34  519C               	movf	SetUartBaudRate@DivisionFactor& (0+255),w,b
 29110  002A36  6F7D               	movwf	___lmul@multiplier& (0+255),b
 29111  002A38  6B7E               	clrf	(___lmul@multiplier+1)& (0+255),b
 29112  002A3A  6B7F               	clrf	(___lmul@multiplier+2)& (0+255),b
 29113  002A3C  6B80               	clrf	(___lmul@multiplier+3)& (0+255),b
 29114  002A3E  EE20 F011          	lfsr	2,17
 29115  002A42  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 29116  002A44  26D9               	addwf	fsr2l,f,c
 29117  002A46  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 29118  002A48  22DA               	addwfc	fsr2h,f,c
 29119  002A4A  CFDE F081          	movff	postinc2,___lmul@multiplicand
 29120  002A4E  CFDE F082          	movff	postinc2,___lmul@multiplicand+1
 29121  002A52  CFDE F083          	movff	postinc2,___lmul@multiplicand+2
 29122  002A56  CFDE F084          	movff	postinc2,___lmul@multiplicand+3
 29123  002A5A  ECBD  F02C         	call	___lmul	;wreg free
 29124  002A5E  C07D  F08D         	movff	?___lmul,___lldiv@divisor
 29125  002A62  C07E  F08E         	movff	?___lmul+1,___lldiv@divisor+1
 29126  002A66  C07F  F08F         	movff	?___lmul+2,___lldiv@divisor+2
 29127  002A6A  C080  F090         	movff	?___lmul+3,___lldiv@divisor+3
 29128  002A6E  EC01  F029         	call	___lldiv	;wreg free
 29129  002A72  0EFF               	movlw	255
 29130  002A74  0100               	movlb	0	; () banked
 29131  002A76  2589               	addwf	?___lldiv& (0+255),w,b
 29132  002A78  6F9A               	movwf	SetUartBaudRate@BaudRateRegister& (0+255),b
 29133  002A7A  0EFF               	movlw	255
 29134  002A7C  218A               	addwfc	(?___lldiv+1)& (0+255),w,b
 29135  002A7E  6F9B               	movwf	(SetUartBaudRate@BaudRateRegister+1)& (0+255),b
 29136                           
 29137                           ; BSR set to: 0
 29138                           ;uart_drv.c: 151: if (Module == ((UINT8)(1)))
 29139  002A80  0599               	decf	SetUartBaudRate@Module& (0+255),w,b
 29140  002A82  A4D8               	btfss	status,2,c
 29141  002A84  D005               	goto	l633
 29142                           
 29143                           ; BSR set to: 0
 29144                           ;uart_drv.c: 152: {
 29145                           ;uart_drv.c: 154: SPBRGH1 = (UINT8)((BaudRateRegister & ((UINT8)(0xFF00))) >> ((UINT8)(8
      +                          )));
 29146  002A86  0E00               	movlw	0
 29147  002A88  6E7F               	movwf	3967,c	;volatile
 29148                           
 29149                           ; BSR set to: 0
 29150                           ;uart_drv.c: 155: SPBRG1 = (UINT8)((BaudRateRegister & ((UINT8)(0x00FF))));
 29151  002A8A  C09A  FFB0         	movff	SetUartBaudRate@BaudRateRegister,4016	;volatile
 29152                           
 29153                           ;uart_drv.c: 156: }
 29154  002A8E  0012               	return	
 29155  002A90                     l633:
 29156                           
 29157                           ; BSR set to: 0
 29158                           ;uart_drv.c: 157: else if (Module == ((UINT8)(2)))
 29159                           
 29160                           ; BSR set to: 0
 29161  002A90  0E02               	movlw	2
 29162  002A92  1999               	xorwf	SetUartBaudRate@Module& (0+255),w,b
 29163  002A94  A4D8               	btfss	status,2,c
 29164  002A96  0012               	return	
 29165                           
 29166                           ; BSR set to: 0
 29167                           ;uart_drv.c: 158: {
 29168                           ;uart_drv.c: 160: SPBRGH2 = (UINT8)((BaudRateRegister & ((UINT8)(0xFF00))) >> ((UINT8)(8
      +                          )));
 29169  002A98  0E00               	movlw	0
 29170  002A9A  6E7D               	movwf	3965,c	;volatile
 29171                           
 29172                           ; BSR set to: 0
 29173                           ;uart_drv.c: 161: SPBRG2 = (UINT8)((BaudRateRegister & ((UINT8)(0x00FF))));
 29174  002A9C  C09A  FFAB         	movff	SetUartBaudRate@BaudRateRegister,4011	;volatile
 29175                           
 29176                           ; BSR set to: 0
 29177  002AA0  0012               	return	
 29178  002AA2                     __end_of_SetUartBaudRate:
 29179                           	opt stack 0
 29180                           tosu	equ	0xFFF
 29181                           tosh	equ	0xFFE
 29182                           tosl	equ	0xFFD
 29183                           pclath	equ	0xFFA
 29184                           tblptru	equ	0xFF8
 29185                           tblptrh	equ	0xFF7
 29186                           tblptrl	equ	0xFF6
 29187                           tablat	equ	0xFF5
 29188                           prodh	equ	0xFF4
 29189                           prodl	equ	0xFF3
 29190                           intcon	equ	0xFF2
 29191                           intcon2	equ	0xFF1
 29192                           intcon3	equ	0xFF0
 29193                           indf0	equ	0xFEF
 29194                           postinc0	equ	0xFEE
 29195                           plusw0	equ	0xFEB
 29196                           fsr0h	equ	0xFEA
 29197                           fsr0l	equ	0xFE9
 29198                           wreg	equ	0xFE8
 29199                           indf1	equ	0xFE7
 29200                           postinc1	equ	0xFE6
 29201                           postdec1	equ	0xFE5
 29202                           plusw1	equ	0xFE3
 29203                           fsr1h	equ	0xFE2
 29204                           fsr1l	equ	0xFE1
 29205                           indf2	equ	0xFDF
 29206                           postinc2	equ	0xFDE
 29207                           postdec2	equ	0xFDD
 29208                           plusw2	equ	0xFDB
 29209                           fsr2h	equ	0xFDA
 29210                           fsr2l	equ	0xFD9
 29211                           status	equ	0xFD8
 29212                           
 29213 ;; *************** function ___lmul *****************
 29214 ;; Defined at:
 29215 ;;		line 15 in file "/opt/microchip/xc8/v1.45/sources/common/Umul32.c"
 29216 ;; Parameters:    Size  Location     Type
 29217 ;;  multiplier      4   29[BANK0 ] unsigned long 
 29218 ;;  multiplicand    4   33[BANK0 ] unsigned long 
 29219 ;; Auto vars:     Size  Location     Type
 29220 ;;  product         4   37[BANK0 ] unsigned long 
 29221 ;; Return value:  Size  Location     Type
 29222 ;;                  4   29[BANK0 ] unsigned long 
 29223 ;; Registers used:
 29224 ;;		wreg, status,2, status,0
 29225 ;; Tracked objects:
 29226 ;;		On entry : 0/0
 29227 ;;		On exit  : 0/0
 29228 ;;		Unchanged: 0/0
 29229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29230 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29231 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29233 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29234 ;;Total ram usage:       12 bytes
 29235 ;; Hardware stack levels used:    1
 29236 ;; Hardware stack levels required when called:   11
 29237 ;; This function calls:
 29238 ;;		Nothing
 29239 ;; This function is called by:
 29240 ;;		_Tmr_TmrBPrSet
 29241 ;;		_SetUartBaudRate
 29242 ;;		_strtol
 29243 ;; This function uses a non-reentrant model
 29244 ;;
 29245                           
 29246                           	psect	text137
 29247  00597A                     __ptext137:
 29248                           	opt stack 0
 29249  00597A                     ___lmul:
 29250                           	opt stack 15
 29251                           
 29252                           ; BSR set to: 0
 29253                           ;incstack = 0
 29254  00597A  0E00               	movlw	0
 29255  00597C  0100               	movlb	0	; () banked
 29256  00597E  6F85               	movwf	___lmul@product& (0+255),b
 29257  005980  0E00               	movlw	0
 29258  005982  6F86               	movwf	(___lmul@product+1)& (0+255),b
 29259  005984  0E00               	movlw	0
 29260  005986  6F87               	movwf	(___lmul@product+2)& (0+255),b
 29261  005988  0E00               	movlw	0
 29262  00598A  6F88               	movwf	(___lmul@product+3)& (0+255),b
 29263  00598C                     
 29264                           ; BSR set to: 0
 29265                           
 29266                           ; BSR set to: 0
 29267  00598C  A17D               	btfss	___lmul@multiplier& (0+255),0,b
 29268  00598E  D008               	goto	l2926
 29269                           
 29270                           ; BSR set to: 0
 29271  005990  5181               	movf	___lmul@multiplicand& (0+255),w,b
 29272  005992  2785               	addwf	___lmul@product& (0+255),f,b
 29273  005994  5182               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 29274  005996  2386               	addwfc	(___lmul@product+1)& (0+255),f,b
 29275  005998  5183               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 29276  00599A  2387               	addwfc	(___lmul@product+2)& (0+255),f,b
 29277  00599C  5184               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 29278  00599E  2388               	addwfc	(___lmul@product+3)& (0+255),f,b
 29279  0059A0                     l2926:
 29280                           
 29281                           ; BSR set to: 0
 29282                           
 29283                           ; BSR set to: 0
 29284  0059A0  90D8               	bcf	status,0,c
 29285  0059A2  3781               	rlcf	___lmul@multiplicand& (0+255),f,b
 29286  0059A4  3782               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 29287  0059A6  3783               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 29288  0059A8  3784               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 29289                           
 29290                           ; BSR set to: 0
 29291  0059AA  90D8               	bcf	status,0,c
 29292  0059AC  3380               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 29293  0059AE  337F               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 29294  0059B0  337E               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 29295  0059B2  337D               	rrcf	___lmul@multiplier& (0+255),f,b
 29296  0059B4  517D               	movf	___lmul@multiplier& (0+255),w,b
 29297  0059B6  117E               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 29298  0059B8  117F               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 29299  0059BA  1180               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 29300  0059BC  A4D8               	btfss	status,2,c
 29301  0059BE  D7E6               	goto	l2925
 29302                           
 29303                           ; BSR set to: 0
 29304  0059C0  C085  F07D         	movff	___lmul@product,?___lmul
 29305  0059C4  C086  F07E         	movff	___lmul@product+1,?___lmul+1
 29306  0059C8  C087  F07F         	movff	___lmul@product+2,?___lmul+2
 29307  0059CC  C088  F080         	movff	___lmul@product+3,?___lmul+3
 29308                           
 29309                           ; BSR set to: 0
 29310  0059D0  0012               	return		;funcret
 29311  0059D2                     __end_of___lmul:
 29312                           	opt stack 0
 29313                           tosu	equ	0xFFF
 29314                           tosh	equ	0xFFE
 29315                           tosl	equ	0xFFD
 29316                           pclath	equ	0xFFA
 29317                           tblptru	equ	0xFF8
 29318                           tblptrh	equ	0xFF7
 29319                           tblptrl	equ	0xFF6
 29320                           tablat	equ	0xFF5
 29321                           prodh	equ	0xFF4
 29322                           prodl	equ	0xFF3
 29323                           intcon	equ	0xFF2
 29324                           intcon2	equ	0xFF1
 29325                           intcon3	equ	0xFF0
 29326                           indf0	equ	0xFEF
 29327                           postinc0	equ	0xFEE
 29328                           plusw0	equ	0xFEB
 29329                           fsr0h	equ	0xFEA
 29330                           fsr0l	equ	0xFE9
 29331                           wreg	equ	0xFE8
 29332                           indf1	equ	0xFE7
 29333                           postinc1	equ	0xFE6
 29334                           postdec1	equ	0xFE5
 29335                           plusw1	equ	0xFE3
 29336                           fsr1h	equ	0xFE2
 29337                           fsr1l	equ	0xFE1
 29338                           indf2	equ	0xFDF
 29339                           postinc2	equ	0xFDE
 29340                           postdec2	equ	0xFDD
 29341                           plusw2	equ	0xFDB
 29342                           fsr2h	equ	0xFDA
 29343                           fsr2l	equ	0xFD9
 29344                           status	equ	0xFD8
 29345                           
 29346 ;; *************** function _UartSetConfigLow *****************
 29347 ;; Defined at:
 29348 ;;		line 229 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 29349 ;; Parameters:    Size  Location     Type
 29350 ;;		None
 29351 ;; Auto vars:     Size  Location     Type
 29352 ;;		None
 29353 ;; Return value:  Size  Location     Type
 29354 ;;                  1    wreg      void 
 29355 ;; Registers used:
 29356 ;;		wreg, status,2
 29357 ;; Tracked objects:
 29358 ;;		On entry : 0/0
 29359 ;;		On exit  : 0/0
 29360 ;;		Unchanged: 0/0
 29361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29363 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29365 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29366 ;;Total ram usage:        0 bytes
 29367 ;; Hardware stack levels used:    1
 29368 ;; Hardware stack levels required when called:   11
 29369 ;; This function calls:
 29370 ;;		Nothing
 29371 ;; This function is called by:
 29372 ;;		_ConfigureModem
 29373 ;; This function uses a non-reentrant model
 29374 ;;
 29375                           
 29376                           	psect	text138
 29377  0059D2                     __ptext138:
 29378                           	opt stack 0
 29379  0059D2                     _UartSetConfigLow:
 29380                           	opt stack 15
 29381                           
 29382                           ;mdm_gsm_gprs.c: 231: UartConfig.UartEnable = ((UINT8)(1));
 29383                           
 29384                           ; BSR set to: 0
 29385                           ;incstack = 0
 29386  0059D2  0E01               	movlw	1
 29387  0059D4  0103               	movlb	3	; () banked
 29388  0059D6  6F1C               	movwf	_UartConfig& (0+255),b
 29389                           
 29390                           ;mdm_gsm_gprs.c: 232: UartConfig.UartMode = ((UINT8)(0));
 29391  0059D8  0E00               	movlw	0
 29392  0059DA  6F1D               	movwf	(_UartConfig+1)& (0+255),b
 29393                           
 29394                           ;mdm_gsm_gprs.c: 233: UartConfig.BaudRateMode = ((UINT8)(0));
 29395  0059DC  0E00               	movlw	0
 29396  0059DE  6F1E               	movwf	(_UartConfig+2)& (0+255),b
 29397                           
 29398                           ;mdm_gsm_gprs.c: 234: UartConfig.HighBaudMode = ((UINT8)(0));
 29399  0059E0  0E00               	movlw	0
 29400  0059E2  6F1F               	movwf	(_UartConfig+3)& (0+255),b
 29401                           
 29402                           ;mdm_gsm_gprs.c: 235: UartConfig.Tx9bitMode = ((UINT8)(0));
 29403  0059E4  0E00               	movlw	0
 29404  0059E6  6F20               	movwf	(_UartConfig+4)& (0+255),b
 29405                           
 29406                           ;mdm_gsm_gprs.c: 236: UartConfig.Rx9bitMode = ((UINT8)(0));
 29407  0059E8  0E00               	movlw	0
 29408  0059EA  6F21               	movwf	(_UartConfig+5)& (0+255),b
 29409                           
 29410                           ;mdm_gsm_gprs.c: 237: UartConfig.TxEnable = ((UINT8)(1));
 29411  0059EC  0E01               	movlw	1
 29412  0059EE  6F22               	movwf	(_UartConfig+6)& (0+255),b
 29413                           
 29414                           ;mdm_gsm_gprs.c: 238: UartConfig.RxEnable = ((UINT8)(1));
 29415  0059F0  0E01               	movlw	1
 29416  0059F2  6F23               	movwf	(_UartConfig+7)& (0+255),b
 29417                           
 29418                           ;mdm_gsm_gprs.c: 239: UartConfig.SendBreakEnable = ((UINT8)(0));
 29419  0059F4  0E00               	movlw	0
 29420  0059F6  6F24               	movwf	(_UartConfig+8)& (0+255),b
 29421                           
 29422                           ;mdm_gsm_gprs.c: 240: UartConfig.AutobaudEnable = ((UINT8)(0));
 29423  0059F8  0E00               	movlw	0
 29424  0059FA  6F25               	movwf	(_UartConfig+9)& (0+255),b
 29425                           
 29426                           ;mdm_gsm_gprs.c: 241: UartConfig.WakeUpEnable = ((UINT8)(0));
 29427  0059FC  0E00               	movlw	0
 29428  0059FE  6F26               	movwf	(_UartConfig+10)& (0+255),b
 29429                           
 29430                           ;mdm_gsm_gprs.c: 242: UartConfig.TxInterruptEnable = ((UINT8)(0));
 29431  005A00  0E00               	movlw	0
 29432  005A02  6F27               	movwf	(_UartConfig+11)& (0+255),b
 29433                           
 29434                           ;mdm_gsm_gprs.c: 243: UartConfig.RxInterruptEnable = ((UINT8)(1));
 29435  005A04  0E01               	movlw	1
 29436  005A06  6F28               	movwf	(_UartConfig+12)& (0+255),b
 29437                           
 29438                           ;mdm_gsm_gprs.c: 244: UartConfig.McuBusClock = ((UINT32)(48000000));
 29439  005A08  0E00               	movlw	0
 29440  005A0A  6F29               	movwf	(_UartConfig+13)& (0+255),b
 29441  005A0C  0E6C               	movlw	108
 29442  005A0E  6F2A               	movwf	(_UartConfig+14)& (0+255),b
 29443  005A10  0EDC               	movlw	220
 29444  005A12  6F2B               	movwf	(_UartConfig+15)& (0+255),b
 29445  005A14  0E02               	movlw	2
 29446  005A16  6F2C               	movwf	(_UartConfig+16)& (0+255),b
 29447                           
 29448                           ;mdm_gsm_gprs.c: 245: UartConfig.DesiredBaudRate = ((UINT32)(9600));
 29449  005A18  0E80               	movlw	128
 29450  005A1A  6F2D               	movwf	(_UartConfig+17)& (0+255),b
 29451  005A1C  0E25               	movlw	37
 29452  005A1E  6F2E               	movwf	(_UartConfig+18)& (0+255),b
 29453  005A20  0E00               	movlw	0
 29454  005A22  6F2F               	movwf	(_UartConfig+19)& (0+255),b
 29455  005A24  0E00               	movlw	0
 29456  005A26  6F30               	movwf	(_UartConfig+20)& (0+255),b
 29457                           
 29458                           ; BSR set to: 3
 29459  005A28  0012               	return		;funcret
 29460  005A2A                     __end_of_UartSetConfigLow:
 29461                           	opt stack 0
 29462                           tosu	equ	0xFFF
 29463                           tosh	equ	0xFFE
 29464                           tosl	equ	0xFFD
 29465                           pclath	equ	0xFFA
 29466                           tblptru	equ	0xFF8
 29467                           tblptrh	equ	0xFF7
 29468                           tblptrl	equ	0xFF6
 29469                           tablat	equ	0xFF5
 29470                           prodh	equ	0xFF4
 29471                           prodl	equ	0xFF3
 29472                           intcon	equ	0xFF2
 29473                           intcon2	equ	0xFF1
 29474                           intcon3	equ	0xFF0
 29475                           indf0	equ	0xFEF
 29476                           postinc0	equ	0xFEE
 29477                           plusw0	equ	0xFEB
 29478                           fsr0h	equ	0xFEA
 29479                           fsr0l	equ	0xFE9
 29480                           wreg	equ	0xFE8
 29481                           indf1	equ	0xFE7
 29482                           postinc1	equ	0xFE6
 29483                           postdec1	equ	0xFE5
 29484                           plusw1	equ	0xFE3
 29485                           fsr1h	equ	0xFE2
 29486                           fsr1l	equ	0xFE1
 29487                           indf2	equ	0xFDF
 29488                           postinc2	equ	0xFDE
 29489                           postdec2	equ	0xFDD
 29490                           plusw2	equ	0xFDB
 29491                           fsr2h	equ	0xFDA
 29492                           fsr2l	equ	0xFD9
 29493                           status	equ	0xFD8
 29494                           
 29495 ;; *************** function _CheckModem *****************
 29496 ;; Defined at:
 29497 ;;		line 283 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 29498 ;; Parameters:    Size  Location     Type
 29499 ;;		None
 29500 ;; Auto vars:     Size  Location     Type
 29501 ;;		None
 29502 ;; Return value:  Size  Location     Type
 29503 ;;                  1    wreg      void 
 29504 ;; Registers used:
 29505 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 29506 ;; Tracked objects:
 29507 ;;		On entry : 0/0
 29508 ;;		On exit  : 0/0
 29509 ;;		Unchanged: 0/0
 29510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29511 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29512 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29513 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29514 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29515 ;;Total ram usage:        0 bytes
 29516 ;; Hardware stack levels used:    1
 29517 ;; Hardware stack levels required when called:   14
 29518 ;; This function calls:
 29519 ;;		_GenerateEvt
 29520 ;;		_OsTmr_GetTimerStatus
 29521 ;;		_OsTmr_StartTimer
 29522 ;;		_ReceiveEvt
 29523 ;;		_Uart_WriteConstString
 29524 ;; This function is called by:
 29525 ;;		_Mdm_MainTask
 29526 ;; This function uses a non-reentrant model
 29527 ;;
 29528                           
 29529                           	psect	text139
 29530  002020                     __ptext139:
 29531                           	opt stack 0
 29532  002020                     _CheckModem:
 29533                           	opt stack 13
 29534                           
 29535                           ;mdm_gsm_gprs.c: 285: static CheckMdmStsType CheckMdmSts = MdmCh_SetInitialDelay;
 29536                           ;mdm_gsm_gprs.c: 286: static SwTimerType Timeout = { 0u, SwTimerExpired, 0, 0, DelayNotE
      +                          xpired, };
 29537                           ;mdm_gsm_gprs.c: 288: switch (CheckMdmSts)
 29538                           
 29539                           ; BSR set to: 3
 29540                           ;incstack = 0
 29541  002020  D09C               	goto	l982
 29542  002022                     
 29543                           ;mdm_gsm_gprs.c: 292: OsTmr_StartTimer(&Timeout,2000);
 29544  002022  0EF5               	movlw	low CheckModem@Timeout
 29545  002024  0100               	movlb	0	; () banked
 29546  002026  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 29547  002028  0E03               	movlw	high CheckModem@Timeout
 29548  00202A  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 29549  00202C  0ED0               	movlw	208
 29550  00202E  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 29551  002030  0E07               	movlw	7
 29552  002032  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 29553  002034  0E00               	movlw	0
 29554  002036  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 29555  002038  0E00               	movlw	0
 29556  00203A  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 29557  00203C  EC34  F02C         	call	_OsTmr_StartTimer	;wreg free
 29558                           
 29559                           ;mdm_gsm_gprs.c: 294: CheckMdmSts = MdmCh_InitialDelay;
 29560  002040  0E01               	movlw	1
 29561  002042  0101               	movlb	1	; () banked
 29562  002044  6FF3               	movwf	CheckModem@CheckMdmSts& (0+255),b
 29563                           
 29564                           ;mdm_gsm_gprs.c: 295: break;
 29565  002046  0012               	return	
 29566  002048                     
 29567                           ; BSR set to: 1
 29568                           ;mdm_gsm_gprs.c: 299: if (OsTmr_GetTimerStatus(&Timeout) == SwTimerExpired)
 29569                           
 29570                           ; BSR set to: 1
 29571  002048  0EF5               	movlw	low CheckModem@Timeout
 29572  00204A  0100               	movlb	0	; () banked
 29573  00204C  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 29574  00204E  0E03               	movlw	high CheckModem@Timeout
 29575  002050  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 29576  002052  ECE9  F027         	call	_OsTmr_GetTimerStatus	;wreg free
 29577  002056  06E8               	decf	wreg,f,c
 29578  002058  A4D8               	btfss	status,2,c
 29579  00205A  0012               	return	
 29580                           
 29581                           ;mdm_gsm_gprs.c: 300: {
 29582                           ;mdm_gsm_gprs.c: 302: CheckMdmSts = MdmCh_SendATE1;
 29583  00205C  0E02               	movlw	2
 29584  00205E  0101               	movlb	1	; () banked
 29585  002060  6FF3               	movwf	CheckModem@CheckMdmSts& (0+255),b
 29586                           
 29587                           ; BSR set to: 1
 29588                           ;mdm_gsm_gprs.c: 303: }
 29589                           ;mdm_gsm_gprs.c: 304: break;
 29590  002062  0012               	return	
 29591  002064                     
 29592                           ; BSR set to: 1
 29593                           ;mdm_gsm_gprs.c: 308: Uart_WriteConstString(1,"AT\r\n");
 29594                           
 29595                           ; BSR set to: 1
 29596  002064  0EE6               	movlw	low STR_1
 29597  002066  0100               	movlb	0	; () banked
 29598  002068  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 29599  00206A  0EFF               	movlw	high STR_1
 29600  00206C  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 29601  00206E  0E01               	movlw	1
 29602  002070  EC98  F030         	call	_Uart_WriteConstString
 29603                           
 29604                           ;mdm_gsm_gprs.c: 310: OsTmr_StartTimer(&Timeout,2000u);
 29605  002074  0EF5               	movlw	low CheckModem@Timeout
 29606  002076  0100               	movlb	0	; () banked
 29607  002078  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 29608  00207A  0E03               	movlw	high CheckModem@Timeout
 29609  00207C  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 29610  00207E  0ED0               	movlw	208
 29611  002080  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 29612  002082  0E07               	movlw	7
 29613  002084  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 29614  002086  0E00               	movlw	0
 29615  002088  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 29616  00208A  0E00               	movlw	0
 29617  00208C  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 29618  00208E  EC34  F02C         	call	_OsTmr_StartTimer	;wreg free
 29619                           
 29620                           ;mdm_gsm_gprs.c: 312: CheckMdmSts = MdmCh_WaitEcho;
 29621  002092  0E03               	movlw	3
 29622  002094  0101               	movlb	1	; () banked
 29623  002096  6FF3               	movwf	CheckModem@CheckMdmSts& (0+255),b
 29624                           
 29625                           ;mdm_gsm_gprs.c: 313: break;
 29626  002098  0012               	return	
 29627  00209A                     
 29628                           ; BSR set to: 1
 29629                           ;mdm_gsm_gprs.c: 317: if (ReceiveEvt(&NewStringReceived))
 29630                           
 29631                           ; BSR set to: 1
 29632  00209A  0E3C               	movlw	low _NewStringReceived
 29633  00209C  0100               	movlb	0	; () banked
 29634  00209E  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 29635  0020A0  0E00               	movlw	high _NewStringReceived
 29636  0020A2  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 29637  0020A4  ECE1  F032         	call	_ReceiveEvt	;wreg free
 29638  0020A8  0900               	iorlw	0
 29639  0020AA  B4D8               	btfsc	status,2,c
 29640  0020AC  D030               	goto	l989
 29641                           
 29642                           ;mdm_gsm_gprs.c: 318: {
 29643                           ;mdm_gsm_gprs.c: 320: if (((RxBuffer[0] == 'O') && (RxBuffer[1] == 'K')) || ((RxBuffer[1
      +                          ] == 'O') && (RxBuffer[2] == 'K')))
 29644  0020AE  CC58  FFE8         	movff	_RxBuffer,wreg
 29645  0020B2  0A4F               	xorlw	79
 29646  0020B4  A4D8               	btfss	status,2,c
 29647  0020B6  D005               	goto	u14840
 29648  0020B8  CC59  FFE8         	movff	_RxBuffer+1,wreg
 29649  0020BC  0A4B               	xorlw	75
 29650  0020BE  B4D8               	btfsc	status,2,c
 29651  0020C0  D00A               	goto	u14860
 29652  0020C2                     u14840:
 29653  0020C2  CC59  FFE8         	movff	_RxBuffer+1,wreg
 29654  0020C6  0A4F               	xorlw	79
 29655  0020C8  A4D8               	btfss	status,2,c
 29656  0020CA  0012               	return	
 29657  0020CC  CC5A  FFE8         	movff	_RxBuffer+2,wreg
 29658  0020D0  0A4B               	xorlw	75
 29659  0020D2  A4D8               	btfss	status,2,c
 29660  0020D4  0012               	return	
 29661  0020D6                     u14860:
 29662                           
 29663                           ;mdm_gsm_gprs.c: 321: {
 29664                           ;mdm_gsm_gprs.c: 322: MdmStatus = ModemReady;
 29665  0020D6  0E02               	movlw	2
 29666  0020D8  0100               	movlb	0	; () banked
 29667  0020DA  6FD1               	movwf	_MdmStatus& (0+255),b
 29668                           
 29669                           ; BSR set to: 0
 29670                           ;mdm_gsm_gprs.c: 324: GenerateEvt(&MdmOnOffPulseRequest);
 29671  0020DC  0EE0               	movlw	low _MdmOnOffPulseRequest
 29672  0020DE  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 29673  0020E0  0E00               	movlw	high _MdmOnOffPulseRequest
 29674  0020E2  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 29675  0020E4  ECD2  F034         	call	_GenerateEvt	;wreg free
 29676                           
 29677                           ;mdm_gsm_gprs.c: 326: OsTmr_StartTimer(&Timeout,1000u);
 29678  0020E8  0EF5               	movlw	low CheckModem@Timeout
 29679  0020EA  0100               	movlb	0	; () banked
 29680  0020EC  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 29681  0020EE  0E03               	movlw	high CheckModem@Timeout
 29682  0020F0  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 29683  0020F2  0EE8               	movlw	232
 29684  0020F4  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 29685  0020F6  0E03               	movlw	3
 29686  0020F8  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 29687  0020FA  0E00               	movlw	0
 29688  0020FC  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 29689  0020FE  0E00               	movlw	0
 29690  002100  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 29691  002102  EC34  F02C         	call	_OsTmr_StartTimer	;wreg free
 29692                           
 29693                           ;mdm_gsm_gprs.c: 328: CheckMdmSts = MdmCh_Delay;
 29694  002106  0E04               	movlw	4
 29695  002108  0101               	movlb	1	; () banked
 29696  00210A  6FF3               	movwf	CheckModem@CheckMdmSts& (0+255),b
 29697                           
 29698                           ; BSR set to: 1
 29699                           ;mdm_gsm_gprs.c: 329: }
 29700                           ;mdm_gsm_gprs.c: 330: }
 29701  00210C  0012               	return	
 29702  00210E                     l989:
 29703                           
 29704                           ;mdm_gsm_gprs.c: 331: else if (OsTmr_GetTimerStatus(&Timeout) == SwTimerExpired)
 29705                           
 29706                           ; BSR set to: 1
 29707  00210E  0EF5               	movlw	low CheckModem@Timeout
 29708  002110  0100               	movlb	0	; () banked
 29709  002112  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 29710  002114  0E03               	movlw	high CheckModem@Timeout
 29711  002116  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 29712  002118  ECE9  F027         	call	_OsTmr_GetTimerStatus	;wreg free
 29713  00211C  06E8               	decf	wreg,f,c
 29714  00211E  A4D8               	btfss	status,2,c
 29715  002120  0012               	return	
 29716                           
 29717                           ;mdm_gsm_gprs.c: 332: {
 29718                           ;mdm_gsm_gprs.c: 334: MdmStatus = ModemOff;
 29719  002122  0E00               	movlw	0
 29720  002124  0100               	movlb	0	; () banked
 29721  002126  6FD1               	movwf	_MdmStatus& (0+255),b
 29722                           
 29723                           ;mdm_gsm_gprs.c: 336: ComChecCompleted = 1u;
 29724  002128  0E01               	movlw	1
 29725  00212A  6E2B               	movwf	_ComChecCompleted,c
 29726                           
 29727                           ;mdm_gsm_gprs.c: 338: CheckMdmSts = MdmCh_Done;
 29728  00212C  0E05               	movlw	5
 29729  00212E  0101               	movlb	1	; () banked
 29730  002130  6FF3               	movwf	CheckModem@CheckMdmSts& (0+255),b
 29731                           
 29732                           ; BSR set to: 1
 29733                           ;mdm_gsm_gprs.c: 343: }
 29734                           ;mdm_gsm_gprs.c: 344: break;
 29735                           
 29736                           ; BSR set to: 1
 29737                           
 29738                           ;mdm_gsm_gprs.c: 340: else
 29739                           ;mdm_gsm_gprs.c: 341: {
 29740                           
 29741                           ; BSR set to: 1
 29742                           
 29743                           ;mdm_gsm_gprs.c: 339: }
 29744  002132  0012               	return	
 29745  002134                     
 29746                           ; BSR set to: 1
 29747                           ;mdm_gsm_gprs.c: 348: if (OsTmr_GetTimerStatus(&Timeout) == SwTimerExpired)
 29748                           
 29749                           ; BSR set to: 1
 29750  002134  0EF5               	movlw	low CheckModem@Timeout
 29751  002136  0100               	movlb	0	; () banked
 29752  002138  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 29753  00213A  0E03               	movlw	high CheckModem@Timeout
 29754  00213C  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 29755  00213E  ECE9  F027         	call	_OsTmr_GetTimerStatus	;wreg free
 29756  002142  06E8               	decf	wreg,f,c
 29757  002144  A4D8               	btfss	status,2,c
 29758  002146  0012               	return	
 29759                           
 29760                           ;mdm_gsm_gprs.c: 349: {
 29761                           ;mdm_gsm_gprs.c: 351: MdmStatus = ModemOff;
 29762  002148  0E00               	movlw	0
 29763  00214A  0100               	movlb	0	; () banked
 29764  00214C  6FD1               	movwf	_MdmStatus& (0+255),b
 29765                           
 29766                           ;mdm_gsm_gprs.c: 353: ComChecCompleted = 1u;
 29767  00214E  0E01               	movlw	1
 29768  002150  6E2B               	movwf	_ComChecCompleted,c
 29769                           
 29770                           ;mdm_gsm_gprs.c: 355: CheckMdmSts = MdmCh_Done;
 29771  002152  0E05               	movlw	5
 29772  002154  0101               	movlb	1	; () banked
 29773  002156  6FF3               	movwf	CheckModem@CheckMdmSts& (0+255),b
 29774                           
 29775                           ; BSR set to: 1
 29776                           ;mdm_gsm_gprs.c: 365: }
 29777                           
 29778                           ; BSR set to: 1
 29779                           ;mdm_gsm_gprs.c: 364: break;
 29780                           
 29781                           ;mdm_gsm_gprs.c: 363: default:
 29782                           
 29783                           ; BSR set to: 1
 29784                           ;mdm_gsm_gprs.c: 361: break;
 29785                           
 29786                           ;mdm_gsm_gprs.c: 359: case MdmCh_Done:
 29787                           
 29788                           ; BSR set to: 1
 29789                           ;mdm_gsm_gprs.c: 356: }
 29790                           ;mdm_gsm_gprs.c: 357: break;
 29791  002158  0012               	return	
 29792  00215A                     l982:
 29793                           
 29794                           ; BSR set to: 1
 29795  00215A  0101               	movlb	1	; () banked
 29796  00215C  51F3               	movf	CheckModem@CheckMdmSts& (0+255),w,b
 29797                           
 29798                           ; Switch size 1, requested type "space"
 29799                           ; Number of cases is 6, Range of values is 0 to 5
 29800                           ; switch strategies available:
 29801                           ; Name         Instructions Cycles
 29802                           ; simple_byte           19    10 (average)
 29803                           ;	Chosen strategy is simple_byte
 29804  00215E  0A00               	xorlw	0	; case 0
 29805  002160  B4D8               	btfsc	status,2,c
 29806  002162  D75F               	goto	l983
 29807  002164  0A01               	xorlw	1	; case 1
 29808  002166  B4D8               	btfsc	status,2,c
 29809  002168  D76F               	goto	l985
 29810  00216A  0A03               	xorlw	3	; case 2
 29811  00216C  B4D8               	btfsc	status,2,c
 29812  00216E  D77A               	goto	l987
 29813  002170  0A01               	xorlw	1	; case 3
 29814  002172  B4D8               	btfsc	status,2,c
 29815  002174  D792               	goto	l988
 29816  002176  0A07               	xorlw	7	; case 4
 29817  002178  B4D8               	btfsc	status,2,c
 29818  00217A  D7DC               	goto	l998
 29819  00217C  0A01               	xorlw	1	; case 5
 29820  00217E  0012               	return	
 29821  002180                     __end_of_CheckModem:
 29822                           	opt stack 0
 29823                           tosu	equ	0xFFF
 29824                           tosh	equ	0xFFE
 29825                           tosl	equ	0xFFD
 29826                           pclath	equ	0xFFA
 29827                           tblptru	equ	0xFF8
 29828                           tblptrh	equ	0xFF7
 29829                           tblptrl	equ	0xFF6
 29830                           tablat	equ	0xFF5
 29831                           prodh	equ	0xFF4
 29832                           prodl	equ	0xFF3
 29833                           intcon	equ	0xFF2
 29834                           intcon2	equ	0xFF1
 29835                           intcon3	equ	0xFF0
 29836                           indf0	equ	0xFEF
 29837                           postinc0	equ	0xFEE
 29838                           plusw0	equ	0xFEB
 29839                           fsr0h	equ	0xFEA
 29840                           fsr0l	equ	0xFE9
 29841                           wreg	equ	0xFE8
 29842                           indf1	equ	0xFE7
 29843                           postinc1	equ	0xFE6
 29844                           postdec1	equ	0xFE5
 29845                           plusw1	equ	0xFE3
 29846                           fsr1h	equ	0xFE2
 29847                           fsr1l	equ	0xFE1
 29848                           indf2	equ	0xFDF
 29849                           postinc2	equ	0xFDE
 29850                           postdec2	equ	0xFDD
 29851                           plusw2	equ	0xFDB
 29852                           fsr2h	equ	0xFDA
 29853                           fsr2l	equ	0xFD9
 29854                           status	equ	0xFD8
 29855                           
 29856 ;; *************** function _MdmCntSm *****************
 29857 ;; Defined at:
 29858 ;;		line 199 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mdm_drv.c"
 29859 ;; Parameters:    Size  Location     Type
 29860 ;;		None
 29861 ;; Auto vars:     Size  Location     Type
 29862 ;;		None
 29863 ;; Return value:  Size  Location     Type
 29864 ;;                  1    wreg      void 
 29865 ;; Registers used:
 29866 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 29867 ;; Tracked objects:
 29868 ;;		On entry : 0/0
 29869 ;;		On exit  : 0/0
 29870 ;;		Unchanged: 0/0
 29871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29873 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29875 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29876 ;;Total ram usage:        0 bytes
 29877 ;; Hardware stack levels used:    1
 29878 ;; Hardware stack levels required when called:   12
 29879 ;; This function calls:
 29880 ;;		_InitModemInterface
 29881 ;;		_ReceiveEvt
 29882 ;; This function is called by:
 29883 ;;		_Mdm_DrvMainFn
 29884 ;; This function uses a non-reentrant model
 29885 ;;
 29886                           
 29887                           	psect	text140
 29888  0046CE                     __ptext140:
 29889                           	opt stack 0
 29890  0046CE                     _MdmCntSm:
 29891                           	opt stack 15
 29892                           
 29893                           ;mdm_drv.c: 201: static MdmCntStateType MdmCntState = InitModemInt;
 29894                           ;mdm_drv.c: 202: static UINT16 Counter = 0;
 29895                           ;mdm_drv.c: 204: switch (MdmCntState)
 29896                           
 29897                           ;incstack = 0
 29898  0046CE  D045               	goto	l315
 29899  0046D0                     
 29900                           ;mdm_drv.c: 208: InitModemInterface();
 29901  0046D0  EC8F  F035         	call	_InitModemInterface	;wreg free
 29902                           
 29903                           ;mdm_drv.c: 210: MdmCntState = CheckRequest;
 29904  0046D4  0E01               	movlw	1
 29905  0046D6  6E2E               	movwf	MdmCntSm@MdmCntState,c
 29906                           
 29907                           ;mdm_drv.c: 211: break;
 29908  0046D8  0012               	return	
 29909  0046DA                     
 29910                           ;mdm_drv.c: 215: if (ReceiveEvt(&MdmOnOffPulseRequest))
 29911  0046DA  0EE0               	movlw	low _MdmOnOffPulseRequest
 29912  0046DC  0100               	movlb	0	; () banked
 29913  0046DE  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 29914  0046E0  0E00               	movlw	high _MdmOnOffPulseRequest
 29915  0046E2  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 29916  0046E4  ECE1  F032         	call	_ReceiveEvt	;wreg free
 29917  0046E8  0900               	iorlw	0
 29918  0046EA  B4D8               	btfsc	status,2,c
 29919  0046EC  D009               	goto	l319
 29920                           
 29921                           ;mdm_drv.c: 216: {
 29922                           ;mdm_drv.c: 218: MdmCntState = MdmOnOffPulse;
 29923  0046EE  0E02               	movlw	2
 29924  0046F0  6E2E               	movwf	MdmCntSm@MdmCntState,c
 29925                           
 29926                           ;mdm_drv.c: 220: PORTEbits.RE1 = ((UINT8)(1));
 29927  0046F2  8284               	bsf	3972,1,c	;volatile
 29928                           
 29929                           ;mdm_drv.c: 222: Counter = 0;
 29930  0046F4  0E00               	movlw	0
 29931  0046F6  0102               	movlb	2	; () banked
 29932  0046F8  6FDF               	movwf	(MdmCntSm@Counter+1)& (0+255),b
 29933  0046FA  0E00               	movlw	0
 29934  0046FC  6FDE               	movwf	MdmCntSm@Counter& (0+255),b
 29935                           
 29936                           ;mdm_drv.c: 223: }
 29937  0046FE  0012               	return	
 29938  004700                     l319:
 29939                           
 29940                           ;mdm_drv.c: 224: else if (ReceiveEvt(&MdmResetRequest))
 29941                           
 29942                           ; BSR set to: 2
 29943  004700  0E3D               	movlw	low _MdmResetRequest
 29944  004702  0100               	movlb	0	; () banked
 29945  004704  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 29946  004706  0E00               	movlw	high _MdmResetRequest
 29947  004708  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 29948  00470A  ECE1  F032         	call	_ReceiveEvt	;wreg free
 29949  00470E  0900               	iorlw	0
 29950  004710  B4D8               	btfsc	status,2,c
 29951  004712  0012               	return	
 29952                           
 29953                           ;mdm_drv.c: 225: {
 29954                           ;mdm_drv.c: 227: MdmCntState = MdmResetPulse;
 29955  004714  0E03               	movlw	3
 29956  004716  6E2E               	movwf	MdmCntSm@MdmCntState,c
 29957                           
 29958                           ;mdm_drv.c: 229: PORTEbits.RE0 = ((UINT8)(1));
 29959  004718  8084               	bsf	3972,0,c	;volatile
 29960                           
 29961                           ;mdm_drv.c: 231: Counter = 0;
 29962  00471A  0E00               	movlw	0
 29963  00471C  0102               	movlb	2	; () banked
 29964  00471E  6FDF               	movwf	(MdmCntSm@Counter+1)& (0+255),b
 29965  004720  0E00               	movlw	0
 29966  004722  6FDE               	movwf	MdmCntSm@Counter& (0+255),b
 29967                           
 29968                           ; BSR set to: 2
 29969                           ;mdm_drv.c: 236: }
 29970                           ;mdm_drv.c: 237: break;
 29971                           
 29972                           ; BSR set to: 2
 29973                           
 29974                           ;mdm_drv.c: 233: else
 29975                           ;mdm_drv.c: 234: {
 29976                           
 29977                           ; BSR set to: 2
 29978                           
 29979                           ;mdm_drv.c: 232: }
 29980  004724  0012               	return	
 29981  004726                     
 29982                           ;mdm_drv.c: 241: Counter++;
 29983                           
 29984                           ; BSR set to: 2
 29985  004726  0102               	movlb	2	; () banked
 29986  004728  4BDE               	infsnz	MdmCntSm@Counter& (0+255),f,b
 29987  00472A  2BDF               	incf	(MdmCntSm@Counter+1)& (0+255),f,b
 29988                           
 29989                           ; BSR set to: 2
 29990                           ;mdm_drv.c: 243: if (Counter >= (((UINT16)(1500))/((UINT16)(10))))
 29991  00472C  51DF               	movf	(MdmCntSm@Counter+1)& (0+255),w,b
 29992  00472E  E104               	bnz	u14760
 29993  004730  0E96               	movlw	150
 29994  004732  5DDE               	subwf	MdmCntSm@Counter& (0+255),w,b
 29995  004734  A0D8               	btfss	status,0,c
 29996  004736  0012               	return	
 29997  004738                     u14760:
 29998                           
 29999                           ; BSR set to: 2
 30000                           ;mdm_drv.c: 244: {
 30001                           ;mdm_drv.c: 246: PORTEbits.RE1 = ((UINT8)(0));
 30002  004738  9284               	bcf	3972,1,c	;volatile
 30003                           
 30004                           ; BSR set to: 2
 30005                           ;mdm_drv.c: 248: MdmCntState = CheckRequest;
 30006  00473A  0E01               	movlw	1
 30007  00473C  6E2E               	movwf	MdmCntSm@MdmCntState,c
 30008                           
 30009                           ; BSR set to: 2
 30010                           ;mdm_drv.c: 249: }
 30011                           ;mdm_drv.c: 250: break;
 30012  00473E  0012               	return	
 30013  004740                     
 30014                           ;mdm_drv.c: 254: Counter++;
 30015                           
 30016                           ; BSR set to: 2
 30017  004740  0102               	movlb	2	; () banked
 30018  004742  4BDE               	infsnz	MdmCntSm@Counter& (0+255),f,b
 30019  004744  2BDF               	incf	(MdmCntSm@Counter+1)& (0+255),f,b
 30020                           
 30021                           ; BSR set to: 2
 30022                           ;mdm_drv.c: 256: if (Counter >= (((UINT16)(100))/((UINT16)(10))))
 30023  004746  51DF               	movf	(MdmCntSm@Counter+1)& (0+255),w,b
 30024  004748  E104               	bnz	u14770
 30025  00474A  0E0A               	movlw	10
 30026  00474C  5DDE               	subwf	MdmCntSm@Counter& (0+255),w,b
 30027  00474E  A0D8               	btfss	status,0,c
 30028  004750  0012               	return	
 30029  004752                     u14770:
 30030                           
 30031                           ; BSR set to: 2
 30032                           ;mdm_drv.c: 257: {
 30033                           ;mdm_drv.c: 259: PORTEbits.RE0 = ((UINT8)(0));
 30034  004752  9084               	bcf	3972,0,c	;volatile
 30035                           
 30036                           ; BSR set to: 2
 30037                           ;mdm_drv.c: 261: MdmCntState = CheckRequest;
 30038  004754  0E01               	movlw	1
 30039  004756  6E2E               	movwf	MdmCntSm@MdmCntState,c
 30040                           
 30041                           ; BSR set to: 2
 30042                           ;mdm_drv.c: 267: }
 30043                           
 30044                           ; BSR set to: 2
 30045                           ;mdm_drv.c: 266: break;
 30046                           
 30047                           ;mdm_drv.c: 265: default:
 30048                           
 30049                           ; BSR set to: 2
 30050                           ;mdm_drv.c: 262: }
 30051                           ;mdm_drv.c: 263: break;
 30052  004758  0012               	return	
 30053  00475A                     l315:
 30054                           
 30055                           ; BSR set to: 2
 30056  00475A  502E               	movf	MdmCntSm@MdmCntState,w,c
 30057                           
 30058                           ; Switch size 1, requested type "space"
 30059                           ; Number of cases is 4, Range of values is 0 to 3
 30060                           ; switch strategies available:
 30061                           ; Name         Instructions Cycles
 30062                           ; simple_byte           13     7 (average)
 30063                           ;	Chosen strategy is simple_byte
 30064  00475C  0A00               	xorlw	0	; case 0
 30065  00475E  B4D8               	btfsc	status,2,c
 30066  004760  D7B7               	goto	l316
 30067  004762  0A01               	xorlw	1	; case 1
 30068  004764  B4D8               	btfsc	status,2,c
 30069  004766  D7B9               	goto	l318
 30070  004768  0A03               	xorlw	3	; case 2
 30071  00476A  B4D8               	btfsc	status,2,c
 30072  00476C  D7DC               	goto	l323
 30073  00476E  0A01               	xorlw	1	; case 3
 30074  004770  A4D8               	btfss	status,2,c
 30075  004772  0012               	return	
 30076  004774  D7E5               	goto	l325
 30077  004776                     __end_of_MdmCntSm:
 30078                           	opt stack 0
 30079                           tosu	equ	0xFFF
 30080                           tosh	equ	0xFFE
 30081                           tosl	equ	0xFFD
 30082                           pclath	equ	0xFFA
 30083                           tblptru	equ	0xFF8
 30084                           tblptrh	equ	0xFF7
 30085                           tblptrl	equ	0xFF6
 30086                           tablat	equ	0xFF5
 30087                           prodh	equ	0xFF4
 30088                           prodl	equ	0xFF3
 30089                           intcon	equ	0xFF2
 30090                           intcon2	equ	0xFF1
 30091                           intcon3	equ	0xFF0
 30092                           indf0	equ	0xFEF
 30093                           postinc0	equ	0xFEE
 30094                           plusw0	equ	0xFEB
 30095                           fsr0h	equ	0xFEA
 30096                           fsr0l	equ	0xFE9
 30097                           wreg	equ	0xFE8
 30098                           indf1	equ	0xFE7
 30099                           postinc1	equ	0xFE6
 30100                           postdec1	equ	0xFE5
 30101                           plusw1	equ	0xFE3
 30102                           fsr1h	equ	0xFE2
 30103                           fsr1l	equ	0xFE1
 30104                           indf2	equ	0xFDF
 30105                           postinc2	equ	0xFDE
 30106                           postdec2	equ	0xFDD
 30107                           plusw2	equ	0xFDB
 30108                           fsr2h	equ	0xFDA
 30109                           fsr2l	equ	0xFD9
 30110                           status	equ	0xFD8
 30111                           
 30112 ;; *************** function _InitModemInterface *****************
 30113 ;; Defined at:
 30114 ;;		line 102 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mdm_drv.c"
 30115 ;; Parameters:    Size  Location     Type
 30116 ;;		None
 30117 ;; Auto vars:     Size  Location     Type
 30118 ;;		None
 30119 ;; Return value:  Size  Location     Type
 30120 ;;                  1    wreg      void 
 30121 ;; Registers used:
 30122 ;;		None
 30123 ;; Tracked objects:
 30124 ;;		On entry : 0/0
 30125 ;;		On exit  : 0/0
 30126 ;;		Unchanged: 0/0
 30127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30128 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30129 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30131 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30132 ;;Total ram usage:        0 bytes
 30133 ;; Hardware stack levels used:    1
 30134 ;; Hardware stack levels required when called:   11
 30135 ;; This function calls:
 30136 ;;		Nothing
 30137 ;; This function is called by:
 30138 ;;		_MdmCntSm
 30139 ;; This function uses a non-reentrant model
 30140 ;;
 30141                           
 30142                           	psect	text141
 30143  006B1E                     __ptext141:
 30144                           	opt stack 0
 30145  006B1E                     _InitModemInterface:
 30146                           	opt stack 15
 30147                           
 30148                           ;mdm_drv.c: 105: TRISEbits.TRISE0 = ((UINT8)(0));
 30149                           
 30150                           ;incstack = 0
 30151  006B1E  9096               	bcf	3990,0,c	;volatile
 30152                           
 30153                           ;mdm_drv.c: 106: TRISEbits.TRISE1 = ((UINT8)(0));
 30154  006B20  9296               	bcf	3990,1,c	;volatile
 30155                           
 30156                           ;mdm_drv.c: 107: TRISEbits.TRISE2 = ((UINT8)(1));
 30157  006B22  8496               	bsf	3990,2,c	;volatile
 30158  006B24  0012               	return		;funcret
 30159  006B26                     __end_of_InitModemInterface:
 30160                           	opt stack 0
 30161                           tosu	equ	0xFFF
 30162                           tosh	equ	0xFFE
 30163                           tosl	equ	0xFFD
 30164                           pclath	equ	0xFFA
 30165                           tblptru	equ	0xFF8
 30166                           tblptrh	equ	0xFF7
 30167                           tblptrl	equ	0xFF6
 30168                           tablat	equ	0xFF5
 30169                           prodh	equ	0xFF4
 30170                           prodl	equ	0xFF3
 30171                           intcon	equ	0xFF2
 30172                           intcon2	equ	0xFF1
 30173                           intcon3	equ	0xFF0
 30174                           indf0	equ	0xFEF
 30175                           postinc0	equ	0xFEE
 30176                           plusw0	equ	0xFEB
 30177                           fsr0h	equ	0xFEA
 30178                           fsr0l	equ	0xFE9
 30179                           wreg	equ	0xFE8
 30180                           indf1	equ	0xFE7
 30181                           postinc1	equ	0xFE6
 30182                           postdec1	equ	0xFE5
 30183                           plusw1	equ	0xFE3
 30184                           fsr1h	equ	0xFE2
 30185                           fsr1l	equ	0xFE1
 30186                           indf2	equ	0xFDF
 30187                           postinc2	equ	0xFDE
 30188                           postdec2	equ	0xFDD
 30189                           plusw2	equ	0xFDB
 30190                           fsr2h	equ	0xFDA
 30191                           fsr2l	equ	0xFD9
 30192                           status	equ	0xFD8
 30193                           
 30194 ;; *************** function _InitGprsNetwork *****************
 30195 ;; Defined at:
 30196 ;;		line 124 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs_http.c"
 30197 ;; Parameters:    Size  Location     Type
 30198 ;;  Apn             2   59[BANK0 ] PTR unsigned char 
 30199 ;;		 -> NULL(0), 
 30200 ;;  ApnLen          1   61[BANK0 ] unsigned char 
 30201 ;; Auto vars:     Size  Location     Type
 30202 ;;  UartMessage    50    0[BANK1 ] unsigned char [50]
 30203 ;;  Index           1   50[BANK1 ] unsigned char 
 30204 ;; Return value:  Size  Location     Type
 30205 ;;                  1    wreg      enum E8925
 30206 ;; Registers used:
 30207 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 30208 ;; Tracked objects:
 30209 ;;		On entry : 0/0
 30210 ;;		On exit  : 0/0
 30211 ;;		Unchanged: 0/0
 30212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30213 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30214 ;;      Locals:         0       0      51       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30215 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30216 ;;      Totals:         0       5      51       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30217 ;;Total ram usage:       56 bytes
 30218 ;; Hardware stack levels used:    1
 30219 ;; Hardware stack levels required when called:   14
 30220 ;; This function calls:
 30221 ;;		_ClearBuffer
 30222 ;;		_OsTmr_GetTimerStatus
 30223 ;;		_OsTmr_StartTimer
 30224 ;;		_ReceiveEvt
 30225 ;;		_StringCopy
 30226 ;;		_Uart_WriteConstString
 30227 ;;		_Uart_WriteString
 30228 ;; This function is called by:
 30229 ;;		_MdmHttp_MainTask
 30230 ;; This function uses a non-reentrant model
 30231 ;;
 30232                           
 30233                           	psect	text142
 30234  000DC8                     __ptext142:
 30235                           	opt stack 0
 30236  000DC8                     _InitGprsNetwork:
 30237                           	opt stack 13
 30238                           
 30239                           ;mdm_gsm_gprs_http.c: 126: static GprsNetInitType GprsNetInitState = GprsIn_Idle;
 30240                           ;mdm_gsm_gprs_http.c: 127: static GprsNetInitType GprsNetInitNextState = GprsIn_Idle;
 30241                           ;mdm_gsm_gprs_http.c: 128: static GprsOutStsType GprsInitSts = GprsSts_InProg;
 30242                           ;mdm_gsm_gprs_http.c: 129: UINT8 UartMessage[50];
 30243                           ;mdm_gsm_gprs_http.c: 130: UINT8 Index = 0;
 30244                           
 30245                           ;incstack = 0
 30246  000DC8  0E00               	movlw	0
 30247  000DCA  0101               	movlb	1	; () banked
 30248  000DCC  6F32               	movwf	InitGprsNetwork@Index& (0+255),b
 30249                           
 30250                           ;mdm_gsm_gprs_http.c: 132: switch(GprsNetInitState)
 30251  000DCE  D154               	goto	l1219
 30252  000DD0                     
 30253                           ; BSR set to: 1
 30254                           ;mdm_gsm_gprs_http.c: 136: if (ReceiveEvt(&InitNetwork))
 30255                           
 30256                           ; BSR set to: 1
 30257  000DD0  0ED9               	movlw	low _InitNetwork
 30258  000DD2  0100               	movlb	0	; () banked
 30259  000DD4  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 30260  000DD6  0E00               	movlw	high _InitNetwork
 30261  000DD8  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 30262  000DDA  ECE1  F032         	call	_ReceiveEvt	;wreg free
 30263  000DDE  0900               	iorlw	0
 30264  000DE0  B4D8               	btfsc	status,2,c
 30265  000DE2  D166               	goto	l1222
 30266                           
 30267                           ;mdm_gsm_gprs_http.c: 137: {
 30268                           ;mdm_gsm_gprs_http.c: 139: GprsNetInitState = GprsIn_SetConType;
 30269  000DE4  0E01               	movlw	1
 30270  000DE6  D141               	goto	L103
 30271  000DE8                     
 30272                           ; BSR set to: 1
 30273                           ;mdm_gsm_gprs_http.c: 144: Uart_WriteConstString(1, "AT+SAPBR=3,1,\"Contype\",\"GPRS\"\r
      +                          ");
 30274                           
 30275                           ; BSR set to: 1
 30276  000DE8  0E89               	movlw	low STR_8
 30277  000DEA  0100               	movlb	0	; () banked
 30278  000DEC  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 30279  000DEE  0EFE               	movlw	high STR_8
 30280  000DF0  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 30281  000DF2  0E01               	movlw	1
 30282  000DF4  EC98  F030         	call	_Uart_WriteConstString
 30283                           
 30284                           ;mdm_gsm_gprs_http.c: 146: GprsNetInitState = GprsIn_WaitMdmResp;
 30285  000DF8  0E07               	movlw	7
 30286  000DFA  0101               	movlb	1	; () banked
 30287  000DFC  6FE8               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 30288                           
 30289                           ; BSR set to: 1
 30290                           ;mdm_gsm_gprs_http.c: 147: GprsNetInitNextState = GprsIn_SetApn;
 30291  000DFE  0E02               	movlw	2
 30292  000E00  6E2A               	movwf	InitGprsNetwork@GprsNetInitNextState,c
 30293                           
 30294                           ; BSR set to: 1
 30295                           ;mdm_gsm_gprs_http.c: 149: OsTmr_StartTimer(&ConnTimeout,20000u);
 30296  000E02  0EF5               	movlw	low _ConnTimeout
 30297  000E04  0100               	movlb	0	; () banked
 30298  000E06  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 30299  000E08  0E02               	movlw	high _ConnTimeout
 30300  000E0A  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 30301  000E0C  0E20               	movlw	32
 30302  000E0E  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 30303  000E10  0E4E               	movlw	78
 30304  000E12  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 30305  000E14  0E00               	movlw	0
 30306  000E16  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 30307  000E18  0E00               	movlw	0
 30308  000E1A  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 30309  000E1C  EC34  F02C         	call	_OsTmr_StartTimer	;wreg free
 30310  000E20  D0C7               	goto	l15654
 30311  000E22                     
 30312                           ; BSR set to: 1
 30313                           ;mdm_gsm_gprs_http.c: 156: ClearBuffer(UartMessage, sizeof(UartMessage));
 30314                           
 30315                           ; BSR set to: 1
 30316  000E22  0E00               	movlw	low InitGprsNetwork@UartMessage
 30317  000E24  0100               	movlb	0	; () banked
 30318  000E26  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 30319  000E28  0E01               	movlw	high InitGprsNetwork@UartMessage
 30320  000E2A  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 30321  000E2C  0E00               	movlw	0
 30322  000E2E  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 30323  000E30  0E32               	movlw	50
 30324  000E32  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 30325  000E34  EC03  F032         	call	_ClearBuffer	;wreg free
 30326                           
 30327                           ;mdm_gsm_gprs_http.c: 158: StringCopy((void*)("AT+SAPBR=3,1,\"APN\",\""),UartMessage,20)
      +                          ;
 30328  000E38  0EBD               	movlw	low STR_9
 30329  000E3A  0100               	movlb	0	; () banked
 30330  000E3C  6F85               	movwf	StringCopy@SourceStr& (0+255),b
 30331  000E3E  0EFE               	movlw	high STR_9
 30332  000E40  6F86               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 30333  000E42  0E00               	movlw	low InitGprsNetwork@UartMessage
 30334  000E44  6F87               	movwf	StringCopy@DestStr& (0+255),b
 30335  000E46  0E01               	movlw	high InitGprsNetwork@UartMessage
 30336  000E48  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 30337  000E4A  0E00               	movlw	0
 30338  000E4C  6F8A               	movwf	(StringCopy@Len+1)& (0+255),b
 30339  000E4E  0E14               	movlw	20
 30340  000E50  6F89               	movwf	StringCopy@Len& (0+255),b
 30341  000E52  ECD4  F02B         	call	_StringCopy	;wreg free
 30342                           
 30343                           ;mdm_gsm_gprs_http.c: 160: for (Index = 0; Index < ApnLen; Index++)
 30344  000E56  0E00               	movlw	0
 30345  000E58  0101               	movlb	1	; () banked
 30346  000E5A  6F32               	movwf	InitGprsNetwork@Index& (0+255),b
 30347  000E5C  D01C               	goto	l1225
 30348  000E5E                     
 30349                           ; BSR set to: 1
 30350                           ;mdm_gsm_gprs_http.c: 161: {
 30351                           ;mdm_gsm_gprs_http.c: 162: UartMessage[Index + 20] = *(Apn + Index);
 30352                           
 30353                           ; BSR set to: 1
 30354  000E5E  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 30355  000E60  0D01               	mullw	1
 30356  000E62  50F3               	movf	prodl,w,c
 30357  000E64  0100               	movlb	0	; () banked
 30358  000E66  259B               	addwf	InitGprsNetwork@Apn& (0+255),w,b
 30359  000E68  6ED9               	movwf	fsr2l,c
 30360  000E6A  50F4               	movf	prodh,w,c
 30361  000E6C  219C               	addwfc	(InitGprsNetwork@Apn+1)& (0+255),w,b
 30362  000E6E  6EDA               	movwf	fsr2h,c
 30363  000E70  0101               	movlb	1	; () banked
 30364  000E72  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 30365  000E74  0100               	movlb	0	; () banked
 30366  000E76  6F9E               	movwf	??_InitGprsNetwork& (0+255),b
 30367  000E78  6B9F               	clrf	(??_InitGprsNetwork+1)& (0+255),b
 30368  000E7A  0E14               	movlw	20
 30369  000E7C  279E               	addwf	??_InitGprsNetwork& (0+255),f,b
 30370  000E7E  0E00               	movlw	0
 30371  000E80  239F               	addwfc	(??_InitGprsNetwork+1)& (0+255),f,b
 30372  000E82  0E00               	movlw	low InitGprsNetwork@UartMessage
 30373  000E84  259E               	addwf	??_InitGprsNetwork& (0+255),w,b
 30374  000E86  6EE1               	movwf	fsr1l,c
 30375  000E88  0E01               	movlw	high InitGprsNetwork@UartMessage
 30376  000E8A  219F               	addwfc	(??_InitGprsNetwork+1)& (0+255),w,b
 30377  000E8C  6EE2               	movwf	fsr1h,c
 30378  000E8E  CFDF FFE7          	movff	indf2,indf1
 30379                           
 30380                           ; BSR set to: 0
 30381  000E92  0101               	movlb	1	; () banked
 30382  000E94  2B32               	incf	InitGprsNetwork@Index& (0+255),f,b
 30383  000E96                     l1225:
 30384                           
 30385                           ; BSR set to: 1
 30386                           
 30387                           ; BSR set to: 1
 30388  000E96  0100               	movlb	0	; () banked
 30389  000E98  519D               	movf	InitGprsNetwork@ApnLen& (0+255),w,b
 30390  000E9A  0101               	movlb	1	; () banked
 30391  000E9C  5D32               	subwf	InitGprsNetwork@Index& (0+255),w,b
 30392  000E9E  A0D8               	btfss	status,0,c
 30393  000EA0  D7DE               	goto	l1226
 30394                           
 30395                           ; BSR set to: 1
 30396                           ;mdm_gsm_gprs_http.c: 163: }
 30397                           ;mdm_gsm_gprs_http.c: 165: UartMessage[Index + 20] = '"';
 30398                           
 30399                           ; BSR set to: 1
 30400  000EA2  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 30401  000EA4  0100               	movlb	0	; () banked
 30402  000EA6  6F9E               	movwf	??_InitGprsNetwork& (0+255),b
 30403  000EA8  6B9F               	clrf	(??_InitGprsNetwork+1)& (0+255),b
 30404  000EAA  0E14               	movlw	20
 30405  000EAC  279E               	addwf	??_InitGprsNetwork& (0+255),f,b
 30406  000EAE  0E00               	movlw	0
 30407  000EB0  239F               	addwfc	(??_InitGprsNetwork+1)& (0+255),f,b
 30408  000EB2  0E00               	movlw	low InitGprsNetwork@UartMessage
 30409  000EB4  259E               	addwf	??_InitGprsNetwork& (0+255),w,b
 30410  000EB6  6ED9               	movwf	fsr2l,c
 30411  000EB8  0E01               	movlw	high InitGprsNetwork@UartMessage
 30412  000EBA  219F               	addwfc	(??_InitGprsNetwork+1)& (0+255),w,b
 30413  000EBC  6EDA               	movwf	fsr2h,c
 30414  000EBE  0E22               	movlw	34
 30415  000EC0  6EDF               	movwf	indf2,c
 30416                           
 30417                           ;mdm_gsm_gprs_http.c: 166: UartMessage[Index + 21] = '\r';
 30418  000EC2  0101               	movlb	1	; () banked
 30419  000EC4  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 30420  000EC6  0100               	movlb	0	; () banked
 30421  000EC8  6F9E               	movwf	??_InitGprsNetwork& (0+255),b
 30422  000ECA  6B9F               	clrf	(??_InitGprsNetwork+1)& (0+255),b
 30423  000ECC  0E15               	movlw	21
 30424  000ECE  279E               	addwf	??_InitGprsNetwork& (0+255),f,b
 30425  000ED0  0E00               	movlw	0
 30426  000ED2  239F               	addwfc	(??_InitGprsNetwork+1)& (0+255),f,b
 30427  000ED4  0E00               	movlw	low InitGprsNetwork@UartMessage
 30428  000ED6  259E               	addwf	??_InitGprsNetwork& (0+255),w,b
 30429  000ED8  6ED9               	movwf	fsr2l,c
 30430  000EDA  0E01               	movlw	high InitGprsNetwork@UartMessage
 30431  000EDC  219F               	addwfc	(??_InitGprsNetwork+1)& (0+255),w,b
 30432  000EDE  6EDA               	movwf	fsr2h,c
 30433  000EE0  0E0D               	movlw	13
 30434  000EE2  6EDF               	movwf	indf2,c
 30435                           
 30436                           ;mdm_gsm_gprs_http.c: 167: UartMessage[Index + 22] = (0);
 30437  000EE4  0101               	movlb	1	; () banked
 30438  000EE6  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 30439  000EE8  0100               	movlb	0	; () banked
 30440  000EEA  6F9E               	movwf	??_InitGprsNetwork& (0+255),b
 30441  000EEC  6B9F               	clrf	(??_InitGprsNetwork+1)& (0+255),b
 30442  000EEE  0E16               	movlw	22
 30443  000EF0  279E               	addwf	??_InitGprsNetwork& (0+255),f,b
 30444  000EF2  0E00               	movlw	0
 30445  000EF4  239F               	addwfc	(??_InitGprsNetwork+1)& (0+255),f,b
 30446  000EF6  0E00               	movlw	low InitGprsNetwork@UartMessage
 30447  000EF8  259E               	addwf	??_InitGprsNetwork& (0+255),w,b
 30448  000EFA  6ED9               	movwf	fsr2l,c
 30449  000EFC  0E01               	movlw	high InitGprsNetwork@UartMessage
 30450  000EFE  219F               	addwfc	(??_InitGprsNetwork+1)& (0+255),w,b
 30451  000F00  6EDA               	movwf	fsr2h,c
 30452  000F02  0E00               	movlw	0
 30453  000F04  6EDF               	movwf	indf2,c
 30454                           
 30455                           ; BSR set to: 0
 30456                           ;mdm_gsm_gprs_http.c: 169: Uart_WriteString(1, UartMessage);
 30457  000F06  0E00               	movlw	low InitGprsNetwork@UartMessage
 30458  000F08  6F80               	movwf	Uart_WriteString@StringToWrite& (0+255),b
 30459  000F0A  0E01               	movlw	high InitGprsNetwork@UartMessage
 30460  000F0C  6F81               	movwf	(Uart_WriteString@StringToWrite+1)& (0+255),b
 30461  000F0E  0E01               	movlw	1
 30462  000F10  EC38  F031         	call	_Uart_WriteString
 30463                           
 30464                           ;mdm_gsm_gprs_http.c: 171: GprsNetInitState = GprsIn_WaitMdmResp;
 30465  000F14  0E07               	movlw	7
 30466  000F16  0101               	movlb	1	; () banked
 30467  000F18  6FE8               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 30468                           
 30469                           ; BSR set to: 1
 30470                           ;mdm_gsm_gprs_http.c: 172: GprsNetInitNextState = GprsIn_EnGprs;
 30471  000F1A  0E03               	movlw	3
 30472  000F1C  6E2A               	movwf	InitGprsNetwork@GprsNetInitNextState,c
 30473                           
 30474                           ; BSR set to: 1
 30475                           ;mdm_gsm_gprs_http.c: 174: OsTmr_StartTimer(&ConnTimeout,20000u);
 30476  000F1E  0EF5               	movlw	low _ConnTimeout
 30477  000F20  0100               	movlb	0	; () banked
 30478  000F22  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 30479  000F24  0E02               	movlw	high _ConnTimeout
 30480  000F26  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 30481  000F28  0E20               	movlw	32
 30482  000F2A  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 30483  000F2C  0E4E               	movlw	78
 30484  000F2E  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 30485  000F30  0E00               	movlw	0
 30486  000F32  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 30487  000F34  0E00               	movlw	0
 30488  000F36  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 30489  000F38  EC34  F02C         	call	_OsTmr_StartTimer	;wreg free
 30490  000F3C  D039               	goto	l15654
 30491  000F3E                     
 30492                           ; BSR set to: 1
 30493                           ;mdm_gsm_gprs_http.c: 181: Uart_WriteConstString(1, "AT+SAPBR=1,1\r");
 30494                           
 30495                           ; BSR set to: 1
 30496  000F3E  0E4B               	movlw	low STR_10
 30497  000F40  0100               	movlb	0	; () banked
 30498  000F42  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 30499  000F44  0EFF               	movlw	high STR_10
 30500  000F46  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 30501  000F48  0E01               	movlw	1
 30502  000F4A  EC98  F030         	call	_Uart_WriteConstString
 30503                           
 30504                           ;mdm_gsm_gprs_http.c: 183: GprsNetInitState = GprsIn_WaitMdmResp;
 30505  000F4E  0E07               	movlw	7
 30506  000F50  0101               	movlb	1	; () banked
 30507  000F52  6FE8               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 30508                           
 30509                           ; BSR set to: 1
 30510                           ;mdm_gsm_gprs_http.c: 184: GprsNetInitNextState = GprsIn_Done;
 30511  000F54  0E05               	movlw	5
 30512  000F56  6E2A               	movwf	InitGprsNetwork@GprsNetInitNextState,c
 30513                           
 30514                           ; BSR set to: 1
 30515                           ;mdm_gsm_gprs_http.c: 186: OsTmr_StartTimer(&ConnTimeout,20000u);
 30516  000F58  0EF5               	movlw	low _ConnTimeout
 30517  000F5A  0100               	movlb	0	; () banked
 30518  000F5C  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 30519  000F5E  0E02               	movlw	high _ConnTimeout
 30520  000F60  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 30521  000F62  0E20               	movlw	32
 30522  000F64  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 30523  000F66  0E4E               	movlw	78
 30524  000F68  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 30525  000F6A  0E00               	movlw	0
 30526  000F6C  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 30527  000F6E  0E00               	movlw	0
 30528  000F70  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 30529  000F72  EC34  F02C         	call	_OsTmr_StartTimer	;wreg free
 30530  000F76  D01C               	goto	l15654
 30531  000F78                     
 30532                           ; BSR set to: 1
 30533                           ;mdm_gsm_gprs_http.c: 193: Uart_WriteConstString(1, "AT+SAPBR=2,1\r");
 30534                           
 30535                           ; BSR set to: 1
 30536  000F78  0E59               	movlw	low STR_11
 30537  000F7A  0100               	movlb	0	; () banked
 30538  000F7C  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 30539  000F7E  0EFF               	movlw	high STR_11
 30540  000F80  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 30541  000F82  0E01               	movlw	1
 30542  000F84  EC98  F030         	call	_Uart_WriteConstString
 30543                           
 30544                           ;mdm_gsm_gprs_http.c: 195: GprsNetInitState = GprsIn_WaitGetIp;
 30545  000F88  0E08               	movlw	8
 30546  000F8A  0101               	movlb	1	; () banked
 30547  000F8C  6FE8               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 30548                           
 30549                           ; BSR set to: 1
 30550                           ;mdm_gsm_gprs_http.c: 196: GprsNetInitNextState = GprsIn_Done;
 30551  000F8E  0E05               	movlw	5
 30552  000F90  6E2A               	movwf	InitGprsNetwork@GprsNetInitNextState,c
 30553                           
 30554                           ; BSR set to: 1
 30555                           ;mdm_gsm_gprs_http.c: 198: OsTmr_StartTimer(&ConnTimeout,20000u);
 30556  000F92  0EF5               	movlw	low _ConnTimeout
 30557  000F94  0100               	movlb	0	; () banked
 30558  000F96  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 30559  000F98  0E02               	movlw	high _ConnTimeout
 30560  000F9A  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 30561  000F9C  0E20               	movlw	32
 30562  000F9E  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 30563  000FA0  0E4E               	movlw	78
 30564  000FA2  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 30565  000FA4  0E00               	movlw	0
 30566  000FA6  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 30567  000FA8  0E00               	movlw	0
 30568  000FAA  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 30569  000FAC  EC34  F02C         	call	_OsTmr_StartTimer	;wreg free
 30570  000FB0                     l15654:
 30571                           
 30572                           ;mdm_gsm_gprs_http.c: 200: GprsInitSts = GprsSts_InProg;
 30573  000FB0  0E01               	movlw	1
 30574  000FB2  0101               	movlb	1	; () banked
 30575  000FB4  6FFF               	movwf	InitGprsNetwork@GprsInitSts& (0+255),b
 30576                           
 30577                           ;mdm_gsm_gprs_http.c: 201: break;
 30578  000FB6  D07C               	goto	l1222
 30579  000FB8                     
 30580                           ; BSR set to: 1
 30581                           ;mdm_gsm_gprs_http.c: 205: GprsInitSts = GprsSts_Completed;
 30582                           
 30583                           ; BSR set to: 1
 30584  000FB8  0E02               	movlw	2
 30585  000FBA  D05A               	goto	L102
 30586  000FBC                     
 30587                           ; BSR set to: 1
 30588                           ;mdm_gsm_gprs_http.c: 211: if (ReceiveEvt(&NewStringReceived))
 30589                           
 30590                           ; BSR set to: 1
 30591  000FBC  0E3C               	movlw	low _NewStringReceived
 30592  000FBE  0100               	movlb	0	; () banked
 30593  000FC0  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 30594  000FC2  0E00               	movlw	high _NewStringReceived
 30595  000FC4  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 30596  000FC6  ECE1  F032         	call	_ReceiveEvt	;wreg free
 30597  000FCA  0900               	iorlw	0
 30598  000FCC  B4D8               	btfsc	status,2,c
 30599  000FCE  D018               	goto	l1232
 30600                           
 30601                           ;mdm_gsm_gprs_http.c: 212: {
 30602                           ;mdm_gsm_gprs_http.c: 214: if ((RxBuffer[0] == 'O') && (RxBuffer[1] == 'K'))
 30603  000FD0  CC58  FFE8         	movff	_RxBuffer,wreg
 30604  000FD4  0A4F               	xorlw	79
 30605  000FD6  A4D8               	btfss	status,2,c
 30606  000FD8  D06B               	goto	l1222
 30607  000FDA  CC59  FFE8         	movff	_RxBuffer+1,wreg
 30608  000FDE  0A4B               	xorlw	75
 30609  000FE0  A4D8               	btfss	status,2,c
 30610  000FE2  D066               	goto	l1222
 30611                           
 30612                           ;mdm_gsm_gprs_http.c: 215: {
 30613                           ;mdm_gsm_gprs_http.c: 217: GprsNetInitState = GprsNetInitNextState;
 30614  000FE4  C02A  F1E8         	movff	InitGprsNetwork@GprsNetInitNextState,InitGprsNetwork@GprsNetInitState
 30615                           
 30616                           ;mdm_gsm_gprs_http.c: 219: ClearBuffer(RxBuffer,((UINT16)(400)));
 30617  000FE8  0E58               	movlw	low _RxBuffer
 30618  000FEA  0100               	movlb	0	; () banked
 30619  000FEC  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 30620  000FEE  0E0C               	movlw	high _RxBuffer
 30621  000FF0  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 30622  000FF2  0E01               	movlw	1
 30623  000FF4  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 30624  000FF6  0E90               	movlw	144
 30625  000FF8  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 30626  000FFA  EC03  F032         	call	_ClearBuffer	;wreg free
 30627                           
 30628                           ;mdm_gsm_gprs_http.c: 220: }
 30629                           ;mdm_gsm_gprs_http.c: 221: }
 30630  000FFE  D058               	goto	l1222
 30631  001000                     l1232:
 30632                           
 30633                           ;mdm_gsm_gprs_http.c: 222: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 30634  001000  0EF5               	movlw	low _ConnTimeout
 30635  001002  0100               	movlb	0	; () banked
 30636  001004  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 30637  001006  0E02               	movlw	high _ConnTimeout
 30638  001008  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 30639  00100A  ECE9  F027         	call	_OsTmr_GetTimerStatus	;wreg free
 30640  00100E  D029               	goto	L67
 30641  001010                     
 30642                           ; BSR set to: 1
 30643                           ;mdm_gsm_gprs_http.c: 231: if (ReceiveEvt(&NewStringReceived))
 30644                           
 30645                           ; BSR set to: 1
 30646  001010  0E3C               	movlw	low _NewStringReceived
 30647  001012  0100               	movlb	0	; () banked
 30648  001014  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 30649  001016  0E00               	movlw	high _NewStringReceived
 30650  001018  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 30651  00101A  ECE1  F032         	call	_ReceiveEvt	;wreg free
 30652  00101E  0900               	iorlw	0
 30653  001020  B4D8               	btfsc	status,2,c
 30654  001022  D018               	goto	l1237
 30655                           
 30656                           ;mdm_gsm_gprs_http.c: 232: {
 30657                           ;mdm_gsm_gprs_http.c: 234: if ((RxBuffer[0] == '+') && (RxBuffer[1] == 'S'))
 30658  001024  CC58  FFE8         	movff	_RxBuffer,wreg
 30659  001028  0A2B               	xorlw	43
 30660  00102A  A4D8               	btfss	status,2,c
 30661  00102C  D041               	goto	l1222
 30662  00102E  CC59  FFE8         	movff	_RxBuffer+1,wreg
 30663  001032  0A53               	xorlw	83
 30664  001034  A4D8               	btfss	status,2,c
 30665  001036  D03C               	goto	l1222
 30666                           
 30667                           ;mdm_gsm_gprs_http.c: 235: {
 30668                           ;mdm_gsm_gprs_http.c: 237: GprsNetInitState = GprsNetInitNextState;
 30669  001038  C02A  F1E8         	movff	InitGprsNetwork@GprsNetInitNextState,InitGprsNetwork@GprsNetInitState
 30670                           
 30671                           ;mdm_gsm_gprs_http.c: 239: ClearBuffer(RxBuffer,((UINT16)(400)));
 30672  00103C  0E58               	movlw	low _RxBuffer
 30673  00103E  0100               	movlb	0	; () banked
 30674  001040  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 30675  001042  0E0C               	movlw	high _RxBuffer
 30676  001044  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 30677  001046  0E01               	movlw	1
 30678  001048  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 30679  00104A  0E90               	movlw	144
 30680  00104C  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 30681  00104E  EC03  F032         	call	_ClearBuffer	;wreg free
 30682                           
 30683                           ;mdm_gsm_gprs_http.c: 240: }
 30684                           ;mdm_gsm_gprs_http.c: 241: }
 30685  001052  D02E               	goto	l1222
 30686  001054                     l1237:
 30687                           
 30688                           ;mdm_gsm_gprs_http.c: 242: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 30689  001054  0EF5               	movlw	low _ConnTimeout
 30690  001056  0100               	movlb	0	; () banked
 30691  001058  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 30692  00105A  0E02               	movlw	high _ConnTimeout
 30693  00105C  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 30694  00105E  ECE9  F027         	call	_OsTmr_GetTimerStatus	;wreg free
 30695  001062                     L67:
 30696  001062  06E8               	decf	wreg,f,c
 30697  001064  A4D8               	btfss	status,2,c
 30698  001066  D024               	goto	l1222
 30699                           
 30700                           ;mdm_gsm_gprs_http.c: 243: {
 30701                           ;mdm_gsm_gprs_http.c: 245: GprsNetInitState = GprsIn_Fail;
 30702  001068  0E06               	movlw	6
 30703  00106A                     L103:
 30704  00106A  0101               	movlb	1	; () banked
 30705  00106C  D003               	goto	L66
 30706  00106E                     
 30707                           ; BSR set to: 1
 30708                           ;mdm_gsm_gprs_http.c: 251: GprsInitSts = GprsSts_Failed;
 30709                           
 30710                           ; BSR set to: 1
 30711  00106E  0E03               	movlw	3
 30712  001070                     L102:
 30713  001070  6FFF               	movwf	InitGprsNetwork@GprsInitSts& (0+255),b
 30714                           
 30715                           ;mdm_gsm_gprs_http.c: 252: GprsNetInitState = GprsIn_Idle;
 30716  001072  0E00               	movlw	0
 30717  001074                     L66:
 30718  001074  6FE8               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 30719                           
 30720                           ; BSR set to: 1
 30721                           ;mdm_gsm_gprs_http.c: 257: }
 30722                           
 30723                           ; BSR set to: 1
 30724                           ;mdm_gsm_gprs_http.c: 256: break;
 30725                           
 30726                           ;mdm_gsm_gprs_http.c: 255: default:
 30727                           
 30728                           ;mdm_gsm_gprs_http.c: 253: break;
 30729  001076  D01C               	goto	l1222
 30730  001078                     l1219:
 30731                           
 30732                           ; BSR set to: 1
 30733                           
 30734                           ; BSR set to: 1
 30735  001078  51E8               	movf	InitGprsNetwork@GprsNetInitState& (0+255),w,b
 30736                           
 30737                           ; Switch size 1, requested type "space"
 30738                           ; Number of cases is 9, Range of values is 0 to 8
 30739                           ; switch strategies available:
 30740                           ; Name         Instructions Cycles
 30741                           ; simple_byte           28    15 (average)
 30742                           ;	Chosen strategy is simple_byte
 30743  00107A  0A00               	xorlw	0	; case 0
 30744  00107C  B4D8               	btfsc	status,2,c
 30745  00107E  D6A8               	goto	l1220
 30746  001080  0A01               	xorlw	1	; case 1
 30747  001082  B4D8               	btfsc	status,2,c
 30748  001084  D6B1               	goto	l1223
 30749  001086  0A03               	xorlw	3	; case 2
 30750  001088  B4D8               	btfsc	status,2,c
 30751  00108A  D6CB               	goto	l1224
 30752  00108C  0A01               	xorlw	1	; case 3
 30753  00108E  B4D8               	btfsc	status,2,c
 30754  001090  D756               	goto	l1228
 30755  001092  0A07               	xorlw	7	; case 4
 30756  001094  B4D8               	btfsc	status,2,c
 30757  001096  D770               	goto	l1229
 30758  001098  0A01               	xorlw	1	; case 5
 30759  00109A  B4D8               	btfsc	status,2,c
 30760  00109C  D78D               	goto	l1230
 30761  00109E  0A03               	xorlw	3	; case 6
 30762  0010A0  B4D8               	btfsc	status,2,c
 30763  0010A2  D7E5               	goto	l1241
 30764  0010A4  0A01               	xorlw	1	; case 7
 30765  0010A6  B4D8               	btfsc	status,2,c
 30766  0010A8  D789               	goto	l1231
 30767  0010AA  0A0F               	xorlw	15	; case 8
 30768  0010AC  B4D8               	btfsc	status,2,c
 30769  0010AE  D7B0               	goto	l1236
 30770  0010B0                     l1222:
 30771                           
 30772                           ;mdm_gsm_gprs_http.c: 260: return GprsInitSts;
 30773                           
 30774                           ; BSR set to: 1
 30775  0010B0  0101               	movlb	1	; () banked
 30776  0010B2  51FF               	movf	InitGprsNetwork@GprsInitSts& (0+255),w,b
 30777  0010B4  0012               	return	
 30778  0010B6                     __end_of_InitGprsNetwork:
 30779                           	opt stack 0
 30780                           tosu	equ	0xFFF
 30781                           tosh	equ	0xFFE
 30782                           tosl	equ	0xFFD
 30783                           pclath	equ	0xFFA
 30784                           tblptru	equ	0xFF8
 30785                           tblptrh	equ	0xFF7
 30786                           tblptrl	equ	0xFF6
 30787                           tablat	equ	0xFF5
 30788                           prodh	equ	0xFF4
 30789                           prodl	equ	0xFF3
 30790                           intcon	equ	0xFF2
 30791                           intcon2	equ	0xFF1
 30792                           intcon3	equ	0xFF0
 30793                           indf0	equ	0xFEF
 30794                           postinc0	equ	0xFEE
 30795                           plusw0	equ	0xFEB
 30796                           fsr0h	equ	0xFEA
 30797                           fsr0l	equ	0xFE9
 30798                           wreg	equ	0xFE8
 30799                           indf1	equ	0xFE7
 30800                           postinc1	equ	0xFE6
 30801                           postdec1	equ	0xFE5
 30802                           plusw1	equ	0xFE3
 30803                           fsr1h	equ	0xFE2
 30804                           fsr1l	equ	0xFE1
 30805                           indf2	equ	0xFDF
 30806                           postinc2	equ	0xFDE
 30807                           postdec2	equ	0xFDD
 30808                           plusw2	equ	0xFDB
 30809                           fsr2h	equ	0xFDA
 30810                           fsr2l	equ	0xFD9
 30811                           status	equ	0xFD8
 30812                           
 30813 ;; *************** function _HttpGetMethod *****************
 30814 ;; Defined at:
 30815 ;;		line 271 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs_http.c"
 30816 ;; Parameters:    Size  Location     Type
 30817 ;;  GetData         2   59[BANK0 ] PTR struct _HttpGetDataT
 30818 ;;		 -> HttpGetDataLocal(5), 
 30819 ;; Auto vars:     Size  Location     Type
 30820 ;;  UartMessage   200    0[BANK1 ] unsigned char [200]
 30821 ;;  Index           1  200[BANK1 ] unsigned char 
 30822 ;; Return value:  Size  Location     Type
 30823 ;;                  1    wreg      enum E8925
 30824 ;; Registers used:
 30825 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 30826 ;; Tracked objects:
 30827 ;;		On entry : 0/0
 30828 ;;		On exit  : 0/0
 30829 ;;		Unchanged: 0/0
 30830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30831 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30832 ;;      Locals:         0       0     201       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30833 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30834 ;;      Totals:         0       6     201       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30835 ;;Total ram usage:      207 bytes
 30836 ;; Hardware stack levels used:    1
 30837 ;; Hardware stack levels required when called:   14
 30838 ;; This function calls:
 30839 ;;		_ClearBuffer
 30840 ;;		_OsTmr_GetTimerStatus
 30841 ;;		_OsTmr_StartTimer
 30842 ;;		_ReceiveEvt
 30843 ;;		_StringCopy
 30844 ;;		_Uart_WriteConstString
 30845 ;;		_Uart_WriteString
 30846 ;; This function is called by:
 30847 ;;		_MdmHttp_MainTask
 30848 ;; This function uses a non-reentrant model
 30849 ;;
 30850                           
 30851                           	psect	text143
 30852  0005EC                     __ptext143:
 30853                           	opt stack 0
 30854  0005EC                     _HttpGetMethod:
 30855                           	opt stack 13
 30856                           
 30857                           ;mdm_gsm_gprs_http.c: 273: static GetMethodType GetMethodState = GetM_Idle;
 30858                           ;mdm_gsm_gprs_http.c: 274: static GetMethodType GetMethodNextState = GetM_Idle;
 30859                           ;mdm_gsm_gprs_http.c: 275: static GetMethodStsType GetMOutSts = GetMOut_Idle;
 30860                           ;mdm_gsm_gprs_http.c: 276: UINT8 UartMessage[200];
 30861                           ;mdm_gsm_gprs_http.c: 277: UINT8 Index = 0;
 30862                           
 30863                           ; BSR set to: 1
 30864                           ;incstack = 0
 30865  0005EC  0E00               	movlw	0
 30866  0005EE  0101               	movlb	1	; () banked
 30867  0005F0  6FC8               	movwf	HttpGetMethod@Index& (0+255),b
 30868                           
 30869                           ;mdm_gsm_gprs_http.c: 279: switch (GetMethodState)
 30870  0005F2  D230               	goto	l1252
 30871  0005F4                     
 30872                           ; BSR set to: 1
 30873                           ;mdm_gsm_gprs_http.c: 283: if (ReceiveEvt(&GetMethod))
 30874                           
 30875                           ; BSR set to: 1
 30876  0005F4  0ED8               	movlw	low _GetMethod
 30877  0005F6  0100               	movlb	0	; () banked
 30878  0005F8  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 30879  0005FA  0E00               	movlw	high _GetMethod
 30880  0005FC  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 30881  0005FE  ECE1  F032         	call	_ReceiveEvt	;wreg free
 30882  000602  0900               	iorlw	0
 30883  000604  B4D8               	btfsc	status,2,c
 30884  000606  D257               	goto	l1255
 30885                           
 30886                           ;mdm_gsm_gprs_http.c: 284: {
 30887                           ;mdm_gsm_gprs_http.c: 286: GetMethodState = GetM_HttpInit;
 30888  000608  0E01               	movlw	1
 30889  00060A  D18C               	goto	L69
 30890  00060C                     
 30891                           ; BSR set to: 1
 30892                           ;mdm_gsm_gprs_http.c: 291: Uart_WriteConstString(1, "AT+HTTPINIT\r");
 30893                           
 30894                           ; BSR set to: 1
 30895  00060C  0E9D               	movlw	low STR_12
 30896  00060E  0100               	movlb	0	; () banked
 30897  000610  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 30898  000612  0EFF               	movlw	high STR_12
 30899  000614  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 30900  000616  0E01               	movlw	1
 30901  000618  EC98  F030         	call	_Uart_WriteConstString
 30902                           
 30903                           ;mdm_gsm_gprs_http.c: 293: GetMethodState = GetM_WaitMdmResp;
 30904  00061C  0E0A               	movlw	10
 30905  00061E  0101               	movlb	1	; () banked
 30906  000620  6FE7               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 30907                           
 30908                           ; BSR set to: 1
 30909                           ;mdm_gsm_gprs_http.c: 294: GetMethodNextState = GetM_HttpSsl;
 30910  000622  0E02               	movlw	2
 30911  000624  0100               	movlb	0	; () banked
 30912  000626  6FD0               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 30913                           
 30914                           ; BSR set to: 0
 30915                           ;mdm_gsm_gprs_http.c: 296: OsTmr_StartTimer(&ConnTimeout,20000u);
 30916  000628  0EF5               	movlw	low _ConnTimeout
 30917  00062A  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 30918  00062C  0E02               	movlw	high _ConnTimeout
 30919  00062E  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 30920  000630  0E20               	movlw	32
 30921  000632  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 30922  000634  0E4E               	movlw	78
 30923  000636  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 30924  000638  0E00               	movlw	0
 30925  00063A  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 30926  00063C  0E00               	movlw	0
 30927  00063E  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 30928  000640  EC34  F02C         	call	_OsTmr_StartTimer	;wreg free
 30929  000644  D1AF               	goto	l15820
 30930  000646                     
 30931                           ; BSR set to: 1
 30932                           ;mdm_gsm_gprs_http.c: 303: Uart_WriteConstString(1, "AT+HTTPSSL=1\r");
 30933                           
 30934                           ; BSR set to: 1
 30935  000646  0E67               	movlw	low STR_13
 30936  000648  0100               	movlb	0	; () banked
 30937  00064A  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 30938  00064C  0EFF               	movlw	high STR_13
 30939  00064E  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 30940  000650  0E01               	movlw	1
 30941  000652  EC98  F030         	call	_Uart_WriteConstString
 30942                           
 30943                           ;mdm_gsm_gprs_http.c: 305: GetMethodState = GetM_WaitMdmResp;
 30944  000656  0E0A               	movlw	10
 30945  000658  0101               	movlb	1	; () banked
 30946  00065A  6FE7               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 30947                           
 30948                           ; BSR set to: 1
 30949                           ;mdm_gsm_gprs_http.c: 306: GetMethodNextState = GetM_SetBearerProf;
 30950  00065C  0E03               	movlw	3
 30951  00065E  0100               	movlb	0	; () banked
 30952  000660  6FD0               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 30953                           
 30954                           ; BSR set to: 0
 30955                           ;mdm_gsm_gprs_http.c: 308: OsTmr_StartTimer(&ConnTimeout,20000u);
 30956  000662  0EF5               	movlw	low _ConnTimeout
 30957  000664  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 30958  000666  0E02               	movlw	high _ConnTimeout
 30959  000668  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 30960  00066A  0E20               	movlw	32
 30961  00066C  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 30962  00066E  0E4E               	movlw	78
 30963  000670  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 30964  000672  0E00               	movlw	0
 30965  000674  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 30966  000676  0E00               	movlw	0
 30967  000678  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 30968  00067A  EC34  F02C         	call	_OsTmr_StartTimer	;wreg free
 30969  00067E  D192               	goto	l15820
 30970  000680                     
 30971                           ; BSR set to: 1
 30972                           ;mdm_gsm_gprs_http.c: 315: Uart_WriteConstString(1, "AT+HTTPPARA=\"CID\",1\r");
 30973                           
 30974                           ; BSR set to: 1
 30975  000680  0EA8               	movlw	low STR_14
 30976  000682  0100               	movlb	0	; () banked
 30977  000684  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 30978  000686  0EFE               	movlw	high STR_14
 30979  000688  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 30980  00068A  0E01               	movlw	1
 30981  00068C  EC98  F030         	call	_Uart_WriteConstString
 30982                           
 30983                           ;mdm_gsm_gprs_http.c: 317: GetMethodState = GetM_WaitMdmResp;
 30984  000690  0E0A               	movlw	10
 30985  000692  0101               	movlb	1	; () banked
 30986  000694  6FE7               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 30987                           
 30988                           ; BSR set to: 1
 30989                           ;mdm_gsm_gprs_http.c: 318: GetMethodNextState = GetM_SetUrlAddr;
 30990  000696  0E04               	movlw	4
 30991  000698  0100               	movlb	0	; () banked
 30992  00069A  6FD0               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 30993                           
 30994                           ; BSR set to: 0
 30995                           ;mdm_gsm_gprs_http.c: 320: OsTmr_StartTimer(&ConnTimeout,20000u);
 30996  00069C  0EF5               	movlw	low _ConnTimeout
 30997  00069E  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 30998  0006A0  0E02               	movlw	high _ConnTimeout
 30999  0006A2  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 31000  0006A4  0E20               	movlw	32
 31001  0006A6  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 31002  0006A8  0E4E               	movlw	78
 31003  0006AA  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 31004  0006AC  0E00               	movlw	0
 31005  0006AE  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 31006  0006B0  0E00               	movlw	0
 31007  0006B2  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 31008  0006B4  EC34  F02C         	call	_OsTmr_StartTimer	;wreg free
 31009  0006B8  D175               	goto	l15820
 31010  0006BA                     
 31011                           ; BSR set to: 1
 31012                           ;mdm_gsm_gprs_http.c: 327: ClearBuffer(UartMessage, sizeof(UartMessage));
 31013                           
 31014                           ; BSR set to: 1
 31015  0006BA  0E00               	movlw	low HttpGetMethod@UartMessage
 31016  0006BC  0100               	movlb	0	; () banked
 31017  0006BE  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 31018  0006C0  0E01               	movlw	high HttpGetMethod@UartMessage
 31019  0006C2  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 31020  0006C4  0E00               	movlw	0
 31021  0006C6  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 31022  0006C8  0EC8               	movlw	200
 31023  0006CA  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 31024  0006CC  EC03  F032         	call	_ClearBuffer	;wreg free
 31025                           
 31026                           ;mdm_gsm_gprs_http.c: 329: StringCopy((void*)("AT+HTTPPARA=\"URL\",\""),UartMessage,19);
 31027  0006D0  0EE6               	movlw	low STR_15
 31028  0006D2  0100               	movlb	0	; () banked
 31029  0006D4  6F85               	movwf	StringCopy@SourceStr& (0+255),b
 31030  0006D6  0EFE               	movlw	high STR_15
 31031  0006D8  6F86               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 31032  0006DA  0E00               	movlw	low HttpGetMethod@UartMessage
 31033  0006DC  6F87               	movwf	StringCopy@DestStr& (0+255),b
 31034  0006DE  0E01               	movlw	high HttpGetMethod@UartMessage
 31035  0006E0  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 31036  0006E2  0E00               	movlw	0
 31037  0006E4  6F8A               	movwf	(StringCopy@Len+1)& (0+255),b
 31038  0006E6  0E13               	movlw	19
 31039  0006E8  6F89               	movwf	StringCopy@Len& (0+255),b
 31040  0006EA  ECD4  F02B         	call	_StringCopy	;wreg free
 31041                           
 31042                           ;mdm_gsm_gprs_http.c: 331: for (Index = 0; Index < GetData->UrlLen; Index++)
 31043  0006EE  0E00               	movlw	0
 31044  0006F0  0101               	movlb	1	; () banked
 31045  0006F2  6FC8               	movwf	HttpGetMethod@Index& (0+255),b
 31046  0006F4  D024               	goto	l1260
 31047  0006F6                     
 31048                           ; BSR set to: 1
 31049                           ;mdm_gsm_gprs_http.c: 332: {
 31050                           ;mdm_gsm_gprs_http.c: 333: UartMessage[Index + 19] = *(GetData->Url + Index);
 31051                           
 31052                           ; BSR set to: 1
 31053  0006F6  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 31054  0006F8  0D01               	mullw	1
 31055  0006FA  C09B  FFD9         	movff	HttpGetMethod@GetData,fsr2l
 31056  0006FE  C09C  FFDA         	movff	HttpGetMethod@GetData+1,fsr2h
 31057  000702  CFDE F09D          	movff	postinc2,??_HttpGetMethod
 31058  000706  CFDD F09E          	movff	postdec2,??_HttpGetMethod+1
 31059  00070A  50F3               	movf	prodl,w,c
 31060  00070C  0100               	movlb	0	; () banked
 31061  00070E  259D               	addwf	??_HttpGetMethod& (0+255),w,b
 31062  000710  6ED9               	movwf	fsr2l,c
 31063  000712  50F4               	movf	prodh,w,c
 31064  000714  219E               	addwfc	(??_HttpGetMethod+1)& (0+255),w,b
 31065  000716  6EDA               	movwf	fsr2h,c
 31066  000718  0101               	movlb	1	; () banked
 31067  00071A  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 31068  00071C  0100               	movlb	0	; () banked
 31069  00071E  6F9F               	movwf	(??_HttpGetMethod+2)& (0+255),b
 31070  000720  6BA0               	clrf	(??_HttpGetMethod+3)& (0+255),b
 31071  000722  0E13               	movlw	19
 31072  000724  279F               	addwf	(??_HttpGetMethod+2)& (0+255),f,b
 31073  000726  0E00               	movlw	0
 31074  000728  23A0               	addwfc	(??_HttpGetMethod+3)& (0+255),f,b
 31075  00072A  0E00               	movlw	low HttpGetMethod@UartMessage
 31076  00072C  259F               	addwf	(??_HttpGetMethod+2)& (0+255),w,b
 31077  00072E  6EE1               	movwf	fsr1l,c
 31078  000730  0E01               	movlw	high HttpGetMethod@UartMessage
 31079  000732  21A0               	addwfc	(??_HttpGetMethod+3)& (0+255),w,b
 31080  000734  6EE2               	movwf	fsr1h,c
 31081  000736  CFDF FFE7          	movff	indf2,indf1
 31082                           
 31083                           ; BSR set to: 0
 31084  00073A  0101               	movlb	1	; () banked
 31085  00073C  2BC8               	incf	HttpGetMethod@Index& (0+255),f,b
 31086  00073E                     l1260:
 31087                           
 31088                           ; BSR set to: 1
 31089                           
 31090                           ; BSR set to: 1
 31091  00073E  0100               	movlb	0	; () banked
 31092  000740  EE20 F002          	lfsr	2,2
 31093  000744  519B               	movf	HttpGetMethod@GetData& (0+255),w,b
 31094  000746  26D9               	addwf	fsr2l,f,c
 31095  000748  519C               	movf	(HttpGetMethod@GetData+1)& (0+255),w,b
 31096  00074A  22DA               	addwfc	fsr2h,f,c
 31097  00074C  50DE               	movf	postinc2,w,c
 31098  00074E  0101               	movlb	1	; () banked
 31099  000750  5DC8               	subwf	HttpGetMethod@Index& (0+255),w,b
 31100  000752  A0D8               	btfss	status,0,c
 31101  000754  D7D0               	goto	l1261
 31102                           
 31103                           ; BSR set to: 1
 31104                           ;mdm_gsm_gprs_http.c: 334: }
 31105                           ;mdm_gsm_gprs_http.c: 336: UartMessage[Index + 19] = '"';
 31106                           
 31107                           ; BSR set to: 1
 31108  000756  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 31109  000758  0100               	movlb	0	; () banked
 31110  00075A  6F9D               	movwf	??_HttpGetMethod& (0+255),b
 31111  00075C  6B9E               	clrf	(??_HttpGetMethod+1)& (0+255),b
 31112  00075E  0E13               	movlw	19
 31113  000760  279D               	addwf	??_HttpGetMethod& (0+255),f,b
 31114  000762  0E00               	movlw	0
 31115  000764  239E               	addwfc	(??_HttpGetMethod+1)& (0+255),f,b
 31116  000766  0E00               	movlw	low HttpGetMethod@UartMessage
 31117  000768  259D               	addwf	??_HttpGetMethod& (0+255),w,b
 31118  00076A  6ED9               	movwf	fsr2l,c
 31119  00076C  0E01               	movlw	high HttpGetMethod@UartMessage
 31120  00076E  219E               	addwfc	(??_HttpGetMethod+1)& (0+255),w,b
 31121  000770  6EDA               	movwf	fsr2h,c
 31122  000772  0E22               	movlw	34
 31123  000774  6EDF               	movwf	indf2,c
 31124                           
 31125                           ;mdm_gsm_gprs_http.c: 337: UartMessage[Index + 20] = '\r';
 31126  000776  0101               	movlb	1	; () banked
 31127  000778  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 31128  00077A  0100               	movlb	0	; () banked
 31129  00077C  6F9D               	movwf	??_HttpGetMethod& (0+255),b
 31130  00077E  6B9E               	clrf	(??_HttpGetMethod+1)& (0+255),b
 31131  000780  0E14               	movlw	20
 31132  000782  279D               	addwf	??_HttpGetMethod& (0+255),f,b
 31133  000784  0E00               	movlw	0
 31134  000786  239E               	addwfc	(??_HttpGetMethod+1)& (0+255),f,b
 31135  000788  0E00               	movlw	low HttpGetMethod@UartMessage
 31136  00078A  259D               	addwf	??_HttpGetMethod& (0+255),w,b
 31137  00078C  6ED9               	movwf	fsr2l,c
 31138  00078E  0E01               	movlw	high HttpGetMethod@UartMessage
 31139  000790  219E               	addwfc	(??_HttpGetMethod+1)& (0+255),w,b
 31140  000792  6EDA               	movwf	fsr2h,c
 31141  000794  0E0D               	movlw	13
 31142  000796  6EDF               	movwf	indf2,c
 31143                           
 31144                           ;mdm_gsm_gprs_http.c: 338: UartMessage[Index + 21] = (0);
 31145  000798  0101               	movlb	1	; () banked
 31146  00079A  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 31147  00079C  0100               	movlb	0	; () banked
 31148  00079E  6F9D               	movwf	??_HttpGetMethod& (0+255),b
 31149  0007A0  6B9E               	clrf	(??_HttpGetMethod+1)& (0+255),b
 31150  0007A2  0E15               	movlw	21
 31151  0007A4  279D               	addwf	??_HttpGetMethod& (0+255),f,b
 31152  0007A6  0E00               	movlw	0
 31153  0007A8  239E               	addwfc	(??_HttpGetMethod+1)& (0+255),f,b
 31154  0007AA  0E00               	movlw	low HttpGetMethod@UartMessage
 31155  0007AC  259D               	addwf	??_HttpGetMethod& (0+255),w,b
 31156  0007AE  6ED9               	movwf	fsr2l,c
 31157  0007B0  0E01               	movlw	high HttpGetMethod@UartMessage
 31158  0007B2  219E               	addwfc	(??_HttpGetMethod+1)& (0+255),w,b
 31159  0007B4  6EDA               	movwf	fsr2h,c
 31160  0007B6  0E00               	movlw	0
 31161  0007B8  6EDF               	movwf	indf2,c
 31162                           
 31163                           ; BSR set to: 0
 31164                           ;mdm_gsm_gprs_http.c: 340: Uart_WriteString(1, UartMessage);
 31165  0007BA  0E00               	movlw	low HttpGetMethod@UartMessage
 31166  0007BC  6F80               	movwf	Uart_WriteString@StringToWrite& (0+255),b
 31167  0007BE  0E01               	movlw	high HttpGetMethod@UartMessage
 31168  0007C0  6F81               	movwf	(Uart_WriteString@StringToWrite+1)& (0+255),b
 31169  0007C2  0E01               	movlw	1
 31170  0007C4  EC38  F031         	call	_Uart_WriteString
 31171                           
 31172                           ;mdm_gsm_gprs_http.c: 342: GetMethodState = GetM_WaitMdmResp;
 31173  0007C8  0E0A               	movlw	10
 31174  0007CA  0101               	movlb	1	; () banked
 31175  0007CC  6FE7               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 31176                           
 31177                           ; BSR set to: 1
 31178                           ;mdm_gsm_gprs_http.c: 343: GetMethodNextState = GetM_PerfGetAction;
 31179  0007CE  0E05               	movlw	5
 31180  0007D0  0100               	movlb	0	; () banked
 31181  0007D2  6FD0               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 31182                           
 31183                           ; BSR set to: 0
 31184                           ;mdm_gsm_gprs_http.c: 345: OsTmr_StartTimer(&ConnTimeout,20000u);
 31185  0007D4  0EF5               	movlw	low _ConnTimeout
 31186  0007D6  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 31187  0007D8  0E02               	movlw	high _ConnTimeout
 31188  0007DA  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 31189  0007DC  0E20               	movlw	32
 31190  0007DE  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 31191  0007E0  0E4E               	movlw	78
 31192  0007E2  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 31193  0007E4  0E00               	movlw	0
 31194  0007E6  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 31195  0007E8  0E00               	movlw	0
 31196  0007EA  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 31197  0007EC  EC34  F02C         	call	_OsTmr_StartTimer	;wreg free
 31198  0007F0  D0D9               	goto	l15820
 31199  0007F2                     
 31200                           ; BSR set to: 1
 31201                           ;mdm_gsm_gprs_http.c: 352: Uart_WriteConstString(1, "AT+HTTPACTION=0\r");
 31202                           
 31203                           ; BSR set to: 1
 31204  0007F2  0E1E               	movlw	low STR_16
 31205  0007F4  0100               	movlb	0	; () banked
 31206  0007F6  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 31207  0007F8  0EFF               	movlw	high STR_16
 31208  0007FA  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 31209  0007FC  0E01               	movlw	1
 31210  0007FE  EC98  F030         	call	_Uart_WriteConstString
 31211                           
 31212                           ;mdm_gsm_gprs_http.c: 354: GetMethodState = GetM_WaitMdmResp;
 31213  000802  0E0A               	movlw	10
 31214  000804  0101               	movlb	1	; () banked
 31215  000806  6FE7               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 31216                           
 31217                           ; BSR set to: 1
 31218                           ;mdm_gsm_gprs_http.c: 355: GetMethodNextState = GetM_ReqActionConf;
 31219  000808  0E06               	movlw	6
 31220  00080A  0100               	movlb	0	; () banked
 31221  00080C  6FD0               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 31222                           
 31223                           ; BSR set to: 0
 31224                           ;mdm_gsm_gprs_http.c: 357: OsTmr_StartTimer(&ConnTimeout,20000u);
 31225  00080E  0EF5               	movlw	low _ConnTimeout
 31226  000810  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 31227  000812  0E02               	movlw	high _ConnTimeout
 31228  000814  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 31229  000816  0E20               	movlw	32
 31230  000818  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 31231  00081A  0E4E               	movlw	78
 31232  00081C  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 31233  00081E  0E00               	movlw	0
 31234  000820  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 31235  000822  0E00               	movlw	0
 31236  000824  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 31237  000826  EC34  F02C         	call	_OsTmr_StartTimer	;wreg free
 31238                           
 31239                           ;mdm_gsm_gprs_http.c: 358: break;
 31240  00082A  D145               	goto	l1255
 31241  00082C                     
 31242                           ;mdm_gsm_gprs_http.c: 362: GetMethodState = GetM_WaitActionConf;
 31243  00082C  0E07               	movlw	7
 31244  00082E  0101               	movlb	1	; () banked
 31245  000830  6FE7               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 31246                           
 31247                           ;mdm_gsm_gprs_http.c: 365: GetMethodNextState = GetM_HttpTerminate;
 31248  000832  0E09               	movlw	9
 31249  000834  0100               	movlb	0	; () banked
 31250  000836  6FD0               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 31251                           
 31252                           ; BSR set to: 0
 31253                           ;mdm_gsm_gprs_http.c: 370: OsTmr_StartTimer(&ConnTimeout,20000u);
 31254  000838  0EF5               	movlw	low _ConnTimeout
 31255  00083A  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 31256  00083C  0E02               	movlw	high _ConnTimeout
 31257  00083E  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 31258  000840  0E20               	movlw	32
 31259  000842  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 31260  000844  0E4E               	movlw	78
 31261  000846  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 31262  000848  0E00               	movlw	0
 31263  00084A  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 31264  00084C  0E00               	movlw	0
 31265  00084E  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 31266  000850  EC34  F02C         	call	_OsTmr_StartTimer	;wreg free
 31267                           
 31268                           ;mdm_gsm_gprs_http.c: 371: break;
 31269  000854  D130               	goto	l1255
 31270  000856                     
 31271                           ;mdm_gsm_gprs_http.c: 375: Uart_WriteConstString(1, "AT+HTTPREAD\r");
 31272  000856  0E83               	movlw	low STR_17
 31273  000858  0100               	movlb	0	; () banked
 31274  00085A  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 31275  00085C  0EFF               	movlw	high STR_17
 31276  00085E  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 31277  000860  0E01               	movlw	1
 31278  000862  EC98  F030         	call	_Uart_WriteConstString
 31279                           
 31280                           ;mdm_gsm_gprs_http.c: 377: GetMethodState = GetM_ReadGetData;
 31281  000866  0E0D               	movlw	13
 31282  000868  0101               	movlb	1	; () banked
 31283  00086A  6FE7               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 31284                           
 31285                           ; BSR set to: 1
 31286                           ;mdm_gsm_gprs_http.c: 378: GetMethodNextState = GetM_HttpTerminate;
 31287  00086C  0E09               	movlw	9
 31288  00086E  0100               	movlb	0	; () banked
 31289  000870  6FD0               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 31290                           
 31291                           ; BSR set to: 0
 31292                           ;mdm_gsm_gprs_http.c: 380: OsTmr_StartTimer(&ConnTimeout,20000u);
 31293  000872  0EF5               	movlw	low _ConnTimeout
 31294  000874  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 31295  000876  0E02               	movlw	high _ConnTimeout
 31296  000878  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 31297  00087A  0E20               	movlw	32
 31298  00087C  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 31299  00087E  0E4E               	movlw	78
 31300  000880  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 31301  000882  0E00               	movlw	0
 31302  000884  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 31303  000886  0E00               	movlw	0
 31304  000888  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 31305  00088A  EC34  F02C         	call	_OsTmr_StartTimer	;wreg free
 31306  00088E  D08A               	goto	l15820
 31307  000890                     
 31308                           ; BSR set to: 1
 31309                           ;mdm_gsm_gprs_http.c: 387: Uart_WriteConstString(1, "AT+HTTPTERM\r");
 31310                           
 31311                           ; BSR set to: 1
 31312  000890  0E90               	movlw	low STR_18
 31313  000892  0100               	movlb	0	; () banked
 31314  000894  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 31315  000896  0EFF               	movlw	high STR_18
 31316  000898  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 31317  00089A  0E01               	movlw	1
 31318  00089C  EC98  F030         	call	_Uart_WriteConstString
 31319                           
 31320                           ;mdm_gsm_gprs_http.c: 389: GetMethodState = GetM_WaitMdmResp;
 31321  0008A0  0E0A               	movlw	10
 31322  0008A2  0101               	movlb	1	; () banked
 31323  0008A4  6FE7               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 31324                           
 31325                           ; BSR set to: 1
 31326                           ;mdm_gsm_gprs_http.c: 390: GetMethodNextState = GetM_Done;
 31327  0008A6  0E0E               	movlw	14
 31328  0008A8  0100               	movlb	0	; () banked
 31329  0008AA  6FD0               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 31330                           
 31331                           ; BSR set to: 0
 31332                           ;mdm_gsm_gprs_http.c: 392: OsTmr_StartTimer(&ConnTimeout,20000u);
 31333  0008AC  0EF5               	movlw	low _ConnTimeout
 31334  0008AE  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 31335  0008B0  0E02               	movlw	high _ConnTimeout
 31336  0008B2  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 31337  0008B4  0E20               	movlw	32
 31338  0008B6  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 31339  0008B8  0E4E               	movlw	78
 31340  0008BA  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 31341  0008BC  0E00               	movlw	0
 31342  0008BE  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 31343  0008C0  0E00               	movlw	0
 31344  0008C2  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 31345  0008C4  EC34  F02C         	call	_OsTmr_StartTimer	;wreg free
 31346  0008C8  D06D               	goto	l15820
 31347  0008CA                     
 31348                           ; BSR set to: 1
 31349                           ;mdm_gsm_gprs_http.c: 399: if (ReceiveEvt(&NewStringReceived))
 31350                           
 31351                           ; BSR set to: 1
 31352  0008CA  0E3C               	movlw	low _NewStringReceived
 31353  0008CC  0100               	movlb	0	; () banked
 31354  0008CE  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 31355  0008D0  0E00               	movlw	high _NewStringReceived
 31356  0008D2  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 31357  0008D4  ECE1  F032         	call	_ReceiveEvt	;wreg free
 31358  0008D8  0900               	iorlw	0
 31359  0008DA  B4D8               	btfsc	status,2,c
 31360  0008DC  D018               	goto	l1268
 31361                           
 31362                           ;mdm_gsm_gprs_http.c: 400: {
 31363                           ;mdm_gsm_gprs_http.c: 402: if ((RxBuffer[0] == 'O') && (RxBuffer[1] == 'K'))
 31364  0008DE  CC58  FFE8         	movff	_RxBuffer,wreg
 31365  0008E2  0A4F               	xorlw	79
 31366  0008E4  A4D8               	btfss	status,2,c
 31367  0008E6  D0E7               	goto	l1255
 31368  0008E8  CC59  FFE8         	movff	_RxBuffer+1,wreg
 31369  0008EC  0A4B               	xorlw	75
 31370  0008EE  A4D8               	btfss	status,2,c
 31371  0008F0  D0E2               	goto	l1255
 31372                           
 31373                           ;mdm_gsm_gprs_http.c: 403: {
 31374                           ;mdm_gsm_gprs_http.c: 405: GetMethodState = GetMethodNextState;
 31375  0008F2  C0D0  F1E7         	movff	HttpGetMethod@GetMethodNextState,HttpGetMethod@GetMethodState
 31376                           
 31377                           ;mdm_gsm_gprs_http.c: 407: ClearBuffer(RxBuffer,((UINT16)(400)));
 31378  0008F6  0E58               	movlw	low _RxBuffer
 31379  0008F8  0100               	movlb	0	; () banked
 31380  0008FA  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 31381  0008FC  0E0C               	movlw	high _RxBuffer
 31382  0008FE  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 31383  000900  0E01               	movlw	1
 31384  000902  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 31385  000904  0E90               	movlw	144
 31386  000906  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 31387  000908  EC03  F032         	call	_ClearBuffer	;wreg free
 31388                           
 31389                           ;mdm_gsm_gprs_http.c: 408: }
 31390                           ;mdm_gsm_gprs_http.c: 409: }
 31391  00090C  D0D4               	goto	l1255
 31392  00090E                     l1268:
 31393                           
 31394                           ;mdm_gsm_gprs_http.c: 410: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 31395  00090E  0EF5               	movlw	low _ConnTimeout
 31396  000910  0100               	movlb	0	; () banked
 31397  000912  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 31398  000914  0E02               	movlw	high _ConnTimeout
 31399  000916  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 31400  000918  ECE9  F027         	call	_OsTmr_GetTimerStatus	;wreg free
 31401  00091C                     L70:
 31402  00091C  06E8               	decf	wreg,f,c
 31403  00091E  A4D8               	btfss	status,2,c
 31404  000920  D0CA               	goto	l1255
 31405                           
 31406                           ;mdm_gsm_gprs_http.c: 411: {
 31407                           ;mdm_gsm_gprs_http.c: 413: GetMethodState = GetM_Fail;
 31408  000922  0E0F               	movlw	15
 31409  000924                     L69:
 31410  000924  0101               	movlb	1	; () banked
 31411  000926  6FE7               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 31412                           
 31413                           ; BSR set to: 1
 31414                           ;mdm_gsm_gprs_http.c: 414: }
 31415                           ;mdm_gsm_gprs_http.c: 415: break;
 31416                           
 31417                           ; BSR set to: 1
 31418  000928  D0C6               	goto	l1255
 31419  00092A                     
 31420                           ; BSR set to: 1
 31421                           ;mdm_gsm_gprs_http.c: 419: if (ReceiveEvt(&NewStringReceived))
 31422                           
 31423                           ; BSR set to: 1
 31424  00092A  0E3C               	movlw	low _NewStringReceived
 31425  00092C  0100               	movlb	0	; () banked
 31426  00092E  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 31427  000930  0E00               	movlw	high _NewStringReceived
 31428  000932  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 31429  000934  ECE1  F032         	call	_ReceiveEvt	;wreg free
 31430  000938  0900               	iorlw	0
 31431  00093A  B4D8               	btfsc	status,2,c
 31432  00093C  D018               	goto	l1273
 31433                           
 31434                           ;mdm_gsm_gprs_http.c: 420: {
 31435                           ;mdm_gsm_gprs_http.c: 422: if ((RxBuffer[0] == '+') && (RxBuffer[1] == 'H'))
 31436  00093E  CC58  FFE8         	movff	_RxBuffer,wreg
 31437  000942  0A2B               	xorlw	43
 31438  000944  A4D8               	btfss	status,2,c
 31439  000946  D0B7               	goto	l1255
 31440  000948  CC59  FFE8         	movff	_RxBuffer+1,wreg
 31441  00094C  0A48               	xorlw	72
 31442  00094E  A4D8               	btfss	status,2,c
 31443  000950  D0B2               	goto	l1255
 31444                           
 31445                           ;mdm_gsm_gprs_http.c: 423: {
 31446                           ;mdm_gsm_gprs_http.c: 425: GetMethodState = GetMethodNextState;
 31447  000952  C0D0  F1E7         	movff	HttpGetMethod@GetMethodNextState,HttpGetMethod@GetMethodState
 31448                           
 31449                           ;mdm_gsm_gprs_http.c: 427: ClearBuffer(RxBuffer,((UINT16)(400)));
 31450  000956  0E58               	movlw	low _RxBuffer
 31451  000958  0100               	movlb	0	; () banked
 31452  00095A  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 31453  00095C  0E0C               	movlw	high _RxBuffer
 31454  00095E  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 31455  000960  0E01               	movlw	1
 31456  000962  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 31457  000964  0E90               	movlw	144
 31458  000966  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 31459  000968  EC03  F032         	call	_ClearBuffer	;wreg free
 31460                           
 31461                           ;mdm_gsm_gprs_http.c: 428: }
 31462                           ;mdm_gsm_gprs_http.c: 429: }
 31463  00096C  D0A4               	goto	l1255
 31464  00096E                     l1273:
 31465                           
 31466                           ;mdm_gsm_gprs_http.c: 430: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 31467  00096E  0EF5               	movlw	low _ConnTimeout
 31468  000970  0100               	movlb	0	; () banked
 31469  000972  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 31470  000974  0E02               	movlw	high _ConnTimeout
 31471  000976  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 31472  000978  ECE9  F027         	call	_OsTmr_GetTimerStatus	;wreg free
 31473  00097C  D7CF               	goto	L70
 31474  00097E                     
 31475                           ; BSR set to: 1
 31476                           ;mdm_gsm_gprs_http.c: 439: GetMethodState = GetM_Wait;
 31477                           
 31478                           ; BSR set to: 1
 31479  00097E  0E0C               	movlw	12
 31480  000980  6FE7               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 31481                           
 31482                           ;mdm_gsm_gprs_http.c: 440: GetMethodNextState = GetM_PerfGetAction;
 31483  000982  0E05               	movlw	5
 31484  000984  0100               	movlb	0	; () banked
 31485  000986  6FD0               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 31486                           
 31487                           ; BSR set to: 0
 31488                           ;mdm_gsm_gprs_http.c: 442: OsTmr_StartTimer(&ConnWait,1000);
 31489  000988  0EDF               	movlw	low _ConnWait
 31490  00098A  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 31491  00098C  0E03               	movlw	high _ConnWait
 31492  00098E  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 31493  000990  0EE8               	movlw	232
 31494  000992  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 31495  000994  0E03               	movlw	3
 31496  000996  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 31497  000998  0E00               	movlw	0
 31498  00099A  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 31499  00099C  0E00               	movlw	0
 31500  00099E  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 31501  0009A0  EC34  F02C         	call	_OsTmr_StartTimer	;wreg free
 31502  0009A4                     l15820:
 31503                           
 31504                           ;mdm_gsm_gprs_http.c: 444: GetMOutSts = GetMOut_InProg;
 31505  0009A4  0E01               	movlw	1
 31506  0009A6  0101               	movlb	1	; () banked
 31507  0009A8  D053               	goto	L72
 31508  0009AA                     
 31509                           ; BSR set to: 1
 31510                           ;mdm_gsm_gprs_http.c: 449: if (OsTmr_GetTimerStatus(&ConnWait) == SwTimerExpired)
 31511                           
 31512                           ; BSR set to: 1
 31513  0009AA  0EDF               	movlw	low _ConnWait
 31514  0009AC  0100               	movlb	0	; () banked
 31515  0009AE  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 31516  0009B0  0E03               	movlw	high _ConnWait
 31517  0009B2  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 31518  0009B4  ECE9  F027         	call	_OsTmr_GetTimerStatus	;wreg free
 31519  0009B8  06E8               	decf	wreg,f,c
 31520  0009BA  A4D8               	btfss	status,2,c
 31521  0009BC  D07C               	goto	l1255
 31522                           
 31523                           ;mdm_gsm_gprs_http.c: 450: {
 31524                           ;mdm_gsm_gprs_http.c: 452: GetMethodState = GetMethodNextState;
 31525  0009BE  C0D0  F1E7         	movff	HttpGetMethod@GetMethodNextState,HttpGetMethod@GetMethodState
 31526                           
 31527                           ;mdm_gsm_gprs_http.c: 453: }
 31528                           ;mdm_gsm_gprs_http.c: 454: break;
 31529  0009C2  D079               	goto	l1255
 31530  0009C4                     
 31531                           ;mdm_gsm_gprs_http.c: 458: if (ReceiveEvt(&NewStringReceived))
 31532  0009C4  0E3C               	movlw	low _NewStringReceived
 31533  0009C6  0100               	movlb	0	; () banked
 31534  0009C8  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 31535  0009CA  0E00               	movlw	high _NewStringReceived
 31536  0009CC  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 31537  0009CE  ECE1  F032         	call	_ReceiveEvt	;wreg free
 31538  0009D2  0900               	iorlw	0
 31539  0009D4  B4D8               	btfsc	status,2,c
 31540  0009D6  D02D               	goto	l1281
 31541                           
 31542                           ;mdm_gsm_gprs_http.c: 459: {
 31543                           ;mdm_gsm_gprs_http.c: 461: if ((RxBuffer[0] == '+') && (RxBuffer[1] == 'H'))
 31544  0009D8  CC58  FFE8         	movff	_RxBuffer,wreg
 31545  0009DC  0A2B               	xorlw	43
 31546  0009DE  A4D8               	btfss	status,2,c
 31547  0009E0  D06A               	goto	l1255
 31548  0009E2  CC59  FFE8         	movff	_RxBuffer+1,wreg
 31549  0009E6  0A48               	xorlw	72
 31550  0009E8  A4D8               	btfss	status,2,c
 31551  0009EA  D065               	goto	l1255
 31552                           
 31553                           ;mdm_gsm_gprs_http.c: 462: {
 31554                           ;mdm_gsm_gprs_http.c: 464: GetMethodState = GetMethodNextState;
 31555  0009EC  C0D0  F1E7         	movff	HttpGetMethod@GetMethodNextState,HttpGetMethod@GetMethodState
 31556                           
 31557                           ;mdm_gsm_gprs_http.c: 466: StringCopy(RxBuffer,GetData->RespBuffer,((UINT16)(400)));
 31558  0009F0  0E58               	movlw	low _RxBuffer
 31559  0009F2  0100               	movlb	0	; () banked
 31560  0009F4  6F85               	movwf	StringCopy@SourceStr& (0+255),b
 31561  0009F6  0E0C               	movlw	high _RxBuffer
 31562  0009F8  6F86               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 31563  0009FA  EE20 F003          	lfsr	2,3
 31564  0009FE  519B               	movf	HttpGetMethod@GetData& (0+255),w,b
 31565  000A00  26D9               	addwf	fsr2l,f,c
 31566  000A02  519C               	movf	(HttpGetMethod@GetData+1)& (0+255),w,b
 31567  000A04  22DA               	addwfc	fsr2h,f,c
 31568  000A06  CFDE F087          	movff	postinc2,StringCopy@DestStr
 31569  000A0A  CFDD F088          	movff	postdec2,StringCopy@DestStr+1
 31570  000A0E  0E01               	movlw	1
 31571  000A10  6F8A               	movwf	(StringCopy@Len+1)& (0+255),b
 31572  000A12  0E90               	movlw	144
 31573  000A14  6F89               	movwf	StringCopy@Len& (0+255),b
 31574  000A16  ECD4  F02B         	call	_StringCopy	;wreg free
 31575                           
 31576                           ;mdm_gsm_gprs_http.c: 468: ClearBuffer(RxBuffer,((UINT16)(400)));
 31577  000A1A  0E58               	movlw	low _RxBuffer
 31578  000A1C  0100               	movlb	0	; () banked
 31579  000A1E  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 31580  000A20  0E0C               	movlw	high _RxBuffer
 31581  000A22  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 31582  000A24  0E01               	movlw	1
 31583  000A26  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 31584  000A28  0E90               	movlw	144
 31585  000A2A  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 31586  000A2C  EC03  F032         	call	_ClearBuffer	;wreg free
 31587                           
 31588                           ;mdm_gsm_gprs_http.c: 469: }
 31589                           ;mdm_gsm_gprs_http.c: 470: }
 31590  000A30  D042               	goto	l1255
 31591  000A32                     l1281:
 31592                           
 31593                           ;mdm_gsm_gprs_http.c: 471: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 31594  000A32  0EF5               	movlw	low _ConnTimeout
 31595  000A34  0100               	movlb	0	; () banked
 31596  000A36  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 31597  000A38  0E02               	movlw	high _ConnTimeout
 31598  000A3A  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 31599  000A3C  ECE9  F027         	call	_OsTmr_GetTimerStatus	;wreg free
 31600  000A40  D76D               	goto	L70
 31601  000A42                     
 31602                           ; BSR set to: 1
 31603                           ;mdm_gsm_gprs_http.c: 480: GetMethodState = GetM_Idle;
 31604                           
 31605                           ; BSR set to: 1
 31606  000A42  0E00               	movlw	0
 31607  000A44  6FE7               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 31608                           
 31609                           ;mdm_gsm_gprs_http.c: 482: GetMOutSts = GetMOut_Completed;
 31610  000A46  0E02               	movlw	2
 31611  000A48  D003               	goto	L72
 31612  000A4A                     
 31613                           ; BSR set to: 1
 31614                           ;mdm_gsm_gprs_http.c: 487: GetMethodState = GetM_Idle;
 31615                           
 31616                           ; BSR set to: 1
 31617  000A4A  0E00               	movlw	0
 31618  000A4C  6FE7               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 31619                           
 31620                           ;mdm_gsm_gprs_http.c: 489: GetMOutSts = GetMOut_Failed;
 31621  000A4E  0E03               	movlw	3
 31622  000A50                     L72:
 31623  000A50  6FE6               	movwf	HttpGetMethod@GetMOutSts& (0+255),b
 31624                           
 31625                           ; BSR set to: 1
 31626                           ;mdm_gsm_gprs_http.c: 494: }
 31627                           
 31628                           ; BSR set to: 1
 31629                           ;mdm_gsm_gprs_http.c: 493: break;
 31630                           
 31631                           ;mdm_gsm_gprs_http.c: 492: default:
 31632                           
 31633                           ;mdm_gsm_gprs_http.c: 490: break;
 31634  000A52  D031               	goto	l1255
 31635  000A54                     l1252:
 31636                           
 31637                           ; BSR set to: 1
 31638                           
 31639                           ; BSR set to: 1
 31640  000A54  51E7               	movf	HttpGetMethod@GetMethodState& (0+255),w,b
 31641                           
 31642                           ; Switch size 1, requested type "space"
 31643                           ; Number of cases is 16, Range of values is 0 to 15
 31644                           ; switch strategies available:
 31645                           ; Name         Instructions Cycles
 31646                           ; simple_byte           49    25 (average)
 31647                           ;	Chosen strategy is simple_byte
 31648  000A56  0A00               	xorlw	0	; case 0
 31649  000A58  B4D8               	btfsc	status,2,c
 31650  000A5A  D5CC               	goto	l1253
 31651  000A5C  0A01               	xorlw	1	; case 1
 31652  000A5E  B4D8               	btfsc	status,2,c
 31653  000A60  D5D5               	goto	l1256
 31654  000A62  0A03               	xorlw	3	; case 2
 31655  000A64  B4D8               	btfsc	status,2,c
 31656  000A66  D5EF               	goto	l1257
 31657  000A68  0A01               	xorlw	1	; case 3
 31658  000A6A  B4D8               	btfsc	status,2,c
 31659  000A6C  D609               	goto	l1258
 31660  000A6E  0A07               	xorlw	7	; case 4
 31661  000A70  B4D8               	btfsc	status,2,c
 31662  000A72  D623               	goto	l1259
 31663  000A74  0A01               	xorlw	1	; case 5
 31664  000A76  B4D8               	btfsc	status,2,c
 31665  000A78  D6BC               	goto	l1263
 31666  000A7A  0A03               	xorlw	3	; case 6
 31667  000A7C  B4D8               	btfsc	status,2,c
 31668  000A7E  D6D6               	goto	l1264
 31669  000A80  0A01               	xorlw	1	; case 7
 31670  000A82  B4D8               	btfsc	status,2,c
 31671  000A84  D752               	goto	l1272
 31672  000A86  0A0F               	xorlw	15	; case 8
 31673  000A88  B4D8               	btfsc	status,2,c
 31674  000A8A  D6E5               	goto	l1265
 31675  000A8C  0A01               	xorlw	1	; case 9
 31676  000A8E  B4D8               	btfsc	status,2,c
 31677  000A90  D6FF               	goto	l1266
 31678  000A92  0A03               	xorlw	3	; case 10
 31679  000A94  B4D8               	btfsc	status,2,c
 31680  000A96  D719               	goto	l1267
 31681  000A98  0A01               	xorlw	1	; case 11
 31682  000A9A  B4D8               	btfsc	status,2,c
 31683  000A9C  D770               	goto	l1277
 31684  000A9E  0A07               	xorlw	7	; case 12
 31685  000AA0  B4D8               	btfsc	status,2,c
 31686  000AA2  D783               	goto	l1278
 31687  000AA4  0A01               	xorlw	1	; case 13
 31688  000AA6  B4D8               	btfsc	status,2,c
 31689  000AA8  D78D               	goto	l1280
 31690  000AAA  0A03               	xorlw	3	; case 14
 31691  000AAC  B4D8               	btfsc	status,2,c
 31692  000AAE  D7C9               	goto	l1285
 31693  000AB0  0A01               	xorlw	1	; case 15
 31694  000AB2  B4D8               	btfsc	status,2,c
 31695  000AB4  D7CA               	goto	l1286
 31696  000AB6                     l1255:
 31697                           
 31698                           ;mdm_gsm_gprs_http.c: 496: return GetMOutSts;
 31699                           
 31700                           ; BSR set to: 1
 31701  000AB6  0101               	movlb	1	; () banked
 31702  000AB8  51E6               	movf	HttpGetMethod@GetMOutSts& (0+255),w,b
 31703  000ABA  0012               	return	
 31704  000ABC                     __end_of_HttpGetMethod:
 31705                           	opt stack 0
 31706                           tosu	equ	0xFFF
 31707                           tosh	equ	0xFFE
 31708                           tosl	equ	0xFFD
 31709                           pclath	equ	0xFFA
 31710                           tblptru	equ	0xFF8
 31711                           tblptrh	equ	0xFF7
 31712                           tblptrl	equ	0xFF6
 31713                           tablat	equ	0xFF5
 31714                           prodh	equ	0xFF4
 31715                           prodl	equ	0xFF3
 31716                           intcon	equ	0xFF2
 31717                           intcon2	equ	0xFF1
 31718                           intcon3	equ	0xFF0
 31719                           indf0	equ	0xFEF
 31720                           postinc0	equ	0xFEE
 31721                           plusw0	equ	0xFEB
 31722                           fsr0h	equ	0xFEA
 31723                           fsr0l	equ	0xFE9
 31724                           wreg	equ	0xFE8
 31725                           indf1	equ	0xFE7
 31726                           postinc1	equ	0xFE6
 31727                           postdec1	equ	0xFE5
 31728                           plusw1	equ	0xFE3
 31729                           fsr1h	equ	0xFE2
 31730                           fsr1l	equ	0xFE1
 31731                           indf2	equ	0xFDF
 31732                           postinc2	equ	0xFDE
 31733                           postdec2	equ	0xFDD
 31734                           plusw2	equ	0xFDB
 31735                           fsr2h	equ	0xFDA
 31736                           fsr2l	equ	0xFD9
 31737                           status	equ	0xFD8
 31738                           
 31739 ;; *************** function _Uart_WriteString *****************
 31740 ;; Defined at:
 31741 ;;		line 518 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 31742 ;; Parameters:    Size  Location     Type
 31743 ;;  Module          1    wreg     unsigned char 
 31744 ;;  StringToWrit    2   32[BANK0 ] PTR unsigned char 
 31745 ;;		 -> HttpGetMethod@UartMessage(200), InitGprsNetwork@UartMessage(50), Mdm_MakePhoneCall@UartMessage(25), Mdm_SetSmsFo
      +rmat@UartMessage(20), 
 31746 ;;		 -> Mdm_PinUnlock@UartMessage(13), 
 31747 ;; Auto vars:     Size  Location     Type
 31748 ;;  Module          1   34[BANK0 ] unsigned char 
 31749 ;; Return value:  Size  Location     Type
 31750 ;;                  1    wreg      void 
 31751 ;; Registers used:
 31752 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 31753 ;; Tracked objects:
 31754 ;;		On entry : 0/0
 31755 ;;		On exit  : 0/0
 31756 ;;		Unchanged: 0/0
 31757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31758 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31759 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31761 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31762 ;;Total ram usage:        3 bytes
 31763 ;; Hardware stack levels used:    1
 31764 ;; Hardware stack levels required when called:   12
 31765 ;; This function calls:
 31766 ;;		_UartTxBufferStatus
 31767 ;;		_UartWriteByte
 31768 ;; This function is called by:
 31769 ;;		_Mdm_SetSmsFormat
 31770 ;;		_InitGprsNetwork
 31771 ;;		_HttpGetMethod
 31772 ;;		_Mdm_PinUnlock
 31773 ;;		_Mdm_MakePhoneCall
 31774 ;; This function uses a non-reentrant model
 31775 ;;
 31776                           
 31777                           	psect	text144
 31778  006270                     __ptext144:
 31779                           	opt stack 0
 31780  006270                     _Uart_WriteString:
 31781                           	opt stack 12
 31782                           
 31783                           ; BSR set to: 1
 31784                           ;incstack = 0
 31785                           ;Uart_WriteString@Module stored from wreg
 31786  006270  0100               	movlb	0	; () banked
 31787  006272  6F82               	movwf	Uart_WriteString@Module& (0+255),b
 31788                           
 31789                           ;uart_drv.c: 521: while (*StringToWrite)
 31790  006274  D014               	goto	u12210
 31791  006276                     
 31792                           ;uart_drv.c: 522: {
 31793                           ;uart_drv.c: 524: UartWriteByte(Module, *StringToWrite);
 31794  006276  C080  FFD9         	movff	Uart_WriteString@StringToWrite,fsr2l
 31795  00627A  C081  FFDA         	movff	Uart_WriteString@StringToWrite+1,fsr2h
 31796  00627E  50DF               	movf	indf2,w,c
 31797  006280  0100               	movlb	0	; () banked
 31798  006282  6F7D               	movwf	UartWriteByte@ByteToWrite& (0+255),b
 31799  006284  5182               	movf	Uart_WriteString@Module& (0+255),w,b
 31800  006286  EC2D  F034         	call	_UartWriteByte
 31801                           
 31802                           ;uart_drv.c: 526: StringToWrite++;
 31803  00628A  0100               	movlb	0	; () banked
 31804  00628C  4B80               	infsnz	Uart_WriteString@StringToWrite& (0+255),f,b
 31805  00628E  2B81               	incf	(Uart_WriteString@StringToWrite+1)& (0+255),f,b
 31806  006290                     
 31807                           ; BSR set to: 0
 31808                           
 31809                           ; BSR set to: 0
 31810  006290  0100               	movlb	0	; () banked
 31811  006292  5182               	movf	Uart_WriteString@Module& (0+255),w,b
 31812  006294  EC2F  F02F         	call	_UartTxBufferStatus
 31813  006298  06E8               	decf	wreg,f,c
 31814  00629A  B4D8               	btfsc	status,2,c
 31815  00629C  D7F9               	goto	l709
 31816  00629E                     u12210:
 31817  00629E  C080  FFD9         	movff	Uart_WriteString@StringToWrite,fsr2l
 31818  0062A2  C081  FFDA         	movff	Uart_WriteString@StringToWrite+1,fsr2h
 31819  0062A6  50DF               	movf	indf2,w,c
 31820  0062A8  B4D8               	btfsc	status,2,c
 31821  0062AA  0012               	return	
 31822  0062AC  D7E4               	goto	l707
 31823  0062AE                     __end_of_Uart_WriteString:
 31824                           	opt stack 0
 31825                           tosu	equ	0xFFF
 31826                           tosh	equ	0xFFE
 31827                           tosl	equ	0xFFD
 31828                           pclath	equ	0xFFA
 31829                           tblptru	equ	0xFF8
 31830                           tblptrh	equ	0xFF7
 31831                           tblptrl	equ	0xFF6
 31832                           tablat	equ	0xFF5
 31833                           prodh	equ	0xFF4
 31834                           prodl	equ	0xFF3
 31835                           intcon	equ	0xFF2
 31836                           intcon2	equ	0xFF1
 31837                           intcon3	equ	0xFF0
 31838                           indf0	equ	0xFEF
 31839                           postinc0	equ	0xFEE
 31840                           plusw0	equ	0xFEB
 31841                           fsr0h	equ	0xFEA
 31842                           fsr0l	equ	0xFE9
 31843                           wreg	equ	0xFE8
 31844                           indf1	equ	0xFE7
 31845                           postinc1	equ	0xFE6
 31846                           postdec1	equ	0xFE5
 31847                           plusw1	equ	0xFE3
 31848                           fsr1h	equ	0xFE2
 31849                           fsr1l	equ	0xFE1
 31850                           indf2	equ	0xFDF
 31851                           postinc2	equ	0xFDE
 31852                           postdec2	equ	0xFDD
 31853                           plusw2	equ	0xFDB
 31854                           fsr2h	equ	0xFDA
 31855                           fsr2l	equ	0xFD9
 31856                           status	equ	0xFD8
 31857                           
 31858 ;; *************** function _Uart_WriteConstString *****************
 31859 ;; Defined at:
 31860 ;;		line 496 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 31861 ;; Parameters:    Size  Location     Type
 31862 ;;  Module          1    wreg     unsigned char 
 31863 ;;  ConstStringT    2   32[BANK0 ] PTR const unsigned char 
 31864 ;;		 -> STR_31(12), STR_30(19), STR_29(14), STR_20(14), 
 31865 ;;		 -> STR_19(14), STR_18(13), STR_17(13), STR_16(17), 
 31866 ;;		 -> STR_14(21), STR_13(14), STR_12(13), STR_11(14), 
 31867 ;;		 -> STR_10(14), STR_8(31), STR_7(5), STR_6(5), 
 31868 ;;		 -> STR_4(12), STR_3(7), STR_2(14), STR_1(5), 
 31869 ;; Auto vars:     Size  Location     Type
 31870 ;;  Module          1   34[BANK0 ] unsigned char 
 31871 ;; Return value:  Size  Location     Type
 31872 ;;                  1    wreg      void 
 31873 ;; Registers used:
 31874 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 31875 ;; Tracked objects:
 31876 ;;		On entry : 0/0
 31877 ;;		On exit  : 0/0
 31878 ;;		Unchanged: 0/0
 31879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31880 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31881 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31882 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31883 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31884 ;;Total ram usage:        3 bytes
 31885 ;; Hardware stack levels used:    1
 31886 ;; Hardware stack levels required when called:   12
 31887 ;; This function calls:
 31888 ;;		_UartTxBufferStatus
 31889 ;;		_UartWriteByte
 31890 ;; This function is called by:
 31891 ;;		_CheckModem
 31892 ;;		_ConfigureModem
 31893 ;;		_GetSmsSm
 31894 ;;		_Mdm_HangPhoneCall
 31895 ;;		_InitGprsNetwork
 31896 ;;		_HttpGetMethod
 31897 ;;		_detectCmd
 31898 ;;		_initGprsModem
 31899 ;;		_Mdm_GetPhoneCall
 31900 ;;		_MdmHttp_SetSsl
 31901 ;; This function uses a non-reentrant model
 31902 ;;
 31903                           
 31904                           	psect	text145
 31905  006130                     __ptext145:
 31906                           	opt stack 0
 31907  006130                     _Uart_WriteConstString:
 31908                           	opt stack 11
 31909                           
 31910                           ;incstack = 0
 31911                           ;Uart_WriteConstString@Module stored from wreg
 31912  006130  0100               	movlb	0	; () banked
 31913  006132  6F82               	movwf	Uart_WriteConstString@Module& (0+255),b
 31914                           
 31915                           ;uart_drv.c: 499: while (*ConstStringToWrite)
 31916  006134  D015               	goto	u11670
 31917  006136                     
 31918                           ;uart_drv.c: 500: {
 31919                           ;uart_drv.c: 502: UartWriteByte(Module, *ConstStringToWrite);
 31920  006136  C080  FFF6         	movff	Uart_WriteConstString@ConstStringToWrite,tblptrl
 31921  00613A  C081  FFF7         	movff	Uart_WriteConstString@ConstStringToWrite+1,tblptrh
 31922  00613E                     	if	0	;tblptru may be non-zero
 31923  00613E                     	endif
 31924  00613E                     	if	0	;tblptru may be non-zero
 31925  00613E                     	endif
 31926  00613E  0008               	tblrd		*
 31927  006140  CFF5 F07D          	movff	tablat,UartWriteByte@ByteToWrite
 31928  006144  0100               	movlb	0	; () banked
 31929  006146  5182               	movf	Uart_WriteConstString@Module& (0+255),w,b
 31930  006148  EC2D  F034         	call	_UartWriteByte
 31931                           
 31932                           ;uart_drv.c: 504: ConstStringToWrite++;
 31933  00614C  0100               	movlb	0	; () banked
 31934  00614E  4B80               	infsnz	Uart_WriteConstString@ConstStringToWrite& (0+255),f,b
 31935  006150  2B81               	incf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),f,b
 31936  006152                     
 31937                           ; BSR set to: 0
 31938                           
 31939                           ; BSR set to: 0
 31940  006152  0100               	movlb	0	; () banked
 31941  006154  5182               	movf	Uart_WriteConstString@Module& (0+255),w,b
 31942  006156  EC2F  F02F         	call	_UartTxBufferStatus
 31943  00615A  06E8               	decf	wreg,f,c
 31944  00615C  B4D8               	btfsc	status,2,c
 31945  00615E  D7F9               	goto	l700
 31946  006160                     u11670:
 31947  006160  C080  FFF6         	movff	Uart_WriteConstString@ConstStringToWrite,tblptrl
 31948  006164  C081  FFF7         	movff	Uart_WriteConstString@ConstStringToWrite+1,tblptrh
 31949  006168                     	if	0	;tblptru may be non-zero
 31950  006168                     	endif
 31951  006168                     	if	0	;tblptru may be non-zero
 31952  006168                     	endif
 31953  006168  0008               	tblrd		*
 31954  00616A  50F5               	movf	tablat,w,c
 31955  00616C  0900               	iorlw	0
 31956  00616E  B4D8               	btfsc	status,2,c
 31957  006170  0012               	return	
 31958  006172  D7E1               	goto	l698
 31959  006174                     __end_of_Uart_WriteConstString:
 31960                           	opt stack 0
 31961                           tosu	equ	0xFFF
 31962                           tosh	equ	0xFFE
 31963                           tosl	equ	0xFFD
 31964                           pclath	equ	0xFFA
 31965                           tblptru	equ	0xFF8
 31966                           tblptrh	equ	0xFF7
 31967                           tblptrl	equ	0xFF6
 31968                           tablat	equ	0xFF5
 31969                           prodh	equ	0xFF4
 31970                           prodl	equ	0xFF3
 31971                           intcon	equ	0xFF2
 31972                           intcon2	equ	0xFF1
 31973                           intcon3	equ	0xFF0
 31974                           indf0	equ	0xFEF
 31975                           postinc0	equ	0xFEE
 31976                           plusw0	equ	0xFEB
 31977                           fsr0h	equ	0xFEA
 31978                           fsr0l	equ	0xFE9
 31979                           wreg	equ	0xFE8
 31980                           indf1	equ	0xFE7
 31981                           postinc1	equ	0xFE6
 31982                           postdec1	equ	0xFE5
 31983                           plusw1	equ	0xFE3
 31984                           fsr1h	equ	0xFE2
 31985                           fsr1l	equ	0xFE1
 31986                           indf2	equ	0xFDF
 31987                           postinc2	equ	0xFDE
 31988                           postdec2	equ	0xFDD
 31989                           plusw2	equ	0xFDB
 31990                           fsr2h	equ	0xFDA
 31991                           fsr2l	equ	0xFD9
 31992                           status	equ	0xFD8
 31993                           
 31994 ;; *************** function _UartWriteByte *****************
 31995 ;; Defined at:
 31996 ;;		line 173 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 31997 ;; Parameters:    Size  Location     Type
 31998 ;;  Module          1    wreg     unsigned char 
 31999 ;;  ByteToWrite     1   29[BANK0 ] unsigned char 
 32000 ;; Auto vars:     Size  Location     Type
 32001 ;;  Module          1   30[BANK0 ] unsigned char 
 32002 ;; Return value:  Size  Location     Type
 32003 ;;                  1    wreg      void 
 32004 ;; Registers used:
 32005 ;;		wreg, status,2, status,0
 32006 ;; Tracked objects:
 32007 ;;		On entry : 0/0
 32008 ;;		On exit  : 0/0
 32009 ;;		Unchanged: 0/0
 32010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32011 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32012 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32014 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32015 ;;Total ram usage:        2 bytes
 32016 ;; Hardware stack levels used:    1
 32017 ;; Hardware stack levels required when called:   11
 32018 ;; This function calls:
 32019 ;;		Nothing
 32020 ;; This function is called by:
 32021 ;;		_Uart_WriteConstString
 32022 ;;		_Uart_WriteString
 32023 ;;		_Uart_WriteStringLen
 32024 ;; This function uses a non-reentrant model
 32025 ;;
 32026                           
 32027                           	psect	text146
 32028  00685A                     __ptext146:
 32029                           	opt stack 0
 32030  00685A                     _UartWriteByte:
 32031                           	opt stack 11
 32032                           
 32033                           ;incstack = 0
 32034                           ;UartWriteByte@Module stored from wreg
 32035  00685A  0100               	movlb	0	; () banked
 32036  00685C  6F7E               	movwf	UartWriteByte@Module& (0+255),b
 32037                           
 32038                           ;uart_drv.c: 175: if (Module == ((UINT8)(1)))
 32039  00685E  0100               	movlb	0	; () banked
 32040  006860  057E               	decf	UartWriteByte@Module& (0+255),w,b
 32041  006862  A4D8               	btfss	status,2,c
 32042  006864  D003               	goto	l639
 32043                           
 32044                           ; BSR set to: 0
 32045                           ;uart_drv.c: 176: {
 32046                           ;uart_drv.c: 178: TXREG1 = ByteToWrite;
 32047  006866  C07D  FFAE         	movff	UartWriteByte@ByteToWrite,4014	;volatile
 32048                           
 32049                           ;uart_drv.c: 179: }
 32050  00686A  0012               	return	
 32051  00686C                     l639:
 32052                           
 32053                           ; BSR set to: 0
 32054                           ;uart_drv.c: 180: else if (Module == ((UINT8)(2)))
 32055                           
 32056                           ; BSR set to: 0
 32057  00686C  0E02               	movlw	2
 32058  00686E  197E               	xorwf	UartWriteByte@Module& (0+255),w,b
 32059  006870  A4D8               	btfss	status,2,c
 32060  006872  0012               	return	
 32061                           
 32062                           ; BSR set to: 0
 32063                           ;uart_drv.c: 181: {
 32064                           ;uart_drv.c: 183: TXREG2 = ByteToWrite;
 32065  006874  C07D  FFA9         	movff	UartWriteByte@ByteToWrite,4009	;volatile
 32066                           
 32067                           ; BSR set to: 0
 32068  006878  0012               	return	
 32069  00687A                     __end_of_UartWriteByte:
 32070                           	opt stack 0
 32071                           tosu	equ	0xFFF
 32072                           tosh	equ	0xFFE
 32073                           tosl	equ	0xFFD
 32074                           pclath	equ	0xFFA
 32075                           tblptru	equ	0xFF8
 32076                           tblptrh	equ	0xFF7
 32077                           tblptrl	equ	0xFF6
 32078                           tablat	equ	0xFF5
 32079                           prodh	equ	0xFF4
 32080                           prodl	equ	0xFF3
 32081                           intcon	equ	0xFF2
 32082                           intcon2	equ	0xFF1
 32083                           intcon3	equ	0xFF0
 32084                           indf0	equ	0xFEF
 32085                           postinc0	equ	0xFEE
 32086                           plusw0	equ	0xFEB
 32087                           fsr0h	equ	0xFEA
 32088                           fsr0l	equ	0xFE9
 32089                           wreg	equ	0xFE8
 32090                           indf1	equ	0xFE7
 32091                           postinc1	equ	0xFE6
 32092                           postdec1	equ	0xFE5
 32093                           plusw1	equ	0xFE3
 32094                           fsr1h	equ	0xFE2
 32095                           fsr1l	equ	0xFE1
 32096                           indf2	equ	0xFDF
 32097                           postinc2	equ	0xFDE
 32098                           postdec2	equ	0xFDD
 32099                           plusw2	equ	0xFDB
 32100                           fsr2h	equ	0xFDA
 32101                           fsr2l	equ	0xFD9
 32102                           status	equ	0xFD8
 32103                           
 32104 ;; *************** function _UartTxBufferStatus *****************
 32105 ;; Defined at:
 32106 ;;		line 223 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 32107 ;; Parameters:    Size  Location     Type
 32108 ;;  Module          1    wreg     unsigned char 
 32109 ;; Auto vars:     Size  Location     Type
 32110 ;;  Module          1   30[BANK0 ] unsigned char 
 32111 ;;  TxBufferStat    1   31[BANK0 ] enum E9037
 32112 ;; Return value:  Size  Location     Type
 32113 ;;                  1    wreg      enum E9037
 32114 ;; Registers used:
 32115 ;;		wreg, status,2, status,0
 32116 ;; Tracked objects:
 32117 ;;		On entry : 0/0
 32118 ;;		On exit  : 0/0
 32119 ;;		Unchanged: 0/0
 32120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32121 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32122 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32123 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32124 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32125 ;;Total ram usage:        3 bytes
 32126 ;; Hardware stack levels used:    1
 32127 ;; Hardware stack levels required when called:   11
 32128 ;; This function calls:
 32129 ;;		Nothing
 32130 ;; This function is called by:
 32131 ;;		_Uart_WriteConstString
 32132 ;;		_Uart_WriteString
 32133 ;;		_Uart_WriteStringLen
 32134 ;; This function uses a non-reentrant model
 32135 ;;
 32136                           
 32137                           	psect	text147
 32138  005E5E                     __ptext147:
 32139                           	opt stack 0
 32140  005E5E                     _UartTxBufferStatus:
 32141                           	opt stack 11
 32142                           
 32143                           ; BSR set to: 0
 32144                           ;incstack = 0
 32145                           ;UartTxBufferStatus@Module stored from wreg
 32146  005E5E  0100               	movlb	0	; () banked
 32147  005E60  6F7E               	movwf	UartTxBufferStatus@Module& (0+255),b
 32148                           
 32149                           ;uart_drv.c: 225: TxBufferStatusType TxBufferStatus = TxBufferNotFull;
 32150  005E62  0E00               	movlw	0
 32151  005E64  0100               	movlb	0	; () banked
 32152  005E66  6F7F               	movwf	UartTxBufferStatus@TxBufferStatus& (0+255),b
 32153                           
 32154                           ; BSR set to: 0
 32155                           ;uart_drv.c: 227: if (Module == ((UINT8)(1)))
 32156  005E68  057E               	decf	UartTxBufferStatus@Module& (0+255),w,b
 32157  005E6A  A4D8               	btfss	status,2,c
 32158  005E6C  D00B               	goto	l651
 32159                           
 32160                           ; BSR set to: 0
 32161                           ;uart_drv.c: 228: {
 32162                           ;uart_drv.c: 230: if (((TXSTA1 >> ((UINT8)(1))) & ((UINT8)(0x01))) == ((UINT8)(0)))
 32163  005E6E  CFAD F07D          	movff	4013,??_UartTxBufferStatus	;volatile
 32164  005E72  90D8               	bcf	status,0,c
 32165  005E74  337D               	rrcf	??_UartTxBufferStatus& (0+255),f,b
 32166  005E76  B17D               	btfsc	??_UartTxBufferStatus& (0+255),0,b
 32167  005E78  D002               	goto	l652
 32168  005E7A                     u11510:
 32169                           
 32170                           ; BSR set to: 0
 32171                           ;uart_drv.c: 231: {
 32172                           ;uart_drv.c: 232: TxBufferStatus = TxBufferFull;
 32173  005E7A  0E01               	movlw	1
 32174  005E7C  D014               	goto	L75
 32175  005E7E                     l652:
 32176                           
 32177                           ; BSR set to: 0
 32178                           ;uart_drv.c: 234: else if (((TXSTA1 >> ((UINT8)(1))) & ((UINT8)(0x01))) == ((UINT8)(1)))
 32179                           
 32180                           ; BSR set to: 0
 32181  005E7E  CFAD F07D          	movff	4013,??_UartTxBufferStatus	;volatile
 32182  005E82  D00C               	goto	L104
 32183  005E84                     l651:
 32184                           
 32185                           ; BSR set to: 0
 32186                           ;uart_drv.c: 243: else if (Module == ((UINT8)(2)))
 32187                           
 32188                           ; BSR set to: 0
 32189  005E84  0E02               	movlw	2
 32190  005E86  197E               	xorwf	UartTxBufferStatus@Module& (0+255),w,b
 32191  005E88  A4D8               	btfss	status,2,c
 32192  005E8A  D00E               	goto	l660
 32193                           
 32194                           ; BSR set to: 0
 32195                           ;uart_drv.c: 244: {
 32196                           ;uart_drv.c: 246: if (((TXSTA2 >> ((UINT8)(1))) & ((UINT8)(0x01))) == ((UINT8)(0)))
 32197  005E8C  CFA8 F07D          	movff	4008,??_UartTxBufferStatus	;volatile
 32198  005E90  90D8               	bcf	status,0,c
 32199  005E92  337D               	rrcf	??_UartTxBufferStatus& (0+255),f,b
 32200  005E94  A17D               	btfss	??_UartTxBufferStatus& (0+255),0,b
 32201  005E96  D7F1               	goto	u11510
 32202                           
 32203                           ; BSR set to: 0
 32204                           ;uart_drv.c: 250: else if (((TXSTA2 >> ((UINT8)(1))) & ((UINT8)(0x01))) == ((UINT8)(1)))
 32205                           
 32206                           ; BSR set to: 0
 32207                           
 32208                           ;uart_drv.c: 249: }
 32209                           
 32210                           ; BSR set to: 0
 32211                           ;uart_drv.c: 247: {
 32212                           ;uart_drv.c: 248: TxBufferStatus = TxBufferFull;
 32213  005E98  CFA8 F07D          	movff	4008,??_UartTxBufferStatus	;volatile
 32214  005E9C                     L104:
 32215  005E9C  90D8               	bcf	status,0,c
 32216  005E9E  337D               	rrcf	??_UartTxBufferStatus& (0+255),f,b
 32217  005EA0  A17D               	btfss	??_UartTxBufferStatus& (0+255),0,b
 32218  005EA2  D002               	goto	l660
 32219                           
 32220                           ; BSR set to: 0
 32221                           ;uart_drv.c: 251: {
 32222                           ;uart_drv.c: 252: TxBufferStatus = TxBufferEmpty;
 32223  005EA4  0E02               	movlw	2
 32224  005EA6                     L75:
 32225  005EA6  6F7F               	movwf	UartTxBufferStatus@TxBufferStatus& (0+255),b
 32226  005EA8                     l660:
 32227                           
 32228                           ; BSR set to: 0
 32229                           ;uart_drv.c: 257: }
 32230                           ;uart_drv.c: 258: }
 32231                           ;uart_drv.c: 260: return TxBufferStatus;
 32232                           
 32233                           ; BSR set to: 0
 32234                           
 32235                           ; BSR set to: 0
 32236                           
 32237                           ; BSR set to: 0
 32238                           
 32239                           ; BSR set to: 0
 32240                           
 32241                           ;uart_drv.c: 254: else
 32242                           ;uart_drv.c: 255: {
 32243                           
 32244                           ; BSR set to: 0
 32245  005EA8  517F               	movf	UartTxBufferStatus@TxBufferStatus& (0+255),w,b
 32246  005EAA  0012               	return	
 32247  005EAC                     __end_of_UartTxBufferStatus:
 32248                           	opt stack 0
 32249                           tosu	equ	0xFFF
 32250                           tosh	equ	0xFFE
 32251                           tosl	equ	0xFFD
 32252                           pclath	equ	0xFFA
 32253                           tblptru	equ	0xFF8
 32254                           tblptrh	equ	0xFF7
 32255                           tblptrl	equ	0xFF6
 32256                           tablat	equ	0xFF5
 32257                           prodh	equ	0xFF4
 32258                           prodl	equ	0xFF3
 32259                           intcon	equ	0xFF2
 32260                           intcon2	equ	0xFF1
 32261                           intcon3	equ	0xFF0
 32262                           indf0	equ	0xFEF
 32263                           postinc0	equ	0xFEE
 32264                           plusw0	equ	0xFEB
 32265                           fsr0h	equ	0xFEA
 32266                           fsr0l	equ	0xFE9
 32267                           wreg	equ	0xFE8
 32268                           indf1	equ	0xFE7
 32269                           postinc1	equ	0xFE6
 32270                           postdec1	equ	0xFE5
 32271                           plusw1	equ	0xFE3
 32272                           fsr1h	equ	0xFE2
 32273                           fsr1l	equ	0xFE1
 32274                           indf2	equ	0xFDF
 32275                           postinc2	equ	0xFDE
 32276                           postdec2	equ	0xFDD
 32277                           plusw2	equ	0xFDB
 32278                           fsr2h	equ	0xFDA
 32279                           fsr2l	equ	0xFD9
 32280                           status	equ	0xFD8
 32281                           
 32282 ;; *************** function _StringCopy *****************
 32283 ;; Defined at:
 32284 ;;		line 104 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/sf.c"
 32285 ;; Parameters:    Size  Location     Type
 32286 ;;  SourceStr       2   37[BANK0 ] PTR unsigned char 
 32287 ;;		 -> delCmdFsm@emptyNumber(13), memoryPreamble(4), smsText(20), STR_15(20), 
 32288 ;;		 -> STR_9(21), MessageText(50), PhoneNumber(20), STR_5(10), 
 32289 ;;		 -> Mdm_SmsRx.HeaderBuffer(80), Mdm_SmsRx(102), callerNumber(13), RxBuffer(400), 
 32290 ;;  DestStr         2   39[BANK0 ] PTR unsigned char 
 32291 ;;		 -> receivedNumber(13), smsText(20), EepromBuffer(15), HttpGetMethod@UartMessage(200), 
 32292 ;;		 -> InitGprsNetwork@UartMessage(50), MessageText(50), PhoneNumber(20), SendSmsSm@UartMessage(50), 
 32293 ;;		 -> Mdm_SmsRx(102), callerNumber(13), 
 32294 ;;  Len             2   41[BANK0 ] unsigned short 
 32295 ;; Auto vars:     Size  Location     Type
 32296 ;;  Index           2   45[BANK0 ] unsigned short 
 32297 ;; Return value:  Size  Location     Type
 32298 ;;                  1    wreg      void 
 32299 ;; Registers used:
 32300 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 32301 ;; Tracked objects:
 32302 ;;		On entry : 0/0
 32303 ;;		On exit  : 0/0
 32304 ;;		Unchanged: 0/0
 32305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32306 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32307 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32308 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32309 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32310 ;;Total ram usage:       10 bytes
 32311 ;; Hardware stack levels used:    1
 32312 ;; Hardware stack levels required when called:   11
 32313 ;; This function calls:
 32314 ;;		Nothing
 32315 ;; This function is called by:
 32316 ;;		_ModemEvtParser
 32317 ;;		_GetSmsSm
 32318 ;;		_SendSmsSm
 32319 ;;		_Mdm_GetSmsData
 32320 ;;		_InitGprsNetwork
 32321 ;;		_HttpGetMethod
 32322 ;;		_Eeprom_Write
 32323 ;;		_detectCmd
 32324 ;;		_Mdm_SendSmsData
 32325 ;; This function uses a non-reentrant model
 32326 ;;
 32327                           
 32328                           	psect	text148
 32329  0057A8                     __ptext148:
 32330                           	opt stack 0
 32331  0057A8                     _StringCopy:
 32332                           	opt stack 13
 32333                           
 32334                           ;sf.c: 106: UINT16 Index = 0;
 32335                           
 32336                           ; BSR set to: 0
 32337                           ;incstack = 0
 32338  0057A8  0E00               	movlw	0
 32339  0057AA  0100               	movlb	0	; () banked
 32340  0057AC  6F8E               	movwf	(StringCopy@Index+1)& (0+255),b
 32341  0057AE  0E00               	movlw	0
 32342  0057B0  6F8D               	movwf	StringCopy@Index& (0+255),b
 32343                           
 32344                           ;sf.c: 109: for (Index = 0; Index < Len; Index++)
 32345  0057B2  0E00               	movlw	0
 32346  0057B4  6F8E               	movwf	(StringCopy@Index+1)& (0+255),b
 32347  0057B6  0E00               	movlw	0
 32348  0057B8  6F8D               	movwf	StringCopy@Index& (0+255),b
 32349  0057BA  D020               	goto	l2256
 32350  0057BC                     
 32351                           ; BSR set to: 0
 32352                           ;sf.c: 110: {
 32353                           ;sf.c: 111: DestStr[Index] = SourceStr[Index];
 32354                           
 32355                           ; BSR set to: 0
 32356  0057BC  518D               	movf	StringCopy@Index& (0+255),w,b
 32357  0057BE  2585               	addwf	StringCopy@SourceStr& (0+255),w,b
 32358  0057C0  6F8B               	movwf	??_StringCopy& (0+255),b
 32359  0057C2  518E               	movf	(StringCopy@Index+1)& (0+255),w,b
 32360  0057C4  2186               	addwfc	(StringCopy@SourceStr+1)& (0+255),w,b
 32361  0057C6  6F8C               	movwf	(??_StringCopy+1)& (0+255),b
 32362  0057C8  C08B  FFF6         	movff	??_StringCopy,tblptrl
 32363  0057CC  C08C  FFF7         	movff	??_StringCopy+1,tblptrh
 32364  0057D0  6AF8               	clrf	tblptru,c
 32365  0057D2  518D               	movf	StringCopy@Index& (0+255),w,b
 32366  0057D4  2587               	addwf	StringCopy@DestStr& (0+255),w,b
 32367  0057D6  6ED9               	movwf	fsr2l,c
 32368  0057D8  518E               	movf	(StringCopy@Index+1)& (0+255),w,b
 32369  0057DA  2188               	addwfc	(StringCopy@DestStr+1)& (0+255),w,b
 32370  0057DC  6EDA               	movwf	fsr2h,c
 32371  0057DE  0E0E               	movlw	(high __ramtop+-1)
 32372  0057E0  64F7               	cpfsgt	tblptrh,c
 32373  0057E2  D003               	bra	u12237
 32374  0057E4  0008               	tblrd		*
 32375  0057E6  50F5               	movf	tablat,w,c
 32376  0057E8  D005               	bra	u12230
 32377  0057EA                     u12237:
 32378  0057EA  CFF6 FFE9          	movff	tblptrl,fsr0l
 32379  0057EE  CFF7 FFEA          	movff	tblptrh,fsr0h
 32380  0057F2  50EF               	movf	indf0,w,c
 32381  0057F4                     u12230:
 32382  0057F4  6EDF               	movwf	indf2,c
 32383  0057F6  0100               	movlb	0	; () banked
 32384  0057F8  4B8D               	infsnz	StringCopy@Index& (0+255),f,b
 32385  0057FA  2B8E               	incf	(StringCopy@Index+1)& (0+255),f,b
 32386  0057FC                     l2256:
 32387                           
 32388                           ; BSR set to: 0
 32389                           
 32390                           ; BSR set to: 0
 32391  0057FC  5189               	movf	StringCopy@Len& (0+255),w,b
 32392  0057FE  5D8D               	subwf	StringCopy@Index& (0+255),w,b
 32393  005800  518A               	movf	(StringCopy@Len+1)& (0+255),w,b
 32394  005802  598E               	subwfb	(StringCopy@Index+1)& (0+255),w,b
 32395  005804  B0D8               	btfsc	status,0,c
 32396  005806  0012               	return	
 32397  005808  D7D9               	goto	l2257
 32398  00580A                     __end_of_StringCopy:
 32399                           	opt stack 0
 32400                           tosu	equ	0xFFF
 32401                           tosh	equ	0xFFE
 32402                           tosl	equ	0xFFD
 32403                           pclath	equ	0xFFA
 32404                           tblptru	equ	0xFF8
 32405                           tblptrh	equ	0xFF7
 32406                           tblptrl	equ	0xFF6
 32407                           tablat	equ	0xFF5
 32408                           prodh	equ	0xFF4
 32409                           prodl	equ	0xFF3
 32410                           intcon	equ	0xFF2
 32411                           intcon2	equ	0xFF1
 32412                           intcon3	equ	0xFF0
 32413                           indf0	equ	0xFEF
 32414                           postinc0	equ	0xFEE
 32415                           plusw0	equ	0xFEB
 32416                           fsr0h	equ	0xFEA
 32417                           fsr0l	equ	0xFE9
 32418                           wreg	equ	0xFE8
 32419                           indf1	equ	0xFE7
 32420                           postinc1	equ	0xFE6
 32421                           postdec1	equ	0xFE5
 32422                           plusw1	equ	0xFE3
 32423                           fsr1h	equ	0xFE2
 32424                           fsr1l	equ	0xFE1
 32425                           indf2	equ	0xFDF
 32426                           postinc2	equ	0xFDE
 32427                           postdec2	equ	0xFDD
 32428                           plusw2	equ	0xFDB
 32429                           fsr2h	equ	0xFDA
 32430                           fsr2l	equ	0xFD9
 32431                           status	equ	0xFD8
 32432                           
 32433 ;; *************** function _OsTmr_StartTimer *****************
 32434 ;; Defined at:
 32435 ;;		line 118 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 32436 ;; Parameters:    Size  Location     Type
 32437 ;;  Timer           2   33[BANK0 ] PTR struct _SwTimerType
 32438 ;;		 -> Term_MainSm@TermDelay(11), Terminal@SwTimer(11), I2cSlv_QueryI2cData@TimeoutTimer(11), I2cSlv_QueryI2cData@Query
      +Timer(11), 
 32439 ;;		 -> ConnWait(11), ConnTimeout(11), SendSmsSm@SwTimer(11), CheckModem@Timeout(11), 
 32440 ;;  Timeout         4   35[BANK0 ] unsigned long 
 32441 ;; Auto vars:     Size  Location     Type
 32442 ;;		None
 32443 ;; Return value:  Size  Location     Type
 32444 ;;                  1    wreg      void 
 32445 ;; Registers used:
 32446 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 32447 ;; Tracked objects:
 32448 ;;		On entry : 0/0
 32449 ;;		On exit  : 0/0
 32450 ;;		Unchanged: 0/0
 32451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32452 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32453 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32455 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32456 ;;Total ram usage:        6 bytes
 32457 ;; Hardware stack levels used:    1
 32458 ;; Hardware stack levels required when called:   12
 32459 ;; This function calls:
 32460 ;;		_GetOsTickCounter
 32461 ;; This function is called by:
 32462 ;;		_OsTmr_Wait
 32463 ;;		_CheckModem
 32464 ;;		_SendSmsSm
 32465 ;;		_InitGprsNetwork
 32466 ;;		_HttpGetMethod
 32467 ;;		_I2cSlv_QueryI2cData
 32468 ;;		_Term_MainSm
 32469 ;; This function uses a non-reentrant model
 32470 ;;
 32471                           
 32472                           	psect	text149
 32473  005868                     __ptext149:
 32474                           	opt stack 0
 32475  005868                     _OsTmr_StartTimer:
 32476                           	opt stack 12
 32477                           
 32478                           ;os_timers.c: 121: Timer->Status = SwTmrNotExpired;
 32479                           
 32480                           ; BSR set to: 0
 32481                           ;incstack = 0
 32482  005868  0100               	movlb	0	; () banked
 32483  00586A  EE20 F001          	lfsr	2,1
 32484  00586E  5181               	movf	OsTmr_StartTimer@Timer& (0+255),w,b
 32485  005870  26D9               	addwf	fsr2l,f,c
 32486  005872  5182               	movf	(OsTmr_StartTimer@Timer+1)& (0+255),w,b
 32487  005874  22DA               	addwfc	fsr2h,f,c
 32488  005876  0E00               	movlw	0
 32489  005878  6EDF               	movwf	indf2,c
 32490                           
 32491                           ; BSR set to: 0
 32492                           ;os_timers.c: 123: Timer->StartTime = GetOsTickCounter();
 32493  00587A  EC26  F035         	call	_GetOsTickCounter	;wreg free
 32494  00587E  0100               	movlb	0	; () banked
 32495  005880  EE20 F002          	lfsr	2,2
 32496  005884  5181               	movf	OsTmr_StartTimer@Timer& (0+255),w,b
 32497  005886  26D9               	addwf	fsr2l,f,c
 32498  005888  5182               	movf	(OsTmr_StartTimer@Timer+1)& (0+255),w,b
 32499  00588A  22DA               	addwfc	fsr2h,f,c
 32500  00588C  C07D  FFDE         	movff	?_GetOsTickCounter,postinc2
 32501  005890  C07E  FFDE         	movff	?_GetOsTickCounter+1,postinc2
 32502  005894  C07F  FFDE         	movff	?_GetOsTickCounter+2,postinc2
 32503  005898  C080  FFDE         	movff	?_GetOsTickCounter+3,postinc2
 32504                           
 32505                           ; BSR set to: 0
 32506                           ;os_timers.c: 125: Timer->TargetTime = Timeout;
 32507  00589C  EE20 F006          	lfsr	2,6
 32508  0058A0  5181               	movf	OsTmr_StartTimer@Timer& (0+255),w,b
 32509  0058A2  26D9               	addwf	fsr2l,f,c
 32510  0058A4  5182               	movf	(OsTmr_StartTimer@Timer+1)& (0+255),w,b
 32511  0058A6  22DA               	addwfc	fsr2h,f,c
 32512  0058A8  C083  FFDE         	movff	OsTmr_StartTimer@Timeout,postinc2
 32513  0058AC  C084  FFDE         	movff	OsTmr_StartTimer@Timeout+1,postinc2
 32514  0058B0  C085  FFDE         	movff	OsTmr_StartTimer@Timeout+2,postinc2
 32515  0058B4  C086  FFDE         	movff	OsTmr_StartTimer@Timeout+3,postinc2
 32516                           
 32517                           ; BSR set to: 0
 32518                           ;os_timers.c: 127: Timer->Enabled = 1u;
 32519  0058B8  C081  FFD9         	movff	OsTmr_StartTimer@Timer,fsr2l
 32520  0058BC  C082  FFDA         	movff	OsTmr_StartTimer@Timer+1,fsr2h
 32521  0058C0  0E01               	movlw	1
 32522  0058C2  6EDF               	movwf	indf2,c
 32523                           
 32524                           ; BSR set to: 0
 32525  0058C4  0012               	return		;funcret
 32526  0058C6                     __end_of_OsTmr_StartTimer:
 32527                           	opt stack 0
 32528                           tosu	equ	0xFFF
 32529                           tosh	equ	0xFFE
 32530                           tosl	equ	0xFFD
 32531                           pclath	equ	0xFFA
 32532                           tblptru	equ	0xFF8
 32533                           tblptrh	equ	0xFF7
 32534                           tblptrl	equ	0xFF6
 32535                           tablat	equ	0xFF5
 32536                           prodh	equ	0xFF4
 32537                           prodl	equ	0xFF3
 32538                           intcon	equ	0xFF2
 32539                           intcon2	equ	0xFF1
 32540                           intcon3	equ	0xFF0
 32541                           indf0	equ	0xFEF
 32542                           postinc0	equ	0xFEE
 32543                           plusw0	equ	0xFEB
 32544                           fsr0h	equ	0xFEA
 32545                           fsr0l	equ	0xFE9
 32546                           wreg	equ	0xFE8
 32547                           indf1	equ	0xFE7
 32548                           postinc1	equ	0xFE6
 32549                           postdec1	equ	0xFE5
 32550                           plusw1	equ	0xFE3
 32551                           fsr1h	equ	0xFE2
 32552                           fsr1l	equ	0xFE1
 32553                           indf2	equ	0xFDF
 32554                           postinc2	equ	0xFDE
 32555                           postdec2	equ	0xFDD
 32556                           plusw2	equ	0xFDB
 32557                           fsr2h	equ	0xFDA
 32558                           fsr2l	equ	0xFD9
 32559                           status	equ	0xFD8
 32560                           
 32561 ;; *************** function _OsTmr_GetTimerStatus *****************
 32562 ;; Defined at:
 32563 ;;		line 193 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 32564 ;; Parameters:    Size  Location     Type
 32565 ;;  Timer           2   53[BANK0 ] PTR struct _SwTimerType
 32566 ;;		 -> Term_MainSm@TermDelay(11), Terminal@SwTimer(11), I2cSlv_QueryI2cData@TimeoutTimer(11), I2cSlv_QueryI2cData@Query
      +Timer(11), 
 32567 ;;		 -> ConnWait(11), ConnTimeout(11), SendSmsSm@SwTimer(11), CheckModem@Timeout(11), 
 32568 ;; Auto vars:     Size  Location     Type
 32569 ;;		None
 32570 ;; Return value:  Size  Location     Type
 32571 ;;                  1    wreg      enum E7740
 32572 ;; Registers used:
 32573 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 32574 ;; Tracked objects:
 32575 ;;		On entry : 0/0
 32576 ;;		On exit  : 0/0
 32577 ;;		Unchanged: 0/0
 32578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32579 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32580 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32581 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32582 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32583 ;;Total ram usage:        6 bytes
 32584 ;; Hardware stack levels used:    1
 32585 ;; Hardware stack levels required when called:   13
 32586 ;; This function calls:
 32587 ;;		_GetElapsedTime
 32588 ;; This function is called by:
 32589 ;;		_OsTmr_Wait
 32590 ;;		_CheckModem
 32591 ;;		_SendSmsSm
 32592 ;;		_InitGprsNetwork
 32593 ;;		_HttpGetMethod
 32594 ;;		_I2cSlv_QueryI2cData
 32595 ;;		_Term_MainSm
 32596 ;; This function uses a non-reentrant model
 32597 ;;
 32598                           
 32599                           	psect	text150
 32600  004FD2                     __ptext150:
 32601                           	opt stack 0
 32602  004FD2                     _OsTmr_GetTimerStatus:
 32603                           	opt stack 11
 32604                           
 32605                           ;os_timers.c: 196: if (Timer->Enabled == 1u)
 32606                           
 32607                           ; BSR set to: 0
 32608                           ;incstack = 0
 32609  004FD2  C095  FFD9         	movff	OsTmr_GetTimerStatus@Timer,fsr2l
 32610  004FD6  C096  FFDA         	movff	OsTmr_GetTimerStatus@Timer+1,fsr2h
 32611  004FDA  04DE               	decf	postinc2,w,c
 32612  004FDC  A4D8               	btfss	status,2,c
 32613  004FDE  D030               	goto	l864
 32614                           
 32615                           ;os_timers.c: 197: {
 32616                           ;os_timers.c: 199: if (GetElapsedTime(Timer->StartTime) >= Timer->TargetTime)
 32617  004FE0  0100               	movlb	0	; () banked
 32618  004FE2  EE20 F006          	lfsr	2,6
 32619  004FE6  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 32620  004FE8  26D9               	addwf	fsr2l,f,c
 32621  004FEA  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 32622  004FEC  22DA               	addwfc	fsr2h,f,c
 32623  004FEE  EE10 F002          	lfsr	1,2
 32624  004FF2  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 32625  004FF4  26E1               	addwf	fsr1l,f,c
 32626  004FF6  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 32627  004FF8  22E2               	addwfc	fsr1h,f,c
 32628  004FFA  CFE6 F081          	movff	postinc1,GetElapsedTime@StartTime
 32629  004FFE  CFE6 F082          	movff	postinc1,GetElapsedTime@StartTime+1
 32630  005002  CFE6 F083          	movff	postinc1,GetElapsedTime@StartTime+2
 32631  005006  CFE6 F084          	movff	postinc1,GetElapsedTime@StartTime+3
 32632  00500A  EC70  F01F         	call	_GetElapsedTime	;wreg free
 32633  00500E  50DE               	movf	postinc2,w,c
 32634  005010  0100               	movlb	0	; () banked
 32635  005012  5D81               	subwf	?_GetElapsedTime& (0+255),w,b
 32636  005014  50DE               	movf	postinc2,w,c
 32637  005016  5982               	subwfb	(?_GetElapsedTime+1)& (0+255),w,b
 32638  005018  50DE               	movf	postinc2,w,c
 32639  00501A  5983               	subwfb	(?_GetElapsedTime+2)& (0+255),w,b
 32640  00501C  50DE               	movf	postinc2,w,c
 32641  00501E  5984               	subwfb	(?_GetElapsedTime+3)& (0+255),w,b
 32642  005020  A0D8               	btfss	status,0,c
 32643  005022  D017               	goto	l867
 32644                           
 32645                           ; BSR set to: 0
 32646                           ;os_timers.c: 200: {
 32647                           ;os_timers.c: 202: Timer->Enabled = 0u;
 32648  005024  C095  FFD9         	movff	OsTmr_GetTimerStatus@Timer,fsr2l
 32649  005028  C096  FFDA         	movff	OsTmr_GetTimerStatus@Timer+1,fsr2h
 32650  00502C  0E00               	movlw	0
 32651  00502E  6EDF               	movwf	indf2,c
 32652                           
 32653                           ; BSR set to: 0
 32654                           ;os_timers.c: 204: Timer->Status = SwTimerExpired;
 32655  005030  EE20 F001          	lfsr	2,1
 32656  005034  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 32657  005036  26D9               	addwf	fsr2l,f,c
 32658  005038  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 32659  00503A  22DA               	addwfc	fsr2h,f,c
 32660  00503C  0E01               	movlw	1
 32661  00503E  D008               	goto	L105
 32662  005040                     l864:
 32663                           
 32664                           ;os_timers.c: 211: else
 32665                           ;os_timers.c: 212: {
 32666                           ;os_timers.c: 214: Timer->Status = SwTimerDisabled;
 32667                           
 32668                           ; BSR set to: 0
 32669  005040  0100               	movlb	0	; () banked
 32670  005042  EE20 F001          	lfsr	2,1
 32671  005046  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 32672  005048  26D9               	addwf	fsr2l,f,c
 32673  00504A  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 32674  00504C  22DA               	addwfc	fsr2h,f,c
 32675  00504E  0E02               	movlw	2
 32676  005050                     L105:
 32677  005050  6EDF               	movwf	indf2,c
 32678  005052                     l867:
 32679                           
 32680                           ; BSR set to: 0
 32681                           ;os_timers.c: 215: }
 32682                           ;os_timers.c: 218: return Timer->Status;
 32683  005052  EE20 F001          	lfsr	2,1
 32684  005056  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 32685  005058  26D9               	addwf	fsr2l,f,c
 32686  00505A  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 32687  00505C  22DA               	addwfc	fsr2h,f,c
 32688  00505E  50DF               	movf	indf2,w,c
 32689  005060  0012               	return	
 32690  005062                     __end_of_OsTmr_GetTimerStatus:
 32691                           	opt stack 0
 32692                           tosu	equ	0xFFF
 32693                           tosh	equ	0xFFE
 32694                           tosl	equ	0xFFD
 32695                           pclath	equ	0xFFA
 32696                           tblptru	equ	0xFF8
 32697                           tblptrh	equ	0xFF7
 32698                           tblptrl	equ	0xFF6
 32699                           tablat	equ	0xFF5
 32700                           prodh	equ	0xFF4
 32701                           prodl	equ	0xFF3
 32702                           intcon	equ	0xFF2
 32703                           intcon2	equ	0xFF1
 32704                           intcon3	equ	0xFF0
 32705                           indf0	equ	0xFEF
 32706                           postinc0	equ	0xFEE
 32707                           plusw0	equ	0xFEB
 32708                           fsr0h	equ	0xFEA
 32709                           fsr0l	equ	0xFE9
 32710                           wreg	equ	0xFE8
 32711                           indf1	equ	0xFE7
 32712                           postinc1	equ	0xFE6
 32713                           postdec1	equ	0xFE5
 32714                           plusw1	equ	0xFE3
 32715                           fsr1h	equ	0xFE2
 32716                           fsr1l	equ	0xFE1
 32717                           indf2	equ	0xFDF
 32718                           postinc2	equ	0xFDE
 32719                           postdec2	equ	0xFDD
 32720                           plusw2	equ	0xFDB
 32721                           fsr2h	equ	0xFDA
 32722                           fsr2l	equ	0xFD9
 32723                           status	equ	0xFD8
 32724                           
 32725 ;; *************** function _GetElapsedTime *****************
 32726 ;; Defined at:
 32727 ;;		line 84 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 32728 ;; Parameters:    Size  Location     Type
 32729 ;;  StartTime       4   33[BANK0 ] unsigned long 
 32730 ;; Auto vars:     Size  Location     Type
 32731 ;;  CurrentTimes    4   49[BANK0 ] unsigned long 
 32732 ;;  TimeValue       4   45[BANK0 ] unsigned long 
 32733 ;; Return value:  Size  Location     Type
 32734 ;;                  4   33[BANK0 ] unsigned long 
 32735 ;; Registers used:
 32736 ;;		wreg, status,2, status,0, cstack
 32737 ;; Tracked objects:
 32738 ;;		On entry : 0/0
 32739 ;;		On exit  : 0/0
 32740 ;;		Unchanged: 0/0
 32741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32742 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32743 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32744 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32745 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32746 ;;Total ram usage:       20 bytes
 32747 ;; Hardware stack levels used:    1
 32748 ;; Hardware stack levels required when called:   12
 32749 ;; This function calls:
 32750 ;;		_GetOsTickCounter
 32751 ;; This function is called by:
 32752 ;;		_OsTmr_GetTimerStatus
 32753 ;;		_OsTmr_GetRemainingTime
 32754 ;; This function uses a non-reentrant model
 32755 ;;
 32756                           
 32757                           	psect	text151
 32758  003EE0                     __ptext151:
 32759                           	opt stack 0
 32760  003EE0                     _GetElapsedTime:
 32761                           	opt stack 11
 32762                           
 32763                           ;os_timers.c: 86: UINT32 CurrentTimestamp;
 32764                           ;os_timers.c: 87: UINT32 TimeValue;
 32765                           ;os_timers.c: 90: CurrentTimestamp = GetOsTickCounter();
 32766                           
 32767                           ; BSR set to: 0
 32768                           ;incstack = 0
 32769  003EE0  EC26  F035         	call	_GetOsTickCounter	;wreg free
 32770  003EE4  C07D  F091         	movff	?_GetOsTickCounter,GetElapsedTime@CurrentTimestamp
 32771  003EE8  C07E  F092         	movff	?_GetOsTickCounter+1,GetElapsedTime@CurrentTimestamp+1
 32772  003EEC  C07F  F093         	movff	?_GetOsTickCounter+2,GetElapsedTime@CurrentTimestamp+2
 32773  003EF0  C080  F094         	movff	?_GetOsTickCounter+3,GetElapsedTime@CurrentTimestamp+3
 32774                           
 32775                           ;os_timers.c: 93: if (CurrentTimestamp >= StartTime)
 32776  003EF4  0100               	movlb	0	; () banked
 32777  003EF6  5181               	movf	GetElapsedTime@StartTime& (0+255),w,b
 32778  003EF8  5D91               	subwf	GetElapsedTime@CurrentTimestamp& (0+255),w,b
 32779  003EFA  5182               	movf	(GetElapsedTime@StartTime+1)& (0+255),w,b
 32780  003EFC  5992               	subwfb	(GetElapsedTime@CurrentTimestamp+1)& (0+255),w,b
 32781  003EFE  5183               	movf	(GetElapsedTime@StartTime+2)& (0+255),w,b
 32782  003F00  5993               	subwfb	(GetElapsedTime@CurrentTimestamp+2)& (0+255),w,b
 32783  003F02  5184               	movf	(GetElapsedTime@StartTime+3)& (0+255),w,b
 32784  003F04  5994               	subwfb	(GetElapsedTime@CurrentTimestamp+3)& (0+255),w,b
 32785  003F06  A0D8               	btfss	status,0,c
 32786  003F08  D01D               	goto	l844
 32787                           
 32788                           ; BSR set to: 0
 32789                           ;os_timers.c: 94: {
 32790                           ;os_timers.c: 95: TimeValue = (CurrentTimestamp - StartTime);
 32791  003F0A  C081  F085         	movff	GetElapsedTime@StartTime,??_GetElapsedTime
 32792  003F0E  C082  F086         	movff	GetElapsedTime@StartTime+1,??_GetElapsedTime+1
 32793  003F12  C083  F087         	movff	GetElapsedTime@StartTime+2,??_GetElapsedTime+2
 32794  003F16  C084  F088         	movff	GetElapsedTime@StartTime+3,??_GetElapsedTime+3
 32795  003F1A  1F85               	comf	??_GetElapsedTime& (0+255),f,b
 32796  003F1C  1F86               	comf	(??_GetElapsedTime+1)& (0+255),f,b
 32797  003F1E  1F87               	comf	(??_GetElapsedTime+2)& (0+255),f,b
 32798  003F20  1F88               	comf	(??_GetElapsedTime+3)& (0+255),f,b
 32799  003F22  2B85               	incf	??_GetElapsedTime& (0+255),f,b
 32800  003F24  0E00               	movlw	0
 32801  003F26  2386               	addwfc	(??_GetElapsedTime+1)& (0+255),f,b
 32802  003F28  2387               	addwfc	(??_GetElapsedTime+2)& (0+255),f,b
 32803  003F2A  2388               	addwfc	(??_GetElapsedTime+3)& (0+255),f,b
 32804  003F2C  5191               	movf	GetElapsedTime@CurrentTimestamp& (0+255),w,b
 32805  003F2E  2585               	addwf	??_GetElapsedTime& (0+255),w,b
 32806  003F30  6F8D               	movwf	GetElapsedTime@TimeValue& (0+255),b
 32807  003F32  5192               	movf	(GetElapsedTime@CurrentTimestamp+1)& (0+255),w,b
 32808  003F34  2186               	addwfc	(??_GetElapsedTime+1)& (0+255),w,b
 32809  003F36  6F8E               	movwf	(GetElapsedTime@TimeValue+1)& (0+255),b
 32810  003F38  5193               	movf	(GetElapsedTime@CurrentTimestamp+2)& (0+255),w,b
 32811  003F3A  2187               	addwfc	(??_GetElapsedTime+2)& (0+255),w,b
 32812  003F3C  6F8F               	movwf	(GetElapsedTime@TimeValue+2)& (0+255),b
 32813  003F3E  5194               	movf	(GetElapsedTime@CurrentTimestamp+3)& (0+255),w,b
 32814  003F40  2188               	addwfc	(??_GetElapsedTime+3)& (0+255),w,b
 32815  003F42  D028               	goto	L76
 32816  003F44                     l844:
 32817                           
 32818                           ; BSR set to: 0
 32819                           ;os_timers.c: 97: else
 32820                           ;os_timers.c: 98: {
 32821                           ;os_timers.c: 99: TimeValue = (CurrentTimestamp + 0xFFFFFFFF) - StartTime;
 32822                           
 32823                           ; BSR set to: 0
 32824  003F44  C081  F085         	movff	GetElapsedTime@StartTime,??_GetElapsedTime
 32825  003F48  C082  F086         	movff	GetElapsedTime@StartTime+1,??_GetElapsedTime+1
 32826  003F4C  C083  F087         	movff	GetElapsedTime@StartTime+2,??_GetElapsedTime+2
 32827  003F50  C084  F088         	movff	GetElapsedTime@StartTime+3,??_GetElapsedTime+3
 32828  003F54  1F85               	comf	??_GetElapsedTime& (0+255),f,b
 32829  003F56  1F86               	comf	(??_GetElapsedTime+1)& (0+255),f,b
 32830  003F58  1F87               	comf	(??_GetElapsedTime+2)& (0+255),f,b
 32831  003F5A  1F88               	comf	(??_GetElapsedTime+3)& (0+255),f,b
 32832  003F5C  2B85               	incf	??_GetElapsedTime& (0+255),f,b
 32833  003F5E  0E00               	movlw	0
 32834  003F60  2386               	addwfc	(??_GetElapsedTime+1)& (0+255),f,b
 32835  003F62  2387               	addwfc	(??_GetElapsedTime+2)& (0+255),f,b
 32836  003F64  2388               	addwfc	(??_GetElapsedTime+3)& (0+255),f,b
 32837  003F66  5191               	movf	GetElapsedTime@CurrentTimestamp& (0+255),w,b
 32838  003F68  2585               	addwf	??_GetElapsedTime& (0+255),w,b
 32839  003F6A  6F89               	movwf	(??_GetElapsedTime+4)& (0+255),b
 32840  003F6C  5192               	movf	(GetElapsedTime@CurrentTimestamp+1)& (0+255),w,b
 32841  003F6E  2186               	addwfc	(??_GetElapsedTime+1)& (0+255),w,b
 32842  003F70  6F8A               	movwf	(??_GetElapsedTime+5)& (0+255),b
 32843  003F72  5193               	movf	(GetElapsedTime@CurrentTimestamp+2)& (0+255),w,b
 32844  003F74  2187               	addwfc	(??_GetElapsedTime+2)& (0+255),w,b
 32845  003F76  6F8B               	movwf	(??_GetElapsedTime+6)& (0+255),b
 32846  003F78  5194               	movf	(GetElapsedTime@CurrentTimestamp+3)& (0+255),w,b
 32847  003F7A  2188               	addwfc	(??_GetElapsedTime+3)& (0+255),w,b
 32848  003F7C  6F8C               	movwf	(??_GetElapsedTime+7)& (0+255),b
 32849  003F7E  0EFF               	movlw	255
 32850  003F80  2589               	addwf	(??_GetElapsedTime+4)& (0+255),w,b
 32851  003F82  6F8D               	movwf	GetElapsedTime@TimeValue& (0+255),b
 32852  003F84  0EFF               	movlw	255
 32853  003F86  218A               	addwfc	(??_GetElapsedTime+5)& (0+255),w,b
 32854  003F88  6F8E               	movwf	(GetElapsedTime@TimeValue+1)& (0+255),b
 32855  003F8A  0EFF               	movlw	255
 32856  003F8C  218B               	addwfc	(??_GetElapsedTime+6)& (0+255),w,b
 32857  003F8E  6F8F               	movwf	(GetElapsedTime@TimeValue+2)& (0+255),b
 32858  003F90  0EFF               	movlw	255
 32859  003F92  218C               	addwfc	(??_GetElapsedTime+7)& (0+255),w,b
 32860  003F94                     L76:
 32861  003F94  6F90               	movwf	(GetElapsedTime@TimeValue+3)& (0+255),b
 32862                           
 32863                           ; BSR set to: 0
 32864                           ;os_timers.c: 100: }
 32865                           ;os_timers.c: 102: return TimeValue;
 32866                           
 32867                           ; BSR set to: 0
 32868  003F96  C08D  F081         	movff	GetElapsedTime@TimeValue,?_GetElapsedTime
 32869  003F9A  C08E  F082         	movff	GetElapsedTime@TimeValue+1,?_GetElapsedTime+1
 32870  003F9E  C08F  F083         	movff	GetElapsedTime@TimeValue+2,?_GetElapsedTime+2
 32871  003FA2  C090  F084         	movff	GetElapsedTime@TimeValue+3,?_GetElapsedTime+3
 32872  003FA6  0012               	return	
 32873  003FA8                     __end_of_GetElapsedTime:
 32874                           	opt stack 0
 32875                           tosu	equ	0xFFF
 32876                           tosh	equ	0xFFE
 32877                           tosl	equ	0xFFD
 32878                           pclath	equ	0xFFA
 32879                           tblptru	equ	0xFF8
 32880                           tblptrh	equ	0xFF7
 32881                           tblptrl	equ	0xFF6
 32882                           tablat	equ	0xFF5
 32883                           prodh	equ	0xFF4
 32884                           prodl	equ	0xFF3
 32885                           intcon	equ	0xFF2
 32886                           intcon2	equ	0xFF1
 32887                           intcon3	equ	0xFF0
 32888                           indf0	equ	0xFEF
 32889                           postinc0	equ	0xFEE
 32890                           plusw0	equ	0xFEB
 32891                           fsr0h	equ	0xFEA
 32892                           fsr0l	equ	0xFE9
 32893                           wreg	equ	0xFE8
 32894                           indf1	equ	0xFE7
 32895                           postinc1	equ	0xFE6
 32896                           postdec1	equ	0xFE5
 32897                           plusw1	equ	0xFE3
 32898                           fsr1h	equ	0xFE2
 32899                           fsr1l	equ	0xFE1
 32900                           indf2	equ	0xFDF
 32901                           postinc2	equ	0xFDE
 32902                           postdec2	equ	0xFDD
 32903                           plusw2	equ	0xFDB
 32904                           fsr2h	equ	0xFDA
 32905                           fsr2l	equ	0xFD9
 32906                           status	equ	0xFD8
 32907                           
 32908 ;; *************** function _GetOsTickCounter *****************
 32909 ;; Defined at:
 32910 ;;		line 70 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 32911 ;; Parameters:    Size  Location     Type
 32912 ;;		None
 32913 ;; Auto vars:     Size  Location     Type
 32914 ;;		None
 32915 ;; Return value:  Size  Location     Type
 32916 ;;                  4   29[BANK0 ] unsigned long 
 32917 ;; Registers used:
 32918 ;;		None
 32919 ;; Tracked objects:
 32920 ;;		On entry : 0/0
 32921 ;;		On exit  : 0/0
 32922 ;;		Unchanged: 0/0
 32923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32924 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32925 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32927 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32928 ;;Total ram usage:        4 bytes
 32929 ;; Hardware stack levels used:    1
 32930 ;; Hardware stack levels required when called:   11
 32931 ;; This function calls:
 32932 ;;		Nothing
 32933 ;; This function is called by:
 32934 ;;		_GetElapsedTime
 32935 ;;		_OsTmr_StartTimer
 32936 ;;		_OsTmr_GetElapsedTime
 32937 ;; This function uses a non-reentrant model
 32938 ;;
 32939                           
 32940                           	psect	text152
 32941  006A4C                     __ptext152:
 32942                           	opt stack 0
 32943  006A4C                     _GetOsTickCounter:
 32944                           	opt stack 12
 32945                           
 32946                           ;os_timers.c: 73: return OsTmr_OsTickCounter;
 32947                           
 32948                           ; BSR set to: 0
 32949                           ;incstack = 0
 32950  006A4C  C314  F07D         	movff	_OsTmr_OsTickCounter,?_GetOsTickCounter
 32951  006A50  C315  F07E         	movff	_OsTmr_OsTickCounter+1,?_GetOsTickCounter+1
 32952  006A54  C316  F07F         	movff	_OsTmr_OsTickCounter+2,?_GetOsTickCounter+2
 32953  006A58  C317  F080         	movff	_OsTmr_OsTickCounter+3,?_GetOsTickCounter+3
 32954  006A5C  0012               	return		;funcret
 32955  006A5E                     __end_of_GetOsTickCounter:
 32956                           	opt stack 0
 32957                           tosu	equ	0xFFF
 32958                           tosh	equ	0xFFE
 32959                           tosl	equ	0xFFD
 32960                           pclath	equ	0xFFA
 32961                           tblptru	equ	0xFF8
 32962                           tblptrh	equ	0xFF7
 32963                           tblptrl	equ	0xFF6
 32964                           tablat	equ	0xFF5
 32965                           prodh	equ	0xFF4
 32966                           prodl	equ	0xFF3
 32967                           intcon	equ	0xFF2
 32968                           intcon2	equ	0xFF1
 32969                           intcon3	equ	0xFF0
 32970                           indf0	equ	0xFEF
 32971                           postinc0	equ	0xFEE
 32972                           plusw0	equ	0xFEB
 32973                           fsr0h	equ	0xFEA
 32974                           fsr0l	equ	0xFE9
 32975                           wreg	equ	0xFE8
 32976                           indf1	equ	0xFE7
 32977                           postinc1	equ	0xFE6
 32978                           postdec1	equ	0xFE5
 32979                           plusw1	equ	0xFE3
 32980                           fsr1h	equ	0xFE2
 32981                           fsr1l	equ	0xFE1
 32982                           indf2	equ	0xFDF
 32983                           postinc2	equ	0xFDE
 32984                           postdec2	equ	0xFDD
 32985                           plusw2	equ	0xFDB
 32986                           fsr2h	equ	0xFDA
 32987                           fsr2l	equ	0xFD9
 32988                           status	equ	0xFD8
 32989                           
 32990 ;; *************** function _ClearBuffer *****************
 32991 ;; Defined at:
 32992 ;;		line 124 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/sf.c"
 32993 ;; Parameters:    Size  Location     Type
 32994 ;;  Buffer          2   29[BANK0 ] PTR unsigned char 
 32995 ;;		 -> GsmGprsTerminal@UartBuffer(200), EepromBuffer(15), HttpGetMethod@UartMessage(200), InitGprsNetwork@UartMessage(5
      +0), 
 32996 ;;		 -> Mdm_SmsRx(102), callerNumber(13), RxBuffer(400), 
 32997 ;;  Len             2   31[BANK0 ] unsigned short 
 32998 ;; Auto vars:     Size  Location     Type
 32999 ;;  Index           2   33[BANK0 ] unsigned short 
 33000 ;; Return value:  Size  Location     Type
 33001 ;;                  1    wreg      void 
 33002 ;; Registers used:
 33003 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 33004 ;; Tracked objects:
 33005 ;;		On entry : 0/0
 33006 ;;		On exit  : 0/0
 33007 ;;		Unchanged: 0/0
 33008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33009 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33010 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33012 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33013 ;;Total ram usage:        6 bytes
 33014 ;; Hardware stack levels used:    1
 33015 ;; Hardware stack levels required when called:   11
 33016 ;; This function calls:
 33017 ;;		Nothing
 33018 ;; This function is called by:
 33019 ;;		_GetSmsSm
 33020 ;;		_GetCallerNumber
 33021 ;;		_InitGprsNetwork
 33022 ;;		_HttpGetMethod
 33023 ;;		_Eeprom_Reset
 33024 ;;		_GsmGprsTerminal
 33025 ;; This function uses a non-reentrant model
 33026 ;;
 33027                           
 33028                           	psect	text153
 33029  006406                     __ptext153:
 33030                           	opt stack 0
 33031  006406                     _ClearBuffer:
 33032                           	opt stack 14
 33033                           
 33034                           ;sf.c: 126: UINT16 Index = 0;
 33035                           
 33036                           ;incstack = 0
 33037  006406  0E00               	movlw	0
 33038  006408  0100               	movlb	0	; () banked
 33039  00640A  6F82               	movwf	(ClearBuffer@Index+1)& (0+255),b
 33040  00640C  0E00               	movlw	0
 33041  00640E  6F81               	movwf	ClearBuffer@Index& (0+255),b
 33042                           
 33043                           ;sf.c: 129: for (Index = 0; Index <= Len; Index++)
 33044  006410  0E00               	movlw	0
 33045  006412  6F82               	movwf	(ClearBuffer@Index+1)& (0+255),b
 33046  006414  0E00               	movlw	0
 33047  006416  6F81               	movwf	ClearBuffer@Index& (0+255),b
 33048  006418  D00A               	goto	l2262
 33049  00641A                     
 33050                           ; BSR set to: 0
 33051                           ;sf.c: 130: {
 33052                           ;sf.c: 131: *(Buffer + Index) = 0;
 33053                           
 33054                           ; BSR set to: 0
 33055  00641A  5181               	movf	ClearBuffer@Index& (0+255),w,b
 33056  00641C  257D               	addwf	ClearBuffer@Buffer& (0+255),w,b
 33057  00641E  6ED9               	movwf	fsr2l,c
 33058  006420  5182               	movf	(ClearBuffer@Index+1)& (0+255),w,b
 33059  006422  217E               	addwfc	(ClearBuffer@Buffer+1)& (0+255),w,b
 33060  006424  6EDA               	movwf	fsr2h,c
 33061  006426  0E00               	movlw	0
 33062  006428  6EDF               	movwf	indf2,c
 33063                           
 33064                           ; BSR set to: 0
 33065  00642A  4B81               	infsnz	ClearBuffer@Index& (0+255),f,b
 33066  00642C  2B82               	incf	(ClearBuffer@Index+1)& (0+255),f,b
 33067  00642E                     l2262:
 33068                           
 33069                           ; BSR set to: 0
 33070                           
 33071                           ; BSR set to: 0
 33072  00642E  5181               	movf	ClearBuffer@Index& (0+255),w,b
 33073  006430  5D7F               	subwf	ClearBuffer@Len& (0+255),w,b
 33074  006432  5182               	movf	(ClearBuffer@Index+1)& (0+255),w,b
 33075  006434  5980               	subwfb	(ClearBuffer@Len+1)& (0+255),w,b
 33076  006436  A0D8               	btfss	status,0,c
 33077  006438  0012               	return	
 33078  00643A  D7EF               	goto	l2263
 33079  00643C                     __end_of_ClearBuffer:
 33080                           	opt stack 0
 33081                           tosu	equ	0xFFF
 33082                           tosh	equ	0xFFE
 33083                           tosl	equ	0xFFD
 33084                           pclath	equ	0xFFA
 33085                           tblptru	equ	0xFF8
 33086                           tblptrh	equ	0xFF7
 33087                           tblptrl	equ	0xFF6
 33088                           tablat	equ	0xFF5
 33089                           prodh	equ	0xFF4
 33090                           prodl	equ	0xFF3
 33091                           intcon	equ	0xFF2
 33092                           intcon2	equ	0xFF1
 33093                           intcon3	equ	0xFF0
 33094                           indf0	equ	0xFEF
 33095                           postinc0	equ	0xFEE
 33096                           plusw0	equ	0xFEB
 33097                           fsr0h	equ	0xFEA
 33098                           fsr0l	equ	0xFE9
 33099                           wreg	equ	0xFE8
 33100                           indf1	equ	0xFE7
 33101                           postinc1	equ	0xFE6
 33102                           postdec1	equ	0xFE5
 33103                           plusw1	equ	0xFE3
 33104                           fsr1h	equ	0xFE2
 33105                           fsr1l	equ	0xFE1
 33106                           indf2	equ	0xFDF
 33107                           postinc2	equ	0xFDE
 33108                           postdec2	equ	0xFDD
 33109                           plusw2	equ	0xFDB
 33110                           fsr2h	equ	0xFDA
 33111                           fsr2l	equ	0xFD9
 33112                           status	equ	0xFD8
 33113                           
 33114 ;; *************** function _LedStateMachine *****************
 33115 ;; Defined at:
 33116 ;;		line 235 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 33117 ;; Parameters:    Size  Location     Type
 33118 ;;  Led             1    wreg     unsigned char 
 33119 ;;  LedSts          2   47[BANK0 ] PTR enum E8954
 33120 ;;		 -> Led3Sts(1), Led2Sts(1), Led1Sts(1), 
 33121 ;;  LedOut          2   49[BANK0 ] PTR unsigned char 
 33122 ;;		 -> Led3OutSts(1), Led2OutSts(1), Led1OutSts(1), 
 33123 ;;  LedBlink        2   51[BANK0 ] PTR struct _LedBlinkType
 33124 ;;		 -> Led3Blink(9), Led2Blink(9), Led1Blink(9), 
 33125 ;;  LedPulse        2   53[BANK0 ] PTR struct _LedPulseType
 33126 ;;		 -> Led3Pulse(6), Led2Pulse(6), Led1Pulse(6), 
 33127 ;; Auto vars:     Size  Location     Type
 33128 ;;  Led             1   57[BANK0 ] unsigned char 
 33129 ;;  LedOutSts       1   56[BANK0 ] unsigned char 
 33130 ;; Return value:  Size  Location     Type
 33131 ;;                  1    wreg      unsigned char 
 33132 ;; Registers used:
 33133 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 33134 ;; Tracked objects:
 33135 ;;		On entry : 0/0
 33136 ;;		On exit  : 0/0
 33137 ;;		Unchanged: 0/0
 33138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33139 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33140 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33141 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33142 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33143 ;;Total ram usage:       11 bytes
 33144 ;; Hardware stack levels used:    1
 33145 ;; Hardware stack levels required when called:   13
 33146 ;; This function calls:
 33147 ;;		_LedBlinkStateMachine
 33148 ;;		_LedPulseStateMachine
 33149 ;;		_Led_SetLedStatus
 33150 ;; This function is called by:
 33151 ;;		_Led_MainTask
 33152 ;; This function uses a non-reentrant model
 33153 ;;
 33154                           
 33155                           	psect	text154
 33156  004776                     __ptext154:
 33157                           	opt stack 0
 33158  004776                     _LedStateMachine:
 33159                           	opt stack 14
 33160                           
 33161                           ; BSR set to: 0
 33162                           ;incstack = 0
 33163                           ;LedStateMachine@Led stored from wreg
 33164  004776  0100               	movlb	0	; () banked
 33165  004778  6F99               	movwf	LedStateMachine@Led& (0+255),b
 33166                           
 33167                           ;led.c: 238: UINT8 LedOutSts = 0u;
 33168  00477A  0E00               	movlw	0
 33169  00477C  0100               	movlb	0	; () banked
 33170  00477E  6F98               	movwf	LedStateMachine@LedOutSts& (0+255),b
 33171                           
 33172                           ;led.c: 241: switch (*LedSts)
 33173  004780  D037               	goto	l2121
 33174  004782                     
 33175                           ; BSR set to: 0
 33176                           ;led.c: 245: LedOutSts = ((UINT8)(0));
 33177                           
 33178                           ; BSR set to: 0
 33179  004782  0E00               	movlw	0
 33180  004784  6F98               	movwf	LedStateMachine@LedOutSts& (0+255),b
 33181                           
 33182                           ; BSR set to: 0
 33183                           ;led.c: 246: *LedOut = ((UINT8)(0));
 33184  004786  C091  FFD9         	movff	LedStateMachine@LedOut,fsr2l
 33185  00478A  C092  FFDA         	movff	LedStateMachine@LedOut+1,fsr2h
 33186  00478E  0E00               	movlw	0
 33187  004790  D007               	goto	L77
 33188  004792                     
 33189                           ; BSR set to: 0
 33190                           ;led.c: 251: LedOutSts = ((UINT8)(1));
 33191                           
 33192                           ; BSR set to: 0
 33193  004792  0E01               	movlw	1
 33194  004794  6F98               	movwf	LedStateMachine@LedOutSts& (0+255),b
 33195                           
 33196                           ; BSR set to: 0
 33197                           ;led.c: 252: *LedOut = ((UINT8)(1));
 33198  004796  C091  FFD9         	movff	LedStateMachine@LedOut,fsr2l
 33199  00479A  C092  FFDA         	movff	LedStateMachine@LedOut+1,fsr2h
 33200  00479E  0E01               	movlw	1
 33201  0047A0                     L77:
 33202  0047A0  6EDF               	movwf	indf2,c
 33203                           
 33204                           ;led.c: 253: break;
 33205  0047A2  D03A               	goto	l2123
 33206  0047A4                     
 33207                           ; BSR set to: 0
 33208                           ;led.c: 257: if (*LedOut == 1)
 33209                           
 33210                           ; BSR set to: 0
 33211  0047A4  C091  FFD9         	movff	LedStateMachine@LedOut,fsr2l
 33212  0047A8  C092  FFDA         	movff	LedStateMachine@LedOut+1,fsr2h
 33213  0047AC  04DE               	decf	postinc2,w,c
 33214  0047AE  A4D8               	btfss	status,2,c
 33215  0047B0  D006               	goto	l2126
 33216                           
 33217                           ; BSR set to: 0
 33218                           ;led.c: 258: {
 33219                           ;led.c: 260: Led_SetLedStatus(Led,LED_STS_OFF);
 33220  0047B2  0E00               	movlw	0
 33221  0047B4  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 33222  0047B6  5199               	movf	LedStateMachine@Led& (0+255),w,b
 33223  0047B8  ECB2  F032         	call	_Led_SetLedStatus
 33224                           
 33225                           ;led.c: 261: }
 33226  0047BC  D02D               	goto	l2123
 33227  0047BE                     l2126:
 33228                           
 33229                           ;led.c: 262: else
 33230                           ;led.c: 263: {
 33231                           ;led.c: 265: Led_SetLedStatus(Led,LED_STS_ON);
 33232  0047BE  0E01               	movlw	1
 33233  0047C0  0100               	movlb	0	; () banked
 33234  0047C2  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 33235  0047C4  5199               	movf	LedStateMachine@Led& (0+255),w,b
 33236  0047C6  ECB2  F032         	call	_Led_SetLedStatus
 33237                           
 33238                           ;led.c: 266: }
 33239                           ;led.c: 267: break;
 33240  0047CA  D026               	goto	l2123
 33241  0047CC                     
 33242                           ;led.c: 271: LedOutSts = LedBlinkStateMachine(LedBlink);
 33243  0047CC  C093  F08A         	movff	LedStateMachine@LedBlink,LedBlinkStateMachine@LedBlink
 33244  0047D0  C094  F08B         	movff	LedStateMachine@LedBlink+1,LedBlinkStateMachine@LedBlink+1
 33245  0047D4  EC6E  F013         	call	_LedBlinkStateMachine	;wreg free
 33246  0047D8  D008               	goto	L78
 33247  0047DA                     
 33248                           ; BSR set to: 0
 33249                           ;led.c: 276: LedOutSts = LedPulseStateMachine(LedPulse, Led);
 33250                           
 33251                           ; BSR set to: 0
 33252  0047DA  C095  F08A         	movff	LedStateMachine@LedPulse,LedPulseStateMachine@LedPulse
 33253  0047DE  C096  F08B         	movff	LedStateMachine@LedPulse+1,LedPulseStateMachine@LedPulse+1
 33254  0047E2  C099  F08C         	movff	LedStateMachine@Led,LedPulseStateMachine@Led
 33255  0047E6  EC22  F019         	call	_LedPulseStateMachine	;wreg free
 33256  0047EA                     L78:
 33257  0047EA  0100               	movlb	0	; () banked
 33258  0047EC  6F98               	movwf	LedStateMachine@LedOutSts& (0+255),b
 33259                           
 33260                           ; BSR set to: 0
 33261                           ;led.c: 281: }
 33262                           
 33263                           ; BSR set to: 0
 33264                           ;led.c: 280: break;
 33265                           
 33266                           ;led.c: 279: default:
 33267                           
 33268                           ;led.c: 277: break;
 33269  0047EE  D014               	goto	l2123
 33270  0047F0                     l2121:
 33271                           
 33272                           ; BSR set to: 0
 33273                           
 33274                           ; BSR set to: 0
 33275  0047F0  C08F  FFD9         	movff	LedStateMachine@LedSts,fsr2l
 33276  0047F4  C090  FFDA         	movff	LedStateMachine@LedSts+1,fsr2h
 33277  0047F8  50DF               	movf	indf2,w,c
 33278                           
 33279                           ; Switch size 1, requested type "space"
 33280                           ; Number of cases is 5, Range of values is 0 to 4
 33281                           ; switch strategies available:
 33282                           ; Name         Instructions Cycles
 33283                           ; simple_byte           16     9 (average)
 33284                           ;	Chosen strategy is simple_byte
 33285  0047FA  0A00               	xorlw	0	; case 0
 33286  0047FC  B4D8               	btfsc	status,2,c
 33287  0047FE  D7C1               	goto	l2122
 33288  004800  0A01               	xorlw	1	; case 1
 33289  004802  B4D8               	btfsc	status,2,c
 33290  004804  D7C6               	goto	l2124
 33291  004806  0A03               	xorlw	3	; case 2
 33292  004808  B4D8               	btfsc	status,2,c
 33293  00480A  D7CC               	goto	l2125
 33294  00480C  0A01               	xorlw	1	; case 3
 33295  00480E  B4D8               	btfsc	status,2,c
 33296  004810  D7DD               	goto	l2128
 33297  004812  0A07               	xorlw	7	; case 4
 33298  004814  B4D8               	btfsc	status,2,c
 33299  004816  D7E1               	goto	l2129
 33300  004818                     l2123:
 33301                           
 33302                           ;led.c: 283: return LedOutSts;
 33303                           
 33304                           ; BSR set to: 0
 33305  004818  0100               	movlb	0	; () banked
 33306  00481A  5198               	movf	LedStateMachine@LedOutSts& (0+255),w,b
 33307  00481C  0012               	return	
 33308  00481E                     __end_of_LedStateMachine:
 33309                           	opt stack 0
 33310                           tosu	equ	0xFFF
 33311                           tosh	equ	0xFFE
 33312                           tosl	equ	0xFFD
 33313                           pclath	equ	0xFFA
 33314                           tblptru	equ	0xFF8
 33315                           tblptrh	equ	0xFF7
 33316                           tblptrl	equ	0xFF6
 33317                           tablat	equ	0xFF5
 33318                           prodh	equ	0xFF4
 33319                           prodl	equ	0xFF3
 33320                           intcon	equ	0xFF2
 33321                           intcon2	equ	0xFF1
 33322                           intcon3	equ	0xFF0
 33323                           indf0	equ	0xFEF
 33324                           postinc0	equ	0xFEE
 33325                           plusw0	equ	0xFEB
 33326                           fsr0h	equ	0xFEA
 33327                           fsr0l	equ	0xFE9
 33328                           wreg	equ	0xFE8
 33329                           indf1	equ	0xFE7
 33330                           postinc1	equ	0xFE6
 33331                           postdec1	equ	0xFE5
 33332                           plusw1	equ	0xFE3
 33333                           fsr1h	equ	0xFE2
 33334                           fsr1l	equ	0xFE1
 33335                           indf2	equ	0xFDF
 33336                           postinc2	equ	0xFDE
 33337                           postdec2	equ	0xFDD
 33338                           plusw2	equ	0xFDB
 33339                           fsr2h	equ	0xFDA
 33340                           fsr2l	equ	0xFD9
 33341                           status	equ	0xFD8
 33342                           
 33343 ;; *************** function _LedPulseStateMachine *****************
 33344 ;; Defined at:
 33345 ;;		line 182 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 33346 ;; Parameters:    Size  Location     Type
 33347 ;;  LedPulse        2   42[BANK0 ] PTR struct _LedPulseType
 33348 ;;		 -> Led3Pulse(6), Led2Pulse(6), Led1Pulse(6), 
 33349 ;;  Led             1   44[BANK0 ] unsigned char 
 33350 ;; Auto vars:     Size  Location     Type
 33351 ;;		None
 33352 ;; Return value:  Size  Location     Type
 33353 ;;                  1    wreg      unsigned char 
 33354 ;; Registers used:
 33355 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 33356 ;; Tracked objects:
 33357 ;;		On entry : 0/0
 33358 ;;		On exit  : 0/0
 33359 ;;		Unchanged: 0/0
 33360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33361 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33362 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33363 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33364 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33365 ;;Total ram usage:        5 bytes
 33366 ;; Hardware stack levels used:    1
 33367 ;; Hardware stack levels required when called:   12
 33368 ;; This function calls:
 33369 ;;		_Led_SetLedStatus
 33370 ;;		___lwdiv
 33371 ;; This function is called by:
 33372 ;;		_LedStateMachine
 33373 ;; This function uses a non-reentrant model
 33374 ;;
 33375                           
 33376                           	psect	text155
 33377  003244                     __ptext155:
 33378                           	opt stack 0
 33379  003244                     _LedPulseStateMachine:
 33380                           	opt stack 14
 33381                           
 33382                           ;led.c: 185: switch (LedPulse->LedPulseState)
 33383                           
 33384                           ; BSR set to: 0
 33385                           ;incstack = 0
 33386  003244  D05C               	goto	l2111
 33387  003246                     
 33388                           ;led.c: 189: LedPulse->LedOutState = ((UINT8)(1));
 33389  003246  0100               	movlb	0	; () banked
 33390  003248  EE20 F001          	lfsr	2,1
 33391  00324C  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 33392  00324E  26D9               	addwf	fsr2l,f,c
 33393  003250  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 33394  003252  22DA               	addwfc	fsr2h,f,c
 33395  003254  0E01               	movlw	1
 33396  003256  6EDF               	movwf	indf2,c
 33397                           
 33398                           ; BSR set to: 0
 33399                           ;led.c: 191: LedPulse->LedPulseState = LedPulseDelay;
 33400  003258  C08A  FFD9         	movff	LedPulseStateMachine@LedPulse,fsr2l
 33401  00325C  C08B  FFDA         	movff	LedPulseStateMachine@LedPulse+1,fsr2h
 33402  003260  0E01               	movlw	1
 33403  003262  D036               	goto	L79
 33404  003264                     
 33405                           ;led.c: 196: LedPulse->LedPulseCounter++;
 33406                           
 33407                           ; BSR set to: 0
 33408  003264  0100               	movlb	0	; () banked
 33409  003266  EE20 F002          	lfsr	2,2
 33410  00326A  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 33411  00326C  26D9               	addwf	fsr2l,f,c
 33412  00326E  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 33413  003270  22DA               	addwfc	fsr2h,f,c
 33414  003272  2ADE               	incf	postinc2,f,c
 33415  003274  0E00               	movlw	0
 33416  003276  22DD               	addwfc	postdec2,f,c
 33417                           
 33418                           ; BSR set to: 0
 33419                           ;led.c: 198: if (LedPulse->LedPulseCounter >= (LedPulse->LedPulseTimeMs/((UINT16)(50))))
 33420  003278  EE20 F004          	lfsr	2,4
 33421  00327C  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 33422  00327E  26D9               	addwf	fsr2l,f,c
 33423  003280  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 33424  003282  22DA               	addwfc	fsr2h,f,c
 33425  003284  CFDE F083          	movff	postinc2,___lwdiv@dividend
 33426  003288  CFDD F084          	movff	postdec2,___lwdiv@dividend+1
 33427  00328C  0E00               	movlw	0
 33428  00328E  6F86               	movwf	(___lwdiv@divisor+1)& (0+255),b
 33429  003290  0E32               	movlw	50
 33430  003292  6F85               	movwf	___lwdiv@divisor& (0+255),b
 33431  003294  EC14  F02E         	call	___lwdiv	;wreg free
 33432  003298  0100               	movlb	0	; () banked
 33433  00329A  EE20 F002          	lfsr	2,2
 33434  00329E  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 33435  0032A0  26D9               	addwf	fsr2l,f,c
 33436  0032A2  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 33437  0032A4  22DA               	addwfc	fsr2h,f,c
 33438  0032A6  5183               	movf	?___lwdiv& (0+255),w,b
 33439  0032A8  5CDE               	subwf	postinc2,w,c
 33440  0032AA  5184               	movf	(?___lwdiv+1)& (0+255),w,b
 33441  0032AC  58DE               	subwfb	postinc2,w,c
 33442  0032AE  A0D8               	btfss	status,0,c
 33443  0032B0  D034               	goto	l2113
 33444                           
 33445                           ; BSR set to: 0
 33446                           ;led.c: 199: {
 33447                           ;led.c: 201: LedPulse->LedPulseCounter = 0;
 33448  0032B2  EE20 F002          	lfsr	2,2
 33449  0032B6  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 33450  0032B8  26D9               	addwf	fsr2l,f,c
 33451  0032BA  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 33452  0032BC  22DA               	addwfc	fsr2h,f,c
 33453  0032BE  0E00               	movlw	0
 33454  0032C0  6EDE               	movwf	postinc2,c
 33455  0032C2  0E00               	movlw	0
 33456  0032C4  6EDD               	movwf	postdec2,c
 33457                           
 33458                           ; BSR set to: 0
 33459                           ;led.c: 203: LedPulse->LedPulseState = LedPulseOff;
 33460  0032C6  C08A  FFD9         	movff	LedPulseStateMachine@LedPulse,fsr2l
 33461  0032CA  C08B  FFDA         	movff	LedPulseStateMachine@LedPulse+1,fsr2h
 33462  0032CE  0E02               	movlw	2
 33463  0032D0                     L79:
 33464  0032D0  6EDF               	movwf	indf2,c
 33465                           
 33466                           ; BSR set to: 0
 33467                           ;led.c: 204: }
 33468                           ;led.c: 205: break;
 33469  0032D2  D023               	goto	l2113
 33470  0032D4                     
 33471                           ;led.c: 209: LedPulse->LedOutState = ((UINT8)(0));
 33472                           
 33473                           ; BSR set to: 0
 33474  0032D4  0100               	movlb	0	; () banked
 33475  0032D6  EE20 F001          	lfsr	2,1
 33476  0032DA  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 33477  0032DC  26D9               	addwf	fsr2l,f,c
 33478  0032DE  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 33479  0032E0  22DA               	addwfc	fsr2h,f,c
 33480  0032E2  0E00               	movlw	0
 33481  0032E4  6EDF               	movwf	indf2,c
 33482                           
 33483                           ; BSR set to: 0
 33484                           ;led.c: 211: LedPulse->LedPulseState = LedPulseOn;
 33485  0032E6  C08A  FFD9         	movff	LedPulseStateMachine@LedPulse,fsr2l
 33486  0032EA  C08B  FFDA         	movff	LedPulseStateMachine@LedPulse+1,fsr2h
 33487  0032EE  0E00               	movlw	0
 33488  0032F0  6EDF               	movwf	indf2,c
 33489                           
 33490                           ; BSR set to: 0
 33491                           ;led.c: 213: Led_SetLedStatus(Led,LED_STS_OFF);
 33492  0032F2  0E00               	movlw	0
 33493  0032F4  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 33494  0032F6  518C               	movf	LedPulseStateMachine@Led& (0+255),w,b
 33495  0032F8  ECB2  F032         	call	_Led_SetLedStatus
 33496                           
 33497                           ;led.c: 218: }
 33498                           
 33499                           ;led.c: 217: break;
 33500                           
 33501                           ;led.c: 216: default:
 33502                           
 33503                           ;led.c: 214: break;
 33504  0032FC  D00E               	goto	l2113
 33505  0032FE                     l2111:
 33506  0032FE  C08A  FFD9         	movff	LedPulseStateMachine@LedPulse,fsr2l
 33507  003302  C08B  FFDA         	movff	LedPulseStateMachine@LedPulse+1,fsr2h
 33508  003306  50DF               	movf	indf2,w,c
 33509                           
 33510                           ; Switch size 1, requested type "space"
 33511                           ; Number of cases is 3, Range of values is 0 to 2
 33512                           ; switch strategies available:
 33513                           ; Name         Instructions Cycles
 33514                           ; simple_byte           10     6 (average)
 33515                           ;	Chosen strategy is simple_byte
 33516  003308  0A00               	xorlw	0	; case 0
 33517  00330A  B4D8               	btfsc	status,2,c
 33518  00330C  D79C               	goto	l2112
 33519  00330E  0A01               	xorlw	1	; case 1
 33520  003310  B4D8               	btfsc	status,2,c
 33521  003312  D7A8               	goto	l2114
 33522  003314  0A03               	xorlw	3	; case 2
 33523  003316  B4D8               	btfsc	status,2,c
 33524  003318  D7DD               	goto	l2116
 33525  00331A                     l2113:
 33526                           
 33527                           ;led.c: 221: return (LedPulse->LedOutState);
 33528  00331A  0100               	movlb	0	; () banked
 33529  00331C  EE20 F001          	lfsr	2,1
 33530  003320  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 33531  003322  26D9               	addwf	fsr2l,f,c
 33532  003324  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 33533  003326  22DA               	addwfc	fsr2h,f,c
 33534  003328  50DF               	movf	indf2,w,c
 33535  00332A  0012               	return	
 33536  00332C                     __end_of_LedPulseStateMachine:
 33537                           	opt stack 0
 33538                           tosu	equ	0xFFF
 33539                           tosh	equ	0xFFE
 33540                           tosl	equ	0xFFD
 33541                           pclath	equ	0xFFA
 33542                           tblptru	equ	0xFF8
 33543                           tblptrh	equ	0xFF7
 33544                           tblptrl	equ	0xFF6
 33545                           tablat	equ	0xFF5
 33546                           prodh	equ	0xFF4
 33547                           prodl	equ	0xFF3
 33548                           intcon	equ	0xFF2
 33549                           intcon2	equ	0xFF1
 33550                           intcon3	equ	0xFF0
 33551                           indf0	equ	0xFEF
 33552                           postinc0	equ	0xFEE
 33553                           plusw0	equ	0xFEB
 33554                           fsr0h	equ	0xFEA
 33555                           fsr0l	equ	0xFE9
 33556                           wreg	equ	0xFE8
 33557                           indf1	equ	0xFE7
 33558                           postinc1	equ	0xFE6
 33559                           postdec1	equ	0xFE5
 33560                           plusw1	equ	0xFE3
 33561                           fsr1h	equ	0xFE2
 33562                           fsr1l	equ	0xFE1
 33563                           indf2	equ	0xFDF
 33564                           postinc2	equ	0xFDE
 33565                           postdec2	equ	0xFDD
 33566                           plusw2	equ	0xFDB
 33567                           fsr2h	equ	0xFDA
 33568                           fsr2l	equ	0xFD9
 33569                           status	equ	0xFD8
 33570                           
 33571 ;; *************** function _Led_SetLedStatus *****************
 33572 ;; Defined at:
 33573 ;;		line 338 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 33574 ;; Parameters:    Size  Location     Type
 33575 ;;  Led             1    wreg     unsigned char 
 33576 ;;  LedSts          1   29[BANK0 ] enum E8954
 33577 ;; Auto vars:     Size  Location     Type
 33578 ;;  Led             1   30[BANK0 ] unsigned char 
 33579 ;; Return value:  Size  Location     Type
 33580 ;;                  1    wreg      void 
 33581 ;; Registers used:
 33582 ;;		wreg, status,2, status,0
 33583 ;; Tracked objects:
 33584 ;;		On entry : 0/0
 33585 ;;		On exit  : 0/0
 33586 ;;		Unchanged: 0/0
 33587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33588 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33589 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33591 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33592 ;;Total ram usage:        2 bytes
 33593 ;; Hardware stack levels used:    1
 33594 ;; Hardware stack levels required when called:   11
 33595 ;; This function calls:
 33596 ;;		Nothing
 33597 ;; This function is called by:
 33598 ;;		_LedPulseStateMachine
 33599 ;;		_LedStateMachine
 33600 ;;		_waitSetupCall
 33601 ;;		_initFsm
 33602 ;;		_blinkForSeconds
 33603 ;; This function uses a non-reentrant model
 33604 ;;
 33605                           
 33606                           	psect	text156
 33607  006564                     __ptext156:
 33608                           	opt stack 0
 33609  006564                     _Led_SetLedStatus:
 33610                           	opt stack 14
 33611                           
 33612                           ; BSR set to: 0
 33613                           ;incstack = 0
 33614                           ;Led_SetLedStatus@Led stored from wreg
 33615  006564  0100               	movlb	0	; () banked
 33616  006566  6F7E               	movwf	Led_SetLedStatus@Led& (0+255),b
 33617                           
 33618                           ;led.c: 341: switch (Led)
 33619  006568  D009               	goto	l2142
 33620  00656A                     l2143:
 33621                           
 33622                           ; BSR set to: 0
 33623                           ;led.c: 344: Led1Sts = LedSts;
 33624  00656A  C07D  F1FA         	movff	Led_SetLedStatus@LedSts,_Led1Sts
 33625                           
 33626                           ;led.c: 345: break;
 33627  00656E  0012               	return	
 33628  006570                     l2145:
 33629                           
 33630                           ; BSR set to: 0
 33631                           ;led.c: 348: Led2Sts = LedSts;
 33632  006570  C07D  F1F8         	movff	Led_SetLedStatus@LedSts,_Led2Sts
 33633                           
 33634                           ;led.c: 349: break;
 33635  006574  0012               	return	
 33636  006576                     l2146:
 33637                           
 33638                           ; BSR set to: 0
 33639                           ;led.c: 352: Led3Sts = LedSts;
 33640  006576  C07D  F1F6         	movff	Led_SetLedStatus@LedSts,_Led3Sts
 33641                           
 33642                           ; BSR set to: 0
 33643                           ;led.c: 357: }
 33644                           
 33645                           ; BSR set to: 0
 33646                           ;led.c: 356: break;
 33647                           
 33648                           ;led.c: 355: default:
 33649                           
 33650                           ;led.c: 353: break;
 33651  00657A  0012               	return	
 33652  00657C                     l2142:
 33653                           
 33654                           ; BSR set to: 0
 33655  00657C  0100               	movlb	0	; () banked
 33656  00657E  517E               	movf	Led_SetLedStatus@Led& (0+255),w,b
 33657                           
 33658                           ; Switch size 1, requested type "space"
 33659                           ; Number of cases is 3, Range of values is 1 to 3
 33660                           ; switch strategies available:
 33661                           ; Name         Instructions Cycles
 33662                           ; simple_byte           10     6 (average)
 33663                           ;	Chosen strategy is simple_byte
 33664  006580  0A01               	xorlw	1	; case 1
 33665  006582  B4D8               	btfsc	status,2,c
 33666  006584  D7F2               	goto	l2143
 33667  006586  0A03               	xorlw	3	; case 2
 33668  006588  B4D8               	btfsc	status,2,c
 33669  00658A  D7F2               	goto	l2145
 33670  00658C  0A01               	xorlw	1	; case 3
 33671  00658E  A4D8               	btfss	status,2,c
 33672  006590  0012               	return	
 33673  006592  D7F1               	goto	l2146
 33674  006594                     __end_of_Led_SetLedStatus:
 33675                           	opt stack 0
 33676                           tosu	equ	0xFFF
 33677                           tosh	equ	0xFFE
 33678                           tosl	equ	0xFFD
 33679                           pclath	equ	0xFFA
 33680                           tblptru	equ	0xFF8
 33681                           tblptrh	equ	0xFF7
 33682                           tblptrl	equ	0xFF6
 33683                           tablat	equ	0xFF5
 33684                           prodh	equ	0xFF4
 33685                           prodl	equ	0xFF3
 33686                           intcon	equ	0xFF2
 33687                           intcon2	equ	0xFF1
 33688                           intcon3	equ	0xFF0
 33689                           indf0	equ	0xFEF
 33690                           postinc0	equ	0xFEE
 33691                           plusw0	equ	0xFEB
 33692                           fsr0h	equ	0xFEA
 33693                           fsr0l	equ	0xFE9
 33694                           wreg	equ	0xFE8
 33695                           indf1	equ	0xFE7
 33696                           postinc1	equ	0xFE6
 33697                           postdec1	equ	0xFE5
 33698                           plusw1	equ	0xFE3
 33699                           fsr1h	equ	0xFE2
 33700                           fsr1l	equ	0xFE1
 33701                           indf2	equ	0xFDF
 33702                           postinc2	equ	0xFDE
 33703                           postdec2	equ	0xFDD
 33704                           plusw2	equ	0xFDB
 33705                           fsr2h	equ	0xFDA
 33706                           fsr2l	equ	0xFD9
 33707                           status	equ	0xFD8
 33708                           
 33709 ;; *************** function _LedBlinkStateMachine *****************
 33710 ;; Defined at:
 33711 ;;		line 125 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 33712 ;; Parameters:    Size  Location     Type
 33713 ;;  LedBlink        2   42[BANK0 ] PTR struct _LedBlinkType
 33714 ;;		 -> Led3Blink(9), Led2Blink(9), Led1Blink(9), 
 33715 ;; Auto vars:     Size  Location     Type
 33716 ;;		None
 33717 ;; Return value:  Size  Location     Type
 33718 ;;                  1    wreg      unsigned char 
 33719 ;; Registers used:
 33720 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 33721 ;; Tracked objects:
 33722 ;;		On entry : 0/0
 33723 ;;		On exit  : 0/0
 33724 ;;		Unchanged: 0/0
 33725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33726 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33727 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33728 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33729 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33730 ;;Total ram usage:        4 bytes
 33731 ;; Hardware stack levels used:    1
 33732 ;; Hardware stack levels required when called:   12
 33733 ;; This function calls:
 33734 ;;		___lwdiv
 33735 ;; This function is called by:
 33736 ;;		_LedStateMachine
 33737 ;; This function uses a non-reentrant model
 33738 ;;
 33739                           
 33740                           	psect	text157
 33741  0026DC                     __ptext157:
 33742                           	opt stack 0
 33743  0026DC                     _LedBlinkStateMachine:
 33744                           	opt stack 14
 33745                           
 33746                           ;led.c: 128: switch (LedBlink->LedBlinkState)
 33747                           
 33748                           ; BSR set to: 0
 33749                           ;incstack = 0
 33750  0026DC  D08F               	goto	l2098
 33751  0026DE                     
 33752                           ;led.c: 132: LedBlink->LedOutState = LedBlink->LedInitStatus;
 33753  0026DE  0100               	movlb	0	; () banked
 33754  0026E0  EE20 F008          	lfsr	2,8
 33755  0026E4  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 33756  0026E6  26D9               	addwf	fsr2l,f,c
 33757  0026E8  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 33758  0026EA  22DA               	addwfc	fsr2h,f,c
 33759  0026EC  EE10 F001          	lfsr	1,1
 33760  0026F0  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 33761  0026F2  26E1               	addwf	fsr1l,f,c
 33762  0026F4  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 33763  0026F6  22E2               	addwfc	fsr1h,f,c
 33764  0026F8  CFDF FFE7          	movff	indf2,indf1
 33765                           
 33766                           ; BSR set to: 0
 33767                           ;led.c: 134: LedBlink->LedBlinkState = LedBlinkRunning;
 33768  0026FC  C08A  FFD9         	movff	LedBlinkStateMachine@LedBlink,fsr2l
 33769  002700  C08B  FFDA         	movff	LedBlinkStateMachine@LedBlink+1,fsr2h
 33770  002704  D040               	goto	L80
 33771  002706                     
 33772                           ;led.c: 139: LedBlink->LedBlinkCounter++;
 33773                           
 33774                           ; BSR set to: 0
 33775  002706  0100               	movlb	0	; () banked
 33776  002708  EE20 F002          	lfsr	2,2
 33777  00270C  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 33778  00270E  26D9               	addwf	fsr2l,f,c
 33779  002710  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 33780  002712  22DA               	addwfc	fsr2h,f,c
 33781  002714  2ADE               	incf	postinc2,f,c
 33782  002716  0E00               	movlw	0
 33783  002718  22DD               	addwfc	postdec2,f,c
 33784                           
 33785                           ;led.c: 141: if (LedBlink->LedOutState == OffState)
 33786  00271A  EE20 F001          	lfsr	2,1
 33787  00271E  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 33788  002720  26D9               	addwf	fsr2l,f,c
 33789  002722  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 33790  002724  22DA               	addwfc	fsr2h,f,c
 33791  002726  50DF               	movf	indf2,w,c
 33792  002728  A4D8               	btfss	status,2,c
 33793  00272A  D02F               	goto	l2102
 33794                           
 33795                           ; BSR set to: 0
 33796                           ;led.c: 142: {
 33797                           ;led.c: 144: if (LedBlink->LedBlinkCounter >= (LedBlink->LedOffTimeMs/((UINT16)(50))))
 33798  00272C  EE20 F006          	lfsr	2,6
 33799  002730  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 33800  002732  26D9               	addwf	fsr2l,f,c
 33801  002734  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 33802  002736  22DA               	addwfc	fsr2h,f,c
 33803  002738  CFDE F083          	movff	postinc2,___lwdiv@dividend
 33804  00273C  CFDD F084          	movff	postdec2,___lwdiv@dividend+1
 33805  002740  0E00               	movlw	0
 33806  002742  6F86               	movwf	(___lwdiv@divisor+1)& (0+255),b
 33807  002744  0E32               	movlw	50
 33808  002746  6F85               	movwf	___lwdiv@divisor& (0+255),b
 33809  002748  EC14  F02E         	call	___lwdiv	;wreg free
 33810  00274C  0100               	movlb	0	; () banked
 33811  00274E  EE20 F002          	lfsr	2,2
 33812  002752  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 33813  002754  26D9               	addwf	fsr2l,f,c
 33814  002756  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 33815  002758  22DA               	addwfc	fsr2h,f,c
 33816  00275A  5183               	movf	?___lwdiv& (0+255),w,b
 33817  00275C  5CDE               	subwf	postinc2,w,c
 33818  00275E  5184               	movf	(?___lwdiv+1)& (0+255),w,b
 33819  002760  58DE               	subwfb	postinc2,w,c
 33820  002762  A0D8               	btfss	status,0,c
 33821  002764  D056               	goto	l2100
 33822                           
 33823                           ; BSR set to: 0
 33824                           ;led.c: 145: {
 33825                           ;led.c: 147: LedBlink->LedBlinkCounter = 0;
 33826  002766  EE20 F002          	lfsr	2,2
 33827  00276A  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 33828  00276C  26D9               	addwf	fsr2l,f,c
 33829  00276E  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 33830  002770  22DA               	addwfc	fsr2h,f,c
 33831  002772  0E00               	movlw	0
 33832  002774  6EDE               	movwf	postinc2,c
 33833  002776  0E00               	movlw	0
 33834  002778  6EDD               	movwf	postdec2,c
 33835                           
 33836                           ;led.c: 149: LedBlink->LedOutState = OnState;
 33837  00277A  EE20 F001          	lfsr	2,1
 33838  00277E  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 33839  002780  26D9               	addwf	fsr2l,f,c
 33840  002782  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 33841  002784  22DA               	addwfc	fsr2h,f,c
 33842  002786                     L80:
 33843  002786  0E01               	movlw	1
 33844  002788  D037               	goto	L81
 33845  00278A                     l2102:
 33846                           
 33847                           ; BSR set to: 0
 33848                           ;led.c: 152: else if (LedBlink->LedOutState == OnState)
 33849                           
 33850                           ; BSR set to: 0
 33851  00278A  EE20 F001          	lfsr	2,1
 33852  00278E  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 33853  002790  26D9               	addwf	fsr2l,f,c
 33854  002792  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 33855  002794  22DA               	addwfc	fsr2h,f,c
 33856  002796  04DE               	decf	postinc2,w,c
 33857  002798  A4D8               	btfss	status,2,c
 33858  00279A  D03B               	goto	l2100
 33859                           
 33860                           ; BSR set to: 0
 33861                           ;led.c: 153: {
 33862                           ;led.c: 155: if (LedBlink->LedBlinkCounter >= (LedBlink->LedOnTimeMs/((UINT16)(50))))
 33863  00279C  EE20 F004          	lfsr	2,4
 33864  0027A0  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 33865  0027A2  26D9               	addwf	fsr2l,f,c
 33866  0027A4  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 33867  0027A6  22DA               	addwfc	fsr2h,f,c
 33868  0027A8  CFDE F083          	movff	postinc2,___lwdiv@dividend
 33869  0027AC  CFDD F084          	movff	postdec2,___lwdiv@dividend+1
 33870  0027B0  0E00               	movlw	0
 33871  0027B2  6F86               	movwf	(___lwdiv@divisor+1)& (0+255),b
 33872  0027B4  0E32               	movlw	50
 33873  0027B6  6F85               	movwf	___lwdiv@divisor& (0+255),b
 33874  0027B8  EC14  F02E         	call	___lwdiv	;wreg free
 33875  0027BC  0100               	movlb	0	; () banked
 33876  0027BE  EE20 F002          	lfsr	2,2
 33877  0027C2  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 33878  0027C4  26D9               	addwf	fsr2l,f,c
 33879  0027C6  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 33880  0027C8  22DA               	addwfc	fsr2h,f,c
 33881  0027CA  5183               	movf	?___lwdiv& (0+255),w,b
 33882  0027CC  5CDE               	subwf	postinc2,w,c
 33883  0027CE  5184               	movf	(?___lwdiv+1)& (0+255),w,b
 33884  0027D0  58DE               	subwfb	postinc2,w,c
 33885  0027D2  A0D8               	btfss	status,0,c
 33886  0027D4  D01E               	goto	l2100
 33887                           
 33888                           ; BSR set to: 0
 33889                           ;led.c: 156: {
 33890                           ;led.c: 158: LedBlink->LedBlinkCounter = 0;
 33891  0027D6  EE20 F002          	lfsr	2,2
 33892  0027DA  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 33893  0027DC  26D9               	addwf	fsr2l,f,c
 33894  0027DE  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 33895  0027E0  22DA               	addwfc	fsr2h,f,c
 33896  0027E2  0E00               	movlw	0
 33897  0027E4  6EDE               	movwf	postinc2,c
 33898  0027E6  0E00               	movlw	0
 33899  0027E8  6EDD               	movwf	postdec2,c
 33900                           
 33901                           ;led.c: 160: LedBlink->LedOutState = OffState;
 33902  0027EA  EE20 F001          	lfsr	2,1
 33903  0027EE  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 33904  0027F0  26D9               	addwf	fsr2l,f,c
 33905  0027F2  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 33906  0027F4  22DA               	addwfc	fsr2h,f,c
 33907  0027F6  0E00               	movlw	0
 33908  0027F8                     L81:
 33909  0027F8  6EDF               	movwf	indf2,c
 33910                           
 33911                           ; BSR set to: 0
 33912                           ;led.c: 167: }
 33913                           
 33914                           ; BSR set to: 0
 33915                           ;led.c: 166: break;
 33916                           
 33917                           ;led.c: 165: default:
 33918                           
 33919                           ; BSR set to: 0
 33920                           ;led.c: 161: }
 33921                           ;led.c: 162: }
 33922                           ;led.c: 163: break;
 33923                           
 33924                           ; BSR set to: 0
 33925                           
 33926                           ; BSR set to: 0
 33927  0027FA  D00B               	goto	l2100
 33928  0027FC                     l2098:
 33929                           
 33930                           ; BSR set to: 0
 33931  0027FC  C08A  FFD9         	movff	LedBlinkStateMachine@LedBlink,fsr2l
 33932  002800  C08B  FFDA         	movff	LedBlinkStateMachine@LedBlink+1,fsr2h
 33933  002804  50DF               	movf	indf2,w,c
 33934                           
 33935                           ; Switch size 1, requested type "space"
 33936                           ; Number of cases is 2, Range of values is 0 to 1
 33937                           ; switch strategies available:
 33938                           ; Name         Instructions Cycles
 33939                           ; simple_byte            7     4 (average)
 33940                           ;	Chosen strategy is simple_byte
 33941  002806  0A00               	xorlw	0	; case 0
 33942  002808  B4D8               	btfsc	status,2,c
 33943  00280A  D769               	goto	l2099
 33944  00280C  0A01               	xorlw	1	; case 1
 33945  00280E  B4D8               	btfsc	status,2,c
 33946  002810  D77A               	goto	l2101
 33947  002812                     l2100:
 33948                           
 33949                           ;led.c: 170: return (LedBlink->LedOutState);
 33950  002812  0100               	movlb	0	; () banked
 33951  002814  EE20 F001          	lfsr	2,1
 33952  002818  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 33953  00281A  26D9               	addwf	fsr2l,f,c
 33954  00281C  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 33955  00281E  22DA               	addwfc	fsr2h,f,c
 33956  002820  50DF               	movf	indf2,w,c
 33957  002822  0012               	return	
 33958  002824                     __end_of_LedBlinkStateMachine:
 33959                           	opt stack 0
 33960                           tosu	equ	0xFFF
 33961                           tosh	equ	0xFFE
 33962                           tosl	equ	0xFFD
 33963                           pclath	equ	0xFFA
 33964                           tblptru	equ	0xFF8
 33965                           tblptrh	equ	0xFF7
 33966                           tblptrl	equ	0xFF6
 33967                           tablat	equ	0xFF5
 33968                           prodh	equ	0xFF4
 33969                           prodl	equ	0xFF3
 33970                           intcon	equ	0xFF2
 33971                           intcon2	equ	0xFF1
 33972                           intcon3	equ	0xFF0
 33973                           indf0	equ	0xFEF
 33974                           postinc0	equ	0xFEE
 33975                           plusw0	equ	0xFEB
 33976                           fsr0h	equ	0xFEA
 33977                           fsr0l	equ	0xFE9
 33978                           wreg	equ	0xFE8
 33979                           indf1	equ	0xFE7
 33980                           postinc1	equ	0xFE6
 33981                           postdec1	equ	0xFE5
 33982                           plusw1	equ	0xFE3
 33983                           fsr1h	equ	0xFE2
 33984                           fsr1l	equ	0xFE1
 33985                           indf2	equ	0xFDF
 33986                           postinc2	equ	0xFDE
 33987                           postdec2	equ	0xFDD
 33988                           plusw2	equ	0xFDB
 33989                           fsr2h	equ	0xFDA
 33990                           fsr2l	equ	0xFD9
 33991                           status	equ	0xFD8
 33992                           
 33993 ;; *************** function ___lwdiv *****************
 33994 ;; Defined at:
 33995 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/lwdiv.c"
 33996 ;; Parameters:    Size  Location     Type
 33997 ;;  dividend        2   35[BANK0 ] unsigned int 
 33998 ;;  divisor         2   37[BANK0 ] unsigned int 
 33999 ;; Auto vars:     Size  Location     Type
 34000 ;;  quotient        2   40[BANK0 ] unsigned int 
 34001 ;;  counter         1   39[BANK0 ] unsigned char 
 34002 ;; Return value:  Size  Location     Type
 34003 ;;                  2   35[BANK0 ] unsigned int 
 34004 ;; Registers used:
 34005 ;;		wreg, status,2, status,0
 34006 ;; Tracked objects:
 34007 ;;		On entry : 0/0
 34008 ;;		On exit  : 0/0
 34009 ;;		Unchanged: 0/0
 34010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34011 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34012 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34014 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34015 ;;Total ram usage:        7 bytes
 34016 ;; Hardware stack levels used:    1
 34017 ;; Hardware stack levels required when called:   11
 34018 ;; This function calls:
 34019 ;;		Nothing
 34020 ;; This function is called by:
 34021 ;;		_LedBlinkStateMachine
 34022 ;;		_LedPulseStateMachine
 34023 ;;		_secondsAppTimer
 34024 ;;		_utoa
 34025 ;; This function uses a non-reentrant model
 34026 ;;
 34027                           
 34028                           	psect	text158
 34029  005C28                     __ptext158:
 34030                           	opt stack 0
 34031  005C28                     ___lwdiv:
 34032                           	opt stack 14
 34033                           
 34034                           ; BSR set to: 0
 34035                           ;incstack = 0
 34036  005C28  0E00               	movlw	0
 34037  005C2A  0100               	movlb	0	; () banked
 34038  005C2C  6F89               	movwf	(___lwdiv@quotient+1)& (0+255),b
 34039  005C2E  0E00               	movlw	0
 34040  005C30  6F88               	movwf	___lwdiv@quotient& (0+255),b
 34041                           
 34042                           ; BSR set to: 0
 34043  005C32  5185               	movf	___lwdiv@divisor& (0+255),w,b
 34044  005C34  1186               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 34045  005C36  B4D8               	btfsc	status,2,c
 34046  005C38  D01C               	goto	l3356
 34047                           
 34048                           ; BSR set to: 0
 34049  005C3A  0E01               	movlw	1
 34050  005C3C  6F87               	movwf	___lwdiv@counter& (0+255),b
 34051  005C3E  D004               	goto	l3351
 34052  005C40                     
 34053                           ; BSR set to: 0
 34054                           
 34055                           ; BSR set to: 0
 34056  005C40  90D8               	bcf	status,0,c
 34057  005C42  3785               	rlcf	___lwdiv@divisor& (0+255),f,b
 34058  005C44  3786               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 34059  005C46  2B87               	incf	___lwdiv@counter& (0+255),f,b
 34060  005C48                     l3351:
 34061                           
 34062                           ; BSR set to: 0
 34063                           
 34064                           ; BSR set to: 0
 34065  005C48  AF86               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 34066  005C4A  D7FA               	goto	l3352
 34067  005C4C                     u12140:
 34068                           
 34069                           ; BSR set to: 0
 34070                           
 34071                           ; BSR set to: 0
 34072                           
 34073                           ; BSR set to: 0
 34074  005C4C  90D8               	bcf	status,0,c
 34075  005C4E  3788               	rlcf	___lwdiv@quotient& (0+255),f,b
 34076  005C50  3789               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 34077                           
 34078                           ; BSR set to: 0
 34079  005C52  5185               	movf	___lwdiv@divisor& (0+255),w,b
 34080  005C54  5D83               	subwf	___lwdiv@dividend& (0+255),w,b
 34081  005C56  5186               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 34082  005C58  5984               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 34083  005C5A  A0D8               	btfss	status,0,c
 34084  005C5C  D005               	goto	l3355
 34085                           
 34086                           ; BSR set to: 0
 34087  005C5E  5185               	movf	___lwdiv@divisor& (0+255),w,b
 34088  005C60  5F83               	subwf	___lwdiv@dividend& (0+255),f,b
 34089  005C62  5186               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 34090  005C64  5B84               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 34091                           
 34092                           ; BSR set to: 0
 34093  005C66  8188               	bsf	___lwdiv@quotient& (0+255),0,b
 34094  005C68                     l3355:
 34095                           
 34096                           ; BSR set to: 0
 34097                           
 34098                           ; BSR set to: 0
 34099  005C68  90D8               	bcf	status,0,c
 34100  005C6A  3386               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 34101  005C6C  3385               	rrcf	___lwdiv@divisor& (0+255),f,b
 34102                           
 34103                           ; BSR set to: 0
 34104  005C6E  2F87               	decfsz	___lwdiv@counter& (0+255),f,b
 34105  005C70  D7ED               	goto	u12140
 34106  005C72                     l3356:
 34107                           
 34108                           ; BSR set to: 0
 34109                           
 34110                           ; BSR set to: 0
 34111  005C72  C088  F083         	movff	___lwdiv@quotient,?___lwdiv
 34112  005C76  C089  F084         	movff	___lwdiv@quotient+1,?___lwdiv+1
 34113                           
 34114                           ; BSR set to: 0
 34115  005C7A  0012               	return		;funcret
 34116  005C7C                     __end_of___lwdiv:
 34117                           	opt stack 0
 34118                           tosu	equ	0xFFF
 34119                           tosh	equ	0xFFE
 34120                           tosl	equ	0xFFD
 34121                           pclath	equ	0xFFA
 34122                           tblptru	equ	0xFF8
 34123                           tblptrh	equ	0xFF7
 34124                           tblptrl	equ	0xFF6
 34125                           tablat	equ	0xFF5
 34126                           prodh	equ	0xFF4
 34127                           prodl	equ	0xFF3
 34128                           intcon	equ	0xFF2
 34129                           intcon2	equ	0xFF1
 34130                           intcon3	equ	0xFF0
 34131                           indf0	equ	0xFEF
 34132                           postinc0	equ	0xFEE
 34133                           plusw0	equ	0xFEB
 34134                           fsr0h	equ	0xFEA
 34135                           fsr0l	equ	0xFE9
 34136                           wreg	equ	0xFE8
 34137                           indf1	equ	0xFE7
 34138                           postinc1	equ	0xFE6
 34139                           postdec1	equ	0xFE5
 34140                           plusw1	equ	0xFE3
 34141                           fsr1h	equ	0xFE2
 34142                           fsr1l	equ	0xFE1
 34143                           indf2	equ	0xFDF
 34144                           postinc2	equ	0xFDE
 34145                           postdec2	equ	0xFDD
 34146                           plusw2	equ	0xFDB
 34147                           fsr2h	equ	0xFDA
 34148                           fsr2l	equ	0xFD9
 34149                           status	equ	0xFD8
 34150                           
 34151 ;; *************** function _OsAlrm_SetOsAlarm *****************
 34152 ;; Defined at:
 34153 ;;		line 77 in file "../../MercuryFwk/Source/c/02_Osl/os_alarms.c"
 34154 ;; Parameters:    Size  Location     Type
 34155 ;;  OsAlarmId       2   35[BANK0 ] unsigned short 
 34156 ;;  OsAlarmTimeo    4   37[BANK0 ] unsigned long 
 34157 ;;  AlarmCallbac    2   41[BANK0 ] PTR FTN()void 
 34158 ;;		 -> I2cDummyTx(1), 
 34159 ;; Auto vars:     Size  Location     Type
 34160 ;;		None
 34161 ;; Return value:  Size  Location     Type
 34162 ;;                  1    wreg      void 
 34163 ;; Registers used:
 34164 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 34165 ;; Tracked objects:
 34166 ;;		On entry : 0/0
 34167 ;;		On exit  : 0/0
 34168 ;;		Unchanged: 0/0
 34169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34170 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34171 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34173 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34174 ;;Total ram usage:        8 bytes
 34175 ;; Hardware stack levels used:    1
 34176 ;; Hardware stack levels required when called:   12
 34177 ;; This function calls:
 34178 ;;		___wmul
 34179 ;; This function is called by:
 34180 ;;		_I2cSlv_MainTask
 34181 ;; This function uses a non-reentrant model
 34182 ;;
 34183                           
 34184                           	psect	text159
 34185  003FA8                     __ptext159:
 34186                           	opt stack 0
 34187  003FA8                     _OsAlrm_SetOsAlarm:
 34188                           	opt stack 15
 34189                           
 34190                           ;os_alarms.c: 80: OsAlarms[OsAlarmId].Enabled = 1u;
 34191                           
 34192                           ; BSR set to: 0
 34193                           ;incstack = 0
 34194  003FA8  C083  F07D         	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 34195  003FAC  C084  F07E         	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 34196  003FB0  0E00               	movlw	0
 34197  003FB2  0100               	movlb	0	; () banked
 34198  003FB4  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 34199  003FB6  0E0B               	movlw	11
 34200  003FB8  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 34201  003FBA  EC38  F033         	call	___wmul	;wreg free
 34202  003FBE  0E00               	movlw	low _OsAlarms
 34203  003FC0  0100               	movlb	0	; () banked
 34204  003FC2  257D               	addwf	?___wmul& (0+255),w,b
 34205  003FC4  6ED9               	movwf	fsr2l,c
 34206  003FC6  0E06               	movlw	high _OsAlarms
 34207  003FC8  217E               	addwfc	(?___wmul+1)& (0+255),w,b
 34208  003FCA  6EDA               	movwf	fsr2h,c
 34209  003FCC  0E01               	movlw	1
 34210  003FCE  6EDF               	movwf	indf2,c
 34211                           
 34212                           ;os_alarms.c: 82: OsAlarms[OsAlarmId].Counter = 0;
 34213  003FD0  C083  F07D         	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 34214  003FD4  C084  F07E         	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 34215  003FD8  0E00               	movlw	0
 34216  003FDA  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 34217  003FDC  0E0B               	movlw	11
 34218  003FDE  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 34219  003FE0  EC38  F033         	call	___wmul	;wreg free
 34220  003FE4  0E01               	movlw	1
 34221  003FE6  0100               	movlb	0	; () banked
 34222  003FE8  277D               	addwf	?___wmul& (0+255),f,b
 34223  003FEA  0E00               	movlw	0
 34224  003FEC  237E               	addwfc	(?___wmul+1)& (0+255),f,b
 34225  003FEE  0E00               	movlw	low _OsAlarms
 34226  003FF0  257D               	addwf	?___wmul& (0+255),w,b
 34227  003FF2  6ED9               	movwf	fsr2l,c
 34228  003FF4  0E06               	movlw	high _OsAlarms
 34229  003FF6  217E               	addwfc	(?___wmul+1)& (0+255),w,b
 34230  003FF8  6EDA               	movwf	fsr2h,c
 34231  003FFA  6ADE               	clrf	postinc2,c
 34232  003FFC  6ADE               	clrf	postinc2,c
 34233  003FFE  6ADE               	clrf	postinc2,c
 34234  004000  6ADD               	clrf	postdec2,c
 34235                           
 34236                           ;os_alarms.c: 84: OsAlarms[OsAlarmId].AlarmTime = OsAlarmTimeout;
 34237  004002  C083  F07D         	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 34238  004006  C084  F07E         	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 34239  00400A  0E00               	movlw	0
 34240  00400C  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 34241  00400E  0E0B               	movlw	11
 34242  004010  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 34243  004012  EC38  F033         	call	___wmul	;wreg free
 34244  004016  0E05               	movlw	5
 34245  004018  0100               	movlb	0	; () banked
 34246  00401A  277D               	addwf	?___wmul& (0+255),f,b
 34247  00401C  0E00               	movlw	0
 34248  00401E  237E               	addwfc	(?___wmul+1)& (0+255),f,b
 34249  004020  0E00               	movlw	low _OsAlarms
 34250  004022  257D               	addwf	?___wmul& (0+255),w,b
 34251  004024  6ED9               	movwf	fsr2l,c
 34252  004026  0E06               	movlw	high _OsAlarms
 34253  004028  217E               	addwfc	(?___wmul+1)& (0+255),w,b
 34254  00402A  6EDA               	movwf	fsr2h,c
 34255  00402C  C085  FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout,postinc2
 34256  004030  C086  FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout+1,postinc2
 34257  004034  C087  FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout+2,postinc2
 34258  004038  C088  FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout+3,postinc2
 34259                           
 34260                           ;os_alarms.c: 86: OsAlarms[OsAlarmId].AlrmCbk = AlarmCallback;
 34261  00403C  C083  F07D         	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 34262  004040  C084  F07E         	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 34263  004044  0E00               	movlw	0
 34264  004046  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 34265  004048  0E0B               	movlw	11
 34266  00404A  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 34267  00404C  EC38  F033         	call	___wmul	;wreg free
 34268  004050  0E09               	movlw	9
 34269  004052  0100               	movlb	0	; () banked
 34270  004054  277D               	addwf	?___wmul& (0+255),f,b
 34271  004056  0E00               	movlw	0
 34272  004058  237E               	addwfc	(?___wmul+1)& (0+255),f,b
 34273  00405A  0E00               	movlw	low _OsAlarms
 34274  00405C  257D               	addwf	?___wmul& (0+255),w,b
 34275  00405E  6ED9               	movwf	fsr2l,c
 34276  004060  0E06               	movlw	high _OsAlarms
 34277  004062  217E               	addwfc	(?___wmul+1)& (0+255),w,b
 34278  004064  6EDA               	movwf	fsr2h,c
 34279  004066  C089  FFDE         	movff	OsAlrm_SetOsAlarm@AlarmCallback,postinc2
 34280  00406A  C08A  FFDD         	movff	OsAlrm_SetOsAlarm@AlarmCallback+1,postdec2
 34281                           
 34282                           ; BSR set to: 0
 34283  00406E  0012               	return		;funcret
 34284  004070                     __end_of_OsAlrm_SetOsAlarm:
 34285                           	opt stack 0
 34286                           tosu	equ	0xFFF
 34287                           tosh	equ	0xFFE
 34288                           tosl	equ	0xFFD
 34289                           pclath	equ	0xFFA
 34290                           tblptru	equ	0xFF8
 34291                           tblptrh	equ	0xFF7
 34292                           tblptrl	equ	0xFF6
 34293                           tablat	equ	0xFF5
 34294                           prodh	equ	0xFF4
 34295                           prodl	equ	0xFF3
 34296                           intcon	equ	0xFF2
 34297                           intcon2	equ	0xFF1
 34298                           intcon3	equ	0xFF0
 34299                           indf0	equ	0xFEF
 34300                           postinc0	equ	0xFEE
 34301                           plusw0	equ	0xFEB
 34302                           fsr0h	equ	0xFEA
 34303                           fsr0l	equ	0xFE9
 34304                           wreg	equ	0xFE8
 34305                           indf1	equ	0xFE7
 34306                           postinc1	equ	0xFE6
 34307                           postdec1	equ	0xFE5
 34308                           plusw1	equ	0xFE3
 34309                           fsr1h	equ	0xFE2
 34310                           fsr1l	equ	0xFE1
 34311                           indf2	equ	0xFDF
 34312                           postinc2	equ	0xFDE
 34313                           postdec2	equ	0xFDD
 34314                           plusw2	equ	0xFDB
 34315                           fsr2h	equ	0xFDA
 34316                           fsr2l	equ	0xFD9
 34317                           status	equ	0xFD8
 34318                           
 34319 ;; *************** function ___wmul *****************
 34320 ;; Defined at:
 34321 ;;		line 15 in file "/opt/microchip/xc8/v1.45/sources/common/Umul16.c"
 34322 ;; Parameters:    Size  Location     Type
 34323 ;;  multiplier      2   29[BANK0 ] unsigned int 
 34324 ;;  multiplicand    2   31[BANK0 ] unsigned int 
 34325 ;; Auto vars:     Size  Location     Type
 34326 ;;  product         2   33[BANK0 ] unsigned int 
 34327 ;; Return value:  Size  Location     Type
 34328 ;;                  2   29[BANK0 ] unsigned int 
 34329 ;; Registers used:
 34330 ;;		wreg, status,2, status,0, prodl, prodh
 34331 ;; Tracked objects:
 34332 ;;		On entry : 0/0
 34333 ;;		On exit  : 0/0
 34334 ;;		Unchanged: 0/0
 34335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34336 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34337 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34339 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34340 ;;Total ram usage:        6 bytes
 34341 ;; Hardware stack levels used:    1
 34342 ;; Hardware stack levels required when called:   11
 34343 ;; This function calls:
 34344 ;;		Nothing
 34345 ;; This function is called by:
 34346 ;;		_OsAlrm_SetOsAlarm
 34347 ;;		_secondsAppTimer
 34348 ;;		_atoi
 34349 ;; This function uses a non-reentrant model
 34350 ;;
 34351                           
 34352                           	psect	text160
 34353  006670                     __ptext160:
 34354                           	opt stack 0
 34355  006670                     ___wmul:
 34356                           	opt stack 13
 34357                           
 34358                           ; BSR set to: 0
 34359                           ;incstack = 0
 34360  006670  0100               	movlb	0	; () banked
 34361  006672  517D               	movf	___wmul@multiplier& (0+255),w,b
 34362  006674  037F               	mulwf	___wmul@multiplicand& (0+255),b
 34363  006676  CFF3 F081          	movff	prodl,___wmul@product
 34364  00667A  CFF4 F082          	movff	prodh,___wmul@product+1
 34365  00667E  517D               	movf	___wmul@multiplier& (0+255),w,b
 34366  006680  0380               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 34367  006682  50F3               	movf	prodl,w,c
 34368  006684  2782               	addwf	(___wmul@product+1)& (0+255),f,b
 34369  006686  517E               	movf	(___wmul@multiplier+1)& (0+255),w,b
 34370  006688  037F               	mulwf	___wmul@multiplicand& (0+255),b
 34371  00668A  50F3               	movf	prodl,w,c
 34372  00668C  2782               	addwf	(___wmul@product+1)& (0+255),f,b
 34373                           
 34374                           ; BSR set to: 0
 34375  00668E  C081  F07D         	movff	___wmul@product,?___wmul
 34376  006692  C082  F07E         	movff	___wmul@product+1,?___wmul+1
 34377  006696  0012               	return	
 34378  006698                     __end_of___wmul:
 34379                           	opt stack 0
 34380                           tosu	equ	0xFFF
 34381                           tosh	equ	0xFFE
 34382                           tosl	equ	0xFFD
 34383                           pclath	equ	0xFFA
 34384                           tblptru	equ	0xFF8
 34385                           tblptrh	equ	0xFF7
 34386                           tblptrl	equ	0xFF6
 34387                           tablat	equ	0xFF5
 34388                           prodh	equ	0xFF4
 34389                           prodl	equ	0xFF3
 34390                           intcon	equ	0xFF2
 34391                           intcon2	equ	0xFF1
 34392                           intcon3	equ	0xFF0
 34393                           indf0	equ	0xFEF
 34394                           postinc0	equ	0xFEE
 34395                           plusw0	equ	0xFEB
 34396                           fsr0h	equ	0xFEA
 34397                           fsr0l	equ	0xFE9
 34398                           wreg	equ	0xFE8
 34399                           indf1	equ	0xFE7
 34400                           postinc1	equ	0xFE6
 34401                           postdec1	equ	0xFE5
 34402                           plusw1	equ	0xFE3
 34403                           fsr1h	equ	0xFE2
 34404                           fsr1l	equ	0xFE1
 34405                           indf2	equ	0xFDF
 34406                           postinc2	equ	0xFDE
 34407                           postdec2	equ	0xFDD
 34408                           plusw2	equ	0xFDB
 34409                           fsr2h	equ	0xFDA
 34410                           fsr2l	equ	0xFD9
 34411                           status	equ	0xFD8
 34412                           
 34413 ;; *************** function _I2c_InitI2cModule *****************
 34414 ;; Defined at:
 34415 ;;		line 228 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 34416 ;; Parameters:    Size  Location     Type
 34417 ;;  I2cConfig       2   66[BANK0 ] PTR struct _I2cConfig
 34418 ;;		 -> I2cConfig(10), 
 34419 ;; Auto vars:     Size  Location     Type
 34420 ;;		None
 34421 ;; Return value:  Size  Location     Type
 34422 ;;                  1    wreg      void 
 34423 ;; Registers used:
 34424 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 34425 ;; Tracked objects:
 34426 ;;		On entry : 0/0
 34427 ;;		On exit  : 0/0
 34428 ;;		Unchanged: 0/0
 34429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34430 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34431 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34432 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34433 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34434 ;;Total ram usage:        4 bytes
 34435 ;; Hardware stack levels used:    1
 34436 ;; Hardware stack levels required when called:   13
 34437 ;; This function calls:
 34438 ;;		_SetBaudRate
 34439 ;; This function is called by:
 34440 ;;		_I2cSlv_MainTask
 34441 ;; This function uses a non-reentrant model
 34442 ;;
 34443                           
 34444                           	psect	text161
 34445  00537A                     __ptext161:
 34446                           	opt stack 0
 34447  00537A                     _I2c_InitI2cModule:
 34448                           	opt stack 14
 34449                           
 34450                           ;i2c_drv.c: 231: TRISDbits.TRISD1 = ((UINT8)(1));
 34451                           
 34452                           ; BSR set to: 0
 34453                           ;incstack = 0
 34454  00537A  8295               	bsf	3989,1,c	;volatile
 34455                           
 34456                           ;i2c_drv.c: 232: TRISDbits.TRISD0 = ((UINT8)(1));
 34457  00537C  8095               	bsf	3989,0,c	;volatile
 34458                           
 34459                           ;i2c_drv.c: 235: SetBaudRate(I2cConfig->I2cBaudRateHz, I2cConfig->McuBusClockHz);
 34460  00537E  C0A2  FFD9         	movff	I2c_InitI2cModule@I2cConfig,fsr2l
 34461  005382  C0A3  FFDA         	movff	I2c_InitI2cModule@I2cConfig+1,fsr2h
 34462  005386  CFDE F096          	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz
 34463  00538A  CFDE F097          	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz+1
 34464  00538E  CFDE F098          	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz+2
 34465  005392  CFDE F099          	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz+3
 34466  005396  0100               	movlb	0	; () banked
 34467  005398  EE20 F004          	lfsr	2,4
 34468  00539C  51A2               	movf	I2c_InitI2cModule@I2cConfig& (0+255),w,b
 34469  00539E  26D9               	addwf	fsr2l,f,c
 34470  0053A0  51A3               	movf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),w,b
 34471  0053A2  22DA               	addwfc	fsr2h,f,c
 34472  0053A4  CFDE F09A          	movff	postinc2,SetBaudRate@McuClockHz
 34473  0053A8  CFDE F09B          	movff	postinc2,SetBaudRate@McuClockHz+1
 34474  0053AC  CFDE F09C          	movff	postinc2,SetBaudRate@McuClockHz+2
 34475  0053B0  CFDE F09D          	movff	postinc2,SetBaudRate@McuClockHz+3
 34476  0053B4  EC56  F02F         	call	_SetBaudRate	;wreg free
 34477                           
 34478                           ;i2c_drv.c: 240: SSP2CON1 |= (I2cConfig->I2cModuleMode) << ((UINT8)(0));
 34479  0053B8  0100               	movlb	0	; () banked
 34480  0053BA  EE20 F008          	lfsr	2,8
 34481  0053BE  51A2               	movf	I2c_InitI2cModule@I2cConfig& (0+255),w,b
 34482  0053C0  26D9               	addwf	fsr2l,f,c
 34483  0053C2  51A3               	movf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),w,b
 34484  0053C4  22DA               	addwfc	fsr2h,f,c
 34485  0053C6  50DF               	movf	indf2,w,c
 34486  0053C8  1272               	iorwf	3954,f,c	;volatile
 34487                           
 34488                           ; BSR set to: 0
 34489                           ;i2c_drv.c: 241: SSP2CON1 |= (I2cConfig->EnableI2cModule) << ((UINT8)(5));
 34490  0053CA  EE20 F009          	lfsr	2,9
 34491  0053CE  51A2               	movf	I2c_InitI2cModule@I2cConfig& (0+255),w,b
 34492  0053D0  26D9               	addwf	fsr2l,f,c
 34493  0053D2  51A3               	movf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),w,b
 34494  0053D4  22DA               	addwfc	fsr2h,f,c
 34495  0053D6  50DF               	movf	indf2,w,c
 34496  0053D8  6FA4               	movwf	??_I2c_InitI2cModule& (0+255),b
 34497  0053DA  0E05               	movlw	5
 34498  0053DC  6FA5               	movwf	(??_I2c_InitI2cModule+1)& (0+255),b
 34499  0053DE                     u14725:
 34500  0053DE  90D8               	bcf	status,0,c
 34501  0053E0  37A4               	rlcf	??_I2c_InitI2cModule& (0+255),f,b
 34502  0053E2  2FA5               	decfsz	(??_I2c_InitI2cModule+1)& (0+255),f,b
 34503  0053E4  D7FC               	goto	u14725
 34504  0053E6  51A4               	movf	??_I2c_InitI2cModule& (0+255),w,b
 34505  0053E8  1272               	iorwf	3954,f,c	;volatile
 34506                           
 34507                           ; BSR set to: 0
 34508  0053EA  0012               	return		;funcret
 34509  0053EC                     __end_of_I2c_InitI2cModule:
 34510                           	opt stack 0
 34511                           tosu	equ	0xFFF
 34512                           tosh	equ	0xFFE
 34513                           tosl	equ	0xFFD
 34514                           pclath	equ	0xFFA
 34515                           tblptru	equ	0xFF8
 34516                           tblptrh	equ	0xFF7
 34517                           tblptrl	equ	0xFF6
 34518                           tablat	equ	0xFF5
 34519                           prodh	equ	0xFF4
 34520                           prodl	equ	0xFF3
 34521                           intcon	equ	0xFF2
 34522                           intcon2	equ	0xFF1
 34523                           intcon3	equ	0xFF0
 34524                           indf0	equ	0xFEF
 34525                           postinc0	equ	0xFEE
 34526                           plusw0	equ	0xFEB
 34527                           fsr0h	equ	0xFEA
 34528                           fsr0l	equ	0xFE9
 34529                           wreg	equ	0xFE8
 34530                           indf1	equ	0xFE7
 34531                           postinc1	equ	0xFE6
 34532                           postdec1	equ	0xFE5
 34533                           plusw1	equ	0xFE3
 34534                           fsr1h	equ	0xFE2
 34535                           fsr1l	equ	0xFE1
 34536                           indf2	equ	0xFDF
 34537                           postinc2	equ	0xFDE
 34538                           postdec2	equ	0xFDD
 34539                           plusw2	equ	0xFDB
 34540                           fsr2h	equ	0xFDA
 34541                           fsr2l	equ	0xFD9
 34542                           status	equ	0xFD8
 34543                           
 34544 ;; *************** function _SetBaudRate *****************
 34545 ;; Defined at:
 34546 ;;		line 78 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 34547 ;; Parameters:    Size  Location     Type
 34548 ;;  DesiredI2cBu    4   54[BANK0 ] unsigned long 
 34549 ;;  McuClockHz      4   58[BANK0 ] unsigned long 
 34550 ;; Auto vars:     Size  Location     Type
 34551 ;;		None
 34552 ;; Return value:  Size  Location     Type
 34553 ;;                  1    wreg      void 
 34554 ;; Registers used:
 34555 ;;		wreg, status,2, status,0, cstack
 34556 ;; Tracked objects:
 34557 ;;		On entry : 0/0
 34558 ;;		On exit  : 0/0
 34559 ;;		Unchanged: 0/0
 34560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34561 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34562 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34563 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34564 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34565 ;;Total ram usage:       12 bytes
 34566 ;; Hardware stack levels used:    1
 34567 ;; Hardware stack levels required when called:   12
 34568 ;; This function calls:
 34569 ;;		___lldiv
 34570 ;; This function is called by:
 34571 ;;		_I2c_InitI2cModule
 34572 ;; This function uses a non-reentrant model
 34573 ;;
 34574                           
 34575                           	psect	text162
 34576  005EAC                     __ptext162:
 34577                           	opt stack 0
 34578  005EAC                     _SetBaudRate:
 34579                           	opt stack 14
 34580                           
 34581                           ;i2c_drv.c: 81: SSP2ADD = ((McuClockHz/(4*DesiredI2cBusClockHz)) - 1);
 34582                           
 34583                           ; BSR set to: 0
 34584                           ;incstack = 0
 34585  005EAC  C09A  F089         	movff	SetBaudRate@McuClockHz,___lldiv@dividend
 34586  005EB0  C09B  F08A         	movff	SetBaudRate@McuClockHz+1,___lldiv@dividend+1
 34587  005EB4  C09C  F08B         	movff	SetBaudRate@McuClockHz+2,___lldiv@dividend+2
 34588  005EB8  C09D  F08C         	movff	SetBaudRate@McuClockHz+3,___lldiv@dividend+3
 34589  005EBC  C096  F09E         	movff	SetBaudRate@DesiredI2cBusClockHz,??_SetBaudRate
 34590  005EC0  C097  F09F         	movff	SetBaudRate@DesiredI2cBusClockHz+1,??_SetBaudRate+1
 34591  005EC4  C098  F0A0         	movff	SetBaudRate@DesiredI2cBusClockHz+2,??_SetBaudRate+2
 34592  005EC8  C099  F0A1         	movff	SetBaudRate@DesiredI2cBusClockHz+3,??_SetBaudRate+3
 34593  005ECC  0E02               	movlw	2
 34594  005ECE                     u13485:
 34595  005ECE  90D8               	bcf	status,0,c
 34596  005ED0  0100               	movlb	0	; () banked
 34597  005ED2  379E               	rlcf	??_SetBaudRate& (0+255),f,b
 34598  005ED4  379F               	rlcf	(??_SetBaudRate+1)& (0+255),f,b
 34599  005ED6  37A0               	rlcf	(??_SetBaudRate+2)& (0+255),f,b
 34600  005ED8  37A1               	rlcf	(??_SetBaudRate+3)& (0+255),f,b
 34601  005EDA  2EE8               	decfsz	wreg,f,c
 34602  005EDC  D7F8               	goto	u13485
 34603  005EDE  C09E  F08D         	movff	??_SetBaudRate,___lldiv@divisor
 34604  005EE2  C09F  F08E         	movff	??_SetBaudRate+1,___lldiv@divisor+1
 34605  005EE6  C0A0  F08F         	movff	??_SetBaudRate+2,___lldiv@divisor+2
 34606  005EEA  C0A1  F090         	movff	??_SetBaudRate+3,___lldiv@divisor+3
 34607  005EEE  EC01  F029         	call	___lldiv	;wreg free
 34608  005EF2  0100               	movlb	0	; () banked
 34609  005EF4  0589               	decf	?___lldiv& (0+255),w,b
 34610  005EF6  6E74               	movwf	3956,c	;volatile
 34611                           
 34612                           ; BSR set to: 0
 34613  005EF8  0012               	return		;funcret
 34614  005EFA                     __end_of_SetBaudRate:
 34615                           	opt stack 0
 34616                           tosu	equ	0xFFF
 34617                           tosh	equ	0xFFE
 34618                           tosl	equ	0xFFD
 34619                           pclath	equ	0xFFA
 34620                           tblptru	equ	0xFF8
 34621                           tblptrh	equ	0xFF7
 34622                           tblptrl	equ	0xFF6
 34623                           tablat	equ	0xFF5
 34624                           prodh	equ	0xFF4
 34625                           prodl	equ	0xFF3
 34626                           intcon	equ	0xFF2
 34627                           intcon2	equ	0xFF1
 34628                           intcon3	equ	0xFF0
 34629                           indf0	equ	0xFEF
 34630                           postinc0	equ	0xFEE
 34631                           plusw0	equ	0xFEB
 34632                           fsr0h	equ	0xFEA
 34633                           fsr0l	equ	0xFE9
 34634                           wreg	equ	0xFE8
 34635                           indf1	equ	0xFE7
 34636                           postinc1	equ	0xFE6
 34637                           postdec1	equ	0xFE5
 34638                           plusw1	equ	0xFE3
 34639                           fsr1h	equ	0xFE2
 34640                           fsr1l	equ	0xFE1
 34641                           indf2	equ	0xFDF
 34642                           postinc2	equ	0xFDE
 34643                           postdec2	equ	0xFDD
 34644                           plusw2	equ	0xFDB
 34645                           fsr2h	equ	0xFDA
 34646                           fsr2l	equ	0xFD9
 34647                           status	equ	0xFD8
 34648                           
 34649 ;; *************** function ___lldiv *****************
 34650 ;; Defined at:
 34651 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/lldiv.c"
 34652 ;; Parameters:    Size  Location     Type
 34653 ;;  dividend        4   41[BANK0 ] unsigned long 
 34654 ;;  divisor         4   45[BANK0 ] unsigned long 
 34655 ;; Auto vars:     Size  Location     Type
 34656 ;;  quotient        4   49[BANK0 ] unsigned long 
 34657 ;;  counter         1   53[BANK0 ] unsigned char 
 34658 ;; Return value:  Size  Location     Type
 34659 ;;                  4   41[BANK0 ] unsigned long 
 34660 ;; Registers used:
 34661 ;;		wreg, status,2, status,0
 34662 ;; Tracked objects:
 34663 ;;		On entry : 0/0
 34664 ;;		On exit  : 0/0
 34665 ;;		Unchanged: 0/0
 34666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34667 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34668 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34669 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34670 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34671 ;;Total ram usage:       13 bytes
 34672 ;; Hardware stack levels used:    1
 34673 ;; Hardware stack levels required when called:   11
 34674 ;; This function calls:
 34675 ;;		Nothing
 34676 ;; This function is called by:
 34677 ;;		_SetBaudRate
 34678 ;;		_Tmr_TmrBPrSet
 34679 ;;		_SetUartBaudRate
 34680 ;; This function uses a non-reentrant model
 34681 ;;
 34682                           
 34683                           	psect	text163
 34684  005202                     __ptext163:
 34685                           	opt stack 0
 34686  005202                     ___lldiv:
 34687                           	opt stack 15
 34688                           
 34689                           ; BSR set to: 0
 34690                           ;incstack = 0
 34691  005202  0E00               	movlw	0
 34692  005204  0100               	movlb	0	; () banked
 34693  005206  6F91               	movwf	___lldiv@quotient& (0+255),b
 34694  005208  0E00               	movlw	0
 34695  00520A  6F92               	movwf	(___lldiv@quotient+1)& (0+255),b
 34696  00520C  0E00               	movlw	0
 34697  00520E  6F93               	movwf	(___lldiv@quotient+2)& (0+255),b
 34698  005210  0E00               	movlw	0
 34699  005212  6F94               	movwf	(___lldiv@quotient+3)& (0+255),b
 34700                           
 34701                           ; BSR set to: 0
 34702  005214  518D               	movf	___lldiv@divisor& (0+255),w,b
 34703  005216  118E               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 34704  005218  118F               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 34705  00521A  1190               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 34706  00521C  B4D8               	btfsc	status,2,c
 34707  00521E  D02A               	goto	l3303
 34708                           
 34709                           ; BSR set to: 0
 34710  005220  0E01               	movlw	1
 34711  005222  6F95               	movwf	___lldiv@counter& (0+255),b
 34712  005224  D006               	goto	l3298
 34713  005226                     
 34714                           ; BSR set to: 0
 34715                           
 34716                           ; BSR set to: 0
 34717  005226  90D8               	bcf	status,0,c
 34718  005228  378D               	rlcf	___lldiv@divisor& (0+255),f,b
 34719  00522A  378E               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 34720  00522C  378F               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 34721  00522E  3790               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 34722  005230  2B95               	incf	___lldiv@counter& (0+255),f,b
 34723  005232                     l3298:
 34724                           
 34725                           ; BSR set to: 0
 34726                           
 34727                           ; BSR set to: 0
 34728  005232  AF90               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 34729  005234  D7F8               	goto	l3299
 34730  005236                     u12480:
 34731                           
 34732                           ; BSR set to: 0
 34733                           
 34734                           ; BSR set to: 0
 34735                           
 34736                           ; BSR set to: 0
 34737  005236  90D8               	bcf	status,0,c
 34738  005238  3791               	rlcf	___lldiv@quotient& (0+255),f,b
 34739  00523A  3792               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 34740  00523C  3793               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 34741  00523E  3794               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 34742                           
 34743                           ; BSR set to: 0
 34744  005240  518D               	movf	___lldiv@divisor& (0+255),w,b
 34745  005242  5D89               	subwf	___lldiv@dividend& (0+255),w,b
 34746  005244  518E               	movf	(___lldiv@divisor+1)& (0+255),w,b
 34747  005246  598A               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 34748  005248  518F               	movf	(___lldiv@divisor+2)& (0+255),w,b
 34749  00524A  598B               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 34750  00524C  5190               	movf	(___lldiv@divisor+3)& (0+255),w,b
 34751  00524E  598C               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 34752  005250  A0D8               	btfss	status,0,c
 34753  005252  D009               	goto	l3302
 34754                           
 34755                           ; BSR set to: 0
 34756  005254  518D               	movf	___lldiv@divisor& (0+255),w,b
 34757  005256  5F89               	subwf	___lldiv@dividend& (0+255),f,b
 34758  005258  518E               	movf	(___lldiv@divisor+1)& (0+255),w,b
 34759  00525A  5B8A               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 34760  00525C  518F               	movf	(___lldiv@divisor+2)& (0+255),w,b
 34761  00525E  5B8B               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 34762  005260  5190               	movf	(___lldiv@divisor+3)& (0+255),w,b
 34763  005262  5B8C               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 34764                           
 34765                           ; BSR set to: 0
 34766  005264  8191               	bsf	___lldiv@quotient& (0+255),0,b
 34767  005266                     l3302:
 34768                           
 34769                           ; BSR set to: 0
 34770                           
 34771                           ; BSR set to: 0
 34772  005266  90D8               	bcf	status,0,c
 34773  005268  3390               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 34774  00526A  338F               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 34775  00526C  338E               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 34776  00526E  338D               	rrcf	___lldiv@divisor& (0+255),f,b
 34777                           
 34778                           ; BSR set to: 0
 34779  005270  2F95               	decfsz	___lldiv@counter& (0+255),f,b
 34780  005272  D7E1               	goto	u12480
 34781  005274                     l3303:
 34782                           
 34783                           ; BSR set to: 0
 34784                           
 34785                           ; BSR set to: 0
 34786  005274  C091  F089         	movff	___lldiv@quotient,?___lldiv
 34787  005278  C092  F08A         	movff	___lldiv@quotient+1,?___lldiv+1
 34788  00527C  C093  F08B         	movff	___lldiv@quotient+2,?___lldiv+2
 34789  005280  C094  F08C         	movff	___lldiv@quotient+3,?___lldiv+3
 34790                           
 34791                           ; BSR set to: 0
 34792  005284  0012               	return		;funcret
 34793  005286                     __end_of___lldiv:
 34794                           	opt stack 0
 34795                           tosu	equ	0xFFF
 34796                           tosh	equ	0xFFE
 34797                           tosl	equ	0xFFD
 34798                           pclath	equ	0xFFA
 34799                           tblptru	equ	0xFF8
 34800                           tblptrh	equ	0xFF7
 34801                           tblptrl	equ	0xFF6
 34802                           tablat	equ	0xFF5
 34803                           prodh	equ	0xFF4
 34804                           prodl	equ	0xFF3
 34805                           intcon	equ	0xFF2
 34806                           intcon2	equ	0xFF1
 34807                           intcon3	equ	0xFF0
 34808                           indf0	equ	0xFEF
 34809                           postinc0	equ	0xFEE
 34810                           plusw0	equ	0xFEB
 34811                           fsr0h	equ	0xFEA
 34812                           fsr0l	equ	0xFE9
 34813                           wreg	equ	0xFE8
 34814                           indf1	equ	0xFE7
 34815                           postinc1	equ	0xFE6
 34816                           postdec1	equ	0xFE5
 34817                           plusw1	equ	0xFE3
 34818                           fsr1h	equ	0xFE2
 34819                           fsr1l	equ	0xFE1
 34820                           indf2	equ	0xFDF
 34821                           postinc2	equ	0xFDE
 34822                           postdec2	equ	0xFDD
 34823                           plusw2	equ	0xFDB
 34824                           fsr2h	equ	0xFDA
 34825                           fsr2l	equ	0xFD9
 34826                           status	equ	0xFD8
 34827                           
 34828 ;; *************** function _I2cSetConfig *****************
 34829 ;; Defined at:
 34830 ;;		line 101 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 34831 ;; Parameters:    Size  Location     Type
 34832 ;;		None
 34833 ;; Auto vars:     Size  Location     Type
 34834 ;;		None
 34835 ;; Return value:  Size  Location     Type
 34836 ;;                  1    wreg      void 
 34837 ;; Registers used:
 34838 ;;		wreg, status,2
 34839 ;; Tracked objects:
 34840 ;;		On entry : 0/0
 34841 ;;		On exit  : 0/0
 34842 ;;		Unchanged: 0/0
 34843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34844 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34845 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34846 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34847 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34848 ;;Total ram usage:        0 bytes
 34849 ;; Hardware stack levels used:    1
 34850 ;; Hardware stack levels required when called:   11
 34851 ;; This function calls:
 34852 ;;		Nothing
 34853 ;; This function is called by:
 34854 ;;		_I2cSlv_MainTask
 34855 ;; This function uses a non-reentrant model
 34856 ;;
 34857                           
 34858                           	psect	text164
 34859  0065F0                     __ptext164:
 34860                           	opt stack 0
 34861  0065F0                     _I2cSetConfig:
 34862                           	opt stack 16
 34863                           
 34864                           ;i2c_slv.c: 103: I2cConfig.I2cBaudRateHz = ((UINT32)(400000));
 34865                           
 34866                           ; BSR set to: 0
 34867                           ;incstack = 0
 34868  0065F0  0E80               	movlw	128
 34869  0065F2  0103               	movlb	3	; () banked
 34870  0065F4  6F56               	movwf	_I2cConfig& (0+255),b
 34871  0065F6  0E1A               	movlw	26
 34872  0065F8  6F57               	movwf	(_I2cConfig+1)& (0+255),b
 34873  0065FA  0E06               	movlw	6
 34874  0065FC  6F58               	movwf	(_I2cConfig+2)& (0+255),b
 34875  0065FE  0E00               	movlw	0
 34876  006600  6F59               	movwf	(_I2cConfig+3)& (0+255),b
 34877                           
 34878                           ;i2c_slv.c: 104: I2cConfig.McuBusClockHz = ((UINT32)(48000000));
 34879  006602  0E00               	movlw	0
 34880  006604  6F5A               	movwf	(_I2cConfig+4)& (0+255),b
 34881  006606  0E6C               	movlw	108
 34882  006608  6F5B               	movwf	(_I2cConfig+5)& (0+255),b
 34883  00660A  0EDC               	movlw	220
 34884  00660C  6F5C               	movwf	(_I2cConfig+6)& (0+255),b
 34885  00660E  0E02               	movlw	2
 34886  006610  6F5D               	movwf	(_I2cConfig+7)& (0+255),b
 34887                           
 34888                           ;i2c_slv.c: 105: I2cConfig.I2cModuleMode = ((UINT8)(0b1000));
 34889  006612  0E08               	movlw	8
 34890  006614  6F5E               	movwf	(_I2cConfig+8)& (0+255),b
 34891                           
 34892                           ;i2c_slv.c: 106: I2cConfig.EnableI2cModule = ((UINT8)(1));
 34893  006616  0E01               	movlw	1
 34894  006618  6F5F               	movwf	(_I2cConfig+9)& (0+255),b
 34895                           
 34896                           ; BSR set to: 3
 34897  00661A  0012               	return		;funcret
 34898  00661C                     __end_of_I2cSetConfig:
 34899                           	opt stack 0
 34900                           tosu	equ	0xFFF
 34901                           tosh	equ	0xFFE
 34902                           tosl	equ	0xFFD
 34903                           pclath	equ	0xFFA
 34904                           tblptru	equ	0xFF8
 34905                           tblptrh	equ	0xFF7
 34906                           tblptrl	equ	0xFF6
 34907                           tablat	equ	0xFF5
 34908                           prodh	equ	0xFF4
 34909                           prodl	equ	0xFF3
 34910                           intcon	equ	0xFF2
 34911                           intcon2	equ	0xFF1
 34912                           intcon3	equ	0xFF0
 34913                           indf0	equ	0xFEF
 34914                           postinc0	equ	0xFEE
 34915                           plusw0	equ	0xFEB
 34916                           fsr0h	equ	0xFEA
 34917                           fsr0l	equ	0xFE9
 34918                           wreg	equ	0xFE8
 34919                           indf1	equ	0xFE7
 34920                           postinc1	equ	0xFE6
 34921                           postdec1	equ	0xFE5
 34922                           plusw1	equ	0xFE3
 34923                           fsr1h	equ	0xFE2
 34924                           fsr1l	equ	0xFE1
 34925                           indf2	equ	0xFDF
 34926                           postinc2	equ	0xFDE
 34927                           postdec2	equ	0xFDD
 34928                           plusw2	equ	0xFDB
 34929                           fsr2h	equ	0xFDA
 34930                           fsr2l	equ	0xFD9
 34931                           status	equ	0xFD8
 34932                           
 34933 ;; *************** function _I2cSendMsgSm *****************
 34934 ;; Defined at:
 34935 ;;		line 117 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 34936 ;; Parameters:    Size  Location     Type
 34937 ;;		None
 34938 ;; Auto vars:     Size  Location     Type
 34939 ;;		None
 34940 ;; Return value:  Size  Location     Type
 34941 ;;                  1    wreg      void 
 34942 ;; Registers used:
 34943 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 34944 ;; Tracked objects:
 34945 ;;		On entry : 0/0
 34946 ;;		On exit  : 0/0
 34947 ;;		Unchanged: 0/0
 34948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34949 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34950 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34951 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34952 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34953 ;;Total ram usage:        0 bytes
 34954 ;; Hardware stack levels used:    1
 34955 ;; Hardware stack levels required when called:   13
 34956 ;; This function calls:
 34957 ;;		_I2c_ReadData
 34958 ;;		_I2c_WriteData
 34959 ;;		_ReceiveEvt
 34960 ;; This function is called by:
 34961 ;;		_I2cSlv_MainTask
 34962 ;; This function uses a non-reentrant model
 34963 ;;
 34964                           
 34965                           	psect	text165
 34966  004070                     __ptext165:
 34967                           	opt stack 0
 34968  004070                     _I2cSendMsgSm:
 34969                           	opt stack 14
 34970                           
 34971                           ;i2c_slv.c: 120: static I2cComStateType I2cComState = I2cComIdle;
 34972                           ;i2c_slv.c: 122: switch(I2cComState)
 34973                           
 34974                           ; BSR set to: 3
 34975                           ;incstack = 0
 34976  004070  D04F               	goto	l1382
 34977  004072                     
 34978                           ;i2c_slv.c: 126: if (ReceiveEvt(&I2cWriteDataEvt))
 34979  004072  0ED7               	movlw	low _I2cWriteDataEvt
 34980  004074  0100               	movlb	0	; () banked
 34981  004076  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 34982  004078  0E00               	movlw	high _I2cWriteDataEvt
 34983  00407A  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 34984  00407C  ECE1  F032         	call	_ReceiveEvt	;wreg free
 34985  004080  0900               	iorlw	0
 34986  004082  B4D8               	btfsc	status,2,c
 34987  004084  D007               	goto	l1384
 34988                           
 34989                           ;i2c_slv.c: 127: {
 34990                           ;i2c_slv.c: 129: I2cComState = I2cComWriteData;
 34991  004086  0E01               	movlw	1
 34992  004088  0101               	movlb	1	; () banked
 34993  00408A  6FE4               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 34994                           
 34995                           ;i2c_slv.c: 131: I2cComSts = TxInProgress;
 34996  00408C  0E01               	movlw	1
 34997  00408E  0100               	movlb	0	; () banked
 34998  004090  6FCF               	movwf	_I2cComSts& (0+255),b
 34999                           
 35000                           ;i2c_slv.c: 132: }
 35001  004092  0012               	return	
 35002  004094                     l1384:
 35003                           
 35004                           ;i2c_slv.c: 133: else if (ReceiveEvt(&I2cReadDataEvt))
 35005                           
 35006                           ; BSR set to: 0
 35007  004094  0E39               	movlw	low _I2cReadDataEvt
 35008  004096  0100               	movlb	0	; () banked
 35009  004098  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 35010  00409A  0E00               	movlw	high _I2cReadDataEvt
 35011  00409C  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 35012  00409E  ECE1  F032         	call	_ReceiveEvt	;wreg free
 35013  0040A2  0900               	iorlw	0
 35014  0040A4  B4D8               	btfsc	status,2,c
 35015  0040A6  D007               	goto	l1386
 35016                           
 35017                           ;i2c_slv.c: 134: {
 35018                           ;i2c_slv.c: 136: I2cComState = I2cComReadData;
 35019  0040A8  0E02               	movlw	2
 35020  0040AA  0101               	movlb	1	; () banked
 35021  0040AC  6FE4               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 35022                           
 35023                           ;i2c_slv.c: 138: I2cComSts = RxInProgress;
 35024  0040AE  0E02               	movlw	2
 35025  0040B0  0100               	movlb	0	; () banked
 35026  0040B2  6FCF               	movwf	_I2cComSts& (0+255),b
 35027                           
 35028                           ;i2c_slv.c: 139: }
 35029  0040B4  0012               	return	
 35030  0040B6                     l1386:
 35031                           
 35032                           ;i2c_slv.c: 140: else
 35033                           ;i2c_slv.c: 141: {
 35034                           ;i2c_slv.c: 143: I2cComSts = TxRxIdle;
 35035                           
 35036                           ; BSR set to: 0
 35037  0040B6  0E00               	movlw	0
 35038  0040B8  0100               	movlb	0	; () banked
 35039  0040BA  6FCF               	movwf	_I2cComSts& (0+255),b
 35040                           
 35041                           ; BSR set to: 0
 35042                           ;i2c_slv.c: 144: }
 35043                           ;i2c_slv.c: 145: break;
 35044                           
 35045                           ; BSR set to: 0
 35046  0040BC  0012               	return	
 35047  0040BE                     
 35048                           ;i2c_slv.c: 149: if (I2c_WriteData(&I2cTxPacket) != I2cWriteInProgress)
 35049                           
 35050                           ; BSR set to: 0
 35051  0040BE  0EA2               	movlw	low _I2cTxPacket
 35052  0040C0  0100               	movlb	0	; () banked
 35053  0040C2  6F7E               	movwf	I2c_WriteData@WritePacket& (0+255),b
 35054  0040C4  0E03               	movlw	high _I2cTxPacket
 35055  0040C6  6F7F               	movwf	(I2c_WriteData@WritePacket+1)& (0+255),b
 35056  0040C8  EC59  F00F         	call	_I2c_WriteData	;wreg free
 35057  0040CC  0900               	iorlw	0
 35058  0040CE  B4D8               	btfsc	status,2,c
 35059  0040D0  0012               	return	
 35060                           
 35061                           ;i2c_slv.c: 150: {
 35062                           ;i2c_slv.c: 152: I2cComState = I2cComWriteComplete;
 35063  0040D2  0E03               	movlw	3
 35064  0040D4  0101               	movlb	1	; () banked
 35065  0040D6  6FE4               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 35066                           
 35067                           ; BSR set to: 1
 35068                           ;i2c_slv.c: 153: }
 35069                           ;i2c_slv.c: 154: break;
 35070  0040D8  0012               	return	
 35071  0040DA                     
 35072                           ; BSR set to: 1
 35073                           ;i2c_slv.c: 158: if (I2c_ReadData(&I2cRxPacket) != I2cReadInProgress)
 35074                           
 35075                           ; BSR set to: 1
 35076  0040DA  0E9C               	movlw	low _I2cRxPacket
 35077  0040DC  0100               	movlb	0	; () banked
 35078  0040DE  6F80               	movwf	I2c_ReadData@ReadPacket& (0+255),b
 35079  0040E0  0E03               	movlw	high _I2cRxPacket
 35080  0040E2  6F81               	movwf	(I2c_ReadData@ReadPacket+1)& (0+255),b
 35081  0040E4  ECC0  F010         	call	_I2c_ReadData	;wreg free
 35082  0040E8  0900               	iorlw	0
 35083  0040EA  B4D8               	btfsc	status,2,c
 35084  0040EC  0012               	return	
 35085                           
 35086                           ;i2c_slv.c: 159: {
 35087                           ;i2c_slv.c: 161: I2cComState = I2cComReadComplete;
 35088  0040EE  0E04               	movlw	4
 35089  0040F0  0101               	movlb	1	; () banked
 35090  0040F2  6FE4               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 35091                           
 35092                           ; BSR set to: 1
 35093                           ;i2c_slv.c: 162: }
 35094                           ;i2c_slv.c: 164: break;
 35095  0040F4  0012               	return	
 35096  0040F6                     
 35097                           ; BSR set to: 1
 35098                           ;i2c_slv.c: 168: I2cComState = I2cComIdle;
 35099                           
 35100                           ; BSR set to: 1
 35101  0040F6  0E00               	movlw	0
 35102  0040F8  6FE4               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 35103                           
 35104                           ;i2c_slv.c: 170: I2cComSts = TxRxIdle;
 35105  0040FA  0E00               	movlw	0
 35106  0040FC  0100               	movlb	0	; () banked
 35107  0040FE  6FCF               	movwf	_I2cComSts& (0+255),b
 35108                           
 35109                           ;i2c_slv.c: 171: break;
 35110  004100  0012               	return	
 35111  004102                     
 35112                           ;i2c_slv.c: 175: I2cComState = I2cComIdle;
 35113                           
 35114                           ; BSR set to: 0
 35115  004102  0E00               	movlw	0
 35116  004104  0101               	movlb	1	; () banked
 35117  004106  6FE4               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 35118                           
 35119                           ;i2c_slv.c: 177: I2cComSts = TxRxIdle;
 35120  004108  0E00               	movlw	0
 35121  00410A  0100               	movlb	0	; () banked
 35122  00410C  6FCF               	movwf	_I2cComSts& (0+255),b
 35123                           
 35124                           ; BSR set to: 0
 35125                           ;i2c_slv.c: 182: }
 35126                           
 35127                           ; BSR set to: 0
 35128                           ;i2c_slv.c: 181: break;
 35129                           
 35130                           ;i2c_slv.c: 180: default:
 35131                           
 35132                           ;i2c_slv.c: 178: break;
 35133  00410E  0012               	return	
 35134  004110                     l1382:
 35135                           
 35136                           ; BSR set to: 0
 35137  004110  0101               	movlb	1	; () banked
 35138  004112  51E4               	movf	I2cSendMsgSm@I2cComState& (0+255),w,b
 35139                           
 35140                           ; Switch size 1, requested type "space"
 35141                           ; Number of cases is 5, Range of values is 0 to 4
 35142                           ; switch strategies available:
 35143                           ; Name         Instructions Cycles
 35144                           ; simple_byte           16     9 (average)
 35145                           ;	Chosen strategy is simple_byte
 35146  004114  0A00               	xorlw	0	; case 0
 35147  004116  B4D8               	btfsc	status,2,c
 35148  004118  D7AC               	goto	l1383
 35149  00411A  0A01               	xorlw	1	; case 1
 35150  00411C  B4D8               	btfsc	status,2,c
 35151  00411E  D7CF               	goto	l1389
 35152  004120  0A03               	xorlw	3	; case 2
 35153  004122  B4D8               	btfsc	status,2,c
 35154  004124  D7DA               	goto	l1391
 35155  004126  0A01               	xorlw	1	; case 3
 35156  004128  B4D8               	btfsc	status,2,c
 35157  00412A  D7E5               	goto	l1393
 35158  00412C  0A07               	xorlw	7	; case 4
 35159  00412E  A4D8               	btfss	status,2,c
 35160  004130  0012               	return	
 35161  004132  D7E7               	goto	l1394
 35162  004134                     __end_of_I2cSendMsgSm:
 35163                           	opt stack 0
 35164                           tosu	equ	0xFFF
 35165                           tosh	equ	0xFFE
 35166                           tosl	equ	0xFFD
 35167                           pclath	equ	0xFFA
 35168                           tblptru	equ	0xFF8
 35169                           tblptrh	equ	0xFF7
 35170                           tblptrl	equ	0xFF6
 35171                           tablat	equ	0xFF5
 35172                           prodh	equ	0xFF4
 35173                           prodl	equ	0xFF3
 35174                           intcon	equ	0xFF2
 35175                           intcon2	equ	0xFF1
 35176                           intcon3	equ	0xFF0
 35177                           indf0	equ	0xFEF
 35178                           postinc0	equ	0xFEE
 35179                           plusw0	equ	0xFEB
 35180                           fsr0h	equ	0xFEA
 35181                           fsr0l	equ	0xFE9
 35182                           wreg	equ	0xFE8
 35183                           indf1	equ	0xFE7
 35184                           postinc1	equ	0xFE6
 35185                           postdec1	equ	0xFE5
 35186                           plusw1	equ	0xFE3
 35187                           fsr1h	equ	0xFE2
 35188                           fsr1l	equ	0xFE1
 35189                           indf2	equ	0xFDF
 35190                           postinc2	equ	0xFDE
 35191                           postdec2	equ	0xFDD
 35192                           plusw2	equ	0xFDB
 35193                           fsr2h	equ	0xFDA
 35194                           fsr2l	equ	0xFD9
 35195                           status	equ	0xFD8
 35196                           
 35197 ;; *************** function _ReceiveEvt *****************
 35198 ;; Defined at:
 35199 ;;		line 99 in file "../../MercuryFwk/Source/c/02_Osl/os_ser.c"
 35200 ;; Parameters:    Size  Location     Type
 35201 ;;  Event           2   29[BANK0 ] PTR struct EventStructur
 35202 ;;		 -> I2cRxPacket(6), I2cReadDataEvt(1), I2cWriteDataEvt(1), GetMethod(1), 
 35203 ;;		 -> InitNetwork(1), SmsTxtReady(1), GetSmsText(1), SmsEvent(1), 
 35204 ;;		 -> ClipEvent(1), RingEvent(1), SendSmsEvent(1), NewStringMdmTerminal(1), 
 35205 ;;		 -> NewMdmEvtParserRequest(1), NewStringReceived(1), MdmResetRequest(1), MdmOnOffPulseRequest(1), 
 35206 ;;		 -> ActivateRiDetection(1), 
 35207 ;; Auto vars:     Size  Location     Type
 35208 ;;  EventStatus     1   32[BANK0 ] enum E7727
 35209 ;; Return value:  Size  Location     Type
 35210 ;;                  1    wreg      enum E7699
 35211 ;; Registers used:
 35212 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 35213 ;; Tracked objects:
 35214 ;;		On entry : 0/0
 35215 ;;		On exit  : 0/0
 35216 ;;		Unchanged: 0/0
 35217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35218 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35219 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35220 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35221 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35222 ;;Total ram usage:        4 bytes
 35223 ;; Hardware stack levels used:    1
 35224 ;; Hardware stack levels required when called:   11
 35225 ;; This function calls:
 35226 ;;		Nothing
 35227 ;; This function is called by:
 35228 ;;		_MdmCntSm
 35229 ;;		_CheckModem
 35230 ;;		_ModemEvtParser
 35231 ;;		_GetSmsSm
 35232 ;;		_SendSmsSm
 35233 ;;		_Mdm_GetSmsData
 35234 ;;		_Mdm_IsSmsReceived
 35235 ;;		_Mdm_IsRinging
 35236 ;;		_GetCallerNumber
 35237 ;;		_InitGprsNetwork
 35238 ;;		_HttpGetMethod
 35239 ;;		_I2cSendMsgSm
 35240 ;;		_I2cSlv_I2cReadMsgSts
 35241 ;;		_RiSm
 35242 ;;		_GsmGprsTerminal
 35243 ;; This function uses a non-reentrant model
 35244 ;;
 35245                           
 35246                           	psect	text166
 35247  0065C2                     __ptext166:
 35248                           	opt stack 0
 35249  0065C2                     _ReceiveEvt:
 35250                           	opt stack 13
 35251                           
 35252                           ;os_ser.c: 102: EventStatusType EventStatus = EventIdle;
 35253                           
 35254                           ;incstack = 0
 35255  0065C2  0E00               	movlw	0
 35256  0065C4  0100               	movlb	0	; () banked
 35257  0065C6  6F80               	movwf	ReceiveEvt@EventStatus& (0+255),b
 35258                           
 35259                           ; BSR set to: 0
 35260                           ;os_ser.c: 105: if (Event->EventStatus == EventSent)
 35261  0065C8  C07D  FFD9         	movff	ReceiveEvt@Event,fsr2l
 35262  0065CC  C07E  FFDA         	movff	ReceiveEvt@Event+1,fsr2h
 35263  0065D0  0E02               	movlw	2
 35264  0065D2  18DE               	xorwf	postinc2,w,c
 35265  0065D4  A4D8               	btfss	status,2,c
 35266  0065D6  D008               	goto	l832
 35267                           
 35268                           ; BSR set to: 0
 35269                           ;os_ser.c: 106: {
 35270                           ;os_ser.c: 108: Event->EventStatus = EventReceived;
 35271  0065D8  C07D  FFD9         	movff	ReceiveEvt@Event,fsr2l
 35272  0065DC  C07E  FFDA         	movff	ReceiveEvt@Event+1,fsr2h
 35273  0065E0  0E01               	movlw	1
 35274  0065E2  6EDF               	movwf	indf2,c
 35275                           
 35276                           ; BSR set to: 0
 35277                           ;os_ser.c: 110: EventStatus = EventReceived;
 35278  0065E4  0E01               	movlw	1
 35279  0065E6  D001               	goto	L82
 35280  0065E8                     l832:
 35281                           
 35282                           ; BSR set to: 0
 35283                           ;os_ser.c: 112: else
 35284                           ;os_ser.c: 113: {
 35285                           ;os_ser.c: 115: EventStatus = EventIdle;
 35286                           
 35287                           ; BSR set to: 0
 35288  0065E8  0E00               	movlw	0
 35289  0065EA                     L82:
 35290  0065EA  6F80               	movwf	ReceiveEvt@EventStatus& (0+255),b
 35291                           
 35292                           ; BSR set to: 0
 35293                           ;os_ser.c: 116: }
 35294                           ;os_ser.c: 119: return(EventStatus);
 35295  0065EC  5180               	movf	ReceiveEvt@EventStatus& (0+255),w,b
 35296  0065EE  0012               	return	
 35297  0065F0                     __end_of_ReceiveEvt:
 35298                           	opt stack 0
 35299                           tosu	equ	0xFFF
 35300                           tosh	equ	0xFFE
 35301                           tosl	equ	0xFFD
 35302                           pclath	equ	0xFFA
 35303                           tblptru	equ	0xFF8
 35304                           tblptrh	equ	0xFF7
 35305                           tblptrl	equ	0xFF6
 35306                           tablat	equ	0xFF5
 35307                           prodh	equ	0xFF4
 35308                           prodl	equ	0xFF3
 35309                           intcon	equ	0xFF2
 35310                           intcon2	equ	0xFF1
 35311                           intcon3	equ	0xFF0
 35312                           indf0	equ	0xFEF
 35313                           postinc0	equ	0xFEE
 35314                           plusw0	equ	0xFEB
 35315                           fsr0h	equ	0xFEA
 35316                           fsr0l	equ	0xFE9
 35317                           wreg	equ	0xFE8
 35318                           indf1	equ	0xFE7
 35319                           postinc1	equ	0xFE6
 35320                           postdec1	equ	0xFE5
 35321                           plusw1	equ	0xFE3
 35322                           fsr1h	equ	0xFE2
 35323                           fsr1l	equ	0xFE1
 35324                           indf2	equ	0xFDF
 35325                           postinc2	equ	0xFDE
 35326                           postdec2	equ	0xFDD
 35327                           plusw2	equ	0xFDB
 35328                           fsr2h	equ	0xFDA
 35329                           fsr2l	equ	0xFD9
 35330                           status	equ	0xFD8
 35331                           
 35332 ;; *************** function _I2c_WriteData *****************
 35333 ;; Defined at:
 35334 ;;		line 252 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 35335 ;; Parameters:    Size  Location     Type
 35336 ;;  WritePacket     2   30[BANK0 ] PTR struct _I2cWritePack
 35337 ;;		 -> I2cTxPacket(5), 
 35338 ;; Auto vars:     Size  Location     Type
 35339 ;;		None
 35340 ;; Return value:  Size  Location     Type
 35341 ;;                  1    wreg      enum E7740
 35342 ;; Registers used:
 35343 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 35344 ;; Tracked objects:
 35345 ;;		On entry : 0/0
 35346 ;;		On exit  : 0/0
 35347 ;;		Unchanged: 0/0
 35348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35349 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35350 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35351 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35352 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35353 ;;Total ram usage:        4 bytes
 35354 ;; Hardware stack levels used:    1
 35355 ;; Hardware stack levels required when called:   12
 35356 ;; This function calls:
 35357 ;;		_CheckAckStatus
 35358 ;;		_CheckTxStatus
 35359 ;;		_StartCondition
 35360 ;;		_StopCondition
 35361 ;;		_WriteByte
 35362 ;; This function is called by:
 35363 ;;		_I2cSendMsgSm
 35364 ;; This function uses a non-reentrant model
 35365 ;;
 35366                           
 35367                           	psect	text167
 35368  001EB2                     __ptext167:
 35369                           	opt stack 0
 35370  001EB2                     _I2c_WriteData:
 35371                           	opt stack 14
 35372                           
 35373                           ;i2c_drv.c: 255: static I2cWriteStateType I2cWriteState = TxAssertStart;
 35374                           ;i2c_drv.c: 256: static I2cWriteStateType I2cNextState = TxAssertStart;
 35375                           ;i2c_drv.c: 257: static UINT8 TentativeCounter = 0;
 35376                           ;i2c_drv.c: 258: static I2cWriteStsType WriteStatus;
 35377                           ;i2c_drv.c: 260: switch (I2cWriteState)
 35378                           
 35379                           ; BSR set to: 0
 35380                           ;incstack = 0
 35381  001EB2  D095               	goto	l160
 35382  001EB4                     
 35383                           ;i2c_drv.c: 264: StartCondition();
 35384  001EB4  EC9D  F035         	call	_StartCondition	;wreg free
 35385                           
 35386                           ;i2c_drv.c: 266: WriteStatus = I2cWriteInProgress;
 35387  001EB8  0E00               	movlw	0
 35388  001EBA  6E35               	movwf	I2c_WriteData@WriteStatus,c
 35389                           
 35390                           ;i2c_drv.c: 268: I2cWriteState = TxSendSlaveAddress;
 35391  001EBC  0E01               	movlw	1
 35392  001EBE  D084               	goto	L89
 35393  001EC0                     
 35394                           ;i2c_drv.c: 273: WritePacket->SlaveAddress = ((WritePacket->SlaveAddress) << 1) | WriteP
      +                          acket->ReadWrite;
 35395  001EC0  0100               	movlb	0	; () banked
 35396  001EC2  EE20 F001          	lfsr	2,1
 35397  001EC6  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 35398  001EC8  26D9               	addwf	fsr2l,f,c
 35399  001ECA  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 35400  001ECC  22DA               	addwfc	fsr2h,f,c
 35401  001ECE  50DF               	movf	indf2,w,c
 35402  001ED0  6F80               	movwf	??_I2c_WriteData& (0+255),b
 35403  001ED2  C07E  FFD9         	movff	I2c_WriteData@WritePacket,fsr2l
 35404  001ED6  C07F  FFDA         	movff	I2c_WriteData@WritePacket+1,fsr2h
 35405  001EDA  50DF               	movf	indf2,w,c
 35406  001EDC  6F81               	movwf	(??_I2c_WriteData+1)& (0+255),b
 35407  001EDE  90D8               	bcf	status,0,c
 35408  001EE0  3581               	rlcf	(??_I2c_WriteData+1)& (0+255),w,b
 35409  001EE2  1180               	iorwf	??_I2c_WriteData& (0+255),w,b
 35410  001EE4  C07E  FFD9         	movff	I2c_WriteData@WritePacket,fsr2l
 35411  001EE8  C07F  FFDA         	movff	I2c_WriteData@WritePacket+1,fsr2h
 35412  001EEC  6EDF               	movwf	indf2,c
 35413                           
 35414                           ; BSR set to: 0
 35415                           ;i2c_drv.c: 275: WriteByte(WritePacket->SlaveAddress);
 35416  001EEE  C07E  FFD9         	movff	I2c_WriteData@WritePacket,fsr2l
 35417  001EF2  C07F  FFDA         	movff	I2c_WriteData@WritePacket+1,fsr2h
 35418  001EF6  50DF               	movf	indf2,w,c
 35419  001EF8  EC7B  F035         	call	_WriteByte
 35420                           
 35421                           ;i2c_drv.c: 277: I2cWriteState = TxCheckTxAddr;
 35422  001EFC  0E02               	movlw	2
 35423  001EFE  6E38               	movwf	I2c_WriteData@I2cWriteState,c
 35424  001F00                     
 35425                           ;i2c_drv.c: 281: if (CheckTxStatus() == ((UINT8)(0)))
 35426  001F00  EC85  F035         	call	_CheckTxStatus	;wreg free
 35427  001F04  0900               	iorlw	0
 35428  001F06  A4D8               	btfss	status,2,c
 35429  001F08  D089               	goto	l162
 35430                           
 35431                           ;i2c_drv.c: 282: {
 35432                           ;i2c_drv.c: 284: I2cNextState = TxSendDataByte;
 35433  001F0A  0E03               	movlw	3
 35434  001F0C  D01A               	goto	L91
 35435  001F0E                     
 35436                           ;i2c_drv.c: 292: WriteByte(*(WritePacket->Buffer));
 35437  001F0E  0100               	movlb	0	; () banked
 35438  001F10  EE20 F002          	lfsr	2,2
 35439  001F14  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 35440  001F16  26D9               	addwf	fsr2l,f,c
 35441  001F18  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 35442  001F1A  22DA               	addwfc	fsr2h,f,c
 35443  001F1C  CFDE F080          	movff	postinc2,??_I2c_WriteData
 35444  001F20  CFDD F081          	movff	postdec2,??_I2c_WriteData+1
 35445  001F24  C080  FFD9         	movff	??_I2c_WriteData,fsr2l
 35446  001F28  C081  FFDA         	movff	??_I2c_WriteData+1,fsr2h
 35447  001F2C  50DF               	movf	indf2,w,c
 35448  001F2E  EC7B  F035         	call	_WriteByte
 35449                           
 35450                           ;i2c_drv.c: 294: I2cWriteState = TxCheckTxData;
 35451  001F32  0E04               	movlw	4
 35452  001F34  D049               	goto	L89
 35453  001F36                     
 35454                           ;i2c_drv.c: 299: if (CheckTxStatus() == ((UINT8)(0)))
 35455  001F36  EC85  F035         	call	_CheckTxStatus	;wreg free
 35456  001F3A  0900               	iorlw	0
 35457  001F3C  A4D8               	btfss	status,2,c
 35458  001F3E  D06E               	goto	l162
 35459                           
 35460                           ;i2c_drv.c: 300: {
 35461                           ;i2c_drv.c: 302: I2cNextState = TxCheckLenght;
 35462  001F40  0E05               	movlw	5
 35463  001F42                     L91:
 35464  001F42  6E37               	movwf	I2c_WriteData@I2cNextState,c
 35465                           
 35466                           ;i2c_drv.c: 304: I2cWriteState = TxCheckAck;
 35467  001F44  0E08               	movlw	8
 35468  001F46  D040               	goto	L89
 35469  001F48                     
 35470                           ;i2c_drv.c: 309: if (WritePacket->Lenght > 0)
 35471  001F48  0100               	movlb	0	; () banked
 35472  001F4A  EE20 F004          	lfsr	2,4
 35473  001F4E  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 35474  001F50  26D9               	addwf	fsr2l,f,c
 35475  001F52  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 35476  001F54  22DA               	addwfc	fsr2h,f,c
 35477  001F56  50DF               	movf	indf2,w,c
 35478  001F58  B4D8               	btfsc	status,2,c
 35479  001F5A  D010               	goto	l170
 35480                           
 35481                           ; BSR set to: 0
 35482                           ;i2c_drv.c: 310: {
 35483                           ;i2c_drv.c: 312: (WritePacket->Lenght)--;
 35484  001F5C  EE20 F004          	lfsr	2,4
 35485  001F60  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 35486  001F62  26D9               	addwf	fsr2l,f,c
 35487  001F64  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 35488  001F66  22DA               	addwfc	fsr2h,f,c
 35489  001F68  06DF               	decf	indf2,f,c
 35490                           
 35491                           ;i2c_drv.c: 314: WritePacket->Buffer++;
 35492  001F6A  EE20 F002          	lfsr	2,2
 35493  001F6E  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 35494  001F70  26D9               	addwf	fsr2l,f,c
 35495  001F72  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 35496  001F74  22DA               	addwfc	fsr2h,f,c
 35497  001F76  2ADE               	incf	postinc2,f,c
 35498  001F78  0E00               	movlw	0
 35499  001F7A  22DD               	addwfc	postdec2,f,c
 35500  001F7C                     l170:
 35501                           
 35502                           ; BSR set to: 0
 35503                           ;i2c_drv.c: 315: }
 35504                           ;i2c_drv.c: 318: if (WritePacket->Lenght == 0)
 35505  001F7C  EE20 F004          	lfsr	2,4
 35506  001F80  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 35507  001F82  26D9               	addwf	fsr2l,f,c
 35508  001F84  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 35509  001F86  22DA               	addwfc	fsr2h,f,c
 35510  001F88  50DF               	movf	indf2,w,c
 35511  001F8A  A4D8               	btfss	status,2,c
 35512  001F8C  D002               	goto	l171
 35513                           
 35514                           ; BSR set to: 0
 35515                           ;i2c_drv.c: 319: {
 35516                           ;i2c_drv.c: 321: I2cWriteState = TxAssertStop;
 35517  001F8E  0E06               	movlw	6
 35518  001F90  D01B               	goto	L89
 35519  001F92                     l171:
 35520                           
 35521                           ; BSR set to: 0
 35522                           ;i2c_drv.c: 323: else
 35523                           ;i2c_drv.c: 324: {
 35524                           ;i2c_drv.c: 326: I2cWriteState = TxSendDataByte;
 35525                           
 35526                           ; BSR set to: 0
 35527  001F92  0E03               	movlw	3
 35528  001F94  D019               	goto	L89
 35529  001F96                     
 35530                           ;i2c_drv.c: 332: StopCondition();
 35531                           
 35532                           ; BSR set to: 0
 35533  001F96  EC9B  F035         	call	_StopCondition	;wreg free
 35534                           
 35535                           ;i2c_drv.c: 334: I2cWriteState = TxCompleted;
 35536  001F9A  0E07               	movlw	7
 35537  001F9C  D015               	goto	L89
 35538  001F9E                     
 35539                           ;i2c_drv.c: 339: I2cWriteState = TxAssertStart;
 35540  001F9E  0E00               	movlw	0
 35541  001FA0  6E38               	movwf	I2c_WriteData@I2cWriteState,c
 35542                           
 35543                           ;i2c_drv.c: 340: I2cNextState = TxAssertStart;
 35544  001FA2  0E00               	movlw	0
 35545  001FA4  6E37               	movwf	I2c_WriteData@I2cNextState,c
 35546                           
 35547                           ;i2c_drv.c: 342: WriteStatus = I2cWriteOk;
 35548  001FA6  0E02               	movlw	2
 35549  001FA8  D018               	goto	L90
 35550  001FAA                     
 35551                           ;i2c_drv.c: 347: TentativeCounter++;
 35552  001FAA  2A36               	incf	I2c_WriteData@TentativeCounter,f,c
 35553                           
 35554                           ;i2c_drv.c: 349: if (CheckAckStatus() == ((UINT8)(0)))
 35555  001FAC  EC8A  F035         	call	_CheckAckStatus	;wreg free
 35556  001FB0  0900               	iorlw	0
 35557  001FB2  A4D8               	btfss	status,2,c
 35558  001FB4  D005               	goto	l176
 35559                           
 35560                           ;i2c_drv.c: 350: {
 35561                           ;i2c_drv.c: 352: TentativeCounter = 0;
 35562  001FB6  0E00               	movlw	0
 35563  001FB8  6E36               	movwf	I2c_WriteData@TentativeCounter,c
 35564                           
 35565                           ;i2c_drv.c: 354: I2cWriteState = I2cNextState;
 35566  001FBA  C037  F038         	movff	I2c_WriteData@I2cNextState,I2c_WriteData@I2cWriteState
 35567                           
 35568                           ;i2c_drv.c: 355: }
 35569  001FBE  D02E               	goto	l162
 35570  001FC0                     l176:
 35571                           
 35572                           ;i2c_drv.c: 356: else
 35573                           ;i2c_drv.c: 357: {
 35574                           ;i2c_drv.c: 359: if (TentativeCounter >= ((UINT8)(3)))
 35575  001FC0  0E02               	movlw	2
 35576  001FC2  6436               	cpfsgt	I2c_WriteData@TentativeCounter,c
 35577  001FC4  D02B               	goto	l162
 35578                           
 35579                           ;i2c_drv.c: 360: {
 35580                           ;i2c_drv.c: 362: I2cWriteState = TxErrorStatus;
 35581  001FC6  0E09               	movlw	9
 35582  001FC8                     L89:
 35583  001FC8  6E38               	movwf	I2c_WriteData@I2cWriteState,c
 35584                           
 35585                           ;i2c_drv.c: 363: }
 35586                           ;i2c_drv.c: 364: }
 35587                           ;i2c_drv.c: 365: break;
 35588  001FCA  D028               	goto	l162
 35589  001FCC                     
 35590                           ;i2c_drv.c: 369: I2cWriteState = TxAssertStart;
 35591  001FCC  0E00               	movlw	0
 35592  001FCE  6E38               	movwf	I2c_WriteData@I2cWriteState,c
 35593                           
 35594                           ;i2c_drv.c: 370: I2cNextState = TxAssertStart;
 35595  001FD0  0E00               	movlw	0
 35596  001FD2  6E37               	movwf	I2c_WriteData@I2cNextState,c
 35597                           
 35598                           ;i2c_drv.c: 372: TentativeCounter = 0;
 35599  001FD4  0E00               	movlw	0
 35600  001FD6  6E36               	movwf	I2c_WriteData@TentativeCounter,c
 35601                           
 35602                           ;i2c_drv.c: 374: WriteStatus = I2cWriteNotOk;
 35603  001FD8  0E01               	movlw	1
 35604  001FDA                     L90:
 35605  001FDA  6E35               	movwf	I2c_WriteData@WriteStatus,c
 35606                           
 35607                           ;i2c_drv.c: 379: }
 35608                           
 35609                           ;i2c_drv.c: 378: break;
 35610                           
 35611                           ;i2c_drv.c: 377: default:
 35612                           
 35613                           ;i2c_drv.c: 375: break;
 35614  001FDC  D01F               	goto	l162
 35615  001FDE                     l160:
 35616  001FDE  5038               	movf	I2c_WriteData@I2cWriteState,w,c
 35617                           
 35618                           ; Switch size 1, requested type "space"
 35619                           ; Number of cases is 10, Range of values is 0 to 9
 35620                           ; switch strategies available:
 35621                           ; Name         Instructions Cycles
 35622                           ; simple_byte           31    16 (average)
 35623                           ;	Chosen strategy is simple_byte
 35624  001FE0  0A00               	xorlw	0	; case 0
 35625  001FE2  B4D8               	btfsc	status,2,c
 35626  001FE4  D767               	goto	l161
 35627  001FE6  0A01               	xorlw	1	; case 1
 35628  001FE8  B4D8               	btfsc	status,2,c
 35629  001FEA  D76A               	goto	l163
 35630  001FEC  0A03               	xorlw	3	; case 2
 35631  001FEE  B4D8               	btfsc	status,2,c
 35632  001FF0  D787               	goto	l164
 35633  001FF2  0A01               	xorlw	1	; case 3
 35634  001FF4  B4D8               	btfsc	status,2,c
 35635  001FF6  D78B               	goto	l166
 35636  001FF8  0A07               	xorlw	7	; case 4
 35637  001FFA  B4D8               	btfsc	status,2,c
 35638  001FFC  D79C               	goto	l167
 35639  001FFE  0A01               	xorlw	1	; case 5
 35640  002000  B4D8               	btfsc	status,2,c
 35641  002002  D7A2               	goto	l169
 35642  002004  0A03               	xorlw	3	; case 6
 35643  002006  B4D8               	btfsc	status,2,c
 35644  002008  D7C6               	goto	l173
 35645  00200A  0A01               	xorlw	1	; case 7
 35646  00200C  B4D8               	btfsc	status,2,c
 35647  00200E  D7C7               	goto	l174
 35648  002010  0A0F               	xorlw	15	; case 8
 35649  002012  B4D8               	btfsc	status,2,c
 35650  002014  D7CA               	goto	l175
 35651  002016  0A01               	xorlw	1	; case 9
 35652  002018  B4D8               	btfsc	status,2,c
 35653  00201A  D7D8               	goto	l179
 35654  00201C                     l162:
 35655                           
 35656                           ;i2c_drv.c: 382: return WriteStatus;
 35657  00201C  5035               	movf	I2c_WriteData@WriteStatus,w,c
 35658  00201E  0012               	return	
 35659  002020                     __end_of_I2c_WriteData:
 35660                           	opt stack 0
 35661                           tosu	equ	0xFFF
 35662                           tosh	equ	0xFFE
 35663                           tosl	equ	0xFFD
 35664                           pclath	equ	0xFFA
 35665                           tblptru	equ	0xFF8
 35666                           tblptrh	equ	0xFF7
 35667                           tblptrl	equ	0xFF6
 35668                           tablat	equ	0xFF5
 35669                           prodh	equ	0xFF4
 35670                           prodl	equ	0xFF3
 35671                           intcon	equ	0xFF2
 35672                           intcon2	equ	0xFF1
 35673                           intcon3	equ	0xFF0
 35674                           indf0	equ	0xFEF
 35675                           postinc0	equ	0xFEE
 35676                           plusw0	equ	0xFEB
 35677                           fsr0h	equ	0xFEA
 35678                           fsr0l	equ	0xFE9
 35679                           wreg	equ	0xFE8
 35680                           indf1	equ	0xFE7
 35681                           postinc1	equ	0xFE6
 35682                           postdec1	equ	0xFE5
 35683                           plusw1	equ	0xFE3
 35684                           fsr1h	equ	0xFE2
 35685                           fsr1l	equ	0xFE1
 35686                           indf2	equ	0xFDF
 35687                           postinc2	equ	0xFDE
 35688                           postdec2	equ	0xFDD
 35689                           plusw2	equ	0xFDB
 35690                           fsr2h	equ	0xFDA
 35691                           fsr2l	equ	0xFD9
 35692                           status	equ	0xFD8
 35693                           
 35694 ;; *************** function _I2c_ReadData *****************
 35695 ;; Defined at:
 35696 ;;		line 393 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 35697 ;; Parameters:    Size  Location     Type
 35698 ;;  ReadPacket      2   32[BANK0 ] PTR struct _I2cReadPacke
 35699 ;;		 -> I2cRxPacket(6), 
 35700 ;; Auto vars:     Size  Location     Type
 35701 ;;		None
 35702 ;; Return value:  Size  Location     Type
 35703 ;;                  1    wreg      enum E7787
 35704 ;; Registers used:
 35705 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 35706 ;; Tracked objects:
 35707 ;;		On entry : 0/0
 35708 ;;		On exit  : 0/0
 35709 ;;		Unchanged: 0/0
 35710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35711 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35712 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35713 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35714 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35715 ;;Total ram usage:        4 bytes
 35716 ;; Hardware stack levels used:    1
 35717 ;; Hardware stack levels required when called:   12
 35718 ;; This function calls:
 35719 ;;		_CheckAckStatus
 35720 ;;		_CheckTxStatus
 35721 ;;		_EnableReceiver
 35722 ;;		_GenerateEvt
 35723 ;;		_ReadByte
 35724 ;;		_SetAckStatus
 35725 ;;		_StartCondition
 35726 ;;		_StopCondition
 35727 ;;		_WriteByte
 35728 ;; This function is called by:
 35729 ;;		_I2cSendMsgSm
 35730 ;; This function uses a non-reentrant model
 35731 ;;
 35732                           
 35733                           	psect	text168
 35734  002180                     __ptext168:
 35735                           	opt stack 0
 35736  002180                     _I2c_ReadData:
 35737                           	opt stack 14
 35738                           
 35739                           ;i2c_drv.c: 396: static I2cReadStateType I2cReadState = RxAssertStart;
 35740                           ;i2c_drv.c: 397: static UINT8 DataCounter = 0;
 35741                           ;i2c_drv.c: 398: static UINT8 TentativeCounter = 0;
 35742                           ;i2c_drv.c: 400: static I2cReadStsType ReadStatus;
 35743                           ;i2c_drv.c: 402: switch (I2cReadState)
 35744                           
 35745                           ;incstack = 0
 35746  002180  D090               	goto	l192
 35747  002182                     
 35748                           ;i2c_drv.c: 406: StartCondition();
 35749  002182  EC9D  F035         	call	_StartCondition	;wreg free
 35750                           
 35751                           ;i2c_drv.c: 408: ReadStatus = I2cReadInProgress;
 35752  002186  0E00               	movlw	0
 35753  002188  6E31               	movwf	I2c_ReadData@ReadStatus,c
 35754                           
 35755                           ;i2c_drv.c: 410: I2cReadState = RxSendSlaveAddr;
 35756  00218A  0E01               	movlw	1
 35757  00218C  D083               	goto	L99
 35758  00218E                     
 35759                           ;i2c_drv.c: 415: ReadPacket->SlaveAddress = ((ReadPacket->SlaveAddress) << 1) | ReadPack
      +                          et->ReadWrite;
 35760  00218E  0100               	movlb	0	; () banked
 35761  002190  EE20 F001          	lfsr	2,1
 35762  002194  5180               	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 35763  002196  26D9               	addwf	fsr2l,f,c
 35764  002198  5181               	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 35765  00219A  22DA               	addwfc	fsr2h,f,c
 35766  00219C  50DF               	movf	indf2,w,c
 35767  00219E  6F82               	movwf	??_I2c_ReadData& (0+255),b
 35768  0021A0  C080  FFD9         	movff	I2c_ReadData@ReadPacket,fsr2l
 35769  0021A4  C081  FFDA         	movff	I2c_ReadData@ReadPacket+1,fsr2h
 35770  0021A8  50DF               	movf	indf2,w,c
 35771  0021AA  6F83               	movwf	(??_I2c_ReadData+1)& (0+255),b
 35772  0021AC  90D8               	bcf	status,0,c
 35773  0021AE  3583               	rlcf	(??_I2c_ReadData+1)& (0+255),w,b
 35774  0021B0  1182               	iorwf	??_I2c_ReadData& (0+255),w,b
 35775  0021B2  C080  FFD9         	movff	I2c_ReadData@ReadPacket,fsr2l
 35776  0021B6  C081  FFDA         	movff	I2c_ReadData@ReadPacket+1,fsr2h
 35777  0021BA  6EDF               	movwf	indf2,c
 35778                           
 35779                           ; BSR set to: 0
 35780                           ;i2c_drv.c: 417: WriteByte(ReadPacket->SlaveAddress);
 35781  0021BC  C080  FFD9         	movff	I2c_ReadData@ReadPacket,fsr2l
 35782  0021C0  C081  FFDA         	movff	I2c_ReadData@ReadPacket+1,fsr2h
 35783  0021C4  50DF               	movf	indf2,w,c
 35784  0021C6  EC7B  F035         	call	_WriteByte
 35785                           
 35786                           ;i2c_drv.c: 419: I2cReadState = RxCheckTxAddr;
 35787  0021CA  0E02               	movlw	2
 35788  0021CC  D063               	goto	L99
 35789  0021CE                     
 35790                           ;i2c_drv.c: 424: if (CheckTxStatus() == ((UINT8)(0)))
 35791  0021CE  EC85  F035         	call	_CheckTxStatus	;wreg free
 35792  0021D2  0900               	iorlw	0
 35793  0021D4  A4D8               	btfss	status,2,c
 35794  0021D6  D081               	goto	l194
 35795                           
 35796                           ;i2c_drv.c: 425: {
 35797                           ;i2c_drv.c: 427: I2cReadState = RxCheckAck;
 35798  0021D8  0E03               	movlw	3
 35799  0021DA  D05C               	goto	L99
 35800  0021DC                     
 35801                           ;i2c_drv.c: 433: TentativeCounter++;
 35802  0021DC  2A32               	incf	I2c_ReadData@TentativeCounter,f,c
 35803                           
 35804                           ;i2c_drv.c: 435: if (CheckAckStatus() == ((UINT8)(0)))
 35805  0021DE  EC8A  F035         	call	_CheckAckStatus	;wreg free
 35806  0021E2  0900               	iorlw	0
 35807  0021E4  A4D8               	btfss	status,2,c
 35808  0021E6  D004               	goto	l199
 35809                           
 35810                           ;i2c_drv.c: 436: {
 35811                           ;i2c_drv.c: 438: TentativeCounter = 0;
 35812  0021E8  0E00               	movlw	0
 35813  0021EA  6E32               	movwf	I2c_ReadData@TentativeCounter,c
 35814  0021EC                     
 35815                           ;i2c_drv.c: 440: I2cReadState = RxGetData;
 35816  0021EC  0E04               	movlw	4
 35817  0021EE  D052               	goto	L99
 35818  0021F0                     l199:
 35819                           
 35820                           ;i2c_drv.c: 442: else
 35821                           ;i2c_drv.c: 443: {
 35822                           ;i2c_drv.c: 445: if (TentativeCounter >= ((UINT8)(3)))
 35823  0021F0  0E02               	movlw	2
 35824  0021F2  6432               	cpfsgt	I2c_ReadData@TentativeCounter,c
 35825  0021F4  D072               	goto	l194
 35826                           
 35827                           ;i2c_drv.c: 446: {
 35828                           ;i2c_drv.c: 448: I2cReadState = RxErrorStatus;
 35829  0021F6  0E08               	movlw	8
 35830  0021F8  D04D               	goto	L99
 35831  0021FA                     
 35832                           ;i2c_drv.c: 455: EnableReceiver();
 35833  0021FA  EC9F  F035         	call	_EnableReceiver	;wreg free
 35834                           
 35835                           ;i2c_drv.c: 457: I2cReadState = RxReadData;
 35836  0021FE  0E05               	movlw	5
 35837  002200  D049               	goto	L99
 35838  002202                     
 35839                           ;i2c_drv.c: 462: if (CheckTxStatus() == ((UINT8)(0)))
 35840  002202  EC85  F035         	call	_CheckTxStatus	;wreg free
 35841  002206  0900               	iorlw	0
 35842  002208  A4D8               	btfss	status,2,c
 35843  00220A  D067               	goto	l194
 35844                           
 35845                           ;i2c_drv.c: 463: {
 35846                           ;i2c_drv.c: 465: *(ReadPacket->Buffer) = ReadByte();
 35847  00220C  0100               	movlb	0	; () banked
 35848  00220E  EE20 F002          	lfsr	2,2
 35849  002212  5180               	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 35850  002214  26D9               	addwf	fsr2l,f,c
 35851  002216  5181               	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 35852  002218  22DA               	addwfc	fsr2h,f,c
 35853  00221A  CFDE F082          	movff	postinc2,??_I2c_ReadData
 35854  00221E  CFDD F083          	movff	postdec2,??_I2c_ReadData+1
 35855  002222  C082  FFD9         	movff	??_I2c_ReadData,fsr2l
 35856  002226  C083  FFDA         	movff	??_I2c_ReadData+1,fsr2h
 35857  00222A  EC80  F035         	call	_ReadByte	;wreg free
 35858  00222E  6EDF               	movwf	indf2,c
 35859                           
 35860                           ;i2c_drv.c: 467: ReadPacket->Buffer++;
 35861  002230  0100               	movlb	0	; () banked
 35862  002232  EE20 F002          	lfsr	2,2
 35863  002236  5180               	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 35864  002238  26D9               	addwf	fsr2l,f,c
 35865  00223A  5181               	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 35866  00223C  22DA               	addwfc	fsr2h,f,c
 35867  00223E  2ADE               	incf	postinc2,f,c
 35868  002240  0E00               	movlw	0
 35869  002242  22DD               	addwfc	postdec2,f,c
 35870                           
 35871                           ; BSR set to: 0
 35872                           ;i2c_drv.c: 469: DataCounter++;
 35873  002244  2A33               	incf	I2c_ReadData@DataCounter,f,c
 35874                           
 35875                           ; BSR set to: 0
 35876                           ;i2c_drv.c: 471: I2cReadState = RxCheckLen;
 35877  002246  0E06               	movlw	6
 35878  002248  D025               	goto	L99
 35879  00224A                     
 35880                           ;i2c_drv.c: 477: if (DataCounter >= ReadPacket->Lenght)
 35881                           
 35882                           ; BSR set to: 0
 35883  00224A  0100               	movlb	0	; () banked
 35884  00224C  EE20 F004          	lfsr	2,4
 35885  002250  5180               	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 35886  002252  26D9               	addwf	fsr2l,f,c
 35887  002254  5181               	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 35888  002256  22DA               	addwfc	fsr2h,f,c
 35889  002258  50DE               	movf	postinc2,w,c
 35890  00225A  5C33               	subwf	I2c_ReadData@DataCounter,w,c
 35891  00225C  A0D8               	btfss	status,0,c
 35892  00225E  D008               	goto	l206
 35893                           
 35894                           ; BSR set to: 0
 35895                           ;i2c_drv.c: 478: {
 35896                           ;i2c_drv.c: 480: SetAckStatus(((UINT8)(1)));
 35897  002260  0E01               	movlw	1
 35898  002262  EC0A  F035         	call	_SetAckStatus
 35899                           
 35900                           ;i2c_drv.c: 482: I2cReadState = RxAssertStop;
 35901  002266  0E07               	movlw	7
 35902  002268  6E34               	movwf	I2c_ReadData@I2cReadState,c
 35903                           
 35904                           ;i2c_drv.c: 484: DataCounter = 0;
 35905  00226A  0E00               	movlw	0
 35906  00226C  6E33               	movwf	I2c_ReadData@DataCounter,c
 35907                           
 35908                           ;i2c_drv.c: 485: }
 35909  00226E  D035               	goto	l194
 35910  002270                     l206:
 35911                           
 35912                           ;i2c_drv.c: 486: else
 35913                           ;i2c_drv.c: 487: {
 35914                           ;i2c_drv.c: 489: SetAckStatus(((UINT8)(0)));
 35915  002270  0E00               	movlw	0
 35916  002272  EC0A  F035         	call	_SetAckStatus
 35917  002276  D7BA               	goto	L100
 35918  002278                     
 35919                           ;i2c_drv.c: 497: StopCondition();
 35920  002278  EC9B  F035         	call	_StopCondition	;wreg free
 35921                           
 35922                           ;i2c_drv.c: 499: ReadStatus = I2cReadOk;
 35923  00227C  0E02               	movlw	2
 35924  00227E  6E31               	movwf	I2c_ReadData@ReadStatus,c
 35925                           
 35926                           ;i2c_drv.c: 501: GenerateEvt(&(ReadPacket->ReadCompleteEvt));
 35927  002280  0E05               	movlw	5
 35928  002282  0100               	movlb	0	; () banked
 35929  002284  2580               	addwf	I2c_ReadData@ReadPacket& (0+255),w,b
 35930  002286  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 35931  002288  0E00               	movlw	0
 35932  00228A  2181               	addwfc	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 35933  00228C  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 35934  00228E  ECD2  F034         	call	_GenerateEvt	;wreg free
 35935                           
 35936                           ;i2c_drv.c: 503: I2cReadState = RxAssertStart;
 35937  002292  0E00               	movlw	0
 35938  002294                     L99:
 35939  002294  6E34               	movwf	I2c_ReadData@I2cReadState,c
 35940                           
 35941                           ;i2c_drv.c: 504: break;
 35942  002296  D021               	goto	l194
 35943  002298                     
 35944                           ;i2c_drv.c: 508: I2cReadState = RxAssertStart;
 35945  002298  0E00               	movlw	0
 35946  00229A  6E34               	movwf	I2c_ReadData@I2cReadState,c
 35947                           
 35948                           ;i2c_drv.c: 510: ReadStatus = I2cReadNotOk;
 35949  00229C  0E01               	movlw	1
 35950  00229E  6E31               	movwf	I2c_ReadData@ReadStatus,c
 35951                           
 35952                           ;i2c_drv.c: 515: }
 35953                           
 35954                           ;i2c_drv.c: 514: break;
 35955                           
 35956                           ;i2c_drv.c: 513: default:
 35957                           
 35958                           ;i2c_drv.c: 511: break;
 35959  0022A0  D01C               	goto	l194
 35960  0022A2                     l192:
 35961  0022A2  5034               	movf	I2c_ReadData@I2cReadState,w,c
 35962                           
 35963                           ; Switch size 1, requested type "space"
 35964                           ; Number of cases is 9, Range of values is 0 to 8
 35965                           ; switch strategies available:
 35966                           ; Name         Instructions Cycles
 35967                           ; simple_byte           28    15 (average)
 35968                           ;	Chosen strategy is simple_byte
 35969  0022A4  0A00               	xorlw	0	; case 0
 35970  0022A6  B4D8               	btfsc	status,2,c
 35971  0022A8  D76C               	goto	l193
 35972  0022AA  0A01               	xorlw	1	; case 1
 35973  0022AC  B4D8               	btfsc	status,2,c
 35974  0022AE  D76F               	goto	l195
 35975  0022B0  0A03               	xorlw	3	; case 2
 35976  0022B2  B4D8               	btfsc	status,2,c
 35977  0022B4  D78C               	goto	l196
 35978  0022B6  0A01               	xorlw	1	; case 3
 35979  0022B8  B4D8               	btfsc	status,2,c
 35980  0022BA  D790               	goto	l198
 35981  0022BC  0A07               	xorlw	7	; case 4
 35982  0022BE  B4D8               	btfsc	status,2,c
 35983  0022C0  D79C               	goto	l202
 35984  0022C2  0A01               	xorlw	1	; case 5
 35985  0022C4  B4D8               	btfsc	status,2,c
 35986  0022C6  D79D               	goto	l203
 35987  0022C8  0A03               	xorlw	3	; case 6
 35988  0022CA  B4D8               	btfsc	status,2,c
 35989  0022CC  D7BE               	goto	l205
 35990  0022CE  0A01               	xorlw	1	; case 7
 35991  0022D0  B4D8               	btfsc	status,2,c
 35992  0022D2  D7D2               	goto	l208
 35993  0022D4  0A0F               	xorlw	15	; case 8
 35994  0022D6  B4D8               	btfsc	status,2,c
 35995  0022D8  D7DF               	goto	l209
 35996  0022DA                     l194:
 35997                           
 35998                           ;i2c_drv.c: 518: return ReadStatus;
 35999  0022DA  5031               	movf	I2c_ReadData@ReadStatus,w,c
 36000  0022DC  0012               	return	
 36001  0022DE                     __end_of_I2c_ReadData:
 36002                           	opt stack 0
 36003                           tosu	equ	0xFFF
 36004                           tosh	equ	0xFFE
 36005                           tosl	equ	0xFFD
 36006                           pclath	equ	0xFFA
 36007                           tblptru	equ	0xFF8
 36008                           tblptrh	equ	0xFF7
 36009                           tblptrl	equ	0xFF6
 36010                           tablat	equ	0xFF5
 36011                           prodh	equ	0xFF4
 36012                           prodl	equ	0xFF3
 36013                           intcon	equ	0xFF2
 36014                           intcon2	equ	0xFF1
 36015                           intcon3	equ	0xFF0
 36016                           indf0	equ	0xFEF
 36017                           postinc0	equ	0xFEE
 36018                           plusw0	equ	0xFEB
 36019                           fsr0h	equ	0xFEA
 36020                           fsr0l	equ	0xFE9
 36021                           wreg	equ	0xFE8
 36022                           indf1	equ	0xFE7
 36023                           postinc1	equ	0xFE6
 36024                           postdec1	equ	0xFE5
 36025                           plusw1	equ	0xFE3
 36026                           fsr1h	equ	0xFE2
 36027                           fsr1l	equ	0xFE1
 36028                           indf2	equ	0xFDF
 36029                           postinc2	equ	0xFDE
 36030                           postdec2	equ	0xFDD
 36031                           plusw2	equ	0xFDB
 36032                           fsr2h	equ	0xFDA
 36033                           fsr2l	equ	0xFD9
 36034                           status	equ	0xFD8
 36035                           
 36036 ;; *************** function _WriteByte *****************
 36037 ;; Defined at:
 36038 ;;		line 190 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 36039 ;; Parameters:    Size  Location     Type
 36040 ;;  Byte            1    wreg     unsigned char 
 36041 ;; Auto vars:     Size  Location     Type
 36042 ;;  Byte            1   29[BANK0 ] unsigned char 
 36043 ;; Return value:  Size  Location     Type
 36044 ;;                  1    wreg      void 
 36045 ;; Registers used:
 36046 ;;		wreg
 36047 ;; Tracked objects:
 36048 ;;		On entry : 0/0
 36049 ;;		On exit  : 0/0
 36050 ;;		Unchanged: 0/0
 36051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36052 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36053 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36054 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36055 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36056 ;;Total ram usage:        1 bytes
 36057 ;; Hardware stack levels used:    1
 36058 ;; Hardware stack levels required when called:   11
 36059 ;; This function calls:
 36060 ;;		Nothing
 36061 ;; This function is called by:
 36062 ;;		_I2c_WriteData
 36063 ;;		_I2c_ReadData
 36064 ;; This function uses a non-reentrant model
 36065 ;;
 36066                           
 36067                           	psect	text169
 36068  006AF6                     __ptext169:
 36069                           	opt stack 0
 36070  006AF6                     _WriteByte:
 36071                           	opt stack 14
 36072                           
 36073                           ;incstack = 0
 36074                           ;WriteByte@Byte stored from wreg
 36075  006AF6  0100               	movlb	0	; () banked
 36076  006AF8  6F7D               	movwf	WriteByte@Byte& (0+255),b
 36077                           
 36078                           ;i2c_drv.c: 193: SSP2BUF = Byte;
 36079  006AFA  C07D  FF75         	movff	WriteByte@Byte,3957	;volatile
 36080  006AFE  0012               	return		;funcret
 36081  006B00                     __end_of_WriteByte:
 36082                           	opt stack 0
 36083                           tosu	equ	0xFFF
 36084                           tosh	equ	0xFFE
 36085                           tosl	equ	0xFFD
 36086                           pclath	equ	0xFFA
 36087                           tblptru	equ	0xFF8
 36088                           tblptrh	equ	0xFF7
 36089                           tblptrl	equ	0xFF6
 36090                           tablat	equ	0xFF5
 36091                           prodh	equ	0xFF4
 36092                           prodl	equ	0xFF3
 36093                           intcon	equ	0xFF2
 36094                           intcon2	equ	0xFF1
 36095                           intcon3	equ	0xFF0
 36096                           indf0	equ	0xFEF
 36097                           postinc0	equ	0xFEE
 36098                           plusw0	equ	0xFEB
 36099                           fsr0h	equ	0xFEA
 36100                           fsr0l	equ	0xFE9
 36101                           wreg	equ	0xFE8
 36102                           indf1	equ	0xFE7
 36103                           postinc1	equ	0xFE6
 36104                           postdec1	equ	0xFE5
 36105                           plusw1	equ	0xFE3
 36106                           fsr1h	equ	0xFE2
 36107                           fsr1l	equ	0xFE1
 36108                           indf2	equ	0xFDF
 36109                           postinc2	equ	0xFDE
 36110                           postdec2	equ	0xFDD
 36111                           plusw2	equ	0xFDB
 36112                           fsr2h	equ	0xFDA
 36113                           fsr2l	equ	0xFD9
 36114                           status	equ	0xFD8
 36115                           
 36116 ;; *************** function _StopCondition *****************
 36117 ;; Defined at:
 36118 ;;		line 120 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 36119 ;; Parameters:    Size  Location     Type
 36120 ;;		None
 36121 ;; Auto vars:     Size  Location     Type
 36122 ;;		None
 36123 ;; Return value:  Size  Location     Type
 36124 ;;                  1    wreg      void 
 36125 ;; Registers used:
 36126 ;;		status,2, status,0
 36127 ;; Tracked objects:
 36128 ;;		On entry : 0/0
 36129 ;;		On exit  : 0/0
 36130 ;;		Unchanged: 0/0
 36131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36133 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36135 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36136 ;;Total ram usage:        0 bytes
 36137 ;; Hardware stack levels used:    1
 36138 ;; Hardware stack levels required when called:   11
 36139 ;; This function calls:
 36140 ;;		Nothing
 36141 ;; This function is called by:
 36142 ;;		_I2c_WriteData
 36143 ;;		_I2c_ReadData
 36144 ;; This function uses a non-reentrant model
 36145 ;;
 36146                           
 36147                           	psect	text170
 36148  006B36                     __ptext170:
 36149                           	opt stack 0
 36150  006B36                     _StopCondition:
 36151                           	opt stack 14
 36152                           
 36153                           ;i2c_drv.c: 123: SSP2CON2 |= (((UINT8)(1)) << ((UINT8)(2)));
 36154                           
 36155                           ;incstack = 0
 36156  006B36  8471               	bsf	3953,2,c	;volatile
 36157  006B38  0012               	return		;funcret
 36158  006B3A                     __end_of_StopCondition:
 36159                           	opt stack 0
 36160                           tosu	equ	0xFFF
 36161                           tosh	equ	0xFFE
 36162                           tosl	equ	0xFFD
 36163                           pclath	equ	0xFFA
 36164                           tblptru	equ	0xFF8
 36165                           tblptrh	equ	0xFF7
 36166                           tblptrl	equ	0xFF6
 36167                           tablat	equ	0xFF5
 36168                           prodh	equ	0xFF4
 36169                           prodl	equ	0xFF3
 36170                           intcon	equ	0xFF2
 36171                           intcon2	equ	0xFF1
 36172                           intcon3	equ	0xFF0
 36173                           indf0	equ	0xFEF
 36174                           postinc0	equ	0xFEE
 36175                           plusw0	equ	0xFEB
 36176                           fsr0h	equ	0xFEA
 36177                           fsr0l	equ	0xFE9
 36178                           wreg	equ	0xFE8
 36179                           indf1	equ	0xFE7
 36180                           postinc1	equ	0xFE6
 36181                           postdec1	equ	0xFE5
 36182                           plusw1	equ	0xFE3
 36183                           fsr1h	equ	0xFE2
 36184                           fsr1l	equ	0xFE1
 36185                           indf2	equ	0xFDF
 36186                           postinc2	equ	0xFDE
 36187                           postdec2	equ	0xFDD
 36188                           plusw2	equ	0xFDB
 36189                           fsr2h	equ	0xFDA
 36190                           fsr2l	equ	0xFD9
 36191                           status	equ	0xFD8
 36192                           
 36193 ;; *************** function _StartCondition *****************
 36194 ;; Defined at:
 36195 ;;		line 92 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 36196 ;; Parameters:    Size  Location     Type
 36197 ;;		None
 36198 ;; Auto vars:     Size  Location     Type
 36199 ;;		None
 36200 ;; Return value:  Size  Location     Type
 36201 ;;                  1    wreg      void 
 36202 ;; Registers used:
 36203 ;;		status,2, status,0
 36204 ;; Tracked objects:
 36205 ;;		On entry : 0/0
 36206 ;;		On exit  : 0/0
 36207 ;;		Unchanged: 0/0
 36208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36209 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36210 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36211 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36212 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36213 ;;Total ram usage:        0 bytes
 36214 ;; Hardware stack levels used:    1
 36215 ;; Hardware stack levels required when called:   11
 36216 ;; This function calls:
 36217 ;;		Nothing
 36218 ;; This function is called by:
 36219 ;;		_I2c_WriteData
 36220 ;;		_I2c_ReadData
 36221 ;; This function uses a non-reentrant model
 36222 ;;
 36223                           
 36224                           	psect	text171
 36225  006B3A                     __ptext171:
 36226                           	opt stack 0
 36227  006B3A                     _StartCondition:
 36228                           	opt stack 14
 36229                           
 36230                           ;i2c_drv.c: 95: SSP2CON2 |= (((UINT8)(1)) << ((UINT8)(0)));
 36231                           
 36232                           ;incstack = 0
 36233  006B3A  8071               	bsf	3953,0,c	;volatile
 36234  006B3C  0012               	return		;funcret
 36235  006B3E                     __end_of_StartCondition:
 36236                           	opt stack 0
 36237                           tosu	equ	0xFFF
 36238                           tosh	equ	0xFFE
 36239                           tosl	equ	0xFFD
 36240                           pclath	equ	0xFFA
 36241                           tblptru	equ	0xFF8
 36242                           tblptrh	equ	0xFF7
 36243                           tblptrl	equ	0xFF6
 36244                           tablat	equ	0xFF5
 36245                           prodh	equ	0xFF4
 36246                           prodl	equ	0xFF3
 36247                           intcon	equ	0xFF2
 36248                           intcon2	equ	0xFF1
 36249                           intcon3	equ	0xFF0
 36250                           indf0	equ	0xFEF
 36251                           postinc0	equ	0xFEE
 36252                           plusw0	equ	0xFEB
 36253                           fsr0h	equ	0xFEA
 36254                           fsr0l	equ	0xFE9
 36255                           wreg	equ	0xFE8
 36256                           indf1	equ	0xFE7
 36257                           postinc1	equ	0xFE6
 36258                           postdec1	equ	0xFE5
 36259                           plusw1	equ	0xFE3
 36260                           fsr1h	equ	0xFE2
 36261                           fsr1l	equ	0xFE1
 36262                           indf2	equ	0xFDF
 36263                           postinc2	equ	0xFDE
 36264                           postdec2	equ	0xFDD
 36265                           plusw2	equ	0xFDB
 36266                           fsr2h	equ	0xFDA
 36267                           fsr2l	equ	0xFD9
 36268                           status	equ	0xFD8
 36269                           
 36270 ;; *************** function _SetAckStatus *****************
 36271 ;; Defined at:
 36272 ;;		line 162 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 36273 ;; Parameters:    Size  Location     Type
 36274 ;;  AckSts          1    wreg     unsigned char 
 36275 ;; Auto vars:     Size  Location     Type
 36276 ;;  AckSts          1   29[BANK0 ] unsigned char 
 36277 ;; Return value:  Size  Location     Type
 36278 ;;                  1    wreg      void 
 36279 ;; Registers used:
 36280 ;;		wreg
 36281 ;; Tracked objects:
 36282 ;;		On entry : 0/0
 36283 ;;		On exit  : 0/0
 36284 ;;		Unchanged: 0/0
 36285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36286 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36287 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36289 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36290 ;;Total ram usage:        1 bytes
 36291 ;; Hardware stack levels used:    1
 36292 ;; Hardware stack levels required when called:   11
 36293 ;; This function calls:
 36294 ;;		Nothing
 36295 ;; This function is called by:
 36296 ;;		_I2c_ReadData
 36297 ;; This function uses a non-reentrant model
 36298 ;;
 36299                           
 36300                           	psect	text172
 36301  006A14                     __ptext172:
 36302                           	opt stack 0
 36303  006A14                     _SetAckStatus:
 36304                           	opt stack 14
 36305                           
 36306                           ;incstack = 0
 36307                           ;SetAckStatus@AckSts stored from wreg
 36308  006A14  0100               	movlb	0	; () banked
 36309  006A16  6F7D               	movwf	SetAckStatus@AckSts& (0+255),b
 36310                           
 36311                           ;i2c_drv.c: 165: SSP2CON2bits.ACKDT = AckSts;
 36312  006A18  0100               	movlb	0	; () banked
 36313  006A1A  B17D               	btfsc	SetAckStatus@AckSts& (0+255),0,b
 36314  006A1C  D002               	bra	u12655
 36315  006A1E  9A71               	bcf	3953,5,c	;volatile
 36316  006A20  D001               	bra	u12656
 36317  006A22                     u12655:
 36318  006A22  8A71               	bsf	3953,5,c	;volatile
 36319  006A24                     u12656:
 36320                           
 36321                           ;i2c_drv.c: 166: SSP2CON2bits.ACKEN = ((UINT8)(1));
 36322  006A24  8871               	bsf	3953,4,c	;volatile
 36323  006A26  0012               	return		;funcret
 36324  006A28                     __end_of_SetAckStatus:
 36325                           	opt stack 0
 36326                           tosu	equ	0xFFF
 36327                           tosh	equ	0xFFE
 36328                           tosl	equ	0xFFD
 36329                           pclath	equ	0xFFA
 36330                           tblptru	equ	0xFF8
 36331                           tblptrh	equ	0xFF7
 36332                           tblptrl	equ	0xFF6
 36333                           tablat	equ	0xFF5
 36334                           prodh	equ	0xFF4
 36335                           prodl	equ	0xFF3
 36336                           intcon	equ	0xFF2
 36337                           intcon2	equ	0xFF1
 36338                           intcon3	equ	0xFF0
 36339                           indf0	equ	0xFEF
 36340                           postinc0	equ	0xFEE
 36341                           plusw0	equ	0xFEB
 36342                           fsr0h	equ	0xFEA
 36343                           fsr0l	equ	0xFE9
 36344                           wreg	equ	0xFE8
 36345                           indf1	equ	0xFE7
 36346                           postinc1	equ	0xFE6
 36347                           postdec1	equ	0xFE5
 36348                           plusw1	equ	0xFE3
 36349                           fsr1h	equ	0xFE2
 36350                           fsr1l	equ	0xFE1
 36351                           indf2	equ	0xFDF
 36352                           postinc2	equ	0xFDE
 36353                           postdec2	equ	0xFDD
 36354                           plusw2	equ	0xFDB
 36355                           fsr2h	equ	0xFDA
 36356                           fsr2l	equ	0xFD9
 36357                           status	equ	0xFD8
 36358                           
 36359 ;; *************** function _ReadByte *****************
 36360 ;; Defined at:
 36361 ;;		line 204 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 36362 ;; Parameters:    Size  Location     Type
 36363 ;;		None
 36364 ;; Auto vars:     Size  Location     Type
 36365 ;;  Byte            1   29[BANK0 ] unsigned char 
 36366 ;; Return value:  Size  Location     Type
 36367 ;;                  1    wreg      unsigned char 
 36368 ;; Registers used:
 36369 ;;		wreg, status,2
 36370 ;; Tracked objects:
 36371 ;;		On entry : 0/0
 36372 ;;		On exit  : 0/0
 36373 ;;		Unchanged: 0/0
 36374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36375 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36376 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36378 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36379 ;;Total ram usage:        1 bytes
 36380 ;; Hardware stack levels used:    1
 36381 ;; Hardware stack levels required when called:   11
 36382 ;; This function calls:
 36383 ;;		Nothing
 36384 ;; This function is called by:
 36385 ;;		_I2c_ReadData
 36386 ;; This function uses a non-reentrant model
 36387 ;;
 36388                           
 36389                           	psect	text173
 36390  006B00                     __ptext173:
 36391                           	opt stack 0
 36392  006B00                     _ReadByte:
 36393                           	opt stack 14
 36394                           
 36395                           ;i2c_drv.c: 207: UINT8 Byte;
 36396                           ;i2c_drv.c: 210: Byte = SSP2BUF;
 36397                           
 36398                           ;incstack = 0
 36399  006B00  CF75 F07D          	movff	3957,ReadByte@Byte	;volatile
 36400                           
 36401                           ;i2c_drv.c: 213: return Byte;
 36402  006B04  0100               	movlb	0	; () banked
 36403  006B06  517D               	movf	ReadByte@Byte& (0+255),w,b
 36404  006B08  0012               	return	
 36405  006B0A                     __end_of_ReadByte:
 36406                           	opt stack 0
 36407                           tosu	equ	0xFFF
 36408                           tosh	equ	0xFFE
 36409                           tosl	equ	0xFFD
 36410                           pclath	equ	0xFFA
 36411                           tblptru	equ	0xFF8
 36412                           tblptrh	equ	0xFF7
 36413                           tblptrl	equ	0xFF6
 36414                           tablat	equ	0xFF5
 36415                           prodh	equ	0xFF4
 36416                           prodl	equ	0xFF3
 36417                           intcon	equ	0xFF2
 36418                           intcon2	equ	0xFF1
 36419                           intcon3	equ	0xFF0
 36420                           indf0	equ	0xFEF
 36421                           postinc0	equ	0xFEE
 36422                           plusw0	equ	0xFEB
 36423                           fsr0h	equ	0xFEA
 36424                           fsr0l	equ	0xFE9
 36425                           wreg	equ	0xFE8
 36426                           indf1	equ	0xFE7
 36427                           postinc1	equ	0xFE6
 36428                           postdec1	equ	0xFE5
 36429                           plusw1	equ	0xFE3
 36430                           fsr1h	equ	0xFE2
 36431                           fsr1l	equ	0xFE1
 36432                           indf2	equ	0xFDF
 36433                           postinc2	equ	0xFDE
 36434                           postdec2	equ	0xFDD
 36435                           plusw2	equ	0xFDB
 36436                           fsr2h	equ	0xFDA
 36437                           fsr2l	equ	0xFD9
 36438                           status	equ	0xFD8
 36439                           
 36440 ;; *************** function _GenerateEvt *****************
 36441 ;; Defined at:
 36442 ;;		line 75 in file "../../MercuryFwk/Source/c/02_Osl/os_ser.c"
 36443 ;; Parameters:    Size  Location     Type
 36444 ;;  Event           2   29[BANK0 ] PTR struct EventStructur
 36445 ;;		 -> AlarmEvent(1), I2cRxPacket(6), I2cReadDataEvt(1), I2cWriteDataEvt(1), 
 36446 ;;		 -> GetMethod(1), InitNetwork(1), MdmStsReady(1), SmsTxtReady(1), 
 36447 ;;		 -> GetSmsText(1), SmsEvent(1), ClipEvent(1), RingEvent(1), 
 36448 ;;		 -> SendSmsEvent(1), NewStringMdmTerminal(1), NewMdmEvtParserRequest(1), NewStringReceived(1), 
 36449 ;;		 -> MdmOnOffPulseRequest(1), CallClosedEvent(1), IncomingCallEvent(1), NewSmsEvent(1), 
 36450 ;; Auto vars:     Size  Location     Type
 36451 ;;  EventStatus     1   31[BANK0 ] enum E7727
 36452 ;; Return value:  Size  Location     Type
 36453 ;;                  1    wreg      enum E7699
 36454 ;; Registers used:
 36455 ;;		wreg, fsr2l, fsr2h, status,2
 36456 ;; Tracked objects:
 36457 ;;		On entry : 0/0
 36458 ;;		On exit  : 0/0
 36459 ;;		Unchanged: 0/0
 36460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36461 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36462 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36464 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36465 ;;Total ram usage:        3 bytes
 36466 ;; Hardware stack levels used:    1
 36467 ;; Hardware stack levels required when called:   11
 36468 ;; This function calls:
 36469 ;;		Nothing
 36470 ;; This function is called by:
 36471 ;;		_I2c_ReadData
 36472 ;;		_CheckModem
 36473 ;;		_TurnOnModem
 36474 ;;		_ConfigureModem
 36475 ;;		_ModemEvtParser
 36476 ;;		_GetSmsSm
 36477 ;;		_Mdm_RequestSmsData
 36478 ;;		_I2cSlv_SendI2cMsg
 36479 ;;		_I2cSlv_ReceiveI2cMsg
 36480 ;;		_RiSm
 36481 ;;		_Mdm_SendSmsData
 36482 ;;		_MdmHttp_InitGprsNetwork
 36483 ;;		_MdmHttp_GetMethod
 36484 ;;		_Alarm
 36485 ;; This function uses a non-reentrant model
 36486 ;;
 36487                           
 36488                           	psect	text174
 36489  0069A4                     __ptext174:
 36490                           	opt stack 0
 36491  0069A4                     _GenerateEvt:
 36492                           	opt stack 13
 36493                           
 36494                           ;os_ser.c: 78: EventStatusType EventStatus = EventIdle;
 36495                           
 36496                           ; BSR set to: 0
 36497                           ;incstack = 0
 36498  0069A4  0E00               	movlw	0
 36499  0069A6  0100               	movlb	0	; () banked
 36500  0069A8  6F7F               	movwf	GenerateEvt@EventStatus& (0+255),b
 36501                           
 36502                           ; BSR set to: 0
 36503                           ;os_ser.c: 81: Event->EventStatus = EventSent;
 36504  0069AA  C07D  FFD9         	movff	GenerateEvt@Event,fsr2l
 36505  0069AE  C07E  FFDA         	movff	GenerateEvt@Event+1,fsr2h
 36506  0069B2  0E02               	movlw	2
 36507  0069B4  6EDF               	movwf	indf2,c
 36508                           
 36509                           ; BSR set to: 0
 36510                           ;os_ser.c: 83: EventStatus = EventSent;
 36511  0069B6  0E02               	movlw	2
 36512  0069B8  6F7F               	movwf	GenerateEvt@EventStatus& (0+255),b
 36513  0069BA  0012               	return	
 36514  0069BC                     __end_of_GenerateEvt:
 36515                           	opt stack 0
 36516                           tosu	equ	0xFFF
 36517                           tosh	equ	0xFFE
 36518                           tosl	equ	0xFFD
 36519                           pclath	equ	0xFFA
 36520                           tblptru	equ	0xFF8
 36521                           tblptrh	equ	0xFF7
 36522                           tblptrl	equ	0xFF6
 36523                           tablat	equ	0xFF5
 36524                           prodh	equ	0xFF4
 36525                           prodl	equ	0xFF3
 36526                           intcon	equ	0xFF2
 36527                           intcon2	equ	0xFF1
 36528                           intcon3	equ	0xFF0
 36529                           indf0	equ	0xFEF
 36530                           postinc0	equ	0xFEE
 36531                           plusw0	equ	0xFEB
 36532                           fsr0h	equ	0xFEA
 36533                           fsr0l	equ	0xFE9
 36534                           wreg	equ	0xFE8
 36535                           indf1	equ	0xFE7
 36536                           postinc1	equ	0xFE6
 36537                           postdec1	equ	0xFE5
 36538                           plusw1	equ	0xFE3
 36539                           fsr1h	equ	0xFE2
 36540                           fsr1l	equ	0xFE1
 36541                           indf2	equ	0xFDF
 36542                           postinc2	equ	0xFDE
 36543                           postdec2	equ	0xFDD
 36544                           plusw2	equ	0xFDB
 36545                           fsr2h	equ	0xFDA
 36546                           fsr2l	equ	0xFD9
 36547                           status	equ	0xFD8
 36548                           
 36549 ;; *************** function _EnableReceiver *****************
 36550 ;; Defined at:
 36551 ;;		line 177 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 36552 ;; Parameters:    Size  Location     Type
 36553 ;;		None
 36554 ;; Auto vars:     Size  Location     Type
 36555 ;;		None
 36556 ;; Return value:  Size  Location     Type
 36557 ;;                  1    wreg      void 
 36558 ;; Registers used:
 36559 ;;		status,2, status,0
 36560 ;; Tracked objects:
 36561 ;;		On entry : 0/0
 36562 ;;		On exit  : 0/0
 36563 ;;		Unchanged: 0/0
 36564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36565 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36566 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36568 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36569 ;;Total ram usage:        0 bytes
 36570 ;; Hardware stack levels used:    1
 36571 ;; Hardware stack levels required when called:   11
 36572 ;; This function calls:
 36573 ;;		Nothing
 36574 ;; This function is called by:
 36575 ;;		_I2c_ReadData
 36576 ;; This function uses a non-reentrant model
 36577 ;;
 36578                           
 36579                           	psect	text175
 36580  006B3E                     __ptext175:
 36581                           	opt stack 0
 36582  006B3E                     _EnableReceiver:
 36583                           	opt stack 14
 36584                           
 36585                           ;i2c_drv.c: 179: SSP2CON2 |= ((((UINT8)(1)) << ((UINT8)(3))) & ((UINT8)(0x08)));
 36586                           
 36587                           ; BSR set to: 0
 36588                           ;incstack = 0
 36589  006B3E  8671               	bsf	3953,3,c	;volatile
 36590  006B40  0012               	return		;funcret
 36591  006B42                     __end_of_EnableReceiver:
 36592                           	opt stack 0
 36593                           tosu	equ	0xFFF
 36594                           tosh	equ	0xFFE
 36595                           tosl	equ	0xFFD
 36596                           pclath	equ	0xFFA
 36597                           tblptru	equ	0xFF8
 36598                           tblptrh	equ	0xFF7
 36599                           tblptrl	equ	0xFF6
 36600                           tablat	equ	0xFF5
 36601                           prodh	equ	0xFF4
 36602                           prodl	equ	0xFF3
 36603                           intcon	equ	0xFF2
 36604                           intcon2	equ	0xFF1
 36605                           intcon3	equ	0xFF0
 36606                           indf0	equ	0xFEF
 36607                           postinc0	equ	0xFEE
 36608                           plusw0	equ	0xFEB
 36609                           fsr0h	equ	0xFEA
 36610                           fsr0l	equ	0xFE9
 36611                           wreg	equ	0xFE8
 36612                           indf1	equ	0xFE7
 36613                           postinc1	equ	0xFE6
 36614                           postdec1	equ	0xFE5
 36615                           plusw1	equ	0xFE3
 36616                           fsr1h	equ	0xFE2
 36617                           fsr1l	equ	0xFE1
 36618                           indf2	equ	0xFDF
 36619                           postinc2	equ	0xFDE
 36620                           postdec2	equ	0xFDD
 36621                           plusw2	equ	0xFDB
 36622                           fsr2h	equ	0xFDA
 36623                           fsr2l	equ	0xFD9
 36624                           status	equ	0xFD8
 36625                           
 36626 ;; *************** function _CheckTxStatus *****************
 36627 ;; Defined at:
 36628 ;;		line 148 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 36629 ;; Parameters:    Size  Location     Type
 36630 ;;		None
 36631 ;; Auto vars:     Size  Location     Type
 36632 ;;		None
 36633 ;; Return value:  Size  Location     Type
 36634 ;;                  1    wreg      unsigned char 
 36635 ;; Registers used:
 36636 ;;		wreg, status,2, status,0
 36637 ;; Tracked objects:
 36638 ;;		On entry : 0/0
 36639 ;;		On exit  : 0/0
 36640 ;;		Unchanged: 0/0
 36641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36642 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36643 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36645 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36646 ;;Total ram usage:        0 bytes
 36647 ;; Hardware stack levels used:    1
 36648 ;; Hardware stack levels required when called:   11
 36649 ;; This function calls:
 36650 ;;		Nothing
 36651 ;; This function is called by:
 36652 ;;		_I2c_WriteData
 36653 ;;		_I2c_ReadData
 36654 ;; This function uses a non-reentrant model
 36655 ;;
 36656                           
 36657                           	psect	text176
 36658  006B0A                     __ptext176:
 36659                           	opt stack 0
 36660  006B0A                     _CheckTxStatus:
 36661                           	opt stack 14
 36662                           
 36663                           ;i2c_drv.c: 151: return ((SSP2STAT & ((UINT8)(0x04))) >> ((UINT8)(2)));
 36664                           
 36665                           ;incstack = 0
 36666  006B0A  4073               	rrncf	3955,w,c	;volatile
 36667  006B0C  42E8               	rrncf	wreg,f,c
 36668  006B0E  0B3F               	andlw	63
 36669  006B10  0B01               	andlw	1
 36670  006B12  0012               	return	
 36671  006B14                     __end_of_CheckTxStatus:
 36672                           	opt stack 0
 36673                           tosu	equ	0xFFF
 36674                           tosh	equ	0xFFE
 36675                           tosl	equ	0xFFD
 36676                           pclath	equ	0xFFA
 36677                           tblptru	equ	0xFF8
 36678                           tblptrh	equ	0xFF7
 36679                           tblptrl	equ	0xFF6
 36680                           tablat	equ	0xFF5
 36681                           prodh	equ	0xFF4
 36682                           prodl	equ	0xFF3
 36683                           intcon	equ	0xFF2
 36684                           intcon2	equ	0xFF1
 36685                           intcon3	equ	0xFF0
 36686                           indf0	equ	0xFEF
 36687                           postinc0	equ	0xFEE
 36688                           plusw0	equ	0xFEB
 36689                           fsr0h	equ	0xFEA
 36690                           fsr0l	equ	0xFE9
 36691                           wreg	equ	0xFE8
 36692                           indf1	equ	0xFE7
 36693                           postinc1	equ	0xFE6
 36694                           postdec1	equ	0xFE5
 36695                           plusw1	equ	0xFE3
 36696                           fsr1h	equ	0xFE2
 36697                           fsr1l	equ	0xFE1
 36698                           indf2	equ	0xFDF
 36699                           postinc2	equ	0xFDE
 36700                           postdec2	equ	0xFDD
 36701                           plusw2	equ	0xFDB
 36702                           fsr2h	equ	0xFDA
 36703                           fsr2l	equ	0xFD9
 36704                           status	equ	0xFD8
 36705                           
 36706 ;; *************** function _CheckAckStatus *****************
 36707 ;; Defined at:
 36708 ;;		line 134 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 36709 ;; Parameters:    Size  Location     Type
 36710 ;;		None
 36711 ;; Auto vars:     Size  Location     Type
 36712 ;;		None
 36713 ;; Return value:  Size  Location     Type
 36714 ;;                  1    wreg      unsigned char 
 36715 ;; Registers used:
 36716 ;;		wreg, status,2, status,0
 36717 ;; Tracked objects:
 36718 ;;		On entry : 0/0
 36719 ;;		On exit  : 0/0
 36720 ;;		Unchanged: 0/0
 36721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36722 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36723 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36725 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36726 ;;Total ram usage:        0 bytes
 36727 ;; Hardware stack levels used:    1
 36728 ;; Hardware stack levels required when called:   11
 36729 ;; This function calls:
 36730 ;;		Nothing
 36731 ;; This function is called by:
 36732 ;;		_I2c_WriteData
 36733 ;;		_I2c_ReadData
 36734 ;; This function uses a non-reentrant model
 36735 ;;
 36736                           
 36737                           	psect	text177
 36738  006B14                     __ptext177:
 36739                           	opt stack 0
 36740  006B14                     _CheckAckStatus:
 36741                           	opt stack 14
 36742                           
 36743                           ;i2c_drv.c: 137: return ((SSP2CON2 & ((UINT8)(0x40))) >> ((UINT8)(6)));
 36744                           
 36745                           ;incstack = 0
 36746  006B14  4471               	rlncf	3953,w,c	;volatile
 36747  006B16  46E8               	rlncf	wreg,f,c
 36748  006B18  0B03               	andlw	3
 36749  006B1A  0B01               	andlw	1
 36750  006B1C  0012               	return	
 36751  006B1E                     __end_of_CheckAckStatus:
 36752                           	opt stack 0
 36753                           tosu	equ	0xFFF
 36754                           tosh	equ	0xFFE
 36755                           tosl	equ	0xFFD
 36756                           pclath	equ	0xFFA
 36757                           tblptru	equ	0xFF8
 36758                           tblptrh	equ	0xFF7
 36759                           tblptrl	equ	0xFF6
 36760                           tablat	equ	0xFF5
 36761                           prodh	equ	0xFF4
 36762                           prodl	equ	0xFF3
 36763                           intcon	equ	0xFF2
 36764                           intcon2	equ	0xFF1
 36765                           intcon3	equ	0xFF0
 36766                           indf0	equ	0xFEF
 36767                           postinc0	equ	0xFEE
 36768                           plusw0	equ	0xFEB
 36769                           fsr0h	equ	0xFEA
 36770                           fsr0l	equ	0xFE9
 36771                           wreg	equ	0xFE8
 36772                           indf1	equ	0xFE7
 36773                           postinc1	equ	0xFE6
 36774                           postdec1	equ	0xFE5
 36775                           plusw1	equ	0xFE3
 36776                           fsr1h	equ	0xFE2
 36777                           fsr1l	equ	0xFE1
 36778                           indf2	equ	0xFDF
 36779                           postinc2	equ	0xFDE
 36780                           postdec2	equ	0xFDD
 36781                           plusw2	equ	0xFDB
 36782                           fsr2h	equ	0xFDA
 36783                           fsr2l	equ	0xFD9
 36784                           status	equ	0xFD8
 36785                           
 36786 ;; *************** function _LowPriorityIsr *****************
 36787 ;; Defined at:
 36788 ;;		line 236 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/irq.c"
 36789 ;; Parameters:    Size  Location     Type
 36790 ;;		None
 36791 ;; Auto vars:     Size  Location     Type
 36792 ;;		None
 36793 ;; Return value:  Size  Location     Type
 36794 ;;                  1    wreg      void 
 36795 ;; Registers used:
 36796 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 36797 ;; Tracked objects:
 36798 ;;		On entry : 0/0
 36799 ;;		On exit  : 0/0
 36800 ;;		Unchanged: 0/0
 36801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36802 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36803 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36804 ;;      Temps:          0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36805 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36806 ;;Total ram usage:       21 bytes
 36807 ;; Hardware stack levels used:    1
 36808 ;; Hardware stack levels required when called:   10
 36809 ;; This function calls:
 36810 ;;		_Tmr_Tmr2Isr
 36811 ;; This function is called by:
 36812 ;;		Interrupt level 1
 36813 ;; This function uses a non-reentrant model
 36814 ;;
 36815                           
 36816                           	psect	intcodelo
 36817  000018                     __pintcodelo:
 36818                           	opt stack 0
 36819  000018                     _LowPriorityIsr:
 36820                           	opt stack 8
 36821                           
 36822                           ;incstack = 0
 36823  000018  8042               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 36824  00001A  CFD8 F068          	movff	status,??_LowPriorityIsr
 36825  00001E  CFE8 F069          	movff	wreg,??_LowPriorityIsr+1
 36826  000022  CFE0 F06A          	movff	bsr,??_LowPriorityIsr+2
 36827  000026  CFFA F06B          	movff	pclath,??_LowPriorityIsr+3
 36828  00002A  CFFB F06C          	movff	pclatu,??_LowPriorityIsr+4
 36829  00002E  CFE9 F06D          	movff	fsr0l,??_LowPriorityIsr+5
 36830  000032  CFEA F06E          	movff	fsr0h,??_LowPriorityIsr+6
 36831  000036  CFE1 F06F          	movff	fsr1l,??_LowPriorityIsr+7
 36832  00003A  CFE2 F070          	movff	fsr1h,??_LowPriorityIsr+8
 36833  00003E  CFD9 F071          	movff	fsr2l,??_LowPriorityIsr+9
 36834  000042  CFDA F072          	movff	fsr2h,??_LowPriorityIsr+10
 36835  000046  CFF3 F073          	movff	prodl,??_LowPriorityIsr+11
 36836  00004A  CFF4 F074          	movff	prodh,??_LowPriorityIsr+12
 36837  00004E  CFF6 F075          	movff	tblptrl,??_LowPriorityIsr+13
 36838  000052  CFF7 F076          	movff	tblptrh,??_LowPriorityIsr+14
 36839  000056  CFF8 F077          	movff	tblptru,??_LowPriorityIsr+15
 36840  00005A  CFF5 F078          	movff	tablat,??_LowPriorityIsr+16
 36841  00005E  C042  F079         	movff	btemp,??_LowPriorityIsr+17
 36842  000062  C043  F07A         	movff	btemp+1,??_LowPriorityIsr+18
 36843  000066  C044  F07B         	movff	btemp+2,??_LowPriorityIsr+19
 36844  00006A  C045  F07C         	movff	btemp+3,??_LowPriorityIsr+20
 36845                           
 36846                           ;irq.c: 258: if (PIR1bits.TMR2IF == ((UINT8)(1)))
 36847  00006E  B29E               	btfsc	3998,1,c	;volatile
 36848                           
 36849                           ;irq.c: 259: {
 36850                           ;irq.c: 261: Tmr_Tmr2Isr();
 36851  000070  EC95  F033         	call	_Tmr_Tmr2Isr	;wreg free
 36852  000074  C07C  F045         	movff	??_LowPriorityIsr+20,btemp+3
 36853  000078  C07B  F044         	movff	??_LowPriorityIsr+19,btemp+2
 36854  00007C  C07A  F043         	movff	??_LowPriorityIsr+18,btemp+1
 36855  000080  C079  F042         	movff	??_LowPriorityIsr+17,btemp
 36856  000084  C078  FFF5         	movff	??_LowPriorityIsr+16,tablat
 36857  000088  C077  FFF8         	movff	??_LowPriorityIsr+15,tblptru
 36858  00008C  C076  FFF7         	movff	??_LowPriorityIsr+14,tblptrh
 36859  000090  C075  FFF6         	movff	??_LowPriorityIsr+13,tblptrl
 36860  000094  C074  FFF4         	movff	??_LowPriorityIsr+12,prodh
 36861  000098  C073  FFF3         	movff	??_LowPriorityIsr+11,prodl
 36862  00009C  C072  FFDA         	movff	??_LowPriorityIsr+10,fsr2h
 36863  0000A0  C071  FFD9         	movff	??_LowPriorityIsr+9,fsr2l
 36864  0000A4  C070  FFE2         	movff	??_LowPriorityIsr+8,fsr1h
 36865  0000A8  C06F  FFE1         	movff	??_LowPriorityIsr+7,fsr1l
 36866  0000AC  C06E  FFEA         	movff	??_LowPriorityIsr+6,fsr0h
 36867  0000B0  C06D  FFE9         	movff	??_LowPriorityIsr+5,fsr0l
 36868  0000B4  C06C  FFFB         	movff	??_LowPriorityIsr+4,pclatu
 36869  0000B8  C06B  FFFA         	movff	??_LowPriorityIsr+3,pclath
 36870  0000BC  C06A  FFE0         	movff	??_LowPriorityIsr+2,bsr
 36871  0000C0  C069  FFE8         	movff	??_LowPriorityIsr+1,wreg
 36872  0000C4  C068  FFD8         	movff	??_LowPriorityIsr,status
 36873  0000C8  9042               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 36874  0000CA  0010               	retfie	
 36875  0000CC                     __end_of_LowPriorityIsr:
 36876                           	opt stack 0
 36877                           tosu	equ	0xFFF
 36878                           tosh	equ	0xFFE
 36879                           tosl	equ	0xFFD
 36880                           pclatu	equ	0xFFB
 36881                           pclath	equ	0xFFA
 36882                           tblptru	equ	0xFF8
 36883                           tblptrh	equ	0xFF7
 36884                           tblptrl	equ	0xFF6
 36885                           tablat	equ	0xFF5
 36886                           prodh	equ	0xFF4
 36887                           prodl	equ	0xFF3
 36888                           intcon	equ	0xFF2
 36889                           intcon2	equ	0xFF1
 36890                           intcon3	equ	0xFF0
 36891                           indf0	equ	0xFEF
 36892                           postinc0	equ	0xFEE
 36893                           plusw0	equ	0xFEB
 36894                           fsr0h	equ	0xFEA
 36895                           fsr0l	equ	0xFE9
 36896                           wreg	equ	0xFE8
 36897                           indf1	equ	0xFE7
 36898                           postinc1	equ	0xFE6
 36899                           postdec1	equ	0xFE5
 36900                           plusw1	equ	0xFE3
 36901                           fsr1h	equ	0xFE2
 36902                           fsr1l	equ	0xFE1
 36903                           bsr	equ	0xFE0
 36904                           indf2	equ	0xFDF
 36905                           postinc2	equ	0xFDE
 36906                           postdec2	equ	0xFDD
 36907                           plusw2	equ	0xFDB
 36908                           fsr2h	equ	0xFDA
 36909                           fsr2l	equ	0xFD9
 36910                           status	equ	0xFD8
 36911                           
 36912 ;; *************** function _Tmr_Tmr2Isr *****************
 36913 ;; Defined at:
 36914 ;;		line 308 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
 36915 ;; Parameters:    Size  Location     Type
 36916 ;;		None
 36917 ;; Auto vars:     Size  Location     Type
 36918 ;;		None
 36919 ;; Return value:  Size  Location     Type
 36920 ;;                  1    wreg      void 
 36921 ;; Registers used:
 36922 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 36923 ;; Tracked objects:
 36924 ;;		On entry : 0/0
 36925 ;;		On exit  : 0/0
 36926 ;;		Unchanged: 0/0
 36927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36928 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36929 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36931 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36932 ;;Total ram usage:        0 bytes
 36933 ;; Hardware stack levels used:    1
 36934 ;; Hardware stack levels required when called:    9
 36935 ;; This function calls:
 36936 ;;		Absolute function
 36937 ;;		_Sch_SchmIntService
 36938 ;; This function is called by:
 36939 ;;		_LowPriorityIsr
 36940 ;; This function uses a non-reentrant model
 36941 ;;
 36942                           
 36943                           	psect	text179
 36944  00672A                     __ptext179:
 36945                           	opt stack 0
 36946  00672A                     _Tmr_Tmr2Isr:
 36947                           	opt stack 8
 36948                           
 36949                           ;tmr_drv.c: 311: PIR1bits.TMR2IF = 0u;
 36950                           
 36951                           ;incstack = 0
 36952  00672A  929E               	bcf	3998,1,c	;volatile
 36953                           
 36954                           ;tmr_drv.c: 314: if (Tmr2IsrCallback != (0))
 36955  00672C  0102               	movlb	2	; () banked
 36956  00672E  51EA               	movf	_Tmr2IsrCallback& (0+255),w,b
 36957  006730  11EB               	iorwf	(_Tmr2IsrCallback+1)& (0+255),w,b
 36958  006732  B4D8               	btfsc	status,2,c
 36959  006734  0012               	return	
 36960                           
 36961                           ; BSR set to: 2
 36962                           ;tmr_drv.c: 315: {
 36963                           ;tmr_drv.c: 317: Tmr2IsrCallback();
 36964  006736  D801               	call	i1u1647_28
 36965  006738  0012               	return	
 36966  00673A                     i1u1647_28:
 36967  00673A  0005               	push	
 36968  00673C  6EFA               	movwf	pclath,c
 36969  00673E  51EA               	movf	_Tmr2IsrCallback& (0+255),w,b
 36970  006740  6EFD               	movwf	tosl,c
 36971  006742  51EB               	movf	(_Tmr2IsrCallback+1)& (0+255),w,b
 36972  006744  6EFE               	movwf	tosh,c
 36973  006746  50F8               	movf	tblptru,w,c
 36974  006748  6EFF               	movwf	tosu,c
 36975  00674A  50FA               	movf	pclath,w,c
 36976  00674C  0012               	return		;indir
 36977  00674E                     __end_of_Tmr_Tmr2Isr:
 36978                           	opt stack 0
 36979                           tosu	equ	0xFFF
 36980                           tosh	equ	0xFFE
 36981                           tosl	equ	0xFFD
 36982                           pclatu	equ	0xFFB
 36983                           pclath	equ	0xFFA
 36984                           tblptru	equ	0xFF8
 36985                           tblptrh	equ	0xFF7
 36986                           tblptrl	equ	0xFF6
 36987                           tablat	equ	0xFF5
 36988                           prodh	equ	0xFF4
 36989                           prodl	equ	0xFF3
 36990                           intcon	equ	0xFF2
 36991                           intcon2	equ	0xFF1
 36992                           intcon3	equ	0xFF0
 36993                           indf0	equ	0xFEF
 36994                           postinc0	equ	0xFEE
 36995                           plusw0	equ	0xFEB
 36996                           fsr0h	equ	0xFEA
 36997                           fsr0l	equ	0xFE9
 36998                           wreg	equ	0xFE8
 36999                           indf1	equ	0xFE7
 37000                           postinc1	equ	0xFE6
 37001                           postdec1	equ	0xFE5
 37002                           plusw1	equ	0xFE3
 37003                           fsr1h	equ	0xFE2
 37004                           fsr1l	equ	0xFE1
 37005                           bsr	equ	0xFE0
 37006                           indf2	equ	0xFDF
 37007                           postinc2	equ	0xFDE
 37008                           postdec2	equ	0xFDD
 37009                           plusw2	equ	0xFDB
 37010                           fsr2h	equ	0xFDA
 37011                           fsr2l	equ	0xFD9
 37012                           status	equ	0xFD8
 37013                           
 37014 ;; *************** function _Sch_SchmIntService *****************
 37015 ;; Defined at:
 37016 ;;		line 214 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
 37017 ;; Parameters:    Size  Location     Type
 37018 ;;		None
 37019 ;; Auto vars:     Size  Location     Type
 37020 ;;		None
 37021 ;; Return value:  Size  Location     Type
 37022 ;;                  1    wreg      void 
 37023 ;; Registers used:
 37024 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 37025 ;; Tracked objects:
 37026 ;;		On entry : 0/0
 37027 ;;		On exit  : 0/0
 37028 ;;		Unchanged: 0/0
 37029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37030 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37031 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37033 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37034 ;;Total ram usage:        0 bytes
 37035 ;; Hardware stack levels used:    1
 37036 ;; Hardware stack levels required when called:    8
 37037 ;; This function calls:
 37038 ;;		_OsAlrm_ProcessOsAlarms
 37039 ;;		_UpdateOsCounters
 37040 ;;		_UpdateSchFlag
 37041 ;; This function is called by:
 37042 ;;		_SystemInit
 37043 ;;		_Tmr_Tmr2Isr
 37044 ;; This function uses a non-reentrant model
 37045 ;;
 37046                           
 37047                           	psect	text180
 37048  006AAE                     __ptext180:
 37049                           	opt stack 0
 37050  006AAE                     _Sch_SchmIntService:
 37051                           	opt stack 8
 37052                           
 37053                           ;os_sched.c: 217: UpdateSchFlag();
 37054                           
 37055                           ;incstack = 0
 37056  006AAE  EC6A  F034         	call	_UpdateSchFlag	;wreg free
 37057                           
 37058                           ;os_sched.c: 219: UpdateOsCounters();
 37059  006AB2  EC47  F035         	call	_UpdateOsCounters	;wreg free
 37060                           
 37061                           ;os_sched.c: 221: OsAlrm_ProcessOsAlarms();
 37062  006AB6  EC1A  F012         	call	_OsAlrm_ProcessOsAlarms	;wreg free
 37063  006ABA  0012               	return		;funcret
 37064  006ABC                     __end_of_Sch_SchmIntService:
 37065                           	opt stack 0
 37066                           tosu	equ	0xFFF
 37067                           tosh	equ	0xFFE
 37068                           tosl	equ	0xFFD
 37069                           pclatu	equ	0xFFB
 37070                           pclath	equ	0xFFA
 37071                           tblptru	equ	0xFF8
 37072                           tblptrh	equ	0xFF7
 37073                           tblptrl	equ	0xFF6
 37074                           tablat	equ	0xFF5
 37075                           prodh	equ	0xFF4
 37076                           prodl	equ	0xFF3
 37077                           intcon	equ	0xFF2
 37078                           intcon2	equ	0xFF1
 37079                           intcon3	equ	0xFF0
 37080                           indf0	equ	0xFEF
 37081                           postinc0	equ	0xFEE
 37082                           plusw0	equ	0xFEB
 37083                           fsr0h	equ	0xFEA
 37084                           fsr0l	equ	0xFE9
 37085                           wreg	equ	0xFE8
 37086                           indf1	equ	0xFE7
 37087                           postinc1	equ	0xFE6
 37088                           postdec1	equ	0xFE5
 37089                           plusw1	equ	0xFE3
 37090                           fsr1h	equ	0xFE2
 37091                           fsr1l	equ	0xFE1
 37092                           bsr	equ	0xFE0
 37093                           indf2	equ	0xFDF
 37094                           postinc2	equ	0xFDE
 37095                           postdec2	equ	0xFDD
 37096                           plusw2	equ	0xFDB
 37097                           fsr2h	equ	0xFDA
 37098                           fsr2l	equ	0xFD9
 37099                           status	equ	0xFD8
 37100                           
 37101 ;; *************** function _UpdateSchFlag *****************
 37102 ;; Defined at:
 37103 ;;		line 132 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
 37104 ;; Parameters:    Size  Location     Type
 37105 ;;		None
 37106 ;; Auto vars:     Size  Location     Type
 37107 ;;		None
 37108 ;; Return value:  Size  Location     Type
 37109 ;;                  1    wreg      void 
 37110 ;; Registers used:
 37111 ;;		wreg, status,2, status,0
 37112 ;; Tracked objects:
 37113 ;;		On entry : 0/0
 37114 ;;		On exit  : 0/0
 37115 ;;		Unchanged: 0/0
 37116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37120 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37121 ;;Total ram usage:        0 bytes
 37122 ;; Hardware stack levels used:    1
 37123 ;; Hardware stack levels required when called:    4
 37124 ;; This function calls:
 37125 ;;		Nothing
 37126 ;; This function is called by:
 37127 ;;		_Sch_SchmIntService
 37128 ;; This function uses a non-reentrant model
 37129 ;;
 37130                           
 37131                           	psect	text181
 37132  0068D4                     __ptext181:
 37133                           	opt stack 0
 37134  0068D4                     _UpdateSchFlag:
 37135                           	opt stack 11
 37136                           
 37137                           ;os_sched.c: 135: static UINT16 InterruptCounter = 0;
 37138                           ;os_sched.c: 138: InterruptCounter++;
 37139                           
 37140                           ;incstack = 0
 37141  0068D4  0102               	movlb	2	; () banked
 37142  0068D6  4BDC               	infsnz	UpdateSchFlag@InterruptCounter& (0+255),f,b
 37143  0068D8  2BDD               	incf	(UpdateSchFlag@InterruptCounter+1)& (0+255),f,b
 37144                           
 37145                           ; BSR set to: 2
 37146                           ;os_sched.c: 140: if (InterruptCounter >= ((((UINT16)(1000))*((UINT16)(1)))/1000))
 37147  0068DA  51DC               	movf	UpdateSchFlag@InterruptCounter& (0+255),w,b
 37148  0068DC  11DD               	iorwf	(UpdateSchFlag@InterruptCounter+1)& (0+255),w,b
 37149  0068DE  B4D8               	btfsc	status,2,c
 37150  0068E0  0012               	return	
 37151                           
 37152                           ; BSR set to: 2
 37153                           ;os_sched.c: 141: {
 37154                           ;os_sched.c: 143: InterruptCounter = 0;
 37155  0068E2  0E00               	movlw	0
 37156  0068E4  6FDD               	movwf	(UpdateSchFlag@InterruptCounter+1)& (0+255),b
 37157  0068E6  0E00               	movlw	0
 37158  0068E8  6FDC               	movwf	UpdateSchFlag@InterruptCounter& (0+255),b
 37159                           
 37160                           ;os_sched.c: 145: MainSystemTimebaseFlag = CallTaskPhase;
 37161  0068EA  0E00               	movlw	0
 37162  0068EC  6FF4               	movwf	_MainSystemTimebaseFlag& (0+255),b
 37163  0068EE  0012               	return	
 37164  0068F0                     __end_of_UpdateSchFlag:
 37165                           	opt stack 0
 37166                           tosu	equ	0xFFF
 37167                           tosh	equ	0xFFE
 37168                           tosl	equ	0xFFD
 37169                           pclatu	equ	0xFFB
 37170                           pclath	equ	0xFFA
 37171                           tblptru	equ	0xFF8
 37172                           tblptrh	equ	0xFF7
 37173                           tblptrl	equ	0xFF6
 37174                           tablat	equ	0xFF5
 37175                           prodh	equ	0xFF4
 37176                           prodl	equ	0xFF3
 37177                           intcon	equ	0xFF2
 37178                           intcon2	equ	0xFF1
 37179                           intcon3	equ	0xFF0
 37180                           indf0	equ	0xFEF
 37181                           postinc0	equ	0xFEE
 37182                           plusw0	equ	0xFEB
 37183                           fsr0h	equ	0xFEA
 37184                           fsr0l	equ	0xFE9
 37185                           wreg	equ	0xFE8
 37186                           indf1	equ	0xFE7
 37187                           postinc1	equ	0xFE6
 37188                           postdec1	equ	0xFE5
 37189                           plusw1	equ	0xFE3
 37190                           fsr1h	equ	0xFE2
 37191                           fsr1l	equ	0xFE1
 37192                           bsr	equ	0xFE0
 37193                           indf2	equ	0xFDF
 37194                           postinc2	equ	0xFDE
 37195                           postdec2	equ	0xFDD
 37196                           plusw2	equ	0xFDB
 37197                           fsr2h	equ	0xFDA
 37198                           fsr2l	equ	0xFD9
 37199                           status	equ	0xFD8
 37200                           
 37201 ;; *************** function _UpdateOsCounters *****************
 37202 ;; Defined at:
 37203 ;;		line 157 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
 37204 ;; Parameters:    Size  Location     Type
 37205 ;;		None
 37206 ;; Auto vars:     Size  Location     Type
 37207 ;;		None
 37208 ;; Return value:  Size  Location     Type
 37209 ;;                  1    wreg      void 
 37210 ;; Registers used:
 37211 ;;		wreg, status,2, status,0
 37212 ;; Tracked objects:
 37213 ;;		On entry : 0/0
 37214 ;;		On exit  : 0/0
 37215 ;;		Unchanged: 0/0
 37216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37218 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37220 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37221 ;;Total ram usage:        0 bytes
 37222 ;; Hardware stack levels used:    1
 37223 ;; Hardware stack levels required when called:    4
 37224 ;; This function calls:
 37225 ;;		Nothing
 37226 ;; This function is called by:
 37227 ;;		_Sch_SchmIntService
 37228 ;; This function uses a non-reentrant model
 37229 ;;
 37230                           
 37231                           	psect	text182
 37232  006A8E                     __ptext182:
 37233                           	opt stack 0
 37234  006A8E                     _UpdateOsCounters:
 37235                           	opt stack 11
 37236                           
 37237                           ;os_sched.c: 160: OsTmr_OsTickCounter++;
 37238                           
 37239                           ; BSR set to: 2
 37240                           ;incstack = 0
 37241  006A8E  0E01               	movlw	1
 37242  006A90  0103               	movlb	3	; () banked
 37243  006A92  2714               	addwf	_OsTmr_OsTickCounter& (0+255),f,b
 37244  006A94  0E00               	movlw	0
 37245  006A96  2315               	addwfc	(_OsTmr_OsTickCounter+1)& (0+255),f,b
 37246  006A98  2316               	addwfc	(_OsTmr_OsTickCounter+2)& (0+255),f,b
 37247  006A9A  2317               	addwfc	(_OsTmr_OsTickCounter+3)& (0+255),f,b
 37248                           
 37249                           ; BSR set to: 3
 37250  006A9C  0012               	return		;funcret
 37251  006A9E                     __end_of_UpdateOsCounters:
 37252                           	opt stack 0
 37253                           tosu	equ	0xFFF
 37254                           tosh	equ	0xFFE
 37255                           tosl	equ	0xFFD
 37256                           pclatu	equ	0xFFB
 37257                           pclath	equ	0xFFA
 37258                           tblptru	equ	0xFF8
 37259                           tblptrh	equ	0xFF7
 37260                           tblptrl	equ	0xFF6
 37261                           tablat	equ	0xFF5
 37262                           prodh	equ	0xFF4
 37263                           prodl	equ	0xFF3
 37264                           intcon	equ	0xFF2
 37265                           intcon2	equ	0xFF1
 37266                           intcon3	equ	0xFF0
 37267                           indf0	equ	0xFEF
 37268                           postinc0	equ	0xFEE
 37269                           plusw0	equ	0xFEB
 37270                           fsr0h	equ	0xFEA
 37271                           fsr0l	equ	0xFE9
 37272                           wreg	equ	0xFE8
 37273                           indf1	equ	0xFE7
 37274                           postinc1	equ	0xFE6
 37275                           postdec1	equ	0xFE5
 37276                           plusw1	equ	0xFE3
 37277                           fsr1h	equ	0xFE2
 37278                           fsr1l	equ	0xFE1
 37279                           bsr	equ	0xFE0
 37280                           indf2	equ	0xFDF
 37281                           postinc2	equ	0xFDE
 37282                           postdec2	equ	0xFDD
 37283                           plusw2	equ	0xFDB
 37284                           fsr2h	equ	0xFDA
 37285                           fsr2l	equ	0xFD9
 37286                           status	equ	0xFD8
 37287                           
 37288 ;; *************** function _OsAlrm_ProcessOsAlarms *****************
 37289 ;; Defined at:
 37290 ;;		line 115 in file "../../MercuryFwk/Source/c/02_Osl/os_alarms.c"
 37291 ;; Parameters:    Size  Location     Type
 37292 ;;		None
 37293 ;; Auto vars:     Size  Location     Type
 37294 ;;  AlarmIndex      2   32[COMRAM] unsigned short 
 37295 ;; Return value:  Size  Location     Type
 37296 ;;                  1    wreg      void 
 37297 ;; Registers used:
 37298 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 37299 ;; Tracked objects:
 37300 ;;		On entry : 0/0
 37301 ;;		On exit  : 0/0
 37302 ;;		Unchanged: 0/0
 37303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37304 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37305 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37306 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37307 ;;      Totals:         2       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37308 ;;Total ram usage:       10 bytes
 37309 ;; Hardware stack levels used:    1
 37310 ;; Hardware stack levels required when called:    7
 37311 ;; This function calls:
 37312 ;;		_I2cDummyTx
 37313 ;;		_OsAlrm_ClearOsAlarm
 37314 ;;		i1___wmul
 37315 ;; This function is called by:
 37316 ;;		_Sch_SchmIntService
 37317 ;; This function uses a non-reentrant model
 37318 ;;
 37319                           
 37320                           	psect	text183
 37321  002434                     __ptext183:
 37322                           	opt stack 0
 37323  002434                     _OsAlrm_ProcessOsAlarms:
 37324                           	opt stack 8
 37325                           
 37326                           ;os_alarms.c: 117: UINT16 AlarmIndex;
 37327                           ;os_alarms.c: 120: for (AlarmIndex = 0; AlarmIndex < ((UINT8)(20)); AlarmIndex++)
 37328                           
 37329                           ; BSR set to: 3
 37330                           ;incstack = 0
 37331  002434  0E00               	movlw	0
 37332  002436  6E22               	movwf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,c
 37333  002438  0E00               	movlw	0
 37334  00243A  6E21               	movwf	OsAlrm_ProcessOsAlarms@AlarmIndex,c
 37335  00243C  5022               	movf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,w,c
 37336  00243E  E105               	bnz	i1u1622_20
 37337  002440  0E14               	movlw	20
 37338  002442  5C21               	subwf	OsAlrm_ProcessOsAlarms@AlarmIndex,w,c
 37339  002444  B0D8               	btfsc	status,0,c
 37340  002446  0012               	return	
 37341  002448  D001               	goto	i1l742
 37342  00244A                     i1u1622_20:
 37343  00244A  0012               	return	
 37344  00244C                     i1l742:
 37345                           
 37346                           ;os_alarms.c: 121: {
 37347                           ;os_alarms.c: 123: if (OsAlarms[AlarmIndex].Enabled == 1u)
 37348  00244C  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 37349  002450  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 37350  002454  0E00               	movlw	0
 37351  002456  6E1C               	movwf	i1___wmul@multiplicand+1,c
 37352  002458  0E0B               	movlw	11
 37353  00245A  6E1B               	movwf	i1___wmul@multiplicand,c
 37354  00245C  EC4C  F033         	call	i1___wmul	;wreg free
 37355  002460  0E00               	movlw	low _OsAlarms
 37356  002462  2419               	addwf	?i1___wmul,w,c
 37357  002464  6ED9               	movwf	fsr2l,c
 37358  002466  0E06               	movlw	high _OsAlarms
 37359  002468  201A               	addwfc	?i1___wmul+1,w,c
 37360  00246A  6EDA               	movwf	fsr2h,c
 37361  00246C  04DE               	decf	postinc2,w,c
 37362  00246E  A4D8               	btfss	status,2,c
 37363  002470  D086               	goto	i1u1626_29
 37364                           
 37365                           ;os_alarms.c: 124: {
 37366                           ;os_alarms.c: 126: OsAlarms[AlarmIndex].Counter++;
 37367  002472  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 37368  002476  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 37369  00247A  0E00               	movlw	0
 37370  00247C  6E1C               	movwf	i1___wmul@multiplicand+1,c
 37371  00247E  0E0B               	movlw	11
 37372  002480  6E1B               	movwf	i1___wmul@multiplicand,c
 37373  002482  EC4C  F033         	call	i1___wmul	;wreg free
 37374  002486  0E01               	movlw	1
 37375  002488  2619               	addwf	?i1___wmul,f,c
 37376  00248A  0E00               	movlw	0
 37377  00248C  221A               	addwfc	?i1___wmul+1,f,c
 37378  00248E  0E00               	movlw	low _OsAlarms
 37379  002490  2419               	addwf	?i1___wmul,w,c
 37380  002492  6ED9               	movwf	fsr2l,c
 37381  002494  0E06               	movlw	high _OsAlarms
 37382  002496  201A               	addwfc	?i1___wmul+1,w,c
 37383  002498  6EDA               	movwf	fsr2h,c
 37384  00249A  2ADE               	incf	postinc2,f,c
 37385  00249C  0E00               	movlw	0
 37386  00249E  22DE               	addwfc	postinc2,f,c
 37387  0024A0  22DE               	addwfc	postinc2,f,c
 37388  0024A2  22DE               	addwfc	postinc2,f,c
 37389                           
 37390                           ;os_alarms.c: 128: if (OsAlarms[AlarmIndex].Counter >= OsAlarms[AlarmIndex].AlarmTime)
 37391  0024A4  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 37392  0024A8  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 37393  0024AC  0E00               	movlw	0
 37394  0024AE  6E1C               	movwf	i1___wmul@multiplicand+1,c
 37395  0024B0  0E0B               	movlw	11
 37396  0024B2  6E1B               	movwf	i1___wmul@multiplicand,c
 37397  0024B4  EC4C  F033         	call	i1___wmul	;wreg free
 37398  0024B8  0E05               	movlw	5
 37399  0024BA  2619               	addwf	?i1___wmul,f,c
 37400  0024BC  0E00               	movlw	0
 37401  0024BE  221A               	addwfc	?i1___wmul+1,f,c
 37402  0024C0  0E00               	movlw	low _OsAlarms
 37403  0024C2  2419               	addwf	?i1___wmul,w,c
 37404  0024C4  6ED9               	movwf	fsr2l,c
 37405  0024C6  0E06               	movlw	high _OsAlarms
 37406  0024C8  201A               	addwfc	?i1___wmul+1,w,c
 37407  0024CA  6EDA               	movwf	fsr2h,c
 37408  0024CC  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 37409  0024D0  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 37410  0024D4  0E00               	movlw	0
 37411  0024D6  6E1C               	movwf	i1___wmul@multiplicand+1,c
 37412  0024D8  0E0B               	movlw	11
 37413  0024DA  6E1B               	movwf	i1___wmul@multiplicand,c
 37414  0024DC  EC4C  F033         	call	i1___wmul	;wreg free
 37415  0024E0  0E01               	movlw	1
 37416  0024E2  2619               	addwf	?i1___wmul,f,c
 37417  0024E4  0E00               	movlw	0
 37418  0024E6  221A               	addwfc	?i1___wmul+1,f,c
 37419  0024E8  0E00               	movlw	low _OsAlarms
 37420  0024EA  2419               	addwf	?i1___wmul,w,c
 37421  0024EC  6EE1               	movwf	fsr1l,c
 37422  0024EE  0E06               	movlw	high _OsAlarms
 37423  0024F0  201A               	addwfc	?i1___wmul+1,w,c
 37424  0024F2  6EE2               	movwf	fsr1h,c
 37425  0024F4  50DE               	movf	postinc2,w,c
 37426  0024F6  5CE6               	subwf	postinc1,w,c
 37427  0024F8  50DE               	movf	postinc2,w,c
 37428  0024FA  58E6               	subwfb	postinc1,w,c
 37429  0024FC  50DE               	movf	postinc2,w,c
 37430  0024FE  58E6               	subwfb	postinc1,w,c
 37431  002500  50DE               	movf	postinc2,w,c
 37432  002502  58E6               	subwfb	postinc1,w,c
 37433  002504  A0D8               	btfss	status,0,c
 37434  002506  D03B               	goto	i1u1626_29
 37435                           
 37436                           ;os_alarms.c: 129: {
 37437                           ;os_alarms.c: 131: OsAlrm_ClearOsAlarm(AlarmIndex);
 37438  002508  5021               	movf	OsAlrm_ProcessOsAlarms@AlarmIndex,w,c
 37439  00250A  EC15  F02D         	call	_OsAlrm_ClearOsAlarm
 37440                           
 37441                           ;os_alarms.c: 133: if (OsAlarms[AlarmIndex].AlrmCbk != (0))
 37442  00250E  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 37443  002512  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 37444  002516  0E00               	movlw	0
 37445  002518  6E1C               	movwf	i1___wmul@multiplicand+1,c
 37446  00251A  0E0B               	movlw	11
 37447  00251C  6E1B               	movwf	i1___wmul@multiplicand,c
 37448  00251E  EC4C  F033         	call	i1___wmul	;wreg free
 37449  002522  0E09               	movlw	9
 37450  002524  2619               	addwf	?i1___wmul,f,c
 37451  002526  0E00               	movlw	0
 37452  002528  221A               	addwfc	?i1___wmul+1,f,c
 37453  00252A  0E00               	movlw	low _OsAlarms
 37454  00252C  2419               	addwf	?i1___wmul,w,c
 37455  00252E  6ED9               	movwf	fsr2l,c
 37456  002530  0E06               	movlw	high _OsAlarms
 37457  002532  201A               	addwfc	?i1___wmul+1,w,c
 37458  002534  6EDA               	movwf	fsr2h,c
 37459  002536  50DE               	movf	postinc2,w,c
 37460  002538  10DE               	iorwf	postinc2,w,c
 37461  00253A  B4D8               	btfsc	status,2,c
 37462  00253C  D020               	goto	i1u1626_29
 37463                           
 37464                           ;os_alarms.c: 134: {
 37465                           ;os_alarms.c: 136: OsAlarms[AlarmIndex].AlrmCbk();
 37466  00253E  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 37467  002542  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 37468  002546  0E00               	movlw	0
 37469  002548  6E1C               	movwf	i1___wmul@multiplicand+1,c
 37470  00254A  0E0B               	movlw	11
 37471  00254C  6E1B               	movwf	i1___wmul@multiplicand,c
 37472  00254E  EC4C  F033         	call	i1___wmul	;wreg free
 37473  002552  0E09               	movlw	9
 37474  002554  2619               	addwf	?i1___wmul,f,c
 37475  002556  0E00               	movlw	0
 37476  002558  221A               	addwfc	?i1___wmul+1,f,c
 37477  00255A  0E00               	movlw	low _OsAlarms
 37478  00255C  2419               	addwf	?i1___wmul,w,c
 37479  00255E  6ED9               	movwf	fsr2l,c
 37480  002560  0E06               	movlw	high _OsAlarms
 37481  002562  201A               	addwfc	?i1___wmul+1,w,c
 37482  002564  6EDA               	movwf	fsr2h,c
 37483  002566  D801               	call	i1u1626_28
 37484  002568  D00A               	goto	i1u1626_29
 37485  00256A                     i1u1626_28:
 37486  00256A  0005               	push	
 37487  00256C  6EFA               	movwf	pclath,c
 37488  00256E  50DE               	movf	postinc2,w,c
 37489  002570  6EFD               	movwf	tosl,c
 37490  002572  50DE               	movf	postinc2,w,c
 37491  002574  6EFE               	movwf	tosh,c
 37492  002576  50F8               	movf	tblptru,w,c
 37493  002578  6EFF               	movwf	tosu,c
 37494  00257A  50FA               	movf	pclath,w,c
 37495  00257C  0012               	return		;indir
 37496  00257E                     i1u1626_29:
 37497  00257E  4A21               	infsnz	OsAlrm_ProcessOsAlarms@AlarmIndex,f,c
 37498  002580  2A22               	incf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,f,c
 37499  002582  5022               	movf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,w,c
 37500  002584  E101               	bnz	i1l747
 37501  002586  D75C               	goto	L101
 37502  002588                     i1l747:
 37503  002588  0012               	return		;funcret
 37504  00258A                     __end_of_OsAlrm_ProcessOsAlarms:
 37505                           	opt stack 0
 37506                           tosu	equ	0xFFF
 37507                           tosh	equ	0xFFE
 37508                           tosl	equ	0xFFD
 37509                           pclatu	equ	0xFFB
 37510                           pclath	equ	0xFFA
 37511                           tblptru	equ	0xFF8
 37512                           tblptrh	equ	0xFF7
 37513                           tblptrl	equ	0xFF6
 37514                           tablat	equ	0xFF5
 37515                           prodh	equ	0xFF4
 37516                           prodl	equ	0xFF3
 37517                           intcon	equ	0xFF2
 37518                           intcon2	equ	0xFF1
 37519                           intcon3	equ	0xFF0
 37520                           indf0	equ	0xFEF
 37521                           postinc0	equ	0xFEE
 37522                           plusw0	equ	0xFEB
 37523                           fsr0h	equ	0xFEA
 37524                           fsr0l	equ	0xFE9
 37525                           wreg	equ	0xFE8
 37526                           indf1	equ	0xFE7
 37527                           postinc1	equ	0xFE6
 37528                           postdec1	equ	0xFE5
 37529                           plusw1	equ	0xFE3
 37530                           fsr1h	equ	0xFE2
 37531                           fsr1l	equ	0xFE1
 37532                           bsr	equ	0xFE0
 37533                           indf2	equ	0xFDF
 37534                           postinc2	equ	0xFDE
 37535                           postdec2	equ	0xFDD
 37536                           plusw2	equ	0xFDB
 37537                           fsr2h	equ	0xFDA
 37538                           fsr2l	equ	0xFD9
 37539                           status	equ	0xFD8
 37540                           
 37541 ;; *************** function i1___wmul *****************
 37542 ;; Defined at:
 37543 ;;		line 15 in file "/opt/microchip/xc8/v1.45/sources/common/Umul16.c"
 37544 ;; Parameters:    Size  Location     Type
 37545 ;;  multiplier      2   24[COMRAM] unsigned int 
 37546 ;;  multiplicand    2   26[COMRAM] unsigned int 
 37547 ;; Auto vars:     Size  Location     Type
 37548 ;;  __wmul          2   28[COMRAM] unsigned int 
 37549 ;; Return value:  Size  Location     Type
 37550 ;;                  2   24[COMRAM] unsigned int 
 37551 ;; Registers used:
 37552 ;;		wreg, status,2, status,0, prodl, prodh
 37553 ;; Tracked objects:
 37554 ;;		On entry : 0/0
 37555 ;;		On exit  : 0/0
 37556 ;;		Unchanged: 0/0
 37557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37558 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37559 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37561 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37562 ;;Total ram usage:        6 bytes
 37563 ;; Hardware stack levels used:    1
 37564 ;; Hardware stack levels required when called:    4
 37565 ;; This function calls:
 37566 ;;		Nothing
 37567 ;; This function is called by:
 37568 ;;		_OsAlrm_ProcessOsAlarms
 37569 ;; This function uses a non-reentrant model
 37570 ;;
 37571                           
 37572                           	psect	text184
 37573  006698                     __ptext184:
 37574                           	opt stack 0
 37575  006698                     i1___wmul:
 37576                           	opt stack 10
 37577                           
 37578                           ;incstack = 0
 37579  006698  5019               	movf	i1___wmul@multiplier,w,c
 37580  00669A  021B               	mulwf	i1___wmul@multiplicand,c
 37581  00669C  CFF3 F01D          	movff	prodl,i1___wmul@product
 37582  0066A0  CFF4 F01E          	movff	prodh,i1___wmul@product+1
 37583  0066A4  5019               	movf	i1___wmul@multiplier,w,c
 37584  0066A6  021C               	mulwf	i1___wmul@multiplicand+1,c
 37585  0066A8  50F3               	movf	prodl,w,c
 37586  0066AA  261E               	addwf	i1___wmul@product+1,f,c
 37587  0066AC  501A               	movf	i1___wmul@multiplier+1,w,c
 37588  0066AE  021B               	mulwf	i1___wmul@multiplicand,c
 37589  0066B0  50F3               	movf	prodl,w,c
 37590  0066B2  261E               	addwf	i1___wmul@product+1,f,c
 37591  0066B4  C01D  F019         	movff	i1___wmul@product,?i1___wmul
 37592  0066B8  C01E  F01A         	movff	i1___wmul@product+1,?i1___wmul+1
 37593  0066BC  0012               	return	
 37594  0066BE                     __end_ofi1___wmul:
 37595                           	opt stack 0
 37596                           tosu	equ	0xFFF
 37597                           tosh	equ	0xFFE
 37598                           tosl	equ	0xFFD
 37599                           pclatu	equ	0xFFB
 37600                           pclath	equ	0xFFA
 37601                           tblptru	equ	0xFF8
 37602                           tblptrh	equ	0xFF7
 37603                           tblptrl	equ	0xFF6
 37604                           tablat	equ	0xFF5
 37605                           prodh	equ	0xFF4
 37606                           prodl	equ	0xFF3
 37607                           intcon	equ	0xFF2
 37608                           intcon2	equ	0xFF1
 37609                           intcon3	equ	0xFF0
 37610                           indf0	equ	0xFEF
 37611                           postinc0	equ	0xFEE
 37612                           plusw0	equ	0xFEB
 37613                           fsr0h	equ	0xFEA
 37614                           fsr0l	equ	0xFE9
 37615                           wreg	equ	0xFE8
 37616                           indf1	equ	0xFE7
 37617                           postinc1	equ	0xFE6
 37618                           postdec1	equ	0xFE5
 37619                           plusw1	equ	0xFE3
 37620                           fsr1h	equ	0xFE2
 37621                           fsr1l	equ	0xFE1
 37622                           bsr	equ	0xFE0
 37623                           indf2	equ	0xFDF
 37624                           postinc2	equ	0xFDE
 37625                           postdec2	equ	0xFDD
 37626                           plusw2	equ	0xFDB
 37627                           fsr2h	equ	0xFDA
 37628                           fsr2l	equ	0xFD9
 37629                           status	equ	0xFD8
 37630                           
 37631 ;; *************** function _OsAlrm_ClearOsAlarm *****************
 37632 ;; Defined at:
 37633 ;;		line 97 in file "../../MercuryFwk/Source/c/02_Osl/os_alarms.c"
 37634 ;; Parameters:    Size  Location     Type
 37635 ;;  OsAlarmId       1    wreg     unsigned char 
 37636 ;; Auto vars:     Size  Location     Type
 37637 ;;  OsAlarmId       1   24[COMRAM] unsigned char 
 37638 ;; Return value:  Size  Location     Type
 37639 ;;                  1    wreg      void 
 37640 ;; Registers used:
 37641 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 37642 ;; Tracked objects:
 37643 ;;		On entry : 0/0
 37644 ;;		On exit  : 0/0
 37645 ;;		Unchanged: 0/0
 37646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37647 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37648 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37650 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37651 ;;Total ram usage:        1 bytes
 37652 ;; Hardware stack levels used:    1
 37653 ;; Hardware stack levels required when called:    4
 37654 ;; This function calls:
 37655 ;;		Nothing
 37656 ;; This function is called by:
 37657 ;;		_OsAlrm_ProcessOsAlarms
 37658 ;; This function uses a non-reentrant model
 37659 ;;
 37660                           
 37661                           	psect	text185
 37662  005A2A                     __ptext185:
 37663                           	opt stack 0
 37664  005A2A                     _OsAlrm_ClearOsAlarm:
 37665                           	opt stack 10
 37666                           
 37667                           ;incstack = 0
 37668                           ;OsAlrm_ClearOsAlarm@OsAlarmId stored from wreg
 37669  005A2A  6E19               	movwf	OsAlrm_ClearOsAlarm@OsAlarmId,c
 37670                           
 37671                           ;os_alarms.c: 100: OsAlarms[OsAlarmId].Enabled = 0u;
 37672  005A2C  5019               	movf	OsAlrm_ClearOsAlarm@OsAlarmId,w,c
 37673  005A2E  0D0B               	mullw	11
 37674  005A30  0E00               	movlw	low _OsAlarms
 37675  005A32  24F3               	addwf	prodl,w,c
 37676  005A34  6ED9               	movwf	fsr2l,c
 37677  005A36  0E06               	movlw	high _OsAlarms
 37678  005A38  20F4               	addwfc	prodh,w,c
 37679  005A3A  6EDA               	movwf	fsr2h,c
 37680  005A3C  0E00               	movlw	0
 37681  005A3E  6EDF               	movwf	indf2,c
 37682                           
 37683                           ;os_alarms.c: 102: OsAlarms[OsAlarmId].Counter = 0;
 37684  005A40  5019               	movf	OsAlrm_ClearOsAlarm@OsAlarmId,w,c
 37685  005A42  0D0B               	mullw	11
 37686  005A44  0E01               	movlw	1
 37687  005A46  26F3               	addwf	prodl,f,c
 37688  005A48  0E00               	movlw	0
 37689  005A4A  22F4               	addwfc	prodh,f,c
 37690  005A4C  0E00               	movlw	low _OsAlarms
 37691  005A4E  24F3               	addwf	prodl,w,c
 37692  005A50  6ED9               	movwf	fsr2l,c
 37693  005A52  0E06               	movlw	high _OsAlarms
 37694  005A54  20F4               	addwfc	prodh,w,c
 37695  005A56  6EDA               	movwf	fsr2h,c
 37696  005A58  6ADE               	clrf	postinc2,c
 37697  005A5A  6ADE               	clrf	postinc2,c
 37698  005A5C  6ADE               	clrf	postinc2,c
 37699  005A5E  6ADD               	clrf	postdec2,c
 37700                           
 37701                           ;os_alarms.c: 104: OsAlarms[OsAlarmId].AlarmTime = 0;
 37702  005A60  5019               	movf	OsAlrm_ClearOsAlarm@OsAlarmId,w,c
 37703  005A62  0D0B               	mullw	11
 37704  005A64  0E05               	movlw	5
 37705  005A66  26F3               	addwf	prodl,f,c
 37706  005A68  0E00               	movlw	0
 37707  005A6A  22F4               	addwfc	prodh,f,c
 37708  005A6C  0E00               	movlw	low _OsAlarms
 37709  005A6E  24F3               	addwf	prodl,w,c
 37710  005A70  6ED9               	movwf	fsr2l,c
 37711  005A72  0E06               	movlw	high _OsAlarms
 37712  005A74  20F4               	addwfc	prodh,w,c
 37713  005A76  6EDA               	movwf	fsr2h,c
 37714  005A78  6ADE               	clrf	postinc2,c
 37715  005A7A  6ADE               	clrf	postinc2,c
 37716  005A7C  6ADE               	clrf	postinc2,c
 37717  005A7E  6ADD               	clrf	postdec2,c
 37718  005A80  0012               	return		;funcret
 37719  005A82                     __end_of_OsAlrm_ClearOsAlarm:
 37720                           	opt stack 0
 37721                           tosu	equ	0xFFF
 37722                           tosh	equ	0xFFE
 37723                           tosl	equ	0xFFD
 37724                           pclatu	equ	0xFFB
 37725                           pclath	equ	0xFFA
 37726                           tblptru	equ	0xFF8
 37727                           tblptrh	equ	0xFF7
 37728                           tblptrl	equ	0xFF6
 37729                           tablat	equ	0xFF5
 37730                           prodh	equ	0xFF4
 37731                           prodl	equ	0xFF3
 37732                           intcon	equ	0xFF2
 37733                           intcon2	equ	0xFF1
 37734                           intcon3	equ	0xFF0
 37735                           indf0	equ	0xFEF
 37736                           postinc0	equ	0xFEE
 37737                           plusw0	equ	0xFEB
 37738                           fsr0h	equ	0xFEA
 37739                           fsr0l	equ	0xFE9
 37740                           wreg	equ	0xFE8
 37741                           indf1	equ	0xFE7
 37742                           postinc1	equ	0xFE6
 37743                           postdec1	equ	0xFE5
 37744                           plusw1	equ	0xFE3
 37745                           fsr1h	equ	0xFE2
 37746                           fsr1l	equ	0xFE1
 37747                           bsr	equ	0xFE0
 37748                           indf2	equ	0xFDF
 37749                           postinc2	equ	0xFDE
 37750                           postdec2	equ	0xFDD
 37751                           plusw2	equ	0xFDB
 37752                           fsr2h	equ	0xFDA
 37753                           fsr2l	equ	0xFD9
 37754                           status	equ	0xFD8
 37755                           
 37756 ;; *************** function _I2cDummyTx *****************
 37757 ;; Defined at:
 37758 ;;		line 193 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 37759 ;; Parameters:    Size  Location     Type
 37760 ;;		None
 37761 ;; Auto vars:     Size  Location     Type
 37762 ;;		None
 37763 ;; Return value:  Size  Location     Type
 37764 ;;                  1    wreg      void 
 37765 ;; Registers used:
 37766 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 37767 ;; Tracked objects:
 37768 ;;		On entry : 0/0
 37769 ;;		On exit  : 0/0
 37770 ;;		Unchanged: 0/0
 37771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37772 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37773 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37775 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37776 ;;Total ram usage:        0 bytes
 37777 ;; Hardware stack levels used:    1
 37778 ;; Hardware stack levels required when called:    6
 37779 ;; This function calls:
 37780 ;;		i1_I2cSlv_SendI2cMsg
 37781 ;; This function is called by:
 37782 ;;		_I2cSlv_MainTask
 37783 ;;		_OsAlrm_ProcessOsAlarms
 37784 ;; This function uses a non-reentrant model
 37785 ;;
 37786                           
 37787                           	psect	text186
 37788  0068F0                     __ptext186:
 37789                           	opt stack 0
 37790  0068F0                     _I2cDummyTx:
 37791                           	opt stack 8
 37792                           
 37793                           ;i2c_slv.c: 195: static UINT8 DummyBuffer = 0x00;
 37794                           ;i2c_slv.c: 198: I2cSlv_SendI2cMsg(&DummyBuffer,0x00,1);
 37795                           
 37796                           ;incstack = 0
 37797  0068F0  0EFC               	movlw	low I2cDummyTx@DummyBuffer
 37798  0068F2  6E1C               	movwf	i1I2cSlv_SendI2cMsg@TxBuffer,c
 37799  0068F4  0E01               	movlw	high I2cDummyTx@DummyBuffer
 37800  0068F6  6E1D               	movwf	i1I2cSlv_SendI2cMsg@TxBuffer+1,c
 37801  0068F8  0E00               	movlw	0
 37802  0068FA  6E1E               	movwf	i1I2cSlv_SendI2cMsg@SlaveAddr,c
 37803  0068FC  0E01               	movlw	1
 37804  0068FE  6E1F               	movwf	i1I2cSlv_SendI2cMsg@DataLenght,c
 37805  006900  ECB0  F031         	call	i1_I2cSlv_SendI2cMsg	;wreg free
 37806                           
 37807                           ;i2c_slv.c: 200: I2cBusStatus = I2cBusReady;
 37808  006904  0E01               	movlw	1
 37809  006906  0101               	movlb	1	; () banked
 37810  006908  6FE5               	movwf	_I2cBusStatus& (0+255),b
 37811                           
 37812                           ; BSR set to: 1
 37813  00690A  0012               	return		;funcret
 37814  00690C                     __end_of_I2cDummyTx:
 37815                           	opt stack 0
 37816                           tosu	equ	0xFFF
 37817                           tosh	equ	0xFFE
 37818                           tosl	equ	0xFFD
 37819                           pclatu	equ	0xFFB
 37820                           pclath	equ	0xFFA
 37821                           tblptru	equ	0xFF8
 37822                           tblptrh	equ	0xFF7
 37823                           tblptrl	equ	0xFF6
 37824                           tablat	equ	0xFF5
 37825                           prodh	equ	0xFF4
 37826                           prodl	equ	0xFF3
 37827                           intcon	equ	0xFF2
 37828                           intcon2	equ	0xFF1
 37829                           intcon3	equ	0xFF0
 37830                           indf0	equ	0xFEF
 37831                           postinc0	equ	0xFEE
 37832                           plusw0	equ	0xFEB
 37833                           fsr0h	equ	0xFEA
 37834                           fsr0l	equ	0xFE9
 37835                           wreg	equ	0xFE8
 37836                           indf1	equ	0xFE7
 37837                           postinc1	equ	0xFE6
 37838                           postdec1	equ	0xFE5
 37839                           plusw1	equ	0xFE3
 37840                           fsr1h	equ	0xFE2
 37841                           fsr1l	equ	0xFE1
 37842                           bsr	equ	0xFE0
 37843                           indf2	equ	0xFDF
 37844                           postinc2	equ	0xFDE
 37845                           postdec2	equ	0xFDD
 37846                           plusw2	equ	0xFDB
 37847                           fsr2h	equ	0xFDA
 37848                           fsr2l	equ	0xFD9
 37849                           status	equ	0xFD8
 37850                           
 37851 ;; *************** function i1_I2cSlv_SendI2cMsg *****************
 37852 ;; Defined at:
 37853 ;;		line 252 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 37854 ;; Parameters:    Size  Location     Type
 37855 ;;  TxBuffer        2   27[COMRAM] PTR unsigned char 
 37856 ;;		 -> triggerRelay@txBuffer(2), Terminal@TermTxBuffer(50), ReadAddress(1), EepromBuffer(15), 
 37857 ;;		 -> I2cDummyTx@DummyBuffer(1), 
 37858 ;;  SlaveAddr       1   29[COMRAM] unsigned char 
 37859 ;;  DataLenght      1   30[COMRAM] unsigned char 
 37860 ;; Auto vars:     Size  Location     Type
 37861 ;;  I2cSlv_SendI    1   31[COMRAM] unsigned char 
 37862 ;; Return value:  Size  Location     Type
 37863 ;;                  1    wreg      unsigned char 
 37864 ;; Registers used:
 37865 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 37866 ;; Tracked objects:
 37867 ;;		On entry : 0/0
 37868 ;;		On exit  : 0/0
 37869 ;;		Unchanged: 0/0
 37870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37871 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37872 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37873 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37874 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37875 ;;Total ram usage:        5 bytes
 37876 ;; Hardware stack levels used:    1
 37877 ;; Hardware stack levels required when called:    5
 37878 ;; This function calls:
 37879 ;;		i1_GenerateEvt
 37880 ;; This function is called by:
 37881 ;;		_I2cDummyTx
 37882 ;; This function uses a non-reentrant model
 37883 ;;
 37884                           
 37885                           	psect	text187
 37886  006360                     __ptext187:
 37887                           	opt stack 0
 37888  006360                     i1_I2cSlv_SendI2cMsg:
 37889                           	opt stack 8
 37890                           
 37891                           ;i2c_slv.c: 254: UINT8 TxSts = 0u;
 37892                           
 37893                           ; BSR set to: 1
 37894                           ;incstack = 0
 37895  006360  0E00               	movlw	0
 37896  006362  6E20               	movwf	i1I2cSlv_SendI2cMsg@TxSts,c
 37897                           
 37898                           ;i2c_slv.c: 256: if (I2cComSts != TxInProgress)
 37899  006364  0100               	movlb	0	; () banked
 37900  006366  05CF               	decf	_I2cComSts& (0+255),w,b
 37901  006368  B4D8               	btfsc	status,2,c
 37902  00636A  D014               	goto	i1l1412
 37903                           
 37904                           ; BSR set to: 0
 37905                           ;i2c_slv.c: 257: {
 37906                           ;i2c_slv.c: 259: I2cTxPacket.SlaveAddress = SlaveAddr;
 37907  00636C  C01E  F3A2         	movff	i1I2cSlv_SendI2cMsg@SlaveAddr,_I2cTxPacket
 37908                           
 37909                           ; BSR set to: 0
 37910                           ;i2c_slv.c: 260: I2cTxPacket.ReadWrite = ((UINT8)(0));
 37911  006370  0E00               	movlw	0
 37912  006372  0103               	movlb	3	; () banked
 37913  006374  6FA3               	movwf	(_I2cTxPacket+1)& (0+255),b
 37914                           
 37915                           ; BSR set to: 3
 37916                           ;i2c_slv.c: 261: I2cTxPacket.Lenght = DataLenght;
 37917  006376  C01F  F3A6         	movff	i1I2cSlv_SendI2cMsg@DataLenght,_I2cTxPacket+4
 37918                           
 37919                           ; BSR set to: 3
 37920                           ;i2c_slv.c: 262: I2cTxPacket.Buffer = TxBuffer;
 37921  00637A  C01C  F3A4         	movff	i1I2cSlv_SendI2cMsg@TxBuffer,_I2cTxPacket+2
 37922  00637E  C01D  F3A5         	movff	i1I2cSlv_SendI2cMsg@TxBuffer+1,_I2cTxPacket+3
 37923                           
 37924                           ; BSR set to: 3
 37925                           ;i2c_slv.c: 265: GenerateEvt(&I2cWriteDataEvt);
 37926  006382  0ED7               	movlw	low _I2cWriteDataEvt
 37927  006384  6E19               	movwf	i1GenerateEvt@Event,c
 37928  006386  0E00               	movlw	high _I2cWriteDataEvt
 37929  006388  6E1A               	movwf	i1GenerateEvt@Event+1,c
 37930  00638A  ECF4  F034         	call	i1_GenerateEvt	;wreg free
 37931                           
 37932                           ;i2c_slv.c: 267: TxSts = 1u;
 37933  00638E  0E01               	movlw	1
 37934  006390  6E20               	movwf	i1I2cSlv_SendI2cMsg@TxSts,c
 37935                           
 37936                           ;i2c_slv.c: 268: }
 37937  006392  0012               	return	
 37938  006394                     i1l1412:
 37939                           
 37940                           ;i2c_slv.c: 269: else
 37941                           ;i2c_slv.c: 270: {
 37942                           ;i2c_slv.c: 272: TxSts = 0u;
 37943  006394  0E00               	movlw	0
 37944  006396  6E20               	movwf	i1I2cSlv_SendI2cMsg@TxSts,c
 37945  006398  0012               	return	
 37946  00639A                     __end_ofi1_I2cSlv_SendI2cMsg:
 37947                           	opt stack 0
 37948                           tosu	equ	0xFFF
 37949                           tosh	equ	0xFFE
 37950                           tosl	equ	0xFFD
 37951                           pclatu	equ	0xFFB
 37952                           pclath	equ	0xFFA
 37953                           tblptru	equ	0xFF8
 37954                           tblptrh	equ	0xFF7
 37955                           tblptrl	equ	0xFF6
 37956                           tablat	equ	0xFF5
 37957                           prodh	equ	0xFF4
 37958                           prodl	equ	0xFF3
 37959                           intcon	equ	0xFF2
 37960                           intcon2	equ	0xFF1
 37961                           intcon3	equ	0xFF0
 37962                           indf0	equ	0xFEF
 37963                           postinc0	equ	0xFEE
 37964                           plusw0	equ	0xFEB
 37965                           fsr0h	equ	0xFEA
 37966                           fsr0l	equ	0xFE9
 37967                           wreg	equ	0xFE8
 37968                           indf1	equ	0xFE7
 37969                           postinc1	equ	0xFE6
 37970                           postdec1	equ	0xFE5
 37971                           plusw1	equ	0xFE3
 37972                           fsr1h	equ	0xFE2
 37973                           fsr1l	equ	0xFE1
 37974                           bsr	equ	0xFE0
 37975                           indf2	equ	0xFDF
 37976                           postinc2	equ	0xFDE
 37977                           postdec2	equ	0xFDD
 37978                           plusw2	equ	0xFDB
 37979                           fsr2h	equ	0xFDA
 37980                           fsr2l	equ	0xFD9
 37981                           status	equ	0xFD8
 37982                           
 37983 ;; *************** function i1_GenerateEvt *****************
 37984 ;; Defined at:
 37985 ;;		line 75 in file "../../MercuryFwk/Source/c/02_Osl/os_ser.c"
 37986 ;; Parameters:    Size  Location     Type
 37987 ;;  Event           2   24[COMRAM] PTR struct EventStructur
 37988 ;;		 -> AlarmEvent(1), I2cRxPacket(6), I2cReadDataEvt(1), I2cWriteDataEvt(1), 
 37989 ;;		 -> GetMethod(1), InitNetwork(1), MdmStsReady(1), SmsTxtReady(1), 
 37990 ;;		 -> GetSmsText(1), SmsEvent(1), ClipEvent(1), RingEvent(1), 
 37991 ;;		 -> SendSmsEvent(1), NewStringMdmTerminal(1), NewMdmEvtParserRequest(1), NewStringReceived(1), 
 37992 ;;		 -> MdmOnOffPulseRequest(1), CallClosedEvent(1), IncomingCallEvent(1), NewSmsEvent(1), 
 37993 ;; Auto vars:     Size  Location     Type
 37994 ;;  GenerateEvt     1   26[COMRAM] enum E7727
 37995 ;; Return value:  Size  Location     Type
 37996 ;;                  1    wreg      enum E7699
 37997 ;; Registers used:
 37998 ;;		wreg, fsr2l, fsr2h, status,2
 37999 ;; Tracked objects:
 38000 ;;		On entry : 0/0
 38001 ;;		On exit  : 0/0
 38002 ;;		Unchanged: 0/0
 38003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38004 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38005 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38007 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38008 ;;Total ram usage:        3 bytes
 38009 ;; Hardware stack levels used:    1
 38010 ;; Hardware stack levels required when called:    4
 38011 ;; This function calls:
 38012 ;;		Nothing
 38013 ;; This function is called by:
 38014 ;;		i1_I2cSlv_SendI2cMsg
 38015 ;; This function uses a non-reentrant model
 38016 ;;
 38017                           
 38018                           	psect	text188
 38019  0069E8                     __ptext188:
 38020                           	opt stack 0
 38021  0069E8                     i1_GenerateEvt:
 38022                           	opt stack 8
 38023                           
 38024                           ;os_ser.c: 78: EventStatusType EventStatus = EventIdle;
 38025                           
 38026                           ;incstack = 0
 38027  0069E8  0E00               	movlw	0
 38028  0069EA  6E1B               	movwf	i1GenerateEvt@EventStatus,c
 38029                           
 38030                           ;os_ser.c: 81: Event->EventStatus = EventSent;
 38031  0069EC  C019  FFD9         	movff	i1GenerateEvt@Event,fsr2l
 38032  0069F0  C01A  FFDA         	movff	i1GenerateEvt@Event+1,fsr2h
 38033  0069F4  0E02               	movlw	2
 38034  0069F6  6EDF               	movwf	indf2,c
 38035                           
 38036                           ;os_ser.c: 83: EventStatus = EventSent;
 38037  0069F8  0E02               	movlw	2
 38038  0069FA  6E1B               	movwf	i1GenerateEvt@EventStatus,c
 38039  0069FC  0012               	return	
 38040  0069FE                     __end_ofi1_GenerateEvt:
 38041                           	opt stack 0
 38042                           tosu	equ	0xFFF
 38043                           tosh	equ	0xFFE
 38044                           tosl	equ	0xFFD
 38045                           pclatu	equ	0xFFB
 38046                           pclath	equ	0xFFA
 38047                           tblptru	equ	0xFF8
 38048                           tblptrh	equ	0xFF7
 38049                           tblptrl	equ	0xFF6
 38050                           tablat	equ	0xFF5
 38051                           prodh	equ	0xFF4
 38052                           prodl	equ	0xFF3
 38053                           intcon	equ	0xFF2
 38054                           intcon2	equ	0xFF1
 38055                           intcon3	equ	0xFF0
 38056                           indf0	equ	0xFEF
 38057                           postinc0	equ	0xFEE
 38058                           plusw0	equ	0xFEB
 38059                           fsr0h	equ	0xFEA
 38060                           fsr0l	equ	0xFE9
 38061                           wreg	equ	0xFE8
 38062                           indf1	equ	0xFE7
 38063                           postinc1	equ	0xFE6
 38064                           postdec1	equ	0xFE5
 38065                           plusw1	equ	0xFE3
 38066                           fsr1h	equ	0xFE2
 38067                           fsr1l	equ	0xFE1
 38068                           bsr	equ	0xFE0
 38069                           indf2	equ	0xFDF
 38070                           postinc2	equ	0xFDE
 38071                           postdec2	equ	0xFDD
 38072                           plusw2	equ	0xFDB
 38073                           fsr2h	equ	0xFDA
 38074                           fsr2l	equ	0xFD9
 38075                           status	equ	0xFD8
 38076                           
 38077 ;; *************** function _HighPriorityIsr *****************
 38078 ;; Defined at:
 38079 ;;		line 153 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/irq.c"
 38080 ;; Parameters:    Size  Location     Type
 38081 ;;		None
 38082 ;; Auto vars:     Size  Location     Type
 38083 ;;		None
 38084 ;; Return value:  Size  Location     Type
 38085 ;;                  1    wreg      void 
 38086 ;; Registers used:
 38087 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 38088 ;; Tracked objects:
 38089 ;;		On entry : 0/0
 38090 ;;		On exit  : 0/0
 38091 ;;		Unchanged: 0/0
 38092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38093 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38094 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38095 ;;      Temps:         18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38096 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38097 ;;Total ram usage:       18 bytes
 38098 ;; Hardware stack levels used:    1
 38099 ;; Hardware stack levels required when called:    3
 38100 ;; This function calls:
 38101 ;;		_Mcu_Int0Isr
 38102 ;;		_Mcu_Int1Isr
 38103 ;;		_Rtcc_RtcIsr
 38104 ;;		_Uart_Uart1RxIsr
 38105 ;; This function is called by:
 38106 ;;		Interrupt level 2
 38107 ;; This function uses a non-reentrant model
 38108 ;;
 38109                           
 38110                           	psect	intcode
 38111  000008                     __pintcode:
 38112                           	opt stack 0
 38113  000008                     _HighPriorityIsr:
 38114                           	opt stack 8
 38115                           
 38116                           ;incstack = 0
 38117  000008  8242               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 38118  00000A  EF68  F022         	goto	int_func
 38119                           tosu	equ	0xFFF
 38120                           tosh	equ	0xFFE
 38121                           tosl	equ	0xFFD
 38122                           pclatu	equ	0xFFB
 38123                           pclath	equ	0xFFA
 38124                           tblptru	equ	0xFF8
 38125                           tblptrh	equ	0xFF7
 38126                           tblptrl	equ	0xFF6
 38127                           tablat	equ	0xFF5
 38128                           prodh	equ	0xFF4
 38129                           prodl	equ	0xFF3
 38130                           intcon	equ	0xFF2
 38131                           intcon2	equ	0xFF1
 38132                           intcon3	equ	0xFF0
 38133                           indf0	equ	0xFEF
 38134                           postinc0	equ	0xFEE
 38135                           plusw0	equ	0xFEB
 38136                           fsr0h	equ	0xFEA
 38137                           fsr0l	equ	0xFE9
 38138                           wreg	equ	0xFE8
 38139                           indf1	equ	0xFE7
 38140                           postinc1	equ	0xFE6
 38141                           postdec1	equ	0xFE5
 38142                           plusw1	equ	0xFE3
 38143                           fsr1h	equ	0xFE2
 38144                           fsr1l	equ	0xFE1
 38145                           bsr	equ	0xFE0
 38146                           indf2	equ	0xFDF
 38147                           postinc2	equ	0xFDE
 38148                           postdec2	equ	0xFDD
 38149                           plusw2	equ	0xFDB
 38150                           fsr2h	equ	0xFDA
 38151                           fsr2l	equ	0xFD9
 38152                           status	equ	0xFD8
 38153                           
 38154                           	psect	intcode_body
 38155  0044D0                     __pintcode_body:
 38156                           	opt stack 8
 38157  0044D0                     int_func:
 38158                           	opt stack 8
 38159  0044D0  CFFA F007          	movff	pclath,??_HighPriorityIsr
 38160  0044D4  CFFB F008          	movff	pclatu,??_HighPriorityIsr+1
 38161  0044D8  CFE9 F009          	movff	fsr0l,??_HighPriorityIsr+2
 38162  0044DC  CFEA F00A          	movff	fsr0h,??_HighPriorityIsr+3
 38163  0044E0  CFE1 F00B          	movff	fsr1l,??_HighPriorityIsr+4
 38164  0044E4  CFE2 F00C          	movff	fsr1h,??_HighPriorityIsr+5
 38165  0044E8  CFD9 F00D          	movff	fsr2l,??_HighPriorityIsr+6
 38166  0044EC  CFDA F00E          	movff	fsr2h,??_HighPriorityIsr+7
 38167  0044F0  CFF3 F00F          	movff	prodl,??_HighPriorityIsr+8
 38168  0044F4  CFF4 F010          	movff	prodh,??_HighPriorityIsr+9
 38169  0044F8  CFF6 F011          	movff	tblptrl,??_HighPriorityIsr+10
 38170  0044FC  CFF7 F012          	movff	tblptrh,??_HighPriorityIsr+11
 38171  004500  CFF8 F013          	movff	tblptru,??_HighPriorityIsr+12
 38172  004504  CFF5 F014          	movff	tablat,??_HighPriorityIsr+13
 38173  004508  C042  F015         	movff	btemp,??_HighPriorityIsr+14
 38174  00450C  C043  F016         	movff	btemp+1,??_HighPriorityIsr+15
 38175  004510  C044  F017         	movff	btemp+2,??_HighPriorityIsr+16
 38176  004514  C045  F018         	movff	btemp+3,??_HighPriorityIsr+17
 38177                           
 38178                           ;irq.c: 157: if (INTCONbits.INT0IF == ((UINT8)(1)))
 38179  004518  B2F2               	btfsc	intcon,1,c	;volatile
 38180                           
 38181                           ;irq.c: 158: {
 38182                           ;irq.c: 160: Mcu_Int0Isr();
 38183  00451A  ECA5  F035         	call	_Mcu_Int0Isr	;wreg free
 38184                           
 38185                           ;irq.c: 161: }
 38186                           ;irq.c: 166: if (INTCON3bits.INT1IF == ((UINT8)(1)))
 38187  00451E  B0F0               	btfsc	intcon3,0,c	;volatile
 38188                           
 38189                           ;irq.c: 167: {
 38190                           ;irq.c: 169: Mcu_Int1Isr();
 38191  004520  ECA3  F035         	call	_Mcu_Int1Isr	;wreg free
 38192                           
 38193                           ;irq.c: 170: }
 38194                           ;irq.c: 202: if (PIR3bits.RTCCIF == ((UINT8)(1)))
 38195  004524  B0A4               	btfsc	4004,0,c	;volatile
 38196                           
 38197                           ;irq.c: 203: {
 38198                           ;irq.c: 205: Rtcc_RtcIsr();
 38199  004526  ECA1  F035         	call	_Rtcc_RtcIsr	;wreg free
 38200                           
 38201                           ;irq.c: 206: }
 38202                           ;irq.c: 211: if (PIR1bits.RC1IF == ((UINT8)(1)))
 38203  00452A  BA9E               	btfsc	3998,5,c	;volatile
 38204                           
 38205                           ;irq.c: 212: {
 38206                           ;irq.c: 214: Uart_Uart1RxIsr();
 38207  00452C  EC4F  F035         	call	_Uart_Uart1RxIsr	;wreg free
 38208  004530  C018  F045         	movff	??_HighPriorityIsr+17,btemp+3
 38209  004534  C017  F044         	movff	??_HighPriorityIsr+16,btemp+2
 38210  004538  C016  F043         	movff	??_HighPriorityIsr+15,btemp+1
 38211  00453C  C015  F042         	movff	??_HighPriorityIsr+14,btemp
 38212  004540  C014  FFF5         	movff	??_HighPriorityIsr+13,tablat
 38213  004544  C013  FFF8         	movff	??_HighPriorityIsr+12,tblptru
 38214  004548  C012  FFF7         	movff	??_HighPriorityIsr+11,tblptrh
 38215  00454C  C011  FFF6         	movff	??_HighPriorityIsr+10,tblptrl
 38216  004550  C010  FFF4         	movff	??_HighPriorityIsr+9,prodh
 38217  004554  C00F  FFF3         	movff	??_HighPriorityIsr+8,prodl
 38218  004558  C00E  FFDA         	movff	??_HighPriorityIsr+7,fsr2h
 38219  00455C  C00D  FFD9         	movff	??_HighPriorityIsr+6,fsr2l
 38220  004560  C00C  FFE2         	movff	??_HighPriorityIsr+5,fsr1h
 38221  004564  C00B  FFE1         	movff	??_HighPriorityIsr+4,fsr1l
 38222  004568  C00A  FFEA         	movff	??_HighPriorityIsr+3,fsr0h
 38223  00456C  C009  FFE9         	movff	??_HighPriorityIsr+2,fsr0l
 38224  004570  C008  FFFB         	movff	??_HighPriorityIsr+1,pclatu
 38225  004574  C007  FFFA         	movff	??_HighPriorityIsr,pclath
 38226  004578  9242               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 38227  00457A  0011               	retfie		f
 38228  00457C                     __end_of_HighPriorityIsr:
 38229                           	opt stack 0
 38230                           tosu	equ	0xFFF
 38231                           tosh	equ	0xFFE
 38232                           tosl	equ	0xFFD
 38233                           pclatu	equ	0xFFB
 38234                           pclath	equ	0xFFA
 38235                           tblptru	equ	0xFF8
 38236                           tblptrh	equ	0xFF7
 38237                           tblptrl	equ	0xFF6
 38238                           tablat	equ	0xFF5
 38239                           prodh	equ	0xFF4
 38240                           prodl	equ	0xFF3
 38241                           intcon	equ	0xFF2
 38242                           intcon2	equ	0xFF1
 38243                           intcon3	equ	0xFF0
 38244                           indf0	equ	0xFEF
 38245                           postinc0	equ	0xFEE
 38246                           plusw0	equ	0xFEB
 38247                           fsr0h	equ	0xFEA
 38248                           fsr0l	equ	0xFE9
 38249                           wreg	equ	0xFE8
 38250                           indf1	equ	0xFE7
 38251                           postinc1	equ	0xFE6
 38252                           postdec1	equ	0xFE5
 38253                           plusw1	equ	0xFE3
 38254                           fsr1h	equ	0xFE2
 38255                           fsr1l	equ	0xFE1
 38256                           bsr	equ	0xFE0
 38257                           indf2	equ	0xFDF
 38258                           postinc2	equ	0xFDE
 38259                           postdec2	equ	0xFDD
 38260                           plusw2	equ	0xFDB
 38261                           fsr2h	equ	0xFDA
 38262                           fsr2l	equ	0xFD9
 38263                           status	equ	0xFD8
 38264                           
 38265 ;; *************** function _Uart_Uart1RxIsr *****************
 38266 ;; Defined at:
 38267 ;;		line 584 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 38268 ;; Parameters:    Size  Location     Type
 38269 ;;		None
 38270 ;; Auto vars:     Size  Location     Type
 38271 ;;		None
 38272 ;; Return value:  Size  Location     Type
 38273 ;;                  1    wreg      void 
 38274 ;; Registers used:
 38275 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 38276 ;; Tracked objects:
 38277 ;;		On entry : 0/0
 38278 ;;		On exit  : 0/0
 38279 ;;		Unchanged: 0/0
 38280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38281 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38282 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38283 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38284 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38285 ;;Total ram usage:        0 bytes
 38286 ;; Hardware stack levels used:    1
 38287 ;; Hardware stack levels required when called:    2
 38288 ;; This function calls:
 38289 ;;		_Uart_MdmGsmGprsReadService
 38290 ;; This function is called by:
 38291 ;;		_HighPriorityIsr
 38292 ;; This function uses a non-reentrant model
 38293 ;;
 38294                           
 38295                           	psect	text190
 38296  006A9E                     __ptext190:
 38297                           	opt stack 0
 38298  006A9E                     _Uart_Uart1RxIsr:
 38299                           	opt stack 8
 38300                           
 38301                           ;uart_drv.c: 587: static UINT8 UartRxData = 0;
 38302                           ;uart_drv.c: 590: UartRxData = RCREG1;
 38303                           
 38304                           ;incstack = 0
 38305  006A9E  CFAF F02C          	movff	4015,Uart_Uart1RxIsr@UartRxData	;volatile
 38306                           
 38307                           ;uart_drv.c: 594: Uart_MdmGsmGprsReadService(1,UartRxData);
 38308  006AA2  C02C  F004         	movff	Uart_Uart1RxIsr@UartRxData,Uart_MdmGsmGprsReadService@UartData
 38309  006AA6  0E01               	movlw	1
 38310  006AA8  ECA7  F01E         	call	_Uart_MdmGsmGprsReadService
 38311  006AAC  0012               	return		;funcret
 38312  006AAE                     __end_of_Uart_Uart1RxIsr:
 38313                           	opt stack 0
 38314                           tosu	equ	0xFFF
 38315                           tosh	equ	0xFFE
 38316                           tosl	equ	0xFFD
 38317                           pclatu	equ	0xFFB
 38318                           pclath	equ	0xFFA
 38319                           tblptru	equ	0xFF8
 38320                           tblptrh	equ	0xFF7
 38321                           tblptrl	equ	0xFF6
 38322                           tablat	equ	0xFF5
 38323                           prodh	equ	0xFF4
 38324                           prodl	equ	0xFF3
 38325                           intcon	equ	0xFF2
 38326                           intcon2	equ	0xFF1
 38327                           intcon3	equ	0xFF0
 38328                           indf0	equ	0xFEF
 38329                           postinc0	equ	0xFEE
 38330                           plusw0	equ	0xFEB
 38331                           fsr0h	equ	0xFEA
 38332                           fsr0l	equ	0xFE9
 38333                           wreg	equ	0xFE8
 38334                           indf1	equ	0xFE7
 38335                           postinc1	equ	0xFE6
 38336                           postdec1	equ	0xFE5
 38337                           plusw1	equ	0xFE3
 38338                           fsr1h	equ	0xFE2
 38339                           fsr1l	equ	0xFE1
 38340                           bsr	equ	0xFE0
 38341                           indf2	equ	0xFDF
 38342                           postinc2	equ	0xFDE
 38343                           postdec2	equ	0xFDD
 38344                           plusw2	equ	0xFDB
 38345                           fsr2h	equ	0xFDA
 38346                           fsr2l	equ	0xFD9
 38347                           status	equ	0xFD8
 38348                           
 38349 ;; *************** function _Uart_MdmGsmGprsReadService *****************
 38350 ;; Defined at:
 38351 ;;		line 376 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 38352 ;; Parameters:    Size  Location     Type
 38353 ;;  Module          1    wreg     unsigned char 
 38354 ;;  UartData        1    3[COMRAM] unsigned char 
 38355 ;; Auto vars:     Size  Location     Type
 38356 ;;  Module          1    0[COMRAM] unsigned char 
 38357 ;;  ServiceCount    2    4[COMRAM] unsigned short 
 38358 ;; Return value:  Size  Location     Type
 38359 ;;                  1    wreg      void 
 38360 ;; Registers used:
 38361 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 38362 ;; Tracked objects:
 38363 ;;		On entry : 0/0
 38364 ;;		On exit  : 0/0
 38365 ;;		Unchanged: 0/0
 38366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38367 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38368 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38370 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38371 ;;Total ram usage:        3 bytes
 38372 ;; Hardware stack levels used:    1
 38373 ;; Hardware stack levels required when called:    1
 38374 ;; This function calls:
 38375 ;;		i2_GenerateEvt
 38376 ;; This function is called by:
 38377 ;;		_Uart_Uart1RxIsr
 38378 ;; This function uses a non-reentrant model
 38379 ;;
 38380                           
 38381                           	psect	text191
 38382  003D4E                     __ptext191:
 38383                           	opt stack 0
 38384  003D4E                     _Uart_MdmGsmGprsReadService:
 38385                           	opt stack 8
 38386                           
 38387                           ;uart_drv.c: 378: static UINT16 RxCounter = 0;
 38388                           ;uart_drv.c: 379: static RxStateType RxState = ReadData;
 38389                           ;uart_drv.c: 380: static UINT8 LocalRxBuffer[((UINT16)(400))];
 38390                           ;uart_drv.c: 381: UINT16 ServiceCounter = 0;
 38391                           
 38392                           ;incstack = 0
 38393  003D4E  0E00               	movlw	0
 38394  003D50  6E06               	movwf	Uart_MdmGsmGprsReadService@ServiceCounter+1,c
 38395  003D52  0E00               	movlw	0
 38396  003D54  6E05               	movwf	Uart_MdmGsmGprsReadService@ServiceCounter,c
 38397                           
 38398                           ;uart_drv.c: 383: switch (RxState)
 38399  003D56  D058               	goto	i2l680
 38400  003D58                     
 38401                           ;uart_drv.c: 387: if (UartData == '\r')
 38402  003D58  0E0D               	movlw	13
 38403  003D5A  1804               	xorwf	Uart_MdmGsmGprsReadService@UartData,w,c
 38404  003D5C  A4D8               	btfss	status,2,c
 38405  003D5E  D003               	goto	i2l682
 38406                           
 38407                           ;uart_drv.c: 388: {
 38408                           ;uart_drv.c: 390: RxState = CheckTermSeq1;
 38409  003D60  0E01               	movlw	1
 38410  003D62  6E2D               	movwf	Uart_MdmGsmGprsReadService@RxState,c
 38411                           
 38412                           ;uart_drv.c: 391: }
 38413  003D64  0012               	return	
 38414  003D66                     i2l682:
 38415                           
 38416                           ;uart_drv.c: 392: else
 38417                           ;uart_drv.c: 393: {
 38418                           ;uart_drv.c: 394: if (RxCounter < ((UINT16)(400)))
 38419  003D66  0E90               	movlw	144
 38420  003D68  5C23               	subwf	Uart_MdmGsmGprsReadService@RxCounter,w,c
 38421  003D6A  0E01               	movlw	1
 38422  003D6C  5824               	subwfb	Uart_MdmGsmGprsReadService@RxCounter+1,w,c
 38423  003D6E  B0D8               	btfsc	status,0,c
 38424  003D70  0012               	return	
 38425                           
 38426                           ;uart_drv.c: 395: {
 38427                           ;uart_drv.c: 397: LocalRxBuffer[RxCounter] = UartData;
 38428  003D72  0EC8               	movlw	low Uart_MdmGsmGprsReadService@LocalRxBuffer
 38429  003D74  2423               	addwf	Uart_MdmGsmGprsReadService@RxCounter,w,c
 38430  003D76  6ED9               	movwf	fsr2l,c
 38431  003D78  0E0A               	movlw	high Uart_MdmGsmGprsReadService@LocalRxBuffer
 38432  003D7A  2024               	addwfc	Uart_MdmGsmGprsReadService@RxCounter+1,w,c
 38433  003D7C  6EDA               	movwf	fsr2h,c
 38434  003D7E  C004  FFDF         	movff	Uart_MdmGsmGprsReadService@UartData,indf2
 38435                           
 38436                           ;uart_drv.c: 399: RxCounter++;
 38437  003D82  4A23               	infsnz	Uart_MdmGsmGprsReadService@RxCounter,f,c
 38438  003D84  2A24               	incf	Uart_MdmGsmGprsReadService@RxCounter+1,f,c
 38439                           
 38440                           ;uart_drv.c: 400: }
 38441                           ;uart_drv.c: 401: }
 38442                           ;uart_drv.c: 402: break;
 38443  003D86  0012               	return	
 38444  003D88                     
 38445                           ;uart_drv.c: 406: if (UartData == '\n')
 38446  003D88  0E0A               	movlw	10
 38447  003D8A  1804               	xorwf	Uart_MdmGsmGprsReadService@UartData,w,c
 38448  003D8C  A4D8               	btfss	status,2,c
 38449  003D8E  D035               	goto	i2l688
 38450                           
 38451                           ;uart_drv.c: 407: {
 38452                           ;uart_drv.c: 409: if (RxCounter > 0)
 38453  003D90  5023               	movf	Uart_MdmGsmGprsReadService@RxCounter,w,c
 38454  003D92  1024               	iorwf	Uart_MdmGsmGprsReadService@RxCounter+1,w,c
 38455  003D94  B4D8               	btfsc	status,2,c
 38456  003D96  D031               	goto	i2l688
 38457                           
 38458                           ;uart_drv.c: 410: {
 38459                           ;uart_drv.c: 412: for (ServiceCounter = 0; ServiceCounter < RxCounter; ServiceCounter++)
 38460  003D98  0E00               	movlw	0
 38461  003D9A  6E06               	movwf	Uart_MdmGsmGprsReadService@ServiceCounter+1,c
 38462  003D9C  0E00               	movlw	0
 38463  003D9E  6E05               	movwf	Uart_MdmGsmGprsReadService@ServiceCounter,c
 38464  003DA0  D010               	goto	i2l689
 38465  003DA2                     
 38466                           ;uart_drv.c: 413: {
 38467                           ;uart_drv.c: 414: RxBuffer[ServiceCounter] = LocalRxBuffer[ServiceCounter];
 38468  003DA2  0EC8               	movlw	low Uart_MdmGsmGprsReadService@LocalRxBuffer
 38469  003DA4  2405               	addwf	Uart_MdmGsmGprsReadService@ServiceCounter,w,c
 38470  003DA6  6ED9               	movwf	fsr2l,c
 38471  003DA8  0E0A               	movlw	high Uart_MdmGsmGprsReadService@LocalRxBuffer
 38472  003DAA  2006               	addwfc	Uart_MdmGsmGprsReadService@ServiceCounter+1,w,c
 38473  003DAC  6EDA               	movwf	fsr2h,c
 38474  003DAE  0E58               	movlw	low _RxBuffer
 38475  003DB0  2405               	addwf	Uart_MdmGsmGprsReadService@ServiceCounter,w,c
 38476  003DB2  6EE1               	movwf	fsr1l,c
 38477  003DB4  0E0C               	movlw	high _RxBuffer
 38478  003DB6  2006               	addwfc	Uart_MdmGsmGprsReadService@ServiceCounter+1,w,c
 38479  003DB8  6EE2               	movwf	fsr1h,c
 38480  003DBA  CFDF FFE7          	movff	indf2,indf1
 38481  003DBE  4A05               	infsnz	Uart_MdmGsmGprsReadService@ServiceCounter,f,c
 38482  003DC0  2A06               	incf	Uart_MdmGsmGprsReadService@ServiceCounter+1,f,c
 38483  003DC2                     i2l689:
 38484  003DC2  5023               	movf	Uart_MdmGsmGprsReadService@RxCounter,w,c
 38485  003DC4  5C05               	subwf	Uart_MdmGsmGprsReadService@ServiceCounter,w,c
 38486  003DC6  5024               	movf	Uart_MdmGsmGprsReadService@RxCounter+1,w,c
 38487  003DC8  5806               	subwfb	Uart_MdmGsmGprsReadService@ServiceCounter+1,w,c
 38488  003DCA  A0D8               	btfss	status,0,c
 38489  003DCC  D7EA               	goto	i2l690
 38490                           
 38491                           ;uart_drv.c: 415: }
 38492                           ;uart_drv.c: 417: RxLen = RxCounter;
 38493  003DCE  C023  F0C2         	movff	Uart_MdmGsmGprsReadService@RxCounter,_RxLen
 38494  003DD2  C024  F0C3         	movff	Uart_MdmGsmGprsReadService@RxCounter+1,_RxLen+1
 38495                           
 38496                           ;uart_drv.c: 419: GenerateEvt(&NewStringReceived);
 38497  003DD6  0E3C               	movlw	low _NewStringReceived
 38498  003DD8  6E01               	movwf	i2GenerateEvt@Event,c
 38499  003DDA  0E00               	movlw	high _NewStringReceived
 38500  003DDC  6E02               	movwf	i2GenerateEvt@Event+1,c
 38501  003DDE  ECFF  F034         	call	i2_GenerateEvt	;wreg free
 38502                           
 38503                           ;uart_drv.c: 420: GenerateEvt(&NewMdmEvtParserRequest);
 38504  003DE2  0E3B               	movlw	low _NewMdmEvtParserRequest
 38505  003DE4  6E01               	movwf	i2GenerateEvt@Event,c
 38506  003DE6  0E00               	movlw	high _NewMdmEvtParserRequest
 38507  003DE8  6E02               	movwf	i2GenerateEvt@Event+1,c
 38508  003DEA  ECFF  F034         	call	i2_GenerateEvt	;wreg free
 38509                           
 38510                           ;uart_drv.c: 421: GenerateEvt(&NewStringMdmTerminal);
 38511  003DEE  0E3A               	movlw	low _NewStringMdmTerminal
 38512  003DF0  6E01               	movwf	i2GenerateEvt@Event,c
 38513  003DF2  0E00               	movlw	high _NewStringMdmTerminal
 38514  003DF4  6E02               	movwf	i2GenerateEvt@Event+1,c
 38515  003DF6  ECFF  F034         	call	i2_GenerateEvt	;wreg free
 38516  003DFA                     i2l688:
 38517                           
 38518                           ;uart_drv.c: 427: }
 38519                           ;uart_drv.c: 429: RxState = ReadData;
 38520                           
 38521                           ;uart_drv.c: 424: else
 38522                           ;uart_drv.c: 425: {
 38523                           
 38524                           ;uart_drv.c: 422: }
 38525                           ;uart_drv.c: 423: }
 38526  003DFA  0E00               	movlw	0
 38527  003DFC  6E2D               	movwf	Uart_MdmGsmGprsReadService@RxState,c
 38528                           
 38529                           ;uart_drv.c: 431: RxCounter = 0;
 38530  003DFE  0E00               	movlw	0
 38531  003E00  6E24               	movwf	Uart_MdmGsmGprsReadService@RxCounter+1,c
 38532  003E02  0E00               	movlw	0
 38533  003E04  6E23               	movwf	Uart_MdmGsmGprsReadService@RxCounter,c
 38534                           
 38535                           ;uart_drv.c: 436: }
 38536                           
 38537                           ;uart_drv.c: 435: break;
 38538                           
 38539                           ;uart_drv.c: 434: default:
 38540                           
 38541                           ;uart_drv.c: 432: break;
 38542  003E06  0012               	return	
 38543  003E08                     i2l680:
 38544  003E08  502D               	movf	Uart_MdmGsmGprsReadService@RxState,w,c
 38545                           
 38546                           ; Switch size 1, requested type "space"
 38547                           ; Number of cases is 2, Range of values is 0 to 1
 38548                           ; switch strategies available:
 38549                           ; Name         Instructions Cycles
 38550                           ; simple_byte            7     4 (average)
 38551                           ;	Chosen strategy is simple_byte
 38552  003E0A  0A00               	xorlw	0	; case 0
 38553  003E0C  B4D8               	btfsc	status,2,c
 38554  003E0E  D7A4               	goto	i2l681
 38555  003E10  0A01               	xorlw	1	; case 1
 38556  003E12  A4D8               	btfss	status,2,c
 38557  003E14  0012               	return	
 38558  003E16  D7B8               	goto	i2l686
 38559  003E18                     __end_of_Uart_MdmGsmGprsReadService:
 38560                           	opt stack 0
 38561                           tosu	equ	0xFFF
 38562                           tosh	equ	0xFFE
 38563                           tosl	equ	0xFFD
 38564                           pclatu	equ	0xFFB
 38565                           pclath	equ	0xFFA
 38566                           tblptru	equ	0xFF8
 38567                           tblptrh	equ	0xFF7
 38568                           tblptrl	equ	0xFF6
 38569                           tablat	equ	0xFF5
 38570                           prodh	equ	0xFF4
 38571                           prodl	equ	0xFF3
 38572                           intcon	equ	0xFF2
 38573                           intcon2	equ	0xFF1
 38574                           intcon3	equ	0xFF0
 38575                           indf0	equ	0xFEF
 38576                           postinc0	equ	0xFEE
 38577                           plusw0	equ	0xFEB
 38578                           fsr0h	equ	0xFEA
 38579                           fsr0l	equ	0xFE9
 38580                           wreg	equ	0xFE8
 38581                           indf1	equ	0xFE7
 38582                           postinc1	equ	0xFE6
 38583                           postdec1	equ	0xFE5
 38584                           plusw1	equ	0xFE3
 38585                           fsr1h	equ	0xFE2
 38586                           fsr1l	equ	0xFE1
 38587                           bsr	equ	0xFE0
 38588                           indf2	equ	0xFDF
 38589                           postinc2	equ	0xFDE
 38590                           postdec2	equ	0xFDD
 38591                           plusw2	equ	0xFDB
 38592                           fsr2h	equ	0xFDA
 38593                           fsr2l	equ	0xFD9
 38594                           status	equ	0xFD8
 38595                           
 38596 ;; *************** function i2_GenerateEvt *****************
 38597 ;; Defined at:
 38598 ;;		line 75 in file "../../MercuryFwk/Source/c/02_Osl/os_ser.c"
 38599 ;; Parameters:    Size  Location     Type
 38600 ;;  Event           2    0[COMRAM] PTR struct EventStructur
 38601 ;;		 -> AlarmEvent(1), I2cRxPacket(6), I2cReadDataEvt(1), I2cWriteDataEvt(1), 
 38602 ;;		 -> GetMethod(1), InitNetwork(1), MdmStsReady(1), SmsTxtReady(1), 
 38603 ;;		 -> GetSmsText(1), SmsEvent(1), ClipEvent(1), RingEvent(1), 
 38604 ;;		 -> SendSmsEvent(1), NewStringMdmTerminal(1), NewMdmEvtParserRequest(1), NewStringReceived(1), 
 38605 ;;		 -> MdmOnOffPulseRequest(1), CallClosedEvent(1), IncomingCallEvent(1), NewSmsEvent(1), 
 38606 ;; Auto vars:     Size  Location     Type
 38607 ;;  GenerateEvt     1    2[COMRAM] enum E7727
 38608 ;; Return value:  Size  Location     Type
 38609 ;;                  1    wreg      enum E7699
 38610 ;; Registers used:
 38611 ;;		wreg, fsr2l, fsr2h, status,2
 38612 ;; Tracked objects:
 38613 ;;		On entry : 0/0
 38614 ;;		On exit  : 0/0
 38615 ;;		Unchanged: 0/0
 38616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38617 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38618 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38619 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38620 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38621 ;;Total ram usage:        3 bytes
 38622 ;; Hardware stack levels used:    1
 38623 ;; This function calls:
 38624 ;;		Nothing
 38625 ;; This function is called by:
 38626 ;;		_Uart_MdmGsmGprsReadService
 38627 ;; This function uses a non-reentrant model
 38628 ;;
 38629                           
 38630                           	psect	text192
 38631  0069FE                     __ptext192:
 38632                           	opt stack 0
 38633  0069FE                     i2_GenerateEvt:
 38634                           	opt stack 8
 38635                           
 38636                           ;os_ser.c: 78: EventStatusType EventStatus = EventIdle;
 38637                           
 38638                           ;incstack = 0
 38639  0069FE  0E00               	movlw	0
 38640  006A00  6E03               	movwf	i2GenerateEvt@EventStatus,c
 38641                           
 38642                           ;os_ser.c: 81: Event->EventStatus = EventSent;
 38643  006A02  C001  FFD9         	movff	i2GenerateEvt@Event,fsr2l
 38644  006A06  C002  FFDA         	movff	i2GenerateEvt@Event+1,fsr2h
 38645  006A0A  0E02               	movlw	2
 38646  006A0C  6EDF               	movwf	indf2,c
 38647                           
 38648                           ;os_ser.c: 83: EventStatus = EventSent;
 38649  006A0E  0E02               	movlw	2
 38650  006A10  6E03               	movwf	i2GenerateEvt@EventStatus,c
 38651  006A12  0012               	return	
 38652  006A14                     __end_ofi2_GenerateEvt:
 38653                           	opt stack 0
 38654                           tosu	equ	0xFFF
 38655                           tosh	equ	0xFFE
 38656                           tosl	equ	0xFFD
 38657                           pclatu	equ	0xFFB
 38658                           pclath	equ	0xFFA
 38659                           tblptru	equ	0xFF8
 38660                           tblptrh	equ	0xFF7
 38661                           tblptrl	equ	0xFF6
 38662                           tablat	equ	0xFF5
 38663                           prodh	equ	0xFF4
 38664                           prodl	equ	0xFF3
 38665                           intcon	equ	0xFF2
 38666                           intcon2	equ	0xFF1
 38667                           intcon3	equ	0xFF0
 38668                           indf0	equ	0xFEF
 38669                           postinc0	equ	0xFEE
 38670                           plusw0	equ	0xFEB
 38671                           fsr0h	equ	0xFEA
 38672                           fsr0l	equ	0xFE9
 38673                           wreg	equ	0xFE8
 38674                           indf1	equ	0xFE7
 38675                           postinc1	equ	0xFE6
 38676                           postdec1	equ	0xFE5
 38677                           plusw1	equ	0xFE3
 38678                           fsr1h	equ	0xFE2
 38679                           fsr1l	equ	0xFE1
 38680                           bsr	equ	0xFE0
 38681                           indf2	equ	0xFDF
 38682                           postinc2	equ	0xFDE
 38683                           postdec2	equ	0xFDD
 38684                           plusw2	equ	0xFDB
 38685                           fsr2h	equ	0xFDA
 38686                           fsr2l	equ	0xFD9
 38687                           status	equ	0xFD8
 38688                           
 38689 ;; *************** function _Rtcc_RtcIsr *****************
 38690 ;; Defined at:
 38691 ;;		line 537 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 38692 ;; Parameters:    Size  Location     Type
 38693 ;;		None
 38694 ;; Auto vars:     Size  Location     Type
 38695 ;;		None
 38696 ;; Return value:  Size  Location     Type
 38697 ;;                  1    wreg      void 
 38698 ;; Registers used:
 38699 ;;		wreg, status,2, status,0
 38700 ;; Tracked objects:
 38701 ;;		On entry : 0/0
 38702 ;;		On exit  : 0/0
 38703 ;;		Unchanged: 0/0
 38704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38705 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38706 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38707 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38708 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38709 ;;Total ram usage:        0 bytes
 38710 ;; Hardware stack levels used:    1
 38711 ;; This function calls:
 38712 ;;		Nothing
 38713 ;; This function is called by:
 38714 ;;		_HighPriorityIsr
 38715 ;; This function uses a non-reentrant model
 38716 ;;
 38717                           
 38718                           	psect	text193
 38719  006B42                     __ptext193:
 38720                           	opt stack 0
 38721  006B42                     _Rtcc_RtcIsr:
 38722                           	opt stack 10
 38723                           
 38724                           ;rtcc_drv.c: 540: PIR3bits.RTCCIF = 0u;
 38725                           
 38726                           ;incstack = 0
 38727  006B42  90A4               	bcf	4004,0,c	;volatile
 38728  006B44  0012               	return	
 38729  006B46                     __end_of_Rtcc_RtcIsr:
 38730                           	opt stack 0
 38731                           tosu	equ	0xFFF
 38732                           tosh	equ	0xFFE
 38733                           tosl	equ	0xFFD
 38734                           pclatu	equ	0xFFB
 38735                           pclath	equ	0xFFA
 38736                           tblptru	equ	0xFF8
 38737                           tblptrh	equ	0xFF7
 38738                           tblptrl	equ	0xFF6
 38739                           tablat	equ	0xFF5
 38740                           prodh	equ	0xFF4
 38741                           prodl	equ	0xFF3
 38742                           intcon	equ	0xFF2
 38743                           intcon2	equ	0xFF1
 38744                           intcon3	equ	0xFF0
 38745                           indf0	equ	0xFEF
 38746                           postinc0	equ	0xFEE
 38747                           plusw0	equ	0xFEB
 38748                           fsr0h	equ	0xFEA
 38749                           fsr0l	equ	0xFE9
 38750                           wreg	equ	0xFE8
 38751                           indf1	equ	0xFE7
 38752                           postinc1	equ	0xFE6
 38753                           postdec1	equ	0xFE5
 38754                           plusw1	equ	0xFE3
 38755                           fsr1h	equ	0xFE2
 38756                           fsr1l	equ	0xFE1
 38757                           bsr	equ	0xFE0
 38758                           indf2	equ	0xFDF
 38759                           postinc2	equ	0xFDE
 38760                           postdec2	equ	0xFDD
 38761                           plusw2	equ	0xFDB
 38762                           fsr2h	equ	0xFDA
 38763                           fsr2l	equ	0xFD9
 38764                           status	equ	0xFD8
 38765                           
 38766 ;; *************** function _Mcu_Int1Isr *****************
 38767 ;; Defined at:
 38768 ;;		line 161 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
 38769 ;; Parameters:    Size  Location     Type
 38770 ;;		None
 38771 ;; Auto vars:     Size  Location     Type
 38772 ;;		None
 38773 ;; Return value:  Size  Location     Type
 38774 ;;                  1    wreg      void 
 38775 ;; Registers used:
 38776 ;;		wreg, status,2, status,0
 38777 ;; Tracked objects:
 38778 ;;		On entry : 0/0
 38779 ;;		On exit  : 0/0
 38780 ;;		Unchanged: 0/0
 38781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38782 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38783 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38785 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38786 ;;Total ram usage:        0 bytes
 38787 ;; Hardware stack levels used:    1
 38788 ;; This function calls:
 38789 ;;		Nothing
 38790 ;; This function is called by:
 38791 ;;		_HighPriorityIsr
 38792 ;; This function uses a non-reentrant model
 38793 ;;
 38794                           
 38795                           	psect	text194
 38796  006B46                     __ptext194:
 38797                           	opt stack 0
 38798  006B46                     _Mcu_Int1Isr:
 38799                           	opt stack 10
 38800                           
 38801                           ;mcu_drv.c: 164: INTCON3bits.INT1IF = 0u;
 38802                           
 38803                           ;incstack = 0
 38804  006B46  90F0               	bcf	intcon3,0,c	;volatile
 38805  006B48  0012               	return	
 38806  006B4A                     __end_of_Mcu_Int1Isr:
 38807                           	opt stack 0
 38808                           tosu	equ	0xFFF
 38809                           tosh	equ	0xFFE
 38810                           tosl	equ	0xFFD
 38811                           pclatu	equ	0xFFB
 38812                           pclath	equ	0xFFA
 38813                           tblptru	equ	0xFF8
 38814                           tblptrh	equ	0xFF7
 38815                           tblptrl	equ	0xFF6
 38816                           tablat	equ	0xFF5
 38817                           prodh	equ	0xFF4
 38818                           prodl	equ	0xFF3
 38819                           intcon	equ	0xFF2
 38820                           intcon2	equ	0xFF1
 38821                           intcon3	equ	0xFF0
 38822                           indf0	equ	0xFEF
 38823                           postinc0	equ	0xFEE
 38824                           plusw0	equ	0xFEB
 38825                           fsr0h	equ	0xFEA
 38826                           fsr0l	equ	0xFE9
 38827                           wreg	equ	0xFE8
 38828                           indf1	equ	0xFE7
 38829                           postinc1	equ	0xFE6
 38830                           postdec1	equ	0xFE5
 38831                           plusw1	equ	0xFE3
 38832                           fsr1h	equ	0xFE2
 38833                           fsr1l	equ	0xFE1
 38834                           bsr	equ	0xFE0
 38835                           indf2	equ	0xFDF
 38836                           postinc2	equ	0xFDE
 38837                           postdec2	equ	0xFDD
 38838                           plusw2	equ	0xFDB
 38839                           fsr2h	equ	0xFDA
 38840                           fsr2l	equ	0xFD9
 38841                           status	equ	0xFD8
 38842                           
 38843 ;; *************** function _Mcu_Int0Isr *****************
 38844 ;; Defined at:
 38845 ;;		line 126 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
 38846 ;; Parameters:    Size  Location     Type
 38847 ;;		None
 38848 ;; Auto vars:     Size  Location     Type
 38849 ;;		None
 38850 ;; Return value:  Size  Location     Type
 38851 ;;                  1    wreg      void 
 38852 ;; Registers used:
 38853 ;;		wreg, status,2, status,0
 38854 ;; Tracked objects:
 38855 ;;		On entry : 0/0
 38856 ;;		On exit  : 0/0
 38857 ;;		Unchanged: 0/0
 38858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38859 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38860 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38862 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38863 ;;Total ram usage:        0 bytes
 38864 ;; Hardware stack levels used:    1
 38865 ;; This function calls:
 38866 ;;		Nothing
 38867 ;; This function is called by:
 38868 ;;		_HighPriorityIsr
 38869 ;; This function uses a non-reentrant model
 38870 ;;
 38871                           
 38872                           	psect	text195
 38873  006B4A                     __ptext195:
 38874                           	opt stack 0
 38875  006B4A                     _Mcu_Int0Isr:
 38876                           	opt stack 10
 38877                           
 38878                           ;mcu_drv.c: 129: INTCONbits.INT0IF = 0u;
 38879                           
 38880                           ;incstack = 0
 38881  006B4A  92F2               	bcf	intcon,1,c	;volatile
 38882  006B4C  0012               	return	
 38883  006B4E                     __end_of_Mcu_Int0Isr:
 38884                           	opt stack 0
 38885                           tosu	equ	0xFFF
 38886                           tosh	equ	0xFFE
 38887                           tosl	equ	0xFFD
 38888                           pclatu	equ	0xFFB
 38889                           pclath	equ	0xFFA
 38890                           tblptru	equ	0xFF8
 38891                           tblptrh	equ	0xFF7
 38892                           tblptrl	equ	0xFF6
 38893                           tablat	equ	0xFF5
 38894                           prodh	equ	0xFF4
 38895                           prodl	equ	0xFF3
 38896                           intcon	equ	0xFF2
 38897                           intcon2	equ	0xFF1
 38898                           intcon3	equ	0xFF0
 38899                           indf0	equ	0xFEF
 38900                           postinc0	equ	0xFEE
 38901                           plusw0	equ	0xFEB
 38902                           fsr0h	equ	0xFEA
 38903                           fsr0l	equ	0xFE9
 38904                           wreg	equ	0xFE8
 38905                           indf1	equ	0xFE7
 38906                           postinc1	equ	0xFE6
 38907                           postdec1	equ	0xFE5
 38908                           plusw1	equ	0xFE3
 38909                           fsr1h	equ	0xFE2
 38910                           fsr1l	equ	0xFE1
 38911                           bsr	equ	0xFE0
 38912                           indf2	equ	0xFDF
 38913                           postinc2	equ	0xFDE
 38914                           postdec2	equ	0xFDD
 38915                           plusw2	equ	0xFDB
 38916                           fsr2h	equ	0xFDA
 38917                           fsr2l	equ	0xFD9
 38918                           status	equ	0xFD8
 38919                           tosu	equ	0xFFF
 38920                           tosh	equ	0xFFE
 38921                           tosl	equ	0xFFD
 38922                           pclatu	equ	0xFFB
 38923                           pclath	equ	0xFFA
 38924                           tblptru	equ	0xFF8
 38925                           tblptrh	equ	0xFF7
 38926                           tblptrl	equ	0xFF6
 38927                           tablat	equ	0xFF5
 38928                           prodh	equ	0xFF4
 38929                           prodl	equ	0xFF3
 38930                           intcon	equ	0xFF2
 38931                           intcon2	equ	0xFF1
 38932                           intcon3	equ	0xFF0
 38933                           indf0	equ	0xFEF
 38934                           postinc0	equ	0xFEE
 38935                           plusw0	equ	0xFEB
 38936                           fsr0h	equ	0xFEA
 38937                           fsr0l	equ	0xFE9
 38938                           wreg	equ	0xFE8
 38939                           indf1	equ	0xFE7
 38940                           postinc1	equ	0xFE6
 38941                           postdec1	equ	0xFE5
 38942                           plusw1	equ	0xFE3
 38943                           fsr1h	equ	0xFE2
 38944                           fsr1l	equ	0xFE1
 38945                           bsr	equ	0xFE0
 38946                           indf2	equ	0xFDF
 38947                           postinc2	equ	0xFDE
 38948                           postdec2	equ	0xFDD
 38949                           plusw2	equ	0xFDB
 38950                           fsr2h	equ	0xFDA
 38951                           fsr2l	equ	0xFD9
 38952                           status	equ	0xFD8
 38953                           
 38954                           	psect	text196
 38955  000000                     __ptext196:
 38956                           	opt stack 0
 38957                           tosu	equ	0xFFF
 38958                           tosh	equ	0xFFE
 38959                           tosl	equ	0xFFD
 38960                           pclatu	equ	0xFFB
 38961                           pclath	equ	0xFFA
 38962                           tblptru	equ	0xFF8
 38963                           tblptrh	equ	0xFF7
 38964                           tblptrl	equ	0xFF6
 38965                           tablat	equ	0xFF5
 38966                           prodh	equ	0xFF4
 38967                           prodl	equ	0xFF3
 38968                           intcon	equ	0xFF2
 38969                           intcon2	equ	0xFF1
 38970                           intcon3	equ	0xFF0
 38971                           indf0	equ	0xFEF
 38972                           postinc0	equ	0xFEE
 38973                           plusw0	equ	0xFEB
 38974                           fsr0h	equ	0xFEA
 38975                           fsr0l	equ	0xFE9
 38976                           wreg	equ	0xFE8
 38977                           indf1	equ	0xFE7
 38978                           postinc1	equ	0xFE6
 38979                           postdec1	equ	0xFE5
 38980                           plusw1	equ	0xFE3
 38981                           fsr1h	equ	0xFE2
 38982                           fsr1l	equ	0xFE1
 38983                           bsr	equ	0xFE0
 38984                           indf2	equ	0xFDF
 38985                           postinc2	equ	0xFDE
 38986                           postdec2	equ	0xFDD
 38987                           plusw2	equ	0xFDB
 38988                           fsr2h	equ	0xFDA
 38989                           fsr2l	equ	0xFD9
 38990                           status	equ	0xFD8
 38991                           
 38992                           	psect	rparam
 38993  0000                     tosu	equ	0xFFF
 38994                           tosh	equ	0xFFE
 38995                           tosl	equ	0xFFD
 38996                           pclatu	equ	0xFFB
 38997                           pclath	equ	0xFFA
 38998                           tblptru	equ	0xFF8
 38999                           tblptrh	equ	0xFF7
 39000                           tblptrl	equ	0xFF6
 39001                           tablat	equ	0xFF5
 39002                           prodh	equ	0xFF4
 39003                           prodl	equ	0xFF3
 39004                           intcon	equ	0xFF2
 39005                           intcon2	equ	0xFF1
 39006                           intcon3	equ	0xFF0
 39007                           indf0	equ	0xFEF
 39008                           postinc0	equ	0xFEE
 39009                           plusw0	equ	0xFEB
 39010                           fsr0h	equ	0xFEA
 39011                           fsr0l	equ	0xFE9
 39012                           wreg	equ	0xFE8
 39013                           indf1	equ	0xFE7
 39014                           postinc1	equ	0xFE6
 39015                           postdec1	equ	0xFE5
 39016                           plusw1	equ	0xFE3
 39017                           fsr1h	equ	0xFE2
 39018                           fsr1l	equ	0xFE1
 39019                           bsr	equ	0xFE0
 39020                           indf2	equ	0xFDF
 39021                           postinc2	equ	0xFDE
 39022                           postdec2	equ	0xFDD
 39023                           plusw2	equ	0xFDB
 39024                           fsr2h	equ	0xFDA
 39025                           fsr2l	equ	0xFD9
 39026                           status	equ	0xFD8
 39027                           
 39028                           	psect	temp
 39029  000042                     btemp:
 39030                           	opt stack 0
 39031  000042                     	ds	1
 39032  0000                     int$flags	set	btemp
 39033  0000                     wtemp6	set	btemp+1
 39034                           tosu	equ	0xFFF
 39035                           tosh	equ	0xFFE
 39036                           tosl	equ	0xFFD
 39037                           pclatu	equ	0xFFB
 39038                           pclath	equ	0xFFA
 39039                           tblptru	equ	0xFF8
 39040                           tblptrh	equ	0xFF7
 39041                           tblptrl	equ	0xFF6
 39042                           tablat	equ	0xFF5
 39043                           prodh	equ	0xFF4
 39044                           prodl	equ	0xFF3
 39045                           intcon	equ	0xFF2
 39046                           intcon2	equ	0xFF1
 39047                           intcon3	equ	0xFF0
 39048                           indf0	equ	0xFEF
 39049                           postinc0	equ	0xFEE
 39050                           plusw0	equ	0xFEB
 39051                           fsr0h	equ	0xFEA
 39052                           fsr0l	equ	0xFE9
 39053                           wreg	equ	0xFE8
 39054                           indf1	equ	0xFE7
 39055                           postinc1	equ	0xFE6
 39056                           postdec1	equ	0xFE5
 39057                           plusw1	equ	0xFE3
 39058                           fsr1h	equ	0xFE2
 39059                           fsr1l	equ	0xFE1
 39060                           bsr	equ	0xFE0
 39061                           indf2	equ	0xFDF
 39062                           postinc2	equ	0xFDE
 39063                           postdec2	equ	0xFDD
 39064                           plusw2	equ	0xFDB
 39065                           fsr2h	equ	0xFDA
 39066                           fsr2l	equ	0xFD9
 39067                           status	equ	0xFD8


Data Sizes:
    Strings     408
    Constant    592
    Data        167
    BSS         2375
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     34      65
    BANK0           160     80     131
    BANK1           256    201     256
    BANK2           256    200     256
    BANK3           256      0     256
    BANK4           192      5     188
    BANK5           256      0     244
    BANK6           256      0     220
    BANK7           256      0     246
    BANK8           256      0     200
    BANK9           256      0     200
    BANK10          256    200     200
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          192      0       0

Pointer List with Targets:

    triggerCmdFsm@receivedNumber	PTR unsigned char  size(2) Largest target is 13
		 -> receivedNumber(BANK4[13]), 

    delCmdFsm@smsText	PTR unsigned char  size(2) Largest target is 20
		 -> smsText(BANK4[20]), 

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 48
		 -> USTATcopy(BANK0[1]), USBActiveConfiguration(BANK0[1]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    xtoi@s	PTR const unsigned char  size(2) Largest target is 4
		 -> Terminal@Addr(BANK3[4]), 

    strtol@endptr	PTR PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strtol@s	PTR const unsigned char  size(2) Largest target is 80
		 -> Terminal@Payload(BANK7[80]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 42
		 -> STR_23(CODE[20]), STR_21(CODE[42]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 200
		 -> Term_MainSm@Data(BANK4[50]), Terminal@UsbTxBuffer(BANK2[200]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 200
		 -> Term_MainSm@Data(BANK4[50]), Terminal@UsbTxBuffer(BANK2[200]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_26(CODE[3]), STR_25(CODE[2]), STR_24(CODE[2]), Term_MainSm@FwkBuildStr(BANK1[4]), 
		 -> Term_MainSm@FwkMinorStr(BANK1[4]), Term_MainSm@FwkMajorStr(BANK1[4]), 

    strcat@to	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    strcat@cp	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    memset@p1	PTR void  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), USBAlternateInterface(BANK2[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), USBAlternateInterface(BANK2[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memcpy@d1	PTR void  size(2) Largest target is 8
		 -> SetupPkt(BIGRAMh[8]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 8
		 -> SetupPkt(BIGRAMh[8]), 

    memcpy@s1	PTR const void  size(2) Largest target is 3775
		 -> RAM(DATA[3775]), CtrlTrfData(BIGRAMh[8]), SetupPkt(BIGRAMh[8]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 3775
		 -> RAM(DATA[3775]), CtrlTrfData(BIGRAMh[8]), SetupPkt(BIGRAMh[8]), 

    utoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> Term_MainSm@FwkBuildStr(BANK1[4]), Term_MainSm@FwkMinorStr(BANK1[4]), Term_MainSm@FwkMajorStr(BANK1[4]), Terminal@Payload(BANK7[80]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> Terminal@Payload(BANK7[80]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 80
		 -> Terminal@Payload(BANK7[80]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 4
		 -> Terminal@Len(BANK3[4]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_27(CODE[17]), 

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_32(CODE[7]), STR_28(CODE[12]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    delCmdFsm@receivedNumber	PTR unsigned char  size(2) Largest target is 13
		 -> receivedNumber(BANK4[13]), 

    addCmdFsm@smsText	PTR unsigned char  size(2) Largest target is 20
		 -> smsText(BANK4[20]), 

    addCmdFsm@receivedNumber	PTR unsigned char  size(2) Largest target is 13
		 -> receivedNumber(BANK4[13]), 

    findEmptySpot@positionInMemory	PTR unsigned char  size(2) Largest target is 1
		 -> addCmdFsm@numberInMemory(BANK1[1]), 

    isMasterNumber@phoneNumber	PTR unsigned char  size(2) Largest target is 13
		 -> receivedNumber(BANK4[13]), 

    isNumberInMemory@positionInMemory	PTR unsigned char  size(2) Largest target is 1
		 -> addCmdFsm@numberInMemory(BANK1[1]), 

    isNumberInMemory@phoneNumber	PTR unsigned char  size(2) Largest target is 20
		 -> smsText(BANK4[20]), 

    isNumberValid@phoneNumber	PTR unsigned char  size(2) Largest target is 20
		 -> readBuffer(BANK3[13]), smsText(BANK4[20]), 

    saveNumberInMemory@phoneNumber	PTR unsigned char  size(2) Largest target is 20
		 -> delCmdFsm@emptyNumber(BANK1[13]), smsText(BANK4[20]), callerNumber(BANK3[13]), 

    secondsAppTimer@counter	PTR unsigned int  size(2) Largest target is 2
		 -> setupCallTicks(BANK3[2]), initGprsModem@modemCounter(BANK3[2]), 

    sp__initPreamble	PTR unsigned char  size(2) Largest target is 4
		 -> memoryPreamble(BANK3[4]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 80
		 -> Term_MainSm@FwkBuildStr(BANK1[4]), Term_MainSm@FwkMinorStr(BANK1[4]), Term_MainSm@FwkMajorStr(BANK1[4]), Terminal@Payload(BANK7[80]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 200
		 -> Term_MainSm@Data(BANK4[50]), Terminal@UsbTxBuffer(BANK2[200]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 80
		 -> Terminal@Payload(BANK7[80]), 

    ClearBuffer@Buffer	PTR unsigned char  size(2) Largest target is 400
		 -> GsmGprsTerminal@UartBuffer(BANK9[200]), EepromBuffer(BANK4[15]), HttpGetMethod@UartMessage(BANK1[200]), InitGprsNetwork@UartMessage(BANK1[50]), 
		 -> Mdm_SmsRx(BANK7[102]), callerNumber(BANK3[13]), RxBuffer(BIGRAMl[400]), 

    StringCopy@SourceStr	PTR unsigned char  size(2) Largest target is 400
		 -> delCmdFsm@emptyNumber(BANK1[13]), memoryPreamble(BANK3[4]), smsText(BANK4[20]), STR_15(CODE[20]), 
		 -> STR_9(CODE[21]), MessageText(BANK5[50]), PhoneNumber(BANK4[20]), STR_5(CODE[10]), 
		 -> Mdm_SmsRx.HeaderBuffer(BANK7[80]), Mdm_SmsRx(BANK7[102]), callerNumber(BANK3[13]), RxBuffer(BIGRAMl[400]), 

    StringCopy@DestStr	PTR unsigned char  size(2) Largest target is 200
		 -> receivedNumber(BANK4[13]), smsText(BANK4[20]), EepromBuffer(BANK4[15]), HttpGetMethod@UartMessage(BANK1[200]), 
		 -> InitGprsNetwork@UartMessage(BANK1[50]), MessageText(BANK5[50]), PhoneNumber(BANK4[20]), SendSmsSm@UartMessage(BANK1[50]), 
		 -> Mdm_SmsRx(BANK7[102]), callerNumber(BANK3[13]), 

    StringCompare@String2	PTR unsigned char  size(2) Largest target is 400
		 -> readBuffer(BANK3[13]), parseCommand@resetCmd(BANK0[4]), parseCommand@deleteNumberCmd(BANK0[4]), parseCommand@addNumberCmd(BANK0[4]), 
		 -> RxBuffer(BIGRAMl[400]), 

    StringCompare@String1	PTR unsigned char  size(2) Largest target is 20
		 -> receivedNumber(BANK4[13]), smsText(BANK4[20]), ModemEvtParser@CallReadyString(BANK0[10]), ModemEvtParser@SmsString(BANK0[5]), 
		 -> ModemEvtParser@ClipString(BANK0[5]), ModemEvtParser@RingString(BANK0[4]), 

    LedStateMachine@LedSts	PTR enum E8954 size(2) Largest target is 1
		 -> Led3Sts(BANK1[1]), Led2Sts(BANK1[1]), Led1Sts(BANK1[1]), 

    LedStateMachine@LedPulse	PTR struct _LedPulseType size(2) Largest target is 6
		 -> Led3Pulse(BANK3[6]), Led2Pulse(BANK3[6]), Led1Pulse(BANK3[6]), 

    LedStateMachine@LedBlink	PTR struct _LedBlinkType size(2) Largest target is 9
		 -> Led3Blink(BANK3[9]), Led2Blink(BANK3[9]), Led1Blink(BANK3[9]), 

    LedStateMachine@LedOut	PTR unsigned char  size(2) Largest target is 1
		 -> Led3OutSts(BANK1[1]), Led2OutSts(BANK1[1]), Led1OutSts(BANK1[1]), 

    LedPulseStateMachine@LedPulse	PTR struct _LedPulseType size(2) Largest target is 6
		 -> Led3Pulse(BANK3[6]), Led2Pulse(BANK3[6]), Led1Pulse(BANK3[6]), 

    LedBlinkStateMachine@LedBlink	PTR struct _LedBlinkType size(2) Largest target is 9
		 -> Led3Blink(BANK3[9]), Led2Blink(BANK3[9]), Led1Blink(BANK3[9]), 

    Eeprom_Read@ReadBuffer	PTR unsigned char  size(2) Largest target is 13
		 -> readBuffer(BANK3[13]), memoryPreamble(BANK3[4]), 

    Eeprom_Write@WriteBuffer	PTR unsigned char  size(2) Largest target is 20
		 -> delCmdFsm@emptyNumber(BANK1[13]), memoryPreamble(BANK3[4]), smsText(BANK4[20]), callerNumber(BANK3[13]), 

    putUSBUSART@data	PTR unsigned char  size(2) Largest target is 400
		 -> MsgReady(CODE[23]), Term_MainSm@Data(BANK4[50]), MsgFormat(CODE[240]), Welcome(CODE[137]), 
		 -> Terminal@UsbTxBuffer(BANK2[200]), Terminal@TermRxBuffer(BANK5[50]), Terminal@Payload(BANK7[80]), Terminal@UsbRxBuffer(BANK10[200]), 
		 -> RxBuffer(BIGRAMl[400]), 

    getsUSBUSART@buffer	PTR unsigned char  size(2) Largest target is 200
		 -> Terminal@UsbRxBuffer(BANK10[200]), GsmGprsTerminal@UsbBuffer(BANK8[200]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pCDCDst.wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S4616$wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S4616$bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S4616$wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S4616$bRam	PTR unsigned char  size(2) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    sp__memcpy	PTR void  size(2) Largest target is 8
		 -> SetupPkt(BIGRAMh[8]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pDst	PTR unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMh[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx(BANK7[64]), cdc_data_rx(BANK5[64]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    S3069$pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S3059$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S3059$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S3035$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S3035$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S3035$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S3035$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), USBAlternateInterface(BANK2[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 38
		 -> sd002(CODE[38]), sd001(CODE[30]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 

    I2cSlv_QueryI2cData@RxBuffer	PTR unsigned char  size(2) Largest target is 13
		 -> readBuffer(BANK3[13]), memoryPreamble(BANK3[4]), 

    I2cSlv_QueryI2cData@TxBuffer	PTR unsigned char  size(2) Largest target is 1
		 -> ReadAddress(BANK1[1]), 

    I2cSlv_ReceiveI2cMsg@RxBuffer	PTR unsigned char  size(2) Largest target is 50
		 -> readBuffer(BANK3[13]), memoryPreamble(BANK3[4]), Terminal@TermRxBuffer(BANK5[50]), 

    I2cSlv_SendI2cMsg@TxBuffer	PTR unsigned char  size(2) Largest target is 50
		 -> triggerRelay@txBuffer(BANK0[2]), Terminal@TermTxBuffer(BANK1[50]), ReadAddress(BANK1[1]), EepromBuffer(BANK4[15]), 
		 -> I2cDummyTx@DummyBuffer(BANK1[1]), 

    I2cRxPacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> readBuffer(BANK3[13]), memoryPreamble(BANK3[4]), Terminal@TermRxBuffer(BANK5[50]), 

    I2cTxPacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> triggerRelay@txBuffer(BANK0[2]), Terminal@TermTxBuffer(BANK1[50]), ReadAddress(BANK1[1]), EepromBuffer(BANK4[15]), 
		 -> I2cDummyTx@DummyBuffer(BANK1[1]), 

    MdmHttp_GetMethod@GetData.RespBuffer	PTR unsigned char  size(2) Largest target is 0

    MdmHttp_GetMethod@GetData.Url	PTR unsigned char  size(2) Largest target is 0

    ApnLocal	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    HttpGetMethod@GetData.RespBuffer	PTR unsigned char  size(2) Largest target is 0

    HttpGetMethod@GetData.Url	PTR unsigned char  size(2) Largest target is 0

    HttpGetMethod@GetData	PTR struct _HttpGetDataType size(2) Largest target is 7
		 -> HttpGetDataLocal(BANK3[5]), 

    InitGprsNetwork@Apn	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2536_HttpGetDataType$RespBuffer	PTR unsigned char  size(2) Largest target is 0

    HttpGetDataLocal.RespBuffer	PTR unsigned char  size(2) Largest target is 0

    S2536_HttpGetDataType$Url	PTR unsigned char  size(2) Largest target is 0

    HttpGetDataLocal.Url	PTR unsigned char  size(2) Largest target is 0

    sp__GetLastInteractionNumber	PTR unsigned char  size(2) Largest target is 13
		 -> callerNumber(BANK3[13]), 

    sp__GetCallerNumber	PTR unsigned char  size(2) Largest target is 13
		 -> callerNumber(BANK3[13]), 

    Mdm_GetSmsData@MessageText	PTR unsigned char  size(2) Largest target is 20
		 -> smsText(BANK4[20]), 

    OsTmr_GetTimerStatus@Timer	PTR struct _SwTimerType size(2) Largest target is 11
		 -> Term_MainSm@TermDelay(BANK3[11]), Terminal@SwTimer(BANK4[11]), I2cSlv_QueryI2cData@TimeoutTimer(BANK3[11]), I2cSlv_QueryI2cData@QueryTimer(BANK4[11]), 
		 -> ConnWait(BANK3[11]), ConnTimeout(BANK2[11]), SendSmsSm@SwTimer(BANK3[11]), CheckModem@Timeout(BANK3[11]), 

    OsTmr_Wait@WaitTimer	PTR struct _SwTimerType size(2) Largest target is 11
		 -> Terminal@SwTimer(BANK4[11]), I2cSlv_QueryI2cData@QueryTimer(BANK4[11]), 

    OsTmr_StartTimer@Timer	PTR struct _SwTimerType size(2) Largest target is 11
		 -> Term_MainSm@TermDelay(BANK3[11]), Terminal@SwTimer(BANK4[11]), I2cSlv_QueryI2cData@TimeoutTimer(BANK3[11]), I2cSlv_QueryI2cData@QueryTimer(BANK4[11]), 
		 -> ConnWait(BANK3[11]), ConnTimeout(BANK2[11]), SendSmsSm@SwTimer(BANK3[11]), CheckModem@Timeout(BANK3[11]), 

    ReceiveEvt@Event	PTR struct EventStructure size(2) Largest target is 7
		 -> I2cRxPacket(BANK3[6]), I2cReadDataEvt(COMRAM[1]), I2cWriteDataEvt(BANK0[1]), GetMethod(BANK0[1]), 
		 -> InitNetwork(BANK0[1]), SmsTxtReady(BANK0[1]), GetSmsText(BANK0[1]), SmsEvent(BANK0[1]), 
		 -> ClipEvent(BANK0[1]), RingEvent(BANK0[1]), SendSmsEvent(BANK0[1]), NewStringMdmTerminal(COMRAM[1]), 
		 -> NewMdmEvtParserRequest(COMRAM[1]), NewStringReceived(COMRAM[1]), MdmResetRequest(COMRAM[1]), MdmOnOffPulseRequest(BANK0[1]), 
		 -> ActivateRiDetection(COMRAM[1]), 

    GenerateEvt@Event	PTR struct EventStructure size(2) Largest target is 7
		 -> AlarmEvent(BANK1[1]), I2cRxPacket(BANK3[6]), I2cReadDataEvt(COMRAM[1]), I2cWriteDataEvt(BANK0[1]), 
		 -> GetMethod(BANK0[1]), InitNetwork(BANK0[1]), MdmStsReady(BANK1[1]), SmsTxtReady(BANK0[1]), 
		 -> GetSmsText(BANK0[1]), SmsEvent(BANK0[1]), ClipEvent(BANK0[1]), RingEvent(BANK0[1]), 
		 -> SendSmsEvent(BANK0[1]), NewStringMdmTerminal(COMRAM[1]), NewMdmEvtParserRequest(COMRAM[1]), NewStringReceived(COMRAM[1]), 
		 -> MdmOnOffPulseRequest(BANK0[1]), CallClosedEvent(COMRAM[1]), IncomingCallEvent(COMRAM[1]), NewSmsEvent(COMRAM[1]), 

    S2049_SchedTblType$Task	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> MyApp_Task(), Term_MainTask(), Rtcm_MainTask(), Led_MainTask(), 
		 -> Wdg_MainTask(), UsbDevice_MainTask(), MdmHttp_MainTask(), Mdm_MainTask(), 
		 -> I2cSlv_MainTask(), Mdm_DrvMainFn(), 

    TaskTable.Task	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> MyApp_Task(), Term_MainTask(), Rtcm_MainTask(), Led_MainTask(), 
		 -> Wdg_MainTask(), UsbDevice_MainTask(), MdmHttp_MainTask(), Mdm_MainTask(), 
		 -> I2cSlv_MainTask(), Mdm_DrvMainFn(), 

    OsAlrm_SetOsAlarm@AlarmCallback	PTR FTN()void  size(2) Largest target is 1
		 -> I2cDummyTx(), 

    S2014_OsAlarmType$AlrmCbk	PTR FTN()void  size(2) Largest target is 1
		 -> I2cDummyTx(), 

    OsAlarms.AlrmCbk	PTR FTN()void  size(2) Largest target is 1
		 -> I2cDummyTx(), 

    Uart_WriteStringLen@StringToWrite	PTR unsigned char  size(2) Largest target is 200
		 -> GsmGprsTerminal@UartBuffer(BANK9[200]), SendSmsSm@UartMessage(BANK1[50]), 

    Uart_WriteString@StringToWrite	PTR unsigned char  size(2) Largest target is 200
		 -> HttpGetMethod@UartMessage(BANK1[200]), InitGprsNetwork@UartMessage(BANK1[50]), Mdm_MakePhoneCall@UartMessage(COMRAM[25]), Mdm_SetSmsFormat@UartMessage(BANK0[20]), 
		 -> Mdm_PinUnlock@UartMessage(COMRAM[13]), 

    Uart_WriteConstString@ConstStringToWrite	PTR const unsigned char  size(2) Largest target is 31
		 -> STR_31(CODE[12]), STR_30(CODE[19]), STR_29(CODE[14]), STR_20(CODE[14]), 
		 -> STR_19(CODE[14]), STR_18(CODE[13]), STR_17(CODE[13]), STR_16(CODE[17]), 
		 -> STR_14(CODE[21]), STR_13(CODE[14]), STR_12(CODE[13]), STR_11(CODE[14]), 
		 -> STR_10(CODE[14]), STR_8(CODE[31]), STR_7(CODE[5]), STR_6(CODE[5]), 
		 -> STR_4(CODE[12]), STR_3(CODE[7]), STR_2(CODE[14]), STR_1(CODE[5]), 

    Uart_InitUartModule@UartConfig	PTR struct _UartConfig size(2) Largest target is 21
		 -> UartConfig(BANK3[21]), 

    SetUartBaudRate@UartConfig	PTR struct _UartConfig size(2) Largest target is 21
		 -> UartConfig(BANK3[21]), 

    Tmr4IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Tmr_RegisterTmr2IsrCallback@IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Sch_SchmIntService(), 

    Tmr2IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Sch_SchmIntService(), Absolute function(), 

    Tmr_TmrBConfig@TmrBConfig	PTR struct _TmrBConfigType size(2) Largest target is 7
		 -> InitAuxTimer@TmrBConfig(COMRAM[7]), InitSchedTimer@TmrBConfig(BANK0[7]), 

    RtccIsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Rtcc_AlarmConfig@AlarmConfig	PTR struct _RtccAlarmConfigType size(2) Largest target is 4
		 -> AlCfg(BANK3[4]), 

    Rtcc_RtcConfig@RtcConfig	PTR struct _RtccConfigType size(2) Largest target is 4
		 -> RtcConfig(BANK3[4]), 

    ExtInt1IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    ExtInt0IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S566_I2cReadPacket$Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> readBuffer(BANK3[13]), memoryPreamble(BANK3[4]), Terminal@TermRxBuffer(BANK5[50]), 

    I2c_ReadData@ReadPacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> readBuffer(BANK3[13]), memoryPreamble(BANK3[4]), Terminal@TermRxBuffer(BANK5[50]), 

    I2c_ReadData@ReadPacket	PTR struct _I2cReadPacket size(2) Largest target is 7
		 -> I2cRxPacket(BANK3[6]), 

    S539_I2cWritePacket$Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> triggerRelay@txBuffer(BANK0[2]), Terminal@TermTxBuffer(BANK1[50]), ReadAddress(BANK1[1]), EepromBuffer(BANK4[15]), 
		 -> I2cDummyTx@DummyBuffer(BANK1[1]), 

    I2c_WriteData@WritePacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> triggerRelay@txBuffer(BANK0[2]), Terminal@TermTxBuffer(BANK1[50]), ReadAddress(BANK1[1]), EepromBuffer(BANK4[15]), 
		 -> I2cDummyTx@DummyBuffer(BANK1[1]), 

    I2c_WriteData@WritePacket	PTR struct _I2cWritePacket size(2) Largest target is 6
		 -> I2cTxPacket(BANK3[5]), 

    I2c_InitI2cModule@I2cConfig	PTR struct _I2cConfig size(2) Largest target is 10
		 -> I2cConfig(BANK3[10]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _LowPriorityIsr in COMRAM

    _Sch_SchmIntService->_OsAlrm_ProcessOsAlarms
    _I2cDummyTx->i1_I2cSlv_SendI2cMsg
    i1_I2cSlv_SendI2cMsg->i1_GenerateEvt

Critical Paths under _HighPriorityIsr in COMRAM

    _Uart_Uart1RxIsr->_Uart_MdmGsmGprsReadService
    _Uart_MdmGsmGprsReadService->i2_GenerateEvt

Critical Paths under _main in BANK0

    _SystemInit->_InitSchedTimer
    _InitSchedTimer->_Tmr_TmrBConfig
    _Tmr_TmrBConfig->_Tmr_TmrBPrSet
    _Tmr_TmrBPrSet->___lldiv
    _Wdg_MainTask->_Mcu_SetWdgSts
    _UsbDevice_MainTask->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBDeviceInit->_memset
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService
    _CDCTxService->_USBTransferOnePacket
    _Term_MainSm->_Terminal
    _Terminal->_OsTmr_Wait
    _xtoi->_isxdigit
    _isxdigit->_isdigit
    _strtol->___lmul
    _isalpha->_isupper
    _putUSBUSART->_strlen
    _itoa->_utoa
    _utoa->___lwdiv
    _getsUSBUSART->_USBTransferOnePacket
    _atoi->___wmul
    _Rtcm_MainTask->_Rtcm_GetRtccDate
    _Rtcm_SetRtccDate->_Rtcc_SetRtccValue
    _Rtcc_SetRtccValue->___awdiv
    _Rtcm_GetRtccDate->_Rtcc_GetRtccValue
    _Rtcc_RtcConfig->_RtccIrqInit
    _triggerCmdFsm->_triggerRelay
    _triggerRelay->_I2cSlv_SendI2cMsg
    _waitSetupCall->_secondsAppTimer
    _savePreamble->_Eeprom_Write
    _initGprsModem->_Mdm_SetSmsFormat
    _secondsAppTimer->___lwdiv
    _Mdm_SetSmsFormat->_Uart_WriteString
    _initEeprom->_Eeprom_Read
    _detectCmd->_parseCommand
    _parseCommand->_StringCompare
    _Mdm_RequestSmsData->_GenerateEvt
    _Mdm_IsSmsReceived->_ReceiveEvt
    _Mdm_IsRinging->_ReceiveEvt
    _Mdm_HangPhoneCall->_Uart_WriteConstString
    _Mdm_GetSmsData->_StringCopy
    _GetCallerNumber->_ClearBuffer
    _saveNumberInMemory->_Eeprom_Write
    _Eeprom_Write->_StringCopy
    _isNumberInMemory->_Eeprom_Read
    _isMasterNumber->_Eeprom_Read
    _findEmptySpot->_Eeprom_Read
    _Eeprom_Read->_I2cSlv_QueryI2cData
    _I2cSlv_QueryI2cData->_OsTmr_Wait
    _OsTmr_Wait->_OsTmr_GetTimerStatus
    _I2cSlv_ReceiveI2cMsg->_GenerateEvt
    _I2cSlv_I2cReadMsgSts->_ReceiveEvt
    _Eeprom_Reset->_I2cSlv_SendI2cMsg
    _I2cSlv_SendI2cMsg->_GenerateEvt
    _Mdm_MainTask->_ModemEvtParser
    _TurnOnModem->_GenerateEvt
    _SendSmsSm->_OsTmr_GetTimerStatus
    _Uart_WriteStringLen->_UartTxBufferStatus
    _ModemEvtParser->_StringCopy
    _GetSmsSm->_StringCopy
    _ConfigureModem->_Uart_InitUartModule
    _Uart_InitUartModule->_SetUartBaudRate
    _SetUartBaudRate->___lldiv
    _CheckModem->_OsTmr_GetTimerStatus
    _MdmCntSm->_ReceiveEvt
    _MdmHttp_MainTask->_HttpGetMethod
    _InitGprsNetwork->_OsTmr_GetTimerStatus
    _HttpGetMethod->_OsTmr_GetTimerStatus
    _Uart_WriteString->_UartTxBufferStatus
    _Uart_WriteConstString->_UartTxBufferStatus
    _StringCopy->_GetCallerNumber
    _OsTmr_StartTimer->_GetOsTickCounter
    _OsTmr_GetTimerStatus->_GetElapsedTime
    _GetElapsedTime->_GetOsTickCounter
    _Led_MainTask->_LedStateMachine
    _LedStateMachine->_LedPulseStateMachine
    _LedPulseStateMachine->___lwdiv
    _LedBlinkStateMachine->___lwdiv
    ___lwdiv->___wmul
    _I2cSlv_MainTask->_I2c_InitI2cModule
    _OsAlrm_SetOsAlarm->___wmul
    _I2c_InitI2cModule->_SetBaudRate
    _SetBaudRate->___lldiv
    ___lldiv->___lmul
    _I2cSendMsgSm->_I2c_ReadData
    _I2c_WriteData->_WriteByte
    _I2c_ReadData->_GenerateEvt

Critical Paths under _LowPriorityIsr in BANK0

    _Sch_SchmIntService->_OsAlrm_ProcessOsAlarms

Critical Paths under _HighPriorityIsr in BANK0

    None.

Critical Paths under _main in BANK1

    _Term_MainTask->_Term_MainSm
    _Term_MainSm->_Terminal
    _MyApp_Task->_delCmdFsm
    _initFsm->_initEeprom
    _delCmdFsm->_isMasterNumber
    _addCmdFsm->_isNumberInMemory
    _Mdm_MainTask->_SendSmsSm
    _MdmHttp_MainTask->_HttpGetMethod

Critical Paths under _LowPriorityIsr in BANK1

    None.

Critical Paths under _HighPriorityIsr in BANK1

    None.

Critical Paths under _main in BANK2

    _Term_MainSm->_Terminal

Critical Paths under _LowPriorityIsr in BANK2

    None.

Critical Paths under _HighPriorityIsr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _LowPriorityIsr in BANK3

    None.

Critical Paths under _HighPriorityIsr in BANK3

    None.

Critical Paths under _main in BANK4

    _Sch_MainScheduler->_ScheduleTasks

Critical Paths under _LowPriorityIsr in BANK4

    None.

Critical Paths under _HighPriorityIsr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _LowPriorityIsr in BANK5

    None.

Critical Paths under _HighPriorityIsr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _LowPriorityIsr in BANK6

    None.

Critical Paths under _HighPriorityIsr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _LowPriorityIsr in BANK7

    None.

Critical Paths under _HighPriorityIsr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _LowPriorityIsr in BANK8

    None.

Critical Paths under _HighPriorityIsr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _LowPriorityIsr in BANK9

    None.

Critical Paths under _HighPriorityIsr in BANK9

    None.

Critical Paths under _main in BANK10

    _Term_MainSm->_Terminal

Critical Paths under _LowPriorityIsr in BANK10

    None.

Critical Paths under _HighPriorityIsr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _LowPriorityIsr in BANK11

    None.

Critical Paths under _HighPriorityIsr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _LowPriorityIsr in BANK12

    None.

Critical Paths under _HighPriorityIsr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _LowPriorityIsr in BANK13

    None.

Critical Paths under _HighPriorityIsr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _LowPriorityIsr in BANK14

    None.

Critical Paths under _HighPriorityIsr in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0 1069121
                  _Sch_MainScheduler
                         _SystemInit
 ---------------------------------------------------------------------------------
 (1) _SystemInit                                           0     0      0    4631
                     _InitSchedTimer
              _Irq_InitIntController
                   _Mcu_ConfigExtInt
                 _Mcu_StartSystemPll
             _Pm_DsReleasePinControl
        _Tmr_RegisterTmr2IsrCallback
 ---------------------------------------------------------------------------------
 (2) _Tmr_RegisterTmr2IsrCallback                          2     0      2     111
                                             29 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _Pm_DsReleasePinControl                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Mcu_StartSystemPll                                   2     2      0      23
                                             29 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _Mcu_ConfigExtInt                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Irq_InitIntController                                3     1      2     244
                                             29 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _InitSchedTimer                                       7     7      0    4253
                                             68 BANK0      7     7      0
                     _Tmr_TmrBConfig
 ---------------------------------------------------------------------------------
 (3) _Tmr_TmrBConfig                                       4     2      2    4007
                                             64 BANK0      4     2      2
                           _TmrBInit
                       _Tmr_StartTmr
                     _Tmr_TmrBIrqSet
                      _Tmr_TmrBPrSet
 ---------------------------------------------------------------------------------
 (4) _Tmr_TmrBPrSet                                       10     6      4    2589
                                             54 BANK0     10     6      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) _Tmr_TmrBIrqSet                                       3     1      2     466
                                             29 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (4) _Tmr_StartTmr                                         1     1      0      22
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _TmrBInit                                             4     2      2     288
                                             29 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _Sch_MainScheduler                                    0     0      0 1064490
                    _InitializeTasks
                      _ScheduleTasks
 ---------------------------------------------------------------------------------
 (2) _ScheduleTasks                                        5     5      0  532338
                                              0 BANK4      5     5      0
                    _I2cSlv_MainTask *
                       _Led_MainTask *
                   _MdmHttp_MainTask *
                      _Mdm_DrvMainFn *
                       _Mdm_MainTask *
                         _MyApp_Task *
                      _Rtcm_MainTask *
                      _Term_MainTask *
                 _UsbDevice_MainTask *
                       _Wdg_MainTask *
 ---------------------------------------------------------------------------------
 (2) _InitializeTasks                                      3     3      0  532152
                                              0 BANK4      3     3      0
                    _I2cSlv_MainTask *
                       _Led_MainTask *
                   _MdmHttp_MainTask *
                      _Mdm_DrvMainFn *
                       _Mdm_MainTask *
                         _MyApp_Task *
                      _Rtcm_MainTask *
                      _Term_MainTask *
                 _UsbDevice_MainTask *
                       _Wdg_MainTask *
 ---------------------------------------------------------------------------------
 (3) _Wdg_MainTask                                         1     1      0      31
                       _Mcu_ClearWdg
                      _Mcu_SetWdgSts
 ---------------------------------------------------------------------------------
 (4) _Mcu_SetWdgSts                                        1     1      0      31
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Mcu_ClearWdg                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _UsbDevice_MainTask                                   1     1      0   53592
                       _CDCTxService
                      _USBDeviceInit
                     _USBDeviceTasks
 ---------------------------------------------------------------------------------
 (4) _USBDeviceTasks                                       1     1      0   49060
                                             56 BANK0      1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                      _USBDeviceInit
      _USBIncrement1msInternalTimers
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBWakeFromSuspend                                   0     0      0    6134
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBSuspend                                           0     0      0    6134
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBStallHandler                                      1     1      0       0
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _USBIncrement1msInternalTimers                        0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _USBDeviceInit                                        1     1      0    2300
                                             37 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPService                                     1     1      0   28290
                                             55 BANK0      1     1      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
                             _memcpy
 ---------------------------------------------------------------------------------
 (6) _memcpy                                              11     5      6     520
                                             29 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfSetupHandler                               0     0      0   27433
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (7) _USBCtrlEPServiceComplete                             0     0      0     136
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (8) _USBCtrlEPAllowDataStage                              0     0      0     136
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (7) _USBCheckStdRequest                                   0     0      0   21163
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (8) _USBStdSetCfgHandler                                  1     1      0    8273
                                             49 BANK0      1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                             _memset
 ---------------------------------------------------------------------------------
 (8) _USBStdGetStatusHandler                               3     3      0      68
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (8) _USBStdGetDscHandler                                  2     2      0       0
                                             29 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (8) _USBStdFeatureReqHandler                              6     6      0    6688
                                             49 BANK0      6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USER_USB_CALLBACK_EVENT_HANDLER                      8     2      6    6134
                                             41 BANK0      8     2      6
                          _CDCInitEP
                 _USBCheckCDCRequest
 ---------------------------------------------------------------------------------
 (6) _USBCheckCDCRequest                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _CDCInitEP                                            0     0      0    2983
                  _USBEnableEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (7) _USBEnableEndpoint                                    4     3      1     952
                                             37 BANK0      4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (8) _USBConfigureEndpoint                                 8     7      1     524
                                             29 BANK0      8     7      1
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfOutHandler                                 0     0      0     167
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (7) _USBCtrlTrfRxService                                  2     2      0     167
                                             29 BANK0      2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (8) _USBCtrlEPAllowStatusStage                            0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfInHandler                                  1     1      0     170
                                             30 BANK0      1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (9) _USBCtrlTrfTxService                                  1     1      0     136
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _CDCTxService                                         2     2      0    2232
                                             36 BANK0      2     2      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _Term_MainTask                                        1     1      0   59354
                        _Term_MainSm
 ---------------------------------------------------------------------------------
 (4) _Term_MainSm                                         24    24      0   59354
                                             50 BANK1     12    12      0
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                           _Terminal
                             _memset
                        _putUSBUSART
                            _sprintf
                             _strcat
                             _strcpy
                             _strlen
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _strlen                                               6     4      2     338
                                             29 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcat                                               6     2      4    1391
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) _sprintf                                             21    15      6     579
                                             29 BANK0     12     6      6
 ---------------------------------------------------------------------------------
 (6) _memset                                               8     2      6    2009
                                             29 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (5) _Terminal                                           455   455      0   42144
                                             66 BANK0      5     5      0
                                              0 BANK1     50    50      0
                                              0 BANK2    200   200      0
                                              0 BANK10   200   200      0
               _I2cSlv_I2cReadMsgSts
               _I2cSlv_ReceiveI2cMsg
                  _I2cSlv_SendI2cMsg
                         _OsTmr_Wait
                               _atoi
                       _getsUSBUSART
                               _itoa
                        _putUSBUSART
                             _strcpy
                             _strtol
                               _xtoi
 ---------------------------------------------------------------------------------
 (6) _xtoi                                                 8     6      2    1300
                                             35 BANK0      8     6      2
                            _isdigit
                            _isspace
                            _isupper
                           _isxdigit
                            _tolower
 ---------------------------------------------------------------------------------
 (7) _tolower                                              1     1      0      96
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _isxdigit                                             3     3      0     291
                                             32 BANK0      3     3      0
                            _isdigit
 ---------------------------------------------------------------------------------
 (6) _strtol                                              16    10      6    2703
                                             41 BANK0     16    10      6
                             ___lmul
                            _isalpha
                            _isdigit
                            _isspace
                            _toupper
 ---------------------------------------------------------------------------------
 (7) _toupper                                              1     1      0      96
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _isspace                                              3     3      0     130
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (7) _isalpha                                              3     3      0     229
                                             32 BANK0      3     3      0
                            _isupper
 ---------------------------------------------------------------------------------
 (7) _isupper                                              3     3      0      99
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               6     2      4     525
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) _putUSBUSART                                          3     0      3    2350
                                             35 BANK0      3     0      3
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (6) _itoa                                                 8     2      6    3910
                                             51 BANK0      8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _utoa                                                 9     3      6    3365
                                             42 BANK0      9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (6) ___lwmod                                              5     1      4     440
                                             29 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (6) _getsUSBUSART                                         4     1      3    2543
                                             36 BANK0      4     1      3
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (7) _USBTransferOnePacket                                 7     3      4    2031
                                             29 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (6) _atoi                                                 7     5      2    9683
                                             35 BANK0      7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (8) _isdigit                                              3     3      0      99
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _Rtcm_MainTask                                        1     1      0    9096
                   _Rtcc_AlarmConfig
                       _Rtcc_LockRtc
                     _Rtcc_RtcConfig
                  _Rtcc_SetRtcStatus
                     _Rtcc_UnlockRtc
                   _Rtcm_GetRtccDate
                   _Rtcm_SetRtccDate
 ---------------------------------------------------------------------------------
 (4) _Rtcm_SetRtccDate                                     8     0      8    7818
                                             41 BANK0      8     0      8
                       _Rtcc_LockRtc
                  _Rtcc_SetRtccValue
                     _Rtcc_UnlockRtc
 ---------------------------------------------------------------------------------
 (5) _Rtcc_UnlockRtc                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _Rtcc_SetRtccValue                                    4     3      1    7479
                                             37 BANK0      4     3      1
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4    3137
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4    3149
                                             29 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (5) _Rtcc_LockRtc                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _Rtcm_GetRtccDate                                    17     9      8     729
                                             33 BANK0     17     9      8
                  _Rtcc_GetRtccValue
 ---------------------------------------------------------------------------------
 (5) _Rtcc_GetRtccValue                                    4     4      0     473
                                             29 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (4) _Rtcc_SetRtcStatus                                    1     1      0      31
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Rtcc_RtcConfig                                       3     1      2     290
                                             30 BANK0      3     1      2
                        _RtccIrqInit
 ---------------------------------------------------------------------------------
 (5) _RtccIrqInit                                          1     1      0      31
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Rtcc_AlarmConfig                                     3     1      2     228
                                             29 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (3) _MyApp_Task                                           1     1      0  266368
                       _Eeprom_Reset
                _Led_SetLedBlinkTime
                          _addCmdFsm
                          _delCmdFsm
                          _detectCmd
                            _initFsm
                      _triggerCmdFsm
 ---------------------------------------------------------------------------------
 (4) _triggerCmdFsm                                        4     2      2    4378
                                             41 BANK0      4     2      2
                       _triggerRelay
 ---------------------------------------------------------------------------------
 (5) _triggerRelay                                         4     4      0    4141
                                             37 BANK0      4     4      0
                  _I2cSlv_SendI2cMsg
 ---------------------------------------------------------------------------------
 (4) _initFsm                                              1     1      0   84592
                                              3 BANK1      1     1      0
                    _GetCallerNumber
                   _Led_SetLedStatus
                         _initEeprom
                      _initGprsModem
                 _saveNumberInMemory
                       _savePreamble
                      _waitSetupCall
 ---------------------------------------------------------------------------------
 (5) _waitSetupCall                                        1     1      0   17638
                                             51 BANK0      1     1      0
                   _Led_SetLedStatus
                       _getSetupCall
                    _secondsAppTimer
 ---------------------------------------------------------------------------------
 (6) _getSetupCall                                         1     1      0    5527
                                             35 BANK0      1     1      0
                  _Mdm_HangPhoneCall
                      _Mdm_IsRinging
 ---------------------------------------------------------------------------------
 (5) _savePreamble                                         0     0      0    9862
                       _Eeprom_Write
                       _initPreamble
 ---------------------------------------------------------------------------------
 (6) _initPreamble                                         2     0      2       0
                                             29 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) _initGprsModem                                        1     1      0   15578
                                             57 BANK0      1     1      0
                   _Mdm_SetSmsFormat
              _Uart_WriteConstString
                    _secondsAppTimer
 ---------------------------------------------------------------------------------
 (6) _secondsAppTimer                                      9     6      3   11118
                                             42 BANK0      9     6      3
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) _Mdm_SetSmsFormat                                    22    22      0    1672
                                             35 BANK0     22    22      0
                   _Uart_WriteString
 ---------------------------------------------------------------------------------
 (5) _initEeprom                                           3     3      0   24954
                                              0 BANK1      3     3      0
                        _Eeprom_Read
 ---------------------------------------------------------------------------------
 (4) _detectCmd                                            1     1      0   35708
                                             53 BANK0      1     1      0
                    _GetCallerNumber
           _GetLastInteractionNumber
                     _Mdm_GetSmsData
                  _Mdm_HangPhoneCall
                      _Mdm_IsRinging
                  _Mdm_IsSmsReceived
                 _Mdm_RequestSmsData
                         _StringCopy
              _Uart_WriteConstString
                       _parseCommand
 ---------------------------------------------------------------------------------
 (5) _parseCommand                                        13    13      0    3986
                                             40 BANK0     13    13      0
                      _StringCompare
                      _isNumberValid
 ---------------------------------------------------------------------------------
 (5) _Mdm_RequestSmsData                                   0     0      0    2123
                        _GenerateEvt
 ---------------------------------------------------------------------------------
 (5) _Mdm_IsSmsReceived                                    1     1      0    2739
                                             33 BANK0      1     1      0
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (7) _Mdm_IsRinging                                        1     1      0    2739
                                             33 BANK0      1     1      0
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (7) _Mdm_HangPhoneCall                                    0     0      0    2751
              _Uart_WriteConstString
 ---------------------------------------------------------------------------------
 (5) _Mdm_GetSmsData                                       3     1      2    8061
                                             47 BANK0      3     1      2
                         _ReceiveEvt
                         _StringCopy
 ---------------------------------------------------------------------------------
 (5) _GetLastInteractionNumber                             2     0      2       0
                                             29 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) _GetCallerNumber                                      2     0      2    5331
                                             35 BANK0      2     0      2
                        _ClearBuffer
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (4) _delCmdFsm                                           19    15      4   39720
                                              3 BANK1     19    15      4
                     _isMasterNumber
                 _saveNumberInMemory
 ---------------------------------------------------------------------------------
 (4) _addCmdFsm                                            8     4      4   94859
                                              5 BANK1      8     4      4
                      _findEmptySpot
                     _isMasterNumber
                   _isNumberInMemory
                 _saveNumberInMemory
 ---------------------------------------------------------------------------------
 (5) _saveNumberInMemory                                   3     1      2   10236
                                             54 BANK0      3     1      2
                       _Eeprom_Write
                    _GetCallerNumber (ARG)
 ---------------------------------------------------------------------------------
 (6) _Eeprom_Write                                         7     4      3    9862
                                             47 BANK0      7     4      3
                  _I2cSlv_SendI2cMsg
                         _StringCopy
                       _initPreamble (ARG)
 ---------------------------------------------------------------------------------
 (5) _isNumberInMemory                                     5     1      4   29038
                                              0 BANK1      5     1      4
                        _Eeprom_Read
                      _StringCompare
                      _isNumberValid
 ---------------------------------------------------------------------------------
 (5) _isMasterNumber                                       3     1      2   29013
                                              0 BANK1      3     1      2
                        _Eeprom_Read
                      _StringCompare
                      _isNumberValid
 ---------------------------------------------------------------------------------
 (5) _findEmptySpot                                        3     1      2   25863
                                              0 BANK1      3     1      2
                        _Eeprom_Read
                      _isNumberValid
 ---------------------------------------------------------------------------------
 (6) _isNumberValid                                        5     3      2     786
                                             29 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (6) _Eeprom_Read                                          7     4      3   24874
                                             73 BANK0      7     4      3
                _I2cSlv_QueryI2cData
 ---------------------------------------------------------------------------------
 (7) _I2cSlv_QueryI2cData                                  7     0      7   23807
                                             66 BANK0      7     0      7
               _I2cSlv_I2cReadMsgSts
               _I2cSlv_ReceiveI2cMsg
                  _I2cSlv_SendI2cMsg
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _OsTmr_Wait
 ---------------------------------------------------------------------------------
 (6) _OsTmr_Wait                                           7     1      6    7061
                                             59 BANK0      7     1      6
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
 ---------------------------------------------------------------------------------
 (6) _I2cSlv_ReceiveI2cMsg                                 5     1      4    2856
                                             32 BANK0      5     1      4
                        _GenerateEvt
 ---------------------------------------------------------------------------------
 (6) _I2cSlv_I2cReadMsgSts                                 1     1      0    2739
                                             33 BANK0      1     1      0
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (4) _Led_SetLedBlinkTime                                  5     1      4     425
                                             29 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (4) _Eeprom_Reset                                         1     1      0    6686
                                             37 BANK0      1     1      0
                        _ClearBuffer
                  _I2cSlv_SendI2cMsg
 ---------------------------------------------------------------------------------
 (6) _I2cSlv_SendI2cMsg                                    5     1      4    4023
                                             32 BANK0      5     1      4
                        _GenerateEvt
 ---------------------------------------------------------------------------------
 (3) _Mdm_MainTask                                         1     1      0   73780
                         _CheckModem
                     _ConfigureModem
                           _GetSmsSm
                     _ModemEvtParser
                          _SendSmsSm
                        _TurnOnModem
                      _UartSetConfig
                _Uart_InitUartModule
 ---------------------------------------------------------------------------------
 (4) _UartSetConfig                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _TurnOnModem                                          0     0      0    2123
                        _GenerateEvt
 ---------------------------------------------------------------------------------
 (4) _SendSmsSm                                           52    52      0   16197
                                             59 BANK0      2     2      0
                                              0 BANK1     50    50      0
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _ReceiveEvt
                         _StringCopy
                _Uart_WriteStringLen
 ---------------------------------------------------------------------------------
 (5) _Uart_WriteStringLen                                  5     2      3    1540
                                             32 BANK0      5     2      3
                 _UartTxBufferStatus
                      _UartWriteByte
 ---------------------------------------------------------------------------------
 (4) _ModemEvtParser                                      26    26      0   13450
                                             47 BANK0     26    26      0
                        _GenerateEvt
                         _ReceiveEvt
                      _StringCompare
                         _StringCopy
                 _Uart_ClearRxBuffer
 ---------------------------------------------------------------------------------
 (5) _Uart_ClearRxBuffer                                   2     2      0     102
                                             29 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (6) _StringCompare                                       11     5      6    3040
                                             29 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (4) _GetSmsSm                                             0     0      0   15392
                        _ClearBuffer
                        _GenerateEvt
                         _ReceiveEvt
                         _StringCopy
              _Uart_WriteConstString
 ---------------------------------------------------------------------------------
 (4) _ConfigureModem                                       0     0      0    8747
                        _GenerateEvt
                   _UartSetConfigLow
                _Uart_InitUartModule
              _Uart_WriteConstString
 ---------------------------------------------------------------------------------
 (4) _Uart_InitUartModule                                  5     3      2    3873
                                             61 BANK0      5     3      2
                    _SetUartBaudRate
 ---------------------------------------------------------------------------------
 (5) _SetUartBaudRate                                      7     5      2    2735
                                             54 BANK0      7     5      2
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (5) ___lmul                                              12     4      8     844
                                             29 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (5) _UartSetConfigLow                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _CheckModem                                           0     0      0   13998
                        _GenerateEvt
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _ReceiveEvt
              _Uart_WriteConstString
 ---------------------------------------------------------------------------------
 (3) _Mdm_DrvMainFn                                        1     1      0    2702
                           _MdmCntSm
 ---------------------------------------------------------------------------------
 (4) _MdmCntSm                                             0     0      0    2702
                 _InitModemInterface
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (5) _InitModemInterface                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _MdmHttp_MainTask                                     1     1      0   43139
                      _HttpGetMethod
                    _InitGprsNetwork
 ---------------------------------------------------------------------------------
 (4) _InitGprsNetwork                                     56    53      3   21606
                                             59 BANK0      5     2      3
                                              0 BANK1     51    51      0
                        _ClearBuffer
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _ReceiveEvt
                         _StringCopy
              _Uart_WriteConstString
                   _Uart_WriteString
 ---------------------------------------------------------------------------------
 (4) _HttpGetMethod                                      207   205      2   21533
                                             59 BANK0      6     4      2
                                              0 BANK1    201   201      0
                        _ClearBuffer
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _ReceiveEvt
                         _StringCopy
              _Uart_WriteConstString
                   _Uart_WriteString
 ---------------------------------------------------------------------------------
 (7) _Uart_WriteString                                     3     1      2    1191
                                             32 BANK0      3     1      2
                 _UartTxBufferStatus
                      _UartWriteByte
 ---------------------------------------------------------------------------------
 (8) _Uart_WriteConstString                                3     1      2    2751
                                             32 BANK0      3     1      2
                 _UartTxBufferStatus
                      _UartWriteByte
 ---------------------------------------------------------------------------------
 (9) _UartWriteByte                                        2     1      1     436
                                             29 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (9) _UartTxBufferStatus                                   3     3      0     108
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (7) _StringCopy                                          10     4      6    5187
                                             37 BANK0     10     4      6
                    _GetCallerNumber (ARG)
           _GetLastInteractionNumber (ARG)
 ---------------------------------------------------------------------------------
 (7) _OsTmr_StartTimer                                     6     0      6    4315
                                             33 BANK0      6     0      6
                   _GetOsTickCounter
 ---------------------------------------------------------------------------------
 (7) _OsTmr_GetTimerStatus                                 6     4      2    2107
                                             53 BANK0      6     4      2
                     _GetElapsedTime
 ---------------------------------------------------------------------------------
 (8) _GetElapsedTime                                      20    16      4     538
                                             33 BANK0     20    16      4
                   _GetOsTickCounter
 ---------------------------------------------------------------------------------
 (8) _GetOsTickCounter                                     4     0      4       0
                                             29 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (6) _ClearBuffer                                          6     2      4    2629
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) _Led_MainTask                                         2     2      0    7139
                                             58 BANK0      1     1      0
                    _LedStateMachine
 ---------------------------------------------------------------------------------
 (4) _LedStateMachine                                     11     3      8    7139
                                             47 BANK0     11     3      8
               _LedBlinkStateMachine
               _LedPulseStateMachine
                   _Led_SetLedStatus
 ---------------------------------------------------------------------------------
 (5) _LedPulseStateMachine                                 5     2      3    2773
                                             42 BANK0      5     2      3
                   _Led_SetLedStatus
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (6) _Led_SetLedStatus                                     2     1      1     956
                                             29 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (5) _LedBlinkStateMachine                                 4     2      2    1837
                                             42 BANK0      4     2      2
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (6) ___lwdiv                                              7     3      4    1237
                                             35 BANK0      7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) _I2cSlv_MainTask                                      1     1      0   16818
                       _I2cSendMsgSm
                       _I2cSetConfig
                  _I2c_InitI2cModule
                  _OsAlrm_SetOsAlarm
 ---------------------------------------------------------------------------------
 (4) _OsAlrm_SetOsAlarm                                    8     0      8    9436
                                             35 BANK0      8     0      8
                             ___wmul
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4    8938
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) _I2c_InitI2cModule                                    4     2      2    1695
                                             66 BANK0      4     2      2
                        _SetBaudRate
 ---------------------------------------------------------------------------------
 (5) _SetBaudRate                                         12     4      8    1467
                                             54 BANK0     12     4      8
                            ___lldiv
 ---------------------------------------------------------------------------------
 (5) ___lldiv                                             13     5      8    1197
                                             41 BANK0     13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (4) _I2cSetConfig                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2cSendMsgSm                                         0     0      0    5687
                       _I2c_ReadData
                      _I2c_WriteData
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (7) _ReceiveEvt                                           4     2      2    2702
                                             29 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (5) _I2c_WriteData                                        4     2      2     414
                                             30 BANK0      4     2      2
                     _CheckAckStatus
                      _CheckTxStatus
                     _StartCondition
                      _StopCondition
                          _WriteByte
 ---------------------------------------------------------------------------------
 (5) _I2c_ReadData                                         4     2      2    2571
                                             32 BANK0      4     2      2
                     _CheckAckStatus
                      _CheckTxStatus
                     _EnableReceiver
                        _GenerateEvt
                           _ReadByte
                       _SetAckStatus
                     _StartCondition
                      _StopCondition
                          _WriteByte
 ---------------------------------------------------------------------------------
 (6) _WriteByte                                            1     1      0      31
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _StopCondition                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _StartCondition                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _SetAckStatus                                         1     1      0      31
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _ReadByte                                             1     1      0      34
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _GenerateEvt                                          3     1      2    2123
                                             29 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (6) _EnableReceiver                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _CheckTxStatus                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _CheckAckStatus                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _LowPriorityIsr                                     21    21      0    1029
                                              8 BANK0     21    21      0
                        _Tmr_Tmr2Isr
 ---------------------------------------------------------------------------------
 (14) _Tmr_Tmr2Isr                                         0     0      0    1029
                   Absolute function *
                 _Sch_SchmIntService *
 ---------------------------------------------------------------------------------
 (15) _Sch_SchmIntService                                  0     0      0    1029
             _OsAlrm_ProcessOsAlarms
                   _UpdateOsCounters
                      _UpdateSchFlag
 ---------------------------------------------------------------------------------
 (16) _UpdateSchFlag                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _UpdateOsCounters                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _OsAlrm_ProcessOsAlarms                             10    10      0    1029
                                             32 COMRAM     2     2      0
                                              0 BANK0      8     8      0
                         _I2cDummyTx *
                _OsAlrm_ClearOsAlarm
                           i1___wmul
 ---------------------------------------------------------------------------------
 (17) i1___wmul                                            6     2      4     469
                                             24 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (17) _OsAlrm_ClearOsAlarm                                 1     1      0      66
                                             24 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (17) _I2cDummyTx                                          0     0      0     209
                i1_I2cSlv_SendI2cMsg
 ---------------------------------------------------------------------------------
 (18) i1_I2cSlv_SendI2cMsg                                 5     1      4     209
                                             27 COMRAM     5     1      4
                      i1_GenerateEvt
 ---------------------------------------------------------------------------------
 (19) i1_GenerateEvt                                       3     1      2      56
                                             24 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (20) _HighPriorityIsr                                    18    18      0     332
                                              6 COMRAM    18    18      0
                        _Mcu_Int0Isr
                        _Mcu_Int1Isr
                        _Rtcc_RtcIsr
                    _Uart_Uart1RxIsr
 ---------------------------------------------------------------------------------
 (21) _Uart_Uart1RxIsr                                     0     0      0     332
         _Uart_MdmGsmGprsReadService
 ---------------------------------------------------------------------------------
 (22) _Uart_MdmGsmGprsReadService                          4     3      1     332
                                              3 COMRAM     3     2      1
                      i2_GenerateEvt
 ---------------------------------------------------------------------------------
 (23) i2_GenerateEvt                                       3     1      2     108
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (21) _Rtcc_RtcIsr                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (21) _Mcu_Int1Isr                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (21) _Mcu_Int0Isr                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 23
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Sch_MainScheduler
     _InitializeTasks
       _I2cSlv_MainTask *
         _I2cSendMsgSm
           _I2c_ReadData
             _CheckAckStatus
             _CheckTxStatus
             _EnableReceiver
             _GenerateEvt
             _ReadByte
             _SetAckStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _I2c_WriteData
             _CheckAckStatus
             _CheckTxStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _ReceiveEvt
         _I2cSetConfig
         _I2c_InitI2cModule
           _SetBaudRate
             ___lldiv
               ___lmul (ARG)
         _OsAlrm_SetOsAlarm
           ___wmul
       _Led_MainTask *
         _LedStateMachine
           _LedBlinkStateMachine
             ___lwdiv
               ___wmul (ARG)
           _LedPulseStateMachine
             _Led_SetLedStatus
             ___lwdiv
               ___wmul (ARG)
           _Led_SetLedStatus
       _MdmHttp_MainTask *
         _HttpGetMethod
           _ClearBuffer
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _Uart_WriteString
             _UartTxBufferStatus
             _UartWriteByte
         _InitGprsNetwork
           _ClearBuffer
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _Uart_WriteString
             _UartTxBufferStatus
             _UartWriteByte
       _Mdm_DrvMainFn *
         _MdmCntSm
           _InitModemInterface
           _ReceiveEvt
       _Mdm_MainTask *
         _CheckModem
           _GenerateEvt
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _ConfigureModem
           _GenerateEvt
           _UartSetConfigLow
           _Uart_InitUartModule
             _SetUartBaudRate
               ___lldiv
                 ___lmul (ARG)
               ___lmul
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _GetSmsSm
           _ClearBuffer
           _GenerateEvt
           _ReceiveEvt
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _ModemEvtParser
           _GenerateEvt
           _ReceiveEvt
           _StringCompare
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_ClearRxBuffer
         _SendSmsSm
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_WriteStringLen
             _UartTxBufferStatus
             _UartWriteByte
         _TurnOnModem
           _GenerateEvt
         _UartSetConfig
         _Uart_InitUartModule
           _SetUartBaudRate
             ___lldiv
               ___lmul (ARG)
             ___lmul
       _MyApp_Task *
         _Eeprom_Reset
           _ClearBuffer
           _I2cSlv_SendI2cMsg
             _GenerateEvt
         _Led_SetLedBlinkTime
         _addCmdFsm
           _findEmptySpot
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
             _isNumberValid
           _isMasterNumber
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
             _StringCompare
             _isNumberValid
           _isNumberInMemory
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
             _StringCompare
             _isNumberValid
           _saveNumberInMemory
             _Eeprom_Write
               _I2cSlv_SendI2cMsg
                 _GenerateEvt
               _StringCopy
                 _GetCallerNumber (ARG)
                   _ClearBuffer
                   _ReceiveEvt
                 _GetLastInteractionNumber (ARG)
               _initPreamble (ARG)
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
         _delCmdFsm
           _isMasterNumber
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
             _StringCompare
             _isNumberValid
           _saveNumberInMemory
             _Eeprom_Write
               _I2cSlv_SendI2cMsg
                 _GenerateEvt
               _StringCopy
                 _GetCallerNumber (ARG)
                   _ClearBuffer
                   _ReceiveEvt
                 _GetLastInteractionNumber (ARG)
               _initPreamble (ARG)
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
         _detectCmd
           _GetCallerNumber
             _ClearBuffer
             _ReceiveEvt
           _GetLastInteractionNumber
           _Mdm_GetSmsData
             _ReceiveEvt
             _StringCopy
               _GetCallerNumber (ARG)
                 _ClearBuffer
                 _ReceiveEvt
               _GetLastInteractionNumber (ARG)
           _Mdm_HangPhoneCall
             _Uart_WriteConstString
               _UartTxBufferStatus
               _UartWriteByte
           _Mdm_IsRinging
             _ReceiveEvt
           _Mdm_IsSmsReceived
             _ReceiveEvt
           _Mdm_RequestSmsData
             _GenerateEvt
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _parseCommand
             _StringCompare
             _isNumberValid
         _initFsm
           _GetCallerNumber
             _ClearBuffer
             _ReceiveEvt
           _Led_SetLedStatus
           _initEeprom
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
           _initGprsModem
             _Mdm_SetSmsFormat
               _Uart_WriteString
                 _UartTxBufferStatus
                 _UartWriteByte
             _Uart_WriteConstString
               _UartTxBufferStatus
               _UartWriteByte
             _secondsAppTimer
               ___lwdiv
                 ___wmul (ARG)
               ___wmul
           _saveNumberInMemory
             _Eeprom_Write
               _I2cSlv_SendI2cMsg
                 _GenerateEvt
               _StringCopy
                 _GetCallerNumber (ARG)
                   _ClearBuffer
                   _ReceiveEvt
                 _GetLastInteractionNumber (ARG)
               _initPreamble (ARG)
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
           _savePreamble
             _Eeprom_Write
               _I2cSlv_SendI2cMsg
                 _GenerateEvt
               _StringCopy
                 _GetCallerNumber (ARG)
                   _ClearBuffer
                   _ReceiveEvt
                 _GetLastInteractionNumber (ARG)
               _initPreamble (ARG)
             _initPreamble
           _waitSetupCall
             _Led_SetLedStatus
             _getSetupCall
               _Mdm_HangPhoneCall
                 _Uart_WriteConstString
                   _UartTxBufferStatus
                   _UartWriteByte
               _Mdm_IsRinging
                 _ReceiveEvt
             _secondsAppTimer
               ___lwdiv
                 ___wmul (ARG)
               ___wmul
         _triggerCmdFsm
           _triggerRelay
             _I2cSlv_SendI2cMsg
               _GenerateEvt
       _Rtcm_MainTask *
         _Rtcc_AlarmConfig
         _Rtcc_LockRtc
         _Rtcc_RtcConfig
           _RtccIrqInit
         _Rtcc_SetRtcStatus
         _Rtcc_UnlockRtc
         _Rtcm_GetRtccDate
           _Rtcc_GetRtccValue
         _Rtcm_SetRtccDate
           _Rtcc_LockRtc
           _Rtcc_SetRtccValue
             ___awdiv
             ___awmod
           _Rtcc_UnlockRtc
       _Term_MainTask *
         _Term_MainSm
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _Terminal
             _I2cSlv_I2cReadMsgSts
               _ReceiveEvt
             _I2cSlv_ReceiveI2cMsg
               _GenerateEvt
             _I2cSlv_SendI2cMsg
               _GenerateEvt
             _OsTmr_Wait
               _OsTmr_GetTimerStatus
                 _GetElapsedTime
                   _GetOsTickCounter
               _OsTmr_StartTimer
                 _GetOsTickCounter
             _atoi
               ___wmul
               _isdigit
             _getsUSBUSART
               _USBTransferOnePacket
             _itoa
               _utoa
                 ___lwdiv
                   ___wmul (ARG)
                 ___lwmod
             _putUSBUSART
               _strlen (ARG)
             _strcpy
             _strtol
               ___lmul
               _isalpha
                 _isupper
               _isdigit
               _isspace
               _toupper
             _xtoi
               _isdigit
               _isspace
               _isupper
               _isxdigit
                 _isdigit
               _tolower
           _memset
           _putUSBUSART
             _strlen (ARG)
           _sprintf
           _strcat
           _strcpy
           _strlen
           _utoa
             ___lwdiv
               ___wmul (ARG)
             ___lwmod
       _UsbDevice_MainTask *
         _CDCTxService
           _USBTransferOnePacket
         _USBDeviceInit
           _memset
         _USBDeviceTasks
           _USBCtrlEPAllowStatusStage
           _USBCtrlEPService
             _USBCtrlTrfInHandler
               _USBCtrlTrfTxService
             _USBCtrlTrfOutHandler
               _USBCtrlTrfRxService
                 _USBCtrlEPAllowStatusStage
             _USBCtrlTrfSetupHandler
               _USBCheckStdRequest
                 _USBStdFeatureReqHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                 _USBStdGetDscHandler
                 _USBStdGetStatusHandler
                 _USBStdSetCfgHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                   _memset
                 _USER_USB_CALLBACK_EVENT_HANDLER
                   _CDCInitEP
                     _USBEnableEndpoint
                       _USBConfigureEndpoint
                     _USBTransferOnePacket
                   _USBCheckCDCRequest
               _USBCtrlEPServiceComplete
                 _USBCtrlEPAllowDataStage
                   _USBCtrlTrfTxService
                 _USBCtrlEPAllowStatusStage
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   _USBTransferOnePacket
                 _USBCheckCDCRequest
             _memcpy
           _USBDeviceInit
             _memset
           _USBIncrement1msInternalTimers
           _USBStallHandler
           _USBSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USBWakeFromSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USER_USB_CALLBACK_EVENT_HANDLER
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBTransferOnePacket
             _USBCheckCDCRequest
       _Wdg_MainTask *
         _Mcu_ClearWdg
         _Mcu_SetWdgSts
     _ScheduleTasks
       _I2cSlv_MainTask *
         _I2cSendMsgSm
           _I2c_ReadData
             _CheckAckStatus
             _CheckTxStatus
             _EnableReceiver
             _GenerateEvt
             _ReadByte
             _SetAckStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _I2c_WriteData
             _CheckAckStatus
             _CheckTxStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _ReceiveEvt
         _I2cSetConfig
         _I2c_InitI2cModule
           _SetBaudRate
             ___lldiv
               ___lmul (ARG)
         _OsAlrm_SetOsAlarm
           ___wmul
       _Led_MainTask *
         _LedStateMachine
           _LedBlinkStateMachine
             ___lwdiv
               ___wmul (ARG)
           _LedPulseStateMachine
             _Led_SetLedStatus
             ___lwdiv
               ___wmul (ARG)
           _Led_SetLedStatus
       _MdmHttp_MainTask *
         _HttpGetMethod
           _ClearBuffer
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _Uart_WriteString
             _UartTxBufferStatus
             _UartWriteByte
         _InitGprsNetwork
           _ClearBuffer
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _Uart_WriteString
             _UartTxBufferStatus
             _UartWriteByte
       _Mdm_DrvMainFn *
         _MdmCntSm
           _InitModemInterface
           _ReceiveEvt
       _Mdm_MainTask *
         _CheckModem
           _GenerateEvt
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _ConfigureModem
           _GenerateEvt
           _UartSetConfigLow
           _Uart_InitUartModule
             _SetUartBaudRate
               ___lldiv
                 ___lmul (ARG)
               ___lmul
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _GetSmsSm
           _ClearBuffer
           _GenerateEvt
           _ReceiveEvt
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _ModemEvtParser
           _GenerateEvt
           _ReceiveEvt
           _StringCompare
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_ClearRxBuffer
         _SendSmsSm
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_WriteStringLen
             _UartTxBufferStatus
             _UartWriteByte
         _TurnOnModem
           _GenerateEvt
         _UartSetConfig
         _Uart_InitUartModule
           _SetUartBaudRate
             ___lldiv
               ___lmul (ARG)
             ___lmul
       _MyApp_Task *
         _Eeprom_Reset
           _ClearBuffer
           _I2cSlv_SendI2cMsg
             _GenerateEvt
         _Led_SetLedBlinkTime
         _addCmdFsm
           _findEmptySpot
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
             _isNumberValid
           _isMasterNumber
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
             _StringCompare
             _isNumberValid
           _isNumberInMemory
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
             _StringCompare
             _isNumberValid
           _saveNumberInMemory
             _Eeprom_Write
               _I2cSlv_SendI2cMsg
                 _GenerateEvt
               _StringCopy
                 _GetCallerNumber (ARG)
                   _ClearBuffer
                   _ReceiveEvt
                 _GetLastInteractionNumber (ARG)
               _initPreamble (ARG)
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
         _delCmdFsm
           _isMasterNumber
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
             _StringCompare
             _isNumberValid
           _saveNumberInMemory
             _Eeprom_Write
               _I2cSlv_SendI2cMsg
                 _GenerateEvt
               _StringCopy
                 _GetCallerNumber (ARG)
                   _ClearBuffer
                   _ReceiveEvt
                 _GetLastInteractionNumber (ARG)
               _initPreamble (ARG)
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
         _detectCmd
           _GetCallerNumber
             _ClearBuffer
             _ReceiveEvt
           _GetLastInteractionNumber
           _Mdm_GetSmsData
             _ReceiveEvt
             _StringCopy
               _GetCallerNumber (ARG)
                 _ClearBuffer
                 _ReceiveEvt
               _GetLastInteractionNumber (ARG)
           _Mdm_HangPhoneCall
             _Uart_WriteConstString
               _UartTxBufferStatus
               _UartWriteByte
           _Mdm_IsRinging
             _ReceiveEvt
           _Mdm_IsSmsReceived
             _ReceiveEvt
           _Mdm_RequestSmsData
             _GenerateEvt
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _parseCommand
             _StringCompare
             _isNumberValid
         _initFsm
           _GetCallerNumber
             _ClearBuffer
             _ReceiveEvt
           _Led_SetLedStatus
           _initEeprom
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
           _initGprsModem
             _Mdm_SetSmsFormat
               _Uart_WriteString
                 _UartTxBufferStatus
                 _UartWriteByte
             _Uart_WriteConstString
               _UartTxBufferStatus
               _UartWriteByte
             _secondsAppTimer
               ___lwdiv
                 ___wmul (ARG)
               ___wmul
           _saveNumberInMemory
             _Eeprom_Write
               _I2cSlv_SendI2cMsg
                 _GenerateEvt
               _StringCopy
                 _GetCallerNumber (ARG)
                   _ClearBuffer
                   _ReceiveEvt
                 _GetLastInteractionNumber (ARG)
               _initPreamble (ARG)
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
           _savePreamble
             _Eeprom_Write
               _I2cSlv_SendI2cMsg
                 _GenerateEvt
               _StringCopy
                 _GetCallerNumber (ARG)
                   _ClearBuffer
                   _ReceiveEvt
                 _GetLastInteractionNumber (ARG)
               _initPreamble (ARG)
             _initPreamble
           _waitSetupCall
             _Led_SetLedStatus
             _getSetupCall
               _Mdm_HangPhoneCall
                 _Uart_WriteConstString
                   _UartTxBufferStatus
                   _UartWriteByte
               _Mdm_IsRinging
                 _ReceiveEvt
             _secondsAppTimer
               ___lwdiv
                 ___wmul (ARG)
               ___wmul
         _triggerCmdFsm
           _triggerRelay
             _I2cSlv_SendI2cMsg
               _GenerateEvt
       _Rtcm_MainTask *
         _Rtcc_AlarmConfig
         _Rtcc_LockRtc
         _Rtcc_RtcConfig
           _RtccIrqInit
         _Rtcc_SetRtcStatus
         _Rtcc_UnlockRtc
         _Rtcm_GetRtccDate
           _Rtcc_GetRtccValue
         _Rtcm_SetRtccDate
           _Rtcc_LockRtc
           _Rtcc_SetRtccValue
             ___awdiv
             ___awmod
           _Rtcc_UnlockRtc
       _Term_MainTask *
         _Term_MainSm
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _Terminal
             _I2cSlv_I2cReadMsgSts
               _ReceiveEvt
             _I2cSlv_ReceiveI2cMsg
               _GenerateEvt
             _I2cSlv_SendI2cMsg
               _GenerateEvt
             _OsTmr_Wait
               _OsTmr_GetTimerStatus
                 _GetElapsedTime
                   _GetOsTickCounter
               _OsTmr_StartTimer
                 _GetOsTickCounter
             _atoi
               ___wmul
               _isdigit
             _getsUSBUSART
               _USBTransferOnePacket
             _itoa
               _utoa
                 ___lwdiv
                   ___wmul (ARG)
                 ___lwmod
             _putUSBUSART
               _strlen (ARG)
             _strcpy
             _strtol
               ___lmul
               _isalpha
                 _isupper
               _isdigit
               _isspace
               _toupper
             _xtoi
               _isdigit
               _isspace
               _isupper
               _isxdigit
                 _isdigit
               _tolower
           _memset
           _putUSBUSART
             _strlen (ARG)
           _sprintf
           _strcat
           _strcpy
           _strlen
           _utoa
             ___lwdiv
               ___wmul (ARG)
             ___lwmod
       _UsbDevice_MainTask *
         _CDCTxService
           _USBTransferOnePacket
         _USBDeviceInit
           _memset
         _USBDeviceTasks
           _USBCtrlEPAllowStatusStage
           _USBCtrlEPService
             _USBCtrlTrfInHandler
               _USBCtrlTrfTxService
             _USBCtrlTrfOutHandler
               _USBCtrlTrfRxService
                 _USBCtrlEPAllowStatusStage
             _USBCtrlTrfSetupHandler
               _USBCheckStdRequest
                 _USBStdFeatureReqHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                 _USBStdGetDscHandler
                 _USBStdGetStatusHandler
                 _USBStdSetCfgHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                   _memset
                 _USER_USB_CALLBACK_EVENT_HANDLER
                   _CDCInitEP
                     _USBEnableEndpoint
                       _USBConfigureEndpoint
                     _USBTransferOnePacket
                   _USBCheckCDCRequest
               _USBCtrlEPServiceComplete
                 _USBCtrlEPAllowDataStage
                   _USBCtrlTrfTxService
                 _USBCtrlEPAllowStatusStage
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   _USBTransferOnePacket
                 _USBCheckCDCRequest
             _memcpy
           _USBDeviceInit
             _memset
           _USBIncrement1msInternalTimers
           _USBStallHandler
           _USBSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USBWakeFromSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USER_USB_CALLBACK_EVENT_HANDLER
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBTransferOnePacket
             _USBCheckCDCRequest
       _Wdg_MainTask *
         _Mcu_ClearWdg
         _Mcu_SetWdgSts
   _SystemInit
     _InitSchedTimer
       _Tmr_TmrBConfig
         _TmrBInit
         _Tmr_StartTmr
         _Tmr_TmrBIrqSet
         _Tmr_TmrBPrSet
           ___lldiv
             ___lmul (ARG)
           ___lmul
     _Irq_InitIntController
     _Mcu_ConfigExtInt
     _Mcu_StartSystemPll
     _Pm_DsReleasePinControl
     _Tmr_RegisterTmr2IsrCallback

 _LowPriorityIsr (ROOT)
   _Tmr_Tmr2Isr
     Absolute function(Fake) *
     _Sch_SchmIntService *
       _OsAlrm_ProcessOsAlarms
         _I2cDummyTx *
           i1_I2cSlv_SendI2cMsg
             i1_GenerateEvt
         _OsAlrm_ClearOsAlarm *
         i1___wmul *
       _UpdateOsCounters
       _UpdateSchFlag

 _HighPriorityIsr (ROOT)
   _Mcu_Int0Isr
   _Mcu_Int1Isr
   _Rtcc_RtcIsr
   _Uart_Uart1RxIsr
     _Uart_MdmGsmGprsReadService
       i2_GenerateEvt

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMh            A80      0       0      35        0.0%
BIGRAMl            3FF      0     320      36       78.2%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100     C8      C8      26       78.1%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0      C8      24       78.1%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0      C8      22       78.1%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0      F6      20       96.1%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0      DC      18       85.9%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0      F4      16       95.3%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0     100      12      100.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100     C8     100      10      100.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     C9     100       7      100.0%
BITBANK14           C0      0       0      33        0.0%
BANK14              C0      0       0      34        0.0%
BITBANK4            C0      0       0      13        0.0%
BANK4               C0      5      BC      14       97.9%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     50      83       5       81.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     22      41       1       69.1%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     99E       8        0.0%
DATA                 0      0     CBE       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sat Apr  2 13:09:19 2022

                  __size_of_StringCompare 0052                  __end_of_UartSetConfigLow 5A2A  
                              _USB_SD_Ptr FC1C                            ??_getSetupCall 0083  
               __size_of_Mdm_SetSmsFormat 0050                           ?_isMasterNumber 0100  
                    __size_of_TurnOnModem 004C                           ??_UpdateSchFlag 0019  
                      _Mcu_StartSystemPll 687A               Mdm_SetSmsFormat@UartMessage 0084  
                   ?_LedPulseStateMachine 008A                              ___awdiv@sign 0082  
                  I2c_ReadData@ReadPacket 0080                                        bsr 000FE0  
                  ??_LedBlinkStateMachine 008C                             _USBDeviceInit 258A  
                     ___wmul@multiplicand 007F                          i1___wmul@product 001D  
                      __size_of_CDCInitEP 006C                        i2GenerateEvt@Event 0001  
                InitSchedTimer@TmrBConfig 00A4                              __CFG_CP0$OFF 000000  
              OsAlrm_SetOsAlarm@OsAlarmId 0083      USER_USB_CALLBACK_EVENT_HANDLER@event 0089  
    USER_USB_CALLBACK_EVENT_HANDLER@pdata 008B                    I2c_ReadData@ReadStatus 0031  
                                     l202 21FA                                       l203 2202  
                                     l205 224A                                       l206 2270  
                                     l208 2278                                       l160 1FDE  
                                     l209 2298                                       l161 1EB4  
                                     l162 201C                                       l170 1F7C  
                                     l171 1F92                                       l163 1EC0  
                                     l315 475A                                       l323 4726  
                                     l164 1F00                                       l316 46D0  
                                     l420 4D9C                                       l500 4BB6  
                                     l173 1F96                                       l325 4740  
                                     l421 4DBC                                       l237 6886  
                                     l174 1F9E                                       l166 1F0E  
                                     l318 46DA                                       l422 4DC8  
             __end_of_USBStdGetDscHandler 2D02                                       l510 4B88  
                                     l502 4B48                                       l175 1FAA  
                                     l167 1F36                                       l319 4700  
                                     l423 4DD4                                       l511 4B78  
                                     l503 4B38                                       l192 22A2  
                                     l176 1FC0                                       l416 4DE8  
                                     l424 4DE0                                       l512 4B9C  
                                     l504 4B5E                                       l520 5F34  
                                     l193 2182                                       l169 1F48  
                                     l417 4D8E                                       l441 17EC  
                                     l513 4B7C                                       l505 4B3C  
                                     l521 5F00                                       l194 22DA  
                                     l418 4E16                                       l442 15F4  
                                     l514 4B82                                       l506 4B42  
                                     l530 31D2                                       l195 218E  
                                     l179 1FCC                                       l419 4D96  
                                     l523 5F1A                                       l531 3238  
                                     l196 21CE                                       l700 6152  
                                     l444 163C                                       l532 31FE  
                                     l445 1684                                       l541 6824  
                                     l198 21DC                                       l446 16CC  
                                     l199 21F0                                       l631 2A18  
                                     l447 1714                                       l448 175C  
                                     l528 323E                                       l633 2A90  
                                     l625 29A4                                       l449 17A4  
                                     l529 322A                                       l538 6828  
                                     l546 3E70                                       l651 5E84  
                                     l707 6276                                       l627 29C8  
                                     l715 61EA                                       l539 6820  
                                     l547 3E8C                                       l660 5EA8  
                                     l652 5E7E                                       l716 61C0  
                                     l709 6290                                       l629 29F0  
                                     l718 61D8                                       l639 686C  
                                     l832 65E8                                       l844 3F44  
                                     l668 0C44                                       _BDT 000400  
                                     l790 68A2                                       l855 52E8  
                                     l775 2F44                                       l864 5040  
                                     l856 528E                                       l857 5302  
                                     l698 6136                                       l858 52BE  
                                     l867 5052                                       l982 215A  
                                     l983 2022                                       l985 2048  
                                     l987 2064                                       l988 209A  
                                     l989 210E                                       l998 2134  
                 secondsAppTimer@isCyclic 008C                                       _PR2 000FCB  
                                     _PR4 000F77                                       _UIE 000F36  
                                     _UIR 000F62                  i2GenerateEvt@EventStatus 0003  
                 __end_of_HighPriorityIsr 457C                            ??_Mdm_MainTask 00A9  
                     ?_Mcu_StartSystemPll 0001                                _USBSuspend 6470  
                            ___awmod@sign 0082                      USBStdSetCfgHandler@i 0091  
                                     prod 000FF3                                       tosl 000FFD  
                                     wreg 000FE8              I2cSlv_ReceiveI2cMsg@RxBuffer 0080  
                          _USBDeviceTasks 1BAA                              __CFG_IESO$ON 000000  
                          _USBDeviceState 00CE               Rtcc_AlarmConfig@AlarmConfig 007D  
            __end_of_I2cSlv_ReceiveI2cMsg 61B4                             ??_Mcu_Int0Isr 0001  
                           ??_Mcu_Int1Isr 0001                     ??_USBCtrlTrfRxService 007D  
                          ??_getsUSBUSART 0087                  USBEnableEndpoint@options 0085  
                              _CheckModem 2020             findEmptySpot@positionInMemory 0100  
           ??_Tmr_RegisterTmr2IsrCallback 007F                                      l1010 5F48  
         InitGprsNetwork@GprsNetInitState 01E8                                      l1100 1B1A  
                                    l1101 1B66                                      l1013 5F62  
                                    l1110 5D88                               RiSm@Counter 02E0  
                                    l1031 3886                                      l1111 5D9C  
                                    l1032 38C0                                      l2000 5818  
                                    l1033 38E6                                      l1009 5F7E  
                                    l1121 5DF4                                      l1027 3920  
                                    l1035 3906                                      l1107 5DAE  
                                    l2100 2812                                      l1220 0DD0  
                                    l1028 3874                                      l1052 1E86  
                                    l1060 1E58                                      l1108 5D72  
                                    l2101 2706                                      l1053 1DA0  
                                    l2102 278A                                      l1222 10B0  
                                    l1230 0FB8                                      l1070 2BB6  
                                    l2006 580C                                      l2111 32FE  
                                    l1231 0FBC                                      l1223 0DE8  
                                    l1071 2AAE                                      l1055 1EA0  
                                    l2112 3246                                      l1232 1000  
                                    l1224 0E22                                      l1056 1DD2  
                                    l1152 6724                                      l1136 6700  
                                    l2008 5812                                      l2113 331A  
                                    l2121 47F0                                      l1241 106E  
                                    l1225 0E96                                      l1129 5670  
                                    l2114 3264                                      l2122 4782  
                                    l1226 0E5E                                      l1074 2ACA  
                                    l1058 1E22                                      l2123 4818  
                                    l1219 1078                                      l1075 2AE2  
                                    l1091 1B80                                      l2116 32D4  
                                    l2124 4792                                      l1252 0A54  
                                    l1260 073E                                      l1236 1010  
                                    l1228 0F3E                                      l1092 19FE  
                                    l1412 6268                                      l1156 63FA  
                                    l3100 51B8                                      l1404 5B1A  
                                    l2220 50DE                                      l2125 47A4  
                                    l1261 06F6                                      l1253 05F4  
                                    l1237 1054                                      l1229 0F78  
                                    l2045 5AA2                                      l2037 5BC4  
                                    l1405 5ADA                                      l2221 5064  
                                    l2142 657C                                      l2126 47BE  
                                    l1078 2B54                                      l2046 5AD4  
                                    l1422 6810                                      l3110 532A  
                                    l2134 3C70                                      l2143 656A  
                                    l1255 0AB6                                      l1263 07F2  
                                    l1095 1A1A                                      l2151 5C10  
                                    l2039 5BD0                                      l3103 51E0  
                                    l1407 5B14                                      l2135 3BB8  
                                    l2223 50CA                                      l2128 47CC  
                                    l1280 09C4                                      l1272 092A  
                                    l1264 082C                                      l1256 060C  
                                    l1096 1AD0                                      l2152 5BDA  
                                    l1440 39FE                                      l3104 51EA  
                                    l3112 5340                                      l2145 6570  
                                    l2129 47DA                                      l1281 0A32  
                                    l1273 096E                                      l1265 0856  
                                    l1257 0646                                      l1097 1AF4  
                                    l1417 61AE                                      l1441 3948  
                                    l3105 51F8                                      l3113 5338  
                                    l2137 3BC6                                      l2146 6576  
                                    l1266 0890                                      l1258 0680  
                                    l2250 5CE6                                      l2154 5BEC  
                                    l1442 3A14                                      l2410 01E2  
                                    l1267 08CA                                      l1259 06BA  
                                    l2251 5D0C                                      l2155 5BFE  
                                    l1443 3966                                      l1291 600E  
                                    l1268 090E                                      l3116 5358  
                                    l2412 01AE                                      l1700 36EC  
                                    l1604 25D4                                      l1620 1BF2  
                                    l1285 0A42                                      l1277 097E  
                                    l1445 39C4                                      l3117 5362  
                                    l3109 531E                                      l2405 05D2  
                                    l2413 019C                                      l1621 1C02  
                                    l1382 4110                                      l3302 5266  
                                    l2262 642E                                      l1286 0A4A  
                                    l1278 09AA                                      l1446 39D8  
                                    l3118 5370                                      l2406 00E2  
                                    l1702 3750                                      l1606 25FC  
                                    l1630 1C9E                                      l1622 1C0A  
                                    l2510 675E                                      l1294 5FDC  
                                    l1391 40DA                                      l1383 4072  
                                    l3303 5274                                      l2263 641A  
                                    l2423 0392                                      l1703 3716  
                                    l1631 1CAA                                      l1623 1C20  
                                    l1615 1BD6                                      l2511 6750  
                                    l1384 4094                                      l2256 57FC  
                                    l1448 39F6                                      l3080 37E4  
                                    l2424 0326                                      l1608 2638  
                                    l1640 1D26                                      l1624 1C2C  
                                    l1616 1BCC                                      l2600 3364  
                                    l1393 40F6                                      l2257 57BC  
                                    l2249 5D10                                      l2441 041E  
                                    l2425 02B4                                      l2409 0152  
                                    l1713 2D5E                                      l1633 1CBE  
                                    l1617 1BCA                                      l2513 6758  
                                    l1394 4102                                      l1386 40B6  
                                    l2098 27FC                                      l1650 423A  
                                    l2450 0524                                      l2426 0250  
                                    l2418 01D0                                      l1706 3792  
                                    l1714 2D38                                      l1626 1C54  
                                    l2602 3386                                      l2099 26DE  
                                    l3083 3834                                      l2451 0570  
                                    l2443 045E                                      l2435 0402  
                                    l1707 3758                                      l1643 6078  
                                    l1811 35F8                                      l2700 463C  
                                    l3084 37F6                                      l1652 4296  
                                    l2444 0578                                      l2436 03D2  
                                    l2428 0304                                      l1716 2DD6  
                                    l1644 6088                                      l1740 2CDA  
                                    l1812 35FE                                      l1636 1CE4  
                                    l1628 1C68                                      l2604 33A8  
              USBConfigureEndpoint@handle 0083                                      l1389 40BE  
                                    l3077 37A2                                      l2429 02C6  
                                    l1717 2DBC                                      l1733 2CEA  
                                    l1725 3460                                      l1813 3604  
                                    l1629 1C74                                      l2702 4658  
                                    l3086 3868                                      l3078 379C  
                                    l3270 45C0                                      l2446 04B4  
                                    l3510 58F0                                      l2470 10FA  
                                    l1902 44AC                                      l1830 143E  
                                    l1742 2CE2                                      l1734 2BE6  
                                    l1750 440A                                      l1814 3618  
                                    l1638 1D08                                      l2606 33C4  
                                    l3351 5C48                                      l2703 4680  
                                    l3271 4602                                      l2447 0478  
                                    l3511 58E6                                      l1903 4446  
                                    l1831 1440                                      l1751 438C  
                                    l1727 34D4                                      l1815 361E  
                                    l3352 5C40                                      l3096 5192  
                                    l1648 4210                                      l3264 60CE  
                                    l1840 153E                                      l1832 145C  
                                    l1736 2BFA                                      l1752 4392  
                                    l1808 367E                                      l1760 6060  
                                    l3097 51A2                                      l3361 6104  
                                    l2465 131E                                      l2481 128E  
                                    l1905 445E                                      l1841 15BA  
                                    l1825 137E                                      l1737 2C82  
                                    l1753 43B2                                      l1817 3624  
                                    l1809 35EE                                      l1673 49B0  
                                    l1761 605E                                      l2570 2FEC  
                                    l2706 4684                                      l3258 67F0  
                                    l3362 60FC                                      l3522 6204  
                                    l2466 10B8                                      l1906 446C  
                                    l1834 14EA                                      l1826 1384  
                                    l1746 43F4                                      l1818 3642  
                                    l2490 692E                                      l3355 5C68  
                                    l2571 2FE8                                      l2731 4880  
                                    l2707 4690                                      l3099 51C0  
                                    l3507 58D6                                      l3523 61FE  
                                    l2483 12F8                                      l2475 110E  
                                    l1667 3CCA                                      l1907 448A  
                                    l1739 2C8A                                      l1747 437A  
                                    l1819 365E                                      l1675 49CA  
                                    l3356 5C72                                      l2820 3AE4  
                                    l2660 4E56                                      l1924 4C58  
                                    l3268 4584                                      l3516 64B6  
                                    l3540 1874                                      l2900 3AF4  
                                    l3508 58D0                                      l2468 10DE  
                                    l1908 44A2                                      l1844 1570  
                                    l1836 14B2                                      l1828 13F6  
                                    l1684 30D6                                      l2821 3A4A  
                                    l2733 48AC                                      l2653 4E8E  
                                    l2661 4E6A                                      l3365 611C  
                                    l3517 64AC                                      l3381 6520  
                                    l2901 3B0E                                      l2485 1318  
                                    l2477 112E                                      l1837 14D0  
                                    l1685 307E                                      l2493 6928  
                                    l2750 57A0                                      l2574 3028  
                                    l2670 4F52                                      l2734 48BC  
                                    l2662 4E82                                      l2654 4E24  
                                    l3366 6126                                      l3614 655A  
                                    l3542 18C8                                      l3382 650E  
                                    l2902 3B70                                      l1846 15C6  
                                    l1774 4D76                                      l2815 3ACA  
                                    l1927 4C06                                      l3551 1902  
                                    l3631 631C                                      l2911 3B90  
                                    l2479 114E                                      l1679 4B00  
                                    l1839 1532                                      l3375 5FC6  
                                    l1775 4D70                                      l2591 3400  
                                    l2760 435A                                      l2816 3A2C  
                                    l2584 4A5E                                      l2672 4F98  
                                    l1928 4C32                                      l3624 67AC  
                                    l1960 2892                                      l1952 283A  
                                    l3376 5FA4                                      l1768 6354  
                                    l2592 332E                                      l2761 42D6  
                                    l2833 3AC0                                      l2817 3A46  
                                    l2585 4A94                                      l2681 6854  
                                    l1929 4C0C                                      l2905 3B14  
                                    l1793 4166                                      l1785 5686  
                                    l1689 3100                                      l1769 6352  
                                    l3298 5232                                      l2762 42F6  
                                    l2578 3052                                      l2674 4FCE  
                                    l3562 69A0                                      l3554 1914  
                                    l3538 185C                                      l1970 2946  
                                    l1962 28EA                                      l1954 2848  
                                    l1698 36E2                                      l1794 416C  
                                    l3299 5226                                      l2747 5768  
                                    l2827 3A72                                      l2675 4FA0  
                                    l2659 4EAA                                      l3619 6668  
                                    l3555 1980                                      l3635 6988  
                                    l2907 3B5C                                      l1971 294A  
                                    l1963 28B2                                      l1795 41E8  
                                    l1787 56D4                                      l2595 33D6  
                                    l2828 3AAA                                      l2852 4F2A  
                                    l2676 4FAC                                      l3548 18D8  
                                    l2908 3B3E                                      l1956 287C  
                                    l1796 41AE                                      l2596 3348  
                                    l2925 598C                                      l2749 579A  
                                    l2765 4368                                      l2861 4F20  
                                    l2853 4ED4                                      l2669 4FBA  
                                    l2685 5E4C                                      l3557 19A6  
                                    l3549 18E8                                      l2926 59A0  
                                    l2766 4306                                      l2758 42CA  
                                    l3558 19E0                                      l3582 3596  
                                    l1966 292C                                      l1798 41CE  
                                    l2791 4CEE                                      l2687 5E58  
                                    l3583 354E                                      l1967 28F4  
                                    l1959 288E                                      l2599 335A  
                                    l2792 4CAE                                      l2784 4C74  
                                    l2776 54C4                                      l2768 4352  
                                    l2856 4F3E                __size_of_Mdm_IsSmsReceived 0024  
                                    l2696 46A8                                      l3584 3566  
                                    l3576 350E                                      l1992 66D0  
                              _Led1OutSts 01F9                                      l2793 4CCC  
                                    l2857 4EEC                                      l2697 462E  
                                    l3585 3576                                      l3577 3508  
                                    l1993 66C0                                      l2786 4CE0  
                                    l2858 4EF6                                      l2882 55EC  
                                    l2890 55DE                                      l2787 4C80  
                                    l2699 46C8                                      l2883 55AE  
                                    l3579 3536                                      l1995 66C6  
                                    l2788 4CA0                                      l2876 63B6  
                                    l2884 55BA                                      l3588 35D4  
                                    l2887 5608                                      l2888 55CC  
                                    l2889 55D6                                      STR_1 FFE6  
                                    STR_2 FF75                                      STR_3 FFDF  
                                    STR_4 FFC2                                      STR_5 FFCE  
                                    STR_6 FFF0                                      STR_7 FFEB  
                                    STR_8 FE89                                      STR_9 FEBD  
                              _Led2OutSts 01F7                                _Led3OutSts 01F5  
                   ??_USBCtrlTrfTxService 007D                                      _UCFG 000F39  
                                    u9155 5F0A                                      u9156 5F0C  
                                    _UEP0 000F26                                      u9165 5F16  
                                    _UEP1 000F27                                      u9166 5F18  
                                    u9175 5F24                                      u9176 5F26  
                                    u9185 5F30                                      u9186 5F32  
                                    _UEIE 000F37                  __size_of_Uart_Uart1RxIsr 0010  
                                    _UEIR 000F63                                      _UCON 000F65  
                              _AlarmEvent 01F4                            ?_StopCondition 0001  
                            _triggerRelay 639A                           ??_Mdm_DrvMainFn 0081  
                     _OsTmr_OsTickCounter 0314                             __CFG_FCMEN$ON 000000  
                      _InitModemInterface 6B1E                  secondsAppTimer@isExpired 0090  
                         _CDCDataInHandle 01D1              I2c_ReadData@TentativeCounter 0032  
             Led_SetLedBlinkTime@OnTimeMs 007D              findEmptySpot@currentPosition 00E1  
  USBStdFeatureReqHandler@current_ep_data 0094                                      _pDst 02D4  
                    _NewStringMdmTerminal 003A                                      _atoi 379A  
                                    _main 6ACA                           ??_Mdm_IsRinging 0081  
                                    _itoa 60A8                          ?_SetUartBaudRate 0096  
                 __end_of_GetCallerNumber 6406                                      fsr0h 000FEA  
                                    fsr1h 000FE2                                      indf0 000FEF  
                                    fsr2h 000FDA                                      fsr0l 000FE9  
                                    indf1 000FE7                               _BaudRateGen 030C  
                                    indf2 000FDF                                      fsr1l 000FE1  
                                    fsr2l 000FD9                                      btemp 0042  
                                    _utoa 457C                                      _xtoi 34F8  
                           __CFG_T1DIG$ON 000000                    _Pm_DsReleasePinControl 6B26  
             __size_of_Sch_SchmIntService 000E                         _Rtcc_GetRtccValue 4D88  
             I2cSlv_SendI2cMsg@DataLenght 0083                      ??_Mcu_StartSystemPll 007D  
             __end_of_Uart_WriteStringLen 61F4                                      prodh 000FF4  
                                    prodl 000FF3                                      start 00CC  
                     __end_of_Eeprom_Read 5BD4   Uart_MdmGsmGprsReadService@LocalRxBuffer 0AC8  
                       ??_secondsAppTimer 008D                       __end_of_GenerateEvt 69BC  
                           _isNumberValid 5742                            ?_Mcu_SetWdgSts 0001  
                          ??_Mcu_ClearWdg 007D          isNumberInMemory@positionInMemory 0102  
              __end_of_USBCheckStdRequest 36C2                           _Rtcm_SystemDate 0459  
                  ??_USBCtrlTrfOutHandler 007F                  __end_of_GetOsTickCounter 6A5E  
       __size_of_GetLastInteractionNumber 000C                        ?_Rtcc_GetRtccValue 0001  
                     ?_InitModemInterface 0001                        StringCompare@Index 0086  
               ?_GetLastInteractionNumber 007D                            _GetElapsedTime 3EE0  
           I2cSlv_ReceiveI2cMsg@SlaveAddr 0082                              ___param_bank 000000  
               ??_USBStdFeatureReqHandler 0091              isNumberInMemory@currentState 00C5  
                     StringCopy@SourceStr 0085               __end_of_OsAlrm_ClearOsAlarm 5A82  
                Eeprom_Write@SlaveAddress 0094                     addCmdFsm@currentState 01D5  
                                   EECON2 000FA7                InitGprsNetwork@UartMessage 0100  
                ??_USBStdGetStatusHandler 007D                waitSetupCall@isCallArrived 0093  
                     __size_of_I2cDummyTx 001C                          ??_Mdm_GetSmsData 0091  
                          ?_USBDeviceInit 0001                             __CFG_PLLDIV$2 000000  
                        _Uart_WriteString 6270                       ??_Rtcc_GetRtccValue 007D  
                         __end_of_Welcome FDAB                         ?_UpdateOsCounters 0001  
                 Uart_ClearRxBuffer@Index 007D                                _GetSmsText 00DB  
                                   l12224 6886                                     l14010 3830  
                                   l13164 3458                                     l14148 5760  
                                   l14186 48BC                                     l14442 4DA2  
                                   l15336 323E                                     l12954 650E  
                                   l16340 4F1C                                     l13828 5FA4  
                                   l14628 25CC                                     l15462 1D98  
                                   l14568 644E                                     l12992 36EC  
                                   l14656 2630                                     l15820 09A4  
                                   l15484 1E52                                     l15654 0FB0  
                                   l16900 5862                                     l16580 2E30  
                                   l16568 53F6                                     l15972 1CB6  
                                   l16898 5832                                     ?_atoi 0083  
                                   ?_main 0001                                     ?_itoa 0093  
                         __end_of___awdiv 5202                                     STR_10 FF4B  
                                   STR_11 FF59                                     STR_12 FF9D  
                                   STR_20 FF3D                                     STR_13 FF67  
                                   STR_21 FE5F                                     STR_30 FEFA  
                                   STR_14 FEA8                                     STR_31 FFAA  
                                   STR_15 FEE6                                     STR_23 FED2  
                                   STR_24 FFF5                                     STR_32 FFD8  
                                   STR_16 FF1E                                     STR_25 FFF5  
                                   STR_17 FF83                                     STR_26 FE86  
                                   STR_18 FF90                                     STR_27 FF0D  
                                   STR_28 FFB6                           __end_of___awmod 537A  
                                   STR_29 FF2F                             _triggerCmdFsm 55A2  
       __size_of_USBCtrlEPServiceComplete 00FE                           __end_of___lldiv 5286  
                                   ?_utoa 008A                                     u12210 629E  
                                   u12140 5C4C                           ___awdiv@divisor 007F  
                                   u12230 57F4                                     u11510 5E7A  
                                   u13120 1864                                     u12170 6108  
                                   u12090 1554                    __end_of_USBDeviceTasks 1D30  
                                   u12237 57EA                                     u10805 6642  
                                   u13310 57A4                                     u13150 189E  
                                   u11630 373E                                     u10806 6644  
                                   ?_xtoi 0083                                     u12520 6664  
                                   u11800 348C                                     u15010 1EA6  
                                   u13170 18AE                                     u12610 6300  
                                   u11650 3780                                     u12540 654A  
                                   u11637 3734                                     u11670 6160  
                                   u12710 29EC                                     u12630 630C  
                                   u12480 5236                                     u11840 2C4C  
                                   u11657 3776                                     u10785 662A  
                                   u13450 5344                                     u14410 3BA8  
                                   u11850 2C7C                                     u10786 662C  
                                   u10795 6636                                     u16100 3ABA  
                                   u12900 4BE2                                     u10796 6638  
                                   u13605 69E2                                     u16110 4EBE  
                                   u14430 2FE4                                     u13606 69E4  
                                   u13390 51C4                                     u14350 5918  
                                   u11870 2CCE                                     u12655 6A22  
                                   u11847 2C42                                     u12656 6A24  
                                   u13800 2694                                     u13625 0AF4  
                                   u11857 2C72                                     u12770 5D1C  
                                   u14290 04BE                 ?_USBCtrlEPServiceComplete 0001  
                                   u13635 0B14                                     u13485 5ECE  
                                   u13645 0B9E                                     u14357 590E  
                                   u11877 2CC4                                     u16311 50BC  
                                   u14480 4E34                                     u13665 0C78  
                                   u16321 50D4                                     u16170 55B6  
                                   u13770 25F0                                     u13675 0C98  
                                   u14725 53DE                                     u13685 0D22  
                                   u14735 6A36                                     u14760 4738  
                                   u14840 20C2                                     u15800 291C  
                                   u14736 6A38                                     u14921 1D4A  
                                   u14770 4752                                     u15810 2934  
                                   u14931 1D5C                                     u14860 20D6  
                                   u14941 1D6E                                     u16438 2EF8  
                                   u15807 2912                                     u16439 2F26  
                                   u15690 1D2C                                     u14795 69CC  
                                   u14796 69D0                                     u15780 28DA  
                                   u16398 5428                                     u15871 5738  
                                   u16399 5456                           __end_of___lwdiv 5C7C  
                                   u15787 28D0                           __end_of___lwmod 6130  
               TurnOnModem@TurnOnMdmState 01F2                        ??_UpdateOsCounters 0019  
                                   i1l742 244C                                     i1l747 2588  
                                   i2l680 3E08                                     i2l681 3D58  
                                   i2l690 3DA2                                     i2l682 3D66  
                                   i2l686 3D88                                     i2l688 3DFA  
                                   i2l689 3DC2                                     _UADDR 000F38  
                         ___awdiv@counter 0081                                     _AlCfg 03B8  
            Led_SetLedBlinkTime@OffTimeMs 007F                   I2cSendMsgSm@I2cComState 01E4  
                                   _USTAT 000F64                   __end_of_LedStateMachine 481E  
      __size_of_USBCtrlEPAllowStatusStage 00CC                       ___lmul@multiplicand 0081  
                    ??_InitModemInterface 007D                                     _RxLen 00C2  
         __end_of_USBCtrlEPAllowDataStage 49FE                             _StringCompare 5CCE  
                                   _sd000 FE5B                                     _sd001 FE14  
                                   _sd002 FDEE            ?_USBIncrement1msInternalTimers 0001  
             Rtcc_GetRtccValue@RtccPtrVal 007E                      __end_of_Led_MainTask 3C82  
                             _ApnLenLocal 01EC                    ??_OsTmr_GetTimerStatus 0097  
            LedPulseStateMachine@LedPulse 008A                           __end_of_initFsm 46CE  
                         __end_of_isalpha 6564                           __end_of_isdigit 67F8  
               saveNumberInMemory@address 0098                                     atoi@a 0088  
                                   atoi@s 0083                    Eeprom_Write@DataLength 0091  
                             _ClearBuffer 6406                           __end_of_isspace 6670  
             I2cSlv_QueryI2cData@RxBuffer 00A5                I2c_WriteData@I2cWriteState 0038  
               Rtcc_GetRtccValue@RegValue 0080                   __size_of_Rtcc_RtcConfig 00A0  
                         __end_of_isupper 67B4                                     pclath 000FFA  
                                   tablat 000FF5                          __end_ofi1___wmul 66BE  
                    triggerRelay@txBuffer 0087                 __end_of_Rtcc_GetRtccValue 4E1C  
             I2cSlv_QueryI2cData@TxBuffer 00A2                                     plusw0 000FEB  
                                   plusw1 000FE3                                     plusw2 000FDB  
                       __end_of_CDCInitEP 5536                                     utoa@c 0092  
                           ??_SetBaudRate 009E                                     utoa@v 0090  
                                   status 000FD8                           _I2cSlv_MainTask 5AD8  
               Rtcc_GetRtccValue@RetValue 007F                       i1___wmul@multiplier 0019  
                                   wtemp6 0043                           __end_of_sprintf 3BB6  
                         __end_of_tolower 698C                       __end_of_Mcu_Int0Isr 6B4E  
                     __end_of_Mcu_Int1Isr 6B4A                                     xtoi@c 008A  
                                   xtoi@s 0083                           __end_of_toupper 69A4  
                    __end_of_Eeprom_Reset 5AD8                    __end_of_GetElapsedTime 3FA8  
                   __end_of_UartSetConfig 597A                      __end_of_Eeprom_Write 5CCE  
                        delCmdFsm@smsText 0105                    __size_of_initGprsModem 0094  
                          ?_isNumberValid 007D               Rtcc_SetRtccValue@RtccPtrVal 0088  
                Eeprom_Read@MemoryAddress 00AC                     __end_of_Term_MainTask 6940  
                 LedStateMachine@LedBlink 0093                          __end_of_GetSmsSm 2BD4  
                 __CFG_DSWDTOSC$INTOSCREF 000000                           putUSBUSART@data 0083  
            __size_of_USBStdSetCfgHandler 00E6                   OsTmr_StartTimer@Timeout 0083  
                    __end_of_I2cSetConfig 661C                            _InitSchedTimer 6594  
                         __initialization 22DE               __size_of_saveNumberInMemory 001A  
                        __end_of_MdmCntSm 4776                      __end_of_I2c_ReadData 22DE  
                 Rtcc_RtcConfig@RtcConfig 007E                      __end_of_I2cSendMsgSm 4134  
                 LedStateMachine@LedPulse 0095                                _MyApp_Task 332C  
                            __end_of_atoi 3872                              __end_of_main 6AD6  
                     StringCompare@Result 0085                              __end_of_itoa 60EC  
                  ??_LedPulseStateMachine 008D                     _control_signal_bitmap 01DC  
                            __end_of_utoa 4626                              __end_of_xtoi 35DE  
                __end_of_Rtcm_SetRtccDate 5B80                   __size_of_Rtcc_UnlockRtc 0010  
                        ??_StartCondition 007D                          __end_of_ReadByte 6B0A  
            __size_of_I2cSlv_QueryI2cData 00D2                      Term_MainSm@TermDelay 03D4  
                          __CFG_OSC$HSPLL 000000                          __end_of_MsgReady FE49  
               __size_of_USBCtrlEPService 0094                            ?_triggerCmdFsm 0089  
                                  ??_atoi 0085                                    ??_main 00B0  
            __size_of_Uart_InitUartModule 030C                                    ??_itoa 0099  
                                  ??_utoa 0090                                    ??_xtoi 0085  
                           __activetblptr 000002                           ?_USBDeviceTasks 0001  
                        __end_of_TmrBInit 4BC8                             ?_initPreamble 007D  
                              _ReceiveEvt 65C2          Uart_WriteStringLen@StringToWrite 0080  
                             ?_USBSuspend 0001                         ?_Mcu_ConfigExtInt 0001  
                        ?_HighPriorityIsr 0001                        _Mdm_RequestSmsData 6A7E  
                          ?_StringCompare 007D                          __end_of_Terminal 05EC  
                    initFsm@isInitialized 0103                             ?_SetAckStatus 0001  
                       ?_Led_SetLedStatus 007D                                _OsTmr_Wait 5286  
                            _cdc_mem_type 01DD                        ??_Mcu_ConfigExtInt 007D  
                        addCmdFsm@smsText 0107                         CheckModem@Timeout 03F5  
                         ReceiveEvt@Event 007D                               ?_CheckModem 0001  
                        _CDCDataOutHandle 00BC                           ??_StopCondition 007D  
                      ??_Led_SetLedStatus 007E                          ___awdiv@dividend 007D  
      __end_of_Uart_MdmGsmGprsReadService 3E18                _Uart_MdmGsmGprsReadService 3D4E  
              __end_of_UsbDevice_MainTask 66E2                           getsUSBUSART@len 0086  
                    __end_of_getSetupCall 685A                       ?_Mdm_RequestSmsData 0001  
                   __end_of_UartWriteByte 687A                     addCmdFsm@searchNumber 010C  
                        ??_LowPriorityIsr 0068                                    _DSGPR0 000F4E  
                                  _DSGPR1 000F4F                               _Eeprom_Read 5B80  
      Irq_InitIntController@IntPriorityEn 007F                     __size_of_CDCTxService 0146  
                                  i1l1412 6394                               _GenerateEvt 69A4  
                          __CFG_WDTEN$OFF 000000                                    _RCREG1 000FAF  
                                  _RCREG2 000FAA                                    _RCSTA1 000FAC  
                                  _RCSTA2 000F9C                     triggerRelay@isRelayOn 0086  
               Uart_Uart1RxIsr@UartRxData 002C                             CDCTxService@i 0084  
                                  _RTCCAL 000F3E                                    _SPBRG1 000FB0  
                                  _SPBRG2 000FAB                                    _RPINR1 000EE7  
                              _TaskNumber FC30                            __CFG_WPCFG$OFF 000000  
                                  _TXREG1 000FAE                                    _TXREG2 000FA9  
                        ?_GetCallerNumber 0083                                    _TXSTA1 000FAD  
                                  _TXSTA2 000FA8                               _ConnTimeout 02F5  
                    Mdm_IsSmsReceived@Ret 0081                  __end_of_Rtcc_AlarmConfig 55A2  
                         ??_Mcu_SetWdgSts 007D                    __end_of_InitSchedTimer 65C2  
                          __CFG_WPDIS$OFF 000000                           ?_GetElapsedTime 0081  
                          _EnableReceiver 6B3E                                _UartConfig 031C  
                    __end_of_Mdm_MainTask 5DC0                         ??_Uart_Uart1RxIsr 0007  
                       _shortPacketStatus 00CD                             ??_Term_MainSm 00A7  
                          __CFG_XINST$OFF 000000             __size_of_I2cSlv_I2cReadMsgSts 0022  
                __end_of_MdmHttp_MainTask 6020                                    _SmsLen 00D3  
                         USBDeviceTasks@i 0098               USBStdFeatureReqHandler@pUEP 0092  
                USBTransferOnePacket@data 007E                USBCtrlTrfInHandler@lastDTS 007E  
                           ??_RtccIrqInit 007D                  ??_OsAlrm_ProcessOsAlarms 0060  
                         ??_USBDeviceInit 0085                       __end_of_SetBaudRate 5EFA  
                                  ___lmul 597A                      _I2cSlv_ReceiveI2cMsg 6174  
                      TurnOnModem@Counter 02DA                              ?_putUSBUSART 0083  
                                  ___wmul 6670                                 ??___awdiv 0081  
          GetElapsedTime@CurrentTimestamp 0091                            __CFG_STVREN$ON 000000  
                        _Mdm_SetSmsFormat 5DC0                                 ??___awmod 0081  
                      __size_of_SendSmsSm 01B8                         ?_Rtcm_GetRtccDate 0081  
                     _Led_SetLedBlinkTime 5BD4                                 ??___lldiv 0091  
                    __end_of_getsUSBUSART 4C5E                      ??_Mdm_RequestSmsData 0080  
                               ??___lwdiv 0087                    Tmr_TmrBPrSet@IntFreqHz 0096  
                               ??___lwmod 0081                 isMasterNumber@phoneNumber 0100  
                       _USBEnableEndpoint 6064           __size_of_USBStdGetStatusHandler 00B2  
                           ??_Rtcc_RtcIsr 0001                              ReadByte@Byte 007D  
                     addCmdFsm@isComplete 0109                                    _memcpy 5F92  
                  __size_of_HttpGetMethod 04D0                                    _memset 6504  
                                  clear_0 2396                                    clear_1 23A8  
                                  clear_2 23B4                                    clear_3 23C0  
                                  clear_4 23CC                                    clear_5 23D8  
                                  clear_6 23E4                         parseCommand@F9030 FC22  
                                  clear_7 23F0                                    clear_8 23FC  
                                  clear_9 2408                         parseCommand@F9026 FC2A  
                       parseCommand@F9028 FC26                          ___awdiv@quotient 0083  
                      ??_Rtcm_GetRtccDate 0089                           ___awmod@divisor 007F  
                      _ExtInt0IsrCallback 02E4                         ?_OsTmr_StartTimer 0081  
                              _PostMethod 01E9                           ___awmod@counter 0081  
                     UartWriteByte@Module 007E                       GetSmsSm@GetSmsState 01EF  
                      ?_USBEnableEndpoint 0085                            ??_initPreamble 007F  
                                  _strcat 58C6                                    _strcpy 64A2  
                                  _strlen 61F4                                    _strtol 181C  
                        ClearBuffer@Index 0081             __size_of_USBTransferOnePacket 00BE  
                        __end_of_isxdigit 6326                  HttpGetMethod@UartMessage 0100  
                               ??_initFsm 00B0                             _initGprsModem 4E1C  
                      ??_OsTmr_StartTimer 0087                                    itoa@cp 0099  
                               ??_isalpha 0080                                 ??_isdigit 007D  
                          ??_SetAckStatus 007D                       ModemEvtParser@F9110 03CE  
                     ModemEvtParser@F9112 03C9                       ModemEvtParser@F9114 03C4  
                     ModemEvtParser@F9116 04ED                              _CDCTxService 2824  
                     MdmCntSm@MdmCntState 002E                Mdm_SetSmsFormat@TextFormat 0098  
                        ?_LedStateMachine 008F                              __mediumconst FC0E  
                               ??_isspace 007D                    __size_of_CheckTxStatus 000A  
                            _callerNumber 033E                                    tblptrh 000FF7  
                               ??_isupper 007D                                    tblptrl 000FF6  
                                  tblptru 000FF8                      __end_of_Mcu_ClearWdg 6B36  
                     ??_USBEnableEndpoint 0086                               _MdmStsReady 01FD  
                 __end_of_I2cSlv_MainTask 5B2C                           _InitGprsNetwork 0DC8  
                           ??_Tmr_Tmr2Isr 0023                              ??_I2cDummyTx 0021  
               OsTmr_GetTimerStatus@Timer 0095                               _Mcu_Int0Isr 6B4A  
                             _Mcu_Int1Isr 6B46                      ?_Led_SetLedBlinkTime 007D  
                      __size_of_addCmdFsm 00D0                                 ??_sprintf 0083  
                               ??_tolower 007D                         parseCommand@state 0094  
                  __size_of_ScheduleTasks 0122                   delCmdFsm@receivedNumber 0103  
                             _CtrlTrfData 000438                                 ??_toupper 007D  
                     ModemEvtParser@Match 00A7                      _controlTransferState 00CC  
                   __end_ofi1_GenerateEvt 69FE                   Eeprom_Read@SlaveAddress 00AD  
                   __end_of_Rtcm_MainTask 50F0                __size_of_Rtcc_GetRtccValue 0094  
                           ?_parseCommand 0001                        _ExtInt1IsrCallback 02E2  
                              __accesstop 0060                             ?_Wdg_MainTask 0001  
                 __end_of__initialization 2426                        Eeprom_Read@ReadSts 00AE  
                  Tmr_TmrBPrSet@Prescaler 0098                              __pbssBIGRAMl 0AC8  
                         ??_isNumberValid 007F                    __end_of_EnableReceiver 6B42  
                      __size_of_WriteByte 000A                   __size_of_ModemEvtParser 0182  
             Uart_WriteConstString@Module 0082                 Uart_WriteStringLen@Module 0084  
                           ___rparam_used 000001                               _ReadAddress 01FB  
                __size_of_USBStallHandler 0044                           ?_InitSchedTimer 0001  
              __end_of_UartTxBufferStatus 5EAC                          ??_isMasterNumber 00B0  
         I2cSlv_QueryI2cData@TimeoutTimer 034B                      Terminal@FormatOption 02ED  
                         __CFG_IOL1WAY$ON 000000                                _StringCopy 57A8  
                          __pcstackBANK10 0A00                        __size_of_delCmdFsm 0092  
                   I2cDummyTx@DummyBuffer 01FC                      __CFG_WPEND$PAGE_WPFP 000000  
                     __size_of_USBSuspend 0032                       initFsm@currentState 01D6  
Uart_MdmGsmGprsReadService@ServiceCounter 0005                           MdmCntSm@Counter 02DE  
                   ?_I2cSlv_ReceiveI2cMsg 0080                            __pcstackCOMRAM 0001  
               __end_of_USBEnableEndpoint 60A8                               _InitNetwork 00D9  
                             ?_MyApp_Task 0001                  LedStateMachine@LedOutSts 0098  
                           __end_of_sd000 FE5F                             __end_of_sd001 FE32  
                           __end_of_sd002 FE14                              __pidataBANK0 6B4E  
                            __pidataBANK1 6B50                              __pidataBANK2 6ABC  
                            __pidataBANK3 62AE                              __pidataBANK4 6AE2  
                            __pidataBANK5 5D20                 __end_ofparseCommand@F9030 FC26  
               __end_ofparseCommand@F9026 FC2E                 __end_ofparseCommand@F9028 FC2A  
                       ?_UartSetConfigLow 0001          __size_of_USBCtrlEPAllowDataStage 009E  
                   _Uart_WriteConstString 6130                       __size_of_CheckModem 0160  
                         ??_triggerCmdFsm 008B                __end_of_Uart_ClearRxBuffer 6470  
           __size_of_USBConfigureEndpoint 0098               parseCommand@deleteNumberCmd 008C  
                 addCmdFsm@numberInMemory 010B                  __size_of_InitializeTasks 0070  
                      __end_of_I2cDummyTx 690C               __end_of_USBCtrlTrfInHandler 41F6  
                         __CFG_DSWDTPS$G2 000000                      StringCompare@String1 007D  
                    StringCompare@String2 007F                        ??_UartSetConfigLow 007D  
               __size_of_isNumberInMemory 00BA                       __end_of_Term_MainSm 135A  
               initGprsModem@currentState 01D8                     LedStateMachine@LedOut 0091  
                   LedStateMachine@LedSts 008F                        LedStateMachine@Led 0099  
                               ?i1___wmul 0019                            ?_initGprsModem 0001  
                     __end_of_RtccIrqInit 69E8                        __size_of_detectCmd 009C  
                   __size_of_Led_MainTask 00CC                           ??_StringCompare 0083  
           I2cSlv_QueryI2cData@I2cOpState 01E3                               ?_ReceiveEvt 007D  
                             _NewSmsEvent 0040                                _SystemInit 64D4  
                              _cdc_notice 044F                     __end_of_Tmr_TmrBPrSet 3244  
                   __end_of_waitSetupCall 5E5E                       __end_of_Rtcc_RtcIsr 6B46  
                              _cdc_rx_len 00C9                         __end_of_MsgFormat FD22  
                              _cdc_tx_len 00C7                       Terminal@UsbRxBuffer 0A00  
                             ?_OsTmr_Wait 009B                     ??_Led_SetLedBlinkTime 0081  
                     Terminal@UsbTxBuffer 0200                                 ?_GetSmsSm 0001  
             __end_ofi1_I2cSlv_SendI2cMsg 639A                  ??_USBCtrlTrfSetupHandler 0097  
                 _USBTicksSinceSuspendEnd 01DE                            ClearBuffer@Len 007F  
                         _secondsAppTimer 481E          __end_of_GetLastInteractionNumber 6AE2  
                               ?_MdmCntSm 0001                     _Irq_InitIntController 661C  
                  _USBStdGetStatusHandler 436E                         __end_of_SendSmsSm 1BAA  
                   __size_of_Eeprom_Reset 0056       Mcu_StartSystemPll@PllStartupCounter 007D  
                          _GprsNetworkSts 01EB                            _Rtcc_RtcConfig 48C0  
                   __size_of_Eeprom_Write 0052                                __pbssBANK0 00B0  
                              __pbssBANK1 01C9                            ??_parseCommand 0088  
                              __pbssBANK2 02C8                                __pbssBANK3 0300  
                              __pbssBANK4 0440                                __pbssBANK5 0500  
                              __pbssBANK6 0600                                __pbssBANK7 0700  
                              __pbssBANK8 0800                                __pbssBANK9 0900  
                           _HttpGetMethod 05EC                   ?_Pm_DsReleasePinControl 0001  
                             _MessageText 0572                            ??_Wdg_MainTask 007E  
                   __end_ofi2_GenerateEvt 6A14               isNumberInMemory@phoneNumber 0100  
                __end_of_Uart_WriteString 62AE                   addCmdFsm@masterOpResult 010A  
            getSetupCall@isCalledReceived 0083                                 ?_ReadByte 0001  
                       MyApp_Task@Options 0001                     __size_of_I2cSetConfig 002C  
                         ?_EnableReceiver 0001                     __size_of_I2c_ReadData 015E  
                   __size_of_I2cSendMsgSm 00C4                       __end_of_Tmr_Tmr2Isr 674E  
                             _SetBaudRate 5EAC                             ?_savePreamble 0001  
                   __end_of_findEmptySpot 4CF4                 initGprsModem@modemCounter 03C0  
             __size_of_USBWakeFromSuspend 003A                SendSmsSm@SendSms_NextState 01ED  
                             _pBDTEntryIn 00B6          UartTxBufferStatus@TxBufferStatus 007F  
        __end_of_USBCtrlEPServiceComplete 3156                                 ?_TmrBInit 007D  
                           _CheckTxStatus 6B0A                             ??_TurnOnModem 0080  
                 __size_of_Tmr_TmrBConfig 00C8               __size_of_USBCheckCDCRequest 00B0  
                Uart_WriteStringLen@Index 0083                         ?_GetOsTickCounter 007D  
                 __size_of_Tmr_TmrBIrqSet 004C                      USBCtrlTrfRxService@i 007D  
               findEmptySpot@currentState 00C4                                 ?_Terminal 0001  
                    Eeprom_Write@WriteSts 0092                                   ?___lmul 007D  
                            _Led_MainTask 3BB6                            _Rtcc_UnlockRtc 6A5E  
                            _I2cBusStatus 01E5                                   ?___wmul 007D  
         __size_of_OsAlrm_ProcessOsAlarms 0156                             _ScheduleTasks 2E26  
               Uart_InitUartModule@Module 00A1                     __end_of_I2c_WriteData 2020  
                       __end_of_addCmdFsm 3AE8                        ??_GetOsTickCounter 0081  
                                 ?_memcpy 007D                                   ?_memset 007D  
                          ___lmul@product 0085                                _device_dsc FE49  
                 __size_of_CheckAckStatus 000A                          _USBCtrlEPService 4CF4  
                   __end_of_UpdateSchFlag 68F0                              _EepromBuffer 04BB  
                              _ep_data_in 02D1                           _I2cWriteDataEvt 00D7  
                i1GenerateEvt@EventStatus 001B                             ?_Rtcc_LockRtc 0001  
                                 ?_strcat 007D                                ??i1___wmul 001D  
                 __end_of_InitGprsNetwork 10B6                                   ?_strcpy 007D  
                                 ?_strlen 007D                                   ?_strtol 0089  
           __size_of_LedBlinkStateMachine 0148               __end_of_USBCtrlTrfRxService 2E26  
                       __end_of_WriteByte 6B00                        _USBCheckStdRequest 35DE  
                       _configDescriptor1 FDAB                              _Eeprom_Reset 5A82  
                     Wdg_MainTask@Options 0001                               _PhoneNumber 04A7  
                            _Eeprom_Write 5C7C                     __size_of_getSetupCall 0020  
             __end_of_USBCtrlTrfTxService 379A                         triggerRelay@F9012 03D2  
                     _USBStdSetCfgHandler 3412                         __end_of_delCmdFsm 4F42  
                 __size_of_ConfigureModem 00D4                    I2cSlv_QueryI2cData@Ret 01E2  
               Eeprom_Write@MemoryAddress 0093                           __CFG_WDTPS$2048 000000  
                            _I2cSetConfig 65F0                                   _SPBRGH1 000F7F  
                                 _SPBRGH2 000F7D                    __end_of_Rtcc_RtcConfig 4960  
                                 _SSP2ADD 000F74                                ??_GetSmsSm 008F  
                                 _SSP2BUF 000F75                              _I2c_ReadData 2180  
                                 _RTCVALH 000F99                                   _RTCVALL 000F98  
                            _I2cSendMsgSm 4070                          ?_I2cSlv_MainTask 0001  
                      GsmGprsTerminal@SMS 01DA            __end_of_Pm_DsReleasePinControl 6B2C  
                     ?_USBCheckStdRequest 0001                     Mdm_SetSmsFormat@Index 0083  
            __size_of_USBStdGetDscHandler 012E                                ??_MdmCntSm 0081  
                     __size_of_MyApp_Task 00E6                                   _UIEbits 000F36  
                          ?_HttpGetMethod 009B                              ?_ClearBuffer 007D  
                    _MdmOnOffPulseRequest 00E0                                   _UIRbits 000F62  
                   CheckModem@CheckMdmSts 01F3                 __size_of_UpdateOsCounters 0010  
                                 _Led1Sts 01FA                       _I2cSlv_QueryI2cData 3946  
                                 _Led2Sts 01F8                                   _Led3Sts 01F6  
              __end_of_Sch_SchmIntService 6ABC                     __size_of_Mdm_MainTask 0050  
           ModemEvtParser@CallReadyString 008F                             _cdc_trf_state 00C8  
                              ??_ReadByte 007D                            ??_savePreamble 0096  
                     _Uart_InitUartModule 0ABC                     __end_of_Mdm_DrvMainFn 6B32  
                    __end_of_initPreamble 68D4                    initEeprom@currentState 01D7  
                       __end_of_detectCmd 4A9A                          _ComChecCompleted 002B  
                          ?_CheckTxStatus 0001               __size_of_Mcu_StartSystemPll 001E  
                                 _pCDCDst 02C8                     __end_of_Mdm_IsRinging 672A  
                   InitGprsNetwork@ApnLen 009D                                   _pCDCSrc 02CB  
                   __size_of_getsUSBUSART 0096                               ?_StringCopy 0085  
                     __size_of_ReceiveEvt 002E                                   __Hparam 0000  
                              ??_TmrBInit 007F                    ??_I2cSlv_ReceiveI2cMsg 0084  
         ??_USBIncrement1msInternalTimers 007D                            _I2cReadDataEvt 0039  
                               ?_isxdigit 0001                      ?_USBStdSetCfgHandler 0001  
                               _CDCInitEP 54CA                    __end_of_Rtcc_UnlockRtc 6A6E  
                                 __Lparam 0000           OsAlrm_SetOsAlarm@OsAlarmTimeout 0085  
                    __end_of_SetAckStatus 6A28                                _initEeprom 4F42  
                             _Term_MainSm 10B6   Uart_WriteConstString@ConstStringToWrite 0080  
                                 _Welcome FD22                __size_of_USBEnableEndpoint 0044  
                          ?_ScheduleTasks 0001                                ??_Terminal 00A2  
                       _Sch_MainScheduler 6898                    ?_Uart_WriteConstString 0080  
                              _readBuffer 0331                       __size_of_OsTmr_Wait 0082  
                    ??_USBCheckStdRequest 0097                               _RtccIrqInit 69D2  
           __size_of_USBCtrlTrfOutHandler 0066                                   ___awdiv 517C  
                    Term_MainTask@Options 0001                           __size_of___lmul 0058  
                __size_of_SetUartBaudRate 0138                                   ___awmod 5308  
                                 ___lldiv 5202                          ??_USBDeviceTasks 0098  
                         __size_of___wmul 0028                   triggerCmdFsm@isComplete 008B  
                                 ___lwdiv 5C28                         ??_USBStallHandler 007D  
                                 ___lwmod 60EC                         ?_Rtcm_SetRtccDate 0089  
            __size_of_Uart_WriteStringLen 0040                        ?_Sch_MainScheduler 0001  
                            _getSetupCall 683A                      ?_I2cSlv_QueryI2cData 00A2  
                         ??_initGprsModem 0099                               _Rtcc_RtcIsr 6B42  
                    __size_of_putUSBUSART 0022                                   __pcinit 22DE  
                      getsUSBUSART@buffer 0084                           __size_of_memcpy 0048  
                               _I2cComSts 00CF                       __end_of_TurnOnModem 5F92  
                         __size_of_memset 0030                   initEeprom@isInitialized 0102  
                               _I2cConfig 0356                            ??_Rtcc_LockRtc 007D  
               __end_of_configDescriptor1 FDEE                                   __ramtop 0F00  
              Mdm_GetSmsData@GetSmsStatus 0091                               Terminal@Len 03B4  
                      ??_Rtcm_SetRtccDate 0091                     Tmr_TmrBIrqSet@TmrNumb 007F  
                    ?_Uart_InitUartModule 009D                                   __ptext0 6ACA  
                                 __ptext1 64D4                                   __ptext2 6AEC  
                                 __ptext3 6B26                                   __ptext4 687A  
                                 __ptext5 690C                                   __ptext6 661C  
                                 __ptext7 6594                                   __ptext8 3E18  
                                 __ptext9 3156                                   _inPipes 00B0  
                   __size_of_Mcu_ClearWdg 0004                 GsmGprsTerminal@UartBuffer 0900  
             _USBDeferOUTDataStagePackets 0025                           __size_of_strcat 005C  
                 __end_of_secondsAppTimer 48C0                           __size_of_strcpy 0032  
                         __size_of_strlen 003E              __size_of_OsAlrm_ClearOsAlarm 0058  
                               _T1CONbits 000FCD                           __size_of_strtol 01D6  
                      InitGprsNetwork@Apn 009B                                   _initFsm 4626  
                            ??_USBSuspend 0091                                 _T2CONbits 000FCA  
                                 _isalpha 6534                                   _isdigit 67D6  
          isNumberInMemory@memoryOpResult 0104                             ?_Tmr_StartTmr 0001  
                     ??_Sch_MainScheduler 00B0                               ?_SystemInit 0001  
                                 clear_10 2414                                   clear_11 2420  
                        ___awmod@dividend 007D                         ??_InitializeTasks 04F7  
                               _T4CONbits 000F76                           _Tmr2IsrCallback 02EA  
     __end_of_Tmr_RegisterTmr2IsrCallback 6AF6               _Tmr_RegisterTmr2IsrCallback 6AEC  
                                 _isspace 6646                              _Mdm_MainTask 5D70  
                                 _isupper 6792               __size_of_InitModemInterface 0008  
                    HttpGetMethod@GetData 009B                    ?_Irq_InitIntController 007D  
                                 _smsText 0493                    Term_MainSm@FwkBuildStr 013A  
                         ?_Rtcc_RtcConfig 007E                    _OsAlrm_ProcessOsAlarms 2434  
                            ??_CheckModem 009B                        __end_of_USB_CD_Ptr FC30  
                     Mcu_SetWdgSts@WdgSts 007D                               _Tmr_Tmr2Isr 672A  
                                 _sprintf 3AE8                                   _tolower 6974  
         __size_of_USBCtrlTrfSetupHandler 008C                           _Uart_Uart1RxIsr 6A9E  
                        _HttpGetDataLocal 03A7                  __end_of_Mdm_SetSmsFormat 5E10  
                  Term_MainSm@FwkMajorStr 0132                            __pintcode_body 44D0  
                                 _toupper 698C           secondsAppTimer@destinationTicks 0091  
                       ClearBuffer@Buffer 007D                      end_of_initialization 2426  
                            _getsUSBUSART 4BC8                              ?_Eeprom_Read 00A9  
                        ??_GetElapsedTime 0085                               _SmsTxtReady 00DA  
             ?_Uart_MdmGsmGprsReadService 0004             __size_of_OsTmr_GetTimerStatus 0090  
                            ?_GenerateEvt 007D                    _MainSystemTimebaseFlag 02F4  
           i1I2cSlv_SendI2cMsg@DataLenght 001F                        __end_of_USB_SD_Ptr FC22  
     Irq_InitIntController@PerInt_LowPInt 007E                 triggerCmdFsm@currentState 01D3  
                                 memcpy@d 0084                                   memcpy@n 0081  
                                 memcpy@s 0086                       _pBDTEntryEP0OutNext 00BE  
                                 itoa@buf 0093                                   memset@c 007F  
                                 itoa@val 0095                                   memset@n 0081  
                  Term_MainSm@FwkMinorStr 0136                                   memset@p 0083  
                           __Lmediumconst FC0E                            _ModemEvtParser 1D30  
                                 int_func 44D0                           _USB1msTickCount 0310  
         _dummy_encapsulated_cmd_response 037B                                 i1u1622_20 244A  
                _GetLastInteractionNumber 6AD6                                 i1u1626_28 256A  
                               i1u1626_29 257E                                 i1u1647_28 673A  
                ?_USBStdFeatureReqHandler 0001                 __size_of_Mcu_ConfigExtInt 001A  
              __end_of_saveNumberInMemory 6974                         ?_Rtcc_AlarmConfig 007D  
                   ??_USBStdSetCfgHandler 0091                           ___lldiv@divisor 008D  
               __end_of_Sch_MainScheduler 68B6                 __size_of_Led_SetLedStatus 0030  
                              ??_isxdigit 0080                                ?_CDCInitEP 0001  
                         ___lldiv@counter 0095                         _Rtcc_SetRtccValue 15EE  
                       _Rtcc_SetRtcStatus 69BC                       _ActivateRiDetection 0041  
                         ?_Rtcc_UnlockRtc 0001                        ??_Rtcc_AlarmConfig 007F  
                      __end_of_USBSuspend 64A2                             StringCopy@Len 0089  
                       ?_MdmHttp_MainTask 0001                  I2cSlv_QueryI2cData@RxLen 00A7  
                 _USBCtrlEPAllowDataStage 4960                        _UsbDevice_MainTask 66BE  
                I2cSlv_QueryI2cData@TxLen 00A4                              _Mcu_ClearWdg 6B32  
               Eeprom_Reset@memoryAddress 00C6                                   postdec1 000FE5  
                                 postdec2 000FDD                        ?_Rtcc_SetRtccValue 0085  
                      ?_Rtcc_SetRtcStatus 0001                                   postinc0 000FEE  
                                 postinc1 000FE6                                   postinc2 000FDE  
                   ??_I2cSlv_QueryI2cData 00A9                                   utoa@buf 008A  
                      ??_MdmHttp_MainTask 00A1                  _USBCtrlEPServiceComplete 3058  
                                 utoa@val 008C                   HttpGetMethod@GetMOutSts 01E6  
                   i1___wmul@multiplicand 001B                        __end_of_CheckModem 2180  
                         _RtccIsrCallback 02E6          OsAlrm_ProcessOsAlarms@AlarmIndex 0021  
                      Terminal@EchoOption 02F3             __size_of_LedPulseStateMachine 00E8  
                                 strlen@s 007D                          _isNumberInMemory 42B4  
                    __end_of_parseCommand 3058                _USBStatusStageEnabledFlag1 0028  
              _USBStatusStageEnabledFlag2 0027                     ??_Uart_InitUartModule 009F  
                    __end_of_Wdg_MainTask 6770                                   strtol@a 0094  
                                 strtol@c 0098                            _Rtcm_RtccAlarm 0300  
                                 strtol@s 0089                        USBEnableEndpoint@p 0086  
                     ?_UsbDevice_MainTask 0001                                   xtoi@val 0088  
                               _PORTDbits 000F83                                 _PORTEbits 000F84  
                     ??_Rtcc_SetRtccValue 0086                       ??_Rtcc_SetRtcStatus 007D  
                        __CFG_DSBOREN$OFF 000000                          ?_InitGprsNetwork 009B  
                       _Mdm_HangPhoneCall 6A3A                            ??_Tmr_StartTmr 007D  
            __end_of_I2cSlv_I2cReadMsgSts 681A                  i1I2cSlv_SendI2cMsg@TxSts 0020  
                       StringCopy@DestStr 0087                          __CFG_CPUDIV$OSC1 000000  
                      ?_Mdm_HangPhoneCall 0001                    __size_of_UartSetConfig 0058  
                         _Tmr4IsrCallback 02E8                          _HttpGetMethodSts 01EA  
                               _TRISBbits 000F93                      SendSmsSm@UartMessage 0100  
                               _TRISCbits 000F94                                 _TRISDbits 000F95  
                               _TRISEbits 000F96                       __size_of_StringCopy 0062  
                isNumberValid@phoneNumber 007D                        _BothEP0OutUOWNsSet 01DF  
                         ??_HttpGetMethod 009D                   __size_of_Mdm_GetSmsData 0068  
                            strtol@endptr 008B                    __size_of_Term_MainTask 001A  
                            ?_Mcu_Int0Isr 0001                 __size_of_Rtcm_GetRtccDate 0066  
                            ?_Mcu_Int1Isr 0001                 I2c_WriteData@I2cNextState 0037  
               USBConfigureEndpoint@EPNum 0082                ?_USBCtrlEPAllowStatusStage 0001  
                  __end_of_ModemEvtParser 1EB2                          ??_InitSchedTimer 00A4  
     USER_USB_CALLBACK_EVENT_HANDLER@size 008D                                 _USTATcopy 00D5  
                   __end_of_StopCondition 6B3A                  __size_of_HighPriorityIsr 4574  
                     ??_Mdm_HangPhoneCall 0083                 Tmr_TmrBPrSet@TmrBPrCfgSts 009A  
               __size_of_OsTmr_StartTimer 005E                    secondsAppTimer@counter 008A  
                               _Led1Blink 0372                                 _Led2Blink 0369  
                    ??_UsbDevice_MainTask 0099                                 _Led3Blink 0360  
            __end_of_USBTransferOnePacket 42B4                           ??_CheckTxStatus 007D  
                               _Led1Pulse 0396                    secondsAppTimer@seconds 008F  
                       __CFG_WPFP$PAGE_63 000000                 __end_of_Rtcc_SetRtccValue 181C  
               __end_of_Rtcc_SetRtcStatus 69D2                                 _Led2Pulse 0390  
                               _Led3Pulse 038A                         _I2cSlv_SendI2cMsg 6232  
         SetBaudRate@DesiredI2cBusClockHz 0096                       Eeprom_Read@QuerySts 00AF  
                         ??_ScheduleTasks 04F7                            _Tmr_TmrBConfig 3E18  
                 Tmr_TmrBPrSet@Postscaler 0099                         putUSBUSART@length 0085  
                 MdmHttp_MainTask@Options 0001                     __end_of_Mcu_SetWdgSts 6A3A  
                       _OsAlrm_SetOsAlarm 3FA8                      Terminal@TermRxBuffer 0540  
                      ?_I2cSlv_SendI2cMsg 0080                       __size_of_SystemInit 0030  
                          _Tmr_TmrBIrqSet 5EFA                               ?_initEeprom 0001  
                     __CFG_MSSP7B_EN$MSK7 000000                               _TurnOnModem 5F46  
                               _ClipEvent 00DD                              ??_MyApp_Task 00B0  
                    Terminal@TermTxBuffer 0100             saveNumberInMemory@phoneNumber 0096  
                               _GetMethod 00D8                    _USBCtrlTrfSetupHandler 50F0  
                      ?_OsAlrm_SetOsAlarm 0083                  Eeprom_Reset@SlaveAddress 0085  
                __size_of_GetCallerNumber 0036                     __end_of_USBDeviceInit 26DC  
   __end_of_USBIncrement1msInternalTimers 6792    __size_of_USBIncrement1msInternalTimers 0022  
           _USBIncrement1msInternalTimers 6770               __size_of_Mdm_RequestSmsData 0010  
                          __end_of___lmul 59D2                            _CheckAckStatus 6B14  
                          __end_of___wmul 6698                       ??_I2cSlv_SendI2cMsg 0084  
               __end_of_Mdm_HangPhoneCall 6A4C               triggerCmdFsm@numberInMemory 008C  
                  __size_of_UartWriteByte 0020                   addCmdFsm@receivedNumber 0105  
                          __end_of_memcpy 5FDA                        Terminal@PackageLen 02EF  
       Uart_MdmGsmGprsReadService@RxState 002D                            __end_of_memset 6534  
                      _UartTxBufferStatus 5E5E                       ??_OsAlrm_SetOsAlarm 008B  
                    __end_of_savePreamble 695A                          __CFG_DSWDTEN$OFF 000000  
                            ??_ReceiveEvt 007F                         _USBBusIsSuspended 01E0  
                               _Mdm_SmsRx 0700                          ?_secondsAppTimer 008A  
                       ??_SetUartBaudRate 0098                   __end_of_Uart_Uart1RxIsr 6AAE  
                               _MdmStatus 00D1                            __end_of_strcat 5922  
                          __end_of_strcpy 64D4                            __end_of_strlen 6232  
                          __end_of_strtol 19F2                       start_initialization 22DE  
         isNumberInMemory@currentPosition 00E2                         __size_ofi1___wmul 0026  
                 ?_USBStdGetStatusHandler 0001                            _ConfigureModem 3872  
                            ??_OsTmr_Wait 00A1                    Uart_WriteString@Module 0082  
           USBCtrlTrfRxService@byteToRead 007E                   __size_of_StartCondition 0004  
                    Rtcm_SetRtccDate@Date 0089                           _MdmResetRequest 003D  
                     ?_UartTxBufferStatus 0001                        _Uart_ClearRxBuffer 643C  
               __size_of_UartSetConfigLow 0058                          ??_EnableReceiver 007D  
                             _cdc_data_rx 0500                               _cdc_data_tx 07B6  
            __end_of_USBConfigureEndpoint 4B32                     __size_of_initPreamble 001E  
         __end_of_USBStdFeatureReqHandler 15EE                                 _MsgFormat FC32  
                      __end_of_MyApp_Task 3412                          _UpdateOsCounters 6A8E  
                         ?_ModemEvtParser 0001                             ?_triggerRelay 0001  
              I2c_InitI2cModule@I2cConfig 00A2                         __size_of_GetSmsSm 0132  
       __end_of_USBCtrlEPAllowStatusStage 3D4E                 __end_of_I2cSlv_SendI2cMsg 6270  
                  Uart_WriteStringLen@Len 0082                  __size_of_LedStateMachine 00A8  
                __end_of_USBCtrlEPService 4D88                         __size_of_MdmCntSm 00A8  
                       ?_Uart_WriteString 0080                     __size_of_SetAckStatus 0014  
                    __size_of_ClearBuffer 0036                      __end_of_Rtcc_LockRtc 6A7E  
                     ?_Uart_ClearRxBuffer 0001                              ?_SetBaudRate 0096  
                  __end_of_Tmr_TmrBConfig 3EE0                                 _SendSmsSm 19F2  
               __end_of_OsAlrm_SetOsAlarm 4070                    __end_of_Tmr_TmrBIrqSet 5F46  
                               _TaskTable 05A4                                 _RingEvent 00DE  
               ??_USBCtrlEPAllowDataStage 007E                        ??_Uart_WriteString 0082  
                             _SystemState 00D4                     __end_of_isNumberValid 57A8  
            isMasterNumber@memoryOpResult 0102                         __size_of_ReadByte 000A  
                               _RtcConfig 03BC                __size_of_Sch_MainScheduler 001E  
           Uart_InitUartModule@UartConfig 009D                               ??_CDCInitEP 0089  
                          USBDeviceInit@i 0085                             _UartSetConfig 5922  
                  Led_SetLedBlinkTime@Led 0081                        __end_of_ReceiveEvt 65F0  
                  _pBDTEntryEP0OutCurrent 00C0                             _Term_MainTask 6926  
                 USBTransferOnePacket@dir 007D                      ??_UartTxBufferStatus 007D  
                 USBTransferOnePacket@len 0080                     Tmr_TmrBConfig@TmrNumb 00A3  
                 __size_of_LowPriorityIsr 00B4                    __end_of_CheckAckStatus 6B1E  
                                ??___lmul 0085                             _isxdigit$6692 0081  
                               Terminal@i 00A4                                  ??___wmul 0081  
                       __size_of_TmrBInit 0096    Tmr_RegisterTmr2IsrCallback@IsrCallback 007D  
                     _USBStdGetDscHandler 2BD4                I2cSlv_SendI2cMsg@SlaveAddr 0082  
                      __end_of_OsTmr_Wait 5308                        HttpGetMethod@Index 01C8  
                             __pdataBANK0 00E1                               __pdataBANK1 01FE  
                             __pdataBANK2 02F3                               __pdataBANK3 03C4  
                             __pdataBANK4 04ED                               __pdataBANK5 05A4  
                        __CFG_LPT1OSC$OFF 000000                         __size_of_Terminal 051C  
                                ??_memcpy 0083                                  ??_memset 0083  
                   detectCmd@currentState 0095                     __end_of_triggerCmdFsm 560E  
                  __size_ofi1_GenerateEvt 0016                       Tmr_StartTmr@TmrNumb 007D  
                    ??_Uart_ClearRxBuffer 007D       __size_of_Uart_MdmGsmGprsReadService 00CA  
                                ??_strcat 0081                                  ??_strcpy 0081  
                                ??_strlen 007F                    __size_of_Rtcm_MainTask 008E  
                               _addCmdFsm 3A18                                  ??_strtol 008F  
             __end_of_Led_SetLedBlinkTime 5C28                    __end_of_ConfigureModem 3946  
                             _ALRMCFGbits 000F91                    _USBActiveConfiguration 00D6  
          __end_of_USBStdGetStatusHandler 4420                              _initPreamble 68B6  
                           WriteByte@Byte 007D                        __end_of_TaskNumber FC32  
                             __pbssCOMRAM 0023                   GetElapsedTime@TimeValue 008D  
                   __end_of_StringCompare 5D20                 __size_of_GetOsTickCounter 0012  
                           __pcstackBANK0 0060                             __pcstackBANK1 0100  
                           __pcstackBANK2 0200              __size_of_USBCtrlTrfInHandler 00C2  
                           __pcstackBANK4 04F7                           RiSm@MdmDrvState 002F  
                            _SetAckStatus 6A14                              _isalpha$6682 0081  
                  GenerateEvt@EventStatus 007F                                 _WriteByte 6AF6  
                     __size_of_initEeprom 0090                              _isdigit$6416 007E  
                    ?_USBStdGetDscHandler 0001             UpdateSchFlag@InterruptCounter 02DC  
                          ??_triggerRelay 0085                 SetUartBaudRate@UartConfig 0096  
                     _Uart_WriteStringLen 61B4                                 _delCmdFsm 4EB0  
     InitGprsNetwork@GprsNetInitNextState 002A                   GetElapsedTime@StartTime 0081  
                           _UartWriteByte 685A                               _ALRMRPTbits 000F90  
              __end_of_USBWakeFromSuspend 6360              __end_of_LedBlinkStateMachine 2824  
                             sprintf@flag 0083                      __size_of_Eeprom_Read 0054  
                         _USBStallHandler 6020                                ?_SendSmsSm 0001  
                            _pBDTEntryOut 0306                __size_of_Rtcc_SetRtccValue 022E  
                    __size_of_GenerateEvt 0018                           ?_Tmr_TmrBConfig 00A0  
              __size_of_Rtcc_SetRtcStatus 0016                          _Mcu_ConfigExtInt 690C  
              __end_of_USBCheckCDCRequest 44D0              __size_ofi1_I2cSlv_SendI2cMsg 003A  
                     _OsAlrm_ClearOsAlarm 5A2A                           ?_Tmr_TmrBIrqSet 007D  
                 ??_Uart_WriteConstString 0082                            ?_UartSetConfig 0001  
                    __end_of_Tmr_StartTmr 683A                              ??_StringCopy 008B  
                        _Led_SetLedStatus 6564                         ??_HighPriorityIsr 0007  
                          ?_Term_MainTask 0001                          ___lwdiv@dividend 0083  
                            ?_Term_MainSm 0001                      _I2cSlv_I2cReadMsgSts 67F8  
                        GenerateEvt@Event 007D                    __size_of_Tmr_TmrBPrSet 00EE  
                   __size_of_parseCommand 0110                    __size_of_waitSetupCall 004E  
                               _detectCmd 49FE                     __size_of_Wdg_MainTask 0022  
                               __pintcode 0008               findEmptySpot@memoryOpResult 0102  
           Uart_WriteString@StringToWrite 0080                             __pmediumconst FC0E  
                            ?_RtccIrqInit 0001                           ?_CheckAckStatus 0001  
                 Tmr_TmrBIrqSet@TmrIrqSts 007E                         __size_of_isxdigit 003C  
                                ?___awdiv 007D                                 __ptext100 4F42  
                               __ptext101 49FE                                 __ptext110 4EB0  
                               __ptext102 2F48                                 __ptext111 3A18  
                               __ptext103 6A7E                                 __ptext120 5286  
                               __ptext112 695A                                 __ptext104 66E2  
                               __ptext121 6174                                 __ptext113 5C7C  
                               __ptext105 6706                                 __ptext130 1D30  
                               __ptext122 67F8                                 __ptext114 42B4  
                               __ptext106 6A3A                             Terminal@Index 00A6  
                               __ptext131 643C                                 __ptext123 5BD4  
                               __ptext115 545C                                 __ptext107 560E  
                               __ptext140 46CE                                 __ptext132 5CCE  
                               __ptext124 5A82                                 __ptext116 4C5E  
                               __ptext108 6AD6                                 __ptext141 6B1E  
                               __ptext133 2AA2                                 __ptext125 6232  
                               __ptext117 5742                                 __ptext109 63D0  
                               __ptext150 4FD2                                 __ptext142 0DC8  
                               __ptext134 3872                                 __ptext126 5922  
                               __ptext118 5B80                                 __ptext151 3EE0  
                               __ptext143 05EC                                 __ptext135 0ABC  
                               __ptext127 5F46                                 __ptext119 3946  
                               __ptext160 6670                                 __ptext152 6A4C  
                               __ptext144 6270                                 __ptext136 296A  
                               __ptext128 19F2                                 __ptext161 537A  
                               __ptext153 6406                                 __ptext145 6130  
                               __ptext137 597A                                 __ptext129 61B4  
                               __ptext170 6B36                                 __ptext162 5EAC  
                               __ptext154 4776                                 __ptext146 685A  
                               __ptext138 59D2                                 __ptext171 6B3A  
                               __ptext163 5202                                 __ptext155 3244  
                               __ptext147 5E5E                                 __ptext139 2020  
                               __ptext180 6AAE                                 __ptext172 6A14  
                               __ptext164 65F0                                 __ptext156 6564  
                               __ptext148 57A8                                 __ptext181 68D4  
                               __ptext173 6B00                                 __ptext165 4070  
                               __ptext157 26DC                                 __ptext149 5868  
                               __ptext190 6A9E                                 __ptext182 6A8E  
                               __ptext174 69A4                                 __ptext166 65C2  
                               __ptext158 5C28                                 __ptext191 3D4E  
                               __ptext183 2434                                 __ptext175 6B3E  
                               __ptext167 1EB2                                 __ptext159 3FA8  
                               __ptext192 69FE                                 __ptext184 6698  
                               __ptext176 6B0A                                 __ptext168 2180  
                               __ptext193 6B42                                 __ptext185 5A2A  
                               __ptext177 6B14                                 __ptext169 6AF6  
                               __ptext194 6B46                                 __ptext186 68F0  
                               __ptext195 6B4A                                 __ptext187 6360  
                               __ptext179 672A                                  ?___awmod 007D  
                      _Sch_SchmIntService 6AAE                                 __ptext196 0000  
                               __ptext188 69E8                           _InitializeTasks 53EC  
                                ?___lldiv 0089                      ?_Uart_WriteStringLen 0080  
                                ?___lwdiv 0083                                  ?___lwmod 007D  
                         _CallClosedEvent 003E                              ?_Rtcc_RtcIsr 0001  
                             __pintcodelo 0018                __size_of_Mdm_HangPhoneCall 0012  
                 isNumberValid@isNumberOk 0080                   __size_of_isMasterNumber 006E  
                  __size_ofi2_GenerateEvt 0016             I2cSlv_QueryI2cData@QueryTimer 04E2  
                              ?_addCmdFsm 0105                   Eeprom_Write@WriteBuffer 008F  
                        ??_Rtcc_RtcConfig 0080                      ?_OsAlrm_ClearOsAlarm 0001  
                             _I2cRxPacket 039C                       Mdm_MainTask@Options 0001  
                     ?_Sch_SchmIntService 0001                      _USBTransferOnePacket 41F6  
                         ?_ConfigureModem 0001                   ??_Irq_InitIntController 007F  
      Uart_MdmGsmGprsReadService@UartData 0004                                  ?_initFsm 0001  
                 ?_OsAlrm_ProcessOsAlarms 0001                                  _BAUDCON1 000F7E  
                                _BAUDCON2 000F7C                          ?_Uart_Uart1RxIsr 0001  
                       ??_GetCallerNumber 0085                                  ?_isalpha 0001  
                            ??_SystemInit 00AB                                  ?_isdigit 0001  
                             _I2cTxPacket 03A2            InitializeTasks@ActiveTaskIndex 04F9  
                  __size_of_findEmptySpot 0096                      __CFG_RTCOSC$T1OSCREF 000000  
                                ?_isspace 0001                            _Mdm_GetSmsData 560E  
                    InitGprsNetwork@Index 0132                                  ?_isupper 0001  
              Term_MainSm@TermMainSmState 02EC                ??_GetLastInteractionNumber 007F  
                         Terminal@Payload 0766                               _PADCFG1bits 000F3C  
            __end_of_USBCtrlTrfOutHandler 56DC                                ?_WriteByte 0001  
                   ??_USBStdGetDscHandler 007D                          _Rtcm_GetRtccDate 56DC  
              ConfigureModem@DelayCounter 02D6                        __end_of_StringCopy 580A  
                             _ep_data_out 02CE                                  _ALRMVALH 000F8F  
                                _ALRMVALL 000F8E                          ___lwdiv@quotient 0088  
                            ?_Tmr_Tmr2Isr 0001                              _SendSmsEvent 00DF  
                         Terminal@SwTimer 04D7                  initEeprom@memoryOpResult 0101  
                                ?_sprintf 007D                                  ?_tolower 0001  
               __size_of_Rtcm_SetRtccDate 0054                            _setupCallTicks 03C2  
            __size_of_USBCtrlTrfRxService 0124             USBConfigureEndpoint@direction 007D  
                                ?_toupper 0001                                ?_delCmdFsm 0103  
                       ?_Mdm_SetSmsFormat 0001                            ?_UartWriteByte 007D  
                  __size_of_I2c_WriteData 016E                ConfigureModem@DelayValueMs 02D8  
                        _OsTmr_StartTimer 5868                      __size_of_Mcu_Int0Isr 0004  
                    __size_of_Mcu_Int1Isr 0004   Irq_InitIntController@GlobalInt_HighPInt 007D  
              __size_of_I2cSlv_SendI2cMsg 003E                  __end_of_isNumberInMemory 436E  
            __size_of_USBCtrlTrfTxService 00D8                          ??_Rtcc_UnlockRtc 007D  
                           i1_GenerateEvt 69E8                __end_of_Mcu_StartSystemPll 6898  
                            _parseCommand 2F48                              _PhoneNumbLen 00D2  
                      ??_Mdm_SetSmsFormat 0083                              _Wdg_MainTask 674E  
                           _Rtcm_MainTask 5062                            ___wmul@product 0081  
                ModemEvtParser@ClipString 0099                          SendSmsSm@SwTimer 03EA  
                   Terminal@ReceivedBytes 00A5                      ??_Sch_SchmIntService 0023  
                  __size_of_UpdateSchFlag 001C                __size_of_OsAlrm_SetOsAlarm 00C8  
              ??_USBCtrlEPServiceComplete 007E                  __size_of_I2cSlv_MainTask 0054  
                                _IPR1bits 000F9F                   LedPulseStateMachine@Led 008C  
                                _IPR3bits 000FA5                                  _PIE1bits 000F9D  
                                _PIE2bits 000FA0                                  _PIE3bits 000FA3  
    __size_of_Tmr_RegisterTmr2IsrCallback 000A              ConfigureModem@MdmConfigState 01F1  
         HttpGetMethod@GetMethodNextState 00D0                     ?_I2cSlv_I2cReadMsgSts 0001  
                       _I2c_InitI2cModule 537A                         _IncomingCallEvent 003F  
                                _PIR1bits 000F9E                                  _PIR2bits 000FA1  
                                _PIR3bits 000FA4                         ??_LedStateMachine 0097  
                      __end_of_SystemInit 6504                                  _RCONbits 000FD0  
                              ?_detectCmd 0001                             ??_putUSBUSART 0086  
                                _UEP0bits 000F26             __size_of_I2cSlv_ReceiveI2cMsg 0040  
              _USBDeferINDataStagePackets 0026                        ?_I2c_InitI2cModule 00A2  
                   ??_Uart_WriteStringLen 0083                                  _SSP2CON1 000F72  
                                _SSP2CON2 000F71               __size_of_USBCheckStdRequest 00E4  
                    Rtcm_MainTask@Options 0001                     __size_of_savePreamble 001A  
            __end_of_OsTmr_GetTimerStatus 5062                                  _UCONbits 000F65  
                                _SSP2STAT 000F73                  ModemEvtParser@CompareIdx 00A8  
                    _USBConfigureEndpoint 4A9A                     delCmdFsm@currentState 01D4  
                    _UsbMasterPhoneNumber 0440          __size_of_USBStdFeatureReqHandler 0294  
                      _saveNumberInMemory 695A                     SetUartBaudRate@Module 0099  
          __end_of_OsAlrm_ProcessOsAlarms 258A                     ??_OsAlrm_ClearOsAlarm 0019  
                       ___wmul@multiplier 007D                     ?_USBTransferOnePacket 007D  
                                i1___wmul 6698                     __end_of_initGprsModem 4EB0  
                     ??_I2c_InitI2cModule 00A4                            delCmdFsm@F9013 FC0F  
               __size_of_Rtcc_AlarmConfig 006C                __end_of_InitModemInterface 6B26  
                  __end_of_Mdm_GetSmsData 5676                             ?_CDCTxService 0001  
          OsAlrm_SetOsAlarm@AlarmCallback 0089                    __size_of_Mdm_DrvMainFn 0006  
                            _RemoteWakeup 01E1                                  _ApnLocal 031A  
                          _StartCondition 6B3A                        SetAckStatus@AckSts 007D  
               __size_of_MdmHttp_MainTask 0046                    __size_of_Mdm_IsRinging 0024  
                        StringCompare@Len 0081               HttpGetMethod@GetMethodState 01E7  
                           _Tmr_TmrBPrSet 3156                             _waitSetupCall 5E10  
                     ?_saveNumberInMemory 0096                         _NewStringReceived 003C  
                            _isspace$6685 007E                          _UartSetConfigLow 59D2  
                                _GetSmsSm 2AA2                   __end_of_USBStallHandler 6064  
                    Mdm_DrvMainFn@Options 0001                            _memoryPreamble 03AC  
                   __size_of_Rtcc_LockRtc 0010                                  _ConnWait 03DF  
                                _MdmCntSm 46CE                         ___lmul@multiplier 007D  
                             _INTCON2bits 000FF1                               _INTCON3bits 000FF0  
                  I2cSlv_MainTask@Options 0001                                 copy_data0 22F2  
                               copy_data1 2312                                 copy_data2 2332  
                               copy_data3 236A              __end_of_LedPulseStateMachine 332C  
                  I2cSlv_SendI2cMsg@TxSts 0084               ??_USBCtrlEPAllowStatusStage 007D  
             __end_of_USBStdSetCfgHandler 34F8                            ?i1_GenerateEvt 0019  
                Tmr_TmrBConfig@TmrBConfig 00A0                                  _OsAlarms 0600  
                          ?_Rtcm_MainTask 0001                     OsTmr_StartTimer@Timer 0081  
            LedBlinkStateMachine@LedBlink 008A                                  _ReadByte 6B00  
                           i2_GenerateEvt 69FE                           ??_UartSetConfig 007D  
                             ??_SendSmsSm 009B                        __end_of_device_dsc FE5B  
               __end_of_I2c_InitI2cModule 53EC                                  _MsgReady FE32  
                         ??_Term_MainTask 00A7                              _savePreamble 6940  
                 __end_of_InitializeTasks 545C                initGprsModem@isInitialized 0099  
                 ?_USBCtrlTrfSetupHandler 0001                            isNumberValid@i 0081  
                           _findEmptySpot 4C5E               __end_of_I2cSlv_QueryI2cData 3A18  
                              _ANCON1bits 000F49                                  _RxBuffer 0C58  
                 USBStdGetStatusHandler@p 007E                                  __Hrparam 0000  
                                _TmrBInit 4B32                      __size_of_SetBaudRate 004E  
                            ??_initEeprom 00B0                      ??_saveNumberInMemory 0098  
                            ?_TurnOnModem 0001                            _LowPriorityIsr 0018  
                               memcpy@tmp 0083                      Tmr_TmrBPrSet@Divisor 009C  
                                __Lrparam 0000                    USBTransferOnePacket@ep 0081  
             __end_of_Uart_InitUartModule 0DC8                                  _SmsEvent 00DC  
                         _SetUartBaudRate 296A              i1I2cSlv_SendI2cMsg@SlaveAddr 001E  
                                _Terminal 00D0                                  _SetupPkt 000430  
               I2cSlv_SendI2cMsg@TxBuffer 0080                     SetBaudRate@McuClockHz 009A  
                   ?_USBConfigureEndpoint 007D              OsAlrm_ClearOsAlarm@OsAlarmId 0019  
                           _I2c_WriteData 1EB2                          __size_of___awdiv 0086  
                        __size_of___awmod 0072                  __end_of_UpdateOsCounters 6A9E  
                    __end_of_triggerRelay 63D0                          __size_of___lldiv 0084  
                       Terminal@SlaveAddr 02EE                       OsTmr_Wait@WaitTimer 009B  
                        __size_of___lwdiv 0054                      Tmr_TmrBPrSet@TmrNumb 009B  
                  __end_ofdelCmdFsm@F9013 FC1C                          __size_of___lwmod 0044  
                I2c_WriteData@WritePacket 007E                         Terminal@TermState 02F0  
                             ??_addCmdFsm 00B0                             _UpdateSchFlag 68D4  
                     __end_of_putUSBUSART 67D6                               _line_coding 0383  
                            _Rtcc_LockRtc 6A6E              I2cSlv_QueryI2cData@SlaveAddr 00A8  
                    _LedBlinkStateMachine 26DC               triggerCmdFsm@receivedNumber 0089  
                  __end_of_StartCondition 6B3E                            ??_CDCTxService 0084  
                ??_Pm_DsReleasePinControl 007D                    SendSmsSm@SendSms_State 01EE  
               Rtcm_GetRtccDate@LocalDate 008A                  parseCommand@addNumberCmd 0088  
                         ?_Mdm_GetSmsData 008F                  I2c_WriteData@WriteStatus 0035  
                            _isupper$6688 007E                                strcat@from 007F  
                 I2c_ReadData@DataCounter 0033                            ?_Tmr_TmrBPrSet 0096  
                        __size_of_initFsm 00A8                            ?_waitSetupCall 0001  
                        ??_ModemEvtParser 008F                          _GetOsTickCounter 6A4C  
                        __size_of_isalpha 0030                          __size_of_isdigit 0022  
                 __size_of_USBDeviceTasks 0186                           ___lwdiv@divisor 0085  
                            Terminal@Addr 03B0                  ModemEvtParser@RingString 00A3  
                             ??_WriteByte 007D                          __size_of_isspace 002A  
                         ___lwdiv@counter 0087                                  __ptext10 5EFA  
                                __ptext11 681A                                  __ptext20 66BE  
                                __ptext12 4B32                                  __ptext21 5FDA  
                                __ptext13 6898                           ??_UartWriteByte 007E  
                                __ptext30 6470                                  __ptext22 5D70  
                                __ptext14 2E26                                  __ptext31 6020  
                                __ptext23 5AD8                                  __ptext15 53EC  
                                __ptext40 3412                                  __ptext32 6770  
                                __ptext24 6B2C                                  __ptext16 332C  
                                __ptext41 436E                                  __ptext33 258A  
                                __ptext25 674E                                  __ptext17 6926  
                                __ptext50 2D02                                  __ptext42 2BD4  
                                __ptext34 4CF4                                  __ptext26 6A28  
                                __ptext18 5062                                  __ptext51 3C82  
                                __ptext43 135A                                  __ptext35 5F92  
                                __ptext27 6B32                                  __ptext19 3BB6  
                                __ptext60 00D0                                  __ptext52 4134  
                                __ptext44 580A                                  __ptext36 50F0  
                                __ptext28 1BAA                                  __ptext61 34F8  
                                __ptext53 36C2                                  __ptext45 4420  
                                __ptext37 3058                                  __ptext29 6326  
                                __ptext70 67B4                                  __ptext62 6974  
                                __ptext54 2824                                  __ptext46 54CA  
                                __ptext38 4960                                  __ptext71 60A8  
                                __ptext63 62EA                                  __ptext55 10B6  
                                __ptext47 6064                                  __ptext39 35DE  
                                __ptext80 15EE                                  __ptext72 457C  
                                __ptext64 181C                                  __ptext56 61F4  
                                __ptext48 4A9A                                  __ptext81 5308  
                                __ptext73 60EC                                  __ptext65 698C  
                                __ptext57 58C6                                  __ptext49 5676  
                                __ptext90 55A2                                  __ptext82 517C  
                                __ptext74 4BC8                                  __ptext66 6646  
                                __ptext58 3AE8                                  __ptext91 639A  
                                __ptext83 6A6E                                  __ptext75 41F6  
                                __ptext67 6534                                  __ptext59 6504  
                                __ptext92 4626                                  __ptext84 56DC  
                                __ptext76 379A                                  __ptext68 6792  
                                __ptext93 5E10                                  __ptext85 4D88  
                                __ptext77 67D6                                  __ptext69 64A2  
                                __ptext94 683A                                  __ptext86 69BC  
                                __ptext78 5B2C                                  __ptext95 6940  
                                __ptext87 48C0                                  __ptext79 6A5E  
                                __ptext96 68B6                                  __ptext88 69D2  
                                __ptext97 4E1C                                  __ptext89 5536  
                                __ptext98 481E                                  __ptext99 5DC0  
                        __size_of_isupper 0022                   initEeprom@addressToRead 0100  
                              _I2cDummyTx 68F0                    Tmr_TmrBIrqSet@Priority 007D  
                      __end_of_initEeprom 4FD2                     __end_of_HttpGetMethod 0ABC  
                    delCmdFsm@emptyNumber 0107                  __size_of_InitGprsNetwork 02EE  
                            _SSP2CON2bits 000F71                               ??_delCmdFsm 00B0  
                               isxdigit@c 0082                          __size_of_sprintf 00CE  
                        __size_of_tolower 0018                     __size_of_Tmr_StartTmr 0020  
                        __size_of_toupper 0018                           triggerRelay@res 0085  
                          ?i2_GenerateEvt 0001                                _DSCONHbits 000F4D  
                              strcpy@from 007F                         _Mmd_RingIndicator 0030  
                              _DSCONLbits 000F4C                        i1GenerateEvt@Event 0019  
                       _Mdm_IsSmsReceived 66E2               __size_of_UsbDevice_MainTask 0024  
                           __size_of_atoi 00D8                        TmrBInit@Postscaler 007E  
          __end_of_USBCtrlTrfSetupHandler 517C                             __size_of_main 000C  
                       ?_USBCtrlEPService 0001                             __size_of_itoa 0044  
               Mdm_GetSmsData@MessageText 008F                             __size_of_utoa 00AA  
                     Led_MainTask@Options 0001                             __size_of_xtoi 00E6  
                  ??_I2cSlv_I2cReadMsgSts 0081                            ?_findEmptySpot 0100  
                  __end_of_LowPriorityIsr 00CC                     __end_of_CheckTxStatus 6B14  
                      ?_Mdm_IsSmsReceived 0001                             _Mdm_DrvMainFn 6B2C  
                      ??_USBCtrlEPService 0097                                  _isxdigit 62EA  
                           _Mdm_IsRinging 6706                       _USBCtrlTrfInHandler 4134  
                I2c_ReadData@I2cReadState 0034                __end_of_Mdm_RequestSmsData 6A8E  
                             ??_detectCmd 0095                     __end_of_ScheduleTasks 2F48  
                 __size_of_GetElapsedTime 00C8                             ?_Led_MainTask 0001  
                                _outPipes 01C9                      _USBCtrlTrfOutHandler 5676  
                     Led_SetLedStatus@Led 007E                                  int$flags 0042  
                              strtol@base 008D                            ?_I2c_WriteData 007E  
                                atoi@sign 0087                         ??_I2cSlv_MainTask 00A6  
                         StringCopy@Index 008D                 _USBCtrlEPAllowStatusStage 3C82  
                     ??_Mdm_IsSmsReceived 0081                            _receivedNumber 04CA  
                    __size_of_Term_MainSm 02A4              ScheduleTasks@ActiveTaskIndex 04FB  
                              strtol@sign 0093                           Term_MainSm@Data 0461  
                     delCmdFsm@isComplete 0114                      __size_of_RtccIrqInit 0016  
               __size_of_Uart_WriteString 003E                    ??_USBTransferOnePacket 0081  
                          _isMasterNumber 545C                            ?_UpdateSchFlag 0001  
                  __size_of_StopCondition 0004                     ?_LedBlinkStateMachine 008A  
                    __size_of_Rtcc_RtcIsr 0004                       i1_I2cSlv_SendI2cMsg 6360  
                __end_of_Mcu_ConfigExtInt 6926                             ?_Eeprom_Reset 0001  
                         ?_StartCondition 0001                 _USBDeferStatusStagePacket 00CA  
                CDCTxService@byte_to_send 0085                             ?_Eeprom_Write 008F  
           I2c_WriteData@TentativeCounter 0036                               _OSCTUNEbits 000F9B  
                              _INTCONbits 000FF2                  UartWriteByte@ByteToWrite 007D  
                            _Tmr_StartTmr 681A                  __end_of_Led_SetLedStatus 6594  
                    ?_USBCtrlTrfInHandler 0001                                  memcpy@d1 007D  
                                memcpy@s1 007F                I2cSlv_I2cReadMsgSts@Result 0081  
           USBCtrlTrfTxService@byteToSend 007D                             ?_I2cSetConfig 0001  
                                itoa@base 0097               i1I2cSlv_SendI2cMsg@TxBuffer 001C  
                           ?_I2c_ReadData 0080                             ?_I2cSendMsgSm 0001  
                                isalpha@c 0082                    __size_of_Mcu_SetWdgSts 0012  
                                isdigit@c 007F                                  memset@p1 007D  
                   Eeprom_Read@DataLength 00AB                          ?_USBStallHandler 0001  
                         ??i1_GenerateEvt 001B                          _Rtcm_SetRtccDate 5B2C  
                USBStdFeatureReqHandler@p 0095                          ??_Tmr_TmrBConfig 00A2  
                           ??_ClearBuffer 0081                           _HighPriorityIsr 0008  
                         ??_Rtcm_MainTask 0092                 __end_of_Mdm_IsSmsReceived 6706  
                        ??_Tmr_TmrBIrqSet 007F                  __size_of_secondsAppTimer 00A2  
                                intlevel1 0000                                  intlevel2 0000  
                    parseCommand@resetCmd 0090                      _OsTmr_GetTimerStatus 4FD2  
                               sprintf@ap 0084                                 sprintf@cp 0087  
                               sprintf@sp 007D                         TmrBInit@Prescaler 007D  
                    __size_of_Tmr_Tmr2Isr 0024                    __size_of_USBDeviceInit 0152  
 __end_of_USER_USB_CALLBACK_EVENT_HANDLER 5868  __size_of_USER_USB_CALLBACK_EVENT_HANDLER 005E  
       ??_USER_USB_CALLBACK_EVENT_HANDLER 008F          ?_USER_USB_CALLBACK_EVENT_HANDLER 0089  
         _USER_USB_CALLBACK_EVENT_HANDLER 580A                   Rtcc_SetRtcStatus@Status 007D  
                        ___lwmod@dividend 007D                   __end_of_SetUartBaudRate 2AA2  
                                isspace@c 007F                          ___lldiv@dividend 0089  
                GsmGprsTerminal@UsbBuffer 0800                      ?i1_I2cSlv_SendI2cMsg 001C  
              __size_of_I2c_InitI2cModule 0072                            ?_Mdm_DrvMainFn 0001  
                        ??_CheckAckStatus 007D                           ?_LowPriorityIsr 0001  
                        ?_InitializeTasks 0001                                  isupper@c 007F  
                          ?_Mdm_IsRinging 0001                                _OSCCONbits 000FD3  
               I2cSlv_ReceiveI2cMsg@RxSts 0084                    MyApp_Task@currentState 01D9  
          __size_of_Uart_WriteConstString 0044                   ModemEvtParser@SmsString 009E  
                          ??_Led_MainTask 009A             __end_of_Uart_WriteConstString 6174  
                           OsTmr_Wait@Ret 00A1                         OsTmr_Wait@DelayMs 009D  
                 __size_of_InitSchedTimer 002E                    ??_USBConfigureEndpoint 007E  
                   ?_USBCtrlTrfOutHandler 0001               __size_of_UartTxBufferStatus 004E  
                         _GetCallerNumber 63D0                  __end_of_Rtcm_GetRtccDate 5742  
                             _putUSBUSART 67B4                 Eeprom_Write@CommandLength 0095  
                     _USBCtrlTrfRxService 2D02                    __end_of_isMasterNumber 54CA  
                        ??_ConfigureModem 00A2                    Rtcc_SetRtccValue@Value 0085  
                      _USBWakeFromSuspend 6326                             ?_getSetupCall 0001  
                 _USBStdFeatureReqHandler 135A                  __end_of_OsTmr_StartTimer 58C6  
                    _LedPulseStateMachine 3244                        _USBCheckCDCRequest 4420  
                     _USBCtrlTrfTxService 36C2                       RtccIrqInit@Priority 007D  
                                utoa@base 008E                            ??_Eeprom_Reset 0085  
                              _RTCCFGbits 000F3F               __size_of_Uart_ClearRxBuffer 0034  
                           _isMemoryEmpty 01FE                            ??_Eeprom_Write 0092  
                        _Rtcc_AlarmConfig 5536                           ??_Tmr_TmrBPrSet 009A  
                         ??_waitSetupCall 0093                                  sprintf@c 0086  
                                sprintf@f 007F                                  tolower@c 007D  
                                strcat@cp 0081                                  strcat@to 007D  
                     ?_USBWakeFromSuspend 0001           __size_of_Pm_DsReleasePinControl 0006  
                        ___lldiv@quotient 0091                InitGprsNetwork@GprsInitSts 01FF  
                         ___lwmod@divisor 007F               GsmGprsTerminal@FirstRecFlag 01DB  
                   ??_USBCtrlTrfInHandler 007E                                  strcpy@cp 0081  
                                strlen@cp 0081                                  strcpy@to 007D  
               UsbDevice_MainTask@Options 0001                     _USBAlternateInterface 02F1  
                         ___lwmod@counter 0081                             ?_Mdm_MainTask 0001  
                          ??_I2cSetConfig 007D            __size_of_Irq_InitIntController 002A  
                                toupper@c 007D           SetUartBaudRate@BaudRateRegister 009A  
                     ?_USBCheckCDCRequest 0001                          _MdmHttp_MainTask 5FDA  
                  __size_of_isNumberValid 0066                            ??_I2c_ReadData 0082  
                          ??_I2cSendMsgSm 0084             __end_of_Irq_InitIntController 6646  
                   ReceiveEvt@EventStatus 0080              ?_Tmr_RegisterTmr2IsrCallback 007D  
                 delCmdFsm@numberInMemory 0115                       USBEnableEndpoint@ep 0088  
                         _endpoint_number 00CB                                _WDTCONbits 000FC0  
                             ?_I2cDummyTx 0001                                  xtoi@sign 0087  
                  _NewMdmEvtParserRequest 003B       Uart_MdmGsmGprsReadService@RxCounter 0023  
                    ?_USBCtrlTrfRxService 0001                           ??i2_GenerateEvt 0003  
            __size_of_Led_SetLedBlinkTime 0054                             ?_getsUSBUSART 0084  
                           ??_Eeprom_Read 00AC                  UartTxBufferStatus@Module 007E  
                   ?_OsTmr_GetTimerStatus 0095             SetUartBaudRate@DivisionFactor 009C  
          I2cSlv_ReceiveI2cMsg@DataLenght 0083                             ??_GenerateEvt 007F  
                         _LedStateMachine 4776          Uart_MdmGsmGprsReadService@Module 0001  
                         TmrBInit@TmrNumb 0080                  ?_USBCtrlEPAllowDataStage 0001  
                    ?_USBCtrlTrfTxService 0001              ??_Uart_MdmGsmGprsReadService 0005  
                         ??_findEmptySpot 00B0                             _StopCondition 6B36  
                   ??i1_I2cSlv_SendI2cMsg 0020                         ?_isNumberInMemory 0100  
                  Led_SetLedStatus@LedSts 007D              _USBStatusStageTimeoutCounter 0029  
                        Mdm_IsRinging@Ret 0081                    __size_of_triggerCmdFsm 006C  
                    ??_USBWakeFromSuspend 0091                USBTransferOnePacket@handle 0082  
                       ??_InitGprsNetwork 009E                       __end_of_ClearBuffer 643C  
                    __end_of_CDCTxService 296A                        ??_isNumberInMemory 00B0  
                    ??_USBCheckCDCRequest 007D                   __size_of_EnableReceiver 0004  
                              _USB_CD_Ptr FC2E                     __size_of_triggerRelay 0036  
                   Eeprom_Read@ReadBuffer 00A9                           ??_I2c_WriteData 0080  
                 ConfigureModem@NextState 01F0                   _UsbMasterPhoneNumberLen 0318  
                           ?_Mcu_ClearWdg 0001                             _Mcu_SetWdgSts 6A28  
