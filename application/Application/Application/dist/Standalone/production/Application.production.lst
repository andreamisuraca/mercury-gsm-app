

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sun Mar 13 15:43:02 2022

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F46J50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK3,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK4,global,class=CODE,delta=1,noexec
     9                           	psect	idataBANK5,global,class=CODE,delta=1,noexec
    10                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
    11                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    12                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    19                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    21                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    22                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    23                           	psect	dataBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    24                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    25                           	psect	bssBANK7,global,class=BANK7,space=1,delta=1,lowdata,noexec
    26                           	psect	bssBANK8,global,class=BANK8,space=1,delta=1,lowdata,noexec
    27                           	psect	bssBANK9,global,class=BANK9,space=1,delta=1,lowdata,noexec
    28                           	psect	bssBIGRAMl,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    29                           	psect	cstackBANK10,global,class=BANK10,space=1,delta=1,noexec
    30                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    31                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    32                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    33                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    34                           	psect	text0,global,reloc=2,class=CODE,delta=1
    35                           	psect	text1,global,reloc=2,class=CODE,delta=1
    36                           	psect	text2,global,reloc=2,class=CODE,delta=1
    37                           	psect	text3,global,reloc=2,class=CODE,delta=1
    38                           	psect	text4,global,reloc=2,class=CODE,delta=1
    39                           	psect	text5,global,reloc=2,class=CODE,delta=1
    40                           	psect	text6,global,reloc=2,class=CODE,delta=1
    41                           	psect	text7,global,reloc=2,class=CODE,delta=1
    42                           	psect	text8,global,reloc=2,class=CODE,delta=1
    43                           	psect	text9,global,reloc=2,class=CODE,delta=1
    44                           	psect	text10,global,reloc=2,class=CODE,delta=1
    45                           	psect	text11,global,reloc=2,class=CODE,delta=1
    46                           	psect	text12,global,reloc=2,class=CODE,delta=1
    47                           	psect	text13,global,reloc=2,class=CODE,delta=1
    48                           	psect	text14,global,reloc=2,class=CODE,delta=1
    49                           	psect	text15,global,reloc=2,class=CODE,delta=1
    50                           	psect	text16,global,reloc=2,class=CODE,delta=1
    51                           	psect	text17,global,reloc=2,class=CODE,delta=1
    52                           	psect	text18,global,reloc=2,class=CODE,delta=1
    53                           	psect	text19,global,reloc=2,class=CODE,delta=1
    54                           	psect	text20,global,reloc=2,class=CODE,delta=1
    55                           	psect	text21,global,reloc=2,class=CODE,delta=1
    56                           	psect	text22,global,reloc=2,class=CODE,delta=1
    57                           	psect	text23,global,reloc=2,class=CODE,delta=1
    58                           	psect	text24,global,reloc=2,class=CODE,delta=1
    59                           	psect	text25,global,reloc=2,class=CODE,delta=1
    60                           	psect	text26,global,reloc=2,class=CODE,delta=1
    61                           	psect	text27,global,reloc=2,class=CODE,delta=1
    62                           	psect	text28,global,reloc=2,class=CODE,delta=1
    63                           	psect	text29,global,reloc=2,class=CODE,delta=1
    64                           	psect	text30,global,reloc=2,class=CODE,delta=1
    65                           	psect	text31,global,reloc=2,class=CODE,delta=1
    66                           	psect	text32,global,reloc=2,class=CODE,delta=1
    67                           	psect	text33,global,reloc=2,class=CODE,delta=1
    68                           	psect	text34,global,reloc=2,class=CODE,delta=1
    69                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    70                           	psect	text36,global,reloc=2,class=CODE,delta=1
    71                           	psect	text37,global,reloc=2,class=CODE,delta=1
    72                           	psect	text38,global,reloc=2,class=CODE,delta=1
    73                           	psect	text39,global,reloc=2,class=CODE,delta=1
    74                           	psect	text40,global,reloc=2,class=CODE,delta=1
    75                           	psect	text41,global,reloc=2,class=CODE,delta=1
    76                           	psect	text42,global,reloc=2,class=CODE,delta=1
    77                           	psect	text43,global,reloc=2,class=CODE,delta=1
    78                           	psect	text44,global,reloc=2,class=CODE,delta=1
    79                           	psect	text45,global,reloc=2,class=CODE,delta=1
    80                           	psect	text46,global,reloc=2,class=CODE,delta=1
    81                           	psect	text47,global,reloc=2,class=CODE,delta=1
    82                           	psect	text48,global,reloc=2,class=CODE,delta=1
    83                           	psect	text49,global,reloc=2,class=CODE,delta=1
    84                           	psect	text50,global,reloc=2,class=CODE,delta=1
    85                           	psect	text51,global,reloc=2,class=CODE,delta=1
    86                           	psect	text52,global,reloc=2,class=CODE,delta=1
    87                           	psect	text53,global,reloc=2,class=CODE,delta=1
    88                           	psect	text54,global,reloc=2,class=CODE,delta=1
    89                           	psect	text55,global,reloc=2,class=CODE,delta=1
    90                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=1
    91                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    92                           	psect	text58,global,reloc=2,class=CODE,delta=1
    93                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    94                           	psect	text60,global,reloc=2,class=CODE,delta=1
    95                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=1
    96                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=1
    97                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=1
    98                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=1
    99                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=1
   100                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=1
   101                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=1
   102                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=1
   103                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=1
   104                           	psect	text70,global,reloc=2,class=CODE,delta=1
   105                           	psect	text71,global,reloc=2,class=CODE,delta=1,group=1
   106                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=1
   107                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=1
   108                           	psect	text74,global,reloc=2,class=CODE,delta=1
   109                           	psect	text75,global,reloc=2,class=CODE,delta=1
   110                           	psect	text76,global,reloc=2,class=CODE,delta=1,group=1
   111                           	psect	text77,global,reloc=2,class=CODE,delta=1,group=1
   112                           	psect	text78,global,reloc=2,class=CODE,delta=1
   113                           	psect	text79,global,reloc=2,class=CODE,delta=1
   114                           	psect	text80,global,reloc=2,class=CODE,delta=1
   115                           	psect	text81,global,reloc=2,class=CODE,delta=1
   116                           	psect	text82,global,reloc=2,class=CODE,delta=1
   117                           	psect	text83,global,reloc=2,class=CODE,delta=1
   118                           	psect	text84,global,reloc=2,class=CODE,delta=1
   119                           	psect	text85,global,reloc=2,class=CODE,delta=1,group=1
   120                           	psect	text86,global,reloc=2,class=CODE,delta=1,group=1
   121                           	psect	text87,global,reloc=2,class=CODE,delta=1
   122                           	psect	text88,global,reloc=2,class=CODE,delta=1
   123                           	psect	text89,global,reloc=2,class=CODE,delta=1
   124                           	psect	text90,global,reloc=2,class=CODE,delta=1
   125                           	psect	text91,global,reloc=2,class=CODE,delta=1
   126                           	psect	text92,global,reloc=2,class=CODE,delta=1
   127                           	psect	text93,global,reloc=2,class=CODE,delta=1
   128                           	psect	text94,global,reloc=2,class=CODE,delta=1
   129                           	psect	text95,global,reloc=2,class=CODE,delta=1
   130                           	psect	text96,global,reloc=2,class=CODE,delta=1
   131                           	psect	text97,global,reloc=2,class=CODE,delta=1
   132                           	psect	text98,global,reloc=2,class=CODE,delta=1
   133                           	psect	text99,global,reloc=2,class=CODE,delta=1
   134                           	psect	text100,global,reloc=2,class=CODE,delta=1
   135                           	psect	text101,global,reloc=2,class=CODE,delta=1
   136                           	psect	text102,global,reloc=2,class=CODE,delta=1
   137                           	psect	text103,global,reloc=2,class=CODE,delta=1
   138                           	psect	text104,global,reloc=2,class=CODE,delta=1
   139                           	psect	text105,global,reloc=2,class=CODE,delta=1
   140                           	psect	text106,global,reloc=2,class=CODE,delta=1
   141                           	psect	text107,global,reloc=2,class=CODE,delta=1
   142                           	psect	text108,global,reloc=2,class=CODE,delta=1
   143                           	psect	text109,global,reloc=2,class=CODE,delta=1
   144                           	psect	text110,global,reloc=2,class=CODE,delta=1
   145                           	psect	text111,global,reloc=2,class=CODE,delta=1
   146                           	psect	text112,global,reloc=2,class=CODE,delta=1
   147                           	psect	text113,global,reloc=2,class=CODE,delta=1,group=1
   148                           	psect	text114,global,reloc=2,class=CODE,delta=1
   149                           	psect	text115,global,reloc=2,class=CODE,delta=1
   150                           	psect	text116,global,reloc=2,class=CODE,delta=1
   151                           	psect	text117,global,reloc=2,class=CODE,delta=1
   152                           	psect	text118,global,reloc=2,class=CODE,delta=1
   153                           	psect	text119,global,reloc=2,class=CODE,delta=1
   154                           	psect	text120,global,reloc=2,class=CODE,delta=1
   155                           	psect	text121,global,reloc=2,class=CODE,delta=1
   156                           	psect	text122,global,reloc=2,class=CODE,delta=1
   157                           	psect	text123,global,reloc=2,class=CODE,delta=1
   158                           	psect	text124,global,reloc=2,class=CODE,delta=1
   159                           	psect	text125,global,reloc=2,class=CODE,delta=1
   160                           	psect	text126,global,reloc=2,class=CODE,delta=1
   161                           	psect	text127,global,reloc=2,class=CODE,delta=1
   162                           	psect	text128,global,reloc=2,class=CODE,delta=1
   163                           	psect	text129,global,reloc=2,class=CODE,delta=1
   164                           	psect	text130,global,reloc=2,class=CODE,delta=1
   165                           	psect	text131,global,reloc=2,class=CODE,delta=1
   166                           	psect	text132,global,reloc=2,class=CODE,delta=1
   167                           	psect	text133,global,reloc=2,class=CODE,delta=1
   168                           	psect	text134,global,reloc=2,class=CODE,delta=1,group=1
   169                           	psect	text135,global,reloc=2,class=CODE,delta=1
   170                           	psect	text136,global,reloc=2,class=CODE,delta=1,group=1
   171                           	psect	text137,global,reloc=2,class=CODE,delta=1
   172                           	psect	text138,global,reloc=2,class=CODE,delta=1
   173                           	psect	text139,global,reloc=2,class=CODE,delta=1,group=1
   174                           	psect	text140,global,reloc=2,class=CODE,delta=1
   175                           	psect	text141,global,reloc=2,class=CODE,delta=1
   176                           	psect	text142,global,reloc=2,class=CODE,delta=1
   177                           	psect	text143,global,reloc=2,class=CODE,delta=1
   178                           	psect	text144,global,reloc=2,class=CODE,delta=1
   179                           	psect	text145,global,reloc=2,class=CODE,delta=1
   180                           	psect	text146,global,reloc=2,class=CODE,delta=1
   181                           	psect	text147,global,reloc=2,class=CODE,delta=1
   182                           	psect	text148,global,reloc=2,class=CODE,delta=1
   183                           	psect	text149,global,reloc=2,class=CODE,delta=1
   184                           	psect	text150,global,reloc=2,class=CODE,delta=1
   185                           	psect	text151,global,reloc=2,class=CODE,delta=1
   186                           	psect	text152,global,reloc=2,class=CODE,delta=1
   187                           	psect	text153,global,reloc=2,class=CODE,delta=1
   188                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
   189                           	psect	text155,global,reloc=2,class=CODE,delta=1
   190                           	psect	text156,global,reloc=2,class=CODE,delta=1
   191                           	psect	text157,global,reloc=2,class=CODE,delta=1
   192                           	psect	text158,global,reloc=2,class=CODE,delta=1
   193                           	psect	text159,global,reloc=2,class=CODE,delta=1
   194                           	psect	text160,global,reloc=2,class=CODE,delta=1
   195                           	psect	text161,global,reloc=2,class=CODE,delta=1
   196                           	psect	text162,global,reloc=2,class=CODE,delta=1
   197                           	psect	text163,global,reloc=2,class=CODE,delta=1
   198                           	psect	text164,global,reloc=2,class=CODE,delta=1
   199                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   200                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   201                           	psect	text166,global,reloc=2,class=CODE,delta=1
   202                           	psect	text167,global,reloc=2,class=CODE,delta=1
   203                           	psect	text168,global,reloc=2,class=CODE,delta=1
   204                           	psect	text169,global,reloc=2,class=CODE,delta=1
   205                           	psect	text170,global,reloc=2,class=CODE,delta=1
   206                           	psect	text171,global,reloc=2,class=CODE,delta=1
   207                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   208                           	psect	text172,global,reloc=2,class=CODE,delta=1
   209                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   210                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   211                           	dabs	1,0x400,48,_BDT
   212                           	dabs	1,0x438,8,_CtrlTrfData
   213                           	dabs	1,0x430,8,_SetupPkt
   214  0000                     
   215                           ; Version 1.45
   216                           ; Generated 16/11/2017 GMT
   217                           ; 
   218                           ; Copyright © 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   219                           ; All rights reserved.
   220                           ; 
   221                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   222                           ; 
   223                           ; Redistribution and use in source and binary forms, with or without modification, are
   224                           ; permitted provided that the following conditions are met:
   225                           ; 
   226                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   227                           ;        conditions and the following disclaimer.
   228                           ; 
   229                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   230                           ;        of conditions and the following disclaimer in the documentation and/or other
   231                           ;        materials provided with the distribution.
   232                           ; 
   233                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   234                           ;        software without specific prior written permission.
   235                           ; 
   236                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   237                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   238                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   239                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   240                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   241                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   242                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   243                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   244                           ; 
   245                           ; 
   246                           ; Code-generator required, PIC18F46J50 Definitions
   247                           ; 
   248                           ; SFR Addresses
   249  0000                     
   250                           	psect	idataBANK1
   251  005FDE                     __pidataBANK1:
   252                           	opt stack 0
   253                           
   254                           ;initializer for MyApp_Task@countRelay1
   255  005FDE  01                 	db	1
   256                           
   257                           ;initializer for InitGprsNetwork@GprsInitSts
   258  005FDF  01                 	db	1
   259                           
   260                           	psect	idataBANK2
   261  005F62                     __pidataBANK2:
   262                           	opt stack 0
   263                           
   264                           ;initializer for Terminal@EchoOption
   265  005F62  01                 	db	1
   266                           
   267                           ;initializer for _MainSystemTimebaseFlag
   268  005F63  01                 	db	1
   269                           
   270                           ;initializer for _ConnTimeout
   271  005F64  00                 	db	0
   272  005F65  01                 	db	1
   273  005F66  0000               	dw	0
   274  005F68  0000               	dw	0
   275  005F6A  0000               	dw	0
   276  005F6C  0000               	dw	0
   277  005F6E  00                 	db	0
   278                           
   279                           	psect	idataBANK3
   280  0056FC                     __pidataBANK3:
   281                           	opt stack 0
   282                           
   283                           ;initializer for ModemEvtParser@F9088
   284  0056FC  2B                 	db	43
   285  0056FD  43                 	db	67
   286  0056FE  4D                 	db	77
   287  0056FF  54                 	db	84
   288  005700  49                 	db	73
   289                           
   290                           ;initializer for ModemEvtParser@F9086
   291  005701  52                 	db	82
   292  005702  49                 	db	73
   293  005703  4E                 	db	78
   294  005704  47                 	db	71
   295                           
   296                           ;initializer for MyApp_Task@F8993
   297  005705  50                 	db	80
   298  005706  01                 	db	1
   299                           
   300                           ;initializer for MyApp_Task@F8990
   301  005707  50                 	db	80
   302  005708  00                 	db	0
   303                           
   304                           ;initializer for MyApp_Task@countRelay2
   305  005709  0001               	dw	1
   306                           
   307                           ;initializer for triggerRelay@F8966
   308  00570B  50                 	db	80
   309  00570C  00                 	db	0
   310                           
   311                           ;initializer for Term_MainSm@TermDelay
   312  00570D  01                 	db	1
   313  00570E  01                 	db	1
   314  00570F  0000               	dw	0
   315  005711  0000               	dw	0
   316  005713  0000               	dw	0
   317  005715  0000               	dw	0
   318  005717  00                 	db	0
   319                           
   320                           ;initializer for _ConnWait
   321  005718  00                 	db	0
   322  005719  01                 	db	1
   323  00571A  0000               	dw	0
   324  00571C  0000               	dw	0
   325  00571E  0000               	dw	0
   326  005720  0000               	dw	0
   327  005722  00                 	db	0
   328                           
   329                           ;initializer for SendSmsSm@SwTimer
   330  005723  01                 	db	1
   331  005724  01                 	db	1
   332  005725  0000               	dw	0
   333  005727  0000               	dw	0
   334  005729  0000               	dw	0
   335  00572B  0000               	dw	0
   336  00572D  00                 	db	0
   337                           
   338                           ;initializer for CheckModem@Timeout
   339  00572E  00                 	db	0
   340  00572F  01                 	db	1
   341  005730  0000               	dw	0
   342  005732  0000               	dw	0
   343  005734  0000               	dw	0
   344  005736  0000               	dw	0
   345  005738  00                 	db	0
   346                           
   347                           ;initializer for MyApp_Task@blickTicks
   348  005739  FFFF               	dw	65535
   349                           
   350                           	psect	idataBANK4
   351  005EB8                     __pidataBANK4:
   352                           	opt stack 0
   353                           
   354                           ;initializer for MyApp_Task@F8999
   355  005EB8  33                 	db	51
   356  005EB9  32                 	db	50
   357  005EBA  30                 	db	48
   358  005EBB  30                 	db	48
   359  005EBC  32                 	db	50
   360  005EBD  37                 	db	55
   361  005EBE  36                 	db	54
   362  005EBF  33                 	db	51
   363  005EC0  31                 	db	49
   364  005EC1  38                 	db	56
   365                           
   366                           ;initializer for ModemEvtParser@F9090
   367  005EC2  43                 	db	67
   368  005EC3  61                 	db	97
   369  005EC4  6C                 	db	108
   370  005EC5  6C                 	db	108
   371  005EC6  20                 	db	32
   372  005EC7  52                 	db	82
   373  005EC8  65                 	db	101
   374  005EC9  61                 	db	97
   375  005ECA  64                 	db	100
   376  005ECB  79                 	db	121
   377                           
   378                           	psect	idataBANK5
   379  00527C                     __pidataBANK5:
   380                           	opt stack 0
   381                           
   382                           ;initializer for _TaskTable
   383  00527C  BC                 	db	low _Mdm_DrvMainFn
   384  00527D  5F                 	db	high _Mdm_DrvMainFn
   385  00527E  00                 	db	0
   386  00527F  0000               	dw	0
   387  005281  000A               	dw	10
   388  005283  00                 	db	0
   389  005284  DA                 	db	low _I2cSlv_MainTask
   390  005285  50                 	db	high _I2cSlv_MainTask
   391  005286  00                 	db	0
   392  005287  0000               	dw	0
   393  005289  0001               	dw	1
   394  00528B  00                 	db	0
   395  00528C  CC                 	db	low _Mdm_MainTask
   396  00528D  52                 	db	high _Mdm_MainTask
   397  00528E  00                 	db	0
   398  00528F  0000               	dw	0
   399  005291  0001               	dw	1
   400  005293  00                 	db	0
   401  005294  9C                 	db	low _MdmHttp_MainTask
   402  005295  54                 	db	high _MdmHttp_MainTask
   403  005296  00                 	db	0
   404  005297  0000               	dw	0
   405  005299  0001               	dw	1
   406  00529B  00                 	db	0
   407  00529C  D4                 	db	low _UsbDevice_MainTask
   408  00529D  5B                 	db	high _UsbDevice_MainTask
   409  00529E  00                 	db	0
   410  00529F  0000               	dw	0
   411  0052A1  0001               	dw	1
   412  0052A3  00                 	db	0
   413  0052A4  64                 	db	low _Wdg_MainTask
   414  0052A5  5C                 	db	high _Wdg_MainTask
   415  0052A6  00                 	db	0
   416  0052A7  0000               	dw	0
   417  0052A9  0064               	dw	100
   418  0052AB  00                 	db	0
   419  0052AC  7A                 	db	low _Led_MainTask
   420  0052AD  36                 	db	high _Led_MainTask
   421  0052AE  00                 	db	0
   422  0052AF  0000               	dw	0
   423  0052B1  0032               	dw	50
   424  0052B3  00                 	db	0
   425  0052B4  62                 	db	low _Rtcm_MainTask
   426  0052B5  48                 	db	high _Rtcm_MainTask
   427  0052B6  00                 	db	0
   428  0052B7  0000               	dw	0
   429  0052B9  0064               	dw	100
   430  0052BB  00                 	db	0
   431  0052BC  FE                 	db	low _Term_MainTask
   432  0052BD  5D                 	db	high _Term_MainTask
   433  0052BE  00                 	db	0
   434  0052BF  0000               	dw	0
   435  0052C1  0001               	dw	1
   436  0052C3  00                 	db	0
   437  0052C4  42                 	db	low _MyApp_Task
   438  0052C5  3E                 	db	high _MyApp_Task
   439  0052C6  00                 	db	0
   440  0052C7  0000               	dw	0
   441  0052C9  0064               	dw	100
   442  0052CB  00                 	db	0
   443                           
   444                           	psect	mediumconst
   445  00FC54                     __pmediumconst:
   446                           	opt stack 0
   447  00FC54  00                 	db	0
   448  00FC55                     _USB_SD_Ptr:
   449                           	opt stack 0
   450  00FC55  88                 	db	low _sd000
   451  00FC56  FE                 	db	high _sd000
   452  00FC57  41                 	db	low _sd001
   453  00FC58  FE                 	db	high _sd001
   454  00FC59  1B                 	db	low _sd002
   455  00FC5A  FE                 	db	high _sd002
   456  00FC5B                     __end_of_USB_SD_Ptr:
   457                           	opt stack 0
   458  00FC5B                     _USB_CD_Ptr:
   459                           	opt stack 0
   460  00FC5B  D8                 	db	low _configDescriptor1
   461  00FC5C  FD                 	db	high _configDescriptor1
   462  00FC5D                     __end_of_USB_CD_Ptr:
   463                           	opt stack 0
   464  00FC5D                     _TaskNumber:
   465                           	opt stack 0
   466  00FC5D  000A               	dw	10
   467  00FC5F                     __end_of_TaskNumber:
   468                           	opt stack 0
   469  00FC5F                     _MsgFormat:
   470                           	opt stack 0
   471  00FC5F  48                 	db	72
   472  00FC60  6F                 	db	111
   473  00FC61  73                 	db	115
   474  00FC62  74                 	db	116
   475  00FC63  20                 	db	32
   476  00FC64  6D                 	db	109
   477  00FC65  65                 	db	101
   478  00FC66  73                 	db	115
   479  00FC67  73                 	db	115
   480  00FC68  61                 	db	97
   481  00FC69  67                 	db	103
   482  00FC6A  65                 	db	101
   483  00FC6B  20                 	db	32
   484  00FC6C  66                 	db	102
   485  00FC6D  6F                 	db	111
   486  00FC6E  72                 	db	114
   487  00FC6F  6D                 	db	109
   488  00FC70  61                 	db	97
   489  00FC71  74                 	db	116
   490  00FC72  3A                 	db	58
   491  00FC73  20                 	db	32
   492  00FC74  0D                 	db	13
   493  00FC75  0A                 	db	10
   494  00FC76  5B                 	db	91
   495  00FC77  6F                 	db	111
   496  00FC78  70                 	db	112
   497  00FC79  5F                 	db	95
   498  00FC7A  74                 	db	116
   499  00FC7B  79                 	db	121
   500  00FC7C  70                 	db	112
   501  00FC7D  65                 	db	101
   502  00FC7E  5D                 	db	93
   503  00FC7F  3A                 	db	58
   504  00FC80  5B                 	db	91
   505  00FC81  6F                 	db	111
   506  00FC82  70                 	db	112
   507  00FC83  5D                 	db	93
   508  00FC84  3A                 	db	58
   509  00FC85  5B                 	db	91
   510  00FC86  6C                 	db	108
   511  00FC87  65                 	db	101
   512  00FC88  6E                 	db	110
   513  00FC89  5D                 	db	93
   514  00FC8A  3A                 	db	58
   515  00FC8B  5B                 	db	91
   516  00FC8C  61                 	db	97
   517  00FC8D  64                 	db	100
   518  00FC8E  64                 	db	100
   519  00FC8F  72                 	db	114
   520  00FC90  5D                 	db	93
   521  00FC91  3A                 	db	58
   522  00FC92  5B                 	db	91
   523  00FC93  70                 	db	112
   524  00FC94  61                 	db	97
   525  00FC95  79                 	db	121
   526  00FC96  6C                 	db	108
   527  00FC97  6F                 	db	111
   528  00FC98  61                 	db	97
   529  00FC99  64                 	db	100
   530  00FC9A  5D                 	db	93
   531  00FC9B  0D                 	db	13
   532  00FC9C  0A                 	db	10
   533  00FC9D  0D                 	db	13
   534  00FC9E  0A                 	db	10
   535  00FC9F  5B                 	db	91
   536  00FCA0  6F                 	db	111
   537  00FCA1  70                 	db	112
   538  00FCA2  5F                 	db	95
   539  00FCA3  74                 	db	116
   540  00FCA4  79                 	db	121
   541  00FCA5  70                 	db	112
   542  00FCA6  65                 	db	101
   543  00FCA7  5D                 	db	93
   544  00FCA8  20                 	db	32
   545  00FCA9  3D                 	db	61
   546  00FCAA  20                 	db	32
   547  00FCAB  53                 	db	83
   548  00FCAC  4F                 	db	79
   549  00FCAD  2C                 	db	44
   550  00FCAE  53                 	db	83
   551  00FCAF  42                 	db	66
   552  00FCB0  0D                 	db	13
   553  00FCB1  0A                 	db	10
   554  00FCB2  5B                 	db	91
   555  00FCB3  6F                 	db	111
   556  00FCB4  70                 	db	112
   557  00FCB5  5D                 	db	93
   558  00FCB6  20                 	db	32
   559  00FCB7  3D                 	db	61
   560  00FCB8  20                 	db	32
   561  00FCB9  52                 	db	82
   562  00FCBA  3A                 	db	58
   563  00FCBB  20                 	db	32
   564  00FCBC  72                 	db	114
   565  00FCBD  65                 	db	101
   566  00FCBE  61                 	db	97
   567  00FCBF  64                 	db	100
   568  00FCC0  2C                 	db	44
   569  00FCC1  57                 	db	87
   570  00FCC2  3A                 	db	58
   571  00FCC3  20                 	db	32
   572  00FCC4  77                 	db	119
   573  00FCC5  72                 	db	114
   574  00FCC6  69                 	db	105
   575  00FCC7  74                 	db	116
   576  00FCC8  65                 	db	101
   577  00FCC9  0D                 	db	13
   578  00FCCA  0A                 	db	10
   579  00FCCB  5B                 	db	91
   580  00FCCC  6C                 	db	108
   581  00FCCD  65                 	db	101
   582  00FCCE  6E                 	db	110
   583  00FCCF  5D                 	db	93
   584  00FCD0  20                 	db	32
   585  00FCD1  3D                 	db	61
   586  00FCD2  20                 	db	32
   587  00FCD3  32                 	db	50
   588  00FCD4  20                 	db	32
   589  00FCD5  62                 	db	98
   590  00FCD6  79                 	db	121
   591  00FCD7  74                 	db	116
   592  00FCD8  65                 	db	101
   593  00FCD9  20                 	db	32
   594  00FCDA  41                 	db	65
   595  00FCDB  53                 	db	83
   596  00FCDC  43                 	db	67
   597  00FCDD  49                 	db	73
   598  00FCDE  49                 	db	73
   599  00FCDF  0D                 	db	13
   600  00FCE0  0A                 	db	10
   601  00FCE1  5B                 	db	91
   602  00FCE2  61                 	db	97
   603  00FCE3  64                 	db	100
   604  00FCE4  64                 	db	100
   605  00FCE5  72                 	db	114
   606  00FCE6  5D                 	db	93
   607  00FCE7  20                 	db	32
   608  00FCE8  3D                 	db	61
   609  00FCE9  20                 	db	32
   610  00FCEA  32                 	db	50
   611  00FCEB  20                 	db	32
   612  00FCEC  62                 	db	98
   613  00FCED  79                 	db	121
   614  00FCEE  74                 	db	116
   615  00FCEF  65                 	db	101
   616  00FCF0  20                 	db	32
   617  00FCF1  41                 	db	65
   618  00FCF2  53                 	db	83
   619  00FCF3  43                 	db	67
   620  00FCF4  49                 	db	73
   621  00FCF5  49                 	db	73
   622  00FCF6  0D                 	db	13
   623  00FCF7  0A                 	db	10
   624  00FCF8  5B                 	db	91
   625  00FCF9  70                 	db	112
   626  00FCFA  61                 	db	97
   627  00FCFB  79                 	db	121
   628  00FCFC  6C                 	db	108
   629  00FCFD  6F                 	db	111
   630  00FCFE  61                 	db	97
   631  00FCFF  64                 	db	100
   632  00FD00  5D                 	db	93
   633  00FD01  20                 	db	32
   634  00FD02  3D                 	db	61
   635  00FD03  20                 	db	32
   636  00FD04  6D                 	db	109
   637  00FD05  61                 	db	97
   638  00FD06  78                 	db	120
   639  00FD07  20                 	db	32
   640  00FD08  32                 	db	50
   641  00FD09  30                 	db	48
   642  00FD0A  20                 	db	32
   643  00FD0B  62                 	db	98
   644  00FD0C  79                 	db	121
   645  00FD0D  74                 	db	116
   646  00FD0E  65                 	db	101
   647  00FD0F  20                 	db	32
   648  00FD10  41                 	db	65
   649  00FD11  53                 	db	83
   650  00FD12  43                 	db	67
   651  00FD13  49                 	db	73
   652  00FD14  49                 	db	73
   653  00FD15  0D                 	db	13
   654  00FD16  0A                 	db	10
   655  00FD17  0D                 	db	13
   656  00FD18  0A                 	db	10
   657  00FD19  54                 	db	84
   658  00FD1A  65                 	db	101
   659  00FD1B  72                 	db	114
   660  00FD1C  6D                 	db	109
   661  00FD1D  69                 	db	105
   662  00FD1E  6E                 	db	110
   663  00FD1F  61                 	db	97
   664  00FD20  6C                 	db	108
   665  00FD21  20                 	db	32
   666  00FD22  4D                 	db	77
   667  00FD23  6F                 	db	111
   668  00FD24  64                 	db	100
   669  00FD25  65                 	db	101
   670  00FD26  3A                 	db	58
   671  00FD27  20                 	db	32
   672  00FD28  43                 	db	67
   673  00FD29  4F                 	db	79
   674  00FD2A  4D                 	db	77
   675  00FD2B  4D                 	db	77
   676  00FD2C  41                 	db	65
   677  00FD2D  4E                 	db	78
   678  00FD2E  44                 	db	68
   679  00FD2F  20                 	db	32
   680  00FD30  4D                 	db	77
   681  00FD31  4F                 	db	79
   682  00FD32  44                 	db	68
   683  00FD33  45                 	db	69
   684  00FD34  0D                 	db	13
   685  00FD35  0A                 	db	10
   686  00FD36  4D                 	db	77
   687  00FD37  6F                 	db	111
   688  00FD38  64                 	db	100
   689  00FD39  65                 	db	101
   690  00FD3A  6D                 	db	109
   691  00FD3B  20                 	db	32
   692  00FD3C  54                 	db	84
   693  00FD3D  79                 	db	121
   694  00FD3E  70                 	db	112
   695  00FD3F  65                 	db	101
   696  00FD40  3A                 	db	58
   697  00FD41  20                 	db	32
   698  00FD42  47                 	db	71
   699  00FD43  53                 	db	83
   700  00FD44  4D                 	db	77
   701  00FD45  2F                 	db	47
   702  00FD46  47                 	db	71
   703  00FD47  50                 	db	80
   704  00FD48  52                 	db	82
   705  00FD49  53                 	db	83
   706  00FD4A  0D                 	db	13
   707  00FD4B  0A                 	db	10
   708  00FD4C  0D                 	db	13
   709  00FD4D  0A                 	db	10
   710  00FD4E  00                 	db	0
   711  00FD4F                     __end_of_MsgFormat:
   712                           	opt stack 0
   713  00FD4F                     _Welcome:
   714                           	opt stack 0
   715  00FD4F  2A                 	db	42
   716  00FD50  2A                 	db	42
   717  00FD51  2A                 	db	42
   718  00FD52  2A                 	db	42
   719  00FD53  2A                 	db	42
   720  00FD54  2A                 	db	42
   721  00FD55  2A                 	db	42
   722  00FD56  2A                 	db	42
   723  00FD57  2A                 	db	42
   724  00FD58  2A                 	db	42
   725  00FD59  2A                 	db	42
   726  00FD5A  2A                 	db	42
   727  00FD5B  2A                 	db	42
   728  00FD5C  2A                 	db	42
   729  00FD5D  2A                 	db	42
   730  00FD5E  2A                 	db	42
   731  00FD5F  2A                 	db	42
   732  00FD60  2A                 	db	42
   733  00FD61  2A                 	db	42
   734  00FD62  2A                 	db	42
   735  00FD63  2A                 	db	42
   736  00FD64  2A                 	db	42
   737  00FD65  2A                 	db	42
   738  00FD66  2A                 	db	42
   739  00FD67  2A                 	db	42
   740  00FD68  2A                 	db	42
   741  00FD69  2A                 	db	42
   742  00FD6A  2A                 	db	42
   743  00FD6B  2A                 	db	42
   744  00FD6C  2A                 	db	42
   745  00FD6D  2A                 	db	42
   746  00FD6E  2A                 	db	42
   747  00FD6F  2A                 	db	42
   748  00FD70  2A                 	db	42
   749  00FD71  2A                 	db	42
   750  00FD72  2A                 	db	42
   751  00FD73  2A                 	db	42
   752  00FD74  2A                 	db	42
   753  00FD75  2A                 	db	42
   754  00FD76  2A                 	db	42
   755  00FD77  2A                 	db	42
   756  00FD78  2A                 	db	42
   757  00FD79  2A                 	db	42
   758  00FD7A  2A                 	db	42
   759  00FD7B  2A                 	db	42
   760  00FD7C  2A                 	db	42
   761  00FD7D  2A                 	db	42
   762  00FD7E  2A                 	db	42
   763  00FD7F  2A                 	db	42
   764  00FD80  0D                 	db	13
   765  00FD81  0A                 	db	10
   766  00FD82  20                 	db	32
   767  00FD83  20                 	db	32
   768  00FD84  20                 	db	32
   769  00FD85  20                 	db	32
   770  00FD86  20                 	db	32
   771  00FD87  20                 	db	32
   772  00FD88  20                 	db	32
   773  00FD89  20                 	db	32
   774  00FD8A  20                 	db	32
   775  00FD8B  20                 	db	32
   776  00FD8C  20                 	db	32
   777  00FD8D  20                 	db	32
   778  00FD8E  20                 	db	32
   779  00FD8F  20                 	db	32
   780  00FD90  20                 	db	32
   781  00FD91  20                 	db	32
   782  00FD92  20                 	db	32
   783  00FD93  20                 	db	32
   784  00FD94  4D                 	db	77
   785  00FD95  45                 	db	69
   786  00FD96  52                 	db	82
   787  00FD97  43                 	db	67
   788  00FD98  55                 	db	85
   789  00FD99  52                 	db	82
   790  00FD9A  59                 	db	89
   791  00FD9B  20                 	db	32
   792  00FD9C  53                 	db	83
   793  00FD9D  59                 	db	89
   794  00FD9E  53                 	db	83
   795  00FD9F  54                 	db	84
   796  00FDA0  45                 	db	69
   797  00FDA1  4D                 	db	77
   798  00FDA2  0D                 	db	13
   799  00FDA3  0A                 	db	10
   800  00FDA4  2A                 	db	42
   801  00FDA5  2A                 	db	42
   802  00FDA6  2A                 	db	42
   803  00FDA7  2A                 	db	42
   804  00FDA8  2A                 	db	42
   805  00FDA9  2A                 	db	42
   806  00FDAA  2A                 	db	42
   807  00FDAB  2A                 	db	42
   808  00FDAC  2A                 	db	42
   809  00FDAD  2A                 	db	42
   810  00FDAE  2A                 	db	42
   811  00FDAF  2A                 	db	42
   812  00FDB0  2A                 	db	42
   813  00FDB1  2A                 	db	42
   814  00FDB2  2A                 	db	42
   815  00FDB3  2A                 	db	42
   816  00FDB4  2A                 	db	42
   817  00FDB5  2A                 	db	42
   818  00FDB6  2A                 	db	42
   819  00FDB7  2A                 	db	42
   820  00FDB8  2A                 	db	42
   821  00FDB9  2A                 	db	42
   822  00FDBA  2A                 	db	42
   823  00FDBB  2A                 	db	42
   824  00FDBC  2A                 	db	42
   825  00FDBD  2A                 	db	42
   826  00FDBE  2A                 	db	42
   827  00FDBF  2A                 	db	42
   828  00FDC0  2A                 	db	42
   829  00FDC1  2A                 	db	42
   830  00FDC2  2A                 	db	42
   831  00FDC3  2A                 	db	42
   832  00FDC4  2A                 	db	42
   833  00FDC5  2A                 	db	42
   834  00FDC6  2A                 	db	42
   835  00FDC7  2A                 	db	42
   836  00FDC8  2A                 	db	42
   837  00FDC9  2A                 	db	42
   838  00FDCA  2A                 	db	42
   839  00FDCB  2A                 	db	42
   840  00FDCC  2A                 	db	42
   841  00FDCD  2A                 	db	42
   842  00FDCE  2A                 	db	42
   843  00FDCF  2A                 	db	42
   844  00FDD0  2A                 	db	42
   845  00FDD1  2A                 	db	42
   846  00FDD2  2A                 	db	42
   847  00FDD3  2A                 	db	42
   848  00FDD4  2A                 	db	42
   849  00FDD5  0D                 	db	13
   850  00FDD6  0A                 	db	10
   851  00FDD7  00                 	db	0
   852  00FDD8                     __end_of_Welcome:
   853                           	opt stack 0
   854  00FDD8                     _configDescriptor1:
   855                           	opt stack 0
   856  00FDD8  09                 	db	9
   857  00FDD9  02                 	db	2
   858  00FDDA  43                 	db	67
   859  00FDDB  00                 	db	0
   860  00FDDC  02                 	db	2
   861  00FDDD  01                 	db	1
   862  00FDDE  00                 	db	0
   863  00FDDF  C0                 	db	192
   864  00FDE0  32                 	db	50
   865  00FDE1  09                 	db	9
   866  00FDE2  04                 	db	4
   867  00FDE3  00                 	db	0
   868  00FDE4  00                 	db	0
   869  00FDE5  01                 	db	1
   870  00FDE6  02                 	db	2
   871  00FDE7  02                 	db	2
   872  00FDE8  01                 	db	1
   873  00FDE9  00                 	db	0
   874  00FDEA  05                 	db	5
   875  00FDEB  24                 	db	36
   876  00FDEC  00                 	db	0
   877  00FDED  10                 	db	16
   878  00FDEE  01                 	db	1
   879  00FDEF  04                 	db	4
   880  00FDF0  24                 	db	36
   881  00FDF1  02                 	db	2
   882  00FDF2  02                 	db	2
   883  00FDF3  05                 	db	5
   884  00FDF4  24                 	db	36
   885  00FDF5  06                 	db	6
   886  00FDF6  00                 	db	0
   887  00FDF7  01                 	db	1
   888  00FDF8  05                 	db	5
   889  00FDF9  24                 	db	36
   890  00FDFA  01                 	db	1
   891  00FDFB  00                 	db	0
   892  00FDFC  01                 	db	1
   893  00FDFD  07                 	db	7
   894  00FDFE  05                 	db	5
   895  00FDFF  81                 	db	129
   896  00FE00  03                 	db	3
   897  00FE01  08                 	db	8
   898  00FE02  00                 	db	0
   899  00FE03  02                 	db	2
   900  00FE04  09                 	db	9
   901  00FE05  04                 	db	4
   902  00FE06  01                 	db	1
   903  00FE07  00                 	db	0
   904  00FE08  02                 	db	2
   905  00FE09  0A                 	db	10
   906  00FE0A  00                 	db	0
   907  00FE0B  00                 	db	0
   908  00FE0C  00                 	db	0
   909  00FE0D  07                 	db	7
   910  00FE0E  05                 	db	5
   911  00FE0F  02                 	db	2
   912  00FE10  02                 	db	2
   913  00FE11  40                 	db	64
   914  00FE12  00                 	db	0
   915  00FE13  00                 	db	0
   916  00FE14  07                 	db	7
   917  00FE15  05                 	db	5
   918  00FE16  82                 	db	130
   919  00FE17  02                 	db	2
   920  00FE18  40                 	db	64
   921  00FE19  00                 	db	0
   922  00FE1A  00                 	db	0
   923  00FE1B                     __end_of_configDescriptor1:
   924                           	opt stack 0
   925  00FE1B                     _sd002:
   926                           	opt stack 0
   927  00FE1B  26                 	db	38
   928  00FE1C  03                 	db	3
   929  00FE1D  0054               	dw	84
   930  00FE1F  0065               	dw	101
   931  00FE21  0072               	dw	114
   932  00FE23  006D               	dw	109
   933  00FE25  0069               	dw	105
   934  00FE27  006E               	dw	110
   935  00FE29  0061               	dw	97
   936  00FE2B  006C               	dw	108
   937  00FE2D  0020               	dw	32
   938  00FE2F  0049               	dw	73
   939  00FE31  006E               	dw	110
   940  00FE33  0074               	dw	116
   941  00FE35  0065               	dw	101
   942  00FE37  0072               	dw	114
   943  00FE39  0066               	dw	102
   944  00FE3B  0061               	dw	97
   945  00FE3D  0063               	dw	99
   946  00FE3F  0065               	dw	101
   947  00FE41                     __end_of_sd002:
   948                           	opt stack 0
   949  00FE41                     _sd001:
   950                           	opt stack 0
   951  00FE41  1E                 	db	30
   952  00FE42  03                 	db	3
   953  00FE43  004D               	dw	77
   954  00FE45  0065               	dw	101
   955  00FE47  0072               	dw	114
   956  00FE49  0063               	dw	99
   957  00FE4B  0075               	dw	117
   958  00FE4D  0072               	dw	114
   959  00FE4F  0079               	dw	121
   960  00FE51  0020               	dw	32
   961  00FE53  0053               	dw	83
   962  00FE55  0079               	dw	121
   963  00FE57  0073               	dw	115
   964  00FE59  0074               	dw	116
   965  00FE5B  0065               	dw	101
   966  00FE5D  006D               	dw	109
   967  00FE5F                     __end_of_sd001:
   968                           	opt stack 0
   969  00FE5F                     _MsgReady:
   970                           	opt stack 0
   971  00FE5F  0D                 	db	13
   972  00FE60  0A                 	db	10
   973  00FE61  53                 	db	83
   974  00FE62  79                 	db	121
   975  00FE63  73                 	db	115
   976  00FE64  74                 	db	116
   977  00FE65  65                 	db	101
   978  00FE66  6D                 	db	109
   979  00FE67  20                 	db	32
   980  00FE68  52                 	db	82
   981  00FE69  65                 	db	101
   982  00FE6A  61                 	db	97
   983  00FE6B  64                 	db	100
   984  00FE6C  79                 	db	121
   985  00FE6D  2E                 	db	46
   986  00FE6E  2E                 	db	46
   987  00FE6F  2E                 	db	46
   988  00FE70  20                 	db	32
   989  00FE71  0D                 	db	13
   990  00FE72  0A                 	db	10
   991  00FE73  0D                 	db	13
   992  00FE74  0A                 	db	10
   993  00FE75  00                 	db	0
   994  00FE76                     __end_of_MsgReady:
   995                           	opt stack 0
   996  00FE76                     _device_dsc:
   997                           	opt stack 0
   998  00FE76  12                 	db	18
   999  00FE77  01                 	db	1
  1000  00FE78  0200               	dw	512
  1001  00FE7A  02                 	db	2
  1002  00FE7B  00                 	db	0
  1003  00FE7C  00                 	db	0
  1004  00FE7D  08                 	db	8
  1005  00FE7E  04D8               	dw	1240
  1006  00FE80  000A               	dw	10
  1007  00FE82  0100               	dw	256
  1008  00FE84  01                 	db	1
  1009  00FE85  02                 	db	2
  1010  00FE86  00                 	db	0
  1011  00FE87  01                 	db	1
  1012  00FE88                     __end_of_device_dsc:
  1013                           	opt stack 0
  1014  00FE88                     _sd000:
  1015                           	opt stack 0
  1016  00FE88  04                 	db	4
  1017  00FE89  03                 	db	3
  1018  00FE8A  0409               	dw	1033
  1019  00FE8C                     __end_of_sd000:
  1020                           	opt stack 0
  1021  0000                     _RPINR1	set	3815
  1022  0000                     _UEP0bits	set	3878
  1023  0000                     _UIEbits	set	3894
  1024  0000                     _UADDR	set	3896
  1025  0000                     _UIE	set	3894
  1026  0000                     _UEIE	set	3895
  1027  0000                     _UCFG	set	3897
  1028  0000                     _RTCCAL	set	3902
  1029  0000                     _PADCFG1bits	set	3900
  1030  0000                     _RTCCFGbits	set	3903
  1031  0000                     _DSCONLbits	set	3916
  1032  0000                     _DSGPR1	set	3919
  1033  0000                     _DSGPR0	set	3918
  1034  0000                     _DSCONHbits	set	3917
  1035  0000                     _ANCON1bits	set	3913
  1036  0000                     _UEP1	set	3879
  1037  0000                     _UEP0	set	3878
  1038  0000                     _T1CONbits	set	4045
  1039  0000                     _PORTDbits	set	3971
  1040  0000                     _USTAT	set	3940
  1041  0000                     _PIR2bits	set	4001
  1042  0000                     _UCON	set	3941
  1043  0000                     _UIRbits	set	3938
  1044  0000                     _UCONbits	set	3941
  1045  0000                     _UIR	set	3938
  1046  0000                     _UEIR	set	3939
  1047  0000                     _PIE2bits	set	4000
  1048  0000                     _BAUDCON2	set	3964
  1049  0000                     _RCSTA2	set	3996
  1050  0000                     _BAUDCON1	set	3966
  1051  0000                     _RCSTA1	set	4012
  1052  0000                     _TRISCbits	set	3988
  1053  0000                     _TXSTA2	set	4008
  1054  0000                     _TXSTA1	set	4013
  1055  0000                     _RCREG2	set	4010
  1056  0000                     _RCREG1	set	4015
  1057  0000                     _TXREG2	set	4009
  1058  0000                     _TXREG1	set	4014
  1059  0000                     _SPBRG2	set	4011
  1060  0000                     _SPBRGH2	set	3965
  1061  0000                     _SPBRG1	set	4016
  1062  0000                     _SPBRGH1	set	3967
  1063  0000                     _PR4	set	3959
  1064  0000                     _PR2	set	4043
  1065  0000                     _PIE1bits	set	3997
  1066  0000                     _IPR1bits	set	3999
  1067  0000                     _T4CONbits	set	3958
  1068  0000                     _T2CONbits	set	4042
  1069  0000                     _ALRMVALL	set	3982
  1070  0000                     _ALRMVALH	set	3983
  1071  0000                     _RTCVALH	set	3993
  1072  0000                     _RTCVALL	set	3992
  1073  0000                     _ALRMRPTbits	set	3984
  1074  0000                     _ALRMCFGbits	set	3985
  1075  0000                     _PIE3bits	set	4003
  1076  0000                     _IPR3bits	set	4005
  1077  0000                     _OSCCONbits	set	4051
  1078  0000                     _PORTEbits	set	3972
  1079  0000                     _TRISEbits	set	3990
  1080  0000                     _WDTCONbits	set	4032
  1081  0000                     _INTCON2bits	set	4081
  1082  0000                     _TRISBbits	set	3987
  1083  0000                     _OSCTUNEbits	set	3995
  1084  0000                     _SSP2CON1	set	3954
  1085  0000                     _TRISDbits	set	3989
  1086  0000                     _SSP2BUF	set	3957
  1087  0000                     _SSP2CON2bits	set	3953
  1088  0000                     _SSP2STAT	set	3955
  1089  0000                     _SSP2CON2	set	3953
  1090  0000                     _SSP2ADD	set	3956
  1091  0000                     _PIR1bits	set	3998
  1092  0000                     _PIR3bits	set	4004
  1093  0000                     _INTCON3bits	set	4080
  1094  0000                     _INTCONbits	set	4082
  1095  0000                     _RCONbits	set	4048
  1096  00FE8C                     STR_21:
  1097  00FE8C  20                 	db	32
  1098  00FE8D  4C                 	db	76	;'L'
  1099  00FE8E  61                 	db	97	;'a'
  1100  00FE8F  7A                 	db	122	;'z'
  1101  00FE90  79                 	db	121	;'y'
  1102  00FE91  20                 	db	32
  1103  00FE92  64                 	db	100	;'d'
  1104  00FE93  65                 	db	101	;'e'
  1105  00FE94  76                 	db	118	;'v'
  1106  00FE95  69                 	db	105	;'i'
  1107  00FE96  63                 	db	99	;'c'
  1108  00FE97  65                 	db	101	;'e'
  1109  00FE98  2E                 	db	46
  1110  00FE99  2E                 	db	46
  1111  00FE9A  2E                 	db	46
  1112  00FE9B  79                 	db	121	;'y'
  1113  00FE9C  6F                 	db	111	;'o'
  1114  00FE9D  75                 	db	117	;'u'
  1115  00FE9E  27                 	db	39
  1116  00FE9F  76                 	db	118	;'v'
  1117  00FEA0  65                 	db	101	;'e'
  1118  00FEA1  20                 	db	32
  1119  00FEA2  62                 	db	98	;'b'
  1120  00FEA3  65                 	db	101	;'e'
  1121  00FEA4  65                 	db	101	;'e'
  1122  00FEA5  6E                 	db	110	;'n'
  1123  00FEA6  20                 	db	32
  1124  00FEA7  74                 	db	116	;'t'
  1125  00FEA8  69                 	db	105	;'i'
  1126  00FEA9  6D                 	db	109	;'m'
  1127  00FEAA  65                 	db	101	;'e'
  1128  00FEAB  64                 	db	100	;'d'
  1129  00FEAC  2D                 	db	45
  1130  00FEAD  6F                 	db	111	;'o'
  1131  00FEAE  75                 	db	117	;'u'
  1132  00FEAF  74                 	db	116	;'t'
  1133  00FEB0  21                 	db	33
  1134  00FEB1  21                 	db	33
  1135  00FEB2  21                 	db	33
  1136  00FEB3  0D                 	db	13
  1137  00FEB4  0A                 	db	10
  1138  00FEB5  00                 	db	0
  1139  00FEB6                     STR_8:
  1140  00FEB6  41                 	db	65	;'A'
  1141  00FEB7  54                 	db	84	;'T'
  1142  00FEB8  2B                 	db	43
  1143  00FEB9  53                 	db	83	;'S'
  1144  00FEBA  41                 	db	65	;'A'
  1145  00FEBB  50                 	db	80	;'P'
  1146  00FEBC  42                 	db	66	;'B'
  1147  00FEBD  52                 	db	82	;'R'
  1148  00FEBE  3D                 	db	61	;'='
  1149  00FEBF  33                 	db	51	;'3'
  1150  00FEC0  2C                 	db	44
  1151  00FEC1  31                 	db	49	;'1'
  1152  00FEC2  2C                 	db	44
  1153  00FEC3  22                 	db	34
  1154  00FEC4  43                 	db	67	;'C'
  1155  00FEC5  6F                 	db	111	;'o'
  1156  00FEC6  6E                 	db	110	;'n'
  1157  00FEC7  74                 	db	116	;'t'
  1158  00FEC8  79                 	db	121	;'y'
  1159  00FEC9  70                 	db	112	;'p'
  1160  00FECA  65                 	db	101	;'e'
  1161  00FECB  22                 	db	34
  1162  00FECC  2C                 	db	44
  1163  00FECD  22                 	db	34
  1164  00FECE  47                 	db	71	;'G'
  1165  00FECF  50                 	db	80	;'P'
  1166  00FED0  52                 	db	82	;'R'
  1167  00FED1  53                 	db	83	;'S'
  1168  00FED2  22                 	db	34
  1169  00FED3  0D                 	db	13
  1170  00FED4  00                 	db	0
  1171  00FED5                     STR_14:
  1172  00FED5  41                 	db	65	;'A'
  1173  00FED6  54                 	db	84	;'T'
  1174  00FED7  2B                 	db	43
  1175  00FED8  48                 	db	72	;'H'
  1176  00FED9  54                 	db	84	;'T'
  1177  00FEDA  54                 	db	84	;'T'
  1178  00FEDB  50                 	db	80	;'P'
  1179  00FEDC  50                 	db	80	;'P'
  1180  00FEDD  41                 	db	65	;'A'
  1181  00FEDE  52                 	db	82	;'R'
  1182  00FEDF  41                 	db	65	;'A'
  1183  00FEE0  3D                 	db	61	;'='
  1184  00FEE1  22                 	db	34
  1185  00FEE2  43                 	db	67	;'C'
  1186  00FEE3  49                 	db	73	;'I'
  1187  00FEE4  44                 	db	68	;'D'
  1188  00FEE5  22                 	db	34
  1189  00FEE6  2C                 	db	44
  1190  00FEE7  31                 	db	49	;'1'
  1191  00FEE8  0D                 	db	13
  1192  00FEE9  00                 	db	0
  1193  00FEEA                     STR_9:
  1194  00FEEA  41                 	db	65	;'A'
  1195  00FEEB  54                 	db	84	;'T'
  1196  00FEEC  2B                 	db	43
  1197  00FEED  53                 	db	83	;'S'
  1198  00FEEE  41                 	db	65	;'A'
  1199  00FEEF  50                 	db	80	;'P'
  1200  00FEF0  42                 	db	66	;'B'
  1201  00FEF1  52                 	db	82	;'R'
  1202  00FEF2  3D                 	db	61	;'='
  1203  00FEF3  33                 	db	51	;'3'
  1204  00FEF4  2C                 	db	44
  1205  00FEF5  31                 	db	49	;'1'
  1206  00FEF6  2C                 	db	44
  1207  00FEF7  22                 	db	34
  1208  00FEF8  41                 	db	65	;'A'
  1209  00FEF9  50                 	db	80	;'P'
  1210  00FEFA  4E                 	db	78	;'N'
  1211  00FEFB  22                 	db	34
  1212  00FEFC  2C                 	db	44
  1213  00FEFD  22                 	db	34
  1214  00FEFE  00                 	db	0
  1215  00FEFF                     STR_23:
  1216  00FEFF  46                 	db	70	;'F'
  1217  00FF00  72                 	db	114	;'r'
  1218  00FF01  61                 	db	97	;'a'
  1219  00FF02  6D                 	db	109	;'m'
  1220  00FF03  65                 	db	101	;'e'
  1221  00FF04  77                 	db	119	;'w'
  1222  00FF05  6F                 	db	111	;'o'
  1223  00FF06  72                 	db	114	;'r'
  1224  00FF07  6B                 	db	107	;'k'
  1225  00FF08  20                 	db	32
  1226  00FF09  56                 	db	86	;'V'
  1227  00FF0A  65                 	db	101	;'e'
  1228  00FF0B  72                 	db	114	;'r'
  1229  00FF0C  73                 	db	115	;'s'
  1230  00FF0D  69                 	db	105	;'i'
  1231  00FF0E  6F                 	db	111	;'o'
  1232  00FF0F  6E                 	db	110	;'n'
  1233  00FF10  3A                 	db	58	;':'
  1234  00FF11  20                 	db	32
  1235  00FF12  00                 	db	0
  1236  00FF13                     STR_15:
  1237  00FF13  41                 	db	65	;'A'
  1238  00FF14  54                 	db	84	;'T'
  1239  00FF15  2B                 	db	43
  1240  00FF16  48                 	db	72	;'H'
  1241  00FF17  54                 	db	84	;'T'
  1242  00FF18  54                 	db	84	;'T'
  1243  00FF19  50                 	db	80	;'P'
  1244  00FF1A  50                 	db	80	;'P'
  1245  00FF1B  41                 	db	65	;'A'
  1246  00FF1C  52                 	db	82	;'R'
  1247  00FF1D  41                 	db	65	;'A'
  1248  00FF1E  3D                 	db	61	;'='
  1249  00FF1F  22                 	db	34
  1250  00FF20  55                 	db	85	;'U'
  1251  00FF21  52                 	db	82	;'R'
  1252  00FF22  4C                 	db	76	;'L'
  1253  00FF23  22                 	db	34
  1254  00FF24  2C                 	db	44
  1255  00FF25  22                 	db	34
  1256  00FF26  00                 	db	0
  1257  00FF27                     STR_27:
  1258  00FF27  42                 	db	66	;'B'
  1259  00FF28  75                 	db	117	;'u'
  1260  00FF29  69                 	db	105	;'i'
  1261  00FF2A  6C                 	db	108	;'l'
  1262  00FF2B  64                 	db	100	;'d'
  1263  00FF2C  20                 	db	32
  1264  00FF2D  44                 	db	68	;'D'
  1265  00FF2E  61                 	db	97	;'a'
  1266  00FF2F  74                 	db	116	;'t'
  1267  00FF30  65                 	db	101	;'e'
  1268  00FF31  3A                 	db	58	;':'
  1269  00FF32  20                 	db	32
  1270  00FF33  25                 	db	37
  1271  00FF34  73                 	db	115	;'s'
  1272  00FF35  0D                 	db	13
  1273  00FF36  0A                 	db	10
  1274  00FF37  00                 	db	0
  1275  00FF38                     STR_16:
  1276  00FF38  41                 	db	65	;'A'
  1277  00FF39  54                 	db	84	;'T'
  1278  00FF3A  2B                 	db	43
  1279  00FF3B  48                 	db	72	;'H'
  1280  00FF3C  54                 	db	84	;'T'
  1281  00FF3D  54                 	db	84	;'T'
  1282  00FF3E  50                 	db	80	;'P'
  1283  00FF3F  41                 	db	65	;'A'
  1284  00FF40  43                 	db	67	;'C'
  1285  00FF41  54                 	db	84	;'T'
  1286  00FF42  49                 	db	73	;'I'
  1287  00FF43  4F                 	db	79	;'O'
  1288  00FF44  4E                 	db	78	;'N'
  1289  00FF45  3D                 	db	61	;'='
  1290  00FF46  30                 	db	48	;'0'
  1291  00FF47  0D                 	db	13
  1292  00FF48  00                 	db	0
  1293  00FF49  41                 	db	65	;'A'
  1294  00FF4A  54                 	db	84	;'T'
  1295  00FF4B  2B                 	db	43
  1296  00FF4C  48                 	db	72	;'H'
  1297  00FF4D  54                 	db	84	;'T'
  1298  00FF4E  54                 	db	84	;'T'
  1299  00FF4F  50                 	db	80	;'P'
  1300  00FF50  53                 	db	83	;'S'
  1301  00FF51  53                 	db	83	;'S'
  1302  00FF52  4C                 	db	76	;'L'
  1303  00FF53  3D                 	db	61	;'='
  1304  00FF54  30                 	db	48	;'0'
  1305  00FF55  0D                 	db	13
  1306  00FF56  00                 	db	0
  1307  00FF57                     STR_10:
  1308  00FF57  41                 	db	65	;'A'
  1309  00FF58  54                 	db	84	;'T'
  1310  00FF59  2B                 	db	43
  1311  00FF5A  53                 	db	83	;'S'
  1312  00FF5B  41                 	db	65	;'A'
  1313  00FF5C  50                 	db	80	;'P'
  1314  00FF5D  42                 	db	66	;'B'
  1315  00FF5E  52                 	db	82	;'R'
  1316  00FF5F  3D                 	db	61	;'='
  1317  00FF60  31                 	db	49	;'1'
  1318  00FF61  2C                 	db	44
  1319  00FF62  31                 	db	49	;'1'
  1320  00FF63  0D                 	db	13
  1321  00FF64  00                 	db	0
  1322  00FF65                     STR_11:
  1323  00FF65  41                 	db	65	;'A'
  1324  00FF66  54                 	db	84	;'T'
  1325  00FF67  2B                 	db	43
  1326  00FF68  53                 	db	83	;'S'
  1327  00FF69  41                 	db	65	;'A'
  1328  00FF6A  50                 	db	80	;'P'
  1329  00FF6B  42                 	db	66	;'B'
  1330  00FF6C  52                 	db	82	;'R'
  1331  00FF6D  3D                 	db	61	;'='
  1332  00FF6E  32                 	db	50	;'2'
  1333  00FF6F  2C                 	db	44
  1334  00FF70  31                 	db	49	;'1'
  1335  00FF71  0D                 	db	13
  1336  00FF72  00                 	db	0
  1337  00FF73                     STR_13:
  1338  00FF73  41                 	db	65	;'A'
  1339  00FF74  54                 	db	84	;'T'
  1340  00FF75  2B                 	db	43
  1341  00FF76  48                 	db	72	;'H'
  1342  00FF77  54                 	db	84	;'T'
  1343  00FF78  54                 	db	84	;'T'
  1344  00FF79  50                 	db	80	;'P'
  1345  00FF7A  53                 	db	83	;'S'
  1346  00FF7B  53                 	db	83	;'S'
  1347  00FF7C  4C                 	db	76	;'L'
  1348  00FF7D  3D                 	db	61	;'='
  1349  00FF7E  31                 	db	49	;'1'
  1350  00FF7F  0D                 	db	13
  1351  00FF80  00                 	db	0
  1352  00FF81                     STR_2:
  1353  00FF81  41                 	db	65	;'A'
  1354  00FF82  54                 	db	84	;'T'
  1355  00FF83  2B                 	db	43
  1356  00FF84  49                 	db	73	;'I'
  1357  00FF85  50                 	db	80	;'P'
  1358  00FF86  52                 	db	82	;'R'
  1359  00FF87  3D                 	db	61	;'='
  1360  00FF88  39                 	db	57	;'9'
  1361  00FF89  36                 	db	54	;'6'
  1362  00FF8A  30                 	db	48	;'0'
  1363  00FF8B  30                 	db	48	;'0'
  1364  00FF8C  0D                 	db	13
  1365  00FF8D  0A                 	db	10
  1366  00FF8E  00                 	db	0
  1367  00FF8F                     STR_17:
  1368  00FF8F  41                 	db	65	;'A'
  1369  00FF90  54                 	db	84	;'T'
  1370  00FF91  2B                 	db	43
  1371  00FF92  48                 	db	72	;'H'
  1372  00FF93  54                 	db	84	;'T'
  1373  00FF94  54                 	db	84	;'T'
  1374  00FF95  50                 	db	80	;'P'
  1375  00FF96  52                 	db	82	;'R'
  1376  00FF97  45                 	db	69	;'E'
  1377  00FF98  41                 	db	65	;'A'
  1378  00FF99  44                 	db	68	;'D'
  1379  00FF9A  0D                 	db	13
  1380  00FF9B  00                 	db	0
  1381  00FF9C                     STR_18:
  1382  00FF9C  41                 	db	65	;'A'
  1383  00FF9D  54                 	db	84	;'T'
  1384  00FF9E  2B                 	db	43
  1385  00FF9F  48                 	db	72	;'H'
  1386  00FFA0  54                 	db	84	;'T'
  1387  00FFA1  54                 	db	84	;'T'
  1388  00FFA2  50                 	db	80	;'P'
  1389  00FFA3  54                 	db	84	;'T'
  1390  00FFA4  45                 	db	69	;'E'
  1391  00FFA5  52                 	db	82	;'R'
  1392  00FFA6  4D                 	db	77	;'M'
  1393  00FFA7  0D                 	db	13
  1394  00FFA8  00                 	db	0
  1395  00FFA9                     STR_12:
  1396  00FFA9  41                 	db	65	;'A'
  1397  00FFAA  54                 	db	84	;'T'
  1398  00FFAB  2B                 	db	43
  1399  00FFAC  48                 	db	72	;'H'
  1400  00FFAD  54                 	db	84	;'T'
  1401  00FFAE  54                 	db	84	;'T'
  1402  00FFAF  50                 	db	80	;'P'
  1403  00FFB0  49                 	db	73	;'I'
  1404  00FFB1  4E                 	db	78	;'N'
  1405  00FFB2  49                 	db	73	;'I'
  1406  00FFB3  54                 	db	84	;'T'
  1407  00FFB4  0D                 	db	13
  1408  00FFB5  00                 	db	0
  1409  00FFB6                     STR_28:
  1410  00FFB6  4D                 	db	77	;'M'
  1411  00FFB7  61                 	db	97	;'a'
  1412  00FFB8  72                 	db	114	;'r'
  1413  00FFB9  20                 	db	32
  1414  00FFBA  31                 	db	49	;'1'
  1415  00FFBB  32                 	db	50	;'2'
  1416  00FFBC  20                 	db	32
  1417  00FFBD  32                 	db	50	;'2'
  1418  00FFBE  30                 	db	48	;'0'
  1419  00FFBF  32                 	db	50	;'2'
  1420  00FFC0  32                 	db	50	;'2'
  1421  00FFC1  00                 	db	0
  1422  00FFC2                     STR_4:
  1423  00FFC2  41                 	db	65	;'A'
  1424  00FFC3  54                 	db	84	;'T'
  1425  00FFC4  2B                 	db	43
  1426  00FFC5  43                 	db	67	;'C'
  1427  00FFC6  4D                 	db	77	;'M'
  1428  00FFC7  47                 	db	71	;'G'
  1429  00FFC8  52                 	db	82	;'R'
  1430  00FFC9  3D                 	db	61	;'='
  1431  00FFCA  31                 	db	49	;'1'
  1432  00FFCB  0D                 	db	13
  1433  00FFCC  00                 	db	0
  1434  00FFCD                     STR_5:
  1435  00FFCD  41                 	db	65	;'A'
  1436  00FFCE  54                 	db	84	;'T'
  1437  00FFCF  2B                 	db	43
  1438  00FFD0  43                 	db	67	;'C'
  1439  00FFD1  4D                 	db	77	;'M'
  1440  00FFD2  47                 	db	71	;'G'
  1441  00FFD3  53                 	db	83	;'S'
  1442  00FFD4  3D                 	db	61	;'='
  1443  00FFD5  22                 	db	34
  1444  00FFD6  00                 	db	0
  1445  00FFD7                     STR_30:
  1446  00FFD7  28                 	db	40
  1447  00FFD8  6E                 	db	110	;'n'
  1448  00FFD9  75                 	db	117	;'u'
  1449  00FFDA  6C                 	db	108	;'l'
  1450  00FFDB  6C                 	db	108	;'l'
  1451  00FFDC  29                 	db	41
  1452  00FFDD  00                 	db	0
  1453  00FFDE                     STR_3:
  1454  00FFDE  41                 	db	65	;'A'
  1455  00FFDF  54                 	db	84	;'T'
  1456  00FFE0  45                 	db	69	;'E'
  1457  00FFE1  30                 	db	48	;'0'
  1458  00FFE2  0D                 	db	13
  1459  00FFE3  0A                 	db	10
  1460  00FFE4  00                 	db	0
  1461  00FFE5                     STR_1:
  1462  00FFE5  41                 	db	65	;'A'
  1463  00FFE6  54                 	db	84	;'T'
  1464  00FFE7  0D                 	db	13
  1465  00FFE8  0A                 	db	10
  1466  00FFE9  00                 	db	0
  1467  00FFEA  41                 	db	65	;'A'
  1468  00FFEB  54                 	db	84	;'T'
  1469  00FFEC  41                 	db	65	;'A'
  1470  00FFED  0D                 	db	13
  1471  00FFEE  00                 	db	0
  1472  00FFEF  41                 	db	65	;'A'
  1473  00FFF0  54                 	db	84	;'T'
  1474  00FFF1  48                 	db	72	;'H'
  1475  00FFF2  0D                 	db	13
  1476  00FFF3  00                 	db	0
  1477  00FFF4                     STR_24:
  1478  00FFF4  2E                 	db	46
  1479  00FFF5  00                 	db	0
  1480  0000                     
  1481                           ; #config settings
  1482  00FFF6  00                 	db	0	; dummy byte at the end
  1483  0000                     
  1484                           	psect	cinit
  1485  00268A                     __pcinit:
  1486                           	opt stack 0
  1487  00268A                     start_initialization:
  1488                           	opt stack 0
  1489  00268A                     __initialization:
  1490                           	opt stack 0
  1491                           
  1492                           ; Initialize objects allocated to BANK5 (80 bytes)
  1493                           ; load TBLPTR registers with __pidataBANK5
  1494  00268A  0E7C               	movlw	low __pidataBANK5
  1495  00268C  6EF6               	movwf	tblptrl,c
  1496  00268E  0E52               	movlw	high __pidataBANK5
  1497  002690  6EF7               	movwf	tblptrh,c
  1498  002692  0E00               	movlw	low (__pidataBANK5 shr (0+16))
  1499  002694  6EF8               	movwf	tblptru,c
  1500  002696  EE05  F082         	lfsr	0,__pdataBANK5
  1501  00269A  EE10 F050          	lfsr	1,80
  1502  00269E                     copy_data0:
  1503  00269E  0009               	tblrd		*+
  1504  0026A0  CFF5 FFEE          	movff	tablat,postinc0
  1505  0026A4  50E5               	movf	postdec1,w,c
  1506  0026A6  50E1               	movf	fsr1l,w,c
  1507  0026A8  E1FA               	bnz	copy_data0
  1508                           
  1509                           ; Initialize objects allocated to BANK3 (63 bytes)
  1510                           ; load TBLPTR registers with __pidataBANK3
  1511  0026AA  0EFC               	movlw	low __pidataBANK3
  1512  0026AC  6EF6               	movwf	tblptrl,c
  1513  0026AE  0E56               	movlw	high __pidataBANK3
  1514  0026B0  6EF7               	movwf	tblptrh,c
  1515  0026B2  0E00               	movlw	low (__pidataBANK3 shr (0+16))
  1516  0026B4  6EF8               	movwf	tblptru,c
  1517  0026B6  EE03  F0BB         	lfsr	0,__pdataBANK3
  1518  0026BA  EE10 F03F          	lfsr	1,63
  1519  0026BE                     copy_data1:
  1520  0026BE  0009               	tblrd		*+
  1521  0026C0  CFF5 FFEE          	movff	tablat,postinc0
  1522  0026C4  50E5               	movf	postdec1,w,c
  1523  0026C6  50E1               	movf	fsr1l,w,c
  1524  0026C8  E1FA               	bnz	copy_data1
  1525                           
  1526                           ; Initialize objects allocated to BANK2 (13 bytes)
  1527                           ; load TBLPTR registers with __pidataBANK2
  1528  0026CA  0E62               	movlw	low __pidataBANK2
  1529  0026CC  6EF6               	movwf	tblptrl,c
  1530  0026CE  0E5F               	movlw	high __pidataBANK2
  1531  0026D0  6EF7               	movwf	tblptrh,c
  1532  0026D2  0E00               	movlw	low (__pidataBANK2 shr (0+16))
  1533  0026D4  6EF8               	movwf	tblptru,c
  1534  0026D6  EE02  F0F3         	lfsr	0,__pdataBANK2
  1535  0026DA  EE10 F00D          	lfsr	1,13
  1536  0026DE                     copy_data2:
  1537  0026DE  0009               	tblrd		*+
  1538  0026E0  CFF5 FFEE          	movff	tablat,postinc0
  1539  0026E4  50E5               	movf	postdec1,w,c
  1540  0026E6  50E1               	movf	fsr1l,w,c
  1541  0026E8  E1FA               	bnz	copy_data2
  1542                           
  1543                           ; Initialize objects allocated to BANK1 (2 bytes)
  1544                           ; load TBLPTR registers with __pidataBANK1
  1545  0026EA  0EDE               	movlw	low __pidataBANK1
  1546  0026EC  6EF6               	movwf	tblptrl,c
  1547  0026EE  0E5F               	movlw	high __pidataBANK1
  1548  0026F0  6EF7               	movwf	tblptrh,c
  1549  0026F2  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1550  0026F4  6EF8               	movwf	tblptru,c
  1551  0026F6  0009               	tblrd		*+	;fetch initializer
  1552  0026F8  CFF5 F1FD          	movff	tablat,__pdataBANK1
  1553  0026FC  0009               	tblrd		*+	;fetch initializer
  1554  0026FE  CFF5 F1FE          	movff	tablat,__pdataBANK1+1
  1555                           
  1556                           ; Initialize objects allocated to BANK4 (20 bytes)
  1557                           ; load TBLPTR registers with __pidataBANK4
  1558  002702  0EB8               	movlw	low __pidataBANK4
  1559  002704  6EF6               	movwf	tblptrl,c
  1560  002706  0E5E               	movlw	high __pidataBANK4
  1561  002708  6EF7               	movwf	tblptrh,c
  1562  00270A  0E00               	movlw	low (__pidataBANK4 shr (0+16))
  1563  00270C  6EF8               	movwf	tblptru,c
  1564  00270E  EE04  F0E5         	lfsr	0,__pdataBANK4
  1565  002712  EE10 F014          	lfsr	1,20
  1566  002716                     copy_data3:
  1567  002716  0009               	tblrd		*+
  1568  002718  CFF5 FFEE          	movff	tablat,postinc0
  1569  00271C  50E5               	movf	postdec1,w,c
  1570  00271E  50E1               	movf	fsr1l,w,c
  1571  002720  E1FA               	bnz	copy_data3
  1572                           
  1573                           ; Clear objects allocated to BIGRAMl (800 bytes)
  1574  002722  EE0A  F0C8         	lfsr	0,__pbssBIGRAMl
  1575  002726  EE13 F020          	lfsr	1,800
  1576  00272A                     clear_0:
  1577  00272A  6AEE               	clrf	postinc0,c
  1578  00272C  50E5               	movf	postdec1,w,c
  1579  00272E  50E1               	movf	fsr1l,w,c
  1580  002730  E1FC               	bnz	clear_0
  1581  002732  50E2               	movf	fsr1h,w,c
  1582  002734  E1FA               	bnz	clear_0
  1583                           
  1584                           ; Clear objects allocated to BANK9 (200 bytes)
  1585  002736  EE09  F000         	lfsr	0,__pbssBANK9
  1586  00273A  0EC8               	movlw	200
  1587  00273C                     clear_1:
  1588  00273C  6AEE               	clrf	postinc0,c
  1589  00273E  06E8               	decf	wreg,f,c
  1590  002740  E1FD               	bnz	clear_1
  1591                           
  1592                           ; Clear objects allocated to BANK8 (200 bytes)
  1593  002742  EE08  F000         	lfsr	0,__pbssBANK8
  1594  002746  0EC8               	movlw	200
  1595  002748                     clear_2:
  1596  002748  6AEE               	clrf	postinc0,c
  1597  00274A  06E8               	decf	wreg,f,c
  1598  00274C  E1FD               	bnz	clear_2
  1599                           
  1600                           ; Clear objects allocated to BANK7 (246 bytes)
  1601  00274E  EE07  F000         	lfsr	0,__pbssBANK7
  1602  002752  0EF6               	movlw	246
  1603  002754                     clear_3:
  1604  002754  6AEE               	clrf	postinc0,c
  1605  002756  06E8               	decf	wreg,f,c
  1606  002758  E1FD               	bnz	clear_3
  1607                           
  1608                           ; Clear objects allocated to BANK6 (220 bytes)
  1609  00275A  EE06  F000         	lfsr	0,__pbssBANK6
  1610  00275E  0EDC               	movlw	220
  1611  002760                     clear_4:
  1612  002760  6AEE               	clrf	postinc0,c
  1613  002762  06E8               	decf	wreg,f,c
  1614  002764  E1FD               	bnz	clear_4
  1615                           
  1616                           ; Clear objects allocated to BANK5 (130 bytes)
  1617  002766  EE05  F000         	lfsr	0,__pbssBANK5
  1618  00276A  0E82               	movlw	130
  1619  00276C                     clear_5:
  1620  00276C  6AEE               	clrf	postinc0,c
  1621  00276E  06E8               	decf	wreg,f,c
  1622  002770  E1FD               	bnz	clear_5
  1623                           
  1624                           ; Clear objects allocated to BANK3 (187 bytes)
  1625  002772  EE03  F000         	lfsr	0,__pbssBANK3
  1626  002776  0EBB               	movlw	187
  1627  002778                     clear_6:
  1628  002778  6AEE               	clrf	postinc0,c
  1629  00277A  06E8               	decf	wreg,f,c
  1630  00277C  E1FD               	bnz	clear_6
  1631                           
  1632                           ; Clear objects allocated to BANK2 (43 bytes)
  1633  00277E  EE02  F0C8         	lfsr	0,__pbssBANK2
  1634  002782  0E2B               	movlw	43
  1635  002784                     clear_7:
  1636  002784  6AEE               	clrf	postinc0,c
  1637  002786  06E8               	decf	wreg,f,c
  1638  002788  E1FD               	bnz	clear_7
  1639                           
  1640                           ; Clear objects allocated to BANK1 (52 bytes)
  1641  00278A  EE01  F0C9         	lfsr	0,__pbssBANK1
  1642  00278E  0E34               	movlw	52
  1643  002790                     clear_8:
  1644  002790  6AEE               	clrf	postinc0,c
  1645  002792  06E8               	decf	wreg,f,c
  1646  002794  E1FD               	bnz	clear_8
  1647                           
  1648                           ; Clear objects allocated to BANK4 (165 bytes)
  1649  002796  EE04  F040         	lfsr	0,__pbssBANK4
  1650  00279A  0EA5               	movlw	165
  1651  00279C                     clear_9:
  1652  00279C  6AEE               	clrf	postinc0,c
  1653  00279E  06E8               	decf	wreg,f,c
  1654  0027A0  E1FD               	bnz	clear_9
  1655                           
  1656                           ; Clear objects allocated to BANK0 (51 bytes)
  1657  0027A2  EE00  F0AC         	lfsr	0,__pbssBANK0
  1658  0027A6  0E33               	movlw	51
  1659  0027A8                     clear_10:
  1660  0027A8  6AEE               	clrf	postinc0,c
  1661  0027AA  06E8               	decf	wreg,f,c
  1662  0027AC  E1FD               	bnz	clear_10
  1663                           
  1664                           ; Clear objects allocated to COMRAM (31 bytes)
  1665  0027AE  EE00  F023         	lfsr	0,__pbssCOMRAM
  1666  0027B2  0E1F               	movlw	31
  1667  0027B4                     clear_11:
  1668  0027B4  6AEE               	clrf	postinc0,c
  1669  0027B6  06E8               	decf	wreg,f,c
  1670  0027B8  E1FD               	bnz	clear_11
  1671  0027BA                     end_of_initialization:
  1672                           	opt stack 0
  1673  0027BA                     __end_of__initialization:
  1674                           	opt stack 0
  1675  0027BA  9042               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1676  0027BC  9242               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1677  0027BE  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1678  0027C0  6EF8               	movwf	tblptru,c
  1679  0027C2  0100               	movlb	0
  1680  0027C4  EFB8  F02F         	goto	_main	;jump to C main() function
  1681                           tblptru	equ	0xFF8
  1682                           tblptrh	equ	0xFF7
  1683                           tblptrl	equ	0xFF6
  1684                           tablat	equ	0xFF5
  1685                           postinc0	equ	0xFEE
  1686                           wreg	equ	0xFE8
  1687                           postdec1	equ	0xFE5
  1688                           fsr1h	equ	0xFE2
  1689                           fsr1l	equ	0xFE1
  1690                           
  1691                           	psect	bssCOMRAM
  1692  000023                     __pbssCOMRAM:
  1693                           	opt stack 0
  1694  000023                     Uart_MdmGsmGprsReadService@RxCounter:
  1695                           	opt stack 0
  1696  000023                     	ds	2
  1697  000025                     _USBDeferOUTDataStagePackets:
  1698                           	opt stack 0
  1699  000025                     	ds	1
  1700  000026                     GetSmsSm@GetSmsState:
  1701                           	opt stack 0
  1702  000026                     	ds	1
  1703  000027                     ConfigureModem@NextState:
  1704                           	opt stack 0
  1705  000027                     	ds	1
  1706  000028                     ConfigureModem@MdmConfigState:
  1707                           	opt stack 0
  1708  000028                     	ds	1
  1709  000029                     TurnOnModem@TurnOnMdmState:
  1710                           	opt stack 0
  1711  000029                     	ds	1
  1712  00002A                     CheckModem@CheckMdmSts:
  1713                           	opt stack 0
  1714  00002A                     	ds	1
  1715  00002B                     _ComChecCompleted:
  1716                           	opt stack 0
  1717  00002B                     	ds	1
  1718  00002C                     Uart_Uart1RxIsr@UartRxData:
  1719                           	opt stack 0
  1720  00002C                     	ds	1
  1721  00002D                     Uart_MdmGsmGprsReadService@RxState:
  1722                           	opt stack 0
  1723  00002D                     	ds	1
  1724  00002E                     MdmCntSm@MdmCntState:
  1725                           	opt stack 0
  1726  00002E                     	ds	1
  1727  00002F                     RiSm@MdmDrvState:
  1728                           	opt stack 0
  1729  00002F                     	ds	1
  1730  000030                     _Mmd_RingIndicator:
  1731                           	opt stack 0
  1732  000030                     	ds	1
  1733  000031                     I2c_ReadData@ReadStatus:
  1734                           	opt stack 0
  1735  000031                     	ds	1
  1736  000032                     I2c_ReadData@TentativeCounter:
  1737                           	opt stack 0
  1738  000032                     	ds	1
  1739  000033                     I2c_ReadData@DataCounter:
  1740                           	opt stack 0
  1741  000033                     	ds	1
  1742  000034                     I2c_ReadData@I2cReadState:
  1743                           	opt stack 0
  1744  000034                     	ds	1
  1745  000035                     I2c_WriteData@WriteStatus:
  1746                           	opt stack 0
  1747  000035                     	ds	1
  1748  000036                     I2c_WriteData@TentativeCounter:
  1749                           	opt stack 0
  1750  000036                     	ds	1
  1751  000037                     I2c_WriteData@I2cNextState:
  1752                           	opt stack 0
  1753  000037                     	ds	1
  1754  000038                     I2c_WriteData@I2cWriteState:
  1755                           	opt stack 0
  1756  000038                     	ds	1
  1757  000039                     _MdmStsReady:
  1758                           	opt stack 0
  1759  000039                     	ds	1
  1760  00003A                     _NewStringMdmTerminal:
  1761                           	opt stack 0
  1762  00003A                     	ds	1
  1763  00003B                     _NewMdmEvtParserRequest:
  1764                           	opt stack 0
  1765  00003B                     	ds	1
  1766  00003C                     _NewStringReceived:
  1767                           	opt stack 0
  1768  00003C                     	ds	1
  1769  00003D                     _MdmResetRequest:
  1770                           	opt stack 0
  1771  00003D                     	ds	1
  1772  00003E                     _CallClosedEvent:
  1773                           	opt stack 0
  1774  00003E                     	ds	1
  1775  00003F                     _IncomingCallEvent:
  1776                           	opt stack 0
  1777  00003F                     	ds	1
  1778  000040                     _NewSmsEvent:
  1779                           	opt stack 0
  1780  000040                     	ds	1
  1781  000041                     _ActivateRiDetection:
  1782                           	opt stack 0
  1783  000041                     	ds	1
  1784                           tblptru	equ	0xFF8
  1785                           tblptrh	equ	0xFF7
  1786                           tblptrl	equ	0xFF6
  1787                           tablat	equ	0xFF5
  1788                           postinc0	equ	0xFEE
  1789                           wreg	equ	0xFE8
  1790                           postdec1	equ	0xFE5
  1791                           fsr1h	equ	0xFE2
  1792                           fsr1l	equ	0xFE1
  1793                           
  1794                           	psect	bssBANK0
  1795  0000AC                     __pbssBANK0:
  1796                           	opt stack 0
  1797  0000AC                     _inPipes:
  1798                           	opt stack 0
  1799  0000AC                     	ds	6
  1800  0000B2                     _pBDTEntryIn:
  1801                           	opt stack 0
  1802  0000B2                     	ds	6
  1803  0000B8                     _CDCDataOutHandle:
  1804                           	opt stack 0
  1805  0000B8                     	ds	2
  1806  0000BA                     _pBDTEntryEP0OutNext:
  1807                           	opt stack 0
  1808  0000BA                     	ds	2
  1809  0000BC                     _pBDTEntryEP0OutCurrent:
  1810                           	opt stack 0
  1811  0000BC                     	ds	2
  1812  0000BE                     _RxLen:
  1813                           	opt stack 0
  1814  0000BE                     	ds	2
  1815  0000C0                     _cdc_tx_len:
  1816                           	opt stack 0
  1817  0000C0                     	ds	1
  1818  0000C1                     _cdc_trf_state:
  1819                           	opt stack 0
  1820  0000C1                     	ds	1
  1821  0000C2                     _cdc_rx_len:
  1822                           	opt stack 0
  1823  0000C2                     	ds	1
  1824  0000C3                     _USBDeferINDataStagePackets:
  1825                           	opt stack 0
  1826  0000C3                     	ds	1
  1827  0000C4                     _USBStatusStageEnabledFlag2:
  1828                           	opt stack 0
  1829  0000C4                     	ds	1
  1830  0000C5                     _USBStatusStageEnabledFlag1:
  1831                           	opt stack 0
  1832  0000C5                     	ds	1
  1833  0000C6                     _USBDeferStatusStagePacket:
  1834                           	opt stack 0
  1835  0000C6                     	ds	1
  1836  0000C7                     _USBStatusStageTimeoutCounter:
  1837                           	opt stack 0
  1838  0000C7                     	ds	1
  1839  0000C8                     _endpoint_number:
  1840                           	opt stack 0
  1841  0000C8                     	ds	1
  1842  0000C9                     _controlTransferState:
  1843                           	opt stack 0
  1844  0000C9                     	ds	1
  1845  0000CA                     _shortPacketStatus:
  1846                           	opt stack 0
  1847  0000CA                     	ds	1
  1848  0000CB                     _USBDeviceState:
  1849                           	opt stack 0
  1850  0000CB                     	ds	1
  1851  0000CC                     _I2cComSts:
  1852                           	opt stack 0
  1853  0000CC                     	ds	1
  1854  0000CD                     HttpGetMethod@GetMethodNextState:
  1855                           	opt stack 0
  1856  0000CD                     	ds	1
  1857  0000CE                     InitGprsNetwork@GprsNetInitNextState:
  1858                           	opt stack 0
  1859  0000CE                     	ds	1
  1860  0000CF                     _MdmStatus:
  1861                           	opt stack 0
  1862  0000CF                     	ds	1
  1863  0000D0                     _PhoneNumbLen:
  1864                           	opt stack 0
  1865  0000D0                     	ds	1
  1866  0000D1                     _SmsLen:
  1867                           	opt stack 0
  1868  0000D1                     	ds	1
  1869  0000D2                     _SystemState:
  1870                           	opt stack 0
  1871  0000D2                     	ds	1
  1872  0000D3                     _USTATcopy:
  1873                           	opt stack 0
  1874  0000D3                     	ds	1
  1875  0000D4                     _USBActiveConfiguration:
  1876                           	opt stack 0
  1877  0000D4                     	ds	1
  1878  0000D5                     _I2cReadDataEvt:
  1879                           	opt stack 0
  1880  0000D5                     	ds	1
  1881  0000D6                     _I2cWriteDataEvt:
  1882                           	opt stack 0
  1883  0000D6                     	ds	1
  1884  0000D7                     _GetMethod:
  1885                           	opt stack 0
  1886  0000D7                     	ds	1
  1887  0000D8                     _InitNetwork:
  1888                           	opt stack 0
  1889  0000D8                     	ds	1
  1890  0000D9                     _SmsTxtReady:
  1891                           	opt stack 0
  1892  0000D9                     	ds	1
  1893  0000DA                     _GetSmsText:
  1894                           	opt stack 0
  1895  0000DA                     	ds	1
  1896  0000DB                     _SmsEvent:
  1897                           	opt stack 0
  1898  0000DB                     	ds	1
  1899  0000DC                     _RingEvent:
  1900                           	opt stack 0
  1901  0000DC                     	ds	1
  1902  0000DD                     _SendSmsEvent:
  1903                           	opt stack 0
  1904  0000DD                     	ds	1
  1905  0000DE                     _MdmOnOffPulseRequest:
  1906                           	opt stack 0
  1907  0000DE                     	ds	1
  1908                           tblptru	equ	0xFF8
  1909                           tblptrh	equ	0xFF7
  1910                           tblptrl	equ	0xFF6
  1911                           tablat	equ	0xFF5
  1912                           postinc0	equ	0xFEE
  1913                           wreg	equ	0xFE8
  1914                           postdec1	equ	0xFE5
  1915                           fsr1h	equ	0xFE2
  1916                           fsr1l	equ	0xFE1
  1917                           
  1918                           	psect	bssBANK1
  1919  0001C9                     __pbssBANK1:
  1920                           	opt stack 0
  1921  0001C9                     _outPipes:
  1922                           	opt stack 0
  1923  0001C9                     	ds	8
  1924  0001D1                     _CDCDataInHandle:
  1925                           	opt stack 0
  1926  0001D1                     	ds	2
  1927  0001D3                     MyApp_Task@blinkSeconds:
  1928                           	opt stack 0
  1929  0001D3                     	ds	1
  1930  0001D4                     	ds	1
  1931  0001D5                     	ds	1
  1932  0001D6                     	ds	1
  1933  0001D7                     	ds	1
  1934  0001D8                     initGprsModem@isInitialized:
  1935                           	opt stack 0
  1936  0001D8                     	ds	1
  1937  0001D9                     	ds	1
  1938  0001DA                     	ds	1
  1939  0001DB                     	ds	1
  1940  0001DC                     	ds	1
  1941  0001DD                     	ds	1
  1942  0001DE                     	ds	1
  1943  0001DF                     	ds	1
  1944  0001E0                     GsmGprsTerminal@SMS:
  1945                           	opt stack 0
  1946  0001E0                     	ds	1
  1947  0001E1                     	ds	1
  1948  0001E2                     _control_signal_bitmap:
  1949                           	opt stack 0
  1950  0001E2                     	ds	1
  1951  0001E3                     _cdc_mem_type:
  1952                           	opt stack 0
  1953  0001E3                     	ds	1
  1954  0001E4                     _USBTicksSinceSuspendEnd:
  1955                           	opt stack 0
  1956  0001E4                     	ds	1
  1957  0001E5                     _BothEP0OutUOWNsSet:
  1958                           	opt stack 0
  1959  0001E5                     	ds	1
  1960  0001E6                     _USBBusIsSuspended:
  1961                           	opt stack 0
  1962  0001E6                     	ds	1
  1963  0001E7                     _RemoteWakeup:
  1964                           	opt stack 0
  1965  0001E7                     	ds	1
  1966  0001E8                     I2cSlv_QueryI2cData@Ret:
  1967                           	opt stack 0
  1968  0001E8                     	ds	1
  1969  0001E9                     I2cSlv_QueryI2cData@I2cOpState:
  1970                           	opt stack 0
  1971  0001E9                     	ds	1
  1972  0001EA                     I2cSendMsgSm@I2cComState:
  1973                           	opt stack 0
  1974  0001EA                     	ds	1
  1975  0001EB                     _I2cBusStatus:
  1976                           	opt stack 0
  1977  0001EB                     	ds	1
  1978  0001EC                     HttpGetMethod@GetMOutSts:
  1979                           	opt stack 0
  1980  0001EC                     	ds	1
  1981  0001ED                     HttpGetMethod@GetMethodState:
  1982                           	opt stack 0
  1983  0001ED                     	ds	1
  1984  0001EE                     InitGprsNetwork@GprsNetInitState:
  1985                           	opt stack 0
  1986  0001EE                     	ds	1
  1987  0001EF                     _PostMethod:
  1988                           	opt stack 0
  1989  0001EF                     	ds	1
  1990  0001F0                     _HttpGetMethodSts:
  1991                           	opt stack 0
  1992  0001F0                     	ds	1
  1993  0001F1                     _GprsNetworkSts:
  1994                           	opt stack 0
  1995  0001F1                     	ds	1
  1996  0001F2                     _ApnLenLocal:
  1997                           	opt stack 0
  1998  0001F2                     	ds	1
  1999  0001F3                     SendSmsSm@SendSms_NextState:
  2000                           	opt stack 0
  2001  0001F3                     	ds	1
  2002  0001F4                     SendSmsSm@SendSms_State:
  2003                           	opt stack 0
  2004  0001F4                     	ds	1
  2005  0001F5                     _AlarmEvent:
  2006                           	opt stack 0
  2007  0001F5                     	ds	1
  2008  0001F6                     _Led3OutSts:
  2009                           	opt stack 0
  2010  0001F6                     	ds	1
  2011  0001F7                     _Led3Sts:
  2012                           	opt stack 0
  2013  0001F7                     	ds	1
  2014  0001F8                     _Led2OutSts:
  2015                           	opt stack 0
  2016  0001F8                     	ds	1
  2017  0001F9                     _Led2Sts:
  2018                           	opt stack 0
  2019  0001F9                     	ds	1
  2020  0001FA                     _Led1OutSts:
  2021                           	opt stack 0
  2022  0001FA                     	ds	1
  2023  0001FB                     _Led1Sts:
  2024                           	opt stack 0
  2025  0001FB                     	ds	1
  2026  0001FC                     I2cDummyTx@DummyBuffer:
  2027                           	opt stack 0
  2028  0001FC                     	ds	1
  2029                           tblptru	equ	0xFF8
  2030                           tblptrh	equ	0xFF7
  2031                           tblptrl	equ	0xFF6
  2032                           tablat	equ	0xFF5
  2033                           postinc0	equ	0xFEE
  2034                           wreg	equ	0xFE8
  2035                           postdec1	equ	0xFE5
  2036                           fsr1h	equ	0xFE2
  2037                           fsr1l	equ	0xFE1
  2038                           
  2039                           	psect	dataBANK1
  2040  0001FD                     __pdataBANK1:
  2041                           	opt stack 0
  2042  0001FD                     	ds	1
  2043  0001FE                     InitGprsNetwork@GprsInitSts:
  2044                           	opt stack 0
  2045  0001FE                     	ds	1
  2046                           tblptru	equ	0xFF8
  2047                           tblptrh	equ	0xFF7
  2048                           tblptrl	equ	0xFF6
  2049                           tablat	equ	0xFF5
  2050                           postinc0	equ	0xFEE
  2051                           wreg	equ	0xFE8
  2052                           postdec1	equ	0xFE5
  2053                           fsr1h	equ	0xFE2
  2054                           fsr1l	equ	0xFE1
  2055                           
  2056                           	psect	bssBANK2
  2057  0002C8                     __pbssBANK2:
  2058                           	opt stack 0
  2059  0002C8                     _pCDCDst:
  2060                           	opt stack 0
  2061  0002C8                     	ds	3
  2062  0002CB                     _pCDCSrc:
  2063                           	opt stack 0
  2064  0002CB                     	ds	3
  2065  0002CE                     _ep_data_out:
  2066                           	opt stack 0
  2067  0002CE                     	ds	3
  2068  0002D1                     _ep_data_in:
  2069                           	opt stack 0
  2070  0002D1                     	ds	3
  2071  0002D4                     _pDst:
  2072                           	opt stack 0
  2073  0002D4                     	ds	2
  2074  0002D6                     ConfigureModem@DelayCounter:
  2075                           	opt stack 0
  2076  0002D6                     	ds	2
  2077  0002D8                     ConfigureModem@DelayValueMs:
  2078                           	opt stack 0
  2079  0002D8                     	ds	2
  2080  0002DA                     TurnOnModem@Counter:
  2081                           	opt stack 0
  2082  0002DA                     	ds	2
  2083  0002DC                     UpdateSchFlag@InterruptCounter:
  2084                           	opt stack 0
  2085  0002DC                     	ds	2
  2086  0002DE                     MdmCntSm@Counter:
  2087                           	opt stack 0
  2088  0002DE                     	ds	2
  2089  0002E0                     RiSm@Counter:
  2090                           	opt stack 0
  2091  0002E0                     	ds	2
  2092  0002E2                     _ExtInt1IsrCallback:
  2093                           	opt stack 0
  2094  0002E2                     	ds	2
  2095  0002E4                     _ExtInt0IsrCallback:
  2096                           	opt stack 0
  2097  0002E4                     	ds	2
  2098  0002E6                     _RtccIsrCallback:
  2099                           	opt stack 0
  2100  0002E6                     	ds	2
  2101  0002E8                     _Tmr4IsrCallback:
  2102                           	opt stack 0
  2103  0002E8                     	ds	2
  2104  0002EA                     _Tmr2IsrCallback:
  2105                           	opt stack 0
  2106  0002EA                     	ds	2
  2107  0002EC                     Term_MainSm@TermMainSmState:
  2108                           	opt stack 0
  2109  0002EC                     	ds	1
  2110  0002ED                     Terminal@FormatOption:
  2111                           	opt stack 0
  2112  0002ED                     	ds	1
  2113  0002EE                     Terminal@SlaveAddr:
  2114                           	opt stack 0
  2115  0002EE                     	ds	1
  2116  0002EF                     Terminal@PackageLen:
  2117                           	opt stack 0
  2118  0002EF                     	ds	1
  2119  0002F0                     Terminal@TermState:
  2120                           	opt stack 0
  2121  0002F0                     	ds	1
  2122  0002F1                     _USBAlternateInterface:
  2123                           	opt stack 0
  2124  0002F1                     	ds	2
  2125                           tblptru	equ	0xFF8
  2126                           tblptrh	equ	0xFF7
  2127                           tblptrl	equ	0xFF6
  2128                           tablat	equ	0xFF5
  2129                           postinc0	equ	0xFEE
  2130                           wreg	equ	0xFE8
  2131                           postdec1	equ	0xFE5
  2132                           fsr1h	equ	0xFE2
  2133                           fsr1l	equ	0xFE1
  2134                           
  2135                           	psect	dataBANK2
  2136  0002F3                     __pdataBANK2:
  2137                           	opt stack 0
  2138  0002F3                     Terminal@EchoOption:
  2139                           	opt stack 0
  2140  0002F3                     	ds	1
  2141  0002F4                     _MainSystemTimebaseFlag:
  2142                           	opt stack 0
  2143  0002F4                     	ds	1
  2144  0002F5                     _ConnTimeout:
  2145                           	opt stack 0
  2146  0002F5                     	ds	11
  2147                           tblptru	equ	0xFF8
  2148                           tblptrh	equ	0xFF7
  2149                           tblptrl	equ	0xFF6
  2150                           tablat	equ	0xFF5
  2151                           postinc0	equ	0xFEE
  2152                           wreg	equ	0xFE8
  2153                           postdec1	equ	0xFE5
  2154                           fsr1h	equ	0xFE2
  2155                           fsr1l	equ	0xFE1
  2156                           
  2157                           	psect	bssBANK3
  2158  000300                     __pbssBANK3:
  2159                           	opt stack 0
  2160  000300                     _Rtcm_SystemDate:
  2161                           	opt stack 0
  2162  000300                     	ds	8
  2163  000308                     _Rtcm_RtccAlarm:
  2164                           	opt stack 0
  2165  000308                     	ds	6
  2166  00030E                     _pBDTEntryOut:
  2167                           	opt stack 0
  2168  00030E                     	ds	6
  2169  000314                     _BaudRateGen:
  2170                           	opt stack 0
  2171  000314                     	ds	4
  2172  000318                     _USB1msTickCount:
  2173                           	opt stack 0
  2174  000318                     	ds	4
  2175  00031C                     _OsTmr_OsTickCounter:
  2176                           	opt stack 0
  2177  00031C                     	ds	4
  2178  000320                     MyApp_Task@F8996:
  2179                           	opt stack 0
  2180  000320                     	ds	2
  2181  000322                     	ds	2
  2182  000324                     _PhoneNumberLen:
  2183                           	opt stack 0
  2184  000324                     	ds	2
  2185  000326                     _ApnLocal:
  2186                           	opt stack 0
  2187  000326                     	ds	2
  2188  000328                     _UartConfig:
  2189                           	opt stack 0
  2190  000328                     	ds	21
  2191  00033D                     I2cSlv_QueryI2cData@TimeoutTimer:
  2192                           	opt stack 0
  2193  00033D                     	ds	11
  2194  000348                     I2cSlv_QueryI2cData@QueryTimer:
  2195                           	opt stack 0
  2196  000348                     	ds	11
  2197  000353                     _I2cConfig:
  2198                           	opt stack 0
  2199  000353                     	ds	10
  2200  00035D                     _Led3Blink:
  2201                           	opt stack 0
  2202  00035D                     	ds	9
  2203  000366                     _Led2Blink:
  2204                           	opt stack 0
  2205  000366                     	ds	9
  2206  00036F                     _Led1Blink:
  2207                           	opt stack 0
  2208  00036F                     	ds	9
  2209  000378                     _dummy_encapsulated_cmd_response:
  2210                           	opt stack 0
  2211  000378                     	ds	8
  2212  000380                     _line_coding:
  2213                           	opt stack 0
  2214  000380                     	ds	7
  2215  000387                     _Led3Pulse:
  2216                           	opt stack 0
  2217  000387                     	ds	6
  2218  00038D                     _Led2Pulse:
  2219                           	opt stack 0
  2220  00038D                     	ds	6
  2221  000393                     _Led1Pulse:
  2222                           	opt stack 0
  2223  000393                     	ds	6
  2224  000399                     _I2cRxPacket:
  2225                           	opt stack 0
  2226  000399                     	ds	6
  2227  00039F                     _I2cTxPacket:
  2228                           	opt stack 0
  2229  00039F                     	ds	5
  2230  0003A4                     _HttpGetDataLocal:
  2231                           	opt stack 0
  2232  0003A4                     	ds	5
  2233  0003A9                     Terminal@Addr:
  2234                           	opt stack 0
  2235  0003A9                     	ds	4
  2236  0003AD                     Terminal@Len:
  2237                           	opt stack 0
  2238  0003AD                     	ds	4
  2239  0003B1                     _AlCfg:
  2240                           	opt stack 0
  2241  0003B1                     	ds	4
  2242  0003B5                     _RtcConfig:
  2243                           	opt stack 0
  2244  0003B5                     	ds	4
  2245  0003B9                     initGprsModem@modemCounter:
  2246                           	opt stack 0
  2247  0003B9                     	ds	2
  2248                           tblptru	equ	0xFF8
  2249                           tblptrh	equ	0xFF7
  2250                           tblptrl	equ	0xFF6
  2251                           tablat	equ	0xFF5
  2252                           postinc0	equ	0xFEE
  2253                           wreg	equ	0xFE8
  2254                           postdec1	equ	0xFE5
  2255                           fsr1h	equ	0xFE2
  2256                           fsr1l	equ	0xFE1
  2257                           
  2258                           	psect	dataBANK3
  2259  0003BB                     __pdataBANK3:
  2260                           	opt stack 0
  2261  0003BB                     ModemEvtParser@F9088:
  2262                           	opt stack 0
  2263  0003BB                     	ds	5
  2264  0003C0                     ModemEvtParser@F9086:
  2265                           	opt stack 0
  2266  0003C0                     	ds	4
  2267  0003C4                     MyApp_Task@F8993:
  2268                           	opt stack 0
  2269  0003C4                     	ds	2
  2270  0003C6                     MyApp_Task@F8990:
  2271                           	opt stack 0
  2272  0003C6                     	ds	2
  2273  0003C8                     	ds	2
  2274  0003CA                     triggerRelay@F8966:
  2275                           	opt stack 0
  2276  0003CA                     	ds	2
  2277  0003CC                     Term_MainSm@TermDelay:
  2278                           	opt stack 0
  2279  0003CC                     	ds	11
  2280  0003D7                     _ConnWait:
  2281                           	opt stack 0
  2282  0003D7                     	ds	11
  2283  0003E2                     SendSmsSm@SwTimer:
  2284                           	opt stack 0
  2285  0003E2                     	ds	11
  2286  0003ED                     CheckModem@Timeout:
  2287                           	opt stack 0
  2288  0003ED                     	ds	11
  2289  0003F8                     MyApp_Task@blickTicks:
  2290                           	opt stack 0
  2291  0003F8                     	ds	2
  2292                           tblptru	equ	0xFF8
  2293                           tblptrh	equ	0xFF7
  2294                           tblptrl	equ	0xFF6
  2295                           tablat	equ	0xFF5
  2296                           postinc0	equ	0xFEE
  2297                           wreg	equ	0xFE8
  2298                           postdec1	equ	0xFE5
  2299                           fsr1h	equ	0xFE2
  2300                           fsr1l	equ	0xFE1
  2301                           
  2302                           	psect	bssBANK4
  2303  000440                     __pbssBANK4:
  2304                           	opt stack 0
  2305  000440                     	ds	10
  2306  00044A                     _cdc_notice:
  2307                           	opt stack 0
  2308  00044A                     	ds	10
  2309  000454                     _cdc_data_rx:
  2310                           	opt stack 0
  2311  000454                     	ds	64
  2312  000494                     Term_MainSm@Data:
  2313                           	opt stack 0
  2314  000494                     	ds	50
  2315  0004C6                     _PhoneNumber:
  2316                           	opt stack 0
  2317  0004C6                     	ds	20
  2318  0004DA                     Terminal@SwTimer:
  2319                           	opt stack 0
  2320  0004DA                     	ds	11
  2321                           tblptru	equ	0xFF8
  2322                           tblptrh	equ	0xFF7
  2323                           tblptrl	equ	0xFF6
  2324                           tablat	equ	0xFF5
  2325                           postinc0	equ	0xFEE
  2326                           wreg	equ	0xFE8
  2327                           postdec1	equ	0xFE5
  2328                           fsr1h	equ	0xFE2
  2329                           fsr1l	equ	0xFE1
  2330                           
  2331                           	psect	dataBANK4
  2332  0004E5                     __pdataBANK4:
  2333                           	opt stack 0
  2334  0004E5                     MyApp_Task@F8999:
  2335                           	opt stack 0
  2336  0004E5                     	ds	10
  2337  0004EF                     ModemEvtParser@F9090:
  2338                           	opt stack 0
  2339  0004EF                     	ds	10
  2340                           tblptru	equ	0xFF8
  2341                           tblptrh	equ	0xFF7
  2342                           tblptrl	equ	0xFF6
  2343                           tablat	equ	0xFF5
  2344                           postinc0	equ	0xFEE
  2345                           wreg	equ	0xFE8
  2346                           postdec1	equ	0xFE5
  2347                           fsr1h	equ	0xFE2
  2348                           fsr1l	equ	0xFE1
  2349                           
  2350                           	psect	bssBANK5
  2351  000500                     __pbssBANK5:
  2352                           	opt stack 0
  2353  000500                     Terminal@Payload:
  2354                           	opt stack 0
  2355  000500                     	ds	80
  2356  000550                     Terminal@TermRxBuffer:
  2357                           	opt stack 0
  2358  000550                     	ds	50
  2359                           tblptru	equ	0xFF8
  2360                           tblptrh	equ	0xFF7
  2361                           tblptrl	equ	0xFF6
  2362                           tablat	equ	0xFF5
  2363                           postinc0	equ	0xFEE
  2364                           wreg	equ	0xFE8
  2365                           postdec1	equ	0xFE5
  2366                           fsr1h	equ	0xFE2
  2367                           fsr1l	equ	0xFE1
  2368                           
  2369                           	psect	dataBANK5
  2370  000582                     __pdataBANK5:
  2371                           	opt stack 0
  2372  000582                     _TaskTable:
  2373                           	opt stack 0
  2374  000582                     	ds	80
  2375                           tblptru	equ	0xFF8
  2376                           tblptrh	equ	0xFF7
  2377                           tblptrl	equ	0xFF6
  2378                           tablat	equ	0xFF5
  2379                           postinc0	equ	0xFEE
  2380                           wreg	equ	0xFE8
  2381                           postdec1	equ	0xFE5
  2382                           fsr1h	equ	0xFE2
  2383                           fsr1l	equ	0xFE1
  2384                           
  2385                           	psect	bssBANK6
  2386  000600                     __pbssBANK6:
  2387                           	opt stack 0
  2388  000600                     _OsAlarms:
  2389                           	opt stack 0
  2390  000600                     	ds	220
  2391                           tblptru	equ	0xFF8
  2392                           tblptrh	equ	0xFF7
  2393                           tblptrl	equ	0xFF6
  2394                           tablat	equ	0xFF5
  2395                           postinc0	equ	0xFEE
  2396                           wreg	equ	0xFE8
  2397                           postdec1	equ	0xFE5
  2398                           fsr1h	equ	0xFE2
  2399                           fsr1l	equ	0xFE1
  2400                           
  2401                           	psect	bssBANK7
  2402  000700                     __pbssBANK7:
  2403                           	opt stack 0
  2404  000700                     _Mdm_SmsRx:
  2405                           	opt stack 0
  2406  000700                     	ds	132
  2407  000784                     _cdc_data_tx:
  2408                           	opt stack 0
  2409  000784                     	ds	64
  2410  0007C4                     _MessageText:
  2411                           	opt stack 0
  2412  0007C4                     	ds	50
  2413                           tblptru	equ	0xFF8
  2414                           tblptrh	equ	0xFF7
  2415                           tblptrl	equ	0xFF6
  2416                           tablat	equ	0xFF5
  2417                           postinc0	equ	0xFEE
  2418                           wreg	equ	0xFE8
  2419                           postdec1	equ	0xFE5
  2420                           fsr1h	equ	0xFE2
  2421                           fsr1l	equ	0xFE1
  2422                           
  2423                           	psect	bssBANK8
  2424  000800                     __pbssBANK8:
  2425                           	opt stack 0
  2426  000800                     GsmGprsTerminal@UsbBuffer:
  2427                           	opt stack 0
  2428  000800                     	ds	200
  2429                           tblptru	equ	0xFF8
  2430                           tblptrh	equ	0xFF7
  2431                           tblptrl	equ	0xFF6
  2432                           tablat	equ	0xFF5
  2433                           postinc0	equ	0xFEE
  2434                           wreg	equ	0xFE8
  2435                           postdec1	equ	0xFE5
  2436                           fsr1h	equ	0xFE2
  2437                           fsr1l	equ	0xFE1
  2438                           
  2439                           	psect	bssBANK9
  2440  000900                     __pbssBANK9:
  2441                           	opt stack 0
  2442  000900                     GsmGprsTerminal@UartBuffer:
  2443                           	opt stack 0
  2444  000900                     	ds	200
  2445                           tblptru	equ	0xFF8
  2446                           tblptrh	equ	0xFF7
  2447                           tblptrl	equ	0xFF6
  2448                           tablat	equ	0xFF5
  2449                           postinc0	equ	0xFEE
  2450                           wreg	equ	0xFE8
  2451                           postdec1	equ	0xFE5
  2452                           fsr1h	equ	0xFE2
  2453                           fsr1l	equ	0xFE1
  2454                           
  2455                           	psect	bssBIGRAMl
  2456  000AC8                     __pbssBIGRAMl:
  2457                           	opt stack 0
  2458  000AC8                     Uart_MdmGsmGprsReadService@LocalRxBuffer:
  2459                           	opt stack 0
  2460  000AC8                     	ds	400
  2461  000C58                     _RxBuffer:
  2462                           	opt stack 0
  2463  000C58                     	ds	400
  2464                           tblptru	equ	0xFF8
  2465                           tblptrh	equ	0xFF7
  2466                           tblptrl	equ	0xFF6
  2467                           tablat	equ	0xFF5
  2468                           postinc0	equ	0xFEE
  2469                           wreg	equ	0xFE8
  2470                           postdec1	equ	0xFE5
  2471                           fsr1h	equ	0xFE2
  2472                           fsr1l	equ	0xFE1
  2473                           
  2474                           	psect	cstackBANK10
  2475  000A00                     __pcstackBANK10:
  2476                           	opt stack 0
  2477  000A00                     Terminal@UsbRxBuffer:
  2478                           	opt stack 0
  2479                           
  2480                           ; 200 bytes @ 0x0
  2481  000A00                     	ds	200
  2482                           tblptru	equ	0xFF8
  2483                           tblptrh	equ	0xFF7
  2484                           tblptrl	equ	0xFF6
  2485                           tablat	equ	0xFF5
  2486                           postinc0	equ	0xFEE
  2487                           wreg	equ	0xFE8
  2488                           postdec1	equ	0xFE5
  2489                           fsr1h	equ	0xFE2
  2490                           fsr1l	equ	0xFE1
  2491                           
  2492                           	psect	cstackBANK2
  2493  000200                     __pcstackBANK2:
  2494                           	opt stack 0
  2495  000200                     Terminal@UsbTxBuffer:
  2496                           	opt stack 0
  2497                           
  2498                           ; 200 bytes @ 0x0
  2499  000200                     	ds	200
  2500                           tblptru	equ	0xFF8
  2501                           tblptrh	equ	0xFF7
  2502                           tblptrl	equ	0xFF6
  2503                           tablat	equ	0xFF5
  2504                           postinc0	equ	0xFEE
  2505                           wreg	equ	0xFE8
  2506                           postdec1	equ	0xFE5
  2507                           fsr1h	equ	0xFE2
  2508                           fsr1l	equ	0xFE1
  2509                           
  2510                           	psect	cstackBANK1
  2511  000100                     __pcstackBANK1:
  2512                           	opt stack 0
  2513  000100                     SendSmsSm@UartMessage:
  2514                           	opt stack 0
  2515  000100                     InitGprsNetwork@UartMessage:
  2516                           	opt stack 0
  2517  000100                     Terminal@TermTxBuffer:
  2518                           	opt stack 0
  2519  000100                     MyApp_Task@smsText:
  2520                           	opt stack 0
  2521  000100                     HttpGetMethod@UartMessage:
  2522                           	opt stack 0
  2523                           
  2524                           ; 200 bytes @ 0x0
  2525  000100                     	ds	50
  2526  000132                     InitGprsNetwork@Index:
  2527                           	opt stack 0
  2528  000132                     Term_MainSm@FwkMajorStr:
  2529                           	opt stack 0
  2530  000132                     MyApp_Task@phone:
  2531                           	opt stack 0
  2532                           
  2533                           ; 10 bytes @ 0x32
  2534  000132                     	ds	4
  2535  000136                     Term_MainSm@FwkMinorStr:
  2536                           	opt stack 0
  2537                           
  2538                           ; 4 bytes @ 0x36
  2539  000136                     	ds	4
  2540  00013A                     Term_MainSm@FwkBuildStr:
  2541                           	opt stack 0
  2542                           
  2543                           ; 4 bytes @ 0x3A
  2544  00013A                     	ds	2
  2545  00013C                     MyApp_Task@off:
  2546                           	opt stack 0
  2547                           
  2548                           ; 2 bytes @ 0x3C
  2549  00013C                     	ds	2
  2550  00013E                     MyApp_Task@on:
  2551                           	opt stack 0
  2552                           
  2553                           ; 2 bytes @ 0x3E
  2554  00013E                     	ds	2
  2555  000140                     MyApp_Task@I2cTxBufferTest:
  2556                           	opt stack 0
  2557                           
  2558                           ; 2 bytes @ 0x40
  2559  000140                     	ds	136
  2560  0001C8                     HttpGetMethod@Index:
  2561                           	opt stack 0
  2562                           
  2563                           ; 1 bytes @ 0xC8
  2564  0001C8                     	ds	1
  2565                           tblptru	equ	0xFF8
  2566                           tblptrh	equ	0xFF7
  2567                           tblptrl	equ	0xFF6
  2568                           tablat	equ	0xFF5
  2569                           postinc0	equ	0xFEE
  2570                           wreg	equ	0xFE8
  2571                           postdec1	equ	0xFE5
  2572                           fsr1h	equ	0xFE2
  2573                           fsr1l	equ	0xFE1
  2574                           
  2575                           	psect	cstackBANK0
  2576  000060                     __pcstackBANK0:
  2577                           	opt stack 0
  2578  000060                     
  2579                           ; 1 bytes @ 0x0
  2580  000060                     	ds	8
  2581  000068                     ??_LowPriorityIsr:
  2582                           
  2583                           ; 1 bytes @ 0x8
  2584  000068                     	ds	21
  2585  00007D                     ??_isdigit:
  2586  00007D                     ??_isspace:
  2587  00007D                     ??_isupper:
  2588  00007D                     ??_Rtcc_GetRtccValue:
  2589  00007D                     ??_UartTxBufferStatus:
  2590  00007D                     ??_USBStdGetDscHandler:
  2591  00007D                     ??_USBStdGetStatusHandler:
  2592  00007D                     ?_USBTransferOnePacket:
  2593                           	opt stack 0
  2594  00007D                     ?_strlen:
  2595                           	opt stack 0
  2596  00007D                     ?_sprintf:
  2597                           	opt stack 0
  2598  00007D                     ?___wmul:
  2599                           	opt stack 0
  2600  00007D                     ?___awdiv:
  2601                           	opt stack 0
  2602  00007D                     ?___awmod:
  2603                           	opt stack 0
  2604  00007D                     ?___lwmod:
  2605                           	opt stack 0
  2606  00007D                     ?_GetOsTickCounter:
  2607                           	opt stack 0
  2608  00007D                     ?___lmul:
  2609                           	opt stack 0
  2610  00007D                     Irq_InitIntController@GlobalInt_HighPInt:
  2611                           	opt stack 0
  2612  00007D                     SetAckStatus@AckSts:
  2613                           	opt stack 0
  2614  00007D                     WriteByte@Byte:
  2615                           	opt stack 0
  2616  00007D                     ReadByte@Byte:
  2617                           	opt stack 0
  2618  00007D                     Mcu_SetWdgSts@WdgSts:
  2619                           	opt stack 0
  2620  00007D                     RtccIrqInit@Priority:
  2621                           	opt stack 0
  2622  00007D                     Rtcc_SetRtcStatus@Status:
  2623                           	opt stack 0
  2624  00007D                     TmrBInit@Prescaler:
  2625                           	opt stack 0
  2626  00007D                     Tmr_TmrBIrqSet@Priority:
  2627                           	opt stack 0
  2628  00007D                     Tmr_StartTmr@TmrNumb:
  2629                           	opt stack 0
  2630  00007D                     UartWriteByte@ByteToWrite:
  2631                           	opt stack 0
  2632  00007D                     USBTransferOnePacket@dir:
  2633                           	opt stack 0
  2634  00007D                     USBConfigureEndpoint@direction:
  2635                           	opt stack 0
  2636  00007D                     USBCtrlTrfTxService@byteToSend:
  2637                           	opt stack 0
  2638  00007D                     USBCtrlTrfRxService@i:
  2639                           	opt stack 0
  2640  00007D                     Led_SetLedStatus@LedSts:
  2641                           	opt stack 0
  2642  00007D                     toupper@c:
  2643                           	opt stack 0
  2644  00007D                     tolower@c:
  2645                           	opt stack 0
  2646  00007D                     Mcu_StartSystemPll@PllStartupCounter:
  2647                           	opt stack 0
  2648  00007D                     Rtcc_AlarmConfig@AlarmConfig:
  2649                           	opt stack 0
  2650  00007D                     Tmr_RegisterTmr2IsrCallback@IsrCallback:
  2651                           	opt stack 0
  2652  00007D                     Uart_ClearRxBuffer@Index:
  2653                           	opt stack 0
  2654  00007D                     GenerateEvt@Event:
  2655                           	opt stack 0
  2656  00007D                     ReceiveEvt@Event:
  2657                           	opt stack 0
  2658  00007D                     Led_SetLedBlinkTime@OnTimeMs:
  2659                           	opt stack 0
  2660  00007D                     StringCompare@String1:
  2661                           	opt stack 0
  2662  00007D                     StringCopy@SourceStr:
  2663                           	opt stack 0
  2664  00007D                     ClearBuffer@Buffer:
  2665                           	opt stack 0
  2666  00007D                     sprintf@sp:
  2667                           	opt stack 0
  2668  00007D                     ___wmul@multiplier:
  2669                           	opt stack 0
  2670  00007D                     ___awdiv@dividend:
  2671                           	opt stack 0
  2672  00007D                     ___awmod@dividend:
  2673                           	opt stack 0
  2674  00007D                     ___lwmod@dividend:
  2675                           	opt stack 0
  2676  00007D                     memcpy@d1:
  2677                           	opt stack 0
  2678  00007D                     memset@p1:
  2679                           	opt stack 0
  2680  00007D                     strcat@to:
  2681                           	opt stack 0
  2682  00007D                     strcpy@to:
  2683                           	opt stack 0
  2684  00007D                     strlen@s:
  2685                           	opt stack 0
  2686  00007D                     ___lmul@multiplier:
  2687                           	opt stack 0
  2688                           
  2689                           ; 4 bytes @ 0x1D
  2690  00007D                     	ds	1
  2691  00007E                     ??_USBConfigureEndpoint:
  2692  00007E                     Irq_InitIntController@PerInt_LowPInt:
  2693                           	opt stack 0
  2694  00007E                     Rtcc_GetRtccValue@RtccPtrVal:
  2695                           	opt stack 0
  2696  00007E                     TmrBInit@Postscaler:
  2697                           	opt stack 0
  2698  00007E                     Tmr_TmrBIrqSet@TmrIrqSts:
  2699                           	opt stack 0
  2700  00007E                     UartWriteByte@Module:
  2701                           	opt stack 0
  2702  00007E                     UartTxBufferStatus@Module:
  2703                           	opt stack 0
  2704  00007E                     USBCtrlTrfRxService@byteToRead:
  2705                           	opt stack 0
  2706  00007E                     USBCtrlTrfInHandler@lastDTS:
  2707                           	opt stack 0
  2708  00007E                     Led_SetLedStatus@Led:
  2709                           	opt stack 0
  2710  00007E                     _isdigit$6139:
  2711                           	opt stack 0
  2712  00007E                     _isspace$6408:
  2713                           	opt stack 0
  2714  00007E                     _isupper$6411:
  2715                           	opt stack 0
  2716  00007E                     I2c_WriteData@WritePacket:
  2717                           	opt stack 0
  2718  00007E                     Rtcc_RtcConfig@RtcConfig:
  2719                           	opt stack 0
  2720  00007E                     USBTransferOnePacket@data:
  2721                           	opt stack 0
  2722  00007E                     USBStdGetStatusHandler@p:
  2723                           	opt stack 0
  2724                           
  2725                           ; 2 bytes @ 0x1E
  2726  00007E                     	ds	1
  2727  00007F                     ??_strlen:
  2728  00007F                     ??_Rtcc_AlarmConfig:
  2729  00007F                     ??_TmrBInit:
  2730  00007F                     Irq_InitIntController@IntPriorityEn:
  2731                           	opt stack 0
  2732  00007F                     Rtcc_GetRtccValue@RetValue:
  2733                           	opt stack 0
  2734  00007F                     Tmr_TmrBIrqSet@TmrNumb:
  2735                           	opt stack 0
  2736  00007F                     UartTxBufferStatus@TxBufferStatus:
  2737                           	opt stack 0
  2738  00007F                     GenerateEvt@EventStatus:
  2739                           	opt stack 0
  2740  00007F                     isdigit@c:
  2741                           	opt stack 0
  2742  00007F                     isspace@c:
  2743                           	opt stack 0
  2744  00007F                     isupper@c:
  2745                           	opt stack 0
  2746  00007F                     Led_SetLedBlinkTime@OffTimeMs:
  2747                           	opt stack 0
  2748  00007F                     StringCompare@String2:
  2749                           	opt stack 0
  2750  00007F                     StringCopy@DestStr:
  2751                           	opt stack 0
  2752  00007F                     ClearBuffer@Len:
  2753                           	opt stack 0
  2754  00007F                     sprintf@f:
  2755                           	opt stack 0
  2756  00007F                     ___wmul@multiplicand:
  2757                           	opt stack 0
  2758  00007F                     ___awdiv@divisor:
  2759                           	opt stack 0
  2760  00007F                     ___awmod@divisor:
  2761                           	opt stack 0
  2762  00007F                     ___lwmod@divisor:
  2763                           	opt stack 0
  2764  00007F                     memcpy@s1:
  2765                           	opt stack 0
  2766  00007F                     memset@c:
  2767                           	opt stack 0
  2768  00007F                     strcat@from:
  2769                           	opt stack 0
  2770  00007F                     strcpy@from:
  2771                           	opt stack 0
  2772                           
  2773                           ; 2 bytes @ 0x1F
  2774  00007F                     	ds	1
  2775  000080                     ??_isalpha:
  2776  000080                     ??_isxdigit:
  2777  000080                     ??_I2c_WriteData:
  2778  000080                     ??_Rtcc_RtcConfig:
  2779  000080                     Rtcc_GetRtccValue@RegValue:
  2780                           	opt stack 0
  2781  000080                     TmrBInit@TmrNumb:
  2782                           	opt stack 0
  2783  000080                     ReceiveEvt@EventStatus:
  2784                           	opt stack 0
  2785  000080                     USBTransferOnePacket@len:
  2786                           	opt stack 0
  2787  000080                     I2c_ReadData@ReadPacket:
  2788                           	opt stack 0
  2789  000080                     Uart_WriteConstString@ConstStringToWrite:
  2790                           	opt stack 0
  2791  000080                     Uart_WriteString@StringToWrite:
  2792                           	opt stack 0
  2793  000080                     Uart_WriteStringLen@StringToWrite:
  2794                           	opt stack 0
  2795  000080                     I2cSlv_SendI2cMsg@TxBuffer:
  2796                           	opt stack 0
  2797  000080                     I2cSlv_ReceiveI2cMsg@RxBuffer:
  2798                           	opt stack 0
  2799                           
  2800                           ; 2 bytes @ 0x20
  2801  000080                     	ds	1
  2802  000081                     ?_GetElapsedTime:
  2803                           	opt stack 0
  2804  000081                     ?_Rtcm_GetRtccDate:
  2805                           	opt stack 0
  2806  000081                     Mdm_IsSmsReceived@Ret:
  2807                           	opt stack 0
  2808  000081                     Mdm_IsRinging@Ret:
  2809                           	opt stack 0
  2810  000081                     I2cSlv_I2cReadMsgSts@Result:
  2811                           	opt stack 0
  2812  000081                     USBTransferOnePacket@ep:
  2813                           	opt stack 0
  2814  000081                     Led_SetLedBlinkTime@Led:
  2815                           	opt stack 0
  2816  000081                     ___awdiv@counter:
  2817                           	opt stack 0
  2818  000081                     ___awmod@counter:
  2819                           	opt stack 0
  2820  000081                     ___lwmod@counter:
  2821                           	opt stack 0
  2822  000081                     _isalpha$6405:
  2823                           	opt stack 0
  2824  000081                     _isxdigit$6415:
  2825                           	opt stack 0
  2826  000081                     OsTmr_StartTimer@Timer:
  2827                           	opt stack 0
  2828  000081                     StringCompare@Len:
  2829                           	opt stack 0
  2830  000081                     StringCopy@Len:
  2831                           	opt stack 0
  2832  000081                     ClearBuffer@Index:
  2833                           	opt stack 0
  2834  000081                     ___wmul@product:
  2835                           	opt stack 0
  2836  000081                     memcpy@n:
  2837                           	opt stack 0
  2838  000081                     memset@n:
  2839                           	opt stack 0
  2840  000081                     strcat@cp:
  2841                           	opt stack 0
  2842  000081                     strcpy@cp:
  2843                           	opt stack 0
  2844  000081                     strlen@cp:
  2845                           	opt stack 0
  2846  000081                     GetElapsedTime@StartTime:
  2847                           	opt stack 0
  2848  000081                     ___lmul@multiplicand:
  2849                           	opt stack 0
  2850                           
  2851                           ; 4 bytes @ 0x21
  2852  000081                     	ds	1
  2853  000082                     ??_I2c_ReadData:
  2854  000082                     Uart_WriteConstString@Module:
  2855                           	opt stack 0
  2856  000082                     Uart_WriteString@Module:
  2857                           	opt stack 0
  2858  000082                     Uart_WriteStringLen@Len:
  2859                           	opt stack 0
  2860  000082                     I2cSlv_SendI2cMsg@SlaveAddr:
  2861                           	opt stack 0
  2862  000082                     I2cSlv_ReceiveI2cMsg@SlaveAddr:
  2863                           	opt stack 0
  2864  000082                     USBConfigureEndpoint@EPNum:
  2865                           	opt stack 0
  2866  000082                     ___awdiv@sign:
  2867                           	opt stack 0
  2868  000082                     ___awmod@sign:
  2869                           	opt stack 0
  2870  000082                     isalpha@c:
  2871                           	opt stack 0
  2872  000082                     isxdigit@c:
  2873                           	opt stack 0
  2874  000082                     USBTransferOnePacket@handle:
  2875                           	opt stack 0
  2876                           
  2877                           ; 2 bytes @ 0x22
  2878  000082                     	ds	1
  2879  000083                     ??_StringCopy:
  2880  000083                     ?_atoi:
  2881                           	opt stack 0
  2882  000083                     ?_xtoi:
  2883                           	opt stack 0
  2884  000083                     ?___lwdiv:
  2885                           	opt stack 0
  2886  000083                     Uart_WriteStringLen@Index:
  2887                           	opt stack 0
  2888  000083                     I2cSlv_SendI2cMsg@DataLenght:
  2889                           	opt stack 0
  2890  000083                     I2cSlv_ReceiveI2cMsg@DataLenght:
  2891                           	opt stack 0
  2892  000083                     sprintf@flag:
  2893                           	opt stack 0
  2894  000083                     OsAlrm_SetOsAlarm@OsAlarmId:
  2895                           	opt stack 0
  2896  000083                     USBConfigureEndpoint@handle:
  2897                           	opt stack 0
  2898  000083                     putUSBUSART@data:
  2899                           	opt stack 0
  2900  000083                     atoi@s:
  2901                           	opt stack 0
  2902  000083                     ___awdiv@quotient:
  2903                           	opt stack 0
  2904  000083                     ___lwdiv@dividend:
  2905                           	opt stack 0
  2906  000083                     memcpy@d:
  2907                           	opt stack 0
  2908  000083                     memset@p:
  2909                           	opt stack 0
  2910  000083                     xtoi@s:
  2911                           	opt stack 0
  2912  000083                     OsTmr_StartTimer@Timeout:
  2913                           	opt stack 0
  2914                           
  2915                           ; 4 bytes @ 0x23
  2916  000083                     	ds	1
  2917  000084                     Uart_WriteStringLen@Module:
  2918                           	opt stack 0
  2919  000084                     I2cSlv_SendI2cMsg@TxSts:
  2920                           	opt stack 0
  2921  000084                     I2cSlv_ReceiveI2cMsg@RxSts:
  2922                           	opt stack 0
  2923  000084                     CDCTxService@i:
  2924                           	opt stack 0
  2925  000084                     getsUSBUSART@buffer:
  2926                           	opt stack 0
  2927  000084                     sprintf@ap:
  2928                           	opt stack 0
  2929                           
  2930                           ; 2 bytes @ 0x24
  2931  000084                     	ds	1
  2932  000085                     ??_atoi:
  2933  000085                     ??_xtoi:
  2934  000085                     ??_GetElapsedTime:
  2935  000085                     Rtcc_SetRtccValue@Value:
  2936                           	opt stack 0
  2937  000085                     USBDeviceInit@i:
  2938                           	opt stack 0
  2939  000085                     USBEnableEndpoint@options:
  2940                           	opt stack 0
  2941  000085                     putUSBUSART@length:
  2942                           	opt stack 0
  2943  000085                     CDCTxService@byte_to_send:
  2944                           	opt stack 0
  2945  000085                     StringCompare@Result:
  2946                           	opt stack 0
  2947  000085                     StringCopy@Index:
  2948                           	opt stack 0
  2949  000085                     ___lwdiv@divisor:
  2950                           	opt stack 0
  2951  000085                     memcpy@s:
  2952                           	opt stack 0
  2953  000085                     OsAlrm_SetOsAlarm@OsAlarmTimeout:
  2954                           	opt stack 0
  2955  000085                     ___lmul@product:
  2956                           	opt stack 0
  2957                           
  2958                           ; 4 bytes @ 0x25
  2959  000085                     	ds	1
  2960  000086                     ??_Rtcc_SetRtccValue:
  2961  000086                     getsUSBUSART@len:
  2962                           	opt stack 0
  2963  000086                     sprintf@c:
  2964                           	opt stack 0
  2965  000086                     USBEnableEndpoint@p:
  2966                           	opt stack 0
  2967  000086                     StringCompare@Index:
  2968                           	opt stack 0
  2969                           
  2970                           ; 2 bytes @ 0x26
  2971  000086                     	ds	1
  2972  000087                     atoi@sign:
  2973                           	opt stack 0
  2974  000087                     ___lwdiv@counter:
  2975                           	opt stack 0
  2976  000087                     memcpy@tmp:
  2977                           	opt stack 0
  2978  000087                     xtoi@sign:
  2979                           	opt stack 0
  2980  000087                     Mdm_GetSmsData@MessageText:
  2981                           	opt stack 0
  2982  000087                     sprintf@cp:
  2983                           	opt stack 0
  2984                           
  2985                           ; 2 bytes @ 0x27
  2986  000087                     	ds	1
  2987  000088                     Rtcc_SetRtccValue@RtccPtrVal:
  2988                           	opt stack 0
  2989  000088                     USBEnableEndpoint@ep:
  2990                           	opt stack 0
  2991  000088                     atoi@a:
  2992                           	opt stack 0
  2993  000088                     ___lwdiv@quotient:
  2994                           	opt stack 0
  2995  000088                     xtoi@val:
  2996                           	opt stack 0
  2997  000088                     ModemEvtParser@CallReadyString:
  2998                           	opt stack 0
  2999                           
  3000                           ; 10 bytes @ 0x28
  3001  000088                     	ds	1
  3002  000089                     ??_Rtcm_GetRtccDate:
  3003  000089                     ?_strtol:
  3004                           	opt stack 0
  3005  000089                     ?___lldiv:
  3006                           	opt stack 0
  3007  000089                     Mdm_GetSmsData@GetSmsStatus:
  3008                           	opt stack 0
  3009  000089                     OsAlrm_SetOsAlarm@AlarmCallback:
  3010                           	opt stack 0
  3011  000089                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  3012                           	opt stack 0
  3013  000089                     strtol@s:
  3014                           	opt stack 0
  3015  000089                     ___lldiv@dividend:
  3016                           	opt stack 0
  3017  000089                     Rtcm_SetRtccDate@Date:
  3018                           	opt stack 0
  3019                           
  3020                           ; 8 bytes @ 0x29
  3021  000089                     	ds	1
  3022  00008A                     xtoi@c:
  3023                           	opt stack 0
  3024  00008A                     LedBlinkStateMachine@LedBlink:
  3025                           	opt stack 0
  3026  00008A                     LedPulseStateMachine@LedPulse:
  3027                           	opt stack 0
  3028  00008A                     secondsAppTimer@counter:
  3029                           	opt stack 0
  3030  00008A                     utoa@buf:
  3031                           	opt stack 0
  3032  00008A                     Rtcm_GetRtccDate@LocalDate:
  3033                           	opt stack 0
  3034                           
  3035                           ; 8 bytes @ 0x2A
  3036  00008A                     	ds	1
  3037  00008B                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  3038                           	opt stack 0
  3039  00008B                     strtol@endptr:
  3040                           	opt stack 0
  3041                           
  3042                           ; 2 bytes @ 0x2B
  3043  00008B                     	ds	1
  3044  00008C                     LedPulseStateMachine@Led:
  3045                           	opt stack 0
  3046  00008C                     secondsAppTimer@isCyclic:
  3047                           	opt stack 0
  3048  00008C                     utoa@val:
  3049                           	opt stack 0
  3050                           
  3051                           ; 2 bytes @ 0x2C
  3052  00008C                     	ds	1
  3053  00008D                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  3054                           	opt stack 0
  3055  00008D                     strtol@base:
  3056                           	opt stack 0
  3057  00008D                     GetElapsedTime@TimeValue:
  3058                           	opt stack 0
  3059  00008D                     ___lldiv@divisor:
  3060                           	opt stack 0
  3061                           
  3062                           ; 4 bytes @ 0x2D
  3063  00008D                     	ds	1
  3064  00008E                     utoa@base:
  3065                           	opt stack 0
  3066                           
  3067                           ; 2 bytes @ 0x2E
  3068  00008E                     	ds	1
  3069  00008F                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  3070  00008F                     ??_strtol:
  3071  00008F                     secondsAppTimer@seconds:
  3072                           	opt stack 0
  3073  00008F                     LedStateMachine@LedSts:
  3074                           	opt stack 0
  3075                           
  3076                           ; 2 bytes @ 0x2F
  3077  00008F                     	ds	1
  3078  000090                     secondsAppTimer@isExpired:
  3079                           	opt stack 0
  3080  000090                     utoa@v:
  3081                           	opt stack 0
  3082                           
  3083                           ; 2 bytes @ 0x30
  3084  000090                     	ds	1
  3085  000091                     ??_USBStdFeatureReqHandler:
  3086  000091                     USBStdSetCfgHandler@i:
  3087                           	opt stack 0
  3088  000091                     LedStateMachine@LedOut:
  3089                           	opt stack 0
  3090  000091                     secondsAppTimer@destinationTicks:
  3091                           	opt stack 0
  3092  000091                     GetElapsedTime@CurrentTimestamp:
  3093                           	opt stack 0
  3094  000091                     ___lldiv@quotient:
  3095                           	opt stack 0
  3096                           
  3097                           ; 4 bytes @ 0x31
  3098  000091                     	ds	1
  3099  000092                     utoa@c:
  3100                           	opt stack 0
  3101  000092                     USBStdFeatureReqHandler@pUEP:
  3102                           	opt stack 0
  3103  000092                     ModemEvtParser@SmsString:
  3104                           	opt stack 0
  3105                           
  3106                           ; 5 bytes @ 0x32
  3107  000092                     	ds	1
  3108  000093                     strtol@sign:
  3109                           	opt stack 0
  3110  000093                     LedStateMachine@LedBlink:
  3111                           	opt stack 0
  3112  000093                     blinkForSeconds@blickTicks:
  3113                           	opt stack 0
  3114  000093                     itoa@buf:
  3115                           	opt stack 0
  3116                           
  3117                           ; 2 bytes @ 0x33
  3118  000093                     	ds	1
  3119  000094                     USBStdFeatureReqHandler@current_ep_data:
  3120                           	opt stack 0
  3121  000094                     strtol@a:
  3122                           	opt stack 0
  3123                           
  3124                           ; 4 bytes @ 0x34
  3125  000094                     	ds	1
  3126  000095                     blinkForSeconds@seconds:
  3127                           	opt stack 0
  3128  000095                     ___lldiv@counter:
  3129                           	opt stack 0
  3130  000095                     OsTmr_GetTimerStatus@Timer:
  3131                           	opt stack 0
  3132  000095                     USBStdFeatureReqHandler@p:
  3133                           	opt stack 0
  3134  000095                     LedStateMachine@LedPulse:
  3135                           	opt stack 0
  3136  000095                     itoa@val:
  3137                           	opt stack 0
  3138                           
  3139                           ; 2 bytes @ 0x35
  3140  000095                     	ds	1
  3141  000096                     Tmr_TmrBPrSet@IntFreqHz:
  3142                           	opt stack 0
  3143  000096                     SetUartBaudRate@UartConfig:
  3144                           	opt stack 0
  3145  000096                     SetBaudRate@DesiredI2cBusClockHz:
  3146                           	opt stack 0
  3147                           
  3148                           ; 4 bytes @ 0x36
  3149  000096                     	ds	1
  3150  000097                     ??_USBCtrlEPService:
  3151  000097                     itoa@base:
  3152                           	opt stack 0
  3153  000097                     ModemEvtParser@RingString:
  3154                           	opt stack 0
  3155                           
  3156                           ; 4 bytes @ 0x37
  3157  000097                     	ds	1
  3158  000098                     Tmr_TmrBPrSet@Prescaler:
  3159                           	opt stack 0
  3160  000098                     USBDeviceTasks@i:
  3161                           	opt stack 0
  3162  000098                     LedStateMachine@LedOutSts:
  3163                           	opt stack 0
  3164  000098                     strtol@c:
  3165                           	opt stack 0
  3166                           
  3167                           ; 1 bytes @ 0x38
  3168  000098                     	ds	1
  3169  000099                     Tmr_TmrBPrSet@Postscaler:
  3170                           	opt stack 0
  3171  000099                     SetUartBaudRate@Module:
  3172                           	opt stack 0
  3173  000099                     LedStateMachine@Led:
  3174                           	opt stack 0
  3175  000099                     itoa@cp:
  3176                           	opt stack 0
  3177                           
  3178                           ; 2 bytes @ 0x39
  3179  000099                     	ds	1
  3180  00009A                     ??_Led_MainTask:
  3181  00009A                     Tmr_TmrBPrSet@TmrBPrCfgSts:
  3182                           	opt stack 0
  3183  00009A                     SetUartBaudRate@BaudRateRegister:
  3184                           	opt stack 0
  3185  00009A                     SetBaudRate@McuClockHz:
  3186                           	opt stack 0
  3187                           
  3188                           ; 4 bytes @ 0x3A
  3189  00009A                     	ds	1
  3190  00009B                     ??_SendSmsSm:
  3191  00009B                     Tmr_TmrBPrSet@TmrNumb:
  3192                           	opt stack 0
  3193  00009B                     ModemEvtParser@Match:
  3194                           	opt stack 0
  3195  00009B                     OsTmr_Wait@WaitTimer:
  3196                           	opt stack 0
  3197  00009B                     InitGprsNetwork@Apn:
  3198                           	opt stack 0
  3199  00009B                     HttpGetMethod@GetData:
  3200                           	opt stack 0
  3201                           
  3202                           ; 2 bytes @ 0x3B
  3203  00009B                     	ds	1
  3204  00009C                     SetUartBaudRate@DivisionFactor:
  3205                           	opt stack 0
  3206  00009C                     ModemEvtParser@CompareIdx:
  3207                           	opt stack 0
  3208  00009C                     Tmr_TmrBPrSet@Divisor:
  3209                           	opt stack 0
  3210                           
  3211                           ; 4 bytes @ 0x3C
  3212  00009C                     	ds	1
  3213  00009D                     ??_HttpGetMethod:
  3214  00009D                     InitGprsNetwork@ApnLen:
  3215                           	opt stack 0
  3216  00009D                     Uart_InitUartModule@UartConfig:
  3217                           	opt stack 0
  3218  00009D                     OsTmr_Wait@DelayMs:
  3219                           	opt stack 0
  3220                           
  3221                           ; 4 bytes @ 0x3D
  3222  00009D                     	ds	1
  3223  00009E                     ??_SetBaudRate:
  3224  00009E                     ??_InitGprsNetwork:
  3225                           
  3226                           ; 1 bytes @ 0x3E
  3227  00009E                     	ds	1
  3228  00009F                     ??_Uart_InitUartModule:
  3229                           
  3230                           ; 1 bytes @ 0x3F
  3231  00009F                     	ds	1
  3232  0000A0                     Tmr_TmrBConfig@TmrBConfig:
  3233                           	opt stack 0
  3234                           
  3235                           ; 2 bytes @ 0x40
  3236  0000A0                     	ds	1
  3237  0000A1                     Uart_InitUartModule@Module:
  3238                           	opt stack 0
  3239  0000A1                     OsTmr_Wait@Ret:
  3240                           	opt stack 0
  3241                           
  3242                           ; 1 bytes @ 0x41
  3243  0000A1                     	ds	1
  3244  0000A2                     ??_Terminal:
  3245  0000A2                     I2c_InitI2cModule@I2cConfig:
  3246                           	opt stack 0
  3247                           
  3248                           ; 2 bytes @ 0x42
  3249  0000A2                     	ds	1
  3250  0000A3                     Tmr_TmrBConfig@TmrNumb:
  3251                           	opt stack 0
  3252                           
  3253                           ; 1 bytes @ 0x43
  3254  0000A3                     	ds	1
  3255  0000A4                     ??_I2c_InitI2cModule:
  3256  0000A4                     Terminal@i:
  3257                           	opt stack 0
  3258  0000A4                     InitSchedTimer@TmrBConfig:
  3259                           	opt stack 0
  3260                           
  3261                           ; 7 bytes @ 0x44
  3262  0000A4                     	ds	1
  3263  0000A5                     Terminal@ReceivedBytes:
  3264                           	opt stack 0
  3265                           
  3266                           ; 1 bytes @ 0x45
  3267  0000A5                     	ds	1
  3268  0000A6                     Terminal@Index:
  3269                           	opt stack 0
  3270                           
  3271                           ; 1 bytes @ 0x46
  3272  0000A6                     	ds	1
  3273  0000A7                     ??_InitializeTasks:
  3274  0000A7                     ??_ScheduleTasks:
  3275  0000A7                     
  3276                           ; 1 bytes @ 0x47
  3277  0000A7                     	ds	2
  3278  0000A9                     InitializeTasks@ActiveTaskIndex:
  3279                           	opt stack 0
  3280                           
  3281                           ; 1 bytes @ 0x49
  3282  0000A9                     	ds	2
  3283  0000AB                     ScheduleTasks@ActiveTaskIndex:
  3284                           	opt stack 0
  3285                           
  3286                           ; 1 bytes @ 0x4B
  3287  0000AB                     	ds	1
  3288  0000AC                     tblptru	equ	0xFF8
  3289                           tblptrh	equ	0xFF7
  3290                           tblptrl	equ	0xFF6
  3291                           tablat	equ	0xFF5
  3292                           postinc0	equ	0xFEE
  3293                           wreg	equ	0xFE8
  3294                           postdec1	equ	0xFE5
  3295                           fsr1h	equ	0xFE2
  3296                           fsr1l	equ	0xFE1
  3297                           
  3298                           ; 1 bytes @ 0x4C
  3299                           
  3300                           	psect	cstackCOMRAM
  3301  000001                     __pcstackCOMRAM:
  3302                           	opt stack 0
  3303  000001                     i2GenerateEvt@Event:
  3304                           	opt stack 0
  3305                           
  3306                           ; 2 bytes @ 0x0
  3307  000001                     	ds	2
  3308  000003                     i2GenerateEvt@EventStatus:
  3309                           	opt stack 0
  3310                           
  3311                           ; 1 bytes @ 0x2
  3312  000003                     	ds	1
  3313  000004                     Uart_MdmGsmGprsReadService@UartData:
  3314                           	opt stack 0
  3315                           
  3316                           ; 1 bytes @ 0x3
  3317  000004                     	ds	1
  3318  000005                     Uart_MdmGsmGprsReadService@ServiceCounter:
  3319                           	opt stack 0
  3320                           
  3321                           ; 2 bytes @ 0x4
  3322  000005                     	ds	2
  3323  000007                     ??_HighPriorityIsr:
  3324                           
  3325                           ; 1 bytes @ 0x6
  3326  000007                     	ds	18
  3327  000019                     ?i1___wmul:
  3328                           	opt stack 0
  3329  000019                     OsAlrm_ClearOsAlarm@OsAlarmId:
  3330                           	opt stack 0
  3331  000019                     i1GenerateEvt@Event:
  3332                           	opt stack 0
  3333  000019                     i1___wmul@multiplier:
  3334                           	opt stack 0
  3335                           
  3336                           ; 2 bytes @ 0x18
  3337  000019                     	ds	2
  3338  00001B                     i1GenerateEvt@EventStatus:
  3339                           	opt stack 0
  3340  00001B                     i1___wmul@multiplicand:
  3341                           	opt stack 0
  3342                           
  3343                           ; 2 bytes @ 0x1A
  3344  00001B                     	ds	1
  3345  00001C                     i1I2cSlv_SendI2cMsg@TxBuffer:
  3346                           	opt stack 0
  3347                           
  3348                           ; 2 bytes @ 0x1B
  3349  00001C                     	ds	1
  3350  00001D                     i1___wmul@product:
  3351                           	opt stack 0
  3352                           
  3353                           ; 2 bytes @ 0x1C
  3354  00001D                     	ds	1
  3355  00001E                     i1I2cSlv_SendI2cMsg@SlaveAddr:
  3356                           	opt stack 0
  3357                           
  3358                           ; 1 bytes @ 0x1D
  3359  00001E                     	ds	1
  3360  00001F                     i1I2cSlv_SendI2cMsg@DataLenght:
  3361                           	opt stack 0
  3362                           
  3363                           ; 1 bytes @ 0x1E
  3364  00001F                     	ds	1
  3365  000020                     i1I2cSlv_SendI2cMsg@TxSts:
  3366                           	opt stack 0
  3367                           
  3368                           ; 1 bytes @ 0x1F
  3369  000020                     	ds	1
  3370  000021                     OsAlrm_ProcessOsAlarms@AlarmIndex:
  3371                           	opt stack 0
  3372                           
  3373                           ; 2 bytes @ 0x20
  3374  000021                     	ds	2
  3375  000023                     tblptru	equ	0xFF8
  3376                           tblptrh	equ	0xFF7
  3377                           tblptrl	equ	0xFF6
  3378                           tablat	equ	0xFF5
  3379                           postinc0	equ	0xFEE
  3380                           wreg	equ	0xFE8
  3381                           postdec1	equ	0xFE5
  3382                           fsr1h	equ	0xFE2
  3383                           fsr1l	equ	0xFE1
  3384                           
  3385                           ; 1 bytes @ 0x22
  3386 ;;
  3387 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3388 ;;
  3389 ;; *************** function _main *****************
  3390 ;; Defined at:
  3391 ;;		line 58 in file "../../MercuryFwk/Source/c/00_Main/main.c"
  3392 ;; Parameters:    Size  Location     Type
  3393 ;;		None
  3394 ;; Auto vars:     Size  Location     Type
  3395 ;;		None
  3396 ;; Return value:  Size  Location     Type
  3397 ;;                  2   14[None  ] short 
  3398 ;; Registers used:
  3399 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  3400 ;; Tracked objects:
  3401 ;;		On entry : 0/0
  3402 ;;		On exit  : 0/0
  3403 ;;		Unchanged: 0/0
  3404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3405 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3406 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3408 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3409 ;;Total ram usage:        0 bytes
  3410 ;; Hardware stack levels required when called:   23
  3411 ;; This function calls:
  3412 ;;		_Sch_MainScheduler
  3413 ;;		_SystemInit
  3414 ;; This function is called by:
  3415 ;;		Startup code after reset
  3416 ;; This function uses a non-reentrant model
  3417 ;;
  3418                           
  3419                           	psect	text0
  3420  005F70                     __ptext0:
  3421                           	opt stack 0
  3422  005F70                     _main:
  3423                           	opt stack 8
  3424                           
  3425                           ;main.c: 61: SystemInit();
  3426                           
  3427                           ;incstack = 0
  3428  005F70  ECF5  F02C         	call	_SystemInit	;wreg free
  3429                           
  3430                           ;main.c: 64: Sch_MainScheduler();
  3431  005F74  ECC7  F02E         	call	_Sch_MainScheduler	;wreg free
  3432                           
  3433                           ;main.c: 67: return 0;
  3434                           ;	Return value of _main is never used
  3435  005F78  EF66  F000         	goto	start
  3436  005F7C                     __end_of_main:
  3437                           	opt stack 0
  3438                           tblptru	equ	0xFF8
  3439                           tblptrh	equ	0xFF7
  3440                           tblptrl	equ	0xFF6
  3441                           tablat	equ	0xFF5
  3442                           postinc0	equ	0xFEE
  3443                           wreg	equ	0xFE8
  3444                           postdec1	equ	0xFE5
  3445                           fsr1h	equ	0xFE2
  3446                           fsr1l	equ	0xFE1
  3447                           
  3448 ;; *************** function _SystemInit *****************
  3449 ;; Defined at:
  3450 ;;		line 121 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/sys_init.c"
  3451 ;; Parameters:    Size  Location     Type
  3452 ;;		None
  3453 ;; Auto vars:     Size  Location     Type
  3454 ;;		None
  3455 ;; Return value:  Size  Location     Type
  3456 ;;                  1    wreg      void 
  3457 ;; Registers used:
  3458 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3459 ;; Tracked objects:
  3460 ;;		On entry : 0/0
  3461 ;;		On exit  : 0/0
  3462 ;;		Unchanged: 0/0
  3463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3464 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3465 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3466 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3467 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3468 ;;Total ram usage:        0 bytes
  3469 ;; Hardware stack levels used:    1
  3470 ;; Hardware stack levels required when called:   15
  3471 ;; This function calls:
  3472 ;;		_InitSchedTimer
  3473 ;;		_Irq_InitIntController
  3474 ;;		_Mcu_ConfigExtInt
  3475 ;;		_Mcu_StartSystemPll
  3476 ;;		_Pm_DsReleasePinControl
  3477 ;;		_Tmr_RegisterTmr2IsrCallback
  3478 ;; This function is called by:
  3479 ;;		_main
  3480 ;; This function uses a non-reentrant model
  3481 ;;
  3482                           
  3483                           	psect	text1
  3484  0059EA                     __ptext1:
  3485                           	opt stack 0
  3486  0059EA                     _SystemInit:
  3487                           	opt stack 15
  3488                           
  3489                           ;sys_init.c: 124: Pm_DsReleasePinControl();
  3490                           
  3491                           ;incstack = 0
  3492  0059EA  ECDB  F02F         	call	_Pm_DsReleasePinControl	;wreg free
  3493                           
  3494                           ;sys_init.c: 126: Mcu_StartSystemPll();
  3495  0059EE  ECB8  F02E         	call	_Mcu_StartSystemPll	;wreg free
  3496                           
  3497                           ;sys_init.c: 128: Irq_InitIntController(IntPriorityMode,1u,1u);
  3498  0059F2  0E01               	movlw	1
  3499  0059F4  0100               	movlb	0	; () banked
  3500  0059F6  6F7D               	movwf	Irq_InitIntController@GlobalInt_HighPInt& (0+255),b
  3501  0059F8  0E01               	movlw	1
  3502  0059FA  6F7E               	movwf	Irq_InitIntController@PerInt_LowPInt& (0+255),b
  3503  0059FC  0E01               	movlw	1
  3504  0059FE  EC99  F02D         	call	_Irq_InitIntController
  3505                           
  3506                           ;sys_init.c: 130: Tmr_RegisterTmr2IsrCallback(&Sch_SchmIntService);
  3507  005A02  0E54               	movlw	low _Sch_SchmIntService
  3508  005A04  0100               	movlb	0	; () banked
  3509  005A06  6F7D               	movwf	Tmr_RegisterTmr2IsrCallback@IsrCallback& (0+255),b
  3510  005A08  0E5F               	movlw	high _Sch_SchmIntService
  3511  005A0A  6F7E               	movwf	(Tmr_RegisterTmr2IsrCallback@IsrCallback+1)& (0+255),b
  3512  005A0C  ECBE  F02F         	call	_Tmr_RegisterTmr2IsrCallback	;wreg free
  3513                           
  3514                           ;sys_init.c: 132: InitSchedTimer();
  3515  005A10  EC55  F02D         	call	_InitSchedTimer	;wreg free
  3516                           
  3517                           ;sys_init.c: 134: Mcu_ConfigExtInt();
  3518  005A14  ECF2  F02E         	call	_Mcu_ConfigExtInt	;wreg free
  3519  005A18  0012               	return		;funcret
  3520  005A1A                     __end_of_SystemInit:
  3521                           	opt stack 0
  3522                           tblptru	equ	0xFF8
  3523                           tblptrh	equ	0xFF7
  3524                           tblptrl	equ	0xFF6
  3525                           tablat	equ	0xFF5
  3526                           postinc0	equ	0xFEE
  3527                           wreg	equ	0xFE8
  3528                           postdec1	equ	0xFE5
  3529                           fsr1h	equ	0xFE2
  3530                           fsr1l	equ	0xFE1
  3531                           
  3532 ;; *************** function _Tmr_RegisterTmr2IsrCallback *****************
  3533 ;; Defined at:
  3534 ;;		line 329 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  3535 ;; Parameters:    Size  Location     Type
  3536 ;;  IsrCallback     2   29[BANK0 ] PTR FTN()void 
  3537 ;;		 -> Sch_SchmIntService(1), 
  3538 ;; Auto vars:     Size  Location     Type
  3539 ;;		None
  3540 ;; Return value:  Size  Location     Type
  3541 ;;                  1    wreg      void 
  3542 ;; Registers used:
  3543 ;;		wreg, status,2, status,0
  3544 ;; Tracked objects:
  3545 ;;		On entry : 0/0
  3546 ;;		On exit  : 0/0
  3547 ;;		Unchanged: 0/0
  3548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3549 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3550 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3551 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3552 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3553 ;;Total ram usage:        2 bytes
  3554 ;; Hardware stack levels used:    1
  3555 ;; Hardware stack levels required when called:   11
  3556 ;; This function calls:
  3557 ;;		Nothing
  3558 ;; This function is called by:
  3559 ;;		_SystemInit
  3560 ;; This function uses a non-reentrant model
  3561 ;;
  3562                           
  3563                           	psect	text2
  3564  005F7C                     __ptext2:
  3565                           	opt stack 0
  3566  005F7C                     _Tmr_RegisterTmr2IsrCallback:
  3567                           	opt stack 18
  3568                           
  3569                           ;tmr_drv.c: 332: Tmr2IsrCallback = IsrCallback;
  3570                           
  3571                           ;incstack = 0
  3572  005F7C  C07D  F2EA         	movff	Tmr_RegisterTmr2IsrCallback@IsrCallback,_Tmr2IsrCallback
  3573  005F80  C07E  F2EB         	movff	Tmr_RegisterTmr2IsrCallback@IsrCallback+1,_Tmr2IsrCallback+1
  3574  005F84  0012               	return		;funcret
  3575  005F86                     __end_of_Tmr_RegisterTmr2IsrCallback:
  3576                           	opt stack 0
  3577                           tblptru	equ	0xFF8
  3578                           tblptrh	equ	0xFF7
  3579                           tblptrl	equ	0xFF6
  3580                           tablat	equ	0xFF5
  3581                           postinc0	equ	0xFEE
  3582                           wreg	equ	0xFE8
  3583                           postdec1	equ	0xFE5
  3584                           fsr1h	equ	0xFE2
  3585                           fsr1l	equ	0xFE1
  3586                           
  3587 ;; *************** function _Pm_DsReleasePinControl *****************
  3588 ;; Defined at:
  3589 ;;		line 166 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/pm_drv.c"
  3590 ;; Parameters:    Size  Location     Type
  3591 ;;		None
  3592 ;; Auto vars:     Size  Location     Type
  3593 ;;		None
  3594 ;; Return value:  Size  Location     Type
  3595 ;;                  1    wreg      void 
  3596 ;; Registers used:
  3597 ;;		None
  3598 ;; Tracked objects:
  3599 ;;		On entry : 0/0
  3600 ;;		On exit  : 0/0
  3601 ;;		Unchanged: 0/0
  3602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3603 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3604 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3605 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3606 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3607 ;;Total ram usage:        0 bytes
  3608 ;; Hardware stack levels used:    1
  3609 ;; Hardware stack levels required when called:   11
  3610 ;; This function calls:
  3611 ;;		Nothing
  3612 ;; This function is called by:
  3613 ;;		_SystemInit
  3614 ;; This function uses a non-reentrant model
  3615 ;;
  3616                           
  3617                           	psect	text3
  3618  005FB6                     __ptext3:
  3619                           	opt stack 0
  3620  005FB6                     _Pm_DsReleasePinControl:
  3621                           	opt stack 18
  3622                           
  3623                           ;pm_drv.c: 169: DSCONLbits.RELEASE = 0u;
  3624                           
  3625                           ;incstack = 0
  3626  005FB6  010F               	movlb	15	; () banked
  3627  005FB8  914C               	bcf	76,0,b	;volatile
  3628                           
  3629                           ; BSR set to: 15
  3630  005FBA  0012               	return		;funcret
  3631  005FBC                     __end_of_Pm_DsReleasePinControl:
  3632                           	opt stack 0
  3633                           tblptru	equ	0xFF8
  3634                           tblptrh	equ	0xFF7
  3635                           tblptrl	equ	0xFF6
  3636                           tablat	equ	0xFF5
  3637                           postinc0	equ	0xFEE
  3638                           wreg	equ	0xFE8
  3639                           postdec1	equ	0xFE5
  3640                           fsr1h	equ	0xFE2
  3641                           fsr1l	equ	0xFE1
  3642                           
  3643 ;; *************** function _Mcu_StartSystemPll *****************
  3644 ;; Defined at:
  3645 ;;		line 81 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
  3646 ;; Parameters:    Size  Location     Type
  3647 ;;		None
  3648 ;; Auto vars:     Size  Location     Type
  3649 ;;  PllStartupCo    2   29[BANK0 ] volatile unsigned short 
  3650 ;; Return value:  Size  Location     Type
  3651 ;;                  1    wreg      void 
  3652 ;; Registers used:
  3653 ;;		wreg, status,2, status,0
  3654 ;; Tracked objects:
  3655 ;;		On entry : 0/0
  3656 ;;		On exit  : 0/0
  3657 ;;		Unchanged: 0/0
  3658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3660 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3662 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3663 ;;Total ram usage:        2 bytes
  3664 ;; Hardware stack levels used:    1
  3665 ;; Hardware stack levels required when called:   11
  3666 ;; This function calls:
  3667 ;;		Nothing
  3668 ;; This function is called by:
  3669 ;;		_SystemInit
  3670 ;; This function uses a non-reentrant model
  3671 ;;
  3672                           
  3673                           	psect	text4
  3674  005D70                     __ptext4:
  3675                           	opt stack 0
  3676  005D70                     _Mcu_StartSystemPll:
  3677                           	opt stack 18
  3678                           
  3679                           ;mcu_drv.c: 83: volatile UINT16 PllStartupCounter = ((UINT16)(1000));
  3680                           
  3681                           ; BSR set to: 15
  3682                           ;incstack = 0
  3683  005D70  0E03               	movlw	3
  3684  005D72  0100               	movlb	0	; () banked
  3685  005D74  6F7E               	movwf	(Mcu_StartSystemPll@PllStartupCounter+1)& (0+255),b	;volatile
  3686  005D76  0EE8               	movlw	232
  3687  005D78  6F7D               	movwf	Mcu_StartSystemPll@PllStartupCounter& (0+255),b	;volatile
  3688                           
  3689                           ; BSR set to: 0
  3690                           ;mcu_drv.c: 86: OSCTUNEbits.PLLEN = ((UINT8)(1));
  3691  005D7A  8C9B               	bsf	3995,6,c	;volatile
  3692  005D7C                     l10861:
  3693                           
  3694                           ; BSR set to: 0
  3695  005D7C  077D               	decf	Mcu_StartSystemPll@PllStartupCounter& (0+255),f,b	;volatile
  3696  005D7E  A0D8               	btfss	status,0,c
  3697  005D80  077E               	decf	(Mcu_StartSystemPll@PllStartupCounter+1)& (0+255),f,b	;volatile
  3698  005D82  297D               	incf	Mcu_StartSystemPll@PllStartupCounter& (0+255),w,b	;volatile
  3699  005D84  E1FB               	bnz	l10861
  3700  005D86  297E               	incf	(Mcu_StartSystemPll@PllStartupCounter+1)& (0+255),w,b	;volatile
  3701  005D88  B4D8               	btfsc	status,2,c
  3702  005D8A  0012               	return	
  3703  005D8C  D7F7               	goto	l237
  3704  005D8E                     __end_of_Mcu_StartSystemPll:
  3705                           	opt stack 0
  3706                           tblptru	equ	0xFF8
  3707                           tblptrh	equ	0xFF7
  3708                           tblptrl	equ	0xFF6
  3709                           tablat	equ	0xFF5
  3710                           postinc0	equ	0xFEE
  3711                           wreg	equ	0xFE8
  3712                           postdec1	equ	0xFE5
  3713                           fsr1h	equ	0xFE2
  3714                           fsr1l	equ	0xFE1
  3715                           status	equ	0xFD8
  3716                           
  3717 ;; *************** function _Mcu_ConfigExtInt *****************
  3718 ;; Defined at:
  3719 ;;		line 99 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
  3720 ;; Parameters:    Size  Location     Type
  3721 ;;		None
  3722 ;; Auto vars:     Size  Location     Type
  3723 ;;		None
  3724 ;; Return value:  Size  Location     Type
  3725 ;;                  1    wreg      void 
  3726 ;; Registers used:
  3727 ;;		wreg, status,2
  3728 ;; Tracked objects:
  3729 ;;		On entry : 0/0
  3730 ;;		On exit  : 0/0
  3731 ;;		Unchanged: 0/0
  3732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3733 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3734 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3735 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3736 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3737 ;;Total ram usage:        0 bytes
  3738 ;; Hardware stack levels used:    1
  3739 ;; Hardware stack levels required when called:   11
  3740 ;; This function calls:
  3741 ;;		Nothing
  3742 ;; This function is called by:
  3743 ;;		_SystemInit
  3744 ;; This function uses a non-reentrant model
  3745 ;;
  3746                           
  3747                           	psect	text5
  3748  005DE4                     __ptext5:
  3749                           	opt stack 0
  3750  005DE4                     _Mcu_ConfigExtInt:
  3751                           	opt stack 18
  3752                           
  3753                           ;mcu_drv.c: 102: TRISBbits.TRISB0 = ((UINT8)(1));
  3754                           
  3755                           ; BSR set to: 0
  3756                           ;incstack = 0
  3757  005DE4  8093               	bsf	3987,0,c	;volatile
  3758                           
  3759                           ;mcu_drv.c: 103: TRISDbits.TRISD3 = ((UINT8)(1));
  3760  005DE6  8695               	bsf	3989,3,c	;volatile
  3761                           
  3762                           ;mcu_drv.c: 106: ANCON1bits.PCFG12 = 1u;
  3763  005DE8  010F               	movlb	15	; () banked
  3764  005DEA  8949               	bsf	73,4,b	;volatile
  3765                           
  3766                           ; BSR set to: 15
  3767                           ;mcu_drv.c: 108: RPINR1 = 20;
  3768  005DEC  0E14               	movlw	20
  3769  005DEE  010E               	movlb	14	; () banked
  3770  005DF0  6FE7               	movwf	231,b	;volatile
  3771                           
  3772                           ; BSR set to: 14
  3773                           ;mcu_drv.c: 111: INTCONbits.INT0IE = 1u;
  3774  005DF2  88F2               	bsf	intcon,4,c	;volatile
  3775                           
  3776                           ; BSR set to: 14
  3777                           ;mcu_drv.c: 112: INTCON3bits.INT1IE = 1u;
  3778  005DF4  86F0               	bsf	intcon3,3,c	;volatile
  3779                           
  3780                           ; BSR set to: 14
  3781                           ;mcu_drv.c: 113: INTCON3bits.INT1IP = 1u;
  3782  005DF6  8CF0               	bsf	intcon3,6,c	;volatile
  3783                           
  3784                           ; BSR set to: 14
  3785                           ;mcu_drv.c: 114: INTCON2bits.INTEDG0 = 0u;
  3786  005DF8  9CF1               	bcf	intcon2,6,c	;volatile
  3787                           
  3788                           ; BSR set to: 14
  3789                           ;mcu_drv.c: 115: INTCON2bits.INTEDG1 = 0u;
  3790  005DFA  9AF1               	bcf	intcon2,5,c	;volatile
  3791                           
  3792                           ; BSR set to: 14
  3793  005DFC  0012               	return		;funcret
  3794  005DFE                     __end_of_Mcu_ConfigExtInt:
  3795                           	opt stack 0
  3796                           tblptru	equ	0xFF8
  3797                           tblptrh	equ	0xFF7
  3798                           tblptrl	equ	0xFF6
  3799                           tablat	equ	0xFF5
  3800                           intcon	equ	0xFF2
  3801                           intcon2	equ	0xFF1
  3802                           intcon3	equ	0xFF0
  3803                           postinc0	equ	0xFEE
  3804                           wreg	equ	0xFE8
  3805                           postdec1	equ	0xFE5
  3806                           fsr1h	equ	0xFE2
  3807                           fsr1l	equ	0xFE1
  3808                           status	equ	0xFD8
  3809                           
  3810 ;; *************** function _Irq_InitIntController *****************
  3811 ;; Defined at:
  3812 ;;		line 75 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/irq.c"
  3813 ;; Parameters:    Size  Location     Type
  3814 ;;  IntPriorityE    1    wreg     enum E7720
  3815 ;;  GlobalInt_Hi    1   29[BANK0 ] unsigned char 
  3816 ;;  PerInt_LowPI    1   30[BANK0 ] unsigned char 
  3817 ;; Auto vars:     Size  Location     Type
  3818 ;;  IntPriorityE    1   31[BANK0 ] enum E7720
  3819 ;; Return value:  Size  Location     Type
  3820 ;;                  1    wreg      void 
  3821 ;; Registers used:
  3822 ;;		wreg
  3823 ;; Tracked objects:
  3824 ;;		On entry : 0/0
  3825 ;;		On exit  : 0/0
  3826 ;;		Unchanged: 0/0
  3827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3828 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3829 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3830 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3831 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3832 ;;Total ram usage:        3 bytes
  3833 ;; Hardware stack levels used:    1
  3834 ;; Hardware stack levels required when called:   11
  3835 ;; This function calls:
  3836 ;;		Nothing
  3837 ;; This function is called by:
  3838 ;;		_SystemInit
  3839 ;; This function uses a non-reentrant model
  3840 ;;
  3841                           
  3842                           	psect	text6
  3843  005B32                     __ptext6:
  3844                           	opt stack 0
  3845  005B32                     _Irq_InitIntController:
  3846                           	opt stack 18
  3847                           
  3848                           ; BSR set to: 14
  3849                           ;incstack = 0
  3850                           ;Irq_InitIntController@IntPriorityEn stored from wreg
  3851  005B32  0100               	movlb	0	; () banked
  3852  005B34  6F7F               	movwf	Irq_InitIntController@IntPriorityEn& (0+255),b
  3853                           
  3854                           ;irq.c: 78: RCONbits.IPEN = IntPriorityEn;
  3855  005B36  0100               	movlb	0	; () banked
  3856  005B38  B17F               	btfsc	Irq_InitIntController@IntPriorityEn& (0+255),0,b
  3857  005B3A  D002               	bra	u9405
  3858  005B3C  9ED0               	bcf	4048,7,c	;volatile
  3859  005B3E  D001               	bra	u9406
  3860  005B40                     u9405:
  3861  005B40  8ED0               	bsf	4048,7,c	;volatile
  3862  005B42                     u9406:
  3863                           
  3864                           ;irq.c: 80: INTCONbits.GIE_GIEH = GlobalInt_HighPInt;
  3865  005B42  0100               	movlb	0	; () banked
  3866  005B44  B17D               	btfsc	Irq_InitIntController@GlobalInt_HighPInt& (0+255),0,b
  3867  005B46  D002               	bra	u9415
  3868  005B48  9EF2               	bcf	intcon,7,c	;volatile
  3869  005B4A  D001               	bra	u9416
  3870  005B4C                     u9415:
  3871  005B4C  8EF2               	bsf	intcon,7,c	;volatile
  3872  005B4E                     u9416:
  3873                           
  3874                           ;irq.c: 82: INTCONbits.PEIE_GIEL = PerInt_LowPInt;
  3875  005B4E  0100               	movlb	0	; () banked
  3876  005B50  B17E               	btfsc	Irq_InitIntController@PerInt_LowPInt& (0+255),0,b
  3877  005B52  D002               	bra	u9425
  3878  005B54  9CF2               	bcf	intcon,6,c	;volatile
  3879  005B56  D001               	bra	u9426
  3880  005B58                     u9425:
  3881  005B58  8CF2               	bsf	intcon,6,c	;volatile
  3882  005B5A                     u9426:
  3883  005B5A  0012               	return		;funcret
  3884  005B5C                     __end_of_Irq_InitIntController:
  3885                           	opt stack 0
  3886                           tblptru	equ	0xFF8
  3887                           tblptrh	equ	0xFF7
  3888                           tblptrl	equ	0xFF6
  3889                           tablat	equ	0xFF5
  3890                           intcon	equ	0xFF2
  3891                           intcon2	equ	0xFF1
  3892                           intcon3	equ	0xFF0
  3893                           postinc0	equ	0xFEE
  3894                           wreg	equ	0xFE8
  3895                           postdec1	equ	0xFE5
  3896                           fsr1h	equ	0xFE2
  3897                           fsr1l	equ	0xFE1
  3898                           status	equ	0xFD8
  3899                           
  3900 ;; *************** function _InitSchedTimer *****************
  3901 ;; Defined at:
  3902 ;;		line 69 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/sys_init.c"
  3903 ;; Parameters:    Size  Location     Type
  3904 ;;		None
  3905 ;; Auto vars:     Size  Location     Type
  3906 ;;  TmrBConfig      7   68[BANK0 ] struct _TmrBConfigType
  3907 ;; Return value:  Size  Location     Type
  3908 ;;                  1    wreg      void 
  3909 ;; Registers used:
  3910 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3911 ;; Tracked objects:
  3912 ;;		On entry : 0/0
  3913 ;;		On exit  : 0/0
  3914 ;;		Unchanged: 0/0
  3915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3916 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3917 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3918 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3919 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3920 ;;Total ram usage:        7 bytes
  3921 ;; Hardware stack levels used:    1
  3922 ;; Hardware stack levels required when called:   14
  3923 ;; This function calls:
  3924 ;;		_Tmr_TmrBConfig
  3925 ;; This function is called by:
  3926 ;;		_SystemInit
  3927 ;; This function uses a non-reentrant model
  3928 ;;
  3929                           
  3930                           	psect	text7
  3931  005AAA                     __ptext7:
  3932                           	opt stack 0
  3933  005AAA                     _InitSchedTimer:
  3934                           	opt stack 15
  3935                           
  3936                           ;sys_init.c: 71: TmrBConfigType TmrBConfig;
  3937                           ;sys_init.c: 74: TmrBConfig.PreScaler = 4;
  3938                           
  3939                           ;incstack = 0
  3940  005AAA  0E04               	movlw	4
  3941  005AAC  0100               	movlb	0	; () banked
  3942  005AAE  6FA4               	movwf	InitSchedTimer@TmrBConfig& (0+255),b
  3943                           
  3944                           ;sys_init.c: 75: TmrBConfig.PostScaler = 12;
  3945  005AB0  0E0C               	movlw	12
  3946  005AB2  6FA5               	movwf	(InitSchedTimer@TmrBConfig+1)& (0+255),b
  3947                           
  3948                           ;sys_init.c: 76: TmrBConfig.IntPriority = 0u;
  3949  005AB4  0E00               	movlw	0
  3950  005AB6  6FA7               	movwf	(InitSchedTimer@TmrBConfig+3)& (0+255),b
  3951                           
  3952                           ;sys_init.c: 77: TmrBConfig.IntEnable = 1u;
  3953  005AB8  0E01               	movlw	1
  3954  005ABA  6FA6               	movwf	(InitSchedTimer@TmrBConfig+2)& (0+255),b
  3955                           
  3956                           ;sys_init.c: 78: TmrBConfig.IntFreqHz = ((UINT16)(1000));
  3957  005ABC  0E03               	movlw	3
  3958  005ABE  6FA9               	movwf	(InitSchedTimer@TmrBConfig+5)& (0+255),b
  3959  005AC0  0EE8               	movlw	232
  3960  005AC2  6FA8               	movwf	(InitSchedTimer@TmrBConfig+4)& (0+255),b
  3961                           
  3962                           ;sys_init.c: 79: TmrBConfig.StartTmrRequest = StartTmrReq;
  3963  005AC4  0E01               	movlw	1
  3964  005AC6  6FAA               	movwf	(InitSchedTimer@TmrBConfig+6)& (0+255),b
  3965                           
  3966                           ; BSR set to: 0
  3967                           ;sys_init.c: 82: Tmr_TmrBConfig(((UINT8)(2)),&TmrBConfig);
  3968  005AC8  0EA4               	movlw	low InitSchedTimer@TmrBConfig
  3969  005ACA  6FA0               	movwf	Tmr_TmrBConfig@TmrBConfig& (0+255),b
  3970  005ACC  0E00               	movlw	high InitSchedTimer@TmrBConfig
  3971  005ACE  6FA1               	movwf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),b
  3972  005AD0  0E02               	movlw	2
  3973  005AD2  ECD3  F01C         	call	_Tmr_TmrBConfig
  3974  005AD6  0012               	return		;funcret
  3975  005AD8                     __end_of_InitSchedTimer:
  3976                           	opt stack 0
  3977                           tblptru	equ	0xFF8
  3978                           tblptrh	equ	0xFF7
  3979                           tblptrl	equ	0xFF6
  3980                           tablat	equ	0xFF5
  3981                           intcon	equ	0xFF2
  3982                           intcon2	equ	0xFF1
  3983                           intcon3	equ	0xFF0
  3984                           postinc0	equ	0xFEE
  3985                           wreg	equ	0xFE8
  3986                           postdec1	equ	0xFE5
  3987                           fsr1h	equ	0xFE2
  3988                           fsr1l	equ	0xFE1
  3989                           status	equ	0xFD8
  3990                           
  3991 ;; *************** function _Tmr_TmrBConfig *****************
  3992 ;; Defined at:
  3993 ;;		line 271 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  3994 ;; Parameters:    Size  Location     Type
  3995 ;;  TmrNumb         1    wreg     unsigned char 
  3996 ;;  TmrBConfig      2   64[BANK0 ] PTR struct _TmrBConfigTy
  3997 ;;		 -> InitAuxTimer@TmrBConfig(7), InitSchedTimer@TmrBConfig(7), 
  3998 ;; Auto vars:     Size  Location     Type
  3999 ;;  TmrNumb         1   67[BANK0 ] unsigned char 
  4000 ;; Return value:  Size  Location     Type
  4001 ;;                  1    wreg      void 
  4002 ;; Registers used:
  4003 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4004 ;; Tracked objects:
  4005 ;;		On entry : 0/0
  4006 ;;		On exit  : 0/0
  4007 ;;		Unchanged: 0/0
  4008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4009 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4010 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4011 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4012 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4013 ;;Total ram usage:        4 bytes
  4014 ;; Hardware stack levels used:    1
  4015 ;; Hardware stack levels required when called:   13
  4016 ;; This function calls:
  4017 ;;		_TmrBInit
  4018 ;;		_Tmr_StartTmr
  4019 ;;		_Tmr_TmrBIrqSet
  4020 ;;		_Tmr_TmrBPrSet
  4021 ;; This function is called by:
  4022 ;;		_InitSchedTimer
  4023 ;;		_InitAuxTimer
  4024 ;; This function uses a non-reentrant model
  4025 ;;
  4026                           
  4027                           	psect	text8
  4028  0039A6                     __ptext8:
  4029                           	opt stack 0
  4030  0039A6                     _Tmr_TmrBConfig:
  4031                           	opt stack 15
  4032                           
  4033                           ;incstack = 0
  4034                           ;Tmr_TmrBConfig@TmrNumb stored from wreg
  4035  0039A6  0100               	movlb	0	; () banked
  4036  0039A8  6FA3               	movwf	Tmr_TmrBConfig@TmrNumb& (0+255),b
  4037                           
  4038                           ;tmr_drv.c: 274: TmrBInit(TmrNumb,TmrBConfig->PreScaler,TmrBConfig->PostScaler);
  4039  0039AA  C0A0  FFD9         	movff	Tmr_TmrBConfig@TmrBConfig,fsr2l
  4040  0039AE  C0A1  FFDA         	movff	Tmr_TmrBConfig@TmrBConfig+1,fsr2h
  4041  0039B2  50DF               	movf	indf2,w,c
  4042  0039B4  0100               	movlb	0	; () banked
  4043  0039B6  6F7D               	movwf	TmrBInit@Prescaler& (0+255),b
  4044  0039B8  EE20 F001          	lfsr	2,1
  4045  0039BC  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4046  0039BE  26D9               	addwf	fsr2l,f,c
  4047  0039C0  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4048  0039C2  22DA               	addwfc	fsr2h,f,c
  4049  0039C4  50DF               	movf	indf2,w,c
  4050  0039C6  6F7E               	movwf	TmrBInit@Postscaler& (0+255),b
  4051  0039C8  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4052  0039CA  ECBF  F022         	call	_TmrBInit
  4053                           
  4054                           ;tmr_drv.c: 276: if (TmrBConfig->IntEnable == EnableInt)
  4055  0039CE  0100               	movlb	0	; () banked
  4056  0039D0  EE20 F002          	lfsr	2,2
  4057  0039D4  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4058  0039D6  26D9               	addwf	fsr2l,f,c
  4059  0039D8  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4060  0039DA  22DA               	addwfc	fsr2h,f,c
  4061  0039DC  04DE               	decf	postinc2,w,c
  4062  0039DE  A4D8               	btfss	status,2,c
  4063  0039E0  D00E               	goto	l546
  4064                           
  4065                           ; BSR set to: 0
  4066                           ;tmr_drv.c: 277: {
  4067                           ;tmr_drv.c: 279: Tmr_TmrBIrqSet(TmrNumb,TmrBConfig->IntPriority,1u);
  4068  0039E2  EE20 F003          	lfsr	2,3
  4069  0039E6  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4070  0039E8  26D9               	addwf	fsr2l,f,c
  4071  0039EA  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4072  0039EC  22DA               	addwfc	fsr2h,f,c
  4073  0039EE  50DF               	movf	indf2,w,c
  4074  0039F0  6F7D               	movwf	Tmr_TmrBIrqSet@Priority& (0+255),b
  4075  0039F2  0E01               	movlw	1
  4076  0039F4  6F7E               	movwf	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),b
  4077  0039F6  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4078  0039F8  EC04  F02A         	call	_Tmr_TmrBIrqSet
  4079                           
  4080                           ;tmr_drv.c: 280: }
  4081  0039FC  D00E               	goto	l547
  4082  0039FE                     l546:
  4083                           
  4084                           ;tmr_drv.c: 281: else
  4085                           ;tmr_drv.c: 282: {
  4086                           ;tmr_drv.c: 284: Tmr_TmrBIrqSet(TmrNumb,TmrBConfig->IntPriority,0u);
  4087  0039FE  0100               	movlb	0	; () banked
  4088  003A00  EE20 F003          	lfsr	2,3
  4089  003A04  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4090  003A06  26D9               	addwf	fsr2l,f,c
  4091  003A08  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4092  003A0A  22DA               	addwfc	fsr2h,f,c
  4093  003A0C  50DF               	movf	indf2,w,c
  4094  003A0E  6F7D               	movwf	Tmr_TmrBIrqSet@Priority& (0+255),b
  4095  003A10  0E00               	movlw	0
  4096  003A12  6F7E               	movwf	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),b
  4097  003A14  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4098  003A16  EC04  F02A         	call	_Tmr_TmrBIrqSet
  4099  003A1A                     l547:
  4100                           
  4101                           ;tmr_drv.c: 285: }
  4102                           ;tmr_drv.c: 287: Tmr_TmrBPrSet(TmrNumb,TmrBConfig->IntFreqHz,TmrBConfig->PreScaler,TmrBC
      +                          onfig->PostScaler);
  4103  003A1A  0100               	movlb	0	; () banked
  4104  003A1C  EE20 F004          	lfsr	2,4
  4105  003A20  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4106  003A22  26D9               	addwf	fsr2l,f,c
  4107  003A24  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4108  003A26  22DA               	addwfc	fsr2h,f,c
  4109  003A28  CFDE F096          	movff	postinc2,Tmr_TmrBPrSet@IntFreqHz
  4110  003A2C  CFDD F097          	movff	postdec2,Tmr_TmrBPrSet@IntFreqHz+1
  4111  003A30  C0A0  FFD9         	movff	Tmr_TmrBConfig@TmrBConfig,fsr2l
  4112  003A34  C0A1  FFDA         	movff	Tmr_TmrBConfig@TmrBConfig+1,fsr2h
  4113  003A38  50DF               	movf	indf2,w,c
  4114  003A3A  6F98               	movwf	Tmr_TmrBPrSet@Prescaler& (0+255),b
  4115  003A3C  EE20 F001          	lfsr	2,1
  4116  003A40  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4117  003A42  26D9               	addwf	fsr2l,f,c
  4118  003A44  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4119  003A46  22DA               	addwfc	fsr2h,f,c
  4120  003A48  50DF               	movf	indf2,w,c
  4121  003A4A  6F99               	movwf	Tmr_TmrBPrSet@Postscaler& (0+255),b
  4122  003A4C  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4123  003A4E  EC47  F017         	call	_Tmr_TmrBPrSet
  4124                           
  4125                           ;tmr_drv.c: 289: if (TmrBConfig->StartTmrRequest == StartTmrReq)
  4126  003A52  0100               	movlb	0	; () banked
  4127  003A54  EE20 F006          	lfsr	2,6
  4128  003A58  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4129  003A5A  26D9               	addwf	fsr2l,f,c
  4130  003A5C  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4131  003A5E  22DA               	addwfc	fsr2h,f,c
  4132  003A60  04DE               	decf	postinc2,w,c
  4133  003A62  A4D8               	btfss	status,2,c
  4134  003A64  0012               	return	
  4135                           
  4136                           ; BSR set to: 0
  4137                           ;tmr_drv.c: 290: {
  4138                           ;tmr_drv.c: 292: Tmr_StartTmr(TmrNumb);
  4139  003A66  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4140  003A68  EC98  F02E         	call	_Tmr_StartTmr
  4141                           
  4142                           ;tmr_drv.c: 293: }
  4143  003A6C  0012               	return	
  4144  003A6E                     __end_of_Tmr_TmrBConfig:
  4145                           	opt stack 0
  4146                           tblptru	equ	0xFF8
  4147                           tblptrh	equ	0xFF7
  4148                           tblptrl	equ	0xFF6
  4149                           tablat	equ	0xFF5
  4150                           intcon	equ	0xFF2
  4151                           intcon2	equ	0xFF1
  4152                           intcon3	equ	0xFF0
  4153                           postinc0	equ	0xFEE
  4154                           wreg	equ	0xFE8
  4155                           postdec1	equ	0xFE5
  4156                           fsr1h	equ	0xFE2
  4157                           fsr1l	equ	0xFE1
  4158                           indf2	equ	0xFDF
  4159                           postinc2	equ	0xFDE
  4160                           postdec2	equ	0xFDD
  4161                           fsr2h	equ	0xFDA
  4162                           fsr2l	equ	0xFD9
  4163                           status	equ	0xFD8
  4164                           
  4165 ;; *************** function _Tmr_TmrBPrSet *****************
  4166 ;; Defined at:
  4167 ;;		line 193 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  4168 ;; Parameters:    Size  Location     Type
  4169 ;;  TmrNumb         1    wreg     unsigned char 
  4170 ;;  IntFreqHz       2   54[BANK0 ] unsigned short 
  4171 ;;  Prescaler       1   56[BANK0 ] unsigned char 
  4172 ;;  Postscaler      1   57[BANK0 ] unsigned char 
  4173 ;; Auto vars:     Size  Location     Type
  4174 ;;  TmrNumb         1   59[BANK0 ] unsigned char 
  4175 ;;  Divisor         4   60[BANK0 ] unsigned long 
  4176 ;;  TmrBPrCfgSts    1   58[BANK0 ] enum E7736
  4177 ;; Return value:  Size  Location     Type
  4178 ;;                  1    wreg      enum E7736
  4179 ;; Registers used:
  4180 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4181 ;; Tracked objects:
  4182 ;;		On entry : 0/0
  4183 ;;		On exit  : 0/0
  4184 ;;		Unchanged: 0/0
  4185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4186 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4187 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4189 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4190 ;;Total ram usage:       10 bytes
  4191 ;; Hardware stack levels used:    1
  4192 ;; Hardware stack levels required when called:   12
  4193 ;; This function calls:
  4194 ;;		___lldiv
  4195 ;;		___lmul
  4196 ;; This function is called by:
  4197 ;;		_Tmr_TmrBConfig
  4198 ;; This function uses a non-reentrant model
  4199 ;;
  4200                           
  4201                           	psect	text9
  4202  002E8E                     __ptext9:
  4203                           	opt stack 0
  4204  002E8E                     _Tmr_TmrBPrSet:
  4205                           	opt stack 15
  4206                           
  4207                           ;incstack = 0
  4208                           ;Tmr_TmrBPrSet@TmrNumb stored from wreg
  4209  002E8E  0100               	movlb	0	; () banked
  4210  002E90  6F9B               	movwf	Tmr_TmrBPrSet@TmrNumb& (0+255),b
  4211                           
  4212                           ;tmr_drv.c: 195: CfgStsType TmrBPrCfgSts;
  4213                           ;tmr_drv.c: 196: UINT32 Divisor = 0;
  4214  002E92  0E00               	movlw	0
  4215  002E94  0100               	movlb	0	; () banked
  4216  002E96  6F9C               	movwf	Tmr_TmrBPrSet@Divisor& (0+255),b
  4217  002E98  0E00               	movlw	0
  4218  002E9A  6F9D               	movwf	(Tmr_TmrBPrSet@Divisor+1)& (0+255),b
  4219  002E9C  0E00               	movlw	0
  4220  002E9E  6F9E               	movwf	(Tmr_TmrBPrSet@Divisor+2)& (0+255),b
  4221  002EA0  0E00               	movlw	0
  4222  002EA2  6F9F               	movwf	(Tmr_TmrBPrSet@Divisor+3)& (0+255),b
  4223                           
  4224                           ; BSR set to: 0
  4225                           ;tmr_drv.c: 199: Divisor = (UINT32)Prescaler*(UINT32)Postscaler*(UINT32)IntFreqHz;
  4226  002EA4  5198               	movf	Tmr_TmrBPrSet@Prescaler& (0+255),w,b
  4227  002EA6  0399               	mulwf	Tmr_TmrBPrSet@Postscaler& (0+255),b
  4228  002EA8  CFF3 F07D          	movff	prodl,___lmul@multiplier
  4229  002EAC  CFF4 F07E          	movff	prodh,___lmul@multiplier+1
  4230  002EB0  6B7F               	clrf	(___lmul@multiplier+2)& (0+255),b
  4231  002EB2  6B80               	clrf	(___lmul@multiplier+3)& (0+255),b
  4232  002EB4  C096  F081         	movff	Tmr_TmrBPrSet@IntFreqHz,___lmul@multiplicand
  4233  002EB8  C097  F082         	movff	Tmr_TmrBPrSet@IntFreqHz+1,___lmul@multiplicand+1
  4234  002EBC  6B83               	clrf	(___lmul@multiplicand+2)& (0+255),b
  4235  002EBE  6B84               	clrf	(___lmul@multiplicand+3)& (0+255),b
  4236  002EC0  ECE9  F027         	call	___lmul	;wreg free
  4237  002EC4  C07D  F09C         	movff	?___lmul,Tmr_TmrBPrSet@Divisor
  4238  002EC8  C07E  F09D         	movff	?___lmul+1,Tmr_TmrBPrSet@Divisor+1
  4239  002ECC  C07F  F09E         	movff	?___lmul+2,Tmr_TmrBPrSet@Divisor+2
  4240  002ED0  C080  F09F         	movff	?___lmul+3,Tmr_TmrBPrSet@Divisor+3
  4241                           
  4242                           ;tmr_drv.c: 202: if (((((UINT32)(48000000))/(UINT32)(4))/Divisor) <= 255)
  4243  002ED4  0E00               	movlw	0
  4244  002ED6  0100               	movlb	0	; () banked
  4245  002ED8  6F89               	movwf	___lldiv@dividend& (0+255),b
  4246  002EDA  0E1B               	movlw	27
  4247  002EDC  6F8A               	movwf	(___lldiv@dividend+1)& (0+255),b
  4248  002EDE  0EB7               	movlw	183
  4249  002EE0  6F8B               	movwf	(___lldiv@dividend+2)& (0+255),b
  4250  002EE2  0E00               	movlw	0
  4251  002EE4  6F8C               	movwf	(___lldiv@dividend+3)& (0+255),b
  4252  002EE6  C09C  F08D         	movff	Tmr_TmrBPrSet@Divisor,___lldiv@divisor
  4253  002EEA  C09D  F08E         	movff	Tmr_TmrBPrSet@Divisor+1,___lldiv@divisor+1
  4254  002EEE  C09E  F08F         	movff	Tmr_TmrBPrSet@Divisor+2,___lldiv@divisor+2
  4255  002EF2  C09F  F090         	movff	Tmr_TmrBPrSet@Divisor+3,___lldiv@divisor+3
  4256  002EF6  EC01  F025         	call	___lldiv	;wreg free
  4257  002EFA  0100               	movlb	0	; () banked
  4258  002EFC  518C               	movf	(?___lldiv+3)& (0+255),w,b
  4259  002EFE  118B               	iorwf	(?___lldiv+2)& (0+255),w,b
  4260  002F00  E13A               	bnz	l13015
  4261  002F02  058A               	decf	(?___lldiv+1)& (0+255),w,b
  4262  002F04  A0D8               	btfss	status,0,c
  4263  002F06  D02D               	goto	l529
  4264  002F08  D036               	goto	l528
  4265  002F0A                     
  4266                           ; BSR set to: 0
  4267                           ;tmr_drv.c: 209: PR2 = (((UINT32)(48000000))/(UINT32)(4))/Divisor;
  4268                           
  4269                           ; BSR set to: 0
  4270  002F0A  0E00               	movlw	0
  4271  002F0C  6F89               	movwf	___lldiv@dividend& (0+255),b
  4272  002F0E  0E1B               	movlw	27
  4273  002F10  6F8A               	movwf	(___lldiv@dividend+1)& (0+255),b
  4274  002F12  0EB7               	movlw	183
  4275  002F14  6F8B               	movwf	(___lldiv@dividend+2)& (0+255),b
  4276  002F16  0E00               	movlw	0
  4277  002F18  6F8C               	movwf	(___lldiv@dividend+3)& (0+255),b
  4278  002F1A  C09C  F08D         	movff	Tmr_TmrBPrSet@Divisor,___lldiv@divisor
  4279  002F1E  C09D  F08E         	movff	Tmr_TmrBPrSet@Divisor+1,___lldiv@divisor+1
  4280  002F22  C09E  F08F         	movff	Tmr_TmrBPrSet@Divisor+2,___lldiv@divisor+2
  4281  002F26  C09F  F090         	movff	Tmr_TmrBPrSet@Divisor+3,___lldiv@divisor+3
  4282  002F2A  EC01  F025         	call	___lldiv	;wreg free
  4283  002F2E  0100               	movlb	0	; () banked
  4284  002F30  5189               	movf	?___lldiv& (0+255),w,b
  4285  002F32  6ECB               	movwf	4043,c	;volatile
  4286                           
  4287                           ;tmr_drv.c: 210: break;
  4288  002F34  D01D               	goto	l531
  4289  002F36                     
  4290                           ; BSR set to: 0
  4291                           ;tmr_drv.c: 214: PR4 = (((UINT32)(48000000))/(UINT32)(4))/Divisor;
  4292                           
  4293                           ; BSR set to: 0
  4294  002F36  0E00               	movlw	0
  4295  002F38  6F89               	movwf	___lldiv@dividend& (0+255),b
  4296  002F3A  0E1B               	movlw	27
  4297  002F3C  6F8A               	movwf	(___lldiv@dividend+1)& (0+255),b
  4298  002F3E  0EB7               	movlw	183
  4299  002F40  6F8B               	movwf	(___lldiv@dividend+2)& (0+255),b
  4300  002F42  0E00               	movlw	0
  4301  002F44  6F8C               	movwf	(___lldiv@dividend+3)& (0+255),b
  4302  002F46  C09C  F08D         	movff	Tmr_TmrBPrSet@Divisor,___lldiv@divisor
  4303  002F4A  C09D  F08E         	movff	Tmr_TmrBPrSet@Divisor+1,___lldiv@divisor+1
  4304  002F4E  C09E  F08F         	movff	Tmr_TmrBPrSet@Divisor+2,___lldiv@divisor+2
  4305  002F52  C09F  F090         	movff	Tmr_TmrBPrSet@Divisor+3,___lldiv@divisor+3
  4306  002F56  EC01  F025         	call	___lldiv	;wreg free
  4307  002F5A  0100               	movlb	0	; () banked
  4308  002F5C  5189               	movf	?___lldiv& (0+255),w,b
  4309  002F5E  6E77               	movwf	3959,c	;volatile
  4310                           
  4311                           ; BSR set to: 0
  4312                           ;tmr_drv.c: 219: }
  4313                           
  4314                           ; BSR set to: 0
  4315                           ;tmr_drv.c: 218: break;
  4316                           
  4317                           ;tmr_drv.c: 217: default:
  4318                           
  4319                           ;tmr_drv.c: 215: break;
  4320  002F60  D007               	goto	l531
  4321  002F62                     l529:
  4322                           
  4323                           ; BSR set to: 0
  4324                           
  4325                           ; BSR set to: 0
  4326  002F62  519B               	movf	Tmr_TmrBPrSet@TmrNumb& (0+255),w,b
  4327                           
  4328                           ; Switch size 1, requested type "space"
  4329                           ; Number of cases is 2, Range of values is 2 to 4
  4330                           ; switch strategies available:
  4331                           ; Name         Instructions Cycles
  4332                           ; simple_byte            7     4 (average)
  4333                           ;	Chosen strategy is simple_byte
  4334  002F64  0A02               	xorlw	2	; case 2
  4335  002F66  B4D8               	btfsc	status,2,c
  4336  002F68  D7D0               	goto	l530
  4337  002F6A  0A06               	xorlw	6	; case 4
  4338  002F6C  B4D8               	btfsc	status,2,c
  4339  002F6E  D7E3               	goto	l532
  4340  002F70                     l531:
  4341                           
  4342                           ; BSR set to: 0
  4343                           ;tmr_drv.c: 222: TmrBPrCfgSts = CfgOk;
  4344                           
  4345                           ; BSR set to: 0
  4346  002F70  0E00               	movlw	0
  4347  002F72  6F9A               	movwf	Tmr_TmrBPrSet@TmrBPrCfgSts& (0+255),b
  4348                           
  4349                           ;tmr_drv.c: 223: }
  4350  002F74  0012               	return	
  4351  002F76                     l528:
  4352  002F76                     l13015:
  4353                           
  4354                           ; BSR set to: 0
  4355                           ;tmr_drv.c: 224: else
  4356                           ;tmr_drv.c: 225: {
  4357                           ;tmr_drv.c: 227: TmrBPrCfgSts = CfgError;
  4358  002F76  0E01               	movlw	1
  4359  002F78  6F9A               	movwf	Tmr_TmrBPrSet@TmrBPrCfgSts& (0+255),b
  4360                           
  4361                           ; BSR set to: 0
  4362  002F7A  0012               	return	
  4363  002F7C                     __end_of_Tmr_TmrBPrSet:
  4364                           	opt stack 0
  4365                           tblptru	equ	0xFF8
  4366                           tblptrh	equ	0xFF7
  4367                           tblptrl	equ	0xFF6
  4368                           tablat	equ	0xFF5
  4369                           prodh	equ	0xFF4
  4370                           prodl	equ	0xFF3
  4371                           intcon	equ	0xFF2
  4372                           intcon2	equ	0xFF1
  4373                           intcon3	equ	0xFF0
  4374                           postinc0	equ	0xFEE
  4375                           wreg	equ	0xFE8
  4376                           postdec1	equ	0xFE5
  4377                           fsr1h	equ	0xFE2
  4378                           fsr1l	equ	0xFE1
  4379                           indf2	equ	0xFDF
  4380                           postinc2	equ	0xFDE
  4381                           postdec2	equ	0xFDD
  4382                           fsr2h	equ	0xFDA
  4383                           fsr2l	equ	0xFD9
  4384                           status	equ	0xFD8
  4385                           
  4386 ;; *************** function _Tmr_TmrBIrqSet *****************
  4387 ;; Defined at:
  4388 ;;		line 153 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  4389 ;; Parameters:    Size  Location     Type
  4390 ;;  TmrNumb         1    wreg     unsigned char 
  4391 ;;  Priority        1   29[BANK0 ] enum E7716
  4392 ;;  TmrIrqSts       1   30[BANK0 ] unsigned char 
  4393 ;; Auto vars:     Size  Location     Type
  4394 ;;  TmrNumb         1   31[BANK0 ] unsigned char 
  4395 ;; Return value:  Size  Location     Type
  4396 ;;                  1    wreg      void 
  4397 ;; Registers used:
  4398 ;;		wreg, status,2, status,0
  4399 ;; Tracked objects:
  4400 ;;		On entry : 0/0
  4401 ;;		On exit  : 0/0
  4402 ;;		Unchanged: 0/0
  4403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4404 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4405 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4406 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4407 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4408 ;;Total ram usage:        3 bytes
  4409 ;; Hardware stack levels used:    1
  4410 ;; Hardware stack levels required when called:   11
  4411 ;; This function calls:
  4412 ;;		Nothing
  4413 ;; This function is called by:
  4414 ;;		_Tmr_TmrBConfig
  4415 ;; This function uses a non-reentrant model
  4416 ;;
  4417                           
  4418                           	psect	text10
  4419  005408                     __ptext10:
  4420                           	opt stack 0
  4421  005408                     _Tmr_TmrBIrqSet:
  4422                           	opt stack 16
  4423                           
  4424                           ; BSR set to: 0
  4425                           ;incstack = 0
  4426                           ;Tmr_TmrBIrqSet@TmrNumb stored from wreg
  4427  005408  0100               	movlb	0	; () banked
  4428  00540A  6F7F               	movwf	Tmr_TmrBIrqSet@TmrNumb& (0+255),b
  4429                           
  4430                           ;tmr_drv.c: 156: switch (TmrNumb)
  4431  00540C  D01A               	goto	l520
  4432  00540E                     l521:
  4433                           
  4434                           ; BSR set to: 0
  4435                           ;tmr_drv.c: 160: PIR1bits.TMR2IF = 0u;
  4436  00540E  929E               	bcf	3998,1,c	;volatile
  4437                           
  4438                           ;tmr_drv.c: 162: IPR1bits.TMR2IP = Priority;
  4439  005410  B17D               	btfsc	Tmr_TmrBIrqSet@Priority& (0+255),0,b
  4440  005412  D002               	bra	u8015
  4441  005414  929F               	bcf	3999,1,c	;volatile
  4442  005416  D001               	bra	u8016
  4443  005418                     u8015:
  4444  005418  829F               	bsf	3999,1,c	;volatile
  4445  00541A                     u8016:
  4446                           
  4447                           ;tmr_drv.c: 164: PIE1bits.TMR2IE = TmrIrqSts;
  4448  00541A  0100               	movlb	0	; () banked
  4449  00541C  B17E               	btfsc	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),0,b
  4450  00541E  D002               	bra	u8025
  4451  005420  929D               	bcf	3997,1,c	;volatile
  4452  005422  D001               	bra	u8026
  4453  005424                     u8025:
  4454  005424  829D               	bsf	3997,1,c	;volatile
  4455  005426                     u8026:
  4456                           
  4457                           ;tmr_drv.c: 165: break;
  4458  005426  0012               	return	
  4459  005428                     l523:
  4460                           
  4461                           ; BSR set to: 0
  4462                           ;tmr_drv.c: 169: PIR3bits.TMR4IF = 0u;
  4463  005428  96A4               	bcf	4004,3,c	;volatile
  4464                           
  4465                           ;tmr_drv.c: 171: IPR3bits.TMR4IP = Priority;
  4466  00542A  B17D               	btfsc	Tmr_TmrBIrqSet@Priority& (0+255),0,b
  4467  00542C  D002               	bra	u8035
  4468  00542E  96A5               	bcf	4005,3,c	;volatile
  4469  005430  D001               	bra	u8036
  4470  005432                     u8035:
  4471  005432  86A5               	bsf	4005,3,c	;volatile
  4472  005434                     u8036:
  4473                           
  4474                           ;tmr_drv.c: 173: PIE3bits.TMR4IE = TmrIrqSts;
  4475  005434  0100               	movlb	0	; () banked
  4476  005436  B17E               	btfsc	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),0,b
  4477  005438  D002               	bra	u8045
  4478  00543A  96A3               	bcf	4003,3,c	;volatile
  4479  00543C  D001               	bra	u8046
  4480  00543E                     u8045:
  4481  00543E  86A3               	bsf	4003,3,c	;volatile
  4482  005440                     u8046:
  4483                           
  4484                           ;tmr_drv.c: 178: }
  4485                           
  4486                           ;tmr_drv.c: 177: break;
  4487                           
  4488                           ;tmr_drv.c: 176: default:
  4489                           
  4490                           ;tmr_drv.c: 174: break;
  4491  005440  0012               	return	
  4492  005442                     l520:
  4493  005442  0100               	movlb	0	; () banked
  4494  005444  517F               	movf	Tmr_TmrBIrqSet@TmrNumb& (0+255),w,b
  4495                           
  4496                           ; Switch size 1, requested type "space"
  4497                           ; Number of cases is 2, Range of values is 2 to 4
  4498                           ; switch strategies available:
  4499                           ; Name         Instructions Cycles
  4500                           ; simple_byte            7     4 (average)
  4501                           ;	Chosen strategy is simple_byte
  4502  005446  0A02               	xorlw	2	; case 2
  4503  005448  B4D8               	btfsc	status,2,c
  4504  00544A  D7E1               	goto	l521
  4505  00544C  0A06               	xorlw	6	; case 4
  4506  00544E  A4D8               	btfss	status,2,c
  4507  005450  0012               	return	
  4508  005452  D7EA               	goto	l523
  4509  005454                     __end_of_Tmr_TmrBIrqSet:
  4510                           	opt stack 0
  4511                           tblptru	equ	0xFF8
  4512                           tblptrh	equ	0xFF7
  4513                           tblptrl	equ	0xFF6
  4514                           tablat	equ	0xFF5
  4515                           prodh	equ	0xFF4
  4516                           prodl	equ	0xFF3
  4517                           intcon	equ	0xFF2
  4518                           intcon2	equ	0xFF1
  4519                           intcon3	equ	0xFF0
  4520                           postinc0	equ	0xFEE
  4521                           wreg	equ	0xFE8
  4522                           postdec1	equ	0xFE5
  4523                           fsr1h	equ	0xFE2
  4524                           fsr1l	equ	0xFE1
  4525                           indf2	equ	0xFDF
  4526                           postinc2	equ	0xFDE
  4527                           postdec2	equ	0xFDD
  4528                           fsr2h	equ	0xFDA
  4529                           fsr2l	equ	0xFD9
  4530                           status	equ	0xFD8
  4531                           
  4532 ;; *************** function _Tmr_StartTmr *****************
  4533 ;; Defined at:
  4534 ;;		line 242 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  4535 ;; Parameters:    Size  Location     Type
  4536 ;;  TmrNumb         1    wreg     unsigned char 
  4537 ;; Auto vars:     Size  Location     Type
  4538 ;;  TmrNumb         1   29[BANK0 ] unsigned char 
  4539 ;; Return value:  Size  Location     Type
  4540 ;;                  1    wreg      void 
  4541 ;; Registers used:
  4542 ;;		wreg, status,2, status,0
  4543 ;; Tracked objects:
  4544 ;;		On entry : 0/0
  4545 ;;		On exit  : 0/0
  4546 ;;		Unchanged: 0/0
  4547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4548 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4549 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4550 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4551 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4552 ;;Total ram usage:        1 bytes
  4553 ;; Hardware stack levels used:    1
  4554 ;; Hardware stack levels required when called:   11
  4555 ;; This function calls:
  4556 ;;		Nothing
  4557 ;; This function is called by:
  4558 ;;		_Tmr_TmrBConfig
  4559 ;; This function uses a non-reentrant model
  4560 ;;
  4561                           
  4562                           	psect	text11
  4563  005D30                     __ptext11:
  4564                           	opt stack 0
  4565  005D30                     _Tmr_StartTmr:
  4566                           	opt stack 16
  4567                           
  4568                           ;incstack = 0
  4569                           ;Tmr_StartTmr@TmrNumb stored from wreg
  4570  005D30  0100               	movlb	0	; () banked
  4571  005D32  6F7D               	movwf	Tmr_StartTmr@TmrNumb& (0+255),b
  4572                           
  4573                           ;tmr_drv.c: 245: switch (TmrNumb)
  4574  005D34  D004               	goto	l538
  4575  005D36                     l539:
  4576                           
  4577                           ; BSR set to: 0
  4578                           ;tmr_drv.c: 249: T2CONbits.TMR2ON = 1u;
  4579  005D36  84CA               	bsf	4042,2,c	;volatile
  4580                           
  4581                           ;tmr_drv.c: 250: break;
  4582  005D38  0012               	return	
  4583  005D3A                     l541:
  4584                           
  4585                           ; BSR set to: 0
  4586                           ;tmr_drv.c: 254: T4CONbits.TMR4ON = 1u;
  4587  005D3A  8476               	bsf	3958,2,c	;volatile
  4588                           
  4589                           ; BSR set to: 0
  4590                           ;tmr_drv.c: 259: }
  4591                           
  4592                           ; BSR set to: 0
  4593                           ;tmr_drv.c: 258: break;
  4594                           
  4595                           ;tmr_drv.c: 257: default:
  4596                           
  4597                           ;tmr_drv.c: 255: break;
  4598  005D3C  0012               	return	
  4599  005D3E                     l538:
  4600                           
  4601                           ; BSR set to: 0
  4602  005D3E  0100               	movlb	0	; () banked
  4603  005D40  517D               	movf	Tmr_StartTmr@TmrNumb& (0+255),w,b
  4604                           
  4605                           ; Switch size 1, requested type "space"
  4606                           ; Number of cases is 2, Range of values is 2 to 4
  4607                           ; switch strategies available:
  4608                           ; Name         Instructions Cycles
  4609                           ; simple_byte            7     4 (average)
  4610                           ;	Chosen strategy is simple_byte
  4611  005D42  0A02               	xorlw	2	; case 2
  4612  005D44  B4D8               	btfsc	status,2,c
  4613  005D46  D7F7               	goto	l539
  4614  005D48  0A06               	xorlw	6	; case 4
  4615  005D4A  A4D8               	btfss	status,2,c
  4616  005D4C  0012               	return	
  4617  005D4E  D7F5               	goto	l541
  4618  005D50                     __end_of_Tmr_StartTmr:
  4619                           	opt stack 0
  4620                           tblptru	equ	0xFF8
  4621                           tblptrh	equ	0xFF7
  4622                           tblptrl	equ	0xFF6
  4623                           tablat	equ	0xFF5
  4624                           prodh	equ	0xFF4
  4625                           prodl	equ	0xFF3
  4626                           intcon	equ	0xFF2
  4627                           intcon2	equ	0xFF1
  4628                           intcon3	equ	0xFF0
  4629                           postinc0	equ	0xFEE
  4630                           wreg	equ	0xFE8
  4631                           postdec1	equ	0xFE5
  4632                           fsr1h	equ	0xFE2
  4633                           fsr1l	equ	0xFE1
  4634                           indf2	equ	0xFDF
  4635                           postinc2	equ	0xFDE
  4636                           postdec2	equ	0xFDD
  4637                           fsr2h	equ	0xFDA
  4638                           fsr2l	equ	0xFD9
  4639                           status	equ	0xFD8
  4640                           
  4641 ;; *************** function _TmrBInit *****************
  4642 ;; Defined at:
  4643 ;;		line 72 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  4644 ;; Parameters:    Size  Location     Type
  4645 ;;  TmrNumb         1    wreg     unsigned char 
  4646 ;;  Prescaler       1   29[BANK0 ] unsigned char 
  4647 ;;  Postscaler      1   30[BANK0 ] unsigned char 
  4648 ;; Auto vars:     Size  Location     Type
  4649 ;;  TmrNumb         1   32[BANK0 ] unsigned char 
  4650 ;; Return value:  Size  Location     Type
  4651 ;;                  1    wreg      void 
  4652 ;; Registers used:
  4653 ;;		wreg, status,2, status,0
  4654 ;; Tracked objects:
  4655 ;;		On entry : 0/0
  4656 ;;		On exit  : 0/0
  4657 ;;		Unchanged: 0/0
  4658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4659 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4660 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4661 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4662 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4663 ;;Total ram usage:        4 bytes
  4664 ;; Hardware stack levels used:    1
  4665 ;; Hardware stack levels required when called:   11
  4666 ;; This function calls:
  4667 ;;		Nothing
  4668 ;; This function is called by:
  4669 ;;		_Tmr_TmrBConfig
  4670 ;; This function uses a non-reentrant model
  4671 ;;
  4672                           
  4673                           	psect	text12
  4674  00457E                     __ptext12:
  4675                           	opt stack 0
  4676  00457E                     _TmrBInit:
  4677                           	opt stack 16
  4678                           
  4679                           ; BSR set to: 0
  4680                           ;incstack = 0
  4681                           ;TmrBInit@TmrNumb stored from wreg
  4682  00457E  0100               	movlb	0	; () banked
  4683  004580  6F80               	movwf	TmrBInit@TmrNumb& (0+255),b
  4684                           
  4685                           ;tmr_drv.c: 75: switch (TmrNumb)
  4686  004582  D03F               	goto	l500
  4687  004584                     l503:
  4688                           
  4689                           ; BSR set to: 0
  4690                           ;tmr_drv.c: 83: T2CONbits.T2CKPS0 = 0u;
  4691  004584  90CA               	bcf	4042,0,c	;volatile
  4692  004586  D001               	goto	L1
  4693  004588                     l505:
  4694                           
  4695                           ; BSR set to: 0
  4696                           ;tmr_drv.c: 89: T2CONbits.T2CKPS0 = 1u;
  4697  004588  80CA               	bsf	4042,0,c	;volatile
  4698  00458A                     L1:
  4699                           
  4700                           ;tmr_drv.c: 90: T2CONbits.T2CKPS1 = 0u;
  4701  00458A  92CA               	bcf	4042,1,c	;volatile
  4702                           
  4703                           ;tmr_drv.c: 91: break;
  4704  00458C  D00E               	goto	l504
  4705  00458E                     l506:
  4706                           
  4707                           ; BSR set to: 0
  4708                           ;tmr_drv.c: 94: T2CONbits.T2CKPS0 = 1u;
  4709  00458E  80CA               	bsf	4042,0,c	;volatile
  4710                           
  4711                           ;tmr_drv.c: 95: T2CONbits.T2CKPS1 = 1u;
  4712  004590  82CA               	bsf	4042,1,c	;volatile
  4713                           
  4714                           ; BSR set to: 0
  4715                           ;tmr_drv.c: 100: }
  4716                           
  4717                           ; BSR set to: 0
  4718                           ;tmr_drv.c: 99: break;
  4719                           
  4720                           ;tmr_drv.c: 98: default:
  4721                           
  4722                           ;tmr_drv.c: 96: break;
  4723  004592  D00B               	goto	l504
  4724  004594                     
  4725                           ; BSR set to: 0
  4726  004594  0100               	movlb	0	; () banked
  4727  004596  517D               	movf	TmrBInit@Prescaler& (0+255),w,b
  4728                           
  4729                           ; Switch size 1, requested type "space"
  4730                           ; Number of cases is 3, Range of values is 1 to 16
  4731                           ; switch strategies available:
  4732                           ; Name         Instructions Cycles
  4733                           ; simple_byte           10     6 (average)
  4734                           ;	Chosen strategy is simple_byte
  4735  004598  0A01               	xorlw	1	; case 1
  4736  00459A  B4D8               	btfsc	status,2,c
  4737  00459C  D7F3               	goto	l503
  4738  00459E  0A05               	xorlw	5	; case 4
  4739  0045A0  B4D8               	btfsc	status,2,c
  4740  0045A2  D7F2               	goto	l505
  4741  0045A4  0A14               	xorlw	20	; case 16
  4742  0045A6  B4D8               	btfsc	status,2,c
  4743  0045A8  D7F2               	goto	l506
  4744  0045AA                     l504:
  4745                           
  4746                           ; BSR set to: 0
  4747                           ;tmr_drv.c: 103: T2CONbits.T2OUTPS = (Postscaler - 1);
  4748                           
  4749                           ; BSR set to: 0
  4750  0045AA  C07E  F07F         	movff	TmrBInit@Postscaler,??_TmrBInit
  4751  0045AE  0EFF               	movlw	255
  4752  0045B0  277F               	addwf	??_TmrBInit& (0+255),f,b
  4753  0045B2  477F               	rlncf	??_TmrBInit& (0+255),f,b
  4754  0045B4  477F               	rlncf	??_TmrBInit& (0+255),f,b
  4755  0045B6  477F               	rlncf	??_TmrBInit& (0+255),f,b
  4756  0045B8  50CA               	movf	4042,w,c	;volatile
  4757  0045BA  197F               	xorwf	??_TmrBInit& (0+255),w,b
  4758  0045BC  0B87               	andlw	-121
  4759  0045BE  197F               	xorwf	??_TmrBInit& (0+255),w,b
  4760  0045C0  6ECA               	movwf	4042,c	;volatile
  4761                           
  4762                           ;tmr_drv.c: 104: break;
  4763  0045C2  0012               	return	
  4764  0045C4                     l511:
  4765                           
  4766                           ; BSR set to: 0
  4767                           ;tmr_drv.c: 112: T4CONbits.T4CKPS0 = 0u;
  4768  0045C4  9076               	bcf	3958,0,c	;volatile
  4769  0045C6  D001               	goto	L2
  4770  0045C8                     l513:
  4771                           
  4772                           ; BSR set to: 0
  4773                           ;tmr_drv.c: 118: T4CONbits.T4CKPS0 = 1u;
  4774  0045C8  8076               	bsf	3958,0,c	;volatile
  4775  0045CA                     L2:
  4776                           
  4777                           ;tmr_drv.c: 119: T4CONbits.T4CKPS1 = 0u;
  4778  0045CA  9276               	bcf	3958,1,c	;volatile
  4779                           
  4780                           ;tmr_drv.c: 120: break;
  4781  0045CC  D00D               	goto	l512
  4782  0045CE                     l514:
  4783                           
  4784                           ; BSR set to: 0
  4785                           ;tmr_drv.c: 123: T4CONbits.T4CKPS0 = 1u;
  4786  0045CE  8076               	bsf	3958,0,c	;volatile
  4787                           
  4788                           ;tmr_drv.c: 124: T4CONbits.T4CKPS1 = 1u;
  4789  0045D0  8276               	bsf	3958,1,c	;volatile
  4790                           
  4791                           ; BSR set to: 0
  4792                           ;tmr_drv.c: 129: }
  4793                           
  4794                           ; BSR set to: 0
  4795                           ;tmr_drv.c: 128: break;
  4796                           
  4797                           ;tmr_drv.c: 127: default:
  4798                           
  4799                           ;tmr_drv.c: 125: break;
  4800  0045D2  D00A               	goto	l512
  4801  0045D4                     
  4802                           ; BSR set to: 0
  4803                           
  4804                           ; BSR set to: 0
  4805  0045D4  517D               	movf	TmrBInit@Prescaler& (0+255),w,b
  4806                           
  4807                           ; Switch size 1, requested type "space"
  4808                           ; Number of cases is 3, Range of values is 1 to 16
  4809                           ; switch strategies available:
  4810                           ; Name         Instructions Cycles
  4811                           ; simple_byte           10     6 (average)
  4812                           ;	Chosen strategy is simple_byte
  4813  0045D6  0A01               	xorlw	1	; case 1
  4814  0045D8  B4D8               	btfsc	status,2,c
  4815  0045DA  D7F4               	goto	l511
  4816  0045DC  0A05               	xorlw	5	; case 4
  4817  0045DE  B4D8               	btfsc	status,2,c
  4818  0045E0  D7F3               	goto	l513
  4819  0045E2  0A14               	xorlw	20	; case 16
  4820  0045E4  B4D8               	btfsc	status,2,c
  4821  0045E6  D7F3               	goto	l514
  4822  0045E8                     l512:
  4823                           
  4824                           ; BSR set to: 0
  4825                           ;tmr_drv.c: 132: T4CONbits.T4OUTPS = (Postscaler - 1);
  4826                           
  4827                           ; BSR set to: 0
  4828  0045E8  C07E  F07F         	movff	TmrBInit@Postscaler,??_TmrBInit
  4829  0045EC  0EFF               	movlw	255
  4830  0045EE  277F               	addwf	??_TmrBInit& (0+255),f,b
  4831  0045F0  477F               	rlncf	??_TmrBInit& (0+255),f,b
  4832  0045F2  477F               	rlncf	??_TmrBInit& (0+255),f,b
  4833  0045F4  477F               	rlncf	??_TmrBInit& (0+255),f,b
  4834  0045F6  5076               	movf	3958,w,c	;volatile
  4835  0045F8  197F               	xorwf	??_TmrBInit& (0+255),w,b
  4836  0045FA  0B87               	andlw	-121
  4837  0045FC  197F               	xorwf	??_TmrBInit& (0+255),w,b
  4838  0045FE  6E76               	movwf	3958,c	;volatile
  4839                           
  4840                           ; BSR set to: 0
  4841                           ;tmr_drv.c: 137: }
  4842                           
  4843                           ; BSR set to: 0
  4844                           ;tmr_drv.c: 136: break;
  4845                           
  4846                           ;tmr_drv.c: 135: default:
  4847                           
  4848                           ;tmr_drv.c: 133: break;
  4849  004600  0012               	return	
  4850  004602                     l500:
  4851                           
  4852                           ; BSR set to: 0
  4853  004602  0100               	movlb	0	; () banked
  4854  004604  5180               	movf	TmrBInit@TmrNumb& (0+255),w,b
  4855                           
  4856                           ; Switch size 1, requested type "space"
  4857                           ; Number of cases is 2, Range of values is 2 to 4
  4858                           ; switch strategies available:
  4859                           ; Name         Instructions Cycles
  4860                           ; simple_byte            7     4 (average)
  4861                           ;	Chosen strategy is simple_byte
  4862  004606  0A02               	xorlw	2	; case 2
  4863  004608  B4D8               	btfsc	status,2,c
  4864  00460A  D7C4               	goto	l502
  4865  00460C  0A06               	xorlw	6	; case 4
  4866  00460E  A4D8               	btfss	status,2,c
  4867  004610  0012               	return	
  4868  004612  D7E0               	goto	l510
  4869  004614                     __end_of_TmrBInit:
  4870                           	opt stack 0
  4871                           tblptru	equ	0xFF8
  4872                           tblptrh	equ	0xFF7
  4873                           tblptrl	equ	0xFF6
  4874                           tablat	equ	0xFF5
  4875                           prodh	equ	0xFF4
  4876                           prodl	equ	0xFF3
  4877                           intcon	equ	0xFF2
  4878                           intcon2	equ	0xFF1
  4879                           intcon3	equ	0xFF0
  4880                           postinc0	equ	0xFEE
  4881                           wreg	equ	0xFE8
  4882                           postdec1	equ	0xFE5
  4883                           fsr1h	equ	0xFE2
  4884                           fsr1l	equ	0xFE1
  4885                           indf2	equ	0xFDF
  4886                           postinc2	equ	0xFDE
  4887                           postdec2	equ	0xFDD
  4888                           fsr2h	equ	0xFDA
  4889                           fsr2l	equ	0xFD9
  4890                           status	equ	0xFD8
  4891                           
  4892 ;; *************** function _Sch_MainScheduler *****************
  4893 ;; Defined at:
  4894 ;;		line 175 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
  4895 ;; Parameters:    Size  Location     Type
  4896 ;;		None
  4897 ;; Auto vars:     Size  Location     Type
  4898 ;;		None
  4899 ;; Return value:  Size  Location     Type
  4900 ;;                  1    wreg      void 
  4901 ;; Registers used:
  4902 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  4903 ;; Tracked objects:
  4904 ;;		On entry : 0/0
  4905 ;;		On exit  : 0/0
  4906 ;;		Unchanged: 0/0
  4907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4908 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4909 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4910 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4911 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4912 ;;Total ram usage:        0 bytes
  4913 ;; Hardware stack levels used:    1
  4914 ;; Hardware stack levels required when called:   22
  4915 ;; This function calls:
  4916 ;;		_InitializeTasks
  4917 ;;		_ScheduleTasks
  4918 ;; This function is called by:
  4919 ;;		_main
  4920 ;; This function uses a non-reentrant model
  4921 ;;
  4922                           
  4923                           	psect	text13
  4924  005D8E                     __ptext13:
  4925                           	opt stack 0
  4926  005D8E                     _Sch_MainScheduler:
  4927                           	opt stack 8
  4928                           
  4929                           ;os_sched.c: 178: InitializeTasks();
  4930                           
  4931                           ; BSR set to: 0
  4932                           ;incstack = 0
  4933  005D8E  ECF6  F025         	call	_InitializeTasks	;wreg free
  4934                           
  4935                           ;os_sched.c: 180: SystemState = RunningState;
  4936  005D92  0E01               	movlw	1
  4937  005D94  0100               	movlb	0	; () banked
  4938  005D96  6FD2               	movwf	_SystemState& (0+255),b
  4939  005D98                     
  4940                           ;os_sched.c: 188: {
  4941                           ;os_sched.c: 190: if (MainSystemTimebaseFlag == CallTaskPhase)
  4942                           
  4943                           ; BSR set to: 0
  4944  005D98  0102               	movlb	2	; () banked
  4945  005D9A  51F4               	movf	_MainSystemTimebaseFlag& (0+255),w,b
  4946  005D9C  A4D8               	btfss	status,2,c
  4947  005D9E  D7FC               	goto	l790
  4948                           
  4949                           ; BSR set to: 2
  4950                           ;os_sched.c: 191: {
  4951                           ;os_sched.c: 196: ScheduleTasks();
  4952  005DA0  ECA9  F015         	call	_ScheduleTasks	;wreg free
  4953                           
  4954                           ;os_sched.c: 201: MainSystemTimebaseFlag = WaitTriggerPhase;
  4955  005DA4  0E01               	movlw	1
  4956  005DA6  0102               	movlb	2	; () banked
  4957  005DA8  6FF4               	movwf	_MainSystemTimebaseFlag& (0+255),b
  4958                           
  4959                           ; BSR set to: 2
  4960                           
  4961                           ; BSR set to: 2
  4962  005DAA  D7F6               	goto	l790
  4963  005DAC                     __end_of_Sch_MainScheduler:
  4964                           	opt stack 0
  4965                           tblptru	equ	0xFF8
  4966                           tblptrh	equ	0xFF7
  4967                           tblptrl	equ	0xFF6
  4968                           tablat	equ	0xFF5
  4969                           prodh	equ	0xFF4
  4970                           prodl	equ	0xFF3
  4971                           intcon	equ	0xFF2
  4972                           intcon2	equ	0xFF1
  4973                           intcon3	equ	0xFF0
  4974                           postinc0	equ	0xFEE
  4975                           wreg	equ	0xFE8
  4976                           postdec1	equ	0xFE5
  4977                           fsr1h	equ	0xFE2
  4978                           fsr1l	equ	0xFE1
  4979                           indf2	equ	0xFDF
  4980                           postinc2	equ	0xFDE
  4981                           postdec2	equ	0xFDD
  4982                           fsr2h	equ	0xFDA
  4983                           fsr2l	equ	0xFD9
  4984                           status	equ	0xFD8
  4985                           
  4986 ;; *************** function _ScheduleTasks *****************
  4987 ;; Defined at:
  4988 ;;		line 99 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
  4989 ;; Parameters:    Size  Location     Type
  4990 ;;		None
  4991 ;; Auto vars:     Size  Location     Type
  4992 ;;  ActiveTaskIn    1   75[BANK0 ] unsigned char 
  4993 ;; Return value:  Size  Location     Type
  4994 ;;                  1    wreg      void 
  4995 ;; Registers used:
  4996 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  4997 ;; Tracked objects:
  4998 ;;		On entry : 0/0
  4999 ;;		On exit  : 0/0
  5000 ;;		Unchanged: 0/0
  5001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5002 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5003 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5004 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5005 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5006 ;;Total ram usage:        5 bytes
  5007 ;; Hardware stack levels used:    1
  5008 ;; Hardware stack levels required when called:   21
  5009 ;; This function calls:
  5010 ;;		_I2cSlv_MainTask
  5011 ;;		_Led_MainTask
  5012 ;;		_MdmHttp_MainTask
  5013 ;;		_Mdm_DrvMainFn
  5014 ;;		_Mdm_MainTask
  5015 ;;		_MyApp_Task
  5016 ;;		_Rtcm_MainTask
  5017 ;;		_Term_MainTask
  5018 ;;		_UsbDevice_MainTask
  5019 ;;		_Wdg_MainTask
  5020 ;; This function is called by:
  5021 ;;		_Sch_MainScheduler
  5022 ;; This function uses a non-reentrant model
  5023 ;;
  5024                           
  5025                           	psect	text14
  5026  002B52                     __ptext14:
  5027                           	opt stack 0
  5028  002B52                     _ScheduleTasks:
  5029                           	opt stack 8
  5030                           
  5031                           ;os_sched.c: 102: UINT8 ActiveTaskIndex = 0u;
  5032                           
  5033                           ; BSR set to: 2
  5034                           ;incstack = 0
  5035  002B52  0E00               	movlw	0
  5036  002B54  0100               	movlb	0	; () banked
  5037  002B56  6FAB               	movwf	ScheduleTasks@ActiveTaskIndex& (0+255),b
  5038                           
  5039                           ;os_sched.c: 105: for (ActiveTaskIndex = 0u; ActiveTaskIndex < TaskNumber; ActiveTaskInd
      +                          ex++)
  5040  002B58  0E00               	movlw	0
  5041  002B5A  6FAB               	movwf	ScheduleTasks@ActiveTaskIndex& (0+255),b
  5042  002B5C                     l14033:
  5043                           
  5044                           ; BSR set to: 0
  5045  002B5C  0E5D               	movlw	low _TaskNumber
  5046  002B5E  6EF6               	movwf	tblptrl,c
  5047  002B60                     	if	1	;There is more than 1 active tblptr byte
  5048  002B60  0EFC               	movlw	high _TaskNumber
  5049  002B62  6EF7               	movwf	tblptrh,c
  5050  002B64                     	endif
  5051  002B64                     	if	0	;There are less than 3 active tblptr bytes
  5052  002B64                     	endif
  5053  002B64  51AB               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5054  002B66  6FA7               	movwf	??_ScheduleTasks& (0+255),b
  5055  002B68  6BA8               	clrf	(??_ScheduleTasks+1)& (0+255),b
  5056  002B6A  0009               	tblrd		*+
  5057  002B6C  50F5               	movf	tablat,w,c
  5058  002B6E  5DA7               	subwf	??_ScheduleTasks& (0+255),w,b
  5059  002B70  0009               	tblrd		*+
  5060  002B72  50F5               	movf	tablat,w,c
  5061  002B74  59A8               	subwfb	(??_ScheduleTasks+1)& (0+255),w,b
  5062  002B76  B0D8               	btfsc	status,0,c
  5063  002B78  0012               	return	
  5064                           
  5065                           ; BSR set to: 0
  5066                           ;os_sched.c: 106: {
  5067                           ;os_sched.c: 108: TaskTable[ActiveTaskIndex].Counter++;
  5068                           
  5069                           ; BSR set to: 0
  5070                           
  5071                           ; BSR set to: 0
  5072  002B7A  51AB               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5073  002B7C  0D08               	mullw	8
  5074  002B7E  0E03               	movlw	3
  5075  002B80  26F3               	addwf	prodl,f,c
  5076  002B82  0E00               	movlw	0
  5077  002B84  22F4               	addwfc	prodh,f,c
  5078  002B86  0E82               	movlw	low _TaskTable
  5079  002B88  24F3               	addwf	prodl,w,c
  5080  002B8A  6ED9               	movwf	fsr2l,c
  5081  002B8C  0E05               	movlw	high _TaskTable
  5082  002B8E  20F4               	addwfc	prodh,w,c
  5083  002B90  6EDA               	movwf	fsr2h,c
  5084  002B92  2ADE               	incf	postinc2,f,c
  5085  002B94  0E00               	movlw	0
  5086  002B96  22DD               	addwfc	postdec2,f,c
  5087                           
  5088                           ; BSR set to: 0
  5089                           ;os_sched.c: 110: if (TaskTable[ActiveTaskIndex].Counter >= (TaskTable[ActiveTaskIndex].
      +                          TimeoutMs/((((UINT16)(1000))*((UINT16)(1)))/1000)))
  5090  002B98  51AB               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5091  002B9A  0D08               	mullw	8
  5092  002B9C  0E05               	movlw	5
  5093  002B9E  26F3               	addwf	prodl,f,c
  5094  002BA0  0E00               	movlw	0
  5095  002BA2  22F4               	addwfc	prodh,f,c
  5096  002BA4  0E82               	movlw	low _TaskTable
  5097  002BA6  24F3               	addwf	prodl,w,c
  5098  002BA8  6ED9               	movwf	fsr2l,c
  5099  002BAA  0E05               	movlw	high _TaskTable
  5100  002BAC  20F4               	addwfc	prodh,w,c
  5101  002BAE  6EDA               	movwf	fsr2h,c
  5102  002BB0  51AB               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5103  002BB2  0D08               	mullw	8
  5104  002BB4  0E03               	movlw	3
  5105  002BB6  26F3               	addwf	prodl,f,c
  5106  002BB8  0E00               	movlw	0
  5107  002BBA  22F4               	addwfc	prodh,f,c
  5108  002BBC  0E82               	movlw	low _TaskTable
  5109  002BBE  24F3               	addwf	prodl,w,c
  5110  002BC0  6EE1               	movwf	fsr1l,c
  5111  002BC2  0E05               	movlw	high _TaskTable
  5112  002BC4  20F4               	addwfc	prodh,w,c
  5113  002BC6  6EE2               	movwf	fsr1h,c
  5114  002BC8  50DE               	movf	postinc2,w,c
  5115  002BCA  5CE6               	subwf	postinc1,w,c
  5116  002BCC  50DE               	movf	postinc2,w,c
  5117  002BCE  58E6               	subwfb	postinc1,w,c
  5118  002BD0  A0D8               	btfss	status,0,c
  5119  002BD2  D04E               	goto	l775
  5120                           
  5121                           ; BSR set to: 0
  5122                           ;os_sched.c: 111: {
  5123                           ;os_sched.c: 112: TaskTable[ActiveTaskIndex].Counter = ((UINT8)(0));
  5124  002BD4  51AB               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5125  002BD6  0D08               	mullw	8
  5126  002BD8  0E03               	movlw	3
  5127  002BDA  26F3               	addwf	prodl,f,c
  5128  002BDC  0E00               	movlw	0
  5129  002BDE  22F4               	addwfc	prodh,f,c
  5130  002BE0  0E82               	movlw	low _TaskTable
  5131  002BE2  24F3               	addwf	prodl,w,c
  5132  002BE4  6ED9               	movwf	fsr2l,c
  5133  002BE6  0E05               	movlw	high _TaskTable
  5134  002BE8  20F4               	addwfc	prodh,w,c
  5135  002BEA  6EDA               	movwf	fsr2h,c
  5136  002BEC  0E00               	movlw	0
  5137  002BEE  6EDE               	movwf	postinc2,c
  5138  002BF0  0E00               	movlw	0
  5139  002BF2  6EDD               	movwf	postdec2,c
  5140                           
  5141                           ;os_sched.c: 113: TaskTable[ActiveTaskIndex].State = TaskRunning;
  5142  002BF4  51AB               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5143  002BF6  0D08               	mullw	8
  5144  002BF8  0E02               	movlw	2
  5145  002BFA  26F3               	addwf	prodl,f,c
  5146  002BFC  0E00               	movlw	0
  5147  002BFE  22F4               	addwfc	prodh,f,c
  5148  002C00  0E82               	movlw	low _TaskTable
  5149  002C02  24F3               	addwf	prodl,w,c
  5150  002C04  6ED9               	movwf	fsr2l,c
  5151  002C06  0E05               	movlw	high _TaskTable
  5152  002C08  20F4               	addwfc	prodh,w,c
  5153  002C0A  6EDA               	movwf	fsr2h,c
  5154  002C0C  0E01               	movlw	1
  5155  002C0E  6EDF               	movwf	indf2,c
  5156                           
  5157                           ; BSR set to: 0
  5158                           ;os_sched.c: 114: TaskTable[ActiveTaskIndex].Task(TaskTable[ActiveTaskIndex].Options);
  5159  002C10  51AB               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5160  002C12  0D08               	mullw	8
  5161  002C14  0E82               	movlw	low _TaskTable
  5162  002C16  24F3               	addwf	prodl,w,c
  5163  002C18  6ED9               	movwf	fsr2l,c
  5164  002C1A  0E05               	movlw	high _TaskTable
  5165  002C1C  20F4               	addwfc	prodh,w,c
  5166  002C1E  6EDA               	movwf	fsr2h,c
  5167  002C20  D801               	call	u13518
  5168  002C22  D017               	goto	u13519
  5169  002C24                     u13518:
  5170  002C24  0005               	push	
  5171  002C26  6EFA               	movwf	pclath,c
  5172  002C28  50DE               	movf	postinc2,w,c
  5173  002C2A  6EFD               	movwf	tosl,c
  5174  002C2C  50DE               	movf	postinc2,w,c
  5175  002C2E  6EFE               	movwf	tosh,c
  5176  002C30  50F8               	movf	tblptru,w,c
  5177  002C32  6EFF               	movwf	tosu,c
  5178  002C34  50FA               	movf	pclath,w,c
  5179  002C36  51AB               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5180  002C38  0D08               	mullw	8
  5181  002C3A  0E07               	movlw	7
  5182  002C3C  26F3               	addwf	prodl,f,c
  5183  002C3E  0E00               	movlw	0
  5184  002C40  22F4               	addwfc	prodh,f,c
  5185  002C42  0E82               	movlw	low _TaskTable
  5186  002C44  24F3               	addwf	prodl,w,c
  5187  002C46  6ED9               	movwf	fsr2l,c
  5188  002C48  0E05               	movlw	high _TaskTable
  5189  002C4A  20F4               	addwfc	prodh,w,c
  5190  002C4C  6EDA               	movwf	fsr2h,c
  5191  002C4E  50DF               	movf	indf2,w,c
  5192  002C50  0012               	return		;indir
  5193  002C52                     u13519:
  5194                           
  5195                           ;os_sched.c: 115: TaskTable[ActiveTaskIndex].State = TaskIdle;
  5196  002C52  0100               	movlb	0	; () banked
  5197  002C54  51AB               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5198  002C56  0D08               	mullw	8
  5199  002C58  0E02               	movlw	2
  5200  002C5A  26F3               	addwf	prodl,f,c
  5201  002C5C  0E00               	movlw	0
  5202  002C5E  22F4               	addwfc	prodh,f,c
  5203  002C60  0E82               	movlw	low _TaskTable
  5204  002C62  24F3               	addwf	prodl,w,c
  5205  002C64  6ED9               	movwf	fsr2l,c
  5206  002C66  0E05               	movlw	high _TaskTable
  5207  002C68  20F4               	addwfc	prodh,w,c
  5208  002C6A  6EDA               	movwf	fsr2h,c
  5209  002C6C  0E00               	movlw	0
  5210  002C6E  6EDF               	movwf	indf2,c
  5211  002C70                     l775:
  5212                           
  5213                           ; BSR set to: 0
  5214                           
  5215                           ; BSR set to: 0
  5216                           
  5217                           ;os_sched.c: 117: else
  5218                           ;os_sched.c: 118: {
  5219                           
  5220                           ; BSR set to: 0
  5221  002C70  2BAB               	incf	ScheduleTasks@ActiveTaskIndex& (0+255),f,b
  5222  002C72  D774               	goto	l14033
  5223  002C74                     __end_of_ScheduleTasks:
  5224                           	opt stack 0
  5225                           tosu	equ	0xFFF
  5226                           tosh	equ	0xFFE
  5227                           tosl	equ	0xFFD
  5228                           pclath	equ	0xFFA
  5229                           tblptru	equ	0xFF8
  5230                           tblptrh	equ	0xFF7
  5231                           tblptrl	equ	0xFF6
  5232                           tablat	equ	0xFF5
  5233                           prodh	equ	0xFF4
  5234                           prodl	equ	0xFF3
  5235                           intcon	equ	0xFF2
  5236                           intcon2	equ	0xFF1
  5237                           intcon3	equ	0xFF0
  5238                           postinc0	equ	0xFEE
  5239                           wreg	equ	0xFE8
  5240                           postinc1	equ	0xFE6
  5241                           postdec1	equ	0xFE5
  5242                           fsr1h	equ	0xFE2
  5243                           fsr1l	equ	0xFE1
  5244                           indf2	equ	0xFDF
  5245                           postinc2	equ	0xFDE
  5246                           postdec2	equ	0xFDD
  5247                           fsr2h	equ	0xFDA
  5248                           fsr2l	equ	0xFD9
  5249                           status	equ	0xFD8
  5250                           
  5251 ;; *************** function _InitializeTasks *****************
  5252 ;; Defined at:
  5253 ;;		line 79 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
  5254 ;; Parameters:    Size  Location     Type
  5255 ;;		None
  5256 ;; Auto vars:     Size  Location     Type
  5257 ;;  ActiveTaskIn    1   73[BANK0 ] unsigned char 
  5258 ;; Return value:  Size  Location     Type
  5259 ;;                  1    wreg      void 
  5260 ;; Registers used:
  5261 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  5262 ;; Tracked objects:
  5263 ;;		On entry : 0/0
  5264 ;;		On exit  : 0/0
  5265 ;;		Unchanged: 0/0
  5266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5268 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5269 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5270 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5271 ;;Total ram usage:        3 bytes
  5272 ;; Hardware stack levels used:    1
  5273 ;; Hardware stack levels required when called:   21
  5274 ;; This function calls:
  5275 ;;		_I2cSlv_MainTask
  5276 ;;		_Led_MainTask
  5277 ;;		_MdmHttp_MainTask
  5278 ;;		_Mdm_DrvMainFn
  5279 ;;		_Mdm_MainTask
  5280 ;;		_MyApp_Task
  5281 ;;		_Rtcm_MainTask
  5282 ;;		_Term_MainTask
  5283 ;;		_UsbDevice_MainTask
  5284 ;;		_Wdg_MainTask
  5285 ;; This function is called by:
  5286 ;;		_Sch_MainScheduler
  5287 ;; This function uses a non-reentrant model
  5288 ;;
  5289                           
  5290                           	psect	text15
  5291  004BEC                     __ptext15:
  5292                           	opt stack 0
  5293  004BEC                     _InitializeTasks:
  5294                           	opt stack 8
  5295                           
  5296                           ;os_sched.c: 82: UINT8 ActiveTaskIndex = 0u;
  5297                           
  5298                           ; BSR set to: 0
  5299                           ;incstack = 0
  5300  004BEC  0E00               	movlw	0
  5301  004BEE  0100               	movlb	0	; () banked
  5302  004BF0  6FA9               	movwf	InitializeTasks@ActiveTaskIndex& (0+255),b
  5303                           
  5304                           ;os_sched.c: 85: for (ActiveTaskIndex = 0u; ActiveTaskIndex < TaskNumber; ActiveTaskInde
      +                          x++)
  5305  004BF2  0E00               	movlw	0
  5306  004BF4  6FA9               	movwf	InitializeTasks@ActiveTaskIndex& (0+255),b
  5307  004BF6                     l14021:
  5308                           
  5309                           ; BSR set to: 0
  5310  004BF6  0E5D               	movlw	low _TaskNumber
  5311  004BF8  6EF6               	movwf	tblptrl,c
  5312  004BFA                     	if	1	;There is more than 1 active tblptr byte
  5313  004BFA  0EFC               	movlw	high _TaskNumber
  5314  004BFC  6EF7               	movwf	tblptrh,c
  5315  004BFE                     	endif
  5316  004BFE                     	if	0	;There are less than 3 active tblptr bytes
  5317  004BFE                     	endif
  5318  004BFE  51A9               	movf	InitializeTasks@ActiveTaskIndex& (0+255),w,b
  5319  004C00  6FA7               	movwf	??_InitializeTasks& (0+255),b
  5320  004C02  6BA8               	clrf	(??_InitializeTasks+1)& (0+255),b
  5321  004C04  0009               	tblrd		*+
  5322  004C06  50F5               	movf	tablat,w,c
  5323  004C08  5DA7               	subwf	??_InitializeTasks& (0+255),w,b
  5324  004C0A  0009               	tblrd		*+
  5325  004C0C  50F5               	movf	tablat,w,c
  5326  004C0E  59A8               	subwfb	(??_InitializeTasks+1)& (0+255),w,b
  5327  004C10  B0D8               	btfsc	status,0,c
  5328  004C12  0012               	return	
  5329                           
  5330                           ; BSR set to: 0
  5331                           ;os_sched.c: 86: {
  5332                           ;os_sched.c: 87: TaskTable[ActiveTaskIndex].Task(TaskTable[ActiveTaskIndex].Options);
  5333                           
  5334                           ; BSR set to: 0
  5335                           
  5336                           ; BSR set to: 0
  5337  004C14  51A9               	movf	InitializeTasks@ActiveTaskIndex& (0+255),w,b
  5338  004C16  0D08               	mullw	8
  5339  004C18  0E82               	movlw	low _TaskTable
  5340  004C1A  24F3               	addwf	prodl,w,c
  5341  004C1C  6ED9               	movwf	fsr2l,c
  5342  004C1E  0E05               	movlw	high _TaskTable
  5343  004C20  20F4               	addwfc	prodh,w,c
  5344  004C22  6EDA               	movwf	fsr2h,c
  5345  004C24  D801               	call	u13478
  5346  004C26  D017               	goto	u13479
  5347  004C28                     u13478:
  5348  004C28  0005               	push	
  5349  004C2A  6EFA               	movwf	pclath,c
  5350  004C2C  50DE               	movf	postinc2,w,c
  5351  004C2E  6EFD               	movwf	tosl,c
  5352  004C30  50DE               	movf	postinc2,w,c
  5353  004C32  6EFE               	movwf	tosh,c
  5354  004C34  50F8               	movf	tblptru,w,c
  5355  004C36  6EFF               	movwf	tosu,c
  5356  004C38  50FA               	movf	pclath,w,c
  5357  004C3A  51A9               	movf	InitializeTasks@ActiveTaskIndex& (0+255),w,b
  5358  004C3C  0D08               	mullw	8
  5359  004C3E  0E07               	movlw	7
  5360  004C40  26F3               	addwf	prodl,f,c
  5361  004C42  0E00               	movlw	0
  5362  004C44  22F4               	addwfc	prodh,f,c
  5363  004C46  0E82               	movlw	low _TaskTable
  5364  004C48  24F3               	addwf	prodl,w,c
  5365  004C4A  6ED9               	movwf	fsr2l,c
  5366  004C4C  0E05               	movlw	high _TaskTable
  5367  004C4E  20F4               	addwfc	prodh,w,c
  5368  004C50  6EDA               	movwf	fsr2h,c
  5369  004C52  50DF               	movf	indf2,w,c
  5370  004C54  0012               	return		;indir
  5371  004C56                     u13479:
  5372  004C56  0100               	movlb	0	; () banked
  5373  004C58  2BA9               	incf	InitializeTasks@ActiveTaskIndex& (0+255),f,b
  5374  004C5A  D7CD               	goto	l14021
  5375  004C5C                     __end_of_InitializeTasks:
  5376                           	opt stack 0
  5377                           tosu	equ	0xFFF
  5378                           tosh	equ	0xFFE
  5379                           tosl	equ	0xFFD
  5380                           pclath	equ	0xFFA
  5381                           tblptru	equ	0xFF8
  5382                           tblptrh	equ	0xFF7
  5383                           tblptrl	equ	0xFF6
  5384                           tablat	equ	0xFF5
  5385                           prodh	equ	0xFF4
  5386                           prodl	equ	0xFF3
  5387                           intcon	equ	0xFF2
  5388                           intcon2	equ	0xFF1
  5389                           intcon3	equ	0xFF0
  5390                           postinc0	equ	0xFEE
  5391                           wreg	equ	0xFE8
  5392                           postinc1	equ	0xFE6
  5393                           postdec1	equ	0xFE5
  5394                           fsr1h	equ	0xFE2
  5395                           fsr1l	equ	0xFE1
  5396                           indf2	equ	0xFDF
  5397                           postinc2	equ	0xFDE
  5398                           postdec2	equ	0xFDD
  5399                           fsr2h	equ	0xFDA
  5400                           fsr2l	equ	0xFD9
  5401                           status	equ	0xFD8
  5402                           
  5403 ;; *************** function _MyApp_Task *****************
  5404 ;; Defined at:
  5405 ;;		line 149 in file "../Source/c/04_App/app.c"
  5406 ;; Parameters:    Size  Location     Type
  5407 ;;  Options         1    wreg     unsigned char 
  5408 ;; Auto vars:     Size  Location     Type
  5409 ;;  Options         1    0[COMRAM] unsigned char 
  5410 ;;  smsText        50    0[BANK1 ] unsigned char [50]
  5411 ;;  phone          10   50[BANK1 ] unsigned char [10]
  5412 ;;  I2cTxBufferT    2   64[BANK1 ] unsigned char [2]
  5413 ;;  on              2   62[BANK1 ] unsigned char [2]
  5414 ;;  off             2   60[BANK1 ] unsigned char [2]
  5415 ;; Return value:  Size  Location     Type
  5416 ;;                  1    wreg      void 
  5417 ;; Registers used:
  5418 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5419 ;; Tracked objects:
  5420 ;;		On entry : 0/0
  5421 ;;		On exit  : 0/0
  5422 ;;		Unchanged: 0/0
  5423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5424 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5425 ;;      Locals:         0       0      66       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5426 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5427 ;;      Totals:         0       0      66       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5428 ;;Total ram usage:       66 bytes
  5429 ;; Hardware stack levels used:    1
  5430 ;; Hardware stack levels required when called:   14
  5431 ;; This function calls:
  5432 ;;		_Led_SetLedBlinkTime
  5433 ;;		_Mdm_GetSmsData
  5434 ;;		_Mdm_IsRinging
  5435 ;;		_Mdm_IsSmsReceived
  5436 ;;		_Mdm_RequestSmsData
  5437 ;;		_blinkForSeconds
  5438 ;;		_initGprsModem
  5439 ;; This function is called by:
  5440 ;;		_InitializeTasks
  5441 ;;		_ScheduleTasks
  5442 ;; This function uses a non-reentrant model
  5443 ;;
  5444                           
  5445                           	psect	text16
  5446  003E42                     __ptext16:
  5447                           	opt stack 0
  5448  003E42                     _MyApp_Task:
  5449                           	opt stack 14
  5450                           
  5451                           ;app.c: 151: static uint8_t countRelay1 = 1;
  5452                           ;app.c: 152: static uint16_t countRelay2 = 1;
  5453                           ;app.c: 153: static bool isRelay1On = 0;
  5454                           ;app.c: 154: static bool isRelay2On = 0;
  5455                           ;app.c: 155: static uint8_t test = 0;
  5456                           ;app.c: 156: uint8_t off[2] = {((UINT8)(0x50)), 0x00};
  5457                           
  5458                           ; BSR set to: 0
  5459                           ;incstack = 0
  5460  003E42  C3C6  F13C         	movff	MyApp_Task@F8990,MyApp_Task@off
  5461  003E46  C3C7  F13D         	movff	MyApp_Task@F8990+1,MyApp_Task@off+1
  5462                           
  5463                           ;app.c: 157: uint8_t on[2] = {((UINT8)(0x50)), 0x1};
  5464  003E4A  C3C4  F13E         	movff	MyApp_Task@F8993,MyApp_Task@on
  5465  003E4E  C3C5  F13F         	movff	MyApp_Task@F8993+1,MyApp_Task@on+1
  5466                           
  5467                           ;app.c: 160: UINT8 I2cTxBufferTest[] = {0x00, 0x00};
  5468  003E52  C320  F140         	movff	MyApp_Task@F8996,MyApp_Task@I2cTxBufferTest
  5469  003E56  C321  F141         	movff	MyApp_Task@F8996+1,MyApp_Task@I2cTxBufferTest+1
  5470                           
  5471                           ;app.c: 161: static UINT8 I2cStsReady = 0u;
  5472                           ;app.c: 162: UINT8 phone[] = {'3', '2', '0', '0', '2', '7', '6', '3', '1', '8'};
  5473  003E5A  EE24  F0E5         	lfsr	2,MyApp_Task@F8999
  5474  003E5E  EE11  F032         	lfsr	1,MyApp_Task@phone
  5475  003E62  0E09               	movlw	9
  5476  003E64                     u13421:
  5477  003E64  CFDB FFE3          	movff	plusw2,plusw1
  5478  003E68  06E8               	decf	wreg,f,c
  5479  003E6A  E2FC               	bc	u13421
  5480                           
  5481                           ;app.c: 164: static uint16_t blickTicks = 0xFFFF;
  5482                           ;app.c: 165: static uint8_t blinkSeconds = 0;
  5483                           ;app.c: 167: uint8_t smsText[((UINT8)(50))];
  5484                           ;app.c: 169: switch (SystemState)
  5485  003E6C  D03F               	goto	l2563
  5486  003E6E                     
  5487                           ;app.c: 174: Led_SetLedBlinkTime(1u,100,900);
  5488  003E6E  0E00               	movlw	0
  5489  003E70  0100               	movlb	0	; () banked
  5490  003E72  6F7E               	movwf	(Led_SetLedBlinkTime@OnTimeMs+1)& (0+255),b
  5491  003E74  0E64               	movlw	100
  5492  003E76  6F7D               	movwf	Led_SetLedBlinkTime@OnTimeMs& (0+255),b
  5493  003E78  0E03               	movlw	3
  5494  003E7A  6F80               	movwf	(Led_SetLedBlinkTime@OffTimeMs+1)& (0+255),b
  5495  003E7C  0E84               	movlw	132
  5496  003E7E  6F7F               	movwf	Led_SetLedBlinkTime@OffTimeMs& (0+255),b
  5497  003E80  0E01               	movlw	1
  5498  003E82  ECC1  F028         	call	_Led_SetLedBlinkTime
  5499                           
  5500                           ;app.c: 175: break;
  5501  003E86  0012               	return	
  5502  003E88                     
  5503                           ;app.c: 179: if (initGprsModem())
  5504  003E88  EC8E  F029         	call	_initGprsModem	;wreg free
  5505  003E8C  0900               	iorlw	0
  5506  003E8E  B4D8               	btfsc	status,2,c
  5507  003E90  0012               	return	
  5508                           
  5509                           ;app.c: 180: {
  5510                           ;app.c: 182: if (Mdm_IsRinging())
  5511  003E92  EC0E  F02E         	call	_Mdm_IsRinging	;wreg free
  5512  003E96  0900               	iorlw	0
  5513  003E98  B4D8               	btfsc	status,2,c
  5514  003E9A  D008               	goto	l2568
  5515                           
  5516                           ;app.c: 183: {
  5517                           ;app.c: 184: blickTicks = 0;
  5518  003E9C  0E00               	movlw	0
  5519  003E9E  0103               	movlb	3	; () banked
  5520  003EA0  6FF9               	movwf	(MyApp_Task@blickTicks+1)& (0+255),b
  5521  003EA2  0E00               	movlw	0
  5522  003EA4  6FF8               	movwf	MyApp_Task@blickTicks& (0+255),b
  5523                           
  5524                           ;app.c: 185: blinkSeconds = 5;
  5525  003EA6  0E05               	movlw	5
  5526  003EA8  0101               	movlb	1	; () banked
  5527  003EAA  6FD3               	movwf	MyApp_Task@blinkSeconds& (0+255),b
  5528  003EAC                     l2568:
  5529                           
  5530                           ;app.c: 186: }
  5531                           ;app.c: 187: if (Mdm_IsSmsReceived())
  5532                           
  5533                           ; BSR set to: 1
  5534  003EAC  ECFC  F02D         	call	_Mdm_IsSmsReceived	;wreg free
  5535  003EB0  0900               	iorlw	0
  5536  003EB2  B4D8               	btfsc	status,2,c
  5537  003EB4  D011               	goto	l2569
  5538                           
  5539                           ;app.c: 188: {
  5540                           ;app.c: 189: blickTicks = 0;
  5541  003EB6  0E00               	movlw	0
  5542  003EB8  0103               	movlb	3	; () banked
  5543  003EBA  6FF9               	movwf	(MyApp_Task@blickTicks+1)& (0+255),b
  5544  003EBC  0E00               	movlw	0
  5545  003EBE  6FF8               	movwf	MyApp_Task@blickTicks& (0+255),b
  5546                           
  5547                           ;app.c: 190: blinkSeconds = 3;
  5548  003EC0  0E03               	movlw	3
  5549  003EC2  0101               	movlb	1	; () banked
  5550  003EC4  6FD3               	movwf	MyApp_Task@blinkSeconds& (0+255),b
  5551                           
  5552                           ; BSR set to: 1
  5553                           ;app.c: 191: Mdm_RequestSmsData();
  5554  003EC6  EC92  F02F         	call	_Mdm_RequestSmsData	;wreg free
  5555                           
  5556                           ;app.c: 192: Mdm_GetSmsData(smsText);
  5557  003ECA  0E00               	movlw	low MyApp_Task@smsText
  5558  003ECC  0100               	movlb	0	; () banked
  5559  003ECE  6F87               	movwf	Mdm_GetSmsData@MessageText& (0+255),b
  5560  003ED0  0E01               	movlw	high MyApp_Task@smsText
  5561  003ED2  6F88               	movwf	(Mdm_GetSmsData@MessageText+1)& (0+255),b
  5562  003ED4  EC19  F02C         	call	_Mdm_GetSmsData	;wreg free
  5563  003ED8                     l2569:
  5564                           
  5565                           ;app.c: 193: }
  5566                           ;app.c: 194: blinkForSeconds(blinkSeconds, &blickTicks);
  5567  003ED8  0EF8               	movlw	low MyApp_Task@blickTicks
  5568  003EDA  0100               	movlb	0	; () banked
  5569  003EDC  6F93               	movwf	blinkForSeconds@blickTicks& (0+255),b
  5570  003EDE  0E03               	movlw	high MyApp_Task@blickTicks
  5571  003EE0  6F94               	movwf	(blinkForSeconds@blickTicks+1)& (0+255),b
  5572  003EE2  0101               	movlb	1	; () banked
  5573  003EE4  51D3               	movf	MyApp_Task@blinkSeconds& (0+255),w,b
  5574  003EE6  EC54  F02C         	call	_blinkForSeconds
  5575                           
  5576                           ;app.c: 201: }
  5577                           
  5578                           ;app.c: 200: break;
  5579                           
  5580                           ;app.c: 199: default:
  5581                           
  5582                           ;app.c: 195: }
  5583                           ;app.c: 196: break;
  5584  003EEA  0012               	return	
  5585  003EEC                     l2563:
  5586  003EEC  0100               	movlb	0	; () banked
  5587  003EEE  51D2               	movf	_SystemState& (0+255),w,b
  5588                           
  5589                           ; Switch size 1, requested type "space"
  5590                           ; Number of cases is 2, Range of values is 0 to 1
  5591                           ; switch strategies available:
  5592                           ; Name         Instructions Cycles
  5593                           ; simple_byte            7     4 (average)
  5594                           ;	Chosen strategy is simple_byte
  5595  003EF0  0A00               	xorlw	0	; case 0
  5596  003EF2  B4D8               	btfsc	status,2,c
  5597  003EF4  D7BC               	goto	l2564
  5598  003EF6  0A01               	xorlw	1	; case 1
  5599  003EF8  A4D8               	btfss	status,2,c
  5600  003EFA  0012               	return	
  5601  003EFC  D7C5               	goto	l2566
  5602  003EFE                     __end_of_MyApp_Task:
  5603                           	opt stack 0
  5604                           tosu	equ	0xFFF
  5605                           tosh	equ	0xFFE
  5606                           tosl	equ	0xFFD
  5607                           pclath	equ	0xFFA
  5608                           tblptru	equ	0xFF8
  5609                           tblptrh	equ	0xFF7
  5610                           tblptrl	equ	0xFF6
  5611                           tablat	equ	0xFF5
  5612                           prodh	equ	0xFF4
  5613                           prodl	equ	0xFF3
  5614                           intcon	equ	0xFF2
  5615                           intcon2	equ	0xFF1
  5616                           intcon3	equ	0xFF0
  5617                           postinc0	equ	0xFEE
  5618                           wreg	equ	0xFE8
  5619                           postinc1	equ	0xFE6
  5620                           postdec1	equ	0xFE5
  5621                           plusw1	equ	0xFE3
  5622                           fsr1h	equ	0xFE2
  5623                           fsr1l	equ	0xFE1
  5624                           indf2	equ	0xFDF
  5625                           postinc2	equ	0xFDE
  5626                           postdec2	equ	0xFDD
  5627                           plusw2	equ	0xFDB
  5628                           fsr2h	equ	0xFDA
  5629                           fsr2l	equ	0xFD9
  5630                           status	equ	0xFD8
  5631                           
  5632 ;; *************** function _Term_MainTask *****************
  5633 ;; Defined at:
  5634 ;;		line 845 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/term.c"
  5635 ;; Parameters:    Size  Location     Type
  5636 ;;  Options         1    wreg     unsigned char 
  5637 ;; Auto vars:     Size  Location     Type
  5638 ;;  Options         1    0[COMRAM] unsigned char 
  5639 ;; Return value:  Size  Location     Type
  5640 ;;                  1    wreg      void 
  5641 ;; Registers used:
  5642 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5643 ;; Tracked objects:
  5644 ;;		On entry : 0/0
  5645 ;;		On exit  : 0/0
  5646 ;;		Unchanged: 0/0
  5647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5648 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5649 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5651 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5652 ;;Total ram usage:        0 bytes
  5653 ;; Hardware stack levels used:    1
  5654 ;; Hardware stack levels required when called:   17
  5655 ;; This function calls:
  5656 ;;		_Term_MainSm
  5657 ;; This function is called by:
  5658 ;;		_InitializeTasks
  5659 ;;		_ScheduleTasks
  5660 ;; This function uses a non-reentrant model
  5661 ;;
  5662                           
  5663                           	psect	text17
  5664  005DFE                     __ptext17:
  5665                           	opt stack 0
  5666  005DFE                     _Term_MainTask:
  5667                           	opt stack 11
  5668                           
  5669                           ;term.c: 847: switch (SystemState)
  5670                           
  5671                           ;incstack = 0
  5672  005DFE  D003               	goto	l2438
  5673  005E00                     
  5674                           ;term.c: 858: Term_MainSm();
  5675  005E00  EC5B  F008         	call	_Term_MainSm	;wreg free
  5676                           
  5677                           ;term.c: 865: }
  5678                           
  5679                           ;term.c: 864: break;
  5680                           
  5681                           ;term.c: 863: default:
  5682                           
  5683                           ;term.c: 860: break;
  5684  005E04  0012               	return	
  5685  005E06                     l2438:
  5686  005E06  0100               	movlb	0	; () banked
  5687  005E08  51D2               	movf	_SystemState& (0+255),w,b
  5688                           
  5689                           ; Switch size 1, requested type "space"
  5690                           ; Number of cases is 2, Range of values is 0 to 1
  5691                           ; switch strategies available:
  5692                           ; Name         Instructions Cycles
  5693                           ; simple_byte            7     4 (average)
  5694                           ;	Chosen strategy is simple_byte
  5695  005E0A  0A00               	xorlw	0	; case 0
  5696  005E0C  B4D8               	btfsc	status,2,c
  5697  005E0E  0012               	return	
  5698  005E10  0A01               	xorlw	1	; case 1
  5699  005E12  A4D8               	btfss	status,2,c
  5700  005E14  0012               	return	
  5701  005E16  D7F4               	goto	l2441
  5702  005E18                     __end_of_Term_MainTask:
  5703                           	opt stack 0
  5704                           tosu	equ	0xFFF
  5705                           tosh	equ	0xFFE
  5706                           tosl	equ	0xFFD
  5707                           pclath	equ	0xFFA
  5708                           tblptru	equ	0xFF8
  5709                           tblptrh	equ	0xFF7
  5710                           tblptrl	equ	0xFF6
  5711                           tablat	equ	0xFF5
  5712                           prodh	equ	0xFF4
  5713                           prodl	equ	0xFF3
  5714                           intcon	equ	0xFF2
  5715                           intcon2	equ	0xFF1
  5716                           intcon3	equ	0xFF0
  5717                           postinc0	equ	0xFEE
  5718                           wreg	equ	0xFE8
  5719                           postinc1	equ	0xFE6
  5720                           postdec1	equ	0xFE5
  5721                           plusw1	equ	0xFE3
  5722                           fsr1h	equ	0xFE2
  5723                           fsr1l	equ	0xFE1
  5724                           indf2	equ	0xFDF
  5725                           postinc2	equ	0xFDE
  5726                           postdec2	equ	0xFDD
  5727                           plusw2	equ	0xFDB
  5728                           fsr2h	equ	0xFDA
  5729                           fsr2l	equ	0xFD9
  5730                           status	equ	0xFD8
  5731                           
  5732 ;; *************** function _Rtcm_MainTask *****************
  5733 ;; Defined at:
  5734 ;;		line 99 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/rtcm.c"
  5735 ;; Parameters:    Size  Location     Type
  5736 ;;  Options         1    wreg     unsigned char 
  5737 ;; Auto vars:     Size  Location     Type
  5738 ;;  Options         1    0[COMRAM] unsigned char 
  5739 ;; Return value:  Size  Location     Type
  5740 ;;                  1    wreg      void 
  5741 ;; Registers used:
  5742 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5743 ;; Tracked objects:
  5744 ;;		On entry : 0/0
  5745 ;;		On exit  : 0/0
  5746 ;;		Unchanged: 0/0
  5747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5748 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5749 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5750 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5751 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5752 ;;Total ram usage:        0 bytes
  5753 ;; Hardware stack levels used:    1
  5754 ;; Hardware stack levels required when called:   14
  5755 ;; This function calls:
  5756 ;;		_Rtcc_AlarmConfig
  5757 ;;		_Rtcc_LockRtc
  5758 ;;		_Rtcc_RtcConfig
  5759 ;;		_Rtcc_SetRtcStatus
  5760 ;;		_Rtcc_UnlockRtc
  5761 ;;		_Rtcm_GetRtccDate
  5762 ;;		_Rtcm_SetRtccDate
  5763 ;; This function is called by:
  5764 ;;		_InitializeTasks
  5765 ;;		_ScheduleTasks
  5766 ;; This function uses a non-reentrant model
  5767 ;;
  5768                           
  5769                           	psect	text18
  5770  004862                     __ptext18:
  5771                           	opt stack 0
  5772  004862                     _Rtcm_MainTask:
  5773                           	opt stack 14
  5774                           
  5775                           ;rtcm.c: 101: switch (SystemState)
  5776                           
  5777                           ;incstack = 0
  5778  004862  D03D               	goto	l2168
  5779  004864                     l2169:
  5780                           
  5781                           ; BSR set to: 0
  5782                           ;rtcm.c: 106: T1CONbits.T1OSCEN = 1u;
  5783  004864  86CD               	bsf	4045,3,c	;volatile
  5784                           
  5785                           ; BSR set to: 0
  5786                           ;rtcm.c: 108: RtcConfig.RtcOutPinEnable = 0u;
  5787  004866  0E00               	movlw	0
  5788  004868  0103               	movlb	3	; () banked
  5789  00486A  6FB5               	movwf	_RtcConfig& (0+255),b
  5790                           
  5791                           ;rtcm.c: 109: RtcConfig.RtcOutputSelectBit = RtccAlarmPulseOnRtccPin;
  5792  00486C  0E00               	movlw	0
  5793  00486E  6FB6               	movwf	(_RtcConfig+1)& (0+255),b
  5794                           
  5795                           ;rtcm.c: 110: RtcConfig.IntEnable = EnableInt;
  5796  004870  0E01               	movlw	1
  5797  004872  6FB7               	movwf	(_RtcConfig+2)& (0+255),b
  5798                           
  5799                           ;rtcm.c: 111: RtcConfig.IntPriority = 1u;
  5800  004874  0E01               	movlw	1
  5801  004876  6FB8               	movwf	(_RtcConfig+3)& (0+255),b
  5802                           
  5803                           ;rtcm.c: 114: AlCfg.RtcAlarmEnable = 1u;
  5804  004878  0E01               	movlw	1
  5805  00487A  6FB1               	movwf	_AlCfg& (0+255),b
  5806                           
  5807                           ;rtcm.c: 115: AlCfg.RtcChimeEnable = 1u;
  5808  00487C  0E01               	movlw	1
  5809  00487E  6FB2               	movwf	(_AlCfg+1)& (0+255),b
  5810                           
  5811                           ;rtcm.c: 116: AlCfg.AlarmMask = EverySecond;
  5812  004880  0E01               	movlw	1
  5813  004882  6FB3               	movwf	(_AlCfg+2)& (0+255),b
  5814                           
  5815                           ;rtcm.c: 117: AlCfg.AlarmRepeat = 0;
  5816  004884  0E00               	movlw	0
  5817  004886  6FB4               	movwf	(_AlCfg+3)& (0+255),b
  5818                           
  5819                           ; BSR set to: 3
  5820                           ;rtcm.c: 120: Rtcc_UnlockRtc();
  5821  004888  EC82  F02F         	call	_Rtcc_UnlockRtc	;wreg free
  5822                           
  5823                           ;rtcm.c: 122: Rtcc_RtcConfig(&RtcConfig);
  5824  00488C  0EB5               	movlw	low _RtcConfig
  5825  00488E  0100               	movlb	0	; () banked
  5826  004890  6F7E               	movwf	Rtcc_RtcConfig@RtcConfig& (0+255),b
  5827  004892  0E03               	movlw	high _RtcConfig
  5828  004894  6F7F               	movwf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),b
  5829  004896  ECD4  F021         	call	_Rtcc_RtcConfig	;wreg free
  5830                           
  5831                           ;rtcm.c: 123: Rtcc_AlarmConfig(&AlCfg);
  5832  00489A  0EB1               	movlw	low _AlCfg
  5833  00489C  0100               	movlb	0	; () banked
  5834  00489E  6F7D               	movwf	Rtcc_AlarmConfig@AlarmConfig& (0+255),b
  5835  0048A0  0E03               	movlw	high _AlCfg
  5836  0048A2  6F7E               	movwf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),b
  5837  0048A4  EC64  F026         	call	_Rtcc_AlarmConfig	;wreg free
  5838                           
  5839                           ;rtcm.c: 125: Rtcc_SetRtcStatus(1u);
  5840  0048A8  0E01               	movlw	1
  5841  0048AA  EC30  F02F         	call	_Rtcc_SetRtcStatus
  5842                           
  5843                           ;rtcm.c: 127: Rtcc_LockRtc();
  5844  0048AE  EC8A  F02F         	call	_Rtcc_LockRtc	;wreg free
  5845                           
  5846                           ;rtcm.c: 129: Rtcm_SetRtccDate(Rtcm_SystemDate);
  5847  0048B2  EE23  F000         	lfsr	2,_Rtcm_SystemDate
  5848  0048B6  EE00  F089         	lfsr	0,Rtcm_SetRtccDate@Date
  5849  0048BA  0E07               	movlw	7
  5850  0048BC                     u9341:
  5851  0048BC  CFDB FFEB          	movff	plusw2,plusw0
  5852  0048C0  06E8               	decf	wreg,f,c
  5853  0048C2  E2FC               	bc	u9341
  5854  0048C4  EC97  F028         	call	_Rtcm_SetRtccDate	;wreg free
  5855                           
  5856                           ;rtcm.c: 154: break;
  5857  0048C8  0012               	return	
  5858  0048CA                     
  5859                           ;rtcm.c: 159: Rtcm_SystemDate = Rtcm_GetRtccDate();
  5860  0048CA  ECCD  F026         	call	_Rtcm_GetRtccDate	;wreg free
  5861  0048CE  EE23  F000         	lfsr	2,_Rtcm_SystemDate
  5862  0048D2  0E07               	movlw	7
  5863  0048D4                     u9351:
  5864  0048D4  CFEB FFDB          	movff	plusw0,plusw2
  5865  0048D8  06E8               	decf	wreg,f,c
  5866  0048DA  E2FC               	bc	u9351
  5867                           
  5868                           ;rtcm.c: 165: }
  5869                           
  5870                           ;rtcm.c: 164: break;
  5871                           
  5872                           ;rtcm.c: 163: default:
  5873                           
  5874                           ;rtcm.c: 160: break;
  5875  0048DC  0012               	return	
  5876  0048DE                     l2168:
  5877  0048DE  0100               	movlb	0	; () banked
  5878  0048E0  51D2               	movf	_SystemState& (0+255),w,b
  5879                           
  5880                           ; Switch size 1, requested type "space"
  5881                           ; Number of cases is 2, Range of values is 0 to 1
  5882                           ; switch strategies available:
  5883                           ; Name         Instructions Cycles
  5884                           ; simple_byte            7     4 (average)
  5885                           ;	Chosen strategy is simple_byte
  5886  0048E2  0A00               	xorlw	0	; case 0
  5887  0048E4  B4D8               	btfsc	status,2,c
  5888  0048E6  D7BE               	goto	l2169
  5889  0048E8  0A01               	xorlw	1	; case 1
  5890  0048EA  A4D8               	btfss	status,2,c
  5891  0048EC  0012               	return	
  5892  0048EE  D7ED               	goto	l2171
  5893  0048F0                     __end_of_Rtcm_MainTask:
  5894                           	opt stack 0
  5895                           tosu	equ	0xFFF
  5896                           tosh	equ	0xFFE
  5897                           tosl	equ	0xFFD
  5898                           pclath	equ	0xFFA
  5899                           tblptru	equ	0xFF8
  5900                           tblptrh	equ	0xFF7
  5901                           tblptrl	equ	0xFF6
  5902                           tablat	equ	0xFF5
  5903                           prodh	equ	0xFF4
  5904                           prodl	equ	0xFF3
  5905                           intcon	equ	0xFF2
  5906                           intcon2	equ	0xFF1
  5907                           intcon3	equ	0xFF0
  5908                           postinc0	equ	0xFEE
  5909                           plusw0	equ	0xFEB
  5910                           wreg	equ	0xFE8
  5911                           postinc1	equ	0xFE6
  5912                           postdec1	equ	0xFE5
  5913                           plusw1	equ	0xFE3
  5914                           fsr1h	equ	0xFE2
  5915                           fsr1l	equ	0xFE1
  5916                           indf2	equ	0xFDF
  5917                           postinc2	equ	0xFDE
  5918                           postdec2	equ	0xFDD
  5919                           plusw2	equ	0xFDB
  5920                           fsr2h	equ	0xFDA
  5921                           fsr2l	equ	0xFD9
  5922                           status	equ	0xFD8
  5923                           
  5924 ;; *************** function _Led_MainTask *****************
  5925 ;; Defined at:
  5926 ;;		line 298 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
  5927 ;; Parameters:    Size  Location     Type
  5928 ;;  Options         1    wreg     unsigned char 
  5929 ;; Auto vars:     Size  Location     Type
  5930 ;;  Options         1    0[COMRAM] unsigned char 
  5931 ;; Return value:  Size  Location     Type
  5932 ;;                  1    wreg      void 
  5933 ;; Registers used:
  5934 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5935 ;; Tracked objects:
  5936 ;;		On entry : 0/0
  5937 ;;		On exit  : 0/0
  5938 ;;		Unchanged: 0/0
  5939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5941 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5942 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5943 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5944 ;;Total ram usage:        1 bytes
  5945 ;; Hardware stack levels used:    1
  5946 ;; Hardware stack levels required when called:   14
  5947 ;; This function calls:
  5948 ;;		_LedStateMachine
  5949 ;; This function is called by:
  5950 ;;		_InitializeTasks
  5951 ;;		_ScheduleTasks
  5952 ;; This function uses a non-reentrant model
  5953 ;;
  5954                           
  5955                           	psect	text19
  5956  00367A                     __ptext19:
  5957                           	opt stack 0
  5958  00367A                     _Led_MainTask:
  5959                           	opt stack 14
  5960                           
  5961                           ;led.c: 300: switch (SystemState)
  5962                           
  5963                           ;incstack = 0
  5964  00367A  D05C               	goto	l2082
  5965  00367C                     l2083:
  5966                           
  5967                           ; BSR set to: 0
  5968                           ;led.c: 305: TRISDbits.TRISD4 = ((UINT8)(0));
  5969  00367C  9895               	bcf	3989,4,c	;volatile
  5970                           
  5971                           ;led.c: 306: TRISDbits.TRISD5 = ((UINT8)(0));
  5972  00367E  9A95               	bcf	3989,5,c	;volatile
  5973                           
  5974                           ;led.c: 307: TRISDbits.TRISD6 = ((UINT8)(0));
  5975  003680  9C95               	bcf	3989,6,c	;volatile
  5976                           
  5977                           ;led.c: 308: PORTDbits.RD4 = ((UINT8)(0));
  5978  003682  9883               	bcf	3971,4,c	;volatile
  5979                           
  5980                           ;led.c: 309: PORTDbits.RD5 = ((UINT8)(0));
  5981  003684  9A83               	bcf	3971,5,c	;volatile
  5982                           
  5983                           ;led.c: 310: PORTDbits.RD6 = ((UINT8)(0));
  5984  003686  9C83               	bcf	3971,6,c	;volatile
  5985                           
  5986                           ;led.c: 311: break;
  5987  003688  0012               	return	
  5988  00368A                     
  5989                           ; BSR set to: 0
  5990                           ;led.c: 316: PORTDbits.RD4 = LedStateMachine(1u,&Led1Sts,&Led1OutSts,&Led1Blink,&Led1Pul
      +                          se);
  5991                           
  5992                           ; BSR set to: 0
  5993  00368A  0EFB               	movlw	low _Led1Sts
  5994  00368C  6F8F               	movwf	LedStateMachine@LedSts& (0+255),b
  5995  00368E  0E01               	movlw	high _Led1Sts
  5996  003690  6F90               	movwf	(LedStateMachine@LedSts+1)& (0+255),b
  5997  003692  0EFA               	movlw	low _Led1OutSts
  5998  003694  6F91               	movwf	LedStateMachine@LedOut& (0+255),b
  5999  003696  0E01               	movlw	high _Led1OutSts
  6000  003698  6F92               	movwf	(LedStateMachine@LedOut+1)& (0+255),b
  6001  00369A  0E6F               	movlw	low _Led1Blink
  6002  00369C  6F93               	movwf	LedStateMachine@LedBlink& (0+255),b
  6003  00369E  0E03               	movlw	high _Led1Blink
  6004  0036A0  6F94               	movwf	(LedStateMachine@LedBlink+1)& (0+255),b
  6005  0036A2  0E93               	movlw	low _Led1Pulse
  6006  0036A4  6F95               	movwf	LedStateMachine@LedPulse& (0+255),b
  6007  0036A6  0E03               	movlw	high _Led1Pulse
  6008  0036A8  6F96               	movwf	(LedStateMachine@LedPulse+1)& (0+255),b
  6009  0036AA  0E01               	movlw	1
  6010  0036AC  EC2F  F021         	call	_LedStateMachine
  6011  0036B0  0100               	movlb	0	; () banked
  6012  0036B2  6F9A               	movwf	??_Led_MainTask& (0+255),b
  6013  0036B4  3B9A               	swapf	??_Led_MainTask& (0+255),f,b
  6014  0036B6  5083               	movf	3971,w,c	;volatile
  6015  0036B8  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6016  0036BA  0BEF               	andlw	-17
  6017  0036BC  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6018  0036BE  6E83               	movwf	3971,c	;volatile
  6019                           
  6020                           ;led.c: 318: PORTDbits.RD5 = LedStateMachine(2u,&Led2Sts,&Led2OutSts,&Led2Blink,&Led2Pul
      +                          se);
  6021  0036C0  0EF9               	movlw	low _Led2Sts
  6022  0036C2  6F8F               	movwf	LedStateMachine@LedSts& (0+255),b
  6023  0036C4  0E01               	movlw	high _Led2Sts
  6024  0036C6  6F90               	movwf	(LedStateMachine@LedSts+1)& (0+255),b
  6025  0036C8  0EF8               	movlw	low _Led2OutSts
  6026  0036CA  6F91               	movwf	LedStateMachine@LedOut& (0+255),b
  6027  0036CC  0E01               	movlw	high _Led2OutSts
  6028  0036CE  6F92               	movwf	(LedStateMachine@LedOut+1)& (0+255),b
  6029  0036D0  0E66               	movlw	low _Led2Blink
  6030  0036D2  6F93               	movwf	LedStateMachine@LedBlink& (0+255),b
  6031  0036D4  0E03               	movlw	high _Led2Blink
  6032  0036D6  6F94               	movwf	(LedStateMachine@LedBlink+1)& (0+255),b
  6033  0036D8  0E8D               	movlw	low _Led2Pulse
  6034  0036DA  6F95               	movwf	LedStateMachine@LedPulse& (0+255),b
  6035  0036DC  0E03               	movlw	high _Led2Pulse
  6036  0036DE  6F96               	movwf	(LedStateMachine@LedPulse+1)& (0+255),b
  6037  0036E0  0E02               	movlw	2
  6038  0036E2  EC2F  F021         	call	_LedStateMachine
  6039  0036E6  0100               	movlb	0	; () banked
  6040  0036E8  6F9A               	movwf	??_Led_MainTask& (0+255),b
  6041  0036EA  3B9A               	swapf	??_Led_MainTask& (0+255),f,b
  6042  0036EC  479A               	rlncf	??_Led_MainTask& (0+255),f,b
  6043  0036EE  5083               	movf	3971,w,c	;volatile
  6044  0036F0  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6045  0036F2  0BDF               	andlw	-33
  6046  0036F4  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6047  0036F6  6E83               	movwf	3971,c	;volatile
  6048                           
  6049                           ;led.c: 320: PORTDbits.RD6 = LedStateMachine(3u,&Led3Sts,&Led3OutSts,&Led3Blink,&Led3Pul
      +                          se);
  6050  0036F8  0EF7               	movlw	low _Led3Sts
  6051  0036FA  6F8F               	movwf	LedStateMachine@LedSts& (0+255),b
  6052  0036FC  0E01               	movlw	high _Led3Sts
  6053  0036FE  6F90               	movwf	(LedStateMachine@LedSts+1)& (0+255),b
  6054  003700  0EF6               	movlw	low _Led3OutSts
  6055  003702  6F91               	movwf	LedStateMachine@LedOut& (0+255),b
  6056  003704  0E01               	movlw	high _Led3OutSts
  6057  003706  6F92               	movwf	(LedStateMachine@LedOut+1)& (0+255),b
  6058  003708  0E5D               	movlw	low _Led3Blink
  6059  00370A  6F93               	movwf	LedStateMachine@LedBlink& (0+255),b
  6060  00370C  0E03               	movlw	high _Led3Blink
  6061  00370E  6F94               	movwf	(LedStateMachine@LedBlink+1)& (0+255),b
  6062  003710  0E87               	movlw	low _Led3Pulse
  6063  003712  6F95               	movwf	LedStateMachine@LedPulse& (0+255),b
  6064  003714  0E03               	movlw	high _Led3Pulse
  6065  003716  6F96               	movwf	(LedStateMachine@LedPulse+1)& (0+255),b
  6066  003718  0E03               	movlw	3
  6067  00371A  EC2F  F021         	call	_LedStateMachine
  6068  00371E  0100               	movlb	0	; () banked
  6069  003720  6F9A               	movwf	??_Led_MainTask& (0+255),b
  6070  003722  3B9A               	swapf	??_Led_MainTask& (0+255),f,b
  6071  003724  479A               	rlncf	??_Led_MainTask& (0+255),f,b
  6072  003726  479A               	rlncf	??_Led_MainTask& (0+255),f,b
  6073  003728  5083               	movf	3971,w,c	;volatile
  6074  00372A  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6075  00372C  0BBF               	andlw	-65
  6076  00372E  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6077  003730  6E83               	movwf	3971,c	;volatile
  6078                           
  6079                           ; BSR set to: 0
  6080                           ;led.c: 326: }
  6081                           
  6082                           ; BSR set to: 0
  6083                           ;led.c: 325: break;
  6084                           
  6085                           ;led.c: 324: default:
  6086                           
  6087                           ;led.c: 321: break;
  6088  003732  0012               	return	
  6089  003734                     l2082:
  6090                           
  6091                           ; BSR set to: 0
  6092  003734  0100               	movlb	0	; () banked
  6093  003736  51D2               	movf	_SystemState& (0+255),w,b
  6094                           
  6095                           ; Switch size 1, requested type "space"
  6096                           ; Number of cases is 2, Range of values is 0 to 1
  6097                           ; switch strategies available:
  6098                           ; Name         Instructions Cycles
  6099                           ; simple_byte            7     4 (average)
  6100                           ;	Chosen strategy is simple_byte
  6101  003738  0A00               	xorlw	0	; case 0
  6102  00373A  B4D8               	btfsc	status,2,c
  6103  00373C  D79F               	goto	l2083
  6104  00373E  0A01               	xorlw	1	; case 1
  6105  003740  A4D8               	btfss	status,2,c
  6106  003742  0012               	return	
  6107  003744  D7A2               	goto	l2085
  6108  003746                     __end_of_Led_MainTask:
  6109                           	opt stack 0
  6110                           tosu	equ	0xFFF
  6111                           tosh	equ	0xFFE
  6112                           tosl	equ	0xFFD
  6113                           pclath	equ	0xFFA
  6114                           tblptru	equ	0xFF8
  6115                           tblptrh	equ	0xFF7
  6116                           tblptrl	equ	0xFF6
  6117                           tablat	equ	0xFF5
  6118                           prodh	equ	0xFF4
  6119                           prodl	equ	0xFF3
  6120                           intcon	equ	0xFF2
  6121                           intcon2	equ	0xFF1
  6122                           intcon3	equ	0xFF0
  6123                           postinc0	equ	0xFEE
  6124                           plusw0	equ	0xFEB
  6125                           wreg	equ	0xFE8
  6126                           postinc1	equ	0xFE6
  6127                           postdec1	equ	0xFE5
  6128                           plusw1	equ	0xFE3
  6129                           fsr1h	equ	0xFE2
  6130                           fsr1l	equ	0xFE1
  6131                           indf2	equ	0xFDF
  6132                           postinc2	equ	0xFDE
  6133                           postdec2	equ	0xFDD
  6134                           plusw2	equ	0xFDB
  6135                           fsr2h	equ	0xFDA
  6136                           fsr2l	equ	0xFD9
  6137                           status	equ	0xFD8
  6138                           
  6139 ;; *************** function _UsbDevice_MainTask *****************
  6140 ;; Defined at:
  6141 ;;		line 72 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_mgr.c"
  6142 ;; Parameters:    Size  Location     Type
  6143 ;;  Options         1    wreg     unsigned char 
  6144 ;; Auto vars:     Size  Location     Type
  6145 ;;  Options         1    0[COMRAM] unsigned char 
  6146 ;; Return value:  Size  Location     Type
  6147 ;;                  1    wreg      void 
  6148 ;; Registers used:
  6149 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6150 ;; Tracked objects:
  6151 ;;		On entry : 0/0
  6152 ;;		On exit  : 0/0
  6153 ;;		Unchanged: 0/0
  6154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6155 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6156 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6157 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6158 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6159 ;;Total ram usage:        0 bytes
  6160 ;; Hardware stack levels used:    1
  6161 ;; Hardware stack levels required when called:   20
  6162 ;; This function calls:
  6163 ;;		_CDCTxService
  6164 ;;		_USBDeviceInit
  6165 ;;		_USBDeviceTasks
  6166 ;; This function is called by:
  6167 ;;		_InitializeTasks
  6168 ;;		_ScheduleTasks
  6169 ;; This function uses a non-reentrant model
  6170 ;;
  6171                           
  6172                           	psect	text20
  6173  005BD4                     __ptext20:
  6174                           	opt stack 0
  6175  005BD4                     _UsbDevice_MainTask:
  6176                           	opt stack 8
  6177                           
  6178                           ;usb_device_mgr.c: 74: switch (SystemState)
  6179                           
  6180                           ; BSR set to: 0
  6181                           ;incstack = 0
  6182  005BD4  D008               	goto	l1975
  6183  005BD6                     
  6184                           ;usb_device_mgr.c: 79: USBDeviceInit();
  6185  005BD6  ECFF  F00F         	call	_USBDeviceInit	;wreg free
  6186                           
  6187                           ;usb_device_mgr.c: 80: ;
  6188                           ;usb_device_mgr.c: 81: break;
  6189  005BDA  0012               	return	
  6190  005BDC                     
  6191                           ;usb_device_mgr.c: 86: USBDeviceTasks();
  6192  005BDC  ECD5  F00D         	call	_USBDeviceTasks	;wreg free
  6193                           
  6194                           ;usb_device_mgr.c: 90: CDCTxService();
  6195  005BE0  ECA2  F012         	call	_CDCTxService	;wreg free
  6196                           
  6197                           ;usb_device_mgr.c: 101: }
  6198                           
  6199                           ;usb_device_mgr.c: 100: break;
  6200                           
  6201                           ;usb_device_mgr.c: 99: default:
  6202                           
  6203                           ;usb_device_mgr.c: 96: break;
  6204  005BE4  0012               	return	
  6205  005BE6                     l1975:
  6206  005BE6  0100               	movlb	0	; () banked
  6207  005BE8  51D2               	movf	_SystemState& (0+255),w,b
  6208                           
  6209                           ; Switch size 1, requested type "space"
  6210                           ; Number of cases is 2, Range of values is 0 to 1
  6211                           ; switch strategies available:
  6212                           ; Name         Instructions Cycles
  6213                           ; simple_byte            7     4 (average)
  6214                           ;	Chosen strategy is simple_byte
  6215  005BEA  0A00               	xorlw	0	; case 0
  6216  005BEC  B4D8               	btfsc	status,2,c
  6217  005BEE  D7F3               	goto	l1976
  6218  005BF0  0A01               	xorlw	1	; case 1
  6219  005BF2  A4D8               	btfss	status,2,c
  6220  005BF4  0012               	return	
  6221  005BF6  D7F2               	goto	l1978
  6222  005BF8                     __end_of_UsbDevice_MainTask:
  6223                           	opt stack 0
  6224                           tosu	equ	0xFFF
  6225                           tosh	equ	0xFFE
  6226                           tosl	equ	0xFFD
  6227                           pclath	equ	0xFFA
  6228                           tblptru	equ	0xFF8
  6229                           tblptrh	equ	0xFF7
  6230                           tblptrl	equ	0xFF6
  6231                           tablat	equ	0xFF5
  6232                           prodh	equ	0xFF4
  6233                           prodl	equ	0xFF3
  6234                           intcon	equ	0xFF2
  6235                           intcon2	equ	0xFF1
  6236                           intcon3	equ	0xFF0
  6237                           postinc0	equ	0xFEE
  6238                           plusw0	equ	0xFEB
  6239                           wreg	equ	0xFE8
  6240                           postinc1	equ	0xFE6
  6241                           postdec1	equ	0xFE5
  6242                           plusw1	equ	0xFE3
  6243                           fsr1h	equ	0xFE2
  6244                           fsr1l	equ	0xFE1
  6245                           indf2	equ	0xFDF
  6246                           postinc2	equ	0xFDE
  6247                           postdec2	equ	0xFDD
  6248                           plusw2	equ	0xFDB
  6249                           fsr2h	equ	0xFDA
  6250                           fsr2l	equ	0xFD9
  6251                           status	equ	0xFD8
  6252                           
  6253 ;; *************** function _MdmHttp_MainTask *****************
  6254 ;; Defined at:
  6255 ;;		line 557 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs_http.c"
  6256 ;; Parameters:    Size  Location     Type
  6257 ;;  Options         1    wreg     unsigned char 
  6258 ;; Auto vars:     Size  Location     Type
  6259 ;;  Options         1    0[COMRAM] unsigned char 
  6260 ;; Return value:  Size  Location     Type
  6261 ;;                  1    wreg      void 
  6262 ;; Registers used:
  6263 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6264 ;; Tracked objects:
  6265 ;;		On entry : 0/0
  6266 ;;		On exit  : 0/0
  6267 ;;		Unchanged: 0/0
  6268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6269 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6270 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6271 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6272 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6273 ;;Total ram usage:        0 bytes
  6274 ;; Hardware stack levels used:    1
  6275 ;; Hardware stack levels required when called:   15
  6276 ;; This function calls:
  6277 ;;		_HttpGetMethod
  6278 ;;		_InitGprsNetwork
  6279 ;; This function is called by:
  6280 ;;		_InitializeTasks
  6281 ;;		_ScheduleTasks
  6282 ;; This function uses a non-reentrant model
  6283 ;;
  6284                           
  6285                           	psect	text21
  6286  00549C                     __ptext21:
  6287                           	opt stack 0
  6288  00549C                     _MdmHttp_MainTask:
  6289                           	opt stack 13
  6290                           
  6291                           ;mdm_gsm_gprs_http.c: 559: switch (SystemState)
  6292                           
  6293                           ;incstack = 0
  6294  00549C  D019               	goto	l1274
  6295  00549E                     
  6296                           ;mdm_gsm_gprs_http.c: 569: if (MdmStatus == ModemConfigured)
  6297  00549E  0E03               	movlw	3
  6298  0054A0  0100               	movlb	0	; () banked
  6299  0054A2  19CF               	xorwf	_MdmStatus& (0+255),w,b
  6300  0054A4  A4D8               	btfss	status,2,c
  6301  0054A6  0012               	return	
  6302                           
  6303                           ; BSR set to: 0
  6304                           ;mdm_gsm_gprs_http.c: 570: {
  6305                           ;mdm_gsm_gprs_http.c: 572: GprsNetworkSts = InitGprsNetwork(ApnLocal,ApnLenLocal);
  6306  0054A8  C326  F09B         	movff	_ApnLocal,InitGprsNetwork@Apn
  6307  0054AC  C327  F09C         	movff	_ApnLocal+1,InitGprsNetwork@Apn+1
  6308  0054B0  C1F2  F09D         	movff	_ApnLenLocal,InitGprsNetwork@ApnLen
  6309  0054B4  ECE4  F006         	call	_InitGprsNetwork	;wreg free
  6310  0054B8  0101               	movlb	1	; () banked
  6311  0054BA  6FF1               	movwf	_GprsNetworkSts& (0+255),b
  6312                           
  6313                           ;mdm_gsm_gprs_http.c: 574: HttpGetMethodSts = HttpGetMethod(&HttpGetDataLocal);
  6314  0054BC  0EA4               	movlw	low _HttpGetDataLocal
  6315  0054BE  0100               	movlb	0	; () banked
  6316  0054C0  6F9B               	movwf	HttpGetMethod@GetData& (0+255),b
  6317  0054C2  0E03               	movlw	high _HttpGetDataLocal
  6318  0054C4  6F9C               	movwf	(HttpGetMethod@GetData+1)& (0+255),b
  6319  0054C6  ECF6  F002         	call	_HttpGetMethod	;wreg free
  6320  0054CA  0101               	movlb	1	; () banked
  6321  0054CC  6FF0               	movwf	_HttpGetMethodSts& (0+255),b
  6322                           
  6323                           ; BSR set to: 1
  6324                           ;mdm_gsm_gprs_http.c: 581: }
  6325                           
  6326                           ; BSR set to: 1
  6327                           ;mdm_gsm_gprs_http.c: 580: break;
  6328                           
  6329                           ;mdm_gsm_gprs_http.c: 579: default:
  6330                           
  6331                           ; BSR set to: 1
  6332                           ;mdm_gsm_gprs_http.c: 575: }
  6333                           ;mdm_gsm_gprs_http.c: 576: break;
  6334  0054CE  0012               	return	
  6335  0054D0                     l1274:
  6336                           
  6337                           ; BSR set to: 1
  6338  0054D0  0100               	movlb	0	; () banked
  6339  0054D2  51D2               	movf	_SystemState& (0+255),w,b
  6340                           
  6341                           ; Switch size 1, requested type "space"
  6342                           ; Number of cases is 2, Range of values is 0 to 1
  6343                           ; switch strategies available:
  6344                           ; Name         Instructions Cycles
  6345                           ; simple_byte            7     4 (average)
  6346                           ;	Chosen strategy is simple_byte
  6347  0054D4  0A00               	xorlw	0	; case 0
  6348  0054D6  B4D8               	btfsc	status,2,c
  6349  0054D8  0012               	return	
  6350  0054DA  0A01               	xorlw	1	; case 1
  6351  0054DC  A4D8               	btfss	status,2,c
  6352  0054DE  0012               	return	
  6353  0054E0  D7DE               	goto	l1277
  6354  0054E2                     __end_of_MdmHttp_MainTask:
  6355                           	opt stack 0
  6356                           tosu	equ	0xFFF
  6357                           tosh	equ	0xFFE
  6358                           tosl	equ	0xFFD
  6359                           pclath	equ	0xFFA
  6360                           tblptru	equ	0xFF8
  6361                           tblptrh	equ	0xFF7
  6362                           tblptrl	equ	0xFF6
  6363                           tablat	equ	0xFF5
  6364                           prodh	equ	0xFF4
  6365                           prodl	equ	0xFF3
  6366                           intcon	equ	0xFF2
  6367                           intcon2	equ	0xFF1
  6368                           intcon3	equ	0xFF0
  6369                           postinc0	equ	0xFEE
  6370                           plusw0	equ	0xFEB
  6371                           wreg	equ	0xFE8
  6372                           postinc1	equ	0xFE6
  6373                           postdec1	equ	0xFE5
  6374                           plusw1	equ	0xFE3
  6375                           fsr1h	equ	0xFE2
  6376                           fsr1l	equ	0xFE1
  6377                           indf2	equ	0xFDF
  6378                           postinc2	equ	0xFDE
  6379                           postdec2	equ	0xFDD
  6380                           plusw2	equ	0xFDB
  6381                           fsr2h	equ	0xFDA
  6382                           fsr2l	equ	0xFD9
  6383                           status	equ	0xFD8
  6384                           
  6385 ;; *************** function _Mdm_MainTask *****************
  6386 ;; Defined at:
  6387 ;;		line 734 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
  6388 ;; Parameters:    Size  Location     Type
  6389 ;;  Options         1    wreg     unsigned char 
  6390 ;; Auto vars:     Size  Location     Type
  6391 ;;  Options         1    0[COMRAM] unsigned char 
  6392 ;; Return value:  Size  Location     Type
  6393 ;;                  1    wreg      void 
  6394 ;; Registers used:
  6395 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6396 ;; Tracked objects:
  6397 ;;		On entry : 0/0
  6398 ;;		On exit  : 0/0
  6399 ;;		Unchanged: 0/0
  6400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6401 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6402 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6403 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6404 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6405 ;;Total ram usage:        0 bytes
  6406 ;; Hardware stack levels used:    1
  6407 ;; Hardware stack levels required when called:   15
  6408 ;; This function calls:
  6409 ;;		_CheckModem
  6410 ;;		_ConfigureModem
  6411 ;;		_GetSmsSm
  6412 ;;		_ModemEvtParser
  6413 ;;		_SendSmsSm
  6414 ;;		_TurnOnModem
  6415 ;;		_UartSetConfig
  6416 ;;		_Uart_InitUartModule
  6417 ;; This function is called by:
  6418 ;;		_InitializeTasks
  6419 ;;		_ScheduleTasks
  6420 ;; This function uses a non-reentrant model
  6421 ;;
  6422                           
  6423                           	psect	text22
  6424  0052CC                     __ptext22:
  6425                           	opt stack 0
  6426  0052CC                     _Mdm_MainTask:
  6427                           	opt stack 13
  6428                           
  6429                           ;mdm_gsm_gprs.c: 736: switch (SystemState)
  6430                           
  6431                           ;incstack = 0
  6432  0052CC  D01E               	goto	l1097
  6433  0052CE                     
  6434                           ;mdm_gsm_gprs.c: 741: UartSetConfig();
  6435  0052CE  ECBD  F027         	call	_UartSetConfig	;wreg free
  6436                           
  6437                           ;mdm_gsm_gprs.c: 743: Uart_InitUartModule(1,&UartConfig);
  6438  0052D2  0E28               	movlw	low _UartConfig
  6439  0052D4  0100               	movlb	0	; () banked
  6440  0052D6  6F9D               	movwf	Uart_InitUartModule@UartConfig& (0+255),b
  6441  0052D8  0E03               	movlw	high _UartConfig
  6442  0052DA  6F9E               	movwf	(Uart_InitUartModule@UartConfig+1)& (0+255),b
  6443  0052DC  0E01               	movlw	1
  6444  0052DE  EC5E  F005         	call	_Uart_InitUartModule
  6445                           
  6446                           ;mdm_gsm_gprs.c: 744: break;
  6447  0052E2  0012               	return	
  6448  0052E4                     
  6449                           ;mdm_gsm_gprs.c: 749: CheckModem();
  6450  0052E4  EC55  F011         	call	_CheckModem	;wreg free
  6451                           
  6452                           ;mdm_gsm_gprs.c: 751: if ((ComChecCompleted == 1u) && (MdmStatus == ModemOff))
  6453  0052E8  042B               	decf	_ComChecCompleted,w,c
  6454  0052EA  A4D8               	btfss	status,2,c
  6455  0052EC  D005               	goto	l1101
  6456  0052EE  0100               	movlb	0	; () banked
  6457  0052F0  51CF               	movf	_MdmStatus& (0+255),w,b
  6458  0052F2  B4D8               	btfsc	status,2,c
  6459                           
  6460                           ; BSR set to: 0
  6461                           ;mdm_gsm_gprs.c: 752: {
  6462                           ;mdm_gsm_gprs.c: 754: TurnOnModem();
  6463  0052F4  EC71  F02A         	call	_TurnOnModem	;wreg free
  6464  0052F8                     l1101:
  6465                           
  6466                           ;mdm_gsm_gprs.c: 755: }
  6467                           ;mdm_gsm_gprs.c: 757: ConfigureModem();
  6468  0052F8  EC09  F01C         	call	_ConfigureModem	;wreg free
  6469                           
  6470                           ;mdm_gsm_gprs.c: 759: ModemEvtParser();
  6471  0052FC  EC3A  F016         	call	_ModemEvtParser	;wreg free
  6472                           
  6473                           ;mdm_gsm_gprs.c: 761: GetSmsSm();
  6474  005300  ECBE  F017         	call	_GetSmsSm	;wreg free
  6475                           
  6476                           ;mdm_gsm_gprs.c: 763: SendSmsSm();
  6477  005304  ECF9  F00C         	call	_SendSmsSm	;wreg free
  6478                           
  6479                           ;mdm_gsm_gprs.c: 769: }
  6480                           
  6481                           ;mdm_gsm_gprs.c: 768: break;
  6482                           
  6483                           ;mdm_gsm_gprs.c: 767: default:
  6484                           
  6485                           ;mdm_gsm_gprs.c: 764: break;
  6486  005308  0012               	return	
  6487  00530A                     l1097:
  6488  00530A  0100               	movlb	0	; () banked
  6489  00530C  51D2               	movf	_SystemState& (0+255),w,b
  6490                           
  6491                           ; Switch size 1, requested type "space"
  6492                           ; Number of cases is 2, Range of values is 0 to 1
  6493                           ; switch strategies available:
  6494                           ; Name         Instructions Cycles
  6495                           ; simple_byte            7     4 (average)
  6496                           ;	Chosen strategy is simple_byte
  6497  00530E  0A00               	xorlw	0	; case 0
  6498  005310  B4D8               	btfsc	status,2,c
  6499  005312  D7DD               	goto	l1098
  6500  005314  0A01               	xorlw	1	; case 1
  6501  005316  A4D8               	btfss	status,2,c
  6502  005318  0012               	return	
  6503  00531A  D7E4               	goto	l1100
  6504  00531C                     __end_of_Mdm_MainTask:
  6505                           	opt stack 0
  6506                           tosu	equ	0xFFF
  6507                           tosh	equ	0xFFE
  6508                           tosl	equ	0xFFD
  6509                           pclath	equ	0xFFA
  6510                           tblptru	equ	0xFF8
  6511                           tblptrh	equ	0xFF7
  6512                           tblptrl	equ	0xFF6
  6513                           tablat	equ	0xFF5
  6514                           prodh	equ	0xFF4
  6515                           prodl	equ	0xFF3
  6516                           intcon	equ	0xFF2
  6517                           intcon2	equ	0xFF1
  6518                           intcon3	equ	0xFF0
  6519                           postinc0	equ	0xFEE
  6520                           plusw0	equ	0xFEB
  6521                           wreg	equ	0xFE8
  6522                           postinc1	equ	0xFE6
  6523                           postdec1	equ	0xFE5
  6524                           plusw1	equ	0xFE3
  6525                           fsr1h	equ	0xFE2
  6526                           fsr1l	equ	0xFE1
  6527                           indf2	equ	0xFDF
  6528                           postinc2	equ	0xFDE
  6529                           postdec2	equ	0xFDD
  6530                           plusw2	equ	0xFDB
  6531                           fsr2h	equ	0xFDA
  6532                           fsr2l	equ	0xFD9
  6533                           status	equ	0xFD8
  6534                           
  6535 ;; *************** function _I2cSlv_MainTask *****************
  6536 ;; Defined at:
  6537 ;;		line 215 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
  6538 ;; Parameters:    Size  Location     Type
  6539 ;;  Options         1    wreg     unsigned char 
  6540 ;; Auto vars:     Size  Location     Type
  6541 ;;  Options         1    0[COMRAM] unsigned char 
  6542 ;; Return value:  Size  Location     Type
  6543 ;;                  1    wreg      void 
  6544 ;; Registers used:
  6545 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6546 ;; Tracked objects:
  6547 ;;		On entry : 0/0
  6548 ;;		On exit  : 0/0
  6549 ;;		Unchanged: 0/0
  6550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6551 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6552 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6554 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6555 ;;Total ram usage:        0 bytes
  6556 ;; Hardware stack levels used:    1
  6557 ;; Hardware stack levels required when called:   14
  6558 ;; This function calls:
  6559 ;;		_I2cSendMsgSm
  6560 ;;		_I2cSetConfig
  6561 ;;		_I2c_InitI2cModule
  6562 ;;		_OsAlrm_SetOsAlarm
  6563 ;; This function is called by:
  6564 ;;		_InitializeTasks
  6565 ;;		_ScheduleTasks
  6566 ;; This function uses a non-reentrant model
  6567 ;;
  6568                           
  6569                           	psect	text23
  6570  0050DA                     __ptext23:
  6571                           	opt stack 0
  6572  0050DA                     _I2cSlv_MainTask:
  6573                           	opt stack 14
  6574                           
  6575                           ;i2c_slv.c: 217: switch (SystemState)
  6576                           
  6577                           ;incstack = 0
  6578  0050DA  D020               	goto	l1387
  6579  0050DC                     
  6580                           ;i2c_slv.c: 222: I2cSetConfig();
  6581  0050DC  EC83  F02D         	call	_I2cSetConfig	;wreg free
  6582                           
  6583                           ;i2c_slv.c: 224: I2c_InitI2cModule(&I2cConfig);
  6584  0050E0  0E53               	movlw	low _I2cConfig
  6585  0050E2  0100               	movlb	0	; () banked
  6586  0050E4  6FA2               	movwf	I2c_InitI2cModule@I2cConfig& (0+255),b
  6587  0050E6  0E03               	movlw	high _I2cConfig
  6588  0050E8  6FA3               	movwf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),b
  6589  0050EA  ECBD  F025         	call	_I2c_InitI2cModule	;wreg free
  6590                           
  6591                           ;i2c_slv.c: 226: OsAlrm_SetOsAlarm(0x00,50,&I2cDummyTx);
  6592  0050EE  0E00               	movlw	0
  6593  0050F0  0100               	movlb	0	; () banked
  6594  0050F2  6F84               	movwf	(OsAlrm_SetOsAlarm@OsAlarmId+1)& (0+255),b
  6595  0050F4  0E00               	movlw	0
  6596  0050F6  6F83               	movwf	OsAlrm_SetOsAlarm@OsAlarmId& (0+255),b
  6597  0050F8  0E32               	movlw	50
  6598  0050FA  6F85               	movwf	OsAlrm_SetOsAlarm@OsAlarmTimeout& (0+255),b
  6599  0050FC  0E00               	movlw	0
  6600  0050FE  6F86               	movwf	(OsAlrm_SetOsAlarm@OsAlarmTimeout+1)& (0+255),b
  6601  005100  0E00               	movlw	0
  6602  005102  6F87               	movwf	(OsAlrm_SetOsAlarm@OsAlarmTimeout+2)& (0+255),b
  6603  005104  0E00               	movlw	0
  6604  005106  6F88               	movwf	(OsAlrm_SetOsAlarm@OsAlarmTimeout+3)& (0+255),b
  6605  005108  0EC8               	movlw	low _I2cDummyTx
  6606  00510A  6F89               	movwf	OsAlrm_SetOsAlarm@AlarmCallback& (0+255),b
  6607  00510C  0E5D               	movlw	high _I2cDummyTx
  6608  00510E  6F8A               	movwf	(OsAlrm_SetOsAlarm@AlarmCallback+1)& (0+255),b
  6609  005110  EC9B  F01D         	call	_OsAlrm_SetOsAlarm	;wreg free
  6610                           
  6611                           ;i2c_slv.c: 227: break;
  6612  005114  0012               	return	
  6613  005116                     
  6614                           ;i2c_slv.c: 232: I2cSendMsgSm();
  6615  005116  ECFF  F01D         	call	_I2cSendMsgSm	;wreg free
  6616                           
  6617                           ;i2c_slv.c: 238: }
  6618                           
  6619                           ;i2c_slv.c: 237: break;
  6620                           
  6621                           ;i2c_slv.c: 236: default:
  6622                           
  6623                           ;i2c_slv.c: 233: break;
  6624  00511A  0012               	return	
  6625  00511C                     l1387:
  6626  00511C  0100               	movlb	0	; () banked
  6627  00511E  51D2               	movf	_SystemState& (0+255),w,b
  6628                           
  6629                           ; Switch size 1, requested type "space"
  6630                           ; Number of cases is 2, Range of values is 0 to 1
  6631                           ; switch strategies available:
  6632                           ; Name         Instructions Cycles
  6633                           ; simple_byte            7     4 (average)
  6634                           ;	Chosen strategy is simple_byte
  6635  005120  0A00               	xorlw	0	; case 0
  6636  005122  B4D8               	btfsc	status,2,c
  6637  005124  D7DB               	goto	l1388
  6638  005126  0A01               	xorlw	1	; case 1
  6639  005128  A4D8               	btfss	status,2,c
  6640  00512A  0012               	return	
  6641  00512C  D7F4               	goto	l1390
  6642  00512E                     __end_of_I2cSlv_MainTask:
  6643                           	opt stack 0
  6644                           tosu	equ	0xFFF
  6645                           tosh	equ	0xFFE
  6646                           tosl	equ	0xFFD
  6647                           pclath	equ	0xFFA
  6648                           tblptru	equ	0xFF8
  6649                           tblptrh	equ	0xFF7
  6650                           tblptrl	equ	0xFF6
  6651                           tablat	equ	0xFF5
  6652                           prodh	equ	0xFF4
  6653                           prodl	equ	0xFF3
  6654                           intcon	equ	0xFF2
  6655                           intcon2	equ	0xFF1
  6656                           intcon3	equ	0xFF0
  6657                           postinc0	equ	0xFEE
  6658                           plusw0	equ	0xFEB
  6659                           wreg	equ	0xFE8
  6660                           postinc1	equ	0xFE6
  6661                           postdec1	equ	0xFE5
  6662                           plusw1	equ	0xFE3
  6663                           fsr1h	equ	0xFE2
  6664                           fsr1l	equ	0xFE1
  6665                           indf2	equ	0xFDF
  6666                           postinc2	equ	0xFDE
  6667                           postdec2	equ	0xFDD
  6668                           plusw2	equ	0xFDB
  6669                           fsr2h	equ	0xFDA
  6670                           fsr2l	equ	0xFD9
  6671                           status	equ	0xFD8
  6672                           
  6673 ;; *************** function _Mdm_DrvMainFn *****************
  6674 ;; Defined at:
  6675 ;;		line 304 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mdm_drv.c"
  6676 ;; Parameters:    Size  Location     Type
  6677 ;;  Options         1    wreg     unsigned char 
  6678 ;; Auto vars:     Size  Location     Type
  6679 ;;  Options         1    0[COMRAM] unsigned char 
  6680 ;; Return value:  Size  Location     Type
  6681 ;;                  1    wreg      void 
  6682 ;; Registers used:
  6683 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6684 ;; Tracked objects:
  6685 ;;		On entry : 0/0
  6686 ;;		On exit  : 0/0
  6687 ;;		Unchanged: 0/0
  6688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6690 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6692 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6693 ;;Total ram usage:        0 bytes
  6694 ;; Hardware stack levels used:    1
  6695 ;; Hardware stack levels required when called:   13
  6696 ;; This function calls:
  6697 ;;		_MdmCntSm
  6698 ;; This function is called by:
  6699 ;;		_InitializeTasks
  6700 ;;		_ScheduleTasks
  6701 ;; This function uses a non-reentrant model
  6702 ;;
  6703                           
  6704                           	psect	text24
  6705  005FBC                     __ptext24:
  6706                           	opt stack 0
  6707  005FBC                     _Mdm_DrvMainFn:
  6708                           	opt stack 15
  6709                           
  6710                           ;mdm_drv.c: 307: MdmCntSm();
  6711                           
  6712                           ;incstack = 0
  6713  005FBC  ECDB  F020         	call	_MdmCntSm	;wreg free
  6714  005FC0  0012               	return		;funcret
  6715  005FC2                     __end_of_Mdm_DrvMainFn:
  6716                           	opt stack 0
  6717                           tosu	equ	0xFFF
  6718                           tosh	equ	0xFFE
  6719                           tosl	equ	0xFFD
  6720                           pclath	equ	0xFFA
  6721                           tblptru	equ	0xFF8
  6722                           tblptrh	equ	0xFF7
  6723                           tblptrl	equ	0xFF6
  6724                           tablat	equ	0xFF5
  6725                           prodh	equ	0xFF4
  6726                           prodl	equ	0xFF3
  6727                           intcon	equ	0xFF2
  6728                           intcon2	equ	0xFF1
  6729                           intcon3	equ	0xFF0
  6730                           postinc0	equ	0xFEE
  6731                           plusw0	equ	0xFEB
  6732                           wreg	equ	0xFE8
  6733                           postinc1	equ	0xFE6
  6734                           postdec1	equ	0xFE5
  6735                           plusw1	equ	0xFE3
  6736                           fsr1h	equ	0xFE2
  6737                           fsr1l	equ	0xFE1
  6738                           indf2	equ	0xFDF
  6739                           postinc2	equ	0xFDE
  6740                           postdec2	equ	0xFDD
  6741                           plusw2	equ	0xFDB
  6742                           fsr2h	equ	0xFDA
  6743                           fsr2l	equ	0xFD9
  6744                           status	equ	0xFD8
  6745                           
  6746 ;; *************** function _Wdg_MainTask *****************
  6747 ;; Defined at:
  6748 ;;		line 73 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/wdg.c"
  6749 ;; Parameters:    Size  Location     Type
  6750 ;;  Options         1    wreg     unsigned char 
  6751 ;; Auto vars:     Size  Location     Type
  6752 ;;  Options         1    0[COMRAM] unsigned char 
  6753 ;; Return value:  Size  Location     Type
  6754 ;;                  1    wreg      void 
  6755 ;; Registers used:
  6756 ;;		wreg, status,2, status,0, cstack
  6757 ;; Tracked objects:
  6758 ;;		On entry : 0/0
  6759 ;;		On exit  : 0/0
  6760 ;;		Unchanged: 0/0
  6761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6762 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6763 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6765 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6766 ;;Total ram usage:        0 bytes
  6767 ;; Hardware stack levels used:    1
  6768 ;; Hardware stack levels required when called:   12
  6769 ;; This function calls:
  6770 ;;		_Mcu_ClearWdg
  6771 ;;		_Mcu_SetWdgSts
  6772 ;; This function is called by:
  6773 ;;		_InitializeTasks
  6774 ;;		_ScheduleTasks
  6775 ;; This function uses a non-reentrant model
  6776 ;;
  6777                           
  6778                           	psect	text25
  6779  005C64                     __ptext25:
  6780                           	opt stack 0
  6781  005C64                     _Wdg_MainTask:
  6782                           	opt stack 16
  6783                           
  6784                           ;wdg.c: 75: switch (SystemState)
  6785                           
  6786                           ;incstack = 0
  6787  005C64  D007               	goto	l2458
  6788  005C66                     
  6789                           ;wdg.c: 80: Mcu_SetWdgSts(1u);
  6790  005C66  0E01               	movlw	1
  6791  005C68  EC70  F02F         	call	_Mcu_SetWdgSts
  6792                           
  6793                           ;wdg.c: 81: break;
  6794  005C6C  0012               	return	
  6795  005C6E                     
  6796                           ;wdg.c: 86: Mcu_ClearWdg();
  6797  005C6E  ECE1  F02F         	call	_Mcu_ClearWdg	;wreg free
  6798                           
  6799                           ;wdg.c: 92: }
  6800                           
  6801                           ;wdg.c: 91: break;
  6802                           
  6803                           ;wdg.c: 90: default:
  6804                           
  6805                           ;wdg.c: 87: break;
  6806  005C72  0012               	return	
  6807  005C74                     l2458:
  6808  005C74  0100               	movlb	0	; () banked
  6809  005C76  51D2               	movf	_SystemState& (0+255),w,b
  6810                           
  6811                           ; Switch size 1, requested type "space"
  6812                           ; Number of cases is 2, Range of values is 0 to 1
  6813                           ; switch strategies available:
  6814                           ; Name         Instructions Cycles
  6815                           ; simple_byte            7     4 (average)
  6816                           ;	Chosen strategy is simple_byte
  6817  005C78  0A00               	xorlw	0	; case 0
  6818  005C7A  B4D8               	btfsc	status,2,c
  6819  005C7C  D7F4               	goto	l2459
  6820  005C7E  0A01               	xorlw	1	; case 1
  6821  005C80  A4D8               	btfss	status,2,c
  6822  005C82  0012               	return	
  6823  005C84  D7F4               	goto	l2461
  6824  005C86                     __end_of_Wdg_MainTask:
  6825                           	opt stack 0
  6826                           tosu	equ	0xFFF
  6827                           tosh	equ	0xFFE
  6828                           tosl	equ	0xFFD
  6829                           pclath	equ	0xFFA
  6830                           tblptru	equ	0xFF8
  6831                           tblptrh	equ	0xFF7
  6832                           tblptrl	equ	0xFF6
  6833                           tablat	equ	0xFF5
  6834                           prodh	equ	0xFF4
  6835                           prodl	equ	0xFF3
  6836                           intcon	equ	0xFF2
  6837                           intcon2	equ	0xFF1
  6838                           intcon3	equ	0xFF0
  6839                           postinc0	equ	0xFEE
  6840                           plusw0	equ	0xFEB
  6841                           wreg	equ	0xFE8
  6842                           postinc1	equ	0xFE6
  6843                           postdec1	equ	0xFE5
  6844                           plusw1	equ	0xFE3
  6845                           fsr1h	equ	0xFE2
  6846                           fsr1l	equ	0xFE1
  6847                           indf2	equ	0xFDF
  6848                           postinc2	equ	0xFDE
  6849                           postdec2	equ	0xFDD
  6850                           plusw2	equ	0xFDB
  6851                           fsr2h	equ	0xFDA
  6852                           fsr2l	equ	0xFD9
  6853                           status	equ	0xFD8
  6854                           
  6855 ;; *************** function _Mcu_SetWdgSts *****************
  6856 ;; Defined at:
  6857 ;;		line 196 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
  6858 ;; Parameters:    Size  Location     Type
  6859 ;;  WdgSts          1    wreg     unsigned char 
  6860 ;; Auto vars:     Size  Location     Type
  6861 ;;  WdgSts          1   29[BANK0 ] unsigned char 
  6862 ;; Return value:  Size  Location     Type
  6863 ;;                  1    wreg      void 
  6864 ;; Registers used:
  6865 ;;		wreg
  6866 ;; Tracked objects:
  6867 ;;		On entry : 0/0
  6868 ;;		On exit  : 0/0
  6869 ;;		Unchanged: 0/0
  6870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6871 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6872 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6873 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6874 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6875 ;;Total ram usage:        1 bytes
  6876 ;; Hardware stack levels used:    1
  6877 ;; Hardware stack levels required when called:   11
  6878 ;; This function calls:
  6879 ;;		Nothing
  6880 ;; This function is called by:
  6881 ;;		_Wdg_MainTask
  6882 ;; This function uses a non-reentrant model
  6883 ;;
  6884                           
  6885                           	psect	text26
  6886  005EE0                     __ptext26:
  6887                           	opt stack 0
  6888  005EE0                     _Mcu_SetWdgSts:
  6889                           	opt stack 16
  6890                           
  6891                           ;incstack = 0
  6892                           ;Mcu_SetWdgSts@WdgSts stored from wreg
  6893  005EE0  0100               	movlb	0	; () banked
  6894  005EE2  6F7D               	movwf	Mcu_SetWdgSts@WdgSts& (0+255),b
  6895                           
  6896                           ;mcu_drv.c: 199: WDTCONbits.SWDTEN = WdgSts;
  6897  005EE4  0100               	movlb	0	; () banked
  6898  005EE6  B17D               	btfsc	Mcu_SetWdgSts@WdgSts& (0+255),0,b
  6899  005EE8  D002               	bra	u7945
  6900  005EEA  90C0               	bcf	4032,0,c	;volatile
  6901  005EEC  D001               	bra	u7946
  6902  005EEE                     u7945:
  6903  005EEE  80C0               	bsf	4032,0,c	;volatile
  6904  005EF0                     u7946:
  6905  005EF0  0012               	return		;funcret
  6906  005EF2                     __end_of_Mcu_SetWdgSts:
  6907                           	opt stack 0
  6908                           tosu	equ	0xFFF
  6909                           tosh	equ	0xFFE
  6910                           tosl	equ	0xFFD
  6911                           pclath	equ	0xFFA
  6912                           tblptru	equ	0xFF8
  6913                           tblptrh	equ	0xFF7
  6914                           tblptrl	equ	0xFF6
  6915                           tablat	equ	0xFF5
  6916                           prodh	equ	0xFF4
  6917                           prodl	equ	0xFF3
  6918                           intcon	equ	0xFF2
  6919                           intcon2	equ	0xFF1
  6920                           intcon3	equ	0xFF0
  6921                           postinc0	equ	0xFEE
  6922                           plusw0	equ	0xFEB
  6923                           wreg	equ	0xFE8
  6924                           postinc1	equ	0xFE6
  6925                           postdec1	equ	0xFE5
  6926                           plusw1	equ	0xFE3
  6927                           fsr1h	equ	0xFE2
  6928                           fsr1l	equ	0xFE1
  6929                           indf2	equ	0xFDF
  6930                           postinc2	equ	0xFDE
  6931                           postdec2	equ	0xFDD
  6932                           plusw2	equ	0xFDB
  6933                           fsr2h	equ	0xFDA
  6934                           fsr2l	equ	0xFD9
  6935                           status	equ	0xFD8
  6936                           
  6937 ;; *************** function _Mcu_ClearWdg *****************
  6938 ;; Defined at:
  6939 ;;		line 210 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
  6940 ;; Parameters:    Size  Location     Type
  6941 ;;		None
  6942 ;; Auto vars:     Size  Location     Type
  6943 ;;		None
  6944 ;; Return value:  Size  Location     Type
  6945 ;;                  1    wreg      void 
  6946 ;; Registers used:
  6947 ;;		None
  6948 ;; Tracked objects:
  6949 ;;		On entry : 0/0
  6950 ;;		On exit  : 0/0
  6951 ;;		Unchanged: 0/0
  6952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6953 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6954 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6956 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6957 ;;Total ram usage:        0 bytes
  6958 ;; Hardware stack levels used:    1
  6959 ;; Hardware stack levels required when called:   11
  6960 ;; This function calls:
  6961 ;;		Nothing
  6962 ;; This function is called by:
  6963 ;;		_Wdg_MainTask
  6964 ;; This function uses a non-reentrant model
  6965 ;;
  6966                           
  6967                           	psect	text27
  6968  005FC2                     __ptext27:
  6969                           	opt stack 0
  6970  005FC2                     _Mcu_ClearWdg:
  6971                           	opt stack 16
  6972                           
  6973                           ;incstack = 0
  6974  005FC2  0004               	clrwdt		;# 
  6975  005FC4  0012               	return		;funcret
  6976  005FC6                     __end_of_Mcu_ClearWdg:
  6977                           	opt stack 0
  6978                           tosu	equ	0xFFF
  6979                           tosh	equ	0xFFE
  6980                           tosl	equ	0xFFD
  6981                           pclath	equ	0xFFA
  6982                           tblptru	equ	0xFF8
  6983                           tblptrh	equ	0xFF7
  6984                           tblptrl	equ	0xFF6
  6985                           tablat	equ	0xFF5
  6986                           prodh	equ	0xFF4
  6987                           prodl	equ	0xFF3
  6988                           intcon	equ	0xFF2
  6989                           intcon2	equ	0xFF1
  6990                           intcon3	equ	0xFF0
  6991                           postinc0	equ	0xFEE
  6992                           plusw0	equ	0xFEB
  6993                           wreg	equ	0xFE8
  6994                           postinc1	equ	0xFE6
  6995                           postdec1	equ	0xFE5
  6996                           plusw1	equ	0xFE3
  6997                           fsr1h	equ	0xFE2
  6998                           fsr1l	equ	0xFE1
  6999                           indf2	equ	0xFDF
  7000                           postinc2	equ	0xFDE
  7001                           postdec2	equ	0xFDD
  7002                           plusw2	equ	0xFDB
  7003                           fsr2h	equ	0xFDA
  7004                           fsr2l	equ	0xFD9
  7005                           status	equ	0xFD8
  7006                           
  7007 ;; *************** function _USBDeviceTasks *****************
  7008 ;; Defined at:
  7009 ;;		line 495 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  7010 ;; Parameters:    Size  Location     Type
  7011 ;;		None
  7012 ;; Auto vars:     Size  Location     Type
  7013 ;;  i               1   56[BANK0 ] unsigned char 
  7014 ;; Return value:  Size  Location     Type
  7015 ;;                  1    wreg      void 
  7016 ;; Registers used:
  7017 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7018 ;; Tracked objects:
  7019 ;;		On entry : 0/0
  7020 ;;		On exit  : 0/0
  7021 ;;		Unchanged: 0/0
  7022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7023 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7024 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7026 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7027 ;;Total ram usage:        1 bytes
  7028 ;; Hardware stack levels used:    1
  7029 ;; Hardware stack levels required when called:   19
  7030 ;; This function calls:
  7031 ;;		_USBCtrlEPAllowStatusStage
  7032 ;;		_USBCtrlEPService
  7033 ;;		_USBDeviceInit
  7034 ;;		_USBIncrement1msInternalTimers
  7035 ;;		_USBStallHandler
  7036 ;;		_USBSuspend
  7037 ;;		_USBWakeFromSuspend
  7038 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7039 ;; This function is called by:
  7040 ;;		_UsbDevice_MainTask
  7041 ;; This function uses a non-reentrant model
  7042 ;;
  7043                           
  7044                           	psect	text28
  7045  001BAA                     __ptext28:
  7046                           	opt stack 0
  7047  001BAA                     _USBDeviceTasks:
  7048                           	opt stack 8
  7049                           
  7050                           ;usb_device.c: 562: }
  7051                           ;usb_device.c: 584: if(USBDeviceState == DETACHED_STATE)
  7052                           
  7053                           ; BSR set to: 0
  7054                           
  7055                           ; BSR set to: 0
  7056                           ;usb_device.c: 561: return;
  7057                           
  7058                           ; BSR set to: 0
  7059                           ;usb_device.c: 560: {PIR2bits.USBIF = 0;};
  7060                           
  7061                           ;usb_device.c: 532: USBDeviceState = DETACHED_STATE;
  7062                           
  7063                           ;usb_device.c: 529: UIE = 0;
  7064                           
  7065                           ;usb_device.c: 524: {
  7066                           ;usb_device.c: 526: UCON = 0;
  7067                           
  7068                           ;usb_device.c: 497: uint8_t i;
  7069                           ;usb_device.c: 523: if (1 != 1)
  7070                           
  7071                           ;incstack = 0
  7072  001BAA  0100               	movlb	0	; () banked
  7073  001BAC  51CB               	movf	_USBDeviceState& (0+255),w,b
  7074  001BAE  A4D8               	btfss	status,2,c
  7075  001BB0  D012               	goto	l1598
  7076                           
  7077                           ; BSR set to: 0
  7078                           ;usb_device.c: 585: {
  7079                           ;usb_device.c: 587: UCON = 0;
  7080  001BB2  0E00               	movlw	0
  7081  001BB4  6E65               	movwf	3941,c	;volatile
  7082                           
  7083                           ;usb_device.c: 590: UIE = 0;
  7084  001BB6  0E00               	movlw	0
  7085  001BB8  010F               	movlb	15	; () banked
  7086  001BBA  6F36               	movwf	54,b	;volatile
  7087                           
  7088                           ;usb_device.c: 594: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  7089  001BBC  0E16               	movlw	22
  7090  001BBE  6F39               	movwf	57,b	;volatile
  7091  001BC0  0E9F               	movlw	159
  7092  001BC2  6F37               	movwf	55,b	;volatile
  7093  001BC4  0E7B               	movlw	123
  7094  001BC6  6F36               	movwf	54,b	;volatile
  7095                           
  7096                           ;usb_device.c: 597: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
  7097  001BC8  D001               	goto	l1599
  7098  001BCA                     l1600:
  7099  001BCA  8665               	bsf	3941,3,c	;volatile
  7100  001BCC                     l1599:
  7101  001BCC  A665               	btfss	3941,3,c	;volatile
  7102  001BCE  D7FD               	goto	l1600
  7103                           
  7104                           ;usb_device.c: 600: USBDeviceState = ATTACHED_STATE;
  7105  001BD0  0E01               	movlw	1
  7106  001BD2  0100               	movlb	0	; () banked
  7107  001BD4  6FCB               	movwf	_USBDeviceState& (0+255),b
  7108  001BD6                     l1598:
  7109                           
  7110                           ; BSR set to: 0
  7111                           ;usb_device.c: 605: }
  7112                           ;usb_device.c: 608: if(USBDeviceState == ATTACHED_STATE)
  7113                           
  7114                           ; BSR set to: 0
  7115  001BD6  05CB               	decf	_USBDeviceState& (0+255),w,b
  7116  001BD8  B4D8               	btfsc	status,2,c
  7117                           
  7118                           ; BSR set to: 0
  7119                           ;usb_device.c: 609: {
  7120                           ;usb_device.c: 619: if(!UCONbits.SE0)
  7121  001BDA  BA65               	btfsc	3941,5,c	;volatile
  7122  001BDC  D00A               	goto	l1603
  7123                           
  7124                           ; BSR set to: 0
  7125                           ;usb_device.c: 620: {
  7126                           ;usb_device.c: 626: {UIR = 0;};
  7127  001BDE  0E00               	movlw	0
  7128  001BE0  6E62               	movwf	3938,c	;volatile
  7129                           
  7130                           ;usb_device.c: 630: UIE=0;
  7131  001BE2  0E00               	movlw	0
  7132  001BE4  010F               	movlb	15	; () banked
  7133  001BE6  6F36               	movwf	54,b	;volatile
  7134                           
  7135                           ; BSR set to: 15
  7136                           ;usb_device.c: 632: UIEbits.URSTIE = 1;
  7137  001BE8  8136               	bsf	54,0,b	;volatile
  7138                           
  7139                           ; BSR set to: 15
  7140                           ;usb_device.c: 633: UIEbits.IDLEIE = 1;
  7141  001BEA  8936               	bsf	54,4,b	;volatile
  7142                           
  7143                           ;usb_device.c: 634: USBDeviceState = POWERED_STATE;
  7144  001BEC  0E02               	movlw	2
  7145  001BEE  0100               	movlb	0	; () banked
  7146  001BF0  6FCB               	movwf	_USBDeviceState& (0+255),b
  7147  001BF2                     l1603:
  7148                           
  7149                           ; BSR set to: 0
  7150                           ;usb_device.c: 635: }
  7151                           ;usb_device.c: 636: }
  7152                           ;usb_device.c: 652: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
  7153                           
  7154                           ; BSR set to: 0
  7155                           
  7156                           ; BSR set to: 0
  7157  001BF2  A462               	btfss	3938,2,c	;volatile
  7158  001BF4  D006               	goto	l1604
  7159                           
  7160                           ; BSR set to: 0
  7161  001BF6  010F               	movlb	15	; () banked
  7162  001BF8  A536               	btfss	54,2,b	;volatile
  7163  001BFA  D003               	goto	l1604
  7164                           
  7165                           ; BSR set to: 15
  7166                           ;usb_device.c: 653: {
  7167                           ;usb_device.c: 654: (UIR &= 0xFB);
  7168  001BFC  9462               	bcf	3938,2,c	;volatile
  7169                           
  7170                           ; BSR set to: 15
  7171                           ;usb_device.c: 658: USBWakeFromSuspend();
  7172  001BFE  EC37  F02C         	call	_USBWakeFromSuspend	;wreg free
  7173  001C02                     l1604:
  7174                           
  7175                           ;usb_device.c: 660: }
  7176                           ;usb_device.c: 665: if(UCONbits.SUSPND==1)
  7177  001C02  A265               	btfss	3941,1,c	;volatile
  7178  001C04  D002               	goto	l1605
  7179                           
  7180                           ;usb_device.c: 666: {
  7181                           ;usb_device.c: 667: {PIR2bits.USBIF = 0;};
  7182  001C06  98A1               	bcf	4001,4,c	;volatile
  7183                           
  7184                           ;usb_device.c: 668: return;
  7185  001C08  0012               	return	
  7186  001C0A                     l1605:
  7187                           
  7188                           ;usb_device.c: 669: }
  7189                           ;usb_device.c: 681: if(UIRbits.URSTIF && UIEbits.URSTIE)
  7190  001C0A  A062               	btfss	3938,0,c	;volatile
  7191  001C0C  D009               	goto	l1606
  7192  001C0E  010F               	movlb	15	; () banked
  7193  001C10  A136               	btfss	54,0,b	;volatile
  7194  001C12  D006               	goto	l1606
  7195                           
  7196                           ; BSR set to: 15
  7197                           ;usb_device.c: 682: {
  7198                           ;usb_device.c: 683: USBDeviceInit();
  7199  001C14  ECFF  F00F         	call	_USBDeviceInit	;wreg free
  7200                           
  7201                           ;usb_device.c: 687: ;
  7202                           ;usb_device.c: 689: USBDeviceState = DEFAULT_STATE;
  7203  001C18  0E04               	movlw	4
  7204  001C1A  0100               	movlb	0	; () banked
  7205  001C1C  6FCB               	movwf	_USBDeviceState& (0+255),b
  7206                           
  7207                           ; BSR set to: 0
  7208                           ;usb_device.c: 699: (UIR &= 0xFE);
  7209  001C1E  9062               	bcf	3938,0,c	;volatile
  7210  001C20                     l1606:
  7211                           
  7212                           ;usb_device.c: 700: }
  7213                           ;usb_device.c: 705: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
  7214                           
  7215                           ; BSR set to: 0
  7216  001C20  A862               	btfss	3938,4,c	;volatile
  7217  001C22  D004               	goto	l1607
  7218  001C24  010F               	movlb	15	; () banked
  7219  001C26  B936               	btfsc	54,4,b	;volatile
  7220                           
  7221                           ; BSR set to: 15
  7222                           ;usb_device.c: 706: {
  7223                           ;usb_device.c: 712: USBSuspend();
  7224  001C28  ECC3  F02C         	call	_USBSuspend	;wreg free
  7225  001C2C                     l1607:
  7226                           
  7227                           ;usb_device.c: 714: }
  7228                           ;usb_device.c: 726: if(UIRbits.SOFIF)
  7229  001C2C  AC62               	btfss	3938,6,c	;volatile
  7230  001C2E  D01D               	goto	l1611
  7231                           
  7232                           ;usb_device.c: 727: {
  7233                           ;usb_device.c: 729: if(UIEbits.SOFIE)
  7234  001C30  010F               	movlb	15	; () banked
  7235  001C32  AD36               	btfss	54,6,b	;volatile
  7236  001C34  D00F               	goto	l1609
  7237                           
  7238                           ; BSR set to: 15
  7239                           ;usb_device.c: 730: {
  7240                           ;usb_device.c: 731: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
  7241  001C36  0E00               	movlw	0
  7242  001C38  0100               	movlb	0	; () banked
  7243  001C3A  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  7244  001C3C  0E73               	movlw	115
  7245  001C3E  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  7246  001C40  0E00               	movlw	0
  7247  001C42  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  7248  001C44  0E00               	movlw	0
  7249  001C46  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  7250  001C48  0E00               	movlw	0
  7251  001C4A  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  7252  001C4C  0E01               	movlw	1
  7253  001C4E  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  7254  001C50  EC31  F027         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7255  001C54                     l1609:
  7256                           
  7257                           ;usb_device.c: 732: }
  7258                           ;usb_device.c: 733: (UIR &= 0xBF);
  7259  001C54  9C62               	bcf	3938,6,c	;volatile
  7260                           
  7261                           ;usb_device.c: 736: USBIncrement1msInternalTimers();
  7262  001C56  EC43  F02E         	call	_USBIncrement1msInternalTimers	;wreg free
  7263                           
  7264                           ;usb_device.c: 753: if(USBStatusStageTimeoutCounter != 0u)
  7265  001C5A  0100               	movlb	0	; () banked
  7266  001C5C  51C7               	movf	_USBStatusStageTimeoutCounter& (0+255),w,b
  7267  001C5E  A4D8               	btfss	status,2,c
  7268                           
  7269                           ; BSR set to: 0
  7270                           ;usb_device.c: 754: {
  7271                           ;usb_device.c: 755: USBStatusStageTimeoutCounter--;
  7272  001C60  07C7               	decf	_USBStatusStageTimeoutCounter& (0+255),f,b
  7273                           
  7274                           ; BSR set to: 0
  7275                           ;usb_device.c: 756: }
  7276                           ;usb_device.c: 762: if(USBStatusStageTimeoutCounter == 0)
  7277                           
  7278                           ; BSR set to: 0
  7279  001C62  51C7               	movf	_USBStatusStageTimeoutCounter& (0+255),w,b
  7280  001C64  B4D8               	btfsc	status,2,c
  7281                           
  7282                           ; BSR set to: 0
  7283                           ;usb_device.c: 763: {
  7284                           ;usb_device.c: 764: USBCtrlEPAllowStatusStage();
  7285  001C66  ECA3  F01B         	call	_USBCtrlEPAllowStatusStage	;wreg free
  7286  001C6A                     l1611:
  7287                           
  7288                           ;usb_device.c: 765: }
  7289                           ;usb_device.c: 767: }
  7290                           ;usb_device.c: 769: if(UIRbits.STALLIF && UIEbits.STALLIE)
  7291  001C6A  AA62               	btfss	3938,5,c	;volatile
  7292  001C6C  D004               	goto	l1612
  7293  001C6E  010F               	movlb	15	; () banked
  7294  001C70  BB36               	btfsc	54,5,b	;volatile
  7295                           
  7296                           ; BSR set to: 15
  7297                           ;usb_device.c: 770: {
  7298                           ;usb_device.c: 771: USBStallHandler();
  7299  001C72  EC94  F02A         	call	_USBStallHandler	;wreg free
  7300  001C76                     l1612:
  7301                           
  7302                           ;usb_device.c: 772: }
  7303                           ;usb_device.c: 774: if(UIRbits.UERRIF && UIEbits.UERRIE)
  7304  001C76  A262               	btfss	3938,1,c	;volatile
  7305  001C78  D013               	goto	l1613
  7306  001C7A  010F               	movlb	15	; () banked
  7307  001C7C  A336               	btfss	54,1,b	;volatile
  7308  001C7E  D010               	goto	l1613
  7309                           
  7310                           ; BSR set to: 15
  7311                           ;usb_device.c: 775: {
  7312                           ;usb_device.c: 776: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
  7313  001C80  0E7F               	movlw	127
  7314  001C82  0100               	movlb	0	; () banked
  7315  001C84  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  7316  001C86  6989               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  7317  001C88  0E00               	movlw	0
  7318  001C8A  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  7319  001C8C  0E00               	movlw	0
  7320  001C8E  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  7321  001C90  0E00               	movlw	0
  7322  001C92  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  7323  001C94  0E01               	movlw	1
  7324  001C96  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  7325  001C98  EC31  F027         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7326                           
  7327                           ;usb_device.c: 777: {UEIR = 0;};
  7328  001C9C  0E00               	movlw	0
  7329  001C9E  6E63               	movwf	3939,c	;volatile
  7330  001CA0                     l1613:
  7331                           
  7332                           ;usb_device.c: 785: }
  7333                           ;usb_device.c: 792: if(USBDeviceState < DEFAULT_STATE)
  7334  001CA0  0E04               	movlw	4
  7335  001CA2  0100               	movlb	0	; () banked
  7336  001CA4  61CB               	cpfslt	_USBDeviceState& (0+255),b
  7337  001CA6  D002               	goto	l1614
  7338                           
  7339                           ; BSR set to: 0
  7340                           ;usb_device.c: 793: {
  7341                           ;usb_device.c: 794: {PIR2bits.USBIF = 0;};
  7342  001CA8  98A1               	bcf	4001,4,c	;volatile
  7343                           
  7344                           ;usb_device.c: 795: return;
  7345  001CAA  0012               	return	
  7346  001CAC                     l1614:
  7347                           
  7348                           ; BSR set to: 0
  7349                           ;usb_device.c: 796: }
  7350                           ;usb_device.c: 801: if(UIEbits.TRNIE)
  7351  001CAC  010F               	movlb	15	; () banked
  7352  001CAE  A736               	btfss	54,3,b	;volatile
  7353  001CB0  D03E               	goto	u13030
  7354                           
  7355                           ; BSR set to: 15
  7356                           ;usb_device.c: 802: {
  7357                           ;usb_device.c: 803: for(i = 0; i < 4u; i++)
  7358  001CB2  0E00               	movlw	0
  7359  001CB4  0100               	movlb	0	; () banked
  7360  001CB6  6F98               	movwf	USBDeviceTasks@i& (0+255),b
  7361  001CB8                     l13659:
  7362                           
  7363                           ; BSR set to: 0
  7364  001CB8  0E03               	movlw	3
  7365  001CBA  6598               	cpfsgt	USBDeviceTasks@i& (0+255),b
  7366  001CBC  D001               	goto	l1616
  7367  001CBE  D037               	goto	u13030
  7368  001CC0                     l1616:
  7369                           
  7370                           ; BSR set to: 0
  7371                           ;usb_device.c: 804: {
  7372                           ;usb_device.c: 805: if(UIRbits.TRNIF)
  7373  001CC0  A662               	btfss	3938,3,c	;volatile
  7374  001CC2  D035               	goto	u13030
  7375                           
  7376                           ; BSR set to: 0
  7377                           ;usb_device.c: 806: {
  7378                           ;usb_device.c: 808: USTATcopy.Val = USTAT;
  7379  001CC4  CF64 F0D3          	movff	3940,_USTATcopy	;volatile
  7380                           
  7381                           ; BSR set to: 0
  7382                           ;usb_device.c: 809: endpoint_number = USTATcopy.endpoint_number;
  7383  001CC8  31D3               	rrcf	_USTATcopy& (0+255),w,b
  7384  001CCA  32E8               	rrcf	wreg,f,c
  7385  001CCC  32E8               	rrcf	wreg,f,c
  7386  001CCE  0B0F               	andlw	15
  7387  001CD0  6FC8               	movwf	_endpoint_number& (0+255),b
  7388                           
  7389                           ; BSR set to: 0
  7390                           ;usb_device.c: 811: (UIR &= 0xF7);
  7391  001CD2  9662               	bcf	3938,3,c	;volatile
  7392                           
  7393                           ; BSR set to: 0
  7394                           ;usb_device.c: 816: if(USTATcopy.direction == 0)
  7395  001CD4  B5D3               	btfsc	_USTATcopy& (0+255),2,b
  7396  001CD6  D007               	goto	l1619
  7397                           
  7398                           ; BSR set to: 0
  7399                           ;usb_device.c: 817: {
  7400                           ;usb_device.c: 818: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
  7401  001CD8  51C8               	movf	_endpoint_number& (0+255),w,b
  7402  001CDA  0D01               	mullw	1
  7403  001CDC  0ECE               	movlw	low _ep_data_out
  7404  001CDE  24F3               	addwf	prodl,w,c
  7405  001CE0  6ED9               	movwf	fsr2l,c
  7406  001CE2  0E02               	movlw	high _ep_data_out
  7407  001CE4  D007               	goto	L3
  7408  001CE6                     l1619:
  7409                           
  7410                           ;usb_device.c: 820: else
  7411                           ;usb_device.c: 821: {
  7412                           ;usb_device.c: 822: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
  7413                           
  7414                           ; BSR set to: 2
  7415  001CE6  0100               	movlb	0	; () banked
  7416  001CE8  51C8               	movf	_endpoint_number& (0+255),w,b
  7417  001CEA  0D01               	mullw	1
  7418  001CEC  0ED1               	movlw	low _ep_data_in
  7419  001CEE  24F3               	addwf	prodl,w,c
  7420  001CF0  6ED9               	movwf	fsr2l,c
  7421  001CF2  0E02               	movlw	high _ep_data_in
  7422  001CF4                     L3:
  7423  001CF4  20F4               	addwfc	prodh,w,c
  7424  001CF6  6EDA               	movwf	fsr2h,c
  7425  001CF8  0102               	movlb	2	; () banked
  7426  001CFA  70DF               	btg	indf2,0,c
  7427                           
  7428                           ; BSR set to: 2
  7429                           ;usb_device.c: 823: }
  7430                           ;usb_device.c: 828: if(endpoint_number == 0)
  7431                           
  7432                           ; BSR set to: 2
  7433  001CFC  0100               	movlb	0	; () banked
  7434  001CFE  51C8               	movf	_endpoint_number& (0+255),w,b
  7435  001D00  A4D8               	btfss	status,2,c
  7436  001D02  D003               	goto	l1621
  7437                           
  7438                           ; BSR set to: 0
  7439                           ;usb_device.c: 829: {
  7440                           ;usb_device.c: 830: USBCtrlEPService();
  7441  001D04  EC55  F023         	call	_USBCtrlEPService	;wreg free
  7442                           
  7443                           ;usb_device.c: 831: }
  7444  001D08  D00F               	goto	l1623
  7445  001D0A                     l1621:
  7446                           
  7447                           ;usb_device.c: 832: else
  7448                           ;usb_device.c: 833: {
  7449                           ;usb_device.c: 834: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
  7450  001D0A  0E00               	movlw	0
  7451  001D0C  0100               	movlb	0	; () banked
  7452  001D0E  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  7453  001D10  0E72               	movlw	114
  7454  001D12  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  7455  001D14  0ED3               	movlw	low _USTATcopy
  7456  001D16  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  7457  001D18  0E00               	movlw	high _USTATcopy
  7458  001D1A  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  7459  001D1C  0E00               	movlw	0
  7460  001D1E  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  7461  001D20  0E00               	movlw	0
  7462  001D22  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  7463  001D24  EC31  F027         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7464  001D28                     l1623:
  7465  001D28  0100               	movlb	0	; () banked
  7466  001D2A  2B98               	incf	USBDeviceTasks@i& (0+255),f,b
  7467  001D2C  D7C5               	goto	l13659
  7468  001D2E                     u13030:
  7469                           
  7470                           ;usb_device.c: 840: }
  7471                           ;usb_device.c: 841: }
  7472                           ;usb_device.c: 842: }
  7473                           ;usb_device.c: 844: {PIR2bits.USBIF = 0;};
  7474                           
  7475                           ; BSR set to: 0
  7476  001D2E  98A1               	bcf	4001,4,c	;volatile
  7477  001D30  0012               	return		;funcret
  7478  001D32                     __end_of_USBDeviceTasks:
  7479                           	opt stack 0
  7480                           tosu	equ	0xFFF
  7481                           tosh	equ	0xFFE
  7482                           tosl	equ	0xFFD
  7483                           pclath	equ	0xFFA
  7484                           tblptru	equ	0xFF8
  7485                           tblptrh	equ	0xFF7
  7486                           tblptrl	equ	0xFF6
  7487                           tablat	equ	0xFF5
  7488                           prodh	equ	0xFF4
  7489                           prodl	equ	0xFF3
  7490                           intcon	equ	0xFF2
  7491                           intcon2	equ	0xFF1
  7492                           intcon3	equ	0xFF0
  7493                           postinc0	equ	0xFEE
  7494                           plusw0	equ	0xFEB
  7495                           wreg	equ	0xFE8
  7496                           postinc1	equ	0xFE6
  7497                           postdec1	equ	0xFE5
  7498                           plusw1	equ	0xFE3
  7499                           fsr1h	equ	0xFE2
  7500                           fsr1l	equ	0xFE1
  7501                           indf2	equ	0xFDF
  7502                           postinc2	equ	0xFDE
  7503                           postdec2	equ	0xFDD
  7504                           plusw2	equ	0xFDB
  7505                           fsr2h	equ	0xFDA
  7506                           fsr2l	equ	0xFD9
  7507                           status	equ	0xFD8
  7508                           
  7509 ;; *************** function _USBWakeFromSuspend *****************
  7510 ;; Defined at:
  7511 ;;		line 2321 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  7512 ;; Parameters:    Size  Location     Type
  7513 ;;		None
  7514 ;; Auto vars:     Size  Location     Type
  7515 ;;		None
  7516 ;; Return value:  Size  Location     Type
  7517 ;;                  1    wreg      void 
  7518 ;; Registers used:
  7519 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7520 ;; Tracked objects:
  7521 ;;		On entry : 0/0
  7522 ;;		On exit  : 0/0
  7523 ;;		Unchanged: 0/0
  7524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7525 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7526 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7528 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7529 ;;Total ram usage:        0 bytes
  7530 ;; Hardware stack levels used:    1
  7531 ;; Hardware stack levels required when called:   15
  7532 ;; This function calls:
  7533 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7534 ;; This function is called by:
  7535 ;;		_USBDeviceTasks
  7536 ;; This function uses a non-reentrant model
  7537 ;;
  7538                           
  7539                           	psect	text29
  7540  00586E                     __ptext29:
  7541                           	opt stack 0
  7542  00586E                     _USBWakeFromSuspend:
  7543                           	opt stack 11
  7544                           
  7545                           ;usb_device.c: 2323: USBBusIsSuspended = 0;
  7546                           
  7547                           ;incstack = 0
  7548  00586E  0E00               	movlw	0
  7549  005870  0101               	movlb	1	; () banked
  7550  005872  6FE6               	movwf	_USBBusIsSuspended& (0+255),b
  7551                           
  7552                           ; BSR set to: 1
  7553                           ;usb_device.c: 2329: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
  7554  005874  0E00               	movlw	0
  7555  005876  0100               	movlb	0	; () banked
  7556  005878  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  7557  00587A  0E74               	movlw	116
  7558  00587C  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  7559  00587E  0E00               	movlw	0
  7560  005880  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  7561  005882  0E00               	movlw	0
  7562  005884  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  7563  005886  0E00               	movlw	0
  7564  005888  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  7565  00588A  0E00               	movlw	0
  7566  00588C  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  7567  00588E  EC31  F027         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7568                           
  7569                           ;usb_device.c: 2336: UCONbits.SUSPND = 0;
  7570  005892  9265               	bcf	3941,1,c	;volatile
  7571                           
  7572                           ;usb_device.c: 2341: UIEbits.ACTVIE = 0;
  7573  005894  010F               	movlb	15	; () banked
  7574  005896  9536               	bcf	54,2,b	;volatile
  7575                           
  7576                           ;usb_device.c: 2359: while(UIRbits.ACTVIF)
  7577  005898  D001               	goto	l1751
  7578  00589A                     
  7579                           ;usb_device.c: 2361: {
  7580                           ;usb_device.c: 2362: (UIR &= 0xFB);
  7581                           
  7582                           ; BSR set to: 15
  7583  00589A  9462               	bcf	3938,2,c	;volatile
  7584  00589C                     l1751:
  7585  00589C  B462               	btfsc	3938,2,c	;volatile
  7586  00589E  D7FD               	goto	l1752
  7587                           
  7588                           ;usb_device.c: 2363: }
  7589                           ;usb_device.c: 2365: USBTicksSinceSuspendEnd = 0;
  7590  0058A0  0E00               	movlw	0
  7591  0058A2  0101               	movlb	1	; () banked
  7592  0058A4  6FE4               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
  7593                           
  7594                           ; BSR set to: 1
  7595  0058A6  0012               	return		;funcret
  7596  0058A8                     __end_of_USBWakeFromSuspend:
  7597                           	opt stack 0
  7598                           tosu	equ	0xFFF
  7599                           tosh	equ	0xFFE
  7600                           tosl	equ	0xFFD
  7601                           pclath	equ	0xFFA
  7602                           tblptru	equ	0xFF8
  7603                           tblptrh	equ	0xFF7
  7604                           tblptrl	equ	0xFF6
  7605                           tablat	equ	0xFF5
  7606                           prodh	equ	0xFF4
  7607                           prodl	equ	0xFF3
  7608                           intcon	equ	0xFF2
  7609                           intcon2	equ	0xFF1
  7610                           intcon3	equ	0xFF0
  7611                           postinc0	equ	0xFEE
  7612                           plusw0	equ	0xFEB
  7613                           wreg	equ	0xFE8
  7614                           postinc1	equ	0xFE6
  7615                           postdec1	equ	0xFE5
  7616                           plusw1	equ	0xFE3
  7617                           fsr1h	equ	0xFE2
  7618                           fsr1l	equ	0xFE1
  7619                           indf2	equ	0xFDF
  7620                           postinc2	equ	0xFDE
  7621                           postdec2	equ	0xFDD
  7622                           plusw2	equ	0xFDB
  7623                           fsr2h	equ	0xFDA
  7624                           fsr2l	equ	0xFD9
  7625                           status	equ	0xFD8
  7626                           
  7627 ;; *************** function _USBSuspend *****************
  7628 ;; Defined at:
  7629 ;;		line 2263 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  7630 ;; Parameters:    Size  Location     Type
  7631 ;;		None
  7632 ;; Auto vars:     Size  Location     Type
  7633 ;;		None
  7634 ;; Return value:  Size  Location     Type
  7635 ;;                  1    wreg      void 
  7636 ;; Registers used:
  7637 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7638 ;; Tracked objects:
  7639 ;;		On entry : 0/0
  7640 ;;		On exit  : 0/0
  7641 ;;		Unchanged: 0/0
  7642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7644 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7646 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7647 ;;Total ram usage:        0 bytes
  7648 ;; Hardware stack levels used:    1
  7649 ;; Hardware stack levels required when called:   15
  7650 ;; This function calls:
  7651 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7652 ;; This function is called by:
  7653 ;;		_USBDeviceTasks
  7654 ;; This function uses a non-reentrant model
  7655 ;;
  7656                           
  7657                           	psect	text30
  7658  005986                     __ptext30:
  7659                           	opt stack 0
  7660  005986                     _USBSuspend:
  7661                           	opt stack 11
  7662                           
  7663                           ;usb_device.c: 2288: UIEbits.ACTVIE = 1;
  7664                           
  7665                           ; BSR set to: 1
  7666                           ;incstack = 0
  7667  005986  010F               	movlb	15	; () banked
  7668  005988  8536               	bsf	54,2,b	;volatile
  7669                           
  7670                           ; BSR set to: 15
  7671                           ;usb_device.c: 2289: (UIR &= 0xEF);
  7672  00598A  9862               	bcf	3938,4,c	;volatile
  7673                           
  7674                           ; BSR set to: 15
  7675                           ;usb_device.c: 2292: UCONbits.SUSPND = 1;
  7676  00598C  8265               	bsf	3941,1,c	;volatile
  7677                           
  7678                           ; BSR set to: 15
  7679                           ;usb_device.c: 2295: USBBusIsSuspended = 1;
  7680  00598E  0E01               	movlw	1
  7681  005990  0101               	movlb	1	; () banked
  7682  005992  6FE6               	movwf	_USBBusIsSuspended& (0+255),b
  7683                           
  7684                           ; BSR set to: 1
  7685                           ;usb_device.c: 2296: USBTicksSinceSuspendEnd = 0;
  7686  005994  0E00               	movlw	0
  7687  005996  6FE4               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
  7688                           
  7689                           ; BSR set to: 1
  7690                           ;usb_device.c: 2303: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
  7691  005998  0E00               	movlw	0
  7692  00599A  0100               	movlb	0	; () banked
  7693  00599C  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  7694  00599E  0E75               	movlw	117
  7695  0059A0  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  7696  0059A2  0E00               	movlw	0
  7697  0059A4  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  7698  0059A6  0E00               	movlw	0
  7699  0059A8  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  7700  0059AA  0E00               	movlw	0
  7701  0059AC  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  7702  0059AE  0E00               	movlw	0
  7703  0059B0  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  7704  0059B2  EC31  F027         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7705  0059B6  0012               	return		;funcret
  7706  0059B8                     __end_of_USBSuspend:
  7707                           	opt stack 0
  7708                           tosu	equ	0xFFF
  7709                           tosh	equ	0xFFE
  7710                           tosl	equ	0xFFD
  7711                           pclath	equ	0xFFA
  7712                           tblptru	equ	0xFF8
  7713                           tblptrh	equ	0xFF7
  7714                           tblptrl	equ	0xFF6
  7715                           tablat	equ	0xFF5
  7716                           prodh	equ	0xFF4
  7717                           prodl	equ	0xFF3
  7718                           intcon	equ	0xFF2
  7719                           intcon2	equ	0xFF1
  7720                           intcon3	equ	0xFF0
  7721                           postinc0	equ	0xFEE
  7722                           plusw0	equ	0xFEB
  7723                           wreg	equ	0xFE8
  7724                           postinc1	equ	0xFE6
  7725                           postdec1	equ	0xFE5
  7726                           plusw1	equ	0xFE3
  7727                           fsr1h	equ	0xFE2
  7728                           fsr1l	equ	0xFE1
  7729                           indf2	equ	0xFDF
  7730                           postinc2	equ	0xFDE
  7731                           postdec2	equ	0xFDD
  7732                           plusw2	equ	0xFDB
  7733                           fsr2h	equ	0xFDA
  7734                           fsr2l	equ	0xFD9
  7735                           status	equ	0xFD8
  7736                           
  7737 ;; *************** function _USBStallHandler *****************
  7738 ;; Defined at:
  7739 ;;		line 2220 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  7740 ;; Parameters:    Size  Location     Type
  7741 ;;		None
  7742 ;; Auto vars:     Size  Location     Type
  7743 ;;		None
  7744 ;; Return value:  Size  Location     Type
  7745 ;;                  1    wreg      void 
  7746 ;; Registers used:
  7747 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7748 ;; Tracked objects:
  7749 ;;		On entry : 0/0
  7750 ;;		On exit  : 0/0
  7751 ;;		Unchanged: 0/0
  7752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7753 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7754 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7755 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7756 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7757 ;;Total ram usage:        1 bytes
  7758 ;; Hardware stack levels used:    1
  7759 ;; Hardware stack levels required when called:   11
  7760 ;; This function calls:
  7761 ;;		Nothing
  7762 ;; This function is called by:
  7763 ;;		_USBDeviceTasks
  7764 ;; This function uses a non-reentrant model
  7765 ;;
  7766                           
  7767                           	psect	text31
  7768  005528                     __ptext31:
  7769                           	opt stack 0
  7770  005528                     _USBStallHandler:
  7771                           	opt stack 15
  7772                           
  7773                           ;usb_device.c: 2232: if(UEP0bits.EPSTALL == 1)
  7774                           
  7775                           ;incstack = 0
  7776  005528  010F               	movlb	15	; () banked
  7777  00552A  A126               	btfss	38,0,b	;volatile
  7778  00552C  D01D               	goto	l1743
  7779                           
  7780                           ; BSR set to: 15
  7781                           ;usb_device.c: 2233: {
  7782                           ;usb_device.c: 2235: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
  7783  00552E  C0BC  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  7784  005532  C0BD  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  7785  005536  0E80               	movlw	128
  7786  005538  18DE               	xorwf	postinc2,w,c
  7787  00553A  A4D8               	btfss	status,2,c
  7788  00553C  D014               	goto	l1744
  7789                           
  7790                           ; BSR set to: 15
  7791  00553E  C0B2  FFD9         	movff	_pBDTEntryIn,fsr2l
  7792  005542  C0B3  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  7793  005546  0E84               	movlw	132
  7794  005548  18DE               	xorwf	postinc2,w,c
  7795  00554A  A4D8               	btfss	status,2,c
  7796  00554C  D00C               	goto	l1744
  7797                           
  7798                           ; BSR set to: 15
  7799                           ;usb_device.c: 2236: {
  7800                           ;usb_device.c: 2238: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  7801  00554E  C0BC  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  7802  005552  C0BD  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  7803  005556  0E0C               	movlw	12
  7804  005558  6EDF               	movwf	indf2,c
  7805                           
  7806                           ; BSR set to: 15
  7807                           ;usb_device.c: 2239: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
  7808  00555A  C0BC  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  7809  00555E  C0BD  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  7810  005562  0E00               	movlw	0
  7811  005564  8EDB               	bsf	plusw2,7,c
  7812  005566                     l1744:
  7813                           
  7814                           ; BSR set to: 15
  7815                           ;usb_device.c: 2240: }
  7816                           ;usb_device.c: 2241: UEP0bits.EPSTALL = 0;
  7817                           
  7818                           ; BSR set to: 15
  7819  005566  9126               	bcf	38,0,b	;volatile
  7820  005568                     l1743:
  7821                           
  7822                           ; BSR set to: 15
  7823                           ;usb_device.c: 2242: }
  7824                           ;usb_device.c: 2244: (UIR &= 0xDF);
  7825  005568  9A62               	bcf	3938,5,c	;volatile
  7826                           
  7827                           ; BSR set to: 15
  7828  00556A  0012               	return		;funcret
  7829  00556C                     __end_of_USBStallHandler:
  7830                           	opt stack 0
  7831                           tosu	equ	0xFFF
  7832                           tosh	equ	0xFFE
  7833                           tosl	equ	0xFFD
  7834                           pclath	equ	0xFFA
  7835                           tblptru	equ	0xFF8
  7836                           tblptrh	equ	0xFF7
  7837                           tblptrl	equ	0xFF6
  7838                           tablat	equ	0xFF5
  7839                           prodh	equ	0xFF4
  7840                           prodl	equ	0xFF3
  7841                           intcon	equ	0xFF2
  7842                           intcon2	equ	0xFF1
  7843                           intcon3	equ	0xFF0
  7844                           postinc0	equ	0xFEE
  7845                           plusw0	equ	0xFEB
  7846                           wreg	equ	0xFE8
  7847                           postinc1	equ	0xFE6
  7848                           postdec1	equ	0xFE5
  7849                           plusw1	equ	0xFE3
  7850                           fsr1h	equ	0xFE2
  7851                           fsr1l	equ	0xFE1
  7852                           indf2	equ	0xFDF
  7853                           postinc2	equ	0xFDE
  7854                           postdec2	equ	0xFDD
  7855                           plusw2	equ	0xFDB
  7856                           fsr2h	equ	0xFDA
  7857                           fsr2l	equ	0xFD9
  7858                           status	equ	0xFD8
  7859                           
  7860 ;; *************** function _USBIncrement1msInternalTimers *****************
  7861 ;; Defined at:
  7862 ;;		line 3042 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  7863 ;; Parameters:    Size  Location     Type
  7864 ;;		None
  7865 ;; Auto vars:     Size  Location     Type
  7866 ;;		None
  7867 ;; Return value:  Size  Location     Type
  7868 ;;                  1    wreg      void 
  7869 ;; Registers used:
  7870 ;;		wreg, status,2, status,0
  7871 ;; Tracked objects:
  7872 ;;		On entry : 0/0
  7873 ;;		On exit  : 0/0
  7874 ;;		Unchanged: 0/0
  7875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7876 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7879 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7880 ;;Total ram usage:        0 bytes
  7881 ;; Hardware stack levels used:    1
  7882 ;; Hardware stack levels required when called:   11
  7883 ;; This function calls:
  7884 ;;		Nothing
  7885 ;; This function is called by:
  7886 ;;		_USBDeviceTasks
  7887 ;; This function uses a non-reentrant model
  7888 ;;
  7889                           
  7890                           	psect	text32
  7891  005C86                     __ptext32:
  7892                           	opt stack 0
  7893  005C86                     _USBIncrement1msInternalTimers:
  7894                           	opt stack 15
  7895                           
  7896                           ;usb_device.c: 3050: USB1msTickCount++;
  7897                           
  7898                           ; BSR set to: 15
  7899                           ;incstack = 0
  7900  005C86  0E01               	movlw	1
  7901  005C88  0103               	movlb	3	; () banked
  7902  005C8A  2718               	addwf	_USB1msTickCount& (0+255),f,b
  7903  005C8C  0E00               	movlw	0
  7904  005C8E  2319               	addwfc	(_USB1msTickCount+1)& (0+255),f,b
  7905  005C90  231A               	addwfc	(_USB1msTickCount+2)& (0+255),f,b
  7906  005C92  231B               	addwfc	(_USB1msTickCount+3)& (0+255),f,b
  7907                           
  7908                           ; BSR set to: 3
  7909                           ;usb_device.c: 3051: if(USBBusIsSuspended == 0)
  7910  005C94  0101               	movlb	1	; () banked
  7911  005C96  51E6               	movf	_USBBusIsSuspended& (0+255),w,b
  7912  005C98  A4D8               	btfss	status,2,c
  7913  005C9A  0012               	return	
  7914                           
  7915                           ; BSR set to: 1
  7916                           ;usb_device.c: 3052: {
  7917                           ;usb_device.c: 3053: USBTicksSinceSuspendEnd++;
  7918  005C9C  2BE4               	incf	_USBTicksSinceSuspendEnd& (0+255),f,b
  7919                           
  7920                           ; BSR set to: 1
  7921                           ;usb_device.c: 3055: if(USBTicksSinceSuspendEnd == 0)
  7922  005C9E  51E4               	movf	_USBTicksSinceSuspendEnd& (0+255),w,b
  7923  005CA0  A4D8               	btfss	status,2,c
  7924  005CA2  0012               	return	
  7925                           
  7926                           ; BSR set to: 1
  7927                           ;usb_device.c: 3056: {
  7928                           ;usb_device.c: 3057: USBTicksSinceSuspendEnd = 255;
  7929  005CA4  69E4               	setf	_USBTicksSinceSuspendEnd& (0+255),b
  7930                           
  7931                           ; BSR set to: 1
  7932  005CA6  0012               	return	
  7933  005CA8                     __end_of_USBIncrement1msInternalTimers:
  7934                           	opt stack 0
  7935                           tosu	equ	0xFFF
  7936                           tosh	equ	0xFFE
  7937                           tosl	equ	0xFFD
  7938                           pclath	equ	0xFFA
  7939                           tblptru	equ	0xFF8
  7940                           tblptrh	equ	0xFF7
  7941                           tblptrl	equ	0xFF6
  7942                           tablat	equ	0xFF5
  7943                           prodh	equ	0xFF4
  7944                           prodl	equ	0xFF3
  7945                           intcon	equ	0xFF2
  7946                           intcon2	equ	0xFF1
  7947                           intcon3	equ	0xFF0
  7948                           postinc0	equ	0xFEE
  7949                           plusw0	equ	0xFEB
  7950                           wreg	equ	0xFE8
  7951                           postinc1	equ	0xFE6
  7952                           postdec1	equ	0xFE5
  7953                           plusw1	equ	0xFE3
  7954                           fsr1h	equ	0xFE2
  7955                           fsr1l	equ	0xFE1
  7956                           indf2	equ	0xFDF
  7957                           postinc2	equ	0xFDE
  7958                           postdec2	equ	0xFDD
  7959                           plusw2	equ	0xFDB
  7960                           fsr2h	equ	0xFDA
  7961                           fsr2l	equ	0xFD9
  7962                           status	equ	0xFD8
  7963                           
  7964 ;; *************** function _USBDeviceInit *****************
  7965 ;; Defined at:
  7966 ;;		line 295 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  7967 ;; Parameters:    Size  Location     Type
  7968 ;;		None
  7969 ;; Auto vars:     Size  Location     Type
  7970 ;;  i               1   37[BANK0 ] unsigned char 
  7971 ;; Return value:  Size  Location     Type
  7972 ;;                  1    wreg      void 
  7973 ;; Registers used:
  7974 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7975 ;; Tracked objects:
  7976 ;;		On entry : 0/0
  7977 ;;		On exit  : 0/0
  7978 ;;		Unchanged: 0/0
  7979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7980 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7981 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7982 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7983 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7984 ;;Total ram usage:        1 bytes
  7985 ;; Hardware stack levels used:    1
  7986 ;; Hardware stack levels required when called:   12
  7987 ;; This function calls:
  7988 ;;		_memset
  7989 ;; This function is called by:
  7990 ;;		_USBDeviceTasks
  7991 ;;		_UsbDevice_MainTask
  7992 ;; This function uses a non-reentrant model
  7993 ;;
  7994                           
  7995                           	psect	text33
  7996  001FFE                     __ptext33:
  7997                           	opt stack 0
  7998  001FFE                     _USBDeviceInit:
  7999                           	opt stack 14
  8000                           
  8001                           ;usb_device.c: 297: uint8_t i;
  8002                           ;usb_device.c: 299: {PIE2bits.USBIE = 0;};
  8003                           
  8004                           ; BSR set to: 1
  8005                           ;incstack = 0
  8006  001FFE  98A0               	bcf	4000,4,c	;volatile
  8007                           
  8008                           ;usb_device.c: 303: ;
  8009                           ;usb_device.c: 306: {UEIR = 0;};
  8010  002000  0E00               	movlw	0
  8011  002002  6E63               	movwf	3939,c	;volatile
  8012                           
  8013                           ;usb_device.c: 309: {UIR = 0;};
  8014  002004  0E00               	movlw	0
  8015  002006  6E62               	movwf	3938,c	;volatile
  8016                           
  8017                           ;usb_device.c: 312: UEP0 = 0;
  8018  002008  0E00               	movlw	0
  8019  00200A  010F               	movlb	15	; () banked
  8020  00200C  6F26               	movwf	38,b	;volatile
  8021                           
  8022                           ; BSR set to: 15
  8023                           ;usb_device.c: 314: memset((void*)&UEP1,0x00,(2));;
  8024  00200E  0E27               	movlw	39
  8025  002010  0100               	movlb	0	; () banked
  8026  002012  6F7D               	movwf	memset@p1& (0+255),b
  8027  002014  0E0F               	movlw	15
  8028  002016  6F7E               	movwf	(memset@p1+1)& (0+255),b
  8029  002018  0E00               	movlw	0
  8030  00201A  6F80               	movwf	(memset@c+1)& (0+255),b
  8031  00201C  0E00               	movlw	0
  8032  00201E  6F7F               	movwf	memset@c& (0+255),b
  8033  002020  0E00               	movlw	0
  8034  002022  6F82               	movwf	(memset@n+1)& (0+255),b
  8035  002024  0E02               	movlw	2
  8036  002026  6F81               	movwf	memset@n& (0+255),b
  8037  002028  EC0D  F02D         	call	_memset	;wreg free
  8038                           
  8039                           ;usb_device.c: 316: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  8040  00202C  0E16               	movlw	22
  8041  00202E  010F               	movlb	15	; () banked
  8042  002030  6F39               	movwf	57,b	;volatile
  8043                           
  8044                           ; BSR set to: 15
  8045  002032  0E9F               	movlw	159
  8046  002034  6F37               	movwf	55,b	;volatile
  8047                           
  8048                           ; BSR set to: 15
  8049  002036  0E7B               	movlw	123
  8050  002038  6F36               	movwf	54,b	;volatile
  8051                           
  8052                           ; BSR set to: 15
  8053                           ;usb_device.c: 319: ;
  8054                           ;usb_device.c: 322: ;
  8055                           ;usb_device.c: 325: for(i = 0; i < (sizeof(BDT)/sizeof(BDT_ENTRY)); i++)
  8056  00203A  0E00               	movlw	0
  8057  00203C  0100               	movlb	0	; () banked
  8058  00203E  6F85               	movwf	USBDeviceInit@i& (0+255),b
  8059  002040                     l12541:
  8060                           
  8061                           ; BSR set to: 0
  8062  002040  0E0B               	movlw	11
  8063  002042  6585               	cpfsgt	USBDeviceInit@i& (0+255),b
  8064  002044  D001               	goto	l1587
  8065  002046  D00E               	goto	u11480
  8066  002048                     l1587:
  8067                           
  8068                           ; BSR set to: 0
  8069                           ;usb_device.c: 326: {
  8070                           ;usb_device.c: 327: BDT[i].Val = 0x00;
  8071                           
  8072                           ; BSR set to: 0
  8073  002048  5185               	movf	USBDeviceInit@i& (0+255),w,b
  8074  00204A  0D04               	mullw	4
  8075  00204C  0E00               	movlw	0
  8076  00204E  24F3               	addwf	prodl,w,c
  8077  002050  6ED9               	movwf	fsr2l,c
  8078  002052  0E04               	movlw	4
  8079  002054  20F4               	addwfc	prodh,w,c
  8080  002056  6EDA               	movwf	fsr2h,c
  8081  002058  6ADE               	clrf	postinc2,c
  8082  00205A  6ADE               	clrf	postinc2,c
  8083  00205C  6ADE               	clrf	postinc2,c
  8084  00205E  6ADD               	clrf	postdec2,c
  8085                           
  8086                           ; BSR set to: 0
  8087  002060  2B85               	incf	USBDeviceInit@i& (0+255),f,b
  8088  002062  D7EE               	goto	l12541
  8089  002064                     u11480:
  8090                           
  8091                           ; BSR set to: 0
  8092                           ;usb_device.c: 328: }
  8093                           ;usb_device.c: 331: UCONbits.PPBRST = 1;
  8094  002064  8C65               	bsf	3941,6,c	;volatile
  8095                           
  8096                           ; BSR set to: 0
  8097                           ;usb_device.c: 334: UADDR = 0x00;
  8098  002066  0E00               	movlw	0
  8099  002068  010F               	movlb	15	; () banked
  8100  00206A  6F38               	movwf	56,b	;volatile
  8101                           
  8102                           ; BSR set to: 15
  8103                           ;usb_device.c: 337: UCONbits.PKTDIS = 0;
  8104  00206C  9865               	bcf	3941,4,c	;volatile
  8105                           
  8106                           ; BSR set to: 15
  8107                           ;usb_device.c: 340: UCONbits.PPBRST = 0;
  8108  00206E  9C65               	bcf	3941,6,c	;volatile
  8109  002070                     
  8110                           ;usb_device.c: 344: {
  8111                           ;usb_device.c: 345: (UIR &= 0xF7);
  8112                           
  8113                           ; BSR set to: 15
  8114  002070  9662               	bcf	3938,3,c	;volatile
  8115                           
  8116                           ;usb_device.c: 347: inPipes[0].info.Val = 0;
  8117  002072  0E00               	movlw	0
  8118  002074  0100               	movlb	0	; () banked
  8119  002076  6FAF               	movwf	(_inPipes+3)& (0+255),b
  8120                           
  8121                           ; BSR set to: 0
  8122                           ;usb_device.c: 348: outPipes[0].info.Val = 0;
  8123  002078  0E00               	movlw	0
  8124  00207A  0101               	movlb	1	; () banked
  8125  00207C  6FCC               	movwf	(_outPipes+3)& (0+255),b
  8126                           
  8127                           ; BSR set to: 1
  8128                           ;usb_device.c: 349: outPipes[0].wCount.Val = 0;
  8129  00207E  0E00               	movlw	0
  8130  002080  6FCE               	movwf	(_outPipes+5)& (0+255),b
  8131  002082  0E00               	movlw	0
  8132  002084  6FCD               	movwf	(_outPipes+4)& (0+255),b
  8133                           
  8134                           ; BSR set to: 1
  8135                           ;usb_device.c: 350: }while(UIRbits.TRNIF == 1);
  8136  002086  B662               	btfsc	3938,3,c	;volatile
  8137  002088  D7F3               	goto	l1589
  8138                           
  8139                           ; BSR set to: 1
  8140                           ;usb_device.c: 354: USBStatusStageEnabledFlag1 = 1;
  8141                           
  8142                           ; BSR set to: 1
  8143  00208A  0E01               	movlw	1
  8144  00208C  0100               	movlb	0	; () banked
  8145  00208E  6FC5               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
  8146                           
  8147                           ;usb_device.c: 355: USBStatusStageEnabledFlag2 = 1;
  8148  002090  0E01               	movlw	1
  8149  002092  6FC4               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
  8150                           
  8151                           ;usb_device.c: 357: USBDeferINDataStagePackets = 0;
  8152  002094  0E00               	movlw	0
  8153  002096  6FC3               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
  8154                           
  8155                           ;usb_device.c: 358: USBDeferOUTDataStagePackets = 0;
  8156  002098  0E00               	movlw	0
  8157  00209A  6E25               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
  8158                           
  8159                           ;usb_device.c: 359: USBBusIsSuspended = 0;
  8160  00209C  0E00               	movlw	0
  8161  00209E  0101               	movlb	1	; () banked
  8162  0020A0  6FE6               	movwf	_USBBusIsSuspended& (0+255),b
  8163                           
  8164                           ;usb_device.c: 363: for(i = 0; i < (uint8_t)(2+1u); i++)
  8165  0020A2  0E00               	movlw	0
  8166  0020A4  0100               	movlb	0	; () banked
  8167  0020A6  6F85               	movwf	USBDeviceInit@i& (0+255),b
  8168  0020A8                     l12569:
  8169                           
  8170                           ; BSR set to: 0
  8171  0020A8  0E02               	movlw	2
  8172  0020AA  6585               	cpfsgt	USBDeviceInit@i& (0+255),b
  8173  0020AC  D001               	goto	l1591
  8174  0020AE  D02E               	goto	u11510
  8175  0020B0                     l1591:
  8176                           
  8177                           ; BSR set to: 0
  8178                           ;usb_device.c: 364: {
  8179                           ;usb_device.c: 365: pBDTEntryIn[i] = 0u;
  8180                           
  8181                           ; BSR set to: 0
  8182  0020B0  5185               	movf	USBDeviceInit@i& (0+255),w,b
  8183  0020B2  0D02               	mullw	2
  8184  0020B4  0EB2               	movlw	low _pBDTEntryIn
  8185  0020B6  24F3               	addwf	prodl,w,c
  8186  0020B8  6ED9               	movwf	fsr2l,c
  8187  0020BA  0E00               	movlw	high _pBDTEntryIn
  8188  0020BC  20F4               	addwfc	prodh,w,c
  8189  0020BE  6EDA               	movwf	fsr2h,c
  8190  0020C0  0E00               	movlw	0
  8191  0020C2  6EDE               	movwf	postinc2,c
  8192  0020C4  0E00               	movlw	0
  8193  0020C6  6EDD               	movwf	postdec2,c
  8194                           
  8195                           ;usb_device.c: 366: pBDTEntryOut[i] = 0u;
  8196  0020C8  5185               	movf	USBDeviceInit@i& (0+255),w,b
  8197  0020CA  0D02               	mullw	2
  8198  0020CC  0E0E               	movlw	low _pBDTEntryOut
  8199  0020CE  24F3               	addwf	prodl,w,c
  8200  0020D0  6ED9               	movwf	fsr2l,c
  8201  0020D2  0E03               	movlw	high _pBDTEntryOut
  8202  0020D4  20F4               	addwfc	prodh,w,c
  8203  0020D6  6EDA               	movwf	fsr2h,c
  8204  0020D8  0E00               	movlw	0
  8205  0020DA  6EDE               	movwf	postinc2,c
  8206  0020DC  0E00               	movlw	0
  8207  0020DE  6EDD               	movwf	postdec2,c
  8208                           
  8209                           ;usb_device.c: 367: ep_data_in[i].Val = 0u;
  8210  0020E0  5185               	movf	USBDeviceInit@i& (0+255),w,b
  8211  0020E2  0D01               	mullw	1
  8212  0020E4  0ED1               	movlw	low _ep_data_in
  8213  0020E6  24F3               	addwf	prodl,w,c
  8214  0020E8  6ED9               	movwf	fsr2l,c
  8215  0020EA  0E02               	movlw	high _ep_data_in
  8216  0020EC  20F4               	addwfc	prodh,w,c
  8217  0020EE  6EDA               	movwf	fsr2h,c
  8218  0020F0  0E00               	movlw	0
  8219  0020F2  6EDF               	movwf	indf2,c
  8220                           
  8221                           ;usb_device.c: 368: ep_data_out[i].Val = 0u;
  8222  0020F4  5185               	movf	USBDeviceInit@i& (0+255),w,b
  8223  0020F6  0D01               	mullw	1
  8224  0020F8  0ECE               	movlw	low _ep_data_out
  8225  0020FA  24F3               	addwf	prodl,w,c
  8226  0020FC  6ED9               	movwf	fsr2l,c
  8227  0020FE  0E02               	movlw	high _ep_data_out
  8228  002100  20F4               	addwfc	prodh,w,c
  8229  002102  6EDA               	movwf	fsr2h,c
  8230  002104  0E00               	movlw	0
  8231  002106  6EDF               	movwf	indf2,c
  8232                           
  8233                           ; BSR set to: 0
  8234  002108  2B85               	incf	USBDeviceInit@i& (0+255),f,b
  8235  00210A  D7CE               	goto	l12569
  8236  00210C                     u11510:
  8237                           
  8238                           ; BSR set to: 0
  8239                           ;usb_device.c: 369: }
  8240                           ;usb_device.c: 372: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  8241                           
  8242                           ; BSR set to: 0
  8243  00210C  0E08               	movlw	8
  8244  00210E  6FB2               	movwf	_pBDTEntryIn& (0+255),b
  8245  002110  0E04               	movlw	4
  8246  002112  6FB3               	movwf	(_pBDTEntryIn+1)& (0+255),b
  8247                           
  8248                           ; BSR set to: 0
  8249                           ;usb_device.c: 374: UEP0 = 0x06|0x10;
  8250  002114  0E16               	movlw	22
  8251  002116  010F               	movlb	15	; () banked
  8252  002118  6F26               	movwf	38,b	;volatile
  8253                           
  8254                           ; BSR set to: 15
  8255                           ;usb_device.c: 376: BDT[0].ADR = ((uint16_t)(&SetupPkt));
  8256  00211A  0E04               	movlw	4
  8257  00211C  0104               	movlb	4	; () banked
  8258  00211E  6F03               	movwf	3,b	;volatile
  8259  002120  0E30               	movlw	48
  8260  002122  6F02               	movwf	2,b	;volatile
  8261                           
  8262                           ; BSR set to: 4
  8263                           ;usb_device.c: 377: BDT[0].CNT = 8;
  8264  002124  0E08               	movlw	8
  8265  002126  6F01               	movwf	1,b	;volatile
  8266                           
  8267                           ; BSR set to: 4
  8268                           ;usb_device.c: 378: BDT[0].STAT.Val = 0x00|0x04;
  8269  002128  0E04               	movlw	4
  8270  00212A  6F00               	movwf	0,b	;volatile
  8271                           
  8272                           ; BSR set to: 4
  8273                           ;usb_device.c: 379: BDT[0].STAT.Val |= 0x80;
  8274  00212C  8F00               	bsf	0,7,b	;volatile
  8275                           
  8276                           ; BSR set to: 4
  8277                           ;usb_device.c: 382: USBActiveConfiguration = 0;
  8278  00212E  0E00               	movlw	0
  8279  002130  0100               	movlb	0	; () banked
  8280  002132  6FD4               	movwf	_USBActiveConfiguration& (0+255),b
  8281                           
  8282                           ; BSR set to: 0
  8283                           ;usb_device.c: 384: USB1msTickCount = 0;
  8284  002134  0E00               	movlw	0
  8285  002136  0103               	movlb	3	; () banked
  8286  002138  6F18               	movwf	_USB1msTickCount& (0+255),b
  8287  00213A  0E00               	movlw	0
  8288  00213C  6F19               	movwf	(_USB1msTickCount+1)& (0+255),b
  8289  00213E  0E00               	movlw	0
  8290  002140  6F1A               	movwf	(_USB1msTickCount+2)& (0+255),b
  8291  002142  0E00               	movlw	0
  8292  002144  6F1B               	movwf	(_USB1msTickCount+3)& (0+255),b
  8293                           
  8294                           ; BSR set to: 3
  8295                           ;usb_device.c: 385: USBTicksSinceSuspendEnd = 0;
  8296  002146  0E00               	movlw	0
  8297  002148  0101               	movlb	1	; () banked
  8298  00214A  6FE4               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
  8299                           
  8300                           ; BSR set to: 1
  8301                           ;usb_device.c: 388: USBDeviceState = DETACHED_STATE;
  8302  00214C  0E00               	movlw	0
  8303  00214E  0100               	movlb	0	; () banked
  8304  002150  6FCB               	movwf	_USBDeviceState& (0+255),b
  8305                           
  8306                           ; BSR set to: 0
  8307  002152  0012               	return		;funcret
  8308  002154                     __end_of_USBDeviceInit:
  8309                           	opt stack 0
  8310                           tosu	equ	0xFFF
  8311                           tosh	equ	0xFFE
  8312                           tosl	equ	0xFFD
  8313                           pclath	equ	0xFFA
  8314                           tblptru	equ	0xFF8
  8315                           tblptrh	equ	0xFF7
  8316                           tblptrl	equ	0xFF6
  8317                           tablat	equ	0xFF5
  8318                           prodh	equ	0xFF4
  8319                           prodl	equ	0xFF3
  8320                           intcon	equ	0xFF2
  8321                           intcon2	equ	0xFF1
  8322                           intcon3	equ	0xFF0
  8323                           postinc0	equ	0xFEE
  8324                           plusw0	equ	0xFEB
  8325                           wreg	equ	0xFE8
  8326                           postinc1	equ	0xFE6
  8327                           postdec1	equ	0xFE5
  8328                           plusw1	equ	0xFE3
  8329                           fsr1h	equ	0xFE2
  8330                           fsr1l	equ	0xFE1
  8331                           indf2	equ	0xFDF
  8332                           postinc2	equ	0xFDE
  8333                           postdec2	equ	0xFDD
  8334                           plusw2	equ	0xFDB
  8335                           fsr2h	equ	0xFDA
  8336                           fsr2l	equ	0xFD9
  8337                           status	equ	0xFD8
  8338                           
  8339 ;; *************** function _USBCtrlEPService *****************
  8340 ;; Defined at:
  8341 ;;		line 2390 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8342 ;; Parameters:    Size  Location     Type
  8343 ;;		None
  8344 ;; Auto vars:     Size  Location     Type
  8345 ;;		None
  8346 ;; Return value:  Size  Location     Type
  8347 ;;                  1    wreg      void 
  8348 ;; Registers used:
  8349 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8350 ;; Tracked objects:
  8351 ;;		On entry : 0/0
  8352 ;;		On exit  : 0/0
  8353 ;;		Unchanged: 0/0
  8354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8355 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8356 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8357 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8358 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8359 ;;Total ram usage:        1 bytes
  8360 ;; Hardware stack levels used:    1
  8361 ;; Hardware stack levels required when called:   18
  8362 ;; This function calls:
  8363 ;;		_USBCtrlTrfInHandler
  8364 ;;		_USBCtrlTrfOutHandler
  8365 ;;		_USBCtrlTrfSetupHandler
  8366 ;;		_memcpy
  8367 ;; This function is called by:
  8368 ;;		_USBDeviceTasks
  8369 ;; This function uses a non-reentrant model
  8370 ;;
  8371                           
  8372                           	psect	text34
  8373  0046AA                     __ptext34:
  8374                           	opt stack 0
  8375  0046AA                     _USBCtrlEPService:
  8376                           	opt stack 8
  8377                           
  8378                           ;usb_device.c: 2396: USBStatusStageTimeoutCounter = (uint8_t)45;
  8379                           
  8380                           ; BSR set to: 0
  8381                           ;incstack = 0
  8382  0046AA  0E2D               	movlw	45
  8383  0046AC  0100               	movlb	0	; () banked
  8384  0046AE  6FC7               	movwf	_USBStatusStageTimeoutCounter& (0+255),b
  8385                           
  8386                           ; BSR set to: 0
  8387                           ;usb_device.c: 2400: if((USTATcopy.Val & ~0x02) == 0x00)
  8388  0046B0  C0D3  F097         	movff	_USTATcopy,??_USBCtrlEPService
  8389  0046B4  0EFD               	movlw	253
  8390  0046B6  1797               	andwf	??_USBCtrlEPService& (0+255),f,b
  8391  0046B8  A4D8               	btfss	status,2,c
  8392  0046BA  D038               	goto	l1757
  8393                           
  8394                           ; BSR set to: 0
  8395                           ;usb_device.c: 2401: {
  8396                           ;usb_device.c: 2404: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
  8397  0046BC  C0D3  F097         	movff	_USTATcopy,??_USBCtrlEPService
  8398  0046C0  90D8               	bcf	status,0,c
  8399  0046C2  3397               	rrcf	??_USBCtrlEPService& (0+255),f,b
  8400  0046C4  0E3F               	movlw	63
  8401  0046C6  1797               	andwf	??_USBCtrlEPService& (0+255),f,b
  8402  0046C8  5197               	movf	??_USBCtrlEPService& (0+255),w,b
  8403  0046CA  0D04               	mullw	4
  8404  0046CC  0E00               	movlw	0
  8405  0046CE  24F3               	addwf	prodl,w,c
  8406  0046D0  6FBC               	movwf	_pBDTEntryEP0OutCurrent& (0+255),b
  8407  0046D2  0E04               	movlw	4
  8408  0046D4  20F4               	addwfc	prodh,w,c
  8409  0046D6  6FBD               	movwf	(_pBDTEntryEP0OutCurrent+1)& (0+255),b
  8410                           
  8411                           ; BSR set to: 0
  8412                           ;usb_device.c: 2412: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  8413  0046D8  C0BC  F0BA         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
  8414  0046DC  C0BD  F0BB         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
  8415                           
  8416                           ; BSR set to: 0
  8417                           ;usb_device.c: 2414: ((uint8_t_VAL*)&pBDTEntryEP0OutNext)->Val ^= 0x0004;
  8418  0046E0  0E04               	movlw	4
  8419  0046E2  1BBA               	xorwf	_pBDTEntryEP0OutNext& (0+255),f,b
  8420                           
  8421                           ; BSR set to: 0
  8422                           ;usb_device.c: 2417: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
  8423  0046E4  C0BC  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  8424  0046E8  C0BD  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  8425  0046EC  30DF               	rrcf	223,w,c
  8426  0046EE  32E8               	rrcf	wreg,f,c
  8427  0046F0  0B0F               	andlw	15
  8428  0046F2  0A0D               	xorlw	13
  8429  0046F4  A4D8               	btfss	status,2,c
  8430  0046F6  D017               	goto	l1758
  8431                           
  8432                           ; BSR set to: 0
  8433                           ;usb_device.c: 2418: {
  8434                           ;usb_device.c: 2423: memcpy((uint8_t*)&SetupPkt, (uint8_t*)((void *)(pBDTEntryEP0OutCurr
      +                          ent->ADR)), 8);
  8435  0046F8  0E30               	movlw	48
  8436  0046FA  6F7D               	movwf	memcpy@d1& (0+255),b
  8437  0046FC  0E04               	movlw	4
  8438  0046FE  6F7E               	movwf	(memcpy@d1+1)& (0+255),b
  8439  004700  EE20 F002          	lfsr	2,2
  8440  004704  51BC               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
  8441  004706  26D9               	addwf	fsr2l,f,c
  8442  004708  51BD               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
  8443  00470A  22DA               	addwfc	fsr2h,f,c
  8444  00470C  CFDE F07F          	movff	postinc2,memcpy@s1
  8445  004710  CFDD F080          	movff	postdec2,memcpy@s1+1
  8446  004714  0E00               	movlw	0
  8447  004716  6F82               	movwf	(memcpy@n+1)& (0+255),b
  8448  004718  0E08               	movlw	8
  8449  00471A  6F81               	movwf	memcpy@n& (0+255),b
  8450  00471C  EC2A  F02A         	call	_memcpy	;wreg free
  8451                           
  8452                           ;usb_device.c: 2426: USBCtrlTrfSetupHandler();
  8453  004720  EC78  F024         	call	_USBCtrlTrfSetupHandler	;wreg free
  8454                           
  8455                           ;usb_device.c: 2427: }
  8456  004724  0012               	return	
  8457  004726                     l1758:
  8458                           
  8459                           ;usb_device.c: 2428: else
  8460                           ;usb_device.c: 2429: {
  8461                           ;usb_device.c: 2431: USBCtrlTrfOutHandler();
  8462  004726  EC9A  F026         	call	_USBCtrlTrfOutHandler	;wreg free
  8463                           
  8464                           ;usb_device.c: 2432: }
  8465                           ;usb_device.c: 2433: }
  8466  00472A  0012               	return	
  8467  00472C                     l1757:
  8468                           
  8469                           ;usb_device.c: 2434: else if((USTATcopy.Val & ~0x02) == 0x04)
  8470  00472C  0100               	movlb	0	; () banked
  8471  00472E  51D3               	movf	_USTATcopy& (0+255),w,b
  8472  004730  0BFD               	andlw	253
  8473  004732  0A04               	xorlw	4
  8474  004734  A4D8               	btfss	status,2,c
  8475  004736  0012               	return	
  8476                           
  8477                           ; BSR set to: 0
  8478                           ;usb_device.c: 2435: {
  8479                           ;usb_device.c: 2438: USBCtrlTrfInHandler();
  8480  004738  EC61  F01E         	call	_USBCtrlTrfInHandler	;wreg free
  8481  00473C  0012               	return	
  8482  00473E                     __end_of_USBCtrlEPService:
  8483                           	opt stack 0
  8484                           tosu	equ	0xFFF
  8485                           tosh	equ	0xFFE
  8486                           tosl	equ	0xFFD
  8487                           pclath	equ	0xFFA
  8488                           tblptru	equ	0xFF8
  8489                           tblptrh	equ	0xFF7
  8490                           tblptrl	equ	0xFF6
  8491                           tablat	equ	0xFF5
  8492                           prodh	equ	0xFF4
  8493                           prodl	equ	0xFF3
  8494                           intcon	equ	0xFF2
  8495                           intcon2	equ	0xFF1
  8496                           intcon3	equ	0xFF0
  8497                           postinc0	equ	0xFEE
  8498                           plusw0	equ	0xFEB
  8499                           wreg	equ	0xFE8
  8500                           postinc1	equ	0xFE6
  8501                           postdec1	equ	0xFE5
  8502                           plusw1	equ	0xFE3
  8503                           fsr1h	equ	0xFE2
  8504                           fsr1l	equ	0xFE1
  8505                           indf2	equ	0xFDF
  8506                           postinc2	equ	0xFDE
  8507                           postdec2	equ	0xFDD
  8508                           plusw2	equ	0xFDB
  8509                           fsr2h	equ	0xFDA
  8510                           fsr2l	equ	0xFD9
  8511                           status	equ	0xFD8
  8512                           
  8513 ;; *************** function _memcpy *****************
  8514 ;; Defined at:
  8515 ;;		line 27 in file "/opt/microchip/xc8/v1.45/sources/common/memcpy.c"
  8516 ;; Parameters:    Size  Location     Type
  8517 ;;  d1              2   29[BANK0 ] PTR void 
  8518 ;;		 -> SetupPkt(8), 
  8519 ;;  s1              2   31[BANK0 ] PTR const void 
  8520 ;;		 -> RAM(3775), CtrlTrfData(8), SetupPkt(8), 
  8521 ;;  n               2   33[BANK0 ] unsigned int 
  8522 ;; Auto vars:     Size  Location     Type
  8523 ;;  s               2   37[BANK0 ] PTR const unsigned char 
  8524 ;;		 -> RAM(3775), CtrlTrfData(8), SetupPkt(8), 
  8525 ;;  d               2   35[BANK0 ] PTR unsigned char 
  8526 ;;		 -> SetupPkt(8), 
  8527 ;;  tmp             1   39[BANK0 ] unsigned char 
  8528 ;; Return value:  Size  Location     Type
  8529 ;;                  2   29[BANK0 ] PTR void 
  8530 ;; Registers used:
  8531 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8532 ;; Tracked objects:
  8533 ;;		On entry : 0/0
  8534 ;;		On exit  : 0/0
  8535 ;;		Unchanged: 0/0
  8536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8537 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8538 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8540 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8541 ;;Total ram usage:       11 bytes
  8542 ;; Hardware stack levels used:    1
  8543 ;; Hardware stack levels required when called:   11
  8544 ;; This function calls:
  8545 ;;		Nothing
  8546 ;; This function is called by:
  8547 ;;		_USBCtrlEPService
  8548 ;; This function uses a non-reentrant model
  8549 ;;
  8550                           
  8551                           	psect	text35
  8552  005454                     __ptext35:
  8553                           	opt stack 0
  8554  005454                     _memcpy:
  8555                           	opt stack 14
  8556                           
  8557                           ;incstack = 0
  8558  005454  C07F  F085         	movff	memcpy@s1,memcpy@s
  8559  005458  C080  F086         	movff	memcpy@s1+1,memcpy@s+1
  8560  00545C  C07D  F083         	movff	memcpy@d1,memcpy@d
  8561  005460  C07E  F084         	movff	memcpy@d1+1,memcpy@d+1
  8562  005464  D011               	goto	l3054
  8563  005466                     l8465:
  8564  005466  C085  FFD9         	movff	memcpy@s,fsr2l
  8565  00546A  C086  FFDA         	movff	memcpy@s+1,fsr2h
  8566  00546E  50DF               	movf	indf2,w,c
  8567  005470  0100               	movlb	0	; () banked
  8568  005472  6F87               	movwf	memcpy@tmp& (0+255),b
  8569                           
  8570                           ; BSR set to: 0
  8571  005474  4B85               	infsnz	memcpy@s& (0+255),f,b
  8572  005476  2B86               	incf	(memcpy@s+1)& (0+255),f,b
  8573                           
  8574                           ; BSR set to: 0
  8575  005478  C083  FFD9         	movff	memcpy@d,fsr2l
  8576  00547C  C084  FFDA         	movff	memcpy@d+1,fsr2h
  8577  005480  C087  FFDF         	movff	memcpy@tmp,indf2
  8578                           
  8579                           ; BSR set to: 0
  8580  005484  4B83               	infsnz	memcpy@d& (0+255),f,b
  8581  005486  2B84               	incf	(memcpy@d+1)& (0+255),f,b
  8582  005488                     l3054:
  8583                           
  8584                           ; BSR set to: 0
  8585  005488  0100               	movlb	0	; () banked
  8586  00548A  0781               	decf	memcpy@n& (0+255),f,b
  8587  00548C  A0D8               	btfss	status,0,c
  8588  00548E  0782               	decf	(memcpy@n+1)& (0+255),f,b
  8589  005490  2981               	incf	memcpy@n& (0+255),w,b
  8590  005492  E1E9               	bnz	l8465
  8591  005494  2982               	incf	(memcpy@n+1)& (0+255),w,b
  8592  005496  B4D8               	btfsc	status,2,c
  8593  005498  0012               	return	
  8594  00549A  D7E5               	goto	l3055
  8595  00549C                     __end_of_memcpy:
  8596                           	opt stack 0
  8597                           tosu	equ	0xFFF
  8598                           tosh	equ	0xFFE
  8599                           tosl	equ	0xFFD
  8600                           pclath	equ	0xFFA
  8601                           tblptru	equ	0xFF8
  8602                           tblptrh	equ	0xFF7
  8603                           tblptrl	equ	0xFF6
  8604                           tablat	equ	0xFF5
  8605                           prodh	equ	0xFF4
  8606                           prodl	equ	0xFF3
  8607                           intcon	equ	0xFF2
  8608                           intcon2	equ	0xFF1
  8609                           intcon3	equ	0xFF0
  8610                           postinc0	equ	0xFEE
  8611                           plusw0	equ	0xFEB
  8612                           wreg	equ	0xFE8
  8613                           postinc1	equ	0xFE6
  8614                           postdec1	equ	0xFE5
  8615                           plusw1	equ	0xFE3
  8616                           fsr1h	equ	0xFE2
  8617                           fsr1l	equ	0xFE1
  8618                           indf2	equ	0xFDF
  8619                           postinc2	equ	0xFDE
  8620                           postdec2	equ	0xFDD
  8621                           plusw2	equ	0xFDB
  8622                           fsr2h	equ	0xFDA
  8623                           fsr2l	equ	0xFD9
  8624                           status	equ	0xFD8
  8625                           
  8626 ;; *************** function _USBCtrlTrfSetupHandler *****************
  8627 ;; Defined at:
  8628 ;;		line 2483 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8629 ;; Parameters:    Size  Location     Type
  8630 ;;		None
  8631 ;; Auto vars:     Size  Location     Type
  8632 ;;		None
  8633 ;; Return value:  Size  Location     Type
  8634 ;;                  1    wreg      void 
  8635 ;; Registers used:
  8636 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8637 ;; Tracked objects:
  8638 ;;		On entry : 0/0
  8639 ;;		On exit  : 0/0
  8640 ;;		Unchanged: 0/0
  8641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8642 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8643 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8645 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8646 ;;Total ram usage:        0 bytes
  8647 ;; Hardware stack levels used:    1
  8648 ;; Hardware stack levels required when called:   17
  8649 ;; This function calls:
  8650 ;;		_USBCheckStdRequest
  8651 ;;		_USBCtrlEPServiceComplete
  8652 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  8653 ;; This function is called by:
  8654 ;;		_USBCtrlEPService
  8655 ;; This function uses a non-reentrant model
  8656 ;;
  8657                           
  8658                           	psect	text36
  8659  0048F0                     __ptext36:
  8660                           	opt stack 0
  8661  0048F0                     _USBCtrlTrfSetupHandler:
  8662                           	opt stack 8
  8663                           
  8664                           ;usb_device.c: 2488: shortPacketStatus = 0;
  8665                           
  8666                           ; BSR set to: 0
  8667                           ;incstack = 0
  8668  0048F0  0E00               	movlw	0
  8669  0048F2  0100               	movlb	0	; () banked
  8670  0048F4  6FCA               	movwf	_shortPacketStatus& (0+255),b
  8671                           
  8672                           ;usb_device.c: 2489: USBDeferStatusStagePacket = 0;
  8673  0048F6  0E00               	movlw	0
  8674  0048F8  6FC6               	movwf	_USBDeferStatusStagePacket& (0+255),b	;volatile
  8675                           
  8676                           ;usb_device.c: 2490: USBDeferINDataStagePackets = 0;
  8677  0048FA  0E00               	movlw	0
  8678  0048FC  6FC3               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
  8679                           
  8680                           ;usb_device.c: 2491: USBDeferOUTDataStagePackets = 0;
  8681  0048FE  0E00               	movlw	0
  8682  004900  6E25               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
  8683                           
  8684                           ;usb_device.c: 2492: BothEP0OutUOWNsSet = 0;
  8685  004902  0E00               	movlw	0
  8686  004904  0101               	movlb	1	; () banked
  8687  004906  6FE5               	movwf	_BothEP0OutUOWNsSet& (0+255),b
  8688                           
  8689                           ;usb_device.c: 2493: controlTransferState = 0;
  8690  004908  0E00               	movlw	0
  8691  00490A  0100               	movlb	0	; () banked
  8692  00490C  6FC9               	movwf	_controlTransferState& (0+255),b
  8693                           
  8694                           ; BSR set to: 0
  8695                           ;usb_device.c: 2502: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  8696  00490E  C0B2  FFD9         	movff	_pBDTEntryIn,fsr2l
  8697  004912  C0B3  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  8698  004916  0E7F               	movlw	127
  8699  004918  16DF               	andwf	indf2,f,c
  8700                           
  8701                           ; BSR set to: 0
  8702                           ;usb_device.c: 2503: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  8703  00491A  0E04               	movlw	4
  8704  00491C  1BB2               	xorwf	_pBDTEntryIn& (0+255),f,b
  8705                           
  8706                           ; BSR set to: 0
  8707                           ;usb_device.c: 2504: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  8708  00491E  C0B2  FFD9         	movff	_pBDTEntryIn,fsr2l
  8709  004922  C0B3  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  8710  004926  0E7F               	movlw	127
  8711  004928  16DF               	andwf	indf2,f,c
  8712                           
  8713                           ; BSR set to: 0
  8714                           ;usb_device.c: 2505: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  8715  00492A  0E04               	movlw	4
  8716  00492C  1BB2               	xorwf	_pBDTEntryIn& (0+255),f,b
  8717                           
  8718                           ; BSR set to: 0
  8719                           ;usb_device.c: 2506: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
  8720  00492E  C0BA  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  8721  004932  C0BB  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  8722  004936  0E7F               	movlw	127
  8723  004938  16DF               	andwf	indf2,f,c
  8724                           
  8725                           ; BSR set to: 0
  8726                           ;usb_device.c: 2508: inPipes[0].info.Val = 0;
  8727  00493A  0E00               	movlw	0
  8728  00493C  6FAF               	movwf	(_inPipes+3)& (0+255),b
  8729                           
  8730                           ; BSR set to: 0
  8731                           ;usb_device.c: 2509: inPipes[0].wCount.Val = 0;
  8732  00493E  0E00               	movlw	0
  8733  004940  6FB1               	movwf	(_inPipes+5)& (0+255),b
  8734  004942  0E00               	movlw	0
  8735  004944  6FB0               	movwf	(_inPipes+4)& (0+255),b
  8736                           
  8737                           ; BSR set to: 0
  8738                           ;usb_device.c: 2510: outPipes[0].info.Val = 0;
  8739  004946  0E00               	movlw	0
  8740  004948  0101               	movlb	1	; () banked
  8741  00494A  6FCC               	movwf	(_outPipes+3)& (0+255),b
  8742                           
  8743                           ; BSR set to: 1
  8744                           ;usb_device.c: 2511: outPipes[0].wCount.Val = 0;
  8745  00494C  0E00               	movlw	0
  8746  00494E  6FCE               	movwf	(_outPipes+5)& (0+255),b
  8747  004950  0E00               	movlw	0
  8748  004952  6FCD               	movwf	(_outPipes+4)& (0+255),b
  8749                           
  8750                           ; BSR set to: 1
  8751                           ;usb_device.c: 2517: USBCheckStdRequest();
  8752  004954  EC8C  F019         	call	_USBCheckStdRequest	;wreg free
  8753                           
  8754                           ;usb_device.c: 2518: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
  8755  004958  0E00               	movlw	0
  8756  00495A  0100               	movlb	0	; () banked
  8757  00495C  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  8758  00495E  0E03               	movlw	3
  8759  004960  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  8760  004962  0E00               	movlw	0
  8761  004964  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  8762  004966  0E00               	movlw	0
  8763  004968  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  8764  00496A  0E00               	movlw	0
  8765  00496C  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  8766  00496E  0E00               	movlw	0
  8767  004970  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  8768  004972  EC31  F027         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  8769                           
  8770                           ;usb_device.c: 2531: USBCtrlEPServiceComplete();
  8771  004976  ECC7  F016         	call	_USBCtrlEPServiceComplete	;wreg free
  8772  00497A  0012               	return		;funcret
  8773  00497C                     __end_of_USBCtrlTrfSetupHandler:
  8774                           	opt stack 0
  8775                           tosu	equ	0xFFF
  8776                           tosh	equ	0xFFE
  8777                           tosl	equ	0xFFD
  8778                           pclath	equ	0xFFA
  8779                           tblptru	equ	0xFF8
  8780                           tblptrh	equ	0xFF7
  8781                           tblptrl	equ	0xFF6
  8782                           tablat	equ	0xFF5
  8783                           prodh	equ	0xFF4
  8784                           prodl	equ	0xFF3
  8785                           intcon	equ	0xFF2
  8786                           intcon2	equ	0xFF1
  8787                           intcon3	equ	0xFF0
  8788                           postinc0	equ	0xFEE
  8789                           plusw0	equ	0xFEB
  8790                           wreg	equ	0xFE8
  8791                           postinc1	equ	0xFE6
  8792                           postdec1	equ	0xFE5
  8793                           plusw1	equ	0xFE3
  8794                           fsr1h	equ	0xFE2
  8795                           fsr1l	equ	0xFE1
  8796                           indf2	equ	0xFDF
  8797                           postinc2	equ	0xFDE
  8798                           postdec2	equ	0xFDD
  8799                           plusw2	equ	0xFDB
  8800                           fsr2h	equ	0xFDA
  8801                           fsr2l	equ	0xFD9
  8802                           status	equ	0xFD8
  8803                           
  8804 ;; *************** function _USBCtrlEPServiceComplete *****************
  8805 ;; Defined at:
  8806 ;;		line 1634 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8807 ;; Parameters:    Size  Location     Type
  8808 ;;		None
  8809 ;; Auto vars:     Size  Location     Type
  8810 ;;		None
  8811 ;; Return value:  Size  Location     Type
  8812 ;;                  1    wreg      void 
  8813 ;; Registers used:
  8814 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8815 ;; Tracked objects:
  8816 ;;		On entry : 0/0
  8817 ;;		On exit  : 0/0
  8818 ;;		Unchanged: 0/0
  8819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8820 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8821 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8823 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8824 ;;Total ram usage:        0 bytes
  8825 ;; Hardware stack levels used:    1
  8826 ;; Hardware stack levels required when called:   13
  8827 ;; This function calls:
  8828 ;;		_USBCtrlEPAllowDataStage
  8829 ;;		_USBCtrlEPAllowStatusStage
  8830 ;; This function is called by:
  8831 ;;		_USBCtrlTrfSetupHandler
  8832 ;; This function uses a non-reentrant model
  8833 ;;
  8834                           
  8835                           	psect	text37
  8836  002D8E                     __ptext37:
  8837                           	opt stack 0
  8838  002D8E                     _USBCtrlEPServiceComplete:
  8839                           	opt stack 11
  8840                           
  8841                           ;usb_device.c: 1640: UCONbits.PKTDIS = 0;
  8842                           
  8843                           ;incstack = 0
  8844  002D8E  9865               	bcf	3941,4,c	;volatile
  8845                           
  8846                           ;usb_device.c: 1646: if(inPipes[0].info.bits.busy == 0)
  8847  002D90  0100               	movlb	0	; () banked
  8848  002D92  BFAF               	btfsc	(_inPipes+3)& (0+255),7,b
  8849  002D94  D03C               	goto	l1667
  8850                           
  8851                           ; BSR set to: 0
  8852                           ;usb_device.c: 1647: {
  8853                           ;usb_device.c: 1648: if(outPipes[0].info.bits.busy == 1)
  8854  002D96  0101               	movlb	1	; () banked
  8855  002D98  AFCC               	btfss	(_outPipes+3)& (0+255),7,b
  8856  002D9A  D00D               	goto	l1668
  8857                           
  8858                           ; BSR set to: 1
  8859                           ;usb_device.c: 1649: {
  8860                           ;usb_device.c: 1650: controlTransferState = 2;
  8861  002D9C  0E02               	movlw	2
  8862  002D9E  0100               	movlb	0	; () banked
  8863  002DA0  6FC9               	movwf	_controlTransferState& (0+255),b
  8864                           
  8865                           ;usb_device.c: 1661: if(USBDeferOUTDataStagePackets == 0)
  8866  002DA2  5025               	movf	_USBDeferOUTDataStagePackets,w,c	;volatile
  8867  002DA4  B4D8               	btfsc	status,2,c
  8868                           
  8869                           ; BSR set to: 0
  8870                           ;usb_device.c: 1662: {
  8871                           ;usb_device.c: 1663: USBCtrlEPAllowDataStage();
  8872  002DA6  EC24  F022         	call	_USBCtrlEPAllowDataStage	;wreg free
  8873                           
  8874                           ;usb_device.c: 1664: }
  8875                           ;usb_device.c: 1668: USBStatusStageEnabledFlag2 = 0;
  8876  002DAA  0E00               	movlw	0
  8877  002DAC  0100               	movlb	0	; () banked
  8878  002DAE  6FC4               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
  8879                           
  8880                           ; BSR set to: 0
  8881                           ;usb_device.c: 1669: USBStatusStageEnabledFlag1 = 0;
  8882  002DB0  0E00               	movlw	0
  8883  002DB2  6FC5               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
  8884                           
  8885                           ;usb_device.c: 1670: }
  8886  002DB4  0012               	return	
  8887  002DB6                     l1668:
  8888                           
  8889                           ;usb_device.c: 1671: else
  8890                           ;usb_device.c: 1672: {
  8891                           ;usb_device.c: 1677: pBDTEntryEP0OutNext->CNT = 8;
  8892                           
  8893                           ; BSR set to: 0
  8894  002DB6  0100               	movlb	0	; () banked
  8895  002DB8  EE20 F001          	lfsr	2,1
  8896  002DBC  51BA               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  8897  002DBE  26D9               	addwf	fsr2l,f,c
  8898  002DC0  51BB               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  8899  002DC2  22DA               	addwfc	fsr2h,f,c
  8900  002DC4  0E08               	movlw	8
  8901  002DC6  6EDF               	movwf	indf2,c
  8902                           
  8903                           ;usb_device.c: 1678: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
  8904  002DC8  EE20 F002          	lfsr	2,2
  8905  002DCC  51BA               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  8906  002DCE  26D9               	addwf	fsr2l,f,c
  8907  002DD0  51BB               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  8908  002DD2  22DA               	addwfc	fsr2h,f,c
  8909  002DD4  0E30               	movlw	48
  8910  002DD6  6EDE               	movwf	postinc2,c
  8911  002DD8  0E04               	movlw	4
  8912  002DDA  6EDD               	movwf	postdec2,c
  8913                           
  8914                           ; BSR set to: 0
  8915                           ;usb_device.c: 1679: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  8916  002DDC  C0BA  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  8917  002DE0  C0BB  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  8918  002DE4  0E0C               	movlw	12
  8919  002DE6  6EDF               	movwf	indf2,c
  8920                           
  8921                           ; BSR set to: 0
  8922                           ;usb_device.c: 1680: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  8923  002DE8  C0BA  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  8924  002DEC  C0BB  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  8925  002DF0  0E00               	movlw	0
  8926  002DF2  8EDB               	bsf	plusw2,7,c
  8927                           
  8928                           ;usb_device.c: 1681: pBDTEntryIn[0]->STAT.Val = 0x04;
  8929  002DF4  C0B2  FFD9         	movff	_pBDTEntryIn,fsr2l
  8930  002DF8  C0B3  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  8931  002DFC  0E04               	movlw	4
  8932  002DFE  6EDF               	movwf	indf2,c
  8933                           
  8934                           ; BSR set to: 0
  8935                           ;usb_device.c: 1682: pBDTEntryIn[0]->STAT.Val |= 0x80;
  8936  002E00  C0B2  FFD9         	movff	_pBDTEntryIn,fsr2l
  8937  002E04  C0B3  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  8938  002E08  0E00               	movlw	0
  8939  002E0A  8EDB               	bsf	plusw2,7,c
  8940                           
  8941                           ; BSR set to: 0
  8942                           ;usb_device.c: 1683: }
  8943                           ;usb_device.c: 1684: }
  8944  002E0C  0012               	return	
  8945  002E0E                     l1667:
  8946                           
  8947                           ; BSR set to: 0
  8948                           ;usb_device.c: 1685: else
  8949                           ;usb_device.c: 1686: {
  8950                           ;usb_device.c: 1687: if(SetupPkt.DataDir == (0x80>>7))
  8951  002E0E  0104               	movlb	4	; () banked
  8952  002E10  AF30               	btfss	48,7,b	;volatile
  8953  002E12  D012               	goto	l1672
  8954                           
  8955                           ; BSR set to: 4
  8956                           ;usb_device.c: 1688: {
  8957                           ;usb_device.c: 1689: controlTransferState = 1;
  8958  002E14  0E01               	movlw	1
  8959  002E16  0100               	movlb	0	; () banked
  8960  002E18  6FC9               	movwf	_controlTransferState& (0+255),b
  8961                           
  8962                           ;usb_device.c: 1703: if(USBDeferINDataStagePackets == 0)
  8963  002E1A  51C3               	movf	_USBDeferINDataStagePackets& (0+255),w,b	;volatile
  8964  002E1C  B4D8               	btfsc	status,2,c
  8965                           
  8966                           ; BSR set to: 0
  8967                           ;usb_device.c: 1704: {
  8968                           ;usb_device.c: 1705: USBCtrlEPAllowDataStage();
  8969  002E1E  EC24  F022         	call	_USBCtrlEPAllowDataStage	;wreg free
  8970                           
  8971                           ;usb_device.c: 1706: }
  8972                           ;usb_device.c: 1728: USBStatusStageEnabledFlag2 = 0;
  8973  002E22  0E00               	movlw	0
  8974  002E24  0100               	movlb	0	; () banked
  8975  002E26  6FC4               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
  8976                           
  8977                           ; BSR set to: 0
  8978                           ;usb_device.c: 1729: USBStatusStageEnabledFlag1 = 0;
  8979  002E28  0E00               	movlw	0
  8980  002E2A  6FC5               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
  8981                           
  8982                           ; BSR set to: 0
  8983                           ;usb_device.c: 1730: if(USBDeferStatusStagePacket == 0)
  8984  002E2C  51C6               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
  8985  002E2E  A4D8               	btfss	status,2,c
  8986  002E30  0012               	return	
  8987                           
  8988                           ; BSR set to: 0
  8989                           ;usb_device.c: 1731: {
  8990                           ;usb_device.c: 1732: USBCtrlEPAllowStatusStage();
  8991  002E32  ECA3  F01B         	call	_USBCtrlEPAllowStatusStage	;wreg free
  8992                           
  8993                           ;usb_device.c: 1733: }
  8994                           ;usb_device.c: 1734: }
  8995  002E36  0012               	return	
  8996  002E38                     l1672:
  8997                           
  8998                           ;usb_device.c: 1735: else
  8999                           ;usb_device.c: 1736: {
  9000                           ;usb_device.c: 1747: controlTransferState = 2;
  9001  002E38  0E02               	movlw	2
  9002  002E3A  0100               	movlb	0	; () banked
  9003  002E3C  6FC9               	movwf	_controlTransferState& (0+255),b
  9004                           
  9005                           ; BSR set to: 0
  9006                           ;usb_device.c: 1750: pBDTEntryEP0OutNext->CNT = 8;
  9007  002E3E  EE20 F001          	lfsr	2,1
  9008  002E42  51BA               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9009  002E44  26D9               	addwf	fsr2l,f,c
  9010  002E46  51BB               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9011  002E48  22DA               	addwfc	fsr2h,f,c
  9012  002E4A  0E08               	movlw	8
  9013  002E4C  6EDF               	movwf	indf2,c
  9014                           
  9015                           ; BSR set to: 0
  9016                           ;usb_device.c: 1751: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
  9017  002E4E  EE20 F002          	lfsr	2,2
  9018  002E52  51BA               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9019  002E54  26D9               	addwf	fsr2l,f,c
  9020  002E56  51BB               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9021  002E58  22DA               	addwfc	fsr2h,f,c
  9022  002E5A  0E30               	movlw	48
  9023  002E5C  6EDE               	movwf	postinc2,c
  9024  002E5E  0E04               	movlw	4
  9025  002E60  6EDD               	movwf	postdec2,c
  9026                           
  9027                           ; BSR set to: 0
  9028                           ;usb_device.c: 1752: pBDTEntryEP0OutNext->STAT.Val = 0x04;
  9029  002E62  C0BA  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9030  002E66  C0BB  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9031  002E6A  0E04               	movlw	4
  9032  002E6C  6EDF               	movwf	indf2,c
  9033                           
  9034                           ; BSR set to: 0
  9035                           ;usb_device.c: 1753: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  9036  002E6E  C0BA  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9037  002E72  C0BB  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9038  002E76  0E00               	movlw	0
  9039  002E78  8EDB               	bsf	plusw2,7,c
  9040                           
  9041                           ; BSR set to: 0
  9042                           ;usb_device.c: 1756: USBStatusStageEnabledFlag2 = 0;
  9043  002E7A  0E00               	movlw	0
  9044  002E7C  6FC4               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
  9045                           
  9046                           ; BSR set to: 0
  9047                           ;usb_device.c: 1757: USBStatusStageEnabledFlag1 = 0;
  9048  002E7E  0E00               	movlw	0
  9049  002E80  6FC5               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
  9050                           
  9051                           ; BSR set to: 0
  9052                           ;usb_device.c: 1758: if(USBDeferStatusStagePacket == 0)
  9053  002E82  51C6               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
  9054  002E84  A4D8               	btfss	status,2,c
  9055  002E86  0012               	return	
  9056                           
  9057                           ; BSR set to: 0
  9058                           ;usb_device.c: 1759: {
  9059                           ;usb_device.c: 1760: USBCtrlEPAllowStatusStage();
  9060  002E88  ECA3  F01B         	call	_USBCtrlEPAllowStatusStage	;wreg free
  9061  002E8C  0012               	return	
  9062  002E8E                     __end_of_USBCtrlEPServiceComplete:
  9063                           	opt stack 0
  9064                           tosu	equ	0xFFF
  9065                           tosh	equ	0xFFE
  9066                           tosl	equ	0xFFD
  9067                           pclath	equ	0xFFA
  9068                           tblptru	equ	0xFF8
  9069                           tblptrh	equ	0xFF7
  9070                           tblptrl	equ	0xFF6
  9071                           tablat	equ	0xFF5
  9072                           prodh	equ	0xFF4
  9073                           prodl	equ	0xFF3
  9074                           intcon	equ	0xFF2
  9075                           intcon2	equ	0xFF1
  9076                           intcon3	equ	0xFF0
  9077                           postinc0	equ	0xFEE
  9078                           plusw0	equ	0xFEB
  9079                           wreg	equ	0xFE8
  9080                           postinc1	equ	0xFE6
  9081                           postdec1	equ	0xFE5
  9082                           plusw1	equ	0xFE3
  9083                           fsr1h	equ	0xFE2
  9084                           fsr1l	equ	0xFE1
  9085                           indf2	equ	0xFDF
  9086                           postinc2	equ	0xFDE
  9087                           postdec2	equ	0xFDD
  9088                           plusw2	equ	0xFDB
  9089                           fsr2h	equ	0xFDA
  9090                           fsr2l	equ	0xFD9
  9091                           status	equ	0xFD8
  9092                           
  9093 ;; *************** function _USBCtrlEPAllowDataStage *****************
  9094 ;; Defined at:
  9095 ;;		line 1506 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  9096 ;; Parameters:    Size  Location     Type
  9097 ;;		None
  9098 ;; Auto vars:     Size  Location     Type
  9099 ;;		None
  9100 ;; Return value:  Size  Location     Type
  9101 ;;                  1    wreg      void 
  9102 ;; Registers used:
  9103 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9104 ;; Tracked objects:
  9105 ;;		On entry : 0/0
  9106 ;;		On exit  : 0/0
  9107 ;;		Unchanged: 0/0
  9108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9109 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9110 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9112 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9113 ;;Total ram usage:        0 bytes
  9114 ;; Hardware stack levels used:    1
  9115 ;; Hardware stack levels required when called:   12
  9116 ;; This function calls:
  9117 ;;		_USBCtrlTrfTxService
  9118 ;; This function is called by:
  9119 ;;		_USBCtrlEPServiceComplete
  9120 ;; This function uses a non-reentrant model
  9121 ;;
  9122                           
  9123                           	psect	text38
  9124  004448                     __ptext38:
  9125                           	opt stack 0
  9126  004448                     _USBCtrlEPAllowDataStage:
  9127                           	opt stack 11
  9128                           
  9129                           ;usb_device.c: 1508: USBDeferINDataStagePackets = 0;
  9130                           
  9131                           ;incstack = 0
  9132  004448  0E00               	movlw	0
  9133  00444A  0100               	movlb	0	; () banked
  9134  00444C  6FC3               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
  9135                           
  9136                           ;usb_device.c: 1509: USBDeferOUTDataStagePackets = 0;
  9137  00444E  0E00               	movlw	0
  9138  004450  6E25               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
  9139                           
  9140                           ; BSR set to: 0
  9141                           ;usb_device.c: 1511: if(controlTransferState == 2)
  9142  004452  0E02               	movlw	2
  9143  004454  19C9               	xorwf	_controlTransferState& (0+255),w,b
  9144  004456  A4D8               	btfss	status,2,c
  9145  004458  D01F               	goto	l1656
  9146                           
  9147                           ; BSR set to: 0
  9148                           ;usb_device.c: 1512: {
  9149                           ;usb_device.c: 1514: pBDTEntryEP0OutNext->CNT = 8;
  9150  00445A  EE20 F001          	lfsr	2,1
  9151  00445E  51BA               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9152  004460  26D9               	addwf	fsr2l,f,c
  9153  004462  51BB               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9154  004464  22DA               	addwfc	fsr2h,f,c
  9155  004466  0E08               	movlw	8
  9156  004468  6EDF               	movwf	indf2,c
  9157                           
  9158                           ;usb_device.c: 1515: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
  9159  00446A  EE20 F002          	lfsr	2,2
  9160  00446E  51BA               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9161  004470  26D9               	addwf	fsr2l,f,c
  9162  004472  51BB               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9163  004474  22DA               	addwfc	fsr2h,f,c
  9164  004476  0E38               	movlw	56
  9165  004478  6EDE               	movwf	postinc2,c
  9166  00447A  0E04               	movlw	4
  9167  00447C  6EDD               	movwf	postdec2,c
  9168                           
  9169                           ; BSR set to: 0
  9170                           ;usb_device.c: 1516: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
  9171  00447E  C0BA  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9172  004482  C0BB  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9173  004486  0E48               	movlw	72
  9174  004488  6EDF               	movwf	indf2,c
  9175                           
  9176                           ; BSR set to: 0
  9177                           ;usb_device.c: 1517: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  9178  00448A  C0BA  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9179  00448E  C0BB  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9180  004492  0E00               	movlw	0
  9181  004494  8EDB               	bsf	plusw2,7,c
  9182                           
  9183                           ;usb_device.c: 1518: }
  9184  004496  0012               	return	
  9185  004498                     l1656:
  9186                           
  9187                           ; BSR set to: 0
  9188                           ;usb_device.c: 1519: else
  9189                           ;usb_device.c: 1520: {
  9190                           ;usb_device.c: 1523: if(SetupPkt.wLength < inPipes[0].wCount.Val)
  9191                           
  9192                           ; BSR set to: 0
  9193  004498  51B0               	movf	(_inPipes+4)& (0+255),w,b
  9194  00449A  0104               	movlb	4	; () banked
  9195  00449C  5D36               	subwf	54,w,b	;volatile
  9196  00449E  0100               	movlb	0	; () banked
  9197  0044A0  51B1               	movf	(_inPipes+5)& (0+255),w,b
  9198  0044A2  0104               	movlb	4	; () banked
  9199  0044A4  5937               	subwfb	55,w,b	;volatile
  9200  0044A6  B0D8               	btfsc	status,0,c
  9201  0044A8  D004               	goto	l1658
  9202                           
  9203                           ; BSR set to: 4
  9204                           ;usb_device.c: 1524: {
  9205                           ;usb_device.c: 1525: inPipes[0].wCount.Val = SetupPkt.wLength;
  9206  0044AA  C436 F0B0          	movff	1078,_inPipes+4	;volatile
  9207  0044AE  C437 F0B1          	movff	1079,_inPipes+5	;volatile
  9208  0044B2                     l1658:
  9209                           
  9210                           ; BSR set to: 4
  9211                           ;usb_device.c: 1526: }
  9212                           ;usb_device.c: 1527: USBCtrlTrfTxService();
  9213                           
  9214                           ; BSR set to: 4
  9215  0044B2  ECFE  F019         	call	_USBCtrlTrfTxService	;wreg free
  9216                           
  9217                           ;usb_device.c: 1532: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
  9218  0044B6  0100               	movlb	0	; () banked
  9219  0044B8  EE20 F002          	lfsr	2,2
  9220  0044BC  51B2               	movf	_pBDTEntryIn& (0+255),w,b
  9221  0044BE  26D9               	addwf	fsr2l,f,c
  9222  0044C0  51B3               	movf	(_pBDTEntryIn+1)& (0+255),w,b
  9223  0044C2  22DA               	addwfc	fsr2h,f,c
  9224  0044C4  0E38               	movlw	56
  9225  0044C6  6EDE               	movwf	postinc2,c
  9226  0044C8  0E04               	movlw	4
  9227  0044CA  6EDD               	movwf	postdec2,c
  9228                           
  9229                           ; BSR set to: 0
  9230                           ;usb_device.c: 1533: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  9231  0044CC  C0B2  FFD9         	movff	_pBDTEntryIn,fsr2l
  9232  0044D0  C0B3  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9233  0044D4  0E48               	movlw	72
  9234  0044D6  6EDF               	movwf	indf2,c
  9235                           
  9236                           ; BSR set to: 0
  9237                           ;usb_device.c: 1534: pBDTEntryIn[0]->STAT.Val |= 0x80;
  9238  0044D8  C0B2  FFD9         	movff	_pBDTEntryIn,fsr2l
  9239  0044DC  C0B3  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9240  0044E0  0E00               	movlw	0
  9241  0044E2  8EDB               	bsf	plusw2,7,c
  9242  0044E4  0012               	return	
  9243  0044E6                     __end_of_USBCtrlEPAllowDataStage:
  9244                           	opt stack 0
  9245                           tosu	equ	0xFFF
  9246                           tosh	equ	0xFFE
  9247                           tosl	equ	0xFFD
  9248                           pclath	equ	0xFFA
  9249                           tblptru	equ	0xFF8
  9250                           tblptrh	equ	0xFF7
  9251                           tblptrl	equ	0xFF6
  9252                           tablat	equ	0xFF5
  9253                           prodh	equ	0xFF4
  9254                           prodl	equ	0xFF3
  9255                           intcon	equ	0xFF2
  9256                           intcon2	equ	0xFF1
  9257                           intcon3	equ	0xFF0
  9258                           postinc0	equ	0xFEE
  9259                           plusw0	equ	0xFEB
  9260                           wreg	equ	0xFE8
  9261                           postinc1	equ	0xFE6
  9262                           postdec1	equ	0xFE5
  9263                           plusw1	equ	0xFE3
  9264                           fsr1h	equ	0xFE2
  9265                           fsr1l	equ	0xFE1
  9266                           indf2	equ	0xFDF
  9267                           postinc2	equ	0xFDE
  9268                           postdec2	equ	0xFDD
  9269                           plusw2	equ	0xFDB
  9270                           fsr2h	equ	0xFDA
  9271                           fsr2l	equ	0xFD9
  9272                           status	equ	0xFD8
  9273                           
  9274 ;; *************** function _USBCheckStdRequest *****************
  9275 ;; Defined at:
  9276 ;;		line 2703 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  9277 ;; Parameters:    Size  Location     Type
  9278 ;;		None
  9279 ;; Auto vars:     Size  Location     Type
  9280 ;;		None
  9281 ;; Return value:  Size  Location     Type
  9282 ;;                  1    wreg      void 
  9283 ;; Registers used:
  9284 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9285 ;; Tracked objects:
  9286 ;;		On entry : 0/0
  9287 ;;		On exit  : 0/0
  9288 ;;		Unchanged: 0/0
  9289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9290 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9291 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9293 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9294 ;;Total ram usage:        0 bytes
  9295 ;; Hardware stack levels used:    1
  9296 ;; Hardware stack levels required when called:   16
  9297 ;; This function calls:
  9298 ;;		_USBStdFeatureReqHandler
  9299 ;;		_USBStdGetDscHandler
  9300 ;;		_USBStdGetStatusHandler
  9301 ;;		_USBStdSetCfgHandler
  9302 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  9303 ;; This function is called by:
  9304 ;;		_USBCtrlTrfSetupHandler
  9305 ;; This function uses a non-reentrant model
  9306 ;;
  9307                           
  9308                           	psect	text39
  9309  003318                     __ptext39:
  9310                           	opt stack 0
  9311  003318                     _USBCheckStdRequest:
  9312                           	opt stack 8
  9313                           
  9314                           ;usb_device.c: 2705: if(SetupPkt.RequestType != (0x00>>5)) return;
  9315                           
  9316                           ; BSR set to: 0
  9317                           ;incstack = 0
  9318  003318  0104               	movlb	4	; () banked
  9319  00331A  3930               	swapf	48,w,b	;volatile
  9320  00331C  32E8               	rrcf	wreg,f,c
  9321  00331E  0B03               	andlw	3
  9322  003320  0900               	iorlw	0
  9323  003322  A4D8               	btfss	status,2,c
  9324  003324  0012               	return	
  9325  003326  D048               	goto	l1791
  9326  003328                     l1792:
  9327                           
  9328                           ; BSR set to: 4
  9329                           ;usb_device.c: 2710: inPipes[0].info.bits.busy = 1;
  9330  003328  0100               	movlb	0	; () banked
  9331  00332A  8FAF               	bsf	(_inPipes+3)& (0+255),7,b
  9332                           
  9333                           ; BSR set to: 0
  9334                           ;usb_device.c: 2711: USBDeviceState = ADR_PENDING_STATE;
  9335  00332C  0E08               	movlw	8
  9336  00332E  6FCB               	movwf	_USBDeviceState& (0+255),b
  9337                           
  9338                           ;usb_device.c: 2713: break;
  9339  003330  0012               	return	
  9340  003332                     
  9341                           ;usb_device.c: 2715: USBStdGetDscHandler();
  9342                           
  9343                           ; BSR set to: 0
  9344  003332  EC80  F014         	call	_USBStdGetDscHandler	;wreg free
  9345                           
  9346                           ;usb_device.c: 2716: break;
  9347  003336  0012               	return	
  9348  003338                     
  9349                           ;usb_device.c: 2718: USBStdSetCfgHandler();
  9350  003338  ECA6  F018         	call	_USBStdSetCfgHandler	;wreg free
  9351                           
  9352                           ;usb_device.c: 2719: break;
  9353  00333C  0012               	return	
  9354  00333E                     
  9355                           ;usb_device.c: 2721: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
  9356  00333E  0ED4               	movlw	low _USBActiveConfiguration
  9357  003340  0100               	movlb	0	; () banked
  9358  003342  6FAC               	movwf	_inPipes& (0+255),b
  9359  003344  0E00               	movlw	high _USBActiveConfiguration
  9360  003346  6FAD               	movwf	(_inPipes+1)& (0+255),b
  9361                           
  9362                           ; BSR set to: 0
  9363                           ;usb_device.c: 2722: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  9364  003348  81AF               	bsf	(_inPipes+3)& (0+255),0,b
  9365                           
  9366                           ; BSR set to: 0
  9367                           ;usb_device.c: 2723: inPipes[0].wCount.v[0] = 1;
  9368  00334A  0E01               	movlw	1
  9369  00334C  6FB0               	movwf	(_inPipes+4)& (0+255),b
  9370                           
  9371                           ; BSR set to: 0
  9372                           ;usb_device.c: 2724: inPipes[0].info.bits.busy = 1;
  9373  00334E  8FAF               	bsf	(_inPipes+3)& (0+255),7,b
  9374                           
  9375                           ;usb_device.c: 2725: break;
  9376  003350  0012               	return	
  9377  003352                     
  9378                           ;usb_device.c: 2727: USBStdGetStatusHandler();
  9379                           
  9380                           ; BSR set to: 0
  9381  003352  EC7F  F01F         	call	_USBStdGetStatusHandler	;wreg free
  9382                           
  9383                           ;usb_device.c: 2728: break;
  9384  003356  0012               	return	
  9385  003358                     
  9386                           ;usb_device.c: 2730: case 3:
  9387                           ;usb_device.c: 2731: USBStdFeatureReqHandler();
  9388  003358  ECAD  F009         	call	_USBStdFeatureReqHandler	;wreg free
  9389                           
  9390                           ;usb_device.c: 2732: break;
  9391  00335C  0012               	return	
  9392  00335E                     
  9393                           ;usb_device.c: 2734: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
  9394  00335E  0104               	movlb	4	; () banked
  9395  003360  5134               	movf	52,w,b	;volatile
  9396  003362  0D01               	mullw	1
  9397  003364  0EF1               	movlw	low _USBAlternateInterface
  9398  003366  24F3               	addwf	prodl,w,c
  9399  003368  0100               	movlb	0	; () banked
  9400  00336A  6FAC               	movwf	_inPipes& (0+255),b
  9401  00336C  0E02               	movlw	high _USBAlternateInterface
  9402  00336E  20F4               	addwfc	prodh,w,c
  9403  003370  6FAD               	movwf	(_inPipes+1)& (0+255),b
  9404                           
  9405                           ; BSR set to: 0
  9406                           ;usb_device.c: 2735: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  9407  003372  81AF               	bsf	(_inPipes+3)& (0+255),0,b
  9408                           
  9409                           ; BSR set to: 0
  9410                           ;usb_device.c: 2736: inPipes[0].wCount.v[0] = 1;
  9411  003374  0E01               	movlw	1
  9412  003376  6FB0               	movwf	(_inPipes+4)& (0+255),b
  9413                           
  9414                           ; BSR set to: 0
  9415                           ;usb_device.c: 2737: inPipes[0].info.bits.busy = 1;
  9416  003378  8FAF               	bsf	(_inPipes+3)& (0+255),7,b
  9417                           
  9418                           ;usb_device.c: 2738: break;
  9419  00337A  0012               	return	
  9420  00337C                     l1801:
  9421                           
  9422                           ; BSR set to: 4
  9423                           ;usb_device.c: 2740: inPipes[0].info.bits.busy = 1;
  9424  00337C  0100               	movlb	0	; () banked
  9425  00337E  8FAF               	bsf	(_inPipes+3)& (0+255),7,b
  9426                           
  9427                           ; BSR set to: 0
  9428                           ;usb_device.c: 2741: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
  9429  003380  0104               	movlb	4	; () banked
  9430  003382  5134               	movf	52,w,b	;volatile
  9431  003384  0D01               	mullw	1
  9432  003386  0EF1               	movlw	low _USBAlternateInterface
  9433  003388  24F3               	addwf	prodl,w,c
  9434  00338A  6ED9               	movwf	fsr2l,c
  9435  00338C  0E02               	movlw	high _USBAlternateInterface
  9436  00338E  20F4               	addwfc	prodh,w,c
  9437  003390  6EDA               	movwf	fsr2h,c
  9438  003392  C432 FFDF          	movff	1074,indf2	;volatile
  9439                           
  9440                           ;usb_device.c: 2742: break;
  9441  003396  0012               	return	
  9442  003398                     
  9443                           ; BSR set to: 4
  9444                           ;usb_device.c: 2744: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
  9445                           
  9446                           ; BSR set to: 4
  9447  003398  0E00               	movlw	0
  9448  00339A  0100               	movlb	0	; () banked
  9449  00339C  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  9450  00339E  0E02               	movlw	2
  9451  0033A0  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  9452  0033A2  0E00               	movlw	0
  9453  0033A4  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  9454  0033A6  0E00               	movlw	0
  9455  0033A8  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  9456  0033AA  0E00               	movlw	0
  9457  0033AC  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  9458  0033AE  0E00               	movlw	0
  9459  0033B0  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  9460  0033B2  EC31  F027         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  9461                           
  9462                           ;usb_device.c: 2749: }
  9463                           
  9464                           ;usb_device.c: 2748: break;
  9465                           
  9466                           ;usb_device.c: 2747: default:
  9467                           
  9468                           ;usb_device.c: 2746: case 12:
  9469                           
  9470                           ;usb_device.c: 2745: break;
  9471  0033B6  0012               	return	
  9472  0033B8                     l1791:
  9473  0033B8  0104               	movlb	4	; () banked
  9474  0033BA  5131               	movf	49,w,b	;volatile
  9475                           
  9476                           ; Switch size 1, requested type "space"
  9477                           ; Number of cases is 11, Range of values is 0 to 12
  9478                           ; switch strategies available:
  9479                           ; Name         Instructions Cycles
  9480                           ; simple_byte           34    18 (average)
  9481                           ;	Chosen strategy is simple_byte
  9482  0033BC  0A00               	xorlw	0	; case 0
  9483  0033BE  B4D8               	btfsc	status,2,c
  9484  0033C0  D7C8               	goto	l1797
  9485  0033C2  0A01               	xorlw	1	; case 1
  9486  0033C4  B4D8               	btfsc	status,2,c
  9487  0033C6  D7C8               	goto	l1798
  9488  0033C8  0A02               	xorlw	2	; case 3
  9489  0033CA  B4D8               	btfsc	status,2,c
  9490  0033CC  D7C5               	goto	l1798
  9491  0033CE  0A06               	xorlw	6	; case 5
  9492  0033D0  B4D8               	btfsc	status,2,c
  9493  0033D2  D7AA               	goto	l1792
  9494  0033D4  0A03               	xorlw	3	; case 6
  9495  0033D6  B4D8               	btfsc	status,2,c
  9496  0033D8  D7AC               	goto	l1794
  9497  0033DA  0A01               	xorlw	1	; case 7
  9498  0033DC  B4D8               	btfsc	status,2,c
  9499  0033DE  D7DC               	goto	l1802
  9500  0033E0  0A0F               	xorlw	15	; case 8
  9501  0033E2  B4D8               	btfsc	status,2,c
  9502  0033E4  D7AC               	goto	l1796
  9503  0033E6  0A01               	xorlw	1	; case 9
  9504  0033E8  B4D8               	btfsc	status,2,c
  9505  0033EA  D7A6               	goto	l1795
  9506  0033EC  0A03               	xorlw	3	; case 10
  9507  0033EE  B4D8               	btfsc	status,2,c
  9508  0033F0  D7B6               	goto	l1800
  9509  0033F2  0A01               	xorlw	1	; case 11
  9510  0033F4  B4D8               	btfsc	status,2,c
  9511  0033F6  D7C2               	goto	l1801
  9512  0033F8  0A07               	xorlw	7	; case 12
  9513  0033FA  0012               	return	
  9514  0033FC                     __end_of_USBCheckStdRequest:
  9515                           	opt stack 0
  9516                           tosu	equ	0xFFF
  9517                           tosh	equ	0xFFE
  9518                           tosl	equ	0xFFD
  9519                           pclath	equ	0xFFA
  9520                           tblptru	equ	0xFF8
  9521                           tblptrh	equ	0xFF7
  9522                           tblptrl	equ	0xFF6
  9523                           tablat	equ	0xFF5
  9524                           prodh	equ	0xFF4
  9525                           prodl	equ	0xFF3
  9526                           intcon	equ	0xFF2
  9527                           intcon2	equ	0xFF1
  9528                           intcon3	equ	0xFF0
  9529                           postinc0	equ	0xFEE
  9530                           plusw0	equ	0xFEB
  9531                           wreg	equ	0xFE8
  9532                           postinc1	equ	0xFE6
  9533                           postdec1	equ	0xFE5
  9534                           plusw1	equ	0xFE3
  9535                           fsr1h	equ	0xFE2
  9536                           fsr1l	equ	0xFE1
  9537                           indf2	equ	0xFDF
  9538                           postinc2	equ	0xFDE
  9539                           postdec2	equ	0xFDD
  9540                           plusw2	equ	0xFDB
  9541                           fsr2h	equ	0xFDA
  9542                           fsr2l	equ	0xFD9
  9543                           status	equ	0xFD8
  9544                           
  9545 ;; *************** function _USBStdSetCfgHandler *****************
  9546 ;; Defined at:
  9547 ;;		line 1986 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  9548 ;; Parameters:    Size  Location     Type
  9549 ;;		None
  9550 ;; Auto vars:     Size  Location     Type
  9551 ;;  i               1   49[BANK0 ] unsigned char 
  9552 ;; Return value:  Size  Location     Type
  9553 ;;                  1    wreg      void 
  9554 ;; Registers used:
  9555 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9556 ;; Tracked objects:
  9557 ;;		On entry : 0/0
  9558 ;;		On exit  : 0/0
  9559 ;;		Unchanged: 0/0
  9560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9561 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9562 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9564 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9565 ;;Total ram usage:        1 bytes
  9566 ;; Hardware stack levels used:    1
  9567 ;; Hardware stack levels required when called:   15
  9568 ;; This function calls:
  9569 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  9570 ;;		_memset
  9571 ;; This function is called by:
  9572 ;;		_USBCheckStdRequest
  9573 ;; This function uses a non-reentrant model
  9574 ;;
  9575                           
  9576                           	psect	text40
  9577  00314C                     __ptext40:
  9578                           	opt stack 0
  9579  00314C                     _USBStdSetCfgHandler:
  9580                           	opt stack 8
  9581                           
  9582                           ;usb_device.c: 1988: uint8_t i;
  9583                           ;usb_device.c: 1991: inPipes[0].info.bits.busy = 1;
  9584                           
  9585                           ;incstack = 0
  9586  00314C  0100               	movlb	0	; () banked
  9587  00314E  8FAF               	bsf	(_inPipes+3)& (0+255),7,b
  9588                           
  9589                           ; BSR set to: 0
  9590                           ;usb_device.c: 1994: memset((void*)&UEP1,0x00,(2));;
  9591  003150  0E27               	movlw	39
  9592  003152  6F7D               	movwf	memset@p1& (0+255),b
  9593  003154  0E0F               	movlw	15
  9594  003156  6F7E               	movwf	(memset@p1+1)& (0+255),b
  9595  003158  0E00               	movlw	0
  9596  00315A  6F80               	movwf	(memset@c+1)& (0+255),b
  9597  00315C  0E00               	movlw	0
  9598  00315E  6F7F               	movwf	memset@c& (0+255),b
  9599  003160  0E00               	movlw	0
  9600  003162  6F82               	movwf	(memset@n+1)& (0+255),b
  9601  003164  0E02               	movlw	2
  9602  003166  6F81               	movwf	memset@n& (0+255),b
  9603  003168  EC0D  F02D         	call	_memset	;wreg free
  9604                           
  9605                           ;usb_device.c: 1997: memset((void*)&BDT[0], 0x00, sizeof(BDT));
  9606  00316C  0E00               	movlw	0
  9607  00316E  0100               	movlb	0	; () banked
  9608  003170  6F7D               	movwf	memset@p1& (0+255),b
  9609  003172  0E04               	movlw	4
  9610  003174  6F7E               	movwf	(memset@p1+1)& (0+255),b
  9611  003176  0E00               	movlw	0
  9612  003178  6F80               	movwf	(memset@c+1)& (0+255),b
  9613  00317A  0E00               	movlw	0
  9614  00317C  6F7F               	movwf	memset@c& (0+255),b
  9615  00317E  0E00               	movlw	0
  9616  003180  6F82               	movwf	(memset@n+1)& (0+255),b
  9617  003182  0E30               	movlw	48
  9618  003184  6F81               	movwf	memset@n& (0+255),b
  9619  003186  EC0D  F02D         	call	_memset	;wreg free
  9620                           
  9621                           ;usb_device.c: 2000: UCONbits.PPBRST = 1;
  9622  00318A  8C65               	bsf	3941,6,c	;volatile
  9623                           
  9624                           ;usb_device.c: 2005: for(i = 0; i < (uint8_t)(2+1u); i++)
  9625  00318C  0E00               	movlw	0
  9626  00318E  0100               	movlb	0	; () banked
  9627  003190  6F91               	movwf	USBStdSetCfgHandler@i& (0+255),b
  9628  003192                     l11529:
  9629                           
  9630                           ; BSR set to: 0
  9631  003192  0E02               	movlw	2
  9632  003194  6591               	cpfsgt	USBStdSetCfgHandler@i& (0+255),b
  9633  003196  D001               	goto	l1708
  9634  003198  D016               	goto	u10080
  9635  00319A                     l1708:
  9636                           
  9637                           ; BSR set to: 0
  9638                           ;usb_device.c: 2006: {
  9639                           ;usb_device.c: 2007: ep_data_in[i].Val = 0u;
  9640                           
  9641                           ; BSR set to: 0
  9642  00319A  5191               	movf	USBStdSetCfgHandler@i& (0+255),w,b
  9643  00319C  0D01               	mullw	1
  9644  00319E  0ED1               	movlw	low _ep_data_in
  9645  0031A0  24F3               	addwf	prodl,w,c
  9646  0031A2  6ED9               	movwf	fsr2l,c
  9647  0031A4  0E02               	movlw	high _ep_data_in
  9648  0031A6  20F4               	addwfc	prodh,w,c
  9649  0031A8  6EDA               	movwf	fsr2h,c
  9650  0031AA  0E00               	movlw	0
  9651  0031AC  6EDF               	movwf	indf2,c
  9652                           
  9653                           ;usb_device.c: 2008: ep_data_out[i].Val = 0u;
  9654  0031AE  5191               	movf	USBStdSetCfgHandler@i& (0+255),w,b
  9655  0031B0  0D01               	mullw	1
  9656  0031B2  0ECE               	movlw	low _ep_data_out
  9657  0031B4  24F3               	addwf	prodl,w,c
  9658  0031B6  6ED9               	movwf	fsr2l,c
  9659  0031B8  0E02               	movlw	high _ep_data_out
  9660  0031BA  20F4               	addwfc	prodh,w,c
  9661  0031BC  6EDA               	movwf	fsr2h,c
  9662  0031BE  0E00               	movlw	0
  9663  0031C0  6EDF               	movwf	indf2,c
  9664                           
  9665                           ; BSR set to: 0
  9666  0031C2  2B91               	incf	USBStdSetCfgHandler@i& (0+255),f,b
  9667  0031C4  D7E6               	goto	l11529
  9668  0031C6                     u10080:
  9669                           
  9670                           ; BSR set to: 0
  9671                           ;usb_device.c: 2009: }
  9672                           ;usb_device.c: 2012: memset((void*)&USBAlternateInterface,0x00,2);
  9673                           
  9674                           ; BSR set to: 0
  9675  0031C6  0EF1               	movlw	low _USBAlternateInterface
  9676  0031C8  6F7D               	movwf	memset@p1& (0+255),b
  9677  0031CA  0E02               	movlw	high _USBAlternateInterface
  9678  0031CC  6F7E               	movwf	(memset@p1+1)& (0+255),b
  9679  0031CE  0E00               	movlw	0
  9680  0031D0  6F80               	movwf	(memset@c+1)& (0+255),b
  9681  0031D2  0E00               	movlw	0
  9682  0031D4  6F7F               	movwf	memset@c& (0+255),b
  9683  0031D6  0E00               	movlw	0
  9684  0031D8  6F82               	movwf	(memset@n+1)& (0+255),b
  9685  0031DA  0E02               	movlw	2
  9686  0031DC  6F81               	movwf	memset@n& (0+255),b
  9687  0031DE  EC0D  F02D         	call	_memset	;wreg free
  9688                           
  9689                           ;usb_device.c: 2015: UCONbits.PPBRST = 0;
  9690  0031E2  9C65               	bcf	3941,6,c	;volatile
  9691                           
  9692                           ;usb_device.c: 2017: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  9693  0031E4  0E08               	movlw	8
  9694  0031E6  0100               	movlb	0	; () banked
  9695  0031E8  6FB2               	movwf	_pBDTEntryIn& (0+255),b
  9696  0031EA  0E04               	movlw	4
  9697  0031EC  6FB3               	movwf	(_pBDTEntryIn+1)& (0+255),b
  9698                           
  9699                           ; BSR set to: 0
  9700                           ;usb_device.c: 2020: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
  9701  0031EE  0E00               	movlw	0
  9702  0031F0  6FBC               	movwf	_pBDTEntryEP0OutCurrent& (0+255),b
  9703  0031F2  0E04               	movlw	4
  9704  0031F4  6FBD               	movwf	(_pBDTEntryEP0OutCurrent+1)& (0+255),b
  9705                           
  9706                           ; BSR set to: 0
  9707                           ;usb_device.c: 2021: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  9708  0031F6  C0BC  F0BA         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
  9709  0031FA  C0BD  F0BB         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
  9710                           
  9711                           ; BSR set to: 0
  9712                           ;usb_device.c: 2024: USBActiveConfiguration = SetupPkt.bConfigurationValue;
  9713  0031FE  C432 F0D4          	movff	1074,_USBActiveConfiguration	;volatile
  9714                           
  9715                           ; BSR set to: 0
  9716                           ;usb_device.c: 2027: if(USBActiveConfiguration == 0)
  9717  003202  51D4               	movf	_USBActiveConfiguration& (0+255),w,b
  9718  003204  A4D8               	btfss	status,2,c
  9719  003206  D003               	goto	l1710
  9720                           
  9721                           ; BSR set to: 0
  9722                           ;usb_device.c: 2028: {
  9723                           ;usb_device.c: 2030: USBDeviceState = ADDRESS_STATE;
  9724  003208  0E10               	movlw	16
  9725  00320A  6FCB               	movwf	_USBDeviceState& (0+255),b
  9726                           
  9727                           ;usb_device.c: 2031: }
  9728  00320C  0012               	return	
  9729  00320E                     l1710:
  9730                           
  9731                           ; BSR set to: 0
  9732                           ;usb_device.c: 2032: else
  9733                           ;usb_device.c: 2033: {
  9734                           ;usb_device.c: 2035: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
  9735                           
  9736                           ; BSR set to: 0
  9737  00320E  0E00               	movlw	0
  9738  003210  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  9739  003212  0E01               	movlw	1
  9740  003214  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  9741  003216  0ED4               	movlw	low _USBActiveConfiguration
  9742  003218  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  9743  00321A  0E00               	movlw	high _USBActiveConfiguration
  9744  00321C  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  9745  00321E  0E00               	movlw	0
  9746  003220  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  9747  003222  0E01               	movlw	1
  9748  003224  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  9749  003226  EC31  F027         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  9750                           
  9751                           ;usb_device.c: 2040: USBDeviceState = CONFIGURED_STATE;
  9752  00322A  0E20               	movlw	32
  9753  00322C  0100               	movlb	0	; () banked
  9754  00322E  6FCB               	movwf	_USBDeviceState& (0+255),b
  9755  003230  0012               	return	
  9756  003232                     __end_of_USBStdSetCfgHandler:
  9757                           	opt stack 0
  9758                           tosu	equ	0xFFF
  9759                           tosh	equ	0xFFE
  9760                           tosl	equ	0xFFD
  9761                           pclath	equ	0xFFA
  9762                           tblptru	equ	0xFF8
  9763                           tblptrh	equ	0xFF7
  9764                           tblptrl	equ	0xFF6
  9765                           tablat	equ	0xFF5
  9766                           prodh	equ	0xFF4
  9767                           prodl	equ	0xFF3
  9768                           intcon	equ	0xFF2
  9769                           intcon2	equ	0xFF1
  9770                           intcon3	equ	0xFF0
  9771                           postinc0	equ	0xFEE
  9772                           plusw0	equ	0xFEB
  9773                           wreg	equ	0xFE8
  9774                           postinc1	equ	0xFE6
  9775                           postdec1	equ	0xFE5
  9776                           plusw1	equ	0xFE3
  9777                           fsr1h	equ	0xFE2
  9778                           fsr1l	equ	0xFE1
  9779                           indf2	equ	0xFDF
  9780                           postinc2	equ	0xFDE
  9781                           postdec2	equ	0xFDD
  9782                           plusw2	equ	0xFDB
  9783                           fsr2h	equ	0xFDA
  9784                           fsr2l	equ	0xFD9
  9785                           status	equ	0xFD8
  9786                           
  9787 ;; *************** function _USBStdGetStatusHandler *****************
  9788 ;; Defined at:
  9789 ;;		line 2147 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  9790 ;; Parameters:    Size  Location     Type
  9791 ;;		None
  9792 ;; Auto vars:     Size  Location     Type
  9793 ;;  p               2   30[BANK0 ] PTR struct __BDT
  9794 ;;		 -> NULL(0), BDT(48), 
  9795 ;; Return value:  Size  Location     Type
  9796 ;;                  1    wreg      void 
  9797 ;; Registers used:
  9798 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9799 ;; Tracked objects:
  9800 ;;		On entry : 0/0
  9801 ;;		On exit  : 0/0
  9802 ;;		Unchanged: 0/0
  9803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9804 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9805 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9806 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9807 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9808 ;;Total ram usage:        3 bytes
  9809 ;; Hardware stack levels used:    1
  9810 ;; Hardware stack levels required when called:   11
  9811 ;; This function calls:
  9812 ;;		Nothing
  9813 ;; This function is called by:
  9814 ;;		_USBCheckStdRequest
  9815 ;; This function uses a non-reentrant model
  9816 ;;
  9817                           
  9818                           	psect	text41
  9819  003EFE                     __ptext41:
  9820                           	opt stack 0
  9821  003EFE                     _USBStdGetStatusHandler:
  9822                           	opt stack 12
  9823                           
  9824                           ;usb_device.c: 2149: CtrlTrfData[0] = 0;
  9825                           
  9826                           ; BSR set to: 0
  9827                           ;incstack = 0
  9828  003EFE  0E00               	movlw	0
  9829  003F00  0104               	movlb	4	; () banked
  9830  003F02  6F38               	movwf	56,b	;volatile
  9831                           
  9832                           ;usb_device.c: 2150: CtrlTrfData[1] = 0;
  9833  003F04  0E00               	movlw	0
  9834  003F06  6F39               	movwf	57,b	;volatile
  9835                           
  9836                           ;usb_device.c: 2152: switch(SetupPkt.Recipient)
  9837  003F08  D03D               	goto	l1729
  9838  003F0A                     l1730:
  9839                           
  9840                           ; BSR set to: 4
  9841                           ;usb_device.c: 2155: inPipes[0].info.bits.busy = 1;
  9842  003F0A  0100               	movlb	0	; () banked
  9843  003F0C  8FAF               	bsf	(_inPipes+3)& (0+255),7,b
  9844                           
  9845                           ;usb_device.c: 2163: }
  9846                           ;usb_device.c: 2165: if(RemoteWakeup == 1)
  9847                           
  9848                           ; BSR set to: 4
  9849                           
  9850                           ; BSR set to: 0
  9851                           ;usb_device.c: 2161: {
  9852                           ;usb_device.c: 2162: CtrlTrfData[0]|=0x01;
  9853                           
  9854                           ;usb_device.c: 2160: if(0 == 1)
  9855  003F0E  0101               	movlb	1	; () banked
  9856  003F10  05E7               	decf	_RemoteWakeup& (0+255),w,b
  9857  003F12  A4D8               	btfss	status,2,c
  9858  003F14  D042               	goto	l1733
  9859                           
  9860                           ; BSR set to: 1
  9861                           ;usb_device.c: 2166: {
  9862                           ;usb_device.c: 2167: CtrlTrfData[0]|=0x02;
  9863  003F16  0104               	movlb	4	; () banked
  9864  003F18  8338               	bsf	56,1,b	;volatile
  9865                           
  9866                           ; BSR set to: 4
  9867                           ;usb_device.c: 2168: }
  9868                           ;usb_device.c: 2169: break;
  9869  003F1A  D03F               	goto	l1733
  9870  003F1C                     l1734:
  9871                           
  9872                           ; BSR set to: 4
  9873                           ;usb_device.c: 2171: inPipes[0].info.bits.busy = 1;
  9874  003F1C  0100               	movlb	0	; () banked
  9875  003F1E  8FAF               	bsf	(_inPipes+3)& (0+255),7,b
  9876                           
  9877                           ;usb_device.c: 2172: break;
  9878  003F20  D03C               	goto	l1733
  9879  003F22                     l1735:
  9880                           
  9881                           ; BSR set to: 4
  9882                           ;usb_device.c: 2174: inPipes[0].info.bits.busy = 1;
  9883  003F22  0100               	movlb	0	; () banked
  9884  003F24  8FAF               	bsf	(_inPipes+3)& (0+255),7,b
  9885                           
  9886                           ;usb_device.c: 2178: {
  9887                           ;usb_device.c: 2179: BDT_ENTRY *p;
  9888                           ;usb_device.c: 2181: if(SetupPkt.EPDir == 0)
  9889  003F26  0104               	movlb	4	; () banked
  9890  003F28  BF34               	btfsc	52,7,b	;volatile
  9891  003F2A  D00B               	goto	l1736
  9892                           
  9893                           ; BSR set to: 4
  9894                           ;usb_device.c: 2182: {
  9895                           ;usb_device.c: 2183: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
  9896  003F2C  5134               	movf	52,w,b	;volatile
  9897  003F2E  0B0F               	andlw	15
  9898  003F30  0100               	movlb	0	; () banked
  9899  003F32  6F7D               	movwf	??_USBStdGetStatusHandler& (0+255),b
  9900  003F34  517D               	movf	??_USBStdGetStatusHandler& (0+255),w,b
  9901  003F36  0D02               	mullw	2
  9902  003F38  0E0E               	movlw	low _pBDTEntryOut
  9903  003F3A  24F3               	addwf	prodl,w,c
  9904  003F3C  6ED9               	movwf	fsr2l,c
  9905  003F3E  0E03               	movlw	high _pBDTEntryOut
  9906  003F40  D00B               	goto	L4
  9907  003F42                     l1736:
  9908                           
  9909                           ;usb_device.c: 2185: else
  9910                           ;usb_device.c: 2186: {
  9911                           ;usb_device.c: 2187: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
  9912                           
  9913                           ; BSR set to: 0
  9914  003F42  0104               	movlb	4	; () banked
  9915  003F44  5134               	movf	52,w,b	;volatile
  9916  003F46  0B0F               	andlw	15
  9917  003F48  0100               	movlb	0	; () banked
  9918  003F4A  6F7D               	movwf	??_USBStdGetStatusHandler& (0+255),b
  9919  003F4C  517D               	movf	??_USBStdGetStatusHandler& (0+255),w,b
  9920  003F4E  0D02               	mullw	2
  9921  003F50  0EB2               	movlw	low _pBDTEntryIn
  9922  003F52  24F3               	addwf	prodl,w,c
  9923  003F54  6ED9               	movwf	fsr2l,c
  9924  003F56  0E00               	movlw	high _pBDTEntryIn
  9925  003F58                     L4:
  9926  003F58  20F4               	addwfc	prodh,w,c
  9927  003F5A  6EDA               	movwf	fsr2h,c
  9928  003F5C  CFDE F07E          	movff	postinc2,USBStdGetStatusHandler@p
  9929  003F60  CFDD F07F          	movff	postdec2,USBStdGetStatusHandler@p+1
  9930                           
  9931                           ; BSR set to: 0
  9932                           ;usb_device.c: 2188: }
  9933                           ;usb_device.c: 2190: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
  9934                           
  9935                           ; BSR set to: 0
  9936  003F64  C07E  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
  9937  003F68  C07F  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
  9938  003F6C  AEDF               	btfss	indf2,7,c
  9939  003F6E  D015               	goto	l1733
  9940                           
  9941                           ; BSR set to: 0
  9942  003F70  C07E  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
  9943  003F74  C07F  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
  9944  003F78  A4DF               	btfss	indf2,2,c
  9945  003F7A  D00F               	goto	l1733
  9946                           
  9947                           ; BSR set to: 0
  9948                           ;usb_device.c: 2191: CtrlTrfData[0]=0x01;
  9949  003F7C  0E01               	movlw	1
  9950  003F7E  0104               	movlb	4	; () banked
  9951  003F80  6F38               	movwf	56,b	;volatile
  9952                           
  9953                           ; BSR set to: 4
  9954                           ;usb_device.c: 2193: }
  9955                           ;usb_device.c: 2194: }
  9956                           
  9957                           ; BSR set to: 4
  9958                           ;usb_device.c: 2192: break;
  9959  003F82  D00B               	goto	l1733
  9960  003F84                     l1729:
  9961                           
  9962                           ; BSR set to: 4
  9963                           
  9964                           ; BSR set to: 4
  9965  003F84  5130               	movf	48,w,b	;volatile
  9966  003F86  0B1F               	andlw	31
  9967                           
  9968                           ; Switch size 1, requested type "space"
  9969                           ; Number of cases is 3, Range of values is 0 to 2
  9970                           ; switch strategies available:
  9971                           ; Name         Instructions Cycles
  9972                           ; simple_byte           10     6 (average)
  9973                           ;	Chosen strategy is simple_byte
  9974  003F88  0A00               	xorlw	0	; case 0
  9975  003F8A  B4D8               	btfsc	status,2,c
  9976  003F8C  D7BE               	goto	l1730
  9977  003F8E  0A01               	xorlw	1	; case 1
  9978  003F90  B4D8               	btfsc	status,2,c
  9979  003F92  D7C4               	goto	l1734
  9980  003F94  0A03               	xorlw	3	; case 2
  9981  003F96  B4D8               	btfsc	status,2,c
  9982  003F98  D7C4               	goto	l1735
  9983  003F9A                     l1733:
  9984                           
  9985                           ;usb_device.c: 2196: if(inPipes[0].info.bits.busy == 1)
  9986  003F9A  0100               	movlb	0	; () banked
  9987  003F9C  AFAF               	btfss	(_inPipes+3)& (0+255),7,b
  9988  003F9E  0012               	return	
  9989                           
  9990                           ; BSR set to: 0
  9991                           ;usb_device.c: 2197: {
  9992                           ;usb_device.c: 2198: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
  9993  003FA0  0E38               	movlw	56
  9994  003FA2  6FAC               	movwf	_inPipes& (0+255),b
  9995  003FA4  0E04               	movlw	4
  9996  003FA6  6FAD               	movwf	(_inPipes+1)& (0+255),b
  9997                           
  9998                           ; BSR set to: 0
  9999                           ;usb_device.c: 2199: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 10000  003FA8  81AF               	bsf	(_inPipes+3)& (0+255),0,b
 10001                           
 10002                           ; BSR set to: 0
 10003                           ;usb_device.c: 2200: inPipes[0].wCount.v[0] = 2;
 10004  003FAA  0E02               	movlw	2
 10005  003FAC  6FB0               	movwf	(_inPipes+4)& (0+255),b
 10006  003FAE  0012               	return	
 10007  003FB0                     __end_of_USBStdGetStatusHandler:
 10008                           	opt stack 0
 10009                           tosu	equ	0xFFF
 10010                           tosh	equ	0xFFE
 10011                           tosl	equ	0xFFD
 10012                           pclath	equ	0xFFA
 10013                           tblptru	equ	0xFF8
 10014                           tblptrh	equ	0xFF7
 10015                           tblptrl	equ	0xFF6
 10016                           tablat	equ	0xFF5
 10017                           prodh	equ	0xFF4
 10018                           prodl	equ	0xFF3
 10019                           intcon	equ	0xFF2
 10020                           intcon2	equ	0xFF1
 10021                           intcon3	equ	0xFF0
 10022                           postinc0	equ	0xFEE
 10023                           plusw0	equ	0xFEB
 10024                           wreg	equ	0xFE8
 10025                           postinc1	equ	0xFE6
 10026                           postdec1	equ	0xFE5
 10027                           plusw1	equ	0xFE3
 10028                           fsr1h	equ	0xFE2
 10029                           fsr1l	equ	0xFE1
 10030                           indf2	equ	0xFDF
 10031                           postinc2	equ	0xFDE
 10032                           postdec2	equ	0xFDD
 10033                           plusw2	equ	0xFDB
 10034                           fsr2h	equ	0xFDA
 10035                           fsr2l	equ	0xFD9
 10036                           status	equ	0xFD8
 10037                           
 10038 ;; *************** function _USBStdGetDscHandler *****************
 10039 ;; Defined at:
 10040 ;;		line 2061 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 10041 ;; Parameters:    Size  Location     Type
 10042 ;;		None
 10043 ;; Auto vars:     Size  Location     Type
 10044 ;;		None
 10045 ;; Return value:  Size  Location     Type
 10046 ;;                  1    wreg      void 
 10047 ;; Registers used:
 10048 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 10049 ;; Tracked objects:
 10050 ;;		On entry : 0/0
 10051 ;;		On exit  : 0/0
 10052 ;;		Unchanged: 0/0
 10053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10054 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10055 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10056 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10057 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10058 ;;Total ram usage:        2 bytes
 10059 ;; Hardware stack levels used:    1
 10060 ;; Hardware stack levels required when called:   11
 10061 ;; This function calls:
 10062 ;;		Nothing
 10063 ;; This function is called by:
 10064 ;;		_USBCheckStdRequest
 10065 ;; This function uses a non-reentrant model
 10066 ;;
 10067                           
 10068                           	psect	text42
 10069  002900                     __ptext42:
 10070                           	opt stack 0
 10071  002900                     _USBStdGetDscHandler:
 10072                           	opt stack 12
 10073                           
 10074                           ;usb_device.c: 2063: if(SetupPkt.bmRequestType == 0x80)
 10075                           
 10076                           ; BSR set to: 0
 10077                           ;incstack = 0
 10078  002900  0E80               	movlw	128
 10079  002902  0104               	movlb	4	; () banked
 10080  002904  1930               	xorwf	48,w,b	;volatile
 10081  002906  A4D8               	btfss	status,2,c
 10082  002908  0012               	return	
 10083                           
 10084                           ; BSR set to: 4
 10085                           ;usb_device.c: 2064: {
 10086                           ;usb_device.c: 2065: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 10087  00290A  0EC0               	movlw	192
 10088  00290C  0100               	movlb	0	; () banked
 10089  00290E  6FAF               	movwf	(_inPipes+3)& (0+255),b
 10090                           
 10091                           ;usb_device.c: 2067: switch(SetupPkt.bDescriptorType)
 10092  002910  D082               	goto	l1716
 10093  002912                     
 10094                           ;usb_device.c: 2073: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 10095                           
 10096                           ; BSR set to: 0
 10097  002912  0E76               	movlw	low _device_dsc
 10098  002914  0100               	movlb	0	; () banked
 10099  002916  6FAC               	movwf	_inPipes& (0+255),b
 10100  002918  0EFE               	movlw	high _device_dsc
 10101  00291A  6FAD               	movwf	(_inPipes+1)& (0+255),b
 10102                           
 10103                           ; BSR set to: 0
 10104                           ;usb_device.c: 2075: inPipes[0].wCount.Val = sizeof(device_dsc);
 10105  00291C  0E00               	movlw	0
 10106  00291E  6FB1               	movwf	(_inPipes+5)& (0+255),b
 10107  002920  0E12               	movlw	18
 10108  002922  6FB0               	movwf	(_inPipes+4)& (0+255),b
 10109                           
 10110                           ;usb_device.c: 2076: break;
 10111  002924  0012               	return	
 10112  002926                     
 10113                           ;usb_device.c: 2081: if(SetupPkt.bDscIndex < 1)
 10114                           
 10115                           ; BSR set to: 0
 10116  002926  0104               	movlb	4	; () banked
 10117  002928  5132               	movf	50,w,b	;volatile
 10118  00292A  A4D8               	btfss	status,2,c
 10119  00292C  D040               	goto	l1720
 10120                           
 10121                           ; BSR set to: 4
 10122                           ;usb_device.c: 2082: {
 10123                           ;usb_device.c: 2086: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
 10124  00292E  5132               	movf	50,w,b	;volatile
 10125  002930  0D02               	mullw	2
 10126  002932  0E5B               	movlw	low _USB_CD_Ptr
 10127  002934  24F3               	addwf	prodl,w,c
 10128  002936  6EF6               	movwf	tblptrl,c
 10129  002938  0EFC               	movlw	high _USB_CD_Ptr
 10130  00293A  20F4               	addwfc	prodh,w,c
 10131  00293C  6EF7               	movwf	tblptrh,c
 10132  00293E                     	if	0	;There are less than 3 active tblptr bytes
 10133  00293E                     	endif
 10134  00293E  0009               	tblrd		*+
 10135  002940  CFF5 F0AC          	movff	tablat,_inPipes
 10136  002944  000A               	tblrd		*-
 10137  002946  CFF5 F0AD          	movff	tablat,_inPipes+1
 10138                           
 10139                           ; BSR set to: 4
 10140                           ;usb_device.c: 2092: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 10141  00294A  0E02               	movlw	2
 10142  00294C  0100               	movlb	0	; () banked
 10143  00294E  25AC               	addwf	_inPipes& (0+255),w,b
 10144  002950  6F7D               	movwf	??_USBStdGetDscHandler& (0+255),b
 10145  002952  0E00               	movlw	0
 10146  002954  21AD               	addwfc	(_inPipes+1)& (0+255),w,b
 10147  002956  6F7E               	movwf	(??_USBStdGetDscHandler+1)& (0+255),b
 10148  002958  C07D  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 10149  00295C  C07E  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 10150  002960  6AF8               	clrf	tblptru,c
 10151  002962  0E0E               	movlw	(high __ramtop+-1)
 10152  002964  64F7               	cpfsgt	tblptrh,c
 10153  002966  D003               	bra	u5347
 10154  002968  0008               	tblrd		*
 10155  00296A  50F5               	movf	tablat,w,c
 10156  00296C  D005               	bra	u5340
 10157  00296E                     u5347:
 10158  00296E  CFF6 FFE9          	movff	tblptrl,fsr0l
 10159  002972  CFF7 FFEA          	movff	tblptrh,fsr0h
 10160  002976  50EF               	movf	indf0,w,c
 10161  002978                     u5340:
 10162  002978  0100               	movlb	0	; () banked
 10163  00297A  6FB0               	movwf	(_inPipes+4)& (0+255),b
 10164                           
 10165                           ; BSR set to: 0
 10166                           ;usb_device.c: 2093: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 10167  00297C  0E03               	movlw	3
 10168  00297E  25AC               	addwf	_inPipes& (0+255),w,b
 10169  002980  6F7D               	movwf	??_USBStdGetDscHandler& (0+255),b
 10170  002982  0E00               	movlw	0
 10171  002984  21AD               	addwfc	(_inPipes+1)& (0+255),w,b
 10172  002986  6F7E               	movwf	(??_USBStdGetDscHandler+1)& (0+255),b
 10173  002988  C07D  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 10174  00298C  C07E  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 10175  002990  6AF8               	clrf	tblptru,c
 10176  002992  0E0E               	movlw	(high __ramtop+-1)
 10177  002994  64F7               	cpfsgt	tblptrh,c
 10178  002996  D003               	bra	u5357
 10179  002998  0008               	tblrd		*
 10180  00299A  50F5               	movf	tablat,w,c
 10181  00299C  D005               	bra	u5350
 10182  00299E                     u5357:
 10183  00299E  CFF6 FFE9          	movff	tblptrl,fsr0l
 10184  0029A2  CFF7 FFEA          	movff	tblptrh,fsr0h
 10185  0029A6  50EF               	movf	indf0,w,c
 10186  0029A8                     u5350:
 10187  0029A8  0100               	movlb	0	; () banked
 10188  0029AA  6FB1               	movwf	(_inPipes+5)& (0+255),b
 10189                           
 10190                           ;usb_device.c: 2094: }
 10191  0029AC  0012               	return	
 10192  0029AE                     l1720:
 10193                           
 10194                           ;usb_device.c: 2095: else
 10195                           ;usb_device.c: 2096: {
 10196                           ;usb_device.c: 2097: inPipes[0].info.Val = 0;
 10197                           
 10198                           ; BSR set to: 0
 10199  0029AE  0E00               	movlw	0
 10200  0029B0  0100               	movlb	0	; () banked
 10201  0029B2  6FAF               	movwf	(_inPipes+3)& (0+255),b
 10202                           
 10203                           ; BSR set to: 0
 10204                           ;usb_device.c: 2098: }
 10205                           ;usb_device.c: 2099: break;
 10206  0029B4  0012               	return	
 10207  0029B6                     
 10208                           ;usb_device.c: 2104: if(SetupPkt.bDscIndex<3)
 10209                           
 10210                           ; BSR set to: 0
 10211  0029B6  0E03               	movlw	3
 10212  0029B8  0104               	movlb	4	; () banked
 10213  0029BA  6132               	cpfslt	50,b	;volatile
 10214  0029BC  D024               	goto	l1723
 10215                           
 10216                           ; BSR set to: 4
 10217                           ;usb_device.c: 2105: {
 10218                           ;usb_device.c: 2107: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
 10219  0029BE  5132               	movf	50,w,b	;volatile
 10220  0029C0  0D02               	mullw	2
 10221  0029C2  0E55               	movlw	low _USB_SD_Ptr
 10222  0029C4  24F3               	addwf	prodl,w,c
 10223  0029C6  6EF6               	movwf	tblptrl,c
 10224  0029C8  0EFC               	movlw	high _USB_SD_Ptr
 10225  0029CA  20F4               	addwfc	prodh,w,c
 10226  0029CC  6EF7               	movwf	tblptrh,c
 10227  0029CE                     	if	0	;There are less than 3 active tblptr bytes
 10228  0029CE                     	endif
 10229  0029CE  0009               	tblrd		*+
 10230  0029D0  CFF5 F0AC          	movff	tablat,_inPipes
 10231  0029D4  000A               	tblrd		*-
 10232  0029D6  CFF5 F0AD          	movff	tablat,_inPipes+1
 10233                           
 10234                           ; BSR set to: 4
 10235                           ;usb_device.c: 2109: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 10236  0029DA  C0AC  FFF6         	movff	_inPipes,tblptrl
 10237  0029DE  C0AD  FFF7         	movff	_inPipes+1,tblptrh
 10238  0029E2  6AF8               	clrf	tblptru,c
 10239  0029E4  0E0E               	movlw	(high __ramtop+-1)
 10240  0029E6  64F7               	cpfsgt	tblptrh,c
 10241  0029E8  D003               	bra	u5377
 10242  0029EA  0008               	tblrd		*
 10243  0029EC  50F5               	movf	tablat,w,c
 10244  0029EE  D005               	bra	u5370
 10245  0029F0                     u5377:
 10246  0029F0  CFF6 FFE9          	movff	tblptrl,fsr0l
 10247  0029F4  CFF7 FFEA          	movff	tblptrh,fsr0h
 10248  0029F8  50EF               	movf	indf0,w,c
 10249  0029FA                     u5370:
 10250  0029FA  0100               	movlb	0	; () banked
 10251  0029FC  6F7D               	movwf	??_USBStdGetDscHandler& (0+255),b
 10252  0029FE  517D               	movf	??_USBStdGetDscHandler& (0+255),w,b
 10253  002A00  6FB0               	movwf	(_inPipes+4)& (0+255),b
 10254  002A02  6BB1               	clrf	(_inPipes+5)& (0+255),b
 10255                           
 10256                           ;usb_device.c: 2110: }
 10257  002A04  0012               	return	
 10258  002A06                     l1723:
 10259                           
 10260                           ;usb_device.c: 2120: else
 10261                           ;usb_device.c: 2121: {
 10262                           ;usb_device.c: 2122: inPipes[0].info.Val = 0;
 10263                           
 10264                           ; BSR set to: 0
 10265  002A06  0E00               	movlw	0
 10266  002A08  0100               	movlb	0	; () banked
 10267  002A0A  6FAF               	movwf	(_inPipes+3)& (0+255),b
 10268                           
 10269                           ; BSR set to: 0
 10270                           ;usb_device.c: 2123: }
 10271                           ;usb_device.c: 2124: break;
 10272  002A0C  0012               	return	
 10273  002A0E                     
 10274                           ;usb_device.c: 2126: inPipes[0].info.Val = 0;
 10275                           
 10276                           ; BSR set to: 0
 10277  002A0E  0E00               	movlw	0
 10278  002A10  0100               	movlb	0	; () banked
 10279  002A12  6FAF               	movwf	(_inPipes+3)& (0+255),b
 10280                           
 10281                           ; BSR set to: 0
 10282                           ;usb_device.c: 2128: }
 10283                           
 10284                           ;usb_device.c: 2127: break;
 10285  002A14  0012               	return	
 10286  002A16                     l1716:
 10287                           
 10288                           ; BSR set to: 0
 10289                           
 10290                           ; BSR set to: 0
 10291  002A16  0104               	movlb	4	; () banked
 10292  002A18  5133               	movf	51,w,b	;volatile
 10293                           
 10294                           ; Switch size 1, requested type "space"
 10295                           ; Number of cases is 3, Range of values is 1 to 3
 10296                           ; switch strategies available:
 10297                           ; Name         Instructions Cycles
 10298                           ; simple_byte           10     6 (average)
 10299                           ;	Chosen strategy is simple_byte
 10300  002A1A  0A01               	xorlw	1	; case 1
 10301  002A1C  B4D8               	btfsc	status,2,c
 10302  002A1E  D779               	goto	l1717
 10303  002A20  0A03               	xorlw	3	; case 2
 10304  002A22  B4D8               	btfsc	status,2,c
 10305  002A24  D780               	goto	l1719
 10306  002A26  0A01               	xorlw	1	; case 3
 10307  002A28  B4D8               	btfsc	status,2,c
 10308  002A2A  D7C5               	goto	l1722
 10309  002A2C  D7F0               	goto	l1725
 10310  002A2E                     __end_of_USBStdGetDscHandler:
 10311                           	opt stack 0
 10312                           tosu	equ	0xFFF
 10313                           tosh	equ	0xFFE
 10314                           tosl	equ	0xFFD
 10315                           pclath	equ	0xFFA
 10316                           tblptru	equ	0xFF8
 10317                           tblptrh	equ	0xFF7
 10318                           tblptrl	equ	0xFF6
 10319                           tablat	equ	0xFF5
 10320                           prodh	equ	0xFF4
 10321                           prodl	equ	0xFF3
 10322                           intcon	equ	0xFF2
 10323                           intcon2	equ	0xFF1
 10324                           intcon3	equ	0xFF0
 10325                           indf0	equ	0xFEF
 10326                           postinc0	equ	0xFEE
 10327                           plusw0	equ	0xFEB
 10328                           fsr0h	equ	0xFEA
 10329                           fsr0l	equ	0xFE9
 10330                           wreg	equ	0xFE8
 10331                           postinc1	equ	0xFE6
 10332                           postdec1	equ	0xFE5
 10333                           plusw1	equ	0xFE3
 10334                           fsr1h	equ	0xFE2
 10335                           fsr1l	equ	0xFE1
 10336                           indf2	equ	0xFDF
 10337                           postinc2	equ	0xFDE
 10338                           postdec2	equ	0xFDD
 10339                           plusw2	equ	0xFDB
 10340                           fsr2h	equ	0xFDA
 10341                           fsr2l	equ	0xFD9
 10342                           status	equ	0xFD8
 10343                           
 10344 ;; *************** function _USBStdFeatureReqHandler *****************
 10345 ;; Defined at:
 10346 ;;		line 2771 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 10347 ;; Parameters:    Size  Location     Type
 10348 ;;		None
 10349 ;; Auto vars:     Size  Location     Type
 10350 ;;  p               2   53[BANK0 ] PTR struct __BDT
 10351 ;;		 -> NULL(0), BDT(48), 
 10352 ;;  pUEP            2   50[BANK0 ] PTR unsigned char 
 10353 ;;		 -> UEP0(1), 
 10354 ;;  current_ep_d    1   52[BANK0 ] struct .
 10355 ;; Return value:  Size  Location     Type
 10356 ;;                  1    wreg      void 
 10357 ;; Registers used:
 10358 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10359 ;; Tracked objects:
 10360 ;;		On entry : 0/0
 10361 ;;		On exit  : 0/0
 10362 ;;		Unchanged: 0/0
 10363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10365 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10366 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10367 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10368 ;;Total ram usage:        6 bytes
 10369 ;; Hardware stack levels used:    1
 10370 ;; Hardware stack levels required when called:   15
 10371 ;; This function calls:
 10372 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 10373 ;; This function is called by:
 10374 ;;		_USBCheckStdRequest
 10375 ;; This function uses a non-reentrant model
 10376 ;;
 10377                           
 10378                           	psect	text43
 10379  00135A                     __ptext43:
 10380                           	opt stack 0
 10381  00135A                     _USBStdFeatureReqHandler:
 10382                           	opt stack 8
 10383                           
 10384                           ;usb_device.c: 2773: BDT_ENTRY *p;
 10385                           ;usb_device.c: 2774: EP_STATUS current_ep_data;
 10386                           ;usb_device.c: 2778: unsigned char* pUEP;
 10387                           ;usb_device.c: 2816: if((SetupPkt.bFeature == 1)&&
 10388                           ;usb_device.c: 2817: (SetupPkt.Recipient == (0x00)))
 10389                           
 10390                           ;incstack = 0
 10391  00135A  0104               	movlb	4	; () banked
 10392  00135C  0532               	decf	50,w,b	;volatile
 10393  00135E  A4D8               	btfss	status,2,c
 10394  001360  D011               	goto	l1809
 10395                           
 10396                           ; BSR set to: 4
 10397  001362  5130               	movf	48,w,b	;volatile
 10398  001364  0B1F               	andlw	31
 10399  001366  0900               	iorlw	0
 10400  001368  A4D8               	btfss	status,2,c
 10401  00136A  D00C               	goto	l1809
 10402                           
 10403                           ; BSR set to: 4
 10404                           ;usb_device.c: 2818: {
 10405                           ;usb_device.c: 2819: inPipes[0].info.bits.busy = 1;
 10406  00136C  0100               	movlb	0	; () banked
 10407  00136E  8FAF               	bsf	(_inPipes+3)& (0+255),7,b
 10408                           
 10409                           ; BSR set to: 0
 10410                           ;usb_device.c: 2820: if(SetupPkt.bRequest == 3)
 10411  001370  0E03               	movlw	3
 10412  001372  0104               	movlb	4	; () banked
 10413  001374  1931               	xorwf	49,w,b	;volatile
 10414  001376  A4D8               	btfss	status,2,c
 10415  001378  D002               	goto	l1808
 10416                           
 10417                           ; BSR set to: 4
 10418                           ;usb_device.c: 2821: RemoteWakeup = 1;
 10419  00137A  0E01               	movlw	1
 10420  00137C  D001               	goto	L5
 10421  00137E                     l1808:
 10422                           
 10423                           ;usb_device.c: 2822: else
 10424                           ;usb_device.c: 2823: RemoteWakeup = 0;
 10425                           
 10426                           ; BSR set to: 1
 10427  00137E  0E00               	movlw	0
 10428  001380                     L5:
 10429  001380  0101               	movlb	1	; () banked
 10430  001382  6FE7               	movwf	_RemoteWakeup& (0+255),b
 10431  001384                     l1809:
 10432                           
 10433                           ;usb_device.c: 2824: }
 10434                           ;usb_device.c: 2827: if((SetupPkt.bFeature == 0)&&
 10435                           ;usb_device.c: 2828: (SetupPkt.Recipient == (0x02))&&
 10436                           ;usb_device.c: 2829: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
 10437                           ;usb_device.c: 2830: (USBDeviceState == CONFIGURED_STATE))
 10438                           
 10439                           ; BSR set to: 1
 10440  001384  0104               	movlb	4	; () banked
 10441  001386  5132               	movf	50,w,b	;volatile
 10442  001388  A4D8               	btfss	status,2,c
 10443  00138A  0012               	return	
 10444                           
 10445                           ; BSR set to: 4
 10446  00138C  5130               	movf	48,w,b	;volatile
 10447  00138E  0B1F               	andlw	31
 10448  001390  0A02               	xorlw	2
 10449  001392  A4D8               	btfss	status,2,c
 10450  001394  0012               	return	
 10451                           
 10452                           ; BSR set to: 4
 10453  001396  5134               	movf	52,w,b	;volatile
 10454  001398  0B0F               	andlw	15
 10455  00139A  0900               	iorlw	0
 10456  00139C  B4D8               	btfsc	status,2,c
 10457  00139E  0012               	return	
 10458                           
 10459                           ; BSR set to: 4
 10460  0013A0  5134               	movf	52,w,b	;volatile
 10461  0013A2  0B0F               	andlw	15
 10462  0013A4  0100               	movlb	0	; () banked
 10463  0013A6  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10464  0013A8  0E03               	movlw	3
 10465  0013AA  6191               	cpfslt	??_USBStdFeatureReqHandler& (0+255),b
 10466  0013AC  0012               	return	
 10467                           
 10468                           ; BSR set to: 0
 10469  0013AE  0E20               	movlw	32
 10470  0013B0  19CB               	xorwf	_USBDeviceState& (0+255),w,b
 10471  0013B2  A4D8               	btfss	status,2,c
 10472  0013B4  0012               	return	
 10473                           
 10474                           ; BSR set to: 0
 10475                           ;usb_device.c: 2831: {
 10476                           ;usb_device.c: 2834: inPipes[0].info.bits.busy = 1;
 10477  0013B6  8FAF               	bsf	(_inPipes+3)& (0+255),7,b
 10478                           
 10479                           ;usb_device.c: 2837: if(SetupPkt.EPDir == 0)
 10480  0013B8  0104               	movlb	4	; () banked
 10481  0013BA  BF34               	btfsc	52,7,b	;volatile
 10482  0013BC  D01C               	goto	l1811
 10483                           
 10484                           ; BSR set to: 4
 10485                           ;usb_device.c: 2838: {
 10486                           ;usb_device.c: 2839: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 10487  0013BE  5134               	movf	52,w,b	;volatile
 10488  0013C0  0B0F               	andlw	15
 10489  0013C2  0100               	movlb	0	; () banked
 10490  0013C4  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10491  0013C6  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10492  0013C8  0D02               	mullw	2
 10493  0013CA  0E0E               	movlw	low _pBDTEntryOut
 10494  0013CC  24F3               	addwf	prodl,w,c
 10495  0013CE  6ED9               	movwf	fsr2l,c
 10496  0013D0  0E03               	movlw	high _pBDTEntryOut
 10497  0013D2  20F4               	addwfc	prodh,w,c
 10498  0013D4  6EDA               	movwf	fsr2h,c
 10499  0013D6  CFDE F095          	movff	postinc2,USBStdFeatureReqHandler@p
 10500  0013DA  CFDD F096          	movff	postdec2,USBStdFeatureReqHandler@p+1
 10501                           
 10502                           ;usb_device.c: 2840: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 10503  0013DE  0104               	movlb	4	; () banked
 10504  0013E0  5134               	movf	52,w,b	;volatile
 10505  0013E2  0B0F               	andlw	15
 10506  0013E4  0100               	movlb	0	; () banked
 10507  0013E6  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10508  0013E8  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10509  0013EA  0D01               	mullw	1
 10510  0013EC  0ECE               	movlw	low _ep_data_out
 10511  0013EE  24F3               	addwf	prodl,w,c
 10512  0013F0  6ED9               	movwf	fsr2l,c
 10513  0013F2  0E02               	movlw	high _ep_data_out
 10514  0013F4  D01C               	goto	L6
 10515  0013F6                     l1811:
 10516                           
 10517                           ;usb_device.c: 2842: else
 10518                           ;usb_device.c: 2843: {
 10519                           ;usb_device.c: 2844: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 10520                           
 10521                           ; BSR set to: 0
 10522  0013F6  0104               	movlb	4	; () banked
 10523  0013F8  5134               	movf	52,w,b	;volatile
 10524  0013FA  0B0F               	andlw	15
 10525  0013FC  0100               	movlb	0	; () banked
 10526  0013FE  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10527  001400  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10528  001402  0D02               	mullw	2
 10529  001404  0EB2               	movlw	low _pBDTEntryIn
 10530  001406  24F3               	addwf	prodl,w,c
 10531  001408  6ED9               	movwf	fsr2l,c
 10532  00140A  0E00               	movlw	high _pBDTEntryIn
 10533  00140C  20F4               	addwfc	prodh,w,c
 10534  00140E  6EDA               	movwf	fsr2h,c
 10535  001410  CFDE F095          	movff	postinc2,USBStdFeatureReqHandler@p
 10536  001414  CFDD F096          	movff	postdec2,USBStdFeatureReqHandler@p+1
 10537                           
 10538                           ;usb_device.c: 2845: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 10539  001418  0104               	movlb	4	; () banked
 10540  00141A  5134               	movf	52,w,b	;volatile
 10541  00141C  0B0F               	andlw	15
 10542  00141E  0100               	movlb	0	; () banked
 10543  001420  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10544  001422  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10545  001424  0D01               	mullw	1
 10546  001426  0ED1               	movlw	low _ep_data_in
 10547  001428  24F3               	addwf	prodl,w,c
 10548  00142A  6ED9               	movwf	fsr2l,c
 10549  00142C  0E02               	movlw	high _ep_data_in
 10550  00142E                     L6:
 10551  00142E  20F4               	addwfc	prodh,w,c
 10552  001430  6EDA               	movwf	fsr2h,c
 10553  001432  50DF               	movf	indf2,w,c
 10554  001434  6F94               	movwf	USBStdFeatureReqHandler@current_ep_data& (0+255),b
 10555                           
 10556                           ; BSR set to: 0
 10557                           ;usb_device.c: 2846: }
 10558                           ;usb_device.c: 2852: if(current_ep_data.bits.ping_pong_state == 0)
 10559                           
 10560                           ; BSR set to: 0
 10561  001436  B194               	btfsc	USBStdFeatureReqHandler@current_ep_data& (0+255),0,b
 10562  001438  D002               	goto	l1813
 10563                           
 10564                           ; BSR set to: 0
 10565                           ;usb_device.c: 2853: {
 10566                           ;usb_device.c: 2854: {((uint8_t_VAL*)&p)->Val &= ~0x0004;};
 10567  00143A  9595               	bcf	USBStdFeatureReqHandler@p& (0+255),2,b
 10568                           
 10569                           ;usb_device.c: 2855: }
 10570  00143C  D001               	goto	l1814
 10571  00143E                     l1813:
 10572                           
 10573                           ; BSR set to: 0
 10574                           ;usb_device.c: 2856: else
 10575                           ;usb_device.c: 2857: {
 10576                           ;usb_device.c: 2858: {((uint8_t_VAL*)&p)->Val |= 0x0004;};
 10577                           
 10578                           ; BSR set to: 0
 10579  00143E  8595               	bsf	USBStdFeatureReqHandler@p& (0+255),2,b
 10580  001440                     l1814:
 10581                           
 10582                           ; BSR set to: 0
 10583                           ;usb_device.c: 2859: }
 10584                           ;usb_device.c: 2864: if(SetupPkt.EPDir == 0)
 10585                           
 10586                           ; BSR set to: 0
 10587  001440  0104               	movlb	4	; () banked
 10588  001442  BF34               	btfsc	52,7,b	;volatile
 10589  001444  D00B               	goto	l1815
 10590                           
 10591                           ; BSR set to: 4
 10592                           ;usb_device.c: 2865: {
 10593                           ;usb_device.c: 2866: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 10594  001446  5134               	movf	52,w,b	;volatile
 10595  001448  0B0F               	andlw	15
 10596  00144A  0100               	movlb	0	; () banked
 10597  00144C  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10598  00144E  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10599  001450  0D02               	mullw	2
 10600  001452  0E0E               	movlw	low _pBDTEntryOut
 10601  001454  24F3               	addwf	prodl,w,c
 10602  001456  6ED9               	movwf	fsr2l,c
 10603  001458  0E03               	movlw	high _pBDTEntryOut
 10604  00145A  D00B               	goto	L7
 10605  00145C                     l1815:
 10606                           
 10607                           ;usb_device.c: 2868: else
 10608                           ;usb_device.c: 2869: {
 10609                           ;usb_device.c: 2870: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 10610                           
 10611                           ; BSR set to: 0
 10612  00145C  0104               	movlb	4	; () banked
 10613  00145E  5134               	movf	52,w,b	;volatile
 10614  001460  0B0F               	andlw	15
 10615  001462  0100               	movlb	0	; () banked
 10616  001464  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10617  001466  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10618  001468  0D02               	mullw	2
 10619  00146A  0EB2               	movlw	low _pBDTEntryIn
 10620  00146C  24F3               	addwf	prodl,w,c
 10621  00146E  6ED9               	movwf	fsr2l,c
 10622  001470  0E00               	movlw	high _pBDTEntryIn
 10623  001472                     L7:
 10624  001472  20F4               	addwfc	prodh,w,c
 10625  001474  6EDA               	movwf	fsr2h,c
 10626  001476  C095  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 10627  00147A  C096  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 10628                           
 10629                           ; BSR set to: 0
 10630                           ;usb_device.c: 2871: }
 10631                           ;usb_device.c: 2874: if(SetupPkt.bRequest == 3)
 10632                           
 10633                           ; BSR set to: 0
 10634  00147E  0E03               	movlw	3
 10635  001480  0104               	movlb	4	; () banked
 10636  001482  1931               	xorwf	49,w,b	;volatile
 10637  001484  A4D8               	btfss	status,2,c
 10638  001486  D031               	goto	l1817
 10639                           
 10640                           ; BSR set to: 4
 10641                           ;usb_device.c: 2875: {
 10642                           ;usb_device.c: 2876: if(p->STAT.UOWN == 1)
 10643  001488  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 10644  00148C  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 10645  001490  0100               	movlb	0	; () banked
 10646  001492  AEDF               	btfss	indf2,7,c
 10647  001494  D01D               	goto	l1820
 10648                           
 10649                           ; BSR set to: 0
 10650                           ;usb_device.c: 2877: {
 10651                           ;usb_device.c: 2880: if(SetupPkt.EPDir == 0)
 10652  001496  0104               	movlb	4	; () banked
 10653  001498  BF34               	btfsc	52,7,b	;volatile
 10654  00149A  D00B               	goto	l1819
 10655                           
 10656                           ; BSR set to: 4
 10657                           ;usb_device.c: 2881: {
 10658                           ;usb_device.c: 2882: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
 10659  00149C  5134               	movf	52,w,b	;volatile
 10660  00149E  0B0F               	andlw	15
 10661  0014A0  0100               	movlb	0	; () banked
 10662  0014A2  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10663  0014A4  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10664  0014A6  0D01               	mullw	1
 10665  0014A8  0ECE               	movlw	low _ep_data_out
 10666  0014AA  24F3               	addwf	prodl,w,c
 10667  0014AC  6ED9               	movwf	fsr2l,c
 10668  0014AE  0E02               	movlw	high _ep_data_out
 10669  0014B0  D00B               	goto	L8
 10670  0014B2                     l1819:
 10671                           
 10672                           ;usb_device.c: 2884: else
 10673                           ;usb_device.c: 2885: {
 10674                           ;usb_device.c: 2886: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
 10675                           
 10676                           ; BSR set to: 2
 10677  0014B2  0104               	movlb	4	; () banked
 10678  0014B4  5134               	movf	52,w,b	;volatile
 10679  0014B6  0B0F               	andlw	15
 10680  0014B8  0100               	movlb	0	; () banked
 10681  0014BA  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10682  0014BC  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10683  0014BE  0D01               	mullw	1
 10684  0014C0  0ED1               	movlw	low _ep_data_in
 10685  0014C2  24F3               	addwf	prodl,w,c
 10686  0014C4  6ED9               	movwf	fsr2l,c
 10687  0014C6  0E02               	movlw	high _ep_data_in
 10688  0014C8                     L8:
 10689  0014C8  20F4               	addwfc	prodh,w,c
 10690  0014CA  6EDA               	movwf	fsr2h,c
 10691  0014CC  0102               	movlb	2	; () banked
 10692  0014CE  82DF               	bsf	indf2,1,c
 10693  0014D0                     l1820:
 10694                           
 10695                           ;usb_device.c: 2887: }
 10696                           ;usb_device.c: 2888: }
 10697                           ;usb_device.c: 2891: p->STAT.Val |= 0x04;
 10698                           
 10699                           ; BSR set to: 2
 10700                           
 10701                           ; BSR set to: 2
 10702  0014D0  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 10703  0014D4  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 10704  0014D8  0E00               	movlw	0
 10705  0014DA  84DB               	bsf	plusw2,2,c
 10706                           
 10707                           ;usb_device.c: 2892: p->STAT.Val |= 0x80;
 10708  0014DC  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 10709  0014E0  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 10710  0014E4  0E00               	movlw	0
 10711  0014E6  8EDB               	bsf	plusw2,7,c
 10712                           
 10713                           ;usb_device.c: 2893: }
 10714  0014E8  0012               	return	
 10715  0014EA                     l1817:
 10716                           
 10717                           ;usb_device.c: 2894: else
 10718                           ;usb_device.c: 2895: {
 10719                           ;usb_device.c: 2899: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 10720  0014EA  0E04               	movlw	4
 10721  0014EC  0100               	movlb	0	; () banked
 10722  0014EE  1B95               	xorwf	USBStdFeatureReqHandler@p& (0+255),f,b
 10723                           
 10724                           ; BSR set to: 0
 10725                           ;usb_device.c: 2901: if(p->STAT.UOWN == 1)
 10726  0014F0  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 10727  0014F4  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 10728  0014F8  AEDF               	btfss	indf2,7,c
 10729  0014FA  D01B               	goto	l1822
 10730                           
 10731                           ; BSR set to: 0
 10732                           ;usb_device.c: 2902: {
 10733                           ;usb_device.c: 2905: p->STAT.Val &= (~0x80);
 10734  0014FC  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 10735  001500  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 10736  001504  0E7F               	movlw	127
 10737  001506  16DF               	andwf	indf2,f,c
 10738                           
 10739                           ; BSR set to: 0
 10740                           ;usb_device.c: 2906: p->STAT.Val |= 0x40;
 10741  001508  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 10742  00150C  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 10743  001510  0E00               	movlw	0
 10744  001512  8CDB               	bsf	plusw2,6,c
 10745                           
 10746                           ; BSR set to: 0
 10747                           ;usb_device.c: 2907: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 10748  001514  0E00               	movlw	0
 10749  001516  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
 10750  001518  0E05               	movlw	5
 10751  00151A  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
 10752  00151C  C095  F08B         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 10753  001520  C096  F08C         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 10754  001524  0E00               	movlw	0
 10755  001526  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
 10756  001528  0E02               	movlw	2
 10757  00152A  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
 10758  00152C  EC31  F027         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 10759                           
 10760                           ;usb_device.c: 2908: }
 10761  001530  D006               	goto	l1823
 10762  001532                     l1822:
 10763                           
 10764                           ;usb_device.c: 2909: else
 10765                           ;usb_device.c: 2910: {
 10766                           ;usb_device.c: 2912: p->STAT.Val |= 0x40;
 10767  001532  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 10768  001536  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 10769  00153A  0E00               	movlw	0
 10770  00153C  8CDB               	bsf	plusw2,6,c
 10771  00153E                     l1823:
 10772                           
 10773                           ;usb_device.c: 2913: }
 10774                           ;usb_device.c: 2917: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 10775  00153E  0E04               	movlw	4
 10776  001540  0100               	movlb	0	; () banked
 10777  001542  1B95               	xorwf	USBStdFeatureReqHandler@p& (0+255),f,b
 10778                           
 10779                           ; BSR set to: 0
 10780                           ;usb_device.c: 2923: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 10781  001544  B394               	btfsc	USBStdFeatureReqHandler@current_ep_data& (0+255),1,b
 10782  001546  D006               	goto	u10260
 10783                           
 10784                           ; BSR set to: 0
 10785  001548  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 10786  00154C  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 10787  001550  AEDF               	btfss	indf2,7,c
 10788  001552  D033               	goto	l1824
 10789  001554                     u10260:
 10790                           
 10791                           ; BSR set to: 0
 10792                           ;usb_device.c: 2924: {
 10793                           ;usb_device.c: 2925: if(SetupPkt.EPDir == 0)
 10794  001554  0104               	movlb	4	; () banked
 10795  001556  BF34               	btfsc	52,7,b	;volatile
 10796  001558  D00B               	goto	l1827
 10797                           
 10798                           ; BSR set to: 4
 10799                           ;usb_device.c: 2926: {
 10800                           ;usb_device.c: 2927: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
 10801  00155A  5134               	movf	52,w,b	;volatile
 10802  00155C  0B0F               	andlw	15
 10803  00155E  0100               	movlb	0	; () banked
 10804  001560  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10805  001562  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10806  001564  0D01               	mullw	1
 10807  001566  0ECE               	movlw	low _ep_data_out
 10808  001568  24F3               	addwf	prodl,w,c
 10809  00156A  6ED9               	movwf	fsr2l,c
 10810  00156C  0E02               	movlw	high _ep_data_out
 10811  00156E  D00B               	goto	L9
 10812  001570                     l1827:
 10813                           
 10814                           ;usb_device.c: 2929: else
 10815                           ;usb_device.c: 2930: {
 10816                           ;usb_device.c: 2931: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
 10817                           
 10818                           ; BSR set to: 2
 10819  001570  0104               	movlb	4	; () banked
 10820  001572  5134               	movf	52,w,b	;volatile
 10821  001574  0B0F               	andlw	15
 10822  001576  0100               	movlb	0	; () banked
 10823  001578  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10824  00157A  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10825  00157C  0D01               	mullw	1
 10826  00157E  0ED1               	movlw	low _ep_data_in
 10827  001580  24F3               	addwf	prodl,w,c
 10828  001582  6ED9               	movwf	fsr2l,c
 10829  001584  0E02               	movlw	high _ep_data_in
 10830  001586                     L9:
 10831  001586  20F4               	addwfc	prodh,w,c
 10832  001588  6EDA               	movwf	fsr2h,c
 10833  00158A  0102               	movlb	2	; () banked
 10834  00158C  92DF               	bcf	indf2,1,c
 10835                           
 10836                           ; BSR set to: 2
 10837                           ;usb_device.c: 2932: }
 10838                           ;usb_device.c: 2934: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 10839                           
 10840                           ; BSR set to: 2
 10841  00158E  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 10842  001592  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 10843  001596  0E3B               	movlw	59
 10844  001598  16DF               	andwf	indf2,f,c
 10845                           
 10846                           ; BSR set to: 2
 10847                           ;usb_device.c: 2937: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 10848  00159A  0E00               	movlw	0
 10849  00159C  0100               	movlb	0	; () banked
 10850  00159E  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
 10851  0015A0  0E05               	movlw	5
 10852  0015A2  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
 10853  0015A4  C095  F08B         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 10854  0015A8  C096  F08C         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 10855  0015AC  0E00               	movlw	0
 10856  0015AE  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
 10857  0015B0  0E02               	movlw	2
 10858  0015B2  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
 10859  0015B4  EC31  F027         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 10860                           
 10861                           ;usb_device.c: 2938: }
 10862  0015B8  D006               	goto	l1829
 10863  0015BA                     l1824:
 10864                           
 10865                           ;usb_device.c: 2939: else
 10866                           ;usb_device.c: 2940: {
 10867                           ;usb_device.c: 2942: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 10868  0015BA  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 10869  0015BE  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 10870  0015C2  0E3B               	movlw	59
 10871  0015C4  16DF               	andwf	indf2,f,c
 10872  0015C6                     l1829:
 10873                           
 10874                           ;usb_device.c: 2943: }
 10875                           ;usb_device.c: 2990: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
 10876  0015C6  0104               	movlb	4	; () banked
 10877  0015C8  5134               	movf	52,w,b	;volatile
 10878  0015CA  0B0F               	andlw	15
 10879  0015CC  0100               	movlb	0	; () banked
 10880  0015CE  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10881  0015D0  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10882  0015D2  0D01               	mullw	1
 10883  0015D4  0E26               	movlw	38
 10884  0015D6  24F3               	addwf	prodl,w,c
 10885  0015D8  6F92               	movwf	USBStdFeatureReqHandler@pUEP& (0+255),b
 10886  0015DA  0E0F               	movlw	15
 10887  0015DC  20F4               	addwfc	prodh,w,c
 10888  0015DE  6F93               	movwf	(USBStdFeatureReqHandler@pUEP+1)& (0+255),b
 10889                           
 10890                           ; BSR set to: 0
 10891                           ;usb_device.c: 2994: *pUEP &= ~0x0001;
 10892  0015E0  C092  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 10893  0015E4  C093  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 10894  0015E8  0EFE               	movlw	254
 10895  0015EA  16DF               	andwf	indf2,f,c
 10896                           
 10897                           ; BSR set to: 0
 10898  0015EC  0012               	return	
 10899  0015EE                     __end_of_USBStdFeatureReqHandler:
 10900                           	opt stack 0
 10901                           tosu	equ	0xFFF
 10902                           tosh	equ	0xFFE
 10903                           tosl	equ	0xFFD
 10904                           pclath	equ	0xFFA
 10905                           tblptru	equ	0xFF8
 10906                           tblptrh	equ	0xFF7
 10907                           tblptrl	equ	0xFF6
 10908                           tablat	equ	0xFF5
 10909                           prodh	equ	0xFF4
 10910                           prodl	equ	0xFF3
 10911                           intcon	equ	0xFF2
 10912                           intcon2	equ	0xFF1
 10913                           intcon3	equ	0xFF0
 10914                           indf0	equ	0xFEF
 10915                           postinc0	equ	0xFEE
 10916                           plusw0	equ	0xFEB
 10917                           fsr0h	equ	0xFEA
 10918                           fsr0l	equ	0xFE9
 10919                           wreg	equ	0xFE8
 10920                           postinc1	equ	0xFE6
 10921                           postdec1	equ	0xFE5
 10922                           plusw1	equ	0xFE3
 10923                           fsr1h	equ	0xFE2
 10924                           fsr1l	equ	0xFE1
 10925                           indf2	equ	0xFDF
 10926                           postinc2	equ	0xFDE
 10927                           postdec2	equ	0xFDD
 10928                           plusw2	equ	0xFDB
 10929                           fsr2h	equ	0xFDA
 10930                           fsr2l	equ	0xFD9
 10931                           status	equ	0xFD8
 10932                           
 10933 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 10934 ;; Defined at:
 10935 ;;		line 104 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_mgr.c"
 10936 ;; Parameters:    Size  Location     Type
 10937 ;;  event           2   41[BANK0 ] enum E8346
 10938 ;;  pdata           2   43[BANK0 ] PTR void 
 10939 ;;		 -> USTATcopy(1), USBActiveConfiguration(1), NULL(0), BDT(48), 
 10940 ;;  size            2   45[BANK0 ] unsigned int 
 10941 ;; Auto vars:     Size  Location     Type
 10942 ;;		None
 10943 ;; Return value:  Size  Location     Type
 10944 ;;                  1    wreg      unsigned char 
 10945 ;; Registers used:
 10946 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10947 ;; Tracked objects:
 10948 ;;		On entry : 0/0
 10949 ;;		On exit  : 0/0
 10950 ;;		Unchanged: 0/0
 10951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10952 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10953 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10954 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10955 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10956 ;;Total ram usage:        8 bytes
 10957 ;; Hardware stack levels used:    1
 10958 ;; Hardware stack levels required when called:   14
 10959 ;; This function calls:
 10960 ;;		_CDCInitEP
 10961 ;;		_USBCheckCDCRequest
 10962 ;; This function is called by:
 10963 ;;		_USBDeviceTasks
 10964 ;;		_USBStdSetCfgHandler
 10965 ;;		_USBSuspend
 10966 ;;		_USBWakeFromSuspend
 10967 ;;		_USBCtrlTrfSetupHandler
 10968 ;;		_USBCheckStdRequest
 10969 ;;		_USBStdFeatureReqHandler
 10970 ;; This function uses a non-reentrant model
 10971 ;;
 10972                           
 10973                           	psect	text44
 10974  004E62                     __ptext44:
 10975                           	opt stack 0
 10976  004E62                     _USER_USB_CALLBACK_EVENT_HANDLER:
 10977                           	opt stack 12
 10978                           
 10979                           ;usb_device_mgr.c: 106: switch( (int) event )
 10980                           
 10981                           ;incstack = 0
 10982  004E62  D006               	goto	l1983
 10983  004E64                     
 10984                           ;usb_device_mgr.c: 134: CDCInitEP();
 10985  004E64  EC2E  F026         	call	_CDCInitEP	;wreg free
 10986                           
 10987                           ;usb_device_mgr.c: 142: break;
 10988                           
 10989                           ;usb_device_mgr.c: 141: case EVENT_SET_DESCRIPTOR:
 10990                           
 10991                           ;usb_device_mgr.c: 139: break;
 10992  004E68  0012               	return	
 10993  004E6A                     
 10994                           ;usb_device_mgr.c: 148: USBCheckCDCRequest();
 10995  004E6A  ECD8  F01F         	call	_USBCheckCDCRequest	;wreg free
 10996                           
 10997                           ;usb_device_mgr.c: 163: }
 10998                           
 10999                           ;usb_device_mgr.c: 162: break;
 11000                           
 11001                           ;usb_device_mgr.c: 161: default:
 11002                           
 11003                           ;usb_device_mgr.c: 159: break;
 11004                           
 11005                           ;usb_device_mgr.c: 158: case EVENT_TRANSFER_TERMINATED:
 11006                           
 11007                           ;usb_device_mgr.c: 156: break;
 11008                           
 11009                           ;usb_device_mgr.c: 155: case EVENT_BUS_ERROR:
 11010                           
 11011                           ;usb_device_mgr.c: 153: break;
 11012  004E6E  0012               	return	
 11013  004E70                     l1983:
 11014  004E70  C089  F08F         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 11015  004E74  C08A  F090         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 11016                           
 11017                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 11018                           ; Switch size 1, requested type "space"
 11019                           ; Number of cases is 2, Range of values is 0 to 127
 11020                           ; switch strategies available:
 11021                           ; Name         Instructions Cycles
 11022                           ; simple_byte            7     4 (average)
 11023                           ;	Chosen strategy is simple_byte
 11024  004E78  0100               	movlb	0	; () banked
 11025  004E7A  5190               	movf	(??_USER_USB_CALLBACK_EVENT_HANDLER+1)& (0+255),w,b
 11026  004E7C  0A00               	xorlw	0	; case 0
 11027  004E7E  B4D8               	btfsc	status,2,c
 11028  004E80  D004               	goto	l14367
 11029  004E82  0A7F               	xorlw	127	; case 127
 11030  004E84  A4D8               	btfss	status,2,c
 11031  004E86  0012               	return	
 11032  004E88  D018               	goto	l14369
 11033  004E8A                     l14367:
 11034                           
 11035                           ; BSR set to: 0
 11036                           ; Switch size 1, requested type "space"
 11037                           ; Number of cases is 8, Range of values is 1 to 117
 11038                           ; switch strategies available:
 11039                           ; Name         Instructions Cycles
 11040                           ; simple_byte           25    13 (average)
 11041                           ;	Chosen strategy is simple_byte
 11042  004E8A  518F               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER& (0+255),w,b
 11043  004E8C  0A01               	xorlw	1	; case 1
 11044  004E8E  B4D8               	btfsc	status,2,c
 11045  004E90  D7E9               	goto	l1989
 11046  004E92  0A03               	xorlw	3	; case 2
 11047  004E94  B4D8               	btfsc	status,2,c
 11048  004E96  0012               	return	
 11049  004E98  0A01               	xorlw	1	; case 3
 11050  004E9A  B4D8               	btfsc	status,2,c
 11051  004E9C  D7E6               	goto	l1991
 11052  004E9E  0A06               	xorlw	6	; case 5
 11053  004EA0  B4D8               	btfsc	status,2,c
 11054  004EA2  0012               	return	
 11055  004EA4  0A77               	xorlw	119	; case 114
 11056  004EA6  B4D8               	btfsc	status,2,c
 11057  004EA8  0012               	return	
 11058  004EAA  0A01               	xorlw	1	; case 115
 11059  004EAC  B4D8               	btfsc	status,2,c
 11060  004EAE  0012               	return	
 11061  004EB0  0A07               	xorlw	7	; case 116
 11062  004EB2  B4D8               	btfsc	status,2,c
 11063  004EB4  0012               	return	
 11064  004EB6  0A01               	xorlw	1	; case 117
 11065  004EB8  0012               	return	
 11066  004EBA                     l14369:
 11067                           
 11068                           ; BSR set to: 0
 11069                           ; Switch size 1, requested type "space"
 11070                           ; Number of cases is 1, Range of values is 255 to 255
 11071                           ; switch strategies available:
 11072                           ; Name         Instructions Cycles
 11073                           ; simple_byte            4     3 (average)
 11074                           ;	Chosen strategy is simple_byte
 11075  004EBA  518F               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER& (0+255),w,b
 11076  004EBC  0AFF               	xorlw	255	; case 255
 11077  004EBE  0012               	return	
 11078  004EC0                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 11079                           	opt stack 0
 11080                           tosu	equ	0xFFF
 11081                           tosh	equ	0xFFE
 11082                           tosl	equ	0xFFD
 11083                           pclath	equ	0xFFA
 11084                           tblptru	equ	0xFF8
 11085                           tblptrh	equ	0xFF7
 11086                           tblptrl	equ	0xFF6
 11087                           tablat	equ	0xFF5
 11088                           prodh	equ	0xFF4
 11089                           prodl	equ	0xFF3
 11090                           intcon	equ	0xFF2
 11091                           intcon2	equ	0xFF1
 11092                           intcon3	equ	0xFF0
 11093                           indf0	equ	0xFEF
 11094                           postinc0	equ	0xFEE
 11095                           plusw0	equ	0xFEB
 11096                           fsr0h	equ	0xFEA
 11097                           fsr0l	equ	0xFE9
 11098                           wreg	equ	0xFE8
 11099                           postinc1	equ	0xFE6
 11100                           postdec1	equ	0xFE5
 11101                           plusw1	equ	0xFE3
 11102                           fsr1h	equ	0xFE2
 11103                           fsr1l	equ	0xFE1
 11104                           indf2	equ	0xFDF
 11105                           postinc2	equ	0xFDE
 11106                           postdec2	equ	0xFDD
 11107                           plusw2	equ	0xFDB
 11108                           fsr2h	equ	0xFDA
 11109                           fsr2l	equ	0xFD9
 11110                           status	equ	0xFD8
 11111                           
 11112 ;; *************** function _USBCheckCDCRequest *****************
 11113 ;; Defined at:
 11114 ;;		line 150 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 11115 ;; Parameters:    Size  Location     Type
 11116 ;;		None
 11117 ;; Auto vars:     Size  Location     Type
 11118 ;;		None
 11119 ;; Return value:  Size  Location     Type
 11120 ;;                  1    wreg      void 
 11121 ;; Registers used:
 11122 ;;		wreg, status,2, status,0
 11123 ;; Tracked objects:
 11124 ;;		On entry : 0/0
 11125 ;;		On exit  : 0/0
 11126 ;;		Unchanged: 0/0
 11127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11128 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11129 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11131 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11132 ;;Total ram usage:        0 bytes
 11133 ;; Hardware stack levels used:    1
 11134 ;; Hardware stack levels required when called:   11
 11135 ;; This function calls:
 11136 ;;		Nothing
 11137 ;; This function is called by:
 11138 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 11139 ;; This function uses a non-reentrant model
 11140 ;;
 11141                           
 11142                           	psect	text45
 11143  003FB0                     __ptext45:
 11144                           	opt stack 0
 11145  003FB0                     _USBCheckCDCRequest:
 11146                           	opt stack 14
 11147                           
 11148                           ;usb_device_cdc.c: 155: if(SetupPkt.Recipient != (0x01)) return;
 11149                           
 11150                           ;incstack = 0
 11151  003FB0  0104               	movlb	4	; () banked
 11152  003FB2  5130               	movf	48,w,b	;volatile
 11153  003FB4  0B1F               	andlw	31
 11154  003FB6  06E8               	decf	wreg,f,c
 11155  003FB8  A4D8               	btfss	status,2,c
 11156  003FBA  0012               	return	
 11157                           
 11158                           ; BSR set to: 4
 11159                           ;usb_device_cdc.c: 160: if(SetupPkt.RequestType != (0x20>>5)) return;
 11160                           
 11161                           ; BSR set to: 4
 11162                           
 11163                           ; BSR set to: 4
 11164  003FBC  3930               	swapf	48,w,b	;volatile
 11165  003FBE  32E8               	rrcf	wreg,f,c
 11166  003FC0  0B03               	andlw	3
 11167  003FC2  06E8               	decf	wreg,f,c
 11168  003FC4  A4D8               	btfss	status,2,c
 11169  003FC6  0012               	return	
 11170                           
 11171                           ; BSR set to: 4
 11172                           ;usb_device_cdc.c: 166: if((SetupPkt.bIntfID != 0x0)&&
 11173                           ;usb_device_cdc.c: 167: (SetupPkt.bIntfID != 0x01)) return;
 11174                           
 11175                           ; BSR set to: 4
 11176                           
 11177                           ; BSR set to: 4
 11178  003FC8  5134               	movf	52,w,b	;volatile
 11179  003FCA  B4D8               	btfsc	status,2,c
 11180  003FCC  D037               	goto	l1885
 11181                           
 11182                           ; BSR set to: 4
 11183  003FCE  0534               	decf	52,w,b	;volatile
 11184  003FD0  A4D8               	btfss	status,2,c
 11185  003FD2  0012               	return	
 11186  003FD4  D033               	goto	l1885
 11187  003FD6                     
 11188                           ; BSR set to: 4
 11189                           ;usb_device_cdc.c: 174: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 11190                           
 11191                           ; BSR set to: 4
 11192  003FD6  0E78               	movlw	low _dummy_encapsulated_cmd_response
 11193  003FD8  0100               	movlb	0	; () banked
 11194  003FDA  6FAC               	movwf	_inPipes& (0+255),b
 11195  003FDC  0E03               	movlw	high _dummy_encapsulated_cmd_response
 11196  003FDE  6FAD               	movwf	(_inPipes+1)& (0+255),b
 11197                           
 11198                           ; BSR set to: 0
 11199                           ;usb_device_cdc.c: 175: inPipes[0].wCount.Val = 0x08;
 11200  003FE0  0E00               	movlw	0
 11201  003FE2  6FB1               	movwf	(_inPipes+5)& (0+255),b
 11202  003FE4  0E08               	movlw	8
 11203  003FE6  6FB0               	movwf	(_inPipes+4)& (0+255),b
 11204                           
 11205                           ; BSR set to: 0
 11206                           ;usb_device_cdc.c: 176: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 11207  003FE8  81AF               	bsf	(_inPipes+3)& (0+255),0,b
 11208                           
 11209                           ; BSR set to: 0
 11210                           ;usb_device_cdc.c: 177: inPipes[0].info.bits.busy = 1;
 11211  003FEA  8FAF               	bsf	(_inPipes+3)& (0+255),7,b
 11212                           
 11213                           ;usb_device_cdc.c: 178: break;
 11214  003FEC  0012               	return	
 11215  003FEE                     
 11216                           ;usb_device_cdc.c: 181: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 11217                           
 11218                           ; BSR set to: 0
 11219  003FEE  0E78               	movlw	low _dummy_encapsulated_cmd_response
 11220  003FF0  0100               	movlb	0	; () banked
 11221  003FF2  6FAC               	movwf	_inPipes& (0+255),b
 11222  003FF4  0E03               	movlw	high _dummy_encapsulated_cmd_response
 11223  003FF6  6FAD               	movwf	(_inPipes+1)& (0+255),b
 11224                           
 11225                           ; BSR set to: 0
 11226                           ;usb_device_cdc.c: 182: inPipes[0].info.bits.busy = 1;
 11227  003FF8  8FAF               	bsf	(_inPipes+3)& (0+255),7,b
 11228                           
 11229                           ;usb_device_cdc.c: 183: break;
 11230  003FFA  0012               	return	
 11231  003FFC                     l1889:
 11232                           
 11233                           ; BSR set to: 4
 11234                           ;usb_device_cdc.c: 188: outPipes[0].wCount.Val = SetupPkt.wLength;
 11235  003FFC  C436 F1CD          	movff	1078,_outPipes+4	;volatile
 11236  004000  C437 F1CE          	movff	1079,_outPipes+5	;volatile
 11237                           
 11238                           ; BSR set to: 4
 11239                           ;usb_device_cdc.c: 189: outPipes[0].pDst.bRam = (uint8_t*)&line_coding._byte[0];
 11240  004004  0E80               	movlw	low _line_coding
 11241  004006  0101               	movlb	1	; () banked
 11242  004008  6FC9               	movwf	_outPipes& (0+255),b
 11243  00400A  0E03               	movlw	high _line_coding
 11244  00400C  6FCA               	movwf	(_outPipes+1)& (0+255),b
 11245                           
 11246                           ;usb_device_cdc.c: 190: outPipes[0].pFunc = (0);
 11247  00400E  0E00               	movlw	0
 11248  004010  6FCF               	movwf	(_outPipes+6)& (0+255),b
 11249  004012  0E00               	movlw	0
 11250  004014  6FD0               	movwf	(_outPipes+7)& (0+255),b
 11251                           
 11252                           ; BSR set to: 1
 11253                           ;usb_device_cdc.c: 191: outPipes[0].info.bits.busy = 1;
 11254  004016  8FCC               	bsf	(_outPipes+3)& (0+255),7,b
 11255                           
 11256                           ;usb_device_cdc.c: 192: break;
 11257  004018  0012               	return	
 11258  00401A                     
 11259                           ;usb_device_cdc.c: 195: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 11260                           
 11261                           ; BSR set to: 1
 11262  00401A  0E80               	movlw	low _line_coding
 11263  00401C  0100               	movlb	0	; () banked
 11264  00401E  6FAC               	movwf	_inPipes& (0+255),b
 11265  004020  0E03               	movlw	high _line_coding
 11266  004022  6FAD               	movwf	(_inPipes+1)& (0+255),b
 11267                           
 11268                           ; BSR set to: 0
 11269  004024  0E00               	movlw	0
 11270  004026  6FB1               	movwf	(_inPipes+5)& (0+255),b
 11271  004028  0E07               	movlw	7
 11272  00402A  6FB0               	movwf	(_inPipes+4)& (0+255),b
 11273                           
 11274                           ; BSR set to: 0
 11275  00402C  0EC1               	movlw	193
 11276  00402E  6FAF               	movwf	(_inPipes+3)& (0+255),b
 11277                           
 11278                           ;usb_device_cdc.c: 199: break;
 11279  004030  0012               	return	
 11280  004032                     l1891:
 11281                           
 11282                           ; BSR set to: 4
 11283                           ;usb_device_cdc.c: 202: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
 11284  004032  C432 F1E2          	movff	1074,_control_signal_bitmap	;volatile
 11285                           
 11286                           ;usb_device_cdc.c: 234: inPipes[0].info.bits.busy = 1;
 11287  004036  0100               	movlb	0	; () banked
 11288  004038  8FAF               	bsf	(_inPipes+3)& (0+255),7,b
 11289                           
 11290                           ; BSR set to: 0
 11291                           ;usb_device_cdc.c: 261: }
 11292                           
 11293                           ; BSR set to: 0
 11294                           ;usb_device_cdc.c: 260: break;
 11295                           
 11296                           ;usb_device_cdc.c: 259: default:
 11297                           
 11298                           ;usb_device_cdc.c: 235: break;
 11299  00403A  0012               	return	
 11300  00403C                     l1885:
 11301                           
 11302                           ; BSR set to: 0
 11303  00403C  0104               	movlb	4	; () banked
 11304  00403E  5131               	movf	49,w,b	;volatile
 11305                           
 11306                           ; Switch size 1, requested type "space"
 11307                           ; Number of cases is 5, Range of values is 0 to 34
 11308                           ; switch strategies available:
 11309                           ; Name         Instructions Cycles
 11310                           ; simple_byte           16     9 (average)
 11311                           ;	Chosen strategy is simple_byte
 11312  004040  0A00               	xorlw	0	; case 0
 11313  004042  B4D8               	btfsc	status,2,c
 11314  004044  D7C8               	goto	l1886
 11315  004046  0A01               	xorlw	1	; case 1
 11316  004048  B4D8               	btfsc	status,2,c
 11317  00404A  D7D1               	goto	l1888
 11318  00404C  0A21               	xorlw	33	; case 32
 11319  00404E  B4D8               	btfsc	status,2,c
 11320  004050  D7D5               	goto	l1889
 11321  004052  0A01               	xorlw	1	; case 33
 11322  004054  B4D8               	btfsc	status,2,c
 11323  004056  D7E1               	goto	l1890
 11324  004058  0A03               	xorlw	3	; case 34
 11325  00405A  A4D8               	btfss	status,2,c
 11326  00405C  0012               	return	
 11327  00405E  D7E9               	goto	l1891
 11328  004060                     __end_of_USBCheckCDCRequest:
 11329                           	opt stack 0
 11330                           tosu	equ	0xFFF
 11331                           tosh	equ	0xFFE
 11332                           tosl	equ	0xFFD
 11333                           pclath	equ	0xFFA
 11334                           tblptru	equ	0xFF8
 11335                           tblptrh	equ	0xFF7
 11336                           tblptrl	equ	0xFF6
 11337                           tablat	equ	0xFF5
 11338                           prodh	equ	0xFF4
 11339                           prodl	equ	0xFF3
 11340                           intcon	equ	0xFF2
 11341                           intcon2	equ	0xFF1
 11342                           intcon3	equ	0xFF0
 11343                           indf0	equ	0xFEF
 11344                           postinc0	equ	0xFEE
 11345                           plusw0	equ	0xFEB
 11346                           fsr0h	equ	0xFEA
 11347                           fsr0l	equ	0xFE9
 11348                           wreg	equ	0xFE8
 11349                           postinc1	equ	0xFE6
 11350                           postdec1	equ	0xFE5
 11351                           plusw1	equ	0xFE3
 11352                           fsr1h	equ	0xFE2
 11353                           fsr1l	equ	0xFE1
 11354                           indf2	equ	0xFDF
 11355                           postinc2	equ	0xFDE
 11356                           postdec2	equ	0xFDD
 11357                           plusw2	equ	0xFDB
 11358                           fsr2h	equ	0xFDA
 11359                           fsr2l	equ	0xFD9
 11360                           status	equ	0xFD8
 11361                           
 11362 ;; *************** function _CDCInitEP *****************
 11363 ;; Defined at:
 11364 ;;		line 297 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 11365 ;; Parameters:    Size  Location     Type
 11366 ;;		None
 11367 ;; Auto vars:     Size  Location     Type
 11368 ;;		None
 11369 ;; Return value:  Size  Location     Type
 11370 ;;                  1    wreg      void 
 11371 ;; Registers used:
 11372 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11373 ;; Tracked objects:
 11374 ;;		On entry : 0/0
 11375 ;;		On exit  : 0/0
 11376 ;;		Unchanged: 0/0
 11377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11378 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11379 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11380 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11381 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11382 ;;Total ram usage:        0 bytes
 11383 ;; Hardware stack levels used:    1
 11384 ;; Hardware stack levels required when called:   13
 11385 ;; This function calls:
 11386 ;;		_USBEnableEndpoint
 11387 ;;		_USBTransferOnePacket
 11388 ;; This function is called by:
 11389 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 11390 ;; This function uses a non-reentrant model
 11391 ;;
 11392                           
 11393                           	psect	text46
 11394  004C5C                     __ptext46:
 11395                           	opt stack 0
 11396  004C5C                     _CDCInitEP:
 11397                           	opt stack 12
 11398                           
 11399                           ;usb_device_cdc.c: 300: line_coding.dwDTERate = 9600;
 11400                           
 11401                           ;incstack = 0
 11402  004C5C  0E80               	movlw	128
 11403  004C5E  0103               	movlb	3	; () banked
 11404  004C60  6F80               	movwf	_line_coding& (0+255),b
 11405  004C62  0E25               	movlw	37
 11406  004C64  6F81               	movwf	(_line_coding+1)& (0+255),b
 11407  004C66  0E00               	movlw	0
 11408  004C68  6F82               	movwf	(_line_coding+2)& (0+255),b
 11409  004C6A  0E00               	movlw	0
 11410  004C6C  6F83               	movwf	(_line_coding+3)& (0+255),b
 11411                           
 11412                           ;usb_device_cdc.c: 301: line_coding.bCharFormat = 0x00;
 11413  004C6E  0E00               	movlw	0
 11414  004C70  6F84               	movwf	(_line_coding+4)& (0+255),b
 11415                           
 11416                           ;usb_device_cdc.c: 302: line_coding.bParityType = 0x00;
 11417  004C72  0E00               	movlw	0
 11418  004C74  6F85               	movwf	(_line_coding+5)& (0+255),b
 11419                           
 11420                           ;usb_device_cdc.c: 303: line_coding.bDataBits = 0x08;
 11421  004C76  0E08               	movlw	8
 11422  004C78  6F86               	movwf	(_line_coding+6)& (0+255),b
 11423                           
 11424                           ;usb_device_cdc.c: 305: cdc_rx_len = 0;
 11425  004C7A  0E00               	movlw	0
 11426  004C7C  0100               	movlb	0	; () banked
 11427  004C7E  6FC2               	movwf	_cdc_rx_len& (0+255),b
 11428                           
 11429                           ; BSR set to: 0
 11430                           ;usb_device_cdc.c: 318: USBEnableEndpoint(1,0x02|0x10|0x08);
 11431  004C80  0E1A               	movlw	26
 11432  004C82  6F85               	movwf	USBEnableEndpoint@options& (0+255),b
 11433  004C84  0E01               	movlw	1
 11434  004C86  ECB6  F02A         	call	_USBEnableEndpoint
 11435                           
 11436                           ;usb_device_cdc.c: 319: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
 11437  004C8A  0E1E               	movlw	30
 11438  004C8C  0100               	movlb	0	; () banked
 11439  004C8E  6F85               	movwf	USBEnableEndpoint@options& (0+255),b
 11440  004C90  0E02               	movlw	2
 11441  004C92  ECB6  F02A         	call	_USBEnableEndpoint
 11442                           
 11443                           ;usb_device_cdc.c: 321: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 11444  004C96  0E00               	movlw	0
 11445  004C98  0100               	movlb	0	; () banked
 11446  004C9A  6F7D               	movwf	USBTransferOnePacket@dir& (0+255),b
 11447  004C9C  0E54               	movlw	low _cdc_data_rx
 11448  004C9E  6F7E               	movwf	USBTransferOnePacket@data& (0+255),b
 11449  004CA0  0E04               	movlw	high _cdc_data_rx
 11450  004CA2  6F7F               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 11451  004CA4  0E40               	movlw	64
 11452  004CA6  6F80               	movwf	USBTransferOnePacket@len& (0+255),b
 11453  004CA8  0E02               	movlw	2
 11454  004CAA  ECC2  F01E         	call	_USBTransferOnePacket
 11455  004CAE  C07D  F0B8         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
 11456  004CB2  C07E  F0B9         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
 11457                           
 11458                           ;usb_device_cdc.c: 322: CDCDataInHandle = (0);
 11459  004CB6  0E00               	movlw	0
 11460  004CB8  0101               	movlb	1	; () banked
 11461  004CBA  6FD1               	movwf	_CDCDataInHandle& (0+255),b
 11462  004CBC  0E00               	movlw	0
 11463  004CBE  6FD2               	movwf	(_CDCDataInHandle+1)& (0+255),b
 11464                           
 11465                           ; BSR set to: 1
 11466                           ;usb_device_cdc.c: 349: cdc_trf_state = 0;
 11467  004CC0  0E00               	movlw	0
 11468  004CC2  0100               	movlb	0	; () banked
 11469  004CC4  6FC1               	movwf	_cdc_trf_state& (0+255),b
 11470                           
 11471                           ; BSR set to: 0
 11472  004CC6  0012               	return		;funcret
 11473  004CC8                     __end_of_CDCInitEP:
 11474                           	opt stack 0
 11475                           tosu	equ	0xFFF
 11476                           tosh	equ	0xFFE
 11477                           tosl	equ	0xFFD
 11478                           pclath	equ	0xFFA
 11479                           tblptru	equ	0xFF8
 11480                           tblptrh	equ	0xFF7
 11481                           tblptrl	equ	0xFF6
 11482                           tablat	equ	0xFF5
 11483                           prodh	equ	0xFF4
 11484                           prodl	equ	0xFF3
 11485                           intcon	equ	0xFF2
 11486                           intcon2	equ	0xFF1
 11487                           intcon3	equ	0xFF0
 11488                           indf0	equ	0xFEF
 11489                           postinc0	equ	0xFEE
 11490                           plusw0	equ	0xFEB
 11491                           fsr0h	equ	0xFEA
 11492                           fsr0l	equ	0xFE9
 11493                           wreg	equ	0xFE8
 11494                           postinc1	equ	0xFE6
 11495                           postdec1	equ	0xFE5
 11496                           plusw1	equ	0xFE3
 11497                           fsr1h	equ	0xFE2
 11498                           fsr1l	equ	0xFE1
 11499                           indf2	equ	0xFDF
 11500                           postinc2	equ	0xFDE
 11501                           postdec2	equ	0xFDD
 11502                           plusw2	equ	0xFDB
 11503                           fsr2h	equ	0xFDA
 11504                           fsr2l	equ	0xFD9
 11505                           status	equ	0xFD8
 11506                           
 11507 ;; *************** function _USBEnableEndpoint *****************
 11508 ;; Defined at:
 11509 ;;		line 896 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 11510 ;; Parameters:    Size  Location     Type
 11511 ;;  ep              1    wreg     unsigned char 
 11512 ;;  options         1   37[BANK0 ] unsigned char 
 11513 ;; Auto vars:     Size  Location     Type
 11514 ;;  ep              1   40[BANK0 ] unsigned char 
 11515 ;;  p               2   38[BANK0 ] PTR unsigned char 
 11516 ;;		 -> UEP0(1), 
 11517 ;; Return value:  Size  Location     Type
 11518 ;;                  1    wreg      void 
 11519 ;; Registers used:
 11520 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11521 ;; Tracked objects:
 11522 ;;		On entry : 0/0
 11523 ;;		On exit  : 0/0
 11524 ;;		Unchanged: 0/0
 11525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11526 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11527 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11529 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11530 ;;Total ram usage:        4 bytes
 11531 ;; Hardware stack levels used:    1
 11532 ;; Hardware stack levels required when called:   12
 11533 ;; This function calls:
 11534 ;;		_USBConfigureEndpoint
 11535 ;; This function is called by:
 11536 ;;		_CDCInitEP
 11537 ;; This function uses a non-reentrant model
 11538 ;;
 11539                           
 11540                           	psect	text47
 11541  00556C                     __ptext47:
 11542                           	opt stack 0
 11543  00556C                     _USBEnableEndpoint:
 11544                           	opt stack 12
 11545                           
 11546                           ; BSR set to: 0
 11547                           ;incstack = 0
 11548                           ;USBEnableEndpoint@ep stored from wreg
 11549  00556C  0100               	movlb	0	; () banked
 11550  00556E  6F88               	movwf	USBEnableEndpoint@ep& (0+255),b
 11551                           
 11552                           ;usb_device.c: 898: unsigned char* p;
 11553                           ;usb_device.c: 902: if(options & 0x04)
 11554  005570  0100               	movlb	0	; () banked
 11555  005572  A585               	btfss	USBEnableEndpoint@options& (0+255),2,b
 11556  005574  D005               	goto	l1626
 11557                           
 11558                           ; BSR set to: 0
 11559                           ;usb_device.c: 903: {
 11560                           ;usb_device.c: 904: USBConfigureEndpoint(ep, 0);
 11561  005576  0E00               	movlw	0
 11562  005578  6F7D               	movwf	USBConfigureEndpoint@direction& (0+255),b
 11563  00557A  5188               	movf	USBEnableEndpoint@ep& (0+255),w,b
 11564  00557C  EC73  F022         	call	_USBConfigureEndpoint
 11565  005580                     l1626:
 11566                           
 11567                           ;usb_device.c: 905: }
 11568                           ;usb_device.c: 906: if(options & 0x02)
 11569  005580  0100               	movlb	0	; () banked
 11570  005582  A385               	btfss	USBEnableEndpoint@options& (0+255),1,b
 11571  005584  D005               	goto	l1627
 11572                           
 11573                           ; BSR set to: 0
 11574                           ;usb_device.c: 907: {
 11575                           ;usb_device.c: 908: USBConfigureEndpoint(ep, 1);
 11576  005586  0E01               	movlw	1
 11577  005588  6F7D               	movwf	USBConfigureEndpoint@direction& (0+255),b
 11578  00558A  5188               	movf	USBEnableEndpoint@ep& (0+255),w,b
 11579  00558C  EC73  F022         	call	_USBConfigureEndpoint
 11580  005590                     l1627:
 11581                           
 11582                           ;usb_device.c: 909: }
 11583                           ;usb_device.c: 917: p = (unsigned char*)(&UEP0+ep);
 11584  005590  0100               	movlb	0	; () banked
 11585  005592  5188               	movf	USBEnableEndpoint@ep& (0+255),w,b
 11586  005594  0D01               	mullw	1
 11587  005596  0E26               	movlw	38
 11588  005598  24F3               	addwf	prodl,w,c
 11589  00559A  6F86               	movwf	USBEnableEndpoint@p& (0+255),b
 11590  00559C  0E0F               	movlw	15
 11591  00559E  20F4               	addwfc	prodh,w,c
 11592  0055A0  6F87               	movwf	(USBEnableEndpoint@p+1)& (0+255),b
 11593                           
 11594                           ; BSR set to: 0
 11595                           ;usb_device.c: 919: *p = options;
 11596  0055A2  C086  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 11597  0055A6  C087  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 11598  0055AA  C085  FFDF         	movff	USBEnableEndpoint@options,indf2
 11599                           
 11600                           ; BSR set to: 0
 11601  0055AE  0012               	return		;funcret
 11602  0055B0                     __end_of_USBEnableEndpoint:
 11603                           	opt stack 0
 11604                           tosu	equ	0xFFF
 11605                           tosh	equ	0xFFE
 11606                           tosl	equ	0xFFD
 11607                           pclath	equ	0xFFA
 11608                           tblptru	equ	0xFF8
 11609                           tblptrh	equ	0xFF7
 11610                           tblptrl	equ	0xFF6
 11611                           tablat	equ	0xFF5
 11612                           prodh	equ	0xFF4
 11613                           prodl	equ	0xFF3
 11614                           intcon	equ	0xFF2
 11615                           intcon2	equ	0xFF1
 11616                           intcon3	equ	0xFF0
 11617                           indf0	equ	0xFEF
 11618                           postinc0	equ	0xFEE
 11619                           plusw0	equ	0xFEB
 11620                           fsr0h	equ	0xFEA
 11621                           fsr0l	equ	0xFE9
 11622                           wreg	equ	0xFE8
 11623                           postinc1	equ	0xFE6
 11624                           postdec1	equ	0xFE5
 11625                           plusw1	equ	0xFE3
 11626                           fsr1h	equ	0xFE2
 11627                           fsr1l	equ	0xFE1
 11628                           indf2	equ	0xFDF
 11629                           postinc2	equ	0xFDE
 11630                           postdec2	equ	0xFDD
 11631                           plusw2	equ	0xFDB
 11632                           fsr2h	equ	0xFDA
 11633                           fsr2l	equ	0xFD9
 11634                           status	equ	0xFD8
 11635                           
 11636 ;; *************** function _USBConfigureEndpoint *****************
 11637 ;; Defined at:
 11638 ;;		line 1561 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 11639 ;; Parameters:    Size  Location     Type
 11640 ;;  EPNum           1    wreg     unsigned char 
 11641 ;;  direction       1   29[BANK0 ] unsigned char 
 11642 ;; Auto vars:     Size  Location     Type
 11643 ;;  EPNum           1   34[BANK0 ] unsigned char 
 11644 ;;  handle          2   35[BANK0 ] PTR volatile struct __BD
 11645 ;;		 -> BDT(48), 
 11646 ;; Return value:  Size  Location     Type
 11647 ;;                  1    wreg      void 
 11648 ;; Registers used:
 11649 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 11650 ;; Tracked objects:
 11651 ;;		On entry : 0/0
 11652 ;;		On exit  : 0/0
 11653 ;;		Unchanged: 0/0
 11654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11655 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11656 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11657 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11658 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11659 ;;Total ram usage:        8 bytes
 11660 ;; Hardware stack levels used:    1
 11661 ;; Hardware stack levels required when called:   11
 11662 ;; This function calls:
 11663 ;;		Nothing
 11664 ;; This function is called by:
 11665 ;;		_USBEnableEndpoint
 11666 ;; This function uses a non-reentrant model
 11667 ;;
 11668                           
 11669                           	psect	text48
 11670  0044E6                     __ptext48:
 11671                           	opt stack 0
 11672  0044E6                     _USBConfigureEndpoint:
 11673                           	opt stack 12
 11674                           
 11675                           ; BSR set to: 0
 11676                           ;incstack = 0
 11677                           ;USBConfigureEndpoint@EPNum stored from wreg
 11678  0044E6  0100               	movlb	0	; () banked
 11679  0044E8  6F82               	movwf	USBConfigureEndpoint@EPNum& (0+255),b
 11680                           
 11681                           ;usb_device.c: 1563: volatile BDT_ENTRY* handle;
 11682                           ;usb_device.c: 1567: handle = (volatile BDT_ENTRY*)&BDT[0];
 11683  0044EA  0E00               	movlw	0
 11684  0044EC  0100               	movlb	0	; () banked
 11685  0044EE  6F83               	movwf	USBConfigureEndpoint@handle& (0+255),b
 11686  0044F0  0E04               	movlw	4
 11687  0044F2  6F84               	movwf	(USBConfigureEndpoint@handle+1)& (0+255),b
 11688                           
 11689                           ; BSR set to: 0
 11690                           ;usb_device.c: 1568: handle += (4*EPNum+2*direction+0u);
 11691  0044F4  517D               	movf	USBConfigureEndpoint@direction& (0+255),w,b
 11692  0044F6  6F7E               	movwf	??_USBConfigureEndpoint& (0+255),b
 11693  0044F8  6B7F               	clrf	(??_USBConfigureEndpoint+1)& (0+255),b
 11694  0044FA  90D8               	bcf	status,0,c
 11695  0044FC  377E               	rlcf	??_USBConfigureEndpoint& (0+255),f,b
 11696  0044FE  377F               	rlcf	(??_USBConfigureEndpoint+1)& (0+255),f,b
 11697  004500  5182               	movf	USBConfigureEndpoint@EPNum& (0+255),w,b
 11698  004502  6F80               	movwf	(??_USBConfigureEndpoint+2)& (0+255),b
 11699  004504  6B81               	clrf	(??_USBConfigureEndpoint+3)& (0+255),b
 11700  004506  90D8               	bcf	status,0,c
 11701  004508  3780               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 11702  00450A  3781               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 11703  00450C  90D8               	bcf	status,0,c
 11704  00450E  3780               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 11705  004510  3781               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 11706  004512  517E               	movf	??_USBConfigureEndpoint& (0+255),w,b
 11707  004514  2780               	addwf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 11708  004516  517F               	movf	(??_USBConfigureEndpoint+1)& (0+255),w,b
 11709  004518  2381               	addwfc	(??_USBConfigureEndpoint+3)& (0+255),f,b
 11710  00451A  90D8               	bcf	status,0,c
 11711  00451C  3780               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 11712  00451E  3781               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 11713  004520  90D8               	bcf	status,0,c
 11714  004522  3780               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 11715  004524  3781               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 11716  004526  5180               	movf	(??_USBConfigureEndpoint+2)& (0+255),w,b
 11717  004528  2783               	addwf	USBConfigureEndpoint@handle& (0+255),f,b
 11718  00452A  5181               	movf	(??_USBConfigureEndpoint+3)& (0+255),w,b
 11719  00452C  2384               	addwfc	(USBConfigureEndpoint@handle+1)& (0+255),f,b
 11720                           
 11721                           ; BSR set to: 0
 11722                           ;usb_device.c: 1570: handle->STAT.UOWN = 0;
 11723  00452E  C083  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 11724  004532  C084  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 11725  004536  9EDF               	bcf	indf2,7,c
 11726                           
 11727                           ; BSR set to: 0
 11728                           ;usb_device.c: 1575: if(direction == 0)
 11729  004538  517D               	movf	USBConfigureEndpoint@direction& (0+255),w,b
 11730  00453A  A4D8               	btfss	status,2,c
 11731  00453C  D007               	goto	l1662
 11732                           
 11733                           ; BSR set to: 0
 11734                           ;usb_device.c: 1576: {
 11735                           ;usb_device.c: 1577: pBDTEntryOut[EPNum] = handle;
 11736  00453E  5182               	movf	USBConfigureEndpoint@EPNum& (0+255),w,b
 11737  004540  0D02               	mullw	2
 11738  004542  0E0E               	movlw	low _pBDTEntryOut
 11739  004544  24F3               	addwf	prodl,w,c
 11740  004546  6ED9               	movwf	fsr2l,c
 11741  004548  0E03               	movlw	high _pBDTEntryOut
 11742  00454A  D006               	goto	L10
 11743  00454C                     l1662:
 11744                           
 11745                           ; BSR set to: 0
 11746                           ;usb_device.c: 1579: else
 11747                           ;usb_device.c: 1580: {
 11748                           ;usb_device.c: 1581: pBDTEntryIn[EPNum] = handle;
 11749                           
 11750                           ; BSR set to: 0
 11751  00454C  5182               	movf	USBConfigureEndpoint@EPNum& (0+255),w,b
 11752  00454E  0D02               	mullw	2
 11753  004550  0EB2               	movlw	low _pBDTEntryIn
 11754  004552  24F3               	addwf	prodl,w,c
 11755  004554  6ED9               	movwf	fsr2l,c
 11756  004556  0E00               	movlw	high _pBDTEntryIn
 11757  004558                     L10:
 11758  004558  20F4               	addwfc	prodh,w,c
 11759  00455A  6EDA               	movwf	fsr2h,c
 11760  00455C  C083  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 11761  004560  C084  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 11762                           
 11763                           ; BSR set to: 0
 11764                           ;usb_device.c: 1582: }
 11765                           ;usb_device.c: 1585: handle->STAT.DTS = 0;
 11766                           
 11767                           ; BSR set to: 0
 11768  004564  C083  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 11769  004568  C084  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 11770  00456C  9CDF               	bcf	indf2,6,c
 11771                           
 11772                           ; BSR set to: 0
 11773                           ;usb_device.c: 1586: (handle+1)->STAT.DTS = 1;
 11774  00456E  EE20 F004          	lfsr	2,4
 11775  004572  5183               	movf	USBConfigureEndpoint@handle& (0+255),w,b
 11776  004574  26D9               	addwf	fsr2l,f,c
 11777  004576  5184               	movf	(USBConfigureEndpoint@handle+1)& (0+255),w,b
 11778  004578  22DA               	addwfc	fsr2h,f,c
 11779  00457A  8CDF               	bsf	indf2,6,c
 11780                           
 11781                           ; BSR set to: 0
 11782  00457C  0012               	return		;funcret
 11783  00457E                     __end_of_USBConfigureEndpoint:
 11784                           	opt stack 0
 11785                           tosu	equ	0xFFF
 11786                           tosh	equ	0xFFE
 11787                           tosl	equ	0xFFD
 11788                           pclath	equ	0xFFA
 11789                           tblptru	equ	0xFF8
 11790                           tblptrh	equ	0xFF7
 11791                           tblptrl	equ	0xFF6
 11792                           tablat	equ	0xFF5
 11793                           prodh	equ	0xFF4
 11794                           prodl	equ	0xFF3
 11795                           intcon	equ	0xFF2
 11796                           intcon2	equ	0xFF1
 11797                           intcon3	equ	0xFF0
 11798                           indf0	equ	0xFEF
 11799                           postinc0	equ	0xFEE
 11800                           plusw0	equ	0xFEB
 11801                           fsr0h	equ	0xFEA
 11802                           fsr0l	equ	0xFE9
 11803                           wreg	equ	0xFE8
 11804                           postinc1	equ	0xFE6
 11805                           postdec1	equ	0xFE5
 11806                           plusw1	equ	0xFE3
 11807                           fsr1h	equ	0xFE2
 11808                           fsr1l	equ	0xFE1
 11809                           indf2	equ	0xFDF
 11810                           postinc2	equ	0xFDE
 11811                           postdec2	equ	0xFDD
 11812                           plusw2	equ	0xFDB
 11813                           fsr2h	equ	0xFDA
 11814                           fsr2l	equ	0xFD9
 11815                           status	equ	0xFD8
 11816                           
 11817 ;; *************** function _USBCtrlTrfOutHandler *****************
 11818 ;; Defined at:
 11819 ;;		line 2555 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 11820 ;; Parameters:    Size  Location     Type
 11821 ;;		None
 11822 ;; Auto vars:     Size  Location     Type
 11823 ;;		None
 11824 ;; Return value:  Size  Location     Type
 11825 ;;                  1    wreg      void 
 11826 ;; Registers used:
 11827 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11828 ;; Tracked objects:
 11829 ;;		On entry : 0/0
 11830 ;;		On exit  : 0/0
 11831 ;;		Unchanged: 0/0
 11832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11833 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11834 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11836 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11837 ;;Total ram usage:        0 bytes
 11838 ;; Hardware stack levels used:    1
 11839 ;; Hardware stack levels required when called:   13
 11840 ;; This function calls:
 11841 ;;		_USBCtrlTrfRxService
 11842 ;; This function is called by:
 11843 ;;		_USBCtrlEPService
 11844 ;; This function uses a non-reentrant model
 11845 ;;
 11846                           
 11847                           	psect	text49
 11848  004D34                     __ptext49:
 11849                           	opt stack 0
 11850  004D34                     _USBCtrlTrfOutHandler:
 11851                           	opt stack 12
 11852                           
 11853                           ;usb_device.c: 2557: if(controlTransferState == 2)
 11854                           
 11855                           ; BSR set to: 0
 11856                           ;incstack = 0
 11857  004D34  0E02               	movlw	2
 11858  004D36  0100               	movlb	0	; () banked
 11859  004D38  19C9               	xorwf	_controlTransferState& (0+255),w,b
 11860  004D3A  A4D8               	btfss	status,2,c
 11861  004D3C  D003               	goto	l1768
 11862                           
 11863                           ; BSR set to: 0
 11864                           ;usb_device.c: 2558: {
 11865                           ;usb_device.c: 2559: USBCtrlTrfRxService();
 11866  004D3E  EC17  F015         	call	_USBCtrlTrfRxService	;wreg free
 11867                           
 11868                           ;usb_device.c: 2560: }
 11869  004D42  0012               	return	
 11870  004D44                     l1768:
 11871                           
 11872                           ;usb_device.c: 2561: else
 11873                           ;usb_device.c: 2562: {
 11874                           ;usb_device.c: 2565: controlTransferState = 0;
 11875  004D44  0E00               	movlw	0
 11876  004D46  0100               	movlb	0	; () banked
 11877  004D48  6FC9               	movwf	_controlTransferState& (0+255),b
 11878                           
 11879                           ;usb_device.c: 2572: if(BothEP0OutUOWNsSet == 0)
 11880  004D4A  0101               	movlb	1	; () banked
 11881  004D4C  51E5               	movf	_BothEP0OutUOWNsSet& (0+255),w,b
 11882  004D4E  A4D8               	btfss	status,2,c
 11883  004D50  D020               	goto	l1770
 11884                           
 11885                           ; BSR set to: 1
 11886                           ;usb_device.c: 2573: {
 11887                           ;usb_device.c: 2574: pBDTEntryEP0OutNext->CNT = 8;
 11888  004D52  0100               	movlb	0	; () banked
 11889  004D54  EE20 F001          	lfsr	2,1
 11890  004D58  51BA               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 11891  004D5A  26D9               	addwf	fsr2l,f,c
 11892  004D5C  51BB               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 11893  004D5E  22DA               	addwfc	fsr2h,f,c
 11894  004D60  0E08               	movlw	8
 11895  004D62  6EDF               	movwf	indf2,c
 11896                           
 11897                           ;usb_device.c: 2575: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 11898  004D64  EE20 F002          	lfsr	2,2
 11899  004D68  51BA               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 11900  004D6A  26D9               	addwf	fsr2l,f,c
 11901  004D6C  51BB               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 11902  004D6E  22DA               	addwfc	fsr2h,f,c
 11903  004D70  0E30               	movlw	48
 11904  004D72  6EDE               	movwf	postinc2,c
 11905  004D74  0E04               	movlw	4
 11906  004D76  6EDD               	movwf	postdec2,c
 11907                           
 11908                           ; BSR set to: 0
 11909                           ;usb_device.c: 2576: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 11910  004D78  C0BA  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 11911  004D7C  C0BB  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 11912  004D80  0E0C               	movlw	12
 11913  004D82  6EDF               	movwf	indf2,c
 11914                           
 11915                           ; BSR set to: 0
 11916                           ;usb_device.c: 2577: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 11917  004D84  C0BA  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 11918  004D88  C0BB  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 11919  004D8C  0E00               	movlw	0
 11920  004D8E  8EDB               	bsf	plusw2,7,c
 11921                           
 11922                           ;usb_device.c: 2578: }
 11923  004D90  0012               	return	
 11924  004D92                     l1770:
 11925                           
 11926                           ;usb_device.c: 2579: else
 11927                           ;usb_device.c: 2580: {
 11928                           ;usb_device.c: 2581: BothEP0OutUOWNsSet = 0;
 11929                           
 11930                           ; BSR set to: 0
 11931  004D92  0E00               	movlw	0
 11932  004D94  0101               	movlb	1	; () banked
 11933  004D96  6FE5               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 11934                           
 11935                           ; BSR set to: 1
 11936  004D98  0012               	return	
 11937  004D9A                     __end_of_USBCtrlTrfOutHandler:
 11938                           	opt stack 0
 11939                           tosu	equ	0xFFF
 11940                           tosh	equ	0xFFE
 11941                           tosl	equ	0xFFD
 11942                           pclath	equ	0xFFA
 11943                           tblptru	equ	0xFF8
 11944                           tblptrh	equ	0xFF7
 11945                           tblptrl	equ	0xFF6
 11946                           tablat	equ	0xFF5
 11947                           prodh	equ	0xFF4
 11948                           prodl	equ	0xFF3
 11949                           intcon	equ	0xFF2
 11950                           intcon2	equ	0xFF1
 11951                           intcon3	equ	0xFF0
 11952                           indf0	equ	0xFEF
 11953                           postinc0	equ	0xFEE
 11954                           plusw0	equ	0xFEB
 11955                           fsr0h	equ	0xFEA
 11956                           fsr0l	equ	0xFE9
 11957                           wreg	equ	0xFE8
 11958                           postinc1	equ	0xFE6
 11959                           postdec1	equ	0xFE5
 11960                           plusw1	equ	0xFE3
 11961                           fsr1h	equ	0xFE2
 11962                           fsr1l	equ	0xFE1
 11963                           indf2	equ	0xFDF
 11964                           postinc2	equ	0xFDE
 11965                           postdec2	equ	0xFDD
 11966                           plusw2	equ	0xFDB
 11967                           fsr2h	equ	0xFDA
 11968                           fsr2l	equ	0xFD9
 11969                           status	equ	0xFD8
 11970                           
 11971 ;; *************** function _USBCtrlTrfRxService *****************
 11972 ;; Defined at:
 11973 ;;		line 1870 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 11974 ;; Parameters:    Size  Location     Type
 11975 ;;		None
 11976 ;; Auto vars:     Size  Location     Type
 11977 ;;  byteToRead      1   30[BANK0 ] unsigned char 
 11978 ;;  i               1   29[BANK0 ] unsigned char 
 11979 ;; Return value:  Size  Location     Type
 11980 ;;                  1    wreg      void 
 11981 ;; Registers used:
 11982 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11983 ;; Tracked objects:
 11984 ;;		On entry : 0/0
 11985 ;;		On exit  : 0/0
 11986 ;;		Unchanged: 0/0
 11987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11988 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11989 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11990 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11991 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11992 ;;Total ram usage:        2 bytes
 11993 ;; Hardware stack levels used:    1
 11994 ;; Hardware stack levels required when called:   12
 11995 ;; This function calls:
 11996 ;;		_USBCtrlEPAllowStatusStage
 11997 ;; This function is called by:
 11998 ;;		_USBCtrlTrfOutHandler
 11999 ;; This function uses a non-reentrant model
 12000 ;;
 12001                           
 12002                           	psect	text50
 12003  002A2E                     __ptext50:
 12004                           	opt stack 0
 12005  002A2E                     _USBCtrlTrfRxService:
 12006                           	opt stack 12
 12007                           
 12008                           ;usb_device.c: 1872: uint8_t byteToRead;
 12009                           ;usb_device.c: 1873: uint8_t i;
 12010                           ;usb_device.c: 1877: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 12011                           
 12012                           ;incstack = 0
 12013  002A2E  0100               	movlb	0	; () banked
 12014  002A30  EE20 F001          	lfsr	2,1
 12015  002A34  51BC               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 12016  002A36  26D9               	addwf	fsr2l,f,c
 12017  002A38  51BD               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 12018  002A3A  22DA               	addwfc	fsr2h,f,c
 12019  002A3C  50DF               	movf	indf2,w,c
 12020  002A3E  6F7E               	movwf	USBCtrlTrfRxService@byteToRead& (0+255),b
 12021                           
 12022                           ; BSR set to: 0
 12023                           ;usb_device.c: 1883: if(byteToRead > outPipes[0].wCount.Val)
 12024  002A40  517E               	movf	USBCtrlTrfRxService@byteToRead& (0+255),w,b
 12025  002A42  0101               	movlb	1	; () banked
 12026  002A44  5DCD               	subwf	(_outPipes+4)& (0+255),w,b
 12027  002A46  0E00               	movlw	0
 12028  002A48  59CE               	subwfb	(_outPipes+5)& (0+255),w,b
 12029  002A4A  A0D8               	btfss	status,0,c
 12030                           
 12031                           ; BSR set to: 1
 12032                           ;usb_device.c: 1884: {
 12033                           ;usb_device.c: 1885: byteToRead = outPipes[0].wCount.Val;
 12034  002A4C  C1CD  F07E         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead
 12035                           
 12036                           ; BSR set to: 1
 12037                           ;usb_device.c: 1886: }
 12038                           ;usb_device.c: 1888: outPipes[0].wCount.Val -= byteToRead;
 12039                           
 12040                           ; BSR set to: 1
 12041  002A50  0100               	movlb	0	; () banked
 12042  002A52  517E               	movf	USBCtrlTrfRxService@byteToRead& (0+255),w,b
 12043  002A54  0101               	movlb	1	; () banked
 12044  002A56  5FCD               	subwf	(_outPipes+4)& (0+255),f,b
 12045  002A58  0E00               	movlw	0
 12046  002A5A  5BCE               	subwfb	(_outPipes+5)& (0+255),f,b
 12047                           
 12048                           ; BSR set to: 1
 12049                           ;usb_device.c: 1892: for(i=0;i<byteToRead;i++)
 12050  002A5C  0E00               	movlw	0
 12051  002A5E  0100               	movlb	0	; () banked
 12052  002A60  6F7D               	movwf	USBCtrlTrfRxService@i& (0+255),b
 12053  002A62  D013               	goto	l1696
 12054  002A64                     
 12055                           ; BSR set to: 0
 12056                           ;usb_device.c: 1893: {
 12057                           ;usb_device.c: 1894: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 12058                           
 12059                           ; BSR set to: 0
 12060  002A64  517D               	movf	USBCtrlTrfRxService@i& (0+255),w,b
 12061  002A66  0D01               	mullw	1
 12062  002A68  0E38               	movlw	56
 12063  002A6A  24F3               	addwf	prodl,w,c
 12064  002A6C  6ED9               	movwf	fsr2l,c
 12065  002A6E  0E04               	movlw	4
 12066  002A70  20F4               	addwfc	prodh,w,c
 12067  002A72  6EDA               	movwf	fsr2h,c
 12068  002A74  C1C9  FFE1         	movff	_outPipes,fsr1l
 12069  002A78  C1CA  FFE2         	movff	_outPipes+1,fsr1h
 12070  002A7C  CFDF FFE7          	movff	indf2,indf1
 12071                           
 12072                           ; BSR set to: 0
 12073  002A80  0101               	movlb	1	; () banked
 12074  002A82  4BC9               	infsnz	_outPipes& (0+255),f,b
 12075  002A84  2BCA               	incf	(_outPipes+1)& (0+255),f,b
 12076                           
 12077                           ; BSR set to: 1
 12078  002A86  0100               	movlb	0	; () banked
 12079  002A88  2B7D               	incf	USBCtrlTrfRxService@i& (0+255),f,b
 12080  002A8A                     l1696:
 12081                           
 12082                           ; BSR set to: 0
 12083                           
 12084                           ; BSR set to: 0
 12085  002A8A  517E               	movf	USBCtrlTrfRxService@byteToRead& (0+255),w,b
 12086  002A8C  5D7D               	subwf	USBCtrlTrfRxService@i& (0+255),w,b
 12087  002A8E  A0D8               	btfss	status,0,c
 12088  002A90  D7E9               	goto	l1697
 12089                           
 12090                           ; BSR set to: 0
 12091                           ;usb_device.c: 1895: }
 12092                           ;usb_device.c: 1899: if(outPipes[0].wCount.Val > 0)
 12093                           
 12094                           ; BSR set to: 0
 12095  002A92  0101               	movlb	1	; () banked
 12096  002A94  51CD               	movf	(_outPipes+4)& (0+255),w,b
 12097  002A96  11CE               	iorwf	(_outPipes+5)& (0+255),w,b
 12098  002A98  B4D8               	btfsc	status,2,c
 12099  002A9A  D033               	goto	l1699
 12100                           
 12101                           ; BSR set to: 1
 12102                           ;usb_device.c: 1900: {
 12103                           ;usb_device.c: 1901: pBDTEntryEP0OutNext->CNT = 8;
 12104  002A9C  0100               	movlb	0	; () banked
 12105  002A9E  EE20 F001          	lfsr	2,1
 12106  002AA2  51BA               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12107  002AA4  26D9               	addwf	fsr2l,f,c
 12108  002AA6  51BB               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12109  002AA8  22DA               	addwfc	fsr2h,f,c
 12110  002AAA  0E08               	movlw	8
 12111  002AAC  6EDF               	movwf	indf2,c
 12112                           
 12113                           ;usb_device.c: 1902: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 12114  002AAE  EE20 F002          	lfsr	2,2
 12115  002AB2  51BA               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12116  002AB4  26D9               	addwf	fsr2l,f,c
 12117  002AB6  51BB               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12118  002AB8  22DA               	addwfc	fsr2h,f,c
 12119  002ABA  0E38               	movlw	56
 12120  002ABC  6EDE               	movwf	postinc2,c
 12121  002ABE  0E04               	movlw	4
 12122  002AC0  6EDD               	movwf	postdec2,c
 12123                           
 12124                           ; BSR set to: 0
 12125                           ;usb_device.c: 1903: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 12126  002AC2  C0BC  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 12127  002AC6  C0BD  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 12128  002ACA  BCDF               	btfsc	indf2,6,c
 12129  002ACC  D00D               	goto	l1700
 12130                           
 12131                           ; BSR set to: 0
 12132                           ;usb_device.c: 1904: {
 12133                           ;usb_device.c: 1905: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 12134  002ACE  C0BA  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12135  002AD2  C0BB  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12136  002AD6  0E48               	movlw	72
 12137  002AD8  6EDF               	movwf	indf2,c
 12138                           
 12139                           ; BSR set to: 0
 12140                           ;usb_device.c: 1906: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 12141  002ADA  C0BA  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12142  002ADE  C0BB  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12143  002AE2  0E00               	movlw	0
 12144  002AE4  8EDB               	bsf	plusw2,7,c
 12145                           
 12146                           ;usb_device.c: 1907: }
 12147  002AE6  0012               	return	
 12148  002AE8                     l1700:
 12149                           
 12150                           ; BSR set to: 0
 12151                           ;usb_device.c: 1908: else
 12152                           ;usb_device.c: 1909: {
 12153                           ;usb_device.c: 1910: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
 12154                           
 12155                           ; BSR set to: 0
 12156  002AE8  C0BA  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12157  002AEC  C0BB  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12158  002AF0  0E08               	movlw	8
 12159  002AF2  6EDF               	movwf	indf2,c
 12160                           
 12161                           ; BSR set to: 0
 12162                           ;usb_device.c: 1911: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 12163  002AF4  C0BA  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12164  002AF8  C0BB  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12165  002AFC  0E00               	movlw	0
 12166  002AFE  8EDB               	bsf	plusw2,7,c
 12167                           
 12168                           ; BSR set to: 0
 12169                           ;usb_device.c: 1912: }
 12170                           ;usb_device.c: 1913: }
 12171  002B00  0012               	return	
 12172  002B02                     l1699:
 12173                           
 12174                           ;usb_device.c: 1914: else
 12175                           ;usb_device.c: 1915: {
 12176                           ;usb_device.c: 1919: pBDTEntryEP0OutNext->CNT = 8;
 12177                           
 12178                           ; BSR set to: 0
 12179  002B02  0100               	movlb	0	; () banked
 12180  002B04  EE20 F001          	lfsr	2,1
 12181  002B08  51BA               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12182  002B0A  26D9               	addwf	fsr2l,f,c
 12183  002B0C  51BB               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12184  002B0E  22DA               	addwfc	fsr2h,f,c
 12185  002B10  0E08               	movlw	8
 12186  002B12  6EDF               	movwf	indf2,c
 12187                           
 12188                           ;usb_device.c: 1920: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 12189  002B14  EE20 F002          	lfsr	2,2
 12190  002B18  51BA               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12191  002B1A  26D9               	addwf	fsr2l,f,c
 12192  002B1C  51BB               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12193  002B1E  22DA               	addwfc	fsr2h,f,c
 12194  002B20  0E30               	movlw	48
 12195  002B22  6EDE               	movwf	postinc2,c
 12196  002B24  0E04               	movlw	4
 12197  002B26  6EDD               	movwf	postdec2,c
 12198                           
 12199                           ; BSR set to: 0
 12200                           ;usb_device.c: 1924: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 12201  002B28  C0BA  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12202  002B2C  C0BB  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12203  002B30  0E04               	movlw	4
 12204  002B32  6EDF               	movwf	indf2,c
 12205                           
 12206                           ; BSR set to: 0
 12207                           ;usb_device.c: 1925: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 12208  002B34  C0BA  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12209  002B38  C0BB  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12210  002B3C  0E00               	movlw	0
 12211  002B3E  8EDB               	bsf	plusw2,7,c
 12212                           
 12213                           ; BSR set to: 0
 12214                           ;usb_device.c: 1944: }
 12215                           ;usb_device.c: 1945: outPipes[0].info.bits.busy = 0;
 12216                           
 12217                           ; BSR set to: 0
 12218  002B40  0101               	movlb	1	; () banked
 12219  002B42  9FCC               	bcf	(_outPipes+3)& (0+255),7,b
 12220                           
 12221                           ; BSR set to: 1
 12222                           ;usb_device.c: 1959: if(USBDeferStatusStagePacket == 0)
 12223  002B44  0100               	movlb	0	; () banked
 12224  002B46  51C6               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 12225  002B48  A4D8               	btfss	status,2,c
 12226  002B4A  0012               	return	
 12227                           
 12228                           ; BSR set to: 0
 12229                           ;usb_device.c: 1960: {
 12230                           ;usb_device.c: 1961: USBCtrlEPAllowStatusStage();
 12231  002B4C  ECA3  F01B         	call	_USBCtrlEPAllowStatusStage	;wreg free
 12232  002B50  0012               	return	
 12233  002B52                     __end_of_USBCtrlTrfRxService:
 12234                           	opt stack 0
 12235                           tosu	equ	0xFFF
 12236                           tosh	equ	0xFFE
 12237                           tosl	equ	0xFFD
 12238                           pclath	equ	0xFFA
 12239                           tblptru	equ	0xFF8
 12240                           tblptrh	equ	0xFF7
 12241                           tblptrl	equ	0xFF6
 12242                           tablat	equ	0xFF5
 12243                           prodh	equ	0xFF4
 12244                           prodl	equ	0xFF3
 12245                           intcon	equ	0xFF2
 12246                           intcon2	equ	0xFF1
 12247                           intcon3	equ	0xFF0
 12248                           indf0	equ	0xFEF
 12249                           postinc0	equ	0xFEE
 12250                           plusw0	equ	0xFEB
 12251                           fsr0h	equ	0xFEA
 12252                           fsr0l	equ	0xFE9
 12253                           wreg	equ	0xFE8
 12254                           indf1	equ	0xFE7
 12255                           postinc1	equ	0xFE6
 12256                           postdec1	equ	0xFE5
 12257                           plusw1	equ	0xFE3
 12258                           fsr1h	equ	0xFE2
 12259                           fsr1l	equ	0xFE1
 12260                           indf2	equ	0xFDF
 12261                           postinc2	equ	0xFDE
 12262                           postdec2	equ	0xFDD
 12263                           plusw2	equ	0xFDB
 12264                           fsr2h	equ	0xFDA
 12265                           fsr2l	equ	0xFD9
 12266                           status	equ	0xFD8
 12267                           
 12268 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 12269 ;; Defined at:
 12270 ;;		line 1434 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 12271 ;; Parameters:    Size  Location     Type
 12272 ;;		None
 12273 ;; Auto vars:     Size  Location     Type
 12274 ;;		None
 12275 ;; Return value:  Size  Location     Type
 12276 ;;                  1    wreg      void 
 12277 ;; Registers used:
 12278 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12279 ;; Tracked objects:
 12280 ;;		On entry : 0/0
 12281 ;;		On exit  : 0/0
 12282 ;;		Unchanged: 0/0
 12283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12284 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12285 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12286 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12287 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12288 ;;Total ram usage:        0 bytes
 12289 ;; Hardware stack levels used:    1
 12290 ;; Hardware stack levels required when called:   11
 12291 ;; This function calls:
 12292 ;;		Nothing
 12293 ;; This function is called by:
 12294 ;;		_USBDeviceTasks
 12295 ;;		_USBCtrlEPServiceComplete
 12296 ;;		_USBCtrlTrfRxService
 12297 ;; This function uses a non-reentrant model
 12298 ;;
 12299                           
 12300                           	psect	text51
 12301  003746                     __ptext51:
 12302                           	opt stack 0
 12303  003746                     _USBCtrlEPAllowStatusStage:
 12304                           	opt stack 12
 12305                           
 12306                           ;usb_device.c: 1441: if(USBStatusStageEnabledFlag1 == 0)
 12307                           
 12308                           ;incstack = 0
 12309  003746  0100               	movlb	0	; () banked
 12310  003748  51C5               	movf	_USBStatusStageEnabledFlag1& (0+255),w,b	;volatile
 12311  00374A  A4D8               	btfss	status,2,c
 12312  00374C  0012               	return	
 12313                           
 12314                           ; BSR set to: 0
 12315                           ;usb_device.c: 1442: {
 12316                           ;usb_device.c: 1443: USBStatusStageEnabledFlag1 = 1;
 12317  00374E  0E01               	movlw	1
 12318  003750  6FC5               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 12319                           
 12320                           ;usb_device.c: 1444: if(USBStatusStageEnabledFlag2 == 0)
 12321  003752  51C4               	movf	_USBStatusStageEnabledFlag2& (0+255),w,b	;volatile
 12322  003754  A4D8               	btfss	status,2,c
 12323  003756  0012               	return	
 12324                           
 12325                           ; BSR set to: 0
 12326                           ;usb_device.c: 1445: {
 12327                           ;usb_device.c: 1446: USBStatusStageEnabledFlag2 = 1;
 12328  003758  0E01               	movlw	1
 12329  00375A  6FC4               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 12330                           
 12331                           ; BSR set to: 0
 12332                           ;usb_device.c: 1450: if(controlTransferState == 2)
 12333  00375C  0E02               	movlw	2
 12334  00375E  19C9               	xorwf	_controlTransferState& (0+255),w,b
 12335  003760  A4D8               	btfss	status,2,c
 12336  003762  D015               	goto	l1650
 12337                           
 12338                           ; BSR set to: 0
 12339                           ;usb_device.c: 1451: {
 12340                           ;usb_device.c: 1452: pBDTEntryIn[0]->CNT = 0;
 12341  003764  EE20 F001          	lfsr	2,1
 12342  003768  51B2               	movf	_pBDTEntryIn& (0+255),w,b
 12343  00376A  26D9               	addwf	fsr2l,f,c
 12344  00376C  51B3               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 12345  00376E  22DA               	addwfc	fsr2h,f,c
 12346  003770  0E00               	movlw	0
 12347  003772  6EDF               	movwf	indf2,c
 12348                           
 12349                           ; BSR set to: 0
 12350                           ;usb_device.c: 1453: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 12351  003774  C0B2  FFD9         	movff	_pBDTEntryIn,fsr2l
 12352  003778  C0B3  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12353  00377C  0E48               	movlw	72
 12354  00377E  6EDF               	movwf	indf2,c
 12355                           
 12356                           ; BSR set to: 0
 12357                           ;usb_device.c: 1454: pBDTEntryIn[0]->STAT.Val |= 0x80;
 12358  003780  C0B2  FFD9         	movff	_pBDTEntryIn,fsr2l
 12359  003784  C0B3  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12360  003788  0E00               	movlw	0
 12361  00378A  8EDB               	bsf	plusw2,7,c
 12362                           
 12363                           ;usb_device.c: 1455: }
 12364  00378C  0012               	return	
 12365  00378E                     l1650:
 12366                           
 12367                           ; BSR set to: 0
 12368                           ;usb_device.c: 1456: else if(controlTransferState == 1)
 12369                           
 12370                           ; BSR set to: 0
 12371  00378E  05C9               	decf	_controlTransferState& (0+255),w,b
 12372  003790  A4D8               	btfss	status,2,c
 12373  003792  0012               	return	
 12374                           
 12375                           ; BSR set to: 0
 12376                           ;usb_device.c: 1457: {
 12377                           ;usb_device.c: 1458: BothEP0OutUOWNsSet = 0;
 12378  003794  0E00               	movlw	0
 12379  003796  0101               	movlb	1	; () banked
 12380  003798  6FE5               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 12381                           
 12382                           ; BSR set to: 1
 12383                           ;usb_device.c: 1463: pBDTEntryEP0OutCurrent->CNT = 8;
 12384  00379A  0100               	movlb	0	; () banked
 12385  00379C  EE20 F001          	lfsr	2,1
 12386  0037A0  51BC               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 12387  0037A2  26D9               	addwf	fsr2l,f,c
 12388  0037A4  51BD               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 12389  0037A6  22DA               	addwfc	fsr2h,f,c
 12390  0037A8  0E08               	movlw	8
 12391  0037AA  6EDF               	movwf	indf2,c
 12392                           
 12393                           ; BSR set to: 0
 12394                           ;usb_device.c: 1464: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 12395  0037AC  EE20 F002          	lfsr	2,2
 12396  0037B0  51BC               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 12397  0037B2  26D9               	addwf	fsr2l,f,c
 12398  0037B4  51BD               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 12399  0037B6  22DA               	addwfc	fsr2h,f,c
 12400  0037B8  0E30               	movlw	48
 12401  0037BA  6EDE               	movwf	postinc2,c
 12402  0037BC  0E04               	movlw	4
 12403  0037BE  6EDD               	movwf	postdec2,c
 12404                           
 12405                           ; BSR set to: 0
 12406                           ;usb_device.c: 1465: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 12407  0037C0  C0BC  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 12408  0037C4  C0BD  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 12409  0037C8  0E04               	movlw	4
 12410  0037CA  6EDF               	movwf	indf2,c
 12411                           
 12412                           ; BSR set to: 0
 12413                           ;usb_device.c: 1466: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 12414  0037CC  C0BC  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 12415  0037D0  C0BD  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 12416  0037D4  0E00               	movlw	0
 12417  0037D6  8EDB               	bsf	plusw2,7,c
 12418                           
 12419                           ; BSR set to: 0
 12420                           ;usb_device.c: 1467: BothEP0OutUOWNsSet = 1;
 12421  0037D8  0E01               	movlw	1
 12422  0037DA  0101               	movlb	1	; () banked
 12423  0037DC  6FE5               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 12424                           
 12425                           ; BSR set to: 1
 12426                           ;usb_device.c: 1471: pBDTEntryEP0OutNext->CNT = 8;
 12427  0037DE  0100               	movlb	0	; () banked
 12428  0037E0  EE20 F001          	lfsr	2,1
 12429  0037E4  51BA               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12430  0037E6  26D9               	addwf	fsr2l,f,c
 12431  0037E8  51BB               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12432  0037EA  22DA               	addwfc	fsr2h,f,c
 12433  0037EC  0E08               	movlw	8
 12434  0037EE  6EDF               	movwf	indf2,c
 12435                           
 12436                           ; BSR set to: 0
 12437                           ;usb_device.c: 1472: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 12438  0037F0  EE20 F002          	lfsr	2,2
 12439  0037F4  51BA               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12440  0037F6  26D9               	addwf	fsr2l,f,c
 12441  0037F8  51BB               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12442  0037FA  22DA               	addwfc	fsr2h,f,c
 12443  0037FC  0E30               	movlw	48
 12444  0037FE  6EDE               	movwf	postinc2,c
 12445  003800  0E04               	movlw	4
 12446  003802  6EDD               	movwf	postdec2,c
 12447                           
 12448                           ; BSR set to: 0
 12449                           ;usb_device.c: 1473: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 12450  003804  C0BA  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12451  003808  C0BB  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12452  00380C  0E80               	movlw	128
 12453  00380E  6EDF               	movwf	indf2,c
 12454                           
 12455                           ; BSR set to: 0
 12456                           
 12457                           ; BSR set to: 0
 12458                           
 12459                           ; BSR set to: 0
 12460  003810  0012               	return	
 12461  003812                     __end_of_USBCtrlEPAllowStatusStage:
 12462                           	opt stack 0
 12463                           tosu	equ	0xFFF
 12464                           tosh	equ	0xFFE
 12465                           tosl	equ	0xFFD
 12466                           pclath	equ	0xFFA
 12467                           tblptru	equ	0xFF8
 12468                           tblptrh	equ	0xFF7
 12469                           tblptrl	equ	0xFF6
 12470                           tablat	equ	0xFF5
 12471                           prodh	equ	0xFF4
 12472                           prodl	equ	0xFF3
 12473                           intcon	equ	0xFF2
 12474                           intcon2	equ	0xFF1
 12475                           intcon3	equ	0xFF0
 12476                           indf0	equ	0xFEF
 12477                           postinc0	equ	0xFEE
 12478                           plusw0	equ	0xFEB
 12479                           fsr0h	equ	0xFEA
 12480                           fsr0l	equ	0xFE9
 12481                           wreg	equ	0xFE8
 12482                           indf1	equ	0xFE7
 12483                           postinc1	equ	0xFE6
 12484                           postdec1	equ	0xFE5
 12485                           plusw1	equ	0xFE3
 12486                           fsr1h	equ	0xFE2
 12487                           fsr1l	equ	0xFE1
 12488                           indf2	equ	0xFDF
 12489                           postinc2	equ	0xFDE
 12490                           postdec2	equ	0xFDD
 12491                           plusw2	equ	0xFDB
 12492                           fsr2h	equ	0xFDA
 12493                           fsr2l	equ	0xFD9
 12494                           status	equ	0xFD8
 12495                           
 12496 ;; *************** function _USBCtrlTrfInHandler *****************
 12497 ;; Defined at:
 12498 ;;		line 2609 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 12499 ;; Parameters:    Size  Location     Type
 12500 ;;		None
 12501 ;; Auto vars:     Size  Location     Type
 12502 ;;  lastDTS         1   30[BANK0 ] unsigned char 
 12503 ;; Return value:  Size  Location     Type
 12504 ;;                  1    wreg      void 
 12505 ;; Registers used:
 12506 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12507 ;; Tracked objects:
 12508 ;;		On entry : 0/0
 12509 ;;		On exit  : 0/0
 12510 ;;		Unchanged: 0/0
 12511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12512 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12513 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12514 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12515 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12516 ;;Total ram usage:        1 bytes
 12517 ;; Hardware stack levels used:    1
 12518 ;; Hardware stack levels required when called:   12
 12519 ;; This function calls:
 12520 ;;		_USBCtrlTrfTxService
 12521 ;; This function is called by:
 12522 ;;		_USBCtrlEPService
 12523 ;; This function uses a non-reentrant model
 12524 ;;
 12525                           
 12526                           	psect	text52
 12527  003CC2                     __ptext52:
 12528                           	opt stack 0
 12529  003CC2                     _USBCtrlTrfInHandler:
 12530                           	opt stack 13
 12531                           
 12532                           ;usb_device.c: 2611: uint8_t lastDTS;
 12533                           ;usb_device.c: 2613: lastDTS = pBDTEntryIn[0]->STAT.DTS;
 12534                           
 12535                           ; BSR set to: 0
 12536                           ;incstack = 0
 12537  003CC2  C0B2  FFD9         	movff	_pBDTEntryIn,fsr2l
 12538  003CC6  C0B3  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12539  003CCA  0100               	movlb	0	; () banked
 12540  003CCC  0E00               	movlw	0
 12541  003CCE  BCDF               	btfsc	indf2,6,c
 12542  003CD0  0E01               	movlw	1
 12543  003CD2  6F7E               	movwf	USBCtrlTrfInHandler@lastDTS& (0+255),b
 12544                           
 12545                           ; BSR set to: 0
 12546                           ;usb_device.c: 2616: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 12547  003CD4  0E04               	movlw	4
 12548  003CD6  1BB2               	xorwf	_pBDTEntryIn& (0+255),f,b
 12549                           
 12550                           ; BSR set to: 0
 12551                           ;usb_device.c: 2621: if(USBDeviceState == ADR_PENDING_STATE)
 12552  003CD8  0E08               	movlw	8
 12553  003CDA  19CB               	xorwf	_USBDeviceState& (0+255),w,b
 12554  003CDC  A4D8               	btfss	status,2,c
 12555  003CDE  D00D               	goto	l1777
 12556                           
 12557                           ; BSR set to: 0
 12558                           ;usb_device.c: 2622: {
 12559                           ;usb_device.c: 2623: UADDR = (SetupPkt.bDevADR & 0x7F);
 12560  003CE0  0104               	movlb	4	; () banked
 12561  003CE2  5132               	movf	50,w,b	;volatile
 12562  003CE4  0B7F               	andlw	127
 12563  003CE6  010F               	movlb	15	; () banked
 12564  003CE8  6F38               	movwf	56,b	;volatile
 12565                           
 12566                           ; BSR set to: 15
 12567                           ;usb_device.c: 2624: if(UADDR != 0u)
 12568  003CEA  5138               	movf	56,w,b	;volatile
 12569  003CEC  B4D8               	btfsc	status,2,c
 12570  003CEE  D002               	goto	l1776
 12571                           
 12572                           ; BSR set to: 15
 12573                           ;usb_device.c: 2625: {
 12574                           ;usb_device.c: 2626: USBDeviceState=ADDRESS_STATE;
 12575  003CF0  0E10               	movlw	16
 12576  003CF2  D001               	goto	L11
 12577  003CF4                     l1776:
 12578                           
 12579                           ;usb_device.c: 2628: else
 12580                           ;usb_device.c: 2629: {
 12581                           ;usb_device.c: 2630: USBDeviceState=DEFAULT_STATE;
 12582                           
 12583                           ; BSR set to: 0
 12584  003CF4  0E04               	movlw	4
 12585  003CF6                     L11:
 12586  003CF6  0100               	movlb	0	; () banked
 12587  003CF8  6FCB               	movwf	_USBDeviceState& (0+255),b
 12588  003CFA                     l1777:
 12589                           
 12590                           ; BSR set to: 0
 12591                           ;usb_device.c: 2631: }
 12592                           ;usb_device.c: 2632: }
 12593                           ;usb_device.c: 2635: if(controlTransferState == 1)
 12594                           
 12595                           ; BSR set to: 0
 12596                           
 12597                           ; BSR set to: 0
 12598  003CFA  05C9               	decf	_controlTransferState& (0+255),w,b
 12599  003CFC  A4D8               	btfss	status,2,c
 12600  003CFE  D03B               	goto	l1778
 12601                           
 12602                           ; BSR set to: 0
 12603                           ;usb_device.c: 2636: {
 12604                           ;usb_device.c: 2637: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData));
 12605  003D00  EE20 F002          	lfsr	2,2
 12606  003D04  51B2               	movf	_pBDTEntryIn& (0+255),w,b
 12607  003D06  26D9               	addwf	fsr2l,f,c
 12608  003D08  51B3               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 12609  003D0A  22DA               	addwfc	fsr2h,f,c
 12610  003D0C  0E38               	movlw	56
 12611  003D0E  6EDE               	movwf	postinc2,c
 12612  003D10  0E04               	movlw	4
 12613  003D12  6EDD               	movwf	postdec2,c
 12614                           
 12615                           ; BSR set to: 0
 12616                           ;usb_device.c: 2638: USBCtrlTrfTxService();
 12617  003D14  ECFE  F019         	call	_USBCtrlTrfTxService	;wreg free
 12618                           
 12619                           ;usb_device.c: 2644: if(shortPacketStatus == 2)
 12620  003D18  0E02               	movlw	2
 12621  003D1A  0100               	movlb	0	; () banked
 12622  003D1C  19CA               	xorwf	_shortPacketStatus& (0+255),w,b
 12623  003D1E  A4D8               	btfss	status,2,c
 12624  003D20  D00D               	goto	l1779
 12625                           
 12626                           ; BSR set to: 0
 12627                           ;usb_device.c: 2645: {
 12628                           ;usb_device.c: 2648: pBDTEntryIn[0]->STAT.Val = 0x04;
 12629  003D22  C0B2  FFD9         	movff	_pBDTEntryIn,fsr2l
 12630  003D26  C0B3  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12631  003D2A  0E04               	movlw	4
 12632  003D2C  6EDF               	movwf	indf2,c
 12633                           
 12634                           ; BSR set to: 0
 12635                           ;usb_device.c: 2649: pBDTEntryIn[0]->STAT.Val |= 0x80;
 12636  003D2E  C0B2  FFD9         	movff	_pBDTEntryIn,fsr2l
 12637  003D32  C0B3  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12638  003D36  0E00               	movlw	0
 12639  003D38  8EDB               	bsf	plusw2,7,c
 12640                           
 12641                           ;usb_device.c: 2650: }
 12642  003D3A  0012               	return	
 12643  003D3C                     l1779:
 12644                           
 12645                           ; BSR set to: 0
 12646                           ;usb_device.c: 2651: else
 12647                           ;usb_device.c: 2652: {
 12648                           ;usb_device.c: 2653: if(lastDTS == 0)
 12649                           
 12650                           ; BSR set to: 0
 12651  003D3C  517E               	movf	USBCtrlTrfInHandler@lastDTS& (0+255),w,b
 12652  003D3E  A4D8               	btfss	status,2,c
 12653  003D40  D00D               	goto	l1781
 12654                           
 12655                           ; BSR set to: 0
 12656                           ;usb_device.c: 2654: {
 12657                           ;usb_device.c: 2655: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 12658  003D42  C0B2  FFD9         	movff	_pBDTEntryIn,fsr2l
 12659  003D46  C0B3  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12660  003D4A  0E48               	movlw	72
 12661  003D4C  6EDF               	movwf	indf2,c
 12662                           
 12663                           ; BSR set to: 0
 12664                           ;usb_device.c: 2656: pBDTEntryIn[0]->STAT.Val |= 0x80;
 12665  003D4E  C0B2  FFD9         	movff	_pBDTEntryIn,fsr2l
 12666  003D52  C0B3  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12667  003D56  0E00               	movlw	0
 12668  003D58  8EDB               	bsf	plusw2,7,c
 12669                           
 12670                           ;usb_device.c: 2657: }
 12671  003D5A  0012               	return	
 12672  003D5C                     l1781:
 12673                           
 12674                           ; BSR set to: 0
 12675                           ;usb_device.c: 2658: else
 12676                           ;usb_device.c: 2659: {
 12677                           ;usb_device.c: 2660: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
 12678                           
 12679                           ; BSR set to: 0
 12680  003D5C  C0B2  FFD9         	movff	_pBDTEntryIn,fsr2l
 12681  003D60  C0B3  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12682  003D64  0E08               	movlw	8
 12683  003D66  6EDF               	movwf	indf2,c
 12684                           
 12685                           ; BSR set to: 0
 12686                           ;usb_device.c: 2661: pBDTEntryIn[0]->STAT.Val |= 0x80;
 12687  003D68  C0B2  FFD9         	movff	_pBDTEntryIn,fsr2l
 12688  003D6C  C0B3  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12689  003D70  0E00               	movlw	0
 12690  003D72  8EDB               	bsf	plusw2,7,c
 12691                           
 12692                           ; BSR set to: 0
 12693                           ;usb_device.c: 2662: }
 12694                           ;usb_device.c: 2663: }
 12695                           ;usb_device.c: 2664: }
 12696                           
 12697                           ; BSR set to: 0
 12698  003D74  0012               	return	
 12699  003D76                     l1778:
 12700                           
 12701                           ; BSR set to: 0
 12702                           ;usb_device.c: 2665: else
 12703                           ;usb_device.c: 2666: {
 12704                           ;usb_device.c: 2670: if(outPipes[0].info.bits.busy == 1)
 12705  003D76  0101               	movlb	1	; () banked
 12706  003D78  BFCC               	btfsc	(_outPipes+3)& (0+255),7,b
 12707                           
 12708                           ; BSR set to: 1
 12709                           ;usb_device.c: 2675: }
 12710                           ;usb_device.c: 2676: outPipes[0].info.bits.busy = 0;
 12711                           
 12712                           ; BSR set to: 1
 12713  003D7A  9FCC               	bcf	(_outPipes+3)& (0+255),7,b
 12714                           
 12715                           ; BSR set to: 1
 12716                           ;usb_device.c: 2677: }
 12717                           ;usb_device.c: 2679: controlTransferState = 0;
 12718                           
 12719                           ; BSR set to: 1
 12720  003D7C  0E00               	movlw	0
 12721  003D7E  0100               	movlb	0	; () banked
 12722  003D80  6FC9               	movwf	_controlTransferState& (0+255),b
 12723  003D82  0012               	return	
 12724  003D84                     __end_of_USBCtrlTrfInHandler:
 12725                           	opt stack 0
 12726                           tosu	equ	0xFFF
 12727                           tosh	equ	0xFFE
 12728                           tosl	equ	0xFFD
 12729                           pclath	equ	0xFFA
 12730                           tblptru	equ	0xFF8
 12731                           tblptrh	equ	0xFF7
 12732                           tblptrl	equ	0xFF6
 12733                           tablat	equ	0xFF5
 12734                           prodh	equ	0xFF4
 12735                           prodl	equ	0xFF3
 12736                           intcon	equ	0xFF2
 12737                           intcon2	equ	0xFF1
 12738                           intcon3	equ	0xFF0
 12739                           indf0	equ	0xFEF
 12740                           postinc0	equ	0xFEE
 12741                           plusw0	equ	0xFEB
 12742                           fsr0h	equ	0xFEA
 12743                           fsr0l	equ	0xFE9
 12744                           wreg	equ	0xFE8
 12745                           indf1	equ	0xFE7
 12746                           postinc1	equ	0xFE6
 12747                           postdec1	equ	0xFE5
 12748                           plusw1	equ	0xFE3
 12749                           fsr1h	equ	0xFE2
 12750                           fsr1l	equ	0xFE1
 12751                           indf2	equ	0xFDF
 12752                           postinc2	equ	0xFDE
 12753                           postdec2	equ	0xFDD
 12754                           plusw2	equ	0xFDB
 12755                           fsr2h	equ	0xFDA
 12756                           fsr2l	equ	0xFD9
 12757                           status	equ	0xFD8
 12758                           
 12759 ;; *************** function _USBCtrlTrfTxService *****************
 12760 ;; Defined at:
 12761 ;;		line 1789 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 12762 ;; Parameters:    Size  Location     Type
 12763 ;;		None
 12764 ;; Auto vars:     Size  Location     Type
 12765 ;;  byteToSend      1   29[BANK0 ] unsigned char 
 12766 ;; Return value:  Size  Location     Type
 12767 ;;                  1    wreg      void 
 12768 ;; Registers used:
 12769 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 12770 ;; Tracked objects:
 12771 ;;		On entry : 0/0
 12772 ;;		On exit  : 0/0
 12773 ;;		Unchanged: 0/0
 12774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12775 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12776 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12777 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12778 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12779 ;;Total ram usage:        1 bytes
 12780 ;; Hardware stack levels used:    1
 12781 ;; Hardware stack levels required when called:   11
 12782 ;; This function calls:
 12783 ;;		Nothing
 12784 ;; This function is called by:
 12785 ;;		_USBCtrlEPAllowDataStage
 12786 ;;		_USBCtrlTrfInHandler
 12787 ;; This function uses a non-reentrant model
 12788 ;;
 12789                           
 12790                           	psect	text53
 12791  0033FC                     __ptext53:
 12792                           	opt stack 0
 12793  0033FC                     _USBCtrlTrfTxService:
 12794                           	opt stack 11
 12795                           
 12796                           ;usb_device.c: 1791: uint8_t byteToSend;
 12797                           ;usb_device.c: 1795: byteToSend = 8;
 12798                           
 12799                           ; BSR set to: 0
 12800                           ;incstack = 0
 12801  0033FC  0E08               	movlw	8
 12802  0033FE  0100               	movlb	0	; () banked
 12803  003400  6F7D               	movwf	USBCtrlTrfTxService@byteToSend& (0+255),b
 12804                           
 12805                           ; BSR set to: 0
 12806                           ;usb_device.c: 1796: if(inPipes[0].wCount.Val < (uint8_t)8)
 12807  003402  51B1               	movf	(_inPipes+5)& (0+255),w,b
 12808  003404  E110               	bnz	l7647
 12809  003406  0E08               	movlw	8
 12810  003408  5DB0               	subwf	(_inPipes+4)& (0+255),w,b
 12811  00340A  B0D8               	btfsc	status,0,c
 12812  00340C  D00C               	goto	l1683
 12813                           
 12814                           ; BSR set to: 0
 12815                           ;usb_device.c: 1797: {
 12816                           ;usb_device.c: 1798: byteToSend = inPipes[0].wCount.Val;
 12817  00340E  C0B0  F07D         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend
 12818                           
 12819                           ; BSR set to: 0
 12820                           ;usb_device.c: 1805: if(shortPacketStatus == 0)
 12821  003412  51CA               	movf	_shortPacketStatus& (0+255),w,b
 12822  003414  A4D8               	btfss	status,2,c
 12823  003416  D002               	goto	l1681
 12824                           
 12825                           ; BSR set to: 0
 12826                           ;usb_device.c: 1806: {
 12827                           ;usb_device.c: 1807: shortPacketStatus = 1;
 12828  003418  0E01               	movlw	1
 12829  00341A  D004               	goto	L12
 12830  00341C                     l1681:
 12831                           
 12832                           ; BSR set to: 0
 12833                           ;usb_device.c: 1809: else if(shortPacketStatus == 1)
 12834                           
 12835                           ; BSR set to: 0
 12836  00341C  05CA               	decf	_shortPacketStatus& (0+255),w,b
 12837  00341E  A4D8               	btfss	status,2,c
 12838  003420  D002               	goto	l1683
 12839                           
 12840                           ; BSR set to: 0
 12841                           ;usb_device.c: 1810: {
 12842                           ;usb_device.c: 1811: shortPacketStatus = 2;
 12843  003422  0E02               	movlw	2
 12844  003424                     L12:
 12845  003424  6FCA               	movwf	_shortPacketStatus& (0+255),b
 12846  003426                     l1683:
 12847  003426                     l7647:
 12848                           
 12849                           ; BSR set to: 0
 12850                           ;usb_device.c: 1812: }
 12851                           ;usb_device.c: 1813: }
 12852                           ;usb_device.c: 1817: inPipes[0].wCount.Val -= byteToSend;
 12853  003426  517D               	movf	USBCtrlTrfTxService@byteToSend& (0+255),w,b
 12854  003428  5FB0               	subwf	(_inPipes+4)& (0+255),f,b
 12855  00342A  0E00               	movlw	0
 12856  00342C  5BB1               	subwfb	(_inPipes+5)& (0+255),f,b
 12857                           
 12858                           ; BSR set to: 0
 12859                           ;usb_device.c: 1822: pBDTEntryIn[0]->CNT = byteToSend;
 12860  00342E  EE20 F001          	lfsr	2,1
 12861  003432  51B2               	movf	_pBDTEntryIn& (0+255),w,b
 12862  003434  26D9               	addwf	fsr2l,f,c
 12863  003436  51B3               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 12864  003438  22DA               	addwfc	fsr2h,f,c
 12865  00343A  C07D  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 12866                           
 12867                           ; BSR set to: 0
 12868                           ;usb_device.c: 1826: pDst = ( uint8_t*)CtrlTrfData;
 12869  00343E  0E38               	movlw	56
 12870  003440  0102               	movlb	2	; () banked
 12871  003442  6FD4               	movwf	_pDst& (0+255),b
 12872  003444  0E04               	movlw	4
 12873  003446  6FD5               	movwf	(_pDst+1)& (0+255),b
 12874                           
 12875                           ; BSR set to: 2
 12876                           ;usb_device.c: 1827: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 12877  003448  0100               	movlb	0	; () banked
 12878  00344A  A1AF               	btfss	(_inPipes+3)& (0+255),0,b
 12879  00344C  D01E               	goto	l1685
 12880  00344E  D03E               	goto	l1689
 12881  003450                     
 12882                           ; BSR set to: 0
 12883                           ;usb_device.c: 1830: {
 12884                           ;usb_device.c: 1831: *pDst++ = *inPipes[0].pSrc.bRom++;
 12885                           
 12886                           ; BSR set to: 0
 12887  003450  C0AC  FFF6         	movff	_inPipes,tblptrl
 12888  003454  C0AD  FFF7         	movff	_inPipes+1,tblptrh
 12889  003458  6AF8               	clrf	tblptru,c
 12890  00345A  C2D4  FFD9         	movff	_pDst,fsr2l
 12891  00345E  C2D5  FFDA         	movff	_pDst+1,fsr2h
 12892  003462  0E0E               	movlw	(high __ramtop+-1)
 12893  003464  64F7               	cpfsgt	tblptrh,c
 12894  003466  D003               	bra	u5187
 12895  003468  0008               	tblrd		*
 12896  00346A  50F5               	movf	tablat,w,c
 12897  00346C  D005               	bra	u5180
 12898  00346E                     u5187:
 12899  00346E  CFF6 FFE9          	movff	tblptrl,fsr0l
 12900  003472  CFF7 FFEA          	movff	tblptrh,fsr0h
 12901  003476  50EF               	movf	indf0,w,c
 12902  003478                     u5180:
 12903  003478  6EDF               	movwf	indf2,c
 12904  00347A  0100               	movlb	0	; () banked
 12905  00347C  4BAC               	infsnz	_inPipes& (0+255),f,b
 12906  00347E  2BAD               	incf	(_inPipes+1)& (0+255),f,b
 12907                           
 12908                           ; BSR set to: 0
 12909  003480  0102               	movlb	2	; () banked
 12910  003482  4BD4               	infsnz	_pDst& (0+255),f,b
 12911  003484  2BD5               	incf	(_pDst+1)& (0+255),f,b
 12912                           
 12913                           ; BSR set to: 2
 12914                           ;usb_device.c: 1832: byteToSend--;
 12915  003486  0100               	movlb	0	; () banked
 12916  003488  077D               	decf	USBCtrlTrfTxService@byteToSend& (0+255),f,b
 12917  00348A                     l1685:
 12918                           
 12919                           ; BSR set to: 0
 12920                           
 12921                           ; BSR set to: 0
 12922  00348A  517D               	movf	USBCtrlTrfTxService@byteToSend& (0+255),w,b
 12923  00348C  B4D8               	btfsc	status,2,c
 12924  00348E  0012               	return	
 12925  003490  D7DF               	goto	l1686
 12926  003492                     
 12927                           ; BSR set to: 0
 12928                           ;usb_device.c: 1838: {
 12929                           ;usb_device.c: 1839: *pDst++ = *inPipes[0].pSrc.bRam++;
 12930                           
 12931                           ; BSR set to: 0
 12932  003492  C0AC  FFF6         	movff	_inPipes,tblptrl
 12933  003496  C0AD  FFF7         	movff	_inPipes+1,tblptrh
 12934  00349A  6AF8               	clrf	tblptru,c
 12935  00349C  C2D4  FFD9         	movff	_pDst,fsr2l
 12936  0034A0  C2D5  FFDA         	movff	_pDst+1,fsr2h
 12937  0034A4  0E0E               	movlw	(high __ramtop+-1)
 12938  0034A6  64F7               	cpfsgt	tblptrh,c
 12939  0034A8  D003               	bra	u5207
 12940  0034AA  0008               	tblrd		*
 12941  0034AC  50F5               	movf	tablat,w,c
 12942  0034AE  D005               	bra	u5200
 12943  0034B0                     u5207:
 12944  0034B0  CFF6 FFE9          	movff	tblptrl,fsr0l
 12945  0034B4  CFF7 FFEA          	movff	tblptrh,fsr0h
 12946  0034B8  50EF               	movf	indf0,w,c
 12947  0034BA                     u5200:
 12948  0034BA  6EDF               	movwf	indf2,c
 12949  0034BC  0100               	movlb	0	; () banked
 12950  0034BE  4BAC               	infsnz	_inPipes& (0+255),f,b
 12951  0034C0  2BAD               	incf	(_inPipes+1)& (0+255),f,b
 12952                           
 12953                           ; BSR set to: 0
 12954  0034C2  0102               	movlb	2	; () banked
 12955  0034C4  4BD4               	infsnz	_pDst& (0+255),f,b
 12956  0034C6  2BD5               	incf	(_pDst+1)& (0+255),f,b
 12957                           
 12958                           ; BSR set to: 2
 12959                           ;usb_device.c: 1840: byteToSend--;
 12960  0034C8  0100               	movlb	0	; () banked
 12961  0034CA  077D               	decf	USBCtrlTrfTxService@byteToSend& (0+255),f,b
 12962  0034CC                     l1689:
 12963                           
 12964                           ; BSR set to: 0
 12965                           
 12966                           ; BSR set to: 0
 12967  0034CC  517D               	movf	USBCtrlTrfTxService@byteToSend& (0+255),w,b
 12968  0034CE  B4D8               	btfsc	status,2,c
 12969  0034D0  0012               	return	
 12970  0034D2  D7DF               	goto	l1690
 12971  0034D4                     __end_of_USBCtrlTrfTxService:
 12972                           	opt stack 0
 12973                           tosu	equ	0xFFF
 12974                           tosh	equ	0xFFE
 12975                           tosl	equ	0xFFD
 12976                           pclath	equ	0xFFA
 12977                           tblptru	equ	0xFF8
 12978                           tblptrh	equ	0xFF7
 12979                           tblptrl	equ	0xFF6
 12980                           tablat	equ	0xFF5
 12981                           prodh	equ	0xFF4
 12982                           prodl	equ	0xFF3
 12983                           intcon	equ	0xFF2
 12984                           intcon2	equ	0xFF1
 12985                           intcon3	equ	0xFF0
 12986                           indf0	equ	0xFEF
 12987                           postinc0	equ	0xFEE
 12988                           plusw0	equ	0xFEB
 12989                           fsr0h	equ	0xFEA
 12990                           fsr0l	equ	0xFE9
 12991                           wreg	equ	0xFE8
 12992                           indf1	equ	0xFE7
 12993                           postinc1	equ	0xFE6
 12994                           postdec1	equ	0xFE5
 12995                           plusw1	equ	0xFE3
 12996                           fsr1h	equ	0xFE2
 12997                           fsr1l	equ	0xFE1
 12998                           indf2	equ	0xFDF
 12999                           postinc2	equ	0xFDE
 13000                           postdec2	equ	0xFDD
 13001                           plusw2	equ	0xFDB
 13002                           fsr2h	equ	0xFDA
 13003                           fsr2l	equ	0xFD9
 13004                           status	equ	0xFD8
 13005                           
 13006 ;; *************** function _CDCTxService *****************
 13007 ;; Defined at:
 13008 ;;		line 839 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 13009 ;; Parameters:    Size  Location     Type
 13010 ;;		None
 13011 ;; Auto vars:     Size  Location     Type
 13012 ;;  byte_to_send    1   37[BANK0 ] unsigned char 
 13013 ;;  i               1   36[BANK0 ] unsigned char 
 13014 ;; Return value:  Size  Location     Type
 13015 ;;                  1    wreg      void 
 13016 ;; Registers used:
 13017 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13018 ;; Tracked objects:
 13019 ;;		On entry : 0/0
 13020 ;;		On exit  : 0/0
 13021 ;;		Unchanged: 0/0
 13022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13023 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13024 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13026 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13027 ;;Total ram usage:        2 bytes
 13028 ;; Hardware stack levels used:    1
 13029 ;; Hardware stack levels required when called:   12
 13030 ;; This function calls:
 13031 ;;		_USBTransferOnePacket
 13032 ;; This function is called by:
 13033 ;;		_UsbDevice_MainTask
 13034 ;; This function uses a non-reentrant model
 13035 ;;
 13036                           
 13037                           	psect	text54
 13038  002544                     __ptext54:
 13039                           	opt stack 0
 13040  002544                     _CDCTxService:
 13041                           	opt stack 15
 13042                           
 13043                           ;usb_device_cdc.c: 841: uint8_t byte_to_send;
 13044                           ;usb_device_cdc.c: 842: uint8_t i;
 13045                           ;usb_device_cdc.c: 844: ;
 13046                           ;usb_device_cdc.c: 846: {};
 13047                           ;usb_device_cdc.c: 848: if(((CDCDataInHandle != 0x0000) && ((*(volatile uint8_t*)CDCData
      +                          InHandle & 0x80) != 0x00)))
 13048                           
 13049                           ; BSR set to: 0
 13050                           ;incstack = 0
 13051  002544  0101               	movlb	1	; () banked
 13052  002546  51D1               	movf	_CDCDataInHandle& (0+255),w,b
 13053  002548  11D2               	iorwf	(_CDCDataInHandle+1)& (0+255),w,b
 13054  00254A  B4D8               	btfsc	status,2,c
 13055  00254C  D006               	goto	l1935
 13056                           
 13057                           ; BSR set to: 1
 13058  00254E  C1D1  FFD9         	movff	_CDCDataInHandle,fsr2l
 13059  002552  C1D2  FFDA         	movff	_CDCDataInHandle+1,fsr2h
 13060  002556  BEDF               	btfsc	indf2,7,c
 13061  002558  0012               	return	
 13062  00255A                     l1935:
 13063                           
 13064                           ; BSR set to: 1
 13065                           ;usb_device_cdc.c: 852: }
 13066                           ;usb_device_cdc.c: 859: if(cdc_trf_state == 3)
 13067                           
 13068                           ; BSR set to: 1
 13069  00255A  0E03               	movlw	3
 13070  00255C  0100               	movlb	0	; () banked
 13071  00255E  19C1               	xorwf	_cdc_trf_state& (0+255),w,b
 13072  002560  A4D8               	btfss	status,2,c
 13073  002562  D002               	goto	l1937
 13074                           
 13075                           ; BSR set to: 0
 13076                           ;usb_device_cdc.c: 860: cdc_trf_state = 0;
 13077  002564  0E00               	movlw	0
 13078  002566  6FC1               	movwf	_cdc_trf_state& (0+255),b
 13079  002568                     l1937:
 13080                           
 13081                           ; BSR set to: 0
 13082                           ;usb_device_cdc.c: 865: if(cdc_trf_state == 0)
 13083  002568  51C1               	movf	_cdc_trf_state& (0+255),w,b
 13084  00256A  B4D8               	btfsc	status,2,c
 13085  00256C  0012               	return	
 13086                           
 13087                           ; BSR set to: 0
 13088                           ;usb_device_cdc.c: 869: }
 13089                           ;usb_device_cdc.c: 874: if(cdc_trf_state == 2)
 13090                           
 13091                           ; BSR set to: 0
 13092                           
 13093                           ; BSR set to: 0
 13094                           ;usb_device_cdc.c: 866: {
 13095                           ;usb_device_cdc.c: 867: ;
 13096                           ;usb_device_cdc.c: 868: return;
 13097  00256E  0E02               	movlw	2
 13098  002570  19C1               	xorwf	_cdc_trf_state& (0+255),w,b
 13099  002572  A4D8               	btfss	status,2,c
 13100  002574  D013               	goto	l1939
 13101                           
 13102                           ; BSR set to: 0
 13103                           ;usb_device_cdc.c: 875: {
 13104                           ;usb_device_cdc.c: 876: CDCDataInHandle = USBTransferOnePacket(2,1,(0),0);
 13105  002576  0E01               	movlw	1
 13106  002578  6F7D               	movwf	USBTransferOnePacket@dir& (0+255),b
 13107  00257A  0E00               	movlw	0
 13108  00257C  6F7E               	movwf	USBTransferOnePacket@data& (0+255),b
 13109  00257E  0E00               	movlw	0
 13110  002580  6F7F               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 13111  002582  0E00               	movlw	0
 13112  002584  6F80               	movwf	USBTransferOnePacket@len& (0+255),b
 13113  002586  0E02               	movlw	2
 13114  002588  ECC2  F01E         	call	_USBTransferOnePacket
 13115  00258C  C07D  F1D1         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 13116  002590  C07E  F1D2         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 13117                           
 13118                           ;usb_device_cdc.c: 878: cdc_trf_state = 3;
 13119  002594  0E03               	movlw	3
 13120  002596  0100               	movlb	0	; () banked
 13121  002598  6FC1               	movwf	_cdc_trf_state& (0+255),b
 13122                           
 13123                           ;usb_device_cdc.c: 879: }
 13124  00259A  0012               	return	
 13125  00259C                     l1939:
 13126                           
 13127                           ; BSR set to: 0
 13128                           ;usb_device_cdc.c: 880: else if(cdc_trf_state == 1)
 13129                           
 13130                           ; BSR set to: 0
 13131  00259C  05C1               	decf	_cdc_trf_state& (0+255),w,b
 13132  00259E  A4D8               	btfss	status,2,c
 13133  0025A0  0012               	return	
 13134                           
 13135                           ; BSR set to: 0
 13136                           ;usb_device_cdc.c: 881: {
 13137                           ;usb_device_cdc.c: 885: if(cdc_tx_len > sizeof(cdc_data_tx))
 13138  0025A2  0E40               	movlw	64
 13139  0025A4  65C0               	cpfsgt	_cdc_tx_len& (0+255),b
 13140  0025A6  D003               	goto	l1942
 13141                           
 13142                           ; BSR set to: 0
 13143                           ;usb_device_cdc.c: 886: byte_to_send = sizeof(cdc_data_tx);
 13144  0025A8  0E40               	movlw	64
 13145  0025AA  6F85               	movwf	CDCTxService@byte_to_send& (0+255),b
 13146  0025AC  D002               	goto	l1943
 13147  0025AE                     l1942:
 13148                           
 13149                           ; BSR set to: 0
 13150                           ;usb_device_cdc.c: 887: else
 13151                           ;usb_device_cdc.c: 888: byte_to_send = cdc_tx_len;
 13152  0025AE  C0C0  F085         	movff	_cdc_tx_len,CDCTxService@byte_to_send
 13153  0025B2                     l1943:
 13154                           
 13155                           ; BSR set to: 0
 13156                           ;usb_device_cdc.c: 893: cdc_tx_len = cdc_tx_len - byte_to_send;
 13157                           
 13158                           ; BSR set to: 0
 13159  0025B2  5185               	movf	CDCTxService@byte_to_send& (0+255),w,b
 13160  0025B4  0800               	sublw	0
 13161  0025B6  25C0               	addwf	_cdc_tx_len& (0+255),w,b
 13162  0025B8  6FC0               	movwf	_cdc_tx_len& (0+255),b
 13163                           
 13164                           ;usb_device_cdc.c: 895: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
 13165  0025BA  0E84               	movlw	low _cdc_data_tx
 13166  0025BC  0102               	movlb	2	; () banked
 13167  0025BE  6FC8               	movwf	_pCDCDst& (0+255),b
 13168  0025C0  0E07               	movlw	high _cdc_data_tx
 13169  0025C2  6FC9               	movwf	(_pCDCDst+1)& (0+255),b
 13170                           
 13171                           ; BSR set to: 2
 13172                           ;usb_device_cdc.c: 897: i = byte_to_send;
 13173  0025C4  C085  F084         	movff	CDCTxService@byte_to_send,CDCTxService@i
 13174                           
 13175                           ; BSR set to: 2
 13176                           ;usb_device_cdc.c: 898: if(cdc_mem_type == 0x00)
 13177  0025C8  0101               	movlb	1	; () banked
 13178  0025CA  51E3               	movf	_cdc_mem_type& (0+255),w,b
 13179  0025CC  B4D8               	btfsc	status,2,c
 13180  0025CE  D01D               	goto	l1945
 13181  0025D0  D03D               	goto	l1949
 13182  0025D2                     
 13183                           ;usb_device_cdc.c: 901: {
 13184                           ;usb_device_cdc.c: 902: *pCDCDst.bRam = *pCDCSrc.bRom;
 13185                           
 13186                           ; BSR set to: 1
 13187  0025D2  C2CB  FFF6         	movff	_pCDCSrc,tblptrl
 13188  0025D6  C2CC  FFF7         	movff	_pCDCSrc+1,tblptrh
 13189  0025DA  6AF8               	clrf	tblptru,c
 13190  0025DC  C2C8  FFD9         	movff	_pCDCDst,fsr2l
 13191  0025E0  C2C9  FFDA         	movff	_pCDCDst+1,fsr2h
 13192  0025E4  0E0E               	movlw	(high __ramtop+-1)
 13193  0025E6  64F7               	cpfsgt	tblptrh,c
 13194  0025E8  D003               	bra	u13127
 13195  0025EA  0008               	tblrd		*
 13196  0025EC  50F5               	movf	tablat,w,c
 13197  0025EE  D005               	bra	u13120
 13198  0025F0                     u13127:
 13199  0025F0  CFF6 FFE9          	movff	tblptrl,fsr0l
 13200  0025F4  CFF7 FFEA          	movff	tblptrh,fsr0h
 13201  0025F8  50EF               	movf	indf0,w,c
 13202  0025FA                     u13120:
 13203  0025FA  6EDF               	movwf	indf2,c
 13204                           
 13205                           ;usb_device_cdc.c: 903: pCDCDst.bRam++;
 13206  0025FC  0102               	movlb	2	; () banked
 13207  0025FE  4BC8               	infsnz	_pCDCDst& (0+255),f,b
 13208  002600  2BC9               	incf	(_pCDCDst+1)& (0+255),f,b
 13209                           
 13210                           ; BSR set to: 2
 13211                           ;usb_device_cdc.c: 904: pCDCSrc.bRom++;
 13212  002602  4BCB               	infsnz	_pCDCSrc& (0+255),f,b
 13213  002604  2BCC               	incf	(_pCDCSrc+1)& (0+255),f,b
 13214                           
 13215                           ; BSR set to: 2
 13216                           ;usb_device_cdc.c: 905: i--;
 13217  002606  0100               	movlb	0	; () banked
 13218  002608  0784               	decf	CDCTxService@i& (0+255),f,b
 13219  00260A                     l1945:
 13220                           
 13221                           ; BSR set to: 0
 13222  00260A  0100               	movlb	0	; () banked
 13223  00260C  5184               	movf	CDCTxService@i& (0+255),w,b
 13224  00260E  B4D8               	btfsc	status,2,c
 13225  002610  D021               	goto	u13150
 13226  002612  D7DF               	goto	l1946
 13227  002614                     
 13228                           ; BSR set to: 0
 13229                           ;usb_device_cdc.c: 911: {
 13230                           ;usb_device_cdc.c: 912: *pCDCDst.bRam = *pCDCSrc.bRam;
 13231                           
 13232                           ; BSR set to: 0
 13233  002614  C2CB  FFF6         	movff	_pCDCSrc,tblptrl
 13234  002618  C2CC  FFF7         	movff	_pCDCSrc+1,tblptrh
 13235  00261C  6AF8               	clrf	tblptru,c
 13236  00261E  C2C8  FFD9         	movff	_pCDCDst,fsr2l
 13237  002622  C2C9  FFDA         	movff	_pCDCDst+1,fsr2h
 13238  002626  0E0E               	movlw	(high __ramtop+-1)
 13239  002628  64F7               	cpfsgt	tblptrh,c
 13240  00262A  D003               	bra	u13147
 13241  00262C  0008               	tblrd		*
 13242  00262E  50F5               	movf	tablat,w,c
 13243  002630  D005               	bra	u13140
 13244  002632                     u13147:
 13245  002632  CFF6 FFE9          	movff	tblptrl,fsr0l
 13246  002636  CFF7 FFEA          	movff	tblptrh,fsr0h
 13247  00263A  50EF               	movf	indf0,w,c
 13248  00263C                     u13140:
 13249  00263C  6EDF               	movwf	indf2,c
 13250                           
 13251                           ;usb_device_cdc.c: 913: pCDCDst.bRam++;
 13252  00263E  0102               	movlb	2	; () banked
 13253  002640  4BC8               	infsnz	_pCDCDst& (0+255),f,b
 13254  002642  2BC9               	incf	(_pCDCDst+1)& (0+255),f,b
 13255                           
 13256                           ; BSR set to: 2
 13257                           ;usb_device_cdc.c: 914: pCDCSrc.bRam++;
 13258  002644  4BCB               	infsnz	_pCDCSrc& (0+255),f,b
 13259  002646  2BCC               	incf	(_pCDCSrc+1)& (0+255),f,b
 13260                           
 13261                           ; BSR set to: 2
 13262                           ;usb_device_cdc.c: 915: i--;
 13263  002648  0100               	movlb	0	; () banked
 13264  00264A  0784               	decf	CDCTxService@i& (0+255),f,b
 13265  00264C                     l1949:
 13266                           
 13267                           ; BSR set to: 0
 13268  00264C  0100               	movlb	0	; () banked
 13269  00264E  5184               	movf	CDCTxService@i& (0+255),w,b
 13270  002650  A4D8               	btfss	status,2,c
 13271  002652  D7E0               	goto	l1950
 13272  002654                     u13150:
 13273                           
 13274                           ; BSR set to: 0
 13275                           ;usb_device_cdc.c: 916: }
 13276                           ;usb_device_cdc.c: 917: }
 13277                           ;usb_device_cdc.c: 923: if(cdc_tx_len == 0)
 13278                           
 13279                           ; BSR set to: 0
 13280                           
 13281                           ; BSR set to: 0
 13282  002654  51C0               	movf	_cdc_tx_len& (0+255),w,b
 13283  002656  A4D8               	btfss	status,2,c
 13284  002658  D008               	goto	l1954
 13285                           
 13286                           ; BSR set to: 0
 13287                           ;usb_device_cdc.c: 924: {
 13288                           ;usb_device_cdc.c: 925: if(byte_to_send == 64)
 13289  00265A  0E40               	movlw	64
 13290  00265C  1985               	xorwf	CDCTxService@byte_to_send& (0+255),w,b
 13291  00265E  A4D8               	btfss	status,2,c
 13292  002660  D002               	goto	l1953
 13293                           
 13294                           ; BSR set to: 0
 13295                           ;usb_device_cdc.c: 926: cdc_trf_state = 2;
 13296  002662  0E02               	movlw	2
 13297  002664  D001               	goto	L13
 13298  002666                     l1953:
 13299                           
 13300                           ; BSR set to: 0
 13301                           ;usb_device_cdc.c: 927: else
 13302                           ;usb_device_cdc.c: 928: cdc_trf_state = 3;
 13303                           
 13304                           ; BSR set to: 0
 13305  002666  0E03               	movlw	3
 13306  002668                     L13:
 13307  002668  6FC1               	movwf	_cdc_trf_state& (0+255),b
 13308  00266A                     l1954:
 13309                           
 13310                           ; BSR set to: 0
 13311                           ;usb_device_cdc.c: 929: }
 13312                           ;usb_device_cdc.c: 930: CDCDataInHandle = USBTransferOnePacket(2,1,(uint8_t*)&cdc_data_t
      +                          x,byte_to_send);
 13313                           
 13314                           ; BSR set to: 0
 13315                           
 13316                           ; BSR set to: 0
 13317  00266A  0E01               	movlw	1
 13318  00266C  6F7D               	movwf	USBTransferOnePacket@dir& (0+255),b
 13319  00266E  0E84               	movlw	low _cdc_data_tx
 13320  002670  6F7E               	movwf	USBTransferOnePacket@data& (0+255),b
 13321  002672  0E07               	movlw	high _cdc_data_tx
 13322  002674  6F7F               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 13323  002676  C085  F080         	movff	CDCTxService@byte_to_send,USBTransferOnePacket@len
 13324  00267A  0E02               	movlw	2
 13325  00267C  ECC2  F01E         	call	_USBTransferOnePacket
 13326  002680  C07D  F1D1         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 13327  002684  C07E  F1D2         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 13328  002688  0012               	return	
 13329  00268A                     __end_of_CDCTxService:
 13330                           	opt stack 0
 13331                           tosu	equ	0xFFF
 13332                           tosh	equ	0xFFE
 13333                           tosl	equ	0xFFD
 13334                           pclath	equ	0xFFA
 13335                           tblptru	equ	0xFF8
 13336                           tblptrh	equ	0xFF7
 13337                           tblptrl	equ	0xFF6
 13338                           tablat	equ	0xFF5
 13339                           prodh	equ	0xFF4
 13340                           prodl	equ	0xFF3
 13341                           intcon	equ	0xFF2
 13342                           intcon2	equ	0xFF1
 13343                           intcon3	equ	0xFF0
 13344                           indf0	equ	0xFEF
 13345                           postinc0	equ	0xFEE
 13346                           plusw0	equ	0xFEB
 13347                           fsr0h	equ	0xFEA
 13348                           fsr0l	equ	0xFE9
 13349                           wreg	equ	0xFE8
 13350                           indf1	equ	0xFE7
 13351                           postinc1	equ	0xFE6
 13352                           postdec1	equ	0xFE5
 13353                           plusw1	equ	0xFE3
 13354                           fsr1h	equ	0xFE2
 13355                           fsr1l	equ	0xFE1
 13356                           indf2	equ	0xFDF
 13357                           postinc2	equ	0xFDE
 13358                           postdec2	equ	0xFDD
 13359                           plusw2	equ	0xFDB
 13360                           fsr2h	equ	0xFDA
 13361                           fsr2l	equ	0xFD9
 13362                           status	equ	0xFD8
 13363                           
 13364 ;; *************** function _Term_MainSm *****************
 13365 ;; Defined at:
 13366 ;;		line 707 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/term.c"
 13367 ;; Parameters:    Size  Location     Type
 13368 ;;		None
 13369 ;; Auto vars:     Size  Location     Type
 13370 ;;  FwkBuildStr     4   58[BANK1 ] unsigned char [4]
 13371 ;;  FwkMinorStr     4   54[BANK1 ] unsigned char [4]
 13372 ;;  FwkMajorStr     4   50[BANK1 ] unsigned char [4]
 13373 ;;  FwkBuildYear    4    0        unsigned char [4]
 13374 ;;  FwkBuildMont    4    0        unsigned char [4]
 13375 ;;  FwkBuildDayS    4    0        unsigned char [4]
 13376 ;; Return value:  Size  Location     Type
 13377 ;;                  1    wreg      void 
 13378 ;; Registers used:
 13379 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13380 ;; Tracked objects:
 13381 ;;		On entry : 0/0
 13382 ;;		On exit  : 0/0
 13383 ;;		Unchanged: 0/0
 13384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13385 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13386 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13388 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13389 ;;Total ram usage:       12 bytes
 13390 ;; Hardware stack levels used:    1
 13391 ;; Hardware stack levels required when called:   16
 13392 ;; This function calls:
 13393 ;;		_OsTmr_GetTimerStatus
 13394 ;;		_OsTmr_StartTimer
 13395 ;;		_Terminal
 13396 ;;		_memset
 13397 ;;		_putUSBUSART
 13398 ;;		_sprintf
 13399 ;;		_strcat
 13400 ;;		_strcpy
 13401 ;;		_strlen
 13402 ;;		_utoa
 13403 ;; This function is called by:
 13404 ;;		_Term_MainTask
 13405 ;; This function uses a non-reentrant model
 13406 ;;
 13407                           
 13408                           	psect	text55
 13409  0010B6                     __ptext55:
 13410                           	opt stack 0
 13411  0010B6                     _Term_MainSm:
 13412                           	opt stack 11
 13413                           
 13414                           ;term.c: 709: static TermMainSmStateType TermMainSmState = Term_StartTmr;
 13415                           ;term.c: 710: static SwTimerType TermDelay = { 1u, SwTimerExpired, 0, 0, DelayNotExpired
      +                          , };
 13416                           ;term.c: 711: static UINT8 Data[50];
 13417                           ;term.c: 712: UINT8 FwkMajorStr[4];
 13418                           ;term.c: 713: UINT8 FwkMinorStr[4];
 13419                           ;term.c: 714: UINT8 FwkBuildStr[4];
 13420                           ;term.c: 715: UINT8 FwkBuildDayStr[4];
 13421                           ;term.c: 716: UINT8 FwkBuildMonthStr[4];
 13422                           ;term.c: 717: UINT8 FwkBuildYearStr[4];
 13423                           ;term.c: 719: switch (TermMainSmState)
 13424                           
 13425                           ;incstack = 0
 13426  0010B6  D133               	goto	l2413
 13427  0010B8                     
 13428                           ;term.c: 723: OsTmr_StartTimer(&TermDelay,2000);
 13429  0010B8  0ECC               	movlw	low Term_MainSm@TermDelay
 13430  0010BA  0100               	movlb	0	; () banked
 13431  0010BC  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 13432  0010BE  0E03               	movlw	high Term_MainSm@TermDelay
 13433  0010C0  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 13434  0010C2  0ED0               	movlw	208
 13435  0010C4  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 13436  0010C6  0E07               	movlw	7
 13437  0010C8  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 13438  0010CA  0E00               	movlw	0
 13439  0010CC  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 13440  0010CE  0E00               	movlw	0
 13441  0010D0  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 13442  0010D2  EC60  F027         	call	_OsTmr_StartTimer	;wreg free
 13443                           
 13444                           ;term.c: 725: TermMainSmState = Term_InitDelay;
 13445  0010D6  0E01               	movlw	1
 13446  0010D8  0102               	movlb	2	; () banked
 13447  0010DA  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13448                           
 13449                           ;term.c: 726: break;
 13450  0010DC  0012               	return	
 13451  0010DE                     
 13452                           ; BSR set to: 2
 13453                           ;term.c: 730: if (OsTmr_GetTimerStatus(&TermDelay) == SwTimerExpired)
 13454                           
 13455                           ; BSR set to: 2
 13456  0010DE  0ECC               	movlw	low Term_MainSm@TermDelay
 13457  0010E0  0100               	movlb	0	; () banked
 13458  0010E2  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 13459  0010E4  0E03               	movlw	high Term_MainSm@TermDelay
 13460  0010E6  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 13461  0010E8  ECE9  F023         	call	_OsTmr_GetTimerStatus	;wreg free
 13462  0010EC  06E8               	decf	wreg,f,c
 13463  0010EE  A4D8               	btfss	status,2,c
 13464  0010F0  0012               	return	
 13465                           
 13466                           ;term.c: 731: {
 13467                           ;term.c: 733: TermMainSmState = Term_InitState;
 13468  0010F2  0E02               	movlw	2
 13469  0010F4  0102               	movlb	2	; () banked
 13470  0010F6  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13471                           
 13472                           ; BSR set to: 2
 13473                           ;term.c: 734: }
 13474                           ;term.c: 735: break;
 13475  0010F8  0012               	return	
 13476  0010FA                     
 13477                           ; BSR set to: 2
 13478                           ;term.c: 739: if((USBDeviceState < CONFIGURED_STATE)||(UCONbits.SUSPND == 1))
 13479                           
 13480                           ; BSR set to: 2
 13481  0010FA  0E1F               	movlw	31
 13482  0010FC  0100               	movlb	0	; () banked
 13483  0010FE  65CB               	cpfsgt	_USBDeviceState& (0+255),b
 13484  001100  0012               	return	
 13485                           
 13486                           ; BSR set to: 0
 13487  001102  B265               	btfsc	3941,1,c	;volatile
 13488  001104  0012               	return	
 13489                           
 13490                           ; BSR set to: 0
 13491                           ;term.c: 743: else
 13492                           ;term.c: 744: {
 13493                           ;term.c: 746: TermMainSmState = Term_WelcomeState;
 13494                           
 13495                           ; BSR set to: 0
 13496                           
 13497                           ; BSR set to: 0
 13498                           ;term.c: 740: {
 13499                           ;term.c: 742: }
 13500  001106  0E03               	movlw	3
 13501  001108  0102               	movlb	2	; () banked
 13502  00110A  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13503                           
 13504                           ; BSR set to: 2
 13505                           ;term.c: 747: }
 13506                           ;term.c: 748: break;
 13507  00110C  0012               	return	
 13508  00110E                     
 13509                           ; BSR set to: 2
 13510                           ;term.c: 752: if((cdc_trf_state == 0))
 13511                           
 13512                           ; BSR set to: 2
 13513  00110E  0100               	movlb	0	; () banked
 13514  001110  51C1               	movf	_cdc_trf_state& (0+255),w,b
 13515  001112  A4D8               	btfss	status,2,c
 13516  001114  0012               	return	
 13517                           
 13518                           ; BSR set to: 0
 13519                           ;term.c: 753: {
 13520                           ;term.c: 755: putUSBUSART((void*)Welcome,(sizeof(Welcome) - 1));
 13521  001116  0E4F               	movlw	low _Welcome
 13522  001118  6F83               	movwf	putUSBUSART@data& (0+255),b
 13523  00111A  0EFD               	movlw	high _Welcome
 13524  00111C  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 13525  00111E  0E88               	movlw	136
 13526  001120  6F85               	movwf	putUSBUSART@length& (0+255),b
 13527  001122  EC65  F02E         	call	_putUSBUSART	;wreg free
 13528                           
 13529                           ;term.c: 757: TermMainSmState = Term_InstDescState;
 13530  001126  0E04               	movlw	4
 13531  001128  0102               	movlb	2	; () banked
 13532  00112A  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13533                           
 13534                           ; BSR set to: 2
 13535                           ;term.c: 758: }
 13536                           ;term.c: 759: break;
 13537  00112C  0012               	return	
 13538  00112E                     
 13539                           ; BSR set to: 2
 13540                           ;term.c: 763: if((cdc_trf_state == 0))
 13541                           
 13542                           ; BSR set to: 2
 13543  00112E  0100               	movlb	0	; () banked
 13544  001130  51C1               	movf	_cdc_trf_state& (0+255),w,b
 13545  001132  A4D8               	btfss	status,2,c
 13546  001134  0012               	return	
 13547                           
 13548                           ; BSR set to: 0
 13549                           ;term.c: 764: {
 13550                           ;term.c: 766: putUSBUSART((void*)MsgFormat,(sizeof(MsgFormat) - 1));
 13551  001136  0E5F               	movlw	low _MsgFormat
 13552  001138  6F83               	movwf	putUSBUSART@data& (0+255),b
 13553  00113A  0EFC               	movlw	high _MsgFormat
 13554  00113C  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 13555  00113E  0EEF               	movlw	239
 13556  001140  6F85               	movwf	putUSBUSART@length& (0+255),b
 13557  001142  EC65  F02E         	call	_putUSBUSART	;wreg free
 13558                           
 13559                           ;term.c: 768: TermMainSmState = Term_FwkVerState;
 13560  001146  0E05               	movlw	5
 13561  001148  0102               	movlb	2	; () banked
 13562  00114A  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13563                           
 13564                           ; BSR set to: 2
 13565                           ;term.c: 769: }
 13566                           ;term.c: 770: break;
 13567  00114C  0012               	return	
 13568  00114E                     
 13569                           ; BSR set to: 2
 13570                           ;term.c: 774: if((cdc_trf_state == 0))
 13571                           
 13572                           ; BSR set to: 2
 13573  00114E  0100               	movlb	0	; () banked
 13574  001150  51C1               	movf	_cdc_trf_state& (0+255),w,b
 13575  001152  A4D8               	btfss	status,2,c
 13576  001154  0012               	return	
 13577                           
 13578                           ; BSR set to: 0
 13579                           ;term.c: 775: {
 13580                           ;term.c: 777: memset(Data,0,50);
 13581  001156  0E94               	movlw	low Term_MainSm@Data
 13582  001158  6F7D               	movwf	memset@p1& (0+255),b
 13583  00115A  0E04               	movlw	high Term_MainSm@Data
 13584  00115C  6F7E               	movwf	(memset@p1+1)& (0+255),b
 13585  00115E  0E00               	movlw	0
 13586  001160  6F80               	movwf	(memset@c+1)& (0+255),b
 13587  001162  0E00               	movlw	0
 13588  001164  6F7F               	movwf	memset@c& (0+255),b
 13589  001166  0E00               	movlw	0
 13590  001168  6F82               	movwf	(memset@n+1)& (0+255),b
 13591  00116A  0E32               	movlw	50
 13592  00116C  6F81               	movwf	memset@n& (0+255),b
 13593  00116E  EC0D  F02D         	call	_memset	;wreg free
 13594                           
 13595                           ;term.c: 779: utoa(FwkMajorStr,1,10);
 13596  001172  0E32               	movlw	low Term_MainSm@FwkMajorStr
 13597  001174  0100               	movlb	0	; () banked
 13598  001176  6F8A               	movwf	utoa@buf& (0+255),b
 13599  001178  0E01               	movlw	high Term_MainSm@FwkMajorStr
 13600  00117A  6F8B               	movwf	(utoa@buf+1)& (0+255),b
 13601  00117C  0E00               	movlw	0
 13602  00117E  6F8D               	movwf	(utoa@val+1)& (0+255),b
 13603  001180  0E01               	movlw	1
 13604  001182  6F8C               	movwf	utoa@val& (0+255),b
 13605  001184  0E00               	movlw	0
 13606  001186  6F8F               	movwf	(utoa@base+1)& (0+255),b
 13607  001188  0E0A               	movlw	10
 13608  00118A  6F8E               	movwf	utoa@base& (0+255),b
 13609  00118C  EC86  F020         	call	_utoa	;wreg free
 13610                           
 13611                           ;term.c: 780: utoa(FwkMinorStr,2,10);
 13612  001190  0E36               	movlw	low Term_MainSm@FwkMinorStr
 13613  001192  0100               	movlb	0	; () banked
 13614  001194  6F8A               	movwf	utoa@buf& (0+255),b
 13615  001196  0E01               	movlw	high Term_MainSm@FwkMinorStr
 13616  001198  6F8B               	movwf	(utoa@buf+1)& (0+255),b
 13617  00119A  0E00               	movlw	0
 13618  00119C  6F8D               	movwf	(utoa@val+1)& (0+255),b
 13619  00119E  0E02               	movlw	2
 13620  0011A0  6F8C               	movwf	utoa@val& (0+255),b
 13621  0011A2  0E00               	movlw	0
 13622  0011A4  6F8F               	movwf	(utoa@base+1)& (0+255),b
 13623  0011A6  0E0A               	movlw	10
 13624  0011A8  6F8E               	movwf	utoa@base& (0+255),b
 13625  0011AA  EC86  F020         	call	_utoa	;wreg free
 13626                           
 13627                           ;term.c: 781: utoa(FwkBuildStr,0,10);
 13628  0011AE  0E3A               	movlw	low Term_MainSm@FwkBuildStr
 13629  0011B0  0100               	movlb	0	; () banked
 13630  0011B2  6F8A               	movwf	utoa@buf& (0+255),b
 13631  0011B4  0E01               	movlw	high Term_MainSm@FwkBuildStr
 13632  0011B6  6F8B               	movwf	(utoa@buf+1)& (0+255),b
 13633  0011B8  0E00               	movlw	0
 13634  0011BA  6F8D               	movwf	(utoa@val+1)& (0+255),b
 13635  0011BC  0E00               	movlw	0
 13636  0011BE  6F8C               	movwf	utoa@val& (0+255),b
 13637  0011C0  0E00               	movlw	0
 13638  0011C2  6F8F               	movwf	(utoa@base+1)& (0+255),b
 13639  0011C4  0E0A               	movlw	10
 13640  0011C6  6F8E               	movwf	utoa@base& (0+255),b
 13641  0011C8  EC86  F020         	call	_utoa	;wreg free
 13642                           
 13643                           ;term.c: 782: strcpy(Data,"Framework Version: ");
 13644  0011CC  0E94               	movlw	low Term_MainSm@Data
 13645  0011CE  0100               	movlb	0	; () banked
 13646  0011D0  6F7D               	movwf	strcpy@to& (0+255),b
 13647  0011D2  0E04               	movlw	high Term_MainSm@Data
 13648  0011D4  6F7E               	movwf	(strcpy@to+1)& (0+255),b
 13649  0011D6  0EFF               	movlw	low STR_23
 13650  0011D8  6F7F               	movwf	strcpy@from& (0+255),b
 13651  0011DA  0EFE               	movlw	high STR_23
 13652  0011DC  6F80               	movwf	(strcpy@from+1)& (0+255),b
 13653  0011DE  ECDC  F02C         	call	_strcpy	;wreg free
 13654                           
 13655                           ;term.c: 783: strcat(Data,FwkMajorStr);
 13656  0011E2  0E94               	movlw	low Term_MainSm@Data
 13657  0011E4  0100               	movlb	0	; () banked
 13658  0011E6  6F7D               	movwf	strcat@to& (0+255),b
 13659  0011E8  0E04               	movlw	high Term_MainSm@Data
 13660  0011EA  6F7E               	movwf	(strcat@to+1)& (0+255),b
 13661  0011EC  0E32               	movlw	low Term_MainSm@FwkMajorStr
 13662  0011EE  6F7F               	movwf	strcat@from& (0+255),b
 13663  0011F0  0E01               	movlw	high Term_MainSm@FwkMajorStr
 13664  0011F2  6F80               	movwf	(strcat@from+1)& (0+255),b
 13665  0011F4  EC8F  F027         	call	_strcat	;wreg free
 13666                           
 13667                           ;term.c: 784: strcat(Data,".");
 13668  0011F8  0E94               	movlw	low Term_MainSm@Data
 13669  0011FA  0100               	movlb	0	; () banked
 13670  0011FC  6F7D               	movwf	strcat@to& (0+255),b
 13671  0011FE  0E04               	movlw	high Term_MainSm@Data
 13672  001200  6F7E               	movwf	(strcat@to+1)& (0+255),b
 13673  001202  0EF4               	movlw	low STR_24
 13674  001204  6F7F               	movwf	strcat@from& (0+255),b
 13675  001206  0EFF               	movlw	high STR_24
 13676  001208  6F80               	movwf	(strcat@from+1)& (0+255),b
 13677  00120A  EC8F  F027         	call	_strcat	;wreg free
 13678                           
 13679                           ;term.c: 785: strcat(Data,FwkMinorStr);
 13680  00120E  0E94               	movlw	low Term_MainSm@Data
 13681  001210  0100               	movlb	0	; () banked
 13682  001212  6F7D               	movwf	strcat@to& (0+255),b
 13683  001214  0E04               	movlw	high Term_MainSm@Data
 13684  001216  6F7E               	movwf	(strcat@to+1)& (0+255),b
 13685  001218  0E36               	movlw	low Term_MainSm@FwkMinorStr
 13686  00121A  6F7F               	movwf	strcat@from& (0+255),b
 13687  00121C  0E01               	movlw	high Term_MainSm@FwkMinorStr
 13688  00121E  6F80               	movwf	(strcat@from+1)& (0+255),b
 13689  001220  EC8F  F027         	call	_strcat	;wreg free
 13690                           
 13691                           ;term.c: 786: strcat(Data,".");
 13692  001224  0E94               	movlw	low Term_MainSm@Data
 13693  001226  0100               	movlb	0	; () banked
 13694  001228  6F7D               	movwf	strcat@to& (0+255),b
 13695  00122A  0E04               	movlw	high Term_MainSm@Data
 13696  00122C  6F7E               	movwf	(strcat@to+1)& (0+255),b
 13697  00122E  0EF4               	movlw	low STR_24
 13698  001230  6F7F               	movwf	strcat@from& (0+255),b
 13699  001232  0EFF               	movlw	high STR_24
 13700  001234  6F80               	movwf	(strcat@from+1)& (0+255),b
 13701  001236  EC8F  F027         	call	_strcat	;wreg free
 13702                           
 13703                           ;term.c: 787: strcat(Data,FwkBuildStr);
 13704  00123A  0E94               	movlw	low Term_MainSm@Data
 13705  00123C  0100               	movlb	0	; () banked
 13706  00123E  6F7D               	movwf	strcat@to& (0+255),b
 13707  001240  0E04               	movlw	high Term_MainSm@Data
 13708  001242  6F7E               	movwf	(strcat@to+1)& (0+255),b
 13709  001244  0E3A               	movlw	low Term_MainSm@FwkBuildStr
 13710  001246  6F7F               	movwf	strcat@from& (0+255),b
 13711  001248  0E01               	movlw	high Term_MainSm@FwkBuildStr
 13712  00124A  6F80               	movwf	(strcat@from+1)& (0+255),b
 13713  00124C  EC8F  F027         	call	_strcat	;wreg free
 13714                           
 13715                           ;term.c: 788: strcat(Data,"\r\n");
 13716  001250  0E94               	movlw	low Term_MainSm@Data
 13717  001252  0100               	movlb	0	; () banked
 13718  001254  6F7D               	movwf	strcat@to& (0+255),b
 13719  001256  0E04               	movlw	high Term_MainSm@Data
 13720  001258  6F7E               	movwf	(strcat@to+1)& (0+255),b
 13721  00125A  0EB3               	movlw	low (STR_21+39)
 13722  00125C  6F7F               	movwf	strcat@from& (0+255),b
 13723  00125E  0EFE               	movlw	high (STR_21+39)
 13724  001260  6F80               	movwf	(strcat@from+1)& (0+255),b
 13725  001262  EC8F  F027         	call	_strcat	;wreg free
 13726                           
 13727                           ;term.c: 790: putUSBUSART((void*)Data,strlen(Data));
 13728  001266  0E94               	movlw	low Term_MainSm@Data
 13729  001268  0100               	movlb	0	; () banked
 13730  00126A  6F83               	movwf	putUSBUSART@data& (0+255),b
 13731  00126C  0E04               	movlw	high Term_MainSm@Data
 13732  00126E  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 13733  001270  0E94               	movlw	low Term_MainSm@Data
 13734  001272  6F7D               	movwf	strlen@s& (0+255),b
 13735  001274  0E04               	movlw	high Term_MainSm@Data
 13736  001276  6F7E               	movwf	(strlen@s+1)& (0+255),b
 13737  001278  EC9E  F02B         	call	_strlen	;wreg free
 13738  00127C  0100               	movlb	0	; () banked
 13739  00127E  517D               	movf	?_strlen& (0+255),w,b
 13740  001280  6F85               	movwf	putUSBUSART@length& (0+255),b
 13741  001282  EC65  F02E         	call	_putUSBUSART	;wreg free
 13742                           
 13743                           ;term.c: 792: TermMainSmState = Term_FwkBuildDateState;
 13744  001286  0E06               	movlw	6
 13745  001288  0102               	movlb	2	; () banked
 13746  00128A  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13747                           
 13748                           ; BSR set to: 2
 13749                           ;term.c: 793: }
 13750                           ;term.c: 794: break;
 13751  00128C  0012               	return	
 13752  00128E                     
 13753                           ; BSR set to: 2
 13754                           ;term.c: 798: if((cdc_trf_state == 0))
 13755                           
 13756                           ; BSR set to: 2
 13757  00128E  0100               	movlb	0	; () banked
 13758  001290  51C1               	movf	_cdc_trf_state& (0+255),w,b
 13759  001292  A4D8               	btfss	status,2,c
 13760  001294  0012               	return	
 13761                           
 13762                           ; BSR set to: 0
 13763                           ;term.c: 799: {
 13764                           ;term.c: 801: memset(Data,0,50);
 13765  001296  0E94               	movlw	low Term_MainSm@Data
 13766  001298  6F7D               	movwf	memset@p1& (0+255),b
 13767  00129A  0E04               	movlw	high Term_MainSm@Data
 13768  00129C  6F7E               	movwf	(memset@p1+1)& (0+255),b
 13769  00129E  0E00               	movlw	0
 13770  0012A0  6F80               	movwf	(memset@c+1)& (0+255),b
 13771  0012A2  0E00               	movlw	0
 13772  0012A4  6F7F               	movwf	memset@c& (0+255),b
 13773  0012A6  0E00               	movlw	0
 13774  0012A8  6F82               	movwf	(memset@n+1)& (0+255),b
 13775  0012AA  0E32               	movlw	50
 13776  0012AC  6F81               	movwf	memset@n& (0+255),b
 13777  0012AE  EC0D  F02D         	call	_memset	;wreg free
 13778                           
 13779                           ;term.c: 803: sprintf(Data,"Build Date: %s\r\n","Mar 12 2022");
 13780  0012B2  0E94               	movlw	low Term_MainSm@Data
 13781  0012B4  0100               	movlb	0	; () banked
 13782  0012B6  6F7D               	movwf	sprintf@sp& (0+255),b
 13783  0012B8  0E04               	movlw	high Term_MainSm@Data
 13784  0012BA  6F7E               	movwf	(sprintf@sp+1)& (0+255),b
 13785  0012BC  0E27               	movlw	low STR_27
 13786  0012BE  6F7F               	movwf	sprintf@f& (0+255),b
 13787  0012C0  0EFF               	movlw	high STR_27
 13788  0012C2  6F80               	movwf	(sprintf@f+1)& (0+255),b
 13789  0012C4  0EB6               	movlw	low STR_28
 13790  0012C6  6F81               	movwf	(?_sprintf+4)& (0+255),b
 13791  0012C8  0EFF               	movlw	high STR_28
 13792  0012CA  6F82               	movwf	(?_sprintf+5)& (0+255),b
 13793  0012CC  ECD6  F01A         	call	_sprintf	;wreg free
 13794                           
 13795                           ;term.c: 805: putUSBUSART((void*)Data,strlen(Data));
 13796  0012D0  0E94               	movlw	low Term_MainSm@Data
 13797  0012D2  0100               	movlb	0	; () banked
 13798  0012D4  6F83               	movwf	putUSBUSART@data& (0+255),b
 13799  0012D6  0E04               	movlw	high Term_MainSm@Data
 13800  0012D8  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 13801  0012DA  0E94               	movlw	low Term_MainSm@Data
 13802  0012DC  6F7D               	movwf	strlen@s& (0+255),b
 13803  0012DE  0E04               	movlw	high Term_MainSm@Data
 13804  0012E0  6F7E               	movwf	(strlen@s+1)& (0+255),b
 13805  0012E2  EC9E  F02B         	call	_strlen	;wreg free
 13806  0012E6  0100               	movlb	0	; () banked
 13807  0012E8  517D               	movf	?_strlen& (0+255),w,b
 13808  0012EA  6F85               	movwf	putUSBUSART@length& (0+255),b
 13809  0012EC  EC65  F02E         	call	_putUSBUSART	;wreg free
 13810                           
 13811                           ;term.c: 807: TermMainSmState = Term_SysInitState;
 13812  0012F0  0E07               	movlw	7
 13813  0012F2  0102               	movlb	2	; () banked
 13814  0012F4  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13815                           
 13816                           ; BSR set to: 2
 13817                           ;term.c: 808: }
 13818                           ;term.c: 809: break;
 13819  0012F6  0012               	return	
 13820  0012F8                     
 13821                           ; BSR set to: 2
 13822                           ;term.c: 813: if((cdc_trf_state == 0))
 13823                           
 13824                           ; BSR set to: 2
 13825  0012F8  0100               	movlb	0	; () banked
 13826  0012FA  51C1               	movf	_cdc_trf_state& (0+255),w,b
 13827  0012FC  A4D8               	btfss	status,2,c
 13828  0012FE  0012               	return	
 13829                           
 13830                           ; BSR set to: 0
 13831                           ;term.c: 814: {
 13832                           ;term.c: 816: putUSBUSART((void*)MsgReady,(sizeof(MsgReady) - 1));
 13833  001300  0E5F               	movlw	low _MsgReady
 13834  001302  6F83               	movwf	putUSBUSART@data& (0+255),b
 13835  001304  0EFE               	movlw	high _MsgReady
 13836  001306  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 13837  001308  0E16               	movlw	22
 13838  00130A  6F85               	movwf	putUSBUSART@length& (0+255),b
 13839  00130C  EC65  F02E         	call	_putUSBUSART	;wreg free
 13840                           
 13841                           ;term.c: 818: TermMainSmState = Term_FinalState;
 13842  001310  0E08               	movlw	8
 13843  001312  0102               	movlb	2	; () banked
 13844  001314  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13845                           
 13846                           ; BSR set to: 2
 13847                           ;term.c: 819: }
 13848                           ;term.c: 820: break;
 13849  001316  0012               	return	
 13850  001318                     
 13851                           ; BSR set to: 2
 13852                           ;term.c: 824: Terminal();
 13853                           
 13854                           ; BSR set to: 2
 13855  001318  EC68  F000         	call	_Terminal	;wreg free
 13856                           
 13857                           ;term.c: 829: }
 13858                           
 13859                           ;term.c: 828: break;
 13860                           
 13861                           ;term.c: 827: default:
 13862                           
 13863                           ;term.c: 825: break;
 13864  00131C  0012               	return	
 13865  00131E                     l2413:
 13866  00131E  0102               	movlb	2	; () banked
 13867  001320  51EC               	movf	Term_MainSm@TermMainSmState& (0+255),w,b
 13868                           
 13869                           ; Switch size 1, requested type "space"
 13870                           ; Number of cases is 9, Range of values is 0 to 8
 13871                           ; switch strategies available:
 13872                           ; Name         Instructions Cycles
 13873                           ; simple_byte           28    15 (average)
 13874                           ;	Chosen strategy is simple_byte
 13875  001322  0A00               	xorlw	0	; case 0
 13876  001324  B4D8               	btfsc	status,2,c
 13877  001326  D6C8               	goto	l2414
 13878  001328  0A01               	xorlw	1	; case 1
 13879  00132A  B4D8               	btfsc	status,2,c
 13880  00132C  D6D8               	goto	l2416
 13881  00132E  0A03               	xorlw	3	; case 2
 13882  001330  B4D8               	btfsc	status,2,c
 13883  001332  D6E3               	goto	l2418
 13884  001334  0A01               	xorlw	1	; case 3
 13885  001336  B4D8               	btfsc	status,2,c
 13886  001338  D6EA               	goto	l2423
 13887  00133A  0A07               	xorlw	7	; case 4
 13888  00133C  B4D8               	btfsc	status,2,c
 13889  00133E  D6F7               	goto	l2425
 13890  001340  0A01               	xorlw	1	; case 5
 13891  001342  B4D8               	btfsc	status,2,c
 13892  001344  D704               	goto	l2427
 13893  001346  0A03               	xorlw	3	; case 6
 13894  001348  B4D8               	btfsc	status,2,c
 13895  00134A  D7A1               	goto	l2429
 13896  00134C  0A01               	xorlw	1	; case 7
 13897  00134E  B4D8               	btfsc	status,2,c
 13898  001350  D7D3               	goto	l2431
 13899  001352  0A0F               	xorlw	15	; case 8
 13900  001354  A4D8               	btfss	status,2,c
 13901  001356  0012               	return	
 13902  001358  D7DF               	goto	l2433
 13903  00135A                     __end_of_Term_MainSm:
 13904                           	opt stack 0
 13905                           tosu	equ	0xFFF
 13906                           tosh	equ	0xFFE
 13907                           tosl	equ	0xFFD
 13908                           pclath	equ	0xFFA
 13909                           tblptru	equ	0xFF8
 13910                           tblptrh	equ	0xFF7
 13911                           tblptrl	equ	0xFF6
 13912                           tablat	equ	0xFF5
 13913                           prodh	equ	0xFF4
 13914                           prodl	equ	0xFF3
 13915                           intcon	equ	0xFF2
 13916                           intcon2	equ	0xFF1
 13917                           intcon3	equ	0xFF0
 13918                           indf0	equ	0xFEF
 13919                           postinc0	equ	0xFEE
 13920                           plusw0	equ	0xFEB
 13921                           fsr0h	equ	0xFEA
 13922                           fsr0l	equ	0xFE9
 13923                           wreg	equ	0xFE8
 13924                           indf1	equ	0xFE7
 13925                           postinc1	equ	0xFE6
 13926                           postdec1	equ	0xFE5
 13927                           plusw1	equ	0xFE3
 13928                           fsr1h	equ	0xFE2
 13929                           fsr1l	equ	0xFE1
 13930                           indf2	equ	0xFDF
 13931                           postinc2	equ	0xFDE
 13932                           postdec2	equ	0xFDD
 13933                           plusw2	equ	0xFDB
 13934                           fsr2h	equ	0xFDA
 13935                           fsr2l	equ	0xFD9
 13936                           status	equ	0xFD8
 13937                           
 13938 ;; *************** function _strlen *****************
 13939 ;; Defined at:
 13940 ;;		line 4 in file "/opt/microchip/xc8/v1.45/sources/common/strlen.c"
 13941 ;; Parameters:    Size  Location     Type
 13942 ;;  s               2   29[BANK0 ] PTR const unsigned char 
 13943 ;;		 -> Term_MainSm@Data(50), 
 13944 ;; Auto vars:     Size  Location     Type
 13945 ;;  cp              2   33[BANK0 ] PTR const unsigned char 
 13946 ;;		 -> Term_MainSm@Data(50), 
 13947 ;; Return value:  Size  Location     Type
 13948 ;;                  2   29[BANK0 ] unsigned int 
 13949 ;; Registers used:
 13950 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13951 ;; Tracked objects:
 13952 ;;		On entry : 0/0
 13953 ;;		On exit  : 0/0
 13954 ;;		Unchanged: 0/0
 13955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13956 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13957 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13958 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13959 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13960 ;;Total ram usage:        6 bytes
 13961 ;; Hardware stack levels used:    1
 13962 ;; Hardware stack levels required when called:   11
 13963 ;; This function calls:
 13964 ;;		Nothing
 13965 ;; This function is called by:
 13966 ;;		_Term_MainSm
 13967 ;; This function uses a non-reentrant model
 13968 ;;
 13969                           
 13970                           	psect	text56
 13971  00573C                     __ptext56:
 13972                           	opt stack 0
 13973  00573C                     _strlen:
 13974                           	opt stack 15
 13975                           
 13976                           ;incstack = 0
 13977  00573C  C07D  F081         	movff	strlen@s,strlen@cp
 13978  005740  C07E  F082         	movff	strlen@s+1,strlen@cp+1
 13979  005744  D003               	goto	l3201
 13980  005746  0100               	movlb	0	; () banked
 13981  005748  4B81               	infsnz	strlen@cp& (0+255),f,b
 13982  00574A  2B82               	incf	(strlen@cp+1)& (0+255),f,b
 13983  00574C                     l3201:
 13984                           
 13985                           ; BSR set to: 0
 13986  00574C  C081  FFD9         	movff	strlen@cp,fsr2l
 13987  005750  C082  FFDA         	movff	strlen@cp+1,fsr2h
 13988  005754  50DF               	movf	indf2,w,c
 13989  005756  A4D8               	btfss	status,2,c
 13990  005758  D7F6               	goto	l3202
 13991  00575A  C07D  F07F         	movff	strlen@s,??_strlen
 13992  00575E  C07E  F080         	movff	strlen@s+1,??_strlen+1
 13993  005762  0100               	movlb	0	; () banked
 13994  005764  1F7F               	comf	??_strlen& (0+255),f,b
 13995  005766  1F80               	comf	(??_strlen+1)& (0+255),f,b
 13996  005768  4B7F               	infsnz	??_strlen& (0+255),f,b
 13997  00576A  2B80               	incf	(??_strlen+1)& (0+255),f,b
 13998  00576C  5181               	movf	strlen@cp& (0+255),w,b
 13999  00576E  257F               	addwf	??_strlen& (0+255),w,b
 14000  005770  6F7D               	movwf	?_strlen& (0+255),b
 14001  005772  5182               	movf	(strlen@cp+1)& (0+255),w,b
 14002  005774  2180               	addwfc	(??_strlen+1)& (0+255),w,b
 14003  005776  6F7E               	movwf	(?_strlen+1)& (0+255),b
 14004  005778  0012               	return	
 14005  00577A                     __end_of_strlen:
 14006                           	opt stack 0
 14007                           tosu	equ	0xFFF
 14008                           tosh	equ	0xFFE
 14009                           tosl	equ	0xFFD
 14010                           pclath	equ	0xFFA
 14011                           tblptru	equ	0xFF8
 14012                           tblptrh	equ	0xFF7
 14013                           tblptrl	equ	0xFF6
 14014                           tablat	equ	0xFF5
 14015                           prodh	equ	0xFF4
 14016                           prodl	equ	0xFF3
 14017                           intcon	equ	0xFF2
 14018                           intcon2	equ	0xFF1
 14019                           intcon3	equ	0xFF0
 14020                           indf0	equ	0xFEF
 14021                           postinc0	equ	0xFEE
 14022                           plusw0	equ	0xFEB
 14023                           fsr0h	equ	0xFEA
 14024                           fsr0l	equ	0xFE9
 14025                           wreg	equ	0xFE8
 14026                           indf1	equ	0xFE7
 14027                           postinc1	equ	0xFE6
 14028                           postdec1	equ	0xFE5
 14029                           plusw1	equ	0xFE3
 14030                           fsr1h	equ	0xFE2
 14031                           fsr1l	equ	0xFE1
 14032                           indf2	equ	0xFDF
 14033                           postinc2	equ	0xFDE
 14034                           postdec2	equ	0xFDD
 14035                           plusw2	equ	0xFDB
 14036                           fsr2h	equ	0xFDA
 14037                           fsr2l	equ	0xFD9
 14038                           status	equ	0xFD8
 14039                           
 14040 ;; *************** function _strcat *****************
 14041 ;; Defined at:
 14042 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/strcat.c"
 14043 ;; Parameters:    Size  Location     Type
 14044 ;;  to              2   29[BANK0 ] PTR unsigned char 
 14045 ;;		 -> Term_MainSm@Data(50), 
 14046 ;;  from            2   31[BANK0 ] PTR const unsigned char 
 14047 ;;		 -> STR_26(3), STR_25(2), STR_24(2), Term_MainSm@FwkBuildStr(4), 
 14048 ;;		 -> Term_MainSm@FwkMinorStr(4), Term_MainSm@FwkMajorStr(4), 
 14049 ;; Auto vars:     Size  Location     Type
 14050 ;;  cp              2   33[BANK0 ] PTR unsigned char 
 14051 ;;		 -> Term_MainSm@Data(50), 
 14052 ;; Return value:  Size  Location     Type
 14053 ;;                  2   29[BANK0 ] PTR unsigned char 
 14054 ;; Registers used:
 14055 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 14056 ;; Tracked objects:
 14057 ;;		On entry : 0/0
 14058 ;;		On exit  : 0/0
 14059 ;;		Unchanged: 0/0
 14060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14061 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14062 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14063 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14064 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14065 ;;Total ram usage:        6 bytes
 14066 ;; Hardware stack levels used:    1
 14067 ;; Hardware stack levels required when called:   11
 14068 ;; This function calls:
 14069 ;;		Nothing
 14070 ;; This function is called by:
 14071 ;;		_Term_MainSm
 14072 ;; This function uses a non-reentrant model
 14073 ;;
 14074                           
 14075                           	psect	text57
 14076  004F1E                     __ptext57:
 14077                           	opt stack 0
 14078  004F1E                     _strcat:
 14079                           	opt stack 15
 14080                           
 14081                           ; BSR set to: 0
 14082                           ;incstack = 0
 14083  004F1E  C07D  F081         	movff	strcat@to,strcat@cp
 14084  004F22  C07E  F082         	movff	strcat@to+1,strcat@cp+1
 14085  004F26  D003               	goto	l3186
 14086  004F28  0100               	movlb	0	; () banked
 14087  004F2A  4B81               	infsnz	strcat@cp& (0+255),f,b
 14088  004F2C  2B82               	incf	(strcat@cp+1)& (0+255),f,b
 14089  004F2E                     l3186:
 14090                           
 14091                           ; BSR set to: 0
 14092  004F2E  C081  FFD9         	movff	strcat@cp,fsr2l
 14093  004F32  C082  FFDA         	movff	strcat@cp+1,fsr2h
 14094  004F36  50DF               	movf	indf2,w,c
 14095  004F38  B4D8               	btfsc	status,2,c
 14096  004F3A  D006               	goto	l3189
 14097  004F3C  D7F5               	goto	l3187
 14098  004F3E  0100               	movlb	0	; () banked
 14099  004F40  4B81               	infsnz	strcat@cp& (0+255),f,b
 14100  004F42  2B82               	incf	(strcat@cp+1)& (0+255),f,b
 14101  004F44  4B7F               	infsnz	strcat@from& (0+255),f,b
 14102  004F46  2B80               	incf	(strcat@from+1)& (0+255),f,b
 14103  004F48                     l3189:
 14104                           
 14105                           ; BSR set to: 0
 14106  004F48  C07F  FFF6         	movff	strcat@from,tblptrl
 14107  004F4C  C080  FFF7         	movff	strcat@from+1,tblptrh
 14108  004F50  6AF8               	clrf	tblptru,c
 14109  004F52  C081  FFD9         	movff	strcat@cp,fsr2l
 14110  004F56  C082  FFDA         	movff	strcat@cp+1,fsr2h
 14111  004F5A  0E0E               	movlw	(high __ramtop+-1)
 14112  004F5C  64F7               	cpfsgt	tblptrh,c
 14113  004F5E  D003               	bra	u12017
 14114  004F60  0008               	tblrd		*
 14115  004F62  50F5               	movf	tablat,w,c
 14116  004F64  D005               	bra	u12010
 14117  004F66                     u12017:
 14118  004F66  CFF6 FFE9          	movff	tblptrl,fsr0l
 14119  004F6A  CFF7 FFEA          	movff	tblptrh,fsr0h
 14120  004F6E  50EF               	movf	indf0,w,c
 14121  004F70                     u12010:
 14122  004F70  6EDF               	movwf	indf2,c
 14123  004F72  50DF               	movf	indf2,w,c
 14124  004F74  B4D8               	btfsc	status,2,c
 14125  004F76  0012               	return	
 14126  004F78  D7E2               	goto	l3190
 14127  004F7A                     __end_of_strcat:
 14128                           	opt stack 0
 14129                           tosu	equ	0xFFF
 14130                           tosh	equ	0xFFE
 14131                           tosl	equ	0xFFD
 14132                           pclath	equ	0xFFA
 14133                           tblptru	equ	0xFF8
 14134                           tblptrh	equ	0xFF7
 14135                           tblptrl	equ	0xFF6
 14136                           tablat	equ	0xFF5
 14137                           prodh	equ	0xFF4
 14138                           prodl	equ	0xFF3
 14139                           intcon	equ	0xFF2
 14140                           intcon2	equ	0xFF1
 14141                           intcon3	equ	0xFF0
 14142                           indf0	equ	0xFEF
 14143                           postinc0	equ	0xFEE
 14144                           plusw0	equ	0xFEB
 14145                           fsr0h	equ	0xFEA
 14146                           fsr0l	equ	0xFE9
 14147                           wreg	equ	0xFE8
 14148                           indf1	equ	0xFE7
 14149                           postinc1	equ	0xFE6
 14150                           postdec1	equ	0xFE5
 14151                           plusw1	equ	0xFE3
 14152                           fsr1h	equ	0xFE2
 14153                           fsr1l	equ	0xFE1
 14154                           indf2	equ	0xFDF
 14155                           postinc2	equ	0xFDE
 14156                           postdec2	equ	0xFDD
 14157                           plusw2	equ	0xFDB
 14158                           fsr2h	equ	0xFDA
 14159                           fsr2l	equ	0xFD9
 14160                           status	equ	0xFD8
 14161                           
 14162 ;; *************** function _sprintf *****************
 14163 ;; Defined at:
 14164 ;;		line 492 in file "/opt/microchip/xc8/v1.45/sources/common/doprnt.c"
 14165 ;; Parameters:    Size  Location     Type
 14166 ;;  sp              2   29[BANK0 ] PTR unsigned char 
 14167 ;;		 -> Term_MainSm@Data(50), 
 14168 ;;  f               2   31[BANK0 ] PTR const unsigned char 
 14169 ;;		 -> STR_27(17), 
 14170 ;; Auto vars:     Size  Location     Type
 14171 ;;  tmpval          4    0        struct .
 14172 ;;  cp              2   39[BANK0 ] PTR const unsigned char 
 14173 ;;		 -> STR_30(7), STR_28(12), 
 14174 ;;  ap              2   36[BANK0 ] PTR void [1]
 14175 ;;		 -> ?_sprintf(2), 
 14176 ;;  len             2    0        unsigned int 
 14177 ;;  val             2    0        unsigned int 
 14178 ;;  c               1   38[BANK0 ] char 
 14179 ;;  flag            1   35[BANK0 ] unsigned char 
 14180 ;;  prec            1    0        char 
 14181 ;; Return value:  Size  Location     Type
 14182 ;;                  2   29[BANK0 ] int 
 14183 ;; Registers used:
 14184 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 14185 ;; Tracked objects:
 14186 ;;		On entry : 0/0
 14187 ;;		On exit  : 0/0
 14188 ;;		Unchanged: 0/0
 14189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14190 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14191 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14193 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14194 ;;Total ram usage:       12 bytes
 14195 ;; Hardware stack levels used:    1
 14196 ;; Hardware stack levels required when called:   11
 14197 ;; This function calls:
 14198 ;;		Nothing
 14199 ;; This function is called by:
 14200 ;;		_Term_MainSm
 14201 ;; This function uses a non-reentrant model
 14202 ;;
 14203                           
 14204                           	psect	text58
 14205  0035AC                     __ptext58:
 14206                           	opt stack 0
 14207  0035AC                     _sprintf:
 14208                           	opt stack 15
 14209                           
 14210                           ;doprnt.c: 494: va_list ap;
 14211                           ;doprnt.c: 499: signed char c;
 14212                           ;doprnt.c: 506: signed char prec;
 14213                           ;doprnt.c: 508: unsigned char flag;
 14214                           ;doprnt.c: 523: union {
 14215                           ;doprnt.c: 524: unsigned long vd;
 14216                           ;doprnt.c: 525: double integ;
 14217                           ;doprnt.c: 526: } tmpval;
 14218                           ;doprnt.c: 528: unsigned int val;
 14219                           ;doprnt.c: 529: unsigned len;
 14220                           ;doprnt.c: 530: const char * cp;
 14221                           ;doprnt.c: 533: *ap = __va_start();
 14222                           
 14223                           ;incstack = 0
 14224  0035AC  0E81               	movlw	low (?_sprintf+4)
 14225  0035AE  0100               	movlb	0	; () banked
 14226  0035B0  6F84               	movwf	sprintf@ap& (0+255),b
 14227  0035B2  0E00               	movlw	high (?_sprintf+4)
 14228  0035B4  6F85               	movwf	(sprintf@ap+1)& (0+255),b
 14229                           
 14230                           ;doprnt.c: 536: while(c = *f++) {
 14231  0035B6  D04E               	goto	l2590
 14232  0035B8                     
 14233                           ; BSR set to: 0
 14234                           ;doprnt.c: 538: if(c != '%')
 14235                           
 14236                           ; BSR set to: 0
 14237  0035B8  0E25               	movlw	37
 14238  0035BA  1986               	xorwf	sprintf@c& (0+255),w,b
 14239  0035BC  B4D8               	btfsc	status,2,c
 14240  0035BE  D009               	goto	l2580
 14241                           
 14242                           ; BSR set to: 0
 14243                           ;doprnt.c: 540: {
 14244                           ;doprnt.c: 541: ((*sp++ = (c)));
 14245  0035C0  C07D  FFD9         	movff	sprintf@sp,fsr2l
 14246  0035C4  C07E  FFDA         	movff	sprintf@sp+1,fsr2h
 14247  0035C8  C086  FFDF         	movff	sprintf@c,indf2
 14248                           
 14249                           ; BSR set to: 0
 14250  0035CC  4B7D               	infsnz	sprintf@sp& (0+255),f,b
 14251  0035CE  2B7E               	incf	(sprintf@sp+1)& (0+255),f,b
 14252                           
 14253                           ;doprnt.c: 542: continue;
 14254  0035D0  D041               	goto	l2590
 14255  0035D2                     l2580:
 14256                           
 14257                           ; BSR set to: 0
 14258                           ;doprnt.c: 543: }
 14259                           ;doprnt.c: 548: flag = 0;
 14260                           
 14261                           ; BSR set to: 0
 14262  0035D2  0E00               	movlw	0
 14263  0035D4  6F83               	movwf	sprintf@flag& (0+255),b
 14264                           
 14265                           ;doprnt.c: 635: switch(c = *f++) {
 14266  0035D6  D02E               	goto	l2581
 14267  0035D8                     
 14268                           ; BSR set to: 0
 14269                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
 14270                           
 14271                           ; BSR set to: 0
 14272  0035D8  C084  FFD9         	movff	sprintf@ap,fsr2l
 14273  0035DC  C085  FFDA         	movff	sprintf@ap+1,fsr2h
 14274  0035E0  CFDE F087          	movff	postinc2,sprintf@cp
 14275  0035E4  CFDD F088          	movff	postdec2,sprintf@cp+1
 14276                           
 14277                           ; BSR set to: 0
 14278  0035E8  0E02               	movlw	2
 14279  0035EA  2784               	addwf	sprintf@ap& (0+255),f,b
 14280  0035EC  0E00               	movlw	0
 14281  0035EE  2385               	addwfc	(sprintf@ap+1)& (0+255),f,b
 14282                           
 14283                           ; BSR set to: 0
 14284                           ;doprnt.c: 740: if(!cp)
 14285  0035F0  5187               	movf	sprintf@cp& (0+255),w,b
 14286  0035F2  1188               	iorwf	(sprintf@cp+1)& (0+255),w,b
 14287  0035F4  A4D8               	btfss	status,2,c
 14288  0035F6  D014               	goto	l2586
 14289                           
 14290                           ; BSR set to: 0
 14291                           ;doprnt.c: 741: cp = "(null)";
 14292  0035F8  0ED7               	movlw	low STR_30
 14293  0035FA  6F87               	movwf	sprintf@cp& (0+255),b
 14294  0035FC  0EFF               	movlw	high STR_30
 14295  0035FE  6F88               	movwf	(sprintf@cp+1)& (0+255),b
 14296                           
 14297                           ; BSR set to: 0
 14298                           ;doprnt.c: 777: while(*cp)
 14299  003600  D00F               	goto	l2586
 14300  003602                     
 14301                           ; BSR set to: 0
 14302                           ;doprnt.c: 778: ((*sp++ = (*cp++)));
 14303                           
 14304                           ; BSR set to: 0
 14305  003602  C087  FFF6         	movff	sprintf@cp,tblptrl
 14306  003606  C088  FFF7         	movff	sprintf@cp+1,tblptrh
 14307  00360A                     	if	0	;tblptru may be non-zero
 14308  00360A                     	endif
 14309  00360A                     	if	0	;tblptru may be non-zero
 14310  00360A                     	endif
 14311  00360A  C07D  FFD9         	movff	sprintf@sp,fsr2l
 14312  00360E  C07E  FFDA         	movff	sprintf@sp+1,fsr2h
 14313  003612  0008               	tblrd		*
 14314  003614  CFF5 FFDF          	movff	tablat,indf2
 14315                           
 14316                           ; BSR set to: 0
 14317  003618  4B87               	infsnz	sprintf@cp& (0+255),f,b
 14318  00361A  2B88               	incf	(sprintf@cp+1)& (0+255),f,b
 14319                           
 14320                           ; BSR set to: 0
 14321  00361C  4B7D               	infsnz	sprintf@sp& (0+255),f,b
 14322  00361E  2B7E               	incf	(sprintf@sp+1)& (0+255),f,b
 14323  003620                     l2586:
 14324                           
 14325                           ; BSR set to: 0
 14326                           
 14327                           ; BSR set to: 0
 14328  003620  C087  FFF6         	movff	sprintf@cp,tblptrl
 14329  003624  C088  FFF7         	movff	sprintf@cp+1,tblptrh
 14330  003628                     	if	0	;tblptru may be non-zero
 14331  003628                     	endif
 14332  003628                     	if	0	;tblptru may be non-zero
 14333  003628                     	endif
 14334  003628  0008               	tblrd		*
 14335  00362A  50F5               	movf	tablat,w,c
 14336  00362C  0900               	iorlw	0
 14337  00362E  B4D8               	btfsc	status,2,c
 14338  003630  D011               	goto	l2590
 14339  003632  D7E7               	goto	l2587
 14340  003634                     l2581:
 14341                           
 14342                           ; BSR set to: 0
 14343                           
 14344                           ; BSR set to: 0
 14345  003634  C07F  FFF6         	movff	sprintf@f,tblptrl
 14346  003638  C080  FFF7         	movff	sprintf@f+1,tblptrh
 14347  00363C  4B7F               	infsnz	sprintf@f& (0+255),f,b
 14348  00363E  2B80               	incf	(sprintf@f+1)& (0+255),f,b
 14349  003640                     	if	0	;tblptru may be non-zero
 14350  003640                     	endif
 14351  003640                     	if	0	;tblptru may be non-zero
 14352  003640                     	endif
 14353  003640  0008               	tblrd		*
 14354  003642  CFF5 F086          	movff	tablat,sprintf@c
 14355  003646  5186               	movf	sprintf@c& (0+255),w,b
 14356                           
 14357                           ; Switch size 1, requested type "space"
 14358                           ; Number of cases is 2, Range of values is 0 to 115
 14359                           ; switch strategies available:
 14360                           ; Name         Instructions Cycles
 14361                           ; simple_byte            7     4 (average)
 14362                           ;	Chosen strategy is simple_byte
 14363  003648  0A00               	xorlw	0	; case 0
 14364  00364A  B4D8               	btfsc	status,2,c
 14365  00364C  D00F               	goto	u12070
 14366  00364E  0A73               	xorlw	115	; case 115
 14367  003650  B4D8               	btfsc	status,2,c
 14368  003652  D7C2               	goto	l2584
 14369  003654                     l2590:
 14370                           
 14371                           ; BSR set to: 0
 14372                           
 14373                           ; BSR set to: 0
 14374                           
 14375                           ;doprnt.c: 1422: {
 14376                           
 14377                           ; BSR set to: 0
 14378  003654  C07F  FFF6         	movff	sprintf@f,tblptrl
 14379  003658  C080  FFF7         	movff	sprintf@f+1,tblptrh
 14380  00365C  4B7F               	infsnz	sprintf@f& (0+255),f,b
 14381  00365E  2B80               	incf	(sprintf@f+1)& (0+255),f,b
 14382  003660                     	if	0	;tblptru may be non-zero
 14383  003660                     	endif
 14384  003660                     	if	0	;tblptru may be non-zero
 14385  003660                     	endif
 14386  003660  0008               	tblrd		*
 14387  003662  CFF5 F086          	movff	tablat,sprintf@c
 14388  003666  5186               	movf	sprintf@c& (0+255),w,b
 14389  003668  A4D8               	btfss	status,2,c
 14390  00366A  D7A6               	goto	l2579
 14391  00366C                     u12070:
 14392                           
 14393                           ; BSR set to: 0
 14394                           ;doprnt.c: 1538: *sp = 0;
 14395                           
 14396                           ; BSR set to: 0
 14397                           
 14398                           ;doprnt.c: 1469: }
 14399                           ;doprnt.c: 1533: }
 14400                           ;doprnt.c: 1535: alldone:
 14401                           
 14402                           ; BSR set to: 0
 14403  00366C  C07D  FFD9         	movff	sprintf@sp,fsr2l
 14404  003670  C07E  FFDA         	movff	sprintf@sp+1,fsr2h
 14405  003674  0E00               	movlw	0
 14406  003676  6EDF               	movwf	indf2,c
 14407  003678  0012               	return	
 14408  00367A                     __end_of_sprintf:
 14409                           	opt stack 0
 14410                           tosu	equ	0xFFF
 14411                           tosh	equ	0xFFE
 14412                           tosl	equ	0xFFD
 14413                           pclath	equ	0xFFA
 14414                           tblptru	equ	0xFF8
 14415                           tblptrh	equ	0xFF7
 14416                           tblptrl	equ	0xFF6
 14417                           tablat	equ	0xFF5
 14418                           prodh	equ	0xFF4
 14419                           prodl	equ	0xFF3
 14420                           intcon	equ	0xFF2
 14421                           intcon2	equ	0xFF1
 14422                           intcon3	equ	0xFF0
 14423                           indf0	equ	0xFEF
 14424                           postinc0	equ	0xFEE
 14425                           plusw0	equ	0xFEB
 14426                           fsr0h	equ	0xFEA
 14427                           fsr0l	equ	0xFE9
 14428                           wreg	equ	0xFE8
 14429                           indf1	equ	0xFE7
 14430                           postinc1	equ	0xFE6
 14431                           postdec1	equ	0xFE5
 14432                           plusw1	equ	0xFE3
 14433                           fsr1h	equ	0xFE2
 14434                           fsr1l	equ	0xFE1
 14435                           indf2	equ	0xFDF
 14436                           postinc2	equ	0xFDE
 14437                           postdec2	equ	0xFDD
 14438                           plusw2	equ	0xFDB
 14439                           fsr2h	equ	0xFDA
 14440                           fsr2l	equ	0xFD9
 14441                           status	equ	0xFD8
 14442                           
 14443 ;; *************** function _memset *****************
 14444 ;; Defined at:
 14445 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/memset.c"
 14446 ;; Parameters:    Size  Location     Type
 14447 ;;  p1              2   29[BANK0 ] PTR void 
 14448 ;;		 -> Term_MainSm@Data(50), USBAlternateInterface(2), BDT(48), UEP1(1), 
 14449 ;;  c               2   31[BANK0 ] int 
 14450 ;;  n               2   33[BANK0 ] unsigned int 
 14451 ;; Auto vars:     Size  Location     Type
 14452 ;;  p               2   35[BANK0 ] PTR unsigned char 
 14453 ;;		 -> Term_MainSm@Data(50), USBAlternateInterface(2), BDT(48), UEP1(1), 
 14454 ;; Return value:  Size  Location     Type
 14455 ;;                  2   29[BANK0 ] PTR void 
 14456 ;; Registers used:
 14457 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14458 ;; Tracked objects:
 14459 ;;		On entry : 0/0
 14460 ;;		On exit  : 0/0
 14461 ;;		Unchanged: 0/0
 14462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14463 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14464 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14466 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14467 ;;Total ram usage:        8 bytes
 14468 ;; Hardware stack levels used:    1
 14469 ;; Hardware stack levels required when called:   11
 14470 ;; This function calls:
 14471 ;;		Nothing
 14472 ;; This function is called by:
 14473 ;;		_USBDeviceInit
 14474 ;;		_USBStdSetCfgHandler
 14475 ;;		_Term_MainSm
 14476 ;; This function uses a non-reentrant model
 14477 ;;
 14478                           
 14479                           	psect	text59
 14480  005A1A                     __ptext59:
 14481                           	opt stack 0
 14482  005A1A                     _memset:
 14483                           	opt stack 14
 14484                           
 14485                           ; BSR set to: 0
 14486                           ;incstack = 0
 14487  005A1A  C07D  F083         	movff	memset@p1,memset@p
 14488  005A1E  C07E  F084         	movff	memset@p1+1,memset@p+1
 14489  005A22  D009               	goto	l3060
 14490  005A24                     l11485:
 14491  005A24  C083  FFD9         	movff	memset@p,fsr2l
 14492  005A28  C084  FFDA         	movff	memset@p+1,fsr2h
 14493  005A2C  C07F  FFDF         	movff	memset@c,indf2
 14494  005A30  0100               	movlb	0	; () banked
 14495  005A32  4B83               	infsnz	memset@p& (0+255),f,b
 14496  005A34  2B84               	incf	(memset@p+1)& (0+255),f,b
 14497  005A36                     l3060:
 14498                           
 14499                           ; BSR set to: 0
 14500  005A36  0100               	movlb	0	; () banked
 14501  005A38  0781               	decf	memset@n& (0+255),f,b
 14502  005A3A  A0D8               	btfss	status,0,c
 14503  005A3C  0782               	decf	(memset@n+1)& (0+255),f,b
 14504  005A3E  2981               	incf	memset@n& (0+255),w,b
 14505  005A40  E1F1               	bnz	l11485
 14506  005A42  2982               	incf	(memset@n+1)& (0+255),w,b
 14507  005A44  B4D8               	btfsc	status,2,c
 14508  005A46  0012               	return	
 14509  005A48  D7ED               	goto	l3061
 14510  005A4A                     __end_of_memset:
 14511                           	opt stack 0
 14512                           tosu	equ	0xFFF
 14513                           tosh	equ	0xFFE
 14514                           tosl	equ	0xFFD
 14515                           pclath	equ	0xFFA
 14516                           tblptru	equ	0xFF8
 14517                           tblptrh	equ	0xFF7
 14518                           tblptrl	equ	0xFF6
 14519                           tablat	equ	0xFF5
 14520                           prodh	equ	0xFF4
 14521                           prodl	equ	0xFF3
 14522                           intcon	equ	0xFF2
 14523                           intcon2	equ	0xFF1
 14524                           intcon3	equ	0xFF0
 14525                           indf0	equ	0xFEF
 14526                           postinc0	equ	0xFEE
 14527                           plusw0	equ	0xFEB
 14528                           fsr0h	equ	0xFEA
 14529                           fsr0l	equ	0xFE9
 14530                           wreg	equ	0xFE8
 14531                           indf1	equ	0xFE7
 14532                           postinc1	equ	0xFE6
 14533                           postdec1	equ	0xFE5
 14534                           plusw1	equ	0xFE3
 14535                           fsr1h	equ	0xFE2
 14536                           fsr1l	equ	0xFE1
 14537                           indf2	equ	0xFDF
 14538                           postinc2	equ	0xFDE
 14539                           postdec2	equ	0xFDD
 14540                           plusw2	equ	0xFDB
 14541                           fsr2h	equ	0xFDA
 14542                           fsr2l	equ	0xFD9
 14543                           status	equ	0xFD8
 14544                           
 14545 ;; *************** function _Terminal *****************
 14546 ;; Defined at:
 14547 ;;		line 428 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/term.c"
 14548 ;; Parameters:    Size  Location     Type
 14549 ;;		None
 14550 ;; Auto vars:     Size  Location     Type
 14551 ;;  i               1   68[BANK0 ] unsigned char 
 14552 ;;  UsbRxBuffer   200    0[BANK10] unsigned char [200]
 14553 ;;  UsbTxBuffer   200    0[BANK2 ] unsigned char [200]
 14554 ;;  TermTxBuffer   50    0[BANK1 ] unsigned char [50]
 14555 ;;  Index           1   70[BANK0 ] unsigned char 
 14556 ;;  ReceivedByte    1   69[BANK0 ] unsigned char 
 14557 ;; Return value:  Size  Location     Type
 14558 ;;                  1    wreg      void 
 14559 ;; Registers used:
 14560 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14561 ;; Tracked objects:
 14562 ;;		On entry : 0/0
 14563 ;;		On exit  : 0/0
 14564 ;;		Unchanged: 0/0
 14565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14566 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14567 ;;      Locals:         0       3      50     200       0       0       0       0       0       0       0     200       
      +0       0       0       0
 14568 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14569 ;;      Totals:         0       5      50     200       0       0       0       0       0       0       0     200       
      +0       0       0       0
 14570 ;;Total ram usage:      455 bytes
 14571 ;; Hardware stack levels used:    1
 14572 ;; Hardware stack levels required when called:   15
 14573 ;; This function calls:
 14574 ;;		_I2cSlv_I2cReadMsgSts
 14575 ;;		_I2cSlv_ReceiveI2cMsg
 14576 ;;		_I2cSlv_SendI2cMsg
 14577 ;;		_OsTmr_Wait
 14578 ;;		_atoi
 14579 ;;		_getsUSBUSART
 14580 ;;		_itoa
 14581 ;;		_putUSBUSART
 14582 ;;		_strcpy
 14583 ;;		_strtol
 14584 ;;		_xtoi
 14585 ;; This function is called by:
 14586 ;;		_Term_MainSm
 14587 ;; This function uses a non-reentrant model
 14588 ;;
 14589                           
 14590                           	psect	text60
 14591  0000D0                     __ptext60:
 14592                           	opt stack 0
 14593  0000D0                     _Terminal:
 14594                           	opt stack 11
 14595                           
 14596                           ;term.c: 430: static TermStateType TermState = Term_GetData;
 14597                           ;term.c: 431: UINT8 UsbRxBuffer[200u];
 14598                           ;term.c: 432: UINT8 UsbTxBuffer[200u];
 14599                           ;term.c: 433: UINT8 TermTxBuffer[50u];
 14600                           ;term.c: 434: static UINT8 TermRxBuffer[50u];
 14601                           ;term.c: 435: UINT8 Index;
 14602                           ;term.c: 436: static UINT8 Len[4];
 14603                           ;term.c: 437: static UINT8 PackageLen;
 14604                           ;term.c: 438: static UINT8 Addr[4];
 14605                           ;term.c: 439: static UINT8 SlaveAddr;
 14606                           ;term.c: 440: static PayloadType Payload[20u];
 14607                           ;term.c: 441: UINT8 ReceivedBytes = 0;
 14608                           
 14609                           ; BSR set to: 0
 14610                           ;incstack = 0
 14611  0000D0  0E00               	movlw	0
 14612  0000D2  0100               	movlb	0	; () banked
 14613  0000D4  6FA5               	movwf	Terminal@ReceivedBytes& (0+255),b
 14614                           
 14615                           ; BSR set to: 0
 14616                           ;term.c: 443: static UINT8 FormatOption = 0u;
 14617                           ;term.c: 444: static UINT8 EchoOption = 1u;
 14618                           ;term.c: 445: static SwTimerType SwTimer;
 14619                           ;term.c: 448: if((USBDeviceState < CONFIGURED_STATE)||(UCONbits.SUSPND==1)) return;
 14620  0000D6  0E1F               	movlw	31
 14621  0000D8  65CB               	cpfsgt	_USBDeviceState& (0+255),b
 14622  0000DA  0012               	return	
 14623                           
 14624                           ; BSR set to: 0
 14625  0000DC  B265               	btfsc	3941,1,c	;volatile
 14626  0000DE  0012               	return	
 14627  0000E0  D278               	goto	l2353
 14628  0000E2                     
 14629                           ;term.c: 455: ReceivedBytes = getsUSBUSART(UsbRxBuffer,200u);
 14630                           
 14631                           ; BSR set to: 0
 14632  0000E2  0E00               	movlw	low Terminal@UsbRxBuffer
 14633  0000E4  0100               	movlb	0	; () banked
 14634  0000E6  6F84               	movwf	getsUSBUSART@buffer& (0+255),b
 14635  0000E8  0E0A               	movlw	high Terminal@UsbRxBuffer
 14636  0000EA  6F85               	movwf	(getsUSBUSART@buffer+1)& (0+255),b
 14637  0000EC  0EC8               	movlw	200
 14638  0000EE  6F86               	movwf	getsUSBUSART@len& (0+255),b
 14639  0000F0  EC0A  F023         	call	_getsUSBUSART	;wreg free
 14640  0000F4  0100               	movlb	0	; () banked
 14641  0000F6  6FA5               	movwf	Terminal@ReceivedBytes& (0+255),b
 14642                           
 14643                           ; BSR set to: 0
 14644                           ;term.c: 458: if (ReceivedBytes > 0)
 14645  0000F8  51A5               	movf	Terminal@ReceivedBytes& (0+255),w,b
 14646  0000FA  B4D8               	btfsc	status,2,c
 14647  0000FC  0012               	return	
 14648                           
 14649                           ; BSR set to: 0
 14650                           ;term.c: 459: {
 14651                           ;term.c: 461: if (EchoOption == 1u)
 14652  0000FE  0102               	movlb	2	; () banked
 14653  000100  05F3               	decf	Terminal@EchoOption& (0+255),w,b
 14654  000102  A4D8               	btfss	status,2,c
 14655  000104  D026               	goto	l2357
 14656                           
 14657                           ; BSR set to: 2
 14658                           ;term.c: 462: {
 14659                           ;term.c: 464: if((cdc_trf_state == 0))
 14660  000106  0100               	movlb	0	; () banked
 14661  000108  51C1               	movf	_cdc_trf_state& (0+255),w,b
 14662  00010A  A4D8               	btfss	status,2,c
 14663  00010C  D022               	goto	l2357
 14664                           
 14665                           ; BSR set to: 0
 14666                           ;term.c: 465: {
 14667                           ;term.c: 466: UsbRxBuffer[ReceivedBytes] = '\r';
 14668  00010E  51A5               	movf	Terminal@ReceivedBytes& (0+255),w,b
 14669  000110  0D01               	mullw	1
 14670  000112  0E00               	movlw	low Terminal@UsbRxBuffer
 14671  000114  24F3               	addwf	prodl,w,c
 14672  000116  6ED9               	movwf	fsr2l,c
 14673  000118  0E0A               	movlw	high Terminal@UsbRxBuffer
 14674  00011A  20F4               	addwfc	prodh,w,c
 14675  00011C  6EDA               	movwf	fsr2h,c
 14676  00011E  0E0D               	movlw	13
 14677  000120  6EDF               	movwf	indf2,c
 14678                           
 14679                           ; BSR set to: 0
 14680                           ;term.c: 467: UsbRxBuffer[ReceivedBytes + 1] = '\n';
 14681  000122  51A5               	movf	Terminal@ReceivedBytes& (0+255),w,b
 14682  000124  6FA2               	movwf	??_Terminal& (0+255),b
 14683  000126  6BA3               	clrf	(??_Terminal+1)& (0+255),b
 14684  000128  0E01               	movlw	1
 14685  00012A  27A2               	addwf	??_Terminal& (0+255),f,b
 14686  00012C  0E00               	movlw	0
 14687  00012E  23A3               	addwfc	(??_Terminal+1)& (0+255),f,b
 14688  000130  0E00               	movlw	low Terminal@UsbRxBuffer
 14689  000132  25A2               	addwf	??_Terminal& (0+255),w,b
 14690  000134  6ED9               	movwf	fsr2l,c
 14691  000136  0E0A               	movlw	high Terminal@UsbRxBuffer
 14692  000138  21A3               	addwfc	(??_Terminal+1)& (0+255),w,b
 14693  00013A  6EDA               	movwf	fsr2h,c
 14694  00013C  0E0A               	movlw	10
 14695  00013E  6EDF               	movwf	indf2,c
 14696                           
 14697                           ; BSR set to: 0
 14698                           ;term.c: 468: putUSBUSART(UsbRxBuffer,ReceivedBytes + 2);
 14699  000140  0E00               	movlw	low Terminal@UsbRxBuffer
 14700  000142  6F83               	movwf	putUSBUSART@data& (0+255),b
 14701  000144  0E0A               	movlw	high Terminal@UsbRxBuffer
 14702  000146  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 14703  000148  51A5               	movf	Terminal@ReceivedBytes& (0+255),w,b
 14704  00014A  0F02               	addlw	2
 14705  00014C  6F85               	movwf	putUSBUSART@length& (0+255),b
 14706  00014E  EC65  F02E         	call	_putUSBUSART	;wreg free
 14707  000152                     l2357:
 14708                           
 14709                           ;term.c: 469: }
 14710                           ;term.c: 470: }
 14711                           ;term.c: 473: if ((UsbRxBuffer[0u] == 'S') &&
 14712                           ;term.c: 474: (UsbRxBuffer[0u + 1u] == 'O') &&
 14713                           ;term.c: 475: (UsbRxBuffer[0u + 1u + 1u] == ':'))
 14714  000152  0E53               	movlw	83
 14715  000154  010A               	movlb	10	; () banked
 14716  000156  1900               	xorwf	Terminal@UsbRxBuffer& (0+255),w,b
 14717  000158  A4D8               	btfss	status,2,c
 14718  00015A  D043               	goto	l2358
 14719                           
 14720                           ; BSR set to: 10
 14721  00015C  0E4F               	movlw	79
 14722  00015E  1901               	xorwf	(Terminal@UsbRxBuffer+1)& (0+255),w,b
 14723  000160  A4D8               	btfss	status,2,c
 14724  000162  D03F               	goto	l2358
 14725                           
 14726                           ; BSR set to: 10
 14727  000164  0E3A               	movlw	58
 14728  000166  1902               	xorwf	(Terminal@UsbRxBuffer+2)& (0+255),w,b
 14729  000168  A4D8               	btfss	status,2,c
 14730  00016A  D03B               	goto	l2358
 14731                           
 14732                           ; BSR set to: 10
 14733                           ;term.c: 476: {
 14734                           ;term.c: 478: if ((UsbRxBuffer[0u + 1u + 1u + 1u] == 'G') && (UsbRxBuffer[0u + 1u + 1u +
      +                           1u + 1] == ':'))
 14735  00016C  0E47               	movlw	71
 14736  00016E  1903               	xorwf	(Terminal@UsbRxBuffer+3)& (0+255),w,b
 14737  000170  A4D8               	btfss	status,2,c
 14738  000172  0012               	return	
 14739                           
 14740                           ; BSR set to: 10
 14741  000174  0E3A               	movlw	58
 14742  000176  1904               	xorwf	(Terminal@UsbRxBuffer+4)& (0+255),w,b
 14743  000178  A4D8               	btfss	status,2,c
 14744  00017A  0012               	return	
 14745                           
 14746                           ; BSR set to: 10
 14747                           ;term.c: 479: {
 14748                           ;term.c: 481: if ((UsbRxBuffer[0u + 1u + 1u + 1u + 2u] == 'D') && (UsbRxBuffer[0u + 1u +
      +                           1u + 1u + 2u + 1] == 'F'))
 14749  00017C  0E44               	movlw	68
 14750  00017E  1905               	xorwf	(Terminal@UsbRxBuffer+5)& (0+255),w,b
 14751  000180  A4D8               	btfss	status,2,c
 14752  000182  D015               	goto	l2360
 14753                           
 14754                           ; BSR set to: 10
 14755  000184  0E46               	movlw	70
 14756  000186  1906               	xorwf	(Terminal@UsbRxBuffer+6)& (0+255),w,b
 14757  000188  A4D8               	btfss	status,2,c
 14758  00018A  D011               	goto	l2360
 14759                           
 14760                           ; BSR set to: 10
 14761                           ;term.c: 482: {
 14762                           ;term.c: 483: if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == 'A')
 14763  00018C  0E41               	movlw	65
 14764  00018E  1908               	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 14765  000190  A4D8               	btfss	status,2,c
 14766  000192  D004               	goto	l2361
 14767                           
 14768                           ; BSR set to: 10
 14769                           ;term.c: 484: {
 14770                           ;term.c: 485: FormatOption = 1u;
 14771  000194  0E01               	movlw	1
 14772  000196  0102               	movlb	2	; () banked
 14773  000198  6FED               	movwf	Terminal@FormatOption& (0+255),b
 14774                           
 14775                           ;term.c: 486: }
 14776  00019A  0012               	return	
 14777  00019C                     l2361:
 14778                           
 14779                           ;term.c: 487: else if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == 'B')
 14780                           
 14781                           ; BSR set to: 2
 14782  00019C  0E42               	movlw	66
 14783  00019E  010A               	movlb	10	; () banked
 14784  0001A0  1908               	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 14785  0001A2  A4D8               	btfss	status,2,c
 14786  0001A4  0012               	return	
 14787                           
 14788                           ; BSR set to: 10
 14789                           ;term.c: 488: {
 14790                           ;term.c: 489: FormatOption = 0u;
 14791  0001A6  0E00               	movlw	0
 14792  0001A8  0102               	movlb	2	; () banked
 14793  0001AA  6FED               	movwf	Terminal@FormatOption& (0+255),b
 14794                           
 14795                           ; BSR set to: 2
 14796                           ;term.c: 490: }
 14797                           ;term.c: 491: }
 14798                           
 14799                           ; BSR set to: 2
 14800  0001AC  0012               	return	
 14801  0001AE                     l2360:
 14802                           
 14803                           ;term.c: 493: else if ((UsbRxBuffer[0u + 1u + 1u + 1u + 2u] == 'E') && (UsbRxBuffer[0u +
      +                           1u + 1u + 1u + 2u + 1] == 'M'))
 14804                           
 14805                           ; BSR set to: 2
 14806  0001AE  0E45               	movlw	69
 14807  0001B0  010A               	movlb	10	; () banked
 14808  0001B2  1905               	xorwf	(Terminal@UsbRxBuffer+5)& (0+255),w,b
 14809  0001B4  A4D8               	btfss	status,2,c
 14810  0001B6  0012               	return	
 14811                           
 14812                           ; BSR set to: 10
 14813  0001B8  0E4D               	movlw	77
 14814  0001BA  1906               	xorwf	(Terminal@UsbRxBuffer+6)& (0+255),w,b
 14815  0001BC  A4D8               	btfss	status,2,c
 14816  0001BE  0012               	return	
 14817                           
 14818                           ; BSR set to: 10
 14819                           ;term.c: 494: {
 14820                           ;term.c: 495: if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == '1')
 14821  0001C0  0E31               	movlw	49
 14822  0001C2  1908               	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 14823  0001C4  A4D8               	btfss	status,2,c
 14824  0001C6  D004               	goto	l2366
 14825                           
 14826                           ; BSR set to: 10
 14827                           ;term.c: 496: {
 14828                           ;term.c: 497: EchoOption = 1u;
 14829  0001C8  0E01               	movlw	1
 14830  0001CA  0102               	movlb	2	; () banked
 14831  0001CC  6FF3               	movwf	Terminal@EchoOption& (0+255),b
 14832                           
 14833                           ;term.c: 498: }
 14834  0001CE  0012               	return	
 14835  0001D0                     l2366:
 14836                           
 14837                           ;term.c: 499: else if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == '0')
 14838                           
 14839                           ; BSR set to: 2
 14840  0001D0  0E30               	movlw	48
 14841  0001D2  010A               	movlb	10	; () banked
 14842  0001D4  1908               	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 14843  0001D6  A4D8               	btfss	status,2,c
 14844  0001D8  0012               	return	
 14845                           
 14846                           ; BSR set to: 10
 14847                           ;term.c: 500: {
 14848                           ;term.c: 501: EchoOption = 0u;
 14849  0001DA  0E00               	movlw	0
 14850  0001DC  0102               	movlb	2	; () banked
 14851  0001DE  6FF3               	movwf	Terminal@EchoOption& (0+255),b
 14852                           
 14853                           ; BSR set to: 2
 14854                           ;term.c: 507: }
 14855                           ;term.c: 508: }
 14856                           ;term.c: 509: }
 14857                           
 14858                           ; BSR set to: 2
 14859                           
 14860                           ; BSR set to: 2
 14861                           
 14862                           ;term.c: 504: else
 14863                           ;term.c: 505: {
 14864                           
 14865                           ; BSR set to: 2
 14866                           
 14867                           ; BSR set to: 2
 14868                           ;term.c: 502: }
 14869                           ;term.c: 503: }
 14870                           
 14871                           ; BSR set to: 2
 14872  0001E0  0012               	return	
 14873  0001E2                     l2358:
 14874                           
 14875                           ;term.c: 510: else if ((UsbRxBuffer[0u] == 'S') &&
 14876                           ;term.c: 511: (UsbRxBuffer[0u + 1u] == 'B') &&
 14877                           ;term.c: 512: (UsbRxBuffer[0u + 1u + 1u] == ':'))
 14878                           
 14879                           ; BSR set to: 2
 14880  0001E2  0E53               	movlw	83
 14881  0001E4  010A               	movlb	10	; () banked
 14882  0001E6  1900               	xorwf	Terminal@UsbRxBuffer& (0+255),w,b
 14883  0001E8  A4D8               	btfss	status,2,c
 14884  0001EA  D0D3               	goto	l2371
 14885                           
 14886                           ; BSR set to: 10
 14887  0001EC  0E42               	movlw	66
 14888  0001EE  1901               	xorwf	(Terminal@UsbRxBuffer+1)& (0+255),w,b
 14889  0001F0  A4D8               	btfss	status,2,c
 14890  0001F2  D0CF               	goto	l2371
 14891                           
 14892                           ; BSR set to: 10
 14893  0001F4  0E3A               	movlw	58
 14894  0001F6  1902               	xorwf	(Terminal@UsbRxBuffer+2)& (0+255),w,b
 14895  0001F8  A4D8               	btfss	status,2,c
 14896  0001FA  D0CB               	goto	l2371
 14897                           
 14898                           ; BSR set to: 10
 14899                           ;term.c: 513: {
 14900                           ;term.c: 514: if ((UsbRxBuffer[0u + 1u + 1u + 1u] == 'W') && (UsbRxBuffer[0u + 1u + 1u +
      +                           1u + 1] == ':'))
 14901  0001FC  0E57               	movlw	87
 14902  0001FE  1903               	xorwf	(Terminal@UsbRxBuffer+3)& (0+255),w,b
 14903  000200  A4D8               	btfss	status,2,c
 14904  000202  D091               	goto	l2372
 14905                           
 14906                           ; BSR set to: 10
 14907  000204  0E3A               	movlw	58
 14908  000206  1904               	xorwf	(Terminal@UsbRxBuffer+4)& (0+255),w,b
 14909  000208  A4D8               	btfss	status,2,c
 14910  00020A  D08D               	goto	l2372
 14911                           
 14912                           ; BSR set to: 10
 14913                           ;term.c: 515: {
 14914                           ;term.c: 517: Len[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u];
 14915  00020C  CA05  F3AD         	movff	Terminal@UsbRxBuffer+5,Terminal@Len
 14916                           
 14917                           ;term.c: 518: Len[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 1];
 14918  000210  CA06  F3AE         	movff	Terminal@UsbRxBuffer+6,Terminal@Len+1
 14919                           
 14920                           ;term.c: 520: Addr[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u];
 14921  000214  CA08  F3A9         	movff	Terminal@UsbRxBuffer+8,Terminal@Addr
 14922                           
 14923                           ;term.c: 521: Addr[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u + 1];
 14924  000218  CA09  F3AA         	movff	Terminal@UsbRxBuffer+9,Terminal@Addr+1
 14925                           
 14926                           ; BSR set to: 10
 14927                           ;term.c: 523: PackageLen = atoi((void*)Len);
 14928  00021C  0EAD               	movlw	low Terminal@Len
 14929  00021E  0100               	movlb	0	; () banked
 14930  000220  6F83               	movwf	atoi@s& (0+255),b
 14931  000222  0E03               	movlw	high Terminal@Len
 14932  000224  6F84               	movwf	(atoi@s+1)& (0+255),b
 14933  000226  EC6A  F01A         	call	_atoi	;wreg free
 14934  00022A  0100               	movlb	0	; () banked
 14935  00022C  5183               	movf	?_atoi& (0+255),w,b
 14936  00022E  0102               	movlb	2	; () banked
 14937  000230  6FEF               	movwf	Terminal@PackageLen& (0+255),b
 14938                           
 14939                           ; BSR set to: 2
 14940                           ;term.c: 524: SlaveAddr = xtoi((void*)Addr);
 14941  000232  0EA9               	movlw	low Terminal@Addr
 14942  000234  0100               	movlb	0	; () banked
 14943  000236  6F83               	movwf	xtoi@s& (0+255),b
 14944  000238  0E03               	movlw	high Terminal@Addr
 14945  00023A  6F84               	movwf	(xtoi@s+1)& (0+255),b
 14946  00023C  EC19  F019         	call	_xtoi	;wreg free
 14947  000240  0100               	movlb	0	; () banked
 14948  000242  5183               	movf	?_xtoi& (0+255),w,b
 14949  000244  0102               	movlb	2	; () banked
 14950  000246  6FEE               	movwf	Terminal@SlaveAddr& (0+255),b
 14951                           
 14952                           ; BSR set to: 2
 14953                           ;term.c: 526: for (Index = 0; Index <= PackageLen; Index++)
 14954  000248  0E00               	movlw	0
 14955  00024A  0100               	movlb	0	; () banked
 14956  00024C  6FA6               	movwf	Terminal@Index& (0+255),b
 14957  00024E  D032               	goto	l2373
 14958  000250                     
 14959                           ;term.c: 527: {
 14960                           ;term.c: 528: Payload[Index].Byte[0] = UsbRxBuffer[2*Index + 0u + 1u + 1u + 1u + 2u + 3u
      +                           + 3u];
 14961                           
 14962                           ; BSR set to: 0
 14963  000250  0100               	movlb	0	; () banked
 14964  000252  51A6               	movf	Terminal@Index& (0+255),w,b
 14965  000254  0D02               	mullw	2
 14966  000256  0E0B               	movlw	11
 14967  000258  26F3               	addwf	prodl,f,c
 14968  00025A  0E00               	movlw	0
 14969  00025C  22F4               	addwfc	prodh,f,c
 14970  00025E  0E00               	movlw	low Terminal@UsbRxBuffer
 14971  000260  24F3               	addwf	prodl,w,c
 14972  000262  6ED9               	movwf	fsr2l,c
 14973  000264  0E0A               	movlw	high Terminal@UsbRxBuffer
 14974  000266  20F4               	addwfc	prodh,w,c
 14975  000268  6EDA               	movwf	fsr2h,c
 14976  00026A  51A6               	movf	Terminal@Index& (0+255),w,b
 14977  00026C  0D04               	mullw	4
 14978  00026E  0E00               	movlw	low Terminal@Payload
 14979  000270  24F3               	addwf	prodl,w,c
 14980  000272  6EE1               	movwf	fsr1l,c
 14981  000274  0E05               	movlw	high Terminal@Payload
 14982  000276  20F4               	addwfc	prodh,w,c
 14983  000278  6EE2               	movwf	fsr1h,c
 14984  00027A  CFDF FFE7          	movff	indf2,indf1
 14985                           
 14986                           ;term.c: 529: Payload[Index].Byte[1] = UsbRxBuffer[2*Index + 0u + 1u + 1u + 1u + 2u + 3u
      +                           + 3u + 1];
 14987  00027E  51A6               	movf	Terminal@Index& (0+255),w,b
 14988  000280  0D02               	mullw	2
 14989  000282  0E0C               	movlw	12
 14990  000284  26F3               	addwf	prodl,f,c
 14991  000286  0E00               	movlw	0
 14992  000288  22F4               	addwfc	prodh,f,c
 14993  00028A  0E00               	movlw	low Terminal@UsbRxBuffer
 14994  00028C  24F3               	addwf	prodl,w,c
 14995  00028E  6ED9               	movwf	fsr2l,c
 14996  000290  0E0A               	movlw	high Terminal@UsbRxBuffer
 14997  000292  20F4               	addwfc	prodh,w,c
 14998  000294  6EDA               	movwf	fsr2h,c
 14999  000296  51A6               	movf	Terminal@Index& (0+255),w,b
 15000  000298  0D04               	mullw	4
 15001  00029A  0E01               	movlw	1
 15002  00029C  26F3               	addwf	prodl,f,c
 15003  00029E  0E00               	movlw	0
 15004  0002A0  22F4               	addwfc	prodh,f,c
 15005  0002A2  0E00               	movlw	low Terminal@Payload
 15006  0002A4  24F3               	addwf	prodl,w,c
 15007  0002A6  6EE1               	movwf	fsr1l,c
 15008  0002A8  0E05               	movlw	high Terminal@Payload
 15009  0002AA  20F4               	addwfc	prodh,w,c
 15010  0002AC  6EE2               	movwf	fsr1h,c
 15011  0002AE  CFDF FFE7          	movff	indf2,indf1
 15012                           
 15013                           ; BSR set to: 0
 15014  0002B2  2BA6               	incf	Terminal@Index& (0+255),f,b
 15015  0002B4                     l2373:
 15016                           
 15017                           ; BSR set to: 0
 15018                           
 15019                           ; BSR set to: 0
 15020  0002B4  51A6               	movf	Terminal@Index& (0+255),w,b
 15021  0002B6  0102               	movlb	2	; () banked
 15022  0002B8  5DEF               	subwf	Terminal@PackageLen& (0+255),w,b
 15023  0002BA  B0D8               	btfsc	status,0,c
 15024  0002BC  D7C9               	goto	l2374
 15025                           
 15026                           ; BSR set to: 2
 15027                           ;term.c: 530: }
 15028                           ;term.c: 532: for (Index = 0; Index <= PackageLen; Index++)
 15029                           
 15030                           ; BSR set to: 2
 15031  0002BE  0E00               	movlw	0
 15032  0002C0  0100               	movlb	0	; () banked
 15033  0002C2  6FA6               	movwf	Terminal@Index& (0+255),b
 15034  0002C4  D01F               	goto	l2376
 15035  0002C6                     
 15036                           ;term.c: 533: {
 15037                           ;term.c: 537: TermTxBuffer[Index] = strtol((void*)&(Payload[Index]), (0), 16);
 15038                           
 15039                           ; BSR set to: 0
 15040  0002C6  0100               	movlb	0	; () banked
 15041  0002C8  51A6               	movf	Terminal@Index& (0+255),w,b
 15042  0002CA  0D04               	mullw	4
 15043  0002CC  0E00               	movlw	low Terminal@Payload
 15044  0002CE  24F3               	addwf	prodl,w,c
 15045  0002D0  6F89               	movwf	strtol@s& (0+255),b
 15046  0002D2  0E05               	movlw	high Terminal@Payload
 15047  0002D4  20F4               	addwfc	prodh,w,c
 15048  0002D6  6F8A               	movwf	(strtol@s+1)& (0+255),b
 15049  0002D8  0E00               	movlw	0
 15050  0002DA  6F8B               	movwf	strtol@endptr& (0+255),b
 15051  0002DC  0E00               	movlw	0
 15052  0002DE  6F8C               	movwf	(strtol@endptr+1)& (0+255),b
 15053  0002E0  0E00               	movlw	0
 15054  0002E2  6F8E               	movwf	(strtol@base+1)& (0+255),b
 15055  0002E4  0E10               	movlw	16
 15056  0002E6  6F8D               	movwf	strtol@base& (0+255),b
 15057  0002E8  EC0E  F00C         	call	_strtol	;wreg free
 15058  0002EC  0100               	movlb	0	; () banked
 15059  0002EE  51A6               	movf	Terminal@Index& (0+255),w,b
 15060  0002F0  0D01               	mullw	1
 15061  0002F2  0E00               	movlw	low Terminal@TermTxBuffer
 15062  0002F4  24F3               	addwf	prodl,w,c
 15063  0002F6  6ED9               	movwf	fsr2l,c
 15064  0002F8  0E01               	movlw	high Terminal@TermTxBuffer
 15065  0002FA  20F4               	addwfc	prodh,w,c
 15066  0002FC  6EDA               	movwf	fsr2h,c
 15067  0002FE  C089  FFDF         	movff	?_strtol,indf2
 15068                           
 15069                           ; BSR set to: 0
 15070  000302  2BA6               	incf	Terminal@Index& (0+255),f,b
 15071  000304                     l2376:
 15072                           
 15073                           ; BSR set to: 0
 15074                           
 15075                           ; BSR set to: 0
 15076  000304  51A6               	movf	Terminal@Index& (0+255),w,b
 15077  000306  0102               	movlb	2	; () banked
 15078  000308  5DEF               	subwf	Terminal@PackageLen& (0+255),w,b
 15079  00030A  B0D8               	btfsc	status,0,c
 15080  00030C  D7DC               	goto	l2377
 15081                           
 15082                           ; BSR set to: 2
 15083                           ;term.c: 539: }
 15084                           ;term.c: 542: I2cSlv_SendI2cMsg(TermTxBuffer, SlaveAddr, PackageLen);
 15085                           
 15086                           ; BSR set to: 2
 15087  00030E  0E00               	movlw	low Terminal@TermTxBuffer
 15088  000310  0100               	movlb	0	; () banked
 15089  000312  6F80               	movwf	I2cSlv_SendI2cMsg@TxBuffer& (0+255),b
 15090  000314  0E01               	movlw	high Terminal@TermTxBuffer
 15091  000316  6F81               	movwf	(I2cSlv_SendI2cMsg@TxBuffer+1)& (0+255),b
 15092  000318  C2EE  F082         	movff	Terminal@SlaveAddr,I2cSlv_SendI2cMsg@SlaveAddr
 15093  00031C  C2EF  F083         	movff	Terminal@PackageLen,I2cSlv_SendI2cMsg@DataLenght
 15094  000320  ECBD  F02B         	call	_I2cSlv_SendI2cMsg	;wreg free
 15095                           
 15096                           ;term.c: 543: }
 15097  000324  0012               	return	
 15098  000326                     l2372:
 15099                           
 15100                           ;term.c: 544: else if ((UsbRxBuffer[0u + 1u + 1u + 1u] == 'R') && (UsbRxBuffer[0u + 1u +
      +                           1u + 1u + 1] == ':'))
 15101  000326  0E52               	movlw	82
 15102  000328  010A               	movlb	10	; () banked
 15103  00032A  1903               	xorwf	(Terminal@UsbRxBuffer+3)& (0+255),w,b
 15104  00032C  A4D8               	btfss	status,2,c
 15105  00032E  0012               	return	
 15106                           
 15107                           ; BSR set to: 10
 15108  000330  0E3A               	movlw	58
 15109  000332  1904               	xorwf	(Terminal@UsbRxBuffer+4)& (0+255),w,b
 15110  000334  A4D8               	btfss	status,2,c
 15111  000336  0012               	return	
 15112                           
 15113                           ; BSR set to: 10
 15114                           ;term.c: 545: {
 15115                           ;term.c: 547: Len[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u];
 15116  000338  CA05  F3AD         	movff	Terminal@UsbRxBuffer+5,Terminal@Len
 15117                           
 15118                           ;term.c: 548: Len[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 1];
 15119  00033C  CA06  F3AE         	movff	Terminal@UsbRxBuffer+6,Terminal@Len+1
 15120                           
 15121                           ;term.c: 550: Addr[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u];
 15122  000340  CA08  F3A9         	movff	Terminal@UsbRxBuffer+8,Terminal@Addr
 15123                           
 15124                           ;term.c: 551: Addr[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u + 1];
 15125  000344  CA09  F3AA         	movff	Terminal@UsbRxBuffer+9,Terminal@Addr+1
 15126                           
 15127                           ; BSR set to: 10
 15128                           ;term.c: 553: PackageLen = atoi((void*)Len);
 15129  000348  0EAD               	movlw	low Terminal@Len
 15130  00034A  0100               	movlb	0	; () banked
 15131  00034C  6F83               	movwf	atoi@s& (0+255),b
 15132  00034E  0E03               	movlw	high Terminal@Len
 15133  000350  6F84               	movwf	(atoi@s+1)& (0+255),b
 15134  000352  EC6A  F01A         	call	_atoi	;wreg free
 15135  000356  0100               	movlb	0	; () banked
 15136  000358  5183               	movf	?_atoi& (0+255),w,b
 15137  00035A  0102               	movlb	2	; () banked
 15138  00035C  6FEF               	movwf	Terminal@PackageLen& (0+255),b
 15139                           
 15140                           ; BSR set to: 2
 15141                           ;term.c: 554: SlaveAddr = xtoi((void*)Addr);
 15142  00035E  0EA9               	movlw	low Terminal@Addr
 15143  000360  0100               	movlb	0	; () banked
 15144  000362  6F83               	movwf	xtoi@s& (0+255),b
 15145  000364  0E03               	movlw	high Terminal@Addr
 15146  000366  6F84               	movwf	(xtoi@s+1)& (0+255),b
 15147  000368  EC19  F019         	call	_xtoi	;wreg free
 15148  00036C  0100               	movlb	0	; () banked
 15149  00036E  5183               	movf	?_xtoi& (0+255),w,b
 15150  000370  0102               	movlb	2	; () banked
 15151  000372  6FEE               	movwf	Terminal@SlaveAddr& (0+255),b
 15152                           
 15153                           ; BSR set to: 2
 15154                           ;term.c: 557: I2cSlv_ReceiveI2cMsg(TermRxBuffer, SlaveAddr, PackageLen);
 15155  000374  0E50               	movlw	low Terminal@TermRxBuffer
 15156  000376  0100               	movlb	0	; () banked
 15157  000378  6F80               	movwf	I2cSlv_ReceiveI2cMsg@RxBuffer& (0+255),b
 15158  00037A  0E05               	movlw	high Terminal@TermRxBuffer
 15159  00037C  6F81               	movwf	(I2cSlv_ReceiveI2cMsg@RxBuffer+1)& (0+255),b
 15160  00037E  C2EE  F082         	movff	Terminal@SlaveAddr,I2cSlv_ReceiveI2cMsg@SlaveAddr
 15161  000382  C2EF  F083         	movff	Terminal@PackageLen,I2cSlv_ReceiveI2cMsg@DataLenght
 15162  000386  EC3E  F02B         	call	_I2cSlv_ReceiveI2cMsg	;wreg free
 15163                           
 15164                           ;term.c: 560: TermState = Term_PrepSlvI2cResp;
 15165  00038A  0E01               	movlw	1
 15166  00038C  0102               	movlb	2	; () banked
 15167  00038E  6FF0               	movwf	Terminal@TermState& (0+255),b
 15168                           
 15169                           ; BSR set to: 2
 15170                           ;term.c: 561: }
 15171                           ;term.c: 562: }
 15172                           
 15173                           ; BSR set to: 2
 15174  000390  0012               	return	
 15175  000392                     l2371:
 15176                           
 15177                           ;term.c: 563: else if ((UsbRxBuffer[0u] == 'T') &&
 15178                           ;term.c: 564: (UsbRxBuffer[0u + 1u] == 'E') &&
 15179                           ;term.c: 565: (UsbRxBuffer[0u + 1u + 1u] == 'L'))
 15180                           
 15181                           ; BSR set to: 2
 15182  000392  0E54               	movlw	84
 15183  000394  010A               	movlb	10	; () banked
 15184  000396  1900               	xorwf	Terminal@UsbRxBuffer& (0+255),w,b
 15185  000398  A4D8               	btfss	status,2,c
 15186  00039A  0012               	return	
 15187                           
 15188                           ; BSR set to: 10
 15189  00039C  0E45               	movlw	69
 15190  00039E  1901               	xorwf	(Terminal@UsbRxBuffer+1)& (0+255),w,b
 15191  0003A0  A4D8               	btfss	status,2,c
 15192  0003A2  0012               	return	
 15193                           
 15194                           ; BSR set to: 10
 15195  0003A4  0E4C               	movlw	76
 15196  0003A6  1902               	xorwf	(Terminal@UsbRxBuffer+2)& (0+255),w,b
 15197  0003A8  A4D8               	btfss	status,2,c
 15198  0003AA  0012               	return	
 15199                           
 15200                           ; BSR set to: 10
 15201                           ;term.c: 566: {
 15202                           ;term.c: 568: Len[0] = UsbRxBuffer[0u + 1u + 1u + 1u];
 15203  0003AC  CA03  F3AD         	movff	Terminal@UsbRxBuffer+3,Terminal@Len
 15204                           
 15205                           ;term.c: 569: Len[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 1];
 15206  0003B0  CA04  F3AE         	movff	Terminal@UsbRxBuffer+4,Terminal@Len+1
 15207                           
 15208                           ; BSR set to: 10
 15209                           ;term.c: 570: PhoneNumberLen = atoi(Len);
 15210  0003B4  0EAD               	movlw	low Terminal@Len
 15211  0003B6  0100               	movlb	0	; () banked
 15212  0003B8  6F83               	movwf	atoi@s& (0+255),b
 15213  0003BA  0E03               	movlw	high Terminal@Len
 15214  0003BC  6F84               	movwf	(atoi@s+1)& (0+255),b
 15215  0003BE  EC6A  F01A         	call	_atoi	;wreg free
 15216  0003C2  C083  F324         	movff	?_atoi,_PhoneNumberLen
 15217  0003C6  C084  F325         	movff	?_atoi+1,_PhoneNumberLen+1
 15218                           
 15219                           ;term.c: 572: for (UINT8 i = 0; i < PhoneNumberLen; i++)
 15220  0003CA  0E00               	movlw	0
 15221  0003CC  0100               	movlb	0	; () banked
 15222  0003CE  6FA4               	movwf	Terminal@i& (0+255),b
 15223  0003D0  D018               	goto	l2383
 15224  0003D2                     
 15225                           ; BSR set to: 0
 15226                           ;term.c: 573: {
 15227                           ;term.c: 574: PhoneNumber[i] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + i];
 15228                           
 15229                           ; BSR set to: 0
 15230  0003D2  51A4               	movf	Terminal@i& (0+255),w,b
 15231  0003D4  6FA2               	movwf	??_Terminal& (0+255),b
 15232  0003D6  6BA3               	clrf	(??_Terminal+1)& (0+255),b
 15233  0003D8  0E05               	movlw	5
 15234  0003DA  27A2               	addwf	??_Terminal& (0+255),f,b
 15235  0003DC  0E00               	movlw	0
 15236  0003DE  23A3               	addwfc	(??_Terminal+1)& (0+255),f,b
 15237  0003E0  0E00               	movlw	low Terminal@UsbRxBuffer
 15238  0003E2  25A2               	addwf	??_Terminal& (0+255),w,b
 15239  0003E4  6ED9               	movwf	fsr2l,c
 15240  0003E6  0E0A               	movlw	high Terminal@UsbRxBuffer
 15241  0003E8  21A3               	addwfc	(??_Terminal+1)& (0+255),w,b
 15242  0003EA  6EDA               	movwf	fsr2h,c
 15243  0003EC  51A4               	movf	Terminal@i& (0+255),w,b
 15244  0003EE  0D01               	mullw	1
 15245  0003F0  0EC6               	movlw	low _PhoneNumber
 15246  0003F2  24F3               	addwf	prodl,w,c
 15247  0003F4  6EE1               	movwf	fsr1l,c
 15248  0003F6  0E04               	movlw	high _PhoneNumber
 15249  0003F8  20F4               	addwfc	prodh,w,c
 15250  0003FA  6EE2               	movwf	fsr1h,c
 15251  0003FC  CFDF FFE7          	movff	indf2,indf1
 15252                           
 15253                           ; BSR set to: 0
 15254  000400  2BA4               	incf	Terminal@i& (0+255),f,b
 15255  000402                     l2383:
 15256                           
 15257                           ; BSR set to: 0
 15258                           
 15259                           ; BSR set to: 0
 15260  000402  51A4               	movf	Terminal@i& (0+255),w,b
 15261  000404  6FA2               	movwf	??_Terminal& (0+255),b
 15262  000406  6BA3               	clrf	(??_Terminal+1)& (0+255),b
 15263  000408  0103               	movlb	3	; () banked
 15264  00040A  5124               	movf	_PhoneNumberLen& (0+255),w,b
 15265  00040C  0100               	movlb	0	; () banked
 15266  00040E  5DA2               	subwf	??_Terminal& (0+255),w,b
 15267  000410  0103               	movlb	3	; () banked
 15268  000412  5125               	movf	(_PhoneNumberLen+1)& (0+255),w,b
 15269  000414  0100               	movlb	0	; () banked
 15270  000416  59A3               	subwfb	(??_Terminal+1)& (0+255),w,b
 15271  000418  B0D8               	btfsc	status,0,c
 15272  00041A  0012               	return	
 15273  00041C  D7DA               	goto	l2384
 15274  00041E                     
 15275                           ;term.c: 619: if((cdc_trf_state == 0))
 15276                           
 15277                           ; BSR set to: 0
 15278  00041E  0100               	movlb	0	; () banked
 15279  000420  51C1               	movf	_cdc_trf_state& (0+255),w,b
 15280  000422  A4D8               	btfss	status,2,c
 15281  000424  0012               	return	
 15282                           
 15283                           ; BSR set to: 0
 15284                           ;term.c: 620: {
 15285                           ;term.c: 621: UsbTxBuffer[0] = 'S';
 15286  000426  0E53               	movlw	83
 15287  000428  0102               	movlb	2	; () banked
 15288  00042A  6F00               	movwf	Terminal@UsbTxBuffer& (0+255),b
 15289                           
 15290                           ;term.c: 622: UsbTxBuffer[1] = 'B';
 15291  00042C  0E42               	movlw	66
 15292  00042E  6F01               	movwf	(Terminal@UsbTxBuffer+1)& (0+255),b
 15293                           
 15294                           ;term.c: 623: UsbTxBuffer[2] = '[';
 15295  000430  0E5B               	movlw	91
 15296  000432  6F02               	movwf	(Terminal@UsbTxBuffer+2)& (0+255),b
 15297                           
 15298                           ; BSR set to: 2
 15299                           ;term.c: 624: UsbTxBuffer[3] = Addr[0];
 15300  000434  C3A9  F203         	movff	Terminal@Addr,Terminal@UsbTxBuffer+3
 15301                           
 15302                           ; BSR set to: 2
 15303                           ;term.c: 625: UsbTxBuffer[4] = Addr[1];
 15304  000438  C3AA  F204         	movff	Terminal@Addr+1,Terminal@UsbTxBuffer+4
 15305                           
 15306                           ;term.c: 626: UsbTxBuffer[5] = ']';
 15307  00043C  0E5D               	movlw	93
 15308  00043E  6F05               	movwf	(Terminal@UsbTxBuffer+5)& (0+255),b
 15309                           
 15310                           ;term.c: 627: UsbTxBuffer[6] = ':';
 15311  000440  0E3A               	movlw	58
 15312  000442  6F06               	movwf	(Terminal@UsbTxBuffer+6)& (0+255),b
 15313                           
 15314                           ; BSR set to: 2
 15315                           ;term.c: 628: putUSBUSART(UsbTxBuffer,7);
 15316  000444  0E00               	movlw	low Terminal@UsbTxBuffer
 15317  000446  0100               	movlb	0	; () banked
 15318  000448  6F83               	movwf	putUSBUSART@data& (0+255),b
 15319  00044A  0E02               	movlw	high Terminal@UsbTxBuffer
 15320  00044C  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 15321  00044E  0E07               	movlw	7
 15322  000450  6F85               	movwf	putUSBUSART@length& (0+255),b
 15323  000452  EC65  F02E         	call	_putUSBUSART	;wreg free
 15324                           
 15325                           ;term.c: 631: TermState = Term_ReadSlvI2cData;
 15326  000456  0E02               	movlw	2
 15327  000458  0102               	movlb	2	; () banked
 15328  00045A  6FF0               	movwf	Terminal@TermState& (0+255),b
 15329                           
 15330                           ; BSR set to: 2
 15331                           ;term.c: 632: }
 15332                           ;term.c: 633: break;
 15333  00045C  0012               	return	
 15334  00045E                     
 15335                           ; BSR set to: 2
 15336                           ;term.c: 637: if (I2cSlv_I2cReadMsgSts() == MessageReceived)
 15337                           
 15338                           ; BSR set to: 2
 15339  00045E  EC87  F02E         	call	_I2cSlv_I2cReadMsgSts	;wreg free
 15340  000462  06E8               	decf	wreg,f,c
 15341  000464  A4D8               	btfss	status,2,c
 15342  000466  D088               	goto	l2392
 15343                           
 15344                           ;term.c: 638: {
 15345                           ;term.c: 640: if (FormatOption == 1u)
 15346  000468  0102               	movlb	2	; () banked
 15347  00046A  05ED               	decf	Terminal@FormatOption& (0+255),w,b
 15348  00046C  A4D8               	btfss	status,2,c
 15349  00046E  D027               	goto	u11950
 15350                           
 15351                           ; BSR set to: 2
 15352                           ;term.c: 641: {
 15353                           ;term.c: 643: for (Index = 0; Index <= PackageLen; Index++)
 15354  000470  0E00               	movlw	0
 15355  000472  0100               	movlb	0	; () banked
 15356  000474  6FA6               	movwf	Terminal@Index& (0+255),b
 15357  000476  D01E               	goto	l2394
 15358  000478                     
 15359                           ;term.c: 644: {
 15360                           ;term.c: 645: itoa(((void*)&(Payload[Index])),TermRxBuffer[Index],10);
 15361                           
 15362                           ; BSR set to: 0
 15363  000478  0100               	movlb	0	; () banked
 15364  00047A  51A6               	movf	Terminal@Index& (0+255),w,b
 15365  00047C  0D04               	mullw	4
 15366  00047E  0E00               	movlw	low Terminal@Payload
 15367  000480  24F3               	addwf	prodl,w,c
 15368  000482  6F93               	movwf	itoa@buf& (0+255),b
 15369  000484  0E05               	movlw	high Terminal@Payload
 15370  000486  20F4               	addwfc	prodh,w,c
 15371  000488  6F94               	movwf	(itoa@buf+1)& (0+255),b
 15372  00048A  51A6               	movf	Terminal@Index& (0+255),w,b
 15373  00048C  0D01               	mullw	1
 15374  00048E  0E50               	movlw	low Terminal@TermRxBuffer
 15375  000490  24F3               	addwf	prodl,w,c
 15376  000492  6ED9               	movwf	fsr2l,c
 15377  000494  0E05               	movlw	high Terminal@TermRxBuffer
 15378  000496  20F4               	addwfc	prodh,w,c
 15379  000498  6EDA               	movwf	fsr2h,c
 15380  00049A  50DF               	movf	indf2,w,c
 15381  00049C  6FA2               	movwf	??_Terminal& (0+255),b
 15382  00049E  51A2               	movf	??_Terminal& (0+255),w,b
 15383  0004A0  6F95               	movwf	itoa@val& (0+255),b
 15384  0004A2  6B96               	clrf	(itoa@val+1)& (0+255),b
 15385  0004A4  0E00               	movlw	0
 15386  0004A6  6F98               	movwf	(itoa@base+1)& (0+255),b
 15387  0004A8  0E0A               	movlw	10
 15388  0004AA  6F97               	movwf	itoa@base& (0+255),b
 15389  0004AC  ECD8  F02A         	call	_itoa	;wreg free
 15390  0004B0  0100               	movlb	0	; () banked
 15391  0004B2  2BA6               	incf	Terminal@Index& (0+255),f,b
 15392  0004B4                     l2394:
 15393                           
 15394                           ; BSR set to: 0
 15395                           
 15396                           ; BSR set to: 0
 15397  0004B4  51A6               	movf	Terminal@Index& (0+255),w,b
 15398  0004B6  0102               	movlb	2	; () banked
 15399  0004B8  5DEF               	subwf	Terminal@PackageLen& (0+255),w,b
 15400  0004BA  B0D8               	btfsc	status,0,c
 15401  0004BC  D7DD               	goto	l2395
 15402  0004BE                     u11950:
 15403                           
 15404                           ; BSR set to: 2
 15405                           ;term.c: 646: }
 15406                           ;term.c: 647: }
 15407                           ;term.c: 650: if((cdc_trf_state == 0))
 15408                           
 15409                           ; BSR set to: 2
 15410                           
 15411                           ; BSR set to: 2
 15412  0004BE  0100               	movlb	0	; () banked
 15413  0004C0  51C1               	movf	_cdc_trf_state& (0+255),w,b
 15414  0004C2  A4D8               	btfss	status,2,c
 15415  0004C4  0012               	return	
 15416                           
 15417                           ; BSR set to: 0
 15418                           ;term.c: 651: {
 15419                           ;term.c: 653: if (FormatOption == 1u)
 15420  0004C6  0102               	movlb	2	; () banked
 15421  0004C8  05ED               	decf	Terminal@FormatOption& (0+255),w,b
 15422  0004CA  A4D8               	btfss	status,2,c
 15423  0004CC  D02B               	goto	l2398
 15424                           
 15425                           ; BSR set to: 2
 15426                           ;term.c: 654: {
 15427                           ;term.c: 655: Payload[(2*PackageLen)].Byte[3] = '\r';
 15428  0004CE  51EF               	movf	Terminal@PackageLen& (0+255),w,b
 15429  0004D0  0D08               	mullw	8
 15430  0004D2  0E03               	movlw	3
 15431  0004D4  26F3               	addwf	prodl,f,c
 15432  0004D6  0E00               	movlw	0
 15433  0004D8  22F4               	addwfc	prodh,f,c
 15434  0004DA  0E00               	movlw	low Terminal@Payload
 15435  0004DC  24F3               	addwf	prodl,w,c
 15436  0004DE  6ED9               	movwf	fsr2l,c
 15437  0004E0  0E05               	movlw	high Terminal@Payload
 15438  0004E2  20F4               	addwfc	prodh,w,c
 15439  0004E4  6EDA               	movwf	fsr2h,c
 15440  0004E6  0E0D               	movlw	13
 15441  0004E8  6EDF               	movwf	indf2,c
 15442                           
 15443                           ;term.c: 656: Payload[(2*PackageLen)].Byte[2] = '\n';
 15444  0004EA  51EF               	movf	Terminal@PackageLen& (0+255),w,b
 15445  0004EC  0D08               	mullw	8
 15446  0004EE  0E02               	movlw	2
 15447  0004F0  26F3               	addwf	prodl,f,c
 15448  0004F2  0E00               	movlw	0
 15449  0004F4  22F4               	addwfc	prodh,f,c
 15450  0004F6  0E00               	movlw	low Terminal@Payload
 15451  0004F8  24F3               	addwf	prodl,w,c
 15452  0004FA  6ED9               	movwf	fsr2l,c
 15453  0004FC  0E05               	movlw	high Terminal@Payload
 15454  0004FE  20F4               	addwfc	prodh,w,c
 15455  000500  6EDA               	movwf	fsr2h,c
 15456  000502  0E0A               	movlw	10
 15457  000504  6EDF               	movwf	indf2,c
 15458                           
 15459                           ; BSR set to: 2
 15460                           ;term.c: 658: putUSBUSART((void*)Payload,(2*PackageLen) + 4);
 15461  000506  0E00               	movlw	low Terminal@Payload
 15462  000508  0100               	movlb	0	; () banked
 15463  00050A  6F83               	movwf	putUSBUSART@data& (0+255),b
 15464  00050C  0E05               	movlw	high Terminal@Payload
 15465  00050E  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 15466  000510  0102               	movlb	2	; () banked
 15467  000512  51EF               	movf	Terminal@PackageLen& (0+255),w,b
 15468  000514  0D02               	mullw	2
 15469  000516  50F3               	movf	prodl,w,c
 15470  000518  0F04               	addlw	4
 15471  00051A  0100               	movlb	0	; () banked
 15472  00051C  6F85               	movwf	putUSBUSART@length& (0+255),b
 15473  00051E  EC65  F02E         	call	_putUSBUSART	;wreg free
 15474                           
 15475                           ;term.c: 659: }
 15476  000522  D026               	goto	l2399
 15477  000524                     l2398:
 15478                           
 15479                           ;term.c: 660: else
 15480                           ;term.c: 661: {
 15481                           ;term.c: 662: TermRxBuffer[PackageLen] = '\r';
 15482  000524  0102               	movlb	2	; () banked
 15483  000526  51EF               	movf	Terminal@PackageLen& (0+255),w,b
 15484  000528  0D01               	mullw	1
 15485  00052A  0E50               	movlw	low Terminal@TermRxBuffer
 15486  00052C  24F3               	addwf	prodl,w,c
 15487  00052E  6ED9               	movwf	fsr2l,c
 15488  000530  0E05               	movlw	high Terminal@TermRxBuffer
 15489  000532  20F4               	addwfc	prodh,w,c
 15490  000534  6EDA               	movwf	fsr2h,c
 15491  000536  0E0D               	movlw	13
 15492  000538  6EDF               	movwf	indf2,c
 15493                           
 15494                           ; BSR set to: 2
 15495                           ;term.c: 663: TermRxBuffer[PackageLen + 1] = '\n';
 15496  00053A  51EF               	movf	Terminal@PackageLen& (0+255),w,b
 15497  00053C  0100               	movlb	0	; () banked
 15498  00053E  6FA2               	movwf	??_Terminal& (0+255),b
 15499  000540  6BA3               	clrf	(??_Terminal+1)& (0+255),b
 15500  000542  0E01               	movlw	1
 15501  000544  27A2               	addwf	??_Terminal& (0+255),f,b
 15502  000546  0E00               	movlw	0
 15503  000548  23A3               	addwfc	(??_Terminal+1)& (0+255),f,b
 15504  00054A  0E50               	movlw	low Terminal@TermRxBuffer
 15505  00054C  25A2               	addwf	??_Terminal& (0+255),w,b
 15506  00054E  6ED9               	movwf	fsr2l,c
 15507  000550  0E05               	movlw	high Terminal@TermRxBuffer
 15508  000552  21A3               	addwfc	(??_Terminal+1)& (0+255),w,b
 15509  000554  6EDA               	movwf	fsr2h,c
 15510  000556  0E0A               	movlw	10
 15511  000558  6EDF               	movwf	indf2,c
 15512                           
 15513                           ; BSR set to: 0
 15514                           ;term.c: 665: putUSBUSART(TermRxBuffer,PackageLen + 2);
 15515  00055A  0E50               	movlw	low Terminal@TermRxBuffer
 15516  00055C  6F83               	movwf	putUSBUSART@data& (0+255),b
 15517  00055E  0E05               	movlw	high Terminal@TermRxBuffer
 15518  000560  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 15519  000562  0102               	movlb	2	; () banked
 15520  000564  51EF               	movf	Terminal@PackageLen& (0+255),w,b
 15521  000566  0F02               	addlw	2
 15522  000568  0100               	movlb	0	; () banked
 15523  00056A  6F85               	movwf	putUSBUSART@length& (0+255),b
 15524  00056C  EC65  F02E         	call	_putUSBUSART	;wreg free
 15525  000570                     l2399:
 15526                           
 15527                           ;term.c: 666: }
 15528                           ;term.c: 668: TermState = Term_GetData;
 15529  000570  0E00               	movlw	0
 15530  000572  0102               	movlb	2	; () banked
 15531  000574  6FF0               	movwf	Terminal@TermState& (0+255),b
 15532                           
 15533                           ; BSR set to: 2
 15534                           ;term.c: 669: }
 15535                           ;term.c: 670: }
 15536  000576  0012               	return	
 15537  000578                     l2392:
 15538                           
 15539                           ;term.c: 671: else
 15540                           ;term.c: 672: {
 15541                           ;term.c: 674: if (OsTmr_Wait(&SwTimer,3000u) == DelayExpired)
 15542                           
 15543                           ; BSR set to: 2
 15544  000578  0EDA               	movlw	low Terminal@SwTimer
 15545  00057A  0100               	movlb	0	; () banked
 15546  00057C  6F9B               	movwf	OsTmr_Wait@WaitTimer& (0+255),b
 15547  00057E  0E04               	movlw	high Terminal@SwTimer
 15548  000580  6F9C               	movwf	(OsTmr_Wait@WaitTimer+1)& (0+255),b
 15549  000582  0EB8               	movlw	184
 15550  000584  6F9D               	movwf	OsTmr_Wait@DelayMs& (0+255),b
 15551  000586  0E0B               	movlw	11
 15552  000588  6F9E               	movwf	(OsTmr_Wait@DelayMs+1)& (0+255),b
 15553  00058A  0E00               	movlw	0
 15554  00058C  6F9F               	movwf	(OsTmr_Wait@DelayMs+2)& (0+255),b
 15555  00058E  0E00               	movlw	0
 15556  000590  6FA0               	movwf	(OsTmr_Wait@DelayMs+3)& (0+255),b
 15557  000592  EC43  F025         	call	_OsTmr_Wait	;wreg free
 15558  000596  06E8               	decf	wreg,f,c
 15559  000598  A4D8               	btfss	status,2,c
 15560  00059A  0012               	return	
 15561                           
 15562                           ;term.c: 675: {
 15563                           ;term.c: 677: if((cdc_trf_state == 0))
 15564  00059C  0100               	movlb	0	; () banked
 15565  00059E  51C1               	movf	_cdc_trf_state& (0+255),w,b
 15566  0005A0  A4D8               	btfss	status,2,c
 15567  0005A2  0012               	return	
 15568                           
 15569                           ; BSR set to: 0
 15570                           ;term.c: 678: {
 15571                           ;term.c: 679: strcpy(UsbTxBuffer," Lazy device...you've been timed-out!!!\r\n");
 15572  0005A4  0E00               	movlw	low Terminal@UsbTxBuffer
 15573  0005A6  6F7D               	movwf	strcpy@to& (0+255),b
 15574  0005A8  0E02               	movlw	high Terminal@UsbTxBuffer
 15575  0005AA  6F7E               	movwf	(strcpy@to+1)& (0+255),b
 15576  0005AC  0E8C               	movlw	low STR_21
 15577  0005AE  6F7F               	movwf	strcpy@from& (0+255),b
 15578  0005B0  0EFE               	movlw	high STR_21
 15579  0005B2  6F80               	movwf	(strcpy@from+1)& (0+255),b
 15580  0005B4  ECDC  F02C         	call	_strcpy	;wreg free
 15581                           
 15582                           ;term.c: 680: putUSBUSART(UsbTxBuffer,sizeof(" Lazy device...you've been timed-out!!!\r\
      +                          n")-1);
 15583  0005B8  0E00               	movlw	low Terminal@UsbTxBuffer
 15584  0005BA  0100               	movlb	0	; () banked
 15585  0005BC  6F83               	movwf	putUSBUSART@data& (0+255),b
 15586  0005BE  0E02               	movlw	high Terminal@UsbTxBuffer
 15587  0005C0  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 15588  0005C2  0E29               	movlw	41
 15589  0005C4  6F85               	movwf	putUSBUSART@length& (0+255),b
 15590  0005C6  EC65  F02E         	call	_putUSBUSART	;wreg free
 15591                           
 15592                           ;term.c: 682: TermState = Term_GetData;
 15593  0005CA  0E00               	movlw	0
 15594  0005CC  0102               	movlb	2	; () banked
 15595  0005CE  6FF0               	movwf	Terminal@TermState& (0+255),b
 15596                           
 15597                           ; BSR set to: 2
 15598                           ;term.c: 693: }
 15599                           
 15600                           ; BSR set to: 2
 15601                           ;term.c: 692: break;
 15602                           
 15603                           ;term.c: 691: default:
 15604                           
 15605                           ; BSR set to: 2
 15606                           ;term.c: 689: break;
 15607                           
 15608                           ;term.c: 688: case Term_ReadSlvUartData:
 15609                           
 15610                           ; BSR set to: 2
 15611                           ;term.c: 683: }
 15612                           ;term.c: 684: }
 15613                           ;term.c: 685: }
 15614                           ;term.c: 686: break;
 15615                           
 15616                           ; BSR set to: 2
 15617                           
 15618                           ; BSR set to: 2
 15619  0005D0  0012               	return	
 15620  0005D2                     l2353:
 15621                           
 15622                           ; BSR set to: 2
 15623  0005D2  0102               	movlb	2	; () banked
 15624  0005D4  51F0               	movf	Terminal@TermState& (0+255),w,b
 15625                           
 15626                           ; Switch size 1, requested type "space"
 15627                           ; Number of cases is 4, Range of values is 0 to 3
 15628                           ; switch strategies available:
 15629                           ; Name         Instructions Cycles
 15630                           ; simple_byte           13     7 (average)
 15631                           ;	Chosen strategy is simple_byte
 15632  0005D6  0A00               	xorlw	0	; case 0
 15633  0005D8  B4D8               	btfsc	status,2,c
 15634  0005DA  D583               	goto	l2354
 15635  0005DC  0A01               	xorlw	1	; case 1
 15636  0005DE  B4D8               	btfsc	status,2,c
 15637  0005E0  D71E               	goto	l2389
 15638  0005E2  0A03               	xorlw	3	; case 2
 15639  0005E4  B4D8               	btfsc	status,2,c
 15640  0005E6  D73B               	goto	l2391
 15641  0005E8  0A01               	xorlw	1	; case 3
 15642  0005EA  0012               	return	
 15643  0005EC                     __end_of_Terminal:
 15644                           	opt stack 0
 15645                           tosu	equ	0xFFF
 15646                           tosh	equ	0xFFE
 15647                           tosl	equ	0xFFD
 15648                           pclath	equ	0xFFA
 15649                           tblptru	equ	0xFF8
 15650                           tblptrh	equ	0xFF7
 15651                           tblptrl	equ	0xFF6
 15652                           tablat	equ	0xFF5
 15653                           prodh	equ	0xFF4
 15654                           prodl	equ	0xFF3
 15655                           intcon	equ	0xFF2
 15656                           intcon2	equ	0xFF1
 15657                           intcon3	equ	0xFF0
 15658                           indf0	equ	0xFEF
 15659                           postinc0	equ	0xFEE
 15660                           plusw0	equ	0xFEB
 15661                           fsr0h	equ	0xFEA
 15662                           fsr0l	equ	0xFE9
 15663                           wreg	equ	0xFE8
 15664                           indf1	equ	0xFE7
 15665                           postinc1	equ	0xFE6
 15666                           postdec1	equ	0xFE5
 15667                           plusw1	equ	0xFE3
 15668                           fsr1h	equ	0xFE2
 15669                           fsr1l	equ	0xFE1
 15670                           indf2	equ	0xFDF
 15671                           postinc2	equ	0xFDE
 15672                           postdec2	equ	0xFDD
 15673                           plusw2	equ	0xFDB
 15674                           fsr2h	equ	0xFDA
 15675                           fsr2l	equ	0xFD9
 15676                           status	equ	0xFD8
 15677                           
 15678 ;; *************** function _xtoi *****************
 15679 ;; Defined at:
 15680 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/xtoi.c"
 15681 ;; Parameters:    Size  Location     Type
 15682 ;;  s               2   35[BANK0 ] PTR const unsigned char 
 15683 ;;		 -> Terminal@Addr(4), 
 15684 ;; Auto vars:     Size  Location     Type
 15685 ;;  val             2   40[BANK0 ] unsigned int 
 15686 ;;  c               1   42[BANK0 ] unsigned char 
 15687 ;;  sign            1   39[BANK0 ] unsigned char 
 15688 ;; Return value:  Size  Location     Type
 15689 ;;                  2   35[BANK0 ] unsigned int 
 15690 ;; Registers used:
 15691 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15692 ;; Tracked objects:
 15693 ;;		On entry : 0/0
 15694 ;;		On exit  : 0/0
 15695 ;;		Unchanged: 0/0
 15696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15697 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15698 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15699 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15700 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15701 ;;Total ram usage:        8 bytes
 15702 ;; Hardware stack levels used:    1
 15703 ;; Hardware stack levels required when called:   13
 15704 ;; This function calls:
 15705 ;;		_isdigit
 15706 ;;		_isspace
 15707 ;;		_isupper
 15708 ;;		_isxdigit
 15709 ;;		_tolower
 15710 ;; This function is called by:
 15711 ;;		_Terminal
 15712 ;; This function uses a non-reentrant model
 15713 ;;
 15714                           
 15715                           	psect	text61
 15716  003232                     __ptext61:
 15717                           	opt stack 0
 15718  003232                     _xtoi:
 15719                           	opt stack 12
 15720                           
 15721                           ;incstack = 0
 15722  003232  0E00               	movlw	0
 15723  003234  0100               	movlb	0	; () banked
 15724  003236  6F87               	movwf	xtoi@sign& (0+255),b
 15725  003238  0E00               	movlw	0
 15726  00323A  6F89               	movwf	(xtoi@val+1)& (0+255),b
 15727  00323C  0E00               	movlw	0
 15728  00323E  6F88               	movwf	xtoi@val& (0+255),b
 15729  003240  D003               	goto	l3255
 15730  003242                     
 15731                           ; BSR set to: 0
 15732  003242  0100               	movlb	0	; () banked
 15733  003244  4B83               	infsnz	xtoi@s& (0+255),f,b
 15734  003246  2B84               	incf	(xtoi@s+1)& (0+255),f,b
 15735  003248                     l3255:
 15736                           
 15737                           ; BSR set to: 0
 15738                           
 15739                           ; BSR set to: 0
 15740  003248  C083  FFD9         	movff	xtoi@s,fsr2l
 15741  00324C  C084  FFDA         	movff	xtoi@s+1,fsr2h
 15742  003250  50DF               	movf	indf2,w,c
 15743  003252  ECAE  F02D         	call	_isspace
 15744  003256  B0D8               	btfsc	status,0,c
 15745  003258  D7F4               	goto	l3256
 15746  00325A  C083  FFD9         	movff	xtoi@s,fsr2l
 15747  00325E  C084  FFDA         	movff	xtoi@s+1,fsr2h
 15748  003262  0E2D               	movlw	45
 15749  003264  18DE               	xorwf	postinc2,w,c
 15750  003266  A4D8               	btfss	status,2,c
 15751  003268  D003               	goto	l3258
 15752  00326A  0100               	movlb	0	; () banked
 15753  00326C  2B87               	incf	xtoi@sign& (0+255),f,b
 15754  00326E  D009               	goto	L15
 15755  003270                     l3258:
 15756                           
 15757                           ; BSR set to: 0
 15758  003270  C083  FFD9         	movff	xtoi@s,fsr2l
 15759  003274  C084  FFDA         	movff	xtoi@s+1,fsr2h
 15760  003278  0E2B               	movlw	43
 15761  00327A  18DE               	xorwf	postinc2,w,c
 15762  00327C  A4D8               	btfss	status,2,c
 15763  00327E  D028               	goto	l3261
 15764  003280  0100               	movlb	0	; () banked
 15765  003282                     L15:
 15766  003282  4B83               	infsnz	xtoi@s& (0+255),f,b
 15767  003284  2B84               	incf	(xtoi@s+1)& (0+255),f,b
 15768                           
 15769                           ; BSR set to: 0
 15770                           
 15771                           ; BSR set to: 0
 15772  003286  D024               	goto	l3261
 15773  003288                     
 15774                           ; BSR set to: 0
 15775  003288  0100               	movlb	0	; () banked
 15776  00328A  518A               	movf	xtoi@c& (0+255),w,b
 15777  00328C  EC54  F02E         	call	_isupper
 15778  003290  A0D8               	btfss	status,0,c
 15779  003292  D006               	goto	l3263
 15780  003294  0100               	movlb	0	; () banked
 15781  003296  518A               	movf	xtoi@c& (0+255),w,b
 15782  003298  EC0C  F02F         	call	_tolower
 15783  00329C  0100               	movlb	0	; () banked
 15784  00329E  6F8A               	movwf	xtoi@c& (0+255),b
 15785  0032A0                     l3263:
 15786  0032A0  0100               	movlb	0	; () banked
 15787  0032A2  518A               	movf	xtoi@c& (0+255),w,b
 15788  0032A4  EC76  F02E         	call	_isdigit
 15789  0032A8  A0D8               	btfss	status,0,c
 15790  0032AA  D002               	goto	l3264
 15791  0032AC  0E30               	movlw	48
 15792  0032AE  D001               	goto	L14
 15793  0032B0                     l3264:
 15794                           
 15795                           ; BSR set to: 0
 15796  0032B0  0E57               	movlw	87
 15797  0032B2                     L14:
 15798  0032B2  0100               	movlb	0	; () banked
 15799  0032B4  5F8A               	subwf	xtoi@c& (0+255),f,b
 15800                           
 15801                           ; BSR set to: 0
 15802  0032B6  3B88               	swapf	xtoi@val& (0+255),f,b
 15803  0032B8  3B89               	swapf	(xtoi@val+1)& (0+255),f,b
 15804  0032BA  0EF0               	movlw	240
 15805  0032BC  1789               	andwf	(xtoi@val+1)& (0+255),f,b
 15806  0032BE  5188               	movf	xtoi@val& (0+255),w,b
 15807  0032C0  0B0F               	andlw	15
 15808  0032C2  1389               	iorwf	(xtoi@val+1)& (0+255),f,b
 15809  0032C4  0EF0               	movlw	240
 15810  0032C6  1788               	andwf	xtoi@val& (0+255),f,b
 15811  0032C8  518A               	movf	xtoi@c& (0+255),w,b
 15812  0032CA  2788               	addwf	xtoi@val& (0+255),f,b
 15813  0032CC  0E00               	movlw	0
 15814  0032CE  2389               	addwfc	(xtoi@val+1)& (0+255),f,b
 15815  0032D0                     l3261:
 15816                           
 15817                           ; BSR set to: 0
 15818  0032D0  C083  FFD9         	movff	xtoi@s,fsr2l
 15819  0032D4  C084  FFDA         	movff	xtoi@s+1,fsr2h
 15820  0032D8  0100               	movlb	0	; () banked
 15821  0032DA  4B83               	infsnz	xtoi@s& (0+255),f,b
 15822  0032DC  2B84               	incf	(xtoi@s+1)& (0+255),f,b
 15823  0032DE  50DF               	movf	indf2,w,c
 15824  0032E0  6F8A               	movwf	xtoi@c& (0+255),b
 15825  0032E2  518A               	movf	xtoi@c& (0+255),w,b
 15826  0032E4  ECFB  F02B         	call	_isxdigit
 15827  0032E8  B0D8               	btfsc	status,0,c
 15828  0032EA  D7CE               	goto	l3262
 15829  0032EC  0100               	movlb	0	; () banked
 15830  0032EE  5187               	movf	xtoi@sign& (0+255),w,b
 15831  0032F0  B4D8               	btfsc	status,2,c
 15832  0032F2  D00D               	goto	l3267
 15833                           
 15834                           ; BSR set to: 0
 15835  0032F4  C088  F085         	movff	xtoi@val,??_xtoi
 15836  0032F8  C089  F086         	movff	xtoi@val+1,??_xtoi+1
 15837  0032FC  1F85               	comf	??_xtoi& (0+255),f,b
 15838  0032FE  1F86               	comf	(??_xtoi+1)& (0+255),f,b
 15839  003300  4B85               	infsnz	??_xtoi& (0+255),f,b
 15840  003302  2B86               	incf	(??_xtoi+1)& (0+255),f,b
 15841  003304  C085  F083         	movff	??_xtoi,?_xtoi
 15842  003308  C086  F084         	movff	??_xtoi+1,?_xtoi+1
 15843  00330C  0012               	return	
 15844  00330E                     l3267:
 15845                           
 15846                           ; BSR set to: 0
 15847  00330E  C088  F083         	movff	xtoi@val,?_xtoi
 15848  003312  C089  F084         	movff	xtoi@val+1,?_xtoi+1
 15849                           
 15850                           ; BSR set to: 0
 15851  003316  0012               	return		;funcret
 15852  003318                     __end_of_xtoi:
 15853                           	opt stack 0
 15854                           tosu	equ	0xFFF
 15855                           tosh	equ	0xFFE
 15856                           tosl	equ	0xFFD
 15857                           pclath	equ	0xFFA
 15858                           tblptru	equ	0xFF8
 15859                           tblptrh	equ	0xFF7
 15860                           tblptrl	equ	0xFF6
 15861                           tablat	equ	0xFF5
 15862                           prodh	equ	0xFF4
 15863                           prodl	equ	0xFF3
 15864                           intcon	equ	0xFF2
 15865                           intcon2	equ	0xFF1
 15866                           intcon3	equ	0xFF0
 15867                           indf0	equ	0xFEF
 15868                           postinc0	equ	0xFEE
 15869                           plusw0	equ	0xFEB
 15870                           fsr0h	equ	0xFEA
 15871                           fsr0l	equ	0xFE9
 15872                           wreg	equ	0xFE8
 15873                           indf1	equ	0xFE7
 15874                           postinc1	equ	0xFE6
 15875                           postdec1	equ	0xFE5
 15876                           plusw1	equ	0xFE3
 15877                           fsr1h	equ	0xFE2
 15878                           fsr1l	equ	0xFE1
 15879                           indf2	equ	0xFDF
 15880                           postinc2	equ	0xFDE
 15881                           postdec2	equ	0xFDD
 15882                           plusw2	equ	0xFDB
 15883                           fsr2h	equ	0xFDA
 15884                           fsr2l	equ	0xFD9
 15885                           status	equ	0xFD8
 15886                           
 15887 ;; *************** function _tolower *****************
 15888 ;; Defined at:
 15889 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/tolower.c"
 15890 ;; Parameters:    Size  Location     Type
 15891 ;;  c               1    wreg     unsigned char 
 15892 ;; Auto vars:     Size  Location     Type
 15893 ;;  c               1   29[BANK0 ] unsigned char 
 15894 ;; Return value:  Size  Location     Type
 15895 ;;                  1    wreg      unsigned char 
 15896 ;; Registers used:
 15897 ;;		wreg, status,2, status,0
 15898 ;; Tracked objects:
 15899 ;;		On entry : 0/0
 15900 ;;		On exit  : 0/0
 15901 ;;		Unchanged: 0/0
 15902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15903 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15904 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15905 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15906 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15907 ;;Total ram usage:        1 bytes
 15908 ;; Hardware stack levels used:    1
 15909 ;; Hardware stack levels required when called:   11
 15910 ;; This function calls:
 15911 ;;		Nothing
 15912 ;; This function is called by:
 15913 ;;		_xtoi
 15914 ;; This function uses a non-reentrant model
 15915 ;;
 15916                           
 15917                           	psect	text62
 15918  005E18                     __ptext62:
 15919                           	opt stack 0
 15920  005E18                     _tolower:
 15921                           	opt stack 13
 15922                           
 15923                           ; BSR set to: 0
 15924                           ;incstack = 0
 15925                           ;tolower@c stored from wreg
 15926  005E18  0100               	movlb	0	; () banked
 15927  005E1A  6F7D               	movwf	tolower@c& (0+255),b
 15928  005E1C  0E5B               	movlw	91
 15929  005E1E  0100               	movlb	0	; () banked
 15930  005E20  617D               	cpfslt	tolower@c& (0+255),b
 15931  005E22  D004               	goto	l3314
 15932                           
 15933                           ; BSR set to: 0
 15934  005E24  0E40               	movlw	64
 15935  005E26  657D               	cpfsgt	tolower@c& (0+255),b
 15936  005E28  D001               	goto	l3314
 15937                           
 15938                           ; BSR set to: 0
 15939  005E2A  8B7D               	bsf	tolower@c& (0+255),5,b
 15940  005E2C                     l3314:
 15941                           
 15942                           ; BSR set to: 0
 15943                           
 15944                           ; BSR set to: 0
 15945  005E2C  517D               	movf	tolower@c& (0+255),w,b
 15946  005E2E  0012               	return	
 15947  005E30                     __end_of_tolower:
 15948                           	opt stack 0
 15949                           tosu	equ	0xFFF
 15950                           tosh	equ	0xFFE
 15951                           tosl	equ	0xFFD
 15952                           pclath	equ	0xFFA
 15953                           tblptru	equ	0xFF8
 15954                           tblptrh	equ	0xFF7
 15955                           tblptrl	equ	0xFF6
 15956                           tablat	equ	0xFF5
 15957                           prodh	equ	0xFF4
 15958                           prodl	equ	0xFF3
 15959                           intcon	equ	0xFF2
 15960                           intcon2	equ	0xFF1
 15961                           intcon3	equ	0xFF0
 15962                           indf0	equ	0xFEF
 15963                           postinc0	equ	0xFEE
 15964                           plusw0	equ	0xFEB
 15965                           fsr0h	equ	0xFEA
 15966                           fsr0l	equ	0xFE9
 15967                           wreg	equ	0xFE8
 15968                           indf1	equ	0xFE7
 15969                           postinc1	equ	0xFE6
 15970                           postdec1	equ	0xFE5
 15971                           plusw1	equ	0xFE3
 15972                           fsr1h	equ	0xFE2
 15973                           fsr1l	equ	0xFE1
 15974                           indf2	equ	0xFDF
 15975                           postinc2	equ	0xFDE
 15976                           postdec2	equ	0xFDD
 15977                           plusw2	equ	0xFDB
 15978                           fsr2h	equ	0xFDA
 15979                           fsr2l	equ	0xFD9
 15980                           status	equ	0xFD8
 15981                           
 15982 ;; *************** function _isxdigit *****************
 15983 ;; Defined at:
 15984 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isxdigit.c"
 15985 ;; Parameters:    Size  Location     Type
 15986 ;;  c               1    wreg     unsigned char 
 15987 ;; Auto vars:     Size  Location     Type
 15988 ;;  c               1   34[BANK0 ] unsigned char 
 15989 ;; Return value:  Size  Location     Type
 15990 ;;		None               void
 15991 ;; Registers used:
 15992 ;;		wreg, status,2, status,0, cstack
 15993 ;; Tracked objects:
 15994 ;;		On entry : 0/0
 15995 ;;		On exit  : 0/0
 15996 ;;		Unchanged: 0/0
 15997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15998 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15999 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16000 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16001 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16002 ;;Total ram usage:        3 bytes
 16003 ;; Hardware stack levels used:    1
 16004 ;; Hardware stack levels required when called:   12
 16005 ;; This function calls:
 16006 ;;		_isdigit
 16007 ;; This function is called by:
 16008 ;;		_xtoi
 16009 ;; This function uses a non-reentrant model
 16010 ;;
 16011                           
 16012                           	psect	text63
 16013  0057F6                     __ptext63:
 16014                           	opt stack 0
 16015  0057F6                     _isxdigit:
 16016                           	opt stack 12
 16017                           
 16018                           ; BSR set to: 0
 16019                           ;incstack = 0
 16020                           ;isxdigit@c stored from wreg
 16021  0057F6  0100               	movlb	0	; () banked
 16022  0057F8  6F82               	movwf	isxdigit@c& (0+255),b
 16023  0057FA  0E01               	movlw	1
 16024  0057FC  0100               	movlb	0	; () banked
 16025  0057FE  6F81               	movwf	_isxdigit$6415& (0+255),b
 16026                           
 16027                           ; BSR set to: 0
 16028  005800  0E67               	movlw	103
 16029  005802  6182               	cpfslt	isxdigit@c& (0+255),b
 16030  005804  D003               	goto	u10580
 16031                           
 16032                           ; BSR set to: 0
 16033  005806  0E61               	movlw	97
 16034  005808  6182               	cpfslt	isxdigit@c& (0+255),b
 16035  00580A  D00E               	goto	l3310
 16036  00580C                     u10580:
 16037                           
 16038                           ; BSR set to: 0
 16039                           
 16040                           ; BSR set to: 0
 16041  00580C  0E47               	movlw	71
 16042  00580E  6182               	cpfslt	isxdigit@c& (0+255),b
 16043  005810  D003               	goto	u10600
 16044                           
 16045                           ; BSR set to: 0
 16046  005812  0E41               	movlw	65
 16047  005814  6182               	cpfslt	isxdigit@c& (0+255),b
 16048  005816  D008               	goto	l3310
 16049  005818                     u10600:
 16050                           
 16051                           ; BSR set to: 0
 16052                           
 16053                           ; BSR set to: 0
 16054  005818  5182               	movf	isxdigit@c& (0+255),w,b
 16055  00581A  EC76  F02E         	call	_isdigit
 16056  00581E  B0D8               	btfsc	status,0,c
 16057  005820  D003               	goto	l3310
 16058  005822  0E00               	movlw	0
 16059  005824  0100               	movlb	0	; () banked
 16060  005826  6F81               	movwf	_isxdigit$6415& (0+255),b
 16061  005828                     l3310:
 16062                           
 16063                           ; BSR set to: 0
 16064  005828  C081  F080         	movff	_isxdigit$6415,??_isxdigit
 16065  00582C  0100               	movlb	0	; () banked
 16066  00582E  3180               	rrcf	??_isxdigit& (0+255),w,b
 16067  005830  0012               	return	
 16068  005832                     __end_of_isxdigit:
 16069                           	opt stack 0
 16070                           tosu	equ	0xFFF
 16071                           tosh	equ	0xFFE
 16072                           tosl	equ	0xFFD
 16073                           pclath	equ	0xFFA
 16074                           tblptru	equ	0xFF8
 16075                           tblptrh	equ	0xFF7
 16076                           tblptrl	equ	0xFF6
 16077                           tablat	equ	0xFF5
 16078                           prodh	equ	0xFF4
 16079                           prodl	equ	0xFF3
 16080                           intcon	equ	0xFF2
 16081                           intcon2	equ	0xFF1
 16082                           intcon3	equ	0xFF0
 16083                           indf0	equ	0xFEF
 16084                           postinc0	equ	0xFEE
 16085                           plusw0	equ	0xFEB
 16086                           fsr0h	equ	0xFEA
 16087                           fsr0l	equ	0xFE9
 16088                           wreg	equ	0xFE8
 16089                           indf1	equ	0xFE7
 16090                           postinc1	equ	0xFE6
 16091                           postdec1	equ	0xFE5
 16092                           plusw1	equ	0xFE3
 16093                           fsr1h	equ	0xFE2
 16094                           fsr1l	equ	0xFE1
 16095                           indf2	equ	0xFDF
 16096                           postinc2	equ	0xFDE
 16097                           postdec2	equ	0xFDD
 16098                           plusw2	equ	0xFDB
 16099                           fsr2h	equ	0xFDA
 16100                           fsr2l	equ	0xFD9
 16101                           status	equ	0xFD8
 16102                           
 16103 ;; *************** function _strtol *****************
 16104 ;; Defined at:
 16105 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/strtol.c"
 16106 ;; Parameters:    Size  Location     Type
 16107 ;;  s               2   41[BANK0 ] PTR const unsigned char 
 16108 ;;		 -> Terminal@Payload(80), 
 16109 ;;  endptr          2   43[BANK0 ] PTR PTR unsigned char 
 16110 ;;		 -> NULL(0), 
 16111 ;;  base            2   45[BANK0 ] int 
 16112 ;; Auto vars:     Size  Location     Type
 16113 ;;  a               4   52[BANK0 ] long 
 16114 ;;  c               1   56[BANK0 ] unsigned char 
 16115 ;;  sign            1   51[BANK0 ] unsigned char 
 16116 ;; Return value:  Size  Location     Type
 16117 ;;                  4   41[BANK0 ] long 
 16118 ;; Registers used:
 16119 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16120 ;; Tracked objects:
 16121 ;;		On entry : 0/0
 16122 ;;		On exit  : 0/0
 16123 ;;		Unchanged: 0/0
 16124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16125 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16126 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16127 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16128 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16129 ;;Total ram usage:       16 bytes
 16130 ;; Hardware stack levels used:    1
 16131 ;; Hardware stack levels required when called:   13
 16132 ;; This function calls:
 16133 ;;		___lmul
 16134 ;;		_isalpha
 16135 ;;		_isdigit
 16136 ;;		_isspace
 16137 ;;		_toupper
 16138 ;; This function is called by:
 16139 ;;		_Terminal
 16140 ;; This function uses a non-reentrant model
 16141 ;;
 16142                           
 16143                           	psect	text64
 16144  00181C                     __ptext64:
 16145                           	opt stack 0
 16146  00181C                     _strtol:
 16147                           	opt stack 12
 16148                           
 16149                           ; BSR set to: 0
 16150                           ;incstack = 0
 16151  00181C  C089  FFD9         	movff	strtol@s,fsr2l
 16152  001820  C08A  FFDA         	movff	strtol@s+1,fsr2h
 16153  001824  50DF               	movf	indf2,w,c
 16154  001826  0100               	movlb	0	; () banked
 16155  001828  6F98               	movwf	strtol@c& (0+255),b
 16156                           
 16157                           ; BSR set to: 0
 16158  00182A  4B89               	infsnz	strtol@s& (0+255),f,b
 16159  00182C  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 16160                           
 16161                           ; BSR set to: 0
 16162  00182E  5198               	movf	strtol@c& (0+255),w,b
 16163  001830  ECAE  F02D         	call	_isspace
 16164  001834  B0D8               	btfsc	status,0,c
 16165  001836  D7F2               	goto	_strtol
 16166  001838  0E00               	movlw	0
 16167  00183A  0100               	movlb	0	; () banked
 16168  00183C  6F94               	movwf	strtol@a& (0+255),b
 16169  00183E  0E00               	movlw	0
 16170  001840  6F95               	movwf	(strtol@a+1)& (0+255),b
 16171  001842  0E00               	movlw	0
 16172  001844  6F96               	movwf	(strtol@a+2)& (0+255),b
 16173  001846  0E00               	movlw	0
 16174  001848  6F97               	movwf	(strtol@a+3)& (0+255),b
 16175  00184A  0E00               	movlw	0
 16176  00184C  6F93               	movwf	strtol@sign& (0+255),b
 16177                           
 16178                           ; BSR set to: 0
 16179  00184E  0E2D               	movlw	45
 16180  001850  1998               	xorwf	strtol@c& (0+255),w,b
 16181  001852  A4D8               	btfss	status,2,c
 16182  001854  D003               	goto	l3217
 16183                           
 16184                           ; BSR set to: 0
 16185  001856  0E01               	movlw	1
 16186  001858  6F93               	movwf	strtol@sign& (0+255),b
 16187  00185A  D004               	goto	u11040
 16188  00185C                     l3217:
 16189                           
 16190                           ; BSR set to: 0
 16191                           
 16192                           ; BSR set to: 0
 16193  00185C  0E2B               	movlw	43
 16194  00185E  1998               	xorwf	strtol@c& (0+255),w,b
 16195  001860  A4D8               	btfss	status,2,c
 16196  001862  D008               	goto	l3219
 16197  001864                     u11040:
 16198                           
 16199                           ; BSR set to: 0
 16200  001864  C089  FFD9         	movff	strtol@s,fsr2l
 16201  001868  C08A  FFDA         	movff	strtol@s+1,fsr2h
 16202  00186C  50DF               	movf	indf2,w,c
 16203  00186E  6F98               	movwf	strtol@c& (0+255),b
 16204                           
 16205                           ; BSR set to: 0
 16206  001870  4B89               	infsnz	strtol@s& (0+255),f,b
 16207  001872  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 16208  001874                     l3219:
 16209                           
 16210                           ; BSR set to: 0
 16211                           
 16212                           ; BSR set to: 0
 16213                           
 16214                           ; BSR set to: 0
 16215  001874  0E30               	movlw	48
 16216  001876  1998               	xorwf	strtol@c& (0+255),w,b
 16217  001878  A4D8               	btfss	status,2,c
 16218  00187A  D02E               	goto	l3227
 16219                           
 16220                           ; BSR set to: 0
 16221  00187C  C089  FFD9         	movff	strtol@s,fsr2l
 16222  001880  C08A  FFDA         	movff	strtol@s+1,fsr2h
 16223  001884  50DF               	movf	indf2,w,c
 16224  001886  6F98               	movwf	strtol@c& (0+255),b
 16225                           
 16226                           ; BSR set to: 0
 16227  001888  4B89               	infsnz	strtol@s& (0+255),f,b
 16228  00188A  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 16229                           
 16230                           ; BSR set to: 0
 16231  00188C  518D               	movf	strtol@base& (0+255),w,b
 16232  00188E  118E               	iorwf	(strtol@base+1)& (0+255),w,b
 16233  001890  B4D8               	btfsc	status,2,c
 16234  001892  D005               	goto	u11070
 16235                           
 16236                           ; BSR set to: 0
 16237  001894  0E10               	movlw	16
 16238  001896  198D               	xorwf	strtol@base& (0+255),w,b
 16239  001898  118E               	iorwf	(strtol@base+1)& (0+255),w,b
 16240  00189A  A4D8               	btfss	status,2,c
 16241  00189C  D015               	goto	l3221
 16242  00189E                     u11070:
 16243                           
 16244                           ; BSR set to: 0
 16245                           
 16246                           ; BSR set to: 0
 16247  00189E  0E78               	movlw	120
 16248  0018A0  1998               	xorwf	strtol@c& (0+255),w,b
 16249  0018A2  B4D8               	btfsc	status,2,c
 16250  0018A4  D004               	goto	u11090
 16251                           
 16252                           ; BSR set to: 0
 16253  0018A6  0E58               	movlw	88
 16254  0018A8  1998               	xorwf	strtol@c& (0+255),w,b
 16255  0018AA  A4D8               	btfss	status,2,c
 16256  0018AC  D00D               	goto	l3221
 16257  0018AE                     u11090:
 16258                           
 16259                           ; BSR set to: 0
 16260                           
 16261                           ; BSR set to: 0
 16262  0018AE  0E00               	movlw	0
 16263  0018B0  6F8E               	movwf	(strtol@base+1)& (0+255),b
 16264  0018B2  0E10               	movlw	16
 16265  0018B4  6F8D               	movwf	strtol@base& (0+255),b
 16266                           
 16267                           ; BSR set to: 0
 16268  0018B6  C089  FFD9         	movff	strtol@s,fsr2l
 16269  0018BA  C08A  FFDA         	movff	strtol@s+1,fsr2h
 16270  0018BE  50DF               	movf	indf2,w,c
 16271  0018C0  6F98               	movwf	strtol@c& (0+255),b
 16272                           
 16273                           ; BSR set to: 0
 16274  0018C2  4B89               	infsnz	strtol@s& (0+255),f,b
 16275  0018C4  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 16276  0018C6  D008               	goto	l3227
 16277  0018C8                     l3221:
 16278                           
 16279                           ; BSR set to: 0
 16280                           
 16281                           ; BSR set to: 0
 16282  0018C8  518D               	movf	strtol@base& (0+255),w,b
 16283  0018CA  118E               	iorwf	(strtol@base+1)& (0+255),w,b
 16284  0018CC  A4D8               	btfss	status,2,c
 16285  0018CE  D004               	goto	l3227
 16286                           
 16287                           ; BSR set to: 0
 16288  0018D0  0E00               	movlw	0
 16289  0018D2  6F8E               	movwf	(strtol@base+1)& (0+255),b
 16290  0018D4  0E08               	movlw	8
 16291  0018D6  6F8D               	movwf	strtol@base& (0+255),b
 16292  0018D8                     l3227:
 16293                           
 16294                           ; BSR set to: 0
 16295                           
 16296                           ; BSR set to: 0
 16297                           
 16298                           ; BSR set to: 0
 16299                           
 16300                           ; BSR set to: 0
 16301  0018D8  518D               	movf	strtol@base& (0+255),w,b
 16302  0018DA  118E               	iorwf	(strtol@base+1)& (0+255),w,b
 16303  0018DC  A4D8               	btfss	status,2,c
 16304  0018DE  D004               	goto	l3228
 16305                           
 16306                           ; BSR set to: 0
 16307  0018E0  0E00               	movlw	0
 16308  0018E2  6F8E               	movwf	(strtol@base+1)& (0+255),b
 16309  0018E4  0E0A               	movlw	10
 16310  0018E6  6F8D               	movwf	strtol@base& (0+255),b
 16311  0018E8                     l3228:
 16312                           
 16313                           ; BSR set to: 0
 16314                           
 16315                           ; BSR set to: 0
 16316                           
 16317                           ; BSR set to: 0
 16318  0018E8  5198               	movf	strtol@c& (0+255),w,b
 16319  0018EA  EC25  F02D         	call	_isalpha
 16320  0018EE  A0D8               	btfss	status,0,c
 16321  0018F0  D008               	goto	l3230
 16322  0018F2  0100               	movlb	0	; () banked
 16323  0018F4  5198               	movf	strtol@c& (0+255),w,b
 16324  0018F6  EC18  F02F         	call	_toupper
 16325  0018FA  0FC9               	addlw	201
 16326  0018FC  0100               	movlb	0	; () banked
 16327  0018FE  6F98               	movwf	strtol@c& (0+255),b
 16328  001900  D009               	goto	l3233
 16329  001902                     l3230:
 16330                           
 16331                           ; BSR set to: 0
 16332  001902  0100               	movlb	0	; () banked
 16333  001904  5198               	movf	strtol@c& (0+255),w,b
 16334  001906  EC76  F02E         	call	_isdigit
 16335  00190A  A0D8               	btfss	status,0,c
 16336  00190C  D039               	goto	l3234
 16337  00190E  0E30               	movlw	48
 16338  001910  0100               	movlb	0	; () banked
 16339  001912  5F98               	subwf	strtol@c& (0+255),f,b
 16340  001914                     l3233:
 16341                           
 16342                           ; BSR set to: 0
 16343                           
 16344                           ; BSR set to: 0
 16345                           
 16346                           ; BSR set to: 0
 16347  001914  5198               	movf	strtol@c& (0+255),w,b
 16348  001916  6F8F               	movwf	??_strtol& (0+255),b
 16349  001918  6B90               	clrf	(??_strtol+1)& (0+255),b
 16350  00191A  518D               	movf	strtol@base& (0+255),w,b
 16351  00191C  5D8F               	subwf	??_strtol& (0+255),w,b
 16352  00191E  5190               	movf	(??_strtol+1)& (0+255),w,b
 16353  001920  0A80               	xorlw	128
 16354  001922  6F91               	movwf	(??_strtol+2)& (0+255),b
 16355  001924  518E               	movf	(strtol@base+1)& (0+255),w,b
 16356  001926  0A80               	xorlw	128
 16357  001928  5991               	subwfb	(??_strtol+2)& (0+255),w,b
 16358  00192A  B0D8               	btfsc	status,0,c
 16359  00192C  D029               	goto	l3234
 16360                           
 16361                           ; BSR set to: 0
 16362                           
 16363                           ; BSR set to: 0
 16364                           
 16365                           ; BSR set to: 0
 16366  00192E  C08D  F07D         	movff	strtol@base,___lmul@multiplier
 16367  001932  C08E  F07E         	movff	strtol@base+1,___lmul@multiplier+1
 16368  001936  0E00               	movlw	0
 16369  001938  BF7E               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
 16370  00193A  0EFF               	movlw	-1
 16371  00193C  6F7F               	movwf	(___lmul@multiplier+2)& (0+255),b
 16372  00193E  6F80               	movwf	(___lmul@multiplier+3)& (0+255),b
 16373  001940  C094  F081         	movff	strtol@a,___lmul@multiplicand
 16374  001944  C095  F082         	movff	strtol@a+1,___lmul@multiplicand+1
 16375  001948  C096  F083         	movff	strtol@a+2,___lmul@multiplicand+2
 16376  00194C  C097  F084         	movff	strtol@a+3,___lmul@multiplicand+3
 16377  001950  ECE9  F027         	call	___lmul	;wreg free
 16378  001954  0100               	movlb	0	; () banked
 16379  001956  5198               	movf	strtol@c& (0+255),w,b
 16380  001958  257D               	addwf	?___lmul& (0+255),w,b
 16381  00195A  6F94               	movwf	strtol@a& (0+255),b
 16382  00195C  0E00               	movlw	0
 16383  00195E  217E               	addwfc	(?___lmul+1)& (0+255),w,b
 16384  001960  6F95               	movwf	(strtol@a+1)& (0+255),b
 16385  001962  0E00               	movlw	0
 16386  001964  217F               	addwfc	(?___lmul+2)& (0+255),w,b
 16387  001966  6F96               	movwf	(strtol@a+2)& (0+255),b
 16388  001968  0E00               	movlw	0
 16389  00196A  2180               	addwfc	(?___lmul+3)& (0+255),w,b
 16390  00196C  6F97               	movwf	(strtol@a+3)& (0+255),b
 16391                           
 16392                           ; BSR set to: 0
 16393  00196E  C089  FFD9         	movff	strtol@s,fsr2l
 16394  001972  C08A  FFDA         	movff	strtol@s+1,fsr2h
 16395  001976  50DF               	movf	indf2,w,c
 16396  001978  6F98               	movwf	strtol@c& (0+255),b
 16397                           
 16398                           ; BSR set to: 0
 16399  00197A  4B89               	infsnz	strtol@s& (0+255),f,b
 16400  00197C  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 16401  00197E  D7B4               	goto	l3228
 16402  001980                     l3234:
 16403                           
 16404                           ; BSR set to: 0
 16405  001980  0100               	movlb	0	; () banked
 16406  001982  518B               	movf	strtol@endptr& (0+255),w,b
 16407  001984  118C               	iorwf	(strtol@endptr+1)& (0+255),w,b
 16408  001986  B4D8               	btfsc	status,2,c
 16409  001988  D00E               	goto	l3236
 16410                           
 16411                           ; BSR set to: 0
 16412  00198A  0EFF               	movlw	255
 16413  00198C  2589               	addwf	strtol@s& (0+255),w,b
 16414  00198E  6F8F               	movwf	??_strtol& (0+255),b
 16415  001990  0EFF               	movlw	255
 16416  001992  218A               	addwfc	(strtol@s+1)& (0+255),w,b
 16417  001994  6F90               	movwf	(??_strtol+1)& (0+255),b
 16418  001996  C08B  FFD9         	movff	strtol@endptr,fsr2l
 16419  00199A  C08C  FFDA         	movff	strtol@endptr+1,fsr2h
 16420  00199E  C08F  FFDE         	movff	??_strtol,postinc2
 16421  0019A2  C090  FFDD         	movff	??_strtol+1,postdec2
 16422  0019A6                     l3236:
 16423                           
 16424                           ; BSR set to: 0
 16425                           
 16426                           ; BSR set to: 0
 16427  0019A6  5193               	movf	strtol@sign& (0+255),w,b
 16428  0019A8  B4D8               	btfsc	status,2,c
 16429  0019AA  D01A               	goto	l3237
 16430                           
 16431                           ; BSR set to: 0
 16432  0019AC  C094  F08F         	movff	strtol@a,??_strtol
 16433  0019B0  C095  F090         	movff	strtol@a+1,??_strtol+1
 16434  0019B4  C096  F091         	movff	strtol@a+2,??_strtol+2
 16435  0019B8  C097  F092         	movff	strtol@a+3,??_strtol+3
 16436  0019BC  1F8F               	comf	??_strtol& (0+255),f,b
 16437  0019BE  1F90               	comf	(??_strtol+1)& (0+255),f,b
 16438  0019C0  1F91               	comf	(??_strtol+2)& (0+255),f,b
 16439  0019C2  1F92               	comf	(??_strtol+3)& (0+255),f,b
 16440  0019C4  2B8F               	incf	??_strtol& (0+255),f,b
 16441  0019C6  0E00               	movlw	0
 16442  0019C8  2390               	addwfc	(??_strtol+1)& (0+255),f,b
 16443  0019CA  2391               	addwfc	(??_strtol+2)& (0+255),f,b
 16444  0019CC  2392               	addwfc	(??_strtol+3)& (0+255),f,b
 16445  0019CE  C08F  F089         	movff	??_strtol,?_strtol
 16446  0019D2  C090  F08A         	movff	??_strtol+1,?_strtol+1
 16447  0019D6  C091  F08B         	movff	??_strtol+2,?_strtol+2
 16448  0019DA  C092  F08C         	movff	??_strtol+3,?_strtol+3
 16449                           
 16450                           ; BSR set to: 0
 16451  0019DE  0012               	return	
 16452  0019E0                     l3237:
 16453                           
 16454                           ; BSR set to: 0
 16455  0019E0  C094  F089         	movff	strtol@a,?_strtol
 16456  0019E4  C095  F08A         	movff	strtol@a+1,?_strtol+1
 16457  0019E8  C096  F08B         	movff	strtol@a+2,?_strtol+2
 16458  0019EC  C097  F08C         	movff	strtol@a+3,?_strtol+3
 16459                           
 16460                           ; BSR set to: 0
 16461  0019F0  0012               	return		;funcret
 16462  0019F2                     __end_of_strtol:
 16463                           	opt stack 0
 16464                           tosu	equ	0xFFF
 16465                           tosh	equ	0xFFE
 16466                           tosl	equ	0xFFD
 16467                           pclath	equ	0xFFA
 16468                           tblptru	equ	0xFF8
 16469                           tblptrh	equ	0xFF7
 16470                           tblptrl	equ	0xFF6
 16471                           tablat	equ	0xFF5
 16472                           prodh	equ	0xFF4
 16473                           prodl	equ	0xFF3
 16474                           intcon	equ	0xFF2
 16475                           intcon2	equ	0xFF1
 16476                           intcon3	equ	0xFF0
 16477                           indf0	equ	0xFEF
 16478                           postinc0	equ	0xFEE
 16479                           plusw0	equ	0xFEB
 16480                           fsr0h	equ	0xFEA
 16481                           fsr0l	equ	0xFE9
 16482                           wreg	equ	0xFE8
 16483                           indf1	equ	0xFE7
 16484                           postinc1	equ	0xFE6
 16485                           postdec1	equ	0xFE5
 16486                           plusw1	equ	0xFE3
 16487                           fsr1h	equ	0xFE2
 16488                           fsr1l	equ	0xFE1
 16489                           indf2	equ	0xFDF
 16490                           postinc2	equ	0xFDE
 16491                           postdec2	equ	0xFDD
 16492                           plusw2	equ	0xFDB
 16493                           fsr2h	equ	0xFDA
 16494                           fsr2l	equ	0xFD9
 16495                           status	equ	0xFD8
 16496                           
 16497 ;; *************** function _toupper *****************
 16498 ;; Defined at:
 16499 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/toupper.c"
 16500 ;; Parameters:    Size  Location     Type
 16501 ;;  c               1    wreg     unsigned char 
 16502 ;; Auto vars:     Size  Location     Type
 16503 ;;  c               1   29[BANK0 ] unsigned char 
 16504 ;; Return value:  Size  Location     Type
 16505 ;;                  1    wreg      unsigned char 
 16506 ;; Registers used:
 16507 ;;		wreg, status,2, status,0
 16508 ;; Tracked objects:
 16509 ;;		On entry : 0/0
 16510 ;;		On exit  : 0/0
 16511 ;;		Unchanged: 0/0
 16512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16513 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16514 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16516 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16517 ;;Total ram usage:        1 bytes
 16518 ;; Hardware stack levels used:    1
 16519 ;; Hardware stack levels required when called:   11
 16520 ;; This function calls:
 16521 ;;		Nothing
 16522 ;; This function is called by:
 16523 ;;		_strtol
 16524 ;; This function uses a non-reentrant model
 16525 ;;
 16526                           
 16527                           	psect	text65
 16528  005E30                     __ptext65:
 16529                           	opt stack 0
 16530  005E30                     _toupper:
 16531                           	opt stack 13
 16532                           
 16533                           ; BSR set to: 0
 16534                           ;incstack = 0
 16535                           ;toupper@c stored from wreg
 16536  005E30  0100               	movlb	0	; () banked
 16537  005E32  6F7D               	movwf	toupper@c& (0+255),b
 16538  005E34  0E7B               	movlw	123
 16539  005E36  0100               	movlb	0	; () banked
 16540  005E38  617D               	cpfslt	toupper@c& (0+255),b
 16541  005E3A  D004               	goto	l3241
 16542                           
 16543                           ; BSR set to: 0
 16544  005E3C  0E60               	movlw	96
 16545  005E3E  657D               	cpfsgt	toupper@c& (0+255),b
 16546  005E40  D001               	goto	l3241
 16547                           
 16548                           ; BSR set to: 0
 16549  005E42  9B7D               	bcf	toupper@c& (0+255),5,b
 16550  005E44                     l3241:
 16551                           
 16552                           ; BSR set to: 0
 16553                           
 16554                           ; BSR set to: 0
 16555  005E44  517D               	movf	toupper@c& (0+255),w,b
 16556  005E46  0012               	return	
 16557  005E48                     __end_of_toupper:
 16558                           	opt stack 0
 16559                           tosu	equ	0xFFF
 16560                           tosh	equ	0xFFE
 16561                           tosl	equ	0xFFD
 16562                           pclath	equ	0xFFA
 16563                           tblptru	equ	0xFF8
 16564                           tblptrh	equ	0xFF7
 16565                           tblptrl	equ	0xFF6
 16566                           tablat	equ	0xFF5
 16567                           prodh	equ	0xFF4
 16568                           prodl	equ	0xFF3
 16569                           intcon	equ	0xFF2
 16570                           intcon2	equ	0xFF1
 16571                           intcon3	equ	0xFF0
 16572                           indf0	equ	0xFEF
 16573                           postinc0	equ	0xFEE
 16574                           plusw0	equ	0xFEB
 16575                           fsr0h	equ	0xFEA
 16576                           fsr0l	equ	0xFE9
 16577                           wreg	equ	0xFE8
 16578                           indf1	equ	0xFE7
 16579                           postinc1	equ	0xFE6
 16580                           postdec1	equ	0xFE5
 16581                           plusw1	equ	0xFE3
 16582                           fsr1h	equ	0xFE2
 16583                           fsr1l	equ	0xFE1
 16584                           indf2	equ	0xFDF
 16585                           postinc2	equ	0xFDE
 16586                           postdec2	equ	0xFDD
 16587                           plusw2	equ	0xFDB
 16588                           fsr2h	equ	0xFDA
 16589                           fsr2l	equ	0xFD9
 16590                           status	equ	0xFD8
 16591                           
 16592 ;; *************** function _isspace *****************
 16593 ;; Defined at:
 16594 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isspace.c"
 16595 ;; Parameters:    Size  Location     Type
 16596 ;;  c               1    wreg     unsigned char 
 16597 ;; Auto vars:     Size  Location     Type
 16598 ;;  c               1   31[BANK0 ] unsigned char 
 16599 ;; Return value:  Size  Location     Type
 16600 ;;		None               void
 16601 ;; Registers used:
 16602 ;;		wreg, status,2, status,0
 16603 ;; Tracked objects:
 16604 ;;		On entry : 0/0
 16605 ;;		On exit  : 0/0
 16606 ;;		Unchanged: 0/0
 16607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16608 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16609 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16610 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16611 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16612 ;;Total ram usage:        3 bytes
 16613 ;; Hardware stack levels used:    1
 16614 ;; Hardware stack levels required when called:   11
 16615 ;; This function calls:
 16616 ;;		Nothing
 16617 ;; This function is called by:
 16618 ;;		_strtol
 16619 ;;		_xtoi
 16620 ;; This function uses a non-reentrant model
 16621 ;;
 16622                           
 16623                           	psect	text66
 16624  005B5C                     __ptext66:
 16625                           	opt stack 0
 16626  005B5C                     _isspace:
 16627                           	opt stack 13
 16628                           
 16629                           ; BSR set to: 0
 16630                           ;incstack = 0
 16631                           ;isspace@c stored from wreg
 16632  005B5C  0100               	movlb	0	; () banked
 16633  005B5E  6F7F               	movwf	isspace@c& (0+255),b
 16634  005B60  0E01               	movlw	1
 16635  005B62  0100               	movlb	0	; () banked
 16636  005B64  6F7E               	movwf	_isspace$6408& (0+255),b
 16637                           
 16638                           ; BSR set to: 0
 16639  005B66  0E20               	movlw	32
 16640  005B68  197F               	xorwf	isspace@c& (0+255),w,b
 16641  005B6A  B4D8               	btfsc	status,2,c
 16642  005B6C  D008               	goto	l3298
 16643                           
 16644                           ; BSR set to: 0
 16645  005B6E  0E0E               	movlw	14
 16646  005B70  617F               	cpfslt	isspace@c& (0+255),b
 16647  005B72  D003               	goto	u10490
 16648                           
 16649                           ; BSR set to: 0
 16650  005B74  0E09               	movlw	9
 16651  005B76  617F               	cpfslt	isspace@c& (0+255),b
 16652  005B78  D002               	goto	l3298
 16653  005B7A                     u10490:
 16654                           
 16655                           ; BSR set to: 0
 16656                           
 16657                           ; BSR set to: 0
 16658  005B7A  0E00               	movlw	0
 16659  005B7C  6F7E               	movwf	_isspace$6408& (0+255),b
 16660  005B7E                     l3298:
 16661                           
 16662                           ; BSR set to: 0
 16663                           
 16664                           ; BSR set to: 0
 16665  005B7E  C07E  F07D         	movff	_isspace$6408,??_isspace
 16666  005B82  317D               	rrcf	??_isspace& (0+255),w,b
 16667  005B84  0012               	return	
 16668  005B86                     __end_of_isspace:
 16669                           	opt stack 0
 16670                           tosu	equ	0xFFF
 16671                           tosh	equ	0xFFE
 16672                           tosl	equ	0xFFD
 16673                           pclath	equ	0xFFA
 16674                           tblptru	equ	0xFF8
 16675                           tblptrh	equ	0xFF7
 16676                           tblptrl	equ	0xFF6
 16677                           tablat	equ	0xFF5
 16678                           prodh	equ	0xFF4
 16679                           prodl	equ	0xFF3
 16680                           intcon	equ	0xFF2
 16681                           intcon2	equ	0xFF1
 16682                           intcon3	equ	0xFF0
 16683                           indf0	equ	0xFEF
 16684                           postinc0	equ	0xFEE
 16685                           plusw0	equ	0xFEB
 16686                           fsr0h	equ	0xFEA
 16687                           fsr0l	equ	0xFE9
 16688                           wreg	equ	0xFE8
 16689                           indf1	equ	0xFE7
 16690                           postinc1	equ	0xFE6
 16691                           postdec1	equ	0xFE5
 16692                           plusw1	equ	0xFE3
 16693                           fsr1h	equ	0xFE2
 16694                           fsr1l	equ	0xFE1
 16695                           indf2	equ	0xFDF
 16696                           postinc2	equ	0xFDE
 16697                           postdec2	equ	0xFDD
 16698                           plusw2	equ	0xFDB
 16699                           fsr2h	equ	0xFDA
 16700                           fsr2l	equ	0xFD9
 16701                           status	equ	0xFD8
 16702                           
 16703 ;; *************** function _isalpha *****************
 16704 ;; Defined at:
 16705 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isalpha.c"
 16706 ;; Parameters:    Size  Location     Type
 16707 ;;  c               1    wreg     unsigned char 
 16708 ;; Auto vars:     Size  Location     Type
 16709 ;;  c               1   34[BANK0 ] unsigned char 
 16710 ;; Return value:  Size  Location     Type
 16711 ;;		None               void
 16712 ;; Registers used:
 16713 ;;		wreg, status,2, status,0, cstack
 16714 ;; Tracked objects:
 16715 ;;		On entry : 0/0
 16716 ;;		On exit  : 0/0
 16717 ;;		Unchanged: 0/0
 16718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16719 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16720 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16721 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16722 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16723 ;;Total ram usage:        3 bytes
 16724 ;; Hardware stack levels used:    1
 16725 ;; Hardware stack levels required when called:   12
 16726 ;; This function calls:
 16727 ;;		_isupper
 16728 ;; This function is called by:
 16729 ;;		_strtol
 16730 ;; This function uses a non-reentrant model
 16731 ;;
 16732                           
 16733                           	psect	text67
 16734  005A4A                     __ptext67:
 16735                           	opt stack 0
 16736  005A4A                     _isalpha:
 16737                           	opt stack 12
 16738                           
 16739                           ; BSR set to: 0
 16740                           ;incstack = 0
 16741                           ;isalpha@c stored from wreg
 16742  005A4A  0100               	movlb	0	; () banked
 16743  005A4C  6F82               	movwf	isalpha@c& (0+255),b
 16744  005A4E  0E01               	movlw	1
 16745  005A50  0100               	movlb	0	; () banked
 16746  005A52  6F81               	movwf	_isalpha$6405& (0+255),b
 16747                           
 16748                           ; BSR set to: 0
 16749  005A54  0E7B               	movlw	123
 16750  005A56  6182               	cpfslt	isalpha@c& (0+255),b
 16751  005A58  D003               	goto	u10510
 16752                           
 16753                           ; BSR set to: 0
 16754  005A5A  0E61               	movlw	97
 16755  005A5C  6182               	cpfslt	isalpha@c& (0+255),b
 16756  005A5E  D008               	goto	l3293
 16757  005A60                     u10510:
 16758                           
 16759                           ; BSR set to: 0
 16760                           
 16761                           ; BSR set to: 0
 16762  005A60  5182               	movf	isalpha@c& (0+255),w,b
 16763  005A62  EC54  F02E         	call	_isupper
 16764  005A66  B0D8               	btfsc	status,0,c
 16765  005A68  D003               	goto	l3293
 16766  005A6A  0E00               	movlw	0
 16767  005A6C  0100               	movlb	0	; () banked
 16768  005A6E  6F81               	movwf	_isalpha$6405& (0+255),b
 16769  005A70                     l3293:
 16770                           
 16771                           ; BSR set to: 0
 16772  005A70  C081  F080         	movff	_isalpha$6405,??_isalpha
 16773  005A74  0100               	movlb	0	; () banked
 16774  005A76  3180               	rrcf	??_isalpha& (0+255),w,b
 16775  005A78  0012               	return	
 16776  005A7A                     __end_of_isalpha:
 16777                           	opt stack 0
 16778                           tosu	equ	0xFFF
 16779                           tosh	equ	0xFFE
 16780                           tosl	equ	0xFFD
 16781                           pclath	equ	0xFFA
 16782                           tblptru	equ	0xFF8
 16783                           tblptrh	equ	0xFF7
 16784                           tblptrl	equ	0xFF6
 16785                           tablat	equ	0xFF5
 16786                           prodh	equ	0xFF4
 16787                           prodl	equ	0xFF3
 16788                           intcon	equ	0xFF2
 16789                           intcon2	equ	0xFF1
 16790                           intcon3	equ	0xFF0
 16791                           indf0	equ	0xFEF
 16792                           postinc0	equ	0xFEE
 16793                           plusw0	equ	0xFEB
 16794                           fsr0h	equ	0xFEA
 16795                           fsr0l	equ	0xFE9
 16796                           wreg	equ	0xFE8
 16797                           indf1	equ	0xFE7
 16798                           postinc1	equ	0xFE6
 16799                           postdec1	equ	0xFE5
 16800                           plusw1	equ	0xFE3
 16801                           fsr1h	equ	0xFE2
 16802                           fsr1l	equ	0xFE1
 16803                           indf2	equ	0xFDF
 16804                           postinc2	equ	0xFDE
 16805                           postdec2	equ	0xFDD
 16806                           plusw2	equ	0xFDB
 16807                           fsr2h	equ	0xFDA
 16808                           fsr2l	equ	0xFD9
 16809                           status	equ	0xFD8
 16810                           
 16811 ;; *************** function _isupper *****************
 16812 ;; Defined at:
 16813 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isupper.c"
 16814 ;; Parameters:    Size  Location     Type
 16815 ;;  c               1    wreg     unsigned char 
 16816 ;; Auto vars:     Size  Location     Type
 16817 ;;  c               1   31[BANK0 ] unsigned char 
 16818 ;; Return value:  Size  Location     Type
 16819 ;;		None               void
 16820 ;; Registers used:
 16821 ;;		wreg, status,2, status,0
 16822 ;; Tracked objects:
 16823 ;;		On entry : 0/0
 16824 ;;		On exit  : 0/0
 16825 ;;		Unchanged: 0/0
 16826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16827 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16828 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16829 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16830 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16831 ;;Total ram usage:        3 bytes
 16832 ;; Hardware stack levels used:    1
 16833 ;; Hardware stack levels required when called:   11
 16834 ;; This function calls:
 16835 ;;		Nothing
 16836 ;; This function is called by:
 16837 ;;		_xtoi
 16838 ;;		_isalpha
 16839 ;; This function uses a non-reentrant model
 16840 ;;
 16841                           
 16842                           	psect	text68
 16843  005CA8                     __ptext68:
 16844                           	opt stack 0
 16845  005CA8                     _isupper:
 16846                           	opt stack 13
 16847                           
 16848                           ; BSR set to: 0
 16849                           ;incstack = 0
 16850                           ;isupper@c stored from wreg
 16851  005CA8  0100               	movlb	0	; () banked
 16852  005CAA  6F7F               	movwf	isupper@c& (0+255),b
 16853  005CAC  0E00               	movlw	0
 16854  005CAE  0100               	movlb	0	; () banked
 16855  005CB0  6F7E               	movwf	_isupper$6411& (0+255),b
 16856                           
 16857                           ; BSR set to: 0
 16858  005CB2  0E5B               	movlw	91
 16859  005CB4  617F               	cpfslt	isupper@c& (0+255),b
 16860  005CB6  D005               	goto	l3303
 16861                           
 16862                           ; BSR set to: 0
 16863  005CB8  0E40               	movlw	64
 16864  005CBA  657F               	cpfsgt	isupper@c& (0+255),b
 16865  005CBC  D002               	goto	l3303
 16866                           
 16867                           ; BSR set to: 0
 16868  005CBE  0E01               	movlw	1
 16869  005CC0  6F7E               	movwf	_isupper$6411& (0+255),b
 16870  005CC2                     l3303:
 16871                           
 16872                           ; BSR set to: 0
 16873                           
 16874                           ; BSR set to: 0
 16875  005CC2  C07E  F07D         	movff	_isupper$6411,??_isupper
 16876  005CC6  317D               	rrcf	??_isupper& (0+255),w,b
 16877  005CC8  0012               	return	
 16878  005CCA                     __end_of_isupper:
 16879                           	opt stack 0
 16880                           tosu	equ	0xFFF
 16881                           tosh	equ	0xFFE
 16882                           tosl	equ	0xFFD
 16883                           pclath	equ	0xFFA
 16884                           tblptru	equ	0xFF8
 16885                           tblptrh	equ	0xFF7
 16886                           tblptrl	equ	0xFF6
 16887                           tablat	equ	0xFF5
 16888                           prodh	equ	0xFF4
 16889                           prodl	equ	0xFF3
 16890                           intcon	equ	0xFF2
 16891                           intcon2	equ	0xFF1
 16892                           intcon3	equ	0xFF0
 16893                           indf0	equ	0xFEF
 16894                           postinc0	equ	0xFEE
 16895                           plusw0	equ	0xFEB
 16896                           fsr0h	equ	0xFEA
 16897                           fsr0l	equ	0xFE9
 16898                           wreg	equ	0xFE8
 16899                           indf1	equ	0xFE7
 16900                           postinc1	equ	0xFE6
 16901                           postdec1	equ	0xFE5
 16902                           plusw1	equ	0xFE3
 16903                           fsr1h	equ	0xFE2
 16904                           fsr1l	equ	0xFE1
 16905                           indf2	equ	0xFDF
 16906                           postinc2	equ	0xFDE
 16907                           postdec2	equ	0xFDD
 16908                           plusw2	equ	0xFDB
 16909                           fsr2h	equ	0xFDA
 16910                           fsr2l	equ	0xFD9
 16911                           status	equ	0xFD8
 16912                           
 16913 ;; *************** function _strcpy *****************
 16914 ;; Defined at:
 16915 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/strcpy.c"
 16916 ;; Parameters:    Size  Location     Type
 16917 ;;  to              2   29[BANK0 ] PTR unsigned char 
 16918 ;;		 -> Term_MainSm@Data(50), Terminal@UsbTxBuffer(200), 
 16919 ;;  from            2   31[BANK0 ] PTR const unsigned char 
 16920 ;;		 -> STR_23(20), STR_21(42), 
 16921 ;; Auto vars:     Size  Location     Type
 16922 ;;  cp              2   33[BANK0 ] PTR unsigned char 
 16923 ;;		 -> Term_MainSm@Data(50), Terminal@UsbTxBuffer(200), 
 16924 ;; Return value:  Size  Location     Type
 16925 ;;                  2   29[BANK0 ] PTR unsigned char 
 16926 ;; Registers used:
 16927 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 16928 ;; Tracked objects:
 16929 ;;		On entry : 0/0
 16930 ;;		On exit  : 0/0
 16931 ;;		Unchanged: 0/0
 16932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16933 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16934 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16936 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16937 ;;Total ram usage:        6 bytes
 16938 ;; Hardware stack levels used:    1
 16939 ;; Hardware stack levels required when called:   11
 16940 ;; This function calls:
 16941 ;;		Nothing
 16942 ;; This function is called by:
 16943 ;;		_Terminal
 16944 ;;		_Term_MainSm
 16945 ;; This function uses a non-reentrant model
 16946 ;;
 16947                           
 16948                           	psect	text69
 16949  0059B8                     __ptext69:
 16950                           	opt stack 0
 16951  0059B8                     _strcpy:
 16952                           	opt stack 15
 16953                           
 16954                           ; BSR set to: 0
 16955                           ;incstack = 0
 16956  0059B8  C07D  F081         	movff	strcpy@to,strcpy@cp
 16957  0059BC  C07E  F082         	movff	strcpy@to+1,strcpy@cp+1
 16958  0059C0  D005               	goto	l3195
 16959  0059C2  0100               	movlb	0	; () banked
 16960  0059C4  4B81               	infsnz	strcpy@cp& (0+255),f,b
 16961  0059C6  2B82               	incf	(strcpy@cp+1)& (0+255),f,b
 16962  0059C8  4B7F               	infsnz	strcpy@from& (0+255),f,b
 16963  0059CA  2B80               	incf	(strcpy@from+1)& (0+255),f,b
 16964  0059CC                     l3195:
 16965                           
 16966                           ; BSR set to: 0
 16967  0059CC  C07F  FFF6         	movff	strcpy@from,tblptrl
 16968  0059D0  C080  FFF7         	movff	strcpy@from+1,tblptrh
 16969  0059D4                     	if	0	;tblptru may be non-zero
 16970  0059D4                     	endif
 16971  0059D4                     	if	0	;tblptru may be non-zero
 16972  0059D4                     	endif
 16973  0059D4  C081  FFD9         	movff	strcpy@cp,fsr2l
 16974  0059D8  C082  FFDA         	movff	strcpy@cp+1,fsr2h
 16975  0059DC  0008               	tblrd		*
 16976  0059DE  CFF5 FFDF          	movff	tablat,indf2
 16977  0059E2  50DF               	movf	indf2,w,c
 16978  0059E4  B4D8               	btfsc	status,2,c
 16979  0059E6  0012               	return	
 16980  0059E8  D7EC               	goto	l3196
 16981  0059EA                     __end_of_strcpy:
 16982                           	opt stack 0
 16983                           tosu	equ	0xFFF
 16984                           tosh	equ	0xFFE
 16985                           tosl	equ	0xFFD
 16986                           pclath	equ	0xFFA
 16987                           tblptru	equ	0xFF8
 16988                           tblptrh	equ	0xFF7
 16989                           tblptrl	equ	0xFF6
 16990                           tablat	equ	0xFF5
 16991                           prodh	equ	0xFF4
 16992                           prodl	equ	0xFF3
 16993                           intcon	equ	0xFF2
 16994                           intcon2	equ	0xFF1
 16995                           intcon3	equ	0xFF0
 16996                           indf0	equ	0xFEF
 16997                           postinc0	equ	0xFEE
 16998                           plusw0	equ	0xFEB
 16999                           fsr0h	equ	0xFEA
 17000                           fsr0l	equ	0xFE9
 17001                           wreg	equ	0xFE8
 17002                           indf1	equ	0xFE7
 17003                           postinc1	equ	0xFE6
 17004                           postdec1	equ	0xFE5
 17005                           plusw1	equ	0xFE3
 17006                           fsr1h	equ	0xFE2
 17007                           fsr1l	equ	0xFE1
 17008                           indf2	equ	0xFDF
 17009                           postinc2	equ	0xFDE
 17010                           postdec2	equ	0xFDD
 17011                           plusw2	equ	0xFDB
 17012                           fsr2h	equ	0xFDA
 17013                           fsr2l	equ	0xFD9
 17014                           status	equ	0xFD8
 17015                           
 17016 ;; *************** function _putUSBUSART *****************
 17017 ;; Defined at:
 17018 ;;		line 559 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 17019 ;; Parameters:    Size  Location     Type
 17020 ;;  data            2   35[BANK0 ] PTR unsigned char 
 17021 ;;		 -> MsgReady(23), Term_MainSm@Data(50), MsgFormat(240), Welcome(137), 
 17022 ;;		 -> Terminal@UsbTxBuffer(200), Terminal@TermRxBuffer(50), Terminal@Payload(80), Terminal@UsbRxBuffer(200), 
 17023 ;;		 -> RxBuffer(400), 
 17024 ;;  length          1   37[BANK0 ] unsigned char 
 17025 ;; Auto vars:     Size  Location     Type
 17026 ;;		None
 17027 ;; Return value:  Size  Location     Type
 17028 ;;                  1    wreg      void 
 17029 ;; Registers used:
 17030 ;;		wreg, status,2, status,0
 17031 ;; Tracked objects:
 17032 ;;		On entry : 0/0
 17033 ;;		On exit  : 0/0
 17034 ;;		Unchanged: 0/0
 17035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17036 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17037 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17039 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17040 ;;Total ram usage:        3 bytes
 17041 ;; Hardware stack levels used:    1
 17042 ;; Hardware stack levels required when called:   11
 17043 ;; This function calls:
 17044 ;;		Nothing
 17045 ;; This function is called by:
 17046 ;;		_Terminal
 17047 ;;		_Term_MainSm
 17048 ;;		_GsmGprsTerminal
 17049 ;; This function uses a non-reentrant model
 17050 ;;
 17051                           
 17052                           	psect	text70
 17053  005CCA                     __ptext70:
 17054                           	opt stack 0
 17055  005CCA                     _putUSBUSART:
 17056                           	opt stack 15
 17057                           
 17058                           ;usb_device_cdc.c: 584: ;
 17059                           ;usb_device_cdc.c: 585: if(cdc_trf_state == 0)
 17060                           
 17061                           ;incstack = 0
 17062  005CCA  0100               	movlb	0	; () banked
 17063  005CCC  51C1               	movf	_cdc_trf_state& (0+255),w,b
 17064  005CCE  A4D8               	btfss	status,2,c
 17065  005CD0  0012               	return	
 17066                           
 17067                           ; BSR set to: 0
 17068                           ;usb_device_cdc.c: 586: {
 17069                           ;usb_device_cdc.c: 587: { pCDCSrc.bRam = (uint8_t*)data; cdc_tx_len = length; cdc_mem_ty
      +                          pe = 0x01; cdc_trf_state = 1; };
 17070  005CD2  C083  F2CB         	movff	putUSBUSART@data,_pCDCSrc
 17071  005CD6  C084  F2CC         	movff	putUSBUSART@data+1,_pCDCSrc+1
 17072                           
 17073                           ; BSR set to: 0
 17074  005CDA  C085  F0C0         	movff	putUSBUSART@length,_cdc_tx_len
 17075                           
 17076                           ; BSR set to: 0
 17077  005CDE  0E01               	movlw	1
 17078  005CE0  0101               	movlb	1	; () banked
 17079  005CE2  6FE3               	movwf	_cdc_mem_type& (0+255),b
 17080                           
 17081                           ; BSR set to: 1
 17082  005CE4  0E01               	movlw	1
 17083  005CE6  0100               	movlb	0	; () banked
 17084  005CE8  6FC1               	movwf	_cdc_trf_state& (0+255),b
 17085  005CEA  0012               	return	
 17086  005CEC                     __end_of_putUSBUSART:
 17087                           	opt stack 0
 17088                           tosu	equ	0xFFF
 17089                           tosh	equ	0xFFE
 17090                           tosl	equ	0xFFD
 17091                           pclath	equ	0xFFA
 17092                           tblptru	equ	0xFF8
 17093                           tblptrh	equ	0xFF7
 17094                           tblptrl	equ	0xFF6
 17095                           tablat	equ	0xFF5
 17096                           prodh	equ	0xFF4
 17097                           prodl	equ	0xFF3
 17098                           intcon	equ	0xFF2
 17099                           intcon2	equ	0xFF1
 17100                           intcon3	equ	0xFF0
 17101                           indf0	equ	0xFEF
 17102                           postinc0	equ	0xFEE
 17103                           plusw0	equ	0xFEB
 17104                           fsr0h	equ	0xFEA
 17105                           fsr0l	equ	0xFE9
 17106                           wreg	equ	0xFE8
 17107                           indf1	equ	0xFE7
 17108                           postinc1	equ	0xFE6
 17109                           postdec1	equ	0xFE5
 17110                           plusw1	equ	0xFE3
 17111                           fsr1h	equ	0xFE2
 17112                           fsr1l	equ	0xFE1
 17113                           indf2	equ	0xFDF
 17114                           postinc2	equ	0xFDE
 17115                           postdec2	equ	0xFDD
 17116                           plusw2	equ	0xFDB
 17117                           fsr2h	equ	0xFDA
 17118                           fsr2l	equ	0xFD9
 17119                           status	equ	0xFD8
 17120                           
 17121 ;; *************** function _itoa *****************
 17122 ;; Defined at:
 17123 ;;		line 4 in file "/opt/microchip/xc8/v1.45/sources/common/itoa.c"
 17124 ;; Parameters:    Size  Location     Type
 17125 ;;  buf             2   51[BANK0 ] PTR unsigned char 
 17126 ;;		 -> Terminal@Payload(80), 
 17127 ;;  val             2   53[BANK0 ] int 
 17128 ;;  base            2   55[BANK0 ] int 
 17129 ;; Auto vars:     Size  Location     Type
 17130 ;;  cp              2   57[BANK0 ] PTR unsigned char 
 17131 ;;		 -> Terminal@Payload(80), 
 17132 ;; Return value:  Size  Location     Type
 17133 ;;                  2   51[BANK0 ] PTR unsigned char 
 17134 ;; Registers used:
 17135 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17136 ;; Tracked objects:
 17137 ;;		On entry : 0/0
 17138 ;;		On exit  : 0/0
 17139 ;;		Unchanged: 0/0
 17140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17141 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17142 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17143 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17144 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17145 ;;Total ram usage:        8 bytes
 17146 ;; Hardware stack levels used:    1
 17147 ;; Hardware stack levels required when called:   13
 17148 ;; This function calls:
 17149 ;;		_utoa
 17150 ;; This function is called by:
 17151 ;;		_Terminal
 17152 ;; This function uses a non-reentrant model
 17153 ;;
 17154                           
 17155                           	psect	text71
 17156  0055B0                     __ptext71:
 17157                           	opt stack 0
 17158  0055B0                     _itoa:
 17159                           	opt stack 12
 17160                           
 17161                           ; BSR set to: 0
 17162                           ;incstack = 0
 17163  0055B0  C093  F099         	movff	itoa@buf,itoa@cp
 17164  0055B4  C094  F09A         	movff	itoa@buf+1,itoa@cp+1
 17165  0055B8  0100               	movlb	0	; () banked
 17166  0055BA  AF96               	btfss	(itoa@val+1)& (0+255),7,b
 17167  0055BC  D00C               	goto	l2943
 17168                           
 17169                           ; BSR set to: 0
 17170  0055BE  C093  FFD9         	movff	itoa@buf,fsr2l
 17171  0055C2  C094  FFDA         	movff	itoa@buf+1,fsr2h
 17172  0055C6  0E2D               	movlw	45
 17173  0055C8  6EDF               	movwf	indf2,c
 17174                           
 17175                           ; BSR set to: 0
 17176  0055CA  4B93               	infsnz	itoa@buf& (0+255),f,b
 17177  0055CC  2B94               	incf	(itoa@buf+1)& (0+255),f,b
 17178                           
 17179                           ; BSR set to: 0
 17180  0055CE  6D95               	negf	itoa@val& (0+255),b
 17181  0055D0  1F96               	comf	(itoa@val+1)& (0+255),f,b
 17182  0055D2  B0D8               	btfsc	status,0,c
 17183  0055D4  2B96               	incf	(itoa@val+1)& (0+255),f,b
 17184  0055D6                     l2943:
 17185                           
 17186                           ; BSR set to: 0
 17187                           
 17188                           ; BSR set to: 0
 17189  0055D6  C093  F08A         	movff	itoa@buf,utoa@buf
 17190  0055DA  C094  F08B         	movff	itoa@buf+1,utoa@buf+1
 17191  0055DE  C095  F08C         	movff	itoa@val,utoa@val
 17192  0055E2  C096  F08D         	movff	itoa@val+1,utoa@val+1
 17193  0055E6  C097  F08E         	movff	itoa@base,utoa@base
 17194  0055EA  C098  F08F         	movff	itoa@base+1,utoa@base+1
 17195  0055EE  EC86  F020         	call	_utoa	;wreg free
 17196  0055F2  0012               	return	
 17197  0055F4                     __end_of_itoa:
 17198                           	opt stack 0
 17199                           tosu	equ	0xFFF
 17200                           tosh	equ	0xFFE
 17201                           tosl	equ	0xFFD
 17202                           pclath	equ	0xFFA
 17203                           tblptru	equ	0xFF8
 17204                           tblptrh	equ	0xFF7
 17205                           tblptrl	equ	0xFF6
 17206                           tablat	equ	0xFF5
 17207                           prodh	equ	0xFF4
 17208                           prodl	equ	0xFF3
 17209                           intcon	equ	0xFF2
 17210                           intcon2	equ	0xFF1
 17211                           intcon3	equ	0xFF0
 17212                           indf0	equ	0xFEF
 17213                           postinc0	equ	0xFEE
 17214                           plusw0	equ	0xFEB
 17215                           fsr0h	equ	0xFEA
 17216                           fsr0l	equ	0xFE9
 17217                           wreg	equ	0xFE8
 17218                           indf1	equ	0xFE7
 17219                           postinc1	equ	0xFE6
 17220                           postdec1	equ	0xFE5
 17221                           plusw1	equ	0xFE3
 17222                           fsr1h	equ	0xFE2
 17223                           fsr1l	equ	0xFE1
 17224                           indf2	equ	0xFDF
 17225                           postinc2	equ	0xFDE
 17226                           postdec2	equ	0xFDD
 17227                           plusw2	equ	0xFDB
 17228                           fsr2h	equ	0xFDA
 17229                           fsr2l	equ	0xFD9
 17230                           status	equ	0xFD8
 17231                           
 17232 ;; *************** function _utoa *****************
 17233 ;; Defined at:
 17234 ;;		line 17 in file "/opt/microchip/xc8/v1.45/sources/common/itoa.c"
 17235 ;; Parameters:    Size  Location     Type
 17236 ;;  buf             2   42[BANK0 ] PTR unsigned char 
 17237 ;;		 -> Term_MainSm@FwkBuildStr(4), Term_MainSm@FwkMinorStr(4), Term_MainSm@FwkMajorStr(4), Terminal@Payload(80), 
 17238 ;;  val             2   44[BANK0 ] unsigned int 
 17239 ;;  base            2   46[BANK0 ] int 
 17240 ;; Auto vars:     Size  Location     Type
 17241 ;;  v               2   48[BANK0 ] unsigned int 
 17242 ;;  c               1   50[BANK0 ] unsigned char 
 17243 ;; Return value:  Size  Location     Type
 17244 ;;                  2   42[BANK0 ] PTR unsigned char 
 17245 ;; Registers used:
 17246 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17247 ;; Tracked objects:
 17248 ;;		On entry : 0/0
 17249 ;;		On exit  : 0/0
 17250 ;;		Unchanged: 0/0
 17251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17252 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17253 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17254 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17255 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17256 ;;Total ram usage:        9 bytes
 17257 ;; Hardware stack levels used:    1
 17258 ;; Hardware stack levels required when called:   12
 17259 ;; This function calls:
 17260 ;;		___lwdiv
 17261 ;;		___lwmod
 17262 ;; This function is called by:
 17263 ;;		_Term_MainSm
 17264 ;;		_itoa
 17265 ;; This function uses a non-reentrant model
 17266 ;;
 17267                           
 17268                           	psect	text72
 17269  00410C                     __ptext72:
 17270                           	opt stack 0
 17271  00410C                     _utoa:
 17272                           	opt stack 14
 17273                           
 17274                           ;incstack = 0
 17275  00410C  C08C  F090         	movff	utoa@val,utoa@v
 17276  004110  C08D  F091         	movff	utoa@val+1,utoa@v+1
 17277  004114  C090  F083         	movff	utoa@v,___lwdiv@dividend
 17278  004118  C091  F084         	movff	utoa@v+1,___lwdiv@dividend+1
 17279  00411C  C08E  F085         	movff	utoa@base,___lwdiv@divisor
 17280  004120  C08F  F086         	movff	utoa@base+1,___lwdiv@divisor+1
 17281  004124  ECEB  F028         	call	___lwdiv	;wreg free
 17282  004128  C083  F090         	movff	?___lwdiv,utoa@v
 17283  00412C  C084  F091         	movff	?___lwdiv+1,utoa@v+1
 17284  004130  0100               	movlb	0	; () banked
 17285  004132  4B8A               	infsnz	utoa@buf& (0+255),f,b
 17286  004134  2B8B               	incf	(utoa@buf+1)& (0+255),f,b
 17287                           
 17288                           ; BSR set to: 0
 17289  004136  5190               	movf	utoa@v& (0+255),w,b
 17290  004138  1191               	iorwf	(utoa@v+1)& (0+255),w,b
 17291  00413A  A4D8               	btfss	status,2,c
 17292  00413C  D7EB               	goto	l2947
 17293                           
 17294                           ; BSR set to: 0
 17295                           
 17296                           ; BSR set to: 0
 17297  00413E  C08A  FFD9         	movff	utoa@buf,fsr2l
 17298  004142  C08B  FFDA         	movff	utoa@buf+1,fsr2h
 17299  004146  0E00               	movlw	0
 17300  004148  6EDF               	movwf	indf2,c
 17301                           
 17302                           ; BSR set to: 0
 17303  00414A  078A               	decf	utoa@buf& (0+255),f,b
 17304  00414C  A0D8               	btfss	status,0,c
 17305  00414E  078B               	decf	(utoa@buf+1)& (0+255),f,b
 17306  004150                     
 17307                           ; BSR set to: 0
 17308                           
 17309                           ; BSR set to: 0
 17310  004150  C08C  F07D         	movff	utoa@val,___lwmod@dividend
 17311  004154  C08D  F07E         	movff	utoa@val+1,___lwmod@dividend+1
 17312  004158  C08E  F07F         	movff	utoa@base,___lwmod@divisor
 17313  00415C  C08F  F080         	movff	utoa@base+1,___lwmod@divisor+1
 17314  004160  ECFA  F02A         	call	___lwmod	;wreg free
 17315  004164  0100               	movlb	0	; () banked
 17316  004166  517D               	movf	?___lwmod& (0+255),w,b
 17317  004168  6F92               	movwf	utoa@c& (0+255),b
 17318                           
 17319                           ; BSR set to: 0
 17320  00416A  C08C  F083         	movff	utoa@val,___lwdiv@dividend
 17321  00416E  C08D  F084         	movff	utoa@val+1,___lwdiv@dividend+1
 17322  004172  C08E  F085         	movff	utoa@base,___lwdiv@divisor
 17323  004176  C08F  F086         	movff	utoa@base+1,___lwdiv@divisor+1
 17324  00417A  ECEB  F028         	call	___lwdiv	;wreg free
 17325  00417E  C083  F08C         	movff	?___lwdiv,utoa@val
 17326  004182  C084  F08D         	movff	?___lwdiv+1,utoa@val+1
 17327  004186  0E09               	movlw	9
 17328  004188  0100               	movlb	0	; () banked
 17329  00418A  6592               	cpfsgt	utoa@c& (0+255),b
 17330  00418C  D002               	goto	l2950
 17331                           
 17332                           ; BSR set to: 0
 17333  00418E  0E07               	movlw	7
 17334  004190  2792               	addwf	utoa@c& (0+255),f,b
 17335  004192                     l2950:
 17336                           
 17337                           ; BSR set to: 0
 17338  004192  0E30               	movlw	48
 17339  004194  2792               	addwf	utoa@c& (0+255),f,b
 17340                           
 17341                           ; BSR set to: 0
 17342  004196  C08A  FFD9         	movff	utoa@buf,fsr2l
 17343  00419A  C08B  FFDA         	movff	utoa@buf+1,fsr2h
 17344  00419E  C092  FFDF         	movff	utoa@c,indf2
 17345                           
 17346                           ; BSR set to: 0
 17347  0041A2  078A               	decf	utoa@buf& (0+255),f,b
 17348  0041A4  A0D8               	btfss	status,0,c
 17349  0041A6  078B               	decf	(utoa@buf+1)& (0+255),f,b
 17350                           
 17351                           ; BSR set to: 0
 17352  0041A8  518C               	movf	utoa@val& (0+255),w,b
 17353  0041AA  118D               	iorwf	(utoa@val+1)& (0+255),w,b
 17354  0041AC  A4D8               	btfss	status,2,c
 17355  0041AE  D7D0               	goto	l2949
 17356                           
 17357                           ; BSR set to: 0
 17358                           ;	Return value of _utoa is never used
 17359                           
 17360                           ; BSR set to: 0
 17361  0041B0  4B8A               	infsnz	utoa@buf& (0+255),f,b
 17362  0041B2  2B8B               	incf	(utoa@buf+1)& (0+255),f,b
 17363  0041B4  0012               	return	
 17364  0041B6                     __end_of_utoa:
 17365                           	opt stack 0
 17366                           tosu	equ	0xFFF
 17367                           tosh	equ	0xFFE
 17368                           tosl	equ	0xFFD
 17369                           pclath	equ	0xFFA
 17370                           tblptru	equ	0xFF8
 17371                           tblptrh	equ	0xFF7
 17372                           tblptrl	equ	0xFF6
 17373                           tablat	equ	0xFF5
 17374                           prodh	equ	0xFF4
 17375                           prodl	equ	0xFF3
 17376                           intcon	equ	0xFF2
 17377                           intcon2	equ	0xFF1
 17378                           intcon3	equ	0xFF0
 17379                           indf0	equ	0xFEF
 17380                           postinc0	equ	0xFEE
 17381                           plusw0	equ	0xFEB
 17382                           fsr0h	equ	0xFEA
 17383                           fsr0l	equ	0xFE9
 17384                           wreg	equ	0xFE8
 17385                           indf1	equ	0xFE7
 17386                           postinc1	equ	0xFE6
 17387                           postdec1	equ	0xFE5
 17388                           plusw1	equ	0xFE3
 17389                           fsr1h	equ	0xFE2
 17390                           fsr1l	equ	0xFE1
 17391                           indf2	equ	0xFDF
 17392                           postinc2	equ	0xFDE
 17393                           postdec2	equ	0xFDD
 17394                           plusw2	equ	0xFDB
 17395                           fsr2h	equ	0xFDA
 17396                           fsr2l	equ	0xFD9
 17397                           status	equ	0xFD8
 17398                           
 17399 ;; *************** function ___lwmod *****************
 17400 ;; Defined at:
 17401 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/lwmod.c"
 17402 ;; Parameters:    Size  Location     Type
 17403 ;;  dividend        2   29[BANK0 ] unsigned int 
 17404 ;;  divisor         2   31[BANK0 ] unsigned int 
 17405 ;; Auto vars:     Size  Location     Type
 17406 ;;  counter         1   33[BANK0 ] unsigned char 
 17407 ;; Return value:  Size  Location     Type
 17408 ;;                  2   29[BANK0 ] unsigned int 
 17409 ;; Registers used:
 17410 ;;		wreg, status,2, status,0
 17411 ;; Tracked objects:
 17412 ;;		On entry : 0/0
 17413 ;;		On exit  : 0/0
 17414 ;;		Unchanged: 0/0
 17415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17416 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17417 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17419 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17420 ;;Total ram usage:        5 bytes
 17421 ;; Hardware stack levels used:    1
 17422 ;; Hardware stack levels required when called:   11
 17423 ;; This function calls:
 17424 ;;		Nothing
 17425 ;; This function is called by:
 17426 ;;		_utoa
 17427 ;; This function uses a non-reentrant model
 17428 ;;
 17429                           
 17430                           	psect	text73
 17431  0055F4                     __ptext73:
 17432                           	opt stack 0
 17433  0055F4                     ___lwmod:
 17434                           	opt stack 14
 17435                           
 17436                           ; BSR set to: 0
 17437                           ;incstack = 0
 17438  0055F4  0100               	movlb	0	; () banked
 17439  0055F6  517F               	movf	___lwmod@divisor& (0+255),w,b
 17440  0055F8  1180               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 17441  0055FA  B4D8               	btfsc	status,2,c
 17442  0055FC  D018               	goto	l3045
 17443                           
 17444                           ; BSR set to: 0
 17445  0055FE  0E01               	movlw	1
 17446  005600  6F81               	movwf	___lwmod@counter& (0+255),b
 17447  005602  D004               	goto	l3040
 17448  005604                     
 17449                           ; BSR set to: 0
 17450                           
 17451                           ; BSR set to: 0
 17452  005604  90D8               	bcf	status,0,c
 17453  005606  377F               	rlcf	___lwmod@divisor& (0+255),f,b
 17454  005608  3780               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 17455  00560A  2B81               	incf	___lwmod@counter& (0+255),f,b
 17456  00560C                     l3040:
 17457                           
 17458                           ; BSR set to: 0
 17459                           
 17460                           ; BSR set to: 0
 17461  00560C  AF80               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 17462  00560E  D7FA               	goto	l3041
 17463  005610                     u10340:
 17464                           
 17465                           ; BSR set to: 0
 17466                           
 17467                           ; BSR set to: 0
 17468                           
 17469                           ; BSR set to: 0
 17470  005610  517F               	movf	___lwmod@divisor& (0+255),w,b
 17471  005612  5D7D               	subwf	___lwmod@dividend& (0+255),w,b
 17472  005614  5180               	movf	(___lwmod@divisor+1)& (0+255),w,b
 17473  005616  597E               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 17474  005618  A0D8               	btfss	status,0,c
 17475  00561A  D004               	goto	l3044
 17476                           
 17477                           ; BSR set to: 0
 17478  00561C  517F               	movf	___lwmod@divisor& (0+255),w,b
 17479  00561E  5F7D               	subwf	___lwmod@dividend& (0+255),f,b
 17480  005620  5180               	movf	(___lwmod@divisor+1)& (0+255),w,b
 17481  005622  5B7E               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 17482  005624                     l3044:
 17483                           
 17484                           ; BSR set to: 0
 17485                           
 17486                           ; BSR set to: 0
 17487  005624  90D8               	bcf	status,0,c
 17488  005626  3380               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 17489  005628  337F               	rrcf	___lwmod@divisor& (0+255),f,b
 17490                           
 17491                           ; BSR set to: 0
 17492  00562A  2F81               	decfsz	___lwmod@counter& (0+255),f,b
 17493  00562C  D7F1               	goto	u10340
 17494  00562E                     l3045:
 17495                           
 17496                           ; BSR set to: 0
 17497                           
 17498                           ; BSR set to: 0
 17499  00562E  C07D  F07D         	movff	___lwmod@dividend,?___lwmod
 17500  005632  C07E  F07E         	movff	___lwmod@dividend+1,?___lwmod+1
 17501                           
 17502                           ; BSR set to: 0
 17503  005636  0012               	return		;funcret
 17504  005638                     __end_of___lwmod:
 17505                           	opt stack 0
 17506                           tosu	equ	0xFFF
 17507                           tosh	equ	0xFFE
 17508                           tosl	equ	0xFFD
 17509                           pclath	equ	0xFFA
 17510                           tblptru	equ	0xFF8
 17511                           tblptrh	equ	0xFF7
 17512                           tblptrl	equ	0xFF6
 17513                           tablat	equ	0xFF5
 17514                           prodh	equ	0xFF4
 17515                           prodl	equ	0xFF3
 17516                           intcon	equ	0xFF2
 17517                           intcon2	equ	0xFF1
 17518                           intcon3	equ	0xFF0
 17519                           indf0	equ	0xFEF
 17520                           postinc0	equ	0xFEE
 17521                           plusw0	equ	0xFEB
 17522                           fsr0h	equ	0xFEA
 17523                           fsr0l	equ	0xFE9
 17524                           wreg	equ	0xFE8
 17525                           indf1	equ	0xFE7
 17526                           postinc1	equ	0xFE6
 17527                           postdec1	equ	0xFE5
 17528                           plusw1	equ	0xFE3
 17529                           fsr1h	equ	0xFE2
 17530                           fsr1l	equ	0xFE1
 17531                           indf2	equ	0xFDF
 17532                           postinc2	equ	0xFDE
 17533                           postdec2	equ	0xFDD
 17534                           plusw2	equ	0xFDB
 17535                           fsr2h	equ	0xFDA
 17536                           fsr2l	equ	0xFD9
 17537                           status	equ	0xFD8
 17538                           
 17539 ;; *************** function _getsUSBUSART *****************
 17540 ;; Defined at:
 17541 ;;		line 488 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 17542 ;; Parameters:    Size  Location     Type
 17543 ;;  buffer          2   36[BANK0 ] PTR unsigned char 
 17544 ;;		 -> Terminal@UsbRxBuffer(200), GsmGprsTerminal@UsbBuffer(200), 
 17545 ;;  len             1   38[BANK0 ] unsigned char 
 17546 ;; Auto vars:     Size  Location     Type
 17547 ;;		None
 17548 ;; Return value:  Size  Location     Type
 17549 ;;                  1    wreg      unsigned char 
 17550 ;; Registers used:
 17551 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17552 ;; Tracked objects:
 17553 ;;		On entry : 0/0
 17554 ;;		On exit  : 0/0
 17555 ;;		Unchanged: 0/0
 17556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17557 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17558 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17559 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17560 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17561 ;;Total ram usage:        4 bytes
 17562 ;; Hardware stack levels used:    1
 17563 ;; Hardware stack levels required when called:   12
 17564 ;; This function calls:
 17565 ;;		_USBTransferOnePacket
 17566 ;; This function is called by:
 17567 ;;		_Terminal
 17568 ;;		_GsmGprsTerminal
 17569 ;; This function uses a non-reentrant model
 17570 ;;
 17571                           
 17572                           	psect	text74
 17573  004614                     __ptext74:
 17574                           	opt stack 0
 17575  004614                     _getsUSBUSART:
 17576                           	opt stack 13
 17577                           
 17578                           ;usb_device_cdc.c: 490: cdc_rx_len = 0;
 17579                           
 17580                           ; BSR set to: 0
 17581                           ;incstack = 0
 17582  004614  0E00               	movlw	0
 17583  004616  0100               	movlb	0	; () banked
 17584  004618  6FC2               	movwf	_cdc_rx_len& (0+255),b
 17585                           
 17586                           ; BSR set to: 0
 17587                           ;usb_device_cdc.c: 492: if(!((CDCDataOutHandle != 0x0000) && ((*(volatile uint8_t*)CDCDa
      +                          taOutHandle & 0x80) != 0x00)))
 17588  00461A  51B8               	movf	_CDCDataOutHandle& (0+255),w,b
 17589  00461C  11B9               	iorwf	(_CDCDataOutHandle+1)& (0+255),w,b
 17590  00461E  B4D8               	btfsc	status,2,c
 17591  004620  D006               	goto	u10850
 17592                           
 17593                           ; BSR set to: 0
 17594  004622  C0B8  FFD9         	movff	_CDCDataOutHandle,fsr2l
 17595  004626  C0B9  FFDA         	movff	_CDCDataOutHandle+1,fsr2h
 17596  00462A  BEDF               	btfsc	indf2,7,c
 17597  00462C  D03B               	goto	l1907
 17598  00462E                     u10850:
 17599                           
 17600                           ; BSR set to: 0
 17601                           ;usb_device_cdc.c: 493: {
 17602                           ;usb_device_cdc.c: 498: if(len > (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT))
 17603                           
 17604                           ; BSR set to: 0
 17605  00462E  EE20 F001          	lfsr	2,1
 17606  004632  51B8               	movf	_CDCDataOutHandle& (0+255),w,b
 17607  004634  26D9               	addwf	fsr2l,f,c
 17608  004636  51B9               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 17609  004638  22DA               	addwfc	fsr2h,f,c
 17610  00463A  5186               	movf	getsUSBUSART@len& (0+255),w,b
 17611  00463C  5CDE               	subwf	postinc2,w,c
 17612  00463E  B0D8               	btfsc	status,0,c
 17613  004640  D008               	goto	l1910
 17614                           
 17615                           ; BSR set to: 0
 17616                           ;usb_device_cdc.c: 499: len = (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT);
 17617  004642  EE20 F001          	lfsr	2,1
 17618  004646  51B8               	movf	_CDCDataOutHandle& (0+255),w,b
 17619  004648  26D9               	addwf	fsr2l,f,c
 17620  00464A  51B9               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 17621  00464C  22DA               	addwfc	fsr2h,f,c
 17622  00464E  50DF               	movf	indf2,w,c
 17623  004650  6F86               	movwf	getsUSBUSART@len& (0+255),b
 17624  004652                     l1910:
 17625                           
 17626                           ; BSR set to: 0
 17627                           ;usb_device_cdc.c: 504: for(cdc_rx_len = 0; cdc_rx_len < len; cdc_rx_len++)
 17628                           
 17629                           ; BSR set to: 0
 17630  004652  0E00               	movlw	0
 17631  004654  6FC2               	movwf	_cdc_rx_len& (0+255),b
 17632  004656  D013               	goto	l1911
 17633  004658                     
 17634                           ; BSR set to: 0
 17635                           ;usb_device_cdc.c: 505: buffer[cdc_rx_len] = cdc_data_rx[cdc_rx_len];
 17636                           
 17637                           ; BSR set to: 0
 17638  004658  51C2               	movf	_cdc_rx_len& (0+255),w,b
 17639  00465A  0D01               	mullw	1
 17640  00465C  0E54               	movlw	low _cdc_data_rx
 17641  00465E  24F3               	addwf	prodl,w,c
 17642  004660  6ED9               	movwf	fsr2l,c
 17643  004662  0E04               	movlw	high _cdc_data_rx
 17644  004664  20F4               	addwfc	prodh,w,c
 17645  004666  6EDA               	movwf	fsr2h,c
 17646  004668  51C2               	movf	_cdc_rx_len& (0+255),w,b
 17647  00466A  0D01               	mullw	1
 17648  00466C  50F3               	movf	prodl,w,c
 17649  00466E  2584               	addwf	getsUSBUSART@buffer& (0+255),w,b
 17650  004670  6EE1               	movwf	fsr1l,c
 17651  004672  50F4               	movf	prodh,w,c
 17652  004674  2185               	addwfc	(getsUSBUSART@buffer+1)& (0+255),w,b
 17653  004676  6EE2               	movwf	fsr1h,c
 17654  004678  CFDF FFE7          	movff	indf2,indf1
 17655                           
 17656                           ; BSR set to: 0
 17657  00467C  2BC2               	incf	_cdc_rx_len& (0+255),f,b
 17658  00467E                     l1911:
 17659                           
 17660                           ; BSR set to: 0
 17661                           
 17662                           ; BSR set to: 0
 17663  00467E  5186               	movf	getsUSBUSART@len& (0+255),w,b
 17664  004680  5DC2               	subwf	_cdc_rx_len& (0+255),w,b
 17665  004682  A0D8               	btfss	status,0,c
 17666  004684  D7E9               	goto	l1912
 17667                           
 17668                           ; BSR set to: 0
 17669                           ;usb_device_cdc.c: 511: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 17670                           
 17671                           ; BSR set to: 0
 17672  004686  0E00               	movlw	0
 17673  004688  6F7D               	movwf	USBTransferOnePacket@dir& (0+255),b
 17674  00468A  0E54               	movlw	low _cdc_data_rx
 17675  00468C  6F7E               	movwf	USBTransferOnePacket@data& (0+255),b
 17676  00468E  0E04               	movlw	high _cdc_data_rx
 17677  004690  6F7F               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 17678  004692  0E40               	movlw	64
 17679  004694  6F80               	movwf	USBTransferOnePacket@len& (0+255),b
 17680  004696  0E02               	movlw	2
 17681  004698  ECC2  F01E         	call	_USBTransferOnePacket
 17682  00469C  C07D  F0B8         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
 17683  0046A0  C07E  F0B9         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
 17684  0046A4                     l1907:
 17685                           
 17686                           ;usb_device_cdc.c: 513: }
 17687                           ;usb_device_cdc.c: 515: return cdc_rx_len;
 17688  0046A4  0100               	movlb	0	; () banked
 17689  0046A6  51C2               	movf	_cdc_rx_len& (0+255),w,b
 17690  0046A8  0012               	return	
 17691  0046AA                     __end_of_getsUSBUSART:
 17692                           	opt stack 0
 17693                           tosu	equ	0xFFF
 17694                           tosh	equ	0xFFE
 17695                           tosl	equ	0xFFD
 17696                           pclath	equ	0xFFA
 17697                           tblptru	equ	0xFF8
 17698                           tblptrh	equ	0xFF7
 17699                           tblptrl	equ	0xFF6
 17700                           tablat	equ	0xFF5
 17701                           prodh	equ	0xFF4
 17702                           prodl	equ	0xFF3
 17703                           intcon	equ	0xFF2
 17704                           intcon2	equ	0xFF1
 17705                           intcon3	equ	0xFF0
 17706                           indf0	equ	0xFEF
 17707                           postinc0	equ	0xFEE
 17708                           plusw0	equ	0xFEB
 17709                           fsr0h	equ	0xFEA
 17710                           fsr0l	equ	0xFE9
 17711                           wreg	equ	0xFE8
 17712                           indf1	equ	0xFE7
 17713                           postinc1	equ	0xFE6
 17714                           postdec1	equ	0xFE5
 17715                           plusw1	equ	0xFE3
 17716                           fsr1h	equ	0xFE2
 17717                           fsr1l	equ	0xFE1
 17718                           indf2	equ	0xFDF
 17719                           postinc2	equ	0xFDE
 17720                           postdec2	equ	0xFDD
 17721                           plusw2	equ	0xFDB
 17722                           fsr2h	equ	0xFDA
 17723                           fsr2l	equ	0xFD9
 17724                           status	equ	0xFD8
 17725                           
 17726 ;; *************** function _USBTransferOnePacket *****************
 17727 ;; Defined at:
 17728 ;;		line 1013 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 17729 ;; Parameters:    Size  Location     Type
 17730 ;;  ep              1    wreg     unsigned char 
 17731 ;;  dir             1   29[BANK0 ] unsigned char 
 17732 ;;  data            2   30[BANK0 ] PTR unsigned char 
 17733 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 17734 ;;  len             1   32[BANK0 ] unsigned char 
 17735 ;; Auto vars:     Size  Location     Type
 17736 ;;  ep              1   33[BANK0 ] unsigned char 
 17737 ;;  handle          2   34[BANK0 ] PTR volatile struct __BD
 17738 ;;		 -> NULL(0), BDT(48), 
 17739 ;; Return value:  Size  Location     Type
 17740 ;;                  2   29[BANK0 ] PTR void 
 17741 ;; Registers used:
 17742 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 17743 ;; Tracked objects:
 17744 ;;		On entry : 0/0
 17745 ;;		On exit  : 0/0
 17746 ;;		Unchanged: 0/0
 17747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17748 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17749 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17750 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17751 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17752 ;;Total ram usage:        7 bytes
 17753 ;; Hardware stack levels used:    1
 17754 ;; Hardware stack levels required when called:   11
 17755 ;; This function calls:
 17756 ;;		Nothing
 17757 ;; This function is called by:
 17758 ;;		_CDCInitEP
 17759 ;;		_getsUSBUSART
 17760 ;;		_CDCTxService
 17761 ;;		_USBCDCEventHandler
 17762 ;; This function uses a non-reentrant model
 17763 ;;
 17764                           
 17765                           	psect	text75
 17766  003D84                     __ptext75:
 17767                           	opt stack 0
 17768  003D84                     _USBTransferOnePacket:
 17769                           	opt stack 13
 17770                           
 17771                           ; BSR set to: 0
 17772                           ;incstack = 0
 17773                           ;USBTransferOnePacket@ep stored from wreg
 17774  003D84  0100               	movlb	0	; () banked
 17775  003D86  6F81               	movwf	USBTransferOnePacket@ep& (0+255),b
 17776                           
 17777                           ;usb_device.c: 1015: volatile BDT_ENTRY* handle;
 17778                           ;usb_device.c: 1018: if(dir != 0)
 17779  003D88  0100               	movlb	0	; () banked
 17780  003D8A  517D               	movf	USBTransferOnePacket@dir& (0+255),w,b
 17781  003D8C  B4D8               	btfsc	status,2,c
 17782  003D8E  D007               	goto	l1631
 17783                           
 17784                           ; BSR set to: 0
 17785                           ;usb_device.c: 1019: {
 17786                           ;usb_device.c: 1021: handle = pBDTEntryIn[ep];
 17787  003D90  5181               	movf	USBTransferOnePacket@ep& (0+255),w,b
 17788  003D92  0D02               	mullw	2
 17789  003D94  0EB2               	movlw	low _pBDTEntryIn
 17790  003D96  24F3               	addwf	prodl,w,c
 17791  003D98  6ED9               	movwf	fsr2l,c
 17792  003D9A  0E00               	movlw	high _pBDTEntryIn
 17793  003D9C  D006               	goto	L16
 17794  003D9E                     l1631:
 17795                           
 17796                           ; BSR set to: 0
 17797                           ;usb_device.c: 1023: else
 17798                           ;usb_device.c: 1024: {
 17799                           ;usb_device.c: 1026: handle = pBDTEntryOut[ep];
 17800                           
 17801                           ; BSR set to: 0
 17802  003D9E  5181               	movf	USBTransferOnePacket@ep& (0+255),w,b
 17803  003DA0  0D02               	mullw	2
 17804  003DA2  0E0E               	movlw	low _pBDTEntryOut
 17805  003DA4  24F3               	addwf	prodl,w,c
 17806  003DA6  6ED9               	movwf	fsr2l,c
 17807  003DA8  0E03               	movlw	high _pBDTEntryOut
 17808  003DAA                     L16:
 17809  003DAA  20F4               	addwfc	prodh,w,c
 17810  003DAC  6EDA               	movwf	fsr2h,c
 17811  003DAE  CFDE F082          	movff	postinc2,USBTransferOnePacket@handle
 17812  003DB2  CFDD F083          	movff	postdec2,USBTransferOnePacket@handle+1
 17813                           
 17814                           ; BSR set to: 0
 17815                           ;usb_device.c: 1027: }
 17816                           ;usb_device.c: 1031: if(handle == 0)
 17817                           
 17818                           ; BSR set to: 0
 17819  003DB6  5182               	movf	USBTransferOnePacket@handle& (0+255),w,b
 17820  003DB8  1183               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 17821  003DBA  A4D8               	btfss	status,2,c
 17822  003DBC  D005               	goto	l1633
 17823                           
 17824                           ; BSR set to: 0
 17825                           ;usb_device.c: 1032: {
 17826                           ;usb_device.c: 1033: return 0;
 17827  003DBE  0E00               	movlw	0
 17828  003DC0  6F7D               	movwf	?_USBTransferOnePacket& (0+255),b
 17829  003DC2  0E00               	movlw	0
 17830  003DC4  6F7E               	movwf	(?_USBTransferOnePacket+1)& (0+255),b
 17831                           
 17832                           ; BSR set to: 0
 17833  003DC6  0012               	return	
 17834  003DC8                     l1633:
 17835                           
 17836                           ; BSR set to: 0
 17837                           ;usb_device.c: 1034: }
 17838                           ;usb_device.c: 1047: handle->ADR = ((uint16_t)(data));
 17839                           
 17840                           ; BSR set to: 0
 17841  003DC8  EE20 F002          	lfsr	2,2
 17842  003DCC  5182               	movf	USBTransferOnePacket@handle& (0+255),w,b
 17843  003DCE  26D9               	addwf	fsr2l,f,c
 17844  003DD0  5183               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 17845  003DD2  22DA               	addwfc	fsr2h,f,c
 17846  003DD4  C07E  FFDE         	movff	USBTransferOnePacket@data,postinc2
 17847  003DD8  C07F  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 17848                           
 17849                           ;usb_device.c: 1048: handle->CNT = len;
 17850  003DDC  EE20 F001          	lfsr	2,1
 17851  003DE0  5182               	movf	USBTransferOnePacket@handle& (0+255),w,b
 17852  003DE2  26D9               	addwf	fsr2l,f,c
 17853  003DE4  5183               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 17854  003DE6  22DA               	addwfc	fsr2h,f,c
 17855  003DE8  C080  FFDF         	movff	USBTransferOnePacket@len,indf2
 17856                           
 17857                           ; BSR set to: 0
 17858                           ;usb_device.c: 1049: handle->STAT.Val &= 0x40;
 17859  003DEC  C082  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 17860  003DF0  C083  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 17861  003DF4  0E40               	movlw	64
 17862  003DF6  16DF               	andwf	indf2,f,c
 17863                           
 17864                           ; BSR set to: 0
 17865                           ;usb_device.c: 1050: handle->STAT.Val |= (0x08 & 0x08);
 17866  003DF8  C082  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 17867  003DFC  C083  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 17868  003E00  0E00               	movlw	0
 17869  003E02  86DB               	bsf	plusw2,3,c
 17870                           
 17871                           ; BSR set to: 0
 17872                           ;usb_device.c: 1051: handle->STAT.Val |= 0x80;
 17873  003E04  C082  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 17874  003E08  C083  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 17875  003E0C  0E00               	movlw	0
 17876  003E0E  8EDB               	bsf	plusw2,7,c
 17877                           
 17878                           ; BSR set to: 0
 17879                           ;usb_device.c: 1054: if(dir != 0)
 17880  003E10  517D               	movf	USBTransferOnePacket@dir& (0+255),w,b
 17881  003E12  B4D8               	btfsc	status,2,c
 17882  003E14  D007               	goto	l1635
 17883                           
 17884                           ; BSR set to: 0
 17885                           ;usb_device.c: 1055: {
 17886                           ;usb_device.c: 1057: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 17887  003E16  5181               	movf	USBTransferOnePacket@ep& (0+255),w,b
 17888  003E18  0D02               	mullw	2
 17889  003E1A  0EB2               	movlw	low _pBDTEntryIn
 17890  003E1C  24F3               	addwf	prodl,w,c
 17891  003E1E  6ED9               	movwf	fsr2l,c
 17892  003E20  0E00               	movlw	high _pBDTEntryIn
 17893  003E22  D006               	goto	L17
 17894  003E24                     l1635:
 17895                           
 17896                           ; BSR set to: 0
 17897                           ;usb_device.c: 1059: else
 17898                           ;usb_device.c: 1060: {
 17899                           ;usb_device.c: 1062: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 17900                           
 17901                           ; BSR set to: 0
 17902  003E24  5181               	movf	USBTransferOnePacket@ep& (0+255),w,b
 17903  003E26  0D02               	mullw	2
 17904  003E28  0E0E               	movlw	low _pBDTEntryOut
 17905  003E2A  24F3               	addwf	prodl,w,c
 17906  003E2C  6ED9               	movwf	fsr2l,c
 17907  003E2E  0E03               	movlw	high _pBDTEntryOut
 17908  003E30                     L17:
 17909  003E30  20F4               	addwfc	prodh,w,c
 17910  003E32  6EDA               	movwf	fsr2h,c
 17911  003E34  0E04               	movlw	4
 17912  003E36  1ADF               	xorwf	indf2,f,c
 17913                           
 17914                           ; BSR set to: 0
 17915                           ;usb_device.c: 1063: }
 17916                           ;usb_device.c: 1064: return (void*)handle;
 17917                           
 17918                           ; BSR set to: 0
 17919  003E38  C082  F07D         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 17920  003E3C  C083  F07E         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 17921  003E40  0012               	return	
 17922  003E42                     __end_of_USBTransferOnePacket:
 17923                           	opt stack 0
 17924                           tosu	equ	0xFFF
 17925                           tosh	equ	0xFFE
 17926                           tosl	equ	0xFFD
 17927                           pclath	equ	0xFFA
 17928                           tblptru	equ	0xFF8
 17929                           tblptrh	equ	0xFF7
 17930                           tblptrl	equ	0xFF6
 17931                           tablat	equ	0xFF5
 17932                           prodh	equ	0xFF4
 17933                           prodl	equ	0xFF3
 17934                           intcon	equ	0xFF2
 17935                           intcon2	equ	0xFF1
 17936                           intcon3	equ	0xFF0
 17937                           indf0	equ	0xFEF
 17938                           postinc0	equ	0xFEE
 17939                           plusw0	equ	0xFEB
 17940                           fsr0h	equ	0xFEA
 17941                           fsr0l	equ	0xFE9
 17942                           wreg	equ	0xFE8
 17943                           indf1	equ	0xFE7
 17944                           postinc1	equ	0xFE6
 17945                           postdec1	equ	0xFE5
 17946                           plusw1	equ	0xFE3
 17947                           fsr1h	equ	0xFE2
 17948                           fsr1l	equ	0xFE1
 17949                           indf2	equ	0xFDF
 17950                           postinc2	equ	0xFDE
 17951                           postdec2	equ	0xFDD
 17952                           plusw2	equ	0xFDB
 17953                           fsr2h	equ	0xFDA
 17954                           fsr2l	equ	0xFD9
 17955                           status	equ	0xFD8
 17956                           
 17957 ;; *************** function _atoi *****************
 17958 ;; Defined at:
 17959 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/atoi.c"
 17960 ;; Parameters:    Size  Location     Type
 17961 ;;  s               2   35[BANK0 ] PTR const unsigned char 
 17962 ;;		 -> Terminal@Len(4), 
 17963 ;; Auto vars:     Size  Location     Type
 17964 ;;  a               2   40[BANK0 ] int 
 17965 ;;  sign            1   39[BANK0 ] unsigned char 
 17966 ;; Return value:  Size  Location     Type
 17967 ;;                  2   35[BANK0 ] int 
 17968 ;; Registers used:
 17969 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17970 ;; Tracked objects:
 17971 ;;		On entry : 0/0
 17972 ;;		On exit  : 0/0
 17973 ;;		Unchanged: 0/0
 17974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17975 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17976 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17977 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17978 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17979 ;;Total ram usage:        7 bytes
 17980 ;; Hardware stack levels used:    1
 17981 ;; Hardware stack levels required when called:   12
 17982 ;; This function calls:
 17983 ;;		___wmul
 17984 ;;		_isdigit
 17985 ;; This function is called by:
 17986 ;;		_Terminal
 17987 ;; This function uses a non-reentrant model
 17988 ;;
 17989                           
 17990                           	psect	text76
 17991  0034D4                     __ptext76:
 17992                           	opt stack 0
 17993  0034D4                     _atoi:
 17994                           	opt stack 13
 17995                           
 17996                           ; BSR set to: 0
 17997                           ;incstack = 0
 17998  0034D4  D003               	goto	l2756
 17999  0034D6  0100               	movlb	0	; () banked
 18000  0034D8  4B83               	infsnz	atoi@s& (0+255),f,b
 18001  0034DA  2B84               	incf	(atoi@s+1)& (0+255),f,b
 18002  0034DC                     l2756:
 18003                           
 18004                           ; BSR set to: 0
 18005  0034DC  C083  FFD9         	movff	atoi@s,fsr2l
 18006  0034E0  C084  FFDA         	movff	atoi@s+1,fsr2h
 18007  0034E4  0E20               	movlw	32
 18008  0034E6  18DE               	xorwf	postinc2,w,c
 18009  0034E8  B4D8               	btfsc	status,2,c
 18010  0034EA  D7F5               	goto	l2757
 18011  0034EC  C083  FFD9         	movff	atoi@s,fsr2l
 18012  0034F0  C084  FFDA         	movff	atoi@s+1,fsr2h
 18013  0034F4  0E09               	movlw	9
 18014  0034F6  18DE               	xorwf	postinc2,w,c
 18015  0034F8  B4D8               	btfsc	status,2,c
 18016  0034FA  D7ED               	goto	l2757
 18017  0034FC  0E00               	movlw	0
 18018  0034FE  0100               	movlb	0	; () banked
 18019  003500  6F89               	movwf	(atoi@a+1)& (0+255),b
 18020  003502  0E00               	movlw	0
 18021  003504  6F88               	movwf	atoi@a& (0+255),b
 18022  003506  0E00               	movlw	0
 18023  003508  6F87               	movwf	atoi@sign& (0+255),b
 18024                           
 18025                           ; BSR set to: 0
 18026  00350A  C083  FFD9         	movff	atoi@s,fsr2l
 18027  00350E  C084  FFDA         	movff	atoi@s+1,fsr2h
 18028  003512  0E2D               	movlw	45
 18029  003514  18DE               	xorwf	postinc2,w,c
 18030  003516  A4D8               	btfss	status,2,c
 18031  003518  D002               	goto	l2759
 18032                           
 18033                           ; BSR set to: 0
 18034  00351A  2B87               	incf	atoi@sign& (0+255),f,b
 18035  00351C  D026               	goto	l12137
 18036  00351E                     l2759:
 18037                           
 18038                           ; BSR set to: 0
 18039                           
 18040                           ; BSR set to: 0
 18041  00351E  C083  FFD9         	movff	atoi@s,fsr2l
 18042  003522  C084  FFDA         	movff	atoi@s+1,fsr2h
 18043  003526  0E2B               	movlw	43
 18044  003528  18DE               	xorwf	postinc2,w,c
 18045  00352A  A4D8               	btfss	status,2,c
 18046  00352C  D020               	goto	l2762
 18047  00352E  D01D               	goto	l12137
 18048  003530                     
 18049                           ; BSR set to: 0
 18050  003530  C088  F07D         	movff	atoi@a,___wmul@multiplier
 18051  003534  C089  F07E         	movff	atoi@a+1,___wmul@multiplier+1
 18052  003538  0E00               	movlw	0
 18053  00353A  0100               	movlb	0	; () banked
 18054  00353C  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 18055  00353E  0E0A               	movlw	10
 18056  003540  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 18057  003542  ECC3  F02D         	call	___wmul	;wreg free
 18058  003546  C083  FFD9         	movff	atoi@s,fsr2l
 18059  00354A  C084  FFDA         	movff	atoi@s+1,fsr2h
 18060  00354E  50DF               	movf	indf2,w,c
 18061  003550  0100               	movlb	0	; () banked
 18062  003552  6F85               	movwf	??_atoi& (0+255),b
 18063  003554  6B86               	clrf	(??_atoi+1)& (0+255),b
 18064  003556  517D               	movf	?___wmul& (0+255),w,b
 18065  003558  2785               	addwf	??_atoi& (0+255),f,b
 18066  00355A  517E               	movf	(?___wmul+1)& (0+255),w,b
 18067  00355C  2386               	addwfc	(??_atoi+1)& (0+255),f,b
 18068  00355E  0ED0               	movlw	208
 18069  003560  2585               	addwf	??_atoi& (0+255),w,b
 18070  003562  6F88               	movwf	atoi@a& (0+255),b
 18071  003564  0EFF               	movlw	255
 18072  003566  2186               	addwfc	(??_atoi+1)& (0+255),w,b
 18073  003568  6F89               	movwf	(atoi@a+1)& (0+255),b
 18074  00356A                     l12137:
 18075                           
 18076                           ; BSR set to: 0
 18077  00356A  4B83               	infsnz	atoi@s& (0+255),f,b
 18078  00356C  2B84               	incf	(atoi@s+1)& (0+255),f,b
 18079  00356E                     l2762:
 18080                           
 18081                           ; BSR set to: 0
 18082                           
 18083                           ; BSR set to: 0
 18084  00356E  C083  FFD9         	movff	atoi@s,fsr2l
 18085  003572  C084  FFDA         	movff	atoi@s+1,fsr2h
 18086  003576  50DF               	movf	indf2,w,c
 18087  003578  EC76  F02E         	call	_isdigit
 18088  00357C  B0D8               	btfsc	status,0,c
 18089  00357E  D7D8               	goto	l2763
 18090  003580  0100               	movlb	0	; () banked
 18091  003582  5187               	movf	atoi@sign& (0+255),w,b
 18092  003584  B4D8               	btfsc	status,2,c
 18093  003586  D00D               	goto	l2765
 18094                           
 18095                           ; BSR set to: 0
 18096  003588  C088  F085         	movff	atoi@a,??_atoi
 18097  00358C  C089  F086         	movff	atoi@a+1,??_atoi+1
 18098  003590  1F85               	comf	??_atoi& (0+255),f,b
 18099  003592  1F86               	comf	(??_atoi+1)& (0+255),f,b
 18100  003594  4B85               	infsnz	??_atoi& (0+255),f,b
 18101  003596  2B86               	incf	(??_atoi+1)& (0+255),f,b
 18102  003598  C085  F083         	movff	??_atoi,?_atoi
 18103  00359C  C086  F084         	movff	??_atoi+1,?_atoi+1
 18104  0035A0  0012               	return	
 18105  0035A2                     l2765:
 18106                           
 18107                           ; BSR set to: 0
 18108  0035A2  C088  F083         	movff	atoi@a,?_atoi
 18109  0035A6  C089  F084         	movff	atoi@a+1,?_atoi+1
 18110                           
 18111                           ; BSR set to: 0
 18112  0035AA  0012               	return		;funcret
 18113  0035AC                     __end_of_atoi:
 18114                           	opt stack 0
 18115                           tosu	equ	0xFFF
 18116                           tosh	equ	0xFFE
 18117                           tosl	equ	0xFFD
 18118                           pclath	equ	0xFFA
 18119                           tblptru	equ	0xFF8
 18120                           tblptrh	equ	0xFF7
 18121                           tblptrl	equ	0xFF6
 18122                           tablat	equ	0xFF5
 18123                           prodh	equ	0xFF4
 18124                           prodl	equ	0xFF3
 18125                           intcon	equ	0xFF2
 18126                           intcon2	equ	0xFF1
 18127                           intcon3	equ	0xFF0
 18128                           indf0	equ	0xFEF
 18129                           postinc0	equ	0xFEE
 18130                           plusw0	equ	0xFEB
 18131                           fsr0h	equ	0xFEA
 18132                           fsr0l	equ	0xFE9
 18133                           wreg	equ	0xFE8
 18134                           indf1	equ	0xFE7
 18135                           postinc1	equ	0xFE6
 18136                           postdec1	equ	0xFE5
 18137                           plusw1	equ	0xFE3
 18138                           fsr1h	equ	0xFE2
 18139                           fsr1l	equ	0xFE1
 18140                           indf2	equ	0xFDF
 18141                           postinc2	equ	0xFDE
 18142                           postdec2	equ	0xFDD
 18143                           plusw2	equ	0xFDB
 18144                           fsr2h	equ	0xFDA
 18145                           fsr2l	equ	0xFD9
 18146                           status	equ	0xFD8
 18147                           
 18148 ;; *************** function _isdigit *****************
 18149 ;; Defined at:
 18150 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isdigit.c"
 18151 ;; Parameters:    Size  Location     Type
 18152 ;;  c               1    wreg     unsigned char 
 18153 ;; Auto vars:     Size  Location     Type
 18154 ;;  c               1   31[BANK0 ] unsigned char 
 18155 ;; Return value:  Size  Location     Type
 18156 ;;		None               void
 18157 ;; Registers used:
 18158 ;;		wreg, status,2, status,0
 18159 ;; Tracked objects:
 18160 ;;		On entry : 0/0
 18161 ;;		On exit  : 0/0
 18162 ;;		Unchanged: 0/0
 18163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18164 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18165 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18166 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18167 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18168 ;;Total ram usage:        3 bytes
 18169 ;; Hardware stack levels used:    1
 18170 ;; Hardware stack levels required when called:   11
 18171 ;; This function calls:
 18172 ;;		Nothing
 18173 ;; This function is called by:
 18174 ;;		_atoi
 18175 ;;		_strtol
 18176 ;;		_xtoi
 18177 ;;		_isxdigit
 18178 ;; This function uses a non-reentrant model
 18179 ;;
 18180                           
 18181                           	psect	text77
 18182  005CEC                     __ptext77:
 18183                           	opt stack 0
 18184  005CEC                     _isdigit:
 18185                           	opt stack 12
 18186                           
 18187                           ; BSR set to: 0
 18188                           ;incstack = 0
 18189                           ;isdigit@c stored from wreg
 18190  005CEC  0100               	movlb	0	; () banked
 18191  005CEE  6F7F               	movwf	isdigit@c& (0+255),b
 18192  005CF0  0E00               	movlw	0
 18193  005CF2  0100               	movlb	0	; () banked
 18194  005CF4  6F7E               	movwf	_isdigit$6139& (0+255),b
 18195                           
 18196                           ; BSR set to: 0
 18197  005CF6  0E3A               	movlw	58
 18198  005CF8  617F               	cpfslt	isdigit@c& (0+255),b
 18199  005CFA  D005               	goto	l2937
 18200                           
 18201                           ; BSR set to: 0
 18202  005CFC  0E2F               	movlw	47
 18203  005CFE  657F               	cpfsgt	isdigit@c& (0+255),b
 18204  005D00  D002               	goto	l2937
 18205                           
 18206                           ; BSR set to: 0
 18207  005D02  0E01               	movlw	1
 18208  005D04  6F7E               	movwf	_isdigit$6139& (0+255),b
 18209  005D06                     l2937:
 18210                           
 18211                           ; BSR set to: 0
 18212                           
 18213                           ; BSR set to: 0
 18214  005D06  C07E  F07D         	movff	_isdigit$6139,??_isdigit
 18215  005D0A  317D               	rrcf	??_isdigit& (0+255),w,b
 18216  005D0C  0012               	return	
 18217  005D0E                     __end_of_isdigit:
 18218                           	opt stack 0
 18219                           tosu	equ	0xFFF
 18220                           tosh	equ	0xFFE
 18221                           tosl	equ	0xFFD
 18222                           pclath	equ	0xFFA
 18223                           tblptru	equ	0xFF8
 18224                           tblptrh	equ	0xFF7
 18225                           tblptrl	equ	0xFF6
 18226                           tablat	equ	0xFF5
 18227                           prodh	equ	0xFF4
 18228                           prodl	equ	0xFF3
 18229                           intcon	equ	0xFF2
 18230                           intcon2	equ	0xFF1
 18231                           intcon3	equ	0xFF0
 18232                           indf0	equ	0xFEF
 18233                           postinc0	equ	0xFEE
 18234                           plusw0	equ	0xFEB
 18235                           fsr0h	equ	0xFEA
 18236                           fsr0l	equ	0xFE9
 18237                           wreg	equ	0xFE8
 18238                           indf1	equ	0xFE7
 18239                           postinc1	equ	0xFE6
 18240                           postdec1	equ	0xFE5
 18241                           plusw1	equ	0xFE3
 18242                           fsr1h	equ	0xFE2
 18243                           fsr1l	equ	0xFE1
 18244                           indf2	equ	0xFDF
 18245                           postinc2	equ	0xFDE
 18246                           postdec2	equ	0xFDD
 18247                           plusw2	equ	0xFDB
 18248                           fsr2h	equ	0xFDA
 18249                           fsr2l	equ	0xFD9
 18250                           status	equ	0xFD8
 18251                           
 18252 ;; *************** function _OsTmr_Wait *****************
 18253 ;; Defined at:
 18254 ;;		line 154 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 18255 ;; Parameters:    Size  Location     Type
 18256 ;;  WaitTimer       2   59[BANK0 ] PTR struct _SwTimerType
 18257 ;;		 -> Terminal@SwTimer(11), I2cSlv_QueryI2cData@QueryTimer(11), 
 18258 ;;  DelayMs         4   61[BANK0 ] unsigned long 
 18259 ;; Auto vars:     Size  Location     Type
 18260 ;;  Ret             1   65[BANK0 ] enum E7749
 18261 ;; Return value:  Size  Location     Type
 18262 ;;                  1    wreg      enum E7749
 18263 ;; Registers used:
 18264 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 18265 ;; Tracked objects:
 18266 ;;		On entry : 0/0
 18267 ;;		On exit  : 0/0
 18268 ;;		Unchanged: 0/0
 18269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18270 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18271 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18273 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18274 ;;Total ram usage:        7 bytes
 18275 ;; Hardware stack levels used:    1
 18276 ;; Hardware stack levels required when called:   14
 18277 ;; This function calls:
 18278 ;;		_OsTmr_GetTimerStatus
 18279 ;;		_OsTmr_StartTimer
 18280 ;; This function is called by:
 18281 ;;		_Terminal
 18282 ;;		_I2cSlv_QueryI2cData
 18283 ;; This function uses a non-reentrant model
 18284 ;;
 18285                           
 18286                           	psect	text78
 18287  004A86                     __ptext78:
 18288                           	opt stack 0
 18289  004A86                     _OsTmr_Wait:
 18290                           	opt stack 11
 18291                           
 18292                           ;os_timers.c: 156: DelayStatusType Ret = DelayNotExpired;
 18293                           
 18294                           ; BSR set to: 0
 18295                           ;incstack = 0
 18296  004A86  0E00               	movlw	0
 18297  004A88  0100               	movlb	0	; () banked
 18298  004A8A  6FA1               	movwf	OsTmr_Wait@Ret& (0+255),b
 18299                           
 18300                           ;os_timers.c: 158: switch (WaitTimer->WaitState)
 18301  004A8C  D02D               	goto	l855
 18302  004A8E                     
 18303                           ; BSR set to: 0
 18304                           ;os_timers.c: 162: OsTmr_StartTimer(WaitTimer,DelayMs);
 18305                           
 18306                           ; BSR set to: 0
 18307  004A8E  C09B  F081         	movff	OsTmr_Wait@WaitTimer,OsTmr_StartTimer@Timer
 18308  004A92  C09C  F082         	movff	OsTmr_Wait@WaitTimer+1,OsTmr_StartTimer@Timer+1
 18309  004A96  C09D  F083         	movff	OsTmr_Wait@DelayMs,OsTmr_StartTimer@Timeout
 18310  004A9A  C09E  F084         	movff	OsTmr_Wait@DelayMs+1,OsTmr_StartTimer@Timeout+1
 18311  004A9E  C09F  F085         	movff	OsTmr_Wait@DelayMs+2,OsTmr_StartTimer@Timeout+2
 18312  004AA2  C0A0  F086         	movff	OsTmr_Wait@DelayMs+3,OsTmr_StartTimer@Timeout+3
 18313  004AA6  EC60  F027         	call	_OsTmr_StartTimer	;wreg free
 18314                           
 18315                           ;os_timers.c: 164: WaitTimer->WaitState = WtWait;
 18316  004AAA  0100               	movlb	0	; () banked
 18317  004AAC  EE20 F00A          	lfsr	2,10
 18318  004AB0  519B               	movf	OsTmr_Wait@WaitTimer& (0+255),w,b
 18319  004AB2  26D9               	addwf	fsr2l,f,c
 18320  004AB4  519C               	movf	(OsTmr_Wait@WaitTimer+1)& (0+255),w,b
 18321  004AB6  22DA               	addwfc	fsr2h,f,c
 18322  004AB8  0E01               	movlw	1
 18323  004ABA  6EDF               	movwf	indf2,c
 18324                           
 18325                           ;os_timers.c: 165: break;
 18326  004ABC  D022               	goto	l857
 18327  004ABE                     
 18328                           ; BSR set to: 0
 18329                           ;os_timers.c: 169: if (OsTmr_GetTimerStatus(WaitTimer) == SwTimerExpired)
 18330                           
 18331                           ; BSR set to: 0
 18332  004ABE  C09B  F095         	movff	OsTmr_Wait@WaitTimer,OsTmr_GetTimerStatus@Timer
 18333  004AC2  C09C  F096         	movff	OsTmr_Wait@WaitTimer+1,OsTmr_GetTimerStatus@Timer+1
 18334  004AC6  ECE9  F023         	call	_OsTmr_GetTimerStatus	;wreg free
 18335  004ACA  06E8               	decf	wreg,f,c
 18336  004ACC  A4D8               	btfss	status,2,c
 18337  004ACE  D019               	goto	l857
 18338                           
 18339                           ;os_timers.c: 170: {
 18340                           ;os_timers.c: 172: WaitTimer->WaitState = WtStartSwTimer;
 18341  004AD0  0100               	movlb	0	; () banked
 18342  004AD2  EE20 F00A          	lfsr	2,10
 18343  004AD6  519B               	movf	OsTmr_Wait@WaitTimer& (0+255),w,b
 18344  004AD8  26D9               	addwf	fsr2l,f,c
 18345  004ADA  519C               	movf	(OsTmr_Wait@WaitTimer+1)& (0+255),w,b
 18346  004ADC  22DA               	addwfc	fsr2h,f,c
 18347  004ADE  0E00               	movlw	0
 18348  004AE0  6EDF               	movwf	indf2,c
 18349                           
 18350                           ; BSR set to: 0
 18351                           ;os_timers.c: 174: Ret = DelayExpired;
 18352  004AE2  0E01               	movlw	1
 18353  004AE4  6FA1               	movwf	OsTmr_Wait@Ret& (0+255),b
 18354                           
 18355                           ; BSR set to: 0
 18356                           ;os_timers.c: 180: }
 18357                           
 18358                           ; BSR set to: 0
 18359                           ;os_timers.c: 179: break;
 18360                           
 18361                           ;os_timers.c: 178: default:
 18362                           
 18363                           ; BSR set to: 0
 18364                           ;os_timers.c: 175: }
 18365                           ;os_timers.c: 176: break;
 18366  004AE6  D00D               	goto	l857
 18367  004AE8                     l855:
 18368                           
 18369                           ; BSR set to: 0
 18370                           
 18371                           ; BSR set to: 0
 18372  004AE8  EE20 F00A          	lfsr	2,10
 18373  004AEC  519B               	movf	OsTmr_Wait@WaitTimer& (0+255),w,b
 18374  004AEE  26D9               	addwf	fsr2l,f,c
 18375  004AF0  519C               	movf	(OsTmr_Wait@WaitTimer+1)& (0+255),w,b
 18376  004AF2  22DA               	addwfc	fsr2h,f,c
 18377  004AF4  50DF               	movf	indf2,w,c
 18378                           
 18379                           ; Switch size 1, requested type "space"
 18380                           ; Number of cases is 2, Range of values is 0 to 1
 18381                           ; switch strategies available:
 18382                           ; Name         Instructions Cycles
 18383                           ; simple_byte            7     4 (average)
 18384                           ;	Chosen strategy is simple_byte
 18385  004AF6  0A00               	xorlw	0	; case 0
 18386  004AF8  B4D8               	btfsc	status,2,c
 18387  004AFA  D7C9               	goto	l856
 18388  004AFC  0A01               	xorlw	1	; case 1
 18389  004AFE  B4D8               	btfsc	status,2,c
 18390  004B00  D7DE               	goto	l858
 18391  004B02                     l857:
 18392                           
 18393                           ;os_timers.c: 182: return Ret;
 18394                           
 18395                           ; BSR set to: 0
 18396  004B02  0100               	movlb	0	; () banked
 18397  004B04  51A1               	movf	OsTmr_Wait@Ret& (0+255),w,b
 18398  004B06  0012               	return	
 18399  004B08                     __end_of_OsTmr_Wait:
 18400                           	opt stack 0
 18401                           tosu	equ	0xFFF
 18402                           tosh	equ	0xFFE
 18403                           tosl	equ	0xFFD
 18404                           pclath	equ	0xFFA
 18405                           tblptru	equ	0xFF8
 18406                           tblptrh	equ	0xFF7
 18407                           tblptrl	equ	0xFF6
 18408                           tablat	equ	0xFF5
 18409                           prodh	equ	0xFF4
 18410                           prodl	equ	0xFF3
 18411                           intcon	equ	0xFF2
 18412                           intcon2	equ	0xFF1
 18413                           intcon3	equ	0xFF0
 18414                           indf0	equ	0xFEF
 18415                           postinc0	equ	0xFEE
 18416                           plusw0	equ	0xFEB
 18417                           fsr0h	equ	0xFEA
 18418                           fsr0l	equ	0xFE9
 18419                           wreg	equ	0xFE8
 18420                           indf1	equ	0xFE7
 18421                           postinc1	equ	0xFE6
 18422                           postdec1	equ	0xFE5
 18423                           plusw1	equ	0xFE3
 18424                           fsr1h	equ	0xFE2
 18425                           fsr1l	equ	0xFE1
 18426                           indf2	equ	0xFDF
 18427                           postinc2	equ	0xFDE
 18428                           postdec2	equ	0xFDD
 18429                           plusw2	equ	0xFDB
 18430                           fsr2h	equ	0xFDA
 18431                           fsr2l	equ	0xFD9
 18432                           status	equ	0xFD8
 18433                           
 18434 ;; *************** function _I2cSlv_SendI2cMsg *****************
 18435 ;; Defined at:
 18436 ;;		line 252 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 18437 ;; Parameters:    Size  Location     Type
 18438 ;;  TxBuffer        2   32[BANK0 ] PTR unsigned char 
 18439 ;;		 -> triggerRelay@txBuffer(2), Terminal@TermTxBuffer(50), I2cDummyTx@DummyBuffer(1), 
 18440 ;;  SlaveAddr       1   34[BANK0 ] unsigned char 
 18441 ;;  DataLenght      1   35[BANK0 ] unsigned char 
 18442 ;; Auto vars:     Size  Location     Type
 18443 ;;  TxSts           1   36[BANK0 ] unsigned char 
 18444 ;; Return value:  Size  Location     Type
 18445 ;;                  1    wreg      unsigned char 
 18446 ;; Registers used:
 18447 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18448 ;; Tracked objects:
 18449 ;;		On entry : 0/0
 18450 ;;		On exit  : 0/0
 18451 ;;		Unchanged: 0/0
 18452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18453 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18454 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18455 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18456 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18457 ;;Total ram usage:        5 bytes
 18458 ;; Hardware stack levels used:    1
 18459 ;; Hardware stack levels required when called:   12
 18460 ;; This function calls:
 18461 ;;		_GenerateEvt
 18462 ;; This function is called by:
 18463 ;;		_Terminal
 18464 ;;		_I2cSlv_QueryI2cData
 18465 ;;		_triggerRelay
 18466 ;; This function uses a non-reentrant model
 18467 ;;
 18468                           
 18469                           	psect	text79
 18470  00577A                     __ptext79:
 18471                           	opt stack 0
 18472  00577A                     _I2cSlv_SendI2cMsg:
 18473                           	opt stack 13
 18474                           
 18475                           ;i2c_slv.c: 254: UINT8 TxSts = 0u;
 18476                           
 18477                           ; BSR set to: 0
 18478                           ;incstack = 0
 18479  00577A  0E00               	movlw	0
 18480  00577C  0100               	movlb	0	; () banked
 18481  00577E  6F84               	movwf	I2cSlv_SendI2cMsg@TxSts& (0+255),b
 18482                           
 18483                           ; BSR set to: 0
 18484                           ;i2c_slv.c: 256: if (I2cComSts != TxInProgress)
 18485  005780  05CC               	decf	_I2cComSts& (0+255),w,b
 18486  005782  B4D8               	btfsc	status,2,c
 18487  005784  D015               	goto	l1395
 18488                           
 18489                           ; BSR set to: 0
 18490                           ;i2c_slv.c: 257: {
 18491                           ;i2c_slv.c: 259: I2cTxPacket.SlaveAddress = SlaveAddr;
 18492  005786  C082  F39F         	movff	I2cSlv_SendI2cMsg@SlaveAddr,_I2cTxPacket
 18493                           
 18494                           ; BSR set to: 0
 18495                           ;i2c_slv.c: 260: I2cTxPacket.ReadWrite = ((UINT8)(0));
 18496  00578A  0E00               	movlw	0
 18497  00578C  0103               	movlb	3	; () banked
 18498  00578E  6FA0               	movwf	(_I2cTxPacket+1)& (0+255),b
 18499                           
 18500                           ; BSR set to: 3
 18501                           ;i2c_slv.c: 261: I2cTxPacket.Lenght = DataLenght;
 18502  005790  C083  F3A3         	movff	I2cSlv_SendI2cMsg@DataLenght,_I2cTxPacket+4
 18503                           
 18504                           ; BSR set to: 3
 18505                           ;i2c_slv.c: 262: I2cTxPacket.Buffer = TxBuffer;
 18506  005794  C080  F3A1         	movff	I2cSlv_SendI2cMsg@TxBuffer,_I2cTxPacket+2
 18507  005798  C081  F3A2         	movff	I2cSlv_SendI2cMsg@TxBuffer+1,_I2cTxPacket+3
 18508                           
 18509                           ; BSR set to: 3
 18510                           ;i2c_slv.c: 265: GenerateEvt(&I2cWriteDataEvt);
 18511  00579C  0ED6               	movlw	low _I2cWriteDataEvt
 18512  00579E  0100               	movlb	0	; () banked
 18513  0057A0  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 18514  0057A2  0E00               	movlw	high _I2cWriteDataEvt
 18515  0057A4  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 18516  0057A6  EC24  F02F         	call	_GenerateEvt	;wreg free
 18517                           
 18518                           ;i2c_slv.c: 267: TxSts = 1u;
 18519  0057AA  0E01               	movlw	1
 18520  0057AC  0100               	movlb	0	; () banked
 18521  0057AE  D001               	goto	L18
 18522  0057B0                     l1395:
 18523                           
 18524                           ; BSR set to: 0
 18525                           ;i2c_slv.c: 269: else
 18526                           ;i2c_slv.c: 270: {
 18527                           ;i2c_slv.c: 272: TxSts = 0u;
 18528                           
 18529                           ; BSR set to: 0
 18530  0057B0  0E00               	movlw	0
 18531  0057B2                     L18:
 18532  0057B2  6F84               	movwf	I2cSlv_SendI2cMsg@TxSts& (0+255),b
 18533                           
 18534                           ; BSR set to: 0
 18535                           ;i2c_slv.c: 273: }
 18536                           ;i2c_slv.c: 275: return TxSts;
 18537  0057B4  5184               	movf	I2cSlv_SendI2cMsg@TxSts& (0+255),w,b
 18538  0057B6  0012               	return	
 18539  0057B8                     __end_of_I2cSlv_SendI2cMsg:
 18540                           	opt stack 0
 18541                           tosu	equ	0xFFF
 18542                           tosh	equ	0xFFE
 18543                           tosl	equ	0xFFD
 18544                           pclath	equ	0xFFA
 18545                           tblptru	equ	0xFF8
 18546                           tblptrh	equ	0xFF7
 18547                           tblptrl	equ	0xFF6
 18548                           tablat	equ	0xFF5
 18549                           prodh	equ	0xFF4
 18550                           prodl	equ	0xFF3
 18551                           intcon	equ	0xFF2
 18552                           intcon2	equ	0xFF1
 18553                           intcon3	equ	0xFF0
 18554                           indf0	equ	0xFEF
 18555                           postinc0	equ	0xFEE
 18556                           plusw0	equ	0xFEB
 18557                           fsr0h	equ	0xFEA
 18558                           fsr0l	equ	0xFE9
 18559                           wreg	equ	0xFE8
 18560                           indf1	equ	0xFE7
 18561                           postinc1	equ	0xFE6
 18562                           postdec1	equ	0xFE5
 18563                           plusw1	equ	0xFE3
 18564                           fsr1h	equ	0xFE2
 18565                           fsr1l	equ	0xFE1
 18566                           indf2	equ	0xFDF
 18567                           postinc2	equ	0xFDE
 18568                           postdec2	equ	0xFDD
 18569                           plusw2	equ	0xFDB
 18570                           fsr2h	equ	0xFDA
 18571                           fsr2l	equ	0xFD9
 18572                           status	equ	0xFD8
 18573                           
 18574 ;; *************** function _I2cSlv_ReceiveI2cMsg *****************
 18575 ;; Defined at:
 18576 ;;		line 289 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 18577 ;; Parameters:    Size  Location     Type
 18578 ;;  RxBuffer        2   32[BANK0 ] PTR unsigned char 
 18579 ;;		 -> Terminal@TermRxBuffer(50), 
 18580 ;;  SlaveAddr       1   34[BANK0 ] unsigned char 
 18581 ;;  DataLenght      1   35[BANK0 ] unsigned char 
 18582 ;; Auto vars:     Size  Location     Type
 18583 ;;  RxSts           1   36[BANK0 ] unsigned char 
 18584 ;; Return value:  Size  Location     Type
 18585 ;;                  1    wreg      unsigned char 
 18586 ;; Registers used:
 18587 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18588 ;; Tracked objects:
 18589 ;;		On entry : 0/0
 18590 ;;		On exit  : 0/0
 18591 ;;		Unchanged: 0/0
 18592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18593 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18594 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18596 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18597 ;;Total ram usage:        5 bytes
 18598 ;; Hardware stack levels used:    1
 18599 ;; Hardware stack levels required when called:   12
 18600 ;; This function calls:
 18601 ;;		_GenerateEvt
 18602 ;; This function is called by:
 18603 ;;		_Terminal
 18604 ;;		_I2cSlv_QueryI2cData
 18605 ;; This function uses a non-reentrant model
 18606 ;;
 18607                           
 18608                           	psect	text80
 18609  00567C                     __ptext80:
 18610                           	opt stack 0
 18611  00567C                     _I2cSlv_ReceiveI2cMsg:
 18612                           	opt stack 13
 18613                           
 18614                           ;i2c_slv.c: 291: UINT8 RxSts = 0u;
 18615                           
 18616                           ; BSR set to: 0
 18617                           ;incstack = 0
 18618  00567C  0E00               	movlw	0
 18619  00567E  0100               	movlb	0	; () banked
 18620  005680  6F84               	movwf	I2cSlv_ReceiveI2cMsg@RxSts& (0+255),b
 18621                           
 18622                           ; BSR set to: 0
 18623                           ;i2c_slv.c: 293: if (I2cComSts != RxInProgress)
 18624  005682  0E02               	movlw	2
 18625  005684  19CC               	xorwf	_I2cComSts& (0+255),w,b
 18626  005686  B4D8               	btfsc	status,2,c
 18627  005688  D016               	goto	l1400
 18628                           
 18629                           ; BSR set to: 0
 18630                           ;i2c_slv.c: 294: {
 18631                           ;i2c_slv.c: 296: I2cRxPacket.SlaveAddress = SlaveAddr;
 18632  00568A  C082  F399         	movff	I2cSlv_ReceiveI2cMsg@SlaveAddr,_I2cRxPacket
 18633                           
 18634                           ; BSR set to: 0
 18635                           ;i2c_slv.c: 297: I2cRxPacket.ReadWrite = ((UINT8)(1));
 18636  00568E  0E01               	movlw	1
 18637  005690  0103               	movlb	3	; () banked
 18638  005692  6F9A               	movwf	(_I2cRxPacket+1)& (0+255),b
 18639                           
 18640                           ; BSR set to: 3
 18641                           ;i2c_slv.c: 298: I2cRxPacket.Lenght = DataLenght;
 18642  005694  C083  F39D         	movff	I2cSlv_ReceiveI2cMsg@DataLenght,_I2cRxPacket+4
 18643                           
 18644                           ; BSR set to: 3
 18645                           ;i2c_slv.c: 299: I2cRxPacket.Buffer = RxBuffer;
 18646  005698  C080  F39B         	movff	I2cSlv_ReceiveI2cMsg@RxBuffer,_I2cRxPacket+2
 18647  00569C  C081  F39C         	movff	I2cSlv_ReceiveI2cMsg@RxBuffer+1,_I2cRxPacket+3
 18648                           
 18649                           ; BSR set to: 3
 18650                           ;i2c_slv.c: 302: GenerateEvt(&I2cReadDataEvt);
 18651  0056A0  0ED5               	movlw	low _I2cReadDataEvt
 18652  0056A2  0100               	movlb	0	; () banked
 18653  0056A4  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 18654  0056A6  0E00               	movlw	high _I2cReadDataEvt
 18655  0056A8  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 18656  0056AA  EC24  F02F         	call	_GenerateEvt	;wreg free
 18657                           
 18658                           ;i2c_slv.c: 304: RxSts = 1u;
 18659  0056AE  0E01               	movlw	1
 18660  0056B0  0100               	movlb	0	; () banked
 18661  0056B2  6F84               	movwf	I2cSlv_ReceiveI2cMsg@RxSts& (0+255),b
 18662                           
 18663                           ;i2c_slv.c: 305: }
 18664  0056B4  0012               	return	
 18665  0056B6                     l1400:
 18666                           
 18667                           ; BSR set to: 0
 18668                           ;i2c_slv.c: 306: else
 18669                           ;i2c_slv.c: 307: {
 18670                           ;i2c_slv.c: 309: RxSts = 0u;
 18671                           
 18672                           ; BSR set to: 0
 18673  0056B6  0E00               	movlw	0
 18674  0056B8  6F84               	movwf	I2cSlv_ReceiveI2cMsg@RxSts& (0+255),b
 18675                           
 18676                           ; BSR set to: 0
 18677  0056BA  0012               	return	
 18678  0056BC                     __end_of_I2cSlv_ReceiveI2cMsg:
 18679                           	opt stack 0
 18680                           tosu	equ	0xFFF
 18681                           tosh	equ	0xFFE
 18682                           tosl	equ	0xFFD
 18683                           pclath	equ	0xFFA
 18684                           tblptru	equ	0xFF8
 18685                           tblptrh	equ	0xFF7
 18686                           tblptrl	equ	0xFF6
 18687                           tablat	equ	0xFF5
 18688                           prodh	equ	0xFF4
 18689                           prodl	equ	0xFF3
 18690                           intcon	equ	0xFF2
 18691                           intcon2	equ	0xFF1
 18692                           intcon3	equ	0xFF0
 18693                           indf0	equ	0xFEF
 18694                           postinc0	equ	0xFEE
 18695                           plusw0	equ	0xFEB
 18696                           fsr0h	equ	0xFEA
 18697                           fsr0l	equ	0xFE9
 18698                           wreg	equ	0xFE8
 18699                           indf1	equ	0xFE7
 18700                           postinc1	equ	0xFE6
 18701                           postdec1	equ	0xFE5
 18702                           plusw1	equ	0xFE3
 18703                           fsr1h	equ	0xFE2
 18704                           fsr1l	equ	0xFE1
 18705                           indf2	equ	0xFDF
 18706                           postinc2	equ	0xFDE
 18707                           postdec2	equ	0xFDD
 18708                           plusw2	equ	0xFDB
 18709                           fsr2h	equ	0xFDA
 18710                           fsr2l	equ	0xFD9
 18711                           status	equ	0xFD8
 18712                           
 18713 ;; *************** function _I2cSlv_I2cReadMsgSts *****************
 18714 ;; Defined at:
 18715 ;;		line 324 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 18716 ;; Parameters:    Size  Location     Type
 18717 ;;		None
 18718 ;; Auto vars:     Size  Location     Type
 18719 ;;  Result          1   33[BANK0 ] enum E8915
 18720 ;; Return value:  Size  Location     Type
 18721 ;;                  1    wreg      enum E8915
 18722 ;; Registers used:
 18723 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18724 ;; Tracked objects:
 18725 ;;		On entry : 0/0
 18726 ;;		On exit  : 0/0
 18727 ;;		Unchanged: 0/0
 18728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18729 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18730 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18731 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18732 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18733 ;;Total ram usage:        1 bytes
 18734 ;; Hardware stack levels used:    1
 18735 ;; Hardware stack levels required when called:   12
 18736 ;; This function calls:
 18737 ;;		_ReceiveEvt
 18738 ;; This function is called by:
 18739 ;;		_Terminal
 18740 ;;		_I2cSlv_QueryI2cData
 18741 ;; This function uses a non-reentrant model
 18742 ;;
 18743                           
 18744                           	psect	text81
 18745  005D0E                     __ptext81:
 18746                           	opt stack 0
 18747  005D0E                     _I2cSlv_I2cReadMsgSts:
 18748                           	opt stack 13
 18749                           
 18750                           ;i2c_slv.c: 327: I2cReadMsgStsType Result;
 18751                           ;i2c_slv.c: 330: if (ReceiveEvt(&(I2cRxPacket.ReadCompleteEvt)))
 18752                           
 18753                           ; BSR set to: 0
 18754                           ;incstack = 0
 18755  005D0E  0E9E               	movlw	low (_I2cRxPacket+5)
 18756  005D10  0100               	movlb	0	; () banked
 18757  005D12  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 18758  005D14  0E03               	movlw	high (_I2cRxPacket+5)
 18759  005D16  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 18760  005D18  EC6C  F02D         	call	_ReceiveEvt	;wreg free
 18761  005D1C  0900               	iorlw	0
 18762  005D1E  B4D8               	btfsc	status,2,c
 18763  005D20  D002               	goto	l1405
 18764                           
 18765                           ;i2c_slv.c: 331: {
 18766                           ;i2c_slv.c: 332: Result = MessageReceived;
 18767  005D22  0E01               	movlw	1
 18768  005D24  D001               	goto	L19
 18769  005D26                     l1405:
 18770                           
 18771                           ;i2c_slv.c: 334: else
 18772                           ;i2c_slv.c: 335: {
 18773                           ;i2c_slv.c: 336: Result = MessageNotReceived;
 18774                           
 18775                           ; BSR set to: 0
 18776  005D26  0E00               	movlw	0
 18777  005D28                     L19:
 18778  005D28  0100               	movlb	0	; () banked
 18779  005D2A  6F81               	movwf	I2cSlv_I2cReadMsgSts@Result& (0+255),b
 18780                           
 18781                           ; BSR set to: 0
 18782                           ;i2c_slv.c: 337: }
 18783                           ;i2c_slv.c: 339: return Result;
 18784  005D2C  5181               	movf	I2cSlv_I2cReadMsgSts@Result& (0+255),w,b
 18785  005D2E  0012               	return	
 18786  005D30                     __end_of_I2cSlv_I2cReadMsgSts:
 18787                           	opt stack 0
 18788                           tosu	equ	0xFFF
 18789                           tosh	equ	0xFFE
 18790                           tosl	equ	0xFFD
 18791                           pclath	equ	0xFFA
 18792                           tblptru	equ	0xFF8
 18793                           tblptrh	equ	0xFF7
 18794                           tblptrl	equ	0xFF6
 18795                           tablat	equ	0xFF5
 18796                           prodh	equ	0xFF4
 18797                           prodl	equ	0xFF3
 18798                           intcon	equ	0xFF2
 18799                           intcon2	equ	0xFF1
 18800                           intcon3	equ	0xFF0
 18801                           indf0	equ	0xFEF
 18802                           postinc0	equ	0xFEE
 18803                           plusw0	equ	0xFEB
 18804                           fsr0h	equ	0xFEA
 18805                           fsr0l	equ	0xFE9
 18806                           wreg	equ	0xFE8
 18807                           indf1	equ	0xFE7
 18808                           postinc1	equ	0xFE6
 18809                           postdec1	equ	0xFE5
 18810                           plusw1	equ	0xFE3
 18811                           fsr1h	equ	0xFE2
 18812                           fsr1l	equ	0xFE1
 18813                           indf2	equ	0xFDF
 18814                           postinc2	equ	0xFDE
 18815                           postdec2	equ	0xFDD
 18816                           plusw2	equ	0xFDB
 18817                           fsr2h	equ	0xFDA
 18818                           fsr2l	equ	0xFD9
 18819                           status	equ	0xFD8
 18820                           
 18821 ;; *************** function _Rtcm_SetRtccDate *****************
 18822 ;; Defined at:
 18823 ;;		line 176 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/rtcm.c"
 18824 ;; Parameters:    Size  Location     Type
 18825 ;;  Date            8   41[BANK0 ] struct _RtccDateType
 18826 ;; Auto vars:     Size  Location     Type
 18827 ;;		None
 18828 ;; Return value:  Size  Location     Type
 18829 ;;                  1    wreg      void 
 18830 ;; Registers used:
 18831 ;;		wreg, status,2, status,0, cstack
 18832 ;; Tracked objects:
 18833 ;;		On entry : 0/0
 18834 ;;		On exit  : 0/0
 18835 ;;		Unchanged: 0/0
 18836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18837 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18838 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18839 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18840 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18841 ;;Total ram usage:        8 bytes
 18842 ;; Hardware stack levels used:    1
 18843 ;; Hardware stack levels required when called:   13
 18844 ;; This function calls:
 18845 ;;		_Rtcc_LockRtc
 18846 ;;		_Rtcc_SetRtccValue
 18847 ;;		_Rtcc_UnlockRtc
 18848 ;; This function is called by:
 18849 ;;		_Rtcm_MainTask
 18850 ;; This function uses a non-reentrant model
 18851 ;;
 18852                           
 18853                           	psect	text82
 18854  00512E                     __ptext82:
 18855                           	opt stack 0
 18856  00512E                     _Rtcm_SetRtccDate:
 18857                           	opt stack 14
 18858                           
 18859                           ;rtcm.c: 179: Rtcc_UnlockRtc();
 18860                           
 18861                           ; BSR set to: 0
 18862                           ;incstack = 0
 18863  00512E  EC82  F02F         	call	_Rtcc_UnlockRtc	;wreg free
 18864                           
 18865                           ;rtcm.c: 182: Rtcc_SetRtccValue(ValPtrYear,(Date.Year - 2000));
 18866  005132  0100               	movlb	0	; () banked
 18867  005134  5189               	movf	Rtcm_SetRtccDate@Date& (0+255),w,b
 18868  005136  0F30               	addlw	48
 18869  005138  6F85               	movwf	Rtcc_SetRtccValue@Value& (0+255),b
 18870  00513A  0E00               	movlw	0
 18871  00513C  ECF7  F00A         	call	_Rtcc_SetRtccValue
 18872                           
 18873                           ;rtcm.c: 183: Rtcc_SetRtccValue(ValPtrMonth,Date.Month);
 18874  005140  C08B  F085         	movff	Rtcm_SetRtccDate@Date+2,Rtcc_SetRtccValue@Value
 18875  005144  0E01               	movlw	1
 18876  005146  ECF7  F00A         	call	_Rtcc_SetRtccValue
 18877                           
 18878                           ;rtcm.c: 184: Rtcc_SetRtccValue(ValPtrDay,Date.Day);
 18879  00514A  C08C  F085         	movff	Rtcm_SetRtccDate@Date+3,Rtcc_SetRtccValue@Value
 18880  00514E  0E02               	movlw	2
 18881  005150  ECF7  F00A         	call	_Rtcc_SetRtccValue
 18882                           
 18883                           ;rtcm.c: 185: Rtcc_SetRtccValue(ValPtrWeekday,Date.Weekday);
 18884  005154  C08D  F085         	movff	Rtcm_SetRtccDate@Date+4,Rtcc_SetRtccValue@Value
 18885  005158  0E03               	movlw	3
 18886  00515A  ECF7  F00A         	call	_Rtcc_SetRtccValue
 18887                           
 18888                           ;rtcm.c: 186: Rtcc_SetRtccValue(ValPtrHours,Date.Hour);
 18889  00515E  C08E  F085         	movff	Rtcm_SetRtccDate@Date+5,Rtcc_SetRtccValue@Value
 18890  005162  0E04               	movlw	4
 18891  005164  ECF7  F00A         	call	_Rtcc_SetRtccValue
 18892                           
 18893                           ;rtcm.c: 187: Rtcc_SetRtccValue(ValPtrMinutes,Date.Minute);
 18894  005168  C08F  F085         	movff	Rtcm_SetRtccDate@Date+6,Rtcc_SetRtccValue@Value
 18895  00516C  0E05               	movlw	5
 18896  00516E  ECF7  F00A         	call	_Rtcc_SetRtccValue
 18897                           
 18898                           ;rtcm.c: 188: Rtcc_SetRtccValue(ValPtrSeconds,Date.Second);
 18899  005172  C090  F085         	movff	Rtcm_SetRtccDate@Date+7,Rtcc_SetRtccValue@Value
 18900  005176  0E06               	movlw	6
 18901  005178  ECF7  F00A         	call	_Rtcc_SetRtccValue
 18902                           
 18903                           ;rtcm.c: 191: Rtcc_LockRtc();
 18904  00517C  EC8A  F02F         	call	_Rtcc_LockRtc	;wreg free
 18905  005180  0012               	return		;funcret
 18906  005182                     __end_of_Rtcm_SetRtccDate:
 18907                           	opt stack 0
 18908                           tosu	equ	0xFFF
 18909                           tosh	equ	0xFFE
 18910                           tosl	equ	0xFFD
 18911                           pclath	equ	0xFFA
 18912                           tblptru	equ	0xFF8
 18913                           tblptrh	equ	0xFF7
 18914                           tblptrl	equ	0xFF6
 18915                           tablat	equ	0xFF5
 18916                           prodh	equ	0xFF4
 18917                           prodl	equ	0xFF3
 18918                           intcon	equ	0xFF2
 18919                           intcon2	equ	0xFF1
 18920                           intcon3	equ	0xFF0
 18921                           indf0	equ	0xFEF
 18922                           postinc0	equ	0xFEE
 18923                           plusw0	equ	0xFEB
 18924                           fsr0h	equ	0xFEA
 18925                           fsr0l	equ	0xFE9
 18926                           wreg	equ	0xFE8
 18927                           indf1	equ	0xFE7
 18928                           postinc1	equ	0xFE6
 18929                           postdec1	equ	0xFE5
 18930                           plusw1	equ	0xFE3
 18931                           fsr1h	equ	0xFE2
 18932                           fsr1l	equ	0xFE1
 18933                           indf2	equ	0xFDF
 18934                           postinc2	equ	0xFDE
 18935                           postdec2	equ	0xFDD
 18936                           plusw2	equ	0xFDB
 18937                           fsr2h	equ	0xFDA
 18938                           fsr2l	equ	0xFD9
 18939                           status	equ	0xFD8
 18940                           
 18941 ;; *************** function _Rtcc_UnlockRtc *****************
 18942 ;; Defined at:
 18943 ;;		line 163 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 18944 ;; Parameters:    Size  Location     Type
 18945 ;;		None
 18946 ;; Auto vars:     Size  Location     Type
 18947 ;;		None
 18948 ;; Return value:  Size  Location     Type
 18949 ;;                  1    wreg      void 
 18950 ;; Registers used:
 18951 ;;		None
 18952 ;; Tracked objects:
 18953 ;;		On entry : 0/0
 18954 ;;		On exit  : 0/0
 18955 ;;		Unchanged: 0/0
 18956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18957 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18958 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18960 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18961 ;;Total ram usage:        0 bytes
 18962 ;; Hardware stack levels used:    1
 18963 ;; Hardware stack levels required when called:   11
 18964 ;; This function calls:
 18965 ;;		Nothing
 18966 ;; This function is called by:
 18967 ;;		_Rtcm_MainTask
 18968 ;;		_Rtcm_SetRtccDate
 18969 ;;		_Rtcm_SetRtccAlarm
 18970 ;; This function uses a non-reentrant model
 18971 ;;
 18972                           
 18973                           	psect	text83
 18974  005F04                     __ptext83:
 18975                           	opt stack 0
 18976  005F04                     _Rtcc_UnlockRtc:
 18977                           	opt stack 15
 18978                           
 18979                           ;incstack = 0
 18980  005F04  010F               	movlb	15	;# 
 18981  005F06  0E55               	movlw	85	;# 
 18982  005F08  6EA7               	movwf	4007,c	;# 
 18983  005F0A  0EAA               	movlw	170	;# 
 18984  005F0C  6EA7               	movwf	4007,c	;# 
 18985                           
 18986                           ;rtcc_drv.c: 172: RTCCFGbits.RTCWREN = 1u;
 18987  005F0E  010F               	movlb	15	; () banked
 18988  005F10  8B3F               	bsf	63,5,b	;volatile
 18989                           
 18990                           ; BSR set to: 15
 18991  005F12  0012               	return		;funcret
 18992  005F14                     __end_of_Rtcc_UnlockRtc:
 18993                           	opt stack 0
 18994                           tosu	equ	0xFFF
 18995                           tosh	equ	0xFFE
 18996                           tosl	equ	0xFFD
 18997                           pclath	equ	0xFFA
 18998                           tblptru	equ	0xFF8
 18999                           tblptrh	equ	0xFF7
 19000                           tblptrl	equ	0xFF6
 19001                           tablat	equ	0xFF5
 19002                           prodh	equ	0xFF4
 19003                           prodl	equ	0xFF3
 19004                           intcon	equ	0xFF2
 19005                           intcon2	equ	0xFF1
 19006                           intcon3	equ	0xFF0
 19007                           indf0	equ	0xFEF
 19008                           postinc0	equ	0xFEE
 19009                           plusw0	equ	0xFEB
 19010                           fsr0h	equ	0xFEA
 19011                           fsr0l	equ	0xFE9
 19012                           wreg	equ	0xFE8
 19013                           indf1	equ	0xFE7
 19014                           postinc1	equ	0xFE6
 19015                           postdec1	equ	0xFE5
 19016                           plusw1	equ	0xFE3
 19017                           fsr1h	equ	0xFE2
 19018                           fsr1l	equ	0xFE1
 19019                           indf2	equ	0xFDF
 19020                           postinc2	equ	0xFDE
 19021                           postdec2	equ	0xFDD
 19022                           plusw2	equ	0xFDB
 19023                           fsr2h	equ	0xFDA
 19024                           fsr2l	equ	0xFD9
 19025                           status	equ	0xFD8
 19026                           
 19027 ;; *************** function _Rtcc_SetRtccValue *****************
 19028 ;; Defined at:
 19029 ;;		line 383 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 19030 ;; Parameters:    Size  Location     Type
 19031 ;;  RtccPtrVal      1    wreg     enum E7757
 19032 ;;  Value           1   37[BANK0 ] unsigned char 
 19033 ;; Auto vars:     Size  Location     Type
 19034 ;;  RtccPtrVal      1   40[BANK0 ] enum E7757
 19035 ;; Return value:  Size  Location     Type
 19036 ;;                  1    wreg      void 
 19037 ;; Registers used:
 19038 ;;		wreg, status,2, status,0, cstack
 19039 ;; Tracked objects:
 19040 ;;		On entry : 0/0
 19041 ;;		On exit  : 0/0
 19042 ;;		Unchanged: 0/0
 19043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19044 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19045 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19046 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19047 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19048 ;;Total ram usage:        4 bytes
 19049 ;; Hardware stack levels used:    1
 19050 ;; Hardware stack levels required when called:   12
 19051 ;; This function calls:
 19052 ;;		___awdiv
 19053 ;;		___awmod
 19054 ;; This function is called by:
 19055 ;;		_Rtcm_SetRtccDate
 19056 ;; This function uses a non-reentrant model
 19057 ;;
 19058                           
 19059                           	psect	text84
 19060  0015EE                     __ptext84:
 19061                           	opt stack 0
 19062  0015EE                     _Rtcc_SetRtccValue:
 19063                           	opt stack 14
 19064                           
 19065                           ; BSR set to: 15
 19066                           ;incstack = 0
 19067                           ;Rtcc_SetRtccValue@RtccPtrVal stored from wreg
 19068  0015EE  0100               	movlb	0	; () banked
 19069  0015F0  6F88               	movwf	Rtcc_SetRtccValue@RtccPtrVal& (0+255),b
 19070                           
 19071                           ;rtcc_drv.c: 385: switch (RtccPtrVal)
 19072  0015F2  D0FC               	goto	l441
 19073  0015F4                     l442:
 19074                           
 19075                           ; BSR set to: 0
 19076                           ;rtcc_drv.c: 389: RTCCFGbits.RTCPTR1 = 1U;
 19077  0015F4  010F               	movlb	15	; () banked
 19078  0015F6  833F               	bsf	63,1,b	;volatile
 19079                           
 19080                           ;rtcc_drv.c: 390: RTCCFGbits.RTCPTR0 = 1U;
 19081  0015F8  813F               	bsf	63,0,b	;volatile
 19082                           
 19083                           ; BSR set to: 15
 19084                           ;rtcc_drv.c: 392: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19085  0015FA  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19086  0015FE  0100               	movlb	0	; () banked
 19087  001600  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19088  001602  0E00               	movlw	0
 19089  001604  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19090  001606  0E0A               	movlw	10
 19091  001608  6F7F               	movwf	___awmod@divisor& (0+255),b
 19092  00160A  EC84  F025         	call	___awmod	;wreg free
 19093  00160E  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19094  001612  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19095  001616  0E0F               	movlw	15
 19096  001618  0100               	movlb	0	; () banked
 19097  00161A  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19098  00161C  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19099  001620  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19100  001622  0E00               	movlw	0
 19101  001624  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19102  001626  0E0A               	movlw	10
 19103  001628  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19104  00162A  ECBE  F024         	call	___awdiv	;wreg free
 19105  00162E  0100               	movlb	0	; () banked
 19106  001630  397D               	swapf	?___awdiv& (0+255),w,b
 19107  001632  0BF0               	andlw	240
 19108  001634  0BF0               	andlw	240
 19109  001636  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19110  001638  6E98               	movwf	3992,c	;volatile
 19111                           
 19112                           ;rtcc_drv.c: 393: break;
 19113  00163A  0012               	return	
 19114  00163C                     l444:
 19115                           
 19116                           ; BSR set to: 0
 19117                           ;rtcc_drv.c: 397: RTCCFGbits.RTCPTR1 = 1U;
 19118  00163C  010F               	movlb	15	; () banked
 19119  00163E  833F               	bsf	63,1,b	;volatile
 19120                           
 19121                           ;rtcc_drv.c: 398: RTCCFGbits.RTCPTR0 = 0U;
 19122  001640  913F               	bcf	63,0,b	;volatile
 19123                           
 19124                           ; BSR set to: 15
 19125                           ;rtcc_drv.c: 400: RTCVALH = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19126  001642  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19127  001646  0100               	movlb	0	; () banked
 19128  001648  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19129  00164A  0E00               	movlw	0
 19130  00164C  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19131  00164E  0E0A               	movlw	10
 19132  001650  6F7F               	movwf	___awmod@divisor& (0+255),b
 19133  001652  EC84  F025         	call	___awmod	;wreg free
 19134  001656  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19135  00165A  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19136  00165E  0E0F               	movlw	15
 19137  001660  0100               	movlb	0	; () banked
 19138  001662  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19139  001664  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19140  001668  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19141  00166A  0E00               	movlw	0
 19142  00166C  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19143  00166E  0E0A               	movlw	10
 19144  001670  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19145  001672  ECBE  F024         	call	___awdiv	;wreg free
 19146  001676  0100               	movlb	0	; () banked
 19147  001678  397D               	swapf	?___awdiv& (0+255),w,b
 19148  00167A  0BF0               	andlw	240
 19149  00167C  0BF0               	andlw	240
 19150  00167E  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19151  001680  6E99               	movwf	3993,c	;volatile
 19152                           
 19153                           ;rtcc_drv.c: 401: break;
 19154  001682  0012               	return	
 19155  001684                     l445:
 19156                           
 19157                           ; BSR set to: 0
 19158                           ;rtcc_drv.c: 405: RTCCFGbits.RTCPTR1 = 1U;
 19159  001684  010F               	movlb	15	; () banked
 19160  001686  833F               	bsf	63,1,b	;volatile
 19161                           
 19162                           ;rtcc_drv.c: 406: RTCCFGbits.RTCPTR0 = 0U;
 19163  001688  913F               	bcf	63,0,b	;volatile
 19164                           
 19165                           ; BSR set to: 15
 19166                           ;rtcc_drv.c: 408: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19167  00168A  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19168  00168E  0100               	movlb	0	; () banked
 19169  001690  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19170  001692  0E00               	movlw	0
 19171  001694  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19172  001696  0E0A               	movlw	10
 19173  001698  6F7F               	movwf	___awmod@divisor& (0+255),b
 19174  00169A  EC84  F025         	call	___awmod	;wreg free
 19175  00169E  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19176  0016A2  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19177  0016A6  0E0F               	movlw	15
 19178  0016A8  0100               	movlb	0	; () banked
 19179  0016AA  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19180  0016AC  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19181  0016B0  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19182  0016B2  0E00               	movlw	0
 19183  0016B4  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19184  0016B6  0E0A               	movlw	10
 19185  0016B8  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19186  0016BA  ECBE  F024         	call	___awdiv	;wreg free
 19187  0016BE  0100               	movlb	0	; () banked
 19188  0016C0  397D               	swapf	?___awdiv& (0+255),w,b
 19189  0016C2  0BF0               	andlw	240
 19190  0016C4  0BF0               	andlw	240
 19191  0016C6  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19192  0016C8  6E98               	movwf	3992,c	;volatile
 19193                           
 19194                           ;rtcc_drv.c: 409: break;
 19195  0016CA  0012               	return	
 19196  0016CC                     l446:
 19197                           
 19198                           ; BSR set to: 0
 19199                           ;rtcc_drv.c: 413: RTCCFGbits.RTCPTR1 = 0U;
 19200  0016CC  010F               	movlb	15	; () banked
 19201  0016CE  933F               	bcf	63,1,b	;volatile
 19202                           
 19203                           ;rtcc_drv.c: 414: RTCCFGbits.RTCPTR0 = 1U;
 19204  0016D0  813F               	bsf	63,0,b	;volatile
 19205                           
 19206                           ; BSR set to: 15
 19207                           ;rtcc_drv.c: 416: RTCVALH = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19208  0016D2  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19209  0016D6  0100               	movlb	0	; () banked
 19210  0016D8  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19211  0016DA  0E00               	movlw	0
 19212  0016DC  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19213  0016DE  0E0A               	movlw	10
 19214  0016E0  6F7F               	movwf	___awmod@divisor& (0+255),b
 19215  0016E2  EC84  F025         	call	___awmod	;wreg free
 19216  0016E6  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19217  0016EA  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19218  0016EE  0E0F               	movlw	15
 19219  0016F0  0100               	movlb	0	; () banked
 19220  0016F2  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19221  0016F4  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19222  0016F8  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19223  0016FA  0E00               	movlw	0
 19224  0016FC  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19225  0016FE  0E0A               	movlw	10
 19226  001700  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19227  001702  ECBE  F024         	call	___awdiv	;wreg free
 19228  001706  0100               	movlb	0	; () banked
 19229  001708  397D               	swapf	?___awdiv& (0+255),w,b
 19230  00170A  0BF0               	andlw	240
 19231  00170C  0BF0               	andlw	240
 19232  00170E  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19233  001710  6E99               	movwf	3993,c	;volatile
 19234                           
 19235                           ;rtcc_drv.c: 417: break;
 19236  001712  0012               	return	
 19237  001714                     l447:
 19238                           
 19239                           ; BSR set to: 0
 19240                           ;rtcc_drv.c: 421: RTCCFGbits.RTCPTR1 = 0U;
 19241  001714  010F               	movlb	15	; () banked
 19242  001716  933F               	bcf	63,1,b	;volatile
 19243                           
 19244                           ;rtcc_drv.c: 422: RTCCFGbits.RTCPTR0 = 1U;
 19245  001718  813F               	bsf	63,0,b	;volatile
 19246                           
 19247                           ; BSR set to: 15
 19248                           ;rtcc_drv.c: 424: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19249  00171A  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19250  00171E  0100               	movlb	0	; () banked
 19251  001720  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19252  001722  0E00               	movlw	0
 19253  001724  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19254  001726  0E0A               	movlw	10
 19255  001728  6F7F               	movwf	___awmod@divisor& (0+255),b
 19256  00172A  EC84  F025         	call	___awmod	;wreg free
 19257  00172E  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19258  001732  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19259  001736  0E0F               	movlw	15
 19260  001738  0100               	movlb	0	; () banked
 19261  00173A  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19262  00173C  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19263  001740  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19264  001742  0E00               	movlw	0
 19265  001744  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19266  001746  0E0A               	movlw	10
 19267  001748  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19268  00174A  ECBE  F024         	call	___awdiv	;wreg free
 19269  00174E  0100               	movlb	0	; () banked
 19270  001750  397D               	swapf	?___awdiv& (0+255),w,b
 19271  001752  0BF0               	andlw	240
 19272  001754  0BF0               	andlw	240
 19273  001756  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19274  001758  6E98               	movwf	3992,c	;volatile
 19275                           
 19276                           ;rtcc_drv.c: 425: break;
 19277  00175A  0012               	return	
 19278  00175C                     l448:
 19279                           
 19280                           ; BSR set to: 0
 19281                           ;rtcc_drv.c: 429: RTCCFGbits.RTCPTR1 = 0U;
 19282  00175C  010F               	movlb	15	; () banked
 19283  00175E  933F               	bcf	63,1,b	;volatile
 19284                           
 19285                           ;rtcc_drv.c: 430: RTCCFGbits.RTCPTR0 = 0U;
 19286  001760  913F               	bcf	63,0,b	;volatile
 19287                           
 19288                           ; BSR set to: 15
 19289                           ;rtcc_drv.c: 432: RTCVALH = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19290  001762  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19291  001766  0100               	movlb	0	; () banked
 19292  001768  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19293  00176A  0E00               	movlw	0
 19294  00176C  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19295  00176E  0E0A               	movlw	10
 19296  001770  6F7F               	movwf	___awmod@divisor& (0+255),b
 19297  001772  EC84  F025         	call	___awmod	;wreg free
 19298  001776  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19299  00177A  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19300  00177E  0E0F               	movlw	15
 19301  001780  0100               	movlb	0	; () banked
 19302  001782  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19303  001784  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19304  001788  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19305  00178A  0E00               	movlw	0
 19306  00178C  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19307  00178E  0E0A               	movlw	10
 19308  001790  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19309  001792  ECBE  F024         	call	___awdiv	;wreg free
 19310  001796  0100               	movlb	0	; () banked
 19311  001798  397D               	swapf	?___awdiv& (0+255),w,b
 19312  00179A  0BF0               	andlw	240
 19313  00179C  0BF0               	andlw	240
 19314  00179E  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19315  0017A0  6E99               	movwf	3993,c	;volatile
 19316                           
 19317                           ;rtcc_drv.c: 433: break;
 19318  0017A2  0012               	return	
 19319  0017A4                     l449:
 19320                           
 19321                           ; BSR set to: 0
 19322                           ;rtcc_drv.c: 437: RTCCFGbits.RTCPTR1 = 0U;
 19323  0017A4  010F               	movlb	15	; () banked
 19324  0017A6  933F               	bcf	63,1,b	;volatile
 19325                           
 19326                           ;rtcc_drv.c: 438: RTCCFGbits.RTCPTR0 = 0U;
 19327  0017A8  913F               	bcf	63,0,b	;volatile
 19328                           
 19329                           ; BSR set to: 15
 19330                           ;rtcc_drv.c: 440: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19331  0017AA  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19332  0017AE  0100               	movlb	0	; () banked
 19333  0017B0  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19334  0017B2  0E00               	movlw	0
 19335  0017B4  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19336  0017B6  0E0A               	movlw	10
 19337  0017B8  6F7F               	movwf	___awmod@divisor& (0+255),b
 19338  0017BA  EC84  F025         	call	___awmod	;wreg free
 19339  0017BE  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19340  0017C2  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19341  0017C6  0E0F               	movlw	15
 19342  0017C8  0100               	movlb	0	; () banked
 19343  0017CA  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19344  0017CC  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19345  0017D0  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19346  0017D2  0E00               	movlw	0
 19347  0017D4  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19348  0017D6  0E0A               	movlw	10
 19349  0017D8  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19350  0017DA  ECBE  F024         	call	___awdiv	;wreg free
 19351  0017DE  0100               	movlb	0	; () banked
 19352  0017E0  397D               	swapf	?___awdiv& (0+255),w,b
 19353  0017E2  0BF0               	andlw	240
 19354  0017E4  0BF0               	andlw	240
 19355  0017E6  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19356  0017E8  6E98               	movwf	3992,c	;volatile
 19357                           
 19358                           ; BSR set to: 0
 19359                           ;rtcc_drv.c: 445: }
 19360                           
 19361                           ; BSR set to: 0
 19362                           ;rtcc_drv.c: 444: break;
 19363                           
 19364                           ;rtcc_drv.c: 443: default:
 19365                           
 19366                           ;rtcc_drv.c: 441: break;
 19367  0017EA  0012               	return	
 19368  0017EC                     l441:
 19369                           
 19370                           ; BSR set to: 0
 19371  0017EC  0100               	movlb	0	; () banked
 19372  0017EE  5188               	movf	Rtcc_SetRtccValue@RtccPtrVal& (0+255),w,b
 19373                           
 19374                           ; Switch size 1, requested type "space"
 19375                           ; Number of cases is 7, Range of values is 0 to 6
 19376                           ; switch strategies available:
 19377                           ; Name         Instructions Cycles
 19378                           ; simple_byte           22    12 (average)
 19379                           ;	Chosen strategy is simple_byte
 19380  0017F0  0A00               	xorlw	0	; case 0
 19381  0017F2  B4D8               	btfsc	status,2,c
 19382  0017F4  D6FF               	goto	l442
 19383  0017F6  0A01               	xorlw	1	; case 1
 19384  0017F8  B4D8               	btfsc	status,2,c
 19385  0017FA  D720               	goto	l444
 19386  0017FC  0A03               	xorlw	3	; case 2
 19387  0017FE  B4D8               	btfsc	status,2,c
 19388  001800  D741               	goto	l445
 19389  001802  0A01               	xorlw	1	; case 3
 19390  001804  B4D8               	btfsc	status,2,c
 19391  001806  D762               	goto	l446
 19392  001808  0A07               	xorlw	7	; case 4
 19393  00180A  B4D8               	btfsc	status,2,c
 19394  00180C  D783               	goto	l447
 19395  00180E  0A01               	xorlw	1	; case 5
 19396  001810  B4D8               	btfsc	status,2,c
 19397  001812  D7A4               	goto	l448
 19398  001814  0A03               	xorlw	3	; case 6
 19399  001816  A4D8               	btfss	status,2,c
 19400  001818  0012               	return	
 19401  00181A  D7C4               	goto	l449
 19402  00181C                     __end_of_Rtcc_SetRtccValue:
 19403                           	opt stack 0
 19404                           tosu	equ	0xFFF
 19405                           tosh	equ	0xFFE
 19406                           tosl	equ	0xFFD
 19407                           pclath	equ	0xFFA
 19408                           tblptru	equ	0xFF8
 19409                           tblptrh	equ	0xFF7
 19410                           tblptrl	equ	0xFF6
 19411                           tablat	equ	0xFF5
 19412                           prodh	equ	0xFF4
 19413                           prodl	equ	0xFF3
 19414                           intcon	equ	0xFF2
 19415                           intcon2	equ	0xFF1
 19416                           intcon3	equ	0xFF0
 19417                           indf0	equ	0xFEF
 19418                           postinc0	equ	0xFEE
 19419                           plusw0	equ	0xFEB
 19420                           fsr0h	equ	0xFEA
 19421                           fsr0l	equ	0xFE9
 19422                           wreg	equ	0xFE8
 19423                           indf1	equ	0xFE7
 19424                           postinc1	equ	0xFE6
 19425                           postdec1	equ	0xFE5
 19426                           plusw1	equ	0xFE3
 19427                           fsr1h	equ	0xFE2
 19428                           fsr1l	equ	0xFE1
 19429                           indf2	equ	0xFDF
 19430                           postinc2	equ	0xFDE
 19431                           postdec2	equ	0xFDD
 19432                           plusw2	equ	0xFDB
 19433                           fsr2h	equ	0xFDA
 19434                           fsr2l	equ	0xFD9
 19435                           status	equ	0xFD8
 19436                           
 19437 ;; *************** function ___awmod *****************
 19438 ;; Defined at:
 19439 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/awmod.c"
 19440 ;; Parameters:    Size  Location     Type
 19441 ;;  dividend        2   29[BANK0 ] int 
 19442 ;;  divisor         2   31[BANK0 ] int 
 19443 ;; Auto vars:     Size  Location     Type
 19444 ;;  sign            1   34[BANK0 ] unsigned char 
 19445 ;;  counter         1   33[BANK0 ] unsigned char 
 19446 ;; Return value:  Size  Location     Type
 19447 ;;                  2   29[BANK0 ] int 
 19448 ;; Registers used:
 19449 ;;		wreg, status,2, status,0
 19450 ;; Tracked objects:
 19451 ;;		On entry : 0/0
 19452 ;;		On exit  : 0/0
 19453 ;;		Unchanged: 0/0
 19454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19455 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19456 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19458 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19459 ;;Total ram usage:        6 bytes
 19460 ;; Hardware stack levels used:    1
 19461 ;; Hardware stack levels required when called:   11
 19462 ;; This function calls:
 19463 ;;		Nothing
 19464 ;; This function is called by:
 19465 ;;		_Rtcc_SetRtccValue
 19466 ;;		_Rtcc_SetRtccAlarm
 19467 ;; This function uses a non-reentrant model
 19468 ;;
 19469                           
 19470                           	psect	text85
 19471  004B08                     __ptext85:
 19472                           	opt stack 0
 19473  004B08                     ___awmod:
 19474                           	opt stack 14
 19475                           
 19476                           ; BSR set to: 0
 19477                           ;incstack = 0
 19478  004B08  0E00               	movlw	0
 19479  004B0A  0100               	movlb	0	; () banked
 19480  004B0C  6F82               	movwf	___awmod@sign& (0+255),b
 19481                           
 19482                           ; BSR set to: 0
 19483  004B0E  AF7E               	btfss	(___awmod@dividend+1)& (0+255),7,b
 19484  004B10  D006               	goto	l2788
 19485                           
 19486                           ; BSR set to: 0
 19487  004B12  6D7D               	negf	___awmod@dividend& (0+255),b
 19488  004B14  1F7E               	comf	(___awmod@dividend+1)& (0+255),f,b
 19489  004B16  B0D8               	btfsc	status,0,c
 19490  004B18  2B7E               	incf	(___awmod@dividend+1)& (0+255),f,b
 19491                           
 19492                           ; BSR set to: 0
 19493  004B1A  0E01               	movlw	1
 19494  004B1C  6F82               	movwf	___awmod@sign& (0+255),b
 19495  004B1E                     l2788:
 19496                           
 19497                           ; BSR set to: 0
 19498                           
 19499                           ; BSR set to: 0
 19500  004B1E  AF80               	btfss	(___awmod@divisor+1)& (0+255),7,b
 19501  004B20  D004               	goto	l2789
 19502                           
 19503                           ; BSR set to: 0
 19504  004B22  6D7F               	negf	___awmod@divisor& (0+255),b
 19505  004B24  1F80               	comf	(___awmod@divisor+1)& (0+255),f,b
 19506  004B26  B0D8               	btfsc	status,0,c
 19507  004B28  2B80               	incf	(___awmod@divisor+1)& (0+255),f,b
 19508  004B2A                     l2789:
 19509                           
 19510                           ; BSR set to: 0
 19511                           
 19512                           ; BSR set to: 0
 19513  004B2A  517F               	movf	___awmod@divisor& (0+255),w,b
 19514  004B2C  1180               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 19515  004B2E  B4D8               	btfsc	status,2,c
 19516  004B30  D018               	goto	l2796
 19517                           
 19518                           ; BSR set to: 0
 19519  004B32  0E01               	movlw	1
 19520  004B34  6F81               	movwf	___awmod@counter& (0+255),b
 19521  004B36  D004               	goto	l2791
 19522  004B38                     
 19523                           ; BSR set to: 0
 19524                           
 19525                           ; BSR set to: 0
 19526  004B38  90D8               	bcf	status,0,c
 19527  004B3A  377F               	rlcf	___awmod@divisor& (0+255),f,b
 19528  004B3C  3780               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 19529  004B3E  2B81               	incf	___awmod@counter& (0+255),f,b
 19530  004B40                     l2791:
 19531                           
 19532                           ; BSR set to: 0
 19533                           
 19534                           ; BSR set to: 0
 19535  004B40  AF80               	btfss	(___awmod@divisor+1)& (0+255),7,b
 19536  004B42  D7FA               	goto	l2792
 19537  004B44                     u6860:
 19538                           
 19539                           ; BSR set to: 0
 19540                           
 19541                           ; BSR set to: 0
 19542                           
 19543                           ; BSR set to: 0
 19544  004B44  517F               	movf	___awmod@divisor& (0+255),w,b
 19545  004B46  5D7D               	subwf	___awmod@dividend& (0+255),w,b
 19546  004B48  5180               	movf	(___awmod@divisor+1)& (0+255),w,b
 19547  004B4A  597E               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 19548  004B4C  A0D8               	btfss	status,0,c
 19549  004B4E  D004               	goto	l2795
 19550                           
 19551                           ; BSR set to: 0
 19552  004B50  517F               	movf	___awmod@divisor& (0+255),w,b
 19553  004B52  5F7D               	subwf	___awmod@dividend& (0+255),f,b
 19554  004B54  5180               	movf	(___awmod@divisor+1)& (0+255),w,b
 19555  004B56  5B7E               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 19556  004B58                     l2795:
 19557                           
 19558                           ; BSR set to: 0
 19559                           
 19560                           ; BSR set to: 0
 19561  004B58  90D8               	bcf	status,0,c
 19562  004B5A  3380               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 19563  004B5C  337F               	rrcf	___awmod@divisor& (0+255),f,b
 19564                           
 19565                           ; BSR set to: 0
 19566  004B5E  2F81               	decfsz	___awmod@counter& (0+255),f,b
 19567  004B60  D7F1               	goto	u6860
 19568  004B62                     l2796:
 19569                           
 19570                           ; BSR set to: 0
 19571                           
 19572                           ; BSR set to: 0
 19573                           
 19574                           ; BSR set to: 0
 19575  004B62  5182               	movf	___awmod@sign& (0+255),w,b
 19576  004B64  B4D8               	btfsc	status,2,c
 19577  004B66  D004               	goto	l2797
 19578                           
 19579                           ; BSR set to: 0
 19580  004B68  6D7D               	negf	___awmod@dividend& (0+255),b
 19581  004B6A  1F7E               	comf	(___awmod@dividend+1)& (0+255),f,b
 19582  004B6C  B0D8               	btfsc	status,0,c
 19583  004B6E  2B7E               	incf	(___awmod@dividend+1)& (0+255),f,b
 19584  004B70                     l2797:
 19585                           
 19586                           ; BSR set to: 0
 19587                           
 19588                           ; BSR set to: 0
 19589  004B70  C07D  F07D         	movff	___awmod@dividend,?___awmod
 19590  004B74  C07E  F07E         	movff	___awmod@dividend+1,?___awmod+1
 19591  004B78  0012               	return	
 19592  004B7A                     __end_of___awmod:
 19593                           	opt stack 0
 19594                           tosu	equ	0xFFF
 19595                           tosh	equ	0xFFE
 19596                           tosl	equ	0xFFD
 19597                           pclath	equ	0xFFA
 19598                           tblptru	equ	0xFF8
 19599                           tblptrh	equ	0xFF7
 19600                           tblptrl	equ	0xFF6
 19601                           tablat	equ	0xFF5
 19602                           prodh	equ	0xFF4
 19603                           prodl	equ	0xFF3
 19604                           intcon	equ	0xFF2
 19605                           intcon2	equ	0xFF1
 19606                           intcon3	equ	0xFF0
 19607                           indf0	equ	0xFEF
 19608                           postinc0	equ	0xFEE
 19609                           plusw0	equ	0xFEB
 19610                           fsr0h	equ	0xFEA
 19611                           fsr0l	equ	0xFE9
 19612                           wreg	equ	0xFE8
 19613                           indf1	equ	0xFE7
 19614                           postinc1	equ	0xFE6
 19615                           postdec1	equ	0xFE5
 19616                           plusw1	equ	0xFE3
 19617                           fsr1h	equ	0xFE2
 19618                           fsr1l	equ	0xFE1
 19619                           indf2	equ	0xFDF
 19620                           postinc2	equ	0xFDE
 19621                           postdec2	equ	0xFDD
 19622                           plusw2	equ	0xFDB
 19623                           fsr2h	equ	0xFDA
 19624                           fsr2l	equ	0xFD9
 19625                           status	equ	0xFD8
 19626                           
 19627 ;; *************** function ___awdiv *****************
 19628 ;; Defined at:
 19629 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/awdiv.c"
 19630 ;; Parameters:    Size  Location     Type
 19631 ;;  dividend        2   29[BANK0 ] int 
 19632 ;;  divisor         2   31[BANK0 ] int 
 19633 ;; Auto vars:     Size  Location     Type
 19634 ;;  quotient        2   35[BANK0 ] int 
 19635 ;;  sign            1   34[BANK0 ] unsigned char 
 19636 ;;  counter         1   33[BANK0 ] unsigned char 
 19637 ;; Return value:  Size  Location     Type
 19638 ;;                  2   29[BANK0 ] int 
 19639 ;; Registers used:
 19640 ;;		wreg, status,2, status,0
 19641 ;; Tracked objects:
 19642 ;;		On entry : 0/0
 19643 ;;		On exit  : 0/0
 19644 ;;		Unchanged: 0/0
 19645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19646 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19647 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19649 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19650 ;;Total ram usage:        8 bytes
 19651 ;; Hardware stack levels used:    1
 19652 ;; Hardware stack levels required when called:   11
 19653 ;; This function calls:
 19654 ;;		Nothing
 19655 ;; This function is called by:
 19656 ;;		_Rtcc_SetRtccValue
 19657 ;;		_Rtcc_SetRtccAlarm
 19658 ;; This function uses a non-reentrant model
 19659 ;;
 19660                           
 19661                           	psect	text86
 19662  00497C                     __ptext86:
 19663                           	opt stack 0
 19664  00497C                     ___awdiv:
 19665                           	opt stack 14
 19666                           
 19667                           ; BSR set to: 0
 19668                           ;incstack = 0
 19669  00497C  0E00               	movlw	0
 19670  00497E  0100               	movlb	0	; () banked
 19671  004980  6F82               	movwf	___awdiv@sign& (0+255),b
 19672                           
 19673                           ; BSR set to: 0
 19674  004982  AF80               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 19675  004984  D006               	goto	l2775
 19676                           
 19677                           ; BSR set to: 0
 19678  004986  6D7F               	negf	___awdiv@divisor& (0+255),b
 19679  004988  1F80               	comf	(___awdiv@divisor+1)& (0+255),f,b
 19680  00498A  B0D8               	btfsc	status,0,c
 19681  00498C  2B80               	incf	(___awdiv@divisor+1)& (0+255),f,b
 19682                           
 19683                           ; BSR set to: 0
 19684  00498E  0E01               	movlw	1
 19685  004990  6F82               	movwf	___awdiv@sign& (0+255),b
 19686  004992                     l2775:
 19687                           
 19688                           ; BSR set to: 0
 19689                           
 19690                           ; BSR set to: 0
 19691  004992  AF7E               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 19692  004994  D006               	goto	l2776
 19693                           
 19694                           ; BSR set to: 0
 19695  004996  6D7D               	negf	___awdiv@dividend& (0+255),b
 19696  004998  1F7E               	comf	(___awdiv@dividend+1)& (0+255),f,b
 19697  00499A  B0D8               	btfsc	status,0,c
 19698  00499C  2B7E               	incf	(___awdiv@dividend+1)& (0+255),f,b
 19699                           
 19700                           ; BSR set to: 0
 19701  00499E  0E01               	movlw	1
 19702  0049A0  1B82               	xorwf	___awdiv@sign& (0+255),f,b
 19703  0049A2                     l2776:
 19704                           
 19705                           ; BSR set to: 0
 19706                           
 19707                           ; BSR set to: 0
 19708  0049A2  0E00               	movlw	0
 19709  0049A4  6F84               	movwf	(___awdiv@quotient+1)& (0+255),b
 19710  0049A6  0E00               	movlw	0
 19711  0049A8  6F83               	movwf	___awdiv@quotient& (0+255),b
 19712                           
 19713                           ; BSR set to: 0
 19714  0049AA  517F               	movf	___awdiv@divisor& (0+255),w,b
 19715  0049AC  1180               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 19716  0049AE  B4D8               	btfsc	status,2,c
 19717  0049B0  D01C               	goto	l2783
 19718                           
 19719                           ; BSR set to: 0
 19720  0049B2  0E01               	movlw	1
 19721  0049B4  6F81               	movwf	___awdiv@counter& (0+255),b
 19722  0049B6  D004               	goto	l2778
 19723  0049B8                     
 19724                           ; BSR set to: 0
 19725                           
 19726                           ; BSR set to: 0
 19727  0049B8  90D8               	bcf	status,0,c
 19728  0049BA  377F               	rlcf	___awdiv@divisor& (0+255),f,b
 19729  0049BC  3780               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 19730  0049BE  2B81               	incf	___awdiv@counter& (0+255),f,b
 19731  0049C0                     l2778:
 19732                           
 19733                           ; BSR set to: 0
 19734                           
 19735                           ; BSR set to: 0
 19736  0049C0  AF80               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 19737  0049C2  D7FA               	goto	l2779
 19738  0049C4                     u6800:
 19739                           
 19740                           ; BSR set to: 0
 19741                           
 19742                           ; BSR set to: 0
 19743                           
 19744                           ; BSR set to: 0
 19745  0049C4  90D8               	bcf	status,0,c
 19746  0049C6  3783               	rlcf	___awdiv@quotient& (0+255),f,b
 19747  0049C8  3784               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 19748                           
 19749                           ; BSR set to: 0
 19750  0049CA  517F               	movf	___awdiv@divisor& (0+255),w,b
 19751  0049CC  5D7D               	subwf	___awdiv@dividend& (0+255),w,b
 19752  0049CE  5180               	movf	(___awdiv@divisor+1)& (0+255),w,b
 19753  0049D0  597E               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 19754  0049D2  A0D8               	btfss	status,0,c
 19755  0049D4  D005               	goto	l2782
 19756                           
 19757                           ; BSR set to: 0
 19758  0049D6  517F               	movf	___awdiv@divisor& (0+255),w,b
 19759  0049D8  5F7D               	subwf	___awdiv@dividend& (0+255),f,b
 19760  0049DA  5180               	movf	(___awdiv@divisor+1)& (0+255),w,b
 19761  0049DC  5B7E               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 19762                           
 19763                           ; BSR set to: 0
 19764  0049DE  8183               	bsf	___awdiv@quotient& (0+255),0,b
 19765  0049E0                     l2782:
 19766                           
 19767                           ; BSR set to: 0
 19768                           
 19769                           ; BSR set to: 0
 19770  0049E0  90D8               	bcf	status,0,c
 19771  0049E2  3380               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 19772  0049E4  337F               	rrcf	___awdiv@divisor& (0+255),f,b
 19773                           
 19774                           ; BSR set to: 0
 19775  0049E6  2F81               	decfsz	___awdiv@counter& (0+255),f,b
 19776  0049E8  D7ED               	goto	u6800
 19777  0049EA                     l2783:
 19778                           
 19779                           ; BSR set to: 0
 19780                           
 19781                           ; BSR set to: 0
 19782                           
 19783                           ; BSR set to: 0
 19784  0049EA  5182               	movf	___awdiv@sign& (0+255),w,b
 19785  0049EC  B4D8               	btfsc	status,2,c
 19786  0049EE  D004               	goto	l2784
 19787                           
 19788                           ; BSR set to: 0
 19789  0049F0  6D83               	negf	___awdiv@quotient& (0+255),b
 19790  0049F2  1F84               	comf	(___awdiv@quotient+1)& (0+255),f,b
 19791  0049F4  B0D8               	btfsc	status,0,c
 19792  0049F6  2B84               	incf	(___awdiv@quotient+1)& (0+255),f,b
 19793  0049F8                     l2784:
 19794                           
 19795                           ; BSR set to: 0
 19796                           
 19797                           ; BSR set to: 0
 19798  0049F8  C083  F07D         	movff	___awdiv@quotient,?___awdiv
 19799  0049FC  C084  F07E         	movff	___awdiv@quotient+1,?___awdiv+1
 19800  004A00  0012               	return	
 19801  004A02                     __end_of___awdiv:
 19802                           	opt stack 0
 19803                           tosu	equ	0xFFF
 19804                           tosh	equ	0xFFE
 19805                           tosl	equ	0xFFD
 19806                           pclath	equ	0xFFA
 19807                           tblptru	equ	0xFF8
 19808                           tblptrh	equ	0xFF7
 19809                           tblptrl	equ	0xFF6
 19810                           tablat	equ	0xFF5
 19811                           prodh	equ	0xFF4
 19812                           prodl	equ	0xFF3
 19813                           intcon	equ	0xFF2
 19814                           intcon2	equ	0xFF1
 19815                           intcon3	equ	0xFF0
 19816                           indf0	equ	0xFEF
 19817                           postinc0	equ	0xFEE
 19818                           plusw0	equ	0xFEB
 19819                           fsr0h	equ	0xFEA
 19820                           fsr0l	equ	0xFE9
 19821                           wreg	equ	0xFE8
 19822                           indf1	equ	0xFE7
 19823                           postinc1	equ	0xFE6
 19824                           postdec1	equ	0xFE5
 19825                           plusw1	equ	0xFE3
 19826                           fsr1h	equ	0xFE2
 19827                           fsr1l	equ	0xFE1
 19828                           indf2	equ	0xFDF
 19829                           postinc2	equ	0xFDE
 19830                           postdec2	equ	0xFDD
 19831                           plusw2	equ	0xFDB
 19832                           fsr2h	equ	0xFDA
 19833                           fsr2l	equ	0xFD9
 19834                           status	equ	0xFD8
 19835                           
 19836 ;; *************** function _Rtcc_LockRtc *****************
 19837 ;; Defined at:
 19838 ;;		line 183 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 19839 ;; Parameters:    Size  Location     Type
 19840 ;;		None
 19841 ;; Auto vars:     Size  Location     Type
 19842 ;;		None
 19843 ;; Return value:  Size  Location     Type
 19844 ;;                  1    wreg      void 
 19845 ;; Registers used:
 19846 ;;		None
 19847 ;; Tracked objects:
 19848 ;;		On entry : 0/0
 19849 ;;		On exit  : 0/0
 19850 ;;		Unchanged: 0/0
 19851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19852 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19853 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19855 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19856 ;;Total ram usage:        0 bytes
 19857 ;; Hardware stack levels used:    1
 19858 ;; Hardware stack levels required when called:   11
 19859 ;; This function calls:
 19860 ;;		Nothing
 19861 ;; This function is called by:
 19862 ;;		_Rtcm_MainTask
 19863 ;;		_Rtcm_SetRtccDate
 19864 ;;		_Rtcm_SetRtccAlarm
 19865 ;; This function uses a non-reentrant model
 19866 ;;
 19867                           
 19868                           	psect	text87
 19869  005F14                     __ptext87:
 19870                           	opt stack 0
 19871  005F14                     _Rtcc_LockRtc:
 19872                           	opt stack 15
 19873                           
 19874                           ; BSR set to: 0
 19875                           ;incstack = 0
 19876  005F14  010F               	movlb	15	;# 
 19877  005F16  0E55               	movlw	85	;# 
 19878  005F18  6EA7               	movwf	4007,c	;# 
 19879  005F1A  0EAA               	movlw	170	;# 
 19880  005F1C  6EA7               	movwf	4007,c	;# 
 19881                           
 19882                           ;rtcc_drv.c: 192: RTCCFGbits.RTCWREN = 0u;
 19883  005F1E  010F               	movlb	15	; () banked
 19884  005F20  9B3F               	bcf	63,5,b	;volatile
 19885                           
 19886                           ; BSR set to: 15
 19887  005F22  0012               	return		;funcret
 19888  005F24                     __end_of_Rtcc_LockRtc:
 19889                           	opt stack 0
 19890                           tosu	equ	0xFFF
 19891                           tosh	equ	0xFFE
 19892                           tosl	equ	0xFFD
 19893                           pclath	equ	0xFFA
 19894                           tblptru	equ	0xFF8
 19895                           tblptrh	equ	0xFF7
 19896                           tblptrl	equ	0xFF6
 19897                           tablat	equ	0xFF5
 19898                           prodh	equ	0xFF4
 19899                           prodl	equ	0xFF3
 19900                           intcon	equ	0xFF2
 19901                           intcon2	equ	0xFF1
 19902                           intcon3	equ	0xFF0
 19903                           indf0	equ	0xFEF
 19904                           postinc0	equ	0xFEE
 19905                           plusw0	equ	0xFEB
 19906                           fsr0h	equ	0xFEA
 19907                           fsr0l	equ	0xFE9
 19908                           wreg	equ	0xFE8
 19909                           indf1	equ	0xFE7
 19910                           postinc1	equ	0xFE6
 19911                           postdec1	equ	0xFE5
 19912                           plusw1	equ	0xFE3
 19913                           fsr1h	equ	0xFE2
 19914                           fsr1l	equ	0xFE1
 19915                           indf2	equ	0xFDF
 19916                           postinc2	equ	0xFDE
 19917                           postdec2	equ	0xFDD
 19918                           plusw2	equ	0xFDB
 19919                           fsr2h	equ	0xFDA
 19920                           fsr2l	equ	0xFD9
 19921                           status	equ	0xFD8
 19922                           
 19923 ;; *************** function _Rtcm_GetRtccDate *****************
 19924 ;; Defined at:
 19925 ;;		line 202 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/rtcm.c"
 19926 ;; Parameters:    Size  Location     Type
 19927 ;;		None
 19928 ;; Auto vars:     Size  Location     Type
 19929 ;;  LocalDate       8   42[BANK0 ] struct _RtccDateType
 19930 ;; Return value:  Size  Location     Type
 19931 ;;                  8   33[BANK0 ] struct _RtccDateType
 19932 ;; Registers used:
 19933 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19934 ;; Tracked objects:
 19935 ;;		On entry : 0/0
 19936 ;;		On exit  : 0/0
 19937 ;;		Unchanged: 0/0
 19938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19939 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19940 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19941 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19942 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19943 ;;Total ram usage:       17 bytes
 19944 ;; Hardware stack levels used:    1
 19945 ;; Hardware stack levels required when called:   12
 19946 ;; This function calls:
 19947 ;;		_Rtcc_GetRtccValue
 19948 ;; This function is called by:
 19949 ;;		_Rtcm_MainTask
 19950 ;; This function uses a non-reentrant model
 19951 ;;
 19952                           
 19953                           	psect	text88
 19954  004D9A                     __ptext88:
 19955                           	opt stack 0
 19956  004D9A                     _Rtcm_GetRtccDate:
 19957                           	opt stack 15
 19958                           
 19959                           ;rtcm.c: 204: RtccDateType LocalDate;
 19960                           ;rtcm.c: 207: LocalDate.Year = 2000 + Rtcc_GetRtccValue(ValPtrYear);
 19961                           
 19962                           ; BSR set to: 15
 19963                           ;incstack = 0
 19964  004D9A  0E00               	movlw	0
 19965  004D9C  EC9F  F023         	call	_Rtcc_GetRtccValue
 19966  004DA0  0100               	movlb	0	; () banked
 19967  004DA2  6F89               	movwf	??_Rtcm_GetRtccDate& (0+255),b
 19968  004DA4  0ED0               	movlw	208
 19969  004DA6  2589               	addwf	??_Rtcm_GetRtccDate& (0+255),w,b
 19970  004DA8  6F8A               	movwf	Rtcm_GetRtccDate@LocalDate& (0+255),b
 19971  004DAA  6B8B               	clrf	(Rtcm_GetRtccDate@LocalDate+1)& (0+255),b
 19972  004DAC  0E07               	movlw	7
 19973  004DAE  238B               	addwfc	(Rtcm_GetRtccDate@LocalDate+1)& (0+255),f,b
 19974                           
 19975                           ;rtcm.c: 208: LocalDate.Month = Rtcc_GetRtccValue(ValPtrMonth);
 19976  004DB0  0E01               	movlw	1
 19977  004DB2  EC9F  F023         	call	_Rtcc_GetRtccValue
 19978  004DB6  0100               	movlb	0	; () banked
 19979  004DB8  6F8C               	movwf	(Rtcm_GetRtccDate@LocalDate+2)& (0+255),b
 19980                           
 19981                           ;rtcm.c: 209: LocalDate.Day = Rtcc_GetRtccValue(ValPtrDay);
 19982  004DBA  0E02               	movlw	2
 19983  004DBC  EC9F  F023         	call	_Rtcc_GetRtccValue
 19984  004DC0  0100               	movlb	0	; () banked
 19985  004DC2  6F8D               	movwf	(Rtcm_GetRtccDate@LocalDate+3)& (0+255),b
 19986                           
 19987                           ;rtcm.c: 210: LocalDate.Weekday = Rtcc_GetRtccValue(ValPtrWeekday);
 19988  004DC4  0E03               	movlw	3
 19989  004DC6  EC9F  F023         	call	_Rtcc_GetRtccValue
 19990  004DCA  0100               	movlb	0	; () banked
 19991  004DCC  6F8E               	movwf	(Rtcm_GetRtccDate@LocalDate+4)& (0+255),b
 19992                           
 19993                           ;rtcm.c: 211: LocalDate.Hour = Rtcc_GetRtccValue(ValPtrHours);
 19994  004DCE  0E04               	movlw	4
 19995  004DD0  EC9F  F023         	call	_Rtcc_GetRtccValue
 19996  004DD4  0100               	movlb	0	; () banked
 19997  004DD6  6F8F               	movwf	(Rtcm_GetRtccDate@LocalDate+5)& (0+255),b
 19998                           
 19999                           ;rtcm.c: 212: LocalDate.Minute = Rtcc_GetRtccValue(ValPtrMinutes);
 20000  004DD8  0E05               	movlw	5
 20001  004DDA  EC9F  F023         	call	_Rtcc_GetRtccValue
 20002  004DDE  0100               	movlb	0	; () banked
 20003  004DE0  6F90               	movwf	(Rtcm_GetRtccDate@LocalDate+6)& (0+255),b
 20004                           
 20005                           ;rtcm.c: 213: LocalDate.Second = Rtcc_GetRtccValue(ValPtrSeconds);
 20006  004DE2  0E06               	movlw	6
 20007  004DE4  EC9F  F023         	call	_Rtcc_GetRtccValue
 20008  004DE8  0100               	movlb	0	; () banked
 20009  004DEA  6F91               	movwf	(Rtcm_GetRtccDate@LocalDate+7)& (0+255),b
 20010                           
 20011                           ; BSR set to: 0
 20012                           ;rtcm.c: 216: return LocalDate;
 20013  004DEC  EE20  F08A         	lfsr	2,Rtcm_GetRtccDate@LocalDate
 20014  004DF0  EE00  F081         	lfsr	0,?_Rtcm_GetRtccDate
 20015  004DF4  0E07               	movlw	7
 20016  004DF6                     u9091:
 20017  004DF6  CFDB FFEB          	movff	plusw2,plusw0
 20018  004DFA  06E8               	decf	wreg,f,c
 20019  004DFC  E2FC               	bc	u9091
 20020  004DFE  0012               	return	
 20021  004E00                     __end_of_Rtcm_GetRtccDate:
 20022                           	opt stack 0
 20023                           tosu	equ	0xFFF
 20024                           tosh	equ	0xFFE
 20025                           tosl	equ	0xFFD
 20026                           pclath	equ	0xFFA
 20027                           tblptru	equ	0xFF8
 20028                           tblptrh	equ	0xFF7
 20029                           tblptrl	equ	0xFF6
 20030                           tablat	equ	0xFF5
 20031                           prodh	equ	0xFF4
 20032                           prodl	equ	0xFF3
 20033                           intcon	equ	0xFF2
 20034                           intcon2	equ	0xFF1
 20035                           intcon3	equ	0xFF0
 20036                           indf0	equ	0xFEF
 20037                           postinc0	equ	0xFEE
 20038                           plusw0	equ	0xFEB
 20039                           fsr0h	equ	0xFEA
 20040                           fsr0l	equ	0xFE9
 20041                           wreg	equ	0xFE8
 20042                           indf1	equ	0xFE7
 20043                           postinc1	equ	0xFE6
 20044                           postdec1	equ	0xFE5
 20045                           plusw1	equ	0xFE3
 20046                           fsr1h	equ	0xFE2
 20047                           fsr1l	equ	0xFE1
 20048                           indf2	equ	0xFDF
 20049                           postinc2	equ	0xFDE
 20050                           postdec2	equ	0xFDD
 20051                           plusw2	equ	0xFDB
 20052                           fsr2h	equ	0xFDA
 20053                           fsr2l	equ	0xFD9
 20054                           status	equ	0xFD8
 20055                           
 20056 ;; *************** function _Rtcc_GetRtccValue *****************
 20057 ;; Defined at:
 20058 ;;		line 205 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 20059 ;; Parameters:    Size  Location     Type
 20060 ;;  RtccPtrVal      1    wreg     enum E7757
 20061 ;; Auto vars:     Size  Location     Type
 20062 ;;  RtccPtrVal      1   30[BANK0 ] enum E7757
 20063 ;;  RegValue        1   32[BANK0 ] unsigned char 
 20064 ;;  RetValue        1   31[BANK0 ] unsigned char 
 20065 ;; Return value:  Size  Location     Type
 20066 ;;                  1    wreg      unsigned char 
 20067 ;; Registers used:
 20068 ;;		wreg, status,2, status,0, prodl, prodh
 20069 ;; Tracked objects:
 20070 ;;		On entry : 0/0
 20071 ;;		On exit  : 0/0
 20072 ;;		Unchanged: 0/0
 20073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20074 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20075 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20076 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20077 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20078 ;;Total ram usage:        4 bytes
 20079 ;; Hardware stack levels used:    1
 20080 ;; Hardware stack levels required when called:   11
 20081 ;; This function calls:
 20082 ;;		Nothing
 20083 ;; This function is called by:
 20084 ;;		_Rtcm_GetRtccDate
 20085 ;; This function uses a non-reentrant model
 20086 ;;
 20087                           
 20088                           	psect	text89
 20089  00473E                     __ptext89:
 20090                           	opt stack 0
 20091  00473E                     _Rtcc_GetRtccValue:
 20092                           	opt stack 15
 20093                           
 20094                           ; BSR set to: 0
 20095                           ;incstack = 0
 20096                           ;Rtcc_GetRtccValue@RtccPtrVal stored from wreg
 20097  00473E  0100               	movlb	0	; () banked
 20098  004740  6F7E               	movwf	Rtcc_GetRtccValue@RtccPtrVal& (0+255),b
 20099                           
 20100                           ;rtcc_drv.c: 208: UINT8 RegValue;
 20101                           ;rtcc_drv.c: 209: UINT8 RetValue;
 20102                           ;rtcc_drv.c: 211: switch (RtccPtrVal)
 20103  004742  D02D               	goto	l416
 20104  004744                     l417:
 20105                           
 20106                           ; BSR set to: 0
 20107                           ;rtcc_drv.c: 215: RTCCFGbits.RTCPTR1 = 1U;
 20108  004744  010F               	movlb	15	; () banked
 20109  004746  833F               	bsf	63,1,b	;volatile
 20110  004748                     
 20111                           ;rtcc_drv.c: 216: RTCCFGbits.RTCPTR0 = 1U;
 20112  004748  813F               	bsf	63,0,b	;volatile
 20113  00474A  D01C               	goto	L20
 20114  00474C                     l419:
 20115                           
 20116                           ; BSR set to: 0
 20117                           ;rtcc_drv.c: 225: RTCCFGbits.RTCPTR1 = 1U;
 20118  00474C  010F               	movlb	15	; () banked
 20119  00474E  833F               	bsf	63,1,b	;volatile
 20120  004750  D01E               	goto	L21
 20121  004752                     l420:
 20122                           
 20123                           ; BSR set to: 0
 20124                           ;rtcc_drv.c: 235: RTCCFGbits.RTCPTR1 = 1U;
 20125  004752  010F               	movlb	15	; () banked
 20126  004754  833F               	bsf	63,1,b	;volatile
 20127  004756  D021               	goto	L24
 20128  004758                     l8989:
 20129                           
 20130                           ; BSR set to: 15
 20131                           ;rtcc_drv.c: 240: RetValue = (((RegValue & 0xF0) >> 4U) * 10) + (RegValue & 0x0F);
 20132  004758  C080  F07D         	movff	Rtcc_GetRtccValue@RegValue,??_Rtcc_GetRtccValue
 20133  00475C  0E0F               	movlw	15
 20134  00475E  0100               	movlb	0	; () banked
 20135  004760  177D               	andwf	??_Rtcc_GetRtccValue& (0+255),f,b
 20136  004762  3980               	swapf	Rtcc_GetRtccValue@RegValue& (0+255),w,b
 20137  004764  0B0F               	andlw	15
 20138  004766  0B0F               	andlw	15
 20139  004768  0D0A               	mullw	10
 20140  00476A  50F3               	movf	prodl,w,c
 20141  00476C  257D               	addwf	??_Rtcc_GetRtccValue& (0+255),w,b
 20142  00476E  6F7F               	movwf	Rtcc_GetRtccValue@RetValue& (0+255),b
 20143                           
 20144                           ;rtcc_drv.c: 241: break;
 20145  004770  D02D               	goto	l418
 20146  004772                     l421:
 20147                           
 20148                           ; BSR set to: 0
 20149                           ;rtcc_drv.c: 245: RTCCFGbits.RTCPTR1 = 0U;
 20150  004772  010F               	movlb	15	; () banked
 20151  004774  933F               	bcf	63,1,b	;volatile
 20152                           
 20153                           ;rtcc_drv.c: 246: RTCCFGbits.RTCPTR0 = 1U;
 20154  004776  813F               	bsf	63,0,b	;volatile
 20155                           
 20156                           ;rtcc_drv.c: 248: RetValue = RTCVALH;
 20157  004778  CF99 F07F          	movff	3993,Rtcc_GetRtccValue@RetValue	;volatile
 20158                           
 20159                           ;rtcc_drv.c: 249: break;
 20160  00477C  D027               	goto	l418
 20161  00477E                     l422:
 20162                           
 20163                           ; BSR set to: 0
 20164                           ;rtcc_drv.c: 253: RTCCFGbits.RTCPTR1 = 0U;
 20165  00477E  010F               	movlb	15	; () banked
 20166  004780  933F               	bcf	63,1,b	;volatile
 20167  004782  D7E2               	goto	L22
 20168  004784                     L20:
 20169                           
 20170                           ;rtcc_drv.c: 256: RegValue = RTCVALL;
 20171  004784  CF98 F080          	movff	3992,Rtcc_GetRtccValue@RegValue	;volatile
 20172  004788  D7E7               	goto	l8989
 20173  00478A                     l423:
 20174                           
 20175                           ; BSR set to: 0
 20176                           ;rtcc_drv.c: 263: RTCCFGbits.RTCPTR1 = 0U;
 20177  00478A  010F               	movlb	15	; () banked
 20178  00478C  933F               	bcf	63,1,b	;volatile
 20179  00478E                     L21:
 20180                           
 20181                           ;rtcc_drv.c: 264: RTCCFGbits.RTCPTR0 = 0U;
 20182  00478E  913F               	bcf	63,0,b	;volatile
 20183                           
 20184                           ;rtcc_drv.c: 266: RegValue = RTCVALH;
 20185  004790  CF99 F080          	movff	3993,Rtcc_GetRtccValue@RegValue	;volatile
 20186  004794  D7E1               	goto	l8989
 20187  004796                     l424:
 20188                           
 20189                           ; BSR set to: 0
 20190                           ;rtcc_drv.c: 273: RTCCFGbits.RTCPTR1 = 0U;
 20191  004796  010F               	movlb	15	; () banked
 20192  004798  933F               	bcf	63,1,b	;volatile
 20193  00479A                     L24:
 20194                           
 20195                           ;rtcc_drv.c: 274: RTCCFGbits.RTCPTR0 = 0U;
 20196  00479A  913F               	bcf	63,0,b	;volatile
 20197  00479C  D7F3               	goto	L20
 20198  00479E                     l416:
 20199                           
 20200                           ; BSR set to: 0
 20201  00479E  0100               	movlb	0	; () banked
 20202  0047A0  517E               	movf	Rtcc_GetRtccValue@RtccPtrVal& (0+255),w,b
 20203                           
 20204                           ; Switch size 1, requested type "space"
 20205                           ; Number of cases is 7, Range of values is 0 to 6
 20206                           ; switch strategies available:
 20207                           ; Name         Instructions Cycles
 20208                           ; simple_byte           22    12 (average)
 20209                           ;	Chosen strategy is simple_byte
 20210  0047A2  0A00               	xorlw	0	; case 0
 20211  0047A4  B4D8               	btfsc	status,2,c
 20212  0047A6  D7CE               	goto	l417
 20213  0047A8  0A01               	xorlw	1	; case 1
 20214  0047AA  B4D8               	btfsc	status,2,c
 20215  0047AC  D7CF               	goto	l419
 20216  0047AE  0A03               	xorlw	3	; case 2
 20217  0047B0  B4D8               	btfsc	status,2,c
 20218  0047B2  D7CF               	goto	l420
 20219  0047B4  0A01               	xorlw	1	; case 3
 20220  0047B6  B4D8               	btfsc	status,2,c
 20221  0047B8  D7DC               	goto	l421
 20222  0047BA  0A07               	xorlw	7	; case 4
 20223  0047BC  B4D8               	btfsc	status,2,c
 20224  0047BE  D7DF               	goto	l422
 20225  0047C0  0A01               	xorlw	1	; case 5
 20226  0047C2  B4D8               	btfsc	status,2,c
 20227  0047C4  D7E2               	goto	l423
 20228  0047C6  0A03               	xorlw	3	; case 6
 20229  0047C8  B4D8               	btfsc	status,2,c
 20230  0047CA  D7E5               	goto	l424
 20231  0047CC                     l418:
 20232                           
 20233                           ;rtcc_drv.c: 286: return RetValue;
 20234                           
 20235                           ; BSR set to: 0
 20236  0047CC  0100               	movlb	0	; () banked
 20237  0047CE  517F               	movf	Rtcc_GetRtccValue@RetValue& (0+255),w,b
 20238  0047D0  0012               	return	
 20239  0047D2                     __end_of_Rtcc_GetRtccValue:
 20240                           	opt stack 0
 20241                           tosu	equ	0xFFF
 20242                           tosh	equ	0xFFE
 20243                           tosl	equ	0xFFD
 20244                           pclath	equ	0xFFA
 20245                           tblptru	equ	0xFF8
 20246                           tblptrh	equ	0xFF7
 20247                           tblptrl	equ	0xFF6
 20248                           tablat	equ	0xFF5
 20249                           prodh	equ	0xFF4
 20250                           prodl	equ	0xFF3
 20251                           intcon	equ	0xFF2
 20252                           intcon2	equ	0xFF1
 20253                           intcon3	equ	0xFF0
 20254                           indf0	equ	0xFEF
 20255                           postinc0	equ	0xFEE
 20256                           plusw0	equ	0xFEB
 20257                           fsr0h	equ	0xFEA
 20258                           fsr0l	equ	0xFE9
 20259                           wreg	equ	0xFE8
 20260                           indf1	equ	0xFE7
 20261                           postinc1	equ	0xFE6
 20262                           postdec1	equ	0xFE5
 20263                           plusw1	equ	0xFE3
 20264                           fsr1h	equ	0xFE2
 20265                           fsr1l	equ	0xFE1
 20266                           indf2	equ	0xFDF
 20267                           postinc2	equ	0xFDE
 20268                           postdec2	equ	0xFDD
 20269                           plusw2	equ	0xFDB
 20270                           fsr2h	equ	0xFDA
 20271                           fsr2l	equ	0xFD9
 20272                           status	equ	0xFD8
 20273                           
 20274 ;; *************** function _Rtcc_SetRtcStatus *****************
 20275 ;; Defined at:
 20276 ;;		line 149 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 20277 ;; Parameters:    Size  Location     Type
 20278 ;;  Status          1    wreg     unsigned char 
 20279 ;; Auto vars:     Size  Location     Type
 20280 ;;  Status          1   29[BANK0 ] unsigned char 
 20281 ;; Return value:  Size  Location     Type
 20282 ;;                  1    wreg      void 
 20283 ;; Registers used:
 20284 ;;		wreg
 20285 ;; Tracked objects:
 20286 ;;		On entry : 0/0
 20287 ;;		On exit  : 0/0
 20288 ;;		Unchanged: 0/0
 20289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20290 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20291 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20293 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20294 ;;Total ram usage:        1 bytes
 20295 ;; Hardware stack levels used:    1
 20296 ;; Hardware stack levels required when called:   11
 20297 ;; This function calls:
 20298 ;;		Nothing
 20299 ;; This function is called by:
 20300 ;;		_Rtcm_MainTask
 20301 ;; This function uses a non-reentrant model
 20302 ;;
 20303                           
 20304                           	psect	text90
 20305  005E60                     __ptext90:
 20306                           	opt stack 0
 20307  005E60                     _Rtcc_SetRtcStatus:
 20308                           	opt stack 16
 20309                           
 20310                           ; BSR set to: 0
 20311                           ;incstack = 0
 20312                           ;Rtcc_SetRtcStatus@Status stored from wreg
 20313  005E60  0100               	movlb	0	; () banked
 20314  005E62  6F7D               	movwf	Rtcc_SetRtcStatus@Status& (0+255),b
 20315                           
 20316                           ;rtcc_drv.c: 152: RTCCFGbits.RTCEN = Status;
 20317  005E64  0100               	movlb	0	; () banked
 20318  005E66  B17D               	btfsc	Rtcc_SetRtcStatus@Status& (0+255),0,b
 20319  005E68  D003               	bra	u8005
 20320  005E6A  010F               	movlb	15	; () banked
 20321  005E6C  9F3F               	bcf	63,7,b	;volatile
 20322  005E6E  D002               	bra	u8006
 20323  005E70                     u8005:
 20324  005E70  010F               	movlb	15	; () banked
 20325  005E72  8F3F               	bsf	63,7,b	;volatile
 20326  005E74                     u8006:
 20327                           
 20328                           ; BSR set to: 15
 20329  005E74  0012               	return		;funcret
 20330  005E76                     __end_of_Rtcc_SetRtcStatus:
 20331                           	opt stack 0
 20332                           tosu	equ	0xFFF
 20333                           tosh	equ	0xFFE
 20334                           tosl	equ	0xFFD
 20335                           pclath	equ	0xFFA
 20336                           tblptru	equ	0xFF8
 20337                           tblptrh	equ	0xFF7
 20338                           tblptrl	equ	0xFF6
 20339                           tablat	equ	0xFF5
 20340                           prodh	equ	0xFF4
 20341                           prodl	equ	0xFF3
 20342                           intcon	equ	0xFF2
 20343                           intcon2	equ	0xFF1
 20344                           intcon3	equ	0xFF0
 20345                           indf0	equ	0xFEF
 20346                           postinc0	equ	0xFEE
 20347                           plusw0	equ	0xFEB
 20348                           fsr0h	equ	0xFEA
 20349                           fsr0l	equ	0xFE9
 20350                           wreg	equ	0xFE8
 20351                           indf1	equ	0xFE7
 20352                           postinc1	equ	0xFE6
 20353                           postdec1	equ	0xFE5
 20354                           plusw1	equ	0xFE3
 20355                           fsr1h	equ	0xFE2
 20356                           fsr1l	equ	0xFE1
 20357                           indf2	equ	0xFDF
 20358                           postinc2	equ	0xFDE
 20359                           postdec2	equ	0xFDD
 20360                           plusw2	equ	0xFDB
 20361                           fsr2h	equ	0xFDA
 20362                           fsr2l	equ	0xFD9
 20363                           status	equ	0xFD8
 20364                           
 20365 ;; *************** function _Rtcc_RtcConfig *****************
 20366 ;; Defined at:
 20367 ;;		line 106 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 20368 ;; Parameters:    Size  Location     Type
 20369 ;;  RtcConfig       2   30[BANK0 ] PTR struct _RtccConfigTy
 20370 ;;		 -> RtcConfig(4), 
 20371 ;; Auto vars:     Size  Location     Type
 20372 ;;		None
 20373 ;; Return value:  Size  Location     Type
 20374 ;;                  1    wreg      void 
 20375 ;; Registers used:
 20376 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 20377 ;; Tracked objects:
 20378 ;;		On entry : 0/0
 20379 ;;		On exit  : 0/0
 20380 ;;		Unchanged: 0/0
 20381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20382 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20383 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20384 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20385 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20386 ;;Total ram usage:        3 bytes
 20387 ;; Hardware stack levels used:    1
 20388 ;; Hardware stack levels required when called:   12
 20389 ;; This function calls:
 20390 ;;		_RtccIrqInit
 20391 ;; This function is called by:
 20392 ;;		_Rtcm_MainTask
 20393 ;; This function uses a non-reentrant model
 20394 ;;
 20395                           
 20396                           	psect	text91
 20397  0043A8                     __ptext91:
 20398                           	opt stack 0
 20399  0043A8                     _Rtcc_RtcConfig:
 20400                           	opt stack 15
 20401                           
 20402                           ;rtcc_drv.c: 109: RTCCFGbits.RTCOE = RtcConfig->RtcOutPinEnable;
 20403                           
 20404                           ; BSR set to: 15
 20405                           ;incstack = 0
 20406  0043A8  C07E  FFD9         	movff	Rtcc_RtcConfig@RtcConfig,fsr2l
 20407  0043AC  C07F  FFDA         	movff	Rtcc_RtcConfig@RtcConfig+1,fsr2h
 20408  0043B0  50DF               	movf	indf2,w,c
 20409  0043B2  0100               	movlb	0	; () banked
 20410  0043B4  6F80               	movwf	??_Rtcc_RtcConfig& (0+255),b
 20411  0043B6  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20412  0043B8  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20413  0043BA  010F               	movlb	15	; () banked
 20414  0043BC  513F               	movf	63,w,b	;volatile
 20415  0043BE  0100               	movlb	0	; () banked
 20416  0043C0  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20417  0043C2  0BFB               	andlw	-5
 20418  0043C4  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20419  0043C6  010F               	movlb	15	; () banked
 20420  0043C8  6F3F               	movwf	63,b	;volatile
 20421                           
 20422                           ;rtcc_drv.c: 111: PADCFG1bits.RTSECSEL0 = ((RtcConfig->RtcOutputSelectBit) & 0x01);
 20423  0043CA  0100               	movlb	0	; () banked
 20424  0043CC  EE20 F001          	lfsr	2,1
 20425  0043D0  517E               	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 20426  0043D2  26D9               	addwf	fsr2l,f,c
 20427  0043D4  517F               	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 20428  0043D6  22DA               	addwfc	fsr2h,f,c
 20429  0043D8  50DF               	movf	indf2,w,c
 20430  0043DA  6F80               	movwf	??_Rtcc_RtcConfig& (0+255),b
 20431  0043DC  0E01               	movlw	1
 20432  0043DE  1780               	andwf	??_Rtcc_RtcConfig& (0+255),f,b
 20433  0043E0  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20434  0043E2  010F               	movlb	15	; () banked
 20435  0043E4  513C               	movf	60,w,b	;volatile
 20436  0043E6  0100               	movlb	0	; () banked
 20437  0043E8  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20438  0043EA  0BFD               	andlw	-3
 20439  0043EC  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20440  0043EE  010F               	movlb	15	; () banked
 20441  0043F0  6F3C               	movwf	60,b	;volatile
 20442                           
 20443                           ;rtcc_drv.c: 112: PADCFG1bits.RTSECSEL1 = ((RtcConfig->RtcOutputSelectBit >> 1) & 0x01);
 20444  0043F2  0100               	movlb	0	; () banked
 20445  0043F4  EE20 F001          	lfsr	2,1
 20446  0043F8  517E               	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 20447  0043FA  26D9               	addwf	fsr2l,f,c
 20448  0043FC  517F               	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 20449  0043FE  22DA               	addwfc	fsr2h,f,c
 20450  004400  50DF               	movf	indf2,w,c
 20451  004402  6F80               	movwf	??_Rtcc_RtcConfig& (0+255),b
 20452  004404  90D8               	bcf	status,0,c
 20453  004406  3380               	rrcf	??_Rtcc_RtcConfig& (0+255),f,b
 20454  004408  0E01               	movlw	1
 20455  00440A  1780               	andwf	??_Rtcc_RtcConfig& (0+255),f,b
 20456  00440C  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20457  00440E  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20458  004410  010F               	movlb	15	; () banked
 20459  004412  513C               	movf	60,w,b	;volatile
 20460  004414  0100               	movlb	0	; () banked
 20461  004416  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20462  004418  0BFB               	andlw	-5
 20463  00441A  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20464  00441C  010F               	movlb	15	; () banked
 20465  00441E  6F3C               	movwf	60,b	;volatile
 20466                           
 20467                           ;rtcc_drv.c: 114: if (RtcConfig->IntEnable == EnableInt)
 20468  004420  0100               	movlb	0	; () banked
 20469  004422  EE20 F002          	lfsr	2,2
 20470  004426  517E               	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 20471  004428  26D9               	addwf	fsr2l,f,c
 20472  00442A  517F               	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 20473  00442C  22DA               	addwfc	fsr2h,f,c
 20474  00442E  04DE               	decf	postinc2,w,c
 20475  004430  A4D8               	btfss	status,2,c
 20476  004432  0012               	return	
 20477                           
 20478                           ; BSR set to: 0
 20479                           ;rtcc_drv.c: 115: {
 20480                           ;rtcc_drv.c: 117: RtccIrqInit(RtcConfig->IntPriority);
 20481  004434  EE20 F003          	lfsr	2,3
 20482  004438  517E               	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 20483  00443A  26D9               	addwf	fsr2l,f,c
 20484  00443C  517F               	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 20485  00443E  22DA               	addwfc	fsr2h,f,c
 20486  004440  50DF               	movf	indf2,w,c
 20487  004442  EC3B  F02F         	call	_RtccIrqInit
 20488  004446  0012               	return	
 20489  004448                     __end_of_Rtcc_RtcConfig:
 20490                           	opt stack 0
 20491                           tosu	equ	0xFFF
 20492                           tosh	equ	0xFFE
 20493                           tosl	equ	0xFFD
 20494                           pclath	equ	0xFFA
 20495                           tblptru	equ	0xFF8
 20496                           tblptrh	equ	0xFF7
 20497                           tblptrl	equ	0xFF6
 20498                           tablat	equ	0xFF5
 20499                           prodh	equ	0xFF4
 20500                           prodl	equ	0xFF3
 20501                           intcon	equ	0xFF2
 20502                           intcon2	equ	0xFF1
 20503                           intcon3	equ	0xFF0
 20504                           indf0	equ	0xFEF
 20505                           postinc0	equ	0xFEE
 20506                           plusw0	equ	0xFEB
 20507                           fsr0h	equ	0xFEA
 20508                           fsr0l	equ	0xFE9
 20509                           wreg	equ	0xFE8
 20510                           indf1	equ	0xFE7
 20511                           postinc1	equ	0xFE6
 20512                           postdec1	equ	0xFE5
 20513                           plusw1	equ	0xFE3
 20514                           fsr1h	equ	0xFE2
 20515                           fsr1l	equ	0xFE1
 20516                           indf2	equ	0xFDF
 20517                           postinc2	equ	0xFDE
 20518                           postdec2	equ	0xFDD
 20519                           plusw2	equ	0xFDB
 20520                           fsr2h	equ	0xFDA
 20521                           fsr2l	equ	0xFD9
 20522                           status	equ	0xFD8
 20523                           
 20524 ;; *************** function _RtccIrqInit *****************
 20525 ;; Defined at:
 20526 ;;		line 84 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 20527 ;; Parameters:    Size  Location     Type
 20528 ;;  Priority        1    wreg     enum E7716
 20529 ;; Auto vars:     Size  Location     Type
 20530 ;;  Priority        1   29[BANK0 ] enum E7716
 20531 ;; Return value:  Size  Location     Type
 20532 ;;                  1    wreg      void 
 20533 ;; Registers used:
 20534 ;;		wreg
 20535 ;; Tracked objects:
 20536 ;;		On entry : 0/0
 20537 ;;		On exit  : 0/0
 20538 ;;		Unchanged: 0/0
 20539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20540 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20541 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20543 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20544 ;;Total ram usage:        1 bytes
 20545 ;; Hardware stack levels used:    1
 20546 ;; Hardware stack levels required when called:   11
 20547 ;; This function calls:
 20548 ;;		Nothing
 20549 ;; This function is called by:
 20550 ;;		_Rtcc_RtcConfig
 20551 ;; This function uses a non-reentrant model
 20552 ;;
 20553                           
 20554                           	psect	text92
 20555  005E76                     __ptext92:
 20556                           	opt stack 0
 20557  005E76                     _RtccIrqInit:
 20558                           	opt stack 15
 20559                           
 20560                           ;incstack = 0
 20561                           ;RtccIrqInit@Priority stored from wreg
 20562  005E76  0100               	movlb	0	; () banked
 20563  005E78  6F7D               	movwf	RtccIrqInit@Priority& (0+255),b
 20564                           
 20565                           ;rtcc_drv.c: 87: PIR3bits.RTCCIF = 0u;
 20566  005E7A  90A4               	bcf	4004,0,c	;volatile
 20567                           
 20568                           ;rtcc_drv.c: 89: IPR3bits.RTCCIP = Priority;
 20569  005E7C  0100               	movlb	0	; () banked
 20570  005E7E  B17D               	btfsc	RtccIrqInit@Priority& (0+255),0,b
 20571  005E80  D002               	bra	u7015
 20572  005E82  90A5               	bcf	4005,0,c	;volatile
 20573  005E84  D001               	bra	u7016
 20574  005E86                     u7015:
 20575  005E86  80A5               	bsf	4005,0,c	;volatile
 20576  005E88                     u7016:
 20577                           
 20578                           ;rtcc_drv.c: 91: PIE3bits.RTCCIE = 1u;
 20579  005E88  80A3               	bsf	4003,0,c	;volatile
 20580  005E8A  0012               	return		;funcret
 20581  005E8C                     __end_of_RtccIrqInit:
 20582                           	opt stack 0
 20583                           tosu	equ	0xFFF
 20584                           tosh	equ	0xFFE
 20585                           tosl	equ	0xFFD
 20586                           pclath	equ	0xFFA
 20587                           tblptru	equ	0xFF8
 20588                           tblptrh	equ	0xFF7
 20589                           tblptrl	equ	0xFF6
 20590                           tablat	equ	0xFF5
 20591                           prodh	equ	0xFF4
 20592                           prodl	equ	0xFF3
 20593                           intcon	equ	0xFF2
 20594                           intcon2	equ	0xFF1
 20595                           intcon3	equ	0xFF0
 20596                           indf0	equ	0xFEF
 20597                           postinc0	equ	0xFEE
 20598                           plusw0	equ	0xFEB
 20599                           fsr0h	equ	0xFEA
 20600                           fsr0l	equ	0xFE9
 20601                           wreg	equ	0xFE8
 20602                           indf1	equ	0xFE7
 20603                           postinc1	equ	0xFE6
 20604                           postdec1	equ	0xFE5
 20605                           plusw1	equ	0xFE3
 20606                           fsr1h	equ	0xFE2
 20607                           fsr1l	equ	0xFE1
 20608                           indf2	equ	0xFDF
 20609                           postinc2	equ	0xFDE
 20610                           postdec2	equ	0xFDD
 20611                           plusw2	equ	0xFDB
 20612                           fsr2h	equ	0xFDA
 20613                           fsr2l	equ	0xFD9
 20614                           status	equ	0xFD8
 20615                           
 20616 ;; *************** function _Rtcc_AlarmConfig *****************
 20617 ;; Defined at:
 20618 ;;		line 129 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 20619 ;; Parameters:    Size  Location     Type
 20620 ;;  AlarmConfig     2   29[BANK0 ] PTR struct _RtccAlarmCon
 20621 ;;		 -> AlCfg(4), 
 20622 ;; Auto vars:     Size  Location     Type
 20623 ;;		None
 20624 ;; Return value:  Size  Location     Type
 20625 ;;                  1    wreg      void 
 20626 ;; Registers used:
 20627 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 20628 ;; Tracked objects:
 20629 ;;		On entry : 0/0
 20630 ;;		On exit  : 0/0
 20631 ;;		Unchanged: 0/0
 20632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20633 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20634 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20635 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20636 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20637 ;;Total ram usage:        3 bytes
 20638 ;; Hardware stack levels used:    1
 20639 ;; Hardware stack levels required when called:   11
 20640 ;; This function calls:
 20641 ;;		Nothing
 20642 ;; This function is called by:
 20643 ;;		_Rtcm_MainTask
 20644 ;; This function uses a non-reentrant model
 20645 ;;
 20646                           
 20647                           	psect	text93
 20648  004CC8                     __ptext93:
 20649                           	opt stack 0
 20650  004CC8                     _Rtcc_AlarmConfig:
 20651                           	opt stack 16
 20652                           
 20653                           ;rtcc_drv.c: 132: ALRMCFGbits.ALRMEN = AlarmConfig->RtcAlarmEnable;
 20654                           
 20655                           ;incstack = 0
 20656  004CC8  C07D  FFD9         	movff	Rtcc_AlarmConfig@AlarmConfig,fsr2l
 20657  004CCC  C07E  FFDA         	movff	Rtcc_AlarmConfig@AlarmConfig+1,fsr2h
 20658  004CD0  50DF               	movf	indf2,w,c
 20659  004CD2  0100               	movlb	0	; () banked
 20660  004CD4  6F7F               	movwf	??_Rtcc_AlarmConfig& (0+255),b
 20661  004CD6  337F               	rrcf	??_Rtcc_AlarmConfig& (0+255),f,b
 20662  004CD8  337F               	rrcf	??_Rtcc_AlarmConfig& (0+255),f,b
 20663  004CDA  5091               	movf	3985,w,c	;volatile
 20664  004CDC  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20665  004CDE  0B7F               	andlw	-129
 20666  004CE0  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20667  004CE2  6E91               	movwf	3985,c	;volatile
 20668                           
 20669                           ;rtcc_drv.c: 134: ALRMCFGbits.CHIME = AlarmConfig->RtcChimeEnable;
 20670  004CE4  EE20 F001          	lfsr	2,1
 20671  004CE8  517D               	movf	Rtcc_AlarmConfig@AlarmConfig& (0+255),w,b
 20672  004CEA  26D9               	addwf	fsr2l,f,c
 20673  004CEC  517E               	movf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),w,b
 20674  004CEE  22DA               	addwfc	fsr2h,f,c
 20675  004CF0  50DF               	movf	indf2,w,c
 20676  004CF2  6F7F               	movwf	??_Rtcc_AlarmConfig& (0+255),b
 20677  004CF4  3B7F               	swapf	??_Rtcc_AlarmConfig& (0+255),f,b
 20678  004CF6  477F               	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 20679  004CF8  477F               	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 20680  004CFA  5091               	movf	3985,w,c	;volatile
 20681  004CFC  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20682  004CFE  0BBF               	andlw	-65
 20683  004D00  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20684  004D02  6E91               	movwf	3985,c	;volatile
 20685                           
 20686                           ;rtcc_drv.c: 136: ALRMCFGbits.AMASK = AlarmConfig->AlarmMask;
 20687  004D04  EE20 F002          	lfsr	2,2
 20688  004D08  517D               	movf	Rtcc_AlarmConfig@AlarmConfig& (0+255),w,b
 20689  004D0A  26D9               	addwf	fsr2l,f,c
 20690  004D0C  517E               	movf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),w,b
 20691  004D0E  22DA               	addwfc	fsr2h,f,c
 20692  004D10  50DF               	movf	indf2,w,c
 20693  004D12  6F7F               	movwf	??_Rtcc_AlarmConfig& (0+255),b
 20694  004D14  477F               	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 20695  004D16  477F               	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 20696  004D18  5091               	movf	3985,w,c	;volatile
 20697  004D1A  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20698  004D1C  0BC3               	andlw	-61
 20699  004D1E  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20700  004D20  6E91               	movwf	3985,c	;volatile
 20701                           
 20702                           ;rtcc_drv.c: 138: ALRMRPTbits.ARPT = AlarmConfig->AlarmRepeat;
 20703  004D22  EE20 F003          	lfsr	2,3
 20704  004D26  517D               	movf	Rtcc_AlarmConfig@AlarmConfig& (0+255),w,b
 20705  004D28  26D9               	addwf	fsr2l,f,c
 20706  004D2A  517E               	movf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),w,b
 20707  004D2C  22DA               	addwfc	fsr2h,f,c
 20708  004D2E  50DF               	movf	indf2,w,c
 20709  004D30  6E90               	movwf	3984,c	;volatile
 20710                           
 20711                           ; BSR set to: 0
 20712  004D32  0012               	return		;funcret
 20713  004D34                     __end_of_Rtcc_AlarmConfig:
 20714                           	opt stack 0
 20715                           tosu	equ	0xFFF
 20716                           tosh	equ	0xFFE
 20717                           tosl	equ	0xFFD
 20718                           pclath	equ	0xFFA
 20719                           tblptru	equ	0xFF8
 20720                           tblptrh	equ	0xFF7
 20721                           tblptrl	equ	0xFF6
 20722                           tablat	equ	0xFF5
 20723                           prodh	equ	0xFF4
 20724                           prodl	equ	0xFF3
 20725                           intcon	equ	0xFF2
 20726                           intcon2	equ	0xFF1
 20727                           intcon3	equ	0xFF0
 20728                           indf0	equ	0xFEF
 20729                           postinc0	equ	0xFEE
 20730                           plusw0	equ	0xFEB
 20731                           fsr0h	equ	0xFEA
 20732                           fsr0l	equ	0xFE9
 20733                           wreg	equ	0xFE8
 20734                           indf1	equ	0xFE7
 20735                           postinc1	equ	0xFE6
 20736                           postdec1	equ	0xFE5
 20737                           plusw1	equ	0xFE3
 20738                           fsr1h	equ	0xFE2
 20739                           fsr1l	equ	0xFE1
 20740                           indf2	equ	0xFDF
 20741                           postinc2	equ	0xFDE
 20742                           postdec2	equ	0xFDD
 20743                           plusw2	equ	0xFDB
 20744                           fsr2h	equ	0xFDA
 20745                           fsr2l	equ	0xFD9
 20746                           status	equ	0xFD8
 20747                           
 20748 ;; *************** function _initGprsModem *****************
 20749 ;; Defined at:
 20750 ;;		line 109 in file "../Source/c/04_App/app.c"
 20751 ;; Parameters:    Size  Location     Type
 20752 ;;		None
 20753 ;; Auto vars:     Size  Location     Type
 20754 ;;		None
 20755 ;; Return value:  Size  Location     Type
 20756 ;;                  1    wreg      unsigned char 
 20757 ;; Registers used:
 20758 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20759 ;; Tracked objects:
 20760 ;;		On entry : 0/0
 20761 ;;		On exit  : 0/0
 20762 ;;		Unchanged: 0/0
 20763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20764 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20765 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20767 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20768 ;;Total ram usage:        0 bytes
 20769 ;; Hardware stack levels used:    1
 20770 ;; Hardware stack levels required when called:   13
 20771 ;; This function calls:
 20772 ;;		_Led_SetLedStatus
 20773 ;;		_Uart_WriteConstString
 20774 ;;		_secondsAppTimer
 20775 ;; This function is called by:
 20776 ;;		_MyApp_Task
 20777 ;; This function uses a non-reentrant model
 20778 ;;
 20779                           
 20780                           	psect	text94
 20781  00531C                     __ptext94:
 20782                           	opt stack 0
 20783  00531C                     _initGprsModem:
 20784                           	opt stack 14
 20785                           
 20786                           ;app.c: 111: static uint16_t modemCounter = 0;
 20787                           ;app.c: 112: static bool isInitialized = 0u;
 20788                           ;app.c: 113: if (MdmStatus == ModemConfigured || MdmStatus == ModemOn)
 20789                           
 20790                           ; BSR set to: 0
 20791                           ;incstack = 0
 20792  00531C  0E03               	movlw	3
 20793  00531E  0100               	movlb	0	; () banked
 20794  005320  19CF               	xorwf	_MdmStatus& (0+255),w,b
 20795  005322  B4D8               	btfsc	status,2,c
 20796  005324  D003               	goto	u13280
 20797                           
 20798                           ; BSR set to: 0
 20799  005326  05CF               	decf	_MdmStatus& (0+255),w,b
 20800  005328  A4D8               	btfss	status,2,c
 20801  00532A  D01D               	goto	l2530
 20802  00532C                     u13280:
 20803                           
 20804                           ; BSR set to: 0
 20805                           ;app.c: 114: {
 20806                           ;app.c: 115: if (secondsAppTimer(5, &modemCounter, 0))
 20807                           
 20808                           ; BSR set to: 0
 20809  00532C  0EB9               	movlw	low initGprsModem@modemCounter
 20810  00532E  6F8A               	movwf	secondsAppTimer@counter& (0+255),b
 20811  005330  0E03               	movlw	high initGprsModem@modemCounter
 20812  005332  6F8B               	movwf	(secondsAppTimer@counter+1)& (0+255),b
 20813  005334  0E00               	movlw	0
 20814  005336  6F8C               	movwf	secondsAppTimer@isCyclic& (0+255),b
 20815  005338  0E05               	movlw	5
 20816  00533A  EC83  F021         	call	_secondsAppTimer
 20817  00533E  0900               	iorlw	0
 20818  005340  B4D8               	btfsc	status,2,c
 20819  005342  D011               	goto	l2530
 20820                           
 20821                           ;app.c: 116: {
 20822                           ;app.c: 118: Uart_WriteConstString(1, "AT\r\n");
 20823  005344  0EE5               	movlw	low STR_1
 20824  005346  0100               	movlb	0	; () banked
 20825  005348  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 20826  00534A  0EFF               	movlw	high STR_1
 20827  00534C  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 20828  00534E  0E01               	movlw	1
 20829  005350  EC1C  F02B         	call	_Uart_WriteConstString
 20830                           
 20831                           ;app.c: 119: Led_SetLedStatus(1u, LED_STS_ON);
 20832  005354  0E01               	movlw	1
 20833  005356  0100               	movlb	0	; () banked
 20834  005358  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 20835  00535A  0E01               	movlw	1
 20836  00535C  EC3D  F02D         	call	_Led_SetLedStatus
 20837                           
 20838                           ;app.c: 120: isInitialized = 1;
 20839  005360  0E01               	movlw	1
 20840  005362  0101               	movlb	1	; () banked
 20841  005364  6FD8               	movwf	initGprsModem@isInitialized& (0+255),b
 20842  005366                     l2530:
 20843                           
 20844                           ;app.c: 121: }
 20845                           ;app.c: 122: }
 20846                           ;app.c: 123: return isInitialized;
 20847                           
 20848                           ; BSR set to: 1
 20849                           
 20850                           ; BSR set to: 1
 20851  005366  0101               	movlb	1	; () banked
 20852  005368  51D8               	movf	initGprsModem@isInitialized& (0+255),w,b
 20853  00536A  0012               	return	
 20854  00536C                     __end_of_initGprsModem:
 20855                           	opt stack 0
 20856                           tosu	equ	0xFFF
 20857                           tosh	equ	0xFFE
 20858                           tosl	equ	0xFFD
 20859                           pclath	equ	0xFFA
 20860                           tblptru	equ	0xFF8
 20861                           tblptrh	equ	0xFF7
 20862                           tblptrl	equ	0xFF6
 20863                           tablat	equ	0xFF5
 20864                           prodh	equ	0xFF4
 20865                           prodl	equ	0xFF3
 20866                           intcon	equ	0xFF2
 20867                           intcon2	equ	0xFF1
 20868                           intcon3	equ	0xFF0
 20869                           indf0	equ	0xFEF
 20870                           postinc0	equ	0xFEE
 20871                           plusw0	equ	0xFEB
 20872                           fsr0h	equ	0xFEA
 20873                           fsr0l	equ	0xFE9
 20874                           wreg	equ	0xFE8
 20875                           indf1	equ	0xFE7
 20876                           postinc1	equ	0xFE6
 20877                           postdec1	equ	0xFE5
 20878                           plusw1	equ	0xFE3
 20879                           fsr1h	equ	0xFE2
 20880                           fsr1l	equ	0xFE1
 20881                           indf2	equ	0xFDF
 20882                           postinc2	equ	0xFDE
 20883                           postdec2	equ	0xFDD
 20884                           plusw2	equ	0xFDB
 20885                           fsr2h	equ	0xFDA
 20886                           fsr2l	equ	0xFD9
 20887                           status	equ	0xFD8
 20888                           
 20889 ;; *************** function _blinkForSeconds *****************
 20890 ;; Defined at:
 20891 ;;		line 126 in file "../Source/c/04_App/app.c"
 20892 ;; Parameters:    Size  Location     Type
 20893 ;;  seconds         1    wreg     unsigned char 
 20894 ;;  blickTicks      2   51[BANK0 ] PTR unsigned int 
 20895 ;;		 -> MyApp_Task@blickTicks(2), 
 20896 ;; Auto vars:     Size  Location     Type
 20897 ;;  seconds         1   53[BANK0 ] unsigned char 
 20898 ;; Return value:  Size  Location     Type
 20899 ;;                  1    wreg      void 
 20900 ;; Registers used:
 20901 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20902 ;; Tracked objects:
 20903 ;;		On entry : 0/0
 20904 ;;		On exit  : 0/0
 20905 ;;		Unchanged: 0/0
 20906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20907 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20908 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20909 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20910 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20911 ;;Total ram usage:        3 bytes
 20912 ;; Hardware stack levels used:    1
 20913 ;; Hardware stack levels required when called:   13
 20914 ;; This function calls:
 20915 ;;		_Led_SetLedStatus
 20916 ;;		_secondsAppTimer
 20917 ;; This function is called by:
 20918 ;;		_MyApp_Task
 20919 ;; This function uses a non-reentrant model
 20920 ;;
 20921                           
 20922                           	psect	text95
 20923  0058A8                     __ptext95:
 20924                           	opt stack 0
 20925  0058A8                     _blinkForSeconds:
 20926                           	opt stack 14
 20927                           
 20928                           ; BSR set to: 1
 20929                           ;incstack = 0
 20930                           ;blinkForSeconds@seconds stored from wreg
 20931  0058A8  0100               	movlb	0	; () banked
 20932  0058AA  6F95               	movwf	blinkForSeconds@seconds& (0+255),b
 20933                           
 20934                           ;app.c: 128: if (secondsAppTimer(seconds, blickTicks, 0))
 20935  0058AC  C093  F08A         	movff	blinkForSeconds@blickTicks,secondsAppTimer@counter
 20936  0058B0  C094  F08B         	movff	blinkForSeconds@blickTicks+1,secondsAppTimer@counter+1
 20937  0058B4  0E00               	movlw	0
 20938  0058B6  0100               	movlb	0	; () banked
 20939  0058B8  6F8C               	movwf	secondsAppTimer@isCyclic& (0+255),b
 20940  0058BA  5195               	movf	blinkForSeconds@seconds& (0+255),w,b
 20941  0058BC  EC83  F021         	call	_secondsAppTimer
 20942  0058C0  0900               	iorlw	0
 20943  0058C2  B4D8               	btfsc	status,2,c
 20944  0058C4  D007               	goto	l2534
 20945                           
 20946                           ;app.c: 129: {
 20947                           ;app.c: 130: Led_SetLedStatus(1u, LED_STS_ON);
 20948  0058C6  0E01               	movlw	1
 20949  0058C8  0100               	movlb	0	; () banked
 20950  0058CA  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 20951  0058CC  0E01               	movlw	1
 20952  0058CE  EC3D  F02D         	call	_Led_SetLedStatus
 20953                           
 20954                           ;app.c: 131: }
 20955  0058D2  0012               	return	
 20956  0058D4                     l2534:
 20957                           
 20958                           ;app.c: 132: else
 20959                           ;app.c: 133: {
 20960                           ;app.c: 134: Led_SetLedStatus(1u, LED_STS_BLINK);
 20961  0058D4  0E03               	movlw	3
 20962  0058D6  0100               	movlb	0	; () banked
 20963  0058D8  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 20964  0058DA  0E01               	movlw	1
 20965  0058DC  EC3D  F02D         	call	_Led_SetLedStatus
 20966  0058E0  0012               	return	
 20967  0058E2                     __end_of_blinkForSeconds:
 20968                           	opt stack 0
 20969                           tosu	equ	0xFFF
 20970                           tosh	equ	0xFFE
 20971                           tosl	equ	0xFFD
 20972                           pclath	equ	0xFFA
 20973                           tblptru	equ	0xFF8
 20974                           tblptrh	equ	0xFF7
 20975                           tblptrl	equ	0xFF6
 20976                           tablat	equ	0xFF5
 20977                           prodh	equ	0xFF4
 20978                           prodl	equ	0xFF3
 20979                           intcon	equ	0xFF2
 20980                           intcon2	equ	0xFF1
 20981                           intcon3	equ	0xFF0
 20982                           indf0	equ	0xFEF
 20983                           postinc0	equ	0xFEE
 20984                           plusw0	equ	0xFEB
 20985                           fsr0h	equ	0xFEA
 20986                           fsr0l	equ	0xFE9
 20987                           wreg	equ	0xFE8
 20988                           indf1	equ	0xFE7
 20989                           postinc1	equ	0xFE6
 20990                           postdec1	equ	0xFE5
 20991                           plusw1	equ	0xFE3
 20992                           fsr1h	equ	0xFE2
 20993                           fsr1l	equ	0xFE1
 20994                           indf2	equ	0xFDF
 20995                           postinc2	equ	0xFDE
 20996                           postdec2	equ	0xFDD
 20997                           plusw2	equ	0xFDB
 20998                           fsr2h	equ	0xFDA
 20999                           fsr2l	equ	0xFD9
 21000                           status	equ	0xFD8
 21001                           
 21002 ;; *************** function _secondsAppTimer *****************
 21003 ;; Defined at:
 21004 ;;		line 85 in file "../Source/c/04_App/app.c"
 21005 ;; Parameters:    Size  Location     Type
 21006 ;;  seconds         1    wreg     unsigned char 
 21007 ;;  counter         2   42[BANK0 ] PTR unsigned int 
 21008 ;;		 -> MyApp_Task@blickTicks(2), initGprsModem@modemCounter(2), 
 21009 ;;  isCyclic        1   44[BANK0 ] unsigned char 
 21010 ;; Auto vars:     Size  Location     Type
 21011 ;;  seconds         1   47[BANK0 ] unsigned char 
 21012 ;;  destinationT    2   49[BANK0 ] unsigned int 
 21013 ;;  isExpired       1   48[BANK0 ] unsigned char 
 21014 ;; Return value:  Size  Location     Type
 21015 ;;                  1    wreg      unsigned char 
 21016 ;; Registers used:
 21017 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21018 ;; Tracked objects:
 21019 ;;		On entry : 0/0
 21020 ;;		On exit  : 0/0
 21021 ;;		Unchanged: 0/0
 21022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21023 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21024 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21025 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21026 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21027 ;;Total ram usage:        9 bytes
 21028 ;; Hardware stack levels used:    1
 21029 ;; Hardware stack levels required when called:   12
 21030 ;; This function calls:
 21031 ;;		___lwdiv
 21032 ;;		___wmul
 21033 ;; This function is called by:
 21034 ;;		_initGprsModem
 21035 ;;		_blinkForSeconds
 21036 ;; This function uses a non-reentrant model
 21037 ;;
 21038                           
 21039                           	psect	text96
 21040  004306                     __ptext96:
 21041                           	opt stack 0
 21042  004306                     _secondsAppTimer:
 21043                           	opt stack 14
 21044                           
 21045                           ;incstack = 0
 21046                           ;secondsAppTimer@seconds stored from wreg
 21047  004306  0100               	movlb	0	; () banked
 21048  004308  6F8F               	movwf	secondsAppTimer@seconds& (0+255),b
 21049                           
 21050                           ;app.c: 87: bool isExpired = 1;
 21051  00430A  0E01               	movlw	1
 21052  00430C  0100               	movlb	0	; () banked
 21053  00430E  6F90               	movwf	secondsAppTimer@isExpired& (0+255),b
 21054                           
 21055                           ; BSR set to: 0
 21056                           ;app.c: 88: uint16_t destinationTicks = (uint16_t) (seconds * 1000) / ((UINT16)(100));
 21057  004310  C08F  F07D         	movff	secondsAppTimer@seconds,___wmul@multiplier
 21058  004314  6B7E               	clrf	(___wmul@multiplier+1)& (0+255),b
 21059  004316  0E03               	movlw	3
 21060  004318  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 21061  00431A  0EE8               	movlw	232
 21062  00431C  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 21063  00431E  ECC3  F02D         	call	___wmul	;wreg free
 21064  004322  C07D  F083         	movff	?___wmul,___lwdiv@dividend
 21065  004326  C07E  F084         	movff	?___wmul+1,___lwdiv@dividend+1
 21066  00432A  0E00               	movlw	0
 21067  00432C  0100               	movlb	0	; () banked
 21068  00432E  6F86               	movwf	(___lwdiv@divisor+1)& (0+255),b
 21069  004330  0E64               	movlw	100
 21070  004332  6F85               	movwf	___lwdiv@divisor& (0+255),b
 21071  004334  ECEB  F028         	call	___lwdiv	;wreg free
 21072  004338  C083  F091         	movff	?___lwdiv,secondsAppTimer@destinationTicks
 21073  00433C  C084  F092         	movff	?___lwdiv+1,secondsAppTimer@destinationTicks+1
 21074                           
 21075                           ;app.c: 90: if (*counter < destinationTicks)
 21076  004340  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 21077  004344  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 21078  004348  0100               	movlb	0	; () banked
 21079  00434A  5191               	movf	secondsAppTimer@destinationTicks& (0+255),w,b
 21080  00434C  5CDE               	subwf	postinc2,w,c
 21081  00434E  5192               	movf	(secondsAppTimer@destinationTicks+1)& (0+255),w,b
 21082  004350  58DE               	subwfb	postinc2,w,c
 21083  004352  B0D8               	btfsc	status,0,c
 21084  004354  D009               	goto	l2516
 21085                           
 21086                           ; BSR set to: 0
 21087                           ;app.c: 91: {
 21088                           ;app.c: 92: *counter += 1;
 21089  004356  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 21090  00435A  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 21091  00435E  2ADE               	incf	postinc2,f,c
 21092  004360  0E00               	movlw	0
 21093  004362  22DD               	addwfc	postdec2,f,c
 21094                           
 21095                           ; BSR set to: 0
 21096                           ;app.c: 93: isExpired = 0;
 21097  004364  0E00               	movlw	0
 21098  004366  6F90               	movwf	secondsAppTimer@isExpired& (0+255),b
 21099  004368                     l2516:
 21100                           
 21101                           ; BSR set to: 0
 21102                           ;app.c: 94: }
 21103                           ;app.c: 95: if (*counter == destinationTicks)
 21104                           
 21105                           ; BSR set to: 0
 21106  004368  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 21107  00436C  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 21108  004370  5191               	movf	secondsAppTimer@destinationTicks& (0+255),w,b
 21109  004372  18DE               	xorwf	postinc2,w,c
 21110  004374  E117               	bnz	l12955
 21111  004376  5192               	movf	(secondsAppTimer@destinationTicks+1)& (0+255),w,b
 21112  004378  18DE               	xorwf	postinc2,w,c
 21113  00437A  A4D8               	btfss	status,2,c
 21114  00437C  D013               	goto	l2519
 21115                           
 21116                           ; BSR set to: 0
 21117                           ;app.c: 96: {
 21118                           ;app.c: 97: if (isCyclic)
 21119  00437E  518C               	movf	secondsAppTimer@isCyclic& (0+255),w,b
 21120  004380  B4D8               	btfsc	status,2,c
 21121  004382  D008               	goto	l2518
 21122                           
 21123                           ; BSR set to: 0
 21124                           ;app.c: 98: {
 21125                           ;app.c: 99: *counter = 0;
 21126  004384  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 21127  004388  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 21128  00438C  0E00               	movlw	0
 21129  00438E  6EDE               	movwf	postinc2,c
 21130  004390  0E00               	movlw	0
 21131  004392  D007               	goto	L25
 21132  004394                     l2518:
 21133                           
 21134                           ; BSR set to: 0
 21135                           ;app.c: 101: else
 21136                           ;app.c: 102: {
 21137                           ;app.c: 103: *counter = 0xFFFF;
 21138                           
 21139                           ; BSR set to: 0
 21140  004394  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 21141  004398  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 21142  00439C  0EFF               	movlw	255
 21143  00439E  6EDE               	movwf	postinc2,c
 21144  0043A0  0EFF               	movlw	255
 21145  0043A2                     L25:
 21146  0043A2  6EDD               	movwf	postdec2,c
 21147  0043A4                     l2519:
 21148  0043A4                     l12955:
 21149                           
 21150                           ; BSR set to: 0
 21151                           ;app.c: 104: }
 21152                           ;app.c: 105: }
 21153                           ;app.c: 106: return isExpired;
 21154  0043A4  5190               	movf	secondsAppTimer@isExpired& (0+255),w,b
 21155  0043A6  0012               	return	
 21156  0043A8                     __end_of_secondsAppTimer:
 21157                           	opt stack 0
 21158                           tosu	equ	0xFFF
 21159                           tosh	equ	0xFFE
 21160                           tosl	equ	0xFFD
 21161                           pclath	equ	0xFFA
 21162                           tblptru	equ	0xFF8
 21163                           tblptrh	equ	0xFF7
 21164                           tblptrl	equ	0xFF6
 21165                           tablat	equ	0xFF5
 21166                           prodh	equ	0xFF4
 21167                           prodl	equ	0xFF3
 21168                           intcon	equ	0xFF2
 21169                           intcon2	equ	0xFF1
 21170                           intcon3	equ	0xFF0
 21171                           indf0	equ	0xFEF
 21172                           postinc0	equ	0xFEE
 21173                           plusw0	equ	0xFEB
 21174                           fsr0h	equ	0xFEA
 21175                           fsr0l	equ	0xFE9
 21176                           wreg	equ	0xFE8
 21177                           indf1	equ	0xFE7
 21178                           postinc1	equ	0xFE6
 21179                           postdec1	equ	0xFE5
 21180                           plusw1	equ	0xFE3
 21181                           fsr1h	equ	0xFE2
 21182                           fsr1l	equ	0xFE1
 21183                           indf2	equ	0xFDF
 21184                           postinc2	equ	0xFDE
 21185                           postdec2	equ	0xFDD
 21186                           plusw2	equ	0xFDB
 21187                           fsr2h	equ	0xFDA
 21188                           fsr2l	equ	0xFD9
 21189                           status	equ	0xFD8
 21190                           
 21191 ;; *************** function _Mdm_RequestSmsData *****************
 21192 ;; Defined at:
 21193 ;;		line 857 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 21194 ;; Parameters:    Size  Location     Type
 21195 ;;		None
 21196 ;; Auto vars:     Size  Location     Type
 21197 ;;		None
 21198 ;; Return value:  Size  Location     Type
 21199 ;;                  1    wreg      void 
 21200 ;; Registers used:
 21201 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 21202 ;; Tracked objects:
 21203 ;;		On entry : 0/0
 21204 ;;		On exit  : 0/0
 21205 ;;		Unchanged: 0/0
 21206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21207 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21208 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21209 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21210 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21211 ;;Total ram usage:        0 bytes
 21212 ;; Hardware stack levels used:    1
 21213 ;; Hardware stack levels required when called:   12
 21214 ;; This function calls:
 21215 ;;		_GenerateEvt
 21216 ;; This function is called by:
 21217 ;;		_MyApp_Task
 21218 ;; This function uses a non-reentrant model
 21219 ;;
 21220                           
 21221                           	psect	text97
 21222  005F24                     __ptext97:
 21223                           	opt stack 0
 21224  005F24                     _Mdm_RequestSmsData:
 21225                           	opt stack 15
 21226                           
 21227                           ;mdm_gsm_gprs.c: 860: GenerateEvt(&GetSmsText);
 21228                           
 21229                           ; BSR set to: 0
 21230                           ;incstack = 0
 21231  005F24  0EDA               	movlw	low _GetSmsText
 21232  005F26  0100               	movlb	0	; () banked
 21233  005F28  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 21234  005F2A  0E00               	movlw	high _GetSmsText
 21235  005F2C  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 21236  005F2E  EC24  F02F         	call	_GenerateEvt	;wreg free
 21237  005F32  0012               	return		;funcret
 21238  005F34                     __end_of_Mdm_RequestSmsData:
 21239                           	opt stack 0
 21240                           tosu	equ	0xFFF
 21241                           tosh	equ	0xFFE
 21242                           tosl	equ	0xFFD
 21243                           pclath	equ	0xFFA
 21244                           tblptru	equ	0xFF8
 21245                           tblptrh	equ	0xFF7
 21246                           tblptrl	equ	0xFF6
 21247                           tablat	equ	0xFF5
 21248                           prodh	equ	0xFF4
 21249                           prodl	equ	0xFF3
 21250                           intcon	equ	0xFF2
 21251                           intcon2	equ	0xFF1
 21252                           intcon3	equ	0xFF0
 21253                           indf0	equ	0xFEF
 21254                           postinc0	equ	0xFEE
 21255                           plusw0	equ	0xFEB
 21256                           fsr0h	equ	0xFEA
 21257                           fsr0l	equ	0xFE9
 21258                           wreg	equ	0xFE8
 21259                           indf1	equ	0xFE7
 21260                           postinc1	equ	0xFE6
 21261                           postdec1	equ	0xFE5
 21262                           plusw1	equ	0xFE3
 21263                           fsr1h	equ	0xFE2
 21264                           fsr1l	equ	0xFE1
 21265                           indf2	equ	0xFDF
 21266                           postinc2	equ	0xFDE
 21267                           postdec2	equ	0xFDD
 21268                           plusw2	equ	0xFDB
 21269                           fsr2h	equ	0xFDA
 21270                           fsr2l	equ	0xFD9
 21271                           status	equ	0xFD8
 21272                           
 21273 ;; *************** function _Mdm_IsSmsReceived *****************
 21274 ;; Defined at:
 21275 ;;		line 920 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 21276 ;; Parameters:    Size  Location     Type
 21277 ;;		None
 21278 ;; Auto vars:     Size  Location     Type
 21279 ;;  Ret             1   33[BANK0 ] enum E8914
 21280 ;; Return value:  Size  Location     Type
 21281 ;;                  1    wreg      enum E8914
 21282 ;; Registers used:
 21283 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 21284 ;; Tracked objects:
 21285 ;;		On entry : 0/0
 21286 ;;		On exit  : 0/0
 21287 ;;		Unchanged: 0/0
 21288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21289 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21290 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21291 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21292 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21293 ;;Total ram usage:        1 bytes
 21294 ;; Hardware stack levels used:    1
 21295 ;; Hardware stack levels required when called:   12
 21296 ;; This function calls:
 21297 ;;		_ReceiveEvt
 21298 ;; This function is called by:
 21299 ;;		_MyApp_Task
 21300 ;; This function uses a non-reentrant model
 21301 ;;
 21302                           
 21303                           	psect	text98
 21304  005BF8                     __ptext98:
 21305                           	opt stack 0
 21306  005BF8                     _Mdm_IsSmsReceived:
 21307                           	opt stack 15
 21308                           
 21309                           ;mdm_gsm_gprs.c: 922: SmsRxStsType Ret = SmsNotReceived;
 21310                           
 21311                           ;incstack = 0
 21312  005BF8  0E00               	movlw	0
 21313  005BFA  0100               	movlb	0	; () banked
 21314  005BFC  6F81               	movwf	Mdm_IsSmsReceived@Ret& (0+255),b
 21315                           
 21316                           ; BSR set to: 0
 21317                           ;mdm_gsm_gprs.c: 925: if (ReceiveEvt(&SmsEvent))
 21318  005BFE  0EDB               	movlw	low _SmsEvent
 21319  005C00  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 21320  005C02  0E00               	movlw	high _SmsEvent
 21321  005C04  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 21322  005C06  EC6C  F02D         	call	_ReceiveEvt	;wreg free
 21323  005C0A  0900               	iorlw	0
 21324  005C0C  B4D8               	btfsc	status,2,c
 21325  005C0E  D003               	goto	l1126
 21326                           
 21327                           ;mdm_gsm_gprs.c: 926: {
 21328                           ;mdm_gsm_gprs.c: 927: Ret = SmsReceived;
 21329  005C10  0E01               	movlw	1
 21330  005C12  0100               	movlb	0	; () banked
 21331  005C14  6F81               	movwf	Mdm_IsSmsReceived@Ret& (0+255),b
 21332  005C16                     l1126:
 21333                           
 21334                           ;mdm_gsm_gprs.c: 928: }
 21335                           ;mdm_gsm_gprs.c: 930: return Ret;
 21336  005C16  0100               	movlb	0	; () banked
 21337  005C18  5181               	movf	Mdm_IsSmsReceived@Ret& (0+255),w,b
 21338  005C1A  0012               	return	
 21339  005C1C                     __end_of_Mdm_IsSmsReceived:
 21340                           	opt stack 0
 21341                           tosu	equ	0xFFF
 21342                           tosh	equ	0xFFE
 21343                           tosl	equ	0xFFD
 21344                           pclath	equ	0xFFA
 21345                           tblptru	equ	0xFF8
 21346                           tblptrh	equ	0xFF7
 21347                           tblptrl	equ	0xFF6
 21348                           tablat	equ	0xFF5
 21349                           prodh	equ	0xFF4
 21350                           prodl	equ	0xFF3
 21351                           intcon	equ	0xFF2
 21352                           intcon2	equ	0xFF1
 21353                           intcon3	equ	0xFF0
 21354                           indf0	equ	0xFEF
 21355                           postinc0	equ	0xFEE
 21356                           plusw0	equ	0xFEB
 21357                           fsr0h	equ	0xFEA
 21358                           fsr0l	equ	0xFE9
 21359                           wreg	equ	0xFE8
 21360                           indf1	equ	0xFE7
 21361                           postinc1	equ	0xFE6
 21362                           postdec1	equ	0xFE5
 21363                           plusw1	equ	0xFE3
 21364                           fsr1h	equ	0xFE2
 21365                           fsr1l	equ	0xFE1
 21366                           indf2	equ	0xFDF
 21367                           postinc2	equ	0xFDE
 21368                           postdec2	equ	0xFDD
 21369                           plusw2	equ	0xFDB
 21370                           fsr2h	equ	0xFDA
 21371                           fsr2l	equ	0xFD9
 21372                           status	equ	0xFD8
 21373                           
 21374 ;; *************** function _Mdm_IsRinging *****************
 21375 ;; Defined at:
 21376 ;;		line 1003 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 21377 ;; Parameters:    Size  Location     Type
 21378 ;;		None
 21379 ;; Auto vars:     Size  Location     Type
 21380 ;;  Ret             1   33[BANK0 ] enum E8910
 21381 ;; Return value:  Size  Location     Type
 21382 ;;                  1    wreg      enum E8910
 21383 ;; Registers used:
 21384 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 21385 ;; Tracked objects:
 21386 ;;		On entry : 0/0
 21387 ;;		On exit  : 0/0
 21388 ;;		Unchanged: 0/0
 21389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21390 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21391 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21392 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21393 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21394 ;;Total ram usage:        1 bytes
 21395 ;; Hardware stack levels used:    1
 21396 ;; Hardware stack levels required when called:   12
 21397 ;; This function calls:
 21398 ;;		_ReceiveEvt
 21399 ;; This function is called by:
 21400 ;;		_MyApp_Task
 21401 ;; This function uses a non-reentrant model
 21402 ;;
 21403                           
 21404                           	psect	text99
 21405  005C1C                     __ptext99:
 21406                           	opt stack 0
 21407  005C1C                     _Mdm_IsRinging:
 21408                           	opt stack 15
 21409                           
 21410                           ;mdm_gsm_gprs.c: 1005: RingStsType Ret = PhoneNotRinging;
 21411                           
 21412                           ; BSR set to: 0
 21413                           ;incstack = 0
 21414  005C1C  0E00               	movlw	0
 21415  005C1E  0100               	movlb	0	; () banked
 21416  005C20  6F81               	movwf	Mdm_IsRinging@Ret& (0+255),b
 21417                           
 21418                           ; BSR set to: 0
 21419                           ;mdm_gsm_gprs.c: 1008: if (ReceiveEvt(&RingEvent))
 21420  005C22  0EDC               	movlw	low _RingEvent
 21421  005C24  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 21422  005C26  0E00               	movlw	high _RingEvent
 21423  005C28  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 21424  005C2A  EC6C  F02D         	call	_ReceiveEvt	;wreg free
 21425  005C2E  0900               	iorlw	0
 21426  005C30  B4D8               	btfsc	status,2,c
 21427  005C32  D003               	goto	l1142
 21428                           
 21429                           ;mdm_gsm_gprs.c: 1009: {
 21430                           ;mdm_gsm_gprs.c: 1010: Ret = PhoneRinging;
 21431  005C34  0E01               	movlw	1
 21432  005C36  0100               	movlb	0	; () banked
 21433  005C38  6F81               	movwf	Mdm_IsRinging@Ret& (0+255),b
 21434  005C3A                     l1142:
 21435                           
 21436                           ;mdm_gsm_gprs.c: 1011: }
 21437                           ;mdm_gsm_gprs.c: 1013: return Ret;
 21438  005C3A  0100               	movlb	0	; () banked
 21439  005C3C  5181               	movf	Mdm_IsRinging@Ret& (0+255),w,b
 21440  005C3E  0012               	return	
 21441  005C40                     __end_of_Mdm_IsRinging:
 21442                           	opt stack 0
 21443                           tosu	equ	0xFFF
 21444                           tosh	equ	0xFFE
 21445                           tosl	equ	0xFFD
 21446                           pclath	equ	0xFFA
 21447                           tblptru	equ	0xFF8
 21448                           tblptrh	equ	0xFF7
 21449                           tblptrl	equ	0xFF6
 21450                           tablat	equ	0xFF5
 21451                           prodh	equ	0xFF4
 21452                           prodl	equ	0xFF3
 21453                           intcon	equ	0xFF2
 21454                           intcon2	equ	0xFF1
 21455                           intcon3	equ	0xFF0
 21456                           indf0	equ	0xFEF
 21457                           postinc0	equ	0xFEE
 21458                           plusw0	equ	0xFEB
 21459                           fsr0h	equ	0xFEA
 21460                           fsr0l	equ	0xFE9
 21461                           wreg	equ	0xFE8
 21462                           indf1	equ	0xFE7
 21463                           postinc1	equ	0xFE6
 21464                           postdec1	equ	0xFE5
 21465                           plusw1	equ	0xFE3
 21466                           fsr1h	equ	0xFE2
 21467                           fsr1l	equ	0xFE1
 21468                           indf2	equ	0xFDF
 21469                           postinc2	equ	0xFDE
 21470                           postdec2	equ	0xFDD
 21471                           plusw2	equ	0xFDB
 21472                           fsr2h	equ	0xFDA
 21473                           fsr2l	equ	0xFD9
 21474                           status	equ	0xFD8
 21475                           
 21476 ;; *************** function _Mdm_GetSmsData *****************
 21477 ;; Defined at:
 21478 ;;		line 872 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 21479 ;; Parameters:    Size  Location     Type
 21480 ;;  MessageText     2   39[BANK0 ] PTR unsigned char 
 21481 ;;		 -> MyApp_Task@smsText(50), 
 21482 ;; Auto vars:     Size  Location     Type
 21483 ;;  GetSmsStatus    1   41[BANK0 ] enum E8906
 21484 ;; Return value:  Size  Location     Type
 21485 ;;                  1    wreg      enum E8906
 21486 ;; Registers used:
 21487 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21488 ;; Tracked objects:
 21489 ;;		On entry : 0/0
 21490 ;;		On exit  : 0/0
 21491 ;;		Unchanged: 0/0
 21492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21493 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21494 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21496 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21497 ;;Total ram usage:        3 bytes
 21498 ;; Hardware stack levels used:    1
 21499 ;; Hardware stack levels required when called:   12
 21500 ;; This function calls:
 21501 ;;		_ReceiveEvt
 21502 ;;		_StringCopy
 21503 ;; This function is called by:
 21504 ;;		_MyApp_Task
 21505 ;; This function uses a non-reentrant model
 21506 ;;
 21507                           
 21508                           	psect	text100
 21509  005832                     __ptext100:
 21510                           	opt stack 0
 21511  005832                     _Mdm_GetSmsData:
 21512                           	opt stack 15
 21513                           
 21514                           ;mdm_gsm_gprs.c: 874: GetSmsStatusType GetSmsStatus = SmsDataNotReady;
 21515                           
 21516                           ; BSR set to: 0
 21517                           ;incstack = 0
 21518  005832  0E00               	movlw	0
 21519  005834  0100               	movlb	0	; () banked
 21520  005836  6F89               	movwf	Mdm_GetSmsData@GetSmsStatus& (0+255),b
 21521                           
 21522                           ; BSR set to: 0
 21523                           ;mdm_gsm_gprs.c: 877: if (ReceiveEvt(&SmsTxtReady))
 21524  005838  0ED9               	movlw	low _SmsTxtReady
 21525  00583A  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 21526  00583C  0E00               	movlw	high _SmsTxtReady
 21527  00583E  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 21528  005840  EC6C  F02D         	call	_ReceiveEvt	;wreg free
 21529  005844  0900               	iorlw	0
 21530  005846  B4D8               	btfsc	status,2,c
 21531  005848  0012               	return	
 21532                           
 21533                           ;mdm_gsm_gprs.c: 878: {
 21534                           ;mdm_gsm_gprs.c: 880: StringCopy(Mdm_SmsRx.MessageBuffer,MessageText,Mdm_SmsRx.TextLen);
 21535  00584A  0E50               	movlw	low (_Mdm_SmsRx+80)
 21536  00584C  0100               	movlb	0	; () banked
 21537  00584E  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 21538  005850  0E07               	movlw	high (_Mdm_SmsRx+80)
 21539  005852  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 21540  005854  C087  F07F         	movff	Mdm_GetSmsData@MessageText,StringCopy@DestStr
 21541  005858  C088  F080         	movff	Mdm_GetSmsData@MessageText+1,StringCopy@DestStr+1
 21542  00585C  C783  F081         	movff	_Mdm_SmsRx+131,StringCopy@Len
 21543  005860  6B82               	clrf	(StringCopy@Len+1)& (0+255),b
 21544  005862  EC00  F027         	call	_StringCopy	;wreg free
 21545                           
 21546                           ;mdm_gsm_gprs.c: 882: GetSmsStatus = SmsDataReady;
 21547  005866  0E01               	movlw	1
 21548  005868  0100               	movlb	0	; () banked
 21549  00586A  6F89               	movwf	Mdm_GetSmsData@GetSmsStatus& (0+255),b
 21550                           
 21551                           ; BSR set to: 0
 21552  00586C  0012               	return	
 21553  00586E                     __end_of_Mdm_GetSmsData:
 21554                           	opt stack 0
 21555                           tosu	equ	0xFFF
 21556                           tosh	equ	0xFFE
 21557                           tosl	equ	0xFFD
 21558                           pclath	equ	0xFFA
 21559                           tblptru	equ	0xFF8
 21560                           tblptrh	equ	0xFF7
 21561                           tblptrl	equ	0xFF6
 21562                           tablat	equ	0xFF5
 21563                           prodh	equ	0xFF4
 21564                           prodl	equ	0xFF3
 21565                           intcon	equ	0xFF2
 21566                           intcon2	equ	0xFF1
 21567                           intcon3	equ	0xFF0
 21568                           indf0	equ	0xFEF
 21569                           postinc0	equ	0xFEE
 21570                           plusw0	equ	0xFEB
 21571                           fsr0h	equ	0xFEA
 21572                           fsr0l	equ	0xFE9
 21573                           wreg	equ	0xFE8
 21574                           indf1	equ	0xFE7
 21575                           postinc1	equ	0xFE6
 21576                           postdec1	equ	0xFE5
 21577                           plusw1	equ	0xFE3
 21578                           fsr1h	equ	0xFE2
 21579                           fsr1l	equ	0xFE1
 21580                           indf2	equ	0xFDF
 21581                           postinc2	equ	0xFDE
 21582                           postdec2	equ	0xFDD
 21583                           plusw2	equ	0xFDB
 21584                           fsr2h	equ	0xFDA
 21585                           fsr2l	equ	0xFD9
 21586                           status	equ	0xFD8
 21587                           
 21588 ;; *************** function _Led_SetLedBlinkTime *****************
 21589 ;; Defined at:
 21590 ;;		line 371 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 21591 ;; Parameters:    Size  Location     Type
 21592 ;;  Led             1    wreg     unsigned char 
 21593 ;;  OnTimeMs        2   29[BANK0 ] unsigned short 
 21594 ;;  OffTimeMs       2   31[BANK0 ] unsigned short 
 21595 ;; Auto vars:     Size  Location     Type
 21596 ;;  Led             1   33[BANK0 ] unsigned char 
 21597 ;; Return value:  Size  Location     Type
 21598 ;;                  1    wreg      void 
 21599 ;; Registers used:
 21600 ;;		wreg, status,2, status,0
 21601 ;; Tracked objects:
 21602 ;;		On entry : 0/0
 21603 ;;		On exit  : 0/0
 21604 ;;		Unchanged: 0/0
 21605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21606 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21607 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21608 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21609 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21610 ;;Total ram usage:        5 bytes
 21611 ;; Hardware stack levels used:    1
 21612 ;; Hardware stack levels required when called:   11
 21613 ;; This function calls:
 21614 ;;		Nothing
 21615 ;; This function is called by:
 21616 ;;		_MyApp_Task
 21617 ;; This function uses a non-reentrant model
 21618 ;;
 21619                           
 21620                           	psect	text101
 21621  005182                     __ptext101:
 21622                           	opt stack 0
 21623  005182                     _Led_SetLedBlinkTime:
 21624                           	opt stack 16
 21625                           
 21626                           ;incstack = 0
 21627                           ;Led_SetLedBlinkTime@Led stored from wreg
 21628  005182  0100               	movlb	0	; () banked
 21629  005184  6F81               	movwf	Led_SetLedBlinkTime@Led& (0+255),b
 21630                           
 21631                           ;led.c: 374: switch (Led)
 21632  005186  D01B               	goto	l2099
 21633  005188                     l2100:
 21634                           
 21635                           ; BSR set to: 0
 21636                           ;led.c: 377: Led1Blink.LedOnTimeMs = OnTimeMs;
 21637  005188  C07D  F373         	movff	Led_SetLedBlinkTime@OnTimeMs,_Led1Blink+4
 21638  00518C  C07E  F374         	movff	Led_SetLedBlinkTime@OnTimeMs+1,_Led1Blink+5
 21639                           
 21640                           ;led.c: 378: Led1Blink.LedOffTimeMs = OffTimeMs;
 21641  005190  C07F  F375         	movff	Led_SetLedBlinkTime@OffTimeMs,_Led1Blink+6
 21642  005194  C080  F376         	movff	Led_SetLedBlinkTime@OffTimeMs+1,_Led1Blink+7
 21643                           
 21644                           ;led.c: 379: break;
 21645  005198  0012               	return	
 21646  00519A                     l2102:
 21647                           
 21648                           ; BSR set to: 0
 21649                           ;led.c: 382: Led2Blink.LedOnTimeMs = OnTimeMs;
 21650  00519A  C07D  F36A         	movff	Led_SetLedBlinkTime@OnTimeMs,_Led2Blink+4
 21651  00519E  C07E  F36B         	movff	Led_SetLedBlinkTime@OnTimeMs+1,_Led2Blink+5
 21652                           
 21653                           ;led.c: 383: Led2Blink.LedOffTimeMs = OffTimeMs;
 21654  0051A2  C07F  F36C         	movff	Led_SetLedBlinkTime@OffTimeMs,_Led2Blink+6
 21655  0051A6  C080  F36D         	movff	Led_SetLedBlinkTime@OffTimeMs+1,_Led2Blink+7
 21656                           
 21657                           ;led.c: 384: break;
 21658  0051AA  0012               	return	
 21659  0051AC                     l2103:
 21660                           
 21661                           ; BSR set to: 0
 21662                           ;led.c: 387: Led2Blink.LedOnTimeMs = OnTimeMs;
 21663  0051AC  C07D  F36A         	movff	Led_SetLedBlinkTime@OnTimeMs,_Led2Blink+4
 21664  0051B0  C07E  F36B         	movff	Led_SetLedBlinkTime@OnTimeMs+1,_Led2Blink+5
 21665                           
 21666                           ;led.c: 388: Led2Blink.LedOffTimeMs = OffTimeMs;
 21667  0051B4  C07F  F36C         	movff	Led_SetLedBlinkTime@OffTimeMs,_Led2Blink+6
 21668  0051B8  C080  F36D         	movff	Led_SetLedBlinkTime@OffTimeMs+1,_Led2Blink+7
 21669                           
 21670                           ; BSR set to: 0
 21671                           ;led.c: 393: }
 21672                           
 21673                           ; BSR set to: 0
 21674                           ;led.c: 392: break;
 21675                           
 21676                           ;led.c: 391: default:
 21677                           
 21678                           ;led.c: 389: break;
 21679  0051BC  0012               	return	
 21680  0051BE                     l2099:
 21681                           
 21682                           ; BSR set to: 0
 21683  0051BE  0100               	movlb	0	; () banked
 21684  0051C0  5181               	movf	Led_SetLedBlinkTime@Led& (0+255),w,b
 21685                           
 21686                           ; Switch size 1, requested type "space"
 21687                           ; Number of cases is 3, Range of values is 1 to 3
 21688                           ; switch strategies available:
 21689                           ; Name         Instructions Cycles
 21690                           ; simple_byte           10     6 (average)
 21691                           ;	Chosen strategy is simple_byte
 21692  0051C2  0A01               	xorlw	1	; case 1
 21693  0051C4  B4D8               	btfsc	status,2,c
 21694  0051C6  D7E0               	goto	l2100
 21695  0051C8  0A03               	xorlw	3	; case 2
 21696  0051CA  B4D8               	btfsc	status,2,c
 21697  0051CC  D7E6               	goto	l2102
 21698  0051CE  0A01               	xorlw	1	; case 3
 21699  0051D0  A4D8               	btfss	status,2,c
 21700  0051D2  0012               	return	
 21701  0051D4  D7EB               	goto	l2103
 21702  0051D6                     __end_of_Led_SetLedBlinkTime:
 21703                           	opt stack 0
 21704                           tosu	equ	0xFFF
 21705                           tosh	equ	0xFFE
 21706                           tosl	equ	0xFFD
 21707                           pclath	equ	0xFFA
 21708                           tblptru	equ	0xFF8
 21709                           tblptrh	equ	0xFF7
 21710                           tblptrl	equ	0xFF6
 21711                           tablat	equ	0xFF5
 21712                           prodh	equ	0xFF4
 21713                           prodl	equ	0xFF3
 21714                           intcon	equ	0xFF2
 21715                           intcon2	equ	0xFF1
 21716                           intcon3	equ	0xFF0
 21717                           indf0	equ	0xFEF
 21718                           postinc0	equ	0xFEE
 21719                           plusw0	equ	0xFEB
 21720                           fsr0h	equ	0xFEA
 21721                           fsr0l	equ	0xFE9
 21722                           wreg	equ	0xFE8
 21723                           indf1	equ	0xFE7
 21724                           postinc1	equ	0xFE6
 21725                           postdec1	equ	0xFE5
 21726                           plusw1	equ	0xFE3
 21727                           fsr1h	equ	0xFE2
 21728                           fsr1l	equ	0xFE1
 21729                           indf2	equ	0xFDF
 21730                           postinc2	equ	0xFDE
 21731                           postdec2	equ	0xFDD
 21732                           plusw2	equ	0xFDB
 21733                           fsr2h	equ	0xFDA
 21734                           fsr2l	equ	0xFD9
 21735                           status	equ	0xFD8
 21736                           
 21737 ;; *************** function _UartSetConfig *****************
 21738 ;; Defined at:
 21739 ;;		line 185 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 21740 ;; Parameters:    Size  Location     Type
 21741 ;;		None
 21742 ;; Auto vars:     Size  Location     Type
 21743 ;;		None
 21744 ;; Return value:  Size  Location     Type
 21745 ;;                  1    wreg      void 
 21746 ;; Registers used:
 21747 ;;		wreg, status,2
 21748 ;; Tracked objects:
 21749 ;;		On entry : 0/0
 21750 ;;		On exit  : 0/0
 21751 ;;		Unchanged: 0/0
 21752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21753 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21754 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21755 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21756 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21757 ;;Total ram usage:        0 bytes
 21758 ;; Hardware stack levels used:    1
 21759 ;; Hardware stack levels required when called:   11
 21760 ;; This function calls:
 21761 ;;		Nothing
 21762 ;; This function is called by:
 21763 ;;		_Mdm_MainTask
 21764 ;; This function uses a non-reentrant model
 21765 ;;
 21766                           
 21767                           	psect	text102
 21768  004F7A                     __ptext102:
 21769                           	opt stack 0
 21770  004F7A                     _UartSetConfig:
 21771                           	opt stack 16
 21772                           
 21773                           ;mdm_gsm_gprs.c: 187: UartConfig.UartEnable = ((UINT8)(1));
 21774                           
 21775                           ; BSR set to: 0
 21776                           ;incstack = 0
 21777  004F7A  0E01               	movlw	1
 21778  004F7C  0103               	movlb	3	; () banked
 21779  004F7E  6F28               	movwf	_UartConfig& (0+255),b
 21780                           
 21781                           ;mdm_gsm_gprs.c: 188: UartConfig.UartMode = ((UINT8)(0));
 21782  004F80  0E00               	movlw	0
 21783  004F82  6F29               	movwf	(_UartConfig+1)& (0+255),b
 21784                           
 21785                           ;mdm_gsm_gprs.c: 190: UartConfig.BaudRateMode = ((UINT8)(0));
 21786  004F84  0E00               	movlw	0
 21787  004F86  6F2A               	movwf	(_UartConfig+2)& (0+255),b
 21788                           
 21789                           ;mdm_gsm_gprs.c: 195: UartConfig.HighBaudMode = ((UINT8)(0));
 21790  004F88  0E00               	movlw	0
 21791  004F8A  6F2B               	movwf	(_UartConfig+3)& (0+255),b
 21792                           
 21793                           ;mdm_gsm_gprs.c: 199: UartConfig.Tx9bitMode = ((UINT8)(0));
 21794  004F8C  0E00               	movlw	0
 21795  004F8E  6F2C               	movwf	(_UartConfig+4)& (0+255),b
 21796                           
 21797                           ;mdm_gsm_gprs.c: 200: UartConfig.Rx9bitMode = ((UINT8)(0));
 21798  004F90  0E00               	movlw	0
 21799  004F92  6F2D               	movwf	(_UartConfig+5)& (0+255),b
 21800                           
 21801                           ;mdm_gsm_gprs.c: 201: UartConfig.TxEnable = ((UINT8)(1));
 21802  004F94  0E01               	movlw	1
 21803  004F96  6F2E               	movwf	(_UartConfig+6)& (0+255),b
 21804                           
 21805                           ;mdm_gsm_gprs.c: 202: UartConfig.RxEnable = ((UINT8)(1));
 21806  004F98  0E01               	movlw	1
 21807  004F9A  6F2F               	movwf	(_UartConfig+7)& (0+255),b
 21808                           
 21809                           ;mdm_gsm_gprs.c: 203: UartConfig.SendBreakEnable = ((UINT8)(0));
 21810  004F9C  0E00               	movlw	0
 21811  004F9E  6F30               	movwf	(_UartConfig+8)& (0+255),b
 21812                           
 21813                           ;mdm_gsm_gprs.c: 204: UartConfig.AutobaudEnable = ((UINT8)(0));
 21814  004FA0  0E00               	movlw	0
 21815  004FA2  6F31               	movwf	(_UartConfig+9)& (0+255),b
 21816                           
 21817                           ;mdm_gsm_gprs.c: 205: UartConfig.WakeUpEnable = ((UINT8)(0));
 21818  004FA4  0E00               	movlw	0
 21819  004FA6  6F32               	movwf	(_UartConfig+10)& (0+255),b
 21820                           
 21821                           ;mdm_gsm_gprs.c: 206: UartConfig.TxInterruptEnable = ((UINT8)(0));
 21822  004FA8  0E00               	movlw	0
 21823  004FAA  6F33               	movwf	(_UartConfig+11)& (0+255),b
 21824                           
 21825                           ;mdm_gsm_gprs.c: 207: UartConfig.RxInterruptEnable = ((UINT8)(1));
 21826  004FAC  0E01               	movlw	1
 21827  004FAE  6F34               	movwf	(_UartConfig+12)& (0+255),b
 21828                           
 21829                           ;mdm_gsm_gprs.c: 208: UartConfig.McuBusClock = ((UINT32)(48000000));
 21830  004FB0  0E00               	movlw	0
 21831  004FB2  6F35               	movwf	(_UartConfig+13)& (0+255),b
 21832  004FB4  0E6C               	movlw	108
 21833  004FB6  6F36               	movwf	(_UartConfig+14)& (0+255),b
 21834  004FB8  0EDC               	movlw	220
 21835  004FBA  6F37               	movwf	(_UartConfig+15)& (0+255),b
 21836  004FBC  0E02               	movlw	2
 21837  004FBE  6F38               	movwf	(_UartConfig+16)& (0+255),b
 21838                           
 21839                           ;mdm_gsm_gprs.c: 210: UartConfig.DesiredBaudRate = ((UINT32)(9600));
 21840  004FC0  0E80               	movlw	128
 21841  004FC2  6F39               	movwf	(_UartConfig+17)& (0+255),b
 21842  004FC4  0E25               	movlw	37
 21843  004FC6  6F3A               	movwf	(_UartConfig+18)& (0+255),b
 21844  004FC8  0E00               	movlw	0
 21845  004FCA  6F3B               	movwf	(_UartConfig+19)& (0+255),b
 21846  004FCC  0E00               	movlw	0
 21847  004FCE  6F3C               	movwf	(_UartConfig+20)& (0+255),b
 21848                           
 21849                           ; BSR set to: 3
 21850  004FD0  0012               	return		;funcret
 21851  004FD2                     __end_of_UartSetConfig:
 21852                           	opt stack 0
 21853                           tosu	equ	0xFFF
 21854                           tosh	equ	0xFFE
 21855                           tosl	equ	0xFFD
 21856                           pclath	equ	0xFFA
 21857                           tblptru	equ	0xFF8
 21858                           tblptrh	equ	0xFF7
 21859                           tblptrl	equ	0xFF6
 21860                           tablat	equ	0xFF5
 21861                           prodh	equ	0xFF4
 21862                           prodl	equ	0xFF3
 21863                           intcon	equ	0xFF2
 21864                           intcon2	equ	0xFF1
 21865                           intcon3	equ	0xFF0
 21866                           indf0	equ	0xFEF
 21867                           postinc0	equ	0xFEE
 21868                           plusw0	equ	0xFEB
 21869                           fsr0h	equ	0xFEA
 21870                           fsr0l	equ	0xFE9
 21871                           wreg	equ	0xFE8
 21872                           indf1	equ	0xFE7
 21873                           postinc1	equ	0xFE6
 21874                           postdec1	equ	0xFE5
 21875                           plusw1	equ	0xFE3
 21876                           fsr1h	equ	0xFE2
 21877                           fsr1l	equ	0xFE1
 21878                           indf2	equ	0xFDF
 21879                           postinc2	equ	0xFDE
 21880                           postdec2	equ	0xFDD
 21881                           plusw2	equ	0xFDB
 21882                           fsr2h	equ	0xFDA
 21883                           fsr2l	equ	0xFD9
 21884                           status	equ	0xFD8
 21885                           
 21886 ;; *************** function _TurnOnModem *****************
 21887 ;; Defined at:
 21888 ;;		line 371 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 21889 ;; Parameters:    Size  Location     Type
 21890 ;;		None
 21891 ;; Auto vars:     Size  Location     Type
 21892 ;;		None
 21893 ;; Return value:  Size  Location     Type
 21894 ;;                  1    wreg      void 
 21895 ;; Registers used:
 21896 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 21897 ;; Tracked objects:
 21898 ;;		On entry : 0/0
 21899 ;;		On exit  : 0/0
 21900 ;;		Unchanged: 0/0
 21901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21902 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21903 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21904 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21905 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21906 ;;Total ram usage:        0 bytes
 21907 ;; Hardware stack levels used:    1
 21908 ;; Hardware stack levels required when called:   12
 21909 ;; This function calls:
 21910 ;;		_GenerateEvt
 21911 ;; This function is called by:
 21912 ;;		_Mdm_MainTask
 21913 ;; This function uses a non-reentrant model
 21914 ;;
 21915                           
 21916                           	psect	text103
 21917  0054E2                     __ptext103:
 21918                           	opt stack 0
 21919  0054E2                     _TurnOnModem:
 21920                           	opt stack 15
 21921                           
 21922                           ;mdm_gsm_gprs.c: 373: static TurnOnMdmStateType TurnOnMdmState = TurnOnDelay;
 21923                           ;mdm_gsm_gprs.c: 374: static UINT16 Counter = 0;
 21924                           ;mdm_gsm_gprs.c: 376: switch (TurnOnMdmState)
 21925                           
 21926                           ; BSR set to: 3
 21927                           ;incstack = 0
 21928  0054E2  D019               	goto	l1003
 21929  0054E4                     
 21930                           ;mdm_gsm_gprs.c: 380: Counter++;
 21931  0054E4  0102               	movlb	2	; () banked
 21932  0054E6  4BDA               	infsnz	TurnOnModem@Counter& (0+255),f,b
 21933  0054E8  2BDB               	incf	(TurnOnModem@Counter+1)& (0+255),f,b
 21934                           
 21935                           ; BSR set to: 2
 21936                           ;mdm_gsm_gprs.c: 382: if (Counter >= (((UINT16)(3000))/((UINT16)(1))))
 21937  0054EA  0EB8               	movlw	184
 21938  0054EC  5DDA               	subwf	TurnOnModem@Counter& (0+255),w,b
 21939  0054EE  0E0B               	movlw	11
 21940  0054F0  59DB               	subwfb	(TurnOnModem@Counter+1)& (0+255),w,b
 21941  0054F2  A0D8               	btfss	status,0,c
 21942  0054F4  0012               	return	
 21943                           
 21944                           ; BSR set to: 2
 21945                           ;mdm_gsm_gprs.c: 383: {
 21946                           ;mdm_gsm_gprs.c: 385: TurnOnMdmState = TurnOnModuleReq;
 21947  0054F6  0E01               	movlw	1
 21948  0054F8  6E29               	movwf	TurnOnModem@TurnOnMdmState,c
 21949                           
 21950                           ; BSR set to: 2
 21951                           ;mdm_gsm_gprs.c: 386: }
 21952                           ;mdm_gsm_gprs.c: 387: break;
 21953  0054FA  0012               	return	
 21954  0054FC                     
 21955                           ;mdm_gsm_gprs.c: 391: GenerateEvt(&MdmOnOffPulseRequest);
 21956                           
 21957                           ; BSR set to: 2
 21958  0054FC  0EDE               	movlw	low _MdmOnOffPulseRequest
 21959  0054FE  0100               	movlb	0	; () banked
 21960  005500  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 21961  005502  0E00               	movlw	high _MdmOnOffPulseRequest
 21962  005504  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 21963  005506  EC24  F02F         	call	_GenerateEvt	;wreg free
 21964                           
 21965                           ;mdm_gsm_gprs.c: 393: MdmStatus = ModemOn;
 21966  00550A  0E01               	movlw	1
 21967  00550C  0100               	movlb	0	; () banked
 21968  00550E  6FCF               	movwf	_MdmStatus& (0+255),b
 21969                           
 21970                           ; BSR set to: 0
 21971                           ;mdm_gsm_gprs.c: 395: TurnOnMdmState = Stop;
 21972  005510  0E02               	movlw	2
 21973  005512  6E29               	movwf	TurnOnModem@TurnOnMdmState,c
 21974                           
 21975                           ; BSR set to: 0
 21976                           ;mdm_gsm_gprs.c: 403: }
 21977                           
 21978                           ; BSR set to: 0
 21979                           ;mdm_gsm_gprs.c: 402: break;
 21980                           
 21981                           ;mdm_gsm_gprs.c: 401: default:
 21982                           
 21983                           ; BSR set to: 0
 21984                           ;mdm_gsm_gprs.c: 399: break;
 21985                           
 21986                           ;mdm_gsm_gprs.c: 398: case Stop:
 21987                           
 21988                           ;mdm_gsm_gprs.c: 396: break;
 21989  005514  0012               	return	
 21990  005516                     l1003:
 21991                           
 21992                           ; BSR set to: 0
 21993  005516  5029               	movf	TurnOnModem@TurnOnMdmState,w,c
 21994                           
 21995                           ; Switch size 1, requested type "space"
 21996                           ; Number of cases is 3, Range of values is 0 to 2
 21997                           ; switch strategies available:
 21998                           ; Name         Instructions Cycles
 21999                           ; simple_byte           10     6 (average)
 22000                           ;	Chosen strategy is simple_byte
 22001  005518  0A00               	xorlw	0	; case 0
 22002  00551A  B4D8               	btfsc	status,2,c
 22003  00551C  D7E3               	goto	l1004
 22004  00551E  0A01               	xorlw	1	; case 1
 22005  005520  B4D8               	btfsc	status,2,c
 22006  005522  D7EC               	goto	l1007
 22007  005524  0A03               	xorlw	3	; case 2
 22008  005526  0012               	return	
 22009  005528                     __end_of_TurnOnModem:
 22010                           	opt stack 0
 22011                           tosu	equ	0xFFF
 22012                           tosh	equ	0xFFE
 22013                           tosl	equ	0xFFD
 22014                           pclath	equ	0xFFA
 22015                           tblptru	equ	0xFF8
 22016                           tblptrh	equ	0xFF7
 22017                           tblptrl	equ	0xFF6
 22018                           tablat	equ	0xFF5
 22019                           prodh	equ	0xFF4
 22020                           prodl	equ	0xFF3
 22021                           intcon	equ	0xFF2
 22022                           intcon2	equ	0xFF1
 22023                           intcon3	equ	0xFF0
 22024                           indf0	equ	0xFEF
 22025                           postinc0	equ	0xFEE
 22026                           plusw0	equ	0xFEB
 22027                           fsr0h	equ	0xFEA
 22028                           fsr0l	equ	0xFE9
 22029                           wreg	equ	0xFE8
 22030                           indf1	equ	0xFE7
 22031                           postinc1	equ	0xFE6
 22032                           postdec1	equ	0xFE5
 22033                           plusw1	equ	0xFE3
 22034                           fsr1h	equ	0xFE2
 22035                           fsr1l	equ	0xFE1
 22036                           indf2	equ	0xFDF
 22037                           postinc2	equ	0xFDE
 22038                           postdec2	equ	0xFDD
 22039                           plusw2	equ	0xFDB
 22040                           fsr2h	equ	0xFDA
 22041                           fsr2l	equ	0xFD9
 22042                           status	equ	0xFD8
 22043                           
 22044 ;; *************** function _SendSmsSm *****************
 22045 ;; Defined at:
 22046 ;;		line 636 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 22047 ;; Parameters:    Size  Location     Type
 22048 ;;		None
 22049 ;; Auto vars:     Size  Location     Type
 22050 ;;  UartMessage    50    0[BANK1 ] unsigned char [50]
 22051 ;; Return value:  Size  Location     Type
 22052 ;;                  1    wreg      void 
 22053 ;; Registers used:
 22054 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22055 ;; Tracked objects:
 22056 ;;		On entry : 0/0
 22057 ;;		On exit  : 0/0
 22058 ;;		Unchanged: 0/0
 22059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22060 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22061 ;;      Locals:         0       0      50       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22062 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22063 ;;      Totals:         0       2      50       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22064 ;;Total ram usage:       52 bytes
 22065 ;; Hardware stack levels used:    1
 22066 ;; Hardware stack levels required when called:   14
 22067 ;; This function calls:
 22068 ;;		_OsTmr_GetTimerStatus
 22069 ;;		_OsTmr_StartTimer
 22070 ;;		_ReceiveEvt
 22071 ;;		_StringCopy
 22072 ;;		_Uart_WriteStringLen
 22073 ;; This function is called by:
 22074 ;;		_Mdm_MainTask
 22075 ;; This function uses a non-reentrant model
 22076 ;;
 22077                           
 22078                           	psect	text104
 22079  0019F2                     __ptext104:
 22080                           	opt stack 0
 22081  0019F2                     _SendSmsSm:
 22082                           	opt stack 13
 22083                           
 22084                           ;mdm_gsm_gprs.c: 638: static SendSms_StateType SendSms_State = SendSms_WaitEvt;
 22085                           ;mdm_gsm_gprs.c: 639: static SendSms_StateType SendSms_NextState = SendSms_WaitEvt;
 22086                           ;mdm_gsm_gprs.c: 640: static SwTimerType SwTimer = { 1u, SwTimerExpired, 0, 0, DelayNotE
      +                          xpired, };
 22087                           ;mdm_gsm_gprs.c: 641: UINT8 UartMessage[50];
 22088                           ;mdm_gsm_gprs.c: 644: if (MdmStatus == ModemConfigured)
 22089                           
 22090                           ;incstack = 0
 22091  0019F2  0E03               	movlw	3
 22092  0019F4  0100               	movlb	0	; () banked
 22093  0019F6  19CF               	xorwf	_MdmStatus& (0+255),w,b
 22094  0019F8  A4D8               	btfss	status,2,c
 22095  0019FA  0012               	return	
 22096  0019FC  D0C1               	goto	l1081
 22097  0019FE                     
 22098                           ;mdm_gsm_gprs.c: 650: if (ReceiveEvt(&SendSmsEvent))
 22099                           
 22100                           ; BSR set to: 0
 22101  0019FE  0EDD               	movlw	low _SendSmsEvent
 22102  001A00  0100               	movlb	0	; () banked
 22103  001A02  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 22104  001A04  0E00               	movlw	high _SendSmsEvent
 22105  001A06  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 22106  001A08  EC6C  F02D         	call	_ReceiveEvt	;wreg free
 22107  001A0C  0900               	iorlw	0
 22108  001A0E  B4D8               	btfsc	status,2,c
 22109  001A10  0012               	return	
 22110                           
 22111                           ;mdm_gsm_gprs.c: 651: {
 22112                           ;mdm_gsm_gprs.c: 653: SendSms_State = SendSms_CmgsCmd;
 22113  001A12  0E01               	movlw	1
 22114  001A14  0101               	movlb	1	; () banked
 22115  001A16  6FF4               	movwf	SendSmsSm@SendSms_State& (0+255),b
 22116                           
 22117                           ; BSR set to: 1
 22118                           ;mdm_gsm_gprs.c: 654: }
 22119                           ;mdm_gsm_gprs.c: 655: break;
 22120  001A18  0012               	return	
 22121  001A1A                     
 22122                           ; BSR set to: 1
 22123                           ;mdm_gsm_gprs.c: 659: StringCopy((void*)("AT+CMGS=\""),UartMessage,9);
 22124                           
 22125                           ; BSR set to: 1
 22126  001A1A  0ECD               	movlw	low STR_5
 22127  001A1C  0100               	movlb	0	; () banked
 22128  001A1E  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 22129  001A20  0EFF               	movlw	high STR_5
 22130  001A22  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 22131  001A24  0E00               	movlw	low SendSmsSm@UartMessage
 22132  001A26  6F7F               	movwf	StringCopy@DestStr& (0+255),b
 22133  001A28  0E01               	movlw	high SendSmsSm@UartMessage
 22134  001A2A  6F80               	movwf	(StringCopy@DestStr+1)& (0+255),b
 22135  001A2C  0E00               	movlw	0
 22136  001A2E  6F82               	movwf	(StringCopy@Len+1)& (0+255),b
 22137  001A30  0E09               	movlw	9
 22138  001A32  6F81               	movwf	StringCopy@Len& (0+255),b
 22139  001A34  EC00  F027         	call	_StringCopy	;wreg free
 22140                           
 22141                           ;mdm_gsm_gprs.c: 661: StringCopy(PhoneNumber,&UartMessage[9],PhoneNumbLen);
 22142  001A38  0EC6               	movlw	low _PhoneNumber
 22143  001A3A  0100               	movlb	0	; () banked
 22144  001A3C  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 22145  001A3E  0E04               	movlw	high _PhoneNumber
 22146  001A40  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 22147  001A42  0E09               	movlw	low (SendSmsSm@UartMessage+9)
 22148  001A44  6F7F               	movwf	StringCopy@DestStr& (0+255),b
 22149  001A46  0E01               	movlw	high (SendSmsSm@UartMessage+9)
 22150  001A48  6F80               	movwf	(StringCopy@DestStr+1)& (0+255),b
 22151  001A4A  C0D0  F081         	movff	_PhoneNumbLen,StringCopy@Len
 22152  001A4E  6B82               	clrf	(StringCopy@Len+1)& (0+255),b
 22153  001A50  EC00  F027         	call	_StringCopy	;wreg free
 22154                           
 22155                           ;mdm_gsm_gprs.c: 663: UartMessage[PhoneNumbLen + 9] = '"';
 22156  001A54  0100               	movlb	0	; () banked
 22157  001A56  51D0               	movf	_PhoneNumbLen& (0+255),w,b
 22158  001A58  6F9B               	movwf	??_SendSmsSm& (0+255),b
 22159  001A5A  6B9C               	clrf	(??_SendSmsSm+1)& (0+255),b
 22160  001A5C  0E09               	movlw	9
 22161  001A5E  279B               	addwf	??_SendSmsSm& (0+255),f,b
 22162  001A60  0E00               	movlw	0
 22163  001A62  239C               	addwfc	(??_SendSmsSm+1)& (0+255),f,b
 22164  001A64  0E00               	movlw	low SendSmsSm@UartMessage
 22165  001A66  259B               	addwf	??_SendSmsSm& (0+255),w,b
 22166  001A68  6ED9               	movwf	fsr2l,c
 22167  001A6A  0E01               	movlw	high SendSmsSm@UartMessage
 22168  001A6C  219C               	addwfc	(??_SendSmsSm+1)& (0+255),w,b
 22169  001A6E  6EDA               	movwf	fsr2h,c
 22170  001A70  0E22               	movlw	34
 22171  001A72  6EDF               	movwf	indf2,c
 22172                           
 22173                           ; BSR set to: 0
 22174                           ;mdm_gsm_gprs.c: 664: UartMessage[PhoneNumbLen + 10] = '\r';
 22175  001A74  51D0               	movf	_PhoneNumbLen& (0+255),w,b
 22176  001A76  6F9B               	movwf	??_SendSmsSm& (0+255),b
 22177  001A78  6B9C               	clrf	(??_SendSmsSm+1)& (0+255),b
 22178  001A7A  0E0A               	movlw	10
 22179  001A7C  279B               	addwf	??_SendSmsSm& (0+255),f,b
 22180  001A7E  0E00               	movlw	0
 22181  001A80  239C               	addwfc	(??_SendSmsSm+1)& (0+255),f,b
 22182  001A82  0E00               	movlw	low SendSmsSm@UartMessage
 22183  001A84  259B               	addwf	??_SendSmsSm& (0+255),w,b
 22184  001A86  6ED9               	movwf	fsr2l,c
 22185  001A88  0E01               	movlw	high SendSmsSm@UartMessage
 22186  001A8A  219C               	addwfc	(??_SendSmsSm+1)& (0+255),w,b
 22187  001A8C  6EDA               	movwf	fsr2h,c
 22188  001A8E  0E0D               	movlw	13
 22189  001A90  6EDF               	movwf	indf2,c
 22190                           
 22191                           ; BSR set to: 0
 22192                           ;mdm_gsm_gprs.c: 666: Uart_WriteStringLen(((UINT8)(1)), UartMessage,(PhoneNumbLen + 11))
      +                          ;
 22193  001A92  0E00               	movlw	low SendSmsSm@UartMessage
 22194  001A94  6F80               	movwf	Uart_WriteStringLen@StringToWrite& (0+255),b
 22195  001A96  0E01               	movlw	high SendSmsSm@UartMessage
 22196  001A98  6F81               	movwf	(Uart_WriteStringLen@StringToWrite+1)& (0+255),b
 22197  001A9A  51D0               	movf	_PhoneNumbLen& (0+255),w,b
 22198  001A9C  0F0B               	addlw	11
 22199  001A9E  6F82               	movwf	Uart_WriteStringLen@Len& (0+255),b
 22200  001AA0  0E01               	movlw	1
 22201  001AA2  EC5E  F02B         	call	_Uart_WriteStringLen
 22202                           
 22203                           ;mdm_gsm_gprs.c: 668: OsTmr_StartTimer(&SwTimer,2500);
 22204  001AA6  0EE2               	movlw	low SendSmsSm@SwTimer
 22205  001AA8  0100               	movlb	0	; () banked
 22206  001AAA  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 22207  001AAC  0E03               	movlw	high SendSmsSm@SwTimer
 22208  001AAE  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 22209  001AB0  0EC4               	movlw	196
 22210  001AB2  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 22211  001AB4  0E09               	movlw	9
 22212  001AB6  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 22213  001AB8  0E00               	movlw	0
 22214  001ABA  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 22215  001ABC  0E00               	movlw	0
 22216  001ABE  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 22217  001AC0  EC60  F027         	call	_OsTmr_StartTimer	;wreg free
 22218                           
 22219                           ;mdm_gsm_gprs.c: 669: SendSms_State = SendSms_Delay;
 22220  001AC4  0E05               	movlw	5
 22221  001AC6  0101               	movlb	1	; () banked
 22222  001AC8  6FF4               	movwf	SendSmsSm@SendSms_State& (0+255),b
 22223                           
 22224                           ; BSR set to: 1
 22225                           ;mdm_gsm_gprs.c: 670: SendSms_NextState = SendSms_EnterCmd;
 22226  001ACA  0E02               	movlw	2
 22227  001ACC  6FF3               	movwf	SendSmsSm@SendSms_NextState& (0+255),b
 22228                           
 22229                           ;mdm_gsm_gprs.c: 671: break;
 22230  001ACE  0012               	return	
 22231  001AD0                     
 22232                           ; BSR set to: 1
 22233                           ;mdm_gsm_gprs.c: 675: UartMessage[0] = '\n';
 22234                           
 22235                           ; BSR set to: 1
 22236  001AD0  0E0A               	movlw	10
 22237  001AD2  6F00               	movwf	SendSmsSm@UartMessage& (0+255),b
 22238                           
 22239                           ;mdm_gsm_gprs.c: 676: UartMessage[1] = '\r';
 22240  001AD4  0E0D               	movlw	13
 22241  001AD6  6F01               	movwf	(SendSmsSm@UartMessage+1)& (0+255),b
 22242                           
 22243                           ; BSR set to: 1
 22244                           ;mdm_gsm_gprs.c: 678: Uart_WriteStringLen(((UINT8)(1)), UartMessage,2);
 22245  001AD8  0E00               	movlw	low SendSmsSm@UartMessage
 22246  001ADA  0100               	movlb	0	; () banked
 22247  001ADC  6F80               	movwf	Uart_WriteStringLen@StringToWrite& (0+255),b
 22248  001ADE  0E01               	movlw	high SendSmsSm@UartMessage
 22249  001AE0  6F81               	movwf	(Uart_WriteStringLen@StringToWrite+1)& (0+255),b
 22250  001AE2  0E02               	movlw	2
 22251  001AE4  6F82               	movwf	Uart_WriteStringLen@Len& (0+255),b
 22252  001AE6  0E01               	movlw	1
 22253  001AE8  EC5E  F02B         	call	_Uart_WriteStringLen
 22254                           
 22255                           ;mdm_gsm_gprs.c: 680: SendSms_State = SendSms_WaitConf;
 22256  001AEC  0E03               	movlw	3
 22257  001AEE  0101               	movlb	1	; () banked
 22258  001AF0  6FF4               	movwf	SendSmsSm@SendSms_State& (0+255),b
 22259                           
 22260                           ;mdm_gsm_gprs.c: 681: break;
 22261  001AF2  0012               	return	
 22262  001AF4                     
 22263                           ; BSR set to: 1
 22264                           ;mdm_gsm_gprs.c: 685: if (ReceiveEvt(&NewStringReceived))
 22265                           
 22266                           ; BSR set to: 1
 22267  001AF4  0E3C               	movlw	low _NewStringReceived
 22268  001AF6  0100               	movlb	0	; () banked
 22269  001AF8  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 22270  001AFA  0E00               	movlw	high _NewStringReceived
 22271  001AFC  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 22272  001AFE  EC6C  F02D         	call	_ReceiveEvt	;wreg free
 22273  001B02  0900               	iorlw	0
 22274  001B04  B4D8               	btfsc	status,2,c
 22275  001B06  0012               	return	
 22276                           
 22277                           ;mdm_gsm_gprs.c: 686: {
 22278                           ;mdm_gsm_gprs.c: 688: if (RxBuffer[0] == '>')
 22279  001B08  CC58  FFE8         	movff	_RxBuffer,wreg
 22280  001B0C  0A3E               	xorlw	62
 22281  001B0E  A4D8               	btfss	status,2,c
 22282  001B10  0012               	return	
 22283                           
 22284                           ;mdm_gsm_gprs.c: 689: {
 22285                           ;mdm_gsm_gprs.c: 691: SendSms_State = SendSms_SendSmsText;
 22286  001B12  0E04               	movlw	4
 22287  001B14  0101               	movlb	1	; () banked
 22288  001B16  6FF4               	movwf	SendSmsSm@SendSms_State& (0+255),b
 22289                           
 22290                           ; BSR set to: 1
 22291                           ;mdm_gsm_gprs.c: 692: }
 22292                           ;mdm_gsm_gprs.c: 693: }
 22293                           ;mdm_gsm_gprs.c: 694: break;
 22294                           
 22295                           ; BSR set to: 1
 22296  001B18  0012               	return	
 22297  001B1A                     
 22298                           ; BSR set to: 1
 22299                           ;mdm_gsm_gprs.c: 698: StringCopy(MessageText,UartMessage,SmsLen);
 22300                           
 22301                           ; BSR set to: 1
 22302  001B1A  0EC4               	movlw	low _MessageText
 22303  001B1C  0100               	movlb	0	; () banked
 22304  001B1E  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 22305  001B20  0E07               	movlw	high _MessageText
 22306  001B22  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 22307  001B24  0E00               	movlw	low SendSmsSm@UartMessage
 22308  001B26  6F7F               	movwf	StringCopy@DestStr& (0+255),b
 22309  001B28  0E01               	movlw	high SendSmsSm@UartMessage
 22310  001B2A  6F80               	movwf	(StringCopy@DestStr+1)& (0+255),b
 22311  001B2C  C0D1  F081         	movff	_SmsLen,StringCopy@Len
 22312  001B30  6B82               	clrf	(StringCopy@Len+1)& (0+255),b
 22313  001B32  EC00  F027         	call	_StringCopy	;wreg free
 22314                           
 22315                           ;mdm_gsm_gprs.c: 700: UartMessage[SmsLen] = 0x1A;
 22316  001B36  0100               	movlb	0	; () banked
 22317  001B38  51D1               	movf	_SmsLen& (0+255),w,b
 22318  001B3A  0D01               	mullw	1
 22319  001B3C  0E00               	movlw	low SendSmsSm@UartMessage
 22320  001B3E  24F3               	addwf	prodl,w,c
 22321  001B40  6ED9               	movwf	fsr2l,c
 22322  001B42  0E01               	movlw	high SendSmsSm@UartMessage
 22323  001B44  20F4               	addwfc	prodh,w,c
 22324  001B46  6EDA               	movwf	fsr2h,c
 22325  001B48  0E1A               	movlw	26
 22326  001B4A  6EDF               	movwf	indf2,c
 22327                           
 22328                           ; BSR set to: 0
 22329                           ;mdm_gsm_gprs.c: 702: Uart_WriteStringLen(((UINT8)(1)), UartMessage,(SmsLen + 1));
 22330  001B4C  0E00               	movlw	low SendSmsSm@UartMessage
 22331  001B4E  6F80               	movwf	Uart_WriteStringLen@StringToWrite& (0+255),b
 22332  001B50  0E01               	movlw	high SendSmsSm@UartMessage
 22333  001B52  6F81               	movwf	(Uart_WriteStringLen@StringToWrite+1)& (0+255),b
 22334  001B54  29D1               	incf	_SmsLen& (0+255),w,b
 22335  001B56  6F82               	movwf	Uart_WriteStringLen@Len& (0+255),b
 22336  001B58  0E01               	movlw	1
 22337  001B5A  EC5E  F02B         	call	_Uart_WriteStringLen
 22338                           
 22339                           ;mdm_gsm_gprs.c: 704: SendSms_State = SendSms_WaitEvt;
 22340  001B5E  0E00               	movlw	0
 22341  001B60  0101               	movlb	1	; () banked
 22342  001B62  6FF4               	movwf	SendSmsSm@SendSms_State& (0+255),b
 22343                           
 22344                           ;mdm_gsm_gprs.c: 705: break;
 22345  001B64  0012               	return	
 22346  001B66                     
 22347                           ; BSR set to: 1
 22348                           ;mdm_gsm_gprs.c: 709: if (OsTmr_GetTimerStatus(&SwTimer) == SwTimerExpired)
 22349                           
 22350                           ; BSR set to: 1
 22351  001B66  0EE2               	movlw	low SendSmsSm@SwTimer
 22352  001B68  0100               	movlb	0	; () banked
 22353  001B6A  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 22354  001B6C  0E03               	movlw	high SendSmsSm@SwTimer
 22355  001B6E  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 22356  001B70  ECE9  F023         	call	_OsTmr_GetTimerStatus	;wreg free
 22357  001B74  06E8               	decf	wreg,f,c
 22358  001B76  A4D8               	btfss	status,2,c
 22359  001B78  0012               	return	
 22360                           
 22361                           ;mdm_gsm_gprs.c: 710: {
 22362                           ;mdm_gsm_gprs.c: 712: SendSms_State = SendSms_NextState;
 22363  001B7A  C1F3  F1F4         	movff	SendSmsSm@SendSms_NextState,SendSmsSm@SendSms_State
 22364                           
 22365                           ;mdm_gsm_gprs.c: 718: }
 22366                           
 22367                           ;mdm_gsm_gprs.c: 717: break;
 22368                           
 22369                           ;mdm_gsm_gprs.c: 716: default:
 22370                           
 22371                           ;mdm_gsm_gprs.c: 713: }
 22372                           ;mdm_gsm_gprs.c: 714: break;
 22373  001B7E  0012               	return	
 22374  001B80                     l1081:
 22375  001B80  0101               	movlb	1	; () banked
 22376  001B82  51F4               	movf	SendSmsSm@SendSms_State& (0+255),w,b
 22377                           
 22378                           ; Switch size 1, requested type "space"
 22379                           ; Number of cases is 6, Range of values is 0 to 5
 22380                           ; switch strategies available:
 22381                           ; Name         Instructions Cycles
 22382                           ; simple_byte           19    10 (average)
 22383                           ;	Chosen strategy is simple_byte
 22384  001B84  0A00               	xorlw	0	; case 0
 22385  001B86  B4D8               	btfsc	status,2,c
 22386  001B88  D73A               	goto	l1082
 22387  001B8A  0A01               	xorlw	1	; case 1
 22388  001B8C  B4D8               	btfsc	status,2,c
 22389  001B8E  D745               	goto	l1085
 22390  001B90  0A03               	xorlw	3	; case 2
 22391  001B92  B4D8               	btfsc	status,2,c
 22392  001B94  D79D               	goto	l1086
 22393  001B96  0A01               	xorlw	1	; case 3
 22394  001B98  B4D8               	btfsc	status,2,c
 22395  001B9A  D7AC               	goto	l1087
 22396  001B9C  0A07               	xorlw	7	; case 4
 22397  001B9E  B4D8               	btfsc	status,2,c
 22398  001BA0  D7BC               	goto	l1090
 22399  001BA2  0A01               	xorlw	1	; case 5
 22400  001BA4  A4D8               	btfss	status,2,c
 22401                           
 22402                           ; BSR set to: 1
 22403  001BA6  0012               	return	
 22404  001BA8  D7DE               	goto	l1091
 22405  001BAA                     __end_of_SendSmsSm:
 22406                           	opt stack 0
 22407                           tosu	equ	0xFFF
 22408                           tosh	equ	0xFFE
 22409                           tosl	equ	0xFFD
 22410                           pclath	equ	0xFFA
 22411                           tblptru	equ	0xFF8
 22412                           tblptrh	equ	0xFF7
 22413                           tblptrl	equ	0xFF6
 22414                           tablat	equ	0xFF5
 22415                           prodh	equ	0xFF4
 22416                           prodl	equ	0xFF3
 22417                           intcon	equ	0xFF2
 22418                           intcon2	equ	0xFF1
 22419                           intcon3	equ	0xFF0
 22420                           indf0	equ	0xFEF
 22421                           postinc0	equ	0xFEE
 22422                           plusw0	equ	0xFEB
 22423                           fsr0h	equ	0xFEA
 22424                           fsr0l	equ	0xFE9
 22425                           wreg	equ	0xFE8
 22426                           indf1	equ	0xFE7
 22427                           postinc1	equ	0xFE6
 22428                           postdec1	equ	0xFE5
 22429                           plusw1	equ	0xFE3
 22430                           fsr1h	equ	0xFE2
 22431                           fsr1l	equ	0xFE1
 22432                           indf2	equ	0xFDF
 22433                           postinc2	equ	0xFDE
 22434                           postdec2	equ	0xFDD
 22435                           plusw2	equ	0xFDB
 22436                           fsr2h	equ	0xFDA
 22437                           fsr2l	equ	0xFD9
 22438                           status	equ	0xFD8
 22439                           
 22440 ;; *************** function _Uart_WriteStringLen *****************
 22441 ;; Defined at:
 22442 ;;		line 542 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 22443 ;; Parameters:    Size  Location     Type
 22444 ;;  Module          1    wreg     unsigned char 
 22445 ;;  StringToWrit    2   32[BANK0 ] PTR unsigned char 
 22446 ;;		 -> GsmGprsTerminal@UartBuffer(200), SendSmsSm@UartMessage(50), 
 22447 ;;  Len             1   34[BANK0 ] unsigned char 
 22448 ;; Auto vars:     Size  Location     Type
 22449 ;;  Module          1   36[BANK0 ] unsigned char 
 22450 ;;  Index           1   35[BANK0 ] unsigned char 
 22451 ;; Return value:  Size  Location     Type
 22452 ;;                  1    wreg      void 
 22453 ;; Registers used:
 22454 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 22455 ;; Tracked objects:
 22456 ;;		On entry : 0/0
 22457 ;;		On exit  : 0/0
 22458 ;;		Unchanged: 0/0
 22459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22460 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22461 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22462 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22463 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22464 ;;Total ram usage:        5 bytes
 22465 ;; Hardware stack levels used:    1
 22466 ;; Hardware stack levels required when called:   12
 22467 ;; This function calls:
 22468 ;;		_UartTxBufferStatus
 22469 ;;		_UartWriteByte
 22470 ;; This function is called by:
 22471 ;;		_SendSmsSm
 22472 ;;		_GsmGprsTerminal
 22473 ;; This function uses a non-reentrant model
 22474 ;;
 22475                           
 22476                           	psect	text105
 22477  0056BC                     __ptext105:
 22478                           	opt stack 0
 22479  0056BC                     _Uart_WriteStringLen:
 22480                           	opt stack 14
 22481                           
 22482                           ;incstack = 0
 22483                           ;Uart_WriteStringLen@Module stored from wreg
 22484  0056BC  0100               	movlb	0	; () banked
 22485  0056BE  6F84               	movwf	Uart_WriteStringLen@Module& (0+255),b
 22486                           
 22487                           ;uart_drv.c: 544: UINT8 Index;
 22488                           ;uart_drv.c: 546: for (Index = 0; Index < Len; Index++)
 22489  0056C0  0E00               	movlw	0
 22490  0056C2  0100               	movlb	0	; () banked
 22491  0056C4  6F83               	movwf	Uart_WriteStringLen@Index& (0+255),b
 22492  0056C6  D015               	goto	l715
 22493  0056C8                     
 22494                           ; BSR set to: 0
 22495                           ;uart_drv.c: 547: {
 22496                           ;uart_drv.c: 549: UartWriteByte(Module, *StringToWrite);
 22497                           
 22498                           ; BSR set to: 0
 22499  0056C8  C080  FFD9         	movff	Uart_WriteStringLen@StringToWrite,fsr2l
 22500  0056CC  C081  FFDA         	movff	Uart_WriteStringLen@StringToWrite+1,fsr2h
 22501  0056D0  50DF               	movf	indf2,w,c
 22502  0056D2  6F7D               	movwf	UartWriteByte@ByteToWrite& (0+255),b
 22503  0056D4  5184               	movf	Uart_WriteStringLen@Module& (0+255),w,b
 22504  0056D6  ECA8  F02E         	call	_UartWriteByte
 22505                           
 22506                           ;uart_drv.c: 551: StringToWrite++;
 22507  0056DA  0100               	movlb	0	; () banked
 22508  0056DC  4B80               	infsnz	Uart_WriteStringLen@StringToWrite& (0+255),f,b
 22509  0056DE  2B81               	incf	(Uart_WriteStringLen@StringToWrite+1)& (0+255),f,b
 22510  0056E0                     
 22511                           ; BSR set to: 0
 22512                           
 22513                           ; BSR set to: 0
 22514  0056E0  0100               	movlb	0	; () banked
 22515  0056E2  5184               	movf	Uart_WriteStringLen@Module& (0+255),w,b
 22516  0056E4  ECB6  F029         	call	_UartTxBufferStatus
 22517  0056E8  06E8               	decf	wreg,f,c
 22518  0056EA  B4D8               	btfsc	status,2,c
 22519  0056EC  D7F9               	goto	l718
 22520  0056EE  0100               	movlb	0	; () banked
 22521  0056F0  2B83               	incf	Uart_WriteStringLen@Index& (0+255),f,b
 22522  0056F2                     l715:
 22523                           
 22524                           ; BSR set to: 0
 22525                           
 22526                           ; BSR set to: 0
 22527  0056F2  5182               	movf	Uart_WriteStringLen@Len& (0+255),w,b
 22528  0056F4  5D83               	subwf	Uart_WriteStringLen@Index& (0+255),w,b
 22529  0056F6  B0D8               	btfsc	status,0,c
 22530  0056F8  0012               	return	
 22531  0056FA  D7E6               	goto	l716
 22532  0056FC                     __end_of_Uart_WriteStringLen:
 22533                           	opt stack 0
 22534                           tosu	equ	0xFFF
 22535                           tosh	equ	0xFFE
 22536                           tosl	equ	0xFFD
 22537                           pclath	equ	0xFFA
 22538                           tblptru	equ	0xFF8
 22539                           tblptrh	equ	0xFF7
 22540                           tblptrl	equ	0xFF6
 22541                           tablat	equ	0xFF5
 22542                           prodh	equ	0xFF4
 22543                           prodl	equ	0xFF3
 22544                           intcon	equ	0xFF2
 22545                           intcon2	equ	0xFF1
 22546                           intcon3	equ	0xFF0
 22547                           indf0	equ	0xFEF
 22548                           postinc0	equ	0xFEE
 22549                           plusw0	equ	0xFEB
 22550                           fsr0h	equ	0xFEA
 22551                           fsr0l	equ	0xFE9
 22552                           wreg	equ	0xFE8
 22553                           indf1	equ	0xFE7
 22554                           postinc1	equ	0xFE6
 22555                           postdec1	equ	0xFE5
 22556                           plusw1	equ	0xFE3
 22557                           fsr1h	equ	0xFE2
 22558                           fsr1l	equ	0xFE1
 22559                           indf2	equ	0xFDF
 22560                           postinc2	equ	0xFDE
 22561                           postdec2	equ	0xFDD
 22562                           plusw2	equ	0xFDB
 22563                           fsr2h	equ	0xFDA
 22564                           fsr2l	equ	0xFD9
 22565                           status	equ	0xFD8
 22566                           
 22567 ;; *************** function _ModemEvtParser *****************
 22568 ;; Defined at:
 22569 ;;		line 494 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 22570 ;; Parameters:    Size  Location     Type
 22571 ;;		None
 22572 ;; Auto vars:     Size  Location     Type
 22573 ;;  CallReadyStr   10   40[BANK0 ] unsigned char [10]
 22574 ;;  SmsString       5   50[BANK0 ] unsigned char [5]
 22575 ;;  RingString      4   55[BANK0 ] unsigned char [4]
 22576 ;;  CompareIdx      1   60[BANK0 ] unsigned char 
 22577 ;;  Match           1   59[BANK0 ] unsigned char 
 22578 ;; Return value:  Size  Location     Type
 22579 ;;                  1    wreg      void 
 22580 ;; Registers used:
 22581 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 22582 ;; Tracked objects:
 22583 ;;		On entry : 0/0
 22584 ;;		On exit  : 0/0
 22585 ;;		Unchanged: 0/0
 22586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22587 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22588 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22589 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22590 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22591 ;;Total ram usage:       21 bytes
 22592 ;; Hardware stack levels used:    1
 22593 ;; Hardware stack levels required when called:   12
 22594 ;; This function calls:
 22595 ;;		_GenerateEvt
 22596 ;;		_ReceiveEvt
 22597 ;;		_StringCompare
 22598 ;;		_Uart_ClearRxBuffer
 22599 ;; This function is called by:
 22600 ;;		_Mdm_MainTask
 22601 ;; This function uses a non-reentrant model
 22602 ;;
 22603                           
 22604                           	psect	text106
 22605  002C74                     __ptext106:
 22606                           	opt stack 0
 22607  002C74                     _ModemEvtParser:
 22608                           	opt stack 15
 22609                           
 22610                           ;mdm_gsm_gprs.c: 496: UINT8 RingString[] = {'R','I','N','G'};
 22611                           
 22612                           ; BSR set to: 0
 22613                           ;incstack = 0
 22614  002C74  C3C0  F097         	movff	ModemEvtParser@F9086,ModemEvtParser@RingString
 22615  002C78  C3C1  F098         	movff	ModemEvtParser@F9086+1,ModemEvtParser@RingString+1
 22616  002C7C  C3C2  F099         	movff	ModemEvtParser@F9086+2,ModemEvtParser@RingString+2
 22617  002C80  C3C3  F09A         	movff	ModemEvtParser@F9086+3,ModemEvtParser@RingString+3
 22618                           
 22619                           ;mdm_gsm_gprs.c: 497: UINT8 SmsString[] = {'+','C','M','T','I'};
 22620  002C84  EE23  F0BB         	lfsr	2,ModemEvtParser@F9088
 22621  002C88  EE10  F092         	lfsr	1,ModemEvtParser@SmsString
 22622  002C8C  0E04               	movlw	4
 22623  002C8E                     u12271:
 22624  002C8E  CFDB FFE3          	movff	plusw2,plusw1
 22625  002C92  06E8               	decf	wreg,f,c
 22626  002C94  E2FC               	bc	u12271
 22627                           
 22628                           ;mdm_gsm_gprs.c: 498: UINT8 CallReadyString[] = {'C','a','l','l',' ','R','e','a','d','y'
      +                          };
 22629  002C96  EE24  F0EF         	lfsr	2,ModemEvtParser@F9090
 22630  002C9A  EE10  F088         	lfsr	1,ModemEvtParser@CallReadyString
 22631  002C9E  0E09               	movlw	9
 22632  002CA0                     u12281:
 22633  002CA0  CFDB FFE3          	movff	plusw2,plusw1
 22634  002CA4  06E8               	decf	wreg,f,c
 22635  002CA6  E2FC               	bc	u12281
 22636                           
 22637                           ;mdm_gsm_gprs.c: 499: UINT8 CompareIdx = 0;
 22638  002CA8  0E00               	movlw	0
 22639  002CAA  0100               	movlb	0	; () banked
 22640  002CAC  6F9C               	movwf	ModemEvtParser@CompareIdx& (0+255),b
 22641                           
 22642                           ; BSR set to: 0
 22643                           ;mdm_gsm_gprs.c: 500: UINT8 Match = 0;
 22644  002CAE  0E00               	movlw	0
 22645  002CB0  6F9B               	movwf	ModemEvtParser@Match& (0+255),b
 22646                           
 22647                           ; BSR set to: 0
 22648                           ;mdm_gsm_gprs.c: 503: if (ReceiveEvt(&NewMdmEvtParserRequest))
 22649  002CB2  0E3B               	movlw	low _NewMdmEvtParserRequest
 22650  002CB4  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 22651  002CB6  0E00               	movlw	high _NewMdmEvtParserRequest
 22652  002CB8  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 22653  002CBA  EC6C  F02D         	call	_ReceiveEvt	;wreg free
 22654  002CBE  0900               	iorlw	0
 22655  002CC0  B4D8               	btfsc	status,2,c
 22656  002CC2  0012               	return	
 22657                           
 22658                           ;mdm_gsm_gprs.c: 504: {
 22659                           ;mdm_gsm_gprs.c: 505: for (CompareIdx = 0; CompareIdx < ((UINT8)(3)); CompareIdx++)
 22660  002CC4  0E00               	movlw	0
 22661  002CC6  0100               	movlb	0	; () banked
 22662  002CC8  6F9C               	movwf	ModemEvtParser@CompareIdx& (0+255),b
 22663  002CCA                     l13139:
 22664                           
 22665                           ; BSR set to: 0
 22666  002CCA  0E02               	movlw	2
 22667  002CCC  659C               	cpfsgt	ModemEvtParser@CompareIdx& (0+255),b
 22668  002CCE  D04C               	goto	l1044
 22669  002CD0  D058               	goto	u12340
 22670  002CD2                     
 22671                           ; BSR set to: 0
 22672                           ;mdm_gsm_gprs.c: 511: if (StringCompare(RingString, RxBuffer, sizeof(RingString)))
 22673                           
 22674                           ; BSR set to: 0
 22675  002CD2  0E97               	movlw	low ModemEvtParser@RingString
 22676  002CD4  6F7D               	movwf	StringCompare@String1& (0+255),b
 22677  002CD6  0E00               	movlw	high ModemEvtParser@RingString
 22678  002CD8  6F7E               	movwf	(StringCompare@String1+1)& (0+255),b
 22679  002CDA  0E58               	movlw	low _RxBuffer
 22680  002CDC  6F7F               	movwf	StringCompare@String2& (0+255),b
 22681  002CDE  0E0C               	movlw	high _RxBuffer
 22682  002CE0  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 22683  002CE2  0E00               	movlw	0
 22684  002CE4  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 22685  002CE6  0E04               	movlw	4
 22686  002CE8  6F81               	movwf	StringCompare@Len& (0+255),b
 22687  002CEA  EC15  F029         	call	_StringCompare	;wreg free
 22688  002CEE  0900               	iorlw	0
 22689  002CF0  B4D8               	btfsc	status,2,c
 22690  002CF2  D044               	goto	l1047
 22691                           
 22692                           ;mdm_gsm_gprs.c: 512: {
 22693                           ;mdm_gsm_gprs.c: 514: GenerateEvt(&RingEvent);
 22694  002CF4  0EDC               	movlw	low _RingEvent
 22695  002CF6  0100               	movlb	0	; () banked
 22696  002CF8  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 22697  002CFA  0E00               	movlw	high _RingEvent
 22698  002CFC  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 22699  002CFE  EC24  F02F         	call	_GenerateEvt	;wreg free
 22700  002D02  D018               	goto	l13153
 22701  002D04                     
 22702                           ; BSR set to: 0
 22703                           ;mdm_gsm_gprs.c: 522: if (StringCompare(SmsString, RxBuffer, sizeof(SmsString)))
 22704                           
 22705                           ; BSR set to: 0
 22706  002D04  0E92               	movlw	low ModemEvtParser@SmsString
 22707  002D06  6F7D               	movwf	StringCompare@String1& (0+255),b
 22708  002D08  0E00               	movlw	high ModemEvtParser@SmsString
 22709  002D0A  6F7E               	movwf	(StringCompare@String1+1)& (0+255),b
 22710  002D0C  0E58               	movlw	low _RxBuffer
 22711  002D0E  6F7F               	movwf	StringCompare@String2& (0+255),b
 22712  002D10  0E0C               	movlw	high _RxBuffer
 22713  002D12  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 22714  002D14  0E00               	movlw	0
 22715  002D16  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 22716  002D18  0E05               	movlw	5
 22717  002D1A  6F81               	movwf	StringCompare@Len& (0+255),b
 22718  002D1C  EC15  F029         	call	_StringCompare	;wreg free
 22719  002D20  0900               	iorlw	0
 22720  002D22  B4D8               	btfsc	status,2,c
 22721  002D24  D02B               	goto	l1047
 22722                           
 22723                           ;mdm_gsm_gprs.c: 523: {
 22724                           ;mdm_gsm_gprs.c: 525: GenerateEvt(&SmsEvent);
 22725  002D26  0EDB               	movlw	low _SmsEvent
 22726  002D28  0100               	movlb	0	; () banked
 22727  002D2A  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 22728  002D2C  0E00               	movlw	high _SmsEvent
 22729  002D2E  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 22730  002D30  EC24  F02F         	call	_GenerateEvt	;wreg free
 22731  002D34                     l13153:
 22732                           
 22733                           ;mdm_gsm_gprs.c: 527: Match = 1;
 22734  002D34  0E01               	movlw	1
 22735  002D36  0100               	movlb	0	; () banked
 22736  002D38  D015               	goto	L26
 22737  002D3A                     
 22738                           ; BSR set to: 0
 22739                           ;mdm_gsm_gprs.c: 533: if (StringCompare(CallReadyString, RxBuffer, sizeof(CallReadyStrin
      +                          g)))
 22740                           
 22741                           ; BSR set to: 0
 22742  002D3A  0E88               	movlw	low ModemEvtParser@CallReadyString
 22743  002D3C  6F7D               	movwf	StringCompare@String1& (0+255),b
 22744  002D3E  0E00               	movlw	high ModemEvtParser@CallReadyString
 22745  002D40  6F7E               	movwf	(StringCompare@String1+1)& (0+255),b
 22746  002D42  0E58               	movlw	low _RxBuffer
 22747  002D44  6F7F               	movwf	StringCompare@String2& (0+255),b
 22748  002D46  0E0C               	movlw	high _RxBuffer
 22749  002D48  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 22750  002D4A  0E00               	movlw	0
 22751  002D4C  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 22752  002D4E  0E0A               	movlw	10
 22753  002D50  6F81               	movwf	StringCompare@Len& (0+255),b
 22754  002D52  EC15  F029         	call	_StringCompare	;wreg free
 22755  002D56  0900               	iorlw	0
 22756  002D58  B4D8               	btfsc	status,2,c
 22757  002D5A  D010               	goto	l1047
 22758                           
 22759                           ;mdm_gsm_gprs.c: 534: {
 22760                           ;mdm_gsm_gprs.c: 536: MdmStatus = ModemReady;
 22761  002D5C  0E02               	movlw	2
 22762  002D5E  0100               	movlb	0	; () banked
 22763  002D60  6FCF               	movwf	_MdmStatus& (0+255),b
 22764                           
 22765                           ;mdm_gsm_gprs.c: 538: Match = 1;
 22766  002D62  0E01               	movlw	1
 22767  002D64                     L26:
 22768  002D64  6F9B               	movwf	ModemEvtParser@Match& (0+255),b
 22769                           
 22770                           ; BSR set to: 0
 22771                           ;mdm_gsm_gprs.c: 544: }
 22772                           
 22773                           ; BSR set to: 0
 22774                           ;mdm_gsm_gprs.c: 543: break;
 22775                           
 22776                           ;mdm_gsm_gprs.c: 542: default:
 22777                           
 22778                           ; BSR set to: 0
 22779                           ;mdm_gsm_gprs.c: 539: }
 22780                           ;mdm_gsm_gprs.c: 540: break;
 22781  002D66  D00A               	goto	l1047
 22782  002D68                     l1044:
 22783                           
 22784                           ; BSR set to: 0
 22785                           
 22786                           ; BSR set to: 0
 22787  002D68  519C               	movf	ModemEvtParser@CompareIdx& (0+255),w,b
 22788                           
 22789                           ; Switch size 1, requested type "space"
 22790                           ; Number of cases is 3, Range of values is 0 to 2
 22791                           ; switch strategies available:
 22792                           ; Name         Instructions Cycles
 22793                           ; simple_byte           10     6 (average)
 22794                           ;	Chosen strategy is simple_byte
 22795  002D6A  0A00               	xorlw	0	; case 0
 22796  002D6C  B4D8               	btfsc	status,2,c
 22797  002D6E  D7B1               	goto	l1045
 22798  002D70  0A01               	xorlw	1	; case 1
 22799  002D72  B4D8               	btfsc	status,2,c
 22800  002D74  D7C7               	goto	l1048
 22801  002D76  0A03               	xorlw	3	; case 2
 22802  002D78  B4D8               	btfsc	status,2,c
 22803  002D7A  D7DF               	goto	l1050
 22804  002D7C                     l1047:
 22805                           
 22806                           ; BSR set to: 0
 22807  002D7C  0100               	movlb	0	; () banked
 22808  002D7E  2B9C               	incf	ModemEvtParser@CompareIdx& (0+255),f,b
 22809  002D80  D7A4               	goto	l13139
 22810  002D82                     u12340:
 22811                           
 22812                           ; BSR set to: 0
 22813                           ;mdm_gsm_gprs.c: 545: }
 22814                           ;mdm_gsm_gprs.c: 548: if (Match == 1)
 22815                           
 22816                           ; BSR set to: 0
 22817  002D82  059B               	decf	ModemEvtParser@Match& (0+255),w,b
 22818  002D84  A4D8               	btfss	status,2,c
 22819  002D86  0012               	return	
 22820                           
 22821                           ; BSR set to: 0
 22822                           ;mdm_gsm_gprs.c: 549: {
 22823                           ;mdm_gsm_gprs.c: 552: Uart_ClearRxBuffer();
 22824  002D88  ECA9  F02C         	call	_Uart_ClearRxBuffer	;wreg free
 22825  002D8C  0012               	return	
 22826  002D8E                     __end_of_ModemEvtParser:
 22827                           	opt stack 0
 22828                           tosu	equ	0xFFF
 22829                           tosh	equ	0xFFE
 22830                           tosl	equ	0xFFD
 22831                           pclath	equ	0xFFA
 22832                           tblptru	equ	0xFF8
 22833                           tblptrh	equ	0xFF7
 22834                           tblptrl	equ	0xFF6
 22835                           tablat	equ	0xFF5
 22836                           prodh	equ	0xFF4
 22837                           prodl	equ	0xFF3
 22838                           intcon	equ	0xFF2
 22839                           intcon2	equ	0xFF1
 22840                           intcon3	equ	0xFF0
 22841                           indf0	equ	0xFEF
 22842                           postinc0	equ	0xFEE
 22843                           plusw0	equ	0xFEB
 22844                           fsr0h	equ	0xFEA
 22845                           fsr0l	equ	0xFE9
 22846                           wreg	equ	0xFE8
 22847                           indf1	equ	0xFE7
 22848                           postinc1	equ	0xFE6
 22849                           postdec1	equ	0xFE5
 22850                           plusw1	equ	0xFE3
 22851                           fsr1h	equ	0xFE2
 22852                           fsr1l	equ	0xFE1
 22853                           indf2	equ	0xFDF
 22854                           postinc2	equ	0xFDE
 22855                           postdec2	equ	0xFDD
 22856                           plusw2	equ	0xFDB
 22857                           fsr2h	equ	0xFDA
 22858                           fsr2l	equ	0xFD9
 22859                           status	equ	0xFD8
 22860                           
 22861 ;; *************** function _Uart_ClearRxBuffer *****************
 22862 ;; Defined at:
 22863 ;;		line 565 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 22864 ;; Parameters:    Size  Location     Type
 22865 ;;		None
 22866 ;; Auto vars:     Size  Location     Type
 22867 ;;  Index           2   29[BANK0 ] unsigned short 
 22868 ;; Return value:  Size  Location     Type
 22869 ;;                  1    wreg      void 
 22870 ;; Registers used:
 22871 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 22872 ;; Tracked objects:
 22873 ;;		On entry : 0/0
 22874 ;;		On exit  : 0/0
 22875 ;;		Unchanged: 0/0
 22876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22877 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22878 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22880 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22881 ;;Total ram usage:        2 bytes
 22882 ;; Hardware stack levels used:    1
 22883 ;; Hardware stack levels required when called:   11
 22884 ;; This function calls:
 22885 ;;		Nothing
 22886 ;; This function is called by:
 22887 ;;		_ModemEvtParser
 22888 ;; This function uses a non-reentrant model
 22889 ;;
 22890                           
 22891                           	psect	text107
 22892  005952                     __ptext107:
 22893                           	opt stack 0
 22894  005952                     _Uart_ClearRxBuffer:
 22895                           	opt stack 15
 22896                           
 22897                           ;uart_drv.c: 567: UINT16 Index = 0;
 22898                           
 22899                           ;incstack = 0
 22900  005952  0E00               	movlw	0
 22901  005954  0100               	movlb	0	; () banked
 22902  005956  6F7E               	movwf	(Uart_ClearRxBuffer@Index+1)& (0+255),b
 22903  005958  0E00               	movlw	0
 22904  00595A  6F7D               	movwf	Uart_ClearRxBuffer@Index& (0+255),b
 22905                           
 22906                           ;uart_drv.c: 570: for (Index = 0; Index <= (((UINT16)(400)) - 1); Index++)
 22907  00595C  0E00               	movlw	0
 22908  00595E  6F7E               	movwf	(Uart_ClearRxBuffer@Index+1)& (0+255),b
 22909  005960  0E00               	movlw	0
 22910  005962  6F7D               	movwf	Uart_ClearRxBuffer@Index& (0+255),b
 22911  005964                     l9135:
 22912                           
 22913                           ; BSR set to: 0
 22914  005964  0E90               	movlw	144
 22915  005966  5D7D               	subwf	Uart_ClearRxBuffer@Index& (0+255),w,b
 22916  005968  0E01               	movlw	1
 22917  00596A  597E               	subwfb	(Uart_ClearRxBuffer@Index+1)& (0+255),w,b
 22918  00596C  B0D8               	btfsc	status,0,c
 22919  00596E  0012               	return	
 22920                           
 22921                           ; BSR set to: 0
 22922                           ;uart_drv.c: 571: {
 22923                           ;uart_drv.c: 572: RxBuffer[Index] = 0;
 22924                           
 22925                           ; BSR set to: 0
 22926                           
 22927                           ; BSR set to: 0
 22928  005970  0E58               	movlw	low _RxBuffer
 22929  005972  257D               	addwf	Uart_ClearRxBuffer@Index& (0+255),w,b
 22930  005974  6ED9               	movwf	fsr2l,c
 22931  005976  0E0C               	movlw	high _RxBuffer
 22932  005978  217E               	addwfc	(Uart_ClearRxBuffer@Index+1)& (0+255),w,b
 22933  00597A  6EDA               	movwf	fsr2h,c
 22934  00597C  0E00               	movlw	0
 22935  00597E  6EDF               	movwf	indf2,c
 22936                           
 22937                           ; BSR set to: 0
 22938  005980  4B7D               	infsnz	Uart_ClearRxBuffer@Index& (0+255),f,b
 22939  005982  2B7E               	incf	(Uart_ClearRxBuffer@Index+1)& (0+255),f,b
 22940  005984  D7EF               	goto	l9135
 22941  005986                     __end_of_Uart_ClearRxBuffer:
 22942                           	opt stack 0
 22943                           tosu	equ	0xFFF
 22944                           tosh	equ	0xFFE
 22945                           tosl	equ	0xFFD
 22946                           pclath	equ	0xFFA
 22947                           tblptru	equ	0xFF8
 22948                           tblptrh	equ	0xFF7
 22949                           tblptrl	equ	0xFF6
 22950                           tablat	equ	0xFF5
 22951                           prodh	equ	0xFF4
 22952                           prodl	equ	0xFF3
 22953                           intcon	equ	0xFF2
 22954                           intcon2	equ	0xFF1
 22955                           intcon3	equ	0xFF0
 22956                           indf0	equ	0xFEF
 22957                           postinc0	equ	0xFEE
 22958                           plusw0	equ	0xFEB
 22959                           fsr0h	equ	0xFEA
 22960                           fsr0l	equ	0xFE9
 22961                           wreg	equ	0xFE8
 22962                           indf1	equ	0xFE7
 22963                           postinc1	equ	0xFE6
 22964                           postdec1	equ	0xFE5
 22965                           plusw1	equ	0xFE3
 22966                           fsr1h	equ	0xFE2
 22967                           fsr1l	equ	0xFE1
 22968                           indf2	equ	0xFDF
 22969                           postinc2	equ	0xFDE
 22970                           postdec2	equ	0xFDD
 22971                           plusw2	equ	0xFDB
 22972                           fsr2h	equ	0xFDA
 22973                           fsr2l	equ	0xFD9
 22974                           status	equ	0xFD8
 22975                           
 22976 ;; *************** function _StringCompare *****************
 22977 ;; Defined at:
 22978 ;;		line 75 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/sf.c"
 22979 ;; Parameters:    Size  Location     Type
 22980 ;;  String1         2   29[BANK0 ] PTR unsigned char 
 22981 ;;		 -> ModemEvtParser@CallReadyString(10), ModemEvtParser@SmsString(5), ModemEvtParser@RingString(4), 
 22982 ;;  String2         2   31[BANK0 ] PTR unsigned char 
 22983 ;;		 -> RxBuffer(400), 
 22984 ;;  Len             2   33[BANK0 ] unsigned short 
 22985 ;; Auto vars:     Size  Location     Type
 22986 ;;  Index           2   38[BANK0 ] unsigned short 
 22987 ;;  Result          1   37[BANK0 ] unsigned char 
 22988 ;; Return value:  Size  Location     Type
 22989 ;;                  1    wreg      unsigned char 
 22990 ;; Registers used:
 22991 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 22992 ;; Tracked objects:
 22993 ;;		On entry : 0/0
 22994 ;;		On exit  : 0/0
 22995 ;;		Unchanged: 0/0
 22996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22997 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22998 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22999 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23000 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23001 ;;Total ram usage:       11 bytes
 23002 ;; Hardware stack levels used:    1
 23003 ;; Hardware stack levels required when called:   11
 23004 ;; This function calls:
 23005 ;;		Nothing
 23006 ;; This function is called by:
 23007 ;;		_ModemEvtParser
 23008 ;; This function uses a non-reentrant model
 23009 ;;
 23010                           
 23011                           	psect	text108
 23012  00522A                     __ptext108:
 23013                           	opt stack 0
 23014  00522A                     _StringCompare:
 23015                           	opt stack 15
 23016                           
 23017                           ;sf.c: 77: UINT16 Index = 0;
 23018                           
 23019                           ; BSR set to: 0
 23020                           ;incstack = 0
 23021  00522A  0E00               	movlw	0
 23022  00522C  0100               	movlb	0	; () banked
 23023  00522E  6F87               	movwf	(StringCompare@Index+1)& (0+255),b
 23024  005230  0E00               	movlw	0
 23025  005232  6F86               	movwf	StringCompare@Index& (0+255),b
 23026                           
 23027                           ;sf.c: 78: UINT8 Result = 1;
 23028  005234  0E01               	movlw	1
 23029  005236  6F85               	movwf	StringCompare@Result& (0+255),b
 23030                           
 23031                           ;sf.c: 81: for (Index = 0; Index < Len; Index++)
 23032  005238  0E00               	movlw	0
 23033  00523A  6F87               	movwf	(StringCompare@Index+1)& (0+255),b
 23034  00523C  0E00               	movlw	0
 23035  00523E  6F86               	movwf	StringCompare@Index& (0+255),b
 23036  005240  D015               	goto	l2197
 23037  005242                     
 23038                           ; BSR set to: 0
 23039                           ;sf.c: 82: {
 23040                           ;sf.c: 83: if (String1[Index] != String2[Index])
 23041                           
 23042                           ; BSR set to: 0
 23043  005242  5186               	movf	StringCompare@Index& (0+255),w,b
 23044  005244  257F               	addwf	StringCompare@String2& (0+255),w,b
 23045  005246  6ED9               	movwf	fsr2l,c
 23046  005248  5187               	movf	(StringCompare@Index+1)& (0+255),w,b
 23047  00524A  2180               	addwfc	(StringCompare@String2+1)& (0+255),w,b
 23048  00524C  6EDA               	movwf	fsr2h,c
 23049  00524E  5186               	movf	StringCompare@Index& (0+255),w,b
 23050  005250  257D               	addwf	StringCompare@String1& (0+255),w,b
 23051  005252  6EE1               	movwf	fsr1l,c
 23052  005254  5187               	movf	(StringCompare@Index+1)& (0+255),w,b
 23053  005256  217E               	addwfc	(StringCompare@String1+1)& (0+255),w,b
 23054  005258  6EE2               	movwf	fsr1h,c
 23055  00525A  50DE               	movf	postinc2,w,c
 23056  00525C  18E6               	xorwf	postinc1,w,c
 23057  00525E  B4D8               	btfsc	status,2,c
 23058  005260  D003               	goto	l2199
 23059                           
 23060                           ; BSR set to: 0
 23061                           ;sf.c: 84: {
 23062                           ;sf.c: 85: Result = 0;
 23063  005262  0E00               	movlw	0
 23064  005264  6F85               	movwf	StringCompare@Result& (0+255),b
 23065                           
 23066                           ;sf.c: 86: break;
 23067  005266  D008               	goto	u7190
 23068  005268                     l2199:
 23069                           
 23070                           ; BSR set to: 0
 23071                           
 23072                           ; BSR set to: 0
 23073  005268  4B86               	infsnz	StringCompare@Index& (0+255),f,b
 23074  00526A  2B87               	incf	(StringCompare@Index+1)& (0+255),f,b
 23075  00526C                     l2197:
 23076                           
 23077                           ; BSR set to: 0
 23078                           
 23079                           ; BSR set to: 0
 23080  00526C  5181               	movf	StringCompare@Len& (0+255),w,b
 23081  00526E  5D86               	subwf	StringCompare@Index& (0+255),w,b
 23082  005270  5182               	movf	(StringCompare@Len+1)& (0+255),w,b
 23083  005272  5987               	subwfb	(StringCompare@Index+1)& (0+255),w,b
 23084  005274  A0D8               	btfss	status,0,c
 23085  005276  D7E5               	goto	l2198
 23086  005278                     u7190:
 23087                           
 23088                           ; BSR set to: 0
 23089                           ;sf.c: 87: }
 23090                           ;sf.c: 88: }
 23091                           ;sf.c: 91: return Result;
 23092                           
 23093                           ; BSR set to: 0
 23094  005278  5185               	movf	StringCompare@Result& (0+255),w,b
 23095  00527A  0012               	return	
 23096  00527C                     __end_of_StringCompare:
 23097                           	opt stack 0
 23098                           tosu	equ	0xFFF
 23099                           tosh	equ	0xFFE
 23100                           tosl	equ	0xFFD
 23101                           pclath	equ	0xFFA
 23102                           tblptru	equ	0xFF8
 23103                           tblptrh	equ	0xFF7
 23104                           tblptrl	equ	0xFF6
 23105                           tablat	equ	0xFF5
 23106                           prodh	equ	0xFF4
 23107                           prodl	equ	0xFF3
 23108                           intcon	equ	0xFF2
 23109                           intcon2	equ	0xFF1
 23110                           intcon3	equ	0xFF0
 23111                           indf0	equ	0xFEF
 23112                           postinc0	equ	0xFEE
 23113                           plusw0	equ	0xFEB
 23114                           fsr0h	equ	0xFEA
 23115                           fsr0l	equ	0xFE9
 23116                           wreg	equ	0xFE8
 23117                           indf1	equ	0xFE7
 23118                           postinc1	equ	0xFE6
 23119                           postdec1	equ	0xFE5
 23120                           plusw1	equ	0xFE3
 23121                           fsr1h	equ	0xFE2
 23122                           fsr1l	equ	0xFE1
 23123                           indf2	equ	0xFDF
 23124                           postinc2	equ	0xFDE
 23125                           postdec2	equ	0xFDD
 23126                           plusw2	equ	0xFDB
 23127                           fsr2h	equ	0xFDA
 23128                           fsr2l	equ	0xFD9
 23129                           status	equ	0xFD8
 23130                           
 23131 ;; *************** function _GetSmsSm *****************
 23132 ;; Defined at:
 23133 ;;		line 566 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 23134 ;; Parameters:    Size  Location     Type
 23135 ;;		None
 23136 ;; Auto vars:     Size  Location     Type
 23137 ;;		None
 23138 ;; Return value:  Size  Location     Type
 23139 ;;                  1    wreg      void 
 23140 ;; Registers used:
 23141 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 23142 ;; Tracked objects:
 23143 ;;		On entry : 0/0
 23144 ;;		On exit  : 0/0
 23145 ;;		Unchanged: 0/0
 23146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23147 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23148 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23150 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23151 ;;Total ram usage:        0 bytes
 23152 ;; Hardware stack levels used:    1
 23153 ;; Hardware stack levels required when called:   13
 23154 ;; This function calls:
 23155 ;;		_GenerateEvt
 23156 ;;		_ReceiveEvt
 23157 ;;		_StringCopy
 23158 ;;		_Uart_WriteConstString
 23159 ;; This function is called by:
 23160 ;;		_Mdm_MainTask
 23161 ;; This function uses a non-reentrant model
 23162 ;;
 23163                           
 23164                           	psect	text109
 23165  002F7C                     __ptext109:
 23166                           	opt stack 0
 23167  002F7C                     _GetSmsSm:
 23168                           	opt stack 14
 23169                           
 23170                           ;mdm_gsm_gprs.c: 568: static GetSmsStateType GetSmsState = GetSms_CheckReq;
 23171                           ;mdm_gsm_gprs.c: 571: if (MdmStatus == ModemConfigured)
 23172                           
 23173                           ; BSR set to: 0
 23174                           ;incstack = 0
 23175  002F7C  0E03               	movlw	3
 23176  002F7E  0100               	movlb	0	; () banked
 23177  002F80  19CF               	xorwf	_MdmStatus& (0+255),w,b
 23178  002F82  A4D8               	btfss	status,2,c
 23179  002F84  0012               	return	
 23180  002F86  D060               	goto	l1060
 23181  002F88                     
 23182                           ;mdm_gsm_gprs.c: 577: if (ReceiveEvt(&GetSmsText))
 23183                           
 23184                           ; BSR set to: 0
 23185  002F88  0EDA               	movlw	low _GetSmsText
 23186  002F8A  0100               	movlb	0	; () banked
 23187  002F8C  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 23188  002F8E  0E00               	movlw	high _GetSmsText
 23189  002F90  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 23190  002F92  EC6C  F02D         	call	_ReceiveEvt	;wreg free
 23191  002F96  0900               	iorlw	0
 23192  002F98  B4D8               	btfsc	status,2,c
 23193  002F9A  0012               	return	
 23194                           
 23195                           ;mdm_gsm_gprs.c: 578: {
 23196                           ;mdm_gsm_gprs.c: 580: GetSmsState = GetSms_SendAtCmd;
 23197  002F9C  0E01               	movlw	1
 23198  002F9E  6E26               	movwf	GetSmsSm@GetSmsState,c
 23199                           
 23200                           ;mdm_gsm_gprs.c: 581: }
 23201                           ;mdm_gsm_gprs.c: 582: break;
 23202  002FA0  0012               	return	
 23203  002FA2                     
 23204                           ;mdm_gsm_gprs.c: 586: Uart_WriteConstString(1,"AT+CMGR=1\r");
 23205  002FA2  0EC2               	movlw	low STR_4
 23206  002FA4  0100               	movlb	0	; () banked
 23207  002FA6  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 23208  002FA8  0EFF               	movlw	high STR_4
 23209  002FAA  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 23210  002FAC  0E01               	movlw	1
 23211  002FAE  EC1C  F02B         	call	_Uart_WriteConstString
 23212                           
 23213                           ;mdm_gsm_gprs.c: 588: GetSmsState = GetSms_StoreHeader;
 23214  002FB2  0E02               	movlw	2
 23215  002FB4  6E26               	movwf	GetSmsSm@GetSmsState,c
 23216                           
 23217                           ;mdm_gsm_gprs.c: 589: break;
 23218  002FB6  0012               	return	
 23219  002FB8                     
 23220                           ;mdm_gsm_gprs.c: 593: if (ReceiveEvt(&NewStringReceived))
 23221  002FB8  0E3C               	movlw	low _NewStringReceived
 23222  002FBA  0100               	movlb	0	; () banked
 23223  002FBC  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 23224  002FBE  0E00               	movlw	high _NewStringReceived
 23225  002FC0  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 23226  002FC2  EC6C  F02D         	call	_ReceiveEvt	;wreg free
 23227  002FC6  0900               	iorlw	0
 23228  002FC8  B4D8               	btfsc	status,2,c
 23229  002FCA  0012               	return	
 23230                           
 23231                           ;mdm_gsm_gprs.c: 594: {
 23232                           ;mdm_gsm_gprs.c: 595: if (RxBuffer[0] != 0)
 23233  002FCC  EE2C  F058         	lfsr	2,_RxBuffer
 23234  002FD0  50DF               	movf	indf2,w,c
 23235  002FD2  B4D8               	btfsc	status,2,c
 23236  002FD4  0012               	return	
 23237                           
 23238                           ;mdm_gsm_gprs.c: 596: {
 23239                           ;mdm_gsm_gprs.c: 598: StringCopy(RxBuffer,Mdm_SmsRx.HeaderBuffer,RxLen);
 23240  002FD6  0E58               	movlw	low _RxBuffer
 23241  002FD8  0100               	movlb	0	; () banked
 23242  002FDA  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 23243  002FDC  0E0C               	movlw	high _RxBuffer
 23244  002FDE  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 23245  002FE0  0E00               	movlw	low _Mdm_SmsRx
 23246  002FE2  6F7F               	movwf	StringCopy@DestStr& (0+255),b
 23247  002FE4  0E07               	movlw	high _Mdm_SmsRx
 23248  002FE6  6F80               	movwf	(StringCopy@DestStr+1)& (0+255),b
 23249  002FE8  C0BE  F081         	movff	_RxLen,StringCopy@Len
 23250  002FEC  C0BF  F082         	movff	_RxLen+1,StringCopy@Len+1
 23251  002FF0  EC00  F027         	call	_StringCopy	;wreg free
 23252                           
 23253                           ;mdm_gsm_gprs.c: 600: Mdm_SmsRx.HeadLen = RxLen;
 23254  002FF4  C0BE  F782         	movff	_RxLen,_Mdm_SmsRx+130
 23255                           
 23256                           ;mdm_gsm_gprs.c: 602: GetSmsState = GetSms_StoreText;
 23257  002FF8  0E03               	movlw	3
 23258  002FFA  6E26               	movwf	GetSmsSm@GetSmsState,c
 23259                           
 23260                           ;mdm_gsm_gprs.c: 603: }
 23261                           ;mdm_gsm_gprs.c: 604: }
 23262                           ;mdm_gsm_gprs.c: 605: break;
 23263  002FFC  0012               	return	
 23264  002FFE                     
 23265                           ;mdm_gsm_gprs.c: 609: if (ReceiveEvt(&NewStringReceived))
 23266  002FFE  0E3C               	movlw	low _NewStringReceived
 23267  003000  0100               	movlb	0	; () banked
 23268  003002  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 23269  003004  0E00               	movlw	high _NewStringReceived
 23270  003006  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 23271  003008  EC6C  F02D         	call	_ReceiveEvt	;wreg free
 23272  00300C  0900               	iorlw	0
 23273  00300E  B4D8               	btfsc	status,2,c
 23274  003010  0012               	return	
 23275                           
 23276                           ;mdm_gsm_gprs.c: 610: {
 23277                           ;mdm_gsm_gprs.c: 612: StringCopy(RxBuffer,Mdm_SmsRx.MessageBuffer,RxLen);
 23278  003012  0E58               	movlw	low _RxBuffer
 23279  003014  0100               	movlb	0	; () banked
 23280  003016  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 23281  003018  0E0C               	movlw	high _RxBuffer
 23282  00301A  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 23283  00301C  0E50               	movlw	low (_Mdm_SmsRx+80)
 23284  00301E  6F7F               	movwf	StringCopy@DestStr& (0+255),b
 23285  003020  0E07               	movlw	high (_Mdm_SmsRx+80)
 23286  003022  6F80               	movwf	(StringCopy@DestStr+1)& (0+255),b
 23287  003024  C0BE  F081         	movff	_RxLen,StringCopy@Len
 23288  003028  C0BF  F082         	movff	_RxLen+1,StringCopy@Len+1
 23289  00302C  EC00  F027         	call	_StringCopy	;wreg free
 23290                           
 23291                           ;mdm_gsm_gprs.c: 614: Mdm_SmsRx.TextLen = RxLen;
 23292  003030  C0BE  F783         	movff	_RxLen,_Mdm_SmsRx+131
 23293                           
 23294                           ;mdm_gsm_gprs.c: 616: GetSmsState = GetSms_CheckReq;
 23295  003034  0E00               	movlw	0
 23296  003036  6E26               	movwf	GetSmsSm@GetSmsState,c
 23297                           
 23298                           ;mdm_gsm_gprs.c: 618: GenerateEvt(&SmsTxtReady);
 23299  003038  0ED9               	movlw	low _SmsTxtReady
 23300  00303A  0100               	movlb	0	; () banked
 23301  00303C  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 23302  00303E  0E00               	movlw	high _SmsTxtReady
 23303  003040  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 23304  003042  EC24  F02F         	call	_GenerateEvt	;wreg free
 23305                           
 23306                           ;mdm_gsm_gprs.c: 624: }
 23307                           
 23308                           ;mdm_gsm_gprs.c: 623: break;
 23309                           
 23310                           ;mdm_gsm_gprs.c: 622: default:
 23311                           
 23312                           ;mdm_gsm_gprs.c: 619: }
 23313                           ;mdm_gsm_gprs.c: 620: break;
 23314  003046  0012               	return	
 23315  003048                     l1060:
 23316  003048  5026               	movf	GetSmsSm@GetSmsState,w,c
 23317                           
 23318                           ; Switch size 1, requested type "space"
 23319                           ; Number of cases is 4, Range of values is 0 to 3
 23320                           ; switch strategies available:
 23321                           ; Name         Instructions Cycles
 23322                           ; simple_byte           13     7 (average)
 23323                           ;	Chosen strategy is simple_byte
 23324  00304A  0A00               	xorlw	0	; case 0
 23325  00304C  B4D8               	btfsc	status,2,c
 23326  00304E  D79C               	goto	l1061
 23327  003050  0A01               	xorlw	1	; case 1
 23328  003052  B4D8               	btfsc	status,2,c
 23329  003054  D7A6               	goto	l1064
 23330  003056  0A03               	xorlw	3	; case 2
 23331  003058  B4D8               	btfsc	status,2,c
 23332  00305A  D7AE               	goto	l1065
 23333  00305C  0A01               	xorlw	1	; case 3
 23334  00305E  A4D8               	btfss	status,2,c
 23335  003060  0012               	return	
 23336  003062  D7CD               	goto	l1068
 23337  003064                     __end_of_GetSmsSm:
 23338                           	opt stack 0
 23339                           tosu	equ	0xFFF
 23340                           tosh	equ	0xFFE
 23341                           tosl	equ	0xFFD
 23342                           pclath	equ	0xFFA
 23343                           tblptru	equ	0xFF8
 23344                           tblptrh	equ	0xFF7
 23345                           tblptrl	equ	0xFF6
 23346                           tablat	equ	0xFF5
 23347                           prodh	equ	0xFF4
 23348                           prodl	equ	0xFF3
 23349                           intcon	equ	0xFF2
 23350                           intcon2	equ	0xFF1
 23351                           intcon3	equ	0xFF0
 23352                           indf0	equ	0xFEF
 23353                           postinc0	equ	0xFEE
 23354                           plusw0	equ	0xFEB
 23355                           fsr0h	equ	0xFEA
 23356                           fsr0l	equ	0xFE9
 23357                           wreg	equ	0xFE8
 23358                           indf1	equ	0xFE7
 23359                           postinc1	equ	0xFE6
 23360                           postdec1	equ	0xFE5
 23361                           plusw1	equ	0xFE3
 23362                           fsr1h	equ	0xFE2
 23363                           fsr1l	equ	0xFE1
 23364                           indf2	equ	0xFDF
 23365                           postinc2	equ	0xFDE
 23366                           postdec2	equ	0xFDD
 23367                           plusw2	equ	0xFDB
 23368                           fsr2h	equ	0xFDA
 23369                           fsr2l	equ	0xFD9
 23370                           status	equ	0xFD8
 23371                           
 23372 ;; *************** function _ConfigureModem *****************
 23373 ;; Defined at:
 23374 ;;		line 414 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 23375 ;; Parameters:    Size  Location     Type
 23376 ;;		None
 23377 ;; Auto vars:     Size  Location     Type
 23378 ;;		None
 23379 ;; Return value:  Size  Location     Type
 23380 ;;                  1    wreg      void 
 23381 ;; Registers used:
 23382 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 23383 ;; Tracked objects:
 23384 ;;		On entry : 0/0
 23385 ;;		On exit  : 0/0
 23386 ;;		Unchanged: 0/0
 23387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23388 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23389 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23390 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23391 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23392 ;;Total ram usage:        0 bytes
 23393 ;; Hardware stack levels used:    1
 23394 ;; Hardware stack levels required when called:   14
 23395 ;; This function calls:
 23396 ;;		_GenerateEvt
 23397 ;;		_UartSetConfigLow
 23398 ;;		_Uart_InitUartModule
 23399 ;;		_Uart_WriteConstString
 23400 ;; This function is called by:
 23401 ;;		_Mdm_MainTask
 23402 ;; This function uses a non-reentrant model
 23403 ;;
 23404                           
 23405                           	psect	text110
 23406  003812                     __ptext110:
 23407                           	opt stack 0
 23408  003812                     _ConfigureModem:
 23409                           	opt stack 13
 23410                           
 23411                           ;mdm_gsm_gprs.c: 416: static MdmConfigStateType MdmConfigState = MdmCfg_Init;
 23412                           ;mdm_gsm_gprs.c: 417: static MdmConfigStateType NextState = MdmCfg_Init;
 23413                           ;mdm_gsm_gprs.c: 418: static UINT16 DelayValueMs = 0;
 23414                           ;mdm_gsm_gprs.c: 419: static UINT16 DelayCounter = 0;
 23415                           ;mdm_gsm_gprs.c: 421: switch (MdmConfigState)
 23416                           
 23417                           ;incstack = 0
 23418  003812  D052               	goto	l1021
 23419  003814                     
 23420                           ;mdm_gsm_gprs.c: 425: if (MdmStatus == ModemReady)
 23421  003814  0E02               	movlw	2
 23422  003816  0100               	movlb	0	; () banked
 23423  003818  19CF               	xorwf	_MdmStatus& (0+255),w,b
 23424  00381A  A4D8               	btfss	status,2,c
 23425  00381C  0012               	return	
 23426                           
 23427                           ; BSR set to: 0
 23428                           ;mdm_gsm_gprs.c: 426: {
 23429                           ;mdm_gsm_gprs.c: 428: MdmConfigState = MdmCfg_ChangeBaud;
 23430  00381E  0E01               	movlw	1
 23431  003820  6E28               	movwf	ConfigureModem@MdmConfigState,c
 23432                           
 23433                           ; BSR set to: 0
 23434                           ;mdm_gsm_gprs.c: 429: }
 23435                           ;mdm_gsm_gprs.c: 430: break;
 23436  003822  0012               	return	
 23437  003824                     
 23438                           ;mdm_gsm_gprs.c: 434: Uart_WriteConstString(1,"AT+IPR=9600\r\n");
 23439                           
 23440                           ; BSR set to: 0
 23441  003824  0E81               	movlw	low STR_2
 23442  003826  0100               	movlb	0	; () banked
 23443  003828  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 23444  00382A  0EFF               	movlw	high STR_2
 23445  00382C  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 23446  00382E  0E01               	movlw	1
 23447  003830  EC1C  F02B         	call	_Uart_WriteConstString
 23448                           
 23449                           ;mdm_gsm_gprs.c: 436: UartSetConfigLow();
 23450  003834  EC15  F028         	call	_UartSetConfigLow	;wreg free
 23451                           
 23452                           ;mdm_gsm_gprs.c: 438: Uart_InitUartModule(1,&UartConfig);
 23453  003838  0E28               	movlw	low _UartConfig
 23454  00383A  0100               	movlb	0	; () banked
 23455  00383C  6F9D               	movwf	Uart_InitUartModule@UartConfig& (0+255),b
 23456  00383E  0E03               	movlw	high _UartConfig
 23457  003840  6F9E               	movwf	(Uart_InitUartModule@UartConfig+1)& (0+255),b
 23458  003842  0E01               	movlw	1
 23459  003844  EC5E  F005         	call	_Uart_InitUartModule
 23460                           
 23461                           ;mdm_gsm_gprs.c: 440: DelayValueMs = (((UINT16)(1000))/((UINT16)(1)));
 23462  003848  0E03               	movlw	3
 23463  00384A  0102               	movlb	2	; () banked
 23464  00384C  6FD9               	movwf	(ConfigureModem@DelayValueMs+1)& (0+255),b
 23465  00384E  0EE8               	movlw	232
 23466  003850  6FD8               	movwf	ConfigureModem@DelayValueMs& (0+255),b
 23467                           
 23468                           ; BSR set to: 2
 23469                           ;mdm_gsm_gprs.c: 442: NextState = MdmCfg_SetMdmEchoMode;
 23470  003852  0E02               	movlw	2
 23471  003854  6E27               	movwf	ConfigureModem@NextState,c
 23472                           
 23473                           ; BSR set to: 2
 23474                           ;mdm_gsm_gprs.c: 443: MdmConfigState = MdmCfg_Delay;
 23475  003856  0E04               	movlw	4
 23476  003858  6E28               	movwf	ConfigureModem@MdmConfigState,c
 23477                           
 23478                           ;mdm_gsm_gprs.c: 444: break;
 23479  00385A  0012               	return	
 23480  00385C                     
 23481                           ;mdm_gsm_gprs.c: 448: Uart_WriteConstString(1,"ATE0\r\n");
 23482                           
 23483                           ; BSR set to: 2
 23484  00385C  0EDE               	movlw	low STR_3
 23485  00385E  0100               	movlb	0	; () banked
 23486  003860  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 23487  003862  0EFF               	movlw	high STR_3
 23488  003864  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 23489  003866  0E01               	movlw	1
 23490  003868  EC1C  F02B         	call	_Uart_WriteConstString
 23491                           
 23492                           ;mdm_gsm_gprs.c: 450: DelayValueMs = (((UINT16)(1000))/((UINT16)(1)));
 23493  00386C  0E03               	movlw	3
 23494  00386E  0102               	movlb	2	; () banked
 23495  003870  6FD9               	movwf	(ConfigureModem@DelayValueMs+1)& (0+255),b
 23496  003872  0EE8               	movlw	232
 23497  003874  6FD8               	movwf	ConfigureModem@DelayValueMs& (0+255),b
 23498                           
 23499                           ; BSR set to: 2
 23500                           ;mdm_gsm_gprs.c: 452: NextState = MdmCfg_UpdateMdmSts;
 23501  003876  0E05               	movlw	5
 23502  003878  6E27               	movwf	ConfigureModem@NextState,c
 23503                           
 23504                           ; BSR set to: 2
 23505                           ;mdm_gsm_gprs.c: 453: MdmConfigState = MdmCfg_Delay;
 23506  00387A  0E04               	movlw	4
 23507  00387C  6E28               	movwf	ConfigureModem@MdmConfigState,c
 23508                           
 23509                           ;mdm_gsm_gprs.c: 454: break;
 23510  00387E  0012               	return	
 23511  003880                     
 23512                           ;mdm_gsm_gprs.c: 458: DelayCounter++;
 23513                           
 23514                           ; BSR set to: 2
 23515  003880  0102               	movlb	2	; () banked
 23516  003882  4BD6               	infsnz	ConfigureModem@DelayCounter& (0+255),f,b
 23517  003884  2BD7               	incf	(ConfigureModem@DelayCounter+1)& (0+255),f,b
 23518                           
 23519                           ; BSR set to: 2
 23520                           ;mdm_gsm_gprs.c: 460: if (DelayCounter >= DelayValueMs)
 23521  003886  51D8               	movf	ConfigureModem@DelayValueMs& (0+255),w,b
 23522  003888  5DD6               	subwf	ConfigureModem@DelayCounter& (0+255),w,b
 23523  00388A  51D9               	movf	(ConfigureModem@DelayValueMs+1)& (0+255),w,b
 23524  00388C  59D7               	subwfb	(ConfigureModem@DelayCounter+1)& (0+255),w,b
 23525  00388E  A0D8               	btfss	status,0,c
 23526  003890  0012               	return	
 23527                           
 23528                           ; BSR set to: 2
 23529                           ;mdm_gsm_gprs.c: 461: {
 23530                           ;mdm_gsm_gprs.c: 463: DelayCounter = 0;
 23531  003892  0E00               	movlw	0
 23532  003894  6FD7               	movwf	(ConfigureModem@DelayCounter+1)& (0+255),b
 23533  003896  0E00               	movlw	0
 23534  003898  6FD6               	movwf	ConfigureModem@DelayCounter& (0+255),b
 23535                           
 23536                           ; BSR set to: 2
 23537                           ;mdm_gsm_gprs.c: 465: MdmConfigState = NextState;
 23538  00389A  C027  F028         	movff	ConfigureModem@NextState,ConfigureModem@MdmConfigState
 23539                           
 23540                           ; BSR set to: 2
 23541                           ;mdm_gsm_gprs.c: 466: }
 23542                           ;mdm_gsm_gprs.c: 467: break;
 23543  00389E  0012               	return	
 23544  0038A0                     
 23545                           ;mdm_gsm_gprs.c: 471: MdmStatus = ModemConfigured;
 23546                           
 23547                           ; BSR set to: 2
 23548  0038A0  0E03               	movlw	3
 23549  0038A2  0100               	movlb	0	; () banked
 23550  0038A4  6FCF               	movwf	_MdmStatus& (0+255),b
 23551                           
 23552                           ; BSR set to: 0
 23553                           ;mdm_gsm_gprs.c: 473: GenerateEvt(&MdmStsReady);
 23554  0038A6  0E39               	movlw	low _MdmStsReady
 23555  0038A8  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 23556  0038AA  0E00               	movlw	high _MdmStsReady
 23557  0038AC  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 23558  0038AE  EC24  F02F         	call	_GenerateEvt	;wreg free
 23559                           
 23560                           ;mdm_gsm_gprs.c: 475: MdmConfigState = MdmCfg_Stop;
 23561  0038B2  0E06               	movlw	6
 23562  0038B4  6E28               	movwf	ConfigureModem@MdmConfigState,c
 23563                           
 23564                           ;mdm_gsm_gprs.c: 483: }
 23565                           
 23566                           ;mdm_gsm_gprs.c: 482: break;
 23567                           
 23568                           ;mdm_gsm_gprs.c: 481: default:
 23569                           
 23570                           ;mdm_gsm_gprs.c: 479: break;
 23571                           
 23572                           ;mdm_gsm_gprs.c: 478: case MdmCfg_Stop:
 23573                           
 23574                           ;mdm_gsm_gprs.c: 476: break;
 23575  0038B6  0012               	return	
 23576  0038B8                     l1021:
 23577  0038B8  5028               	movf	ConfigureModem@MdmConfigState,w,c
 23578                           
 23579                           ; Switch size 1, requested type "space"
 23580                           ; Number of cases is 6, Range of values is 0 to 6
 23581                           ; switch strategies available:
 23582                           ; Name         Instructions Cycles
 23583                           ; simple_byte           19    10 (average)
 23584                           ;	Chosen strategy is simple_byte
 23585  0038BA  0A00               	xorlw	0	; case 0
 23586  0038BC  B4D8               	btfsc	status,2,c
 23587  0038BE  D7AA               	goto	l1022
 23588  0038C0  0A01               	xorlw	1	; case 1
 23589  0038C2  B4D8               	btfsc	status,2,c
 23590  0038C4  D7AF               	goto	l1025
 23591  0038C6  0A03               	xorlw	3	; case 2
 23592  0038C8  B4D8               	btfsc	status,2,c
 23593  0038CA  D7C8               	goto	l1026
 23594  0038CC  0A06               	xorlw	6	; case 4
 23595  0038CE  B4D8               	btfsc	status,2,c
 23596  0038D0  D7D7               	goto	l1027
 23597  0038D2  0A01               	xorlw	1	; case 5
 23598  0038D4  B4D8               	btfsc	status,2,c
 23599  0038D6  D7E4               	goto	l1029
 23600  0038D8  0A03               	xorlw	3	; case 6
 23601  0038DA  0012               	return	
 23602  0038DC                     __end_of_ConfigureModem:
 23603                           	opt stack 0
 23604                           tosu	equ	0xFFF
 23605                           tosh	equ	0xFFE
 23606                           tosl	equ	0xFFD
 23607                           pclath	equ	0xFFA
 23608                           tblptru	equ	0xFF8
 23609                           tblptrh	equ	0xFF7
 23610                           tblptrl	equ	0xFF6
 23611                           tablat	equ	0xFF5
 23612                           prodh	equ	0xFF4
 23613                           prodl	equ	0xFF3
 23614                           intcon	equ	0xFF2
 23615                           intcon2	equ	0xFF1
 23616                           intcon3	equ	0xFF0
 23617                           indf0	equ	0xFEF
 23618                           postinc0	equ	0xFEE
 23619                           plusw0	equ	0xFEB
 23620                           fsr0h	equ	0xFEA
 23621                           fsr0l	equ	0xFE9
 23622                           wreg	equ	0xFE8
 23623                           indf1	equ	0xFE7
 23624                           postinc1	equ	0xFE6
 23625                           postdec1	equ	0xFE5
 23626                           plusw1	equ	0xFE3
 23627                           fsr1h	equ	0xFE2
 23628                           fsr1l	equ	0xFE1
 23629                           indf2	equ	0xFDF
 23630                           postinc2	equ	0xFDE
 23631                           postdec2	equ	0xFDD
 23632                           plusw2	equ	0xFDB
 23633                           fsr2h	equ	0xFDA
 23634                           fsr2l	equ	0xFD9
 23635                           status	equ	0xFD8
 23636                           
 23637 ;; *************** function _Uart_InitUartModule *****************
 23638 ;; Defined at:
 23639 ;;		line 288 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 23640 ;; Parameters:    Size  Location     Type
 23641 ;;  Module          1    wreg     unsigned char 
 23642 ;;  UartConfig      2   61[BANK0 ] PTR struct _UartConfig
 23643 ;;		 -> UartConfig(21), 
 23644 ;; Auto vars:     Size  Location     Type
 23645 ;;  Module          1   65[BANK0 ] unsigned char 
 23646 ;; Return value:  Size  Location     Type
 23647 ;;                  1    wreg      void 
 23648 ;; Registers used:
 23649 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23650 ;; Tracked objects:
 23651 ;;		On entry : 0/0
 23652 ;;		On exit  : 0/0
 23653 ;;		Unchanged: 0/0
 23654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23655 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23656 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23657 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23658 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23659 ;;Total ram usage:        5 bytes
 23660 ;; Hardware stack levels used:    1
 23661 ;; Hardware stack levels required when called:   13
 23662 ;; This function calls:
 23663 ;;		_SetUartBaudRate
 23664 ;; This function is called by:
 23665 ;;		_ConfigureModem
 23666 ;;		_Mdm_MainTask
 23667 ;; This function uses a non-reentrant model
 23668 ;;
 23669                           
 23670                           	psect	text111
 23671  000ABC                     __ptext111:
 23672                           	opt stack 0
 23673  000ABC                     _Uart_InitUartModule:
 23674                           	opt stack 14
 23675                           
 23676                           ;incstack = 0
 23677                           ;Uart_InitUartModule@Module stored from wreg
 23678  000ABC  0100               	movlb	0	; () banked
 23679  000ABE  6FA1               	movwf	Uart_InitUartModule@Module& (0+255),b
 23680                           
 23681                           ;uart_drv.c: 290: if (Module == ((UINT8)(1)))
 23682  000AC0  0100               	movlb	0	; () banked
 23683  000AC2  05A1               	decf	Uart_InitUartModule@Module& (0+255),w,b
 23684  000AC4  A4D8               	btfss	status,2,c
 23685  000AC6  D0BE               	goto	l668
 23686                           
 23687                           ; BSR set to: 0
 23688                           ;uart_drv.c: 291: {
 23689                           ;uart_drv.c: 293: TRISCbits.TRISC6 = ((UINT8)(0));
 23690  000AC8  9C94               	bcf	3988,6,c	;volatile
 23691                           
 23692                           ;uart_drv.c: 294: TRISCbits.TRISC7 = ((UINT8)(1));
 23693  000ACA  8E94               	bsf	3988,7,c	;volatile
 23694                           
 23695                           ; BSR set to: 0
 23696                           ;uart_drv.c: 297: SetUartBaudRate(((UINT8)(1)), UartConfig);
 23697  000ACC  C09D  F096         	movff	Uart_InitUartModule@UartConfig,SetUartBaudRate@UartConfig
 23698  000AD0  C09E  F097         	movff	Uart_InitUartModule@UartConfig+1,SetUartBaudRate@UartConfig+1
 23699  000AD4  0E01               	movlw	1
 23700  000AD6  ECE4  F013         	call	_SetUartBaudRate
 23701                           
 23702                           ;uart_drv.c: 302: TXSTA1 = 0x00;
 23703  000ADA  0E00               	movlw	0
 23704  000ADC  6EAD               	movwf	4013,c	;volatile
 23705                           
 23706                           ;uart_drv.c: 303: TXSTA1 |= (UartConfig->Tx9bitMode) << ((UINT8)(6));
 23707  000ADE  0100               	movlb	0	; () banked
 23708  000AE0  EE20 F004          	lfsr	2,4
 23709  000AE4  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 23710  000AE6  26D9               	addwf	fsr2l,f,c
 23711  000AE8  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 23712  000AEA  22DA               	addwfc	fsr2h,f,c
 23713  000AEC  50DF               	movf	indf2,w,c
 23714  000AEE  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 23715  000AF0  0E06               	movlw	6
 23716  000AF2  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 23717  000AF4                     u11315:
 23718  000AF4  90D8               	bcf	status,0,c
 23719  000AF6  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 23720  000AF8  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 23721  000AFA  D7FC               	goto	u11315
 23722  000AFC  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 23723  000AFE  12AD               	iorwf	4013,f,c	;volatile
 23724                           
 23725                           ; BSR set to: 0
 23726                           ;uart_drv.c: 304: TXSTA1 |= (UartConfig->TxEnable) << ((UINT8)(5));
 23727  000B00  EE20 F006          	lfsr	2,6
 23728  000B04  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 23729  000B06  26D9               	addwf	fsr2l,f,c
 23730  000B08  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 23731  000B0A  22DA               	addwfc	fsr2h,f,c
 23732  000B0C  50DF               	movf	indf2,w,c
 23733  000B0E  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 23734  000B10  0E05               	movlw	5
 23735  000B12  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 23736  000B14                     u11325:
 23737  000B14  90D8               	bcf	status,0,c
 23738  000B16  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 23739  000B18  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 23740  000B1A  D7FC               	goto	u11325
 23741  000B1C  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 23742  000B1E  12AD               	iorwf	4013,f,c	;volatile
 23743                           
 23744                           ; BSR set to: 0
 23745                           ;uart_drv.c: 305: TXSTA1 |= (UartConfig->UartMode) << ((UINT8)(4));
 23746  000B20  EE20 F001          	lfsr	2,1
 23747  000B24  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 23748  000B26  26D9               	addwf	fsr2l,f,c
 23749  000B28  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 23750  000B2A  22DA               	addwfc	fsr2h,f,c
 23751  000B2C  50DF               	movf	indf2,w,c
 23752  000B2E  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 23753  000B30  399F               	swapf	??_Uart_InitUartModule& (0+255),w,b
 23754  000B32  0BF0               	andlw	240
 23755  000B34  12AD               	iorwf	4013,f,c	;volatile
 23756                           
 23757                           ; BSR set to: 0
 23758                           ;uart_drv.c: 306: TXSTA1 |= (UartConfig->SendBreakEnable) << ((UINT8)(3));
 23759  000B36  EE20 F008          	lfsr	2,8
 23760  000B3A  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 23761  000B3C  26D9               	addwf	fsr2l,f,c
 23762  000B3E  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 23763  000B40  22DA               	addwfc	fsr2h,f,c
 23764  000B42  50DF               	movf	indf2,w,c
 23765  000B44  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 23766  000B46  90D8               	bcf	status,0,c
 23767  000B48  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 23768  000B4A  90D8               	bcf	status,0,c
 23769  000B4C  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 23770  000B4E  90D8               	bcf	status,0,c
 23771  000B50  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 23772  000B52  12AD               	iorwf	4013,f,c	;volatile
 23773                           
 23774                           ; BSR set to: 0
 23775                           ;uart_drv.c: 307: TXSTA1 |= (UartConfig->HighBaudMode) << ((UINT8)(2));
 23776  000B54  EE20 F003          	lfsr	2,3
 23777  000B58  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 23778  000B5A  26D9               	addwf	fsr2l,f,c
 23779  000B5C  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 23780  000B5E  22DA               	addwfc	fsr2h,f,c
 23781  000B60  50DF               	movf	indf2,w,c
 23782  000B62  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 23783  000B64  90D8               	bcf	status,0,c
 23784  000B66  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 23785  000B68  90D8               	bcf	status,0,c
 23786  000B6A  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 23787  000B6C  12AD               	iorwf	4013,f,c	;volatile
 23788                           
 23789                           ; BSR set to: 0
 23790                           ;uart_drv.c: 310: RCSTA1 = 0x00;
 23791  000B6E  0E00               	movlw	0
 23792  000B70  6EAC               	movwf	4012,c	;volatile
 23793                           
 23794                           ; BSR set to: 0
 23795                           ;uart_drv.c: 311: RCSTA1 |= (UartConfig->UartEnable) << ((UINT8)(7));
 23796  000B72  C09D  FFD9         	movff	Uart_InitUartModule@UartConfig,fsr2l
 23797  000B76  C09E  FFDA         	movff	Uart_InitUartModule@UartConfig+1,fsr2h
 23798  000B7A  50DF               	movf	indf2,w,c
 23799  000B7C  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 23800  000B7E  0E00               	movlw	0
 23801  000B80  B19F               	btfsc	??_Uart_InitUartModule& (0+255),0,b
 23802  000B82  0E80               	movlw	128
 23803  000B84  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 23804  000B86  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 23805  000B88  12AC               	iorwf	4012,f,c	;volatile
 23806                           
 23807                           ; BSR set to: 0
 23808                           ;uart_drv.c: 312: RCSTA1 |= (UartConfig->Rx9bitMode) << ((UINT8)(6));
 23809  000B8A  EE20 F005          	lfsr	2,5
 23810  000B8E  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 23811  000B90  26D9               	addwf	fsr2l,f,c
 23812  000B92  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 23813  000B94  22DA               	addwfc	fsr2h,f,c
 23814  000B96  50DF               	movf	indf2,w,c
 23815  000B98  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 23816  000B9A  0E06               	movlw	6
 23817  000B9C  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 23818  000B9E                     u11335:
 23819  000B9E  90D8               	bcf	status,0,c
 23820  000BA0  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 23821  000BA2  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 23822  000BA4  D7FC               	goto	u11335
 23823  000BA6  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 23824  000BA8  12AC               	iorwf	4012,f,c	;volatile
 23825                           
 23826                           ; BSR set to: 0
 23827                           ;uart_drv.c: 313: RCSTA1 |= (UartConfig->RxEnable) << ((UINT8)(4));
 23828  000BAA  EE20 F007          	lfsr	2,7
 23829  000BAE  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 23830  000BB0  26D9               	addwf	fsr2l,f,c
 23831  000BB2  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 23832  000BB4  22DA               	addwfc	fsr2h,f,c
 23833  000BB6  50DF               	movf	indf2,w,c
 23834  000BB8  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 23835  000BBA  399F               	swapf	??_Uart_InitUartModule& (0+255),w,b
 23836  000BBC  0BF0               	andlw	240
 23837  000BBE  12AC               	iorwf	4012,f,c	;volatile
 23838                           
 23839                           ; BSR set to: 0
 23840                           ;uart_drv.c: 316: BAUDCON1 = 0x00;
 23841  000BC0  0E00               	movlw	0
 23842  000BC2  6E7E               	movwf	3966,c	;volatile
 23843                           
 23844                           ; BSR set to: 0
 23845                           ;uart_drv.c: 317: BAUDCON1 |= (UartConfig->BaudRateMode) << ((UINT8)(3));
 23846  000BC4  EE20 F002          	lfsr	2,2
 23847  000BC8  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 23848  000BCA  26D9               	addwf	fsr2l,f,c
 23849  000BCC  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 23850  000BCE  22DA               	addwfc	fsr2h,f,c
 23851  000BD0  50DF               	movf	indf2,w,c
 23852  000BD2  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 23853  000BD4  90D8               	bcf	status,0,c
 23854  000BD6  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 23855  000BD8  90D8               	bcf	status,0,c
 23856  000BDA  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 23857  000BDC  90D8               	bcf	status,0,c
 23858  000BDE  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 23859  000BE0  127E               	iorwf	3966,f,c	;volatile
 23860                           
 23861                           ; BSR set to: 0
 23862                           ;uart_drv.c: 318: BAUDCON1 |= (UartConfig->WakeUpEnable) << ((UINT8)(1));
 23863  000BE2  EE20 F00A          	lfsr	2,10
 23864  000BE6  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 23865  000BE8  26D9               	addwf	fsr2l,f,c
 23866  000BEA  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 23867  000BEC  22DA               	addwfc	fsr2h,f,c
 23868  000BEE  50DF               	movf	indf2,w,c
 23869  000BF0  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 23870  000BF2  90D8               	bcf	status,0,c
 23871  000BF4  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 23872  000BF6  127E               	iorwf	3966,f,c	;volatile
 23873                           
 23874                           ; BSR set to: 0
 23875                           ;uart_drv.c: 319: BAUDCON1 |= (UartConfig->AutobaudEnable) << ((UINT8)(0));
 23876  000BF8  EE20 F009          	lfsr	2,9
 23877  000BFC  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 23878  000BFE  26D9               	addwf	fsr2l,f,c
 23879  000C00  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 23880  000C02  22DA               	addwfc	fsr2h,f,c
 23881  000C04  50DF               	movf	indf2,w,c
 23882  000C06  127E               	iorwf	3966,f,c	;volatile
 23883                           
 23884                           ; BSR set to: 0
 23885                           ;uart_drv.c: 322: PIE1bits.TX1IE = UartConfig->TxInterruptEnable;
 23886  000C08  EE20 F00B          	lfsr	2,11
 23887  000C0C  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 23888  000C0E  26D9               	addwf	fsr2l,f,c
 23889  000C10  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 23890  000C12  22DA               	addwfc	fsr2h,f,c
 23891  000C14  50DF               	movf	indf2,w,c
 23892  000C16  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 23893  000C18  3B9F               	swapf	??_Uart_InitUartModule& (0+255),f,b
 23894  000C1A  509D               	movf	3997,w,c	;volatile
 23895  000C1C  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 23896  000C1E  0BEF               	andlw	-17
 23897  000C20  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 23898  000C22  6E9D               	movwf	3997,c	;volatile
 23899                           
 23900                           ; BSR set to: 0
 23901                           ;uart_drv.c: 323: PIE1bits.RC1IE = UartConfig->RxInterruptEnable;
 23902  000C24  EE20 F00C          	lfsr	2,12
 23903  000C28  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 23904  000C2A  26D9               	addwf	fsr2l,f,c
 23905  000C2C  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 23906  000C2E  22DA               	addwfc	fsr2h,f,c
 23907  000C30  50DF               	movf	indf2,w,c
 23908  000C32  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 23909  000C34  3B9F               	swapf	??_Uart_InitUartModule& (0+255),f,b
 23910  000C36  479F               	rlncf	??_Uart_InitUartModule& (0+255),f,b
 23911  000C38  509D               	movf	3997,w,c	;volatile
 23912  000C3A  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 23913  000C3C  0BDF               	andlw	-33
 23914  000C3E  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 23915  000C40  6E9D               	movwf	3997,c	;volatile
 23916                           
 23917                           ;uart_drv.c: 326: }
 23918  000C42  0012               	return	
 23919  000C44                     l668:
 23920                           
 23921                           ; BSR set to: 0
 23922                           ;uart_drv.c: 327: else if (Module == ((UINT8)(2)))
 23923                           
 23924                           ; BSR set to: 0
 23925  000C44  0E02               	movlw	2
 23926  000C46  19A1               	xorwf	Uart_InitUartModule@Module& (0+255),w,b
 23927  000C48  A4D8               	btfss	status,2,c
 23928  000C4A  0012               	return	
 23929                           
 23930                           ; BSR set to: 0
 23931                           ;uart_drv.c: 328: {
 23932                           ;uart_drv.c: 330: TRISCbits.TRISC0 = ((UINT8)(0));
 23933  000C4C  9094               	bcf	3988,0,c	;volatile
 23934                           
 23935                           ;uart_drv.c: 331: TRISCbits.TRISC1 = ((UINT8)(1));
 23936  000C4E  8294               	bsf	3988,1,c	;volatile
 23937                           
 23938                           ; BSR set to: 0
 23939                           ;uart_drv.c: 334: SetUartBaudRate(((UINT8)(2)), UartConfig);
 23940  000C50  C09D  F096         	movff	Uart_InitUartModule@UartConfig,SetUartBaudRate@UartConfig
 23941  000C54  C09E  F097         	movff	Uart_InitUartModule@UartConfig+1,SetUartBaudRate@UartConfig+1
 23942  000C58  0E02               	movlw	2
 23943  000C5A  ECE4  F013         	call	_SetUartBaudRate
 23944                           
 23945                           ;uart_drv.c: 339: TXSTA2 = 0x00;
 23946  000C5E  0E00               	movlw	0
 23947  000C60  6EA8               	movwf	4008,c	;volatile
 23948                           
 23949                           ;uart_drv.c: 340: TXSTA2 |= (UartConfig->Tx9bitMode) << ((UINT8)(6));
 23950  000C62  0100               	movlb	0	; () banked
 23951  000C64  EE20 F004          	lfsr	2,4
 23952  000C68  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 23953  000C6A  26D9               	addwf	fsr2l,f,c
 23954  000C6C  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 23955  000C6E  22DA               	addwfc	fsr2h,f,c
 23956  000C70  50DF               	movf	indf2,w,c
 23957  000C72  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 23958  000C74  0E06               	movlw	6
 23959  000C76  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 23960  000C78                     u11355:
 23961  000C78  90D8               	bcf	status,0,c
 23962  000C7A  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 23963  000C7C  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 23964  000C7E  D7FC               	goto	u11355
 23965  000C80  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 23966  000C82  12A8               	iorwf	4008,f,c	;volatile
 23967                           
 23968                           ; BSR set to: 0
 23969                           ;uart_drv.c: 341: TXSTA2 |= (UartConfig->TxEnable) << ((UINT8)(5));
 23970  000C84  EE20 F006          	lfsr	2,6
 23971  000C88  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 23972  000C8A  26D9               	addwf	fsr2l,f,c
 23973  000C8C  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 23974  000C8E  22DA               	addwfc	fsr2h,f,c
 23975  000C90  50DF               	movf	indf2,w,c
 23976  000C92  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 23977  000C94  0E05               	movlw	5
 23978  000C96  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 23979  000C98                     u11365:
 23980  000C98  90D8               	bcf	status,0,c
 23981  000C9A  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 23982  000C9C  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 23983  000C9E  D7FC               	goto	u11365
 23984  000CA0  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 23985  000CA2  12A8               	iorwf	4008,f,c	;volatile
 23986                           
 23987                           ; BSR set to: 0
 23988                           ;uart_drv.c: 342: TXSTA2 |= (UartConfig->UartMode) << ((UINT8)(4));
 23989  000CA4  EE20 F001          	lfsr	2,1
 23990  000CA8  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 23991  000CAA  26D9               	addwf	fsr2l,f,c
 23992  000CAC  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 23993  000CAE  22DA               	addwfc	fsr2h,f,c
 23994  000CB0  50DF               	movf	indf2,w,c
 23995  000CB2  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 23996  000CB4  399F               	swapf	??_Uart_InitUartModule& (0+255),w,b
 23997  000CB6  0BF0               	andlw	240
 23998  000CB8  12A8               	iorwf	4008,f,c	;volatile
 23999                           
 24000                           ; BSR set to: 0
 24001                           ;uart_drv.c: 343: TXSTA2 |= (UartConfig->SendBreakEnable) << ((UINT8)(3));
 24002  000CBA  EE20 F008          	lfsr	2,8
 24003  000CBE  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24004  000CC0  26D9               	addwf	fsr2l,f,c
 24005  000CC2  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24006  000CC4  22DA               	addwfc	fsr2h,f,c
 24007  000CC6  50DF               	movf	indf2,w,c
 24008  000CC8  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24009  000CCA  90D8               	bcf	status,0,c
 24010  000CCC  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 24011  000CCE  90D8               	bcf	status,0,c
 24012  000CD0  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 24013  000CD2  90D8               	bcf	status,0,c
 24014  000CD4  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 24015  000CD6  12A8               	iorwf	4008,f,c	;volatile
 24016                           
 24017                           ; BSR set to: 0
 24018                           ;uart_drv.c: 344: TXSTA2 |= (UartConfig->HighBaudMode) << ((UINT8)(2));
 24019  000CD8  EE20 F003          	lfsr	2,3
 24020  000CDC  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24021  000CDE  26D9               	addwf	fsr2l,f,c
 24022  000CE0  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24023  000CE2  22DA               	addwfc	fsr2h,f,c
 24024  000CE4  50DF               	movf	indf2,w,c
 24025  000CE6  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24026  000CE8  90D8               	bcf	status,0,c
 24027  000CEA  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 24028  000CEC  90D8               	bcf	status,0,c
 24029  000CEE  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 24030  000CF0  12A8               	iorwf	4008,f,c	;volatile
 24031                           
 24032                           ; BSR set to: 0
 24033                           ;uart_drv.c: 347: RCSTA2 = 0x00;
 24034  000CF2  0E00               	movlw	0
 24035  000CF4  6E9C               	movwf	3996,c	;volatile
 24036                           
 24037                           ; BSR set to: 0
 24038                           ;uart_drv.c: 348: RCSTA2 |= (UartConfig->UartEnable) << ((UINT8)(7));
 24039  000CF6  C09D  FFD9         	movff	Uart_InitUartModule@UartConfig,fsr2l
 24040  000CFA  C09E  FFDA         	movff	Uart_InitUartModule@UartConfig+1,fsr2h
 24041  000CFE  50DF               	movf	indf2,w,c
 24042  000D00  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24043  000D02  0E00               	movlw	0
 24044  000D04  B19F               	btfsc	??_Uart_InitUartModule& (0+255),0,b
 24045  000D06  0E80               	movlw	128
 24046  000D08  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24047  000D0A  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 24048  000D0C  129C               	iorwf	3996,f,c	;volatile
 24049                           
 24050                           ; BSR set to: 0
 24051                           ;uart_drv.c: 349: RCSTA2 |= (UartConfig->Rx9bitMode) << ((UINT8)(6));
 24052  000D0E  EE20 F005          	lfsr	2,5
 24053  000D12  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24054  000D14  26D9               	addwf	fsr2l,f,c
 24055  000D16  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24056  000D18  22DA               	addwfc	fsr2h,f,c
 24057  000D1A  50DF               	movf	indf2,w,c
 24058  000D1C  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24059  000D1E  0E06               	movlw	6
 24060  000D20  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 24061  000D22                     u11375:
 24062  000D22  90D8               	bcf	status,0,c
 24063  000D24  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 24064  000D26  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 24065  000D28  D7FC               	goto	u11375
 24066  000D2A  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 24067  000D2C  129C               	iorwf	3996,f,c	;volatile
 24068                           
 24069                           ; BSR set to: 0
 24070                           ;uart_drv.c: 350: RCSTA2 |= (UartConfig->RxEnable) << ((UINT8)(4));
 24071  000D2E  EE20 F007          	lfsr	2,7
 24072  000D32  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24073  000D34  26D9               	addwf	fsr2l,f,c
 24074  000D36  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24075  000D38  22DA               	addwfc	fsr2h,f,c
 24076  000D3A  50DF               	movf	indf2,w,c
 24077  000D3C  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24078  000D3E  399F               	swapf	??_Uart_InitUartModule& (0+255),w,b
 24079  000D40  0BF0               	andlw	240
 24080  000D42  129C               	iorwf	3996,f,c	;volatile
 24081                           
 24082                           ; BSR set to: 0
 24083                           ;uart_drv.c: 353: BAUDCON2 = 0x00;
 24084  000D44  0E00               	movlw	0
 24085  000D46  6E7C               	movwf	3964,c	;volatile
 24086                           
 24087                           ; BSR set to: 0
 24088                           ;uart_drv.c: 354: BAUDCON2 |= (UartConfig->BaudRateMode) << ((UINT8)(3));
 24089  000D48  EE20 F002          	lfsr	2,2
 24090  000D4C  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24091  000D4E  26D9               	addwf	fsr2l,f,c
 24092  000D50  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24093  000D52  22DA               	addwfc	fsr2h,f,c
 24094  000D54  50DF               	movf	indf2,w,c
 24095  000D56  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24096  000D58  90D8               	bcf	status,0,c
 24097  000D5A  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 24098  000D5C  90D8               	bcf	status,0,c
 24099  000D5E  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 24100  000D60  90D8               	bcf	status,0,c
 24101  000D62  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 24102  000D64  127C               	iorwf	3964,f,c	;volatile
 24103                           
 24104                           ; BSR set to: 0
 24105                           ;uart_drv.c: 355: BAUDCON2 |= (UartConfig->WakeUpEnable) << ((UINT8)(1));
 24106  000D66  EE20 F00A          	lfsr	2,10
 24107  000D6A  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24108  000D6C  26D9               	addwf	fsr2l,f,c
 24109  000D6E  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24110  000D70  22DA               	addwfc	fsr2h,f,c
 24111  000D72  50DF               	movf	indf2,w,c
 24112  000D74  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24113  000D76  90D8               	bcf	status,0,c
 24114  000D78  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 24115  000D7A  127C               	iorwf	3964,f,c	;volatile
 24116                           
 24117                           ; BSR set to: 0
 24118                           ;uart_drv.c: 356: BAUDCON2 |= (UartConfig->AutobaudEnable) << ((UINT8)(0));
 24119  000D7C  EE20 F009          	lfsr	2,9
 24120  000D80  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24121  000D82  26D9               	addwf	fsr2l,f,c
 24122  000D84  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24123  000D86  22DA               	addwfc	fsr2h,f,c
 24124  000D88  50DF               	movf	indf2,w,c
 24125  000D8A  127C               	iorwf	3964,f,c	;volatile
 24126                           
 24127                           ; BSR set to: 0
 24128                           ;uart_drv.c: 359: PIE3bits.TX2IE = UartConfig->TxInterruptEnable;
 24129  000D8C  EE20 F00B          	lfsr	2,11
 24130  000D90  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24131  000D92  26D9               	addwf	fsr2l,f,c
 24132  000D94  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24133  000D96  22DA               	addwfc	fsr2h,f,c
 24134  000D98  50DF               	movf	indf2,w,c
 24135  000D9A  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24136  000D9C  3B9F               	swapf	??_Uart_InitUartModule& (0+255),f,b
 24137  000D9E  50A3               	movf	4003,w,c	;volatile
 24138  000DA0  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 24139  000DA2  0BEF               	andlw	-17
 24140  000DA4  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 24141  000DA6  6EA3               	movwf	4003,c	;volatile
 24142                           
 24143                           ; BSR set to: 0
 24144                           ;uart_drv.c: 360: PIE3bits.RC2IE = UartConfig->RxInterruptEnable;
 24145  000DA8  EE20 F00C          	lfsr	2,12
 24146  000DAC  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24147  000DAE  26D9               	addwf	fsr2l,f,c
 24148  000DB0  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24149  000DB2  22DA               	addwfc	fsr2h,f,c
 24150  000DB4  50DF               	movf	indf2,w,c
 24151  000DB6  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24152  000DB8  3B9F               	swapf	??_Uart_InitUartModule& (0+255),f,b
 24153  000DBA  479F               	rlncf	??_Uart_InitUartModule& (0+255),f,b
 24154  000DBC  50A3               	movf	4003,w,c	;volatile
 24155  000DBE  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 24156  000DC0  0BDF               	andlw	-33
 24157  000DC2  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 24158  000DC4  6EA3               	movwf	4003,c	;volatile
 24159                           
 24160                           ; BSR set to: 0
 24161  000DC6  0012               	return	
 24162  000DC8                     __end_of_Uart_InitUartModule:
 24163                           	opt stack 0
 24164                           tosu	equ	0xFFF
 24165                           tosh	equ	0xFFE
 24166                           tosl	equ	0xFFD
 24167                           pclath	equ	0xFFA
 24168                           tblptru	equ	0xFF8
 24169                           tblptrh	equ	0xFF7
 24170                           tblptrl	equ	0xFF6
 24171                           tablat	equ	0xFF5
 24172                           prodh	equ	0xFF4
 24173                           prodl	equ	0xFF3
 24174                           intcon	equ	0xFF2
 24175                           intcon2	equ	0xFF1
 24176                           intcon3	equ	0xFF0
 24177                           indf0	equ	0xFEF
 24178                           postinc0	equ	0xFEE
 24179                           plusw0	equ	0xFEB
 24180                           fsr0h	equ	0xFEA
 24181                           fsr0l	equ	0xFE9
 24182                           wreg	equ	0xFE8
 24183                           indf1	equ	0xFE7
 24184                           postinc1	equ	0xFE6
 24185                           postdec1	equ	0xFE5
 24186                           plusw1	equ	0xFE3
 24187                           fsr1h	equ	0xFE2
 24188                           fsr1l	equ	0xFE1
 24189                           indf2	equ	0xFDF
 24190                           postinc2	equ	0xFDE
 24191                           postdec2	equ	0xFDD
 24192                           plusw2	equ	0xFDB
 24193                           fsr2h	equ	0xFDA
 24194                           fsr2l	equ	0xFD9
 24195                           status	equ	0xFD8
 24196                           
 24197 ;; *************** function _SetUartBaudRate *****************
 24198 ;; Defined at:
 24199 ;;		line 121 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 24200 ;; Parameters:    Size  Location     Type
 24201 ;;  Module          1    wreg     unsigned char 
 24202 ;;  UartConfig      2   54[BANK0 ] PTR struct _UartConfig
 24203 ;;		 -> UartConfig(21), 
 24204 ;; Auto vars:     Size  Location     Type
 24205 ;;  Module          1   57[BANK0 ] unsigned char 
 24206 ;;  BaudRateRegi    2   58[BANK0 ] unsigned short 
 24207 ;;  DivisionFact    1   60[BANK0 ] unsigned char 
 24208 ;; Return value:  Size  Location     Type
 24209 ;;                  1    wreg      void 
 24210 ;; Registers used:
 24211 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24212 ;; Tracked objects:
 24213 ;;		On entry : 0/0
 24214 ;;		On exit  : 0/0
 24215 ;;		Unchanged: 0/0
 24216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24217 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24218 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24219 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24220 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24221 ;;Total ram usage:        7 bytes
 24222 ;; Hardware stack levels used:    1
 24223 ;; Hardware stack levels required when called:   12
 24224 ;; This function calls:
 24225 ;;		___lldiv
 24226 ;;		___lmul
 24227 ;; This function is called by:
 24228 ;;		_Uart_InitUartModule
 24229 ;; This function uses a non-reentrant model
 24230 ;;
 24231                           
 24232                           	psect	text112
 24233  0027C8                     __ptext112:
 24234                           	opt stack 0
 24235  0027C8                     _SetUartBaudRate:
 24236                           	opt stack 14
 24237                           
 24238                           ; BSR set to: 0
 24239                           ;incstack = 0
 24240                           ;SetUartBaudRate@Module stored from wreg
 24241  0027C8  0100               	movlb	0	; () banked
 24242  0027CA  6F99               	movwf	SetUartBaudRate@Module& (0+255),b
 24243                           
 24244                           ;uart_drv.c: 123: UINT16 BaudRateRegister = 0;
 24245  0027CC  0E00               	movlw	0
 24246  0027CE  0100               	movlb	0	; () banked
 24247  0027D0  6F9B               	movwf	(SetUartBaudRate@BaudRateRegister+1)& (0+255),b
 24248  0027D2  0E00               	movlw	0
 24249  0027D4  6F9A               	movwf	SetUartBaudRate@BaudRateRegister& (0+255),b
 24250                           
 24251                           ;uart_drv.c: 124: UINT8 DivisionFactor = 0;
 24252  0027D6  0E00               	movlw	0
 24253  0027D8  6F9C               	movwf	SetUartBaudRate@DivisionFactor& (0+255),b
 24254                           
 24255                           ; BSR set to: 0
 24256                           ;uart_drv.c: 127: if ((UartConfig->BaudRateMode == ((UINT8)(0))) && (UartConfig->BaudRat
      +                          eMode == ((UINT8)(0))))
 24257  0027DA  EE20 F002          	lfsr	2,2
 24258  0027DE  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 24259  0027E0  26D9               	addwf	fsr2l,f,c
 24260  0027E2  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 24261  0027E4  22DA               	addwfc	fsr2h,f,c
 24262  0027E6  50DF               	movf	indf2,w,c
 24263  0027E8  A4D8               	btfss	status,2,c
 24264  0027EA  D00B               	goto	l625
 24265                           
 24266                           ; BSR set to: 0
 24267  0027EC  EE20 F002          	lfsr	2,2
 24268  0027F0  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 24269  0027F2  26D9               	addwf	fsr2l,f,c
 24270  0027F4  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 24271  0027F6  22DA               	addwfc	fsr2h,f,c
 24272  0027F8  50DF               	movf	indf2,w,c
 24273  0027FA  A4D8               	btfss	status,2,c
 24274  0027FC  D002               	goto	l625
 24275                           
 24276                           ; BSR set to: 0
 24277                           ;uart_drv.c: 128: {
 24278                           ;uart_drv.c: 129: DivisionFactor = 64;
 24279  0027FE  0E40               	movlw	64
 24280  002800  D039               	goto	L28
 24281  002802                     l625:
 24282                           
 24283                           ; BSR set to: 0
 24284                           ;uart_drv.c: 131: else if ((UartConfig->BaudRateMode == ((UINT8)(1))) && (UartConfig->Ba
      +                          udRateMode == ((UINT8)(0))))
 24285                           
 24286                           ; BSR set to: 0
 24287  002802  EE20 F002          	lfsr	2,2
 24288  002806  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 24289  002808  26D9               	addwf	fsr2l,f,c
 24290  00280A  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 24291  00280C  22DA               	addwfc	fsr2h,f,c
 24292  00280E  04DE               	decf	postinc2,w,c
 24293  002810  A4D8               	btfss	status,2,c
 24294  002812  D009               	goto	l627
 24295                           
 24296                           ; BSR set to: 0
 24297  002814  EE20 F002          	lfsr	2,2
 24298  002818  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 24299  00281A  26D9               	addwf	fsr2l,f,c
 24300  00281C  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 24301  00281E  22DA               	addwfc	fsr2h,f,c
 24302  002820  50DF               	movf	indf2,w,c
 24303  002822  B4D8               	btfsc	status,2,c
 24304  002824  D012               	goto	u10670
 24305  002826                     l627:
 24306                           
 24307                           ; BSR set to: 0
 24308                           ;uart_drv.c: 135: else if ((UartConfig->BaudRateMode == ((UINT8)(0))) && (UartConfig->Ba
      +                          udRateMode == ((UINT8)(1))))
 24309                           
 24310                           ; BSR set to: 0
 24311  002826  EE20 F002          	lfsr	2,2
 24312  00282A  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 24313  00282C  26D9               	addwf	fsr2l,f,c
 24314  00282E  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 24315  002830  22DA               	addwfc	fsr2h,f,c
 24316  002832  50DF               	movf	indf2,w,c
 24317  002834  A4D8               	btfss	status,2,c
 24318  002836  D00B               	goto	l629
 24319                           
 24320                           ; BSR set to: 0
 24321  002838  EE20 F002          	lfsr	2,2
 24322  00283C  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 24323  00283E  26D9               	addwf	fsr2l,f,c
 24324  002840  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 24325  002842  22DA               	addwfc	fsr2h,f,c
 24326  002844  04DE               	decf	postinc2,w,c
 24327  002846  A4D8               	btfss	status,2,c
 24328  002848  D002               	goto	l629
 24329  00284A                     u10670:
 24330                           
 24331                           ; BSR set to: 0
 24332                           ;uart_drv.c: 136: {
 24333                           ;uart_drv.c: 137: DivisionFactor = 16;
 24334  00284A  0E10               	movlw	16
 24335  00284C  D013               	goto	L28
 24336  00284E                     l629:
 24337                           
 24338                           ; BSR set to: 0
 24339                           ;uart_drv.c: 139: else if ((UartConfig->BaudRateMode == ((UINT8)(1))) && (UartConfig->Ba
      +                          udRateMode == ((UINT8)(1))))
 24340                           
 24341                           ; BSR set to: 0
 24342  00284E  EE20 F002          	lfsr	2,2
 24343  002852  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 24344  002854  26D9               	addwf	fsr2l,f,c
 24345  002856  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 24346  002858  22DA               	addwfc	fsr2h,f,c
 24347  00285A  04DE               	decf	postinc2,w,c
 24348  00285C  A4D8               	btfss	status,2,c
 24349  00285E  D00B               	goto	l631
 24350                           
 24351                           ; BSR set to: 0
 24352  002860  EE20 F002          	lfsr	2,2
 24353  002864  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 24354  002866  26D9               	addwf	fsr2l,f,c
 24355  002868  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 24356  00286A  22DA               	addwfc	fsr2h,f,c
 24357  00286C  04DE               	decf	postinc2,w,c
 24358  00286E  A4D8               	btfss	status,2,c
 24359  002870  D002               	goto	l631
 24360                           
 24361                           ; BSR set to: 0
 24362                           ;uart_drv.c: 140: {
 24363                           ;uart_drv.c: 141: DivisionFactor = 4;
 24364  002872  0E04               	movlw	4
 24365  002874                     L28:
 24366  002874  6F9C               	movwf	SetUartBaudRate@DivisionFactor& (0+255),b
 24367  002876                     l631:
 24368                           
 24369                           ; BSR set to: 0
 24370                           ;uart_drv.c: 146: }
 24371                           ;uart_drv.c: 149: BaudRateRegister = ((UartConfig->McuBusClock/(DivisionFactor * UartCon
      +                          fig->DesiredBaudRate)) - 1);
 24372                           
 24373                           ; BSR set to: 0
 24374                           
 24375                           ; BSR set to: 0
 24376                           
 24377                           ; BSR set to: 0
 24378                           
 24379                           ; BSR set to: 0
 24380                           
 24381                           ;uart_drv.c: 143: else
 24382                           ;uart_drv.c: 144: {
 24383                           
 24384                           ; BSR set to: 0
 24385  002876  EE20 F00D          	lfsr	2,13
 24386  00287A  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 24387  00287C  26D9               	addwf	fsr2l,f,c
 24388  00287E  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 24389  002880  22DA               	addwfc	fsr2h,f,c
 24390  002882  CFDE F089          	movff	postinc2,___lldiv@dividend
 24391  002886  CFDE F08A          	movff	postinc2,___lldiv@dividend+1
 24392  00288A  CFDE F08B          	movff	postinc2,___lldiv@dividend+2
 24393  00288E  CFDE F08C          	movff	postinc2,___lldiv@dividend+3
 24394  002892  519C               	movf	SetUartBaudRate@DivisionFactor& (0+255),w,b
 24395  002894  6F7D               	movwf	___lmul@multiplier& (0+255),b
 24396  002896  6B7E               	clrf	(___lmul@multiplier+1)& (0+255),b
 24397  002898  6B7F               	clrf	(___lmul@multiplier+2)& (0+255),b
 24398  00289A  6B80               	clrf	(___lmul@multiplier+3)& (0+255),b
 24399  00289C  EE20 F011          	lfsr	2,17
 24400  0028A0  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 24401  0028A2  26D9               	addwf	fsr2l,f,c
 24402  0028A4  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 24403  0028A6  22DA               	addwfc	fsr2h,f,c
 24404  0028A8  CFDE F081          	movff	postinc2,___lmul@multiplicand
 24405  0028AC  CFDE F082          	movff	postinc2,___lmul@multiplicand+1
 24406  0028B0  CFDE F083          	movff	postinc2,___lmul@multiplicand+2
 24407  0028B4  CFDE F084          	movff	postinc2,___lmul@multiplicand+3
 24408  0028B8  ECE9  F027         	call	___lmul	;wreg free
 24409  0028BC  C07D  F08D         	movff	?___lmul,___lldiv@divisor
 24410  0028C0  C07E  F08E         	movff	?___lmul+1,___lldiv@divisor+1
 24411  0028C4  C07F  F08F         	movff	?___lmul+2,___lldiv@divisor+2
 24412  0028C8  C080  F090         	movff	?___lmul+3,___lldiv@divisor+3
 24413  0028CC  EC01  F025         	call	___lldiv	;wreg free
 24414  0028D0  0EFF               	movlw	255
 24415  0028D2  0100               	movlb	0	; () banked
 24416  0028D4  2589               	addwf	?___lldiv& (0+255),w,b
 24417  0028D6  6F9A               	movwf	SetUartBaudRate@BaudRateRegister& (0+255),b
 24418  0028D8  0EFF               	movlw	255
 24419  0028DA  218A               	addwfc	(?___lldiv+1)& (0+255),w,b
 24420  0028DC  6F9B               	movwf	(SetUartBaudRate@BaudRateRegister+1)& (0+255),b
 24421                           
 24422                           ; BSR set to: 0
 24423                           ;uart_drv.c: 151: if (Module == ((UINT8)(1)))
 24424  0028DE  0599               	decf	SetUartBaudRate@Module& (0+255),w,b
 24425  0028E0  A4D8               	btfss	status,2,c
 24426  0028E2  D005               	goto	l633
 24427                           
 24428                           ; BSR set to: 0
 24429                           ;uart_drv.c: 152: {
 24430                           ;uart_drv.c: 154: SPBRGH1 = (UINT8)((BaudRateRegister & ((UINT8)(0xFF00))) >> ((UINT8)(8
      +                          )));
 24431  0028E4  0E00               	movlw	0
 24432  0028E6  6E7F               	movwf	3967,c	;volatile
 24433                           
 24434                           ; BSR set to: 0
 24435                           ;uart_drv.c: 155: SPBRG1 = (UINT8)((BaudRateRegister & ((UINT8)(0x00FF))));
 24436  0028E8  C09A  FFB0         	movff	SetUartBaudRate@BaudRateRegister,4016	;volatile
 24437                           
 24438                           ;uart_drv.c: 156: }
 24439  0028EC  0012               	return	
 24440  0028EE                     l633:
 24441                           
 24442                           ; BSR set to: 0
 24443                           ;uart_drv.c: 157: else if (Module == ((UINT8)(2)))
 24444                           
 24445                           ; BSR set to: 0
 24446  0028EE  0E02               	movlw	2
 24447  0028F0  1999               	xorwf	SetUartBaudRate@Module& (0+255),w,b
 24448  0028F2  A4D8               	btfss	status,2,c
 24449  0028F4  0012               	return	
 24450                           
 24451                           ; BSR set to: 0
 24452                           ;uart_drv.c: 158: {
 24453                           ;uart_drv.c: 160: SPBRGH2 = (UINT8)((BaudRateRegister & ((UINT8)(0xFF00))) >> ((UINT8)(8
      +                          )));
 24454  0028F6  0E00               	movlw	0
 24455  0028F8  6E7D               	movwf	3965,c	;volatile
 24456                           
 24457                           ; BSR set to: 0
 24458                           ;uart_drv.c: 161: SPBRG2 = (UINT8)((BaudRateRegister & ((UINT8)(0x00FF))));
 24459  0028FA  C09A  FFAB         	movff	SetUartBaudRate@BaudRateRegister,4011	;volatile
 24460                           
 24461                           ; BSR set to: 0
 24462  0028FE  0012               	return	
 24463  002900                     __end_of_SetUartBaudRate:
 24464                           	opt stack 0
 24465                           tosu	equ	0xFFF
 24466                           tosh	equ	0xFFE
 24467                           tosl	equ	0xFFD
 24468                           pclath	equ	0xFFA
 24469                           tblptru	equ	0xFF8
 24470                           tblptrh	equ	0xFF7
 24471                           tblptrl	equ	0xFF6
 24472                           tablat	equ	0xFF5
 24473                           prodh	equ	0xFF4
 24474                           prodl	equ	0xFF3
 24475                           intcon	equ	0xFF2
 24476                           intcon2	equ	0xFF1
 24477                           intcon3	equ	0xFF0
 24478                           indf0	equ	0xFEF
 24479                           postinc0	equ	0xFEE
 24480                           plusw0	equ	0xFEB
 24481                           fsr0h	equ	0xFEA
 24482                           fsr0l	equ	0xFE9
 24483                           wreg	equ	0xFE8
 24484                           indf1	equ	0xFE7
 24485                           postinc1	equ	0xFE6
 24486                           postdec1	equ	0xFE5
 24487                           plusw1	equ	0xFE3
 24488                           fsr1h	equ	0xFE2
 24489                           fsr1l	equ	0xFE1
 24490                           indf2	equ	0xFDF
 24491                           postinc2	equ	0xFDE
 24492                           postdec2	equ	0xFDD
 24493                           plusw2	equ	0xFDB
 24494                           fsr2h	equ	0xFDA
 24495                           fsr2l	equ	0xFD9
 24496                           status	equ	0xFD8
 24497                           
 24498 ;; *************** function ___lmul *****************
 24499 ;; Defined at:
 24500 ;;		line 15 in file "/opt/microchip/xc8/v1.45/sources/common/Umul32.c"
 24501 ;; Parameters:    Size  Location     Type
 24502 ;;  multiplier      4   29[BANK0 ] unsigned long 
 24503 ;;  multiplicand    4   33[BANK0 ] unsigned long 
 24504 ;; Auto vars:     Size  Location     Type
 24505 ;;  product         4   37[BANK0 ] unsigned long 
 24506 ;; Return value:  Size  Location     Type
 24507 ;;                  4   29[BANK0 ] unsigned long 
 24508 ;; Registers used:
 24509 ;;		wreg, status,2, status,0
 24510 ;; Tracked objects:
 24511 ;;		On entry : 0/0
 24512 ;;		On exit  : 0/0
 24513 ;;		Unchanged: 0/0
 24514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24515 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24516 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24518 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24519 ;;Total ram usage:       12 bytes
 24520 ;; Hardware stack levels used:    1
 24521 ;; Hardware stack levels required when called:   11
 24522 ;; This function calls:
 24523 ;;		Nothing
 24524 ;; This function is called by:
 24525 ;;		_Tmr_TmrBPrSet
 24526 ;;		_SetUartBaudRate
 24527 ;;		_strtol
 24528 ;; This function uses a non-reentrant model
 24529 ;;
 24530                           
 24531                           	psect	text113
 24532  004FD2                     __ptext113:
 24533                           	opt stack 0
 24534  004FD2                     ___lmul:
 24535                           	opt stack 15
 24536                           
 24537                           ; BSR set to: 0
 24538                           ;incstack = 0
 24539  004FD2  0E00               	movlw	0
 24540  004FD4  0100               	movlb	0	; () banked
 24541  004FD6  6F85               	movwf	___lmul@product& (0+255),b
 24542  004FD8  0E00               	movlw	0
 24543  004FDA  6F86               	movwf	(___lmul@product+1)& (0+255),b
 24544  004FDC  0E00               	movlw	0
 24545  004FDE  6F87               	movwf	(___lmul@product+2)& (0+255),b
 24546  004FE0  0E00               	movlw	0
 24547  004FE2  6F88               	movwf	(___lmul@product+3)& (0+255),b
 24548  004FE4                     
 24549                           ; BSR set to: 0
 24550                           
 24551                           ; BSR set to: 0
 24552  004FE4  A17D               	btfss	___lmul@multiplier& (0+255),0,b
 24553  004FE6  D008               	goto	l2605
 24554                           
 24555                           ; BSR set to: 0
 24556  004FE8  5181               	movf	___lmul@multiplicand& (0+255),w,b
 24557  004FEA  2785               	addwf	___lmul@product& (0+255),f,b
 24558  004FEC  5182               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 24559  004FEE  2386               	addwfc	(___lmul@product+1)& (0+255),f,b
 24560  004FF0  5183               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 24561  004FF2  2387               	addwfc	(___lmul@product+2)& (0+255),f,b
 24562  004FF4  5184               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 24563  004FF6  2388               	addwfc	(___lmul@product+3)& (0+255),f,b
 24564  004FF8                     l2605:
 24565                           
 24566                           ; BSR set to: 0
 24567                           
 24568                           ; BSR set to: 0
 24569  004FF8  90D8               	bcf	status,0,c
 24570  004FFA  3781               	rlcf	___lmul@multiplicand& (0+255),f,b
 24571  004FFC  3782               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 24572  004FFE  3783               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 24573  005000  3784               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 24574                           
 24575                           ; BSR set to: 0
 24576  005002  90D8               	bcf	status,0,c
 24577  005004  3380               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 24578  005006  337F               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 24579  005008  337E               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 24580  00500A  337D               	rrcf	___lmul@multiplier& (0+255),f,b
 24581  00500C  517D               	movf	___lmul@multiplier& (0+255),w,b
 24582  00500E  117E               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 24583  005010  117F               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 24584  005012  1180               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 24585  005014  A4D8               	btfss	status,2,c
 24586  005016  D7E6               	goto	l2604
 24587                           
 24588                           ; BSR set to: 0
 24589  005018  C085  F07D         	movff	___lmul@product,?___lmul
 24590  00501C  C086  F07E         	movff	___lmul@product+1,?___lmul+1
 24591  005020  C087  F07F         	movff	___lmul@product+2,?___lmul+2
 24592  005024  C088  F080         	movff	___lmul@product+3,?___lmul+3
 24593                           
 24594                           ; BSR set to: 0
 24595  005028  0012               	return		;funcret
 24596  00502A                     __end_of___lmul:
 24597                           	opt stack 0
 24598                           tosu	equ	0xFFF
 24599                           tosh	equ	0xFFE
 24600                           tosl	equ	0xFFD
 24601                           pclath	equ	0xFFA
 24602                           tblptru	equ	0xFF8
 24603                           tblptrh	equ	0xFF7
 24604                           tblptrl	equ	0xFF6
 24605                           tablat	equ	0xFF5
 24606                           prodh	equ	0xFF4
 24607                           prodl	equ	0xFF3
 24608                           intcon	equ	0xFF2
 24609                           intcon2	equ	0xFF1
 24610                           intcon3	equ	0xFF0
 24611                           indf0	equ	0xFEF
 24612                           postinc0	equ	0xFEE
 24613                           plusw0	equ	0xFEB
 24614                           fsr0h	equ	0xFEA
 24615                           fsr0l	equ	0xFE9
 24616                           wreg	equ	0xFE8
 24617                           indf1	equ	0xFE7
 24618                           postinc1	equ	0xFE6
 24619                           postdec1	equ	0xFE5
 24620                           plusw1	equ	0xFE3
 24621                           fsr1h	equ	0xFE2
 24622                           fsr1l	equ	0xFE1
 24623                           indf2	equ	0xFDF
 24624                           postinc2	equ	0xFDE
 24625                           postdec2	equ	0xFDD
 24626                           plusw2	equ	0xFDB
 24627                           fsr2h	equ	0xFDA
 24628                           fsr2l	equ	0xFD9
 24629                           status	equ	0xFD8
 24630                           
 24631 ;; *************** function _UartSetConfigLow *****************
 24632 ;; Defined at:
 24633 ;;		line 224 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 24634 ;; Parameters:    Size  Location     Type
 24635 ;;		None
 24636 ;; Auto vars:     Size  Location     Type
 24637 ;;		None
 24638 ;; Return value:  Size  Location     Type
 24639 ;;                  1    wreg      void 
 24640 ;; Registers used:
 24641 ;;		wreg, status,2
 24642 ;; Tracked objects:
 24643 ;;		On entry : 0/0
 24644 ;;		On exit  : 0/0
 24645 ;;		Unchanged: 0/0
 24646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24647 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24648 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24650 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24651 ;;Total ram usage:        0 bytes
 24652 ;; Hardware stack levels used:    1
 24653 ;; Hardware stack levels required when called:   11
 24654 ;; This function calls:
 24655 ;;		Nothing
 24656 ;; This function is called by:
 24657 ;;		_ConfigureModem
 24658 ;; This function uses a non-reentrant model
 24659 ;;
 24660                           
 24661                           	psect	text114
 24662  00502A                     __ptext114:
 24663                           	opt stack 0
 24664  00502A                     _UartSetConfigLow:
 24665                           	opt stack 15
 24666                           
 24667                           ;mdm_gsm_gprs.c: 226: UartConfig.UartEnable = ((UINT8)(1));
 24668                           
 24669                           ; BSR set to: 0
 24670                           ;incstack = 0
 24671  00502A  0E01               	movlw	1
 24672  00502C  0103               	movlb	3	; () banked
 24673  00502E  6F28               	movwf	_UartConfig& (0+255),b
 24674                           
 24675                           ;mdm_gsm_gprs.c: 227: UartConfig.UartMode = ((UINT8)(0));
 24676  005030  0E00               	movlw	0
 24677  005032  6F29               	movwf	(_UartConfig+1)& (0+255),b
 24678                           
 24679                           ;mdm_gsm_gprs.c: 228: UartConfig.BaudRateMode = ((UINT8)(0));
 24680  005034  0E00               	movlw	0
 24681  005036  6F2A               	movwf	(_UartConfig+2)& (0+255),b
 24682                           
 24683                           ;mdm_gsm_gprs.c: 229: UartConfig.HighBaudMode = ((UINT8)(0));
 24684  005038  0E00               	movlw	0
 24685  00503A  6F2B               	movwf	(_UartConfig+3)& (0+255),b
 24686                           
 24687                           ;mdm_gsm_gprs.c: 230: UartConfig.Tx9bitMode = ((UINT8)(0));
 24688  00503C  0E00               	movlw	0
 24689  00503E  6F2C               	movwf	(_UartConfig+4)& (0+255),b
 24690                           
 24691                           ;mdm_gsm_gprs.c: 231: UartConfig.Rx9bitMode = ((UINT8)(0));
 24692  005040  0E00               	movlw	0
 24693  005042  6F2D               	movwf	(_UartConfig+5)& (0+255),b
 24694                           
 24695                           ;mdm_gsm_gprs.c: 232: UartConfig.TxEnable = ((UINT8)(1));
 24696  005044  0E01               	movlw	1
 24697  005046  6F2E               	movwf	(_UartConfig+6)& (0+255),b
 24698                           
 24699                           ;mdm_gsm_gprs.c: 233: UartConfig.RxEnable = ((UINT8)(1));
 24700  005048  0E01               	movlw	1
 24701  00504A  6F2F               	movwf	(_UartConfig+7)& (0+255),b
 24702                           
 24703                           ;mdm_gsm_gprs.c: 234: UartConfig.SendBreakEnable = ((UINT8)(0));
 24704  00504C  0E00               	movlw	0
 24705  00504E  6F30               	movwf	(_UartConfig+8)& (0+255),b
 24706                           
 24707                           ;mdm_gsm_gprs.c: 235: UartConfig.AutobaudEnable = ((UINT8)(0));
 24708  005050  0E00               	movlw	0
 24709  005052  6F31               	movwf	(_UartConfig+9)& (0+255),b
 24710                           
 24711                           ;mdm_gsm_gprs.c: 236: UartConfig.WakeUpEnable = ((UINT8)(0));
 24712  005054  0E00               	movlw	0
 24713  005056  6F32               	movwf	(_UartConfig+10)& (0+255),b
 24714                           
 24715                           ;mdm_gsm_gprs.c: 237: UartConfig.TxInterruptEnable = ((UINT8)(0));
 24716  005058  0E00               	movlw	0
 24717  00505A  6F33               	movwf	(_UartConfig+11)& (0+255),b
 24718                           
 24719                           ;mdm_gsm_gprs.c: 238: UartConfig.RxInterruptEnable = ((UINT8)(1));
 24720  00505C  0E01               	movlw	1
 24721  00505E  6F34               	movwf	(_UartConfig+12)& (0+255),b
 24722                           
 24723                           ;mdm_gsm_gprs.c: 239: UartConfig.McuBusClock = ((UINT32)(48000000));
 24724  005060  0E00               	movlw	0
 24725  005062  6F35               	movwf	(_UartConfig+13)& (0+255),b
 24726  005064  0E6C               	movlw	108
 24727  005066  6F36               	movwf	(_UartConfig+14)& (0+255),b
 24728  005068  0EDC               	movlw	220
 24729  00506A  6F37               	movwf	(_UartConfig+15)& (0+255),b
 24730  00506C  0E02               	movlw	2
 24731  00506E  6F38               	movwf	(_UartConfig+16)& (0+255),b
 24732                           
 24733                           ;mdm_gsm_gprs.c: 240: UartConfig.DesiredBaudRate = ((UINT32)(9600));
 24734  005070  0E80               	movlw	128
 24735  005072  6F39               	movwf	(_UartConfig+17)& (0+255),b
 24736  005074  0E25               	movlw	37
 24737  005076  6F3A               	movwf	(_UartConfig+18)& (0+255),b
 24738  005078  0E00               	movlw	0
 24739  00507A  6F3B               	movwf	(_UartConfig+19)& (0+255),b
 24740  00507C  0E00               	movlw	0
 24741  00507E  6F3C               	movwf	(_UartConfig+20)& (0+255),b
 24742                           
 24743                           ; BSR set to: 3
 24744  005080  0012               	return		;funcret
 24745  005082                     __end_of_UartSetConfigLow:
 24746                           	opt stack 0
 24747                           tosu	equ	0xFFF
 24748                           tosh	equ	0xFFE
 24749                           tosl	equ	0xFFD
 24750                           pclath	equ	0xFFA
 24751                           tblptru	equ	0xFF8
 24752                           tblptrh	equ	0xFF7
 24753                           tblptrl	equ	0xFF6
 24754                           tablat	equ	0xFF5
 24755                           prodh	equ	0xFF4
 24756                           prodl	equ	0xFF3
 24757                           intcon	equ	0xFF2
 24758                           intcon2	equ	0xFF1
 24759                           intcon3	equ	0xFF0
 24760                           indf0	equ	0xFEF
 24761                           postinc0	equ	0xFEE
 24762                           plusw0	equ	0xFEB
 24763                           fsr0h	equ	0xFEA
 24764                           fsr0l	equ	0xFE9
 24765                           wreg	equ	0xFE8
 24766                           indf1	equ	0xFE7
 24767                           postinc1	equ	0xFE6
 24768                           postdec1	equ	0xFE5
 24769                           plusw1	equ	0xFE3
 24770                           fsr1h	equ	0xFE2
 24771                           fsr1l	equ	0xFE1
 24772                           indf2	equ	0xFDF
 24773                           postinc2	equ	0xFDE
 24774                           postdec2	equ	0xFDD
 24775                           plusw2	equ	0xFDB
 24776                           fsr2h	equ	0xFDA
 24777                           fsr2l	equ	0xFD9
 24778                           status	equ	0xFD8
 24779                           
 24780 ;; *************** function _CheckModem *****************
 24781 ;; Defined at:
 24782 ;;		line 278 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 24783 ;; Parameters:    Size  Location     Type
 24784 ;;		None
 24785 ;; Auto vars:     Size  Location     Type
 24786 ;;		None
 24787 ;; Return value:  Size  Location     Type
 24788 ;;                  1    wreg      void 
 24789 ;; Registers used:
 24790 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 24791 ;; Tracked objects:
 24792 ;;		On entry : 0/0
 24793 ;;		On exit  : 0/0
 24794 ;;		Unchanged: 0/0
 24795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24796 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24797 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24799 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24800 ;;Total ram usage:        0 bytes
 24801 ;; Hardware stack levels used:    1
 24802 ;; Hardware stack levels required when called:   14
 24803 ;; This function calls:
 24804 ;;		_GenerateEvt
 24805 ;;		_OsTmr_GetTimerStatus
 24806 ;;		_OsTmr_StartTimer
 24807 ;;		_ReceiveEvt
 24808 ;;		_Uart_WriteConstString
 24809 ;; This function is called by:
 24810 ;;		_Mdm_MainTask
 24811 ;; This function uses a non-reentrant model
 24812 ;;
 24813                           
 24814                           	psect	text115
 24815  0022AA                     __ptext115:
 24816                           	opt stack 0
 24817  0022AA                     _CheckModem:
 24818                           	opt stack 13
 24819                           
 24820                           ;mdm_gsm_gprs.c: 280: static CheckMdmStsType CheckMdmSts = MdmCh_SetInitialDelay;
 24821                           ;mdm_gsm_gprs.c: 281: static SwTimerType Timeout = { 0u, SwTimerExpired, 0, 0, DelayNotE
      +                          xpired, };
 24822                           ;mdm_gsm_gprs.c: 283: switch (CheckMdmSts)
 24823                           
 24824                           ; BSR set to: 3
 24825                           ;incstack = 0
 24826  0022AA  D096               	goto	l976
 24827  0022AC                     
 24828                           ;mdm_gsm_gprs.c: 287: OsTmr_StartTimer(&Timeout,2000);
 24829  0022AC  0EED               	movlw	low CheckModem@Timeout
 24830  0022AE  0100               	movlb	0	; () banked
 24831  0022B0  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 24832  0022B2  0E03               	movlw	high CheckModem@Timeout
 24833  0022B4  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 24834  0022B6  0ED0               	movlw	208
 24835  0022B8  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 24836  0022BA  0E07               	movlw	7
 24837  0022BC  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 24838  0022BE  0E00               	movlw	0
 24839  0022C0  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 24840  0022C2  0E00               	movlw	0
 24841  0022C4  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 24842  0022C6  EC60  F027         	call	_OsTmr_StartTimer	;wreg free
 24843                           
 24844                           ;mdm_gsm_gprs.c: 289: CheckMdmSts = MdmCh_InitialDelay;
 24845  0022CA  0E01               	movlw	1
 24846  0022CC  6E2A               	movwf	CheckModem@CheckMdmSts,c
 24847                           
 24848                           ;mdm_gsm_gprs.c: 290: break;
 24849  0022CE  0012               	return	
 24850  0022D0                     
 24851                           ;mdm_gsm_gprs.c: 294: if (OsTmr_GetTimerStatus(&Timeout) == SwTimerExpired)
 24852  0022D0  0EED               	movlw	low CheckModem@Timeout
 24853  0022D2  0100               	movlb	0	; () banked
 24854  0022D4  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 24855  0022D6  0E03               	movlw	high CheckModem@Timeout
 24856  0022D8  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 24857  0022DA  ECE9  F023         	call	_OsTmr_GetTimerStatus	;wreg free
 24858  0022DE  06E8               	decf	wreg,f,c
 24859  0022E0  A4D8               	btfss	status,2,c
 24860  0022E2  0012               	return	
 24861                           
 24862                           ;mdm_gsm_gprs.c: 295: {
 24863                           ;mdm_gsm_gprs.c: 297: CheckMdmSts = MdmCh_SendATE1;
 24864  0022E4  0E02               	movlw	2
 24865  0022E6  6E2A               	movwf	CheckModem@CheckMdmSts,c
 24866                           
 24867                           ;mdm_gsm_gprs.c: 298: }
 24868                           ;mdm_gsm_gprs.c: 299: break;
 24869  0022E8  0012               	return	
 24870  0022EA                     
 24871                           ;mdm_gsm_gprs.c: 303: Uart_WriteConstString(1,"AT\r\n");
 24872  0022EA  0EE5               	movlw	low STR_1
 24873  0022EC  0100               	movlb	0	; () banked
 24874  0022EE  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 24875  0022F0  0EFF               	movlw	high STR_1
 24876  0022F2  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 24877  0022F4  0E01               	movlw	1
 24878  0022F6  EC1C  F02B         	call	_Uart_WriteConstString
 24879                           
 24880                           ;mdm_gsm_gprs.c: 305: OsTmr_StartTimer(&Timeout,2000u);
 24881  0022FA  0EED               	movlw	low CheckModem@Timeout
 24882  0022FC  0100               	movlb	0	; () banked
 24883  0022FE  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 24884  002300  0E03               	movlw	high CheckModem@Timeout
 24885  002302  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 24886  002304  0ED0               	movlw	208
 24887  002306  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 24888  002308  0E07               	movlw	7
 24889  00230A  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 24890  00230C  0E00               	movlw	0
 24891  00230E  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 24892  002310  0E00               	movlw	0
 24893  002312  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 24894  002314  EC60  F027         	call	_OsTmr_StartTimer	;wreg free
 24895                           
 24896                           ;mdm_gsm_gprs.c: 307: CheckMdmSts = MdmCh_WaitEcho;
 24897  002318  0E03               	movlw	3
 24898  00231A  6E2A               	movwf	CheckModem@CheckMdmSts,c
 24899                           
 24900                           ;mdm_gsm_gprs.c: 308: break;
 24901  00231C  0012               	return	
 24902  00231E                     
 24903                           ;mdm_gsm_gprs.c: 312: if (ReceiveEvt(&NewStringReceived))
 24904  00231E  0E3C               	movlw	low _NewStringReceived
 24905  002320  0100               	movlb	0	; () banked
 24906  002322  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 24907  002324  0E00               	movlw	high _NewStringReceived
 24908  002326  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 24909  002328  EC6C  F02D         	call	_ReceiveEvt	;wreg free
 24910  00232C  0900               	iorlw	0
 24911  00232E  B4D8               	btfsc	status,2,c
 24912  002330  D02F               	goto	l983
 24913                           
 24914                           ;mdm_gsm_gprs.c: 313: {
 24915                           ;mdm_gsm_gprs.c: 315: if (((RxBuffer[0] == 'O') && (RxBuffer[1] == 'K')) || ((RxBuffer[1
      +                          ] == 'O') && (RxBuffer[2] == 'K')))
 24916  002332  CC58  FFE8         	movff	_RxBuffer,wreg
 24917  002336  0A4F               	xorlw	79
 24918  002338  A4D8               	btfss	status,2,c
 24919  00233A  D005               	goto	u12190
 24920  00233C  CC59  FFE8         	movff	_RxBuffer+1,wreg
 24921  002340  0A4B               	xorlw	75
 24922  002342  B4D8               	btfsc	status,2,c
 24923  002344  D00A               	goto	u12210
 24924  002346                     u12190:
 24925  002346  CC59  FFE8         	movff	_RxBuffer+1,wreg
 24926  00234A  0A4F               	xorlw	79
 24927  00234C  A4D8               	btfss	status,2,c
 24928  00234E  0012               	return	
 24929  002350  CC5A  FFE8         	movff	_RxBuffer+2,wreg
 24930  002354  0A4B               	xorlw	75
 24931  002356  A4D8               	btfss	status,2,c
 24932  002358  0012               	return	
 24933  00235A                     u12210:
 24934                           
 24935                           ;mdm_gsm_gprs.c: 316: {
 24936                           ;mdm_gsm_gprs.c: 317: MdmStatus = ModemReady;
 24937  00235A  0E02               	movlw	2
 24938  00235C  0100               	movlb	0	; () banked
 24939  00235E  6FCF               	movwf	_MdmStatus& (0+255),b
 24940                           
 24941                           ; BSR set to: 0
 24942                           ;mdm_gsm_gprs.c: 319: GenerateEvt(&MdmOnOffPulseRequest);
 24943  002360  0EDE               	movlw	low _MdmOnOffPulseRequest
 24944  002362  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 24945  002364  0E00               	movlw	high _MdmOnOffPulseRequest
 24946  002366  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 24947  002368  EC24  F02F         	call	_GenerateEvt	;wreg free
 24948                           
 24949                           ;mdm_gsm_gprs.c: 321: OsTmr_StartTimer(&Timeout,1000u);
 24950  00236C  0EED               	movlw	low CheckModem@Timeout
 24951  00236E  0100               	movlb	0	; () banked
 24952  002370  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 24953  002372  0E03               	movlw	high CheckModem@Timeout
 24954  002374  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 24955  002376  0EE8               	movlw	232
 24956  002378  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 24957  00237A  0E03               	movlw	3
 24958  00237C  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 24959  00237E  0E00               	movlw	0
 24960  002380  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 24961  002382  0E00               	movlw	0
 24962  002384  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 24963  002386  EC60  F027         	call	_OsTmr_StartTimer	;wreg free
 24964                           
 24965                           ;mdm_gsm_gprs.c: 323: CheckMdmSts = MdmCh_Delay;
 24966  00238A  0E04               	movlw	4
 24967  00238C  6E2A               	movwf	CheckModem@CheckMdmSts,c
 24968                           
 24969                           ;mdm_gsm_gprs.c: 324: }
 24970                           ;mdm_gsm_gprs.c: 325: }
 24971  00238E  0012               	return	
 24972  002390                     l983:
 24973                           
 24974                           ;mdm_gsm_gprs.c: 326: else if (OsTmr_GetTimerStatus(&Timeout) == SwTimerExpired)
 24975  002390  0EED               	movlw	low CheckModem@Timeout
 24976  002392  0100               	movlb	0	; () banked
 24977  002394  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 24978  002396  0E03               	movlw	high CheckModem@Timeout
 24979  002398  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 24980  00239A  ECE9  F023         	call	_OsTmr_GetTimerStatus	;wreg free
 24981  00239E  06E8               	decf	wreg,f,c
 24982  0023A0  A4D8               	btfss	status,2,c
 24983  0023A2  0012               	return	
 24984                           
 24985                           ;mdm_gsm_gprs.c: 327: {
 24986                           ;mdm_gsm_gprs.c: 329: MdmStatus = ModemOff;
 24987  0023A4  0E00               	movlw	0
 24988  0023A6  0100               	movlb	0	; () banked
 24989  0023A8  6FCF               	movwf	_MdmStatus& (0+255),b
 24990                           
 24991                           ;mdm_gsm_gprs.c: 331: ComChecCompleted = 1u;
 24992  0023AA  0E01               	movlw	1
 24993  0023AC  6E2B               	movwf	_ComChecCompleted,c
 24994                           
 24995                           ;mdm_gsm_gprs.c: 333: CheckMdmSts = MdmCh_Done;
 24996  0023AE  0E05               	movlw	5
 24997  0023B0  6E2A               	movwf	CheckModem@CheckMdmSts,c
 24998                           
 24999                           ; BSR set to: 0
 25000                           ;mdm_gsm_gprs.c: 338: }
 25001                           ;mdm_gsm_gprs.c: 339: break;
 25002                           
 25003                           ; BSR set to: 0
 25004                           
 25005                           ;mdm_gsm_gprs.c: 335: else
 25006                           ;mdm_gsm_gprs.c: 336: {
 25007                           
 25008                           ; BSR set to: 0
 25009                           
 25010                           ;mdm_gsm_gprs.c: 334: }
 25011  0023B2  0012               	return	
 25012  0023B4                     
 25013                           ;mdm_gsm_gprs.c: 343: if (OsTmr_GetTimerStatus(&Timeout) == SwTimerExpired)
 25014                           
 25015                           ; BSR set to: 0
 25016  0023B4  0EED               	movlw	low CheckModem@Timeout
 25017  0023B6  0100               	movlb	0	; () banked
 25018  0023B8  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 25019  0023BA  0E03               	movlw	high CheckModem@Timeout
 25020  0023BC  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 25021  0023BE  ECE9  F023         	call	_OsTmr_GetTimerStatus	;wreg free
 25022  0023C2  06E8               	decf	wreg,f,c
 25023  0023C4  A4D8               	btfss	status,2,c
 25024  0023C6  0012               	return	
 25025                           
 25026                           ;mdm_gsm_gprs.c: 344: {
 25027                           ;mdm_gsm_gprs.c: 346: MdmStatus = ModemOff;
 25028  0023C8  0E00               	movlw	0
 25029  0023CA  0100               	movlb	0	; () banked
 25030  0023CC  6FCF               	movwf	_MdmStatus& (0+255),b
 25031                           
 25032                           ;mdm_gsm_gprs.c: 348: ComChecCompleted = 1u;
 25033  0023CE  0E01               	movlw	1
 25034  0023D0  6E2B               	movwf	_ComChecCompleted,c
 25035                           
 25036                           ;mdm_gsm_gprs.c: 350: CheckMdmSts = MdmCh_Done;
 25037  0023D2  0E05               	movlw	5
 25038  0023D4  6E2A               	movwf	CheckModem@CheckMdmSts,c
 25039                           
 25040                           ; BSR set to: 0
 25041                           ;mdm_gsm_gprs.c: 360: }
 25042                           
 25043                           ; BSR set to: 0
 25044                           ;mdm_gsm_gprs.c: 359: break;
 25045                           
 25046                           ;mdm_gsm_gprs.c: 358: default:
 25047                           
 25048                           ; BSR set to: 0
 25049                           ;mdm_gsm_gprs.c: 356: break;
 25050                           
 25051                           ;mdm_gsm_gprs.c: 354: case MdmCh_Done:
 25052                           
 25053                           ; BSR set to: 0
 25054                           ;mdm_gsm_gprs.c: 351: }
 25055                           ;mdm_gsm_gprs.c: 352: break;
 25056  0023D6  0012               	return	
 25057  0023D8                     l976:
 25058                           
 25059                           ; BSR set to: 0
 25060  0023D8  502A               	movf	CheckModem@CheckMdmSts,w,c
 25061                           
 25062                           ; Switch size 1, requested type "space"
 25063                           ; Number of cases is 6, Range of values is 0 to 5
 25064                           ; switch strategies available:
 25065                           ; Name         Instructions Cycles
 25066                           ; simple_byte           19    10 (average)
 25067                           ;	Chosen strategy is simple_byte
 25068  0023DA  0A00               	xorlw	0	; case 0
 25069  0023DC  B4D8               	btfsc	status,2,c
 25070  0023DE  D766               	goto	l977
 25071  0023E0  0A01               	xorlw	1	; case 1
 25072  0023E2  B4D8               	btfsc	status,2,c
 25073  0023E4  D775               	goto	l979
 25074  0023E6  0A03               	xorlw	3	; case 2
 25075  0023E8  B4D8               	btfsc	status,2,c
 25076  0023EA  D77F               	goto	l981
 25077  0023EC  0A01               	xorlw	1	; case 3
 25078  0023EE  B4D8               	btfsc	status,2,c
 25079  0023F0  D796               	goto	l982
 25080  0023F2  0A07               	xorlw	7	; case 4
 25081  0023F4  B4D8               	btfsc	status,2,c
 25082  0023F6  D7DE               	goto	l992
 25083  0023F8  0A01               	xorlw	1	; case 5
 25084  0023FA  0012               	return	
 25085  0023FC                     __end_of_CheckModem:
 25086                           	opt stack 0
 25087                           tosu	equ	0xFFF
 25088                           tosh	equ	0xFFE
 25089                           tosl	equ	0xFFD
 25090                           pclath	equ	0xFFA
 25091                           tblptru	equ	0xFF8
 25092                           tblptrh	equ	0xFF7
 25093                           tblptrl	equ	0xFF6
 25094                           tablat	equ	0xFF5
 25095                           prodh	equ	0xFF4
 25096                           prodl	equ	0xFF3
 25097                           intcon	equ	0xFF2
 25098                           intcon2	equ	0xFF1
 25099                           intcon3	equ	0xFF0
 25100                           indf0	equ	0xFEF
 25101                           postinc0	equ	0xFEE
 25102                           plusw0	equ	0xFEB
 25103                           fsr0h	equ	0xFEA
 25104                           fsr0l	equ	0xFE9
 25105                           wreg	equ	0xFE8
 25106                           indf1	equ	0xFE7
 25107                           postinc1	equ	0xFE6
 25108                           postdec1	equ	0xFE5
 25109                           plusw1	equ	0xFE3
 25110                           fsr1h	equ	0xFE2
 25111                           fsr1l	equ	0xFE1
 25112                           indf2	equ	0xFDF
 25113                           postinc2	equ	0xFDE
 25114                           postdec2	equ	0xFDD
 25115                           plusw2	equ	0xFDB
 25116                           fsr2h	equ	0xFDA
 25117                           fsr2l	equ	0xFD9
 25118                           status	equ	0xFD8
 25119                           
 25120 ;; *************** function _MdmCntSm *****************
 25121 ;; Defined at:
 25122 ;;		line 199 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mdm_drv.c"
 25123 ;; Parameters:    Size  Location     Type
 25124 ;;		None
 25125 ;; Auto vars:     Size  Location     Type
 25126 ;;		None
 25127 ;; Return value:  Size  Location     Type
 25128 ;;                  1    wreg      void 
 25129 ;; Registers used:
 25130 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 25131 ;; Tracked objects:
 25132 ;;		On entry : 0/0
 25133 ;;		On exit  : 0/0
 25134 ;;		Unchanged: 0/0
 25135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25136 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25137 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25139 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25140 ;;Total ram usage:        0 bytes
 25141 ;; Hardware stack levels used:    1
 25142 ;; Hardware stack levels required when called:   12
 25143 ;; This function calls:
 25144 ;;		_InitModemInterface
 25145 ;;		_ReceiveEvt
 25146 ;; This function is called by:
 25147 ;;		_Mdm_DrvMainFn
 25148 ;; This function uses a non-reentrant model
 25149 ;;
 25150                           
 25151                           	psect	text116
 25152  0041B6                     __ptext116:
 25153                           	opt stack 0
 25154  0041B6                     _MdmCntSm:
 25155                           	opt stack 15
 25156                           
 25157                           ;mdm_drv.c: 201: static MdmCntStateType MdmCntState = InitModemInt;
 25158                           ;mdm_drv.c: 202: static UINT16 Counter = 0;
 25159                           ;mdm_drv.c: 204: switch (MdmCntState)
 25160                           
 25161                           ;incstack = 0
 25162  0041B6  D045               	goto	l315
 25163  0041B8                     
 25164                           ;mdm_drv.c: 208: InitModemInterface();
 25165  0041B8  ECD7  F02F         	call	_InitModemInterface	;wreg free
 25166                           
 25167                           ;mdm_drv.c: 210: MdmCntState = CheckRequest;
 25168  0041BC  0E01               	movlw	1
 25169  0041BE  6E2E               	movwf	MdmCntSm@MdmCntState,c
 25170                           
 25171                           ;mdm_drv.c: 211: break;
 25172  0041C0  0012               	return	
 25173  0041C2                     
 25174                           ;mdm_drv.c: 215: if (ReceiveEvt(&MdmOnOffPulseRequest))
 25175  0041C2  0EDE               	movlw	low _MdmOnOffPulseRequest
 25176  0041C4  0100               	movlb	0	; () banked
 25177  0041C6  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 25178  0041C8  0E00               	movlw	high _MdmOnOffPulseRequest
 25179  0041CA  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 25180  0041CC  EC6C  F02D         	call	_ReceiveEvt	;wreg free
 25181  0041D0  0900               	iorlw	0
 25182  0041D2  B4D8               	btfsc	status,2,c
 25183  0041D4  D009               	goto	l319
 25184                           
 25185                           ;mdm_drv.c: 216: {
 25186                           ;mdm_drv.c: 218: MdmCntState = MdmOnOffPulse;
 25187  0041D6  0E02               	movlw	2
 25188  0041D8  6E2E               	movwf	MdmCntSm@MdmCntState,c
 25189                           
 25190                           ;mdm_drv.c: 220: PORTEbits.RE1 = ((UINT8)(1));
 25191  0041DA  8284               	bsf	3972,1,c	;volatile
 25192                           
 25193                           ;mdm_drv.c: 222: Counter = 0;
 25194  0041DC  0E00               	movlw	0
 25195  0041DE  0102               	movlb	2	; () banked
 25196  0041E0  6FDF               	movwf	(MdmCntSm@Counter+1)& (0+255),b
 25197  0041E2  0E00               	movlw	0
 25198  0041E4  6FDE               	movwf	MdmCntSm@Counter& (0+255),b
 25199                           
 25200                           ;mdm_drv.c: 223: }
 25201  0041E6  0012               	return	
 25202  0041E8                     l319:
 25203                           
 25204                           ;mdm_drv.c: 224: else if (ReceiveEvt(&MdmResetRequest))
 25205                           
 25206                           ; BSR set to: 2
 25207  0041E8  0E3D               	movlw	low _MdmResetRequest
 25208  0041EA  0100               	movlb	0	; () banked
 25209  0041EC  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 25210  0041EE  0E00               	movlw	high _MdmResetRequest
 25211  0041F0  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 25212  0041F2  EC6C  F02D         	call	_ReceiveEvt	;wreg free
 25213  0041F6  0900               	iorlw	0
 25214  0041F8  B4D8               	btfsc	status,2,c
 25215  0041FA  0012               	return	
 25216                           
 25217                           ;mdm_drv.c: 225: {
 25218                           ;mdm_drv.c: 227: MdmCntState = MdmResetPulse;
 25219  0041FC  0E03               	movlw	3
 25220  0041FE  6E2E               	movwf	MdmCntSm@MdmCntState,c
 25221                           
 25222                           ;mdm_drv.c: 229: PORTEbits.RE0 = ((UINT8)(1));
 25223  004200  8084               	bsf	3972,0,c	;volatile
 25224                           
 25225                           ;mdm_drv.c: 231: Counter = 0;
 25226  004202  0E00               	movlw	0
 25227  004204  0102               	movlb	2	; () banked
 25228  004206  6FDF               	movwf	(MdmCntSm@Counter+1)& (0+255),b
 25229  004208  0E00               	movlw	0
 25230  00420A  6FDE               	movwf	MdmCntSm@Counter& (0+255),b
 25231                           
 25232                           ; BSR set to: 2
 25233                           ;mdm_drv.c: 236: }
 25234                           ;mdm_drv.c: 237: break;
 25235                           
 25236                           ; BSR set to: 2
 25237                           
 25238                           ;mdm_drv.c: 233: else
 25239                           ;mdm_drv.c: 234: {
 25240                           
 25241                           ; BSR set to: 2
 25242                           
 25243                           ;mdm_drv.c: 232: }
 25244  00420C  0012               	return	
 25245  00420E                     
 25246                           ;mdm_drv.c: 241: Counter++;
 25247                           
 25248                           ; BSR set to: 2
 25249  00420E  0102               	movlb	2	; () banked
 25250  004210  4BDE               	infsnz	MdmCntSm@Counter& (0+255),f,b
 25251  004212  2BDF               	incf	(MdmCntSm@Counter+1)& (0+255),f,b
 25252                           
 25253                           ; BSR set to: 2
 25254                           ;mdm_drv.c: 243: if (Counter >= (((UINT16)(1500))/((UINT16)(10))))
 25255  004214  51DF               	movf	(MdmCntSm@Counter+1)& (0+255),w,b
 25256  004216  E104               	bnz	u12130
 25257  004218  0E96               	movlw	150
 25258  00421A  5DDE               	subwf	MdmCntSm@Counter& (0+255),w,b
 25259  00421C  A0D8               	btfss	status,0,c
 25260  00421E  0012               	return	
 25261  004220                     u12130:
 25262                           
 25263                           ; BSR set to: 2
 25264                           ;mdm_drv.c: 244: {
 25265                           ;mdm_drv.c: 246: PORTEbits.RE1 = ((UINT8)(0));
 25266  004220  9284               	bcf	3972,1,c	;volatile
 25267                           
 25268                           ; BSR set to: 2
 25269                           ;mdm_drv.c: 248: MdmCntState = CheckRequest;
 25270  004222  0E01               	movlw	1
 25271  004224  6E2E               	movwf	MdmCntSm@MdmCntState,c
 25272                           
 25273                           ; BSR set to: 2
 25274                           ;mdm_drv.c: 249: }
 25275                           ;mdm_drv.c: 250: break;
 25276  004226  0012               	return	
 25277  004228                     
 25278                           ;mdm_drv.c: 254: Counter++;
 25279                           
 25280                           ; BSR set to: 2
 25281  004228  0102               	movlb	2	; () banked
 25282  00422A  4BDE               	infsnz	MdmCntSm@Counter& (0+255),f,b
 25283  00422C  2BDF               	incf	(MdmCntSm@Counter+1)& (0+255),f,b
 25284                           
 25285                           ; BSR set to: 2
 25286                           ;mdm_drv.c: 256: if (Counter >= (((UINT16)(100))/((UINT16)(10))))
 25287  00422E  51DF               	movf	(MdmCntSm@Counter+1)& (0+255),w,b
 25288  004230  E104               	bnz	u12140
 25289  004232  0E0A               	movlw	10
 25290  004234  5DDE               	subwf	MdmCntSm@Counter& (0+255),w,b
 25291  004236  A0D8               	btfss	status,0,c
 25292  004238  0012               	return	
 25293  00423A                     u12140:
 25294                           
 25295                           ; BSR set to: 2
 25296                           ;mdm_drv.c: 257: {
 25297                           ;mdm_drv.c: 259: PORTEbits.RE0 = ((UINT8)(0));
 25298  00423A  9084               	bcf	3972,0,c	;volatile
 25299                           
 25300                           ; BSR set to: 2
 25301                           ;mdm_drv.c: 261: MdmCntState = CheckRequest;
 25302  00423C  0E01               	movlw	1
 25303  00423E  6E2E               	movwf	MdmCntSm@MdmCntState,c
 25304                           
 25305                           ; BSR set to: 2
 25306                           ;mdm_drv.c: 267: }
 25307                           
 25308                           ; BSR set to: 2
 25309                           ;mdm_drv.c: 266: break;
 25310                           
 25311                           ;mdm_drv.c: 265: default:
 25312                           
 25313                           ; BSR set to: 2
 25314                           ;mdm_drv.c: 262: }
 25315                           ;mdm_drv.c: 263: break;
 25316  004240  0012               	return	
 25317  004242                     l315:
 25318                           
 25319                           ; BSR set to: 2
 25320  004242  502E               	movf	MdmCntSm@MdmCntState,w,c
 25321                           
 25322                           ; Switch size 1, requested type "space"
 25323                           ; Number of cases is 4, Range of values is 0 to 3
 25324                           ; switch strategies available:
 25325                           ; Name         Instructions Cycles
 25326                           ; simple_byte           13     7 (average)
 25327                           ;	Chosen strategy is simple_byte
 25328  004244  0A00               	xorlw	0	; case 0
 25329  004246  B4D8               	btfsc	status,2,c
 25330  004248  D7B7               	goto	l316
 25331  00424A  0A01               	xorlw	1	; case 1
 25332  00424C  B4D8               	btfsc	status,2,c
 25333  00424E  D7B9               	goto	l318
 25334  004250  0A03               	xorlw	3	; case 2
 25335  004252  B4D8               	btfsc	status,2,c
 25336  004254  D7DC               	goto	l323
 25337  004256  0A01               	xorlw	1	; case 3
 25338  004258  A4D8               	btfss	status,2,c
 25339  00425A  0012               	return	
 25340  00425C  D7E5               	goto	l325
 25341  00425E                     __end_of_MdmCntSm:
 25342                           	opt stack 0
 25343                           tosu	equ	0xFFF
 25344                           tosh	equ	0xFFE
 25345                           tosl	equ	0xFFD
 25346                           pclath	equ	0xFFA
 25347                           tblptru	equ	0xFF8
 25348                           tblptrh	equ	0xFF7
 25349                           tblptrl	equ	0xFF6
 25350                           tablat	equ	0xFF5
 25351                           prodh	equ	0xFF4
 25352                           prodl	equ	0xFF3
 25353                           intcon	equ	0xFF2
 25354                           intcon2	equ	0xFF1
 25355                           intcon3	equ	0xFF0
 25356                           indf0	equ	0xFEF
 25357                           postinc0	equ	0xFEE
 25358                           plusw0	equ	0xFEB
 25359                           fsr0h	equ	0xFEA
 25360                           fsr0l	equ	0xFE9
 25361                           wreg	equ	0xFE8
 25362                           indf1	equ	0xFE7
 25363                           postinc1	equ	0xFE6
 25364                           postdec1	equ	0xFE5
 25365                           plusw1	equ	0xFE3
 25366                           fsr1h	equ	0xFE2
 25367                           fsr1l	equ	0xFE1
 25368                           indf2	equ	0xFDF
 25369                           postinc2	equ	0xFDE
 25370                           postdec2	equ	0xFDD
 25371                           plusw2	equ	0xFDB
 25372                           fsr2h	equ	0xFDA
 25373                           fsr2l	equ	0xFD9
 25374                           status	equ	0xFD8
 25375                           
 25376 ;; *************** function _InitModemInterface *****************
 25377 ;; Defined at:
 25378 ;;		line 102 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mdm_drv.c"
 25379 ;; Parameters:    Size  Location     Type
 25380 ;;		None
 25381 ;; Auto vars:     Size  Location     Type
 25382 ;;		None
 25383 ;; Return value:  Size  Location     Type
 25384 ;;                  1    wreg      void 
 25385 ;; Registers used:
 25386 ;;		None
 25387 ;; Tracked objects:
 25388 ;;		On entry : 0/0
 25389 ;;		On exit  : 0/0
 25390 ;;		Unchanged: 0/0
 25391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25392 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25393 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25395 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25396 ;;Total ram usage:        0 bytes
 25397 ;; Hardware stack levels used:    1
 25398 ;; Hardware stack levels required when called:   11
 25399 ;; This function calls:
 25400 ;;		Nothing
 25401 ;; This function is called by:
 25402 ;;		_MdmCntSm
 25403 ;; This function uses a non-reentrant model
 25404 ;;
 25405                           
 25406                           	psect	text117
 25407  005FAE                     __ptext117:
 25408                           	opt stack 0
 25409  005FAE                     _InitModemInterface:
 25410                           	opt stack 15
 25411                           
 25412                           ;mdm_drv.c: 105: TRISEbits.TRISE0 = ((UINT8)(0));
 25413                           
 25414                           ;incstack = 0
 25415  005FAE  9096               	bcf	3990,0,c	;volatile
 25416                           
 25417                           ;mdm_drv.c: 106: TRISEbits.TRISE1 = ((UINT8)(0));
 25418  005FB0  9296               	bcf	3990,1,c	;volatile
 25419                           
 25420                           ;mdm_drv.c: 107: TRISEbits.TRISE2 = ((UINT8)(1));
 25421  005FB2  8496               	bsf	3990,2,c	;volatile
 25422  005FB4  0012               	return		;funcret
 25423  005FB6                     __end_of_InitModemInterface:
 25424                           	opt stack 0
 25425                           tosu	equ	0xFFF
 25426                           tosh	equ	0xFFE
 25427                           tosl	equ	0xFFD
 25428                           pclath	equ	0xFFA
 25429                           tblptru	equ	0xFF8
 25430                           tblptrh	equ	0xFF7
 25431                           tblptrl	equ	0xFF6
 25432                           tablat	equ	0xFF5
 25433                           prodh	equ	0xFF4
 25434                           prodl	equ	0xFF3
 25435                           intcon	equ	0xFF2
 25436                           intcon2	equ	0xFF1
 25437                           intcon3	equ	0xFF0
 25438                           indf0	equ	0xFEF
 25439                           postinc0	equ	0xFEE
 25440                           plusw0	equ	0xFEB
 25441                           fsr0h	equ	0xFEA
 25442                           fsr0l	equ	0xFE9
 25443                           wreg	equ	0xFE8
 25444                           indf1	equ	0xFE7
 25445                           postinc1	equ	0xFE6
 25446                           postdec1	equ	0xFE5
 25447                           plusw1	equ	0xFE3
 25448                           fsr1h	equ	0xFE2
 25449                           fsr1l	equ	0xFE1
 25450                           indf2	equ	0xFDF
 25451                           postinc2	equ	0xFDE
 25452                           postdec2	equ	0xFDD
 25453                           plusw2	equ	0xFDB
 25454                           fsr2h	equ	0xFDA
 25455                           fsr2l	equ	0xFD9
 25456                           status	equ	0xFD8
 25457                           
 25458 ;; *************** function _InitGprsNetwork *****************
 25459 ;; Defined at:
 25460 ;;		line 124 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs_http.c"
 25461 ;; Parameters:    Size  Location     Type
 25462 ;;  Apn             2   59[BANK0 ] PTR unsigned char 
 25463 ;;		 -> NULL(0), 
 25464 ;;  ApnLen          1   61[BANK0 ] unsigned char 
 25465 ;; Auto vars:     Size  Location     Type
 25466 ;;  UartMessage    50    0[BANK1 ] unsigned char [50]
 25467 ;;  Index           1   50[BANK1 ] unsigned char 
 25468 ;; Return value:  Size  Location     Type
 25469 ;;                  1    wreg      enum E8905
 25470 ;; Registers used:
 25471 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25472 ;; Tracked objects:
 25473 ;;		On entry : 0/0
 25474 ;;		On exit  : 0/0
 25475 ;;		Unchanged: 0/0
 25476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25477 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25478 ;;      Locals:         0       0      51       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25479 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25480 ;;      Totals:         0       5      51       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25481 ;;Total ram usage:       56 bytes
 25482 ;; Hardware stack levels used:    1
 25483 ;; Hardware stack levels required when called:   14
 25484 ;; This function calls:
 25485 ;;		_ClearBuffer
 25486 ;;		_OsTmr_GetTimerStatus
 25487 ;;		_OsTmr_StartTimer
 25488 ;;		_ReceiveEvt
 25489 ;;		_StringCopy
 25490 ;;		_Uart_WriteConstString
 25491 ;;		_Uart_WriteString
 25492 ;; This function is called by:
 25493 ;;		_MdmHttp_MainTask
 25494 ;; This function uses a non-reentrant model
 25495 ;;
 25496                           
 25497                           	psect	text118
 25498  000DC8                     __ptext118:
 25499                           	opt stack 0
 25500  000DC8                     _InitGprsNetwork:
 25501                           	opt stack 13
 25502                           
 25503                           ;mdm_gsm_gprs_http.c: 126: static GprsNetInitType GprsNetInitState = GprsIn_Idle;
 25504                           ;mdm_gsm_gprs_http.c: 127: static GprsNetInitType GprsNetInitNextState = GprsIn_Idle;
 25505                           ;mdm_gsm_gprs_http.c: 128: static GprsOutStsType GprsInitSts = GprsSts_InProg;
 25506                           ;mdm_gsm_gprs_http.c: 129: UINT8 UartMessage[50];
 25507                           ;mdm_gsm_gprs_http.c: 130: UINT8 Index = 0;
 25508                           
 25509                           ;incstack = 0
 25510  000DC8  0E00               	movlw	0
 25511  000DCA  0101               	movlb	1	; () banked
 25512  000DCC  6F32               	movwf	InitGprsNetwork@Index& (0+255),b
 25513                           
 25514                           ;mdm_gsm_gprs_http.c: 132: switch(GprsNetInitState)
 25515  000DCE  D154               	goto	l1202
 25516  000DD0                     
 25517                           ; BSR set to: 1
 25518                           ;mdm_gsm_gprs_http.c: 136: if (ReceiveEvt(&InitNetwork))
 25519                           
 25520                           ; BSR set to: 1
 25521  000DD0  0ED8               	movlw	low _InitNetwork
 25522  000DD2  0100               	movlb	0	; () banked
 25523  000DD4  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 25524  000DD6  0E00               	movlw	high _InitNetwork
 25525  000DD8  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 25526  000DDA  EC6C  F02D         	call	_ReceiveEvt	;wreg free
 25527  000DDE  0900               	iorlw	0
 25528  000DE0  B4D8               	btfsc	status,2,c
 25529  000DE2  D166               	goto	l1205
 25530                           
 25531                           ;mdm_gsm_gprs_http.c: 137: {
 25532                           ;mdm_gsm_gprs_http.c: 139: GprsNetInitState = GprsIn_SetConType;
 25533  000DE4  0E01               	movlw	1
 25534  000DE6  D141               	goto	L68
 25535  000DE8                     
 25536                           ; BSR set to: 1
 25537                           ;mdm_gsm_gprs_http.c: 144: Uart_WriteConstString(1, "AT+SAPBR=3,1,\"Contype\",\"GPRS\"\r
      +                          ");
 25538                           
 25539                           ; BSR set to: 1
 25540  000DE8  0EB6               	movlw	low STR_8
 25541  000DEA  0100               	movlb	0	; () banked
 25542  000DEC  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 25543  000DEE  0EFE               	movlw	high STR_8
 25544  000DF0  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 25545  000DF2  0E01               	movlw	1
 25546  000DF4  EC1C  F02B         	call	_Uart_WriteConstString
 25547                           
 25548                           ;mdm_gsm_gprs_http.c: 146: GprsNetInitState = GprsIn_WaitMdmResp;
 25549  000DF8  0E07               	movlw	7
 25550  000DFA  0101               	movlb	1	; () banked
 25551  000DFC  6FEE               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 25552                           
 25553                           ; BSR set to: 1
 25554                           ;mdm_gsm_gprs_http.c: 147: GprsNetInitNextState = GprsIn_SetApn;
 25555  000DFE  0E02               	movlw	2
 25556  000E00  0100               	movlb	0	; () banked
 25557  000E02  6FCE               	movwf	InitGprsNetwork@GprsNetInitNextState& (0+255),b
 25558                           
 25559                           ; BSR set to: 0
 25560                           ;mdm_gsm_gprs_http.c: 149: OsTmr_StartTimer(&ConnTimeout,20000u);
 25561  000E04  0EF5               	movlw	low _ConnTimeout
 25562  000E06  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 25563  000E08  0E02               	movlw	high _ConnTimeout
 25564  000E0A  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 25565  000E0C  0E20               	movlw	32
 25566  000E0E  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 25567  000E10  0E4E               	movlw	78
 25568  000E12  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 25569  000E14  0E00               	movlw	0
 25570  000E16  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 25571  000E18  0E00               	movlw	0
 25572  000E1A  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 25573  000E1C  EC60  F027         	call	_OsTmr_StartTimer	;wreg free
 25574  000E20  D0C7               	goto	l13343
 25575  000E22                     
 25576                           ; BSR set to: 1
 25577                           ;mdm_gsm_gprs_http.c: 156: ClearBuffer(UartMessage, sizeof(UartMessage));
 25578                           
 25579                           ; BSR set to: 1
 25580  000E22  0E00               	movlw	low InitGprsNetwork@UartMessage
 25581  000E24  0100               	movlb	0	; () banked
 25582  000E26  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 25583  000E28  0E01               	movlw	high InitGprsNetwork@UartMessage
 25584  000E2A  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 25585  000E2C  0E00               	movlw	0
 25586  000E2E  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 25587  000E30  0E32               	movlw	50
 25588  000E32  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 25589  000E34  EC8E  F02C         	call	_ClearBuffer	;wreg free
 25590                           
 25591                           ;mdm_gsm_gprs_http.c: 158: StringCopy((void*)("AT+SAPBR=3,1,\"APN\",\""),UartMessage,20)
      +                          ;
 25592  000E38  0EEA               	movlw	low STR_9
 25593  000E3A  0100               	movlb	0	; () banked
 25594  000E3C  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 25595  000E3E  0EFE               	movlw	high STR_9
 25596  000E40  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 25597  000E42  0E00               	movlw	low InitGprsNetwork@UartMessage
 25598  000E44  6F7F               	movwf	StringCopy@DestStr& (0+255),b
 25599  000E46  0E01               	movlw	high InitGprsNetwork@UartMessage
 25600  000E48  6F80               	movwf	(StringCopy@DestStr+1)& (0+255),b
 25601  000E4A  0E00               	movlw	0
 25602  000E4C  6F82               	movwf	(StringCopy@Len+1)& (0+255),b
 25603  000E4E  0E14               	movlw	20
 25604  000E50  6F81               	movwf	StringCopy@Len& (0+255),b
 25605  000E52  EC00  F027         	call	_StringCopy	;wreg free
 25606                           
 25607                           ;mdm_gsm_gprs_http.c: 160: for (Index = 0; Index < ApnLen; Index++)
 25608  000E56  0E00               	movlw	0
 25609  000E58  0101               	movlb	1	; () banked
 25610  000E5A  6F32               	movwf	InitGprsNetwork@Index& (0+255),b
 25611  000E5C  D01C               	goto	l1208
 25612  000E5E                     
 25613                           ; BSR set to: 1
 25614                           ;mdm_gsm_gprs_http.c: 161: {
 25615                           ;mdm_gsm_gprs_http.c: 162: UartMessage[Index + 20] = *(Apn + Index);
 25616                           
 25617                           ; BSR set to: 1
 25618  000E5E  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 25619  000E60  0D01               	mullw	1
 25620  000E62  50F3               	movf	prodl,w,c
 25621  000E64  0100               	movlb	0	; () banked
 25622  000E66  259B               	addwf	InitGprsNetwork@Apn& (0+255),w,b
 25623  000E68  6ED9               	movwf	fsr2l,c
 25624  000E6A  50F4               	movf	prodh,w,c
 25625  000E6C  219C               	addwfc	(InitGprsNetwork@Apn+1)& (0+255),w,b
 25626  000E6E  6EDA               	movwf	fsr2h,c
 25627  000E70  0101               	movlb	1	; () banked
 25628  000E72  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 25629  000E74  0100               	movlb	0	; () banked
 25630  000E76  6F9E               	movwf	??_InitGprsNetwork& (0+255),b
 25631  000E78  6B9F               	clrf	(??_InitGprsNetwork+1)& (0+255),b
 25632  000E7A  0E14               	movlw	20
 25633  000E7C  279E               	addwf	??_InitGprsNetwork& (0+255),f,b
 25634  000E7E  0E00               	movlw	0
 25635  000E80  239F               	addwfc	(??_InitGprsNetwork+1)& (0+255),f,b
 25636  000E82  0E00               	movlw	low InitGprsNetwork@UartMessage
 25637  000E84  259E               	addwf	??_InitGprsNetwork& (0+255),w,b
 25638  000E86  6EE1               	movwf	fsr1l,c
 25639  000E88  0E01               	movlw	high InitGprsNetwork@UartMessage
 25640  000E8A  219F               	addwfc	(??_InitGprsNetwork+1)& (0+255),w,b
 25641  000E8C  6EE2               	movwf	fsr1h,c
 25642  000E8E  CFDF FFE7          	movff	indf2,indf1
 25643                           
 25644                           ; BSR set to: 0
 25645  000E92  0101               	movlb	1	; () banked
 25646  000E94  2B32               	incf	InitGprsNetwork@Index& (0+255),f,b
 25647  000E96                     l1208:
 25648                           
 25649                           ; BSR set to: 1
 25650                           
 25651                           ; BSR set to: 1
 25652  000E96  0100               	movlb	0	; () banked
 25653  000E98  519D               	movf	InitGprsNetwork@ApnLen& (0+255),w,b
 25654  000E9A  0101               	movlb	1	; () banked
 25655  000E9C  5D32               	subwf	InitGprsNetwork@Index& (0+255),w,b
 25656  000E9E  A0D8               	btfss	status,0,c
 25657  000EA0  D7DE               	goto	l1209
 25658                           
 25659                           ; BSR set to: 1
 25660                           ;mdm_gsm_gprs_http.c: 163: }
 25661                           ;mdm_gsm_gprs_http.c: 165: UartMessage[Index + 20] = '"';
 25662                           
 25663                           ; BSR set to: 1
 25664  000EA2  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 25665  000EA4  0100               	movlb	0	; () banked
 25666  000EA6  6F9E               	movwf	??_InitGprsNetwork& (0+255),b
 25667  000EA8  6B9F               	clrf	(??_InitGprsNetwork+1)& (0+255),b
 25668  000EAA  0E14               	movlw	20
 25669  000EAC  279E               	addwf	??_InitGprsNetwork& (0+255),f,b
 25670  000EAE  0E00               	movlw	0
 25671  000EB0  239F               	addwfc	(??_InitGprsNetwork+1)& (0+255),f,b
 25672  000EB2  0E00               	movlw	low InitGprsNetwork@UartMessage
 25673  000EB4  259E               	addwf	??_InitGprsNetwork& (0+255),w,b
 25674  000EB6  6ED9               	movwf	fsr2l,c
 25675  000EB8  0E01               	movlw	high InitGprsNetwork@UartMessage
 25676  000EBA  219F               	addwfc	(??_InitGprsNetwork+1)& (0+255),w,b
 25677  000EBC  6EDA               	movwf	fsr2h,c
 25678  000EBE  0E22               	movlw	34
 25679  000EC0  6EDF               	movwf	indf2,c
 25680                           
 25681                           ;mdm_gsm_gprs_http.c: 166: UartMessage[Index + 21] = '\r';
 25682  000EC2  0101               	movlb	1	; () banked
 25683  000EC4  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 25684  000EC6  0100               	movlb	0	; () banked
 25685  000EC8  6F9E               	movwf	??_InitGprsNetwork& (0+255),b
 25686  000ECA  6B9F               	clrf	(??_InitGprsNetwork+1)& (0+255),b
 25687  000ECC  0E15               	movlw	21
 25688  000ECE  279E               	addwf	??_InitGprsNetwork& (0+255),f,b
 25689  000ED0  0E00               	movlw	0
 25690  000ED2  239F               	addwfc	(??_InitGprsNetwork+1)& (0+255),f,b
 25691  000ED4  0E00               	movlw	low InitGprsNetwork@UartMessage
 25692  000ED6  259E               	addwf	??_InitGprsNetwork& (0+255),w,b
 25693  000ED8  6ED9               	movwf	fsr2l,c
 25694  000EDA  0E01               	movlw	high InitGprsNetwork@UartMessage
 25695  000EDC  219F               	addwfc	(??_InitGprsNetwork+1)& (0+255),w,b
 25696  000EDE  6EDA               	movwf	fsr2h,c
 25697  000EE0  0E0D               	movlw	13
 25698  000EE2  6EDF               	movwf	indf2,c
 25699                           
 25700                           ;mdm_gsm_gprs_http.c: 167: UartMessage[Index + 22] = (0);
 25701  000EE4  0101               	movlb	1	; () banked
 25702  000EE6  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 25703  000EE8  0100               	movlb	0	; () banked
 25704  000EEA  6F9E               	movwf	??_InitGprsNetwork& (0+255),b
 25705  000EEC  6B9F               	clrf	(??_InitGprsNetwork+1)& (0+255),b
 25706  000EEE  0E16               	movlw	22
 25707  000EF0  279E               	addwf	??_InitGprsNetwork& (0+255),f,b
 25708  000EF2  0E00               	movlw	0
 25709  000EF4  239F               	addwfc	(??_InitGprsNetwork+1)& (0+255),f,b
 25710  000EF6  0E00               	movlw	low InitGprsNetwork@UartMessage
 25711  000EF8  259E               	addwf	??_InitGprsNetwork& (0+255),w,b
 25712  000EFA  6ED9               	movwf	fsr2l,c
 25713  000EFC  0E01               	movlw	high InitGprsNetwork@UartMessage
 25714  000EFE  219F               	addwfc	(??_InitGprsNetwork+1)& (0+255),w,b
 25715  000F00  6EDA               	movwf	fsr2h,c
 25716  000F02  0E00               	movlw	0
 25717  000F04  6EDF               	movwf	indf2,c
 25718                           
 25719                           ; BSR set to: 0
 25720                           ;mdm_gsm_gprs_http.c: 169: Uart_WriteString(1, UartMessage);
 25721  000F06  0E00               	movlw	low InitGprsNetwork@UartMessage
 25722  000F08  6F80               	movwf	Uart_WriteString@StringToWrite& (0+255),b
 25723  000F0A  0E01               	movlw	high InitGprsNetwork@UartMessage
 25724  000F0C  6F81               	movwf	(Uart_WriteString@StringToWrite+1)& (0+255),b
 25725  000F0E  0E01               	movlw	1
 25726  000F10  ECDC  F02B         	call	_Uart_WriteString
 25727                           
 25728                           ;mdm_gsm_gprs_http.c: 171: GprsNetInitState = GprsIn_WaitMdmResp;
 25729  000F14  0E07               	movlw	7
 25730  000F16  0101               	movlb	1	; () banked
 25731  000F18  6FEE               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 25732                           
 25733                           ; BSR set to: 1
 25734                           ;mdm_gsm_gprs_http.c: 172: GprsNetInitNextState = GprsIn_EnGprs;
 25735  000F1A  0E03               	movlw	3
 25736  000F1C  0100               	movlb	0	; () banked
 25737  000F1E  6FCE               	movwf	InitGprsNetwork@GprsNetInitNextState& (0+255),b
 25738                           
 25739                           ; BSR set to: 0
 25740                           ;mdm_gsm_gprs_http.c: 174: OsTmr_StartTimer(&ConnTimeout,20000u);
 25741  000F20  0EF5               	movlw	low _ConnTimeout
 25742  000F22  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 25743  000F24  0E02               	movlw	high _ConnTimeout
 25744  000F26  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 25745  000F28  0E20               	movlw	32
 25746  000F2A  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 25747  000F2C  0E4E               	movlw	78
 25748  000F2E  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 25749  000F30  0E00               	movlw	0
 25750  000F32  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 25751  000F34  0E00               	movlw	0
 25752  000F36  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 25753  000F38  EC60  F027         	call	_OsTmr_StartTimer	;wreg free
 25754  000F3C  D039               	goto	l13343
 25755  000F3E                     
 25756                           ; BSR set to: 1
 25757                           ;mdm_gsm_gprs_http.c: 181: Uart_WriteConstString(1, "AT+SAPBR=1,1\r");
 25758                           
 25759                           ; BSR set to: 1
 25760  000F3E  0E57               	movlw	low STR_10
 25761  000F40  0100               	movlb	0	; () banked
 25762  000F42  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 25763  000F44  0EFF               	movlw	high STR_10
 25764  000F46  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 25765  000F48  0E01               	movlw	1
 25766  000F4A  EC1C  F02B         	call	_Uart_WriteConstString
 25767                           
 25768                           ;mdm_gsm_gprs_http.c: 183: GprsNetInitState = GprsIn_WaitMdmResp;
 25769  000F4E  0E07               	movlw	7
 25770  000F50  0101               	movlb	1	; () banked
 25771  000F52  6FEE               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 25772                           
 25773                           ; BSR set to: 1
 25774                           ;mdm_gsm_gprs_http.c: 184: GprsNetInitNextState = GprsIn_Done;
 25775  000F54  0E05               	movlw	5
 25776  000F56  0100               	movlb	0	; () banked
 25777  000F58  6FCE               	movwf	InitGprsNetwork@GprsNetInitNextState& (0+255),b
 25778                           
 25779                           ; BSR set to: 0
 25780                           ;mdm_gsm_gprs_http.c: 186: OsTmr_StartTimer(&ConnTimeout,20000u);
 25781  000F5A  0EF5               	movlw	low _ConnTimeout
 25782  000F5C  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 25783  000F5E  0E02               	movlw	high _ConnTimeout
 25784  000F60  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 25785  000F62  0E20               	movlw	32
 25786  000F64  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 25787  000F66  0E4E               	movlw	78
 25788  000F68  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 25789  000F6A  0E00               	movlw	0
 25790  000F6C  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 25791  000F6E  0E00               	movlw	0
 25792  000F70  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 25793  000F72  EC60  F027         	call	_OsTmr_StartTimer	;wreg free
 25794  000F76  D01C               	goto	l13343
 25795  000F78                     
 25796                           ; BSR set to: 1
 25797                           ;mdm_gsm_gprs_http.c: 193: Uart_WriteConstString(1, "AT+SAPBR=2,1\r");
 25798                           
 25799                           ; BSR set to: 1
 25800  000F78  0E65               	movlw	low STR_11
 25801  000F7A  0100               	movlb	0	; () banked
 25802  000F7C  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 25803  000F7E  0EFF               	movlw	high STR_11
 25804  000F80  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 25805  000F82  0E01               	movlw	1
 25806  000F84  EC1C  F02B         	call	_Uart_WriteConstString
 25807                           
 25808                           ;mdm_gsm_gprs_http.c: 195: GprsNetInitState = GprsIn_WaitGetIp;
 25809  000F88  0E08               	movlw	8
 25810  000F8A  0101               	movlb	1	; () banked
 25811  000F8C  6FEE               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 25812                           
 25813                           ; BSR set to: 1
 25814                           ;mdm_gsm_gprs_http.c: 196: GprsNetInitNextState = GprsIn_Done;
 25815  000F8E  0E05               	movlw	5
 25816  000F90  0100               	movlb	0	; () banked
 25817  000F92  6FCE               	movwf	InitGprsNetwork@GprsNetInitNextState& (0+255),b
 25818                           
 25819                           ; BSR set to: 0
 25820                           ;mdm_gsm_gprs_http.c: 198: OsTmr_StartTimer(&ConnTimeout,20000u);
 25821  000F94  0EF5               	movlw	low _ConnTimeout
 25822  000F96  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 25823  000F98  0E02               	movlw	high _ConnTimeout
 25824  000F9A  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 25825  000F9C  0E20               	movlw	32
 25826  000F9E  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 25827  000FA0  0E4E               	movlw	78
 25828  000FA2  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 25829  000FA4  0E00               	movlw	0
 25830  000FA6  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 25831  000FA8  0E00               	movlw	0
 25832  000FAA  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 25833  000FAC  EC60  F027         	call	_OsTmr_StartTimer	;wreg free
 25834  000FB0                     l13343:
 25835                           
 25836                           ;mdm_gsm_gprs_http.c: 200: GprsInitSts = GprsSts_InProg;
 25837  000FB0  0E01               	movlw	1
 25838  000FB2  0101               	movlb	1	; () banked
 25839  000FB4  6FFE               	movwf	InitGprsNetwork@GprsInitSts& (0+255),b
 25840                           
 25841                           ;mdm_gsm_gprs_http.c: 201: break;
 25842  000FB6  D07C               	goto	l1205
 25843  000FB8                     
 25844                           ; BSR set to: 1
 25845                           ;mdm_gsm_gprs_http.c: 205: GprsInitSts = GprsSts_Completed;
 25846                           
 25847                           ; BSR set to: 1
 25848  000FB8  0E02               	movlw	2
 25849  000FBA  D05A               	goto	L67
 25850  000FBC                     
 25851                           ; BSR set to: 1
 25852                           ;mdm_gsm_gprs_http.c: 211: if (ReceiveEvt(&NewStringReceived))
 25853                           
 25854                           ; BSR set to: 1
 25855  000FBC  0E3C               	movlw	low _NewStringReceived
 25856  000FBE  0100               	movlb	0	; () banked
 25857  000FC0  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 25858  000FC2  0E00               	movlw	high _NewStringReceived
 25859  000FC4  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 25860  000FC6  EC6C  F02D         	call	_ReceiveEvt	;wreg free
 25861  000FCA  0900               	iorlw	0
 25862  000FCC  B4D8               	btfsc	status,2,c
 25863  000FCE  D018               	goto	l1215
 25864                           
 25865                           ;mdm_gsm_gprs_http.c: 212: {
 25866                           ;mdm_gsm_gprs_http.c: 214: if ((RxBuffer[0] == 'O') && (RxBuffer[1] == 'K'))
 25867  000FD0  CC58  FFE8         	movff	_RxBuffer,wreg
 25868  000FD4  0A4F               	xorlw	79
 25869  000FD6  A4D8               	btfss	status,2,c
 25870  000FD8  D06B               	goto	l1205
 25871  000FDA  CC59  FFE8         	movff	_RxBuffer+1,wreg
 25872  000FDE  0A4B               	xorlw	75
 25873  000FE0  A4D8               	btfss	status,2,c
 25874  000FE2  D066               	goto	l1205
 25875                           
 25876                           ;mdm_gsm_gprs_http.c: 215: {
 25877                           ;mdm_gsm_gprs_http.c: 217: GprsNetInitState = GprsNetInitNextState;
 25878  000FE4  C0CE  F1EE         	movff	InitGprsNetwork@GprsNetInitNextState,InitGprsNetwork@GprsNetInitState
 25879                           
 25880                           ;mdm_gsm_gprs_http.c: 219: ClearBuffer(RxBuffer,((UINT16)(400)));
 25881  000FE8  0E58               	movlw	low _RxBuffer
 25882  000FEA  0100               	movlb	0	; () banked
 25883  000FEC  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 25884  000FEE  0E0C               	movlw	high _RxBuffer
 25885  000FF0  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 25886  000FF2  0E01               	movlw	1
 25887  000FF4  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 25888  000FF6  0E90               	movlw	144
 25889  000FF8  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 25890  000FFA  EC8E  F02C         	call	_ClearBuffer	;wreg free
 25891                           
 25892                           ;mdm_gsm_gprs_http.c: 220: }
 25893                           ;mdm_gsm_gprs_http.c: 221: }
 25894  000FFE  D058               	goto	l1205
 25895  001000                     l1215:
 25896                           
 25897                           ;mdm_gsm_gprs_http.c: 222: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 25898  001000  0EF5               	movlw	low _ConnTimeout
 25899  001002  0100               	movlb	0	; () banked
 25900  001004  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 25901  001006  0E02               	movlw	high _ConnTimeout
 25902  001008  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 25903  00100A  ECE9  F023         	call	_OsTmr_GetTimerStatus	;wreg free
 25904  00100E  D029               	goto	L32
 25905  001010                     
 25906                           ; BSR set to: 1
 25907                           ;mdm_gsm_gprs_http.c: 231: if (ReceiveEvt(&NewStringReceived))
 25908                           
 25909                           ; BSR set to: 1
 25910  001010  0E3C               	movlw	low _NewStringReceived
 25911  001012  0100               	movlb	0	; () banked
 25912  001014  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 25913  001016  0E00               	movlw	high _NewStringReceived
 25914  001018  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 25915  00101A  EC6C  F02D         	call	_ReceiveEvt	;wreg free
 25916  00101E  0900               	iorlw	0
 25917  001020  B4D8               	btfsc	status,2,c
 25918  001022  D018               	goto	l1220
 25919                           
 25920                           ;mdm_gsm_gprs_http.c: 232: {
 25921                           ;mdm_gsm_gprs_http.c: 234: if ((RxBuffer[0] == '+') && (RxBuffer[1] == 'S'))
 25922  001024  CC58  FFE8         	movff	_RxBuffer,wreg
 25923  001028  0A2B               	xorlw	43
 25924  00102A  A4D8               	btfss	status,2,c
 25925  00102C  D041               	goto	l1205
 25926  00102E  CC59  FFE8         	movff	_RxBuffer+1,wreg
 25927  001032  0A53               	xorlw	83
 25928  001034  A4D8               	btfss	status,2,c
 25929  001036  D03C               	goto	l1205
 25930                           
 25931                           ;mdm_gsm_gprs_http.c: 235: {
 25932                           ;mdm_gsm_gprs_http.c: 237: GprsNetInitState = GprsNetInitNextState;
 25933  001038  C0CE  F1EE         	movff	InitGprsNetwork@GprsNetInitNextState,InitGprsNetwork@GprsNetInitState
 25934                           
 25935                           ;mdm_gsm_gprs_http.c: 239: ClearBuffer(RxBuffer,((UINT16)(400)));
 25936  00103C  0E58               	movlw	low _RxBuffer
 25937  00103E  0100               	movlb	0	; () banked
 25938  001040  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 25939  001042  0E0C               	movlw	high _RxBuffer
 25940  001044  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 25941  001046  0E01               	movlw	1
 25942  001048  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 25943  00104A  0E90               	movlw	144
 25944  00104C  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 25945  00104E  EC8E  F02C         	call	_ClearBuffer	;wreg free
 25946                           
 25947                           ;mdm_gsm_gprs_http.c: 240: }
 25948                           ;mdm_gsm_gprs_http.c: 241: }
 25949  001052  D02E               	goto	l1205
 25950  001054                     l1220:
 25951                           
 25952                           ;mdm_gsm_gprs_http.c: 242: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 25953  001054  0EF5               	movlw	low _ConnTimeout
 25954  001056  0100               	movlb	0	; () banked
 25955  001058  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 25956  00105A  0E02               	movlw	high _ConnTimeout
 25957  00105C  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 25958  00105E  ECE9  F023         	call	_OsTmr_GetTimerStatus	;wreg free
 25959  001062                     L32:
 25960  001062  06E8               	decf	wreg,f,c
 25961  001064  A4D8               	btfss	status,2,c
 25962  001066  D024               	goto	l1205
 25963                           
 25964                           ;mdm_gsm_gprs_http.c: 243: {
 25965                           ;mdm_gsm_gprs_http.c: 245: GprsNetInitState = GprsIn_Fail;
 25966  001068  0E06               	movlw	6
 25967  00106A                     L68:
 25968  00106A  0101               	movlb	1	; () banked
 25969  00106C  D003               	goto	L31
 25970  00106E                     
 25971                           ; BSR set to: 1
 25972                           ;mdm_gsm_gprs_http.c: 251: GprsInitSts = GprsSts_Failed;
 25973                           
 25974                           ; BSR set to: 1
 25975  00106E  0E03               	movlw	3
 25976  001070                     L67:
 25977  001070  6FFE               	movwf	InitGprsNetwork@GprsInitSts& (0+255),b
 25978                           
 25979                           ;mdm_gsm_gprs_http.c: 252: GprsNetInitState = GprsIn_Idle;
 25980  001072  0E00               	movlw	0
 25981  001074                     L31:
 25982  001074  6FEE               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 25983                           
 25984                           ; BSR set to: 1
 25985                           ;mdm_gsm_gprs_http.c: 257: }
 25986                           
 25987                           ; BSR set to: 1
 25988                           ;mdm_gsm_gprs_http.c: 256: break;
 25989                           
 25990                           ;mdm_gsm_gprs_http.c: 255: default:
 25991                           
 25992                           ;mdm_gsm_gprs_http.c: 253: break;
 25993  001076  D01C               	goto	l1205
 25994  001078                     l1202:
 25995                           
 25996                           ; BSR set to: 1
 25997                           
 25998                           ; BSR set to: 1
 25999  001078  51EE               	movf	InitGprsNetwork@GprsNetInitState& (0+255),w,b
 26000                           
 26001                           ; Switch size 1, requested type "space"
 26002                           ; Number of cases is 9, Range of values is 0 to 8
 26003                           ; switch strategies available:
 26004                           ; Name         Instructions Cycles
 26005                           ; simple_byte           28    15 (average)
 26006                           ;	Chosen strategy is simple_byte
 26007  00107A  0A00               	xorlw	0	; case 0
 26008  00107C  B4D8               	btfsc	status,2,c
 26009  00107E  D6A8               	goto	l1203
 26010  001080  0A01               	xorlw	1	; case 1
 26011  001082  B4D8               	btfsc	status,2,c
 26012  001084  D6B1               	goto	l1206
 26013  001086  0A03               	xorlw	3	; case 2
 26014  001088  B4D8               	btfsc	status,2,c
 26015  00108A  D6CB               	goto	l1207
 26016  00108C  0A01               	xorlw	1	; case 3
 26017  00108E  B4D8               	btfsc	status,2,c
 26018  001090  D756               	goto	l1211
 26019  001092  0A07               	xorlw	7	; case 4
 26020  001094  B4D8               	btfsc	status,2,c
 26021  001096  D770               	goto	l1212
 26022  001098  0A01               	xorlw	1	; case 5
 26023  00109A  B4D8               	btfsc	status,2,c
 26024  00109C  D78D               	goto	l1213
 26025  00109E  0A03               	xorlw	3	; case 6
 26026  0010A0  B4D8               	btfsc	status,2,c
 26027  0010A2  D7E5               	goto	l1224
 26028  0010A4  0A01               	xorlw	1	; case 7
 26029  0010A6  B4D8               	btfsc	status,2,c
 26030  0010A8  D789               	goto	l1214
 26031  0010AA  0A0F               	xorlw	15	; case 8
 26032  0010AC  B4D8               	btfsc	status,2,c
 26033  0010AE  D7B0               	goto	l1219
 26034  0010B0                     l1205:
 26035                           
 26036                           ;mdm_gsm_gprs_http.c: 260: return GprsInitSts;
 26037                           
 26038                           ; BSR set to: 1
 26039  0010B0  0101               	movlb	1	; () banked
 26040  0010B2  51FE               	movf	InitGprsNetwork@GprsInitSts& (0+255),w,b
 26041  0010B4  0012               	return	
 26042  0010B6                     __end_of_InitGprsNetwork:
 26043                           	opt stack 0
 26044                           tosu	equ	0xFFF
 26045                           tosh	equ	0xFFE
 26046                           tosl	equ	0xFFD
 26047                           pclath	equ	0xFFA
 26048                           tblptru	equ	0xFF8
 26049                           tblptrh	equ	0xFF7
 26050                           tblptrl	equ	0xFF6
 26051                           tablat	equ	0xFF5
 26052                           prodh	equ	0xFF4
 26053                           prodl	equ	0xFF3
 26054                           intcon	equ	0xFF2
 26055                           intcon2	equ	0xFF1
 26056                           intcon3	equ	0xFF0
 26057                           indf0	equ	0xFEF
 26058                           postinc0	equ	0xFEE
 26059                           plusw0	equ	0xFEB
 26060                           fsr0h	equ	0xFEA
 26061                           fsr0l	equ	0xFE9
 26062                           wreg	equ	0xFE8
 26063                           indf1	equ	0xFE7
 26064                           postinc1	equ	0xFE6
 26065                           postdec1	equ	0xFE5
 26066                           plusw1	equ	0xFE3
 26067                           fsr1h	equ	0xFE2
 26068                           fsr1l	equ	0xFE1
 26069                           indf2	equ	0xFDF
 26070                           postinc2	equ	0xFDE
 26071                           postdec2	equ	0xFDD
 26072                           plusw2	equ	0xFDB
 26073                           fsr2h	equ	0xFDA
 26074                           fsr2l	equ	0xFD9
 26075                           status	equ	0xFD8
 26076                           
 26077 ;; *************** function _HttpGetMethod *****************
 26078 ;; Defined at:
 26079 ;;		line 271 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs_http.c"
 26080 ;; Parameters:    Size  Location     Type
 26081 ;;  GetData         2   59[BANK0 ] PTR struct _HttpGetDataT
 26082 ;;		 -> HttpGetDataLocal(5), 
 26083 ;; Auto vars:     Size  Location     Type
 26084 ;;  UartMessage   200    0[BANK1 ] unsigned char [200]
 26085 ;;  Index           1  200[BANK1 ] unsigned char 
 26086 ;; Return value:  Size  Location     Type
 26087 ;;                  1    wreg      enum E8905
 26088 ;; Registers used:
 26089 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26090 ;; Tracked objects:
 26091 ;;		On entry : 0/0
 26092 ;;		On exit  : 0/0
 26093 ;;		Unchanged: 0/0
 26094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26095 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26096 ;;      Locals:         0       0     201       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26097 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26098 ;;      Totals:         0       6     201       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26099 ;;Total ram usage:      207 bytes
 26100 ;; Hardware stack levels used:    1
 26101 ;; Hardware stack levels required when called:   14
 26102 ;; This function calls:
 26103 ;;		_ClearBuffer
 26104 ;;		_OsTmr_GetTimerStatus
 26105 ;;		_OsTmr_StartTimer
 26106 ;;		_ReceiveEvt
 26107 ;;		_StringCopy
 26108 ;;		_Uart_WriteConstString
 26109 ;;		_Uart_WriteString
 26110 ;; This function is called by:
 26111 ;;		_MdmHttp_MainTask
 26112 ;; This function uses a non-reentrant model
 26113 ;;
 26114                           
 26115                           	psect	text119
 26116  0005EC                     __ptext119:
 26117                           	opt stack 0
 26118  0005EC                     _HttpGetMethod:
 26119                           	opt stack 13
 26120                           
 26121                           ;mdm_gsm_gprs_http.c: 273: static GetMethodType GetMethodState = GetM_Idle;
 26122                           ;mdm_gsm_gprs_http.c: 274: static GetMethodType GetMethodNextState = GetM_Idle;
 26123                           ;mdm_gsm_gprs_http.c: 275: static GetMethodStsType GetMOutSts = GetMOut_Idle;
 26124                           ;mdm_gsm_gprs_http.c: 276: UINT8 UartMessage[200];
 26125                           ;mdm_gsm_gprs_http.c: 277: UINT8 Index = 0;
 26126                           
 26127                           ; BSR set to: 1
 26128                           ;incstack = 0
 26129  0005EC  0E00               	movlw	0
 26130  0005EE  0101               	movlb	1	; () banked
 26131  0005F0  6FC8               	movwf	HttpGetMethod@Index& (0+255),b
 26132                           
 26133                           ;mdm_gsm_gprs_http.c: 279: switch (GetMethodState)
 26134  0005F2  D230               	goto	l1235
 26135  0005F4                     
 26136                           ; BSR set to: 1
 26137                           ;mdm_gsm_gprs_http.c: 283: if (ReceiveEvt(&GetMethod))
 26138                           
 26139                           ; BSR set to: 1
 26140  0005F4  0ED7               	movlw	low _GetMethod
 26141  0005F6  0100               	movlb	0	; () banked
 26142  0005F8  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 26143  0005FA  0E00               	movlw	high _GetMethod
 26144  0005FC  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 26145  0005FE  EC6C  F02D         	call	_ReceiveEvt	;wreg free
 26146  000602  0900               	iorlw	0
 26147  000604  B4D8               	btfsc	status,2,c
 26148  000606  D257               	goto	l1238
 26149                           
 26150                           ;mdm_gsm_gprs_http.c: 284: {
 26151                           ;mdm_gsm_gprs_http.c: 286: GetMethodState = GetM_HttpInit;
 26152  000608  0E01               	movlw	1
 26153  00060A  D18C               	goto	L34
 26154  00060C                     
 26155                           ; BSR set to: 1
 26156                           ;mdm_gsm_gprs_http.c: 291: Uart_WriteConstString(1, "AT+HTTPINIT\r");
 26157                           
 26158                           ; BSR set to: 1
 26159  00060C  0EA9               	movlw	low STR_12
 26160  00060E  0100               	movlb	0	; () banked
 26161  000610  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 26162  000612  0EFF               	movlw	high STR_12
 26163  000614  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 26164  000616  0E01               	movlw	1
 26165  000618  EC1C  F02B         	call	_Uart_WriteConstString
 26166                           
 26167                           ;mdm_gsm_gprs_http.c: 293: GetMethodState = GetM_WaitMdmResp;
 26168  00061C  0E0A               	movlw	10
 26169  00061E  0101               	movlb	1	; () banked
 26170  000620  6FED               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 26171                           
 26172                           ; BSR set to: 1
 26173                           ;mdm_gsm_gprs_http.c: 294: GetMethodNextState = GetM_HttpSsl;
 26174  000622  0E02               	movlw	2
 26175  000624  0100               	movlb	0	; () banked
 26176  000626  6FCD               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 26177                           
 26178                           ; BSR set to: 0
 26179                           ;mdm_gsm_gprs_http.c: 296: OsTmr_StartTimer(&ConnTimeout,20000u);
 26180  000628  0EF5               	movlw	low _ConnTimeout
 26181  00062A  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 26182  00062C  0E02               	movlw	high _ConnTimeout
 26183  00062E  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 26184  000630  0E20               	movlw	32
 26185  000632  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 26186  000634  0E4E               	movlw	78
 26187  000636  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 26188  000638  0E00               	movlw	0
 26189  00063A  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 26190  00063C  0E00               	movlw	0
 26191  00063E  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 26192  000640  EC60  F027         	call	_OsTmr_StartTimer	;wreg free
 26193  000644  D1AF               	goto	l13509
 26194  000646                     
 26195                           ; BSR set to: 1
 26196                           ;mdm_gsm_gprs_http.c: 303: Uart_WriteConstString(1, "AT+HTTPSSL=1\r");
 26197                           
 26198                           ; BSR set to: 1
 26199  000646  0E73               	movlw	low STR_13
 26200  000648  0100               	movlb	0	; () banked
 26201  00064A  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 26202  00064C  0EFF               	movlw	high STR_13
 26203  00064E  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 26204  000650  0E01               	movlw	1
 26205  000652  EC1C  F02B         	call	_Uart_WriteConstString
 26206                           
 26207                           ;mdm_gsm_gprs_http.c: 305: GetMethodState = GetM_WaitMdmResp;
 26208  000656  0E0A               	movlw	10
 26209  000658  0101               	movlb	1	; () banked
 26210  00065A  6FED               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 26211                           
 26212                           ; BSR set to: 1
 26213                           ;mdm_gsm_gprs_http.c: 306: GetMethodNextState = GetM_SetBearerProf;
 26214  00065C  0E03               	movlw	3
 26215  00065E  0100               	movlb	0	; () banked
 26216  000660  6FCD               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 26217                           
 26218                           ; BSR set to: 0
 26219                           ;mdm_gsm_gprs_http.c: 308: OsTmr_StartTimer(&ConnTimeout,20000u);
 26220  000662  0EF5               	movlw	low _ConnTimeout
 26221  000664  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 26222  000666  0E02               	movlw	high _ConnTimeout
 26223  000668  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 26224  00066A  0E20               	movlw	32
 26225  00066C  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 26226  00066E  0E4E               	movlw	78
 26227  000670  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 26228  000672  0E00               	movlw	0
 26229  000674  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 26230  000676  0E00               	movlw	0
 26231  000678  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 26232  00067A  EC60  F027         	call	_OsTmr_StartTimer	;wreg free
 26233  00067E  D192               	goto	l13509
 26234  000680                     
 26235                           ; BSR set to: 1
 26236                           ;mdm_gsm_gprs_http.c: 315: Uart_WriteConstString(1, "AT+HTTPPARA=\"CID\",1\r");
 26237                           
 26238                           ; BSR set to: 1
 26239  000680  0ED5               	movlw	low STR_14
 26240  000682  0100               	movlb	0	; () banked
 26241  000684  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 26242  000686  0EFE               	movlw	high STR_14
 26243  000688  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 26244  00068A  0E01               	movlw	1
 26245  00068C  EC1C  F02B         	call	_Uart_WriteConstString
 26246                           
 26247                           ;mdm_gsm_gprs_http.c: 317: GetMethodState = GetM_WaitMdmResp;
 26248  000690  0E0A               	movlw	10
 26249  000692  0101               	movlb	1	; () banked
 26250  000694  6FED               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 26251                           
 26252                           ; BSR set to: 1
 26253                           ;mdm_gsm_gprs_http.c: 318: GetMethodNextState = GetM_SetUrlAddr;
 26254  000696  0E04               	movlw	4
 26255  000698  0100               	movlb	0	; () banked
 26256  00069A  6FCD               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 26257                           
 26258                           ; BSR set to: 0
 26259                           ;mdm_gsm_gprs_http.c: 320: OsTmr_StartTimer(&ConnTimeout,20000u);
 26260  00069C  0EF5               	movlw	low _ConnTimeout
 26261  00069E  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 26262  0006A0  0E02               	movlw	high _ConnTimeout
 26263  0006A2  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 26264  0006A4  0E20               	movlw	32
 26265  0006A6  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 26266  0006A8  0E4E               	movlw	78
 26267  0006AA  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 26268  0006AC  0E00               	movlw	0
 26269  0006AE  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 26270  0006B0  0E00               	movlw	0
 26271  0006B2  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 26272  0006B4  EC60  F027         	call	_OsTmr_StartTimer	;wreg free
 26273  0006B8  D175               	goto	l13509
 26274  0006BA                     
 26275                           ; BSR set to: 1
 26276                           ;mdm_gsm_gprs_http.c: 327: ClearBuffer(UartMessage, sizeof(UartMessage));
 26277                           
 26278                           ; BSR set to: 1
 26279  0006BA  0E00               	movlw	low HttpGetMethod@UartMessage
 26280  0006BC  0100               	movlb	0	; () banked
 26281  0006BE  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 26282  0006C0  0E01               	movlw	high HttpGetMethod@UartMessage
 26283  0006C2  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 26284  0006C4  0E00               	movlw	0
 26285  0006C6  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 26286  0006C8  0EC8               	movlw	200
 26287  0006CA  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 26288  0006CC  EC8E  F02C         	call	_ClearBuffer	;wreg free
 26289                           
 26290                           ;mdm_gsm_gprs_http.c: 329: StringCopy((void*)("AT+HTTPPARA=\"URL\",\""),UartMessage,19);
 26291  0006D0  0E13               	movlw	low STR_15
 26292  0006D2  0100               	movlb	0	; () banked
 26293  0006D4  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 26294  0006D6  0EFF               	movlw	high STR_15
 26295  0006D8  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 26296  0006DA  0E00               	movlw	low HttpGetMethod@UartMessage
 26297  0006DC  6F7F               	movwf	StringCopy@DestStr& (0+255),b
 26298  0006DE  0E01               	movlw	high HttpGetMethod@UartMessage
 26299  0006E0  6F80               	movwf	(StringCopy@DestStr+1)& (0+255),b
 26300  0006E2  0E00               	movlw	0
 26301  0006E4  6F82               	movwf	(StringCopy@Len+1)& (0+255),b
 26302  0006E6  0E13               	movlw	19
 26303  0006E8  6F81               	movwf	StringCopy@Len& (0+255),b
 26304  0006EA  EC00  F027         	call	_StringCopy	;wreg free
 26305                           
 26306                           ;mdm_gsm_gprs_http.c: 331: for (Index = 0; Index < GetData->UrlLen; Index++)
 26307  0006EE  0E00               	movlw	0
 26308  0006F0  0101               	movlb	1	; () banked
 26309  0006F2  6FC8               	movwf	HttpGetMethod@Index& (0+255),b
 26310  0006F4  D024               	goto	l1243
 26311  0006F6                     
 26312                           ; BSR set to: 1
 26313                           ;mdm_gsm_gprs_http.c: 332: {
 26314                           ;mdm_gsm_gprs_http.c: 333: UartMessage[Index + 19] = *(GetData->Url + Index);
 26315                           
 26316                           ; BSR set to: 1
 26317  0006F6  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 26318  0006F8  0D01               	mullw	1
 26319  0006FA  C09B  FFD9         	movff	HttpGetMethod@GetData,fsr2l
 26320  0006FE  C09C  FFDA         	movff	HttpGetMethod@GetData+1,fsr2h
 26321  000702  CFDE F09D          	movff	postinc2,??_HttpGetMethod
 26322  000706  CFDD F09E          	movff	postdec2,??_HttpGetMethod+1
 26323  00070A  50F3               	movf	prodl,w,c
 26324  00070C  0100               	movlb	0	; () banked
 26325  00070E  259D               	addwf	??_HttpGetMethod& (0+255),w,b
 26326  000710  6ED9               	movwf	fsr2l,c
 26327  000712  50F4               	movf	prodh,w,c
 26328  000714  219E               	addwfc	(??_HttpGetMethod+1)& (0+255),w,b
 26329  000716  6EDA               	movwf	fsr2h,c
 26330  000718  0101               	movlb	1	; () banked
 26331  00071A  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 26332  00071C  0100               	movlb	0	; () banked
 26333  00071E  6F9F               	movwf	(??_HttpGetMethod+2)& (0+255),b
 26334  000720  6BA0               	clrf	(??_HttpGetMethod+3)& (0+255),b
 26335  000722  0E13               	movlw	19
 26336  000724  279F               	addwf	(??_HttpGetMethod+2)& (0+255),f,b
 26337  000726  0E00               	movlw	0
 26338  000728  23A0               	addwfc	(??_HttpGetMethod+3)& (0+255),f,b
 26339  00072A  0E00               	movlw	low HttpGetMethod@UartMessage
 26340  00072C  259F               	addwf	(??_HttpGetMethod+2)& (0+255),w,b
 26341  00072E  6EE1               	movwf	fsr1l,c
 26342  000730  0E01               	movlw	high HttpGetMethod@UartMessage
 26343  000732  21A0               	addwfc	(??_HttpGetMethod+3)& (0+255),w,b
 26344  000734  6EE2               	movwf	fsr1h,c
 26345  000736  CFDF FFE7          	movff	indf2,indf1
 26346                           
 26347                           ; BSR set to: 0
 26348  00073A  0101               	movlb	1	; () banked
 26349  00073C  2BC8               	incf	HttpGetMethod@Index& (0+255),f,b
 26350  00073E                     l1243:
 26351                           
 26352                           ; BSR set to: 1
 26353                           
 26354                           ; BSR set to: 1
 26355  00073E  0100               	movlb	0	; () banked
 26356  000740  EE20 F002          	lfsr	2,2
 26357  000744  519B               	movf	HttpGetMethod@GetData& (0+255),w,b
 26358  000746  26D9               	addwf	fsr2l,f,c
 26359  000748  519C               	movf	(HttpGetMethod@GetData+1)& (0+255),w,b
 26360  00074A  22DA               	addwfc	fsr2h,f,c
 26361  00074C  50DE               	movf	postinc2,w,c
 26362  00074E  0101               	movlb	1	; () banked
 26363  000750  5DC8               	subwf	HttpGetMethod@Index& (0+255),w,b
 26364  000752  A0D8               	btfss	status,0,c
 26365  000754  D7D0               	goto	l1244
 26366                           
 26367                           ; BSR set to: 1
 26368                           ;mdm_gsm_gprs_http.c: 334: }
 26369                           ;mdm_gsm_gprs_http.c: 336: UartMessage[Index + 19] = '"';
 26370                           
 26371                           ; BSR set to: 1
 26372  000756  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 26373  000758  0100               	movlb	0	; () banked
 26374  00075A  6F9D               	movwf	??_HttpGetMethod& (0+255),b
 26375  00075C  6B9E               	clrf	(??_HttpGetMethod+1)& (0+255),b
 26376  00075E  0E13               	movlw	19
 26377  000760  279D               	addwf	??_HttpGetMethod& (0+255),f,b
 26378  000762  0E00               	movlw	0
 26379  000764  239E               	addwfc	(??_HttpGetMethod+1)& (0+255),f,b
 26380  000766  0E00               	movlw	low HttpGetMethod@UartMessage
 26381  000768  259D               	addwf	??_HttpGetMethod& (0+255),w,b
 26382  00076A  6ED9               	movwf	fsr2l,c
 26383  00076C  0E01               	movlw	high HttpGetMethod@UartMessage
 26384  00076E  219E               	addwfc	(??_HttpGetMethod+1)& (0+255),w,b
 26385  000770  6EDA               	movwf	fsr2h,c
 26386  000772  0E22               	movlw	34
 26387  000774  6EDF               	movwf	indf2,c
 26388                           
 26389                           ;mdm_gsm_gprs_http.c: 337: UartMessage[Index + 20] = '\r';
 26390  000776  0101               	movlb	1	; () banked
 26391  000778  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 26392  00077A  0100               	movlb	0	; () banked
 26393  00077C  6F9D               	movwf	??_HttpGetMethod& (0+255),b
 26394  00077E  6B9E               	clrf	(??_HttpGetMethod+1)& (0+255),b
 26395  000780  0E14               	movlw	20
 26396  000782  279D               	addwf	??_HttpGetMethod& (0+255),f,b
 26397  000784  0E00               	movlw	0
 26398  000786  239E               	addwfc	(??_HttpGetMethod+1)& (0+255),f,b
 26399  000788  0E00               	movlw	low HttpGetMethod@UartMessage
 26400  00078A  259D               	addwf	??_HttpGetMethod& (0+255),w,b
 26401  00078C  6ED9               	movwf	fsr2l,c
 26402  00078E  0E01               	movlw	high HttpGetMethod@UartMessage
 26403  000790  219E               	addwfc	(??_HttpGetMethod+1)& (0+255),w,b
 26404  000792  6EDA               	movwf	fsr2h,c
 26405  000794  0E0D               	movlw	13
 26406  000796  6EDF               	movwf	indf2,c
 26407                           
 26408                           ;mdm_gsm_gprs_http.c: 338: UartMessage[Index + 21] = (0);
 26409  000798  0101               	movlb	1	; () banked
 26410  00079A  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 26411  00079C  0100               	movlb	0	; () banked
 26412  00079E  6F9D               	movwf	??_HttpGetMethod& (0+255),b
 26413  0007A0  6B9E               	clrf	(??_HttpGetMethod+1)& (0+255),b
 26414  0007A2  0E15               	movlw	21
 26415  0007A4  279D               	addwf	??_HttpGetMethod& (0+255),f,b
 26416  0007A6  0E00               	movlw	0
 26417  0007A8  239E               	addwfc	(??_HttpGetMethod+1)& (0+255),f,b
 26418  0007AA  0E00               	movlw	low HttpGetMethod@UartMessage
 26419  0007AC  259D               	addwf	??_HttpGetMethod& (0+255),w,b
 26420  0007AE  6ED9               	movwf	fsr2l,c
 26421  0007B0  0E01               	movlw	high HttpGetMethod@UartMessage
 26422  0007B2  219E               	addwfc	(??_HttpGetMethod+1)& (0+255),w,b
 26423  0007B4  6EDA               	movwf	fsr2h,c
 26424  0007B6  0E00               	movlw	0
 26425  0007B8  6EDF               	movwf	indf2,c
 26426                           
 26427                           ; BSR set to: 0
 26428                           ;mdm_gsm_gprs_http.c: 340: Uart_WriteString(1, UartMessage);
 26429  0007BA  0E00               	movlw	low HttpGetMethod@UartMessage
 26430  0007BC  6F80               	movwf	Uart_WriteString@StringToWrite& (0+255),b
 26431  0007BE  0E01               	movlw	high HttpGetMethod@UartMessage
 26432  0007C0  6F81               	movwf	(Uart_WriteString@StringToWrite+1)& (0+255),b
 26433  0007C2  0E01               	movlw	1
 26434  0007C4  ECDC  F02B         	call	_Uart_WriteString
 26435                           
 26436                           ;mdm_gsm_gprs_http.c: 342: GetMethodState = GetM_WaitMdmResp;
 26437  0007C8  0E0A               	movlw	10
 26438  0007CA  0101               	movlb	1	; () banked
 26439  0007CC  6FED               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 26440                           
 26441                           ; BSR set to: 1
 26442                           ;mdm_gsm_gprs_http.c: 343: GetMethodNextState = GetM_PerfGetAction;
 26443  0007CE  0E05               	movlw	5
 26444  0007D0  0100               	movlb	0	; () banked
 26445  0007D2  6FCD               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 26446                           
 26447                           ; BSR set to: 0
 26448                           ;mdm_gsm_gprs_http.c: 345: OsTmr_StartTimer(&ConnTimeout,20000u);
 26449  0007D4  0EF5               	movlw	low _ConnTimeout
 26450  0007D6  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 26451  0007D8  0E02               	movlw	high _ConnTimeout
 26452  0007DA  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 26453  0007DC  0E20               	movlw	32
 26454  0007DE  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 26455  0007E0  0E4E               	movlw	78
 26456  0007E2  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 26457  0007E4  0E00               	movlw	0
 26458  0007E6  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 26459  0007E8  0E00               	movlw	0
 26460  0007EA  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 26461  0007EC  EC60  F027         	call	_OsTmr_StartTimer	;wreg free
 26462  0007F0  D0D9               	goto	l13509
 26463  0007F2                     
 26464                           ; BSR set to: 1
 26465                           ;mdm_gsm_gprs_http.c: 352: Uart_WriteConstString(1, "AT+HTTPACTION=0\r");
 26466                           
 26467                           ; BSR set to: 1
 26468  0007F2  0E38               	movlw	low STR_16
 26469  0007F4  0100               	movlb	0	; () banked
 26470  0007F6  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 26471  0007F8  0EFF               	movlw	high STR_16
 26472  0007FA  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 26473  0007FC  0E01               	movlw	1
 26474  0007FE  EC1C  F02B         	call	_Uart_WriteConstString
 26475                           
 26476                           ;mdm_gsm_gprs_http.c: 354: GetMethodState = GetM_WaitMdmResp;
 26477  000802  0E0A               	movlw	10
 26478  000804  0101               	movlb	1	; () banked
 26479  000806  6FED               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 26480                           
 26481                           ; BSR set to: 1
 26482                           ;mdm_gsm_gprs_http.c: 355: GetMethodNextState = GetM_ReqActionConf;
 26483  000808  0E06               	movlw	6
 26484  00080A  0100               	movlb	0	; () banked
 26485  00080C  6FCD               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 26486                           
 26487                           ; BSR set to: 0
 26488                           ;mdm_gsm_gprs_http.c: 357: OsTmr_StartTimer(&ConnTimeout,20000u);
 26489  00080E  0EF5               	movlw	low _ConnTimeout
 26490  000810  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 26491  000812  0E02               	movlw	high _ConnTimeout
 26492  000814  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 26493  000816  0E20               	movlw	32
 26494  000818  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 26495  00081A  0E4E               	movlw	78
 26496  00081C  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 26497  00081E  0E00               	movlw	0
 26498  000820  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 26499  000822  0E00               	movlw	0
 26500  000824  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 26501  000826  EC60  F027         	call	_OsTmr_StartTimer	;wreg free
 26502                           
 26503                           ;mdm_gsm_gprs_http.c: 358: break;
 26504  00082A  D145               	goto	l1238
 26505  00082C                     
 26506                           ;mdm_gsm_gprs_http.c: 362: GetMethodState = GetM_WaitActionConf;
 26507  00082C  0E07               	movlw	7
 26508  00082E  0101               	movlb	1	; () banked
 26509  000830  6FED               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 26510                           
 26511                           ;mdm_gsm_gprs_http.c: 365: GetMethodNextState = GetM_HttpTerminate;
 26512  000832  0E09               	movlw	9
 26513  000834  0100               	movlb	0	; () banked
 26514  000836  6FCD               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 26515                           
 26516                           ; BSR set to: 0
 26517                           ;mdm_gsm_gprs_http.c: 370: OsTmr_StartTimer(&ConnTimeout,20000u);
 26518  000838  0EF5               	movlw	low _ConnTimeout
 26519  00083A  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 26520  00083C  0E02               	movlw	high _ConnTimeout
 26521  00083E  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 26522  000840  0E20               	movlw	32
 26523  000842  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 26524  000844  0E4E               	movlw	78
 26525  000846  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 26526  000848  0E00               	movlw	0
 26527  00084A  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 26528  00084C  0E00               	movlw	0
 26529  00084E  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 26530  000850  EC60  F027         	call	_OsTmr_StartTimer	;wreg free
 26531                           
 26532                           ;mdm_gsm_gprs_http.c: 371: break;
 26533  000854  D130               	goto	l1238
 26534  000856                     
 26535                           ;mdm_gsm_gprs_http.c: 375: Uart_WriteConstString(1, "AT+HTTPREAD\r");
 26536  000856  0E8F               	movlw	low STR_17
 26537  000858  0100               	movlb	0	; () banked
 26538  00085A  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 26539  00085C  0EFF               	movlw	high STR_17
 26540  00085E  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 26541  000860  0E01               	movlw	1
 26542  000862  EC1C  F02B         	call	_Uart_WriteConstString
 26543                           
 26544                           ;mdm_gsm_gprs_http.c: 377: GetMethodState = GetM_ReadGetData;
 26545  000866  0E0D               	movlw	13
 26546  000868  0101               	movlb	1	; () banked
 26547  00086A  6FED               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 26548                           
 26549                           ; BSR set to: 1
 26550                           ;mdm_gsm_gprs_http.c: 378: GetMethodNextState = GetM_HttpTerminate;
 26551  00086C  0E09               	movlw	9
 26552  00086E  0100               	movlb	0	; () banked
 26553  000870  6FCD               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 26554                           
 26555                           ; BSR set to: 0
 26556                           ;mdm_gsm_gprs_http.c: 380: OsTmr_StartTimer(&ConnTimeout,20000u);
 26557  000872  0EF5               	movlw	low _ConnTimeout
 26558  000874  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 26559  000876  0E02               	movlw	high _ConnTimeout
 26560  000878  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 26561  00087A  0E20               	movlw	32
 26562  00087C  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 26563  00087E  0E4E               	movlw	78
 26564  000880  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 26565  000882  0E00               	movlw	0
 26566  000884  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 26567  000886  0E00               	movlw	0
 26568  000888  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 26569  00088A  EC60  F027         	call	_OsTmr_StartTimer	;wreg free
 26570  00088E  D08A               	goto	l13509
 26571  000890                     
 26572                           ; BSR set to: 1
 26573                           ;mdm_gsm_gprs_http.c: 387: Uart_WriteConstString(1, "AT+HTTPTERM\r");
 26574                           
 26575                           ; BSR set to: 1
 26576  000890  0E9C               	movlw	low STR_18
 26577  000892  0100               	movlb	0	; () banked
 26578  000894  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 26579  000896  0EFF               	movlw	high STR_18
 26580  000898  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 26581  00089A  0E01               	movlw	1
 26582  00089C  EC1C  F02B         	call	_Uart_WriteConstString
 26583                           
 26584                           ;mdm_gsm_gprs_http.c: 389: GetMethodState = GetM_WaitMdmResp;
 26585  0008A0  0E0A               	movlw	10
 26586  0008A2  0101               	movlb	1	; () banked
 26587  0008A4  6FED               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 26588                           
 26589                           ; BSR set to: 1
 26590                           ;mdm_gsm_gprs_http.c: 390: GetMethodNextState = GetM_Done;
 26591  0008A6  0E0E               	movlw	14
 26592  0008A8  0100               	movlb	0	; () banked
 26593  0008AA  6FCD               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 26594                           
 26595                           ; BSR set to: 0
 26596                           ;mdm_gsm_gprs_http.c: 392: OsTmr_StartTimer(&ConnTimeout,20000u);
 26597  0008AC  0EF5               	movlw	low _ConnTimeout
 26598  0008AE  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 26599  0008B0  0E02               	movlw	high _ConnTimeout
 26600  0008B2  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 26601  0008B4  0E20               	movlw	32
 26602  0008B6  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 26603  0008B8  0E4E               	movlw	78
 26604  0008BA  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 26605  0008BC  0E00               	movlw	0
 26606  0008BE  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 26607  0008C0  0E00               	movlw	0
 26608  0008C2  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 26609  0008C4  EC60  F027         	call	_OsTmr_StartTimer	;wreg free
 26610  0008C8  D06D               	goto	l13509
 26611  0008CA                     
 26612                           ; BSR set to: 1
 26613                           ;mdm_gsm_gprs_http.c: 399: if (ReceiveEvt(&NewStringReceived))
 26614                           
 26615                           ; BSR set to: 1
 26616  0008CA  0E3C               	movlw	low _NewStringReceived
 26617  0008CC  0100               	movlb	0	; () banked
 26618  0008CE  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 26619  0008D0  0E00               	movlw	high _NewStringReceived
 26620  0008D2  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 26621  0008D4  EC6C  F02D         	call	_ReceiveEvt	;wreg free
 26622  0008D8  0900               	iorlw	0
 26623  0008DA  B4D8               	btfsc	status,2,c
 26624  0008DC  D018               	goto	l1251
 26625                           
 26626                           ;mdm_gsm_gprs_http.c: 400: {
 26627                           ;mdm_gsm_gprs_http.c: 402: if ((RxBuffer[0] == 'O') && (RxBuffer[1] == 'K'))
 26628  0008DE  CC58  FFE8         	movff	_RxBuffer,wreg
 26629  0008E2  0A4F               	xorlw	79
 26630  0008E4  A4D8               	btfss	status,2,c
 26631  0008E6  D0E7               	goto	l1238
 26632  0008E8  CC59  FFE8         	movff	_RxBuffer+1,wreg
 26633  0008EC  0A4B               	xorlw	75
 26634  0008EE  A4D8               	btfss	status,2,c
 26635  0008F0  D0E2               	goto	l1238
 26636                           
 26637                           ;mdm_gsm_gprs_http.c: 403: {
 26638                           ;mdm_gsm_gprs_http.c: 405: GetMethodState = GetMethodNextState;
 26639  0008F2  C0CD  F1ED         	movff	HttpGetMethod@GetMethodNextState,HttpGetMethod@GetMethodState
 26640                           
 26641                           ;mdm_gsm_gprs_http.c: 407: ClearBuffer(RxBuffer,((UINT16)(400)));
 26642  0008F6  0E58               	movlw	low _RxBuffer
 26643  0008F8  0100               	movlb	0	; () banked
 26644  0008FA  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 26645  0008FC  0E0C               	movlw	high _RxBuffer
 26646  0008FE  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 26647  000900  0E01               	movlw	1
 26648  000902  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 26649  000904  0E90               	movlw	144
 26650  000906  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 26651  000908  EC8E  F02C         	call	_ClearBuffer	;wreg free
 26652                           
 26653                           ;mdm_gsm_gprs_http.c: 408: }
 26654                           ;mdm_gsm_gprs_http.c: 409: }
 26655  00090C  D0D4               	goto	l1238
 26656  00090E                     l1251:
 26657                           
 26658                           ;mdm_gsm_gprs_http.c: 410: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 26659  00090E  0EF5               	movlw	low _ConnTimeout
 26660  000910  0100               	movlb	0	; () banked
 26661  000912  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 26662  000914  0E02               	movlw	high _ConnTimeout
 26663  000916  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 26664  000918  ECE9  F023         	call	_OsTmr_GetTimerStatus	;wreg free
 26665  00091C                     L35:
 26666  00091C  06E8               	decf	wreg,f,c
 26667  00091E  A4D8               	btfss	status,2,c
 26668  000920  D0CA               	goto	l1238
 26669                           
 26670                           ;mdm_gsm_gprs_http.c: 411: {
 26671                           ;mdm_gsm_gprs_http.c: 413: GetMethodState = GetM_Fail;
 26672  000922  0E0F               	movlw	15
 26673  000924                     L34:
 26674  000924  0101               	movlb	1	; () banked
 26675  000926  6FED               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 26676                           
 26677                           ; BSR set to: 1
 26678                           ;mdm_gsm_gprs_http.c: 414: }
 26679                           ;mdm_gsm_gprs_http.c: 415: break;
 26680                           
 26681                           ; BSR set to: 1
 26682  000928  D0C6               	goto	l1238
 26683  00092A                     
 26684                           ; BSR set to: 1
 26685                           ;mdm_gsm_gprs_http.c: 419: if (ReceiveEvt(&NewStringReceived))
 26686                           
 26687                           ; BSR set to: 1
 26688  00092A  0E3C               	movlw	low _NewStringReceived
 26689  00092C  0100               	movlb	0	; () banked
 26690  00092E  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 26691  000930  0E00               	movlw	high _NewStringReceived
 26692  000932  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 26693  000934  EC6C  F02D         	call	_ReceiveEvt	;wreg free
 26694  000938  0900               	iorlw	0
 26695  00093A  B4D8               	btfsc	status,2,c
 26696  00093C  D018               	goto	l1256
 26697                           
 26698                           ;mdm_gsm_gprs_http.c: 420: {
 26699                           ;mdm_gsm_gprs_http.c: 422: if ((RxBuffer[0] == '+') && (RxBuffer[1] == 'H'))
 26700  00093E  CC58  FFE8         	movff	_RxBuffer,wreg
 26701  000942  0A2B               	xorlw	43
 26702  000944  A4D8               	btfss	status,2,c
 26703  000946  D0B7               	goto	l1238
 26704  000948  CC59  FFE8         	movff	_RxBuffer+1,wreg
 26705  00094C  0A48               	xorlw	72
 26706  00094E  A4D8               	btfss	status,2,c
 26707  000950  D0B2               	goto	l1238
 26708                           
 26709                           ;mdm_gsm_gprs_http.c: 423: {
 26710                           ;mdm_gsm_gprs_http.c: 425: GetMethodState = GetMethodNextState;
 26711  000952  C0CD  F1ED         	movff	HttpGetMethod@GetMethodNextState,HttpGetMethod@GetMethodState
 26712                           
 26713                           ;mdm_gsm_gprs_http.c: 427: ClearBuffer(RxBuffer,((UINT16)(400)));
 26714  000956  0E58               	movlw	low _RxBuffer
 26715  000958  0100               	movlb	0	; () banked
 26716  00095A  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 26717  00095C  0E0C               	movlw	high _RxBuffer
 26718  00095E  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 26719  000960  0E01               	movlw	1
 26720  000962  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 26721  000964  0E90               	movlw	144
 26722  000966  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 26723  000968  EC8E  F02C         	call	_ClearBuffer	;wreg free
 26724                           
 26725                           ;mdm_gsm_gprs_http.c: 428: }
 26726                           ;mdm_gsm_gprs_http.c: 429: }
 26727  00096C  D0A4               	goto	l1238
 26728  00096E                     l1256:
 26729                           
 26730                           ;mdm_gsm_gprs_http.c: 430: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 26731  00096E  0EF5               	movlw	low _ConnTimeout
 26732  000970  0100               	movlb	0	; () banked
 26733  000972  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 26734  000974  0E02               	movlw	high _ConnTimeout
 26735  000976  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 26736  000978  ECE9  F023         	call	_OsTmr_GetTimerStatus	;wreg free
 26737  00097C  D7CF               	goto	L35
 26738  00097E                     
 26739                           ; BSR set to: 1
 26740                           ;mdm_gsm_gprs_http.c: 439: GetMethodState = GetM_Wait;
 26741                           
 26742                           ; BSR set to: 1
 26743  00097E  0E0C               	movlw	12
 26744  000980  6FED               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 26745                           
 26746                           ;mdm_gsm_gprs_http.c: 440: GetMethodNextState = GetM_PerfGetAction;
 26747  000982  0E05               	movlw	5
 26748  000984  0100               	movlb	0	; () banked
 26749  000986  6FCD               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 26750                           
 26751                           ; BSR set to: 0
 26752                           ;mdm_gsm_gprs_http.c: 442: OsTmr_StartTimer(&ConnWait,1000);
 26753  000988  0ED7               	movlw	low _ConnWait
 26754  00098A  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 26755  00098C  0E03               	movlw	high _ConnWait
 26756  00098E  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 26757  000990  0EE8               	movlw	232
 26758  000992  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 26759  000994  0E03               	movlw	3
 26760  000996  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 26761  000998  0E00               	movlw	0
 26762  00099A  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 26763  00099C  0E00               	movlw	0
 26764  00099E  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 26765  0009A0  EC60  F027         	call	_OsTmr_StartTimer	;wreg free
 26766  0009A4                     l13509:
 26767                           
 26768                           ;mdm_gsm_gprs_http.c: 444: GetMOutSts = GetMOut_InProg;
 26769  0009A4  0E01               	movlw	1
 26770  0009A6  0101               	movlb	1	; () banked
 26771  0009A8  D053               	goto	L37
 26772  0009AA                     
 26773                           ; BSR set to: 1
 26774                           ;mdm_gsm_gprs_http.c: 449: if (OsTmr_GetTimerStatus(&ConnWait) == SwTimerExpired)
 26775                           
 26776                           ; BSR set to: 1
 26777  0009AA  0ED7               	movlw	low _ConnWait
 26778  0009AC  0100               	movlb	0	; () banked
 26779  0009AE  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 26780  0009B0  0E03               	movlw	high _ConnWait
 26781  0009B2  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 26782  0009B4  ECE9  F023         	call	_OsTmr_GetTimerStatus	;wreg free
 26783  0009B8  06E8               	decf	wreg,f,c
 26784  0009BA  A4D8               	btfss	status,2,c
 26785  0009BC  D07C               	goto	l1238
 26786                           
 26787                           ;mdm_gsm_gprs_http.c: 450: {
 26788                           ;mdm_gsm_gprs_http.c: 452: GetMethodState = GetMethodNextState;
 26789  0009BE  C0CD  F1ED         	movff	HttpGetMethod@GetMethodNextState,HttpGetMethod@GetMethodState
 26790                           
 26791                           ;mdm_gsm_gprs_http.c: 453: }
 26792                           ;mdm_gsm_gprs_http.c: 454: break;
 26793  0009C2  D079               	goto	l1238
 26794  0009C4                     
 26795                           ;mdm_gsm_gprs_http.c: 458: if (ReceiveEvt(&NewStringReceived))
 26796  0009C4  0E3C               	movlw	low _NewStringReceived
 26797  0009C6  0100               	movlb	0	; () banked
 26798  0009C8  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 26799  0009CA  0E00               	movlw	high _NewStringReceived
 26800  0009CC  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 26801  0009CE  EC6C  F02D         	call	_ReceiveEvt	;wreg free
 26802  0009D2  0900               	iorlw	0
 26803  0009D4  B4D8               	btfsc	status,2,c
 26804  0009D6  D02D               	goto	l1264
 26805                           
 26806                           ;mdm_gsm_gprs_http.c: 459: {
 26807                           ;mdm_gsm_gprs_http.c: 461: if ((RxBuffer[0] == '+') && (RxBuffer[1] == 'H'))
 26808  0009D8  CC58  FFE8         	movff	_RxBuffer,wreg
 26809  0009DC  0A2B               	xorlw	43
 26810  0009DE  A4D8               	btfss	status,2,c
 26811  0009E0  D06A               	goto	l1238
 26812  0009E2  CC59  FFE8         	movff	_RxBuffer+1,wreg
 26813  0009E6  0A48               	xorlw	72
 26814  0009E8  A4D8               	btfss	status,2,c
 26815  0009EA  D065               	goto	l1238
 26816                           
 26817                           ;mdm_gsm_gprs_http.c: 462: {
 26818                           ;mdm_gsm_gprs_http.c: 464: GetMethodState = GetMethodNextState;
 26819  0009EC  C0CD  F1ED         	movff	HttpGetMethod@GetMethodNextState,HttpGetMethod@GetMethodState
 26820                           
 26821                           ;mdm_gsm_gprs_http.c: 466: StringCopy(RxBuffer,GetData->RespBuffer,((UINT16)(400)));
 26822  0009F0  0E58               	movlw	low _RxBuffer
 26823  0009F2  0100               	movlb	0	; () banked
 26824  0009F4  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 26825  0009F6  0E0C               	movlw	high _RxBuffer
 26826  0009F8  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 26827  0009FA  EE20 F003          	lfsr	2,3
 26828  0009FE  519B               	movf	HttpGetMethod@GetData& (0+255),w,b
 26829  000A00  26D9               	addwf	fsr2l,f,c
 26830  000A02  519C               	movf	(HttpGetMethod@GetData+1)& (0+255),w,b
 26831  000A04  22DA               	addwfc	fsr2h,f,c
 26832  000A06  CFDE F07F          	movff	postinc2,StringCopy@DestStr
 26833  000A0A  CFDD F080          	movff	postdec2,StringCopy@DestStr+1
 26834  000A0E  0E01               	movlw	1
 26835  000A10  6F82               	movwf	(StringCopy@Len+1)& (0+255),b
 26836  000A12  0E90               	movlw	144
 26837  000A14  6F81               	movwf	StringCopy@Len& (0+255),b
 26838  000A16  EC00  F027         	call	_StringCopy	;wreg free
 26839                           
 26840                           ;mdm_gsm_gprs_http.c: 468: ClearBuffer(RxBuffer,((UINT16)(400)));
 26841  000A1A  0E58               	movlw	low _RxBuffer
 26842  000A1C  0100               	movlb	0	; () banked
 26843  000A1E  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 26844  000A20  0E0C               	movlw	high _RxBuffer
 26845  000A22  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 26846  000A24  0E01               	movlw	1
 26847  000A26  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 26848  000A28  0E90               	movlw	144
 26849  000A2A  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 26850  000A2C  EC8E  F02C         	call	_ClearBuffer	;wreg free
 26851                           
 26852                           ;mdm_gsm_gprs_http.c: 469: }
 26853                           ;mdm_gsm_gprs_http.c: 470: }
 26854  000A30  D042               	goto	l1238
 26855  000A32                     l1264:
 26856                           
 26857                           ;mdm_gsm_gprs_http.c: 471: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 26858  000A32  0EF5               	movlw	low _ConnTimeout
 26859  000A34  0100               	movlb	0	; () banked
 26860  000A36  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 26861  000A38  0E02               	movlw	high _ConnTimeout
 26862  000A3A  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 26863  000A3C  ECE9  F023         	call	_OsTmr_GetTimerStatus	;wreg free
 26864  000A40  D76D               	goto	L35
 26865  000A42                     
 26866                           ; BSR set to: 1
 26867                           ;mdm_gsm_gprs_http.c: 480: GetMethodState = GetM_Idle;
 26868                           
 26869                           ; BSR set to: 1
 26870  000A42  0E00               	movlw	0
 26871  000A44  6FED               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 26872                           
 26873                           ;mdm_gsm_gprs_http.c: 482: GetMOutSts = GetMOut_Completed;
 26874  000A46  0E02               	movlw	2
 26875  000A48  D003               	goto	L37
 26876  000A4A                     
 26877                           ; BSR set to: 1
 26878                           ;mdm_gsm_gprs_http.c: 487: GetMethodState = GetM_Idle;
 26879                           
 26880                           ; BSR set to: 1
 26881  000A4A  0E00               	movlw	0
 26882  000A4C  6FED               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 26883                           
 26884                           ;mdm_gsm_gprs_http.c: 489: GetMOutSts = GetMOut_Failed;
 26885  000A4E  0E03               	movlw	3
 26886  000A50                     L37:
 26887  000A50  6FEC               	movwf	HttpGetMethod@GetMOutSts& (0+255),b
 26888                           
 26889                           ; BSR set to: 1
 26890                           ;mdm_gsm_gprs_http.c: 494: }
 26891                           
 26892                           ; BSR set to: 1
 26893                           ;mdm_gsm_gprs_http.c: 493: break;
 26894                           
 26895                           ;mdm_gsm_gprs_http.c: 492: default:
 26896                           
 26897                           ;mdm_gsm_gprs_http.c: 490: break;
 26898  000A52  D031               	goto	l1238
 26899  000A54                     l1235:
 26900                           
 26901                           ; BSR set to: 1
 26902                           
 26903                           ; BSR set to: 1
 26904  000A54  51ED               	movf	HttpGetMethod@GetMethodState& (0+255),w,b
 26905                           
 26906                           ; Switch size 1, requested type "space"
 26907                           ; Number of cases is 16, Range of values is 0 to 15
 26908                           ; switch strategies available:
 26909                           ; Name         Instructions Cycles
 26910                           ; simple_byte           49    25 (average)
 26911                           ;	Chosen strategy is simple_byte
 26912  000A56  0A00               	xorlw	0	; case 0
 26913  000A58  B4D8               	btfsc	status,2,c
 26914  000A5A  D5CC               	goto	l1236
 26915  000A5C  0A01               	xorlw	1	; case 1
 26916  000A5E  B4D8               	btfsc	status,2,c
 26917  000A60  D5D5               	goto	l1239
 26918  000A62  0A03               	xorlw	3	; case 2
 26919  000A64  B4D8               	btfsc	status,2,c
 26920  000A66  D5EF               	goto	l1240
 26921  000A68  0A01               	xorlw	1	; case 3
 26922  000A6A  B4D8               	btfsc	status,2,c
 26923  000A6C  D609               	goto	l1241
 26924  000A6E  0A07               	xorlw	7	; case 4
 26925  000A70  B4D8               	btfsc	status,2,c
 26926  000A72  D623               	goto	l1242
 26927  000A74  0A01               	xorlw	1	; case 5
 26928  000A76  B4D8               	btfsc	status,2,c
 26929  000A78  D6BC               	goto	l1246
 26930  000A7A  0A03               	xorlw	3	; case 6
 26931  000A7C  B4D8               	btfsc	status,2,c
 26932  000A7E  D6D6               	goto	l1247
 26933  000A80  0A01               	xorlw	1	; case 7
 26934  000A82  B4D8               	btfsc	status,2,c
 26935  000A84  D752               	goto	l1255
 26936  000A86  0A0F               	xorlw	15	; case 8
 26937  000A88  B4D8               	btfsc	status,2,c
 26938  000A8A  D6E5               	goto	l1248
 26939  000A8C  0A01               	xorlw	1	; case 9
 26940  000A8E  B4D8               	btfsc	status,2,c
 26941  000A90  D6FF               	goto	l1249
 26942  000A92  0A03               	xorlw	3	; case 10
 26943  000A94  B4D8               	btfsc	status,2,c
 26944  000A96  D719               	goto	l1250
 26945  000A98  0A01               	xorlw	1	; case 11
 26946  000A9A  B4D8               	btfsc	status,2,c
 26947  000A9C  D770               	goto	l1260
 26948  000A9E  0A07               	xorlw	7	; case 12
 26949  000AA0  B4D8               	btfsc	status,2,c
 26950  000AA2  D783               	goto	l1261
 26951  000AA4  0A01               	xorlw	1	; case 13
 26952  000AA6  B4D8               	btfsc	status,2,c
 26953  000AA8  D78D               	goto	l1263
 26954  000AAA  0A03               	xorlw	3	; case 14
 26955  000AAC  B4D8               	btfsc	status,2,c
 26956  000AAE  D7C9               	goto	l1268
 26957  000AB0  0A01               	xorlw	1	; case 15
 26958  000AB2  B4D8               	btfsc	status,2,c
 26959  000AB4  D7CA               	goto	l1269
 26960  000AB6                     l1238:
 26961                           
 26962                           ;mdm_gsm_gprs_http.c: 496: return GetMOutSts;
 26963                           
 26964                           ; BSR set to: 1
 26965  000AB6  0101               	movlb	1	; () banked
 26966  000AB8  51EC               	movf	HttpGetMethod@GetMOutSts& (0+255),w,b
 26967  000ABA  0012               	return	
 26968  000ABC                     __end_of_HttpGetMethod:
 26969                           	opt stack 0
 26970                           tosu	equ	0xFFF
 26971                           tosh	equ	0xFFE
 26972                           tosl	equ	0xFFD
 26973                           pclath	equ	0xFFA
 26974                           tblptru	equ	0xFF8
 26975                           tblptrh	equ	0xFF7
 26976                           tblptrl	equ	0xFF6
 26977                           tablat	equ	0xFF5
 26978                           prodh	equ	0xFF4
 26979                           prodl	equ	0xFF3
 26980                           intcon	equ	0xFF2
 26981                           intcon2	equ	0xFF1
 26982                           intcon3	equ	0xFF0
 26983                           indf0	equ	0xFEF
 26984                           postinc0	equ	0xFEE
 26985                           plusw0	equ	0xFEB
 26986                           fsr0h	equ	0xFEA
 26987                           fsr0l	equ	0xFE9
 26988                           wreg	equ	0xFE8
 26989                           indf1	equ	0xFE7
 26990                           postinc1	equ	0xFE6
 26991                           postdec1	equ	0xFE5
 26992                           plusw1	equ	0xFE3
 26993                           fsr1h	equ	0xFE2
 26994                           fsr1l	equ	0xFE1
 26995                           indf2	equ	0xFDF
 26996                           postinc2	equ	0xFDE
 26997                           postdec2	equ	0xFDD
 26998                           plusw2	equ	0xFDB
 26999                           fsr2h	equ	0xFDA
 27000                           fsr2l	equ	0xFD9
 27001                           status	equ	0xFD8
 27002                           
 27003 ;; *************** function _Uart_WriteString *****************
 27004 ;; Defined at:
 27005 ;;		line 518 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 27006 ;; Parameters:    Size  Location     Type
 27007 ;;  Module          1    wreg     unsigned char 
 27008 ;;  StringToWrit    2   32[BANK0 ] PTR unsigned char 
 27009 ;;		 -> HttpGetMethod@UartMessage(200), InitGprsNetwork@UartMessage(50), Mdm_MakePhoneCall@UartMessage(25), Mdm_SetSmsFo
      +rmat@UartMessage(20), 
 27010 ;;		 -> Mdm_PinUnlock@UartMessage(13), 
 27011 ;; Auto vars:     Size  Location     Type
 27012 ;;  Module          1   34[BANK0 ] unsigned char 
 27013 ;; Return value:  Size  Location     Type
 27014 ;;                  1    wreg      void 
 27015 ;; Registers used:
 27016 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 27017 ;; Tracked objects:
 27018 ;;		On entry : 0/0
 27019 ;;		On exit  : 0/0
 27020 ;;		Unchanged: 0/0
 27021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27022 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27023 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27025 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27026 ;;Total ram usage:        3 bytes
 27027 ;; Hardware stack levels used:    1
 27028 ;; Hardware stack levels required when called:   12
 27029 ;; This function calls:
 27030 ;;		_UartTxBufferStatus
 27031 ;;		_UartWriteByte
 27032 ;; This function is called by:
 27033 ;;		_InitGprsNetwork
 27034 ;;		_HttpGetMethod
 27035 ;;		_Mdm_PinUnlock
 27036 ;;		_Mdm_SetSmsFormat
 27037 ;;		_Mdm_MakePhoneCall
 27038 ;; This function uses a non-reentrant model
 27039 ;;
 27040                           
 27041                           	psect	text120
 27042  0057B8                     __ptext120:
 27043                           	opt stack 0
 27044  0057B8                     _Uart_WriteString:
 27045                           	opt stack 14
 27046                           
 27047                           ; BSR set to: 1
 27048                           ;incstack = 0
 27049                           ;Uart_WriteString@Module stored from wreg
 27050  0057B8  0100               	movlb	0	; () banked
 27051  0057BA  6F82               	movwf	Uart_WriteString@Module& (0+255),b
 27052                           
 27053                           ;uart_drv.c: 521: while (*StringToWrite)
 27054  0057BC  D014               	goto	u11400
 27055  0057BE                     
 27056                           ;uart_drv.c: 522: {
 27057                           ;uart_drv.c: 524: UartWriteByte(Module, *StringToWrite);
 27058  0057BE  C080  FFD9         	movff	Uart_WriteString@StringToWrite,fsr2l
 27059  0057C2  C081  FFDA         	movff	Uart_WriteString@StringToWrite+1,fsr2h
 27060  0057C6  50DF               	movf	indf2,w,c
 27061  0057C8  0100               	movlb	0	; () banked
 27062  0057CA  6F7D               	movwf	UartWriteByte@ByteToWrite& (0+255),b
 27063  0057CC  5182               	movf	Uart_WriteString@Module& (0+255),w,b
 27064  0057CE  ECA8  F02E         	call	_UartWriteByte
 27065                           
 27066                           ;uart_drv.c: 526: StringToWrite++;
 27067  0057D2  0100               	movlb	0	; () banked
 27068  0057D4  4B80               	infsnz	Uart_WriteString@StringToWrite& (0+255),f,b
 27069  0057D6  2B81               	incf	(Uart_WriteString@StringToWrite+1)& (0+255),f,b
 27070  0057D8                     
 27071                           ; BSR set to: 0
 27072                           
 27073                           ; BSR set to: 0
 27074  0057D8  0100               	movlb	0	; () banked
 27075  0057DA  5182               	movf	Uart_WriteString@Module& (0+255),w,b
 27076  0057DC  ECB6  F029         	call	_UartTxBufferStatus
 27077  0057E0  06E8               	decf	wreg,f,c
 27078  0057E2  B4D8               	btfsc	status,2,c
 27079  0057E4  D7F9               	goto	l709
 27080  0057E6                     u11400:
 27081  0057E6  C080  FFD9         	movff	Uart_WriteString@StringToWrite,fsr2l
 27082  0057EA  C081  FFDA         	movff	Uart_WriteString@StringToWrite+1,fsr2h
 27083  0057EE  50DF               	movf	indf2,w,c
 27084  0057F0  B4D8               	btfsc	status,2,c
 27085  0057F2  0012               	return	
 27086  0057F4  D7E4               	goto	l707
 27087  0057F6                     __end_of_Uart_WriteString:
 27088                           	opt stack 0
 27089                           tosu	equ	0xFFF
 27090                           tosh	equ	0xFFE
 27091                           tosl	equ	0xFFD
 27092                           pclath	equ	0xFFA
 27093                           tblptru	equ	0xFF8
 27094                           tblptrh	equ	0xFF7
 27095                           tblptrl	equ	0xFF6
 27096                           tablat	equ	0xFF5
 27097                           prodh	equ	0xFF4
 27098                           prodl	equ	0xFF3
 27099                           intcon	equ	0xFF2
 27100                           intcon2	equ	0xFF1
 27101                           intcon3	equ	0xFF0
 27102                           indf0	equ	0xFEF
 27103                           postinc0	equ	0xFEE
 27104                           plusw0	equ	0xFEB
 27105                           fsr0h	equ	0xFEA
 27106                           fsr0l	equ	0xFE9
 27107                           wreg	equ	0xFE8
 27108                           indf1	equ	0xFE7
 27109                           postinc1	equ	0xFE6
 27110                           postdec1	equ	0xFE5
 27111                           plusw1	equ	0xFE3
 27112                           fsr1h	equ	0xFE2
 27113                           fsr1l	equ	0xFE1
 27114                           indf2	equ	0xFDF
 27115                           postinc2	equ	0xFDE
 27116                           postdec2	equ	0xFDD
 27117                           plusw2	equ	0xFDB
 27118                           fsr2h	equ	0xFDA
 27119                           fsr2l	equ	0xFD9
 27120                           status	equ	0xFD8
 27121                           
 27122 ;; *************** function _Uart_WriteConstString *****************
 27123 ;; Defined at:
 27124 ;;		line 496 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 27125 ;; Parameters:    Size  Location     Type
 27126 ;;  Module          1    wreg     unsigned char 
 27127 ;;  ConstStringT    2   32[BANK0 ] PTR const unsigned char 
 27128 ;;		 -> STR_29(5), STR_20(14), STR_19(14), STR_18(13), 
 27129 ;;		 -> STR_17(13), STR_16(17), STR_14(21), STR_13(14), 
 27130 ;;		 -> STR_12(13), STR_11(14), STR_10(14), STR_8(31), 
 27131 ;;		 -> STR_7(5), STR_6(5), STR_4(11), STR_3(7), 
 27132 ;;		 -> STR_2(14), STR_1(5), 
 27133 ;; Auto vars:     Size  Location     Type
 27134 ;;  Module          1   34[BANK0 ] unsigned char 
 27135 ;; Return value:  Size  Location     Type
 27136 ;;                  1    wreg      void 
 27137 ;; Registers used:
 27138 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 27139 ;; Tracked objects:
 27140 ;;		On entry : 0/0
 27141 ;;		On exit  : 0/0
 27142 ;;		Unchanged: 0/0
 27143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27144 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27145 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27147 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27148 ;;Total ram usage:        3 bytes
 27149 ;; Hardware stack levels used:    1
 27150 ;; Hardware stack levels required when called:   12
 27151 ;; This function calls:
 27152 ;;		_UartTxBufferStatus
 27153 ;;		_UartWriteByte
 27154 ;; This function is called by:
 27155 ;;		_CheckModem
 27156 ;;		_ConfigureModem
 27157 ;;		_GetSmsSm
 27158 ;;		_InitGprsNetwork
 27159 ;;		_HttpGetMethod
 27160 ;;		_initGprsModem
 27161 ;;		_Mdm_HangPhoneCall
 27162 ;;		_Mdm_GetPhoneCall
 27163 ;;		_MdmHttp_SetSsl
 27164 ;; This function uses a non-reentrant model
 27165 ;;
 27166                           
 27167                           	psect	text121
 27168  005638                     __ptext121:
 27169                           	opt stack 0
 27170  005638                     _Uart_WriteConstString:
 27171                           	opt stack 14
 27172                           
 27173                           ;incstack = 0
 27174                           ;Uart_WriteConstString@Module stored from wreg
 27175  005638  0100               	movlb	0	; () banked
 27176  00563A  6F82               	movwf	Uart_WriteConstString@Module& (0+255),b
 27177                           
 27178                           ;uart_drv.c: 499: while (*ConstStringToWrite)
 27179  00563C  D015               	goto	u11380
 27180  00563E                     
 27181                           ;uart_drv.c: 500: {
 27182                           ;uart_drv.c: 502: UartWriteByte(Module, *ConstStringToWrite);
 27183  00563E  C080  FFF6         	movff	Uart_WriteConstString@ConstStringToWrite,tblptrl
 27184  005642  C081  FFF7         	movff	Uart_WriteConstString@ConstStringToWrite+1,tblptrh
 27185  005646                     	if	0	;tblptru may be non-zero
 27186  005646                     	endif
 27187  005646                     	if	0	;tblptru may be non-zero
 27188  005646                     	endif
 27189  005646  0008               	tblrd		*
 27190  005648  CFF5 F07D          	movff	tablat,UartWriteByte@ByteToWrite
 27191  00564C  0100               	movlb	0	; () banked
 27192  00564E  5182               	movf	Uart_WriteConstString@Module& (0+255),w,b
 27193  005650  ECA8  F02E         	call	_UartWriteByte
 27194                           
 27195                           ;uart_drv.c: 504: ConstStringToWrite++;
 27196  005654  0100               	movlb	0	; () banked
 27197  005656  4B80               	infsnz	Uart_WriteConstString@ConstStringToWrite& (0+255),f,b
 27198  005658  2B81               	incf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),f,b
 27199  00565A                     
 27200                           ; BSR set to: 0
 27201                           
 27202                           ; BSR set to: 0
 27203  00565A  0100               	movlb	0	; () banked
 27204  00565C  5182               	movf	Uart_WriteConstString@Module& (0+255),w,b
 27205  00565E  ECB6  F029         	call	_UartTxBufferStatus
 27206  005662  06E8               	decf	wreg,f,c
 27207  005664  B4D8               	btfsc	status,2,c
 27208  005666  D7F9               	goto	l700
 27209  005668                     u11380:
 27210  005668  C080  FFF6         	movff	Uart_WriteConstString@ConstStringToWrite,tblptrl
 27211  00566C  C081  FFF7         	movff	Uart_WriteConstString@ConstStringToWrite+1,tblptrh
 27212  005670                     	if	0	;tblptru may be non-zero
 27213  005670                     	endif
 27214  005670                     	if	0	;tblptru may be non-zero
 27215  005670                     	endif
 27216  005670  0008               	tblrd		*
 27217  005672  50F5               	movf	tablat,w,c
 27218  005674  0900               	iorlw	0
 27219  005676  B4D8               	btfsc	status,2,c
 27220  005678  0012               	return	
 27221  00567A  D7E1               	goto	l698
 27222  00567C                     __end_of_Uart_WriteConstString:
 27223                           	opt stack 0
 27224                           tosu	equ	0xFFF
 27225                           tosh	equ	0xFFE
 27226                           tosl	equ	0xFFD
 27227                           pclath	equ	0xFFA
 27228                           tblptru	equ	0xFF8
 27229                           tblptrh	equ	0xFF7
 27230                           tblptrl	equ	0xFF6
 27231                           tablat	equ	0xFF5
 27232                           prodh	equ	0xFF4
 27233                           prodl	equ	0xFF3
 27234                           intcon	equ	0xFF2
 27235                           intcon2	equ	0xFF1
 27236                           intcon3	equ	0xFF0
 27237                           indf0	equ	0xFEF
 27238                           postinc0	equ	0xFEE
 27239                           plusw0	equ	0xFEB
 27240                           fsr0h	equ	0xFEA
 27241                           fsr0l	equ	0xFE9
 27242                           wreg	equ	0xFE8
 27243                           indf1	equ	0xFE7
 27244                           postinc1	equ	0xFE6
 27245                           postdec1	equ	0xFE5
 27246                           plusw1	equ	0xFE3
 27247                           fsr1h	equ	0xFE2
 27248                           fsr1l	equ	0xFE1
 27249                           indf2	equ	0xFDF
 27250                           postinc2	equ	0xFDE
 27251                           postdec2	equ	0xFDD
 27252                           plusw2	equ	0xFDB
 27253                           fsr2h	equ	0xFDA
 27254                           fsr2l	equ	0xFD9
 27255                           status	equ	0xFD8
 27256                           
 27257 ;; *************** function _UartWriteByte *****************
 27258 ;; Defined at:
 27259 ;;		line 173 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 27260 ;; Parameters:    Size  Location     Type
 27261 ;;  Module          1    wreg     unsigned char 
 27262 ;;  ByteToWrite     1   29[BANK0 ] unsigned char 
 27263 ;; Auto vars:     Size  Location     Type
 27264 ;;  Module          1   30[BANK0 ] unsigned char 
 27265 ;; Return value:  Size  Location     Type
 27266 ;;                  1    wreg      void 
 27267 ;; Registers used:
 27268 ;;		wreg, status,2, status,0
 27269 ;; Tracked objects:
 27270 ;;		On entry : 0/0
 27271 ;;		On exit  : 0/0
 27272 ;;		Unchanged: 0/0
 27273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27274 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27275 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27277 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27278 ;;Total ram usage:        2 bytes
 27279 ;; Hardware stack levels used:    1
 27280 ;; Hardware stack levels required when called:   11
 27281 ;; This function calls:
 27282 ;;		Nothing
 27283 ;; This function is called by:
 27284 ;;		_Uart_WriteConstString
 27285 ;;		_Uart_WriteString
 27286 ;;		_Uart_WriteStringLen
 27287 ;; This function uses a non-reentrant model
 27288 ;;
 27289                           
 27290                           	psect	text122
 27291  005D50                     __ptext122:
 27292                           	opt stack 0
 27293  005D50                     _UartWriteByte:
 27294                           	opt stack 14
 27295                           
 27296                           ;incstack = 0
 27297                           ;UartWriteByte@Module stored from wreg
 27298  005D50  0100               	movlb	0	; () banked
 27299  005D52  6F7E               	movwf	UartWriteByte@Module& (0+255),b
 27300                           
 27301                           ;uart_drv.c: 175: if (Module == ((UINT8)(1)))
 27302  005D54  0100               	movlb	0	; () banked
 27303  005D56  057E               	decf	UartWriteByte@Module& (0+255),w,b
 27304  005D58  A4D8               	btfss	status,2,c
 27305  005D5A  D003               	goto	l639
 27306                           
 27307                           ; BSR set to: 0
 27308                           ;uart_drv.c: 176: {
 27309                           ;uart_drv.c: 178: TXREG1 = ByteToWrite;
 27310  005D5C  C07D  FFAE         	movff	UartWriteByte@ByteToWrite,4014	;volatile
 27311                           
 27312                           ;uart_drv.c: 179: }
 27313  005D60  0012               	return	
 27314  005D62                     l639:
 27315                           
 27316                           ; BSR set to: 0
 27317                           ;uart_drv.c: 180: else if (Module == ((UINT8)(2)))
 27318                           
 27319                           ; BSR set to: 0
 27320  005D62  0E02               	movlw	2
 27321  005D64  197E               	xorwf	UartWriteByte@Module& (0+255),w,b
 27322  005D66  A4D8               	btfss	status,2,c
 27323  005D68  0012               	return	
 27324                           
 27325                           ; BSR set to: 0
 27326                           ;uart_drv.c: 181: {
 27327                           ;uart_drv.c: 183: TXREG2 = ByteToWrite;
 27328  005D6A  C07D  FFA9         	movff	UartWriteByte@ByteToWrite,4009	;volatile
 27329                           
 27330                           ; BSR set to: 0
 27331  005D6E  0012               	return	
 27332  005D70                     __end_of_UartWriteByte:
 27333                           	opt stack 0
 27334                           tosu	equ	0xFFF
 27335                           tosh	equ	0xFFE
 27336                           tosl	equ	0xFFD
 27337                           pclath	equ	0xFFA
 27338                           tblptru	equ	0xFF8
 27339                           tblptrh	equ	0xFF7
 27340                           tblptrl	equ	0xFF6
 27341                           tablat	equ	0xFF5
 27342                           prodh	equ	0xFF4
 27343                           prodl	equ	0xFF3
 27344                           intcon	equ	0xFF2
 27345                           intcon2	equ	0xFF1
 27346                           intcon3	equ	0xFF0
 27347                           indf0	equ	0xFEF
 27348                           postinc0	equ	0xFEE
 27349                           plusw0	equ	0xFEB
 27350                           fsr0h	equ	0xFEA
 27351                           fsr0l	equ	0xFE9
 27352                           wreg	equ	0xFE8
 27353                           indf1	equ	0xFE7
 27354                           postinc1	equ	0xFE6
 27355                           postdec1	equ	0xFE5
 27356                           plusw1	equ	0xFE3
 27357                           fsr1h	equ	0xFE2
 27358                           fsr1l	equ	0xFE1
 27359                           indf2	equ	0xFDF
 27360                           postinc2	equ	0xFDE
 27361                           postdec2	equ	0xFDD
 27362                           plusw2	equ	0xFDB
 27363                           fsr2h	equ	0xFDA
 27364                           fsr2l	equ	0xFD9
 27365                           status	equ	0xFD8
 27366                           
 27367 ;; *************** function _UartTxBufferStatus *****************
 27368 ;; Defined at:
 27369 ;;		line 223 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 27370 ;; Parameters:    Size  Location     Type
 27371 ;;  Module          1    wreg     unsigned char 
 27372 ;; Auto vars:     Size  Location     Type
 27373 ;;  Module          1   30[BANK0 ] unsigned char 
 27374 ;;  TxBufferStat    1   31[BANK0 ] enum E9017
 27375 ;; Return value:  Size  Location     Type
 27376 ;;                  1    wreg      enum E9017
 27377 ;; Registers used:
 27378 ;;		wreg, status,2, status,0
 27379 ;; Tracked objects:
 27380 ;;		On entry : 0/0
 27381 ;;		On exit  : 0/0
 27382 ;;		Unchanged: 0/0
 27383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27384 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27385 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27386 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27387 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27388 ;;Total ram usage:        3 bytes
 27389 ;; Hardware stack levels used:    1
 27390 ;; Hardware stack levels required when called:   11
 27391 ;; This function calls:
 27392 ;;		Nothing
 27393 ;; This function is called by:
 27394 ;;		_Uart_WriteConstString
 27395 ;;		_Uart_WriteString
 27396 ;;		_Uart_WriteStringLen
 27397 ;; This function uses a non-reentrant model
 27398 ;;
 27399                           
 27400                           	psect	text123
 27401  00536C                     __ptext123:
 27402                           	opt stack 0
 27403  00536C                     _UartTxBufferStatus:
 27404                           	opt stack 14
 27405                           
 27406                           ; BSR set to: 0
 27407                           ;incstack = 0
 27408                           ;UartTxBufferStatus@Module stored from wreg
 27409  00536C  0100               	movlb	0	; () banked
 27410  00536E  6F7E               	movwf	UartTxBufferStatus@Module& (0+255),b
 27411                           
 27412                           ;uart_drv.c: 225: TxBufferStatusType TxBufferStatus = TxBufferNotFull;
 27413  005370  0E00               	movlw	0
 27414  005372  0100               	movlb	0	; () banked
 27415  005374  6F7F               	movwf	UartTxBufferStatus@TxBufferStatus& (0+255),b
 27416                           
 27417                           ; BSR set to: 0
 27418                           ;uart_drv.c: 227: if (Module == ((UINT8)(1)))
 27419  005376  057E               	decf	UartTxBufferStatus@Module& (0+255),w,b
 27420  005378  A4D8               	btfss	status,2,c
 27421  00537A  D00B               	goto	l651
 27422                           
 27423                           ; BSR set to: 0
 27424                           ;uart_drv.c: 228: {
 27425                           ;uart_drv.c: 230: if (((TXSTA1 >> ((UINT8)(1))) & ((UINT8)(0x01))) == ((UINT8)(0)))
 27426  00537C  CFAD F07D          	movff	4013,??_UartTxBufferStatus	;volatile
 27427  005380  90D8               	bcf	status,0,c
 27428  005382  337D               	rrcf	??_UartTxBufferStatus& (0+255),f,b
 27429  005384  B17D               	btfsc	??_UartTxBufferStatus& (0+255),0,b
 27430  005386  D002               	goto	l652
 27431  005388                     u10750:
 27432                           
 27433                           ; BSR set to: 0
 27434                           ;uart_drv.c: 231: {
 27435                           ;uart_drv.c: 232: TxBufferStatus = TxBufferFull;
 27436  005388  0E01               	movlw	1
 27437  00538A  D014               	goto	L40
 27438  00538C                     l652:
 27439                           
 27440                           ; BSR set to: 0
 27441                           ;uart_drv.c: 234: else if (((TXSTA1 >> ((UINT8)(1))) & ((UINT8)(0x01))) == ((UINT8)(1)))
 27442                           
 27443                           ; BSR set to: 0
 27444  00538C  CFAD F07D          	movff	4013,??_UartTxBufferStatus	;volatile
 27445  005390  D00C               	goto	L69
 27446  005392                     l651:
 27447                           
 27448                           ; BSR set to: 0
 27449                           ;uart_drv.c: 243: else if (Module == ((UINT8)(2)))
 27450                           
 27451                           ; BSR set to: 0
 27452  005392  0E02               	movlw	2
 27453  005394  197E               	xorwf	UartTxBufferStatus@Module& (0+255),w,b
 27454  005396  A4D8               	btfss	status,2,c
 27455  005398  D00E               	goto	l660
 27456                           
 27457                           ; BSR set to: 0
 27458                           ;uart_drv.c: 244: {
 27459                           ;uart_drv.c: 246: if (((TXSTA2 >> ((UINT8)(1))) & ((UINT8)(0x01))) == ((UINT8)(0)))
 27460  00539A  CFA8 F07D          	movff	4008,??_UartTxBufferStatus	;volatile
 27461  00539E  90D8               	bcf	status,0,c
 27462  0053A0  337D               	rrcf	??_UartTxBufferStatus& (0+255),f,b
 27463  0053A2  A17D               	btfss	??_UartTxBufferStatus& (0+255),0,b
 27464  0053A4  D7F1               	goto	u10750
 27465                           
 27466                           ; BSR set to: 0
 27467                           ;uart_drv.c: 250: else if (((TXSTA2 >> ((UINT8)(1))) & ((UINT8)(0x01))) == ((UINT8)(1)))
 27468                           
 27469                           ; BSR set to: 0
 27470                           
 27471                           ;uart_drv.c: 249: }
 27472                           
 27473                           ; BSR set to: 0
 27474                           ;uart_drv.c: 247: {
 27475                           ;uart_drv.c: 248: TxBufferStatus = TxBufferFull;
 27476  0053A6  CFA8 F07D          	movff	4008,??_UartTxBufferStatus	;volatile
 27477  0053AA                     L69:
 27478  0053AA  90D8               	bcf	status,0,c
 27479  0053AC  337D               	rrcf	??_UartTxBufferStatus& (0+255),f,b
 27480  0053AE  A17D               	btfss	??_UartTxBufferStatus& (0+255),0,b
 27481  0053B0  D002               	goto	l660
 27482                           
 27483                           ; BSR set to: 0
 27484                           ;uart_drv.c: 251: {
 27485                           ;uart_drv.c: 252: TxBufferStatus = TxBufferEmpty;
 27486  0053B2  0E02               	movlw	2
 27487  0053B4                     L40:
 27488  0053B4  6F7F               	movwf	UartTxBufferStatus@TxBufferStatus& (0+255),b
 27489  0053B6                     l660:
 27490                           
 27491                           ; BSR set to: 0
 27492                           ;uart_drv.c: 257: }
 27493                           ;uart_drv.c: 258: }
 27494                           ;uart_drv.c: 260: return TxBufferStatus;
 27495                           
 27496                           ; BSR set to: 0
 27497                           
 27498                           ; BSR set to: 0
 27499                           
 27500                           ; BSR set to: 0
 27501                           
 27502                           ; BSR set to: 0
 27503                           
 27504                           ;uart_drv.c: 254: else
 27505                           ;uart_drv.c: 255: {
 27506                           
 27507                           ; BSR set to: 0
 27508  0053B6  517F               	movf	UartTxBufferStatus@TxBufferStatus& (0+255),w,b
 27509  0053B8  0012               	return	
 27510  0053BA                     __end_of_UartTxBufferStatus:
 27511                           	opt stack 0
 27512                           tosu	equ	0xFFF
 27513                           tosh	equ	0xFFE
 27514                           tosl	equ	0xFFD
 27515                           pclath	equ	0xFFA
 27516                           tblptru	equ	0xFF8
 27517                           tblptrh	equ	0xFF7
 27518                           tblptrl	equ	0xFF6
 27519                           tablat	equ	0xFF5
 27520                           prodh	equ	0xFF4
 27521                           prodl	equ	0xFF3
 27522                           intcon	equ	0xFF2
 27523                           intcon2	equ	0xFF1
 27524                           intcon3	equ	0xFF0
 27525                           indf0	equ	0xFEF
 27526                           postinc0	equ	0xFEE
 27527                           plusw0	equ	0xFEB
 27528                           fsr0h	equ	0xFEA
 27529                           fsr0l	equ	0xFE9
 27530                           wreg	equ	0xFE8
 27531                           indf1	equ	0xFE7
 27532                           postinc1	equ	0xFE6
 27533                           postdec1	equ	0xFE5
 27534                           plusw1	equ	0xFE3
 27535                           fsr1h	equ	0xFE2
 27536                           fsr1l	equ	0xFE1
 27537                           indf2	equ	0xFDF
 27538                           postinc2	equ	0xFDE
 27539                           postdec2	equ	0xFDD
 27540                           plusw2	equ	0xFDB
 27541                           fsr2h	equ	0xFDA
 27542                           fsr2l	equ	0xFD9
 27543                           status	equ	0xFD8
 27544                           
 27545 ;; *************** function _StringCopy *****************
 27546 ;; Defined at:
 27547 ;;		line 104 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/sf.c"
 27548 ;; Parameters:    Size  Location     Type
 27549 ;;  SourceStr       2   29[BANK0 ] PTR unsigned char 
 27550 ;;		 -> STR_15(20), STR_9(21), MessageText(50), PhoneNumber(20), 
 27551 ;;		 -> STR_5(10), Mdm_SmsRx(132), RxBuffer(400), 
 27552 ;;  DestStr         2   31[BANK0 ] PTR unsigned char 
 27553 ;;		 -> MyApp_Task@smsText(50), HttpGetMethod@UartMessage(200), InitGprsNetwork@UartMessage(50), MessageText(50), 
 27554 ;;		 -> PhoneNumber(20), SendSmsSm@UartMessage(50), Mdm_SmsRx(132), 
 27555 ;;  Len             2   33[BANK0 ] unsigned short 
 27556 ;; Auto vars:     Size  Location     Type
 27557 ;;  Index           2   37[BANK0 ] unsigned short 
 27558 ;; Return value:  Size  Location     Type
 27559 ;;                  1    wreg      void 
 27560 ;; Registers used:
 27561 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 27562 ;; Tracked objects:
 27563 ;;		On entry : 0/0
 27564 ;;		On exit  : 0/0
 27565 ;;		Unchanged: 0/0
 27566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27567 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27568 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27569 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27570 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27571 ;;Total ram usage:       10 bytes
 27572 ;; Hardware stack levels used:    1
 27573 ;; Hardware stack levels required when called:   11
 27574 ;; This function calls:
 27575 ;;		Nothing
 27576 ;; This function is called by:
 27577 ;;		_GetSmsSm
 27578 ;;		_SendSmsSm
 27579 ;;		_Mdm_GetSmsData
 27580 ;;		_InitGprsNetwork
 27581 ;;		_HttpGetMethod
 27582 ;;		_Mdm_SendSmsData
 27583 ;; This function uses a non-reentrant model
 27584 ;;
 27585                           
 27586                           	psect	text124
 27587  004E00                     __ptext124:
 27588                           	opt stack 0
 27589  004E00                     _StringCopy:
 27590                           	opt stack 15
 27591                           
 27592                           ;sf.c: 106: UINT16 Index = 0;
 27593                           
 27594                           ; BSR set to: 0
 27595                           ;incstack = 0
 27596  004E00  0E00               	movlw	0
 27597  004E02  0100               	movlb	0	; () banked
 27598  004E04  6F86               	movwf	(StringCopy@Index+1)& (0+255),b
 27599  004E06  0E00               	movlw	0
 27600  004E08  6F85               	movwf	StringCopy@Index& (0+255),b
 27601                           
 27602                           ;sf.c: 109: for (Index = 0; Index < Len; Index++)
 27603  004E0A  0E00               	movlw	0
 27604  004E0C  6F86               	movwf	(StringCopy@Index+1)& (0+255),b
 27605  004E0E  0E00               	movlw	0
 27606  004E10  6F85               	movwf	StringCopy@Index& (0+255),b
 27607  004E12  D020               	goto	l2204
 27608  004E14                     
 27609                           ; BSR set to: 0
 27610                           ;sf.c: 110: {
 27611                           ;sf.c: 111: DestStr[Index] = SourceStr[Index];
 27612                           
 27613                           ; BSR set to: 0
 27614  004E14  5185               	movf	StringCopy@Index& (0+255),w,b
 27615  004E16  257D               	addwf	StringCopy@SourceStr& (0+255),w,b
 27616  004E18  6F83               	movwf	??_StringCopy& (0+255),b
 27617  004E1A  5186               	movf	(StringCopy@Index+1)& (0+255),w,b
 27618  004E1C  217E               	addwfc	(StringCopy@SourceStr+1)& (0+255),w,b
 27619  004E1E  6F84               	movwf	(??_StringCopy+1)& (0+255),b
 27620  004E20  C083  FFF6         	movff	??_StringCopy,tblptrl
 27621  004E24  C084  FFF7         	movff	??_StringCopy+1,tblptrh
 27622  004E28  6AF8               	clrf	tblptru,c
 27623  004E2A  5185               	movf	StringCopy@Index& (0+255),w,b
 27624  004E2C  257F               	addwf	StringCopy@DestStr& (0+255),w,b
 27625  004E2E  6ED9               	movwf	fsr2l,c
 27626  004E30  5186               	movf	(StringCopy@Index+1)& (0+255),w,b
 27627  004E32  2180               	addwfc	(StringCopy@DestStr+1)& (0+255),w,b
 27628  004E34  6EDA               	movwf	fsr2h,c
 27629  004E36  0E0E               	movlw	(high __ramtop+-1)
 27630  004E38  64F7               	cpfsgt	tblptrh,c
 27631  004E3A  D003               	bra	u11447
 27632  004E3C  0008               	tblrd		*
 27633  004E3E  50F5               	movf	tablat,w,c
 27634  004E40  D005               	bra	u11440
 27635  004E42                     u11447:
 27636  004E42  CFF6 FFE9          	movff	tblptrl,fsr0l
 27637  004E46  CFF7 FFEA          	movff	tblptrh,fsr0h
 27638  004E4A  50EF               	movf	indf0,w,c
 27639  004E4C                     u11440:
 27640  004E4C  6EDF               	movwf	indf2,c
 27641  004E4E  0100               	movlb	0	; () banked
 27642  004E50  4B85               	infsnz	StringCopy@Index& (0+255),f,b
 27643  004E52  2B86               	incf	(StringCopy@Index+1)& (0+255),f,b
 27644  004E54                     l2204:
 27645                           
 27646                           ; BSR set to: 0
 27647                           
 27648                           ; BSR set to: 0
 27649  004E54  5181               	movf	StringCopy@Len& (0+255),w,b
 27650  004E56  5D85               	subwf	StringCopy@Index& (0+255),w,b
 27651  004E58  5182               	movf	(StringCopy@Len+1)& (0+255),w,b
 27652  004E5A  5986               	subwfb	(StringCopy@Index+1)& (0+255),w,b
 27653  004E5C  B0D8               	btfsc	status,0,c
 27654  004E5E  0012               	return	
 27655  004E60  D7D9               	goto	l2205
 27656  004E62                     __end_of_StringCopy:
 27657                           	opt stack 0
 27658                           tosu	equ	0xFFF
 27659                           tosh	equ	0xFFE
 27660                           tosl	equ	0xFFD
 27661                           pclath	equ	0xFFA
 27662                           tblptru	equ	0xFF8
 27663                           tblptrh	equ	0xFF7
 27664                           tblptrl	equ	0xFF6
 27665                           tablat	equ	0xFF5
 27666                           prodh	equ	0xFF4
 27667                           prodl	equ	0xFF3
 27668                           intcon	equ	0xFF2
 27669                           intcon2	equ	0xFF1
 27670                           intcon3	equ	0xFF0
 27671                           indf0	equ	0xFEF
 27672                           postinc0	equ	0xFEE
 27673                           plusw0	equ	0xFEB
 27674                           fsr0h	equ	0xFEA
 27675                           fsr0l	equ	0xFE9
 27676                           wreg	equ	0xFE8
 27677                           indf1	equ	0xFE7
 27678                           postinc1	equ	0xFE6
 27679                           postdec1	equ	0xFE5
 27680                           plusw1	equ	0xFE3
 27681                           fsr1h	equ	0xFE2
 27682                           fsr1l	equ	0xFE1
 27683                           indf2	equ	0xFDF
 27684                           postinc2	equ	0xFDE
 27685                           postdec2	equ	0xFDD
 27686                           plusw2	equ	0xFDB
 27687                           fsr2h	equ	0xFDA
 27688                           fsr2l	equ	0xFD9
 27689                           status	equ	0xFD8
 27690                           
 27691 ;; *************** function _OsTmr_StartTimer *****************
 27692 ;; Defined at:
 27693 ;;		line 118 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 27694 ;; Parameters:    Size  Location     Type
 27695 ;;  Timer           2   33[BANK0 ] PTR struct _SwTimerType
 27696 ;;		 -> Term_MainSm@TermDelay(11), Terminal@SwTimer(11), I2cSlv_QueryI2cData@TimeoutTimer(11), I2cSlv_QueryI2cData@Query
      +Timer(11), 
 27697 ;;		 -> ConnWait(11), ConnTimeout(11), SendSmsSm@SwTimer(11), CheckModem@Timeout(11), 
 27698 ;;  Timeout         4   35[BANK0 ] unsigned long 
 27699 ;; Auto vars:     Size  Location     Type
 27700 ;;		None
 27701 ;; Return value:  Size  Location     Type
 27702 ;;                  1    wreg      void 
 27703 ;; Registers used:
 27704 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 27705 ;; Tracked objects:
 27706 ;;		On entry : 0/0
 27707 ;;		On exit  : 0/0
 27708 ;;		Unchanged: 0/0
 27709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27710 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27711 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27713 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27714 ;;Total ram usage:        6 bytes
 27715 ;; Hardware stack levels used:    1
 27716 ;; Hardware stack levels required when called:   12
 27717 ;; This function calls:
 27718 ;;		_GetOsTickCounter
 27719 ;; This function is called by:
 27720 ;;		_OsTmr_Wait
 27721 ;;		_CheckModem
 27722 ;;		_SendSmsSm
 27723 ;;		_InitGprsNetwork
 27724 ;;		_HttpGetMethod
 27725 ;;		_Term_MainSm
 27726 ;;		_I2cSlv_QueryI2cData
 27727 ;; This function uses a non-reentrant model
 27728 ;;
 27729                           
 27730                           	psect	text125
 27731  004EC0                     __ptext125:
 27732                           	opt stack 0
 27733  004EC0                     _OsTmr_StartTimer:
 27734                           	opt stack 12
 27735                           
 27736                           ;os_timers.c: 121: Timer->Status = SwTmrNotExpired;
 27737                           
 27738                           ; BSR set to: 0
 27739                           ;incstack = 0
 27740  004EC0  0100               	movlb	0	; () banked
 27741  004EC2  EE20 F001          	lfsr	2,1
 27742  004EC6  5181               	movf	OsTmr_StartTimer@Timer& (0+255),w,b
 27743  004EC8  26D9               	addwf	fsr2l,f,c
 27744  004ECA  5182               	movf	(OsTmr_StartTimer@Timer+1)& (0+255),w,b
 27745  004ECC  22DA               	addwfc	fsr2h,f,c
 27746  004ECE  0E00               	movlw	0
 27747  004ED0  6EDF               	movwf	indf2,c
 27748                           
 27749                           ; BSR set to: 0
 27750                           ;os_timers.c: 123: Timer->StartTime = GetOsTickCounter();
 27751  004ED2  EC79  F02F         	call	_GetOsTickCounter	;wreg free
 27752  004ED6  0100               	movlb	0	; () banked
 27753  004ED8  EE20 F002          	lfsr	2,2
 27754  004EDC  5181               	movf	OsTmr_StartTimer@Timer& (0+255),w,b
 27755  004EDE  26D9               	addwf	fsr2l,f,c
 27756  004EE0  5182               	movf	(OsTmr_StartTimer@Timer+1)& (0+255),w,b
 27757  004EE2  22DA               	addwfc	fsr2h,f,c
 27758  004EE4  C07D  FFDE         	movff	?_GetOsTickCounter,postinc2
 27759  004EE8  C07E  FFDE         	movff	?_GetOsTickCounter+1,postinc2
 27760  004EEC  C07F  FFDE         	movff	?_GetOsTickCounter+2,postinc2
 27761  004EF0  C080  FFDE         	movff	?_GetOsTickCounter+3,postinc2
 27762                           
 27763                           ; BSR set to: 0
 27764                           ;os_timers.c: 125: Timer->TargetTime = Timeout;
 27765  004EF4  EE20 F006          	lfsr	2,6
 27766  004EF8  5181               	movf	OsTmr_StartTimer@Timer& (0+255),w,b
 27767  004EFA  26D9               	addwf	fsr2l,f,c
 27768  004EFC  5182               	movf	(OsTmr_StartTimer@Timer+1)& (0+255),w,b
 27769  004EFE  22DA               	addwfc	fsr2h,f,c
 27770  004F00  C083  FFDE         	movff	OsTmr_StartTimer@Timeout,postinc2
 27771  004F04  C084  FFDE         	movff	OsTmr_StartTimer@Timeout+1,postinc2
 27772  004F08  C085  FFDE         	movff	OsTmr_StartTimer@Timeout+2,postinc2
 27773  004F0C  C086  FFDE         	movff	OsTmr_StartTimer@Timeout+3,postinc2
 27774                           
 27775                           ; BSR set to: 0
 27776                           ;os_timers.c: 127: Timer->Enabled = 1u;
 27777  004F10  C081  FFD9         	movff	OsTmr_StartTimer@Timer,fsr2l
 27778  004F14  C082  FFDA         	movff	OsTmr_StartTimer@Timer+1,fsr2h
 27779  004F18  0E01               	movlw	1
 27780  004F1A  6EDF               	movwf	indf2,c
 27781                           
 27782                           ; BSR set to: 0
 27783  004F1C  0012               	return		;funcret
 27784  004F1E                     __end_of_OsTmr_StartTimer:
 27785                           	opt stack 0
 27786                           tosu	equ	0xFFF
 27787                           tosh	equ	0xFFE
 27788                           tosl	equ	0xFFD
 27789                           pclath	equ	0xFFA
 27790                           tblptru	equ	0xFF8
 27791                           tblptrh	equ	0xFF7
 27792                           tblptrl	equ	0xFF6
 27793                           tablat	equ	0xFF5
 27794                           prodh	equ	0xFF4
 27795                           prodl	equ	0xFF3
 27796                           intcon	equ	0xFF2
 27797                           intcon2	equ	0xFF1
 27798                           intcon3	equ	0xFF0
 27799                           indf0	equ	0xFEF
 27800                           postinc0	equ	0xFEE
 27801                           plusw0	equ	0xFEB
 27802                           fsr0h	equ	0xFEA
 27803                           fsr0l	equ	0xFE9
 27804                           wreg	equ	0xFE8
 27805                           indf1	equ	0xFE7
 27806                           postinc1	equ	0xFE6
 27807                           postdec1	equ	0xFE5
 27808                           plusw1	equ	0xFE3
 27809                           fsr1h	equ	0xFE2
 27810                           fsr1l	equ	0xFE1
 27811                           indf2	equ	0xFDF
 27812                           postinc2	equ	0xFDE
 27813                           postdec2	equ	0xFDD
 27814                           plusw2	equ	0xFDB
 27815                           fsr2h	equ	0xFDA
 27816                           fsr2l	equ	0xFD9
 27817                           status	equ	0xFD8
 27818                           
 27819 ;; *************** function _OsTmr_GetTimerStatus *****************
 27820 ;; Defined at:
 27821 ;;		line 193 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 27822 ;; Parameters:    Size  Location     Type
 27823 ;;  Timer           2   53[BANK0 ] PTR struct _SwTimerType
 27824 ;;		 -> Term_MainSm@TermDelay(11), Terminal@SwTimer(11), I2cSlv_QueryI2cData@TimeoutTimer(11), I2cSlv_QueryI2cData@Query
      +Timer(11), 
 27825 ;;		 -> ConnWait(11), ConnTimeout(11), SendSmsSm@SwTimer(11), CheckModem@Timeout(11), 
 27826 ;; Auto vars:     Size  Location     Type
 27827 ;;		None
 27828 ;; Return value:  Size  Location     Type
 27829 ;;                  1    wreg      enum E7740
 27830 ;; Registers used:
 27831 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 27832 ;; Tracked objects:
 27833 ;;		On entry : 0/0
 27834 ;;		On exit  : 0/0
 27835 ;;		Unchanged: 0/0
 27836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27837 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27838 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27839 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27840 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27841 ;;Total ram usage:        6 bytes
 27842 ;; Hardware stack levels used:    1
 27843 ;; Hardware stack levels required when called:   13
 27844 ;; This function calls:
 27845 ;;		_GetElapsedTime
 27846 ;; This function is called by:
 27847 ;;		_OsTmr_Wait
 27848 ;;		_CheckModem
 27849 ;;		_SendSmsSm
 27850 ;;		_InitGprsNetwork
 27851 ;;		_HttpGetMethod
 27852 ;;		_Term_MainSm
 27853 ;;		_I2cSlv_QueryI2cData
 27854 ;; This function uses a non-reentrant model
 27855 ;;
 27856                           
 27857                           	psect	text126
 27858  0047D2                     __ptext126:
 27859                           	opt stack 0
 27860  0047D2                     _OsTmr_GetTimerStatus:
 27861                           	opt stack 11
 27862                           
 27863                           ;os_timers.c: 196: if (Timer->Enabled == 1u)
 27864                           
 27865                           ; BSR set to: 0
 27866                           ;incstack = 0
 27867  0047D2  C095  FFD9         	movff	OsTmr_GetTimerStatus@Timer,fsr2l
 27868  0047D6  C096  FFDA         	movff	OsTmr_GetTimerStatus@Timer+1,fsr2h
 27869  0047DA  04DE               	decf	postinc2,w,c
 27870  0047DC  A4D8               	btfss	status,2,c
 27871  0047DE  D030               	goto	l864
 27872                           
 27873                           ;os_timers.c: 197: {
 27874                           ;os_timers.c: 199: if (GetElapsedTime(Timer->StartTime) >= Timer->TargetTime)
 27875  0047E0  0100               	movlb	0	; () banked
 27876  0047E2  EE20 F006          	lfsr	2,6
 27877  0047E6  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 27878  0047E8  26D9               	addwf	fsr2l,f,c
 27879  0047EA  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 27880  0047EC  22DA               	addwfc	fsr2h,f,c
 27881  0047EE  EE10 F002          	lfsr	1,2
 27882  0047F2  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 27883  0047F4  26E1               	addwf	fsr1l,f,c
 27884  0047F6  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 27885  0047F8  22E2               	addwfc	fsr1h,f,c
 27886  0047FA  CFE6 F081          	movff	postinc1,GetElapsedTime@StartTime
 27887  0047FE  CFE6 F082          	movff	postinc1,GetElapsedTime@StartTime+1
 27888  004802  CFE6 F083          	movff	postinc1,GetElapsedTime@StartTime+2
 27889  004806  CFE6 F084          	movff	postinc1,GetElapsedTime@StartTime+3
 27890  00480A  EC37  F01D         	call	_GetElapsedTime	;wreg free
 27891  00480E  50DE               	movf	postinc2,w,c
 27892  004810  0100               	movlb	0	; () banked
 27893  004812  5D81               	subwf	?_GetElapsedTime& (0+255),w,b
 27894  004814  50DE               	movf	postinc2,w,c
 27895  004816  5982               	subwfb	(?_GetElapsedTime+1)& (0+255),w,b
 27896  004818  50DE               	movf	postinc2,w,c
 27897  00481A  5983               	subwfb	(?_GetElapsedTime+2)& (0+255),w,b
 27898  00481C  50DE               	movf	postinc2,w,c
 27899  00481E  5984               	subwfb	(?_GetElapsedTime+3)& (0+255),w,b
 27900  004820  A0D8               	btfss	status,0,c
 27901  004822  D017               	goto	l867
 27902                           
 27903                           ; BSR set to: 0
 27904                           ;os_timers.c: 200: {
 27905                           ;os_timers.c: 202: Timer->Enabled = 0u;
 27906  004824  C095  FFD9         	movff	OsTmr_GetTimerStatus@Timer,fsr2l
 27907  004828  C096  FFDA         	movff	OsTmr_GetTimerStatus@Timer+1,fsr2h
 27908  00482C  0E00               	movlw	0
 27909  00482E  6EDF               	movwf	indf2,c
 27910                           
 27911                           ; BSR set to: 0
 27912                           ;os_timers.c: 204: Timer->Status = SwTimerExpired;
 27913  004830  EE20 F001          	lfsr	2,1
 27914  004834  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 27915  004836  26D9               	addwf	fsr2l,f,c
 27916  004838  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 27917  00483A  22DA               	addwfc	fsr2h,f,c
 27918  00483C  0E01               	movlw	1
 27919  00483E  D008               	goto	L70
 27920  004840                     l864:
 27921                           
 27922                           ;os_timers.c: 211: else
 27923                           ;os_timers.c: 212: {
 27924                           ;os_timers.c: 214: Timer->Status = SwTimerDisabled;
 27925                           
 27926                           ; BSR set to: 0
 27927  004840  0100               	movlb	0	; () banked
 27928  004842  EE20 F001          	lfsr	2,1
 27929  004846  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 27930  004848  26D9               	addwf	fsr2l,f,c
 27931  00484A  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 27932  00484C  22DA               	addwfc	fsr2h,f,c
 27933  00484E  0E02               	movlw	2
 27934  004850                     L70:
 27935  004850  6EDF               	movwf	indf2,c
 27936  004852                     l867:
 27937                           
 27938                           ; BSR set to: 0
 27939                           ;os_timers.c: 215: }
 27940                           ;os_timers.c: 218: return Timer->Status;
 27941  004852  EE20 F001          	lfsr	2,1
 27942  004856  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 27943  004858  26D9               	addwf	fsr2l,f,c
 27944  00485A  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 27945  00485C  22DA               	addwfc	fsr2h,f,c
 27946  00485E  50DF               	movf	indf2,w,c
 27947  004860  0012               	return	
 27948  004862                     __end_of_OsTmr_GetTimerStatus:
 27949                           	opt stack 0
 27950                           tosu	equ	0xFFF
 27951                           tosh	equ	0xFFE
 27952                           tosl	equ	0xFFD
 27953                           pclath	equ	0xFFA
 27954                           tblptru	equ	0xFF8
 27955                           tblptrh	equ	0xFF7
 27956                           tblptrl	equ	0xFF6
 27957                           tablat	equ	0xFF5
 27958                           prodh	equ	0xFF4
 27959                           prodl	equ	0xFF3
 27960                           intcon	equ	0xFF2
 27961                           intcon2	equ	0xFF1
 27962                           intcon3	equ	0xFF0
 27963                           indf0	equ	0xFEF
 27964                           postinc0	equ	0xFEE
 27965                           plusw0	equ	0xFEB
 27966                           fsr0h	equ	0xFEA
 27967                           fsr0l	equ	0xFE9
 27968                           wreg	equ	0xFE8
 27969                           indf1	equ	0xFE7
 27970                           postinc1	equ	0xFE6
 27971                           postdec1	equ	0xFE5
 27972                           plusw1	equ	0xFE3
 27973                           fsr1h	equ	0xFE2
 27974                           fsr1l	equ	0xFE1
 27975                           indf2	equ	0xFDF
 27976                           postinc2	equ	0xFDE
 27977                           postdec2	equ	0xFDD
 27978                           plusw2	equ	0xFDB
 27979                           fsr2h	equ	0xFDA
 27980                           fsr2l	equ	0xFD9
 27981                           status	equ	0xFD8
 27982                           
 27983 ;; *************** function _GetElapsedTime *****************
 27984 ;; Defined at:
 27985 ;;		line 84 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 27986 ;; Parameters:    Size  Location     Type
 27987 ;;  StartTime       4   33[BANK0 ] unsigned long 
 27988 ;; Auto vars:     Size  Location     Type
 27989 ;;  CurrentTimes    4   49[BANK0 ] unsigned long 
 27990 ;;  TimeValue       4   45[BANK0 ] unsigned long 
 27991 ;; Return value:  Size  Location     Type
 27992 ;;                  4   33[BANK0 ] unsigned long 
 27993 ;; Registers used:
 27994 ;;		wreg, status,2, status,0, cstack
 27995 ;; Tracked objects:
 27996 ;;		On entry : 0/0
 27997 ;;		On exit  : 0/0
 27998 ;;		Unchanged: 0/0
 27999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28000 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28001 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28002 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28003 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28004 ;;Total ram usage:       20 bytes
 28005 ;; Hardware stack levels used:    1
 28006 ;; Hardware stack levels required when called:   12
 28007 ;; This function calls:
 28008 ;;		_GetOsTickCounter
 28009 ;; This function is called by:
 28010 ;;		_OsTmr_GetTimerStatus
 28011 ;;		_OsTmr_GetRemainingTime
 28012 ;; This function uses a non-reentrant model
 28013 ;;
 28014                           
 28015                           	psect	text127
 28016  003A6E                     __ptext127:
 28017                           	opt stack 0
 28018  003A6E                     _GetElapsedTime:
 28019                           	opt stack 11
 28020                           
 28021                           ;os_timers.c: 86: UINT32 CurrentTimestamp;
 28022                           ;os_timers.c: 87: UINT32 TimeValue;
 28023                           ;os_timers.c: 90: CurrentTimestamp = GetOsTickCounter();
 28024                           
 28025                           ; BSR set to: 0
 28026                           ;incstack = 0
 28027  003A6E  EC79  F02F         	call	_GetOsTickCounter	;wreg free
 28028  003A72  C07D  F091         	movff	?_GetOsTickCounter,GetElapsedTime@CurrentTimestamp
 28029  003A76  C07E  F092         	movff	?_GetOsTickCounter+1,GetElapsedTime@CurrentTimestamp+1
 28030  003A7A  C07F  F093         	movff	?_GetOsTickCounter+2,GetElapsedTime@CurrentTimestamp+2
 28031  003A7E  C080  F094         	movff	?_GetOsTickCounter+3,GetElapsedTime@CurrentTimestamp+3
 28032                           
 28033                           ;os_timers.c: 93: if (CurrentTimestamp >= StartTime)
 28034  003A82  0100               	movlb	0	; () banked
 28035  003A84  5181               	movf	GetElapsedTime@StartTime& (0+255),w,b
 28036  003A86  5D91               	subwf	GetElapsedTime@CurrentTimestamp& (0+255),w,b
 28037  003A88  5182               	movf	(GetElapsedTime@StartTime+1)& (0+255),w,b
 28038  003A8A  5992               	subwfb	(GetElapsedTime@CurrentTimestamp+1)& (0+255),w,b
 28039  003A8C  5183               	movf	(GetElapsedTime@StartTime+2)& (0+255),w,b
 28040  003A8E  5993               	subwfb	(GetElapsedTime@CurrentTimestamp+2)& (0+255),w,b
 28041  003A90  5184               	movf	(GetElapsedTime@StartTime+3)& (0+255),w,b
 28042  003A92  5994               	subwfb	(GetElapsedTime@CurrentTimestamp+3)& (0+255),w,b
 28043  003A94  A0D8               	btfss	status,0,c
 28044  003A96  D01D               	goto	l844
 28045                           
 28046                           ; BSR set to: 0
 28047                           ;os_timers.c: 94: {
 28048                           ;os_timers.c: 95: TimeValue = (CurrentTimestamp - StartTime);
 28049  003A98  C081  F085         	movff	GetElapsedTime@StartTime,??_GetElapsedTime
 28050  003A9C  C082  F086         	movff	GetElapsedTime@StartTime+1,??_GetElapsedTime+1
 28051  003AA0  C083  F087         	movff	GetElapsedTime@StartTime+2,??_GetElapsedTime+2
 28052  003AA4  C084  F088         	movff	GetElapsedTime@StartTime+3,??_GetElapsedTime+3
 28053  003AA8  1F85               	comf	??_GetElapsedTime& (0+255),f,b
 28054  003AAA  1F86               	comf	(??_GetElapsedTime+1)& (0+255),f,b
 28055  003AAC  1F87               	comf	(??_GetElapsedTime+2)& (0+255),f,b
 28056  003AAE  1F88               	comf	(??_GetElapsedTime+3)& (0+255),f,b
 28057  003AB0  2B85               	incf	??_GetElapsedTime& (0+255),f,b
 28058  003AB2  0E00               	movlw	0
 28059  003AB4  2386               	addwfc	(??_GetElapsedTime+1)& (0+255),f,b
 28060  003AB6  2387               	addwfc	(??_GetElapsedTime+2)& (0+255),f,b
 28061  003AB8  2388               	addwfc	(??_GetElapsedTime+3)& (0+255),f,b
 28062  003ABA  5191               	movf	GetElapsedTime@CurrentTimestamp& (0+255),w,b
 28063  003ABC  2585               	addwf	??_GetElapsedTime& (0+255),w,b
 28064  003ABE  6F8D               	movwf	GetElapsedTime@TimeValue& (0+255),b
 28065  003AC0  5192               	movf	(GetElapsedTime@CurrentTimestamp+1)& (0+255),w,b
 28066  003AC2  2186               	addwfc	(??_GetElapsedTime+1)& (0+255),w,b
 28067  003AC4  6F8E               	movwf	(GetElapsedTime@TimeValue+1)& (0+255),b
 28068  003AC6  5193               	movf	(GetElapsedTime@CurrentTimestamp+2)& (0+255),w,b
 28069  003AC8  2187               	addwfc	(??_GetElapsedTime+2)& (0+255),w,b
 28070  003ACA  6F8F               	movwf	(GetElapsedTime@TimeValue+2)& (0+255),b
 28071  003ACC  5194               	movf	(GetElapsedTime@CurrentTimestamp+3)& (0+255),w,b
 28072  003ACE  2188               	addwfc	(??_GetElapsedTime+3)& (0+255),w,b
 28073  003AD0  D028               	goto	L41
 28074  003AD2                     l844:
 28075                           
 28076                           ; BSR set to: 0
 28077                           ;os_timers.c: 97: else
 28078                           ;os_timers.c: 98: {
 28079                           ;os_timers.c: 99: TimeValue = (CurrentTimestamp + 0xFFFFFFFF) - StartTime;
 28080                           
 28081                           ; BSR set to: 0
 28082  003AD2  C081  F085         	movff	GetElapsedTime@StartTime,??_GetElapsedTime
 28083  003AD6  C082  F086         	movff	GetElapsedTime@StartTime+1,??_GetElapsedTime+1
 28084  003ADA  C083  F087         	movff	GetElapsedTime@StartTime+2,??_GetElapsedTime+2
 28085  003ADE  C084  F088         	movff	GetElapsedTime@StartTime+3,??_GetElapsedTime+3
 28086  003AE2  1F85               	comf	??_GetElapsedTime& (0+255),f,b
 28087  003AE4  1F86               	comf	(??_GetElapsedTime+1)& (0+255),f,b
 28088  003AE6  1F87               	comf	(??_GetElapsedTime+2)& (0+255),f,b
 28089  003AE8  1F88               	comf	(??_GetElapsedTime+3)& (0+255),f,b
 28090  003AEA  2B85               	incf	??_GetElapsedTime& (0+255),f,b
 28091  003AEC  0E00               	movlw	0
 28092  003AEE  2386               	addwfc	(??_GetElapsedTime+1)& (0+255),f,b
 28093  003AF0  2387               	addwfc	(??_GetElapsedTime+2)& (0+255),f,b
 28094  003AF2  2388               	addwfc	(??_GetElapsedTime+3)& (0+255),f,b
 28095  003AF4  5191               	movf	GetElapsedTime@CurrentTimestamp& (0+255),w,b
 28096  003AF6  2585               	addwf	??_GetElapsedTime& (0+255),w,b
 28097  003AF8  6F89               	movwf	(??_GetElapsedTime+4)& (0+255),b
 28098  003AFA  5192               	movf	(GetElapsedTime@CurrentTimestamp+1)& (0+255),w,b
 28099  003AFC  2186               	addwfc	(??_GetElapsedTime+1)& (0+255),w,b
 28100  003AFE  6F8A               	movwf	(??_GetElapsedTime+5)& (0+255),b
 28101  003B00  5193               	movf	(GetElapsedTime@CurrentTimestamp+2)& (0+255),w,b
 28102  003B02  2187               	addwfc	(??_GetElapsedTime+2)& (0+255),w,b
 28103  003B04  6F8B               	movwf	(??_GetElapsedTime+6)& (0+255),b
 28104  003B06  5194               	movf	(GetElapsedTime@CurrentTimestamp+3)& (0+255),w,b
 28105  003B08  2188               	addwfc	(??_GetElapsedTime+3)& (0+255),w,b
 28106  003B0A  6F8C               	movwf	(??_GetElapsedTime+7)& (0+255),b
 28107  003B0C  0EFF               	movlw	255
 28108  003B0E  2589               	addwf	(??_GetElapsedTime+4)& (0+255),w,b
 28109  003B10  6F8D               	movwf	GetElapsedTime@TimeValue& (0+255),b
 28110  003B12  0EFF               	movlw	255
 28111  003B14  218A               	addwfc	(??_GetElapsedTime+5)& (0+255),w,b
 28112  003B16  6F8E               	movwf	(GetElapsedTime@TimeValue+1)& (0+255),b
 28113  003B18  0EFF               	movlw	255
 28114  003B1A  218B               	addwfc	(??_GetElapsedTime+6)& (0+255),w,b
 28115  003B1C  6F8F               	movwf	(GetElapsedTime@TimeValue+2)& (0+255),b
 28116  003B1E  0EFF               	movlw	255
 28117  003B20  218C               	addwfc	(??_GetElapsedTime+7)& (0+255),w,b
 28118  003B22                     L41:
 28119  003B22  6F90               	movwf	(GetElapsedTime@TimeValue+3)& (0+255),b
 28120                           
 28121                           ; BSR set to: 0
 28122                           ;os_timers.c: 100: }
 28123                           ;os_timers.c: 102: return TimeValue;
 28124                           
 28125                           ; BSR set to: 0
 28126  003B24  C08D  F081         	movff	GetElapsedTime@TimeValue,?_GetElapsedTime
 28127  003B28  C08E  F082         	movff	GetElapsedTime@TimeValue+1,?_GetElapsedTime+1
 28128  003B2C  C08F  F083         	movff	GetElapsedTime@TimeValue+2,?_GetElapsedTime+2
 28129  003B30  C090  F084         	movff	GetElapsedTime@TimeValue+3,?_GetElapsedTime+3
 28130  003B34  0012               	return	
 28131  003B36                     __end_of_GetElapsedTime:
 28132                           	opt stack 0
 28133                           tosu	equ	0xFFF
 28134                           tosh	equ	0xFFE
 28135                           tosl	equ	0xFFD
 28136                           pclath	equ	0xFFA
 28137                           tblptru	equ	0xFF8
 28138                           tblptrh	equ	0xFF7
 28139                           tblptrl	equ	0xFF6
 28140                           tablat	equ	0xFF5
 28141                           prodh	equ	0xFF4
 28142                           prodl	equ	0xFF3
 28143                           intcon	equ	0xFF2
 28144                           intcon2	equ	0xFF1
 28145                           intcon3	equ	0xFF0
 28146                           indf0	equ	0xFEF
 28147                           postinc0	equ	0xFEE
 28148                           plusw0	equ	0xFEB
 28149                           fsr0h	equ	0xFEA
 28150                           fsr0l	equ	0xFE9
 28151                           wreg	equ	0xFE8
 28152                           indf1	equ	0xFE7
 28153                           postinc1	equ	0xFE6
 28154                           postdec1	equ	0xFE5
 28155                           plusw1	equ	0xFE3
 28156                           fsr1h	equ	0xFE2
 28157                           fsr1l	equ	0xFE1
 28158                           indf2	equ	0xFDF
 28159                           postinc2	equ	0xFDE
 28160                           postdec2	equ	0xFDD
 28161                           plusw2	equ	0xFDB
 28162                           fsr2h	equ	0xFDA
 28163                           fsr2l	equ	0xFD9
 28164                           status	equ	0xFD8
 28165                           
 28166 ;; *************** function _GetOsTickCounter *****************
 28167 ;; Defined at:
 28168 ;;		line 70 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 28169 ;; Parameters:    Size  Location     Type
 28170 ;;		None
 28171 ;; Auto vars:     Size  Location     Type
 28172 ;;		None
 28173 ;; Return value:  Size  Location     Type
 28174 ;;                  4   29[BANK0 ] unsigned long 
 28175 ;; Registers used:
 28176 ;;		None
 28177 ;; Tracked objects:
 28178 ;;		On entry : 0/0
 28179 ;;		On exit  : 0/0
 28180 ;;		Unchanged: 0/0
 28181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28182 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28183 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28185 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28186 ;;Total ram usage:        4 bytes
 28187 ;; Hardware stack levels used:    1
 28188 ;; Hardware stack levels required when called:   11
 28189 ;; This function calls:
 28190 ;;		Nothing
 28191 ;; This function is called by:
 28192 ;;		_GetElapsedTime
 28193 ;;		_OsTmr_StartTimer
 28194 ;;		_OsTmr_GetElapsedTime
 28195 ;; This function uses a non-reentrant model
 28196 ;;
 28197                           
 28198                           	psect	text128
 28199  005EF2                     __ptext128:
 28200                           	opt stack 0
 28201  005EF2                     _GetOsTickCounter:
 28202                           	opt stack 12
 28203                           
 28204                           ;os_timers.c: 73: return OsTmr_OsTickCounter;
 28205                           
 28206                           ; BSR set to: 0
 28207                           ;incstack = 0
 28208  005EF2  C31C  F07D         	movff	_OsTmr_OsTickCounter,?_GetOsTickCounter
 28209  005EF6  C31D  F07E         	movff	_OsTmr_OsTickCounter+1,?_GetOsTickCounter+1
 28210  005EFA  C31E  F07F         	movff	_OsTmr_OsTickCounter+2,?_GetOsTickCounter+2
 28211  005EFE  C31F  F080         	movff	_OsTmr_OsTickCounter+3,?_GetOsTickCounter+3
 28212  005F02  0012               	return		;funcret
 28213  005F04                     __end_of_GetOsTickCounter:
 28214                           	opt stack 0
 28215                           tosu	equ	0xFFF
 28216                           tosh	equ	0xFFE
 28217                           tosl	equ	0xFFD
 28218                           pclath	equ	0xFFA
 28219                           tblptru	equ	0xFF8
 28220                           tblptrh	equ	0xFF7
 28221                           tblptrl	equ	0xFF6
 28222                           tablat	equ	0xFF5
 28223                           prodh	equ	0xFF4
 28224                           prodl	equ	0xFF3
 28225                           intcon	equ	0xFF2
 28226                           intcon2	equ	0xFF1
 28227                           intcon3	equ	0xFF0
 28228                           indf0	equ	0xFEF
 28229                           postinc0	equ	0xFEE
 28230                           plusw0	equ	0xFEB
 28231                           fsr0h	equ	0xFEA
 28232                           fsr0l	equ	0xFE9
 28233                           wreg	equ	0xFE8
 28234                           indf1	equ	0xFE7
 28235                           postinc1	equ	0xFE6
 28236                           postdec1	equ	0xFE5
 28237                           plusw1	equ	0xFE3
 28238                           fsr1h	equ	0xFE2
 28239                           fsr1l	equ	0xFE1
 28240                           indf2	equ	0xFDF
 28241                           postinc2	equ	0xFDE
 28242                           postdec2	equ	0xFDD
 28243                           plusw2	equ	0xFDB
 28244                           fsr2h	equ	0xFDA
 28245                           fsr2l	equ	0xFD9
 28246                           status	equ	0xFD8
 28247                           
 28248 ;; *************** function _ClearBuffer *****************
 28249 ;; Defined at:
 28250 ;;		line 124 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/sf.c"
 28251 ;; Parameters:    Size  Location     Type
 28252 ;;  Buffer          2   29[BANK0 ] PTR unsigned char 
 28253 ;;		 -> GsmGprsTerminal@UartBuffer(200), HttpGetMethod@UartMessage(200), InitGprsNetwork@UartMessage(50), RxBuffer(400),
      + 
 28254 ;;  Len             2   31[BANK0 ] unsigned short 
 28255 ;; Auto vars:     Size  Location     Type
 28256 ;;  Index           2   33[BANK0 ] unsigned short 
 28257 ;; Return value:  Size  Location     Type
 28258 ;;                  1    wreg      void 
 28259 ;; Registers used:
 28260 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 28261 ;; Tracked objects:
 28262 ;;		On entry : 0/0
 28263 ;;		On exit  : 0/0
 28264 ;;		Unchanged: 0/0
 28265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28266 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28267 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28269 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28270 ;;Total ram usage:        6 bytes
 28271 ;; Hardware stack levels used:    1
 28272 ;; Hardware stack levels required when called:   11
 28273 ;; This function calls:
 28274 ;;		Nothing
 28275 ;; This function is called by:
 28276 ;;		_InitGprsNetwork
 28277 ;;		_HttpGetMethod
 28278 ;;		_GsmGprsTerminal
 28279 ;; This function uses a non-reentrant model
 28280 ;;
 28281                           
 28282                           	psect	text129
 28283  00591C                     __ptext129:
 28284                           	opt stack 0
 28285  00591C                     _ClearBuffer:
 28286                           	opt stack 15
 28287                           
 28288                           ;sf.c: 126: UINT16 Index = 0;
 28289                           
 28290                           ;incstack = 0
 28291  00591C  0E00               	movlw	0
 28292  00591E  0100               	movlb	0	; () banked
 28293  005920  6F82               	movwf	(ClearBuffer@Index+1)& (0+255),b
 28294  005922  0E00               	movlw	0
 28295  005924  6F81               	movwf	ClearBuffer@Index& (0+255),b
 28296                           
 28297                           ;sf.c: 129: for (Index = 0; Index <= Len; Index++)
 28298  005926  0E00               	movlw	0
 28299  005928  6F82               	movwf	(ClearBuffer@Index+1)& (0+255),b
 28300  00592A  0E00               	movlw	0
 28301  00592C  6F81               	movwf	ClearBuffer@Index& (0+255),b
 28302  00592E  D00A               	goto	l2210
 28303  005930                     
 28304                           ; BSR set to: 0
 28305                           ;sf.c: 130: {
 28306                           ;sf.c: 131: *(Buffer + Index) = 0;
 28307                           
 28308                           ; BSR set to: 0
 28309  005930  5181               	movf	ClearBuffer@Index& (0+255),w,b
 28310  005932  257D               	addwf	ClearBuffer@Buffer& (0+255),w,b
 28311  005934  6ED9               	movwf	fsr2l,c
 28312  005936  5182               	movf	(ClearBuffer@Index+1)& (0+255),w,b
 28313  005938  217E               	addwfc	(ClearBuffer@Buffer+1)& (0+255),w,b
 28314  00593A  6EDA               	movwf	fsr2h,c
 28315  00593C  0E00               	movlw	0
 28316  00593E  6EDF               	movwf	indf2,c
 28317                           
 28318                           ; BSR set to: 0
 28319  005940  4B81               	infsnz	ClearBuffer@Index& (0+255),f,b
 28320  005942  2B82               	incf	(ClearBuffer@Index+1)& (0+255),f,b
 28321  005944                     l2210:
 28322                           
 28323                           ; BSR set to: 0
 28324                           
 28325                           ; BSR set to: 0
 28326  005944  5181               	movf	ClearBuffer@Index& (0+255),w,b
 28327  005946  5D7F               	subwf	ClearBuffer@Len& (0+255),w,b
 28328  005948  5182               	movf	(ClearBuffer@Index+1)& (0+255),w,b
 28329  00594A  5980               	subwfb	(ClearBuffer@Len+1)& (0+255),w,b
 28330  00594C  A0D8               	btfss	status,0,c
 28331  00594E  0012               	return	
 28332  005950  D7EF               	goto	l2211
 28333  005952                     __end_of_ClearBuffer:
 28334                           	opt stack 0
 28335                           tosu	equ	0xFFF
 28336                           tosh	equ	0xFFE
 28337                           tosl	equ	0xFFD
 28338                           pclath	equ	0xFFA
 28339                           tblptru	equ	0xFF8
 28340                           tblptrh	equ	0xFF7
 28341                           tblptrl	equ	0xFF6
 28342                           tablat	equ	0xFF5
 28343                           prodh	equ	0xFF4
 28344                           prodl	equ	0xFF3
 28345                           intcon	equ	0xFF2
 28346                           intcon2	equ	0xFF1
 28347                           intcon3	equ	0xFF0
 28348                           indf0	equ	0xFEF
 28349                           postinc0	equ	0xFEE
 28350                           plusw0	equ	0xFEB
 28351                           fsr0h	equ	0xFEA
 28352                           fsr0l	equ	0xFE9
 28353                           wreg	equ	0xFE8
 28354                           indf1	equ	0xFE7
 28355                           postinc1	equ	0xFE6
 28356                           postdec1	equ	0xFE5
 28357                           plusw1	equ	0xFE3
 28358                           fsr1h	equ	0xFE2
 28359                           fsr1l	equ	0xFE1
 28360                           indf2	equ	0xFDF
 28361                           postinc2	equ	0xFDE
 28362                           postdec2	equ	0xFDD
 28363                           plusw2	equ	0xFDB
 28364                           fsr2h	equ	0xFDA
 28365                           fsr2l	equ	0xFD9
 28366                           status	equ	0xFD8
 28367                           
 28368 ;; *************** function _LedStateMachine *****************
 28369 ;; Defined at:
 28370 ;;		line 235 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 28371 ;; Parameters:    Size  Location     Type
 28372 ;;  Led             1    wreg     unsigned char 
 28373 ;;  LedSts          2   47[BANK0 ] PTR enum E8934
 28374 ;;		 -> Led3Sts(1), Led2Sts(1), Led1Sts(1), 
 28375 ;;  LedOut          2   49[BANK0 ] PTR unsigned char 
 28376 ;;		 -> Led3OutSts(1), Led2OutSts(1), Led1OutSts(1), 
 28377 ;;  LedBlink        2   51[BANK0 ] PTR struct _LedBlinkType
 28378 ;;		 -> Led3Blink(9), Led2Blink(9), Led1Blink(9), 
 28379 ;;  LedPulse        2   53[BANK0 ] PTR struct _LedPulseType
 28380 ;;		 -> Led3Pulse(6), Led2Pulse(6), Led1Pulse(6), 
 28381 ;; Auto vars:     Size  Location     Type
 28382 ;;  Led             1   57[BANK0 ] unsigned char 
 28383 ;;  LedOutSts       1   56[BANK0 ] unsigned char 
 28384 ;; Return value:  Size  Location     Type
 28385 ;;                  1    wreg      unsigned char 
 28386 ;; Registers used:
 28387 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 28388 ;; Tracked objects:
 28389 ;;		On entry : 0/0
 28390 ;;		On exit  : 0/0
 28391 ;;		Unchanged: 0/0
 28392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28393 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28394 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28395 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28396 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28397 ;;Total ram usage:       11 bytes
 28398 ;; Hardware stack levels used:    1
 28399 ;; Hardware stack levels required when called:   13
 28400 ;; This function calls:
 28401 ;;		_LedBlinkStateMachine
 28402 ;;		_LedPulseStateMachine
 28403 ;;		_Led_SetLedStatus
 28404 ;; This function is called by:
 28405 ;;		_Led_MainTask
 28406 ;; This function uses a non-reentrant model
 28407 ;;
 28408                           
 28409                           	psect	text130
 28410  00425E                     __ptext130:
 28411                           	opt stack 0
 28412  00425E                     _LedStateMachine:
 28413                           	opt stack 14
 28414                           
 28415                           ; BSR set to: 0
 28416                           ;incstack = 0
 28417                           ;LedStateMachine@Led stored from wreg
 28418  00425E  0100               	movlb	0	; () banked
 28419  004260  6F99               	movwf	LedStateMachine@Led& (0+255),b
 28420                           
 28421                           ;led.c: 238: UINT8 LedOutSts = 0u;
 28422  004262  0E00               	movlw	0
 28423  004264  0100               	movlb	0	; () banked
 28424  004266  6F98               	movwf	LedStateMachine@LedOutSts& (0+255),b
 28425                           
 28426                           ;led.c: 241: switch (*LedSts)
 28427  004268  D037               	goto	l2069
 28428  00426A                     
 28429                           ; BSR set to: 0
 28430                           ;led.c: 245: LedOutSts = ((UINT8)(0));
 28431                           
 28432                           ; BSR set to: 0
 28433  00426A  0E00               	movlw	0
 28434  00426C  6F98               	movwf	LedStateMachine@LedOutSts& (0+255),b
 28435                           
 28436                           ; BSR set to: 0
 28437                           ;led.c: 246: *LedOut = ((UINT8)(0));
 28438  00426E  C091  FFD9         	movff	LedStateMachine@LedOut,fsr2l
 28439  004272  C092  FFDA         	movff	LedStateMachine@LedOut+1,fsr2h
 28440  004276  0E00               	movlw	0
 28441  004278  D007               	goto	L42
 28442  00427A                     
 28443                           ; BSR set to: 0
 28444                           ;led.c: 251: LedOutSts = ((UINT8)(1));
 28445                           
 28446                           ; BSR set to: 0
 28447  00427A  0E01               	movlw	1
 28448  00427C  6F98               	movwf	LedStateMachine@LedOutSts& (0+255),b
 28449                           
 28450                           ; BSR set to: 0
 28451                           ;led.c: 252: *LedOut = ((UINT8)(1));
 28452  00427E  C091  FFD9         	movff	LedStateMachine@LedOut,fsr2l
 28453  004282  C092  FFDA         	movff	LedStateMachine@LedOut+1,fsr2h
 28454  004286  0E01               	movlw	1
 28455  004288                     L42:
 28456  004288  6EDF               	movwf	indf2,c
 28457                           
 28458                           ;led.c: 253: break;
 28459  00428A  D03A               	goto	l2071
 28460  00428C                     
 28461                           ; BSR set to: 0
 28462                           ;led.c: 257: if (*LedOut == 1)
 28463                           
 28464                           ; BSR set to: 0
 28465  00428C  C091  FFD9         	movff	LedStateMachine@LedOut,fsr2l
 28466  004290  C092  FFDA         	movff	LedStateMachine@LedOut+1,fsr2h
 28467  004294  04DE               	decf	postinc2,w,c
 28468  004296  A4D8               	btfss	status,2,c
 28469  004298  D006               	goto	l2074
 28470                           
 28471                           ; BSR set to: 0
 28472                           ;led.c: 258: {
 28473                           ;led.c: 260: Led_SetLedStatus(Led,LED_STS_OFF);
 28474  00429A  0E00               	movlw	0
 28475  00429C  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 28476  00429E  5199               	movf	LedStateMachine@Led& (0+255),w,b
 28477  0042A0  EC3D  F02D         	call	_Led_SetLedStatus
 28478                           
 28479                           ;led.c: 261: }
 28480  0042A4  D02D               	goto	l2071
 28481  0042A6                     l2074:
 28482                           
 28483                           ;led.c: 262: else
 28484                           ;led.c: 263: {
 28485                           ;led.c: 265: Led_SetLedStatus(Led,LED_STS_ON);
 28486  0042A6  0E01               	movlw	1
 28487  0042A8  0100               	movlb	0	; () banked
 28488  0042AA  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 28489  0042AC  5199               	movf	LedStateMachine@Led& (0+255),w,b
 28490  0042AE  EC3D  F02D         	call	_Led_SetLedStatus
 28491                           
 28492                           ;led.c: 266: }
 28493                           ;led.c: 267: break;
 28494  0042B2  D026               	goto	l2071
 28495  0042B4                     
 28496                           ;led.c: 271: LedOutSts = LedBlinkStateMachine(LedBlink);
 28497  0042B4  C093  F08A         	movff	LedStateMachine@LedBlink,LedBlinkStateMachine@LedBlink
 28498  0042B8  C094  F08B         	movff	LedStateMachine@LedBlink+1,LedBlinkStateMachine@LedBlink+1
 28499  0042BC  ECFE  F011         	call	_LedBlinkStateMachine	;wreg free
 28500  0042C0  D008               	goto	L43
 28501  0042C2                     
 28502                           ; BSR set to: 0
 28503                           ;led.c: 276: LedOutSts = LedPulseStateMachine(LedPulse, Led);
 28504                           
 28505                           ; BSR set to: 0
 28506  0042C2  C095  F08A         	movff	LedStateMachine@LedPulse,LedPulseStateMachine@LedPulse
 28507  0042C6  C096  F08B         	movff	LedStateMachine@LedPulse+1,LedPulseStateMachine@LedPulse+1
 28508  0042CA  C099  F08C         	movff	LedStateMachine@Led,LedPulseStateMachine@Led
 28509  0042CE  EC32  F018         	call	_LedPulseStateMachine	;wreg free
 28510  0042D2                     L43:
 28511  0042D2  0100               	movlb	0	; () banked
 28512  0042D4  6F98               	movwf	LedStateMachine@LedOutSts& (0+255),b
 28513                           
 28514                           ; BSR set to: 0
 28515                           ;led.c: 281: }
 28516                           
 28517                           ; BSR set to: 0
 28518                           ;led.c: 280: break;
 28519                           
 28520                           ;led.c: 279: default:
 28521                           
 28522                           ;led.c: 277: break;
 28523  0042D6  D014               	goto	l2071
 28524  0042D8                     l2069:
 28525                           
 28526                           ; BSR set to: 0
 28527                           
 28528                           ; BSR set to: 0
 28529  0042D8  C08F  FFD9         	movff	LedStateMachine@LedSts,fsr2l
 28530  0042DC  C090  FFDA         	movff	LedStateMachine@LedSts+1,fsr2h
 28531  0042E0  50DF               	movf	indf2,w,c
 28532                           
 28533                           ; Switch size 1, requested type "space"
 28534                           ; Number of cases is 5, Range of values is 0 to 4
 28535                           ; switch strategies available:
 28536                           ; Name         Instructions Cycles
 28537                           ; simple_byte           16     9 (average)
 28538                           ;	Chosen strategy is simple_byte
 28539  0042E2  0A00               	xorlw	0	; case 0
 28540  0042E4  B4D8               	btfsc	status,2,c
 28541  0042E6  D7C1               	goto	l2070
 28542  0042E8  0A01               	xorlw	1	; case 1
 28543  0042EA  B4D8               	btfsc	status,2,c
 28544  0042EC  D7C6               	goto	l2072
 28545  0042EE  0A03               	xorlw	3	; case 2
 28546  0042F0  B4D8               	btfsc	status,2,c
 28547  0042F2  D7CC               	goto	l2073
 28548  0042F4  0A01               	xorlw	1	; case 3
 28549  0042F6  B4D8               	btfsc	status,2,c
 28550  0042F8  D7DD               	goto	l2076
 28551  0042FA  0A07               	xorlw	7	; case 4
 28552  0042FC  B4D8               	btfsc	status,2,c
 28553  0042FE  D7E1               	goto	l2077
 28554  004300                     l2071:
 28555                           
 28556                           ;led.c: 283: return LedOutSts;
 28557                           
 28558                           ; BSR set to: 0
 28559  004300  0100               	movlb	0	; () banked
 28560  004302  5198               	movf	LedStateMachine@LedOutSts& (0+255),w,b
 28561  004304  0012               	return	
 28562  004306                     __end_of_LedStateMachine:
 28563                           	opt stack 0
 28564                           tosu	equ	0xFFF
 28565                           tosh	equ	0xFFE
 28566                           tosl	equ	0xFFD
 28567                           pclath	equ	0xFFA
 28568                           tblptru	equ	0xFF8
 28569                           tblptrh	equ	0xFF7
 28570                           tblptrl	equ	0xFF6
 28571                           tablat	equ	0xFF5
 28572                           prodh	equ	0xFF4
 28573                           prodl	equ	0xFF3
 28574                           intcon	equ	0xFF2
 28575                           intcon2	equ	0xFF1
 28576                           intcon3	equ	0xFF0
 28577                           indf0	equ	0xFEF
 28578                           postinc0	equ	0xFEE
 28579                           plusw0	equ	0xFEB
 28580                           fsr0h	equ	0xFEA
 28581                           fsr0l	equ	0xFE9
 28582                           wreg	equ	0xFE8
 28583                           indf1	equ	0xFE7
 28584                           postinc1	equ	0xFE6
 28585                           postdec1	equ	0xFE5
 28586                           plusw1	equ	0xFE3
 28587                           fsr1h	equ	0xFE2
 28588                           fsr1l	equ	0xFE1
 28589                           indf2	equ	0xFDF
 28590                           postinc2	equ	0xFDE
 28591                           postdec2	equ	0xFDD
 28592                           plusw2	equ	0xFDB
 28593                           fsr2h	equ	0xFDA
 28594                           fsr2l	equ	0xFD9
 28595                           status	equ	0xFD8
 28596                           
 28597 ;; *************** function _LedPulseStateMachine *****************
 28598 ;; Defined at:
 28599 ;;		line 182 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 28600 ;; Parameters:    Size  Location     Type
 28601 ;;  LedPulse        2   42[BANK0 ] PTR struct _LedPulseType
 28602 ;;		 -> Led3Pulse(6), Led2Pulse(6), Led1Pulse(6), 
 28603 ;;  Led             1   44[BANK0 ] unsigned char 
 28604 ;; Auto vars:     Size  Location     Type
 28605 ;;		None
 28606 ;; Return value:  Size  Location     Type
 28607 ;;                  1    wreg      unsigned char 
 28608 ;; Registers used:
 28609 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 28610 ;; Tracked objects:
 28611 ;;		On entry : 0/0
 28612 ;;		On exit  : 0/0
 28613 ;;		Unchanged: 0/0
 28614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28615 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28616 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28617 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28618 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28619 ;;Total ram usage:        5 bytes
 28620 ;; Hardware stack levels used:    1
 28621 ;; Hardware stack levels required when called:   12
 28622 ;; This function calls:
 28623 ;;		_Led_SetLedStatus
 28624 ;;		___lwdiv
 28625 ;; This function is called by:
 28626 ;;		_LedStateMachine
 28627 ;; This function uses a non-reentrant model
 28628 ;;
 28629                           
 28630                           	psect	text131
 28631  003064                     __ptext131:
 28632                           	opt stack 0
 28633  003064                     _LedPulseStateMachine:
 28634                           	opt stack 14
 28635                           
 28636                           ;led.c: 185: switch (LedPulse->LedPulseState)
 28637                           
 28638                           ; BSR set to: 0
 28639                           ;incstack = 0
 28640  003064  D05C               	goto	l2059
 28641  003066                     
 28642                           ;led.c: 189: LedPulse->LedOutState = ((UINT8)(1));
 28643  003066  0100               	movlb	0	; () banked
 28644  003068  EE20 F001          	lfsr	2,1
 28645  00306C  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 28646  00306E  26D9               	addwf	fsr2l,f,c
 28647  003070  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 28648  003072  22DA               	addwfc	fsr2h,f,c
 28649  003074  0E01               	movlw	1
 28650  003076  6EDF               	movwf	indf2,c
 28651                           
 28652                           ; BSR set to: 0
 28653                           ;led.c: 191: LedPulse->LedPulseState = LedPulseDelay;
 28654  003078  C08A  FFD9         	movff	LedPulseStateMachine@LedPulse,fsr2l
 28655  00307C  C08B  FFDA         	movff	LedPulseStateMachine@LedPulse+1,fsr2h
 28656  003080  0E01               	movlw	1
 28657  003082  D036               	goto	L44
 28658  003084                     
 28659                           ;led.c: 196: LedPulse->LedPulseCounter++;
 28660                           
 28661                           ; BSR set to: 0
 28662  003084  0100               	movlb	0	; () banked
 28663  003086  EE20 F002          	lfsr	2,2
 28664  00308A  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 28665  00308C  26D9               	addwf	fsr2l,f,c
 28666  00308E  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 28667  003090  22DA               	addwfc	fsr2h,f,c
 28668  003092  2ADE               	incf	postinc2,f,c
 28669  003094  0E00               	movlw	0
 28670  003096  22DD               	addwfc	postdec2,f,c
 28671                           
 28672                           ; BSR set to: 0
 28673                           ;led.c: 198: if (LedPulse->LedPulseCounter >= (LedPulse->LedPulseTimeMs/((UINT16)(50))))
 28674  003098  EE20 F004          	lfsr	2,4
 28675  00309C  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 28676  00309E  26D9               	addwf	fsr2l,f,c
 28677  0030A0  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 28678  0030A2  22DA               	addwfc	fsr2h,f,c
 28679  0030A4  CFDE F083          	movff	postinc2,___lwdiv@dividend
 28680  0030A8  CFDD F084          	movff	postdec2,___lwdiv@dividend+1
 28681  0030AC  0E00               	movlw	0
 28682  0030AE  6F86               	movwf	(___lwdiv@divisor+1)& (0+255),b
 28683  0030B0  0E32               	movlw	50
 28684  0030B2  6F85               	movwf	___lwdiv@divisor& (0+255),b
 28685  0030B4  ECEB  F028         	call	___lwdiv	;wreg free
 28686  0030B8  0100               	movlb	0	; () banked
 28687  0030BA  EE20 F002          	lfsr	2,2
 28688  0030BE  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 28689  0030C0  26D9               	addwf	fsr2l,f,c
 28690  0030C2  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 28691  0030C4  22DA               	addwfc	fsr2h,f,c
 28692  0030C6  5183               	movf	?___lwdiv& (0+255),w,b
 28693  0030C8  5CDE               	subwf	postinc2,w,c
 28694  0030CA  5184               	movf	(?___lwdiv+1)& (0+255),w,b
 28695  0030CC  58DE               	subwfb	postinc2,w,c
 28696  0030CE  A0D8               	btfss	status,0,c
 28697  0030D0  D034               	goto	l2061
 28698                           
 28699                           ; BSR set to: 0
 28700                           ;led.c: 199: {
 28701                           ;led.c: 201: LedPulse->LedPulseCounter = 0;
 28702  0030D2  EE20 F002          	lfsr	2,2
 28703  0030D6  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 28704  0030D8  26D9               	addwf	fsr2l,f,c
 28705  0030DA  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 28706  0030DC  22DA               	addwfc	fsr2h,f,c
 28707  0030DE  0E00               	movlw	0
 28708  0030E0  6EDE               	movwf	postinc2,c
 28709  0030E2  0E00               	movlw	0
 28710  0030E4  6EDD               	movwf	postdec2,c
 28711                           
 28712                           ; BSR set to: 0
 28713                           ;led.c: 203: LedPulse->LedPulseState = LedPulseOff;
 28714  0030E6  C08A  FFD9         	movff	LedPulseStateMachine@LedPulse,fsr2l
 28715  0030EA  C08B  FFDA         	movff	LedPulseStateMachine@LedPulse+1,fsr2h
 28716  0030EE  0E02               	movlw	2
 28717  0030F0                     L44:
 28718  0030F0  6EDF               	movwf	indf2,c
 28719                           
 28720                           ; BSR set to: 0
 28721                           ;led.c: 204: }
 28722                           ;led.c: 205: break;
 28723  0030F2  D023               	goto	l2061
 28724  0030F4                     
 28725                           ;led.c: 209: LedPulse->LedOutState = ((UINT8)(0));
 28726                           
 28727                           ; BSR set to: 0
 28728  0030F4  0100               	movlb	0	; () banked
 28729  0030F6  EE20 F001          	lfsr	2,1
 28730  0030FA  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 28731  0030FC  26D9               	addwf	fsr2l,f,c
 28732  0030FE  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 28733  003100  22DA               	addwfc	fsr2h,f,c
 28734  003102  0E00               	movlw	0
 28735  003104  6EDF               	movwf	indf2,c
 28736                           
 28737                           ; BSR set to: 0
 28738                           ;led.c: 211: LedPulse->LedPulseState = LedPulseOn;
 28739  003106  C08A  FFD9         	movff	LedPulseStateMachine@LedPulse,fsr2l
 28740  00310A  C08B  FFDA         	movff	LedPulseStateMachine@LedPulse+1,fsr2h
 28741  00310E  0E00               	movlw	0
 28742  003110  6EDF               	movwf	indf2,c
 28743                           
 28744                           ; BSR set to: 0
 28745                           ;led.c: 213: Led_SetLedStatus(Led,LED_STS_OFF);
 28746  003112  0E00               	movlw	0
 28747  003114  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 28748  003116  518C               	movf	LedPulseStateMachine@Led& (0+255),w,b
 28749  003118  EC3D  F02D         	call	_Led_SetLedStatus
 28750                           
 28751                           ;led.c: 218: }
 28752                           
 28753                           ;led.c: 217: break;
 28754                           
 28755                           ;led.c: 216: default:
 28756                           
 28757                           ;led.c: 214: break;
 28758  00311C  D00E               	goto	l2061
 28759  00311E                     l2059:
 28760  00311E  C08A  FFD9         	movff	LedPulseStateMachine@LedPulse,fsr2l
 28761  003122  C08B  FFDA         	movff	LedPulseStateMachine@LedPulse+1,fsr2h
 28762  003126  50DF               	movf	indf2,w,c
 28763                           
 28764                           ; Switch size 1, requested type "space"
 28765                           ; Number of cases is 3, Range of values is 0 to 2
 28766                           ; switch strategies available:
 28767                           ; Name         Instructions Cycles
 28768                           ; simple_byte           10     6 (average)
 28769                           ;	Chosen strategy is simple_byte
 28770  003128  0A00               	xorlw	0	; case 0
 28771  00312A  B4D8               	btfsc	status,2,c
 28772  00312C  D79C               	goto	l2060
 28773  00312E  0A01               	xorlw	1	; case 1
 28774  003130  B4D8               	btfsc	status,2,c
 28775  003132  D7A8               	goto	l2062
 28776  003134  0A03               	xorlw	3	; case 2
 28777  003136  B4D8               	btfsc	status,2,c
 28778  003138  D7DD               	goto	l2064
 28779  00313A                     l2061:
 28780                           
 28781                           ;led.c: 221: return (LedPulse->LedOutState);
 28782  00313A  0100               	movlb	0	; () banked
 28783  00313C  EE20 F001          	lfsr	2,1
 28784  003140  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 28785  003142  26D9               	addwf	fsr2l,f,c
 28786  003144  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 28787  003146  22DA               	addwfc	fsr2h,f,c
 28788  003148  50DF               	movf	indf2,w,c
 28789  00314A  0012               	return	
 28790  00314C                     __end_of_LedPulseStateMachine:
 28791                           	opt stack 0
 28792                           tosu	equ	0xFFF
 28793                           tosh	equ	0xFFE
 28794                           tosl	equ	0xFFD
 28795                           pclath	equ	0xFFA
 28796                           tblptru	equ	0xFF8
 28797                           tblptrh	equ	0xFF7
 28798                           tblptrl	equ	0xFF6
 28799                           tablat	equ	0xFF5
 28800                           prodh	equ	0xFF4
 28801                           prodl	equ	0xFF3
 28802                           intcon	equ	0xFF2
 28803                           intcon2	equ	0xFF1
 28804                           intcon3	equ	0xFF0
 28805                           indf0	equ	0xFEF
 28806                           postinc0	equ	0xFEE
 28807                           plusw0	equ	0xFEB
 28808                           fsr0h	equ	0xFEA
 28809                           fsr0l	equ	0xFE9
 28810                           wreg	equ	0xFE8
 28811                           indf1	equ	0xFE7
 28812                           postinc1	equ	0xFE6
 28813                           postdec1	equ	0xFE5
 28814                           plusw1	equ	0xFE3
 28815                           fsr1h	equ	0xFE2
 28816                           fsr1l	equ	0xFE1
 28817                           indf2	equ	0xFDF
 28818                           postinc2	equ	0xFDE
 28819                           postdec2	equ	0xFDD
 28820                           plusw2	equ	0xFDB
 28821                           fsr2h	equ	0xFDA
 28822                           fsr2l	equ	0xFD9
 28823                           status	equ	0xFD8
 28824                           
 28825 ;; *************** function _Led_SetLedStatus *****************
 28826 ;; Defined at:
 28827 ;;		line 338 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 28828 ;; Parameters:    Size  Location     Type
 28829 ;;  Led             1    wreg     unsigned char 
 28830 ;;  LedSts          1   29[BANK0 ] enum E8934
 28831 ;; Auto vars:     Size  Location     Type
 28832 ;;  Led             1   30[BANK0 ] unsigned char 
 28833 ;; Return value:  Size  Location     Type
 28834 ;;                  1    wreg      void 
 28835 ;; Registers used:
 28836 ;;		wreg, status,2, status,0
 28837 ;; Tracked objects:
 28838 ;;		On entry : 0/0
 28839 ;;		On exit  : 0/0
 28840 ;;		Unchanged: 0/0
 28841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28842 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28843 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28845 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28846 ;;Total ram usage:        2 bytes
 28847 ;; Hardware stack levels used:    1
 28848 ;; Hardware stack levels required when called:   11
 28849 ;; This function calls:
 28850 ;;		Nothing
 28851 ;; This function is called by:
 28852 ;;		_LedPulseStateMachine
 28853 ;;		_LedStateMachine
 28854 ;;		_initGprsModem
 28855 ;;		_blinkForSeconds
 28856 ;; This function uses a non-reentrant model
 28857 ;;
 28858                           
 28859                           	psect	text132
 28860  005A7A                     __ptext132:
 28861                           	opt stack 0
 28862  005A7A                     _Led_SetLedStatus:
 28863                           	opt stack 15
 28864                           
 28865                           ; BSR set to: 0
 28866                           ;incstack = 0
 28867                           ;Led_SetLedStatus@Led stored from wreg
 28868  005A7A  0100               	movlb	0	; () banked
 28869  005A7C  6F7E               	movwf	Led_SetLedStatus@Led& (0+255),b
 28870                           
 28871                           ;led.c: 341: switch (Led)
 28872  005A7E  D009               	goto	l2090
 28873  005A80                     l2091:
 28874                           
 28875                           ; BSR set to: 0
 28876                           ;led.c: 344: Led1Sts = LedSts;
 28877  005A80  C07D  F1FB         	movff	Led_SetLedStatus@LedSts,_Led1Sts
 28878                           
 28879                           ;led.c: 345: break;
 28880  005A84  0012               	return	
 28881  005A86                     l2093:
 28882                           
 28883                           ; BSR set to: 0
 28884                           ;led.c: 348: Led2Sts = LedSts;
 28885  005A86  C07D  F1F9         	movff	Led_SetLedStatus@LedSts,_Led2Sts
 28886                           
 28887                           ;led.c: 349: break;
 28888  005A8A  0012               	return	
 28889  005A8C                     l2094:
 28890                           
 28891                           ; BSR set to: 0
 28892                           ;led.c: 352: Led3Sts = LedSts;
 28893  005A8C  C07D  F1F7         	movff	Led_SetLedStatus@LedSts,_Led3Sts
 28894                           
 28895                           ; BSR set to: 0
 28896                           ;led.c: 357: }
 28897                           
 28898                           ; BSR set to: 0
 28899                           ;led.c: 356: break;
 28900                           
 28901                           ;led.c: 355: default:
 28902                           
 28903                           ;led.c: 353: break;
 28904  005A90  0012               	return	
 28905  005A92                     l2090:
 28906                           
 28907                           ; BSR set to: 0
 28908  005A92  0100               	movlb	0	; () banked
 28909  005A94  517E               	movf	Led_SetLedStatus@Led& (0+255),w,b
 28910                           
 28911                           ; Switch size 1, requested type "space"
 28912                           ; Number of cases is 3, Range of values is 1 to 3
 28913                           ; switch strategies available:
 28914                           ; Name         Instructions Cycles
 28915                           ; simple_byte           10     6 (average)
 28916                           ;	Chosen strategy is simple_byte
 28917  005A96  0A01               	xorlw	1	; case 1
 28918  005A98  B4D8               	btfsc	status,2,c
 28919  005A9A  D7F2               	goto	l2091
 28920  005A9C  0A03               	xorlw	3	; case 2
 28921  005A9E  B4D8               	btfsc	status,2,c
 28922  005AA0  D7F2               	goto	l2093
 28923  005AA2  0A01               	xorlw	1	; case 3
 28924  005AA4  A4D8               	btfss	status,2,c
 28925  005AA6  0012               	return	
 28926  005AA8  D7F1               	goto	l2094
 28927  005AAA                     __end_of_Led_SetLedStatus:
 28928                           	opt stack 0
 28929                           tosu	equ	0xFFF
 28930                           tosh	equ	0xFFE
 28931                           tosl	equ	0xFFD
 28932                           pclath	equ	0xFFA
 28933                           tblptru	equ	0xFF8
 28934                           tblptrh	equ	0xFF7
 28935                           tblptrl	equ	0xFF6
 28936                           tablat	equ	0xFF5
 28937                           prodh	equ	0xFF4
 28938                           prodl	equ	0xFF3
 28939                           intcon	equ	0xFF2
 28940                           intcon2	equ	0xFF1
 28941                           intcon3	equ	0xFF0
 28942                           indf0	equ	0xFEF
 28943                           postinc0	equ	0xFEE
 28944                           plusw0	equ	0xFEB
 28945                           fsr0h	equ	0xFEA
 28946                           fsr0l	equ	0xFE9
 28947                           wreg	equ	0xFE8
 28948                           indf1	equ	0xFE7
 28949                           postinc1	equ	0xFE6
 28950                           postdec1	equ	0xFE5
 28951                           plusw1	equ	0xFE3
 28952                           fsr1h	equ	0xFE2
 28953                           fsr1l	equ	0xFE1
 28954                           indf2	equ	0xFDF
 28955                           postinc2	equ	0xFDE
 28956                           postdec2	equ	0xFDD
 28957                           plusw2	equ	0xFDB
 28958                           fsr2h	equ	0xFDA
 28959                           fsr2l	equ	0xFD9
 28960                           status	equ	0xFD8
 28961                           
 28962 ;; *************** function _LedBlinkStateMachine *****************
 28963 ;; Defined at:
 28964 ;;		line 125 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 28965 ;; Parameters:    Size  Location     Type
 28966 ;;  LedBlink        2   42[BANK0 ] PTR struct _LedBlinkType
 28967 ;;		 -> Led3Blink(9), Led2Blink(9), Led1Blink(9), 
 28968 ;; Auto vars:     Size  Location     Type
 28969 ;;		None
 28970 ;; Return value:  Size  Location     Type
 28971 ;;                  1    wreg      unsigned char 
 28972 ;; Registers used:
 28973 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 28974 ;; Tracked objects:
 28975 ;;		On entry : 0/0
 28976 ;;		On exit  : 0/0
 28977 ;;		Unchanged: 0/0
 28978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28979 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28980 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28981 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28982 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28983 ;;Total ram usage:        4 bytes
 28984 ;; Hardware stack levels used:    1
 28985 ;; Hardware stack levels required when called:   12
 28986 ;; This function calls:
 28987 ;;		___lwdiv
 28988 ;; This function is called by:
 28989 ;;		_LedStateMachine
 28990 ;; This function uses a non-reentrant model
 28991 ;;
 28992                           
 28993                           	psect	text133
 28994  0023FC                     __ptext133:
 28995                           	opt stack 0
 28996  0023FC                     _LedBlinkStateMachine:
 28997                           	opt stack 14
 28998                           
 28999                           ;led.c: 128: switch (LedBlink->LedBlinkState)
 29000                           
 29001                           ; BSR set to: 0
 29002                           ;incstack = 0
 29003  0023FC  D08F               	goto	l2046
 29004  0023FE                     
 29005                           ;led.c: 132: LedBlink->LedOutState = LedBlink->LedInitStatus;
 29006  0023FE  0100               	movlb	0	; () banked
 29007  002400  EE20 F008          	lfsr	2,8
 29008  002404  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 29009  002406  26D9               	addwf	fsr2l,f,c
 29010  002408  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 29011  00240A  22DA               	addwfc	fsr2h,f,c
 29012  00240C  EE10 F001          	lfsr	1,1
 29013  002410  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 29014  002412  26E1               	addwf	fsr1l,f,c
 29015  002414  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 29016  002416  22E2               	addwfc	fsr1h,f,c
 29017  002418  CFDF FFE7          	movff	indf2,indf1
 29018                           
 29019                           ; BSR set to: 0
 29020                           ;led.c: 134: LedBlink->LedBlinkState = LedBlinkRunning;
 29021  00241C  C08A  FFD9         	movff	LedBlinkStateMachine@LedBlink,fsr2l
 29022  002420  C08B  FFDA         	movff	LedBlinkStateMachine@LedBlink+1,fsr2h
 29023  002424  D040               	goto	L45
 29024  002426                     
 29025                           ;led.c: 139: LedBlink->LedBlinkCounter++;
 29026                           
 29027                           ; BSR set to: 0
 29028  002426  0100               	movlb	0	; () banked
 29029  002428  EE20 F002          	lfsr	2,2
 29030  00242C  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 29031  00242E  26D9               	addwf	fsr2l,f,c
 29032  002430  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 29033  002432  22DA               	addwfc	fsr2h,f,c
 29034  002434  2ADE               	incf	postinc2,f,c
 29035  002436  0E00               	movlw	0
 29036  002438  22DD               	addwfc	postdec2,f,c
 29037                           
 29038                           ;led.c: 141: if (LedBlink->LedOutState == OffState)
 29039  00243A  EE20 F001          	lfsr	2,1
 29040  00243E  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 29041  002440  26D9               	addwf	fsr2l,f,c
 29042  002442  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 29043  002444  22DA               	addwfc	fsr2h,f,c
 29044  002446  50DF               	movf	indf2,w,c
 29045  002448  A4D8               	btfss	status,2,c
 29046  00244A  D02F               	goto	l2050
 29047                           
 29048                           ; BSR set to: 0
 29049                           ;led.c: 142: {
 29050                           ;led.c: 144: if (LedBlink->LedBlinkCounter >= (LedBlink->LedOffTimeMs/((UINT16)(50))))
 29051  00244C  EE20 F006          	lfsr	2,6
 29052  002450  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 29053  002452  26D9               	addwf	fsr2l,f,c
 29054  002454  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 29055  002456  22DA               	addwfc	fsr2h,f,c
 29056  002458  CFDE F083          	movff	postinc2,___lwdiv@dividend
 29057  00245C  CFDD F084          	movff	postdec2,___lwdiv@dividend+1
 29058  002460  0E00               	movlw	0
 29059  002462  6F86               	movwf	(___lwdiv@divisor+1)& (0+255),b
 29060  002464  0E32               	movlw	50
 29061  002466  6F85               	movwf	___lwdiv@divisor& (0+255),b
 29062  002468  ECEB  F028         	call	___lwdiv	;wreg free
 29063  00246C  0100               	movlb	0	; () banked
 29064  00246E  EE20 F002          	lfsr	2,2
 29065  002472  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 29066  002474  26D9               	addwf	fsr2l,f,c
 29067  002476  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 29068  002478  22DA               	addwfc	fsr2h,f,c
 29069  00247A  5183               	movf	?___lwdiv& (0+255),w,b
 29070  00247C  5CDE               	subwf	postinc2,w,c
 29071  00247E  5184               	movf	(?___lwdiv+1)& (0+255),w,b
 29072  002480  58DE               	subwfb	postinc2,w,c
 29073  002482  A0D8               	btfss	status,0,c
 29074  002484  D056               	goto	l2048
 29075                           
 29076                           ; BSR set to: 0
 29077                           ;led.c: 145: {
 29078                           ;led.c: 147: LedBlink->LedBlinkCounter = 0;
 29079  002486  EE20 F002          	lfsr	2,2
 29080  00248A  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 29081  00248C  26D9               	addwf	fsr2l,f,c
 29082  00248E  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 29083  002490  22DA               	addwfc	fsr2h,f,c
 29084  002492  0E00               	movlw	0
 29085  002494  6EDE               	movwf	postinc2,c
 29086  002496  0E00               	movlw	0
 29087  002498  6EDD               	movwf	postdec2,c
 29088                           
 29089                           ;led.c: 149: LedBlink->LedOutState = OnState;
 29090  00249A  EE20 F001          	lfsr	2,1
 29091  00249E  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 29092  0024A0  26D9               	addwf	fsr2l,f,c
 29093  0024A2  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 29094  0024A4  22DA               	addwfc	fsr2h,f,c
 29095  0024A6                     L45:
 29096  0024A6  0E01               	movlw	1
 29097  0024A8  D037               	goto	L46
 29098  0024AA                     l2050:
 29099                           
 29100                           ; BSR set to: 0
 29101                           ;led.c: 152: else if (LedBlink->LedOutState == OnState)
 29102                           
 29103                           ; BSR set to: 0
 29104  0024AA  EE20 F001          	lfsr	2,1
 29105  0024AE  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 29106  0024B0  26D9               	addwf	fsr2l,f,c
 29107  0024B2  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 29108  0024B4  22DA               	addwfc	fsr2h,f,c
 29109  0024B6  04DE               	decf	postinc2,w,c
 29110  0024B8  A4D8               	btfss	status,2,c
 29111  0024BA  D03B               	goto	l2048
 29112                           
 29113                           ; BSR set to: 0
 29114                           ;led.c: 153: {
 29115                           ;led.c: 155: if (LedBlink->LedBlinkCounter >= (LedBlink->LedOnTimeMs/((UINT16)(50))))
 29116  0024BC  EE20 F004          	lfsr	2,4
 29117  0024C0  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 29118  0024C2  26D9               	addwf	fsr2l,f,c
 29119  0024C4  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 29120  0024C6  22DA               	addwfc	fsr2h,f,c
 29121  0024C8  CFDE F083          	movff	postinc2,___lwdiv@dividend
 29122  0024CC  CFDD F084          	movff	postdec2,___lwdiv@dividend+1
 29123  0024D0  0E00               	movlw	0
 29124  0024D2  6F86               	movwf	(___lwdiv@divisor+1)& (0+255),b
 29125  0024D4  0E32               	movlw	50
 29126  0024D6  6F85               	movwf	___lwdiv@divisor& (0+255),b
 29127  0024D8  ECEB  F028         	call	___lwdiv	;wreg free
 29128  0024DC  0100               	movlb	0	; () banked
 29129  0024DE  EE20 F002          	lfsr	2,2
 29130  0024E2  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 29131  0024E4  26D9               	addwf	fsr2l,f,c
 29132  0024E6  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 29133  0024E8  22DA               	addwfc	fsr2h,f,c
 29134  0024EA  5183               	movf	?___lwdiv& (0+255),w,b
 29135  0024EC  5CDE               	subwf	postinc2,w,c
 29136  0024EE  5184               	movf	(?___lwdiv+1)& (0+255),w,b
 29137  0024F0  58DE               	subwfb	postinc2,w,c
 29138  0024F2  A0D8               	btfss	status,0,c
 29139  0024F4  D01E               	goto	l2048
 29140                           
 29141                           ; BSR set to: 0
 29142                           ;led.c: 156: {
 29143                           ;led.c: 158: LedBlink->LedBlinkCounter = 0;
 29144  0024F6  EE20 F002          	lfsr	2,2
 29145  0024FA  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 29146  0024FC  26D9               	addwf	fsr2l,f,c
 29147  0024FE  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 29148  002500  22DA               	addwfc	fsr2h,f,c
 29149  002502  0E00               	movlw	0
 29150  002504  6EDE               	movwf	postinc2,c
 29151  002506  0E00               	movlw	0
 29152  002508  6EDD               	movwf	postdec2,c
 29153                           
 29154                           ;led.c: 160: LedBlink->LedOutState = OffState;
 29155  00250A  EE20 F001          	lfsr	2,1
 29156  00250E  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 29157  002510  26D9               	addwf	fsr2l,f,c
 29158  002512  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 29159  002514  22DA               	addwfc	fsr2h,f,c
 29160  002516  0E00               	movlw	0
 29161  002518                     L46:
 29162  002518  6EDF               	movwf	indf2,c
 29163                           
 29164                           ; BSR set to: 0
 29165                           ;led.c: 167: }
 29166                           
 29167                           ; BSR set to: 0
 29168                           ;led.c: 166: break;
 29169                           
 29170                           ;led.c: 165: default:
 29171                           
 29172                           ; BSR set to: 0
 29173                           ;led.c: 161: }
 29174                           ;led.c: 162: }
 29175                           ;led.c: 163: break;
 29176                           
 29177                           ; BSR set to: 0
 29178                           
 29179                           ; BSR set to: 0
 29180  00251A  D00B               	goto	l2048
 29181  00251C                     l2046:
 29182                           
 29183                           ; BSR set to: 0
 29184  00251C  C08A  FFD9         	movff	LedBlinkStateMachine@LedBlink,fsr2l
 29185  002520  C08B  FFDA         	movff	LedBlinkStateMachine@LedBlink+1,fsr2h
 29186  002524  50DF               	movf	indf2,w,c
 29187                           
 29188                           ; Switch size 1, requested type "space"
 29189                           ; Number of cases is 2, Range of values is 0 to 1
 29190                           ; switch strategies available:
 29191                           ; Name         Instructions Cycles
 29192                           ; simple_byte            7     4 (average)
 29193                           ;	Chosen strategy is simple_byte
 29194  002526  0A00               	xorlw	0	; case 0
 29195  002528  B4D8               	btfsc	status,2,c
 29196  00252A  D769               	goto	l2047
 29197  00252C  0A01               	xorlw	1	; case 1
 29198  00252E  B4D8               	btfsc	status,2,c
 29199  002530  D77A               	goto	l2049
 29200  002532                     l2048:
 29201                           
 29202                           ;led.c: 170: return (LedBlink->LedOutState);
 29203  002532  0100               	movlb	0	; () banked
 29204  002534  EE20 F001          	lfsr	2,1
 29205  002538  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 29206  00253A  26D9               	addwf	fsr2l,f,c
 29207  00253C  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 29208  00253E  22DA               	addwfc	fsr2h,f,c
 29209  002540  50DF               	movf	indf2,w,c
 29210  002542  0012               	return	
 29211  002544                     __end_of_LedBlinkStateMachine:
 29212                           	opt stack 0
 29213                           tosu	equ	0xFFF
 29214                           tosh	equ	0xFFE
 29215                           tosl	equ	0xFFD
 29216                           pclath	equ	0xFFA
 29217                           tblptru	equ	0xFF8
 29218                           tblptrh	equ	0xFF7
 29219                           tblptrl	equ	0xFF6
 29220                           tablat	equ	0xFF5
 29221                           prodh	equ	0xFF4
 29222                           prodl	equ	0xFF3
 29223                           intcon	equ	0xFF2
 29224                           intcon2	equ	0xFF1
 29225                           intcon3	equ	0xFF0
 29226                           indf0	equ	0xFEF
 29227                           postinc0	equ	0xFEE
 29228                           plusw0	equ	0xFEB
 29229                           fsr0h	equ	0xFEA
 29230                           fsr0l	equ	0xFE9
 29231                           wreg	equ	0xFE8
 29232                           indf1	equ	0xFE7
 29233                           postinc1	equ	0xFE6
 29234                           postdec1	equ	0xFE5
 29235                           plusw1	equ	0xFE3
 29236                           fsr1h	equ	0xFE2
 29237                           fsr1l	equ	0xFE1
 29238                           indf2	equ	0xFDF
 29239                           postinc2	equ	0xFDE
 29240                           postdec2	equ	0xFDD
 29241                           plusw2	equ	0xFDB
 29242                           fsr2h	equ	0xFDA
 29243                           fsr2l	equ	0xFD9
 29244                           status	equ	0xFD8
 29245                           
 29246 ;; *************** function ___lwdiv *****************
 29247 ;; Defined at:
 29248 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/lwdiv.c"
 29249 ;; Parameters:    Size  Location     Type
 29250 ;;  dividend        2   35[BANK0 ] unsigned int 
 29251 ;;  divisor         2   37[BANK0 ] unsigned int 
 29252 ;; Auto vars:     Size  Location     Type
 29253 ;;  quotient        2   40[BANK0 ] unsigned int 
 29254 ;;  counter         1   39[BANK0 ] unsigned char 
 29255 ;; Return value:  Size  Location     Type
 29256 ;;                  2   35[BANK0 ] unsigned int 
 29257 ;; Registers used:
 29258 ;;		wreg, status,2, status,0
 29259 ;; Tracked objects:
 29260 ;;		On entry : 0/0
 29261 ;;		On exit  : 0/0
 29262 ;;		Unchanged: 0/0
 29263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29264 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29265 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29267 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29268 ;;Total ram usage:        7 bytes
 29269 ;; Hardware stack levels used:    1
 29270 ;; Hardware stack levels required when called:   11
 29271 ;; This function calls:
 29272 ;;		Nothing
 29273 ;; This function is called by:
 29274 ;;		_LedBlinkStateMachine
 29275 ;;		_LedPulseStateMachine
 29276 ;;		_secondsAppTimer
 29277 ;;		_utoa
 29278 ;; This function uses a non-reentrant model
 29279 ;;
 29280                           
 29281                           	psect	text134
 29282  0051D6                     __ptext134:
 29283                           	opt stack 0
 29284  0051D6                     ___lwdiv:
 29285                           	opt stack 14
 29286                           
 29287                           ; BSR set to: 0
 29288                           ;incstack = 0
 29289  0051D6  0E00               	movlw	0
 29290  0051D8  0100               	movlb	0	; () banked
 29291  0051DA  6F89               	movwf	(___lwdiv@quotient+1)& (0+255),b
 29292  0051DC  0E00               	movlw	0
 29293  0051DE  6F88               	movwf	___lwdiv@quotient& (0+255),b
 29294                           
 29295                           ; BSR set to: 0
 29296  0051E0  5185               	movf	___lwdiv@divisor& (0+255),w,b
 29297  0051E2  1186               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 29298  0051E4  B4D8               	btfsc	status,2,c
 29299  0051E6  D01C               	goto	l3035
 29300                           
 29301                           ; BSR set to: 0
 29302  0051E8  0E01               	movlw	1
 29303  0051EA  6F87               	movwf	___lwdiv@counter& (0+255),b
 29304  0051EC  D004               	goto	l3030
 29305  0051EE                     
 29306                           ; BSR set to: 0
 29307                           
 29308                           ; BSR set to: 0
 29309  0051EE  90D8               	bcf	status,0,c
 29310  0051F0  3785               	rlcf	___lwdiv@divisor& (0+255),f,b
 29311  0051F2  3786               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 29312  0051F4  2B87               	incf	___lwdiv@counter& (0+255),f,b
 29313  0051F6                     l3030:
 29314                           
 29315                           ; BSR set to: 0
 29316                           
 29317                           ; BSR set to: 0
 29318  0051F6  AF86               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 29319  0051F8  D7FA               	goto	l3031
 29320  0051FA                     u10310:
 29321                           
 29322                           ; BSR set to: 0
 29323                           
 29324                           ; BSR set to: 0
 29325                           
 29326                           ; BSR set to: 0
 29327  0051FA  90D8               	bcf	status,0,c
 29328  0051FC  3788               	rlcf	___lwdiv@quotient& (0+255),f,b
 29329  0051FE  3789               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 29330                           
 29331                           ; BSR set to: 0
 29332  005200  5185               	movf	___lwdiv@divisor& (0+255),w,b
 29333  005202  5D83               	subwf	___lwdiv@dividend& (0+255),w,b
 29334  005204  5186               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 29335  005206  5984               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 29336  005208  A0D8               	btfss	status,0,c
 29337  00520A  D005               	goto	l3034
 29338                           
 29339                           ; BSR set to: 0
 29340  00520C  5185               	movf	___lwdiv@divisor& (0+255),w,b
 29341  00520E  5F83               	subwf	___lwdiv@dividend& (0+255),f,b
 29342  005210  5186               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 29343  005212  5B84               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 29344                           
 29345                           ; BSR set to: 0
 29346  005214  8188               	bsf	___lwdiv@quotient& (0+255),0,b
 29347  005216                     l3034:
 29348                           
 29349                           ; BSR set to: 0
 29350                           
 29351                           ; BSR set to: 0
 29352  005216  90D8               	bcf	status,0,c
 29353  005218  3386               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 29354  00521A  3385               	rrcf	___lwdiv@divisor& (0+255),f,b
 29355                           
 29356                           ; BSR set to: 0
 29357  00521C  2F87               	decfsz	___lwdiv@counter& (0+255),f,b
 29358  00521E  D7ED               	goto	u10310
 29359  005220                     l3035:
 29360                           
 29361                           ; BSR set to: 0
 29362                           
 29363                           ; BSR set to: 0
 29364  005220  C088  F083         	movff	___lwdiv@quotient,?___lwdiv
 29365  005224  C089  F084         	movff	___lwdiv@quotient+1,?___lwdiv+1
 29366                           
 29367                           ; BSR set to: 0
 29368  005228  0012               	return		;funcret
 29369  00522A                     __end_of___lwdiv:
 29370                           	opt stack 0
 29371                           tosu	equ	0xFFF
 29372                           tosh	equ	0xFFE
 29373                           tosl	equ	0xFFD
 29374                           pclath	equ	0xFFA
 29375                           tblptru	equ	0xFF8
 29376                           tblptrh	equ	0xFF7
 29377                           tblptrl	equ	0xFF6
 29378                           tablat	equ	0xFF5
 29379                           prodh	equ	0xFF4
 29380                           prodl	equ	0xFF3
 29381                           intcon	equ	0xFF2
 29382                           intcon2	equ	0xFF1
 29383                           intcon3	equ	0xFF0
 29384                           indf0	equ	0xFEF
 29385                           postinc0	equ	0xFEE
 29386                           plusw0	equ	0xFEB
 29387                           fsr0h	equ	0xFEA
 29388                           fsr0l	equ	0xFE9
 29389                           wreg	equ	0xFE8
 29390                           indf1	equ	0xFE7
 29391                           postinc1	equ	0xFE6
 29392                           postdec1	equ	0xFE5
 29393                           plusw1	equ	0xFE3
 29394                           fsr1h	equ	0xFE2
 29395                           fsr1l	equ	0xFE1
 29396                           indf2	equ	0xFDF
 29397                           postinc2	equ	0xFDE
 29398                           postdec2	equ	0xFDD
 29399                           plusw2	equ	0xFDB
 29400                           fsr2h	equ	0xFDA
 29401                           fsr2l	equ	0xFD9
 29402                           status	equ	0xFD8
 29403                           
 29404 ;; *************** function _OsAlrm_SetOsAlarm *****************
 29405 ;; Defined at:
 29406 ;;		line 77 in file "../../MercuryFwk/Source/c/02_Osl/os_alarms.c"
 29407 ;; Parameters:    Size  Location     Type
 29408 ;;  OsAlarmId       2   35[BANK0 ] unsigned short 
 29409 ;;  OsAlarmTimeo    4   37[BANK0 ] unsigned long 
 29410 ;;  AlarmCallbac    2   41[BANK0 ] PTR FTN()void 
 29411 ;;		 -> I2cDummyTx(1), 
 29412 ;; Auto vars:     Size  Location     Type
 29413 ;;		None
 29414 ;; Return value:  Size  Location     Type
 29415 ;;                  1    wreg      void 
 29416 ;; Registers used:
 29417 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29418 ;; Tracked objects:
 29419 ;;		On entry : 0/0
 29420 ;;		On exit  : 0/0
 29421 ;;		Unchanged: 0/0
 29422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29423 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29424 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29426 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29427 ;;Total ram usage:        8 bytes
 29428 ;; Hardware stack levels used:    1
 29429 ;; Hardware stack levels required when called:   12
 29430 ;; This function calls:
 29431 ;;		___wmul
 29432 ;; This function is called by:
 29433 ;;		_I2cSlv_MainTask
 29434 ;; This function uses a non-reentrant model
 29435 ;;
 29436                           
 29437                           	psect	text135
 29438  003B36                     __ptext135:
 29439                           	opt stack 0
 29440  003B36                     _OsAlrm_SetOsAlarm:
 29441                           	opt stack 15
 29442                           
 29443                           ;os_alarms.c: 80: OsAlarms[OsAlarmId].Enabled = 1u;
 29444                           
 29445                           ; BSR set to: 0
 29446                           ;incstack = 0
 29447  003B36  C083  F07D         	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 29448  003B3A  C084  F07E         	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 29449  003B3E  0E00               	movlw	0
 29450  003B40  0100               	movlb	0	; () banked
 29451  003B42  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 29452  003B44  0E0B               	movlw	11
 29453  003B46  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 29454  003B48  ECC3  F02D         	call	___wmul	;wreg free
 29455  003B4C  0E00               	movlw	low _OsAlarms
 29456  003B4E  0100               	movlb	0	; () banked
 29457  003B50  257D               	addwf	?___wmul& (0+255),w,b
 29458  003B52  6ED9               	movwf	fsr2l,c
 29459  003B54  0E06               	movlw	high _OsAlarms
 29460  003B56  217E               	addwfc	(?___wmul+1)& (0+255),w,b
 29461  003B58  6EDA               	movwf	fsr2h,c
 29462  003B5A  0E01               	movlw	1
 29463  003B5C  6EDF               	movwf	indf2,c
 29464                           
 29465                           ;os_alarms.c: 82: OsAlarms[OsAlarmId].Counter = 0;
 29466  003B5E  C083  F07D         	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 29467  003B62  C084  F07E         	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 29468  003B66  0E00               	movlw	0
 29469  003B68  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 29470  003B6A  0E0B               	movlw	11
 29471  003B6C  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 29472  003B6E  ECC3  F02D         	call	___wmul	;wreg free
 29473  003B72  0E01               	movlw	1
 29474  003B74  0100               	movlb	0	; () banked
 29475  003B76  277D               	addwf	?___wmul& (0+255),f,b
 29476  003B78  0E00               	movlw	0
 29477  003B7A  237E               	addwfc	(?___wmul+1)& (0+255),f,b
 29478  003B7C  0E00               	movlw	low _OsAlarms
 29479  003B7E  257D               	addwf	?___wmul& (0+255),w,b
 29480  003B80  6ED9               	movwf	fsr2l,c
 29481  003B82  0E06               	movlw	high _OsAlarms
 29482  003B84  217E               	addwfc	(?___wmul+1)& (0+255),w,b
 29483  003B86  6EDA               	movwf	fsr2h,c
 29484  003B88  6ADE               	clrf	postinc2,c
 29485  003B8A  6ADE               	clrf	postinc2,c
 29486  003B8C  6ADE               	clrf	postinc2,c
 29487  003B8E  6ADD               	clrf	postdec2,c
 29488                           
 29489                           ;os_alarms.c: 84: OsAlarms[OsAlarmId].AlarmTime = OsAlarmTimeout;
 29490  003B90  C083  F07D         	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 29491  003B94  C084  F07E         	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 29492  003B98  0E00               	movlw	0
 29493  003B9A  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 29494  003B9C  0E0B               	movlw	11
 29495  003B9E  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 29496  003BA0  ECC3  F02D         	call	___wmul	;wreg free
 29497  003BA4  0E05               	movlw	5
 29498  003BA6  0100               	movlb	0	; () banked
 29499  003BA8  277D               	addwf	?___wmul& (0+255),f,b
 29500  003BAA  0E00               	movlw	0
 29501  003BAC  237E               	addwfc	(?___wmul+1)& (0+255),f,b
 29502  003BAE  0E00               	movlw	low _OsAlarms
 29503  003BB0  257D               	addwf	?___wmul& (0+255),w,b
 29504  003BB2  6ED9               	movwf	fsr2l,c
 29505  003BB4  0E06               	movlw	high _OsAlarms
 29506  003BB6  217E               	addwfc	(?___wmul+1)& (0+255),w,b
 29507  003BB8  6EDA               	movwf	fsr2h,c
 29508  003BBA  C085  FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout,postinc2
 29509  003BBE  C086  FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout+1,postinc2
 29510  003BC2  C087  FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout+2,postinc2
 29511  003BC6  C088  FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout+3,postinc2
 29512                           
 29513                           ;os_alarms.c: 86: OsAlarms[OsAlarmId].AlrmCbk = AlarmCallback;
 29514  003BCA  C083  F07D         	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 29515  003BCE  C084  F07E         	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 29516  003BD2  0E00               	movlw	0
 29517  003BD4  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 29518  003BD6  0E0B               	movlw	11
 29519  003BD8  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 29520  003BDA  ECC3  F02D         	call	___wmul	;wreg free
 29521  003BDE  0E09               	movlw	9
 29522  003BE0  0100               	movlb	0	; () banked
 29523  003BE2  277D               	addwf	?___wmul& (0+255),f,b
 29524  003BE4  0E00               	movlw	0
 29525  003BE6  237E               	addwfc	(?___wmul+1)& (0+255),f,b
 29526  003BE8  0E00               	movlw	low _OsAlarms
 29527  003BEA  257D               	addwf	?___wmul& (0+255),w,b
 29528  003BEC  6ED9               	movwf	fsr2l,c
 29529  003BEE  0E06               	movlw	high _OsAlarms
 29530  003BF0  217E               	addwfc	(?___wmul+1)& (0+255),w,b
 29531  003BF2  6EDA               	movwf	fsr2h,c
 29532  003BF4  C089  FFDE         	movff	OsAlrm_SetOsAlarm@AlarmCallback,postinc2
 29533  003BF8  C08A  FFDD         	movff	OsAlrm_SetOsAlarm@AlarmCallback+1,postdec2
 29534                           
 29535                           ; BSR set to: 0
 29536  003BFC  0012               	return		;funcret
 29537  003BFE                     __end_of_OsAlrm_SetOsAlarm:
 29538                           	opt stack 0
 29539                           tosu	equ	0xFFF
 29540                           tosh	equ	0xFFE
 29541                           tosl	equ	0xFFD
 29542                           pclath	equ	0xFFA
 29543                           tblptru	equ	0xFF8
 29544                           tblptrh	equ	0xFF7
 29545                           tblptrl	equ	0xFF6
 29546                           tablat	equ	0xFF5
 29547                           prodh	equ	0xFF4
 29548                           prodl	equ	0xFF3
 29549                           intcon	equ	0xFF2
 29550                           intcon2	equ	0xFF1
 29551                           intcon3	equ	0xFF0
 29552                           indf0	equ	0xFEF
 29553                           postinc0	equ	0xFEE
 29554                           plusw0	equ	0xFEB
 29555                           fsr0h	equ	0xFEA
 29556                           fsr0l	equ	0xFE9
 29557                           wreg	equ	0xFE8
 29558                           indf1	equ	0xFE7
 29559                           postinc1	equ	0xFE6
 29560                           postdec1	equ	0xFE5
 29561                           plusw1	equ	0xFE3
 29562                           fsr1h	equ	0xFE2
 29563                           fsr1l	equ	0xFE1
 29564                           indf2	equ	0xFDF
 29565                           postinc2	equ	0xFDE
 29566                           postdec2	equ	0xFDD
 29567                           plusw2	equ	0xFDB
 29568                           fsr2h	equ	0xFDA
 29569                           fsr2l	equ	0xFD9
 29570                           status	equ	0xFD8
 29571                           
 29572 ;; *************** function ___wmul *****************
 29573 ;; Defined at:
 29574 ;;		line 15 in file "/opt/microchip/xc8/v1.45/sources/common/Umul16.c"
 29575 ;; Parameters:    Size  Location     Type
 29576 ;;  multiplier      2   29[BANK0 ] unsigned int 
 29577 ;;  multiplicand    2   31[BANK0 ] unsigned int 
 29578 ;; Auto vars:     Size  Location     Type
 29579 ;;  product         2   33[BANK0 ] unsigned int 
 29580 ;; Return value:  Size  Location     Type
 29581 ;;                  2   29[BANK0 ] unsigned int 
 29582 ;; Registers used:
 29583 ;;		wreg, status,2, status,0, prodl, prodh
 29584 ;; Tracked objects:
 29585 ;;		On entry : 0/0
 29586 ;;		On exit  : 0/0
 29587 ;;		Unchanged: 0/0
 29588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29589 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29590 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29591 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29592 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29593 ;;Total ram usage:        6 bytes
 29594 ;; Hardware stack levels used:    1
 29595 ;; Hardware stack levels required when called:   11
 29596 ;; This function calls:
 29597 ;;		Nothing
 29598 ;; This function is called by:
 29599 ;;		_OsAlrm_SetOsAlarm
 29600 ;;		_secondsAppTimer
 29601 ;;		_atoi
 29602 ;; This function uses a non-reentrant model
 29603 ;;
 29604                           
 29605                           	psect	text136
 29606  005B86                     __ptext136:
 29607                           	opt stack 0
 29608  005B86                     ___wmul:
 29609                           	opt stack 13
 29610                           
 29611                           ; BSR set to: 0
 29612                           ;incstack = 0
 29613  005B86  0100               	movlb	0	; () banked
 29614  005B88  517D               	movf	___wmul@multiplier& (0+255),w,b
 29615  005B8A  037F               	mulwf	___wmul@multiplicand& (0+255),b
 29616  005B8C  CFF3 F081          	movff	prodl,___wmul@product
 29617  005B90  CFF4 F082          	movff	prodh,___wmul@product+1
 29618  005B94  517D               	movf	___wmul@multiplier& (0+255),w,b
 29619  005B96  0380               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 29620  005B98  50F3               	movf	prodl,w,c
 29621  005B9A  2782               	addwf	(___wmul@product+1)& (0+255),f,b
 29622  005B9C  517E               	movf	(___wmul@multiplier+1)& (0+255),w,b
 29623  005B9E  037F               	mulwf	___wmul@multiplicand& (0+255),b
 29624  005BA0  50F3               	movf	prodl,w,c
 29625  005BA2  2782               	addwf	(___wmul@product+1)& (0+255),f,b
 29626                           
 29627                           ; BSR set to: 0
 29628  005BA4  C081  F07D         	movff	___wmul@product,?___wmul
 29629  005BA8  C082  F07E         	movff	___wmul@product+1,?___wmul+1
 29630  005BAC  0012               	return	
 29631  005BAE                     __end_of___wmul:
 29632                           	opt stack 0
 29633                           tosu	equ	0xFFF
 29634                           tosh	equ	0xFFE
 29635                           tosl	equ	0xFFD
 29636                           pclath	equ	0xFFA
 29637                           tblptru	equ	0xFF8
 29638                           tblptrh	equ	0xFF7
 29639                           tblptrl	equ	0xFF6
 29640                           tablat	equ	0xFF5
 29641                           prodh	equ	0xFF4
 29642                           prodl	equ	0xFF3
 29643                           intcon	equ	0xFF2
 29644                           intcon2	equ	0xFF1
 29645                           intcon3	equ	0xFF0
 29646                           indf0	equ	0xFEF
 29647                           postinc0	equ	0xFEE
 29648                           plusw0	equ	0xFEB
 29649                           fsr0h	equ	0xFEA
 29650                           fsr0l	equ	0xFE9
 29651                           wreg	equ	0xFE8
 29652                           indf1	equ	0xFE7
 29653                           postinc1	equ	0xFE6
 29654                           postdec1	equ	0xFE5
 29655                           plusw1	equ	0xFE3
 29656                           fsr1h	equ	0xFE2
 29657                           fsr1l	equ	0xFE1
 29658                           indf2	equ	0xFDF
 29659                           postinc2	equ	0xFDE
 29660                           postdec2	equ	0xFDD
 29661                           plusw2	equ	0xFDB
 29662                           fsr2h	equ	0xFDA
 29663                           fsr2l	equ	0xFD9
 29664                           status	equ	0xFD8
 29665                           
 29666 ;; *************** function _I2c_InitI2cModule *****************
 29667 ;; Defined at:
 29668 ;;		line 228 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 29669 ;; Parameters:    Size  Location     Type
 29670 ;;  I2cConfig       2   66[BANK0 ] PTR struct _I2cConfig
 29671 ;;		 -> I2cConfig(10), 
 29672 ;; Auto vars:     Size  Location     Type
 29673 ;;		None
 29674 ;; Return value:  Size  Location     Type
 29675 ;;                  1    wreg      void 
 29676 ;; Registers used:
 29677 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 29678 ;; Tracked objects:
 29679 ;;		On entry : 0/0
 29680 ;;		On exit  : 0/0
 29681 ;;		Unchanged: 0/0
 29682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29683 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29684 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29685 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29686 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29687 ;;Total ram usage:        4 bytes
 29688 ;; Hardware stack levels used:    1
 29689 ;; Hardware stack levels required when called:   13
 29690 ;; This function calls:
 29691 ;;		_SetBaudRate
 29692 ;; This function is called by:
 29693 ;;		_I2cSlv_MainTask
 29694 ;; This function uses a non-reentrant model
 29695 ;;
 29696                           
 29697                           	psect	text137
 29698  004B7A                     __ptext137:
 29699                           	opt stack 0
 29700  004B7A                     _I2c_InitI2cModule:
 29701                           	opt stack 14
 29702                           
 29703                           ;i2c_drv.c: 231: TRISDbits.TRISD1 = ((UINT8)(1));
 29704                           
 29705                           ; BSR set to: 0
 29706                           ;incstack = 0
 29707  004B7A  8295               	bsf	3989,1,c	;volatile
 29708                           
 29709                           ;i2c_drv.c: 232: TRISDbits.TRISD0 = ((UINT8)(1));
 29710  004B7C  8095               	bsf	3989,0,c	;volatile
 29711                           
 29712                           ;i2c_drv.c: 235: SetBaudRate(I2cConfig->I2cBaudRateHz, I2cConfig->McuBusClockHz);
 29713  004B7E  C0A2  FFD9         	movff	I2c_InitI2cModule@I2cConfig,fsr2l
 29714  004B82  C0A3  FFDA         	movff	I2c_InitI2cModule@I2cConfig+1,fsr2h
 29715  004B86  CFDE F096          	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz
 29716  004B8A  CFDE F097          	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz+1
 29717  004B8E  CFDE F098          	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz+2
 29718  004B92  CFDE F099          	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz+3
 29719  004B96  0100               	movlb	0	; () banked
 29720  004B98  EE20 F004          	lfsr	2,4
 29721  004B9C  51A2               	movf	I2c_InitI2cModule@I2cConfig& (0+255),w,b
 29722  004B9E  26D9               	addwf	fsr2l,f,c
 29723  004BA0  51A3               	movf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),w,b
 29724  004BA2  22DA               	addwfc	fsr2h,f,c
 29725  004BA4  CFDE F09A          	movff	postinc2,SetBaudRate@McuClockHz
 29726  004BA8  CFDE F09B          	movff	postinc2,SetBaudRate@McuClockHz+1
 29727  004BAC  CFDE F09C          	movff	postinc2,SetBaudRate@McuClockHz+2
 29728  004BB0  CFDE F09D          	movff	postinc2,SetBaudRate@McuClockHz+3
 29729  004BB4  ECDD  F029         	call	_SetBaudRate	;wreg free
 29730                           
 29731                           ;i2c_drv.c: 240: SSP2CON1 |= (I2cConfig->I2cModuleMode) << ((UINT8)(0));
 29732  004BB8  0100               	movlb	0	; () banked
 29733  004BBA  EE20 F008          	lfsr	2,8
 29734  004BBE  51A2               	movf	I2c_InitI2cModule@I2cConfig& (0+255),w,b
 29735  004BC0  26D9               	addwf	fsr2l,f,c
 29736  004BC2  51A3               	movf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),w,b
 29737  004BC4  22DA               	addwfc	fsr2h,f,c
 29738  004BC6  50DF               	movf	indf2,w,c
 29739  004BC8  1272               	iorwf	3954,f,c	;volatile
 29740                           
 29741                           ; BSR set to: 0
 29742                           ;i2c_drv.c: 241: SSP2CON1 |= (I2cConfig->EnableI2cModule) << ((UINT8)(5));
 29743  004BCA  EE20 F009          	lfsr	2,9
 29744  004BCE  51A2               	movf	I2c_InitI2cModule@I2cConfig& (0+255),w,b
 29745  004BD0  26D9               	addwf	fsr2l,f,c
 29746  004BD2  51A3               	movf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),w,b
 29747  004BD4  22DA               	addwfc	fsr2h,f,c
 29748  004BD6  50DF               	movf	indf2,w,c
 29749  004BD8  6FA4               	movwf	??_I2c_InitI2cModule& (0+255),b
 29750  004BDA  0E05               	movlw	5
 29751  004BDC  6FA5               	movwf	(??_I2c_InitI2cModule+1)& (0+255),b
 29752  004BDE                     u7935:
 29753  004BDE  90D8               	bcf	status,0,c
 29754  004BE0  37A4               	rlcf	??_I2c_InitI2cModule& (0+255),f,b
 29755  004BE2  2FA5               	decfsz	(??_I2c_InitI2cModule+1)& (0+255),f,b
 29756  004BE4  D7FC               	goto	u7935
 29757  004BE6  51A4               	movf	??_I2c_InitI2cModule& (0+255),w,b
 29758  004BE8  1272               	iorwf	3954,f,c	;volatile
 29759                           
 29760                           ; BSR set to: 0
 29761  004BEA  0012               	return		;funcret
 29762  004BEC                     __end_of_I2c_InitI2cModule:
 29763                           	opt stack 0
 29764                           tosu	equ	0xFFF
 29765                           tosh	equ	0xFFE
 29766                           tosl	equ	0xFFD
 29767                           pclath	equ	0xFFA
 29768                           tblptru	equ	0xFF8
 29769                           tblptrh	equ	0xFF7
 29770                           tblptrl	equ	0xFF6
 29771                           tablat	equ	0xFF5
 29772                           prodh	equ	0xFF4
 29773                           prodl	equ	0xFF3
 29774                           intcon	equ	0xFF2
 29775                           intcon2	equ	0xFF1
 29776                           intcon3	equ	0xFF0
 29777                           indf0	equ	0xFEF
 29778                           postinc0	equ	0xFEE
 29779                           plusw0	equ	0xFEB
 29780                           fsr0h	equ	0xFEA
 29781                           fsr0l	equ	0xFE9
 29782                           wreg	equ	0xFE8
 29783                           indf1	equ	0xFE7
 29784                           postinc1	equ	0xFE6
 29785                           postdec1	equ	0xFE5
 29786                           plusw1	equ	0xFE3
 29787                           fsr1h	equ	0xFE2
 29788                           fsr1l	equ	0xFE1
 29789                           indf2	equ	0xFDF
 29790                           postinc2	equ	0xFDE
 29791                           postdec2	equ	0xFDD
 29792                           plusw2	equ	0xFDB
 29793                           fsr2h	equ	0xFDA
 29794                           fsr2l	equ	0xFD9
 29795                           status	equ	0xFD8
 29796                           
 29797 ;; *************** function _SetBaudRate *****************
 29798 ;; Defined at:
 29799 ;;		line 78 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 29800 ;; Parameters:    Size  Location     Type
 29801 ;;  DesiredI2cBu    4   54[BANK0 ] unsigned long 
 29802 ;;  McuClockHz      4   58[BANK0 ] unsigned long 
 29803 ;; Auto vars:     Size  Location     Type
 29804 ;;		None
 29805 ;; Return value:  Size  Location     Type
 29806 ;;                  1    wreg      void 
 29807 ;; Registers used:
 29808 ;;		wreg, status,2, status,0, cstack
 29809 ;; Tracked objects:
 29810 ;;		On entry : 0/0
 29811 ;;		On exit  : 0/0
 29812 ;;		Unchanged: 0/0
 29813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29814 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29815 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29816 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29817 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29818 ;;Total ram usage:       12 bytes
 29819 ;; Hardware stack levels used:    1
 29820 ;; Hardware stack levels required when called:   12
 29821 ;; This function calls:
 29822 ;;		___lldiv
 29823 ;; This function is called by:
 29824 ;;		_I2c_InitI2cModule
 29825 ;; This function uses a non-reentrant model
 29826 ;;
 29827                           
 29828                           	psect	text138
 29829  0053BA                     __ptext138:
 29830                           	opt stack 0
 29831  0053BA                     _SetBaudRate:
 29832                           	opt stack 14
 29833                           
 29834                           ;i2c_drv.c: 81: SSP2ADD = ((McuClockHz/(4*DesiredI2cBusClockHz)) - 1);
 29835                           
 29836                           ; BSR set to: 0
 29837                           ;incstack = 0
 29838  0053BA  C09A  F089         	movff	SetBaudRate@McuClockHz,___lldiv@dividend
 29839  0053BE  C09B  F08A         	movff	SetBaudRate@McuClockHz+1,___lldiv@dividend+1
 29840  0053C2  C09C  F08B         	movff	SetBaudRate@McuClockHz+2,___lldiv@dividend+2
 29841  0053C6  C09D  F08C         	movff	SetBaudRate@McuClockHz+3,___lldiv@dividend+3
 29842  0053CA  C096  F09E         	movff	SetBaudRate@DesiredI2cBusClockHz,??_SetBaudRate
 29843  0053CE  C097  F09F         	movff	SetBaudRate@DesiredI2cBusClockHz+1,??_SetBaudRate+1
 29844  0053D2  C098  F0A0         	movff	SetBaudRate@DesiredI2cBusClockHz+2,??_SetBaudRate+2
 29845  0053D6  C099  F0A1         	movff	SetBaudRate@DesiredI2cBusClockHz+3,??_SetBaudRate+3
 29846  0053DA  0E02               	movlw	2
 29847  0053DC                     u6895:
 29848  0053DC  90D8               	bcf	status,0,c
 29849  0053DE  0100               	movlb	0	; () banked
 29850  0053E0  379E               	rlcf	??_SetBaudRate& (0+255),f,b
 29851  0053E2  379F               	rlcf	(??_SetBaudRate+1)& (0+255),f,b
 29852  0053E4  37A0               	rlcf	(??_SetBaudRate+2)& (0+255),f,b
 29853  0053E6  37A1               	rlcf	(??_SetBaudRate+3)& (0+255),f,b
 29854  0053E8  2EE8               	decfsz	wreg,f,c
 29855  0053EA  D7F8               	goto	u6895
 29856  0053EC  C09E  F08D         	movff	??_SetBaudRate,___lldiv@divisor
 29857  0053F0  C09F  F08E         	movff	??_SetBaudRate+1,___lldiv@divisor+1
 29858  0053F4  C0A0  F08F         	movff	??_SetBaudRate+2,___lldiv@divisor+2
 29859  0053F8  C0A1  F090         	movff	??_SetBaudRate+3,___lldiv@divisor+3
 29860  0053FC  EC01  F025         	call	___lldiv	;wreg free
 29861  005400  0100               	movlb	0	; () banked
 29862  005402  0589               	decf	?___lldiv& (0+255),w,b
 29863  005404  6E74               	movwf	3956,c	;volatile
 29864                           
 29865                           ; BSR set to: 0
 29866  005406  0012               	return		;funcret
 29867  005408                     __end_of_SetBaudRate:
 29868                           	opt stack 0
 29869                           tosu	equ	0xFFF
 29870                           tosh	equ	0xFFE
 29871                           tosl	equ	0xFFD
 29872                           pclath	equ	0xFFA
 29873                           tblptru	equ	0xFF8
 29874                           tblptrh	equ	0xFF7
 29875                           tblptrl	equ	0xFF6
 29876                           tablat	equ	0xFF5
 29877                           prodh	equ	0xFF4
 29878                           prodl	equ	0xFF3
 29879                           intcon	equ	0xFF2
 29880                           intcon2	equ	0xFF1
 29881                           intcon3	equ	0xFF0
 29882                           indf0	equ	0xFEF
 29883                           postinc0	equ	0xFEE
 29884                           plusw0	equ	0xFEB
 29885                           fsr0h	equ	0xFEA
 29886                           fsr0l	equ	0xFE9
 29887                           wreg	equ	0xFE8
 29888                           indf1	equ	0xFE7
 29889                           postinc1	equ	0xFE6
 29890                           postdec1	equ	0xFE5
 29891                           plusw1	equ	0xFE3
 29892                           fsr1h	equ	0xFE2
 29893                           fsr1l	equ	0xFE1
 29894                           indf2	equ	0xFDF
 29895                           postinc2	equ	0xFDE
 29896                           postdec2	equ	0xFDD
 29897                           plusw2	equ	0xFDB
 29898                           fsr2h	equ	0xFDA
 29899                           fsr2l	equ	0xFD9
 29900                           status	equ	0xFD8
 29901                           
 29902 ;; *************** function ___lldiv *****************
 29903 ;; Defined at:
 29904 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/lldiv.c"
 29905 ;; Parameters:    Size  Location     Type
 29906 ;;  dividend        4   41[BANK0 ] unsigned long 
 29907 ;;  divisor         4   45[BANK0 ] unsigned long 
 29908 ;; Auto vars:     Size  Location     Type
 29909 ;;  quotient        4   49[BANK0 ] unsigned long 
 29910 ;;  counter         1   53[BANK0 ] unsigned char 
 29911 ;; Return value:  Size  Location     Type
 29912 ;;                  4   41[BANK0 ] unsigned long 
 29913 ;; Registers used:
 29914 ;;		wreg, status,2, status,0
 29915 ;; Tracked objects:
 29916 ;;		On entry : 0/0
 29917 ;;		On exit  : 0/0
 29918 ;;		Unchanged: 0/0
 29919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29920 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29921 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29923 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29924 ;;Total ram usage:       13 bytes
 29925 ;; Hardware stack levels used:    1
 29926 ;; Hardware stack levels required when called:   11
 29927 ;; This function calls:
 29928 ;;		Nothing
 29929 ;; This function is called by:
 29930 ;;		_SetBaudRate
 29931 ;;		_Tmr_TmrBPrSet
 29932 ;;		_SetUartBaudRate
 29933 ;; This function uses a non-reentrant model
 29934 ;;
 29935                           
 29936                           	psect	text139
 29937  004A02                     __ptext139:
 29938                           	opt stack 0
 29939  004A02                     ___lldiv:
 29940                           	opt stack 15
 29941                           
 29942                           ; BSR set to: 0
 29943                           ;incstack = 0
 29944  004A02  0E00               	movlw	0
 29945  004A04  0100               	movlb	0	; () banked
 29946  004A06  6F91               	movwf	___lldiv@quotient& (0+255),b
 29947  004A08  0E00               	movlw	0
 29948  004A0A  6F92               	movwf	(___lldiv@quotient+1)& (0+255),b
 29949  004A0C  0E00               	movlw	0
 29950  004A0E  6F93               	movwf	(___lldiv@quotient+2)& (0+255),b
 29951  004A10  0E00               	movlw	0
 29952  004A12  6F94               	movwf	(___lldiv@quotient+3)& (0+255),b
 29953                           
 29954                           ; BSR set to: 0
 29955  004A14  518D               	movf	___lldiv@divisor& (0+255),w,b
 29956  004A16  118E               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 29957  004A18  118F               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 29958  004A1A  1190               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 29959  004A1C  B4D8               	btfsc	status,2,c
 29960  004A1E  D02A               	goto	l2982
 29961                           
 29962                           ; BSR set to: 0
 29963  004A20  0E01               	movlw	1
 29964  004A22  6F95               	movwf	___lldiv@counter& (0+255),b
 29965  004A24  D006               	goto	l2977
 29966  004A26                     
 29967                           ; BSR set to: 0
 29968                           
 29969                           ; BSR set to: 0
 29970  004A26  90D8               	bcf	status,0,c
 29971  004A28  378D               	rlcf	___lldiv@divisor& (0+255),f,b
 29972  004A2A  378E               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 29973  004A2C  378F               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 29974  004A2E  3790               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 29975  004A30  2B95               	incf	___lldiv@counter& (0+255),f,b
 29976  004A32                     l2977:
 29977                           
 29978                           ; BSR set to: 0
 29979                           
 29980                           ; BSR set to: 0
 29981  004A32  AF90               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 29982  004A34  D7F8               	goto	l2978
 29983  004A36                     u5930:
 29984                           
 29985                           ; BSR set to: 0
 29986                           
 29987                           ; BSR set to: 0
 29988                           
 29989                           ; BSR set to: 0
 29990  004A36  90D8               	bcf	status,0,c
 29991  004A38  3791               	rlcf	___lldiv@quotient& (0+255),f,b
 29992  004A3A  3792               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 29993  004A3C  3793               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 29994  004A3E  3794               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 29995                           
 29996                           ; BSR set to: 0
 29997  004A40  518D               	movf	___lldiv@divisor& (0+255),w,b
 29998  004A42  5D89               	subwf	___lldiv@dividend& (0+255),w,b
 29999  004A44  518E               	movf	(___lldiv@divisor+1)& (0+255),w,b
 30000  004A46  598A               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 30001  004A48  518F               	movf	(___lldiv@divisor+2)& (0+255),w,b
 30002  004A4A  598B               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 30003  004A4C  5190               	movf	(___lldiv@divisor+3)& (0+255),w,b
 30004  004A4E  598C               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 30005  004A50  A0D8               	btfss	status,0,c
 30006  004A52  D009               	goto	l2981
 30007                           
 30008                           ; BSR set to: 0
 30009  004A54  518D               	movf	___lldiv@divisor& (0+255),w,b
 30010  004A56  5F89               	subwf	___lldiv@dividend& (0+255),f,b
 30011  004A58  518E               	movf	(___lldiv@divisor+1)& (0+255),w,b
 30012  004A5A  5B8A               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 30013  004A5C  518F               	movf	(___lldiv@divisor+2)& (0+255),w,b
 30014  004A5E  5B8B               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 30015  004A60  5190               	movf	(___lldiv@divisor+3)& (0+255),w,b
 30016  004A62  5B8C               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 30017                           
 30018                           ; BSR set to: 0
 30019  004A64  8191               	bsf	___lldiv@quotient& (0+255),0,b
 30020  004A66                     l2981:
 30021                           
 30022                           ; BSR set to: 0
 30023                           
 30024                           ; BSR set to: 0
 30025  004A66  90D8               	bcf	status,0,c
 30026  004A68  3390               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 30027  004A6A  338F               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 30028  004A6C  338E               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 30029  004A6E  338D               	rrcf	___lldiv@divisor& (0+255),f,b
 30030                           
 30031                           ; BSR set to: 0
 30032  004A70  2F95               	decfsz	___lldiv@counter& (0+255),f,b
 30033  004A72  D7E1               	goto	u5930
 30034  004A74                     l2982:
 30035                           
 30036                           ; BSR set to: 0
 30037                           
 30038                           ; BSR set to: 0
 30039  004A74  C091  F089         	movff	___lldiv@quotient,?___lldiv
 30040  004A78  C092  F08A         	movff	___lldiv@quotient+1,?___lldiv+1
 30041  004A7C  C093  F08B         	movff	___lldiv@quotient+2,?___lldiv+2
 30042  004A80  C094  F08C         	movff	___lldiv@quotient+3,?___lldiv+3
 30043                           
 30044                           ; BSR set to: 0
 30045  004A84  0012               	return		;funcret
 30046  004A86                     __end_of___lldiv:
 30047                           	opt stack 0
 30048                           tosu	equ	0xFFF
 30049                           tosh	equ	0xFFE
 30050                           tosl	equ	0xFFD
 30051                           pclath	equ	0xFFA
 30052                           tblptru	equ	0xFF8
 30053                           tblptrh	equ	0xFF7
 30054                           tblptrl	equ	0xFF6
 30055                           tablat	equ	0xFF5
 30056                           prodh	equ	0xFF4
 30057                           prodl	equ	0xFF3
 30058                           intcon	equ	0xFF2
 30059                           intcon2	equ	0xFF1
 30060                           intcon3	equ	0xFF0
 30061                           indf0	equ	0xFEF
 30062                           postinc0	equ	0xFEE
 30063                           plusw0	equ	0xFEB
 30064                           fsr0h	equ	0xFEA
 30065                           fsr0l	equ	0xFE9
 30066                           wreg	equ	0xFE8
 30067                           indf1	equ	0xFE7
 30068                           postinc1	equ	0xFE6
 30069                           postdec1	equ	0xFE5
 30070                           plusw1	equ	0xFE3
 30071                           fsr1h	equ	0xFE2
 30072                           fsr1l	equ	0xFE1
 30073                           indf2	equ	0xFDF
 30074                           postinc2	equ	0xFDE
 30075                           postdec2	equ	0xFDD
 30076                           plusw2	equ	0xFDB
 30077                           fsr2h	equ	0xFDA
 30078                           fsr2l	equ	0xFD9
 30079                           status	equ	0xFD8
 30080                           
 30081 ;; *************** function _I2cSetConfig *****************
 30082 ;; Defined at:
 30083 ;;		line 101 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 30084 ;; Parameters:    Size  Location     Type
 30085 ;;		None
 30086 ;; Auto vars:     Size  Location     Type
 30087 ;;		None
 30088 ;; Return value:  Size  Location     Type
 30089 ;;                  1    wreg      void 
 30090 ;; Registers used:
 30091 ;;		wreg, status,2
 30092 ;; Tracked objects:
 30093 ;;		On entry : 0/0
 30094 ;;		On exit  : 0/0
 30095 ;;		Unchanged: 0/0
 30096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30097 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30098 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30100 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30101 ;;Total ram usage:        0 bytes
 30102 ;; Hardware stack levels used:    1
 30103 ;; Hardware stack levels required when called:   11
 30104 ;; This function calls:
 30105 ;;		Nothing
 30106 ;; This function is called by:
 30107 ;;		_I2cSlv_MainTask
 30108 ;; This function uses a non-reentrant model
 30109 ;;
 30110                           
 30111                           	psect	text140
 30112  005B06                     __ptext140:
 30113                           	opt stack 0
 30114  005B06                     _I2cSetConfig:
 30115                           	opt stack 16
 30116                           
 30117                           ;i2c_slv.c: 103: I2cConfig.I2cBaudRateHz = ((UINT32)(400000));
 30118                           
 30119                           ; BSR set to: 0
 30120                           ;incstack = 0
 30121  005B06  0E80               	movlw	128
 30122  005B08  0103               	movlb	3	; () banked
 30123  005B0A  6F53               	movwf	_I2cConfig& (0+255),b
 30124  005B0C  0E1A               	movlw	26
 30125  005B0E  6F54               	movwf	(_I2cConfig+1)& (0+255),b
 30126  005B10  0E06               	movlw	6
 30127  005B12  6F55               	movwf	(_I2cConfig+2)& (0+255),b
 30128  005B14  0E00               	movlw	0
 30129  005B16  6F56               	movwf	(_I2cConfig+3)& (0+255),b
 30130                           
 30131                           ;i2c_slv.c: 104: I2cConfig.McuBusClockHz = ((UINT32)(48000000));
 30132  005B18  0E00               	movlw	0
 30133  005B1A  6F57               	movwf	(_I2cConfig+4)& (0+255),b
 30134  005B1C  0E6C               	movlw	108
 30135  005B1E  6F58               	movwf	(_I2cConfig+5)& (0+255),b
 30136  005B20  0EDC               	movlw	220
 30137  005B22  6F59               	movwf	(_I2cConfig+6)& (0+255),b
 30138  005B24  0E02               	movlw	2
 30139  005B26  6F5A               	movwf	(_I2cConfig+7)& (0+255),b
 30140                           
 30141                           ;i2c_slv.c: 105: I2cConfig.I2cModuleMode = ((UINT8)(0b1000));
 30142  005B28  0E08               	movlw	8
 30143  005B2A  6F5B               	movwf	(_I2cConfig+8)& (0+255),b
 30144                           
 30145                           ;i2c_slv.c: 106: I2cConfig.EnableI2cModule = ((UINT8)(1));
 30146  005B2C  0E01               	movlw	1
 30147  005B2E  6F5C               	movwf	(_I2cConfig+9)& (0+255),b
 30148                           
 30149                           ; BSR set to: 3
 30150  005B30  0012               	return		;funcret
 30151  005B32                     __end_of_I2cSetConfig:
 30152                           	opt stack 0
 30153                           tosu	equ	0xFFF
 30154                           tosh	equ	0xFFE
 30155                           tosl	equ	0xFFD
 30156                           pclath	equ	0xFFA
 30157                           tblptru	equ	0xFF8
 30158                           tblptrh	equ	0xFF7
 30159                           tblptrl	equ	0xFF6
 30160                           tablat	equ	0xFF5
 30161                           prodh	equ	0xFF4
 30162                           prodl	equ	0xFF3
 30163                           intcon	equ	0xFF2
 30164                           intcon2	equ	0xFF1
 30165                           intcon3	equ	0xFF0
 30166                           indf0	equ	0xFEF
 30167                           postinc0	equ	0xFEE
 30168                           plusw0	equ	0xFEB
 30169                           fsr0h	equ	0xFEA
 30170                           fsr0l	equ	0xFE9
 30171                           wreg	equ	0xFE8
 30172                           indf1	equ	0xFE7
 30173                           postinc1	equ	0xFE6
 30174                           postdec1	equ	0xFE5
 30175                           plusw1	equ	0xFE3
 30176                           fsr1h	equ	0xFE2
 30177                           fsr1l	equ	0xFE1
 30178                           indf2	equ	0xFDF
 30179                           postinc2	equ	0xFDE
 30180                           postdec2	equ	0xFDD
 30181                           plusw2	equ	0xFDB
 30182                           fsr2h	equ	0xFDA
 30183                           fsr2l	equ	0xFD9
 30184                           status	equ	0xFD8
 30185                           
 30186 ;; *************** function _I2cSendMsgSm *****************
 30187 ;; Defined at:
 30188 ;;		line 117 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 30189 ;; Parameters:    Size  Location     Type
 30190 ;;		None
 30191 ;; Auto vars:     Size  Location     Type
 30192 ;;		None
 30193 ;; Return value:  Size  Location     Type
 30194 ;;                  1    wreg      void 
 30195 ;; Registers used:
 30196 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 30197 ;; Tracked objects:
 30198 ;;		On entry : 0/0
 30199 ;;		On exit  : 0/0
 30200 ;;		Unchanged: 0/0
 30201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30202 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30203 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30204 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30205 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30206 ;;Total ram usage:        0 bytes
 30207 ;; Hardware stack levels used:    1
 30208 ;; Hardware stack levels required when called:   13
 30209 ;; This function calls:
 30210 ;;		_I2c_ReadData
 30211 ;;		_I2c_WriteData
 30212 ;;		_ReceiveEvt
 30213 ;; This function is called by:
 30214 ;;		_I2cSlv_MainTask
 30215 ;; This function uses a non-reentrant model
 30216 ;;
 30217                           
 30218                           	psect	text141
 30219  003BFE                     __ptext141:
 30220                           	opt stack 0
 30221  003BFE                     _I2cSendMsgSm:
 30222                           	opt stack 14
 30223                           
 30224                           ;i2c_slv.c: 120: static I2cComStateType I2cComState = I2cComIdle;
 30225                           ;i2c_slv.c: 122: switch(I2cComState)
 30226                           
 30227                           ; BSR set to: 3
 30228                           ;incstack = 0
 30229  003BFE  D04F               	goto	l1365
 30230  003C00                     
 30231                           ;i2c_slv.c: 126: if (ReceiveEvt(&I2cWriteDataEvt))
 30232  003C00  0ED6               	movlw	low _I2cWriteDataEvt
 30233  003C02  0100               	movlb	0	; () banked
 30234  003C04  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 30235  003C06  0E00               	movlw	high _I2cWriteDataEvt
 30236  003C08  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 30237  003C0A  EC6C  F02D         	call	_ReceiveEvt	;wreg free
 30238  003C0E  0900               	iorlw	0
 30239  003C10  B4D8               	btfsc	status,2,c
 30240  003C12  D007               	goto	l1367
 30241                           
 30242                           ;i2c_slv.c: 127: {
 30243                           ;i2c_slv.c: 129: I2cComState = I2cComWriteData;
 30244  003C14  0E01               	movlw	1
 30245  003C16  0101               	movlb	1	; () banked
 30246  003C18  6FEA               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 30247                           
 30248                           ;i2c_slv.c: 131: I2cComSts = TxInProgress;
 30249  003C1A  0E01               	movlw	1
 30250  003C1C  0100               	movlb	0	; () banked
 30251  003C1E  6FCC               	movwf	_I2cComSts& (0+255),b
 30252                           
 30253                           ;i2c_slv.c: 132: }
 30254  003C20  0012               	return	
 30255  003C22                     l1367:
 30256                           
 30257                           ;i2c_slv.c: 133: else if (ReceiveEvt(&I2cReadDataEvt))
 30258                           
 30259                           ; BSR set to: 0
 30260  003C22  0ED5               	movlw	low _I2cReadDataEvt
 30261  003C24  0100               	movlb	0	; () banked
 30262  003C26  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 30263  003C28  0E00               	movlw	high _I2cReadDataEvt
 30264  003C2A  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 30265  003C2C  EC6C  F02D         	call	_ReceiveEvt	;wreg free
 30266  003C30  0900               	iorlw	0
 30267  003C32  B4D8               	btfsc	status,2,c
 30268  003C34  D007               	goto	l1369
 30269                           
 30270                           ;i2c_slv.c: 134: {
 30271                           ;i2c_slv.c: 136: I2cComState = I2cComReadData;
 30272  003C36  0E02               	movlw	2
 30273  003C38  0101               	movlb	1	; () banked
 30274  003C3A  6FEA               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 30275                           
 30276                           ;i2c_slv.c: 138: I2cComSts = RxInProgress;
 30277  003C3C  0E02               	movlw	2
 30278  003C3E  0100               	movlb	0	; () banked
 30279  003C40  6FCC               	movwf	_I2cComSts& (0+255),b
 30280                           
 30281                           ;i2c_slv.c: 139: }
 30282  003C42  0012               	return	
 30283  003C44                     l1369:
 30284                           
 30285                           ;i2c_slv.c: 140: else
 30286                           ;i2c_slv.c: 141: {
 30287                           ;i2c_slv.c: 143: I2cComSts = TxRxIdle;
 30288                           
 30289                           ; BSR set to: 0
 30290  003C44  0E00               	movlw	0
 30291  003C46  0100               	movlb	0	; () banked
 30292  003C48  6FCC               	movwf	_I2cComSts& (0+255),b
 30293                           
 30294                           ; BSR set to: 0
 30295                           ;i2c_slv.c: 144: }
 30296                           ;i2c_slv.c: 145: break;
 30297                           
 30298                           ; BSR set to: 0
 30299  003C4A  0012               	return	
 30300  003C4C                     
 30301                           ;i2c_slv.c: 149: if (I2c_WriteData(&I2cTxPacket) != I2cWriteInProgress)
 30302                           
 30303                           ; BSR set to: 0
 30304  003C4C  0E9F               	movlw	low _I2cTxPacket
 30305  003C4E  0100               	movlb	0	; () banked
 30306  003C50  6F7E               	movwf	I2c_WriteData@WritePacket& (0+255),b
 30307  003C52  0E03               	movlw	high _I2cTxPacket
 30308  003C54  6F7F               	movwf	(I2c_WriteData@WritePacket+1)& (0+255),b
 30309  003C56  EC99  F00E         	call	_I2c_WriteData	;wreg free
 30310  003C5A  0900               	iorlw	0
 30311  003C5C  B4D8               	btfsc	status,2,c
 30312  003C5E  0012               	return	
 30313                           
 30314                           ;i2c_slv.c: 150: {
 30315                           ;i2c_slv.c: 152: I2cComState = I2cComWriteComplete;
 30316  003C60  0E03               	movlw	3
 30317  003C62  0101               	movlb	1	; () banked
 30318  003C64  6FEA               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 30319                           
 30320                           ; BSR set to: 1
 30321                           ;i2c_slv.c: 153: }
 30322                           ;i2c_slv.c: 154: break;
 30323  003C66  0012               	return	
 30324  003C68                     
 30325                           ; BSR set to: 1
 30326                           ;i2c_slv.c: 158: if (I2c_ReadData(&I2cRxPacket) != I2cReadInProgress)
 30327                           
 30328                           ; BSR set to: 1
 30329  003C68  0E99               	movlw	low _I2cRxPacket
 30330  003C6A  0100               	movlb	0	; () banked
 30331  003C6C  6F80               	movwf	I2c_ReadData@ReadPacket& (0+255),b
 30332  003C6E  0E03               	movlw	high _I2cRxPacket
 30333  003C70  6F81               	movwf	(I2c_ReadData@ReadPacket+1)& (0+255),b
 30334  003C72  EC50  F00F         	call	_I2c_ReadData	;wreg free
 30335  003C76  0900               	iorlw	0
 30336  003C78  B4D8               	btfsc	status,2,c
 30337  003C7A  0012               	return	
 30338                           
 30339                           ;i2c_slv.c: 159: {
 30340                           ;i2c_slv.c: 161: I2cComState = I2cComReadComplete;
 30341  003C7C  0E04               	movlw	4
 30342  003C7E  0101               	movlb	1	; () banked
 30343  003C80  6FEA               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 30344                           
 30345                           ; BSR set to: 1
 30346                           ;i2c_slv.c: 162: }
 30347                           ;i2c_slv.c: 164: break;
 30348  003C82  0012               	return	
 30349  003C84                     
 30350                           ; BSR set to: 1
 30351                           ;i2c_slv.c: 168: I2cComState = I2cComIdle;
 30352                           
 30353                           ; BSR set to: 1
 30354  003C84  0E00               	movlw	0
 30355  003C86  6FEA               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 30356                           
 30357                           ;i2c_slv.c: 170: I2cComSts = TxRxIdle;
 30358  003C88  0E00               	movlw	0
 30359  003C8A  0100               	movlb	0	; () banked
 30360  003C8C  6FCC               	movwf	_I2cComSts& (0+255),b
 30361                           
 30362                           ;i2c_slv.c: 171: break;
 30363  003C8E  0012               	return	
 30364  003C90                     
 30365                           ;i2c_slv.c: 175: I2cComState = I2cComIdle;
 30366                           
 30367                           ; BSR set to: 0
 30368  003C90  0E00               	movlw	0
 30369  003C92  0101               	movlb	1	; () banked
 30370  003C94  6FEA               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 30371                           
 30372                           ;i2c_slv.c: 177: I2cComSts = TxRxIdle;
 30373  003C96  0E00               	movlw	0
 30374  003C98  0100               	movlb	0	; () banked
 30375  003C9A  6FCC               	movwf	_I2cComSts& (0+255),b
 30376                           
 30377                           ; BSR set to: 0
 30378                           ;i2c_slv.c: 182: }
 30379                           
 30380                           ; BSR set to: 0
 30381                           ;i2c_slv.c: 181: break;
 30382                           
 30383                           ;i2c_slv.c: 180: default:
 30384                           
 30385                           ;i2c_slv.c: 178: break;
 30386  003C9C  0012               	return	
 30387  003C9E                     l1365:
 30388                           
 30389                           ; BSR set to: 0
 30390  003C9E  0101               	movlb	1	; () banked
 30391  003CA0  51EA               	movf	I2cSendMsgSm@I2cComState& (0+255),w,b
 30392                           
 30393                           ; Switch size 1, requested type "space"
 30394                           ; Number of cases is 5, Range of values is 0 to 4
 30395                           ; switch strategies available:
 30396                           ; Name         Instructions Cycles
 30397                           ; simple_byte           16     9 (average)
 30398                           ;	Chosen strategy is simple_byte
 30399  003CA2  0A00               	xorlw	0	; case 0
 30400  003CA4  B4D8               	btfsc	status,2,c
 30401  003CA6  D7AC               	goto	l1366
 30402  003CA8  0A01               	xorlw	1	; case 1
 30403  003CAA  B4D8               	btfsc	status,2,c
 30404  003CAC  D7CF               	goto	l1372
 30405  003CAE  0A03               	xorlw	3	; case 2
 30406  003CB0  B4D8               	btfsc	status,2,c
 30407  003CB2  D7DA               	goto	l1374
 30408  003CB4  0A01               	xorlw	1	; case 3
 30409  003CB6  B4D8               	btfsc	status,2,c
 30410  003CB8  D7E5               	goto	l1376
 30411  003CBA  0A07               	xorlw	7	; case 4
 30412  003CBC  A4D8               	btfss	status,2,c
 30413  003CBE  0012               	return	
 30414  003CC0  D7E7               	goto	l1377
 30415  003CC2                     __end_of_I2cSendMsgSm:
 30416                           	opt stack 0
 30417                           tosu	equ	0xFFF
 30418                           tosh	equ	0xFFE
 30419                           tosl	equ	0xFFD
 30420                           pclath	equ	0xFFA
 30421                           tblptru	equ	0xFF8
 30422                           tblptrh	equ	0xFF7
 30423                           tblptrl	equ	0xFF6
 30424                           tablat	equ	0xFF5
 30425                           prodh	equ	0xFF4
 30426                           prodl	equ	0xFF3
 30427                           intcon	equ	0xFF2
 30428                           intcon2	equ	0xFF1
 30429                           intcon3	equ	0xFF0
 30430                           indf0	equ	0xFEF
 30431                           postinc0	equ	0xFEE
 30432                           plusw0	equ	0xFEB
 30433                           fsr0h	equ	0xFEA
 30434                           fsr0l	equ	0xFE9
 30435                           wreg	equ	0xFE8
 30436                           indf1	equ	0xFE7
 30437                           postinc1	equ	0xFE6
 30438                           postdec1	equ	0xFE5
 30439                           plusw1	equ	0xFE3
 30440                           fsr1h	equ	0xFE2
 30441                           fsr1l	equ	0xFE1
 30442                           indf2	equ	0xFDF
 30443                           postinc2	equ	0xFDE
 30444                           postdec2	equ	0xFDD
 30445                           plusw2	equ	0xFDB
 30446                           fsr2h	equ	0xFDA
 30447                           fsr2l	equ	0xFD9
 30448                           status	equ	0xFD8
 30449                           
 30450 ;; *************** function _ReceiveEvt *****************
 30451 ;; Defined at:
 30452 ;;		line 99 in file "../../MercuryFwk/Source/c/02_Osl/os_ser.c"
 30453 ;; Parameters:    Size  Location     Type
 30454 ;;  Event           2   29[BANK0 ] PTR struct EventStructur
 30455 ;;		 -> I2cRxPacket(6), I2cReadDataEvt(1), I2cWriteDataEvt(1), GetMethod(1), 
 30456 ;;		 -> InitNetwork(1), SmsTxtReady(1), GetSmsText(1), SmsEvent(1), 
 30457 ;;		 -> RingEvent(1), SendSmsEvent(1), NewStringMdmTerminal(1), NewMdmEvtParserRequest(1), 
 30458 ;;		 -> NewStringReceived(1), MdmResetRequest(1), MdmOnOffPulseRequest(1), ActivateRiDetection(1), 
 30459 ;; Auto vars:     Size  Location     Type
 30460 ;;  EventStatus     1   32[BANK0 ] enum E7727
 30461 ;; Return value:  Size  Location     Type
 30462 ;;                  1    wreg      enum E7699
 30463 ;; Registers used:
 30464 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 30465 ;; Tracked objects:
 30466 ;;		On entry : 0/0
 30467 ;;		On exit  : 0/0
 30468 ;;		Unchanged: 0/0
 30469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30470 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30471 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30472 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30473 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30474 ;;Total ram usage:        4 bytes
 30475 ;; Hardware stack levels used:    1
 30476 ;; Hardware stack levels required when called:   11
 30477 ;; This function calls:
 30478 ;;		Nothing
 30479 ;; This function is called by:
 30480 ;;		_MdmCntSm
 30481 ;;		_CheckModem
 30482 ;;		_ModemEvtParser
 30483 ;;		_GetSmsSm
 30484 ;;		_SendSmsSm
 30485 ;;		_Mdm_GetSmsData
 30486 ;;		_Mdm_IsSmsReceived
 30487 ;;		_Mdm_IsRinging
 30488 ;;		_InitGprsNetwork
 30489 ;;		_HttpGetMethod
 30490 ;;		_I2cSendMsgSm
 30491 ;;		_I2cSlv_I2cReadMsgSts
 30492 ;;		_RiSm
 30493 ;;		_GsmGprsTerminal
 30494 ;; This function uses a non-reentrant model
 30495 ;;
 30496                           
 30497                           	psect	text142
 30498  005AD8                     __ptext142:
 30499                           	opt stack 0
 30500  005AD8                     _ReceiveEvt:
 30501                           	opt stack 13
 30502                           
 30503                           ;os_ser.c: 102: EventStatusType EventStatus = EventIdle;
 30504                           
 30505                           ;incstack = 0
 30506  005AD8  0E00               	movlw	0
 30507  005ADA  0100               	movlb	0	; () banked
 30508  005ADC  6F80               	movwf	ReceiveEvt@EventStatus& (0+255),b
 30509                           
 30510                           ; BSR set to: 0
 30511                           ;os_ser.c: 105: if (Event->EventStatus == EventSent)
 30512  005ADE  C07D  FFD9         	movff	ReceiveEvt@Event,fsr2l
 30513  005AE2  C07E  FFDA         	movff	ReceiveEvt@Event+1,fsr2h
 30514  005AE6  0E02               	movlw	2
 30515  005AE8  18DE               	xorwf	postinc2,w,c
 30516  005AEA  A4D8               	btfss	status,2,c
 30517  005AEC  D008               	goto	l832
 30518                           
 30519                           ; BSR set to: 0
 30520                           ;os_ser.c: 106: {
 30521                           ;os_ser.c: 108: Event->EventStatus = EventReceived;
 30522  005AEE  C07D  FFD9         	movff	ReceiveEvt@Event,fsr2l
 30523  005AF2  C07E  FFDA         	movff	ReceiveEvt@Event+1,fsr2h
 30524  005AF6  0E01               	movlw	1
 30525  005AF8  6EDF               	movwf	indf2,c
 30526                           
 30527                           ; BSR set to: 0
 30528                           ;os_ser.c: 110: EventStatus = EventReceived;
 30529  005AFA  0E01               	movlw	1
 30530  005AFC  D001               	goto	L47
 30531  005AFE                     l832:
 30532                           
 30533                           ; BSR set to: 0
 30534                           ;os_ser.c: 112: else
 30535                           ;os_ser.c: 113: {
 30536                           ;os_ser.c: 115: EventStatus = EventIdle;
 30537                           
 30538                           ; BSR set to: 0
 30539  005AFE  0E00               	movlw	0
 30540  005B00                     L47:
 30541  005B00  6F80               	movwf	ReceiveEvt@EventStatus& (0+255),b
 30542                           
 30543                           ; BSR set to: 0
 30544                           ;os_ser.c: 116: }
 30545                           ;os_ser.c: 119: return(EventStatus);
 30546  005B02  5180               	movf	ReceiveEvt@EventStatus& (0+255),w,b
 30547  005B04  0012               	return	
 30548  005B06                     __end_of_ReceiveEvt:
 30549                           	opt stack 0
 30550                           tosu	equ	0xFFF
 30551                           tosh	equ	0xFFE
 30552                           tosl	equ	0xFFD
 30553                           pclath	equ	0xFFA
 30554                           tblptru	equ	0xFF8
 30555                           tblptrh	equ	0xFF7
 30556                           tblptrl	equ	0xFF6
 30557                           tablat	equ	0xFF5
 30558                           prodh	equ	0xFF4
 30559                           prodl	equ	0xFF3
 30560                           intcon	equ	0xFF2
 30561                           intcon2	equ	0xFF1
 30562                           intcon3	equ	0xFF0
 30563                           indf0	equ	0xFEF
 30564                           postinc0	equ	0xFEE
 30565                           plusw0	equ	0xFEB
 30566                           fsr0h	equ	0xFEA
 30567                           fsr0l	equ	0xFE9
 30568                           wreg	equ	0xFE8
 30569                           indf1	equ	0xFE7
 30570                           postinc1	equ	0xFE6
 30571                           postdec1	equ	0xFE5
 30572                           plusw1	equ	0xFE3
 30573                           fsr1h	equ	0xFE2
 30574                           fsr1l	equ	0xFE1
 30575                           indf2	equ	0xFDF
 30576                           postinc2	equ	0xFDE
 30577                           postdec2	equ	0xFDD
 30578                           plusw2	equ	0xFDB
 30579                           fsr2h	equ	0xFDA
 30580                           fsr2l	equ	0xFD9
 30581                           status	equ	0xFD8
 30582                           
 30583 ;; *************** function _I2c_WriteData *****************
 30584 ;; Defined at:
 30585 ;;		line 252 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 30586 ;; Parameters:    Size  Location     Type
 30587 ;;  WritePacket     2   30[BANK0 ] PTR struct _I2cWritePack
 30588 ;;		 -> I2cTxPacket(5), 
 30589 ;; Auto vars:     Size  Location     Type
 30590 ;;		None
 30591 ;; Return value:  Size  Location     Type
 30592 ;;                  1    wreg      enum E7740
 30593 ;; Registers used:
 30594 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 30595 ;; Tracked objects:
 30596 ;;		On entry : 0/0
 30597 ;;		On exit  : 0/0
 30598 ;;		Unchanged: 0/0
 30599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30600 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30601 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30602 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30603 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30604 ;;Total ram usage:        4 bytes
 30605 ;; Hardware stack levels used:    1
 30606 ;; Hardware stack levels required when called:   12
 30607 ;; This function calls:
 30608 ;;		_CheckAckStatus
 30609 ;;		_CheckTxStatus
 30610 ;;		_StartCondition
 30611 ;;		_StopCondition
 30612 ;;		_WriteByte
 30613 ;; This function is called by:
 30614 ;;		_I2cSendMsgSm
 30615 ;; This function uses a non-reentrant model
 30616 ;;
 30617                           
 30618                           	psect	text143
 30619  001D32                     __ptext143:
 30620                           	opt stack 0
 30621  001D32                     _I2c_WriteData:
 30622                           	opt stack 14
 30623                           
 30624                           ;i2c_drv.c: 255: static I2cWriteStateType I2cWriteState = TxAssertStart;
 30625                           ;i2c_drv.c: 256: static I2cWriteStateType I2cNextState = TxAssertStart;
 30626                           ;i2c_drv.c: 257: static UINT8 TentativeCounter = 0;
 30627                           ;i2c_drv.c: 258: static I2cWriteStsType WriteStatus;
 30628                           ;i2c_drv.c: 260: switch (I2cWriteState)
 30629                           
 30630                           ; BSR set to: 0
 30631                           ;incstack = 0
 30632  001D32  D095               	goto	l160
 30633  001D34                     
 30634                           ;i2c_drv.c: 264: StartCondition();
 30635  001D34  ECE5  F02F         	call	_StartCondition	;wreg free
 30636                           
 30637                           ;i2c_drv.c: 266: WriteStatus = I2cWriteInProgress;
 30638  001D38  0E00               	movlw	0
 30639  001D3A  6E35               	movwf	I2c_WriteData@WriteStatus,c
 30640                           
 30641                           ;i2c_drv.c: 268: I2cWriteState = TxSendSlaveAddress;
 30642  001D3C  0E01               	movlw	1
 30643  001D3E  D084               	goto	L54
 30644  001D40                     
 30645                           ;i2c_drv.c: 273: WritePacket->SlaveAddress = ((WritePacket->SlaveAddress) << 1) | WriteP
      +                          acket->ReadWrite;
 30646  001D40  0100               	movlb	0	; () banked
 30647  001D42  EE20 F001          	lfsr	2,1
 30648  001D46  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 30649  001D48  26D9               	addwf	fsr2l,f,c
 30650  001D4A  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 30651  001D4C  22DA               	addwfc	fsr2h,f,c
 30652  001D4E  50DF               	movf	indf2,w,c
 30653  001D50  6F80               	movwf	??_I2c_WriteData& (0+255),b
 30654  001D52  C07E  FFD9         	movff	I2c_WriteData@WritePacket,fsr2l
 30655  001D56  C07F  FFDA         	movff	I2c_WriteData@WritePacket+1,fsr2h
 30656  001D5A  50DF               	movf	indf2,w,c
 30657  001D5C  6F81               	movwf	(??_I2c_WriteData+1)& (0+255),b
 30658  001D5E  90D8               	bcf	status,0,c
 30659  001D60  3581               	rlcf	(??_I2c_WriteData+1)& (0+255),w,b
 30660  001D62  1180               	iorwf	??_I2c_WriteData& (0+255),w,b
 30661  001D64  C07E  FFD9         	movff	I2c_WriteData@WritePacket,fsr2l
 30662  001D68  C07F  FFDA         	movff	I2c_WriteData@WritePacket+1,fsr2h
 30663  001D6C  6EDF               	movwf	indf2,c
 30664                           
 30665                           ; BSR set to: 0
 30666                           ;i2c_drv.c: 275: WriteByte(WritePacket->SlaveAddress);
 30667  001D6E  C07E  FFD9         	movff	I2c_WriteData@WritePacket,fsr2l
 30668  001D72  C07F  FFDA         	movff	I2c_WriteData@WritePacket+1,fsr2h
 30669  001D76  50DF               	movf	indf2,w,c
 30670  001D78  ECC3  F02F         	call	_WriteByte
 30671                           
 30672                           ;i2c_drv.c: 277: I2cWriteState = TxCheckTxAddr;
 30673  001D7C  0E02               	movlw	2
 30674  001D7E  6E38               	movwf	I2c_WriteData@I2cWriteState,c
 30675  001D80                     
 30676                           ;i2c_drv.c: 281: if (CheckTxStatus() == ((UINT8)(0)))
 30677  001D80  ECCD  F02F         	call	_CheckTxStatus	;wreg free
 30678  001D84  0900               	iorlw	0
 30679  001D86  A4D8               	btfss	status,2,c
 30680  001D88  D089               	goto	l162
 30681                           
 30682                           ;i2c_drv.c: 282: {
 30683                           ;i2c_drv.c: 284: I2cNextState = TxSendDataByte;
 30684  001D8A  0E03               	movlw	3
 30685  001D8C  D01A               	goto	L56
 30686  001D8E                     
 30687                           ;i2c_drv.c: 292: WriteByte(*(WritePacket->Buffer));
 30688  001D8E  0100               	movlb	0	; () banked
 30689  001D90  EE20 F002          	lfsr	2,2
 30690  001D94  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 30691  001D96  26D9               	addwf	fsr2l,f,c
 30692  001D98  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 30693  001D9A  22DA               	addwfc	fsr2h,f,c
 30694  001D9C  CFDE F080          	movff	postinc2,??_I2c_WriteData
 30695  001DA0  CFDD F081          	movff	postdec2,??_I2c_WriteData+1
 30696  001DA4  C080  FFD9         	movff	??_I2c_WriteData,fsr2l
 30697  001DA8  C081  FFDA         	movff	??_I2c_WriteData+1,fsr2h
 30698  001DAC  50DF               	movf	indf2,w,c
 30699  001DAE  ECC3  F02F         	call	_WriteByte
 30700                           
 30701                           ;i2c_drv.c: 294: I2cWriteState = TxCheckTxData;
 30702  001DB2  0E04               	movlw	4
 30703  001DB4  D049               	goto	L54
 30704  001DB6                     
 30705                           ;i2c_drv.c: 299: if (CheckTxStatus() == ((UINT8)(0)))
 30706  001DB6  ECCD  F02F         	call	_CheckTxStatus	;wreg free
 30707  001DBA  0900               	iorlw	0
 30708  001DBC  A4D8               	btfss	status,2,c
 30709  001DBE  D06E               	goto	l162
 30710                           
 30711                           ;i2c_drv.c: 300: {
 30712                           ;i2c_drv.c: 302: I2cNextState = TxCheckLenght;
 30713  001DC0  0E05               	movlw	5
 30714  001DC2                     L56:
 30715  001DC2  6E37               	movwf	I2c_WriteData@I2cNextState,c
 30716                           
 30717                           ;i2c_drv.c: 304: I2cWriteState = TxCheckAck;
 30718  001DC4  0E08               	movlw	8
 30719  001DC6  D040               	goto	L54
 30720  001DC8                     
 30721                           ;i2c_drv.c: 309: if (WritePacket->Lenght > 0)
 30722  001DC8  0100               	movlb	0	; () banked
 30723  001DCA  EE20 F004          	lfsr	2,4
 30724  001DCE  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 30725  001DD0  26D9               	addwf	fsr2l,f,c
 30726  001DD2  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 30727  001DD4  22DA               	addwfc	fsr2h,f,c
 30728  001DD6  50DF               	movf	indf2,w,c
 30729  001DD8  B4D8               	btfsc	status,2,c
 30730  001DDA  D010               	goto	l170
 30731                           
 30732                           ; BSR set to: 0
 30733                           ;i2c_drv.c: 310: {
 30734                           ;i2c_drv.c: 312: (WritePacket->Lenght)--;
 30735  001DDC  EE20 F004          	lfsr	2,4
 30736  001DE0  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 30737  001DE2  26D9               	addwf	fsr2l,f,c
 30738  001DE4  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 30739  001DE6  22DA               	addwfc	fsr2h,f,c
 30740  001DE8  06DF               	decf	indf2,f,c
 30741                           
 30742                           ;i2c_drv.c: 314: WritePacket->Buffer++;
 30743  001DEA  EE20 F002          	lfsr	2,2
 30744  001DEE  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 30745  001DF0  26D9               	addwf	fsr2l,f,c
 30746  001DF2  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 30747  001DF4  22DA               	addwfc	fsr2h,f,c
 30748  001DF6  2ADE               	incf	postinc2,f,c
 30749  001DF8  0E00               	movlw	0
 30750  001DFA  22DD               	addwfc	postdec2,f,c
 30751  001DFC                     l170:
 30752                           
 30753                           ; BSR set to: 0
 30754                           ;i2c_drv.c: 315: }
 30755                           ;i2c_drv.c: 318: if (WritePacket->Lenght == 0)
 30756  001DFC  EE20 F004          	lfsr	2,4
 30757  001E00  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 30758  001E02  26D9               	addwf	fsr2l,f,c
 30759  001E04  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 30760  001E06  22DA               	addwfc	fsr2h,f,c
 30761  001E08  50DF               	movf	indf2,w,c
 30762  001E0A  A4D8               	btfss	status,2,c
 30763  001E0C  D002               	goto	l171
 30764                           
 30765                           ; BSR set to: 0
 30766                           ;i2c_drv.c: 319: {
 30767                           ;i2c_drv.c: 321: I2cWriteState = TxAssertStop;
 30768  001E0E  0E06               	movlw	6
 30769  001E10  D01B               	goto	L54
 30770  001E12                     l171:
 30771                           
 30772                           ; BSR set to: 0
 30773                           ;i2c_drv.c: 323: else
 30774                           ;i2c_drv.c: 324: {
 30775                           ;i2c_drv.c: 326: I2cWriteState = TxSendDataByte;
 30776                           
 30777                           ; BSR set to: 0
 30778  001E12  0E03               	movlw	3
 30779  001E14  D019               	goto	L54
 30780  001E16                     
 30781                           ;i2c_drv.c: 332: StopCondition();
 30782                           
 30783                           ; BSR set to: 0
 30784  001E16  ECE3  F02F         	call	_StopCondition	;wreg free
 30785                           
 30786                           ;i2c_drv.c: 334: I2cWriteState = TxCompleted;
 30787  001E1A  0E07               	movlw	7
 30788  001E1C  D015               	goto	L54
 30789  001E1E                     
 30790                           ;i2c_drv.c: 339: I2cWriteState = TxAssertStart;
 30791  001E1E  0E00               	movlw	0
 30792  001E20  6E38               	movwf	I2c_WriteData@I2cWriteState,c
 30793                           
 30794                           ;i2c_drv.c: 340: I2cNextState = TxAssertStart;
 30795  001E22  0E00               	movlw	0
 30796  001E24  6E37               	movwf	I2c_WriteData@I2cNextState,c
 30797                           
 30798                           ;i2c_drv.c: 342: WriteStatus = I2cWriteOk;
 30799  001E26  0E02               	movlw	2
 30800  001E28  D018               	goto	L55
 30801  001E2A                     
 30802                           ;i2c_drv.c: 347: TentativeCounter++;
 30803  001E2A  2A36               	incf	I2c_WriteData@TentativeCounter,f,c
 30804                           
 30805                           ;i2c_drv.c: 349: if (CheckAckStatus() == ((UINT8)(0)))
 30806  001E2C  ECD2  F02F         	call	_CheckAckStatus	;wreg free
 30807  001E30  0900               	iorlw	0
 30808  001E32  A4D8               	btfss	status,2,c
 30809  001E34  D005               	goto	l176
 30810                           
 30811                           ;i2c_drv.c: 350: {
 30812                           ;i2c_drv.c: 352: TentativeCounter = 0;
 30813  001E36  0E00               	movlw	0
 30814  001E38  6E36               	movwf	I2c_WriteData@TentativeCounter,c
 30815                           
 30816                           ;i2c_drv.c: 354: I2cWriteState = I2cNextState;
 30817  001E3A  C037  F038         	movff	I2c_WriteData@I2cNextState,I2c_WriteData@I2cWriteState
 30818                           
 30819                           ;i2c_drv.c: 355: }
 30820  001E3E  D02E               	goto	l162
 30821  001E40                     l176:
 30822                           
 30823                           ;i2c_drv.c: 356: else
 30824                           ;i2c_drv.c: 357: {
 30825                           ;i2c_drv.c: 359: if (TentativeCounter >= ((UINT8)(3)))
 30826  001E40  0E02               	movlw	2
 30827  001E42  6436               	cpfsgt	I2c_WriteData@TentativeCounter,c
 30828  001E44  D02B               	goto	l162
 30829                           
 30830                           ;i2c_drv.c: 360: {
 30831                           ;i2c_drv.c: 362: I2cWriteState = TxErrorStatus;
 30832  001E46  0E09               	movlw	9
 30833  001E48                     L54:
 30834  001E48  6E38               	movwf	I2c_WriteData@I2cWriteState,c
 30835                           
 30836                           ;i2c_drv.c: 363: }
 30837                           ;i2c_drv.c: 364: }
 30838                           ;i2c_drv.c: 365: break;
 30839  001E4A  D028               	goto	l162
 30840  001E4C                     
 30841                           ;i2c_drv.c: 369: I2cWriteState = TxAssertStart;
 30842  001E4C  0E00               	movlw	0
 30843  001E4E  6E38               	movwf	I2c_WriteData@I2cWriteState,c
 30844                           
 30845                           ;i2c_drv.c: 370: I2cNextState = TxAssertStart;
 30846  001E50  0E00               	movlw	0
 30847  001E52  6E37               	movwf	I2c_WriteData@I2cNextState,c
 30848                           
 30849                           ;i2c_drv.c: 372: TentativeCounter = 0;
 30850  001E54  0E00               	movlw	0
 30851  001E56  6E36               	movwf	I2c_WriteData@TentativeCounter,c
 30852                           
 30853                           ;i2c_drv.c: 374: WriteStatus = I2cWriteNotOk;
 30854  001E58  0E01               	movlw	1
 30855  001E5A                     L55:
 30856  001E5A  6E35               	movwf	I2c_WriteData@WriteStatus,c
 30857                           
 30858                           ;i2c_drv.c: 379: }
 30859                           
 30860                           ;i2c_drv.c: 378: break;
 30861                           
 30862                           ;i2c_drv.c: 377: default:
 30863                           
 30864                           ;i2c_drv.c: 375: break;
 30865  001E5C  D01F               	goto	l162
 30866  001E5E                     l160:
 30867  001E5E  5038               	movf	I2c_WriteData@I2cWriteState,w,c
 30868                           
 30869                           ; Switch size 1, requested type "space"
 30870                           ; Number of cases is 10, Range of values is 0 to 9
 30871                           ; switch strategies available:
 30872                           ; Name         Instructions Cycles
 30873                           ; simple_byte           31    16 (average)
 30874                           ;	Chosen strategy is simple_byte
 30875  001E60  0A00               	xorlw	0	; case 0
 30876  001E62  B4D8               	btfsc	status,2,c
 30877  001E64  D767               	goto	l161
 30878  001E66  0A01               	xorlw	1	; case 1
 30879  001E68  B4D8               	btfsc	status,2,c
 30880  001E6A  D76A               	goto	l163
 30881  001E6C  0A03               	xorlw	3	; case 2
 30882  001E6E  B4D8               	btfsc	status,2,c
 30883  001E70  D787               	goto	l164
 30884  001E72  0A01               	xorlw	1	; case 3
 30885  001E74  B4D8               	btfsc	status,2,c
 30886  001E76  D78B               	goto	l166
 30887  001E78  0A07               	xorlw	7	; case 4
 30888  001E7A  B4D8               	btfsc	status,2,c
 30889  001E7C  D79C               	goto	l167
 30890  001E7E  0A01               	xorlw	1	; case 5
 30891  001E80  B4D8               	btfsc	status,2,c
 30892  001E82  D7A2               	goto	l169
 30893  001E84  0A03               	xorlw	3	; case 6
 30894  001E86  B4D8               	btfsc	status,2,c
 30895  001E88  D7C6               	goto	l173
 30896  001E8A  0A01               	xorlw	1	; case 7
 30897  001E8C  B4D8               	btfsc	status,2,c
 30898  001E8E  D7C7               	goto	l174
 30899  001E90  0A0F               	xorlw	15	; case 8
 30900  001E92  B4D8               	btfsc	status,2,c
 30901  001E94  D7CA               	goto	l175
 30902  001E96  0A01               	xorlw	1	; case 9
 30903  001E98  B4D8               	btfsc	status,2,c
 30904  001E9A  D7D8               	goto	l179
 30905  001E9C                     l162:
 30906                           
 30907                           ;i2c_drv.c: 382: return WriteStatus;
 30908  001E9C  5035               	movf	I2c_WriteData@WriteStatus,w,c
 30909  001E9E  0012               	return	
 30910  001EA0                     __end_of_I2c_WriteData:
 30911                           	opt stack 0
 30912                           tosu	equ	0xFFF
 30913                           tosh	equ	0xFFE
 30914                           tosl	equ	0xFFD
 30915                           pclath	equ	0xFFA
 30916                           tblptru	equ	0xFF8
 30917                           tblptrh	equ	0xFF7
 30918                           tblptrl	equ	0xFF6
 30919                           tablat	equ	0xFF5
 30920                           prodh	equ	0xFF4
 30921                           prodl	equ	0xFF3
 30922                           intcon	equ	0xFF2
 30923                           intcon2	equ	0xFF1
 30924                           intcon3	equ	0xFF0
 30925                           indf0	equ	0xFEF
 30926                           postinc0	equ	0xFEE
 30927                           plusw0	equ	0xFEB
 30928                           fsr0h	equ	0xFEA
 30929                           fsr0l	equ	0xFE9
 30930                           wreg	equ	0xFE8
 30931                           indf1	equ	0xFE7
 30932                           postinc1	equ	0xFE6
 30933                           postdec1	equ	0xFE5
 30934                           plusw1	equ	0xFE3
 30935                           fsr1h	equ	0xFE2
 30936                           fsr1l	equ	0xFE1
 30937                           indf2	equ	0xFDF
 30938                           postinc2	equ	0xFDE
 30939                           postdec2	equ	0xFDD
 30940                           plusw2	equ	0xFDB
 30941                           fsr2h	equ	0xFDA
 30942                           fsr2l	equ	0xFD9
 30943                           status	equ	0xFD8
 30944                           
 30945 ;; *************** function _I2c_ReadData *****************
 30946 ;; Defined at:
 30947 ;;		line 393 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 30948 ;; Parameters:    Size  Location     Type
 30949 ;;  ReadPacket      2   32[BANK0 ] PTR struct _I2cReadPacke
 30950 ;;		 -> I2cRxPacket(6), 
 30951 ;; Auto vars:     Size  Location     Type
 30952 ;;		None
 30953 ;; Return value:  Size  Location     Type
 30954 ;;                  1    wreg      enum E7787
 30955 ;; Registers used:
 30956 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 30957 ;; Tracked objects:
 30958 ;;		On entry : 0/0
 30959 ;;		On exit  : 0/0
 30960 ;;		Unchanged: 0/0
 30961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30962 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30963 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30964 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30965 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30966 ;;Total ram usage:        4 bytes
 30967 ;; Hardware stack levels used:    1
 30968 ;; Hardware stack levels required when called:   12
 30969 ;; This function calls:
 30970 ;;		_CheckAckStatus
 30971 ;;		_CheckTxStatus
 30972 ;;		_EnableReceiver
 30973 ;;		_GenerateEvt
 30974 ;;		_ReadByte
 30975 ;;		_SetAckStatus
 30976 ;;		_StartCondition
 30977 ;;		_StopCondition
 30978 ;;		_WriteByte
 30979 ;; This function is called by:
 30980 ;;		_I2cSendMsgSm
 30981 ;; This function uses a non-reentrant model
 30982 ;;
 30983                           
 30984                           	psect	text144
 30985  001EA0                     __ptext144:
 30986                           	opt stack 0
 30987  001EA0                     _I2c_ReadData:
 30988                           	opt stack 14
 30989                           
 30990                           ;i2c_drv.c: 396: static I2cReadStateType I2cReadState = RxAssertStart;
 30991                           ;i2c_drv.c: 397: static UINT8 DataCounter = 0;
 30992                           ;i2c_drv.c: 398: static UINT8 TentativeCounter = 0;
 30993                           ;i2c_drv.c: 400: static I2cReadStsType ReadStatus;
 30994                           ;i2c_drv.c: 402: switch (I2cReadState)
 30995                           
 30996                           ;incstack = 0
 30997  001EA0  D090               	goto	l192
 30998  001EA2                     
 30999                           ;i2c_drv.c: 406: StartCondition();
 31000  001EA2  ECE5  F02F         	call	_StartCondition	;wreg free
 31001                           
 31002                           ;i2c_drv.c: 408: ReadStatus = I2cReadInProgress;
 31003  001EA6  0E00               	movlw	0
 31004  001EA8  6E31               	movwf	I2c_ReadData@ReadStatus,c
 31005                           
 31006                           ;i2c_drv.c: 410: I2cReadState = RxSendSlaveAddr;
 31007  001EAA  0E01               	movlw	1
 31008  001EAC  D083               	goto	L64
 31009  001EAE                     
 31010                           ;i2c_drv.c: 415: ReadPacket->SlaveAddress = ((ReadPacket->SlaveAddress) << 1) | ReadPack
      +                          et->ReadWrite;
 31011  001EAE  0100               	movlb	0	; () banked
 31012  001EB0  EE20 F001          	lfsr	2,1
 31013  001EB4  5180               	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 31014  001EB6  26D9               	addwf	fsr2l,f,c
 31015  001EB8  5181               	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 31016  001EBA  22DA               	addwfc	fsr2h,f,c
 31017  001EBC  50DF               	movf	indf2,w,c
 31018  001EBE  6F82               	movwf	??_I2c_ReadData& (0+255),b
 31019  001EC0  C080  FFD9         	movff	I2c_ReadData@ReadPacket,fsr2l
 31020  001EC4  C081  FFDA         	movff	I2c_ReadData@ReadPacket+1,fsr2h
 31021  001EC8  50DF               	movf	indf2,w,c
 31022  001ECA  6F83               	movwf	(??_I2c_ReadData+1)& (0+255),b
 31023  001ECC  90D8               	bcf	status,0,c
 31024  001ECE  3583               	rlcf	(??_I2c_ReadData+1)& (0+255),w,b
 31025  001ED0  1182               	iorwf	??_I2c_ReadData& (0+255),w,b
 31026  001ED2  C080  FFD9         	movff	I2c_ReadData@ReadPacket,fsr2l
 31027  001ED6  C081  FFDA         	movff	I2c_ReadData@ReadPacket+1,fsr2h
 31028  001EDA  6EDF               	movwf	indf2,c
 31029                           
 31030                           ; BSR set to: 0
 31031                           ;i2c_drv.c: 417: WriteByte(ReadPacket->SlaveAddress);
 31032  001EDC  C080  FFD9         	movff	I2c_ReadData@ReadPacket,fsr2l
 31033  001EE0  C081  FFDA         	movff	I2c_ReadData@ReadPacket+1,fsr2h
 31034  001EE4  50DF               	movf	indf2,w,c
 31035  001EE6  ECC3  F02F         	call	_WriteByte
 31036                           
 31037                           ;i2c_drv.c: 419: I2cReadState = RxCheckTxAddr;
 31038  001EEA  0E02               	movlw	2
 31039  001EEC  D063               	goto	L64
 31040  001EEE                     
 31041                           ;i2c_drv.c: 424: if (CheckTxStatus() == ((UINT8)(0)))
 31042  001EEE  ECCD  F02F         	call	_CheckTxStatus	;wreg free
 31043  001EF2  0900               	iorlw	0
 31044  001EF4  A4D8               	btfss	status,2,c
 31045  001EF6  D081               	goto	l194
 31046                           
 31047                           ;i2c_drv.c: 425: {
 31048                           ;i2c_drv.c: 427: I2cReadState = RxCheckAck;
 31049  001EF8  0E03               	movlw	3
 31050  001EFA  D05C               	goto	L64
 31051  001EFC                     
 31052                           ;i2c_drv.c: 433: TentativeCounter++;
 31053  001EFC  2A32               	incf	I2c_ReadData@TentativeCounter,f,c
 31054                           
 31055                           ;i2c_drv.c: 435: if (CheckAckStatus() == ((UINT8)(0)))
 31056  001EFE  ECD2  F02F         	call	_CheckAckStatus	;wreg free
 31057  001F02  0900               	iorlw	0
 31058  001F04  A4D8               	btfss	status,2,c
 31059  001F06  D004               	goto	l199
 31060                           
 31061                           ;i2c_drv.c: 436: {
 31062                           ;i2c_drv.c: 438: TentativeCounter = 0;
 31063  001F08  0E00               	movlw	0
 31064  001F0A  6E32               	movwf	I2c_ReadData@TentativeCounter,c
 31065  001F0C                     
 31066                           ;i2c_drv.c: 440: I2cReadState = RxGetData;
 31067  001F0C  0E04               	movlw	4
 31068  001F0E  D052               	goto	L64
 31069  001F10                     l199:
 31070                           
 31071                           ;i2c_drv.c: 442: else
 31072                           ;i2c_drv.c: 443: {
 31073                           ;i2c_drv.c: 445: if (TentativeCounter >= ((UINT8)(3)))
 31074  001F10  0E02               	movlw	2
 31075  001F12  6432               	cpfsgt	I2c_ReadData@TentativeCounter,c
 31076  001F14  D072               	goto	l194
 31077                           
 31078                           ;i2c_drv.c: 446: {
 31079                           ;i2c_drv.c: 448: I2cReadState = RxErrorStatus;
 31080  001F16  0E08               	movlw	8
 31081  001F18  D04D               	goto	L64
 31082  001F1A                     
 31083                           ;i2c_drv.c: 455: EnableReceiver();
 31084  001F1A  ECE7  F02F         	call	_EnableReceiver	;wreg free
 31085                           
 31086                           ;i2c_drv.c: 457: I2cReadState = RxReadData;
 31087  001F1E  0E05               	movlw	5
 31088  001F20  D049               	goto	L64
 31089  001F22                     
 31090                           ;i2c_drv.c: 462: if (CheckTxStatus() == ((UINT8)(0)))
 31091  001F22  ECCD  F02F         	call	_CheckTxStatus	;wreg free
 31092  001F26  0900               	iorlw	0
 31093  001F28  A4D8               	btfss	status,2,c
 31094  001F2A  D067               	goto	l194
 31095                           
 31096                           ;i2c_drv.c: 463: {
 31097                           ;i2c_drv.c: 465: *(ReadPacket->Buffer) = ReadByte();
 31098  001F2C  0100               	movlb	0	; () banked
 31099  001F2E  EE20 F002          	lfsr	2,2
 31100  001F32  5180               	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 31101  001F34  26D9               	addwf	fsr2l,f,c
 31102  001F36  5181               	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 31103  001F38  22DA               	addwfc	fsr2h,f,c
 31104  001F3A  CFDE F082          	movff	postinc2,??_I2c_ReadData
 31105  001F3E  CFDD F083          	movff	postdec2,??_I2c_ReadData+1
 31106  001F42  C082  FFD9         	movff	??_I2c_ReadData,fsr2l
 31107  001F46  C083  FFDA         	movff	??_I2c_ReadData+1,fsr2h
 31108  001F4A  ECC8  F02F         	call	_ReadByte	;wreg free
 31109  001F4E  6EDF               	movwf	indf2,c
 31110                           
 31111                           ;i2c_drv.c: 467: ReadPacket->Buffer++;
 31112  001F50  0100               	movlb	0	; () banked
 31113  001F52  EE20 F002          	lfsr	2,2
 31114  001F56  5180               	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 31115  001F58  26D9               	addwf	fsr2l,f,c
 31116  001F5A  5181               	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 31117  001F5C  22DA               	addwfc	fsr2h,f,c
 31118  001F5E  2ADE               	incf	postinc2,f,c
 31119  001F60  0E00               	movlw	0
 31120  001F62  22DD               	addwfc	postdec2,f,c
 31121                           
 31122                           ; BSR set to: 0
 31123                           ;i2c_drv.c: 469: DataCounter++;
 31124  001F64  2A33               	incf	I2c_ReadData@DataCounter,f,c
 31125                           
 31126                           ; BSR set to: 0
 31127                           ;i2c_drv.c: 471: I2cReadState = RxCheckLen;
 31128  001F66  0E06               	movlw	6
 31129  001F68  D025               	goto	L64
 31130  001F6A                     
 31131                           ;i2c_drv.c: 477: if (DataCounter >= ReadPacket->Lenght)
 31132                           
 31133                           ; BSR set to: 0
 31134  001F6A  0100               	movlb	0	; () banked
 31135  001F6C  EE20 F004          	lfsr	2,4
 31136  001F70  5180               	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 31137  001F72  26D9               	addwf	fsr2l,f,c
 31138  001F74  5181               	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 31139  001F76  22DA               	addwfc	fsr2h,f,c
 31140  001F78  50DE               	movf	postinc2,w,c
 31141  001F7A  5C33               	subwf	I2c_ReadData@DataCounter,w,c
 31142  001F7C  A0D8               	btfss	status,0,c
 31143  001F7E  D008               	goto	l206
 31144                           
 31145                           ; BSR set to: 0
 31146                           ;i2c_drv.c: 478: {
 31147                           ;i2c_drv.c: 480: SetAckStatus(((UINT8)(1)));
 31148  001F80  0E01               	movlw	1
 31149  001F82  EC66  F02F         	call	_SetAckStatus
 31150                           
 31151                           ;i2c_drv.c: 482: I2cReadState = RxAssertStop;
 31152  001F86  0E07               	movlw	7
 31153  001F88  6E34               	movwf	I2c_ReadData@I2cReadState,c
 31154                           
 31155                           ;i2c_drv.c: 484: DataCounter = 0;
 31156  001F8A  0E00               	movlw	0
 31157  001F8C  6E33               	movwf	I2c_ReadData@DataCounter,c
 31158                           
 31159                           ;i2c_drv.c: 485: }
 31160  001F8E  D035               	goto	l194
 31161  001F90                     l206:
 31162                           
 31163                           ;i2c_drv.c: 486: else
 31164                           ;i2c_drv.c: 487: {
 31165                           ;i2c_drv.c: 489: SetAckStatus(((UINT8)(0)));
 31166  001F90  0E00               	movlw	0
 31167  001F92  EC66  F02F         	call	_SetAckStatus
 31168  001F96  D7BA               	goto	L65
 31169  001F98                     
 31170                           ;i2c_drv.c: 497: StopCondition();
 31171  001F98  ECE3  F02F         	call	_StopCondition	;wreg free
 31172                           
 31173                           ;i2c_drv.c: 499: ReadStatus = I2cReadOk;
 31174  001F9C  0E02               	movlw	2
 31175  001F9E  6E31               	movwf	I2c_ReadData@ReadStatus,c
 31176                           
 31177                           ;i2c_drv.c: 501: GenerateEvt(&(ReadPacket->ReadCompleteEvt));
 31178  001FA0  0E05               	movlw	5
 31179  001FA2  0100               	movlb	0	; () banked
 31180  001FA4  2580               	addwf	I2c_ReadData@ReadPacket& (0+255),w,b
 31181  001FA6  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 31182  001FA8  0E00               	movlw	0
 31183  001FAA  2181               	addwfc	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 31184  001FAC  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 31185  001FAE  EC24  F02F         	call	_GenerateEvt	;wreg free
 31186                           
 31187                           ;i2c_drv.c: 503: I2cReadState = RxAssertStart;
 31188  001FB2  0E00               	movlw	0
 31189  001FB4                     L64:
 31190  001FB4  6E34               	movwf	I2c_ReadData@I2cReadState,c
 31191                           
 31192                           ;i2c_drv.c: 504: break;
 31193  001FB6  D021               	goto	l194
 31194  001FB8                     
 31195                           ;i2c_drv.c: 508: I2cReadState = RxAssertStart;
 31196  001FB8  0E00               	movlw	0
 31197  001FBA  6E34               	movwf	I2c_ReadData@I2cReadState,c
 31198                           
 31199                           ;i2c_drv.c: 510: ReadStatus = I2cReadNotOk;
 31200  001FBC  0E01               	movlw	1
 31201  001FBE  6E31               	movwf	I2c_ReadData@ReadStatus,c
 31202                           
 31203                           ;i2c_drv.c: 515: }
 31204                           
 31205                           ;i2c_drv.c: 514: break;
 31206                           
 31207                           ;i2c_drv.c: 513: default:
 31208                           
 31209                           ;i2c_drv.c: 511: break;
 31210  001FC0  D01C               	goto	l194
 31211  001FC2                     l192:
 31212  001FC2  5034               	movf	I2c_ReadData@I2cReadState,w,c
 31213                           
 31214                           ; Switch size 1, requested type "space"
 31215                           ; Number of cases is 9, Range of values is 0 to 8
 31216                           ; switch strategies available:
 31217                           ; Name         Instructions Cycles
 31218                           ; simple_byte           28    15 (average)
 31219                           ;	Chosen strategy is simple_byte
 31220  001FC4  0A00               	xorlw	0	; case 0
 31221  001FC6  B4D8               	btfsc	status,2,c
 31222  001FC8  D76C               	goto	l193
 31223  001FCA  0A01               	xorlw	1	; case 1
 31224  001FCC  B4D8               	btfsc	status,2,c
 31225  001FCE  D76F               	goto	l195
 31226  001FD0  0A03               	xorlw	3	; case 2
 31227  001FD2  B4D8               	btfsc	status,2,c
 31228  001FD4  D78C               	goto	l196
 31229  001FD6  0A01               	xorlw	1	; case 3
 31230  001FD8  B4D8               	btfsc	status,2,c
 31231  001FDA  D790               	goto	l198
 31232  001FDC  0A07               	xorlw	7	; case 4
 31233  001FDE  B4D8               	btfsc	status,2,c
 31234  001FE0  D79C               	goto	l202
 31235  001FE2  0A01               	xorlw	1	; case 5
 31236  001FE4  B4D8               	btfsc	status,2,c
 31237  001FE6  D79D               	goto	l203
 31238  001FE8  0A03               	xorlw	3	; case 6
 31239  001FEA  B4D8               	btfsc	status,2,c
 31240  001FEC  D7BE               	goto	l205
 31241  001FEE  0A01               	xorlw	1	; case 7
 31242  001FF0  B4D8               	btfsc	status,2,c
 31243  001FF2  D7D2               	goto	l208
 31244  001FF4  0A0F               	xorlw	15	; case 8
 31245  001FF6  B4D8               	btfsc	status,2,c
 31246  001FF8  D7DF               	goto	l209
 31247  001FFA                     l194:
 31248                           
 31249                           ;i2c_drv.c: 518: return ReadStatus;
 31250  001FFA  5031               	movf	I2c_ReadData@ReadStatus,w,c
 31251  001FFC  0012               	return	
 31252  001FFE                     __end_of_I2c_ReadData:
 31253                           	opt stack 0
 31254                           tosu	equ	0xFFF
 31255                           tosh	equ	0xFFE
 31256                           tosl	equ	0xFFD
 31257                           pclath	equ	0xFFA
 31258                           tblptru	equ	0xFF8
 31259                           tblptrh	equ	0xFF7
 31260                           tblptrl	equ	0xFF6
 31261                           tablat	equ	0xFF5
 31262                           prodh	equ	0xFF4
 31263                           prodl	equ	0xFF3
 31264                           intcon	equ	0xFF2
 31265                           intcon2	equ	0xFF1
 31266                           intcon3	equ	0xFF0
 31267                           indf0	equ	0xFEF
 31268                           postinc0	equ	0xFEE
 31269                           plusw0	equ	0xFEB
 31270                           fsr0h	equ	0xFEA
 31271                           fsr0l	equ	0xFE9
 31272                           wreg	equ	0xFE8
 31273                           indf1	equ	0xFE7
 31274                           postinc1	equ	0xFE6
 31275                           postdec1	equ	0xFE5
 31276                           plusw1	equ	0xFE3
 31277                           fsr1h	equ	0xFE2
 31278                           fsr1l	equ	0xFE1
 31279                           indf2	equ	0xFDF
 31280                           postinc2	equ	0xFDE
 31281                           postdec2	equ	0xFDD
 31282                           plusw2	equ	0xFDB
 31283                           fsr2h	equ	0xFDA
 31284                           fsr2l	equ	0xFD9
 31285                           status	equ	0xFD8
 31286                           
 31287 ;; *************** function _WriteByte *****************
 31288 ;; Defined at:
 31289 ;;		line 190 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 31290 ;; Parameters:    Size  Location     Type
 31291 ;;  Byte            1    wreg     unsigned char 
 31292 ;; Auto vars:     Size  Location     Type
 31293 ;;  Byte            1   29[BANK0 ] unsigned char 
 31294 ;; Return value:  Size  Location     Type
 31295 ;;                  1    wreg      void 
 31296 ;; Registers used:
 31297 ;;		wreg
 31298 ;; Tracked objects:
 31299 ;;		On entry : 0/0
 31300 ;;		On exit  : 0/0
 31301 ;;		Unchanged: 0/0
 31302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31303 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31304 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31305 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31306 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31307 ;;Total ram usage:        1 bytes
 31308 ;; Hardware stack levels used:    1
 31309 ;; Hardware stack levels required when called:   11
 31310 ;; This function calls:
 31311 ;;		Nothing
 31312 ;; This function is called by:
 31313 ;;		_I2c_WriteData
 31314 ;;		_I2c_ReadData
 31315 ;; This function uses a non-reentrant model
 31316 ;;
 31317                           
 31318                           	psect	text145
 31319  005F86                     __ptext145:
 31320                           	opt stack 0
 31321  005F86                     _WriteByte:
 31322                           	opt stack 14
 31323                           
 31324                           ;incstack = 0
 31325                           ;WriteByte@Byte stored from wreg
 31326  005F86  0100               	movlb	0	; () banked
 31327  005F88  6F7D               	movwf	WriteByte@Byte& (0+255),b
 31328                           
 31329                           ;i2c_drv.c: 193: SSP2BUF = Byte;
 31330  005F8A  C07D  FF75         	movff	WriteByte@Byte,3957	;volatile
 31331  005F8E  0012               	return		;funcret
 31332  005F90                     __end_of_WriteByte:
 31333                           	opt stack 0
 31334                           tosu	equ	0xFFF
 31335                           tosh	equ	0xFFE
 31336                           tosl	equ	0xFFD
 31337                           pclath	equ	0xFFA
 31338                           tblptru	equ	0xFF8
 31339                           tblptrh	equ	0xFF7
 31340                           tblptrl	equ	0xFF6
 31341                           tablat	equ	0xFF5
 31342                           prodh	equ	0xFF4
 31343                           prodl	equ	0xFF3
 31344                           intcon	equ	0xFF2
 31345                           intcon2	equ	0xFF1
 31346                           intcon3	equ	0xFF0
 31347                           indf0	equ	0xFEF
 31348                           postinc0	equ	0xFEE
 31349                           plusw0	equ	0xFEB
 31350                           fsr0h	equ	0xFEA
 31351                           fsr0l	equ	0xFE9
 31352                           wreg	equ	0xFE8
 31353                           indf1	equ	0xFE7
 31354                           postinc1	equ	0xFE6
 31355                           postdec1	equ	0xFE5
 31356                           plusw1	equ	0xFE3
 31357                           fsr1h	equ	0xFE2
 31358                           fsr1l	equ	0xFE1
 31359                           indf2	equ	0xFDF
 31360                           postinc2	equ	0xFDE
 31361                           postdec2	equ	0xFDD
 31362                           plusw2	equ	0xFDB
 31363                           fsr2h	equ	0xFDA
 31364                           fsr2l	equ	0xFD9
 31365                           status	equ	0xFD8
 31366                           
 31367 ;; *************** function _StopCondition *****************
 31368 ;; Defined at:
 31369 ;;		line 120 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 31370 ;; Parameters:    Size  Location     Type
 31371 ;;		None
 31372 ;; Auto vars:     Size  Location     Type
 31373 ;;		None
 31374 ;; Return value:  Size  Location     Type
 31375 ;;                  1    wreg      void 
 31376 ;; Registers used:
 31377 ;;		status,2, status,0
 31378 ;; Tracked objects:
 31379 ;;		On entry : 0/0
 31380 ;;		On exit  : 0/0
 31381 ;;		Unchanged: 0/0
 31382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31383 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31384 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31386 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31387 ;;Total ram usage:        0 bytes
 31388 ;; Hardware stack levels used:    1
 31389 ;; Hardware stack levels required when called:   11
 31390 ;; This function calls:
 31391 ;;		Nothing
 31392 ;; This function is called by:
 31393 ;;		_I2c_WriteData
 31394 ;;		_I2c_ReadData
 31395 ;; This function uses a non-reentrant model
 31396 ;;
 31397                           
 31398                           	psect	text146
 31399  005FC6                     __ptext146:
 31400                           	opt stack 0
 31401  005FC6                     _StopCondition:
 31402                           	opt stack 14
 31403                           
 31404                           ;i2c_drv.c: 123: SSP2CON2 |= (((UINT8)(1)) << ((UINT8)(2)));
 31405                           
 31406                           ;incstack = 0
 31407  005FC6  8471               	bsf	3953,2,c	;volatile
 31408  005FC8  0012               	return		;funcret
 31409  005FCA                     __end_of_StopCondition:
 31410                           	opt stack 0
 31411                           tosu	equ	0xFFF
 31412                           tosh	equ	0xFFE
 31413                           tosl	equ	0xFFD
 31414                           pclath	equ	0xFFA
 31415                           tblptru	equ	0xFF8
 31416                           tblptrh	equ	0xFF7
 31417                           tblptrl	equ	0xFF6
 31418                           tablat	equ	0xFF5
 31419                           prodh	equ	0xFF4
 31420                           prodl	equ	0xFF3
 31421                           intcon	equ	0xFF2
 31422                           intcon2	equ	0xFF1
 31423                           intcon3	equ	0xFF0
 31424                           indf0	equ	0xFEF
 31425                           postinc0	equ	0xFEE
 31426                           plusw0	equ	0xFEB
 31427                           fsr0h	equ	0xFEA
 31428                           fsr0l	equ	0xFE9
 31429                           wreg	equ	0xFE8
 31430                           indf1	equ	0xFE7
 31431                           postinc1	equ	0xFE6
 31432                           postdec1	equ	0xFE5
 31433                           plusw1	equ	0xFE3
 31434                           fsr1h	equ	0xFE2
 31435                           fsr1l	equ	0xFE1
 31436                           indf2	equ	0xFDF
 31437                           postinc2	equ	0xFDE
 31438                           postdec2	equ	0xFDD
 31439                           plusw2	equ	0xFDB
 31440                           fsr2h	equ	0xFDA
 31441                           fsr2l	equ	0xFD9
 31442                           status	equ	0xFD8
 31443                           
 31444 ;; *************** function _StartCondition *****************
 31445 ;; Defined at:
 31446 ;;		line 92 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 31447 ;; Parameters:    Size  Location     Type
 31448 ;;		None
 31449 ;; Auto vars:     Size  Location     Type
 31450 ;;		None
 31451 ;; Return value:  Size  Location     Type
 31452 ;;                  1    wreg      void 
 31453 ;; Registers used:
 31454 ;;		status,2, status,0
 31455 ;; Tracked objects:
 31456 ;;		On entry : 0/0
 31457 ;;		On exit  : 0/0
 31458 ;;		Unchanged: 0/0
 31459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31460 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31461 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31462 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31463 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31464 ;;Total ram usage:        0 bytes
 31465 ;; Hardware stack levels used:    1
 31466 ;; Hardware stack levels required when called:   11
 31467 ;; This function calls:
 31468 ;;		Nothing
 31469 ;; This function is called by:
 31470 ;;		_I2c_WriteData
 31471 ;;		_I2c_ReadData
 31472 ;; This function uses a non-reentrant model
 31473 ;;
 31474                           
 31475                           	psect	text147
 31476  005FCA                     __ptext147:
 31477                           	opt stack 0
 31478  005FCA                     _StartCondition:
 31479                           	opt stack 14
 31480                           
 31481                           ;i2c_drv.c: 95: SSP2CON2 |= (((UINT8)(1)) << ((UINT8)(0)));
 31482                           
 31483                           ;incstack = 0
 31484  005FCA  8071               	bsf	3953,0,c	;volatile
 31485  005FCC  0012               	return		;funcret
 31486  005FCE                     __end_of_StartCondition:
 31487                           	opt stack 0
 31488                           tosu	equ	0xFFF
 31489                           tosh	equ	0xFFE
 31490                           tosl	equ	0xFFD
 31491                           pclath	equ	0xFFA
 31492                           tblptru	equ	0xFF8
 31493                           tblptrh	equ	0xFF7
 31494                           tblptrl	equ	0xFF6
 31495                           tablat	equ	0xFF5
 31496                           prodh	equ	0xFF4
 31497                           prodl	equ	0xFF3
 31498                           intcon	equ	0xFF2
 31499                           intcon2	equ	0xFF1
 31500                           intcon3	equ	0xFF0
 31501                           indf0	equ	0xFEF
 31502                           postinc0	equ	0xFEE
 31503                           plusw0	equ	0xFEB
 31504                           fsr0h	equ	0xFEA
 31505                           fsr0l	equ	0xFE9
 31506                           wreg	equ	0xFE8
 31507                           indf1	equ	0xFE7
 31508                           postinc1	equ	0xFE6
 31509                           postdec1	equ	0xFE5
 31510                           plusw1	equ	0xFE3
 31511                           fsr1h	equ	0xFE2
 31512                           fsr1l	equ	0xFE1
 31513                           indf2	equ	0xFDF
 31514                           postinc2	equ	0xFDE
 31515                           postdec2	equ	0xFDD
 31516                           plusw2	equ	0xFDB
 31517                           fsr2h	equ	0xFDA
 31518                           fsr2l	equ	0xFD9
 31519                           status	equ	0xFD8
 31520                           
 31521 ;; *************** function _SetAckStatus *****************
 31522 ;; Defined at:
 31523 ;;		line 162 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 31524 ;; Parameters:    Size  Location     Type
 31525 ;;  AckSts          1    wreg     unsigned char 
 31526 ;; Auto vars:     Size  Location     Type
 31527 ;;  AckSts          1   29[BANK0 ] unsigned char 
 31528 ;; Return value:  Size  Location     Type
 31529 ;;                  1    wreg      void 
 31530 ;; Registers used:
 31531 ;;		wreg
 31532 ;; Tracked objects:
 31533 ;;		On entry : 0/0
 31534 ;;		On exit  : 0/0
 31535 ;;		Unchanged: 0/0
 31536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31537 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31538 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31540 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31541 ;;Total ram usage:        1 bytes
 31542 ;; Hardware stack levels used:    1
 31543 ;; Hardware stack levels required when called:   11
 31544 ;; This function calls:
 31545 ;;		Nothing
 31546 ;; This function is called by:
 31547 ;;		_I2c_ReadData
 31548 ;; This function uses a non-reentrant model
 31549 ;;
 31550                           
 31551                           	psect	text148
 31552  005ECC                     __ptext148:
 31553                           	opt stack 0
 31554  005ECC                     _SetAckStatus:
 31555                           	opt stack 14
 31556                           
 31557                           ;incstack = 0
 31558                           ;SetAckStatus@AckSts stored from wreg
 31559  005ECC  0100               	movlb	0	; () banked
 31560  005ECE  6F7D               	movwf	SetAckStatus@AckSts& (0+255),b
 31561                           
 31562                           ;i2c_drv.c: 165: SSP2CON2bits.ACKDT = AckSts;
 31563  005ED0  0100               	movlb	0	; () banked
 31564  005ED2  B17D               	btfsc	SetAckStatus@AckSts& (0+255),0,b
 31565  005ED4  D002               	bra	u6105
 31566  005ED6  9A71               	bcf	3953,5,c	;volatile
 31567  005ED8  D001               	bra	u6106
 31568  005EDA                     u6105:
 31569  005EDA  8A71               	bsf	3953,5,c	;volatile
 31570  005EDC                     u6106:
 31571                           
 31572                           ;i2c_drv.c: 166: SSP2CON2bits.ACKEN = ((UINT8)(1));
 31573  005EDC  8871               	bsf	3953,4,c	;volatile
 31574  005EDE  0012               	return		;funcret
 31575  005EE0                     __end_of_SetAckStatus:
 31576                           	opt stack 0
 31577                           tosu	equ	0xFFF
 31578                           tosh	equ	0xFFE
 31579                           tosl	equ	0xFFD
 31580                           pclath	equ	0xFFA
 31581                           tblptru	equ	0xFF8
 31582                           tblptrh	equ	0xFF7
 31583                           tblptrl	equ	0xFF6
 31584                           tablat	equ	0xFF5
 31585                           prodh	equ	0xFF4
 31586                           prodl	equ	0xFF3
 31587                           intcon	equ	0xFF2
 31588                           intcon2	equ	0xFF1
 31589                           intcon3	equ	0xFF0
 31590                           indf0	equ	0xFEF
 31591                           postinc0	equ	0xFEE
 31592                           plusw0	equ	0xFEB
 31593                           fsr0h	equ	0xFEA
 31594                           fsr0l	equ	0xFE9
 31595                           wreg	equ	0xFE8
 31596                           indf1	equ	0xFE7
 31597                           postinc1	equ	0xFE6
 31598                           postdec1	equ	0xFE5
 31599                           plusw1	equ	0xFE3
 31600                           fsr1h	equ	0xFE2
 31601                           fsr1l	equ	0xFE1
 31602                           indf2	equ	0xFDF
 31603                           postinc2	equ	0xFDE
 31604                           postdec2	equ	0xFDD
 31605                           plusw2	equ	0xFDB
 31606                           fsr2h	equ	0xFDA
 31607                           fsr2l	equ	0xFD9
 31608                           status	equ	0xFD8
 31609                           
 31610 ;; *************** function _ReadByte *****************
 31611 ;; Defined at:
 31612 ;;		line 204 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 31613 ;; Parameters:    Size  Location     Type
 31614 ;;		None
 31615 ;; Auto vars:     Size  Location     Type
 31616 ;;  Byte            1   29[BANK0 ] unsigned char 
 31617 ;; Return value:  Size  Location     Type
 31618 ;;                  1    wreg      unsigned char 
 31619 ;; Registers used:
 31620 ;;		wreg, status,2
 31621 ;; Tracked objects:
 31622 ;;		On entry : 0/0
 31623 ;;		On exit  : 0/0
 31624 ;;		Unchanged: 0/0
 31625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31626 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31627 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31628 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31629 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31630 ;;Total ram usage:        1 bytes
 31631 ;; Hardware stack levels used:    1
 31632 ;; Hardware stack levels required when called:   11
 31633 ;; This function calls:
 31634 ;;		Nothing
 31635 ;; This function is called by:
 31636 ;;		_I2c_ReadData
 31637 ;; This function uses a non-reentrant model
 31638 ;;
 31639                           
 31640                           	psect	text149
 31641  005F90                     __ptext149:
 31642                           	opt stack 0
 31643  005F90                     _ReadByte:
 31644                           	opt stack 14
 31645                           
 31646                           ;i2c_drv.c: 207: UINT8 Byte;
 31647                           ;i2c_drv.c: 210: Byte = SSP2BUF;
 31648                           
 31649                           ;incstack = 0
 31650  005F90  CF75 F07D          	movff	3957,ReadByte@Byte	;volatile
 31651                           
 31652                           ;i2c_drv.c: 213: return Byte;
 31653  005F94  0100               	movlb	0	; () banked
 31654  005F96  517D               	movf	ReadByte@Byte& (0+255),w,b
 31655  005F98  0012               	return	
 31656  005F9A                     __end_of_ReadByte:
 31657                           	opt stack 0
 31658                           tosu	equ	0xFFF
 31659                           tosh	equ	0xFFE
 31660                           tosl	equ	0xFFD
 31661                           pclath	equ	0xFFA
 31662                           tblptru	equ	0xFF8
 31663                           tblptrh	equ	0xFF7
 31664                           tblptrl	equ	0xFF6
 31665                           tablat	equ	0xFF5
 31666                           prodh	equ	0xFF4
 31667                           prodl	equ	0xFF3
 31668                           intcon	equ	0xFF2
 31669                           intcon2	equ	0xFF1
 31670                           intcon3	equ	0xFF0
 31671                           indf0	equ	0xFEF
 31672                           postinc0	equ	0xFEE
 31673                           plusw0	equ	0xFEB
 31674                           fsr0h	equ	0xFEA
 31675                           fsr0l	equ	0xFE9
 31676                           wreg	equ	0xFE8
 31677                           indf1	equ	0xFE7
 31678                           postinc1	equ	0xFE6
 31679                           postdec1	equ	0xFE5
 31680                           plusw1	equ	0xFE3
 31681                           fsr1h	equ	0xFE2
 31682                           fsr1l	equ	0xFE1
 31683                           indf2	equ	0xFDF
 31684                           postinc2	equ	0xFDE
 31685                           postdec2	equ	0xFDD
 31686                           plusw2	equ	0xFDB
 31687                           fsr2h	equ	0xFDA
 31688                           fsr2l	equ	0xFD9
 31689                           status	equ	0xFD8
 31690                           
 31691 ;; *************** function _GenerateEvt *****************
 31692 ;; Defined at:
 31693 ;;		line 75 in file "../../MercuryFwk/Source/c/02_Osl/os_ser.c"
 31694 ;; Parameters:    Size  Location     Type
 31695 ;;  Event           2   29[BANK0 ] PTR struct EventStructur
 31696 ;;		 -> AlarmEvent(1), I2cRxPacket(6), I2cReadDataEvt(1), I2cWriteDataEvt(1), 
 31697 ;;		 -> GetMethod(1), InitNetwork(1), MdmStsReady(1), SmsTxtReady(1), 
 31698 ;;		 -> GetSmsText(1), SmsEvent(1), RingEvent(1), SendSmsEvent(1), 
 31699 ;;		 -> NewStringMdmTerminal(1), NewMdmEvtParserRequest(1), NewStringReceived(1), MdmOnOffPulseRequest(1), 
 31700 ;;		 -> CallClosedEvent(1), IncomingCallEvent(1), NewSmsEvent(1), 
 31701 ;; Auto vars:     Size  Location     Type
 31702 ;;  EventStatus     1   31[BANK0 ] enum E7727
 31703 ;; Return value:  Size  Location     Type
 31704 ;;                  1    wreg      enum E7699
 31705 ;; Registers used:
 31706 ;;		wreg, fsr2l, fsr2h, status,2
 31707 ;; Tracked objects:
 31708 ;;		On entry : 0/0
 31709 ;;		On exit  : 0/0
 31710 ;;		Unchanged: 0/0
 31711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31712 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31713 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31715 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31716 ;;Total ram usage:        3 bytes
 31717 ;; Hardware stack levels used:    1
 31718 ;; Hardware stack levels required when called:   11
 31719 ;; This function calls:
 31720 ;;		Nothing
 31721 ;; This function is called by:
 31722 ;;		_I2c_ReadData
 31723 ;;		_CheckModem
 31724 ;;		_TurnOnModem
 31725 ;;		_ConfigureModem
 31726 ;;		_ModemEvtParser
 31727 ;;		_GetSmsSm
 31728 ;;		_Mdm_RequestSmsData
 31729 ;;		_I2cSlv_SendI2cMsg
 31730 ;;		_I2cSlv_ReceiveI2cMsg
 31731 ;;		_RiSm
 31732 ;;		_Mdm_SendSmsData
 31733 ;;		_MdmHttp_InitGprsNetwork
 31734 ;;		_MdmHttp_GetMethod
 31735 ;;		_Alarm
 31736 ;; This function uses a non-reentrant model
 31737 ;;
 31738                           
 31739                           	psect	text150
 31740  005E48                     __ptext150:
 31741                           	opt stack 0
 31742  005E48                     _GenerateEvt:
 31743                           	opt stack 13
 31744                           
 31745                           ;os_ser.c: 78: EventStatusType EventStatus = EventIdle;
 31746                           
 31747                           ; BSR set to: 0
 31748                           ;incstack = 0
 31749  005E48  0E00               	movlw	0
 31750  005E4A  0100               	movlb	0	; () banked
 31751  005E4C  6F7F               	movwf	GenerateEvt@EventStatus& (0+255),b
 31752                           
 31753                           ; BSR set to: 0
 31754                           ;os_ser.c: 81: Event->EventStatus = EventSent;
 31755  005E4E  C07D  FFD9         	movff	GenerateEvt@Event,fsr2l
 31756  005E52  C07E  FFDA         	movff	GenerateEvt@Event+1,fsr2h
 31757  005E56  0E02               	movlw	2
 31758  005E58  6EDF               	movwf	indf2,c
 31759                           
 31760                           ; BSR set to: 0
 31761                           ;os_ser.c: 83: EventStatus = EventSent;
 31762  005E5A  0E02               	movlw	2
 31763  005E5C  6F7F               	movwf	GenerateEvt@EventStatus& (0+255),b
 31764  005E5E  0012               	return	
 31765  005E60                     __end_of_GenerateEvt:
 31766                           	opt stack 0
 31767                           tosu	equ	0xFFF
 31768                           tosh	equ	0xFFE
 31769                           tosl	equ	0xFFD
 31770                           pclath	equ	0xFFA
 31771                           tblptru	equ	0xFF8
 31772                           tblptrh	equ	0xFF7
 31773                           tblptrl	equ	0xFF6
 31774                           tablat	equ	0xFF5
 31775                           prodh	equ	0xFF4
 31776                           prodl	equ	0xFF3
 31777                           intcon	equ	0xFF2
 31778                           intcon2	equ	0xFF1
 31779                           intcon3	equ	0xFF0
 31780                           indf0	equ	0xFEF
 31781                           postinc0	equ	0xFEE
 31782                           plusw0	equ	0xFEB
 31783                           fsr0h	equ	0xFEA
 31784                           fsr0l	equ	0xFE9
 31785                           wreg	equ	0xFE8
 31786                           indf1	equ	0xFE7
 31787                           postinc1	equ	0xFE6
 31788                           postdec1	equ	0xFE5
 31789                           plusw1	equ	0xFE3
 31790                           fsr1h	equ	0xFE2
 31791                           fsr1l	equ	0xFE1
 31792                           indf2	equ	0xFDF
 31793                           postinc2	equ	0xFDE
 31794                           postdec2	equ	0xFDD
 31795                           plusw2	equ	0xFDB
 31796                           fsr2h	equ	0xFDA
 31797                           fsr2l	equ	0xFD9
 31798                           status	equ	0xFD8
 31799                           
 31800 ;; *************** function _EnableReceiver *****************
 31801 ;; Defined at:
 31802 ;;		line 177 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 31803 ;; Parameters:    Size  Location     Type
 31804 ;;		None
 31805 ;; Auto vars:     Size  Location     Type
 31806 ;;		None
 31807 ;; Return value:  Size  Location     Type
 31808 ;;                  1    wreg      void 
 31809 ;; Registers used:
 31810 ;;		status,2, status,0
 31811 ;; Tracked objects:
 31812 ;;		On entry : 0/0
 31813 ;;		On exit  : 0/0
 31814 ;;		Unchanged: 0/0
 31815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31816 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31817 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31818 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31819 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31820 ;;Total ram usage:        0 bytes
 31821 ;; Hardware stack levels used:    1
 31822 ;; Hardware stack levels required when called:   11
 31823 ;; This function calls:
 31824 ;;		Nothing
 31825 ;; This function is called by:
 31826 ;;		_I2c_ReadData
 31827 ;; This function uses a non-reentrant model
 31828 ;;
 31829                           
 31830                           	psect	text151
 31831  005FCE                     __ptext151:
 31832                           	opt stack 0
 31833  005FCE                     _EnableReceiver:
 31834                           	opt stack 14
 31835                           
 31836                           ;i2c_drv.c: 179: SSP2CON2 |= ((((UINT8)(1)) << ((UINT8)(3))) & ((UINT8)(0x08)));
 31837                           
 31838                           ; BSR set to: 0
 31839                           ;incstack = 0
 31840  005FCE  8671               	bsf	3953,3,c	;volatile
 31841  005FD0  0012               	return		;funcret
 31842  005FD2                     __end_of_EnableReceiver:
 31843                           	opt stack 0
 31844                           tosu	equ	0xFFF
 31845                           tosh	equ	0xFFE
 31846                           tosl	equ	0xFFD
 31847                           pclath	equ	0xFFA
 31848                           tblptru	equ	0xFF8
 31849                           tblptrh	equ	0xFF7
 31850                           tblptrl	equ	0xFF6
 31851                           tablat	equ	0xFF5
 31852                           prodh	equ	0xFF4
 31853                           prodl	equ	0xFF3
 31854                           intcon	equ	0xFF2
 31855                           intcon2	equ	0xFF1
 31856                           intcon3	equ	0xFF0
 31857                           indf0	equ	0xFEF
 31858                           postinc0	equ	0xFEE
 31859                           plusw0	equ	0xFEB
 31860                           fsr0h	equ	0xFEA
 31861                           fsr0l	equ	0xFE9
 31862                           wreg	equ	0xFE8
 31863                           indf1	equ	0xFE7
 31864                           postinc1	equ	0xFE6
 31865                           postdec1	equ	0xFE5
 31866                           plusw1	equ	0xFE3
 31867                           fsr1h	equ	0xFE2
 31868                           fsr1l	equ	0xFE1
 31869                           indf2	equ	0xFDF
 31870                           postinc2	equ	0xFDE
 31871                           postdec2	equ	0xFDD
 31872                           plusw2	equ	0xFDB
 31873                           fsr2h	equ	0xFDA
 31874                           fsr2l	equ	0xFD9
 31875                           status	equ	0xFD8
 31876                           
 31877 ;; *************** function _CheckTxStatus *****************
 31878 ;; Defined at:
 31879 ;;		line 148 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 31880 ;; Parameters:    Size  Location     Type
 31881 ;;		None
 31882 ;; Auto vars:     Size  Location     Type
 31883 ;;		None
 31884 ;; Return value:  Size  Location     Type
 31885 ;;                  1    wreg      unsigned char 
 31886 ;; Registers used:
 31887 ;;		wreg, status,2, status,0
 31888 ;; Tracked objects:
 31889 ;;		On entry : 0/0
 31890 ;;		On exit  : 0/0
 31891 ;;		Unchanged: 0/0
 31892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31893 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31894 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31895 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31896 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31897 ;;Total ram usage:        0 bytes
 31898 ;; Hardware stack levels used:    1
 31899 ;; Hardware stack levels required when called:   11
 31900 ;; This function calls:
 31901 ;;		Nothing
 31902 ;; This function is called by:
 31903 ;;		_I2c_WriteData
 31904 ;;		_I2c_ReadData
 31905 ;; This function uses a non-reentrant model
 31906 ;;
 31907                           
 31908                           	psect	text152
 31909  005F9A                     __ptext152:
 31910                           	opt stack 0
 31911  005F9A                     _CheckTxStatus:
 31912                           	opt stack 14
 31913                           
 31914                           ;i2c_drv.c: 151: return ((SSP2STAT & ((UINT8)(0x04))) >> ((UINT8)(2)));
 31915                           
 31916                           ;incstack = 0
 31917  005F9A  4073               	rrncf	3955,w,c	;volatile
 31918  005F9C  42E8               	rrncf	wreg,f,c
 31919  005F9E  0B3F               	andlw	63
 31920  005FA0  0B01               	andlw	1
 31921  005FA2  0012               	return	
 31922  005FA4                     __end_of_CheckTxStatus:
 31923                           	opt stack 0
 31924                           tosu	equ	0xFFF
 31925                           tosh	equ	0xFFE
 31926                           tosl	equ	0xFFD
 31927                           pclath	equ	0xFFA
 31928                           tblptru	equ	0xFF8
 31929                           tblptrh	equ	0xFF7
 31930                           tblptrl	equ	0xFF6
 31931                           tablat	equ	0xFF5
 31932                           prodh	equ	0xFF4
 31933                           prodl	equ	0xFF3
 31934                           intcon	equ	0xFF2
 31935                           intcon2	equ	0xFF1
 31936                           intcon3	equ	0xFF0
 31937                           indf0	equ	0xFEF
 31938                           postinc0	equ	0xFEE
 31939                           plusw0	equ	0xFEB
 31940                           fsr0h	equ	0xFEA
 31941                           fsr0l	equ	0xFE9
 31942                           wreg	equ	0xFE8
 31943                           indf1	equ	0xFE7
 31944                           postinc1	equ	0xFE6
 31945                           postdec1	equ	0xFE5
 31946                           plusw1	equ	0xFE3
 31947                           fsr1h	equ	0xFE2
 31948                           fsr1l	equ	0xFE1
 31949                           indf2	equ	0xFDF
 31950                           postinc2	equ	0xFDE
 31951                           postdec2	equ	0xFDD
 31952                           plusw2	equ	0xFDB
 31953                           fsr2h	equ	0xFDA
 31954                           fsr2l	equ	0xFD9
 31955                           status	equ	0xFD8
 31956                           
 31957 ;; *************** function _CheckAckStatus *****************
 31958 ;; Defined at:
 31959 ;;		line 134 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 31960 ;; Parameters:    Size  Location     Type
 31961 ;;		None
 31962 ;; Auto vars:     Size  Location     Type
 31963 ;;		None
 31964 ;; Return value:  Size  Location     Type
 31965 ;;                  1    wreg      unsigned char 
 31966 ;; Registers used:
 31967 ;;		wreg, status,2, status,0
 31968 ;; Tracked objects:
 31969 ;;		On entry : 0/0
 31970 ;;		On exit  : 0/0
 31971 ;;		Unchanged: 0/0
 31972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31973 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31974 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31975 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31976 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31977 ;;Total ram usage:        0 bytes
 31978 ;; Hardware stack levels used:    1
 31979 ;; Hardware stack levels required when called:   11
 31980 ;; This function calls:
 31981 ;;		Nothing
 31982 ;; This function is called by:
 31983 ;;		_I2c_WriteData
 31984 ;;		_I2c_ReadData
 31985 ;; This function uses a non-reentrant model
 31986 ;;
 31987                           
 31988                           	psect	text153
 31989  005FA4                     __ptext153:
 31990                           	opt stack 0
 31991  005FA4                     _CheckAckStatus:
 31992                           	opt stack 14
 31993                           
 31994                           ;i2c_drv.c: 137: return ((SSP2CON2 & ((UINT8)(0x40))) >> ((UINT8)(6)));
 31995                           
 31996                           ;incstack = 0
 31997  005FA4  4471               	rlncf	3953,w,c	;volatile
 31998  005FA6  46E8               	rlncf	wreg,f,c
 31999  005FA8  0B03               	andlw	3
 32000  005FAA  0B01               	andlw	1
 32001  005FAC  0012               	return	
 32002  005FAE                     __end_of_CheckAckStatus:
 32003                           	opt stack 0
 32004                           tosu	equ	0xFFF
 32005                           tosh	equ	0xFFE
 32006                           tosl	equ	0xFFD
 32007                           pclath	equ	0xFFA
 32008                           tblptru	equ	0xFF8
 32009                           tblptrh	equ	0xFF7
 32010                           tblptrl	equ	0xFF6
 32011                           tablat	equ	0xFF5
 32012                           prodh	equ	0xFF4
 32013                           prodl	equ	0xFF3
 32014                           intcon	equ	0xFF2
 32015                           intcon2	equ	0xFF1
 32016                           intcon3	equ	0xFF0
 32017                           indf0	equ	0xFEF
 32018                           postinc0	equ	0xFEE
 32019                           plusw0	equ	0xFEB
 32020                           fsr0h	equ	0xFEA
 32021                           fsr0l	equ	0xFE9
 32022                           wreg	equ	0xFE8
 32023                           indf1	equ	0xFE7
 32024                           postinc1	equ	0xFE6
 32025                           postdec1	equ	0xFE5
 32026                           plusw1	equ	0xFE3
 32027                           fsr1h	equ	0xFE2
 32028                           fsr1l	equ	0xFE1
 32029                           indf2	equ	0xFDF
 32030                           postinc2	equ	0xFDE
 32031                           postdec2	equ	0xFDD
 32032                           plusw2	equ	0xFDB
 32033                           fsr2h	equ	0xFDA
 32034                           fsr2l	equ	0xFD9
 32035                           status	equ	0xFD8
 32036                           
 32037 ;; *************** function _LowPriorityIsr *****************
 32038 ;; Defined at:
 32039 ;;		line 236 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/irq.c"
 32040 ;; Parameters:    Size  Location     Type
 32041 ;;		None
 32042 ;; Auto vars:     Size  Location     Type
 32043 ;;		None
 32044 ;; Return value:  Size  Location     Type
 32045 ;;                  1    wreg      void 
 32046 ;; Registers used:
 32047 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 32048 ;; Tracked objects:
 32049 ;;		On entry : 0/0
 32050 ;;		On exit  : 0/0
 32051 ;;		Unchanged: 0/0
 32052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32053 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32054 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32055 ;;      Temps:          0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32056 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32057 ;;Total ram usage:       21 bytes
 32058 ;; Hardware stack levels used:    1
 32059 ;; Hardware stack levels required when called:   10
 32060 ;; This function calls:
 32061 ;;		_Tmr_Tmr2Isr
 32062 ;; This function is called by:
 32063 ;;		Interrupt level 1
 32064 ;; This function uses a non-reentrant model
 32065 ;;
 32066                           
 32067                           	psect	intcodelo
 32068  000018                     __pintcodelo:
 32069                           	opt stack 0
 32070  000018                     _LowPriorityIsr:
 32071                           	opt stack 8
 32072                           
 32073                           ;incstack = 0
 32074  000018  8042               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 32075  00001A  CFD8 F068          	movff	status,??_LowPriorityIsr
 32076  00001E  CFE8 F069          	movff	wreg,??_LowPriorityIsr+1
 32077  000022  CFE0 F06A          	movff	bsr,??_LowPriorityIsr+2
 32078  000026  CFFA F06B          	movff	pclath,??_LowPriorityIsr+3
 32079  00002A  CFFB F06C          	movff	pclatu,??_LowPriorityIsr+4
 32080  00002E  CFE9 F06D          	movff	fsr0l,??_LowPriorityIsr+5
 32081  000032  CFEA F06E          	movff	fsr0h,??_LowPriorityIsr+6
 32082  000036  CFE1 F06F          	movff	fsr1l,??_LowPriorityIsr+7
 32083  00003A  CFE2 F070          	movff	fsr1h,??_LowPriorityIsr+8
 32084  00003E  CFD9 F071          	movff	fsr2l,??_LowPriorityIsr+9
 32085  000042  CFDA F072          	movff	fsr2h,??_LowPriorityIsr+10
 32086  000046  CFF3 F073          	movff	prodl,??_LowPriorityIsr+11
 32087  00004A  CFF4 F074          	movff	prodh,??_LowPriorityIsr+12
 32088  00004E  CFF6 F075          	movff	tblptrl,??_LowPriorityIsr+13
 32089  000052  CFF7 F076          	movff	tblptrh,??_LowPriorityIsr+14
 32090  000056  CFF8 F077          	movff	tblptru,??_LowPriorityIsr+15
 32091  00005A  CFF5 F078          	movff	tablat,??_LowPriorityIsr+16
 32092  00005E  C042  F079         	movff	btemp,??_LowPriorityIsr+17
 32093  000062  C043  F07A         	movff	btemp+1,??_LowPriorityIsr+18
 32094  000066  C044  F07B         	movff	btemp+2,??_LowPriorityIsr+19
 32095  00006A  C045  F07C         	movff	btemp+3,??_LowPriorityIsr+20
 32096                           
 32097                           ;irq.c: 258: if (PIR1bits.TMR2IF == ((UINT8)(1)))
 32098  00006E  B29E               	btfsc	3998,1,c	;volatile
 32099                           
 32100                           ;irq.c: 259: {
 32101                           ;irq.c: 261: Tmr_Tmr2Isr();
 32102  000070  EC20  F02E         	call	_Tmr_Tmr2Isr	;wreg free
 32103  000074  C07C  F045         	movff	??_LowPriorityIsr+20,btemp+3
 32104  000078  C07B  F044         	movff	??_LowPriorityIsr+19,btemp+2
 32105  00007C  C07A  F043         	movff	??_LowPriorityIsr+18,btemp+1
 32106  000080  C079  F042         	movff	??_LowPriorityIsr+17,btemp
 32107  000084  C078  FFF5         	movff	??_LowPriorityIsr+16,tablat
 32108  000088  C077  FFF8         	movff	??_LowPriorityIsr+15,tblptru
 32109  00008C  C076  FFF7         	movff	??_LowPriorityIsr+14,tblptrh
 32110  000090  C075  FFF6         	movff	??_LowPriorityIsr+13,tblptrl
 32111  000094  C074  FFF4         	movff	??_LowPriorityIsr+12,prodh
 32112  000098  C073  FFF3         	movff	??_LowPriorityIsr+11,prodl
 32113  00009C  C072  FFDA         	movff	??_LowPriorityIsr+10,fsr2h
 32114  0000A0  C071  FFD9         	movff	??_LowPriorityIsr+9,fsr2l
 32115  0000A4  C070  FFE2         	movff	??_LowPriorityIsr+8,fsr1h
 32116  0000A8  C06F  FFE1         	movff	??_LowPriorityIsr+7,fsr1l
 32117  0000AC  C06E  FFEA         	movff	??_LowPriorityIsr+6,fsr0h
 32118  0000B0  C06D  FFE9         	movff	??_LowPriorityIsr+5,fsr0l
 32119  0000B4  C06C  FFFB         	movff	??_LowPriorityIsr+4,pclatu
 32120  0000B8  C06B  FFFA         	movff	??_LowPriorityIsr+3,pclath
 32121  0000BC  C06A  FFE0         	movff	??_LowPriorityIsr+2,bsr
 32122  0000C0  C069  FFE8         	movff	??_LowPriorityIsr+1,wreg
 32123  0000C4  C068  FFD8         	movff	??_LowPriorityIsr,status
 32124  0000C8  9042               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 32125  0000CA  0010               	retfie	
 32126  0000CC                     __end_of_LowPriorityIsr:
 32127                           	opt stack 0
 32128                           tosu	equ	0xFFF
 32129                           tosh	equ	0xFFE
 32130                           tosl	equ	0xFFD
 32131                           pclatu	equ	0xFFB
 32132                           pclath	equ	0xFFA
 32133                           tblptru	equ	0xFF8
 32134                           tblptrh	equ	0xFF7
 32135                           tblptrl	equ	0xFF6
 32136                           tablat	equ	0xFF5
 32137                           prodh	equ	0xFF4
 32138                           prodl	equ	0xFF3
 32139                           intcon	equ	0xFF2
 32140                           intcon2	equ	0xFF1
 32141                           intcon3	equ	0xFF0
 32142                           indf0	equ	0xFEF
 32143                           postinc0	equ	0xFEE
 32144                           plusw0	equ	0xFEB
 32145                           fsr0h	equ	0xFEA
 32146                           fsr0l	equ	0xFE9
 32147                           wreg	equ	0xFE8
 32148                           indf1	equ	0xFE7
 32149                           postinc1	equ	0xFE6
 32150                           postdec1	equ	0xFE5
 32151                           plusw1	equ	0xFE3
 32152                           fsr1h	equ	0xFE2
 32153                           fsr1l	equ	0xFE1
 32154                           bsr	equ	0xFE0
 32155                           indf2	equ	0xFDF
 32156                           postinc2	equ	0xFDE
 32157                           postdec2	equ	0xFDD
 32158                           plusw2	equ	0xFDB
 32159                           fsr2h	equ	0xFDA
 32160                           fsr2l	equ	0xFD9
 32161                           status	equ	0xFD8
 32162                           
 32163 ;; *************** function _Tmr_Tmr2Isr *****************
 32164 ;; Defined at:
 32165 ;;		line 308 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
 32166 ;; Parameters:    Size  Location     Type
 32167 ;;		None
 32168 ;; Auto vars:     Size  Location     Type
 32169 ;;		None
 32170 ;; Return value:  Size  Location     Type
 32171 ;;                  1    wreg      void 
 32172 ;; Registers used:
 32173 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 32174 ;; Tracked objects:
 32175 ;;		On entry : 0/0
 32176 ;;		On exit  : 0/0
 32177 ;;		Unchanged: 0/0
 32178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32179 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32180 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32182 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32183 ;;Total ram usage:        0 bytes
 32184 ;; Hardware stack levels used:    1
 32185 ;; Hardware stack levels required when called:    9
 32186 ;; This function calls:
 32187 ;;		Absolute function
 32188 ;;		_Sch_SchmIntService
 32189 ;; This function is called by:
 32190 ;;		_LowPriorityIsr
 32191 ;; This function uses a non-reentrant model
 32192 ;;
 32193                           
 32194                           	psect	text155
 32195  005C40                     __ptext155:
 32196                           	opt stack 0
 32197  005C40                     _Tmr_Tmr2Isr:
 32198                           	opt stack 8
 32199                           
 32200                           ;tmr_drv.c: 311: PIR1bits.TMR2IF = 0u;
 32201                           
 32202                           ;incstack = 0
 32203  005C40  929E               	bcf	3998,1,c	;volatile
 32204                           
 32205                           ;tmr_drv.c: 314: if (Tmr2IsrCallback != (0))
 32206  005C42  0102               	movlb	2	; () banked
 32207  005C44  51EA               	movf	_Tmr2IsrCallback& (0+255),w,b
 32208  005C46  11EB               	iorwf	(_Tmr2IsrCallback+1)& (0+255),w,b
 32209  005C48  B4D8               	btfsc	status,2,c
 32210  005C4A  0012               	return	
 32211                           
 32212                           ; BSR set to: 2
 32213                           ;tmr_drv.c: 315: {
 32214                           ;tmr_drv.c: 317: Tmr2IsrCallback();
 32215  005C4C  D801               	call	i1u1355_28
 32216  005C4E  0012               	return	
 32217  005C50                     i1u1355_28:
 32218  005C50  0005               	push	
 32219  005C52  6EFA               	movwf	pclath,c
 32220  005C54  51EA               	movf	_Tmr2IsrCallback& (0+255),w,b
 32221  005C56  6EFD               	movwf	tosl,c
 32222  005C58  51EB               	movf	(_Tmr2IsrCallback+1)& (0+255),w,b
 32223  005C5A  6EFE               	movwf	tosh,c
 32224  005C5C  50F8               	movf	tblptru,w,c
 32225  005C5E  6EFF               	movwf	tosu,c
 32226  005C60  50FA               	movf	pclath,w,c
 32227  005C62  0012               	return		;indir
 32228  005C64                     __end_of_Tmr_Tmr2Isr:
 32229                           	opt stack 0
 32230                           tosu	equ	0xFFF
 32231                           tosh	equ	0xFFE
 32232                           tosl	equ	0xFFD
 32233                           pclatu	equ	0xFFB
 32234                           pclath	equ	0xFFA
 32235                           tblptru	equ	0xFF8
 32236                           tblptrh	equ	0xFF7
 32237                           tblptrl	equ	0xFF6
 32238                           tablat	equ	0xFF5
 32239                           prodh	equ	0xFF4
 32240                           prodl	equ	0xFF3
 32241                           intcon	equ	0xFF2
 32242                           intcon2	equ	0xFF1
 32243                           intcon3	equ	0xFF0
 32244                           indf0	equ	0xFEF
 32245                           postinc0	equ	0xFEE
 32246                           plusw0	equ	0xFEB
 32247                           fsr0h	equ	0xFEA
 32248                           fsr0l	equ	0xFE9
 32249                           wreg	equ	0xFE8
 32250                           indf1	equ	0xFE7
 32251                           postinc1	equ	0xFE6
 32252                           postdec1	equ	0xFE5
 32253                           plusw1	equ	0xFE3
 32254                           fsr1h	equ	0xFE2
 32255                           fsr1l	equ	0xFE1
 32256                           bsr	equ	0xFE0
 32257                           indf2	equ	0xFDF
 32258                           postinc2	equ	0xFDE
 32259                           postdec2	equ	0xFDD
 32260                           plusw2	equ	0xFDB
 32261                           fsr2h	equ	0xFDA
 32262                           fsr2l	equ	0xFD9
 32263                           status	equ	0xFD8
 32264                           
 32265 ;; *************** function _Sch_SchmIntService *****************
 32266 ;; Defined at:
 32267 ;;		line 214 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
 32268 ;; Parameters:    Size  Location     Type
 32269 ;;		None
 32270 ;; Auto vars:     Size  Location     Type
 32271 ;;		None
 32272 ;; Return value:  Size  Location     Type
 32273 ;;                  1    wreg      void 
 32274 ;; Registers used:
 32275 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 32276 ;; Tracked objects:
 32277 ;;		On entry : 0/0
 32278 ;;		On exit  : 0/0
 32279 ;;		Unchanged: 0/0
 32280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32281 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32282 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32283 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32284 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32285 ;;Total ram usage:        0 bytes
 32286 ;; Hardware stack levels used:    1
 32287 ;; Hardware stack levels required when called:    8
 32288 ;; This function calls:
 32289 ;;		_OsAlrm_ProcessOsAlarms
 32290 ;;		_UpdateOsCounters
 32291 ;;		_UpdateSchFlag
 32292 ;; This function is called by:
 32293 ;;		_SystemInit
 32294 ;;		_Tmr_Tmr2Isr
 32295 ;; This function uses a non-reentrant model
 32296 ;;
 32297                           
 32298                           	psect	text156
 32299  005F54                     __ptext156:
 32300                           	opt stack 0
 32301  005F54                     _Sch_SchmIntService:
 32302                           	opt stack 8
 32303                           
 32304                           ;os_sched.c: 217: UpdateSchFlag();
 32305                           
 32306                           ;incstack = 0
 32307  005F54  ECD6  F02E         	call	_UpdateSchFlag	;wreg free
 32308                           
 32309                           ;os_sched.c: 219: UpdateOsCounters();
 32310  005F58  EC9A  F02F         	call	_UpdateOsCounters	;wreg free
 32311                           
 32312                           ;os_sched.c: 221: OsAlrm_ProcessOsAlarms();
 32313  005F5C  ECAA  F010         	call	_OsAlrm_ProcessOsAlarms	;wreg free
 32314  005F60  0012               	return		;funcret
 32315  005F62                     __end_of_Sch_SchmIntService:
 32316                           	opt stack 0
 32317                           tosu	equ	0xFFF
 32318                           tosh	equ	0xFFE
 32319                           tosl	equ	0xFFD
 32320                           pclatu	equ	0xFFB
 32321                           pclath	equ	0xFFA
 32322                           tblptru	equ	0xFF8
 32323                           tblptrh	equ	0xFF7
 32324                           tblptrl	equ	0xFF6
 32325                           tablat	equ	0xFF5
 32326                           prodh	equ	0xFF4
 32327                           prodl	equ	0xFF3
 32328                           intcon	equ	0xFF2
 32329                           intcon2	equ	0xFF1
 32330                           intcon3	equ	0xFF0
 32331                           indf0	equ	0xFEF
 32332                           postinc0	equ	0xFEE
 32333                           plusw0	equ	0xFEB
 32334                           fsr0h	equ	0xFEA
 32335                           fsr0l	equ	0xFE9
 32336                           wreg	equ	0xFE8
 32337                           indf1	equ	0xFE7
 32338                           postinc1	equ	0xFE6
 32339                           postdec1	equ	0xFE5
 32340                           plusw1	equ	0xFE3
 32341                           fsr1h	equ	0xFE2
 32342                           fsr1l	equ	0xFE1
 32343                           bsr	equ	0xFE0
 32344                           indf2	equ	0xFDF
 32345                           postinc2	equ	0xFDE
 32346                           postdec2	equ	0xFDD
 32347                           plusw2	equ	0xFDB
 32348                           fsr2h	equ	0xFDA
 32349                           fsr2l	equ	0xFD9
 32350                           status	equ	0xFD8
 32351                           
 32352 ;; *************** function _UpdateSchFlag *****************
 32353 ;; Defined at:
 32354 ;;		line 132 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
 32355 ;; Parameters:    Size  Location     Type
 32356 ;;		None
 32357 ;; Auto vars:     Size  Location     Type
 32358 ;;		None
 32359 ;; Return value:  Size  Location     Type
 32360 ;;                  1    wreg      void 
 32361 ;; Registers used:
 32362 ;;		wreg, status,2, status,0
 32363 ;; Tracked objects:
 32364 ;;		On entry : 0/0
 32365 ;;		On exit  : 0/0
 32366 ;;		Unchanged: 0/0
 32367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32368 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32369 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32370 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32371 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32372 ;;Total ram usage:        0 bytes
 32373 ;; Hardware stack levels used:    1
 32374 ;; Hardware stack levels required when called:    4
 32375 ;; This function calls:
 32376 ;;		Nothing
 32377 ;; This function is called by:
 32378 ;;		_Sch_SchmIntService
 32379 ;; This function uses a non-reentrant model
 32380 ;;
 32381                           
 32382                           	psect	text157
 32383  005DAC                     __ptext157:
 32384                           	opt stack 0
 32385  005DAC                     _UpdateSchFlag:
 32386                           	opt stack 11
 32387                           
 32388                           ;os_sched.c: 135: static UINT16 InterruptCounter = 0;
 32389                           ;os_sched.c: 138: InterruptCounter++;
 32390                           
 32391                           ;incstack = 0
 32392  005DAC  0102               	movlb	2	; () banked
 32393  005DAE  4BDC               	infsnz	UpdateSchFlag@InterruptCounter& (0+255),f,b
 32394  005DB0  2BDD               	incf	(UpdateSchFlag@InterruptCounter+1)& (0+255),f,b
 32395                           
 32396                           ; BSR set to: 2
 32397                           ;os_sched.c: 140: if (InterruptCounter >= ((((UINT16)(1000))*((UINT16)(1)))/1000))
 32398  005DB2  51DC               	movf	UpdateSchFlag@InterruptCounter& (0+255),w,b
 32399  005DB4  11DD               	iorwf	(UpdateSchFlag@InterruptCounter+1)& (0+255),w,b
 32400  005DB6  B4D8               	btfsc	status,2,c
 32401  005DB8  0012               	return	
 32402                           
 32403                           ; BSR set to: 2
 32404                           ;os_sched.c: 141: {
 32405                           ;os_sched.c: 143: InterruptCounter = 0;
 32406  005DBA  0E00               	movlw	0
 32407  005DBC  6FDD               	movwf	(UpdateSchFlag@InterruptCounter+1)& (0+255),b
 32408  005DBE  0E00               	movlw	0
 32409  005DC0  6FDC               	movwf	UpdateSchFlag@InterruptCounter& (0+255),b
 32410                           
 32411                           ;os_sched.c: 145: MainSystemTimebaseFlag = CallTaskPhase;
 32412  005DC2  0E00               	movlw	0
 32413  005DC4  6FF4               	movwf	_MainSystemTimebaseFlag& (0+255),b
 32414  005DC6  0012               	return	
 32415  005DC8                     __end_of_UpdateSchFlag:
 32416                           	opt stack 0
 32417                           tosu	equ	0xFFF
 32418                           tosh	equ	0xFFE
 32419                           tosl	equ	0xFFD
 32420                           pclatu	equ	0xFFB
 32421                           pclath	equ	0xFFA
 32422                           tblptru	equ	0xFF8
 32423                           tblptrh	equ	0xFF7
 32424                           tblptrl	equ	0xFF6
 32425                           tablat	equ	0xFF5
 32426                           prodh	equ	0xFF4
 32427                           prodl	equ	0xFF3
 32428                           intcon	equ	0xFF2
 32429                           intcon2	equ	0xFF1
 32430                           intcon3	equ	0xFF0
 32431                           indf0	equ	0xFEF
 32432                           postinc0	equ	0xFEE
 32433                           plusw0	equ	0xFEB
 32434                           fsr0h	equ	0xFEA
 32435                           fsr0l	equ	0xFE9
 32436                           wreg	equ	0xFE8
 32437                           indf1	equ	0xFE7
 32438                           postinc1	equ	0xFE6
 32439                           postdec1	equ	0xFE5
 32440                           plusw1	equ	0xFE3
 32441                           fsr1h	equ	0xFE2
 32442                           fsr1l	equ	0xFE1
 32443                           bsr	equ	0xFE0
 32444                           indf2	equ	0xFDF
 32445                           postinc2	equ	0xFDE
 32446                           postdec2	equ	0xFDD
 32447                           plusw2	equ	0xFDB
 32448                           fsr2h	equ	0xFDA
 32449                           fsr2l	equ	0xFD9
 32450                           status	equ	0xFD8
 32451                           
 32452 ;; *************** function _UpdateOsCounters *****************
 32453 ;; Defined at:
 32454 ;;		line 157 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
 32455 ;; Parameters:    Size  Location     Type
 32456 ;;		None
 32457 ;; Auto vars:     Size  Location     Type
 32458 ;;		None
 32459 ;; Return value:  Size  Location     Type
 32460 ;;                  1    wreg      void 
 32461 ;; Registers used:
 32462 ;;		wreg, status,2, status,0
 32463 ;; Tracked objects:
 32464 ;;		On entry : 0/0
 32465 ;;		On exit  : 0/0
 32466 ;;		Unchanged: 0/0
 32467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32468 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32469 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32471 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32472 ;;Total ram usage:        0 bytes
 32473 ;; Hardware stack levels used:    1
 32474 ;; Hardware stack levels required when called:    4
 32475 ;; This function calls:
 32476 ;;		Nothing
 32477 ;; This function is called by:
 32478 ;;		_Sch_SchmIntService
 32479 ;; This function uses a non-reentrant model
 32480 ;;
 32481                           
 32482                           	psect	text158
 32483  005F34                     __ptext158:
 32484                           	opt stack 0
 32485  005F34                     _UpdateOsCounters:
 32486                           	opt stack 11
 32487                           
 32488                           ;os_sched.c: 160: OsTmr_OsTickCounter++;
 32489                           
 32490                           ; BSR set to: 2
 32491                           ;incstack = 0
 32492  005F34  0E01               	movlw	1
 32493  005F36  0103               	movlb	3	; () banked
 32494  005F38  271C               	addwf	_OsTmr_OsTickCounter& (0+255),f,b
 32495  005F3A  0E00               	movlw	0
 32496  005F3C  231D               	addwfc	(_OsTmr_OsTickCounter+1)& (0+255),f,b
 32497  005F3E  231E               	addwfc	(_OsTmr_OsTickCounter+2)& (0+255),f,b
 32498  005F40  231F               	addwfc	(_OsTmr_OsTickCounter+3)& (0+255),f,b
 32499                           
 32500                           ; BSR set to: 3
 32501  005F42  0012               	return		;funcret
 32502  005F44                     __end_of_UpdateOsCounters:
 32503                           	opt stack 0
 32504                           tosu	equ	0xFFF
 32505                           tosh	equ	0xFFE
 32506                           tosl	equ	0xFFD
 32507                           pclatu	equ	0xFFB
 32508                           pclath	equ	0xFFA
 32509                           tblptru	equ	0xFF8
 32510                           tblptrh	equ	0xFF7
 32511                           tblptrl	equ	0xFF6
 32512                           tablat	equ	0xFF5
 32513                           prodh	equ	0xFF4
 32514                           prodl	equ	0xFF3
 32515                           intcon	equ	0xFF2
 32516                           intcon2	equ	0xFF1
 32517                           intcon3	equ	0xFF0
 32518                           indf0	equ	0xFEF
 32519                           postinc0	equ	0xFEE
 32520                           plusw0	equ	0xFEB
 32521                           fsr0h	equ	0xFEA
 32522                           fsr0l	equ	0xFE9
 32523                           wreg	equ	0xFE8
 32524                           indf1	equ	0xFE7
 32525                           postinc1	equ	0xFE6
 32526                           postdec1	equ	0xFE5
 32527                           plusw1	equ	0xFE3
 32528                           fsr1h	equ	0xFE2
 32529                           fsr1l	equ	0xFE1
 32530                           bsr	equ	0xFE0
 32531                           indf2	equ	0xFDF
 32532                           postinc2	equ	0xFDE
 32533                           postdec2	equ	0xFDD
 32534                           plusw2	equ	0xFDB
 32535                           fsr2h	equ	0xFDA
 32536                           fsr2l	equ	0xFD9
 32537                           status	equ	0xFD8
 32538                           
 32539 ;; *************** function _OsAlrm_ProcessOsAlarms *****************
 32540 ;; Defined at:
 32541 ;;		line 115 in file "../../MercuryFwk/Source/c/02_Osl/os_alarms.c"
 32542 ;; Parameters:    Size  Location     Type
 32543 ;;		None
 32544 ;; Auto vars:     Size  Location     Type
 32545 ;;  AlarmIndex      2   32[COMRAM] unsigned short 
 32546 ;; Return value:  Size  Location     Type
 32547 ;;                  1    wreg      void 
 32548 ;; Registers used:
 32549 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 32550 ;; Tracked objects:
 32551 ;;		On entry : 0/0
 32552 ;;		On exit  : 0/0
 32553 ;;		Unchanged: 0/0
 32554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32555 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32556 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32557 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32558 ;;      Totals:         2       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32559 ;;Total ram usage:       10 bytes
 32560 ;; Hardware stack levels used:    1
 32561 ;; Hardware stack levels required when called:    7
 32562 ;; This function calls:
 32563 ;;		_I2cDummyTx
 32564 ;;		_OsAlrm_ClearOsAlarm
 32565 ;;		i1___wmul
 32566 ;; This function is called by:
 32567 ;;		_Sch_SchmIntService
 32568 ;; This function uses a non-reentrant model
 32569 ;;
 32570                           
 32571                           	psect	text159
 32572  002154                     __ptext159:
 32573                           	opt stack 0
 32574  002154                     _OsAlrm_ProcessOsAlarms:
 32575                           	opt stack 8
 32576                           
 32577                           ;os_alarms.c: 117: UINT16 AlarmIndex;
 32578                           ;os_alarms.c: 120: for (AlarmIndex = 0; AlarmIndex < ((UINT8)(20)); AlarmIndex++)
 32579                           
 32580                           ; BSR set to: 3
 32581                           ;incstack = 0
 32582  002154  0E00               	movlw	0
 32583  002156  6E22               	movwf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,c
 32584  002158  0E00               	movlw	0
 32585  00215A  6E21               	movwf	OsAlrm_ProcessOsAlarms@AlarmIndex,c
 32586  00215C  5022               	movf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,w,c
 32587  00215E  E105               	bnz	i1u1333_20
 32588  002160  0E14               	movlw	20
 32589  002162  5C21               	subwf	OsAlrm_ProcessOsAlarms@AlarmIndex,w,c
 32590  002164  B0D8               	btfsc	status,0,c
 32591  002166  0012               	return	
 32592  002168  D001               	goto	i1l742
 32593  00216A                     i1u1333_20:
 32594  00216A  0012               	return	
 32595  00216C                     i1l742:
 32596                           
 32597                           ;os_alarms.c: 121: {
 32598                           ;os_alarms.c: 123: if (OsAlarms[AlarmIndex].Enabled == 1u)
 32599  00216C  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 32600  002170  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 32601  002174  0E00               	movlw	0
 32602  002176  6E1C               	movwf	i1___wmul@multiplicand+1,c
 32603  002178  0E0B               	movlw	11
 32604  00217A  6E1B               	movwf	i1___wmul@multiplicand,c
 32605  00217C  ECD7  F02D         	call	i1___wmul	;wreg free
 32606  002180  0E00               	movlw	low _OsAlarms
 32607  002182  2419               	addwf	?i1___wmul,w,c
 32608  002184  6ED9               	movwf	fsr2l,c
 32609  002186  0E06               	movlw	high _OsAlarms
 32610  002188  201A               	addwfc	?i1___wmul+1,w,c
 32611  00218A  6EDA               	movwf	fsr2h,c
 32612  00218C  04DE               	decf	postinc2,w,c
 32613  00218E  A4D8               	btfss	status,2,c
 32614  002190  D086               	goto	i1u1337_29
 32615                           
 32616                           ;os_alarms.c: 124: {
 32617                           ;os_alarms.c: 126: OsAlarms[AlarmIndex].Counter++;
 32618  002192  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 32619  002196  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 32620  00219A  0E00               	movlw	0
 32621  00219C  6E1C               	movwf	i1___wmul@multiplicand+1,c
 32622  00219E  0E0B               	movlw	11
 32623  0021A0  6E1B               	movwf	i1___wmul@multiplicand,c
 32624  0021A2  ECD7  F02D         	call	i1___wmul	;wreg free
 32625  0021A6  0E01               	movlw	1
 32626  0021A8  2619               	addwf	?i1___wmul,f,c
 32627  0021AA  0E00               	movlw	0
 32628  0021AC  221A               	addwfc	?i1___wmul+1,f,c
 32629  0021AE  0E00               	movlw	low _OsAlarms
 32630  0021B0  2419               	addwf	?i1___wmul,w,c
 32631  0021B2  6ED9               	movwf	fsr2l,c
 32632  0021B4  0E06               	movlw	high _OsAlarms
 32633  0021B6  201A               	addwfc	?i1___wmul+1,w,c
 32634  0021B8  6EDA               	movwf	fsr2h,c
 32635  0021BA  2ADE               	incf	postinc2,f,c
 32636  0021BC  0E00               	movlw	0
 32637  0021BE  22DE               	addwfc	postinc2,f,c
 32638  0021C0  22DE               	addwfc	postinc2,f,c
 32639  0021C2  22DE               	addwfc	postinc2,f,c
 32640                           
 32641                           ;os_alarms.c: 128: if (OsAlarms[AlarmIndex].Counter >= OsAlarms[AlarmIndex].AlarmTime)
 32642  0021C4  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 32643  0021C8  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 32644  0021CC  0E00               	movlw	0
 32645  0021CE  6E1C               	movwf	i1___wmul@multiplicand+1,c
 32646  0021D0  0E0B               	movlw	11
 32647  0021D2  6E1B               	movwf	i1___wmul@multiplicand,c
 32648  0021D4  ECD7  F02D         	call	i1___wmul	;wreg free
 32649  0021D8  0E05               	movlw	5
 32650  0021DA  2619               	addwf	?i1___wmul,f,c
 32651  0021DC  0E00               	movlw	0
 32652  0021DE  221A               	addwfc	?i1___wmul+1,f,c
 32653  0021E0  0E00               	movlw	low _OsAlarms
 32654  0021E2  2419               	addwf	?i1___wmul,w,c
 32655  0021E4  6ED9               	movwf	fsr2l,c
 32656  0021E6  0E06               	movlw	high _OsAlarms
 32657  0021E8  201A               	addwfc	?i1___wmul+1,w,c
 32658  0021EA  6EDA               	movwf	fsr2h,c
 32659  0021EC  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 32660  0021F0  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 32661  0021F4  0E00               	movlw	0
 32662  0021F6  6E1C               	movwf	i1___wmul@multiplicand+1,c
 32663  0021F8  0E0B               	movlw	11
 32664  0021FA  6E1B               	movwf	i1___wmul@multiplicand,c
 32665  0021FC  ECD7  F02D         	call	i1___wmul	;wreg free
 32666  002200  0E01               	movlw	1
 32667  002202  2619               	addwf	?i1___wmul,f,c
 32668  002204  0E00               	movlw	0
 32669  002206  221A               	addwfc	?i1___wmul+1,f,c
 32670  002208  0E00               	movlw	low _OsAlarms
 32671  00220A  2419               	addwf	?i1___wmul,w,c
 32672  00220C  6EE1               	movwf	fsr1l,c
 32673  00220E  0E06               	movlw	high _OsAlarms
 32674  002210  201A               	addwfc	?i1___wmul+1,w,c
 32675  002212  6EE2               	movwf	fsr1h,c
 32676  002214  50DE               	movf	postinc2,w,c
 32677  002216  5CE6               	subwf	postinc1,w,c
 32678  002218  50DE               	movf	postinc2,w,c
 32679  00221A  58E6               	subwfb	postinc1,w,c
 32680  00221C  50DE               	movf	postinc2,w,c
 32681  00221E  58E6               	subwfb	postinc1,w,c
 32682  002220  50DE               	movf	postinc2,w,c
 32683  002222  58E6               	subwfb	postinc1,w,c
 32684  002224  A0D8               	btfss	status,0,c
 32685  002226  D03B               	goto	i1u1337_29
 32686                           
 32687                           ;os_alarms.c: 129: {
 32688                           ;os_alarms.c: 131: OsAlrm_ClearOsAlarm(AlarmIndex);
 32689  002228  5021               	movf	OsAlrm_ProcessOsAlarms@AlarmIndex,w,c
 32690  00222A  EC41  F028         	call	_OsAlrm_ClearOsAlarm
 32691                           
 32692                           ;os_alarms.c: 133: if (OsAlarms[AlarmIndex].AlrmCbk != (0))
 32693  00222E  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 32694  002232  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 32695  002236  0E00               	movlw	0
 32696  002238  6E1C               	movwf	i1___wmul@multiplicand+1,c
 32697  00223A  0E0B               	movlw	11
 32698  00223C  6E1B               	movwf	i1___wmul@multiplicand,c
 32699  00223E  ECD7  F02D         	call	i1___wmul	;wreg free
 32700  002242  0E09               	movlw	9
 32701  002244  2619               	addwf	?i1___wmul,f,c
 32702  002246  0E00               	movlw	0
 32703  002248  221A               	addwfc	?i1___wmul+1,f,c
 32704  00224A  0E00               	movlw	low _OsAlarms
 32705  00224C  2419               	addwf	?i1___wmul,w,c
 32706  00224E  6ED9               	movwf	fsr2l,c
 32707  002250  0E06               	movlw	high _OsAlarms
 32708  002252  201A               	addwfc	?i1___wmul+1,w,c
 32709  002254  6EDA               	movwf	fsr2h,c
 32710  002256  50DE               	movf	postinc2,w,c
 32711  002258  10DE               	iorwf	postinc2,w,c
 32712  00225A  B4D8               	btfsc	status,2,c
 32713  00225C  D020               	goto	i1u1337_29
 32714                           
 32715                           ;os_alarms.c: 134: {
 32716                           ;os_alarms.c: 136: OsAlarms[AlarmIndex].AlrmCbk();
 32717  00225E  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 32718  002262  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 32719  002266  0E00               	movlw	0
 32720  002268  6E1C               	movwf	i1___wmul@multiplicand+1,c
 32721  00226A  0E0B               	movlw	11
 32722  00226C  6E1B               	movwf	i1___wmul@multiplicand,c
 32723  00226E  ECD7  F02D         	call	i1___wmul	;wreg free
 32724  002272  0E09               	movlw	9
 32725  002274  2619               	addwf	?i1___wmul,f,c
 32726  002276  0E00               	movlw	0
 32727  002278  221A               	addwfc	?i1___wmul+1,f,c
 32728  00227A  0E00               	movlw	low _OsAlarms
 32729  00227C  2419               	addwf	?i1___wmul,w,c
 32730  00227E  6ED9               	movwf	fsr2l,c
 32731  002280  0E06               	movlw	high _OsAlarms
 32732  002282  201A               	addwfc	?i1___wmul+1,w,c
 32733  002284  6EDA               	movwf	fsr2h,c
 32734  002286  D801               	call	i1u1337_28
 32735  002288  D00A               	goto	i1u1337_29
 32736  00228A                     i1u1337_28:
 32737  00228A  0005               	push	
 32738  00228C  6EFA               	movwf	pclath,c
 32739  00228E  50DE               	movf	postinc2,w,c
 32740  002290  6EFD               	movwf	tosl,c
 32741  002292  50DE               	movf	postinc2,w,c
 32742  002294  6EFE               	movwf	tosh,c
 32743  002296  50F8               	movf	tblptru,w,c
 32744  002298  6EFF               	movwf	tosu,c
 32745  00229A  50FA               	movf	pclath,w,c
 32746  00229C  0012               	return		;indir
 32747  00229E                     i1u1337_29:
 32748  00229E  4A21               	infsnz	OsAlrm_ProcessOsAlarms@AlarmIndex,f,c
 32749  0022A0  2A22               	incf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,f,c
 32750  0022A2  5022               	movf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,w,c
 32751  0022A4  E101               	bnz	i1l747
 32752  0022A6  D75C               	goto	L66
 32753  0022A8                     i1l747:
 32754  0022A8  0012               	return		;funcret
 32755  0022AA                     __end_of_OsAlrm_ProcessOsAlarms:
 32756                           	opt stack 0
 32757                           tosu	equ	0xFFF
 32758                           tosh	equ	0xFFE
 32759                           tosl	equ	0xFFD
 32760                           pclatu	equ	0xFFB
 32761                           pclath	equ	0xFFA
 32762                           tblptru	equ	0xFF8
 32763                           tblptrh	equ	0xFF7
 32764                           tblptrl	equ	0xFF6
 32765                           tablat	equ	0xFF5
 32766                           prodh	equ	0xFF4
 32767                           prodl	equ	0xFF3
 32768                           intcon	equ	0xFF2
 32769                           intcon2	equ	0xFF1
 32770                           intcon3	equ	0xFF0
 32771                           indf0	equ	0xFEF
 32772                           postinc0	equ	0xFEE
 32773                           plusw0	equ	0xFEB
 32774                           fsr0h	equ	0xFEA
 32775                           fsr0l	equ	0xFE9
 32776                           wreg	equ	0xFE8
 32777                           indf1	equ	0xFE7
 32778                           postinc1	equ	0xFE6
 32779                           postdec1	equ	0xFE5
 32780                           plusw1	equ	0xFE3
 32781                           fsr1h	equ	0xFE2
 32782                           fsr1l	equ	0xFE1
 32783                           bsr	equ	0xFE0
 32784                           indf2	equ	0xFDF
 32785                           postinc2	equ	0xFDE
 32786                           postdec2	equ	0xFDD
 32787                           plusw2	equ	0xFDB
 32788                           fsr2h	equ	0xFDA
 32789                           fsr2l	equ	0xFD9
 32790                           status	equ	0xFD8
 32791                           
 32792 ;; *************** function i1___wmul *****************
 32793 ;; Defined at:
 32794 ;;		line 15 in file "/opt/microchip/xc8/v1.45/sources/common/Umul16.c"
 32795 ;; Parameters:    Size  Location     Type
 32796 ;;  multiplier      2   24[COMRAM] unsigned int 
 32797 ;;  multiplicand    2   26[COMRAM] unsigned int 
 32798 ;; Auto vars:     Size  Location     Type
 32799 ;;  __wmul          2   28[COMRAM] unsigned int 
 32800 ;; Return value:  Size  Location     Type
 32801 ;;                  2   24[COMRAM] unsigned int 
 32802 ;; Registers used:
 32803 ;;		wreg, status,2, status,0, prodl, prodh
 32804 ;; Tracked objects:
 32805 ;;		On entry : 0/0
 32806 ;;		On exit  : 0/0
 32807 ;;		Unchanged: 0/0
 32808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32809 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32810 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32811 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32812 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32813 ;;Total ram usage:        6 bytes
 32814 ;; Hardware stack levels used:    1
 32815 ;; Hardware stack levels required when called:    4
 32816 ;; This function calls:
 32817 ;;		Nothing
 32818 ;; This function is called by:
 32819 ;;		_OsAlrm_ProcessOsAlarms
 32820 ;; This function uses a non-reentrant model
 32821 ;;
 32822                           
 32823                           	psect	text160
 32824  005BAE                     __ptext160:
 32825                           	opt stack 0
 32826  005BAE                     i1___wmul:
 32827                           	opt stack 10
 32828                           
 32829                           ;incstack = 0
 32830  005BAE  5019               	movf	i1___wmul@multiplier,w,c
 32831  005BB0  021B               	mulwf	i1___wmul@multiplicand,c
 32832  005BB2  CFF3 F01D          	movff	prodl,i1___wmul@product
 32833  005BB6  CFF4 F01E          	movff	prodh,i1___wmul@product+1
 32834  005BBA  5019               	movf	i1___wmul@multiplier,w,c
 32835  005BBC  021C               	mulwf	i1___wmul@multiplicand+1,c
 32836  005BBE  50F3               	movf	prodl,w,c
 32837  005BC0  261E               	addwf	i1___wmul@product+1,f,c
 32838  005BC2  501A               	movf	i1___wmul@multiplier+1,w,c
 32839  005BC4  021B               	mulwf	i1___wmul@multiplicand,c
 32840  005BC6  50F3               	movf	prodl,w,c
 32841  005BC8  261E               	addwf	i1___wmul@product+1,f,c
 32842  005BCA  C01D  F019         	movff	i1___wmul@product,?i1___wmul
 32843  005BCE  C01E  F01A         	movff	i1___wmul@product+1,?i1___wmul+1
 32844  005BD2  0012               	return	
 32845  005BD4                     __end_ofi1___wmul:
 32846                           	opt stack 0
 32847                           tosu	equ	0xFFF
 32848                           tosh	equ	0xFFE
 32849                           tosl	equ	0xFFD
 32850                           pclatu	equ	0xFFB
 32851                           pclath	equ	0xFFA
 32852                           tblptru	equ	0xFF8
 32853                           tblptrh	equ	0xFF7
 32854                           tblptrl	equ	0xFF6
 32855                           tablat	equ	0xFF5
 32856                           prodh	equ	0xFF4
 32857                           prodl	equ	0xFF3
 32858                           intcon	equ	0xFF2
 32859                           intcon2	equ	0xFF1
 32860                           intcon3	equ	0xFF0
 32861                           indf0	equ	0xFEF
 32862                           postinc0	equ	0xFEE
 32863                           plusw0	equ	0xFEB
 32864                           fsr0h	equ	0xFEA
 32865                           fsr0l	equ	0xFE9
 32866                           wreg	equ	0xFE8
 32867                           indf1	equ	0xFE7
 32868                           postinc1	equ	0xFE6
 32869                           postdec1	equ	0xFE5
 32870                           plusw1	equ	0xFE3
 32871                           fsr1h	equ	0xFE2
 32872                           fsr1l	equ	0xFE1
 32873                           bsr	equ	0xFE0
 32874                           indf2	equ	0xFDF
 32875                           postinc2	equ	0xFDE
 32876                           postdec2	equ	0xFDD
 32877                           plusw2	equ	0xFDB
 32878                           fsr2h	equ	0xFDA
 32879                           fsr2l	equ	0xFD9
 32880                           status	equ	0xFD8
 32881                           
 32882 ;; *************** function _OsAlrm_ClearOsAlarm *****************
 32883 ;; Defined at:
 32884 ;;		line 97 in file "../../MercuryFwk/Source/c/02_Osl/os_alarms.c"
 32885 ;; Parameters:    Size  Location     Type
 32886 ;;  OsAlarmId       1    wreg     unsigned char 
 32887 ;; Auto vars:     Size  Location     Type
 32888 ;;  OsAlarmId       1   24[COMRAM] unsigned char 
 32889 ;; Return value:  Size  Location     Type
 32890 ;;                  1    wreg      void 
 32891 ;; Registers used:
 32892 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 32893 ;; Tracked objects:
 32894 ;;		On entry : 0/0
 32895 ;;		On exit  : 0/0
 32896 ;;		Unchanged: 0/0
 32897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32898 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32899 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32901 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32902 ;;Total ram usage:        1 bytes
 32903 ;; Hardware stack levels used:    1
 32904 ;; Hardware stack levels required when called:    4
 32905 ;; This function calls:
 32906 ;;		Nothing
 32907 ;; This function is called by:
 32908 ;;		_OsAlrm_ProcessOsAlarms
 32909 ;; This function uses a non-reentrant model
 32910 ;;
 32911                           
 32912                           	psect	text161
 32913  005082                     __ptext161:
 32914                           	opt stack 0
 32915  005082                     _OsAlrm_ClearOsAlarm:
 32916                           	opt stack 10
 32917                           
 32918                           ;incstack = 0
 32919                           ;OsAlrm_ClearOsAlarm@OsAlarmId stored from wreg
 32920  005082  6E19               	movwf	OsAlrm_ClearOsAlarm@OsAlarmId,c
 32921                           
 32922                           ;os_alarms.c: 100: OsAlarms[OsAlarmId].Enabled = 0u;
 32923  005084  5019               	movf	OsAlrm_ClearOsAlarm@OsAlarmId,w,c
 32924  005086  0D0B               	mullw	11
 32925  005088  0E00               	movlw	low _OsAlarms
 32926  00508A  24F3               	addwf	prodl,w,c
 32927  00508C  6ED9               	movwf	fsr2l,c
 32928  00508E  0E06               	movlw	high _OsAlarms
 32929  005090  20F4               	addwfc	prodh,w,c
 32930  005092  6EDA               	movwf	fsr2h,c
 32931  005094  0E00               	movlw	0
 32932  005096  6EDF               	movwf	indf2,c
 32933                           
 32934                           ;os_alarms.c: 102: OsAlarms[OsAlarmId].Counter = 0;
 32935  005098  5019               	movf	OsAlrm_ClearOsAlarm@OsAlarmId,w,c
 32936  00509A  0D0B               	mullw	11
 32937  00509C  0E01               	movlw	1
 32938  00509E  26F3               	addwf	prodl,f,c
 32939  0050A0  0E00               	movlw	0
 32940  0050A2  22F4               	addwfc	prodh,f,c
 32941  0050A4  0E00               	movlw	low _OsAlarms
 32942  0050A6  24F3               	addwf	prodl,w,c
 32943  0050A8  6ED9               	movwf	fsr2l,c
 32944  0050AA  0E06               	movlw	high _OsAlarms
 32945  0050AC  20F4               	addwfc	prodh,w,c
 32946  0050AE  6EDA               	movwf	fsr2h,c
 32947  0050B0  6ADE               	clrf	postinc2,c
 32948  0050B2  6ADE               	clrf	postinc2,c
 32949  0050B4  6ADE               	clrf	postinc2,c
 32950  0050B6  6ADD               	clrf	postdec2,c
 32951                           
 32952                           ;os_alarms.c: 104: OsAlarms[OsAlarmId].AlarmTime = 0;
 32953  0050B8  5019               	movf	OsAlrm_ClearOsAlarm@OsAlarmId,w,c
 32954  0050BA  0D0B               	mullw	11
 32955  0050BC  0E05               	movlw	5
 32956  0050BE  26F3               	addwf	prodl,f,c
 32957  0050C0  0E00               	movlw	0
 32958  0050C2  22F4               	addwfc	prodh,f,c
 32959  0050C4  0E00               	movlw	low _OsAlarms
 32960  0050C6  24F3               	addwf	prodl,w,c
 32961  0050C8  6ED9               	movwf	fsr2l,c
 32962  0050CA  0E06               	movlw	high _OsAlarms
 32963  0050CC  20F4               	addwfc	prodh,w,c
 32964  0050CE  6EDA               	movwf	fsr2h,c
 32965  0050D0  6ADE               	clrf	postinc2,c
 32966  0050D2  6ADE               	clrf	postinc2,c
 32967  0050D4  6ADE               	clrf	postinc2,c
 32968  0050D6  6ADD               	clrf	postdec2,c
 32969  0050D8  0012               	return		;funcret
 32970  0050DA                     __end_of_OsAlrm_ClearOsAlarm:
 32971                           	opt stack 0
 32972                           tosu	equ	0xFFF
 32973                           tosh	equ	0xFFE
 32974                           tosl	equ	0xFFD
 32975                           pclatu	equ	0xFFB
 32976                           pclath	equ	0xFFA
 32977                           tblptru	equ	0xFF8
 32978                           tblptrh	equ	0xFF7
 32979                           tblptrl	equ	0xFF6
 32980                           tablat	equ	0xFF5
 32981                           prodh	equ	0xFF4
 32982                           prodl	equ	0xFF3
 32983                           intcon	equ	0xFF2
 32984                           intcon2	equ	0xFF1
 32985                           intcon3	equ	0xFF0
 32986                           indf0	equ	0xFEF
 32987                           postinc0	equ	0xFEE
 32988                           plusw0	equ	0xFEB
 32989                           fsr0h	equ	0xFEA
 32990                           fsr0l	equ	0xFE9
 32991                           wreg	equ	0xFE8
 32992                           indf1	equ	0xFE7
 32993                           postinc1	equ	0xFE6
 32994                           postdec1	equ	0xFE5
 32995                           plusw1	equ	0xFE3
 32996                           fsr1h	equ	0xFE2
 32997                           fsr1l	equ	0xFE1
 32998                           bsr	equ	0xFE0
 32999                           indf2	equ	0xFDF
 33000                           postinc2	equ	0xFDE
 33001                           postdec2	equ	0xFDD
 33002                           plusw2	equ	0xFDB
 33003                           fsr2h	equ	0xFDA
 33004                           fsr2l	equ	0xFD9
 33005                           status	equ	0xFD8
 33006                           
 33007 ;; *************** function _I2cDummyTx *****************
 33008 ;; Defined at:
 33009 ;;		line 193 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 33010 ;; Parameters:    Size  Location     Type
 33011 ;;		None
 33012 ;; Auto vars:     Size  Location     Type
 33013 ;;		None
 33014 ;; Return value:  Size  Location     Type
 33015 ;;                  1    wreg      void 
 33016 ;; Registers used:
 33017 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 33018 ;; Tracked objects:
 33019 ;;		On entry : 0/0
 33020 ;;		On exit  : 0/0
 33021 ;;		Unchanged: 0/0
 33022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33023 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33024 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33026 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33027 ;;Total ram usage:        0 bytes
 33028 ;; Hardware stack levels used:    1
 33029 ;; Hardware stack levels required when called:    6
 33030 ;; This function calls:
 33031 ;;		i1_I2cSlv_SendI2cMsg
 33032 ;; This function is called by:
 33033 ;;		_I2cSlv_MainTask
 33034 ;;		_OsAlrm_ProcessOsAlarms
 33035 ;; This function uses a non-reentrant model
 33036 ;;
 33037                           
 33038                           	psect	text162
 33039  005DC8                     __ptext162:
 33040                           	opt stack 0
 33041  005DC8                     _I2cDummyTx:
 33042                           	opt stack 8
 33043                           
 33044                           ;i2c_slv.c: 195: static UINT8 DummyBuffer = 0x00;
 33045                           ;i2c_slv.c: 198: I2cSlv_SendI2cMsg(&DummyBuffer,0x00,1);
 33046                           
 33047                           ;incstack = 0
 33048  005DC8  0EFC               	movlw	low I2cDummyTx@DummyBuffer
 33049  005DCA  6E1C               	movwf	i1I2cSlv_SendI2cMsg@TxBuffer,c
 33050  005DCC  0E01               	movlw	high I2cDummyTx@DummyBuffer
 33051  005DCE  6E1D               	movwf	i1I2cSlv_SendI2cMsg@TxBuffer+1,c
 33052  005DD0  0E00               	movlw	0
 33053  005DD2  6E1E               	movwf	i1I2cSlv_SendI2cMsg@SlaveAddr,c
 33054  005DD4  0E01               	movlw	1
 33055  005DD6  6E1F               	movwf	i1I2cSlv_SendI2cMsg@DataLenght,c
 33056  005DD8  EC71  F02C         	call	i1_I2cSlv_SendI2cMsg	;wreg free
 33057                           
 33058                           ;i2c_slv.c: 200: I2cBusStatus = I2cBusReady;
 33059  005DDC  0E01               	movlw	1
 33060  005DDE  0101               	movlb	1	; () banked
 33061  005DE0  6FEB               	movwf	_I2cBusStatus& (0+255),b
 33062                           
 33063                           ; BSR set to: 1
 33064  005DE2  0012               	return		;funcret
 33065  005DE4                     __end_of_I2cDummyTx:
 33066                           	opt stack 0
 33067                           tosu	equ	0xFFF
 33068                           tosh	equ	0xFFE
 33069                           tosl	equ	0xFFD
 33070                           pclatu	equ	0xFFB
 33071                           pclath	equ	0xFFA
 33072                           tblptru	equ	0xFF8
 33073                           tblptrh	equ	0xFF7
 33074                           tblptrl	equ	0xFF6
 33075                           tablat	equ	0xFF5
 33076                           prodh	equ	0xFF4
 33077                           prodl	equ	0xFF3
 33078                           intcon	equ	0xFF2
 33079                           intcon2	equ	0xFF1
 33080                           intcon3	equ	0xFF0
 33081                           indf0	equ	0xFEF
 33082                           postinc0	equ	0xFEE
 33083                           plusw0	equ	0xFEB
 33084                           fsr0h	equ	0xFEA
 33085                           fsr0l	equ	0xFE9
 33086                           wreg	equ	0xFE8
 33087                           indf1	equ	0xFE7
 33088                           postinc1	equ	0xFE6
 33089                           postdec1	equ	0xFE5
 33090                           plusw1	equ	0xFE3
 33091                           fsr1h	equ	0xFE2
 33092                           fsr1l	equ	0xFE1
 33093                           bsr	equ	0xFE0
 33094                           indf2	equ	0xFDF
 33095                           postinc2	equ	0xFDE
 33096                           postdec2	equ	0xFDD
 33097                           plusw2	equ	0xFDB
 33098                           fsr2h	equ	0xFDA
 33099                           fsr2l	equ	0xFD9
 33100                           status	equ	0xFD8
 33101                           
 33102 ;; *************** function i1_I2cSlv_SendI2cMsg *****************
 33103 ;; Defined at:
 33104 ;;		line 252 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 33105 ;; Parameters:    Size  Location     Type
 33106 ;;  TxBuffer        2   27[COMRAM] PTR unsigned char 
 33107 ;;		 -> triggerRelay@txBuffer(2), Terminal@TermTxBuffer(50), I2cDummyTx@DummyBuffer(1), 
 33108 ;;  SlaveAddr       1   29[COMRAM] unsigned char 
 33109 ;;  DataLenght      1   30[COMRAM] unsigned char 
 33110 ;; Auto vars:     Size  Location     Type
 33111 ;;  I2cSlv_SendI    1   31[COMRAM] unsigned char 
 33112 ;; Return value:  Size  Location     Type
 33113 ;;                  1    wreg      unsigned char 
 33114 ;; Registers used:
 33115 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 33116 ;; Tracked objects:
 33117 ;;		On entry : 0/0
 33118 ;;		On exit  : 0/0
 33119 ;;		Unchanged: 0/0
 33120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33121 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33122 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33123 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33124 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33125 ;;Total ram usage:        5 bytes
 33126 ;; Hardware stack levels used:    1
 33127 ;; Hardware stack levels required when called:    5
 33128 ;; This function calls:
 33129 ;;		i1_GenerateEvt
 33130 ;; This function is called by:
 33131 ;;		_I2cDummyTx
 33132 ;; This function uses a non-reentrant model
 33133 ;;
 33134                           
 33135                           	psect	text163
 33136  0058E2                     __ptext163:
 33137                           	opt stack 0
 33138  0058E2                     i1_I2cSlv_SendI2cMsg:
 33139                           	opt stack 8
 33140                           
 33141                           ;i2c_slv.c: 254: UINT8 TxSts = 0u;
 33142                           
 33143                           ; BSR set to: 1
 33144                           ;incstack = 0
 33145  0058E2  0E00               	movlw	0
 33146  0058E4  6E20               	movwf	i1I2cSlv_SendI2cMsg@TxSts,c
 33147                           
 33148                           ;i2c_slv.c: 256: if (I2cComSts != TxInProgress)
 33149  0058E6  0100               	movlb	0	; () banked
 33150  0058E8  05CC               	decf	_I2cComSts& (0+255),w,b
 33151  0058EA  B4D8               	btfsc	status,2,c
 33152  0058EC  D014               	goto	i1l1395
 33153                           
 33154                           ; BSR set to: 0
 33155                           ;i2c_slv.c: 257: {
 33156                           ;i2c_slv.c: 259: I2cTxPacket.SlaveAddress = SlaveAddr;
 33157  0058EE  C01E  F39F         	movff	i1I2cSlv_SendI2cMsg@SlaveAddr,_I2cTxPacket
 33158                           
 33159                           ; BSR set to: 0
 33160                           ;i2c_slv.c: 260: I2cTxPacket.ReadWrite = ((UINT8)(0));
 33161  0058F2  0E00               	movlw	0
 33162  0058F4  0103               	movlb	3	; () banked
 33163  0058F6  6FA0               	movwf	(_I2cTxPacket+1)& (0+255),b
 33164                           
 33165                           ; BSR set to: 3
 33166                           ;i2c_slv.c: 261: I2cTxPacket.Lenght = DataLenght;
 33167  0058F8  C01F  F3A3         	movff	i1I2cSlv_SendI2cMsg@DataLenght,_I2cTxPacket+4
 33168                           
 33169                           ; BSR set to: 3
 33170                           ;i2c_slv.c: 262: I2cTxPacket.Buffer = TxBuffer;
 33171  0058FC  C01C  F3A1         	movff	i1I2cSlv_SendI2cMsg@TxBuffer,_I2cTxPacket+2
 33172  005900  C01D  F3A2         	movff	i1I2cSlv_SendI2cMsg@TxBuffer+1,_I2cTxPacket+3
 33173                           
 33174                           ; BSR set to: 3
 33175                           ;i2c_slv.c: 265: GenerateEvt(&I2cWriteDataEvt);
 33176  005904  0ED6               	movlw	low _I2cWriteDataEvt
 33177  005906  6E19               	movwf	i1GenerateEvt@Event,c
 33178  005908  0E00               	movlw	high _I2cWriteDataEvt
 33179  00590A  6E1A               	movwf	i1GenerateEvt@Event+1,c
 33180  00590C  EC46  F02F         	call	i1_GenerateEvt	;wreg free
 33181                           
 33182                           ;i2c_slv.c: 267: TxSts = 1u;
 33183  005910  0E01               	movlw	1
 33184  005912  6E20               	movwf	i1I2cSlv_SendI2cMsg@TxSts,c
 33185                           
 33186                           ;i2c_slv.c: 268: }
 33187  005914  0012               	return	
 33188  005916                     i1l1395:
 33189                           
 33190                           ;i2c_slv.c: 269: else
 33191                           ;i2c_slv.c: 270: {
 33192                           ;i2c_slv.c: 272: TxSts = 0u;
 33193  005916  0E00               	movlw	0
 33194  005918  6E20               	movwf	i1I2cSlv_SendI2cMsg@TxSts,c
 33195  00591A  0012               	return	
 33196  00591C                     __end_ofi1_I2cSlv_SendI2cMsg:
 33197                           	opt stack 0
 33198                           tosu	equ	0xFFF
 33199                           tosh	equ	0xFFE
 33200                           tosl	equ	0xFFD
 33201                           pclatu	equ	0xFFB
 33202                           pclath	equ	0xFFA
 33203                           tblptru	equ	0xFF8
 33204                           tblptrh	equ	0xFF7
 33205                           tblptrl	equ	0xFF6
 33206                           tablat	equ	0xFF5
 33207                           prodh	equ	0xFF4
 33208                           prodl	equ	0xFF3
 33209                           intcon	equ	0xFF2
 33210                           intcon2	equ	0xFF1
 33211                           intcon3	equ	0xFF0
 33212                           indf0	equ	0xFEF
 33213                           postinc0	equ	0xFEE
 33214                           plusw0	equ	0xFEB
 33215                           fsr0h	equ	0xFEA
 33216                           fsr0l	equ	0xFE9
 33217                           wreg	equ	0xFE8
 33218                           indf1	equ	0xFE7
 33219                           postinc1	equ	0xFE6
 33220                           postdec1	equ	0xFE5
 33221                           plusw1	equ	0xFE3
 33222                           fsr1h	equ	0xFE2
 33223                           fsr1l	equ	0xFE1
 33224                           bsr	equ	0xFE0
 33225                           indf2	equ	0xFDF
 33226                           postinc2	equ	0xFDE
 33227                           postdec2	equ	0xFDD
 33228                           plusw2	equ	0xFDB
 33229                           fsr2h	equ	0xFDA
 33230                           fsr2l	equ	0xFD9
 33231                           status	equ	0xFD8
 33232                           
 33233 ;; *************** function i1_GenerateEvt *****************
 33234 ;; Defined at:
 33235 ;;		line 75 in file "../../MercuryFwk/Source/c/02_Osl/os_ser.c"
 33236 ;; Parameters:    Size  Location     Type
 33237 ;;  Event           2   24[COMRAM] PTR struct EventStructur
 33238 ;;		 -> AlarmEvent(1), I2cRxPacket(6), I2cReadDataEvt(1), I2cWriteDataEvt(1), 
 33239 ;;		 -> GetMethod(1), InitNetwork(1), MdmStsReady(1), SmsTxtReady(1), 
 33240 ;;		 -> GetSmsText(1), SmsEvent(1), RingEvent(1), SendSmsEvent(1), 
 33241 ;;		 -> NewStringMdmTerminal(1), NewMdmEvtParserRequest(1), NewStringReceived(1), MdmOnOffPulseRequest(1), 
 33242 ;;		 -> CallClosedEvent(1), IncomingCallEvent(1), NewSmsEvent(1), 
 33243 ;; Auto vars:     Size  Location     Type
 33244 ;;  GenerateEvt     1   26[COMRAM] enum E7727
 33245 ;; Return value:  Size  Location     Type
 33246 ;;                  1    wreg      enum E7699
 33247 ;; Registers used:
 33248 ;;		wreg, fsr2l, fsr2h, status,2
 33249 ;; Tracked objects:
 33250 ;;		On entry : 0/0
 33251 ;;		On exit  : 0/0
 33252 ;;		Unchanged: 0/0
 33253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33254 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33255 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33257 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33258 ;;Total ram usage:        3 bytes
 33259 ;; Hardware stack levels used:    1
 33260 ;; Hardware stack levels required when called:    4
 33261 ;; This function calls:
 33262 ;;		Nothing
 33263 ;; This function is called by:
 33264 ;;		i1_I2cSlv_SendI2cMsg
 33265 ;; This function uses a non-reentrant model
 33266 ;;
 33267                           
 33268                           	psect	text164
 33269  005E8C                     __ptext164:
 33270                           	opt stack 0
 33271  005E8C                     i1_GenerateEvt:
 33272                           	opt stack 8
 33273                           
 33274                           ;os_ser.c: 78: EventStatusType EventStatus = EventIdle;
 33275                           
 33276                           ;incstack = 0
 33277  005E8C  0E00               	movlw	0
 33278  005E8E  6E1B               	movwf	i1GenerateEvt@EventStatus,c
 33279                           
 33280                           ;os_ser.c: 81: Event->EventStatus = EventSent;
 33281  005E90  C019  FFD9         	movff	i1GenerateEvt@Event,fsr2l
 33282  005E94  C01A  FFDA         	movff	i1GenerateEvt@Event+1,fsr2h
 33283  005E98  0E02               	movlw	2
 33284  005E9A  6EDF               	movwf	indf2,c
 33285                           
 33286                           ;os_ser.c: 83: EventStatus = EventSent;
 33287  005E9C  0E02               	movlw	2
 33288  005E9E  6E1B               	movwf	i1GenerateEvt@EventStatus,c
 33289  005EA0  0012               	return	
 33290  005EA2                     __end_ofi1_GenerateEvt:
 33291                           	opt stack 0
 33292                           tosu	equ	0xFFF
 33293                           tosh	equ	0xFFE
 33294                           tosl	equ	0xFFD
 33295                           pclatu	equ	0xFFB
 33296                           pclath	equ	0xFFA
 33297                           tblptru	equ	0xFF8
 33298                           tblptrh	equ	0xFF7
 33299                           tblptrl	equ	0xFF6
 33300                           tablat	equ	0xFF5
 33301                           prodh	equ	0xFF4
 33302                           prodl	equ	0xFF3
 33303                           intcon	equ	0xFF2
 33304                           intcon2	equ	0xFF1
 33305                           intcon3	equ	0xFF0
 33306                           indf0	equ	0xFEF
 33307                           postinc0	equ	0xFEE
 33308                           plusw0	equ	0xFEB
 33309                           fsr0h	equ	0xFEA
 33310                           fsr0l	equ	0xFE9
 33311                           wreg	equ	0xFE8
 33312                           indf1	equ	0xFE7
 33313                           postinc1	equ	0xFE6
 33314                           postdec1	equ	0xFE5
 33315                           plusw1	equ	0xFE3
 33316                           fsr1h	equ	0xFE2
 33317                           fsr1l	equ	0xFE1
 33318                           bsr	equ	0xFE0
 33319                           indf2	equ	0xFDF
 33320                           postinc2	equ	0xFDE
 33321                           postdec2	equ	0xFDD
 33322                           plusw2	equ	0xFDB
 33323                           fsr2h	equ	0xFDA
 33324                           fsr2l	equ	0xFD9
 33325                           status	equ	0xFD8
 33326                           
 33327 ;; *************** function _HighPriorityIsr *****************
 33328 ;; Defined at:
 33329 ;;		line 153 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/irq.c"
 33330 ;; Parameters:    Size  Location     Type
 33331 ;;		None
 33332 ;; Auto vars:     Size  Location     Type
 33333 ;;		None
 33334 ;; Return value:  Size  Location     Type
 33335 ;;                  1    wreg      void 
 33336 ;; Registers used:
 33337 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 33338 ;; Tracked objects:
 33339 ;;		On entry : 0/0
 33340 ;;		On exit  : 0/0
 33341 ;;		Unchanged: 0/0
 33342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33343 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33344 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33345 ;;      Temps:         18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33346 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33347 ;;Total ram usage:       18 bytes
 33348 ;; Hardware stack levels used:    1
 33349 ;; Hardware stack levels required when called:    3
 33350 ;; This function calls:
 33351 ;;		_Mcu_Int0Isr
 33352 ;;		_Mcu_Int1Isr
 33353 ;;		_Rtcc_RtcIsr
 33354 ;;		_Uart_Uart1RxIsr
 33355 ;; This function is called by:
 33356 ;;		Interrupt level 2
 33357 ;; This function uses a non-reentrant model
 33358 ;;
 33359                           
 33360                           	psect	intcode
 33361  000008                     __pintcode:
 33362                           	opt stack 0
 33363  000008                     _HighPriorityIsr:
 33364                           	opt stack 8
 33365                           
 33366                           ;incstack = 0
 33367  000008  8242               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 33368  00000A  EF30  F020         	goto	int_func
 33369                           tosu	equ	0xFFF
 33370                           tosh	equ	0xFFE
 33371                           tosl	equ	0xFFD
 33372                           pclatu	equ	0xFFB
 33373                           pclath	equ	0xFFA
 33374                           tblptru	equ	0xFF8
 33375                           tblptrh	equ	0xFF7
 33376                           tblptrl	equ	0xFF6
 33377                           tablat	equ	0xFF5
 33378                           prodh	equ	0xFF4
 33379                           prodl	equ	0xFF3
 33380                           intcon	equ	0xFF2
 33381                           intcon2	equ	0xFF1
 33382                           intcon3	equ	0xFF0
 33383                           indf0	equ	0xFEF
 33384                           postinc0	equ	0xFEE
 33385                           plusw0	equ	0xFEB
 33386                           fsr0h	equ	0xFEA
 33387                           fsr0l	equ	0xFE9
 33388                           wreg	equ	0xFE8
 33389                           indf1	equ	0xFE7
 33390                           postinc1	equ	0xFE6
 33391                           postdec1	equ	0xFE5
 33392                           plusw1	equ	0xFE3
 33393                           fsr1h	equ	0xFE2
 33394                           fsr1l	equ	0xFE1
 33395                           bsr	equ	0xFE0
 33396                           indf2	equ	0xFDF
 33397                           postinc2	equ	0xFDE
 33398                           postdec2	equ	0xFDD
 33399                           plusw2	equ	0xFDB
 33400                           fsr2h	equ	0xFDA
 33401                           fsr2l	equ	0xFD9
 33402                           status	equ	0xFD8
 33403                           
 33404                           	psect	intcode_body
 33405  004060                     __pintcode_body:
 33406                           	opt stack 8
 33407  004060                     int_func:
 33408                           	opt stack 8
 33409  004060  CFFA F007          	movff	pclath,??_HighPriorityIsr
 33410  004064  CFFB F008          	movff	pclatu,??_HighPriorityIsr+1
 33411  004068  CFE9 F009          	movff	fsr0l,??_HighPriorityIsr+2
 33412  00406C  CFEA F00A          	movff	fsr0h,??_HighPriorityIsr+3
 33413  004070  CFE1 F00B          	movff	fsr1l,??_HighPriorityIsr+4
 33414  004074  CFE2 F00C          	movff	fsr1h,??_HighPriorityIsr+5
 33415  004078  CFD9 F00D          	movff	fsr2l,??_HighPriorityIsr+6
 33416  00407C  CFDA F00E          	movff	fsr2h,??_HighPriorityIsr+7
 33417  004080  CFF3 F00F          	movff	prodl,??_HighPriorityIsr+8
 33418  004084  CFF4 F010          	movff	prodh,??_HighPriorityIsr+9
 33419  004088  CFF6 F011          	movff	tblptrl,??_HighPriorityIsr+10
 33420  00408C  CFF7 F012          	movff	tblptrh,??_HighPriorityIsr+11
 33421  004090  CFF8 F013          	movff	tblptru,??_HighPriorityIsr+12
 33422  004094  CFF5 F014          	movff	tablat,??_HighPriorityIsr+13
 33423  004098  C042  F015         	movff	btemp,??_HighPriorityIsr+14
 33424  00409C  C043  F016         	movff	btemp+1,??_HighPriorityIsr+15
 33425  0040A0  C044  F017         	movff	btemp+2,??_HighPriorityIsr+16
 33426  0040A4  C045  F018         	movff	btemp+3,??_HighPriorityIsr+17
 33427                           
 33428                           ;irq.c: 157: if (INTCONbits.INT0IF == ((UINT8)(1)))
 33429  0040A8  B2F2               	btfsc	intcon,1,c	;volatile
 33430                           
 33431                           ;irq.c: 158: {
 33432                           ;irq.c: 160: Mcu_Int0Isr();
 33433  0040AA  ECED  F02F         	call	_Mcu_Int0Isr	;wreg free
 33434                           
 33435                           ;irq.c: 161: }
 33436                           ;irq.c: 166: if (INTCON3bits.INT1IF == ((UINT8)(1)))
 33437  0040AE  B0F0               	btfsc	intcon3,0,c	;volatile
 33438                           
 33439                           ;irq.c: 167: {
 33440                           ;irq.c: 169: Mcu_Int1Isr();
 33441  0040B0  ECEB  F02F         	call	_Mcu_Int1Isr	;wreg free
 33442                           
 33443                           ;irq.c: 170: }
 33444                           ;irq.c: 202: if (PIR3bits.RTCCIF == ((UINT8)(1)))
 33445  0040B4  B0A4               	btfsc	4004,0,c	;volatile
 33446                           
 33447                           ;irq.c: 203: {
 33448                           ;irq.c: 205: Rtcc_RtcIsr();
 33449  0040B6  ECE9  F02F         	call	_Rtcc_RtcIsr	;wreg free
 33450                           
 33451                           ;irq.c: 206: }
 33452                           ;irq.c: 211: if (PIR1bits.RC1IF == ((UINT8)(1)))
 33453  0040BA  BA9E               	btfsc	3998,5,c	;volatile
 33454                           
 33455                           ;irq.c: 212: {
 33456                           ;irq.c: 214: Uart_Uart1RxIsr();
 33457  0040BC  ECA2  F02F         	call	_Uart_Uart1RxIsr	;wreg free
 33458  0040C0  C018  F045         	movff	??_HighPriorityIsr+17,btemp+3
 33459  0040C4  C017  F044         	movff	??_HighPriorityIsr+16,btemp+2
 33460  0040C8  C016  F043         	movff	??_HighPriorityIsr+15,btemp+1
 33461  0040CC  C015  F042         	movff	??_HighPriorityIsr+14,btemp
 33462  0040D0  C014  FFF5         	movff	??_HighPriorityIsr+13,tablat
 33463  0040D4  C013  FFF8         	movff	??_HighPriorityIsr+12,tblptru
 33464  0040D8  C012  FFF7         	movff	??_HighPriorityIsr+11,tblptrh
 33465  0040DC  C011  FFF6         	movff	??_HighPriorityIsr+10,tblptrl
 33466  0040E0  C010  FFF4         	movff	??_HighPriorityIsr+9,prodh
 33467  0040E4  C00F  FFF3         	movff	??_HighPriorityIsr+8,prodl
 33468  0040E8  C00E  FFDA         	movff	??_HighPriorityIsr+7,fsr2h
 33469  0040EC  C00D  FFD9         	movff	??_HighPriorityIsr+6,fsr2l
 33470  0040F0  C00C  FFE2         	movff	??_HighPriorityIsr+5,fsr1h
 33471  0040F4  C00B  FFE1         	movff	??_HighPriorityIsr+4,fsr1l
 33472  0040F8  C00A  FFEA         	movff	??_HighPriorityIsr+3,fsr0h
 33473  0040FC  C009  FFE9         	movff	??_HighPriorityIsr+2,fsr0l
 33474  004100  C008  FFFB         	movff	??_HighPriorityIsr+1,pclatu
 33475  004104  C007  FFFA         	movff	??_HighPriorityIsr,pclath
 33476  004108  9242               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 33477  00410A  0011               	retfie		f
 33478  00410C                     __end_of_HighPriorityIsr:
 33479                           	opt stack 0
 33480                           tosu	equ	0xFFF
 33481                           tosh	equ	0xFFE
 33482                           tosl	equ	0xFFD
 33483                           pclatu	equ	0xFFB
 33484                           pclath	equ	0xFFA
 33485                           tblptru	equ	0xFF8
 33486                           tblptrh	equ	0xFF7
 33487                           tblptrl	equ	0xFF6
 33488                           tablat	equ	0xFF5
 33489                           prodh	equ	0xFF4
 33490                           prodl	equ	0xFF3
 33491                           intcon	equ	0xFF2
 33492                           intcon2	equ	0xFF1
 33493                           intcon3	equ	0xFF0
 33494                           indf0	equ	0xFEF
 33495                           postinc0	equ	0xFEE
 33496                           plusw0	equ	0xFEB
 33497                           fsr0h	equ	0xFEA
 33498                           fsr0l	equ	0xFE9
 33499                           wreg	equ	0xFE8
 33500                           indf1	equ	0xFE7
 33501                           postinc1	equ	0xFE6
 33502                           postdec1	equ	0xFE5
 33503                           plusw1	equ	0xFE3
 33504                           fsr1h	equ	0xFE2
 33505                           fsr1l	equ	0xFE1
 33506                           bsr	equ	0xFE0
 33507                           indf2	equ	0xFDF
 33508                           postinc2	equ	0xFDE
 33509                           postdec2	equ	0xFDD
 33510                           plusw2	equ	0xFDB
 33511                           fsr2h	equ	0xFDA
 33512                           fsr2l	equ	0xFD9
 33513                           status	equ	0xFD8
 33514                           
 33515 ;; *************** function _Uart_Uart1RxIsr *****************
 33516 ;; Defined at:
 33517 ;;		line 584 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 33518 ;; Parameters:    Size  Location     Type
 33519 ;;		None
 33520 ;; Auto vars:     Size  Location     Type
 33521 ;;		None
 33522 ;; Return value:  Size  Location     Type
 33523 ;;                  1    wreg      void 
 33524 ;; Registers used:
 33525 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 33526 ;; Tracked objects:
 33527 ;;		On entry : 0/0
 33528 ;;		On exit  : 0/0
 33529 ;;		Unchanged: 0/0
 33530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33531 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33532 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33533 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33534 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33535 ;;Total ram usage:        0 bytes
 33536 ;; Hardware stack levels used:    1
 33537 ;; Hardware stack levels required when called:    2
 33538 ;; This function calls:
 33539 ;;		_Uart_MdmGsmGprsReadService
 33540 ;; This function is called by:
 33541 ;;		_HighPriorityIsr
 33542 ;; This function uses a non-reentrant model
 33543 ;;
 33544                           
 33545                           	psect	text166
 33546  005F44                     __ptext166:
 33547                           	opt stack 0
 33548  005F44                     _Uart_Uart1RxIsr:
 33549                           	opt stack 8
 33550                           
 33551                           ;uart_drv.c: 587: static UINT8 UartRxData = 0;
 33552                           ;uart_drv.c: 590: UartRxData = RCREG1;
 33553                           
 33554                           ;incstack = 0
 33555  005F44  CFAF F02C          	movff	4015,Uart_Uart1RxIsr@UartRxData	;volatile
 33556                           
 33557                           ;uart_drv.c: 594: Uart_MdmGsmGprsReadService(1,UartRxData);
 33558  005F48  C02C  F004         	movff	Uart_Uart1RxIsr@UartRxData,Uart_MdmGsmGprsReadService@UartData
 33559  005F4C  0E01               	movlw	1
 33560  005F4E  EC6E  F01C         	call	_Uart_MdmGsmGprsReadService
 33561  005F52  0012               	return		;funcret
 33562  005F54                     __end_of_Uart_Uart1RxIsr:
 33563                           	opt stack 0
 33564                           tosu	equ	0xFFF
 33565                           tosh	equ	0xFFE
 33566                           tosl	equ	0xFFD
 33567                           pclatu	equ	0xFFB
 33568                           pclath	equ	0xFFA
 33569                           tblptru	equ	0xFF8
 33570                           tblptrh	equ	0xFF7
 33571                           tblptrl	equ	0xFF6
 33572                           tablat	equ	0xFF5
 33573                           prodh	equ	0xFF4
 33574                           prodl	equ	0xFF3
 33575                           intcon	equ	0xFF2
 33576                           intcon2	equ	0xFF1
 33577                           intcon3	equ	0xFF0
 33578                           indf0	equ	0xFEF
 33579                           postinc0	equ	0xFEE
 33580                           plusw0	equ	0xFEB
 33581                           fsr0h	equ	0xFEA
 33582                           fsr0l	equ	0xFE9
 33583                           wreg	equ	0xFE8
 33584                           indf1	equ	0xFE7
 33585                           postinc1	equ	0xFE6
 33586                           postdec1	equ	0xFE5
 33587                           plusw1	equ	0xFE3
 33588                           fsr1h	equ	0xFE2
 33589                           fsr1l	equ	0xFE1
 33590                           bsr	equ	0xFE0
 33591                           indf2	equ	0xFDF
 33592                           postinc2	equ	0xFDE
 33593                           postdec2	equ	0xFDD
 33594                           plusw2	equ	0xFDB
 33595                           fsr2h	equ	0xFDA
 33596                           fsr2l	equ	0xFD9
 33597                           status	equ	0xFD8
 33598                           
 33599 ;; *************** function _Uart_MdmGsmGprsReadService *****************
 33600 ;; Defined at:
 33601 ;;		line 376 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 33602 ;; Parameters:    Size  Location     Type
 33603 ;;  Module          1    wreg     unsigned char 
 33604 ;;  UartData        1    3[COMRAM] unsigned char 
 33605 ;; Auto vars:     Size  Location     Type
 33606 ;;  Module          1    0[COMRAM] unsigned char 
 33607 ;;  ServiceCount    2    4[COMRAM] unsigned short 
 33608 ;; Return value:  Size  Location     Type
 33609 ;;                  1    wreg      void 
 33610 ;; Registers used:
 33611 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 33612 ;; Tracked objects:
 33613 ;;		On entry : 0/0
 33614 ;;		On exit  : 0/0
 33615 ;;		Unchanged: 0/0
 33616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33617 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33618 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33619 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33620 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33621 ;;Total ram usage:        3 bytes
 33622 ;; Hardware stack levels used:    1
 33623 ;; Hardware stack levels required when called:    1
 33624 ;; This function calls:
 33625 ;;		i2_GenerateEvt
 33626 ;; This function is called by:
 33627 ;;		_Uart_Uart1RxIsr
 33628 ;; This function uses a non-reentrant model
 33629 ;;
 33630                           
 33631                           	psect	text167
 33632  0038DC                     __ptext167:
 33633                           	opt stack 0
 33634  0038DC                     _Uart_MdmGsmGprsReadService:
 33635                           	opt stack 8
 33636                           
 33637                           ;uart_drv.c: 378: static UINT16 RxCounter = 0;
 33638                           ;uart_drv.c: 379: static RxStateType RxState = ReadData;
 33639                           ;uart_drv.c: 380: static UINT8 LocalRxBuffer[((UINT16)(400))];
 33640                           ;uart_drv.c: 381: UINT16 ServiceCounter = 0;
 33641                           
 33642                           ;incstack = 0
 33643  0038DC  0E00               	movlw	0
 33644  0038DE  6E06               	movwf	Uart_MdmGsmGprsReadService@ServiceCounter+1,c
 33645  0038E0  0E00               	movlw	0
 33646  0038E2  6E05               	movwf	Uart_MdmGsmGprsReadService@ServiceCounter,c
 33647                           
 33648                           ;uart_drv.c: 383: switch (RxState)
 33649  0038E4  D058               	goto	i2l680
 33650  0038E6                     
 33651                           ;uart_drv.c: 387: if (UartData == '\r')
 33652  0038E6  0E0D               	movlw	13
 33653  0038E8  1804               	xorwf	Uart_MdmGsmGprsReadService@UartData,w,c
 33654  0038EA  A4D8               	btfss	status,2,c
 33655  0038EC  D003               	goto	i2l682
 33656                           
 33657                           ;uart_drv.c: 388: {
 33658                           ;uart_drv.c: 390: RxState = CheckTermSeq1;
 33659  0038EE  0E01               	movlw	1
 33660  0038F0  6E2D               	movwf	Uart_MdmGsmGprsReadService@RxState,c
 33661                           
 33662                           ;uart_drv.c: 391: }
 33663  0038F2  0012               	return	
 33664  0038F4                     i2l682:
 33665                           
 33666                           ;uart_drv.c: 392: else
 33667                           ;uart_drv.c: 393: {
 33668                           ;uart_drv.c: 394: if (RxCounter < ((UINT16)(400)))
 33669  0038F4  0E90               	movlw	144
 33670  0038F6  5C23               	subwf	Uart_MdmGsmGprsReadService@RxCounter,w,c
 33671  0038F8  0E01               	movlw	1
 33672  0038FA  5824               	subwfb	Uart_MdmGsmGprsReadService@RxCounter+1,w,c
 33673  0038FC  B0D8               	btfsc	status,0,c
 33674  0038FE  0012               	return	
 33675                           
 33676                           ;uart_drv.c: 395: {
 33677                           ;uart_drv.c: 397: LocalRxBuffer[RxCounter] = UartData;
 33678  003900  0EC8               	movlw	low Uart_MdmGsmGprsReadService@LocalRxBuffer
 33679  003902  2423               	addwf	Uart_MdmGsmGprsReadService@RxCounter,w,c
 33680  003904  6ED9               	movwf	fsr2l,c
 33681  003906  0E0A               	movlw	high Uart_MdmGsmGprsReadService@LocalRxBuffer
 33682  003908  2024               	addwfc	Uart_MdmGsmGprsReadService@RxCounter+1,w,c
 33683  00390A  6EDA               	movwf	fsr2h,c
 33684  00390C  C004  FFDF         	movff	Uart_MdmGsmGprsReadService@UartData,indf2
 33685                           
 33686                           ;uart_drv.c: 399: RxCounter++;
 33687  003910  4A23               	infsnz	Uart_MdmGsmGprsReadService@RxCounter,f,c
 33688  003912  2A24               	incf	Uart_MdmGsmGprsReadService@RxCounter+1,f,c
 33689                           
 33690                           ;uart_drv.c: 400: }
 33691                           ;uart_drv.c: 401: }
 33692                           ;uart_drv.c: 402: break;
 33693  003914  0012               	return	
 33694  003916                     
 33695                           ;uart_drv.c: 406: if (UartData == '\n')
 33696  003916  0E0A               	movlw	10
 33697  003918  1804               	xorwf	Uart_MdmGsmGprsReadService@UartData,w,c
 33698  00391A  A4D8               	btfss	status,2,c
 33699  00391C  D035               	goto	i2l688
 33700                           
 33701                           ;uart_drv.c: 407: {
 33702                           ;uart_drv.c: 409: if (RxCounter > 0)
 33703  00391E  5023               	movf	Uart_MdmGsmGprsReadService@RxCounter,w,c
 33704  003920  1024               	iorwf	Uart_MdmGsmGprsReadService@RxCounter+1,w,c
 33705  003922  B4D8               	btfsc	status,2,c
 33706  003924  D031               	goto	i2l688
 33707                           
 33708                           ;uart_drv.c: 410: {
 33709                           ;uart_drv.c: 412: for (ServiceCounter = 0; ServiceCounter < RxCounter; ServiceCounter++)
 33710  003926  0E00               	movlw	0
 33711  003928  6E06               	movwf	Uart_MdmGsmGprsReadService@ServiceCounter+1,c
 33712  00392A  0E00               	movlw	0
 33713  00392C  6E05               	movwf	Uart_MdmGsmGprsReadService@ServiceCounter,c
 33714  00392E  D010               	goto	i2l689
 33715  003930                     
 33716                           ;uart_drv.c: 413: {
 33717                           ;uart_drv.c: 414: RxBuffer[ServiceCounter] = LocalRxBuffer[ServiceCounter];
 33718  003930  0EC8               	movlw	low Uart_MdmGsmGprsReadService@LocalRxBuffer
 33719  003932  2405               	addwf	Uart_MdmGsmGprsReadService@ServiceCounter,w,c
 33720  003934  6ED9               	movwf	fsr2l,c
 33721  003936  0E0A               	movlw	high Uart_MdmGsmGprsReadService@LocalRxBuffer
 33722  003938  2006               	addwfc	Uart_MdmGsmGprsReadService@ServiceCounter+1,w,c
 33723  00393A  6EDA               	movwf	fsr2h,c
 33724  00393C  0E58               	movlw	low _RxBuffer
 33725  00393E  2405               	addwf	Uart_MdmGsmGprsReadService@ServiceCounter,w,c
 33726  003940  6EE1               	movwf	fsr1l,c
 33727  003942  0E0C               	movlw	high _RxBuffer
 33728  003944  2006               	addwfc	Uart_MdmGsmGprsReadService@ServiceCounter+1,w,c
 33729  003946  6EE2               	movwf	fsr1h,c
 33730  003948  CFDF FFE7          	movff	indf2,indf1
 33731  00394C  4A05               	infsnz	Uart_MdmGsmGprsReadService@ServiceCounter,f,c
 33732  00394E  2A06               	incf	Uart_MdmGsmGprsReadService@ServiceCounter+1,f,c
 33733  003950                     i2l689:
 33734  003950  5023               	movf	Uart_MdmGsmGprsReadService@RxCounter,w,c
 33735  003952  5C05               	subwf	Uart_MdmGsmGprsReadService@ServiceCounter,w,c
 33736  003954  5024               	movf	Uart_MdmGsmGprsReadService@RxCounter+1,w,c
 33737  003956  5806               	subwfb	Uart_MdmGsmGprsReadService@ServiceCounter+1,w,c
 33738  003958  A0D8               	btfss	status,0,c
 33739  00395A  D7EA               	goto	i2l690
 33740                           
 33741                           ;uart_drv.c: 415: }
 33742                           ;uart_drv.c: 417: RxLen = RxCounter;
 33743  00395C  C023  F0BE         	movff	Uart_MdmGsmGprsReadService@RxCounter,_RxLen
 33744  003960  C024  F0BF         	movff	Uart_MdmGsmGprsReadService@RxCounter+1,_RxLen+1
 33745                           
 33746                           ;uart_drv.c: 419: GenerateEvt(&NewStringReceived);
 33747  003964  0E3C               	movlw	low _NewStringReceived
 33748  003966  6E01               	movwf	i2GenerateEvt@Event,c
 33749  003968  0E00               	movlw	high _NewStringReceived
 33750  00396A  6E02               	movwf	i2GenerateEvt@Event+1,c
 33751  00396C  EC51  F02F         	call	i2_GenerateEvt	;wreg free
 33752                           
 33753                           ;uart_drv.c: 420: GenerateEvt(&NewMdmEvtParserRequest);
 33754  003970  0E3B               	movlw	low _NewMdmEvtParserRequest
 33755  003972  6E01               	movwf	i2GenerateEvt@Event,c
 33756  003974  0E00               	movlw	high _NewMdmEvtParserRequest
 33757  003976  6E02               	movwf	i2GenerateEvt@Event+1,c
 33758  003978  EC51  F02F         	call	i2_GenerateEvt	;wreg free
 33759                           
 33760                           ;uart_drv.c: 421: GenerateEvt(&NewStringMdmTerminal);
 33761  00397C  0E3A               	movlw	low _NewStringMdmTerminal
 33762  00397E  6E01               	movwf	i2GenerateEvt@Event,c
 33763  003980  0E00               	movlw	high _NewStringMdmTerminal
 33764  003982  6E02               	movwf	i2GenerateEvt@Event+1,c
 33765  003984  EC51  F02F         	call	i2_GenerateEvt	;wreg free
 33766  003988                     i2l688:
 33767                           
 33768                           ;uart_drv.c: 427: }
 33769                           ;uart_drv.c: 429: RxState = ReadData;
 33770                           
 33771                           ;uart_drv.c: 424: else
 33772                           ;uart_drv.c: 425: {
 33773                           
 33774                           ;uart_drv.c: 422: }
 33775                           ;uart_drv.c: 423: }
 33776  003988  0E00               	movlw	0
 33777  00398A  6E2D               	movwf	Uart_MdmGsmGprsReadService@RxState,c
 33778                           
 33779                           ;uart_drv.c: 431: RxCounter = 0;
 33780  00398C  0E00               	movlw	0
 33781  00398E  6E24               	movwf	Uart_MdmGsmGprsReadService@RxCounter+1,c
 33782  003990  0E00               	movlw	0
 33783  003992  6E23               	movwf	Uart_MdmGsmGprsReadService@RxCounter,c
 33784                           
 33785                           ;uart_drv.c: 436: }
 33786                           
 33787                           ;uart_drv.c: 435: break;
 33788                           
 33789                           ;uart_drv.c: 434: default:
 33790                           
 33791                           ;uart_drv.c: 432: break;
 33792  003994  0012               	return	
 33793  003996                     i2l680:
 33794  003996  502D               	movf	Uart_MdmGsmGprsReadService@RxState,w,c
 33795                           
 33796                           ; Switch size 1, requested type "space"
 33797                           ; Number of cases is 2, Range of values is 0 to 1
 33798                           ; switch strategies available:
 33799                           ; Name         Instructions Cycles
 33800                           ; simple_byte            7     4 (average)
 33801                           ;	Chosen strategy is simple_byte
 33802  003998  0A00               	xorlw	0	; case 0
 33803  00399A  B4D8               	btfsc	status,2,c
 33804  00399C  D7A4               	goto	i2l681
 33805  00399E  0A01               	xorlw	1	; case 1
 33806  0039A0  A4D8               	btfss	status,2,c
 33807  0039A2  0012               	return	
 33808  0039A4  D7B8               	goto	i2l686
 33809  0039A6                     __end_of_Uart_MdmGsmGprsReadService:
 33810                           	opt stack 0
 33811                           tosu	equ	0xFFF
 33812                           tosh	equ	0xFFE
 33813                           tosl	equ	0xFFD
 33814                           pclatu	equ	0xFFB
 33815                           pclath	equ	0xFFA
 33816                           tblptru	equ	0xFF8
 33817                           tblptrh	equ	0xFF7
 33818                           tblptrl	equ	0xFF6
 33819                           tablat	equ	0xFF5
 33820                           prodh	equ	0xFF4
 33821                           prodl	equ	0xFF3
 33822                           intcon	equ	0xFF2
 33823                           intcon2	equ	0xFF1
 33824                           intcon3	equ	0xFF0
 33825                           indf0	equ	0xFEF
 33826                           postinc0	equ	0xFEE
 33827                           plusw0	equ	0xFEB
 33828                           fsr0h	equ	0xFEA
 33829                           fsr0l	equ	0xFE9
 33830                           wreg	equ	0xFE8
 33831                           indf1	equ	0xFE7
 33832                           postinc1	equ	0xFE6
 33833                           postdec1	equ	0xFE5
 33834                           plusw1	equ	0xFE3
 33835                           fsr1h	equ	0xFE2
 33836                           fsr1l	equ	0xFE1
 33837                           bsr	equ	0xFE0
 33838                           indf2	equ	0xFDF
 33839                           postinc2	equ	0xFDE
 33840                           postdec2	equ	0xFDD
 33841                           plusw2	equ	0xFDB
 33842                           fsr2h	equ	0xFDA
 33843                           fsr2l	equ	0xFD9
 33844                           status	equ	0xFD8
 33845                           
 33846 ;; *************** function i2_GenerateEvt *****************
 33847 ;; Defined at:
 33848 ;;		line 75 in file "../../MercuryFwk/Source/c/02_Osl/os_ser.c"
 33849 ;; Parameters:    Size  Location     Type
 33850 ;;  Event           2    0[COMRAM] PTR struct EventStructur
 33851 ;;		 -> AlarmEvent(1), I2cRxPacket(6), I2cReadDataEvt(1), I2cWriteDataEvt(1), 
 33852 ;;		 -> GetMethod(1), InitNetwork(1), MdmStsReady(1), SmsTxtReady(1), 
 33853 ;;		 -> GetSmsText(1), SmsEvent(1), RingEvent(1), SendSmsEvent(1), 
 33854 ;;		 -> NewStringMdmTerminal(1), NewMdmEvtParserRequest(1), NewStringReceived(1), MdmOnOffPulseRequest(1), 
 33855 ;;		 -> CallClosedEvent(1), IncomingCallEvent(1), NewSmsEvent(1), 
 33856 ;; Auto vars:     Size  Location     Type
 33857 ;;  GenerateEvt     1    2[COMRAM] enum E7727
 33858 ;; Return value:  Size  Location     Type
 33859 ;;                  1    wreg      enum E7699
 33860 ;; Registers used:
 33861 ;;		wreg, fsr2l, fsr2h, status,2
 33862 ;; Tracked objects:
 33863 ;;		On entry : 0/0
 33864 ;;		On exit  : 0/0
 33865 ;;		Unchanged: 0/0
 33866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33867 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33868 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33870 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33871 ;;Total ram usage:        3 bytes
 33872 ;; Hardware stack levels used:    1
 33873 ;; This function calls:
 33874 ;;		Nothing
 33875 ;; This function is called by:
 33876 ;;		_Uart_MdmGsmGprsReadService
 33877 ;; This function uses a non-reentrant model
 33878 ;;
 33879                           
 33880                           	psect	text168
 33881  005EA2                     __ptext168:
 33882                           	opt stack 0
 33883  005EA2                     i2_GenerateEvt:
 33884                           	opt stack 8
 33885                           
 33886                           ;os_ser.c: 78: EventStatusType EventStatus = EventIdle;
 33887                           
 33888                           ;incstack = 0
 33889  005EA2  0E00               	movlw	0
 33890  005EA4  6E03               	movwf	i2GenerateEvt@EventStatus,c
 33891                           
 33892                           ;os_ser.c: 81: Event->EventStatus = EventSent;
 33893  005EA6  C001  FFD9         	movff	i2GenerateEvt@Event,fsr2l
 33894  005EAA  C002  FFDA         	movff	i2GenerateEvt@Event+1,fsr2h
 33895  005EAE  0E02               	movlw	2
 33896  005EB0  6EDF               	movwf	indf2,c
 33897                           
 33898                           ;os_ser.c: 83: EventStatus = EventSent;
 33899  005EB2  0E02               	movlw	2
 33900  005EB4  6E03               	movwf	i2GenerateEvt@EventStatus,c
 33901  005EB6  0012               	return	
 33902  005EB8                     __end_ofi2_GenerateEvt:
 33903                           	opt stack 0
 33904                           tosu	equ	0xFFF
 33905                           tosh	equ	0xFFE
 33906                           tosl	equ	0xFFD
 33907                           pclatu	equ	0xFFB
 33908                           pclath	equ	0xFFA
 33909                           tblptru	equ	0xFF8
 33910                           tblptrh	equ	0xFF7
 33911                           tblptrl	equ	0xFF6
 33912                           tablat	equ	0xFF5
 33913                           prodh	equ	0xFF4
 33914                           prodl	equ	0xFF3
 33915                           intcon	equ	0xFF2
 33916                           intcon2	equ	0xFF1
 33917                           intcon3	equ	0xFF0
 33918                           indf0	equ	0xFEF
 33919                           postinc0	equ	0xFEE
 33920                           plusw0	equ	0xFEB
 33921                           fsr0h	equ	0xFEA
 33922                           fsr0l	equ	0xFE9
 33923                           wreg	equ	0xFE8
 33924                           indf1	equ	0xFE7
 33925                           postinc1	equ	0xFE6
 33926                           postdec1	equ	0xFE5
 33927                           plusw1	equ	0xFE3
 33928                           fsr1h	equ	0xFE2
 33929                           fsr1l	equ	0xFE1
 33930                           bsr	equ	0xFE0
 33931                           indf2	equ	0xFDF
 33932                           postinc2	equ	0xFDE
 33933                           postdec2	equ	0xFDD
 33934                           plusw2	equ	0xFDB
 33935                           fsr2h	equ	0xFDA
 33936                           fsr2l	equ	0xFD9
 33937                           status	equ	0xFD8
 33938                           
 33939 ;; *************** function _Rtcc_RtcIsr *****************
 33940 ;; Defined at:
 33941 ;;		line 537 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 33942 ;; Parameters:    Size  Location     Type
 33943 ;;		None
 33944 ;; Auto vars:     Size  Location     Type
 33945 ;;		None
 33946 ;; Return value:  Size  Location     Type
 33947 ;;                  1    wreg      void 
 33948 ;; Registers used:
 33949 ;;		wreg, status,2, status,0
 33950 ;; Tracked objects:
 33951 ;;		On entry : 0/0
 33952 ;;		On exit  : 0/0
 33953 ;;		Unchanged: 0/0
 33954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33956 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33958 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33959 ;;Total ram usage:        0 bytes
 33960 ;; Hardware stack levels used:    1
 33961 ;; This function calls:
 33962 ;;		Nothing
 33963 ;; This function is called by:
 33964 ;;		_HighPriorityIsr
 33965 ;; This function uses a non-reentrant model
 33966 ;;
 33967                           
 33968                           	psect	text169
 33969  005FD2                     __ptext169:
 33970                           	opt stack 0
 33971  005FD2                     _Rtcc_RtcIsr:
 33972                           	opt stack 10
 33973                           
 33974                           ;rtcc_drv.c: 540: PIR3bits.RTCCIF = 0u;
 33975                           
 33976                           ;incstack = 0
 33977  005FD2  90A4               	bcf	4004,0,c	;volatile
 33978  005FD4  0012               	return	
 33979  005FD6                     __end_of_Rtcc_RtcIsr:
 33980                           	opt stack 0
 33981                           tosu	equ	0xFFF
 33982                           tosh	equ	0xFFE
 33983                           tosl	equ	0xFFD
 33984                           pclatu	equ	0xFFB
 33985                           pclath	equ	0xFFA
 33986                           tblptru	equ	0xFF8
 33987                           tblptrh	equ	0xFF7
 33988                           tblptrl	equ	0xFF6
 33989                           tablat	equ	0xFF5
 33990                           prodh	equ	0xFF4
 33991                           prodl	equ	0xFF3
 33992                           intcon	equ	0xFF2
 33993                           intcon2	equ	0xFF1
 33994                           intcon3	equ	0xFF0
 33995                           indf0	equ	0xFEF
 33996                           postinc0	equ	0xFEE
 33997                           plusw0	equ	0xFEB
 33998                           fsr0h	equ	0xFEA
 33999                           fsr0l	equ	0xFE9
 34000                           wreg	equ	0xFE8
 34001                           indf1	equ	0xFE7
 34002                           postinc1	equ	0xFE6
 34003                           postdec1	equ	0xFE5
 34004                           plusw1	equ	0xFE3
 34005                           fsr1h	equ	0xFE2
 34006                           fsr1l	equ	0xFE1
 34007                           bsr	equ	0xFE0
 34008                           indf2	equ	0xFDF
 34009                           postinc2	equ	0xFDE
 34010                           postdec2	equ	0xFDD
 34011                           plusw2	equ	0xFDB
 34012                           fsr2h	equ	0xFDA
 34013                           fsr2l	equ	0xFD9
 34014                           status	equ	0xFD8
 34015                           
 34016 ;; *************** function _Mcu_Int1Isr *****************
 34017 ;; Defined at:
 34018 ;;		line 161 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
 34019 ;; Parameters:    Size  Location     Type
 34020 ;;		None
 34021 ;; Auto vars:     Size  Location     Type
 34022 ;;		None
 34023 ;; Return value:  Size  Location     Type
 34024 ;;                  1    wreg      void 
 34025 ;; Registers used:
 34026 ;;		wreg, status,2, status,0
 34027 ;; Tracked objects:
 34028 ;;		On entry : 0/0
 34029 ;;		On exit  : 0/0
 34030 ;;		Unchanged: 0/0
 34031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34032 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34033 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34035 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34036 ;;Total ram usage:        0 bytes
 34037 ;; Hardware stack levels used:    1
 34038 ;; This function calls:
 34039 ;;		Nothing
 34040 ;; This function is called by:
 34041 ;;		_HighPriorityIsr
 34042 ;; This function uses a non-reentrant model
 34043 ;;
 34044                           
 34045                           	psect	text170
 34046  005FD6                     __ptext170:
 34047                           	opt stack 0
 34048  005FD6                     _Mcu_Int1Isr:
 34049                           	opt stack 10
 34050                           
 34051                           ;mcu_drv.c: 164: INTCON3bits.INT1IF = 0u;
 34052                           
 34053                           ;incstack = 0
 34054  005FD6  90F0               	bcf	intcon3,0,c	;volatile
 34055  005FD8  0012               	return	
 34056  005FDA                     __end_of_Mcu_Int1Isr:
 34057                           	opt stack 0
 34058                           tosu	equ	0xFFF
 34059                           tosh	equ	0xFFE
 34060                           tosl	equ	0xFFD
 34061                           pclatu	equ	0xFFB
 34062                           pclath	equ	0xFFA
 34063                           tblptru	equ	0xFF8
 34064                           tblptrh	equ	0xFF7
 34065                           tblptrl	equ	0xFF6
 34066                           tablat	equ	0xFF5
 34067                           prodh	equ	0xFF4
 34068                           prodl	equ	0xFF3
 34069                           intcon	equ	0xFF2
 34070                           intcon2	equ	0xFF1
 34071                           intcon3	equ	0xFF0
 34072                           indf0	equ	0xFEF
 34073                           postinc0	equ	0xFEE
 34074                           plusw0	equ	0xFEB
 34075                           fsr0h	equ	0xFEA
 34076                           fsr0l	equ	0xFE9
 34077                           wreg	equ	0xFE8
 34078                           indf1	equ	0xFE7
 34079                           postinc1	equ	0xFE6
 34080                           postdec1	equ	0xFE5
 34081                           plusw1	equ	0xFE3
 34082                           fsr1h	equ	0xFE2
 34083                           fsr1l	equ	0xFE1
 34084                           bsr	equ	0xFE0
 34085                           indf2	equ	0xFDF
 34086                           postinc2	equ	0xFDE
 34087                           postdec2	equ	0xFDD
 34088                           plusw2	equ	0xFDB
 34089                           fsr2h	equ	0xFDA
 34090                           fsr2l	equ	0xFD9
 34091                           status	equ	0xFD8
 34092                           
 34093 ;; *************** function _Mcu_Int0Isr *****************
 34094 ;; Defined at:
 34095 ;;		line 126 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
 34096 ;; Parameters:    Size  Location     Type
 34097 ;;		None
 34098 ;; Auto vars:     Size  Location     Type
 34099 ;;		None
 34100 ;; Return value:  Size  Location     Type
 34101 ;;                  1    wreg      void 
 34102 ;; Registers used:
 34103 ;;		wreg, status,2, status,0
 34104 ;; Tracked objects:
 34105 ;;		On entry : 0/0
 34106 ;;		On exit  : 0/0
 34107 ;;		Unchanged: 0/0
 34108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34109 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34110 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34112 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34113 ;;Total ram usage:        0 bytes
 34114 ;; Hardware stack levels used:    1
 34115 ;; This function calls:
 34116 ;;		Nothing
 34117 ;; This function is called by:
 34118 ;;		_HighPriorityIsr
 34119 ;; This function uses a non-reentrant model
 34120 ;;
 34121                           
 34122                           	psect	text171
 34123  005FDA                     __ptext171:
 34124                           	opt stack 0
 34125  005FDA                     _Mcu_Int0Isr:
 34126                           	opt stack 10
 34127                           
 34128                           ;mcu_drv.c: 129: INTCONbits.INT0IF = 0u;
 34129                           
 34130                           ;incstack = 0
 34131  005FDA  92F2               	bcf	intcon,1,c	;volatile
 34132  005FDC  0012               	return	
 34133  005FDE                     __end_of_Mcu_Int0Isr:
 34134                           	opt stack 0
 34135                           tosu	equ	0xFFF
 34136                           tosh	equ	0xFFE
 34137                           tosl	equ	0xFFD
 34138                           pclatu	equ	0xFFB
 34139                           pclath	equ	0xFFA
 34140                           tblptru	equ	0xFF8
 34141                           tblptrh	equ	0xFF7
 34142                           tblptrl	equ	0xFF6
 34143                           tablat	equ	0xFF5
 34144                           prodh	equ	0xFF4
 34145                           prodl	equ	0xFF3
 34146                           intcon	equ	0xFF2
 34147                           intcon2	equ	0xFF1
 34148                           intcon3	equ	0xFF0
 34149                           indf0	equ	0xFEF
 34150                           postinc0	equ	0xFEE
 34151                           plusw0	equ	0xFEB
 34152                           fsr0h	equ	0xFEA
 34153                           fsr0l	equ	0xFE9
 34154                           wreg	equ	0xFE8
 34155                           indf1	equ	0xFE7
 34156                           postinc1	equ	0xFE6
 34157                           postdec1	equ	0xFE5
 34158                           plusw1	equ	0xFE3
 34159                           fsr1h	equ	0xFE2
 34160                           fsr1l	equ	0xFE1
 34161                           bsr	equ	0xFE0
 34162                           indf2	equ	0xFDF
 34163                           postinc2	equ	0xFDE
 34164                           postdec2	equ	0xFDD
 34165                           plusw2	equ	0xFDB
 34166                           fsr2h	equ	0xFDA
 34167                           fsr2l	equ	0xFD9
 34168                           status	equ	0xFD8
 34169                           tosu	equ	0xFFF
 34170                           tosh	equ	0xFFE
 34171                           tosl	equ	0xFFD
 34172                           pclatu	equ	0xFFB
 34173                           pclath	equ	0xFFA
 34174                           tblptru	equ	0xFF8
 34175                           tblptrh	equ	0xFF7
 34176                           tblptrl	equ	0xFF6
 34177                           tablat	equ	0xFF5
 34178                           prodh	equ	0xFF4
 34179                           prodl	equ	0xFF3
 34180                           intcon	equ	0xFF2
 34181                           intcon2	equ	0xFF1
 34182                           intcon3	equ	0xFF0
 34183                           indf0	equ	0xFEF
 34184                           postinc0	equ	0xFEE
 34185                           plusw0	equ	0xFEB
 34186                           fsr0h	equ	0xFEA
 34187                           fsr0l	equ	0xFE9
 34188                           wreg	equ	0xFE8
 34189                           indf1	equ	0xFE7
 34190                           postinc1	equ	0xFE6
 34191                           postdec1	equ	0xFE5
 34192                           plusw1	equ	0xFE3
 34193                           fsr1h	equ	0xFE2
 34194                           fsr1l	equ	0xFE1
 34195                           bsr	equ	0xFE0
 34196                           indf2	equ	0xFDF
 34197                           postinc2	equ	0xFDE
 34198                           postdec2	equ	0xFDD
 34199                           plusw2	equ	0xFDB
 34200                           fsr2h	equ	0xFDA
 34201                           fsr2l	equ	0xFD9
 34202                           status	equ	0xFD8
 34203                           
 34204                           	psect	text172
 34205  000000                     __ptext172:
 34206                           	opt stack 0
 34207                           tosu	equ	0xFFF
 34208                           tosh	equ	0xFFE
 34209                           tosl	equ	0xFFD
 34210                           pclatu	equ	0xFFB
 34211                           pclath	equ	0xFFA
 34212                           tblptru	equ	0xFF8
 34213                           tblptrh	equ	0xFF7
 34214                           tblptrl	equ	0xFF6
 34215                           tablat	equ	0xFF5
 34216                           prodh	equ	0xFF4
 34217                           prodl	equ	0xFF3
 34218                           intcon	equ	0xFF2
 34219                           intcon2	equ	0xFF1
 34220                           intcon3	equ	0xFF0
 34221                           indf0	equ	0xFEF
 34222                           postinc0	equ	0xFEE
 34223                           plusw0	equ	0xFEB
 34224                           fsr0h	equ	0xFEA
 34225                           fsr0l	equ	0xFE9
 34226                           wreg	equ	0xFE8
 34227                           indf1	equ	0xFE7
 34228                           postinc1	equ	0xFE6
 34229                           postdec1	equ	0xFE5
 34230                           plusw1	equ	0xFE3
 34231                           fsr1h	equ	0xFE2
 34232                           fsr1l	equ	0xFE1
 34233                           bsr	equ	0xFE0
 34234                           indf2	equ	0xFDF
 34235                           postinc2	equ	0xFDE
 34236                           postdec2	equ	0xFDD
 34237                           plusw2	equ	0xFDB
 34238                           fsr2h	equ	0xFDA
 34239                           fsr2l	equ	0xFD9
 34240                           status	equ	0xFD8
 34241                           
 34242                           	psect	rparam
 34243  0000                     tosu	equ	0xFFF
 34244                           tosh	equ	0xFFE
 34245                           tosl	equ	0xFFD
 34246                           pclatu	equ	0xFFB
 34247                           pclath	equ	0xFFA
 34248                           tblptru	equ	0xFF8
 34249                           tblptrh	equ	0xFF7
 34250                           tblptrl	equ	0xFF6
 34251                           tablat	equ	0xFF5
 34252                           prodh	equ	0xFF4
 34253                           prodl	equ	0xFF3
 34254                           intcon	equ	0xFF2
 34255                           intcon2	equ	0xFF1
 34256                           intcon3	equ	0xFF0
 34257                           indf0	equ	0xFEF
 34258                           postinc0	equ	0xFEE
 34259                           plusw0	equ	0xFEB
 34260                           fsr0h	equ	0xFEA
 34261                           fsr0l	equ	0xFE9
 34262                           wreg	equ	0xFE8
 34263                           indf1	equ	0xFE7
 34264                           postinc1	equ	0xFE6
 34265                           postdec1	equ	0xFE5
 34266                           plusw1	equ	0xFE3
 34267                           fsr1h	equ	0xFE2
 34268                           fsr1l	equ	0xFE1
 34269                           bsr	equ	0xFE0
 34270                           indf2	equ	0xFDF
 34271                           postinc2	equ	0xFDE
 34272                           postdec2	equ	0xFDD
 34273                           plusw2	equ	0xFDB
 34274                           fsr2h	equ	0xFDA
 34275                           fsr2l	equ	0xFD9
 34276                           status	equ	0xFD8
 34277                           
 34278                           	psect	temp
 34279  000042                     btemp:
 34280                           	opt stack 0
 34281  000042                     	ds	1
 34282  0000                     int$flags	set	btemp
 34283  0000                     wtemp6	set	btemp+1
 34284                           tosu	equ	0xFFF
 34285                           tosh	equ	0xFFE
 34286                           tosl	equ	0xFFD
 34287                           pclatu	equ	0xFFB
 34288                           pclath	equ	0xFFA
 34289                           tblptru	equ	0xFF8
 34290                           tblptrh	equ	0xFF7
 34291                           tblptrl	equ	0xFF6
 34292                           tablat	equ	0xFF5
 34293                           prodh	equ	0xFF4
 34294                           prodl	equ	0xFF3
 34295                           intcon	equ	0xFF2
 34296                           intcon2	equ	0xFF1
 34297                           intcon3	equ	0xFF0
 34298                           indf0	equ	0xFEF
 34299                           postinc0	equ	0xFEE
 34300                           plusw0	equ	0xFEB
 34301                           fsr0h	equ	0xFEA
 34302                           fsr0l	equ	0xFE9
 34303                           wreg	equ	0xFE8
 34304                           indf1	equ	0xFE7
 34305                           postinc1	equ	0xFE6
 34306                           postdec1	equ	0xFE5
 34307                           plusw1	equ	0xFE3
 34308                           fsr1h	equ	0xFE2
 34309                           fsr1l	equ	0xFE1
 34310                           bsr	equ	0xFE0
 34311                           indf2	equ	0xFDF
 34312                           postinc2	equ	0xFDE
 34313                           postdec2	equ	0xFDD
 34314                           plusw2	equ	0xFDB
 34315                           fsr2h	equ	0xFDA
 34316                           fsr2l	equ	0xFD9
 34317                           status	equ	0xFD8


Data Sizes:
    Strings     362
    Constant    567
    Data        178
    BSS         2325
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     34      65
    BANK0           160     76     127
    BANK1           256    201     255
    BANK2           256    200     256
    BANK3           256      0     250
    BANK4           192      0     185
    BANK5           256      0     210
    BANK6           256      0     220
    BANK7           256      0     246
    BANK8           256      0     200
    BANK9           256      0     200
    BANK10          256    200     200
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          192      0       0

Pointer List with Targets:

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 48
		 -> USTATcopy(BANK0[1]), USBActiveConfiguration(BANK0[1]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    xtoi@s	PTR const unsigned char  size(2) Largest target is 4
		 -> Terminal@Addr(BANK3[4]), 

    strtol@endptr	PTR PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strtol@s	PTR const unsigned char  size(2) Largest target is 80
		 -> Terminal@Payload(BANK5[80]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 42
		 -> STR_23(CODE[20]), STR_21(CODE[42]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 200
		 -> Term_MainSm@Data(BANK4[50]), Terminal@UsbTxBuffer(BANK2[200]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 200
		 -> Term_MainSm@Data(BANK4[50]), Terminal@UsbTxBuffer(BANK2[200]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_26(CODE[3]), STR_25(CODE[2]), STR_24(CODE[2]), Term_MainSm@FwkBuildStr(BANK1[4]), 
		 -> Term_MainSm@FwkMinorStr(BANK1[4]), Term_MainSm@FwkMajorStr(BANK1[4]), 

    strcat@to	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    strcat@cp	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    memset@p1	PTR void  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), USBAlternateInterface(BANK2[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), USBAlternateInterface(BANK2[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memcpy@d1	PTR void  size(2) Largest target is 8
		 -> SetupPkt(BIGRAMh[8]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 8
		 -> SetupPkt(BIGRAMh[8]), 

    memcpy@s1	PTR const void  size(2) Largest target is 3775
		 -> RAM(DATA[3775]), CtrlTrfData(BIGRAMh[8]), SetupPkt(BIGRAMh[8]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 3775
		 -> RAM(DATA[3775]), CtrlTrfData(BIGRAMh[8]), SetupPkt(BIGRAMh[8]), 

    utoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> Term_MainSm@FwkBuildStr(BANK1[4]), Term_MainSm@FwkMinorStr(BANK1[4]), Term_MainSm@FwkMajorStr(BANK1[4]), Terminal@Payload(BANK5[80]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> Terminal@Payload(BANK5[80]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 80
		 -> Terminal@Payload(BANK5[80]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 4
		 -> Terminal@Len(BANK3[4]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_27(CODE[17]), 

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_30(CODE[7]), STR_28(CODE[12]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    blinkForSeconds@blickTicks	PTR unsigned int  size(2) Largest target is 2
		 -> MyApp_Task@blickTicks(BANK3[2]), 

    secondsAppTimer@counter	PTR unsigned int  size(2) Largest target is 2
		 -> MyApp_Task@blickTicks(BANK3[2]), initGprsModem@modemCounter(BANK3[2]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 80
		 -> Term_MainSm@FwkBuildStr(BANK1[4]), Term_MainSm@FwkMinorStr(BANK1[4]), Term_MainSm@FwkMajorStr(BANK1[4]), Terminal@Payload(BANK5[80]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 200
		 -> Term_MainSm@Data(BANK4[50]), Terminal@UsbTxBuffer(BANK2[200]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 80
		 -> Terminal@Payload(BANK5[80]), 

    ClearBuffer@Buffer	PTR unsigned char  size(2) Largest target is 400
		 -> GsmGprsTerminal@UartBuffer(BANK9[200]), HttpGetMethod@UartMessage(BANK1[200]), InitGprsNetwork@UartMessage(BANK1[50]), RxBuffer(BIGRAMl[400]), 

    StringCopy@SourceStr	PTR unsigned char  size(2) Largest target is 400
		 -> STR_15(CODE[20]), STR_9(CODE[21]), MessageText(BANK7[50]), PhoneNumber(BANK4[20]), 
		 -> STR_5(CODE[10]), Mdm_SmsRx(BANK7[132]), RxBuffer(BIGRAMl[400]), 

    StringCopy@DestStr	PTR unsigned char  size(2) Largest target is 200
		 -> MyApp_Task@smsText(BANK1[50]), HttpGetMethod@UartMessage(BANK1[200]), InitGprsNetwork@UartMessage(BANK1[50]), MessageText(BANK7[50]), 
		 -> PhoneNumber(BANK4[20]), SendSmsSm@UartMessage(BANK1[50]), Mdm_SmsRx(BANK7[132]), 

    StringCompare@String2	PTR unsigned char  size(2) Largest target is 400
		 -> RxBuffer(BIGRAMl[400]), 

    StringCompare@String1	PTR unsigned char  size(2) Largest target is 10
		 -> ModemEvtParser@CallReadyString(BANK0[10]), ModemEvtParser@SmsString(BANK0[5]), ModemEvtParser@RingString(BANK0[4]), 

    LedStateMachine@LedSts	PTR enum E8934 size(2) Largest target is 1
		 -> Led3Sts(BANK1[1]), Led2Sts(BANK1[1]), Led1Sts(BANK1[1]), 

    LedStateMachine@LedPulse	PTR struct _LedPulseType size(2) Largest target is 6
		 -> Led3Pulse(BANK3[6]), Led2Pulse(BANK3[6]), Led1Pulse(BANK3[6]), 

    LedStateMachine@LedBlink	PTR struct _LedBlinkType size(2) Largest target is 9
		 -> Led3Blink(BANK3[9]), Led2Blink(BANK3[9]), Led1Blink(BANK3[9]), 

    LedStateMachine@LedOut	PTR unsigned char  size(2) Largest target is 1
		 -> Led3OutSts(BANK1[1]), Led2OutSts(BANK1[1]), Led1OutSts(BANK1[1]), 

    LedPulseStateMachine@LedPulse	PTR struct _LedPulseType size(2) Largest target is 6
		 -> Led3Pulse(BANK3[6]), Led2Pulse(BANK3[6]), Led1Pulse(BANK3[6]), 

    LedBlinkStateMachine@LedBlink	PTR struct _LedBlinkType size(2) Largest target is 9
		 -> Led3Blink(BANK3[9]), Led2Blink(BANK3[9]), Led1Blink(BANK3[9]), 

    putUSBUSART@data	PTR unsigned char  size(2) Largest target is 400
		 -> MsgReady(CODE[23]), Term_MainSm@Data(BANK4[50]), MsgFormat(CODE[240]), Welcome(CODE[137]), 
		 -> Terminal@UsbTxBuffer(BANK2[200]), Terminal@TermRxBuffer(BANK5[50]), Terminal@Payload(BANK5[80]), Terminal@UsbRxBuffer(BANK10[200]), 
		 -> RxBuffer(BIGRAMl[400]), 

    getsUSBUSART@buffer	PTR unsigned char  size(2) Largest target is 200
		 -> Terminal@UsbRxBuffer(BANK10[200]), GsmGprsTerminal@UsbBuffer(BANK8[200]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pCDCDst.wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S4602$wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S4602$bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S4602$wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S4602$bRam	PTR unsigned char  size(2) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    sp__memcpy	PTR void  size(2) Largest target is 8
		 -> SetupPkt(BIGRAMh[8]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pDst	PTR unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMh[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx(BANK7[64]), cdc_data_rx(BANK4[64]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    S3055$pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S3045$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S3045$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S3021$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S3021$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S3021$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S3021$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), USBAlternateInterface(BANK2[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 38
		 -> sd002(CODE[38]), sd001(CODE[30]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 

    I2cSlv_ReceiveI2cMsg@RxBuffer	PTR unsigned char  size(2) Largest target is 50
		 -> Terminal@TermRxBuffer(BANK5[50]), 

    I2cSlv_SendI2cMsg@TxBuffer	PTR unsigned char  size(2) Largest target is 50
		 -> triggerRelay@txBuffer(COMRAM[2]), Terminal@TermTxBuffer(BANK1[50]), I2cDummyTx@DummyBuffer(BANK1[1]), 

    I2cRxPacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> Terminal@TermRxBuffer(BANK5[50]), 

    I2cTxPacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> triggerRelay@txBuffer(COMRAM[2]), Terminal@TermTxBuffer(BANK1[50]), I2cDummyTx@DummyBuffer(BANK1[1]), 

    MdmHttp_GetMethod@GetData.RespBuffer	PTR unsigned char  size(2) Largest target is 0

    MdmHttp_GetMethod@GetData.Url	PTR unsigned char  size(2) Largest target is 0

    ApnLocal	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    HttpGetMethod@GetData.RespBuffer	PTR unsigned char  size(2) Largest target is 0

    HttpGetMethod@GetData.Url	PTR unsigned char  size(2) Largest target is 0

    HttpGetMethod@GetData	PTR struct _HttpGetDataType size(2) Largest target is 7
		 -> HttpGetDataLocal(BANK3[5]), 

    InitGprsNetwork@Apn	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2517_HttpGetDataType$RespBuffer	PTR unsigned char  size(2) Largest target is 0

    HttpGetDataLocal.RespBuffer	PTR unsigned char  size(2) Largest target is 0

    S2517_HttpGetDataType$Url	PTR unsigned char  size(2) Largest target is 0

    HttpGetDataLocal.Url	PTR unsigned char  size(2) Largest target is 0

    Mdm_GetSmsData@MessageText	PTR unsigned char  size(2) Largest target is 50
		 -> MyApp_Task@smsText(BANK1[50]), 

    OsTmr_GetTimerStatus@Timer	PTR struct _SwTimerType size(2) Largest target is 11
		 -> Term_MainSm@TermDelay(BANK3[11]), Terminal@SwTimer(BANK4[11]), I2cSlv_QueryI2cData@TimeoutTimer(BANK3[11]), I2cSlv_QueryI2cData@QueryTimer(BANK3[11]), 
		 -> ConnWait(BANK3[11]), ConnTimeout(BANK2[11]), SendSmsSm@SwTimer(BANK3[11]), CheckModem@Timeout(BANK3[11]), 

    OsTmr_Wait@WaitTimer	PTR struct _SwTimerType size(2) Largest target is 11
		 -> Terminal@SwTimer(BANK4[11]), I2cSlv_QueryI2cData@QueryTimer(BANK3[11]), 

    OsTmr_StartTimer@Timer	PTR struct _SwTimerType size(2) Largest target is 11
		 -> Term_MainSm@TermDelay(BANK3[11]), Terminal@SwTimer(BANK4[11]), I2cSlv_QueryI2cData@TimeoutTimer(BANK3[11]), I2cSlv_QueryI2cData@QueryTimer(BANK3[11]), 
		 -> ConnWait(BANK3[11]), ConnTimeout(BANK2[11]), SendSmsSm@SwTimer(BANK3[11]), CheckModem@Timeout(BANK3[11]), 

    ReceiveEvt@Event	PTR struct EventStructure size(2) Largest target is 7
		 -> I2cRxPacket(BANK3[6]), I2cReadDataEvt(BANK0[1]), I2cWriteDataEvt(BANK0[1]), GetMethod(BANK0[1]), 
		 -> InitNetwork(BANK0[1]), SmsTxtReady(BANK0[1]), GetSmsText(BANK0[1]), SmsEvent(BANK0[1]), 
		 -> RingEvent(BANK0[1]), SendSmsEvent(BANK0[1]), NewStringMdmTerminal(COMRAM[1]), NewMdmEvtParserRequest(COMRAM[1]), 
		 -> NewStringReceived(COMRAM[1]), MdmResetRequest(COMRAM[1]), MdmOnOffPulseRequest(BANK0[1]), ActivateRiDetection(COMRAM[1]), 

    GenerateEvt@Event	PTR struct EventStructure size(2) Largest target is 7
		 -> AlarmEvent(BANK1[1]), I2cRxPacket(BANK3[6]), I2cReadDataEvt(BANK0[1]), I2cWriteDataEvt(BANK0[1]), 
		 -> GetMethod(BANK0[1]), InitNetwork(BANK0[1]), MdmStsReady(COMRAM[1]), SmsTxtReady(BANK0[1]), 
		 -> GetSmsText(BANK0[1]), SmsEvent(BANK0[1]), RingEvent(BANK0[1]), SendSmsEvent(BANK0[1]), 
		 -> NewStringMdmTerminal(COMRAM[1]), NewMdmEvtParserRequest(COMRAM[1]), NewStringReceived(COMRAM[1]), MdmOnOffPulseRequest(BANK0[1]), 
		 -> CallClosedEvent(COMRAM[1]), IncomingCallEvent(COMRAM[1]), NewSmsEvent(COMRAM[1]), 

    S2049_SchedTblType$Task	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> MyApp_Task(), Term_MainTask(), Rtcm_MainTask(), Led_MainTask(), 
		 -> Wdg_MainTask(), UsbDevice_MainTask(), MdmHttp_MainTask(), Mdm_MainTask(), 
		 -> I2cSlv_MainTask(), Mdm_DrvMainFn(), 

    TaskTable.Task	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> MyApp_Task(), Term_MainTask(), Rtcm_MainTask(), Led_MainTask(), 
		 -> Wdg_MainTask(), UsbDevice_MainTask(), MdmHttp_MainTask(), Mdm_MainTask(), 
		 -> I2cSlv_MainTask(), Mdm_DrvMainFn(), 

    OsAlrm_SetOsAlarm@AlarmCallback	PTR FTN()void  size(2) Largest target is 1
		 -> I2cDummyTx(), 

    S2014_OsAlarmType$AlrmCbk	PTR FTN()void  size(2) Largest target is 1
		 -> I2cDummyTx(), 

    OsAlarms.AlrmCbk	PTR FTN()void  size(2) Largest target is 1
		 -> I2cDummyTx(), 

    Uart_WriteStringLen@StringToWrite	PTR unsigned char  size(2) Largest target is 200
		 -> GsmGprsTerminal@UartBuffer(BANK9[200]), SendSmsSm@UartMessage(BANK1[50]), 

    Uart_WriteString@StringToWrite	PTR unsigned char  size(2) Largest target is 200
		 -> HttpGetMethod@UartMessage(BANK1[200]), InitGprsNetwork@UartMessage(BANK1[50]), Mdm_MakePhoneCall@UartMessage(COMRAM[25]), Mdm_SetSmsFormat@UartMessage(COMRAM[20]), 
		 -> Mdm_PinUnlock@UartMessage(COMRAM[13]), 

    Uart_WriteConstString@ConstStringToWrite	PTR const unsigned char  size(2) Largest target is 31
		 -> STR_29(CODE[5]), STR_20(CODE[14]), STR_19(CODE[14]), STR_18(CODE[13]), 
		 -> STR_17(CODE[13]), STR_16(CODE[17]), STR_14(CODE[21]), STR_13(CODE[14]), 
		 -> STR_12(CODE[13]), STR_11(CODE[14]), STR_10(CODE[14]), STR_8(CODE[31]), 
		 -> STR_7(CODE[5]), STR_6(CODE[5]), STR_4(CODE[11]), STR_3(CODE[7]), 
		 -> STR_2(CODE[14]), STR_1(CODE[5]), 

    Uart_InitUartModule@UartConfig	PTR struct _UartConfig size(2) Largest target is 21
		 -> UartConfig(BANK3[21]), 

    SetUartBaudRate@UartConfig	PTR struct _UartConfig size(2) Largest target is 21
		 -> UartConfig(BANK3[21]), 

    Tmr4IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Tmr_RegisterTmr2IsrCallback@IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Sch_SchmIntService(), 

    Tmr2IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Sch_SchmIntService(), Absolute function(), 

    Tmr_TmrBConfig@TmrBConfig	PTR struct _TmrBConfigType size(2) Largest target is 7
		 -> InitAuxTimer@TmrBConfig(COMRAM[7]), InitSchedTimer@TmrBConfig(BANK0[7]), 

    RtccIsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Rtcc_AlarmConfig@AlarmConfig	PTR struct _RtccAlarmConfigType size(2) Largest target is 4
		 -> AlCfg(BANK3[4]), 

    Rtcc_RtcConfig@RtcConfig	PTR struct _RtccConfigType size(2) Largest target is 4
		 -> RtcConfig(BANK3[4]), 

    ExtInt1IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    ExtInt0IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S566_I2cReadPacket$Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> Terminal@TermRxBuffer(BANK5[50]), 

    I2c_ReadData@ReadPacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> Terminal@TermRxBuffer(BANK5[50]), 

    I2c_ReadData@ReadPacket	PTR struct _I2cReadPacket size(2) Largest target is 7
		 -> I2cRxPacket(BANK3[6]), 

    S539_I2cWritePacket$Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> triggerRelay@txBuffer(COMRAM[2]), Terminal@TermTxBuffer(BANK1[50]), I2cDummyTx@DummyBuffer(BANK1[1]), 

    I2c_WriteData@WritePacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> triggerRelay@txBuffer(COMRAM[2]), Terminal@TermTxBuffer(BANK1[50]), I2cDummyTx@DummyBuffer(BANK1[1]), 

    I2c_WriteData@WritePacket	PTR struct _I2cWritePacket size(2) Largest target is 6
		 -> I2cTxPacket(BANK3[5]), 

    I2c_InitI2cModule@I2cConfig	PTR struct _I2cConfig size(2) Largest target is 10
		 -> I2cConfig(BANK3[10]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _LowPriorityIsr in COMRAM

    _Sch_SchmIntService->_OsAlrm_ProcessOsAlarms
    _I2cDummyTx->i1_I2cSlv_SendI2cMsg
    i1_I2cSlv_SendI2cMsg->i1_GenerateEvt

Critical Paths under _HighPriorityIsr in COMRAM

    _Uart_Uart1RxIsr->_Uart_MdmGsmGprsReadService
    _Uart_MdmGsmGprsReadService->i2_GenerateEvt

Critical Paths under _main in BANK0

    _SystemInit->_InitSchedTimer
    _InitSchedTimer->_Tmr_TmrBConfig
    _Tmr_TmrBConfig->_Tmr_TmrBPrSet
    _Tmr_TmrBPrSet->___lldiv
    _Sch_MainScheduler->_ScheduleTasks
    _Wdg_MainTask->_Mcu_SetWdgSts
    _UsbDevice_MainTask->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBDeviceInit->_memset
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService
    _CDCTxService->_USBTransferOnePacket
    _Term_MainSm->_Terminal
    _Terminal->_OsTmr_Wait
    _xtoi->_isxdigit
    _isxdigit->_isdigit
    _strtol->___lmul
    _isalpha->_isupper
    _putUSBUSART->_strlen
    _itoa->_utoa
    _utoa->___lwdiv
    _getsUSBUSART->_USBTransferOnePacket
    _atoi->___wmul
    _OsTmr_Wait->_OsTmr_GetTimerStatus
    _I2cSlv_SendI2cMsg->_GenerateEvt
    _I2cSlv_ReceiveI2cMsg->_GenerateEvt
    _I2cSlv_I2cReadMsgSts->_ReceiveEvt
    _Rtcm_MainTask->_Rtcm_GetRtccDate
    _Rtcm_SetRtccDate->_Rtcc_SetRtccValue
    _Rtcc_SetRtccValue->___awdiv
    _Rtcm_GetRtccDate->_Rtcc_GetRtccValue
    _Rtcc_RtcConfig->_RtccIrqInit
    _MyApp_Task->_blinkForSeconds
    _initGprsModem->_secondsAppTimer
    _blinkForSeconds->_secondsAppTimer
    _secondsAppTimer->___lwdiv
    _Mdm_RequestSmsData->_GenerateEvt
    _Mdm_IsSmsReceived->_ReceiveEvt
    _Mdm_IsRinging->_ReceiveEvt
    _Mdm_GetSmsData->_StringCopy
    _Mdm_MainTask->_Uart_InitUartModule
    _TurnOnModem->_GenerateEvt
    _SendSmsSm->_OsTmr_GetTimerStatus
    _Uart_WriteStringLen->_UartTxBufferStatus
    _ModemEvtParser->_StringCompare
    _GetSmsSm->_StringCopy
    _ConfigureModem->_Uart_InitUartModule
    _Uart_InitUartModule->_SetUartBaudRate
    _SetUartBaudRate->___lldiv
    _CheckModem->_OsTmr_GetTimerStatus
    _MdmCntSm->_ReceiveEvt
    _MdmHttp_MainTask->_HttpGetMethod
    _InitGprsNetwork->_OsTmr_GetTimerStatus
    _HttpGetMethod->_OsTmr_GetTimerStatus
    _Uart_WriteString->_UartTxBufferStatus
    _Uart_WriteConstString->_UartTxBufferStatus
    _OsTmr_StartTimer->_GetOsTickCounter
    _OsTmr_GetTimerStatus->_GetElapsedTime
    _GetElapsedTime->_GetOsTickCounter
    _Led_MainTask->_LedStateMachine
    _LedStateMachine->_LedPulseStateMachine
    _LedPulseStateMachine->___lwdiv
    _LedBlinkStateMachine->___lwdiv
    ___lwdiv->___wmul
    _I2cSlv_MainTask->_I2c_InitI2cModule
    _OsAlrm_SetOsAlarm->___wmul
    _I2c_InitI2cModule->_SetBaudRate
    _SetBaudRate->___lldiv
    ___lldiv->___lmul
    _I2cSendMsgSm->_I2c_ReadData
    _I2c_WriteData->_WriteByte
    _I2c_ReadData->_GenerateEvt

Critical Paths under _LowPriorityIsr in BANK0

    _Sch_SchmIntService->_OsAlrm_ProcessOsAlarms

Critical Paths under _HighPriorityIsr in BANK0

    None.

Critical Paths under _main in BANK1

    _Term_MainTask->_Term_MainSm
    _Term_MainSm->_Terminal
    _Mdm_MainTask->_SendSmsSm
    _MdmHttp_MainTask->_HttpGetMethod

Critical Paths under _LowPriorityIsr in BANK1

    None.

Critical Paths under _HighPriorityIsr in BANK1

    None.

Critical Paths under _main in BANK2

    _Term_MainSm->_Terminal

Critical Paths under _LowPriorityIsr in BANK2

    None.

Critical Paths under _HighPriorityIsr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _LowPriorityIsr in BANK3

    None.

Critical Paths under _HighPriorityIsr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _LowPriorityIsr in BANK4

    None.

Critical Paths under _HighPriorityIsr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _LowPriorityIsr in BANK5

    None.

Critical Paths under _HighPriorityIsr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _LowPriorityIsr in BANK6

    None.

Critical Paths under _HighPriorityIsr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _LowPriorityIsr in BANK7

    None.

Critical Paths under _HighPriorityIsr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _LowPriorityIsr in BANK8

    None.

Critical Paths under _HighPriorityIsr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _LowPriorityIsr in BANK9

    None.

Critical Paths under _HighPriorityIsr in BANK9

    None.

Critical Paths under _main in BANK10

    _Term_MainSm->_Terminal

Critical Paths under _LowPriorityIsr in BANK10

    None.

Critical Paths under _HighPriorityIsr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _LowPriorityIsr in BANK11

    None.

Critical Paths under _HighPriorityIsr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _LowPriorityIsr in BANK12

    None.

Critical Paths under _HighPriorityIsr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _LowPriorityIsr in BANK13

    None.

Critical Paths under _HighPriorityIsr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _LowPriorityIsr in BANK14

    None.

Critical Paths under _HighPriorityIsr in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  564304
                  _Sch_MainScheduler
                         _SystemInit
 ---------------------------------------------------------------------------------
 (1) _SystemInit                                           0     0      0    4410
                     _InitSchedTimer
              _Irq_InitIntController
                   _Mcu_ConfigExtInt
                 _Mcu_StartSystemPll
             _Pm_DsReleasePinControl
        _Tmr_RegisterTmr2IsrCallback
 ---------------------------------------------------------------------------------
 (2) _Tmr_RegisterTmr2IsrCallback                          2     0      2     111
                                             29 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _Pm_DsReleasePinControl                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Mcu_StartSystemPll                                   2     2      0      23
                                             29 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _Mcu_ConfigExtInt                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Irq_InitIntController                                3     1      2     244
                                             29 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _InitSchedTimer                                       7     7      0    4032
                                             68 BANK0      7     7      0
                     _Tmr_TmrBConfig
 ---------------------------------------------------------------------------------
 (3) _Tmr_TmrBConfig                                       4     2      2    3786
                                             64 BANK0      4     2      2
                           _TmrBInit
                       _Tmr_StartTmr
                     _Tmr_TmrBIrqSet
                      _Tmr_TmrBPrSet
 ---------------------------------------------------------------------------------
 (4) _Tmr_TmrBPrSet                                       10     6      4    2368
                                             54 BANK0     10     6      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) _Tmr_TmrBIrqSet                                       3     1      2     466
                                             29 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (4) _Tmr_StartTmr                                         1     1      0      22
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _TmrBInit                                             4     2      2     288
                                             29 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _Sch_MainScheduler                                    0     0      0  559894
                    _InitializeTasks
                      _ScheduleTasks
 ---------------------------------------------------------------------------------
 (2) _ScheduleTasks                                        5     5      0  280040
                                             71 BANK0      5     5      0
                    _I2cSlv_MainTask *
                       _Led_MainTask *
                   _MdmHttp_MainTask *
                      _Mdm_DrvMainFn *
                       _Mdm_MainTask *
                         _MyApp_Task *
                      _Rtcm_MainTask *
                      _Term_MainTask *
                 _UsbDevice_MainTask *
                       _Wdg_MainTask *
 ---------------------------------------------------------------------------------
 (2) _InitializeTasks                                      3     3      0  279854
                                             71 BANK0      3     3      0
                    _I2cSlv_MainTask *
                       _Led_MainTask *
                   _MdmHttp_MainTask *
                      _Mdm_DrvMainFn *
                       _Mdm_MainTask *
                         _MyApp_Task *
                      _Rtcm_MainTask *
                      _Term_MainTask *
                 _UsbDevice_MainTask *
                       _Wdg_MainTask *
 ---------------------------------------------------------------------------------
 (3) _Wdg_MainTask                                         1     1      0      22
                       _Mcu_ClearWdg
                      _Mcu_SetWdgSts
 ---------------------------------------------------------------------------------
 (4) _Mcu_SetWdgSts                                        1     1      0      22
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Mcu_ClearWdg                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _UsbDevice_MainTask                                   1     1      0   51775
                       _CDCTxService
                      _USBDeviceInit
                     _USBDeviceTasks
 ---------------------------------------------------------------------------------
 (4) _USBDeviceTasks                                       1     1      0   47243
                                             56 BANK0      1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                      _USBDeviceInit
      _USBIncrement1msInternalTimers
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBWakeFromSuspend                                   0     0      0    5915
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBSuspend                                           0     0      0    5915
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBStallHandler                                      1     1      0       0
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _USBIncrement1msInternalTimers                        0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _USBDeviceInit                                        1     1      0    2300
                                             37 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPService                                     1     1      0   27130
                                             55 BANK0      1     1      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
                             _memcpy
 ---------------------------------------------------------------------------------
 (6) _memcpy                                              11     5      6     410
                                             29 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfSetupHandler                               0     0      0   26491
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (7) _USBCtrlEPServiceComplete                             0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (8) _USBCtrlEPAllowDataStage                              0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (7) _USBCheckStdRequest                                   0     0      0   20484
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (8) _USBStdSetCfgHandler                                  1     1      0    8054
                                             49 BANK0      1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                             _memset
 ---------------------------------------------------------------------------------
 (8) _USBStdGetStatusHandler                               3     3      0      46
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (8) _USBStdGetDscHandler                                  2     2      0       0
                                             29 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (8) _USBStdFeatureReqHandler                              6     6      0    6469
                                             49 BANK0      6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USER_USB_CALLBACK_EVENT_HANDLER                      8     2      6    5915
                                             41 BANK0      8     2      6
                          _CDCInitEP
                 _USBCheckCDCRequest
 ---------------------------------------------------------------------------------
 (6) _USBCheckCDCRequest                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _CDCInitEP                                            0     0      0    2764
                  _USBEnableEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (7) _USBEnableEndpoint                                    4     3      1     733
                                             37 BANK0      4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (8) _USBConfigureEndpoint                                 8     7      1     400
                                             29 BANK0      8     7      1
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfOutHandler                                 0     0      0     114
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (7) _USBCtrlTrfRxService                                  2     2      0     114
                                             29 BANK0      2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (8) _USBCtrlEPAllowStatusStage                            0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfInHandler                                  1     1      0     115
                                             30 BANK0      1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (9) _USBCtrlTrfTxService                                  1     1      0      92
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _CDCTxService                                         2     2      0    2232
                                             36 BANK0      2     2      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _Term_MainTask                                        1     1      0   58418
                        _Term_MainSm
 ---------------------------------------------------------------------------------
 (4) _Term_MainSm                                         24    24      0   58418
                                             50 BANK1     12    12      0
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                           _Terminal
                             _memset
                        _putUSBUSART
                            _sprintf
                             _strcat
                             _strcpy
                             _strlen
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _strlen                                               6     4      2     338
                                             29 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcat                                               6     2      4    1391
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) _sprintf                                             21    15      6     579
                                             29 BANK0     12     6      6
 ---------------------------------------------------------------------------------
 (6) _memset                                               8     2      6    2009
                                             29 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (5) _Terminal                                           455   455      0   41208
                                             66 BANK0      5     5      0
                                              0 BANK1     50    50      0
                                              0 BANK2    200   200      0
                                              0 BANK10   200   200      0
               _I2cSlv_I2cReadMsgSts
               _I2cSlv_ReceiveI2cMsg
                  _I2cSlv_SendI2cMsg
                         _OsTmr_Wait
                               _atoi
                       _getsUSBUSART
                               _itoa
                        _putUSBUSART
                             _strcpy
                             _strtol
                               _xtoi
 ---------------------------------------------------------------------------------
 (6) _xtoi                                                 8     6      2    1300
                                             35 BANK0      8     6      2
                            _isdigit
                            _isspace
                            _isupper
                           _isxdigit
                            _tolower
 ---------------------------------------------------------------------------------
 (7) _tolower                                              1     1      0      96
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _isxdigit                                             3     3      0     291
                                             32 BANK0      3     3      0
                            _isdigit
 ---------------------------------------------------------------------------------
 (6) _strtol                                              16    10      6    2703
                                             41 BANK0     16    10      6
                             ___lmul
                            _isalpha
                            _isdigit
                            _isspace
                            _toupper
 ---------------------------------------------------------------------------------
 (7) _toupper                                              1     1      0      96
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _isspace                                              3     3      0     130
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (7) _isalpha                                              3     3      0     229
                                             32 BANK0      3     3      0
                            _isupper
 ---------------------------------------------------------------------------------
 (7) _isupper                                              3     3      0      99
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               6     2      4     525
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) _putUSBUSART                                          3     0      3    2350
                                             35 BANK0      3     0      3
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (6) _itoa                                                 8     2      6    3910
                                             51 BANK0      8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _utoa                                                 9     3      6    3365
                                             42 BANK0      9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (6) ___lwmod                                              5     1      4     440
                                             29 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (6) _getsUSBUSART                                         4     1      3    2543
                                             36 BANK0      4     1      3
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (7) _USBTransferOnePacket                                 7     3      4    2031
                                             29 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (6) _atoi                                                 7     5      2    9683
                                             35 BANK0      7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (8) _isdigit                                              3     3      0      99
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (6) _OsTmr_Wait                                           7     1      6    7061
                                             59 BANK0      7     1      6
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
 ---------------------------------------------------------------------------------
 (6) _I2cSlv_SendI2cMsg                                    5     1      4    3295
                                             32 BANK0      5     1      4
                        _GenerateEvt
 ---------------------------------------------------------------------------------
 (6) _I2cSlv_ReceiveI2cMsg                                 5     1      4    2752
                                             32 BANK0      5     1      4
                        _GenerateEvt
 ---------------------------------------------------------------------------------
 (6) _I2cSlv_I2cReadMsgSts                                 1     1      0    2635
                                             33 BANK0      1     1      0
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (3) _Rtcm_MainTask                                        1     1      0    7334
                   _Rtcc_AlarmConfig
                       _Rtcc_LockRtc
                     _Rtcc_RtcConfig
                  _Rtcc_SetRtcStatus
                     _Rtcc_UnlockRtc
                   _Rtcm_GetRtccDate
                   _Rtcm_SetRtccDate
 ---------------------------------------------------------------------------------
 (4) _Rtcm_SetRtccDate                                     8     0      8    6426
                                             41 BANK0      8     0      8
                       _Rtcc_LockRtc
                  _Rtcc_SetRtccValue
                     _Rtcc_UnlockRtc
 ---------------------------------------------------------------------------------
 (5) _Rtcc_UnlockRtc                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _Rtcc_SetRtccValue                                    4     3      1    6177
                                             37 BANK0      4     3      1
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4    2610
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4    2614
                                             29 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (5) _Rtcc_LockRtc                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _Rtcm_GetRtccDate                                    17     9      8     488
                                             33 BANK0     17     9      8
                  _Rtcc_GetRtccValue
 ---------------------------------------------------------------------------------
 (5) _Rtcc_GetRtccValue                                    4     4      0     321
                                             29 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (4) _Rtcc_SetRtcStatus                                    1     1      0      22
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Rtcc_RtcConfig                                       3     1      2     221
                                             30 BANK0      3     1      2
                        _RtccIrqInit
 ---------------------------------------------------------------------------------
 (5) _RtccIrqInit                                          1     1      0      22
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Rtcc_AlarmConfig                                     3     1      2     177
                                             29 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (3) _MyApp_Task                                          67    67      0   40161
                                              0 BANK1     66    66      0
                _Led_SetLedBlinkTime
                     _Mdm_GetSmsData
                      _Mdm_IsRinging
                  _Mdm_IsSmsReceived
                 _Mdm_RequestSmsData
                    _blinkForSeconds
                      _initGprsModem
 ---------------------------------------------------------------------------------
 (4) _initGprsModem                                        0     0      0   14201
                   _Led_SetLedStatus
              _Uart_WriteConstString
                    _secondsAppTimer
 ---------------------------------------------------------------------------------
 (4) _blinkForSeconds                                      3     1      2   11824
                                             51 BANK0      3     1      2
                   _Led_SetLedStatus
                    _secondsAppTimer
 ---------------------------------------------------------------------------------
 (5) _secondsAppTimer                                      9     6      3   10910
                                             42 BANK0      9     6      3
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) _Mdm_RequestSmsData                                   0     0      0    2019
                        _GenerateEvt
 ---------------------------------------------------------------------------------
 (4) _Mdm_IsSmsReceived                                    1     1      0    2635
                                             33 BANK0      1     1      0
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (4) _Mdm_IsRinging                                        1     1      0    2635
                                             33 BANK0      1     1      0
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (4) _Mdm_GetSmsData                                       3     1      2    6373
                                             39 BANK0      3     1      2
                         _ReceiveEvt
                         _StringCopy
 ---------------------------------------------------------------------------------
 (4) _Led_SetLedBlinkTime                                  5     1      4     425
                                             29 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (3) _Mdm_MainTask                                         1     1      0   58689
                         _CheckModem
                     _ConfigureModem
                           _GetSmsSm
                     _ModemEvtParser
                          _SendSmsSm
                        _TurnOnModem
                      _UartSetConfig
                _Uart_InitUartModule
 ---------------------------------------------------------------------------------
 (4) _UartSetConfig                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _TurnOnModem                                          0     0      0    2019
                        _GenerateEvt
 ---------------------------------------------------------------------------------
 (4) _SendSmsSm                                           52    52      0   14533
                                             59 BANK0      2     2      0
                                              0 BANK1     50    50      0
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _ReceiveEvt
                         _StringCopy
                _Uart_WriteStringLen
 ---------------------------------------------------------------------------------
 (5) _Uart_WriteStringLen                                  5     2      3    1540
                                             32 BANK0      5     2      3
                 _UartTxBufferStatus
                      _UartWriteByte
 ---------------------------------------------------------------------------------
 (4) _ModemEvtParser                                      21    21      0    5902
                                             40 BANK0     21    21      0
                        _GenerateEvt
                         _ReceiveEvt
                      _StringCompare
                 _Uart_ClearRxBuffer
 ---------------------------------------------------------------------------------
 (5) _Uart_ClearRxBuffer                                   2     2      0      69
                                             29 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (5) _StringCompare                                       11     5      6     960
                                             29 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (4) _GetSmsSm                                             0     0      0   10787
                        _GenerateEvt
                         _ReceiveEvt
                         _StringCopy
              _Uart_WriteConstString
 ---------------------------------------------------------------------------------
 (4) _ConfigureModem                                       0     0      0    8214
                        _GenerateEvt
                   _UartSetConfigLow
                _Uart_InitUartModule
              _Uart_WriteConstString
 ---------------------------------------------------------------------------------
 (4) _Uart_InitUartModule                                  5     3      2    3652
                                             61 BANK0      5     3      2
                    _SetUartBaudRate
 ---------------------------------------------------------------------------------
 (5) _SetUartBaudRate                                      7     5      2    2514
                                             54 BANK0      7     5      2
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (5) ___lmul                                              12     4      8     844
                                             29 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (5) _UartSetConfigLow                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _CheckModem                                           0     0      0   13582
                        _GenerateEvt
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _ReceiveEvt
              _Uart_WriteConstString
 ---------------------------------------------------------------------------------
 (3) _Mdm_DrvMainFn                                        1     1      0    2598
                           _MdmCntSm
 ---------------------------------------------------------------------------------
 (4) _MdmCntSm                                             0     0      0    2598
                 _InitModemInterface
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (5) _InitModemInterface                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _MdmHttp_MainTask                                     1     1      0   37731
                      _HttpGetMethod
                    _InitGprsNetwork
 ---------------------------------------------------------------------------------
 (4) _InitGprsNetwork                                     56    53      3   18902
                                             59 BANK0      5     2      3
                                              0 BANK1     51    51      0
                        _ClearBuffer
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _ReceiveEvt
                         _StringCopy
              _Uart_WriteConstString
                   _Uart_WriteString
 ---------------------------------------------------------------------------------
 (4) _HttpGetMethod                                      207   205      2   18829
                                             59 BANK0      6     4      2
                                              0 BANK1    201   201      0
                        _ClearBuffer
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _ReceiveEvt
                         _StringCopy
              _Uart_WriteConstString
                   _Uart_WriteString
 ---------------------------------------------------------------------------------
 (5) _Uart_WriteString                                     3     1      2    1191
                                             32 BANK0      3     1      2
                 _UartTxBufferStatus
                      _UartWriteByte
 ---------------------------------------------------------------------------------
 (5) _Uart_WriteConstString                                3     1      2    2543
                                             32 BANK0      3     1      2
                 _UartTxBufferStatus
                      _UartWriteByte
 ---------------------------------------------------------------------------------
 (6) _UartWriteByte                                        2     1      1     436
                                             29 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (6) _UartTxBufferStatus                                   3     3      0     108
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (5) _StringCopy                                          10     4      6    3627
                                             29 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (7) _OsTmr_StartTimer                                     6     0      6    4315
                                             33 BANK0      6     0      6
                   _GetOsTickCounter
 ---------------------------------------------------------------------------------
 (7) _OsTmr_GetTimerStatus                                 6     4      2    2107
                                             53 BANK0      6     4      2
                     _GetElapsedTime
 ---------------------------------------------------------------------------------
 (8) _GetElapsedTime                                      20    16      4     538
                                             33 BANK0     20    16      4
                   _GetOsTickCounter
 ---------------------------------------------------------------------------------
 (8) _GetOsTickCounter                                     4     0      4       0
                                             29 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (5) _ClearBuffer                                          6     2      4    1797
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) _Led_MainTask                                         2     2      0    6723
                                             58 BANK0      1     1      0
                    _LedStateMachine
 ---------------------------------------------------------------------------------
 (4) _LedStateMachine                                     11     3      8    6723
                                             47 BANK0     11     3      8
               _LedBlinkStateMachine
               _LedPulseStateMachine
                   _Led_SetLedStatus
 ---------------------------------------------------------------------------------
 (5) _LedPulseStateMachine                                 5     2      3    2565
                                             42 BANK0      5     2      3
                   _Led_SetLedStatus
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (5) _Led_SetLedStatus                                     2     1      1     748
                                             29 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (5) _LedBlinkStateMachine                                 4     2      2    1837
                                             42 BANK0      4     2      2
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (6) ___lwdiv                                              7     3      4    1237
                                             35 BANK0      7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) _I2cSlv_MainTask                                      1     1      0   16270
                       _I2cSendMsgSm
                       _I2cSetConfig
                  _I2c_InitI2cModule
                  _OsAlrm_SetOsAlarm
 ---------------------------------------------------------------------------------
 (4) _OsAlrm_SetOsAlarm                                    8     0      8    9436
                                             35 BANK0      8     0      8
                             ___wmul
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4    8938
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) _I2c_InitI2cModule                                    4     2      2    1375
                                             66 BANK0      4     2      2
                        _SetBaudRate
 ---------------------------------------------------------------------------------
 (5) _SetBaudRate                                         12     4      8    1198
                                             54 BANK0     12     4      8
                            ___lldiv
 ---------------------------------------------------------------------------------
 (5) ___lldiv                                             13     5      8     976
                                             41 BANK0     13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (4) _I2cSetConfig                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2cSendMsgSm                                         0     0      0    5459
                       _I2c_ReadData
                      _I2c_WriteData
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (7) _ReceiveEvt                                           4     2      2    2598
                                             29 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (5) _I2c_WriteData                                        4     2      2     414
                                             30 BANK0      4     2      2
                     _CheckAckStatus
                      _CheckTxStatus
                     _StartCondition
                      _StopCondition
                          _WriteByte
 ---------------------------------------------------------------------------------
 (5) _I2c_ReadData                                         4     2      2    2447
                                             32 BANK0      4     2      2
                     _CheckAckStatus
                      _CheckTxStatus
                     _EnableReceiver
                        _GenerateEvt
                           _ReadByte
                       _SetAckStatus
                     _StartCondition
                      _StopCondition
                          _WriteByte
 ---------------------------------------------------------------------------------
 (6) _WriteByte                                            1     1      0      31
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _StopCondition                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _StartCondition                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _SetAckStatus                                         1     1      0      22
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _ReadByte                                             1     1      0      23
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _GenerateEvt                                          3     1      2    2019
                                             29 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (6) _EnableReceiver                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _CheckTxStatus                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _CheckAckStatus                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _LowPriorityIsr                                     21    21      0    1029
                                              8 BANK0     21    21      0
                        _Tmr_Tmr2Isr
 ---------------------------------------------------------------------------------
 (14) _Tmr_Tmr2Isr                                         0     0      0    1029
                   Absolute function *
                 _Sch_SchmIntService *
 ---------------------------------------------------------------------------------
 (15) _Sch_SchmIntService                                  0     0      0    1029
             _OsAlrm_ProcessOsAlarms
                   _UpdateOsCounters
                      _UpdateSchFlag
 ---------------------------------------------------------------------------------
 (16) _UpdateSchFlag                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _UpdateOsCounters                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _OsAlrm_ProcessOsAlarms                             10    10      0    1029
                                             32 COMRAM     2     2      0
                                              0 BANK0      8     8      0
                         _I2cDummyTx *
                _OsAlrm_ClearOsAlarm
                           i1___wmul
 ---------------------------------------------------------------------------------
 (17) i1___wmul                                            6     2      4     469
                                             24 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (17) _OsAlrm_ClearOsAlarm                                 1     1      0      66
                                             24 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (17) _I2cDummyTx                                          0     0      0     209
                i1_I2cSlv_SendI2cMsg
 ---------------------------------------------------------------------------------
 (18) i1_I2cSlv_SendI2cMsg                                 5     1      4     209
                                             27 COMRAM     5     1      4
                      i1_GenerateEvt
 ---------------------------------------------------------------------------------
 (19) i1_GenerateEvt                                       3     1      2      56
                                             24 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (20) _HighPriorityIsr                                    18    18      0     332
                                              6 COMRAM    18    18      0
                        _Mcu_Int0Isr
                        _Mcu_Int1Isr
                        _Rtcc_RtcIsr
                    _Uart_Uart1RxIsr
 ---------------------------------------------------------------------------------
 (21) _Uart_Uart1RxIsr                                     0     0      0     332
         _Uart_MdmGsmGprsReadService
 ---------------------------------------------------------------------------------
 (22) _Uart_MdmGsmGprsReadService                          4     3      1     332
                                              3 COMRAM     3     2      1
                      i2_GenerateEvt
 ---------------------------------------------------------------------------------
 (23) i2_GenerateEvt                                       3     1      2     108
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (21) _Rtcc_RtcIsr                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (21) _Mcu_Int1Isr                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (21) _Mcu_Int0Isr                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 23
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Sch_MainScheduler
     _InitializeTasks
       _I2cSlv_MainTask *
         _I2cSendMsgSm
           _I2c_ReadData
             _CheckAckStatus
             _CheckTxStatus
             _EnableReceiver
             _GenerateEvt
             _ReadByte
             _SetAckStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _I2c_WriteData
             _CheckAckStatus
             _CheckTxStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _ReceiveEvt
         _I2cSetConfig
         _I2c_InitI2cModule
           _SetBaudRate
             ___lldiv
               ___lmul (ARG)
         _OsAlrm_SetOsAlarm
           ___wmul
       _Led_MainTask *
         _LedStateMachine
           _LedBlinkStateMachine
             ___lwdiv
               ___wmul (ARG)
           _LedPulseStateMachine
             _Led_SetLedStatus
             ___lwdiv
               ___wmul (ARG)
           _Led_SetLedStatus
       _MdmHttp_MainTask *
         _HttpGetMethod
           _ClearBuffer
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _Uart_WriteString
             _UartTxBufferStatus
             _UartWriteByte
         _InitGprsNetwork
           _ClearBuffer
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _Uart_WriteString
             _UartTxBufferStatus
             _UartWriteByte
       _Mdm_DrvMainFn *
         _MdmCntSm
           _InitModemInterface
           _ReceiveEvt
       _Mdm_MainTask *
         _CheckModem
           _GenerateEvt
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _ConfigureModem
           _GenerateEvt
           _UartSetConfigLow
           _Uart_InitUartModule
             _SetUartBaudRate
               ___lldiv
                 ___lmul (ARG)
               ___lmul
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _GetSmsSm
           _GenerateEvt
           _ReceiveEvt
           _StringCopy
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _ModemEvtParser
           _GenerateEvt
           _ReceiveEvt
           _StringCompare
           _Uart_ClearRxBuffer
         _SendSmsSm
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
           _Uart_WriteStringLen
             _UartTxBufferStatus
             _UartWriteByte
         _TurnOnModem
           _GenerateEvt
         _UartSetConfig
         _Uart_InitUartModule
           _SetUartBaudRate
             ___lldiv
               ___lmul (ARG)
             ___lmul
       _MyApp_Task *
         _Led_SetLedBlinkTime
         _Mdm_GetSmsData
           _ReceiveEvt
           _StringCopy
         _Mdm_IsRinging
           _ReceiveEvt
         _Mdm_IsSmsReceived
           _ReceiveEvt
         _Mdm_RequestSmsData
           _GenerateEvt
         _blinkForSeconds
           _Led_SetLedStatus
           _secondsAppTimer
             ___lwdiv
               ___wmul (ARG)
             ___wmul
         _initGprsModem
           _Led_SetLedStatus
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _secondsAppTimer
             ___lwdiv
               ___wmul (ARG)
             ___wmul
       _Rtcm_MainTask *
         _Rtcc_AlarmConfig
         _Rtcc_LockRtc
         _Rtcc_RtcConfig
           _RtccIrqInit
         _Rtcc_SetRtcStatus
         _Rtcc_UnlockRtc
         _Rtcm_GetRtccDate
           _Rtcc_GetRtccValue
         _Rtcm_SetRtccDate
           _Rtcc_LockRtc
           _Rtcc_SetRtccValue
             ___awdiv
             ___awmod
           _Rtcc_UnlockRtc
       _Term_MainTask *
         _Term_MainSm
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _Terminal
             _I2cSlv_I2cReadMsgSts
               _ReceiveEvt
             _I2cSlv_ReceiveI2cMsg
               _GenerateEvt
             _I2cSlv_SendI2cMsg
               _GenerateEvt
             _OsTmr_Wait
               _OsTmr_GetTimerStatus
                 _GetElapsedTime
                   _GetOsTickCounter
               _OsTmr_StartTimer
                 _GetOsTickCounter
             _atoi
               ___wmul
               _isdigit
             _getsUSBUSART
               _USBTransferOnePacket
             _itoa
               _utoa
                 ___lwdiv
                   ___wmul (ARG)
                 ___lwmod
             _putUSBUSART
               _strlen (ARG)
             _strcpy
             _strtol
               ___lmul
               _isalpha
                 _isupper
               _isdigit
               _isspace
               _toupper
             _xtoi
               _isdigit
               _isspace
               _isupper
               _isxdigit
                 _isdigit
               _tolower
           _memset
           _putUSBUSART
             _strlen (ARG)
           _sprintf
           _strcat
           _strcpy
           _strlen
           _utoa
             ___lwdiv
               ___wmul (ARG)
             ___lwmod
       _UsbDevice_MainTask *
         _CDCTxService
           _USBTransferOnePacket
         _USBDeviceInit
           _memset
         _USBDeviceTasks
           _USBCtrlEPAllowStatusStage
           _USBCtrlEPService
             _USBCtrlTrfInHandler
               _USBCtrlTrfTxService
             _USBCtrlTrfOutHandler
               _USBCtrlTrfRxService
                 _USBCtrlEPAllowStatusStage
             _USBCtrlTrfSetupHandler
               _USBCheckStdRequest
                 _USBStdFeatureReqHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                 _USBStdGetDscHandler
                 _USBStdGetStatusHandler
                 _USBStdSetCfgHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                   _memset
                 _USER_USB_CALLBACK_EVENT_HANDLER
                   _CDCInitEP
                     _USBEnableEndpoint
                       _USBConfigureEndpoint
                     _USBTransferOnePacket
                   _USBCheckCDCRequest
               _USBCtrlEPServiceComplete
                 _USBCtrlEPAllowDataStage
                   _USBCtrlTrfTxService
                 _USBCtrlEPAllowStatusStage
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   _USBTransferOnePacket
                 _USBCheckCDCRequest
             _memcpy
           _USBDeviceInit
             _memset
           _USBIncrement1msInternalTimers
           _USBStallHandler
           _USBSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USBWakeFromSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USER_USB_CALLBACK_EVENT_HANDLER
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBTransferOnePacket
             _USBCheckCDCRequest
       _Wdg_MainTask *
         _Mcu_ClearWdg
         _Mcu_SetWdgSts
     _ScheduleTasks
       _I2cSlv_MainTask *
         _I2cSendMsgSm
           _I2c_ReadData
             _CheckAckStatus
             _CheckTxStatus
             _EnableReceiver
             _GenerateEvt
             _ReadByte
             _SetAckStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _I2c_WriteData
             _CheckAckStatus
             _CheckTxStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _ReceiveEvt
         _I2cSetConfig
         _I2c_InitI2cModule
           _SetBaudRate
             ___lldiv
               ___lmul (ARG)
         _OsAlrm_SetOsAlarm
           ___wmul
       _Led_MainTask *
         _LedStateMachine
           _LedBlinkStateMachine
             ___lwdiv
               ___wmul (ARG)
           _LedPulseStateMachine
             _Led_SetLedStatus
             ___lwdiv
               ___wmul (ARG)
           _Led_SetLedStatus
       _MdmHttp_MainTask *
         _HttpGetMethod
           _ClearBuffer
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _Uart_WriteString
             _UartTxBufferStatus
             _UartWriteByte
         _InitGprsNetwork
           _ClearBuffer
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _Uart_WriteString
             _UartTxBufferStatus
             _UartWriteByte
       _Mdm_DrvMainFn *
         _MdmCntSm
           _InitModemInterface
           _ReceiveEvt
       _Mdm_MainTask *
         _CheckModem
           _GenerateEvt
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _ConfigureModem
           _GenerateEvt
           _UartSetConfigLow
           _Uart_InitUartModule
             _SetUartBaudRate
               ___lldiv
                 ___lmul (ARG)
               ___lmul
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _GetSmsSm
           _GenerateEvt
           _ReceiveEvt
           _StringCopy
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _ModemEvtParser
           _GenerateEvt
           _ReceiveEvt
           _StringCompare
           _Uart_ClearRxBuffer
         _SendSmsSm
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
           _Uart_WriteStringLen
             _UartTxBufferStatus
             _UartWriteByte
         _TurnOnModem
           _GenerateEvt
         _UartSetConfig
         _Uart_InitUartModule
           _SetUartBaudRate
             ___lldiv
               ___lmul (ARG)
             ___lmul
       _MyApp_Task *
         _Led_SetLedBlinkTime
         _Mdm_GetSmsData
           _ReceiveEvt
           _StringCopy
         _Mdm_IsRinging
           _ReceiveEvt
         _Mdm_IsSmsReceived
           _ReceiveEvt
         _Mdm_RequestSmsData
           _GenerateEvt
         _blinkForSeconds
           _Led_SetLedStatus
           _secondsAppTimer
             ___lwdiv
               ___wmul (ARG)
             ___wmul
         _initGprsModem
           _Led_SetLedStatus
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _secondsAppTimer
             ___lwdiv
               ___wmul (ARG)
             ___wmul
       _Rtcm_MainTask *
         _Rtcc_AlarmConfig
         _Rtcc_LockRtc
         _Rtcc_RtcConfig
           _RtccIrqInit
         _Rtcc_SetRtcStatus
         _Rtcc_UnlockRtc
         _Rtcm_GetRtccDate
           _Rtcc_GetRtccValue
         _Rtcm_SetRtccDate
           _Rtcc_LockRtc
           _Rtcc_SetRtccValue
             ___awdiv
             ___awmod
           _Rtcc_UnlockRtc
       _Term_MainTask *
         _Term_MainSm
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _Terminal
             _I2cSlv_I2cReadMsgSts
               _ReceiveEvt
             _I2cSlv_ReceiveI2cMsg
               _GenerateEvt
             _I2cSlv_SendI2cMsg
               _GenerateEvt
             _OsTmr_Wait
               _OsTmr_GetTimerStatus
                 _GetElapsedTime
                   _GetOsTickCounter
               _OsTmr_StartTimer
                 _GetOsTickCounter
             _atoi
               ___wmul
               _isdigit
             _getsUSBUSART
               _USBTransferOnePacket
             _itoa
               _utoa
                 ___lwdiv
                   ___wmul (ARG)
                 ___lwmod
             _putUSBUSART
               _strlen (ARG)
             _strcpy
             _strtol
               ___lmul
               _isalpha
                 _isupper
               _isdigit
               _isspace
               _toupper
             _xtoi
               _isdigit
               _isspace
               _isupper
               _isxdigit
                 _isdigit
               _tolower
           _memset
           _putUSBUSART
             _strlen (ARG)
           _sprintf
           _strcat
           _strcpy
           _strlen
           _utoa
             ___lwdiv
               ___wmul (ARG)
             ___lwmod
       _UsbDevice_MainTask *
         _CDCTxService
           _USBTransferOnePacket
         _USBDeviceInit
           _memset
         _USBDeviceTasks
           _USBCtrlEPAllowStatusStage
           _USBCtrlEPService
             _USBCtrlTrfInHandler
               _USBCtrlTrfTxService
             _USBCtrlTrfOutHandler
               _USBCtrlTrfRxService
                 _USBCtrlEPAllowStatusStage
             _USBCtrlTrfSetupHandler
               _USBCheckStdRequest
                 _USBStdFeatureReqHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                 _USBStdGetDscHandler
                 _USBStdGetStatusHandler
                 _USBStdSetCfgHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                   _memset
                 _USER_USB_CALLBACK_EVENT_HANDLER
                   _CDCInitEP
                     _USBEnableEndpoint
                       _USBConfigureEndpoint
                     _USBTransferOnePacket
                   _USBCheckCDCRequest
               _USBCtrlEPServiceComplete
                 _USBCtrlEPAllowDataStage
                   _USBCtrlTrfTxService
                 _USBCtrlEPAllowStatusStage
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   _USBTransferOnePacket
                 _USBCheckCDCRequest
             _memcpy
           _USBDeviceInit
             _memset
           _USBIncrement1msInternalTimers
           _USBStallHandler
           _USBSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USBWakeFromSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USER_USB_CALLBACK_EVENT_HANDLER
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBTransferOnePacket
             _USBCheckCDCRequest
       _Wdg_MainTask *
         _Mcu_ClearWdg
         _Mcu_SetWdgSts
   _SystemInit
     _InitSchedTimer
       _Tmr_TmrBConfig
         _TmrBInit
         _Tmr_StartTmr
         _Tmr_TmrBIrqSet
         _Tmr_TmrBPrSet
           ___lldiv
             ___lmul (ARG)
           ___lmul
     _Irq_InitIntController
     _Mcu_ConfigExtInt
     _Mcu_StartSystemPll
     _Pm_DsReleasePinControl
     _Tmr_RegisterTmr2IsrCallback

 _LowPriorityIsr (ROOT)
   _Tmr_Tmr2Isr
     Absolute function(Fake) *
     _Sch_SchmIntService *
       _OsAlrm_ProcessOsAlarms
         _I2cDummyTx *
           i1_I2cSlv_SendI2cMsg
             i1_GenerateEvt
         _OsAlrm_ClearOsAlarm *
         i1___wmul *
       _UpdateOsCounters
       _UpdateSchFlag

 _HighPriorityIsr (ROOT)
   _Mcu_Int0Isr
   _Mcu_Int1Isr
   _Rtcc_RtcIsr
   _Uart_Uart1RxIsr
     _Uart_MdmGsmGprsReadService
       i2_GenerateEvt

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMh            A80      0       0      35        0.0%
BIGRAMl            3FF      0     320      36       78.2%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100     C8      C8      26       78.1%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0      C8      24       78.1%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0      C8      22       78.1%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0      F6      20       96.1%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0      DC      18       85.9%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0      D2      16       82.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0      FA      12       97.7%
BITBANK2           100      0       0       9        0.0%
BANK2              100     C8     100      10      100.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     C9      FF       7       99.6%
BITBANK14           C0      0       0      33        0.0%
BANK14              C0      0       0      34        0.0%
BITBANK4            C0      0       0      13        0.0%
BANK4               C0      0      B9      14       96.4%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     4C      7F       5       79.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     22      41       1       69.1%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     96E       8        0.0%
DATA                 0      0     C8E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sun Mar 13 15:43:02 2022

                  __size_of_StringCompare 0052                  __end_of_UartSetConfigLow 5082  
                              _USB_SD_Ptr FC55                      __size_of_TurnOnModem 0046  
                         ??_UpdateSchFlag 0019                        _Mcu_StartSystemPll 5D70  
                   ?_LedPulseStateMachine 008A                              ___awdiv@sign 0082  
                  I2c_ReadData@ReadPacket 0080                                        bsr 000FE0  
                  ??_LedBlinkStateMachine 008C                             _USBDeviceInit 1FFE  
                     ___wmul@multiplicand 007F                          i1___wmul@product 001D  
                      __size_of_CDCInitEP 006C                        i2GenerateEvt@Event 0001  
                InitSchedTimer@TmrBConfig 00A4                              __CFG_CP0$OFF 000000  
              OsAlrm_SetOsAlarm@OsAlarmId 0083      USER_USB_CALLBACK_EVENT_HANDLER@event 0089  
    USER_USB_CALLBACK_EVENT_HANDLER@pdata 008B                    I2c_ReadData@ReadStatus 0031  
                                     l202 1F1A                                       l203 1F22  
                                     l205 1F6A                                       l206 1F90  
                                     l208 1F98                                       l160 1E5E  
                                     l209 1FB8                                       l161 1D34  
                                     l162 1E9C                                       l170 1DFC  
                                     l171 1E12                                       l163 1D40  
                                     l315 4242                                       l323 420E  
                                     l164 1D80                                       l316 41B8  
                                     l420 4752                                       l500 4602  
                                     l173 1E16                                       l325 4228  
                                     l421 4772                                       l237 5D7C  
                                     l174 1E1E                                       l166 1D8E  
                                     l318 41C2                                       l422 477E  
             __end_of_USBStdGetDscHandler 2A2E                                       l510 45D4  
                                     l502 4594                                       l175 1E2A  
                                     l167 1DB6                                       l319 41E8  
                                     l423 478A                                       l511 45C4  
                                     l503 4584                                       l192 1FC2  
                                     l176 1E40                                       l416 479E  
                                     l424 4796                                       l512 45E8  
                                     l504 45AA                                       l520 5442  
                                     l193 1EA2                                       l169 1DC8  
                                     l417 4744                                       l441 17EC  
                                     l513 45C8                                       l505 4588  
                                     l521 540E                                       l194 1FFA  
                                     l418 47CC                                       l442 15F4  
                                     l514 45CE                                       l506 458E  
                                     l530 2F0A                                       l195 1EAE  
                                     l179 1E4C                                       l419 474C  
                                     l523 5428                                       l531 2F70  
                                     l196 1EEE                                       l700 565A  
                                     l444 163C                                       l532 2F36  
                                     l445 1684                                       l541 5D3A  
                                     l198 1EFC                                       l446 16CC  
                                     l199 1F10                                       l631 2876  
                                     l447 1714                                       l448 175C  
                                     l528 2F76                                       l633 28EE  
                                     l625 2802                                       l449 17A4  
                                     l529 2F62                                       l538 5D3E  
                                     l546 39FE                                       l651 5392  
                                     l707 57BE                                       l627 2826  
                                     l715 56F2                                       l539 5D36  
                                     l547 3A1A                                       l660 53B6  
                                     l652 538C                                       l716 56C8  
                                     l709 57D8                                       l629 284E  
                                     l718 56E0                                       l639 5D62  
                                     l832 5AFE                                       l844 3AD2  
                                     l668 0C44                                       _BDT 000400  
                                     l790 5D98                                       l855 4AE8  
                                     l775 2C70                                       l864 4840  
                                     l856 4A8E                                       l857 4B02  
                                     l698 563E                                       l858 4ABE  
                                     l867 4852                                       l981 22EA  
                                     l982 231E                                       l983 2390  
                                     l976 23D8                                       l992 23B4  
                                     l977 22AC                                       l979 22D0  
                 secondsAppTimer@isCyclic 008C                                       _PR2 000FCB  
                                     _PR4 000F77                                       _UIE 000F36  
                                     _UIR 000F62                  i2GenerateEvt@EventStatus 0003  
                        ?_blinkForSeconds 0093                   __end_of_HighPriorityIsr 410C  
                          ??_Mdm_MainTask 00A2                       ?_Mcu_StartSystemPll 0001  
                              _USBSuspend 5986                              ___awmod@sign 0082  
                    USBStdSetCfgHandler@i 0091                                       prod 000FF3  
                                     tosl 000FFD                                       wreg 000FE8  
            I2cSlv_ReceiveI2cMsg@RxBuffer 0080                            _USBDeviceTasks 1BAA  
                            __CFG_IESO$ON 000000                            _USBDeviceState 00CB  
             Rtcc_AlarmConfig@AlarmConfig 007D              __end_of_I2cSlv_ReceiveI2cMsg 56BC  
                           ??_Mcu_Int0Isr 0001                             ??_Mcu_Int1Isr 0001  
                   ??_USBCtrlTrfRxService 007D                            ??_getsUSBUSART 0087  
                USBEnableEndpoint@options 0085                                _CheckModem 22AA  
           ??_Tmr_RegisterTmr2IsrCallback 007F                                      l1003 5516  
         InitGprsNetwork@GprsNetInitState 01EE                                      l1004 54E4  
                                    l1100 52E4                                      l1021 38B8  
                                    l1101 52F8                                      l1022 3814  
                             RiSm@Counter 02E0                                      l1007 54FC  
                                    l1025 3824                                      l1202 1078  
                                    l1026 385C                                      l1050 2D3A  
                                    l1211 0F3E                                      l1203 0DD0  
                                    l1027 3880                                      l1220 1054  
                                    l1212 0F78                                      l1060 3048  
                                    l1044 2D68                                      l2100 5188  
                                    l1205 10B0                                      l1213 0FB8  
                                    l1029 38A0                                      l1061 2F88  
                                    l1045 2CD2                                      l1214 0FBC  
                                    l1206 0DE8                                      l2102 519A  
                                    l1142 5C3A                                      l1126 5C16  
                                    l1215 1000                                      l1207 0E22  
                                    l1047 2D7C                                      l2103 51AC  
                                    l1240 0646                                      l1224 106E  
                                    l1208 0E96                                      l1064 2FA2  
                                    l1048 2D04                                      l1400 56B6  
                                    l1241 0680                                      l1209 0E5E  
                                    l1065 2FB8                                      l1081 1B80  
                                    l2050 24AA                                      l2210 5944  
                                    l1250 08CA                                      l1242 06BA  
                                    l1090 1B1A                                      l1082 19FE  
                                    l2211 5930                                      l1235 0A54  
                                    l1251 090E                                      l1243 073E  
                                    l1219 1010                                      l1091 1B66  
                                    l2060 3066                                      l2204 4E54  
                                    l1260 097E                                      l1244 06F6  
                                    l1236 05F4                                      l1068 2FFE  
                                    l2061 313A                                      l2205 4E14  
                                    l1261 09AA                                      l1085 1A1A  
                                    l1405 5D26                                      l3030 51F6  
                                    l2046 251C                                      l2062 3084  
                                    l2070 426A                                      l1238 0AB6  
                                    l1246 07F2                                      l1086 1AD0  
                                    l3031 51EE                                      l2047 23FE  
                                    l2071 4300                                      l1263 09C4  
                                    l1255 092A                                      l1247 082C  
                                    l1239 060C                                      l1087 1AF4  
                                    l2048 2532                                      l2064 30F4  
                                    l2072 427A                                      l1264 0A32  
                                    l1256 096E                                      l1248 0856  
                                    l3040 560C                                      l1600 1BCA  
                                    l2049 2426                                      l2073 428C  
                                    l1249 0890                                      l3041 5604  
                                    l3201 574C                                      l1097 530A  
                                    l3034 5216                                      l2090 5A92  
                                    l2074 42A6                                      l3202 5746  
                                    l1098 52CE                                      l1274 54D0  
                                    l2082 3734                                      l3035 5220  
                                    l2091 5A80                                      l2059 311E  
                                    l1611 1C6A                                      l1603 1BF2  
                                    l2083 367C                                      l2171 48CA  
                                    l1372 3C4C                                      l2076 42B4  
                                    l1268 0A42                                      l3044 5624  
                                    l3060 5A36                                      l1700 2AE8  
                                    l1612 1C76                                      l1604 1C02  
                                    l1365 3C9E                                      l2093 5A86  
                                    l2069 42D8                                      l2077 42C2  
                                    l1269 0A4A                                      l3045 562E  
                                    l3221 18C8                                      l3061 5A24  
                                    l2413 131E                                      l1621 1D0A  
                                    l1613 1CA0                                      l1605 1C0A  
                                    l1277 549E                                      l2085 368A  
                                    l1374 3C68                                      l1366 3C00  
                                    l2094 5A8C                                      l3230 1902  
                                    l3310 5828                                      l2414 10B8  
                                    l1710 320E                                      l3054 5488  
                                    l1614 1CAC                                      l1606 1C20  
                                    l1390 5116                                      l1367 3C22  
                                    l1631 3D9E                                      l3303 5CC2  
                                    l2431 12F8                                      l2423 110E  
                                    l3055 5466                                      l1623 1D28  
                                    l1607 1C2C                                      l1376 3C84  
                                    l2360 01AE                                      l2416 10DE  
                                    l1720 29AE                                      l1800 335E  
                                    l1616 1CC0                                      l2168 48DE  
                                    l1377 3C90                                      l1369 3C44  
                                    l1633 3DC8                                      l3241 5E44  
                                    l3233 1914                                      l3217 185C  
                                    l2353 05D2                                      l2361 019C  
                                    l2433 1318                                      l2425 112E  
                                    l1801 337C                                      l1609 1C54  
                                    l2169 4864                                      l2441 5E00  
                                    l2530 5366                                      l3234 1980  
                                    l3314 5E2C                                      l2354 00E2  
                                    l2418 10FA                                      l1650 378E  
                                    l1626 5580                                      l1722 29B6  
                                    l1730 3F0A                                      l1802 3398  
                                    l2099 51BE                                      l1395 57B0  
                                    l1635 3E24                                      l3227 18D8  
                                    l3219 1874                                      l2371 0392  
                                    l2427 114E                                      l1627 5590  
                                    l1811 13F6                                      l1723 2A06  
                                    l1619 1CE6                                      l1387 511C  
                                    l2604 4FE4                                      l2516 4368  
                                    l3236 19A6                                      l3228 18E8  
                                    l2372 0326                                      l1820 14D0  
                                    l1716 2A16                                      l1708 319A  
                                    l1388 50DC                USBConfigureEndpoint@handle 0083  
                                    l2605 4FF8                                      l2197 526C  
                                    l3237 19E0                                      l3261 32D0  
                                    l2373 02B4                                      l2357 0152  
                                    l2429 128E                                      l1813 143E  
                                    l1725 2A0E                                      l1717 2912  
                                    l1733 3F9A                                      l2461 5C6E  
                                    l2198 5242                                      l2518 4394  
                                    l2534 58D4                                      l1910 4652  
                                    l3262 3288                                      l2374 0250  
                                    l2358 01E2                                      l2366 01D0  
                                    l3190 4F3E                                      l1662 454C  
                                    l1822 1532                                      l1814 1440  
                                    l1734 3F1C                                      l2438 5E06  
                                    l2199 5268                                      l2519 43A4  
                                    l1911 467E                                      l3263 32A0  
                                    l3255 3248                                      l2391 045E  
                                    l2383 0402                                      l1823 153E  
                                    l1815 145C                                      l1719 2926  
                                    l1735 3F22                                      l1591 20B0  
                                    l1743 5568                                      l1751 589C  
                                    l1912 4658                                      l3264 32B0  
                                    l3256 3242                                      l2392 0578  
                                    l2384 03D2                                      l2376 0304  
                                    l1824 15BA                                      l1808 137E  
                                    l1736 3F42                                      l1656 4498  
                                    l1672 2E38                                      l1744 5566  
                                    l1752 589A                                      l2377 02C6  
                                    l1681 341C                                      l1817 14EA  
                                    l1809 1384                                      l1729 3F84  
                                    l3258 3270                                      l2394 04B4  
                                    l3186 4F2E                                      l1690 3492  
                                    l1770 4D92                                      l1658 44B2  
                                    l2458 5C74                                      l1907 46A4  
                                    l3195 59CC                                      l3267 330E  
                                    l2395 0478                                      l3187 4F28  
                                    l1683 3426                                      l1827 1570  
                                    l1819 14B2                                      l1667 2E0E  
                                    l1587 2048                                      l2459 5C66  
                                    l2563 3EEC                                      l3196 59C2  
                                    l2580 35D2                                      l1668 2DB6  
                                    l2564 3E6E                                      l3293 5A70  
                                    l2389 041E                                      l2581 3634  
                                    l3189 4F48                                      l1685 348A  
                                    l1781 3D5C                                      l1829 15C6  
                                    l1757 472C                                      l1589 2070  
                                    l2398 0524                                      l2590 3654  
                                    l1950 2614                                      l1942 25AE  
                                    l1686 3450                                      l1758 4726  
                                    l1598 1BD6                                      l2566 3E88  
                                    l2399 0570                                      l1943 25B2  
                                    l1935 255A                                      l1791 33B8  
                                    l1599 1BCC                                      l2584 35D8  
                                    l1776 3CF4                                      l1696 2A8A  
                                    l1768 4D44                                      l1792 3328  
                                    l2568 3EAC                                      l1953 2666  
                                    l1945 260A                                      l1937 2568  
                                    l1689 34CC                                      l1777 3CFA  
                                    l1697 2A64                                      l2569 3ED8  
                                    l2762 356E                                      l3298 5B7E  
                                    l2586 3620                                      l1954 266A  
                                    l1946 25D2                                      l1778 3D76  
                                    l1890 401A                                      l1794 3332  
                                    l2763 3530                                      l2587 3602  
                                    l2579 35B8                                      l1939 259C  
                                    l1779 3D3C                                      l1699 2B02  
                                    l1891 4032                                      l1795 3338  
                                    l2756 34DC                                      l1796 333E  
                                    l2765 35A2                                      l2757 34D6  
                                    l1949 264C                                      l1885 403C  
                                    l1797 3352                                      l2782 49E0  
                                    l2950 4192                                      l1886 3FD6  
                                    l1798 3358                                      l2783 49EA  
                                    l2775 4992                                      l2791 4B40  
                                    l2759 351E                                      l2943 55D6  
                                    l1983 4E70                                      l1991 4E6A  
                                    l1975 5BE6                __size_of_Mdm_IsSmsReceived 0024  
                                    l2784 49F8                                      l2776 49A2  
                                    l2792 4B38                                      l1888 3FEE  
                                    l1976 5BD6                                _Led1OutSts 01FA  
                                    l2937 5D06                                      l1889 3FFC  
                                    l2778 49C0                                      l1978 5BDC  
                                    l2779 49B8                                      l2795 4B58  
                                    l2947 4114                                      l2796 4B62  
                                    l2788 4B1E                                      l2981 4A66  
                                    l2797 4B70                                      l2789 4B2A  
                                    l2949 4150                                      l1989 4E64  
                                    l2982 4A74                                      l2977 4A32  
                                    l2978 4A26                                      l9135 5964  
                                    l7647 3426                                      l8465 5466  
                                    STR_1 FFE5                                      STR_2 FF81  
                                    STR_3 FFDE                                      STR_4 FFC2  
                                    STR_5 FFCD                                      STR_6 FFEF  
                                    l8989 4758                                      STR_7 FFEA  
                                    STR_8 FEB6                                      STR_9 FEEA  
                              _Led2OutSts 01F8                                      u5200 34BA  
                              _Led3OutSts 01F6                                      u5207 34B0  
                                    u6105 5EDA                                      u6106 5EDC  
                                    u5180 3478                                      u5340 2978  
                                    u5350 29A8                                      u7015 5E86  
                                    u7016 5E88                                      u5370 29FA  
                                    u5187 346E                                      u5347 296E  
                                    u8005 5E70                                      u5357 299E  
                                    u8006 5E74                                      u8015 5418  
                                    u8016 541A                                      u5377 29F0  
                                    u8025 5424                                      u8026 5426  
                                    u8035 5432                                      u8036 5434  
                                    u8045 543E                                      u7190 5278  
                                    u8046 5440                     ??_USBCtrlTrfTxService 007D  
                                    u6800 49C4                                      u5930 4A36  
                                    _UCFG 000F39                                      u9091 4DF6  
                                    u6860 4B44                                      _UEP0 000F26  
                                    u9341 48BC                                      u9405 5B40  
                                    _UEP1 000F27                                      u9406 5B42  
                                    u9351 48D4                                      u9415 5B4C  
                                    u9416 5B4E                                      u9425 5B58  
                                    u9426 5B5A                                      _UEIE 000F37  
                __size_of_Uart_Uart1RxIsr 0010                                      u6895 53DC  
                                    u7935 4BDE                                      u7945 5EEE  
                                    u7946 5EF0                                      _UEIR 000F63  
                                    _UCON 000F65                                _AlarmEvent 01F5  
                          ?_StopCondition 0001                           ??_Mdm_DrvMainFn 0081  
                     _OsTmr_OsTickCounter 031C                             __CFG_FCMEN$ON 000000  
                      _InitModemInterface 5FAE                  secondsAppTimer@isExpired 0090  
                         _CDCDataInHandle 01D1              I2c_ReadData@TentativeCounter 0032  
             Led_SetLedBlinkTime@OnTimeMs 007D    USBStdFeatureReqHandler@current_ep_data 0094  
                                    _pDst 02D4                      _NewStringMdmTerminal 003A  
                                    _atoi 34D4                                      _main 5F70  
                         ??_Mdm_IsRinging 0081                                      _itoa 55B0  
                        ?_SetUartBaudRate 0096                                      fsr0h 000FEA  
                                    fsr1h 000FE2                                      indf0 000FEF  
                                    fsr2h 000FDA                                      fsr0l 000FE9  
                                    indf1 000FE7                               _BaudRateGen 0314  
                                    indf2 000FDF                                      fsr1l 000FE1  
                                    fsr2l 000FD9                                      btemp 0042  
                                    _utoa 410C                                      _xtoi 3232  
                           __CFG_T1DIG$ON 000000                    _Pm_DsReleasePinControl 5FB6  
             __size_of_Sch_SchmIntService 000E                         _Rtcc_GetRtccValue 473E  
             I2cSlv_SendI2cMsg@DataLenght 0083                      ??_Mcu_StartSystemPll 007D  
             __end_of_Uart_WriteStringLen 56FC                                      prodh 000FF4  
                                    prodl 000FF3                                      start 00CC  
 Uart_MdmGsmGprsReadService@LocalRxBuffer 0AC8                         ??_secondsAppTimer 008D  
                     __end_of_GenerateEvt 5E60                            ?_Mcu_SetWdgSts 0001  
                          ??_Mcu_ClearWdg 007D                __end_of_USBCheckStdRequest 33FC  
                         _Rtcm_SystemDate 0300                    ??_USBCtrlTrfOutHandler 007F  
                __end_of_GetOsTickCounter 5F04                        ?_Rtcc_GetRtccValue 0001  
                     ?_InitModemInterface 0001                        StringCompare@Index 0086  
                          _GetElapsedTime 3A6E             I2cSlv_ReceiveI2cMsg@SlaveAddr 0082  
                            ___param_bank 000000                 ??_USBStdFeatureReqHandler 0091  
                     StringCopy@SourceStr 007D               __end_of_OsAlrm_ClearOsAlarm 50DA  
                                   EECON2 000FA7                InitGprsNetwork@UartMessage 0100  
                ??_USBStdGetStatusHandler 007D                       __size_of_I2cDummyTx 001C  
                        ??_Mdm_GetSmsData 0089                            ?_USBDeviceInit 0001  
                           __CFG_PLLDIV$2 000000                          _Uart_WriteString 57B8  
                     ??_Rtcc_GetRtccValue 007D                           __end_of_Welcome FDD8  
                       ?_UpdateOsCounters 0001                   Uart_ClearRxBuffer@Index 007D  
                              _GetSmsText 00DA                                     l13015 2F76  
                                   l12137 356A                                     l14021 4BF6  
                                   l13153 2D34                                     l11529 3192  
                                   l14033 2B5C                                     l13139 2CCA  
                                   l11485 5A24                                     l12541 2040  
                                   l10861 5D7C                                     l13343 0FB0  
                                   l13509 09A4                                     l12569 20A8  
                                   l14367 4E8A                                     l14369 4EBA  
                                   l12955 43A4                                     l13659 1CB8  
                                   ?_atoi 0083                                     ?_main 0001  
                                   ?_itoa 0093                           __end_of___awdiv 4A02  
                                   STR_10 FF57                                     STR_11 FF65  
                                   STR_12 FFA9                                     STR_20 FF49  
                                   STR_13 FF73                                     STR_21 FE8C  
                                   STR_30 FFD7                                     STR_14 FED5  
                                   STR_15 FF13                                     STR_23 FEFF  
                                   STR_24 FFF4                                     STR_16 FF38  
                                   STR_25 FFF4                                     STR_17 FF8F  
                                   STR_26 FEB3                                     STR_18 FF9C  
                                   STR_27 FF27                                     STR_28 FFB6  
                         __end_of___awmod 4B7A                                     STR_29 FFE5  
       __size_of_USBCtrlEPServiceComplete 0100                           __end_of___lldiv 4A86  
                                   ?_utoa 008A                                     u10310 51FA  
                                   u11040 1864                                     u10080 31C6  
                                   u12010 4F70                                     u10340 5610  
                                   u10260 1554                                     u10510 5A60  
                                   u11070 189E                                     u11400 57E6  
                                   u10600 5818                                     u12017 4F66  
                                   u12130 4220                                     u12210 235A  
                                   u11090 18AE                                     u11315 0AF4  
                                   u12140 423A                           ___awdiv@divisor 007F  
                                   u11325 0B14                                     u12070 366C  
                                   u11510 210C                                     u13030 1D2E  
                                   u11335 0B9E                                     u11440 4E4C  
                                   u13120 25FA                                     u10490 5B7A  
                  __end_of_USBDeviceTasks 1D32                                     u11355 0C78  
                                   u11380 5668                                     u12340 2D82  
                                   u10580 580C                                     u13140 263C  
                                   u11365 0C98                                     u10750 5388  
                                   u12190 2346                                     u10670 284A  
                                   u13150 2654                                     u11447 4E42  
                                   u11375 0D22                                     u12271 2C8E  
                                   u13127 25F0                                     ?_xtoi 0083  
                                   u11480 2064                                     u12281 2CA0  
                                   u10850 462E                                     u13147 2632  
                                   u13421 3E64                                     u13280 532C  
                                   u11950 04BE                                     u13518 2C24  
                                   u13519 2C52                 ?_USBCtrlEPServiceComplete 0001  
                                   u13478 4C28                                     u13479 4C56  
                         __end_of___lwdiv 522A                           __end_of___lwmod 5638  
               TurnOnModem@TurnOnMdmState 0029                        ??_UpdateOsCounters 0019  
                                   i1l742 216C                                     i1l747 22A8  
                                   i2l680 3996                                     i2l681 38E6  
                                   i2l690 3930                                     i2l682 38F4  
                                   i2l686 3916                                     i2l688 3988  
                                   i2l689 3950                                     _UADDR 000F38  
                         ___awdiv@counter 0081                                     _AlCfg 03B1  
            Led_SetLedBlinkTime@OffTimeMs 007F                   I2cSendMsgSm@I2cComState 01EA  
                                   _USTAT 000F64                   __end_of_LedStateMachine 4306  
      __size_of_USBCtrlEPAllowStatusStage 00CC                       ___lmul@multiplicand 0081  
                    ??_InitModemInterface 007D                                     _RxLen 00BE  
         __end_of_USBCtrlEPAllowDataStage 44E6                             _StringCompare 522A  
                                   _sd000 FE88                                     _sd001 FE41  
                                   _sd002 FE1B            ?_USBIncrement1msInternalTimers 0001  
             Rtcc_GetRtccValue@RtccPtrVal 007E                      __end_of_Led_MainTask 3746  
                             _ApnLenLocal 01F2                    ??_OsTmr_GetTimerStatus 0097  
            LedPulseStateMachine@LedPulse 008A                           __end_of_isalpha 5A7A  
                         __end_of_isdigit 5D0E                                     atoi@a 0088  
                                   atoi@s 0083                               _ClearBuffer 591C  
                         __end_of_isspace 5B86                I2c_WriteData@I2cWriteState 0038  
               Rtcc_GetRtccValue@RegValue 0080                   __size_of_Rtcc_RtcConfig 00A0  
                         __end_of_isupper 5CCA                                     pclath 000FFA  
                                   tablat 000FF5                          __end_ofi1___wmul 5BD4  
               __end_of_Rtcc_GetRtccValue 47D2                                     plusw0 000FEB  
                                   plusw1 000FE3                                     plusw2 000FDB  
                       __end_of_CDCInitEP 4CC8                                     utoa@c 0092  
                           ??_SetBaudRate 009E                                     utoa@v 0090  
                                   status 000FD8                           _I2cSlv_MainTask 50DA  
               Rtcc_GetRtccValue@RetValue 007F                       i1___wmul@multiplier 0019  
                                   wtemp6 0043                           __end_of_sprintf 367A  
                         __end_of_tolower 5E30                       __end_of_Mcu_Int0Isr 5FDE  
                     __end_of_Mcu_Int1Isr 5FDA                                     xtoi@c 008A  
                                   xtoi@s 0083                           __end_of_toupper 5E48  
                  __end_of_GetElapsedTime 3B36                     __end_of_UartSetConfig 4FD2  
                  __size_of_initGprsModem 0050               Rtcc_SetRtccValue@RtccPtrVal 0088  
                   __end_of_Term_MainTask 5E18                   LedStateMachine@LedBlink 0093  
                        __end_of_GetSmsSm 3064                   __CFG_DSWDTOSC$INTOSCREF 000000  
                         putUSBUSART@data 0083              __size_of_USBStdSetCfgHandler 00E6  
                 OsTmr_StartTimer@Timeout 0083                      __end_of_I2cSetConfig 5B32  
                          _InitSchedTimer 5AAA                           __initialization 268A  
                        __end_of_MdmCntSm 425E                      __end_of_I2c_ReadData 1FFE  
                 Rtcc_RtcConfig@RtcConfig 007E                      __end_of_I2cSendMsgSm 3CC2  
                 LedStateMachine@LedPulse 0095                                _MyApp_Task 3E42  
                            __end_of_atoi 35AC                              __end_of_main 5F7C  
                     StringCompare@Result 0085                              __end_of_itoa 55F4  
                  ??_LedPulseStateMachine 008D                     _control_signal_bitmap 01E2  
                            __end_of_utoa 41B6                              __end_of_xtoi 3318  
                __end_of_Rtcm_SetRtccDate 5182                   __size_of_Rtcc_UnlockRtc 0010  
                        ??_StartCondition 007D                          __end_of_ReadByte 5F9A  
                    Term_MainSm@TermDelay 03CC                            __CFG_OSC$HSPLL 000000  
                        __end_of_MsgReady FE76                 __size_of_USBCtrlEPService 0094  
                                  ??_atoi 0085                                    ??_main 00AC  
            __size_of_Uart_InitUartModule 030C                                    ??_itoa 0099  
                                  ??_utoa 0090                                    ??_xtoi 0085  
                           __activetblptr 000002                           ?_USBDeviceTasks 0001  
                        __end_of_TmrBInit 4614                                _ReceiveEvt 5AD8  
        Uart_WriteStringLen@StringToWrite 0080                               ?_USBSuspend 0001  
                       ?_Mcu_ConfigExtInt 0001                          ?_HighPriorityIsr 0001  
                      _Mdm_RequestSmsData 5F24                            ?_StringCompare 007D  
                        __end_of_Terminal 05EC                             ?_SetAckStatus 0001  
                       ?_Led_SetLedStatus 007D                                _OsTmr_Wait 4A86  
                            _cdc_mem_type 01E3                        ??_Mcu_ConfigExtInt 007D  
                       CheckModem@Timeout 03ED                           ReceiveEvt@Event 007D  
                             ?_CheckModem 0001                          _CDCDataOutHandle 00B8  
                         ??_StopCondition 007D                        ??_Led_SetLedStatus 007E  
                        ___awdiv@dividend 007D        __end_of_Uart_MdmGsmGprsReadService 39A6  
              _Uart_MdmGsmGprsReadService 38DC                __end_of_UsbDevice_MainTask 5BF8  
                         getsUSBUSART@len 0086                       ?_Mdm_RequestSmsData 0001  
                   __end_of_UartWriteByte 5D70                          ??_LowPriorityIsr 0068  
                                  _DSGPR0 000F4E                                    _DSGPR1 000F4F  
      Irq_InitIntController@IntPriorityEn 007F                     __size_of_CDCTxService 0146  
                                  i1l1395 5916                               _GenerateEvt 5E48  
                          __CFG_WDTEN$OFF 000000                                    _RCREG1 000FAF  
                                  _RCREG2 000FAA                                    _RCSTA1 000FAC  
                                  _RCSTA2 000F9C                 Uart_Uart1RxIsr@UartRxData 002C  
                           CDCTxService@i 0084                                    _RTCCAL 000F3E  
                                  _SPBRG1 000FB0                                    _SPBRG2 000FAB  
                                  _RPINR1 000EE7                                _TaskNumber FC5D  
                          __CFG_WPCFG$OFF 000000                                    _TXREG1 000FAE  
                                  _TXREG2 000FA9                                    _TXSTA1 000FAD  
                                  _TXSTA2 000FA8                               _ConnTimeout 02F5  
                    Mdm_IsSmsReceived@Ret 0081                  __end_of_Rtcc_AlarmConfig 4D34  
                         ??_Mcu_SetWdgSts 007D                    __end_of_InitSchedTimer 5AD8  
                          __CFG_WPDIS$OFF 000000                           ?_GetElapsedTime 0081  
                          _EnableReceiver 5FCE                                _UartConfig 0328  
                    __end_of_Mdm_MainTask 531C                         ??_Uart_Uart1RxIsr 0007  
                       _shortPacketStatus 00CA                             ??_Term_MainSm 00A7  
                                  _Relay1 01DD                                    _Relay2 01DC  
                                  _Relay3 01DB                                    _Relay4 01DA  
                          __CFG_XINST$OFF 000000             __size_of_I2cSlv_I2cReadMsgSts 0022  
                __end_of_MdmHttp_MainTask 54E2                                    _SmsLen 00D1  
                         USBDeviceTasks@i 0098               USBStdFeatureReqHandler@pUEP 0092  
                USBTransferOnePacket@data 007E                USBCtrlTrfInHandler@lastDTS 007E  
                           ??_RtccIrqInit 007D                  ??_OsAlrm_ProcessOsAlarms 0060  
                         ??_USBDeviceInit 0085                       __end_of_SetBaudRate 5408  
                                  ___lmul 4FD2                      _I2cSlv_ReceiveI2cMsg 567C  
                      TurnOnModem@Counter 02DA                              ?_putUSBUSART 0083  
                                  ___wmul 5B86                                 ??___awdiv 0081  
          GetElapsedTime@CurrentTimestamp 0091                            __CFG_STVREN$ON 000000  
                               ??___awmod 0081                        __size_of_SendSmsSm 01B8  
                       ?_Rtcm_GetRtccDate 0081                       _Led_SetLedBlinkTime 5182  
                               ??___lldiv 0091                      __end_of_getsUSBUSART 46AA  
                    ??_Mdm_RequestSmsData 0080                                 ??___lwdiv 0087  
                  Tmr_TmrBPrSet@IntFreqHz 0096                                 ??___lwmod 0081  
                       _USBEnableEndpoint 556C           __size_of_USBStdGetStatusHandler 00B2  
                           ??_Rtcc_RtcIsr 0001                              ReadByte@Byte 007D  
                                  _memcpy 5454                    __size_of_HttpGetMethod 04D0  
                                  _memset 5A1A                                    clear_0 272A  
                                  clear_1 273C                                    clear_2 2748  
                                  clear_3 2754                                    clear_4 2760  
                                  clear_5 276C                                    clear_6 2778  
                                  clear_7 2784                                    clear_8 2790  
                                  clear_9 279C                          ___awdiv@quotient 0083  
                      ??_Rtcm_GetRtccDate 0089                           ___awmod@divisor 007F  
                      _ExtInt0IsrCallback 02E4                         ?_OsTmr_StartTimer 0081  
                              _PostMethod 01EF                           ___awmod@counter 0081  
                     UartWriteByte@Module 007E                       GetSmsSm@GetSmsState 0026  
                      ?_USBEnableEndpoint 0085                                    _strcat 4F1E  
                                  _strcpy 59B8                                    _strlen 573C  
                                  _strtol 181C                          ClearBuffer@Index 0081  
           __size_of_USBTransferOnePacket 00BE                          __end_of_isxdigit 5832  
                HttpGetMethod@UartMessage 0100                             _initGprsModem 531C  
                      ??_OsTmr_StartTimer 0087                                    itoa@cp 0099  
                               ??_isalpha 0080                                 ??_isdigit 007D  
                          ??_SetAckStatus 007D                              _CDCTxService 2544  
                     ModemEvtParser@F9090 04EF                       ModemEvtParser@F9086 03C0  
                     ModemEvtParser@F9088 03BB                       MdmCntSm@MdmCntState 002E  
                            MyApp_Task@on 013E                          ?_LedStateMachine 008F  
                            __mediumconst FC54                                 ??_isspace 007D  
                  __size_of_CheckTxStatus 000A                                    tblptrh 000FF7  
                               ??_isupper 007D                                    tblptrl 000FF6  
                                  tblptru 000FF8                      __end_of_Mcu_ClearWdg 5FC6  
                     ??_USBEnableEndpoint 0086                               _MdmStsReady 0039  
                 __end_of_I2cSlv_MainTask 512E                           _InitGprsNetwork 0DC8  
                           ??_Tmr_Tmr2Isr 0023                              ??_I2cDummyTx 0021  
               OsTmr_GetTimerStatus@Timer 0095                               _Mcu_Int0Isr 5FDA  
                             _Mcu_Int1Isr 5FD6                      ?_Led_SetLedBlinkTime 007D  
                               ??_sprintf 0083                                 ??_tolower 007D  
                  __size_of_ScheduleTasks 0122                               _CtrlTrfData 000438  
                               ??_toupper 007D                       ModemEvtParser@Match 009B  
                    _controlTransferState 00C9                     __end_ofi1_GenerateEvt 5EA2  
                   __end_of_Rtcm_MainTask 48F0                __size_of_Rtcc_GetRtccValue 0094  
                      _ExtInt1IsrCallback 02E2                                __accesstop 0060  
                           ?_Wdg_MainTask 0001                   __end_of__initialization 27BA  
                  Tmr_TmrBPrSet@Prescaler 0098                              __pbssBIGRAMl 0AC8  
                  __end_of_EnableReceiver 5FD2                        __size_of_WriteByte 000A  
                 __size_of_ModemEvtParser 011A               Uart_WriteConstString@Module 0082  
               Uart_WriteStringLen@Module 0084                             ___rparam_used 000001  
                __size_of_USBStallHandler 0044                           ?_InitSchedTimer 0001  
              __end_of_UartTxBufferStatus 53BA           I2cSlv_QueryI2cData@TimeoutTimer 033D  
                    Terminal@FormatOption 02ED                           __CFG_IOL1WAY$ON 000000  
                              _StringCopy 4E00                            __pcstackBANK10 0A00  
                   I2cDummyTx@DummyBuffer 01FC                      __CFG_WPEND$PAGE_WPFP 000000  
                     __size_of_USBSuspend 0032  Uart_MdmGsmGprsReadService@ServiceCounter 0005  
                         MdmCntSm@Counter 02DE                     ?_I2cSlv_ReceiveI2cMsg 0080  
                          __pcstackCOMRAM 0001                 __end_of_USBEnableEndpoint 55B0  
                             _InitNetwork 00D8                               ?_MyApp_Task 0001  
                LedStateMachine@LedOutSts 0098                             __end_of_sd000 FE8C  
                           __end_of_sd001 FE5F                             __end_of_sd002 FE41  
                            __pidataBANK1 5FDE                              __pidataBANK2 5F62  
                            __pidataBANK3 56FC                              __pidataBANK4 5EB8  
                            __pidataBANK5 527C                         ?_UartSetConfigLow 0001  
        __size_of_USBCtrlEPAllowDataStage 009E                     _Uart_WriteConstString 5638  
                     __size_of_CheckModem 0152                __end_of_Uart_ClearRxBuffer 5986  
           __size_of_USBConfigureEndpoint 0098                  __size_of_InitializeTasks 0070  
                      __end_of_I2cDummyTx 5DE4               __end_of_USBCtrlTrfInHandler 3D84  
                         __CFG_DSWDTPS$G2 000000                      StringCompare@String1 007D  
                    StringCompare@String2 007F                        ??_UartSetConfigLow 007D  
                     __end_of_Term_MainSm 135A                     LedStateMachine@LedOut 0091  
                   LedStateMachine@LedSts 008F                        LedStateMachine@Led 0099  
                               ?i1___wmul 0019                            ?_initGprsModem 0001  
                     __end_of_RtccIrqInit 5E8C                     __size_of_Led_MainTask 00CC  
                         ??_StringCompare 0083             I2cSlv_QueryI2cData@I2cOpState 01E9  
                             ?_ReceiveEvt 007D                               _NewSmsEvent 0040  
                              _SystemInit 59EA                                _cdc_notice 044A  
                   __end_of_Tmr_TmrBPrSet 2F7C                       __end_of_Rtcc_RtcIsr 5FD6  
                              _cdc_rx_len 00C2                         __end_of_MsgFormat FD4F  
                              _cdc_tx_len 00C0                       Terminal@UsbRxBuffer 0A00  
                             ?_OsTmr_Wait 009B                     ??_Led_SetLedBlinkTime 0081  
                     Terminal@UsbTxBuffer 0200                                 ?_GetSmsSm 0001  
             __end_ofi1_I2cSlv_SendI2cMsg 591C                  ??_USBCtrlTrfSetupHandler 0097  
                 _USBTicksSinceSuspendEnd 01E4                            ClearBuffer@Len 007F  
                         _secondsAppTimer 4306                                 ?_MdmCntSm 0001  
                   _Irq_InitIntController 5B32                    _USBStdGetStatusHandler 3EFE  
                       __end_of_SendSmsSm 1BAA       Mcu_StartSystemPll@PllStartupCounter 007D  
                          _GprsNetworkSts 01F1                            _Rtcc_RtcConfig 43A8  
                              __pbssBANK0 00AC                                __pbssBANK1 01C9  
                              __pbssBANK2 02C8                                __pbssBANK3 0300  
                              __pbssBANK4 0440                                __pbssBANK5 0500  
                              __pbssBANK6 0600                                __pbssBANK7 0700  
                              __pbssBANK8 0800                                __pbssBANK9 0900  
                           _HttpGetMethod 05EC                   ?_Pm_DsReleasePinControl 0001  
                             _MessageText 07C4                            ??_Wdg_MainTask 007E  
                   __end_ofi2_GenerateEvt 5EB8                  __end_of_Uart_WriteString 57F6  
                               ?_ReadByte 0001                         MyApp_Task@Options 0001  
                   __size_of_I2cSetConfig 002C                           ?_EnableReceiver 0001  
                   __size_of_I2c_ReadData 015E                     __size_of_I2cSendMsgSm 00C4  
                     __end_of_Tmr_Tmr2Isr 5C64                               _SetBaudRate 53BA  
               initGprsModem@modemCounter 03B9               __size_of_USBWakeFromSuspend 003A  
              SendSmsSm@SendSms_NextState 01F3                               _pBDTEntryIn 00B2  
        UartTxBufferStatus@TxBufferStatus 007F          __end_of_USBCtrlEPServiceComplete 2E8E  
                               ?_TmrBInit 007D                             _CheckTxStatus 5F9A  
                           ??_TurnOnModem 0080                   __size_of_Tmr_TmrBConfig 00C8  
             __size_of_USBCheckCDCRequest 00B0                  Uart_WriteStringLen@Index 0083  
                       ?_GetOsTickCounter 007D                   __size_of_Tmr_TmrBIrqSet 004C  
                    USBCtrlTrfRxService@i 007D                                 ?_Terminal 0001  
                                 ?___lmul 007D                              _Led_MainTask 367A  
                          _Rtcc_UnlockRtc 5F04                              _I2cBusStatus 01EB  
                                 ?___wmul 007D           __size_of_OsAlrm_ProcessOsAlarms 0156  
                           _ScheduleTasks 2B52                 Uart_InitUartModule@Module 00A1  
                   MyApp_Task@I2cStsReady 01D4                     __end_of_I2c_WriteData 1EA0  
                      ??_GetOsTickCounter 0081                                   ?_memcpy 007D  
                                 ?_memset 007D                            ___lmul@product 0085  
                              _device_dsc FE76                   __size_of_CheckAckStatus 000A  
                        _USBCtrlEPService 46AA                     __end_of_UpdateSchFlag 5DC8  
                       MyApp_Task@smsText 0100                                _ep_data_in 02D1  
                         _I2cWriteDataEvt 00D6                  i1GenerateEvt@EventStatus 001B  
                           ?_Rtcc_LockRtc 0001                                   ?_strcat 007D  
                              ??i1___wmul 001D                   __end_of_InitGprsNetwork 10B6  
                                 ?_strcpy 007D                                   ?_strlen 007D  
                                 ?_strtol 0089             __size_of_LedBlinkStateMachine 0148  
             __end_of_USBCtrlTrfRxService 2B52                         __end_of_WriteByte 5F90  
                      _USBCheckStdRequest 3318                         _configDescriptor1 FDD8  
                     Wdg_MainTask@Options 0001                               _PhoneNumber 04C6  
             __end_of_USBCtrlTrfTxService 34D4                       _USBStdSetCfgHandler 314C  
                       triggerRelay@F8966 03CA                   __size_of_ConfigureModem 00CA  
                  I2cSlv_QueryI2cData@Ret 01E8                           __CFG_WDTPS$2048 000000  
                            _I2cSetConfig 5B06                                   _SPBRGH1 000F7F  
                                 _SPBRGH2 000F7D                    __end_of_Rtcc_RtcConfig 4448  
                                 _SSP2ADD 000F74                                ??_GetSmsSm 0087  
                                 _SSP2BUF 000F75                              _I2c_ReadData 1EA0  
                                 _RTCVALH 000F99                                   _RTCVALL 000F98  
                            _I2cSendMsgSm 3BFE                          ?_I2cSlv_MainTask 0001  
                      GsmGprsTerminal@SMS 01E0            __end_of_Pm_DsReleasePinControl 5FBC  
                     ?_USBCheckStdRequest 0001              __size_of_USBStdGetDscHandler 012E  
                              ??_MdmCntSm 0081                       __size_of_MyApp_Task 00BC  
                                 _UIEbits 000F36                            ?_HttpGetMethod 009B  
                            ?_ClearBuffer 007D                      _MdmOnOffPulseRequest 00DE  
                __size_of_blinkForSeconds 003A                                   _UIRbits 000F62  
                   CheckModem@CheckMdmSts 002A                 __size_of_UpdateOsCounters 0010  
                                 _Led1Sts 01FB                                   _Led2Sts 01F9  
                                 _Led3Sts 01F7                __end_of_Sch_SchmIntService 5F62  
                   __size_of_Mdm_MainTask 0050             ModemEvtParser@CallReadyString 0088  
                           _cdc_trf_state 00C1                                ??_ReadByte 007D  
                     _Uart_InitUartModule 0ABC                     __end_of_Mdm_DrvMainFn 5FC2  
                        _ComChecCompleted 002B                            ?_CheckTxStatus 0001  
             __size_of_Mcu_StartSystemPll 001E                                   _pCDCDst 02C8  
                   __end_of_Mdm_IsRinging 5C40                     InitGprsNetwork@ApnLen 009D  
                                 _pCDCSrc 02CB                     __size_of_getsUSBUSART 0096  
                                 _RelayB1 01DF                                   _RelayB2 01DE  
                             ?_StringCopy 007D                       __size_of_ReceiveEvt 002E  
                                 __Hparam 0000                                ??_TmrBInit 007F  
                  ??_I2cSlv_ReceiveI2cMsg 0084           ??_USBIncrement1msInternalTimers 007D  
                          _I2cReadDataEvt 00D5                                 ?_isxdigit 0001  
                    ?_USBStdSetCfgHandler 0001                                 _CDCInitEP 4C5C  
                  __end_of_Rtcc_UnlockRtc 5F14                                   __Lparam 0000  
         OsAlrm_SetOsAlarm@OsAlarmTimeout 0085                      __end_of_SetAckStatus 5EE0  
                             _Term_MainSm 10B6   Uart_WriteConstString@ConstStringToWrite 0080  
                                 _Welcome FD4F                __size_of_USBEnableEndpoint 0044  
                          ?_ScheduleTasks 0001                                ??_Terminal 00A2  
                       _Sch_MainScheduler 5D8E                    ?_Uart_WriteConstString 0080  
                     __size_of_OsTmr_Wait 0082                      ??_USBCheckStdRequest 0097  
                             _RtccIrqInit 5E76             __size_of_USBCtrlTrfOutHandler 0066  
                                 ___awdiv 497C                      Term_MainTask@Options 0001  
                         __size_of___lmul 0058                  __size_of_SetUartBaudRate 0138  
                                 ___awmod 4B08                                   ___lldiv 4A02  
                        ??_USBDeviceTasks 0098                           __size_of___wmul 0028  
                                 ___lwdiv 51D6                         ??_USBStallHandler 007D  
                                 ___lwmod 55F4                         ?_Rtcm_SetRtccDate 0089  
            __size_of_Uart_WriteStringLen 0040                        ?_Sch_MainScheduler 0001  
                         ??_initGprsModem 0093                               _Rtcc_RtcIsr 5FD2  
                    __size_of_putUSBUSART 0022                                   __pcinit 268A  
                      getsUSBUSART@buffer 0084                           __size_of_memcpy 0048  
                               _I2cComSts 00CC                       __end_of_TurnOnModem 5528  
                         __size_of_memset 0030                                 _I2cConfig 0353  
                          ??_Rtcc_LockRtc 007D                 __end_of_configDescriptor1 FE1B  
                                 __ramtop 0F00                Mdm_GetSmsData@GetSmsStatus 0089  
                   MyApp_Task@countRelay1 01FD                     MyApp_Task@countRelay2 03C8  
                             Terminal@Len 03AD                        ??_Rtcm_SetRtccDate 0091  
                   Tmr_TmrBIrqSet@TmrNumb 007F                      ?_Uart_InitUartModule 009D  
                                 __ptext0 5F70                                   __ptext1 59EA  
                                 __ptext2 5F7C                                   __ptext3 5FB6  
                                 __ptext4 5D70                                   __ptext5 5DE4  
                                 __ptext6 5B32                                   __ptext7 5AAA  
                                 __ptext8 39A6                                   __ptext9 2E8E  
                                 _inPipes 00AC                     __size_of_Mcu_ClearWdg 0004  
               GsmGprsTerminal@UartBuffer 0900               _USBDeferOUTDataStagePackets 0025  
                         __size_of_strcat 005C                   __end_of_secondsAppTimer 43A8  
                         __size_of_strcpy 0032                           __size_of_strlen 003E  
            __size_of_OsAlrm_ClearOsAlarm 0058                                 _T1CONbits 000FCD  
                         __size_of_strtol 01D6                        InitGprsNetwork@Apn 009B  
                            ??_USBSuspend 0091                                 _T2CONbits 000FCA  
                                 _isalpha 5A4A                                   _isdigit 5CEC  
                           ?_Tmr_StartTmr 0001                       ??_Sch_MainScheduler 00AC  
                             ?_SystemInit 0001                                   clear_10 27A8  
                                 clear_11 27B4                          ___awmod@dividend 007D  
                       ??_InitializeTasks 00A7                                 _T4CONbits 000F76  
                         _Tmr2IsrCallback 02EA       __end_of_Tmr_RegisterTmr2IsrCallback 5F86  
             _Tmr_RegisterTmr2IsrCallback 5F7C                                   _isspace 5B5C  
                            _Mdm_MainTask 52CC                                   _isupper 5CA8  
             __size_of_InitModemInterface 0008                      HttpGetMethod@GetData 009B  
                  ?_Irq_InitIntController 007D                    Term_MainSm@FwkBuildStr 013A  
                         ?_Rtcc_RtcConfig 007E                    _OsAlrm_ProcessOsAlarms 2154  
                            ??_CheckModem 009B                        __end_of_USB_CD_Ptr FC5D  
                     Mcu_SetWdgSts@WdgSts 007D                               _Tmr_Tmr2Isr 5C40  
                                 _sprintf 35AC                                   _tolower 5E18  
         __size_of_USBCtrlTrfSetupHandler 008C                           _Uart_Uart1RxIsr 5F44  
                        _HttpGetDataLocal 03A4                    Term_MainSm@FwkMajorStr 0132  
                          __pintcode_body 4060                                   _toupper 5E30  
         secondsAppTimer@destinationTicks 0091                         ClearBuffer@Buffer 007D  
                    end_of_initialization 27BA                              _getsUSBUSART 4614  
                        ??_GetElapsedTime 0085                               _SmsTxtReady 00D9  
             ?_Uart_MdmGsmGprsReadService 0004             __size_of_OsTmr_GetTimerStatus 0090  
                            ?_GenerateEvt 007D                    _MainSystemTimebaseFlag 02F4  
           i1I2cSlv_SendI2cMsg@DataLenght 001F                        __end_of_USB_SD_Ptr FC5B  
     Irq_InitIntController@PerInt_LowPInt 007E                                   memcpy@d 0083  
                                 memcpy@n 0081                                   memcpy@s 0085  
                     _pBDTEntryEP0OutNext 00BA                                   itoa@buf 0093  
                                 memset@c 007F                                   itoa@val 0095  
                                 memset@n 0081                    Term_MainSm@FwkMinorStr 0136  
                                 memset@p 0083                             __Lmediumconst FC54  
                          _ModemEvtParser 2C74                                 i1u1333_20 216A  
                                 int_func 4060                                 i1u1337_28 228A  
                               i1u1337_29 229E                           _USB1msTickCount 0318  
         _dummy_encapsulated_cmd_response 0378                                 i1u1355_28 5C50  
                ?_USBStdFeatureReqHandler 0001                 __size_of_Mcu_ConfigExtInt 001A  
                           MyApp_Task@off 013C                         ?_Rtcc_AlarmConfig 007D  
                   ??_USBStdSetCfgHandler 0091                           ___lldiv@divisor 008D  
               __end_of_Sch_MainScheduler 5DAC                 __size_of_Led_SetLedStatus 0030  
                              ??_isxdigit 0080                                ?_CDCInitEP 0001  
                         ___lldiv@counter 0095                         _Rtcc_SetRtccValue 15EE  
                       _Rtcc_SetRtcStatus 5E60                       _ActivateRiDetection 0041  
                         ?_Rtcc_UnlockRtc 0001                        ??_Rtcc_AlarmConfig 007F  
                      __end_of_USBSuspend 59B8                             StringCopy@Len 0081  
                       ?_MdmHttp_MainTask 0001                   _USBCtrlEPAllowDataStage 4448  
                      _UsbDevice_MainTask 5BD4                              _Mcu_ClearWdg 5FC2  
                                 postdec1 000FE5                                   postdec2 000FDD  
                      ?_Rtcc_SetRtccValue 0085                        ?_Rtcc_SetRtcStatus 0001  
                                 postinc0 000FEE                                   postinc1 000FE6  
                                 postinc2 000FDE                                   utoa@buf 008A  
                      ??_MdmHttp_MainTask 00A1                  _USBCtrlEPServiceComplete 2D8E  
                                 utoa@val 008C                   HttpGetMethod@GetMOutSts 01EC  
                   i1___wmul@multiplicand 001B                        __end_of_CheckModem 23FC  
                         _RtccIsrCallback 02E6          OsAlrm_ProcessOsAlarms@AlarmIndex 0021  
                      Terminal@EchoOption 02F3             __size_of_LedPulseStateMachine 00E8  
                                 strlen@s 007D                _USBStatusStageEnabledFlag1 00C5  
              _USBStatusStageEnabledFlag2 00C4                     ??_Uart_InitUartModule 009F  
                    __end_of_Wdg_MainTask 5C86                                   strtol@a 0094  
                                 strtol@c 0098                            _Rtcm_RtccAlarm 0308  
                                 strtol@s 0089                        USBEnableEndpoint@p 0086  
                     ?_UsbDevice_MainTask 0001                                   xtoi@val 0088  
                               _PORTDbits 000F83                                 _PORTEbits 000F84  
                     ??_Rtcc_SetRtccValue 0086                       ??_Rtcc_SetRtcStatus 007D  
                        __CFG_DSBOREN$OFF 000000                          ?_InitGprsNetwork 009B  
                          ??_Tmr_StartTmr 007D              __end_of_I2cSlv_I2cReadMsgSts 5D30  
                i1I2cSlv_SendI2cMsg@TxSts 0020                         StringCopy@DestStr 007F  
                        __CFG_CPUDIV$OSC1 000000                    __size_of_UartSetConfig 0058  
                         _Tmr4IsrCallback 02E8                          _HttpGetMethodSts 01F0  
                               _TRISBbits 000F93                      SendSmsSm@UartMessage 0100  
                               _TRISCbits 000F94                                 _TRISDbits 000F95  
                               _TRISEbits 000F96                       __size_of_StringCopy 0062  
                      _BothEP0OutUOWNsSet 01E5                           ??_HttpGetMethod 009D  
                 __size_of_Mdm_GetSmsData 003C                              strtol@endptr 008B  
                  __size_of_Term_MainTask 001A                              ?_Mcu_Int0Isr 0001  
               __size_of_Rtcm_GetRtccDate 0066                              ?_Mcu_Int1Isr 0001  
               I2c_WriteData@I2cNextState 0037                 USBConfigureEndpoint@EPNum 0082  
              ?_USBCtrlEPAllowStatusStage 0001                    __end_of_ModemEvtParser 2D8E  
                        ??_InitSchedTimer 00A4       USER_USB_CALLBACK_EVENT_HANDLER@size 008D  
                               _USTATcopy 00D3                     __end_of_StopCondition 5FCA  
                __size_of_HighPriorityIsr 4104                 Tmr_TmrBPrSet@TmrBPrCfgSts 009A  
               __size_of_OsTmr_StartTimer 005E                    secondsAppTimer@counter 008A  
                               _Led1Blink 036F                                 _Led2Blink 0366  
                    ??_UsbDevice_MainTask 0099                                 _Led3Blink 035D  
            __end_of_USBTransferOnePacket 3E42                           ??_CheckTxStatus 007D  
                               _Led1Pulse 0393                    secondsAppTimer@seconds 008F  
                       __CFG_WPFP$PAGE_63 000000                 __end_of_Rtcc_SetRtccValue 181C  
               __end_of_Rtcc_SetRtcStatus 5E76                                 _Led2Pulse 038D  
                               _Led3Pulse 0387                         _I2cSlv_SendI2cMsg 577A  
         SetBaudRate@DesiredI2cBusClockHz 0096                         ??_blinkForSeconds 0095  
                         ??_ScheduleTasks 00A7                            _Tmr_TmrBConfig 39A6  
                 Tmr_TmrBPrSet@Postscaler 0099                         putUSBUSART@length 0085  
                 MdmHttp_MainTask@Options 0001                     __end_of_Mcu_SetWdgSts 5EF2  
                       _OsAlrm_SetOsAlarm 3B36                      Terminal@TermRxBuffer 0550  
                      ?_I2cSlv_SendI2cMsg 0080                       __size_of_SystemInit 0030  
                          _Tmr_TmrBIrqSet 5408                       __CFG_MSSP7B_EN$MSK7 000000  
                             _TurnOnModem 54E2                              ??_MyApp_Task 0096  
                    Terminal@TermTxBuffer 0100                                 _GetMethod 00D7  
                  _USBCtrlTrfSetupHandler 48F0                        ?_OsAlrm_SetOsAlarm 0083  
                   __end_of_USBDeviceInit 2154     __end_of_USBIncrement1msInternalTimers 5CA8  
  __size_of_USBIncrement1msInternalTimers 0022             _USBIncrement1msInternalTimers 5C86  
             __size_of_Mdm_RequestSmsData 0010                            __end_of___lmul 502A  
                          _CheckAckStatus 5FA4                            __end_of___wmul 5BAE  
                     ??_I2cSlv_SendI2cMsg 0084                    __size_of_UartWriteByte 0020  
                          __end_of_memcpy 549C                        Terminal@PackageLen 02EF  
       Uart_MdmGsmGprsReadService@RxState 002D                            __end_of_memset 5A4A  
                      _UartTxBufferStatus 536C                       ??_OsAlrm_SetOsAlarm 008B  
                        __CFG_DSWDTEN$OFF 000000                              ??_ReceiveEvt 007F  
                       _USBBusIsSuspended 01E6                                 _Mdm_SmsRx 0700  
                        ?_secondsAppTimer 008A                         ??_SetUartBaudRate 0098  
                 __end_of_Uart_Uart1RxIsr 5F54                                 _MdmStatus 00CF  
                          __end_of_strcat 4F7A                            __end_of_strcpy 59EA  
                          __end_of_strlen 577A                            __end_of_strtol 19F2  
                     start_initialization 268A                         __size_ofi1___wmul 0026  
                 ?_USBStdGetStatusHandler 0001                            _ConfigureModem 3812  
                            ??_OsTmr_Wait 00A1                    Uart_WriteString@Module 0082  
           USBCtrlTrfRxService@byteToRead 007E                   __size_of_StartCondition 0004  
                    Rtcm_SetRtccDate@Date 0089                           _MdmResetRequest 003D  
                     ?_UartTxBufferStatus 0001                        _Uart_ClearRxBuffer 5952  
               __size_of_UartSetConfigLow 0058                          ??_EnableReceiver 007D  
                             _cdc_data_rx 0454                               _cdc_data_tx 0784  
            __end_of_USBConfigureEndpoint 457E           __end_of_USBStdFeatureReqHandler 15EE  
                               _MsgFormat FC5F                        __end_of_MyApp_Task 3EFE  
                        _UpdateOsCounters 5F34                           ?_ModemEvtParser 0001  
              I2c_InitI2cModule@I2cConfig 00A2                         __size_of_GetSmsSm 00E8  
       __end_of_USBCtrlEPAllowStatusStage 3812                 __end_of_I2cSlv_SendI2cMsg 57B8  
                  Uart_WriteStringLen@Len 0082                  __size_of_LedStateMachine 00A8  
                __end_of_USBCtrlEPService 473E                         __size_of_MdmCntSm 00A8  
                       ?_Uart_WriteString 0080                     __size_of_SetAckStatus 0014  
                    __size_of_ClearBuffer 0036                      __end_of_Rtcc_LockRtc 5F24  
                     ?_Uart_ClearRxBuffer 0001                              ?_SetBaudRate 0096  
                  __end_of_Tmr_TmrBConfig 3A6E                                 _SendSmsSm 19F2  
               __end_of_OsAlrm_SetOsAlarm 3BFE                    __end_of_Tmr_TmrBIrqSet 5454  
                               _TaskTable 0582                                 _RingEvent 00DC  
               ??_USBCtrlEPAllowDataStage 007E                        ??_Uart_WriteString 0082  
                             _SystemState 00D2                         __size_of_ReadByte 000A  
                               _RtcConfig 03B5                __size_of_Sch_MainScheduler 001E  
           Uart_InitUartModule@UartConfig 009D                               ??_CDCInitEP 0089  
                          USBDeviceInit@i 0085                             _UartSetConfig 4F7A  
                  Led_SetLedBlinkTime@Led 0081                        __end_of_ReceiveEvt 5B06  
                  _pBDTEntryEP0OutCurrent 00BC                             _Term_MainTask 5DFE  
                 USBTransferOnePacket@dir 007D                      ??_UartTxBufferStatus 007D  
                 USBTransferOnePacket@len 0080                     Tmr_TmrBConfig@TmrNumb 00A3  
                 __size_of_LowPriorityIsr 00B4                             _isxdigit$6415 0081  
                  __end_of_CheckAckStatus 5FAE                                  ??___lmul 0085  
                               Terminal@i 00A4                                  ??___wmul 0081  
                       __size_of_TmrBInit 0096    Tmr_RegisterTmr2IsrCallback@IsrCallback 007D  
                     _USBStdGetDscHandler 2900                I2cSlv_SendI2cMsg@SlaveAddr 0082  
                      __end_of_OsTmr_Wait 4B08                        HttpGetMethod@Index 01C8  
                             __pdataBANK1 01FD                               __pdataBANK2 02F3  
                             __pdataBANK3 03BB                               __pdataBANK4 04E5  
                             __pdataBANK5 0582                          __CFG_LPT1OSC$OFF 000000  
                       __size_of_Terminal 051C                                  ??_memcpy 0083  
                                ??_memset 0083                    __size_ofi1_GenerateEvt 0016  
                     Tmr_StartTmr@TmrNumb 007D                      ??_Uart_ClearRxBuffer 007D  
     __size_of_Uart_MdmGsmGprsReadService 00CA                                  ??_strcat 0081  
                                ??_strcpy 0081                                  ??_strlen 007F  
                  __size_of_Rtcm_MainTask 008E                                  ??_strtol 008F  
             __end_of_Led_SetLedBlinkTime 51D6                    __end_of_ConfigureModem 38DC  
                             _ALRMCFGbits 000F91                    _USBActiveConfiguration 00D4  
          __end_of_USBStdGetStatusHandler 3FB0                             WriteByte@Byte 007D  
                      __end_of_TaskNumber FC5F                               __pbssCOMRAM 0023  
                 GetElapsedTime@TimeValue 008D                     __end_of_StringCompare 527C  
               __size_of_GetOsTickCounter 0012                             __pcstackBANK0 0060  
                           __pcstackBANK1 0100                             __pcstackBANK2 0200  
            __size_of_USBCtrlTrfInHandler 00C2                           RiSm@MdmDrvState 002F  
                  MyApp_Task@blinkSeconds 01D3                              _SetAckStatus 5ECC  
                            _isalpha$6405 0081                    GenerateEvt@EventStatus 007F  
                               _WriteByte 5F86                              _isdigit$6139 007E  
                    ?_USBStdGetDscHandler 0001             UpdateSchFlag@InterruptCounter 02DC  
               SetUartBaudRate@UartConfig 0096                       _Uart_WriteStringLen 56BC  
     InitGprsNetwork@GprsNetInitNextState 00CE                      MyApp_Task@blickTicks 03F8  
                 GetElapsedTime@StartTime 0081                             _UartWriteByte 5D50  
                             _ALRMRPTbits 000F90                __end_of_USBWakeFromSuspend 58A8  
            __end_of_LedBlinkStateMachine 2544                               sprintf@flag 0083  
                         _USBStallHandler 5528                                ?_SendSmsSm 0001  
                            _pBDTEntryOut 030E                __size_of_Rtcc_SetRtccValue 022E  
                    __size_of_GenerateEvt 0018                           ?_Tmr_TmrBConfig 00A0  
              __size_of_Rtcc_SetRtcStatus 0016                          _Mcu_ConfigExtInt 5DE4  
              __end_of_USBCheckCDCRequest 4060              __size_ofi1_I2cSlv_SendI2cMsg 003A  
                     _OsAlrm_ClearOsAlarm 5082                           ?_Tmr_TmrBIrqSet 007D  
                 ??_Uart_WriteConstString 0082                            ?_UartSetConfig 0001  
                    __end_of_Tmr_StartTmr 5D50                              ??_StringCopy 0083  
                        _Led_SetLedStatus 5A7A                         ??_HighPriorityIsr 0007  
                          ?_Term_MainTask 0001                          ___lwdiv@dividend 0083  
                            ?_Term_MainSm 0001                      _I2cSlv_I2cReadMsgSts 5D0E  
                        GenerateEvt@Event 007D                    __size_of_Tmr_TmrBPrSet 00EE  
                   __size_of_Wdg_MainTask 0022                                 __pintcode 0008  
           Uart_WriteString@StringToWrite 0080                             __pmediumconst FC54  
                            ?_RtccIrqInit 0001                           ?_CheckAckStatus 0001  
                 Tmr_TmrBIrqSet@TmrIrqSts 007E                         __size_of_isxdigit 003C  
                                ?___awdiv 007D                                 __ptext100 5832  
                               __ptext101 5182                                 __ptext110 3812  
                               __ptext102 4F7A                                 __ptext111 0ABC  
                               __ptext103 54E2                                 __ptext120 57B8  
                               __ptext112 27C8                                 __ptext104 19F2  
                               __ptext121 5638                                 __ptext113 4FD2  
                               __ptext105 56BC                                 __ptext130 425E  
                               __ptext122 5D50                                 __ptext114 502A  
                               __ptext106 2C74                             Terminal@Index 00A6  
                               __ptext131 3064                                 __ptext123 536C  
                               __ptext115 22AA                                 __ptext107 5952  
                               __ptext140 5B06                                 __ptext132 5A7A  
                               __ptext124 4E00                                 __ptext116 41B6  
                               __ptext108 522A                                 __ptext141 3BFE  
                               __ptext133 23FC                                 __ptext125 4EC0  
                               __ptext117 5FAE                                 __ptext109 2F7C  
                               __ptext150 5E48                                 __ptext142 5AD8  
                               __ptext134 51D6                                 __ptext126 47D2  
                               __ptext118 0DC8                                 __ptext151 5FCE  
                               __ptext143 1D32                                 __ptext135 3B36  
                               __ptext127 3A6E                                 __ptext119 05EC  
                               __ptext160 5BAE                                 __ptext152 5F9A  
                               __ptext144 1EA0                                 __ptext136 5B86  
                               __ptext128 5EF2                                 __ptext161 5082  
                               __ptext153 5FA4                                 __ptext145 5F86  
                               __ptext137 4B7A                                 __ptext129 591C  
                               __ptext170 5FD6                                 __ptext162 5DC8  
                               __ptext146 5FC6                                 __ptext138 53BA  
                               __ptext171 5FDA                                 __ptext163 58E2  
                               __ptext155 5C40                                 __ptext147 5FCA  
                               __ptext139 4A02                                 __ptext172 0000  
                               __ptext164 5E8C                                 __ptext156 5F54  
                               __ptext148 5ECC                                 __ptext157 5DAC  
                               __ptext149 5F90                                 __ptext166 5F44  
                               __ptext158 5F34                                 __ptext167 38DC  
                               __ptext159 2154                                 __ptext168 5EA2  
                               __ptext169 5FD2                                  ?___awmod 007D  
                      _Sch_SchmIntService 5F54                           _InitializeTasks 4BEC  
                                ?___lldiv 0089                      ?_Uart_WriteStringLen 0080  
                                ?___lwdiv 0083                                  ?___lwmod 007D  
                         _CallClosedEvent 003E                              ?_Rtcc_RtcIsr 0001  
                             __pintcodelo 0018                    __size_ofi2_GenerateEvt 0016  
           I2cSlv_QueryI2cData@QueryTimer 0348                          ??_Rtcc_RtcConfig 0080  
                    ?_OsAlrm_ClearOsAlarm 0001                               _I2cRxPacket 0399  
                     Mdm_MainTask@Options 0001                       ?_Sch_SchmIntService 0001  
                    _USBTransferOnePacket 3D84                           ?_ConfigureModem 0001  
                 ??_Irq_InitIntController 007F                      MyApp_Task@isRelay1On 01D7  
                    MyApp_Task@isRelay2On 01D6        Uart_MdmGsmGprsReadService@UartData 0004  
                             _I2cTxBuffer 0440                   ?_OsAlrm_ProcessOsAlarms 0001  
                                _BAUDCON1 000F7E                                  _BAUDCON2 000F7C  
                        ?_Uart_Uart1RxIsr 0001                                  ?_isalpha 0001  
                            ??_SystemInit 00AB                                  ?_isdigit 0001  
                             _I2cTxPacket 039F            InitializeTasks@ActiveTaskIndex 00A9  
                    __CFG_RTCOSC$T1OSCREF 000000                                  ?_isspace 0001  
                          _Mdm_GetSmsData 5832                      InitGprsNetwork@Index 0132  
                                ?_isupper 0001                Term_MainSm@TermMainSmState 02EC  
                         Terminal@Payload 0500                               _PADCFG1bits 000F3C  
            __end_of_USBCtrlTrfOutHandler 4D9A                                ?_WriteByte 0001  
                   ??_USBStdGetDscHandler 007D                          _Rtcm_GetRtccDate 4D9A  
              ConfigureModem@DelayCounter 02D6                        __end_of_StringCopy 4E62  
                             _ep_data_out 02CE                                  _ALRMVALH 000F8F  
                                _ALRMVALL 000F8E                          ___lwdiv@quotient 0088  
                            ?_Tmr_Tmr2Isr 0001                              _SendSmsEvent 00DD  
                         Terminal@SwTimer 04DA                                  ?_sprintf 007D  
                                ?_tolower 0001                 __size_of_Rtcm_SetRtccDate 0054  
            __size_of_USBCtrlTrfRxService 0124             USBConfigureEndpoint@direction 007D  
                                ?_toupper 0001                                  _I2cReady 01D9  
                          ?_UartWriteByte 007D                    __size_of_I2c_WriteData 016E  
              ConfigureModem@DelayValueMs 02D8                          _OsTmr_StartTimer 4EC0  
                    __size_of_Mcu_Int0Isr 0004                      __size_of_Mcu_Int1Isr 0004  
 Irq_InitIntController@GlobalInt_HighPInt 007D                __size_of_I2cSlv_SendI2cMsg 003E  
            __size_of_USBCtrlTrfTxService 00D8                          ??_Rtcc_UnlockRtc 007D  
                           i1_GenerateEvt 5E8C                __end_of_Mcu_StartSystemPll 5D8E  
                            _PhoneNumbLen 00D0                              _Wdg_MainTask 5C64  
                           _Rtcm_MainTask 4862                            ___wmul@product 0081  
                        SendSmsSm@SwTimer 03E2                     Terminal@ReceivedBytes 00A5  
                    ??_Sch_SchmIntService 0023                    __size_of_UpdateSchFlag 001C  
              __size_of_OsAlrm_SetOsAlarm 00C8                ??_USBCtrlEPServiceComplete 007E  
                __size_of_I2cSlv_MainTask 0054                                  _IPR1bits 000F9F  
                 LedPulseStateMachine@Led 008C                                  _IPR3bits 000FA5  
                                _PIE1bits 000F9D                                  _PIE2bits 000FA0  
                                _PIE3bits 000FA3      __size_of_Tmr_RegisterTmr2IsrCallback 000A  
            ConfigureModem@MdmConfigState 0028           HttpGetMethod@GetMethodNextState 00CD  
                   ?_I2cSlv_I2cReadMsgSts 0001                         _I2c_InitI2cModule 4B7A  
                       _IncomingCallEvent 003F                                  _PIR1bits 000F9E  
                                _PIR2bits 000FA1                                  _PIR3bits 000FA4  
                       ??_LedStateMachine 0097                        __end_of_SystemInit 5A1A  
                                _RCONbits 000FD0                             ??_putUSBUSART 0086  
                                _UEP0bits 000F26             __size_of_I2cSlv_ReceiveI2cMsg 0040  
              _USBDeferINDataStagePackets 00C3                        ?_I2c_InitI2cModule 00A2  
                   ??_Uart_WriteStringLen 0083                                  _SSP2CON1 000F72  
                                _SSP2CON2 000F71               __size_of_USBCheckStdRequest 00E4  
                    Rtcm_MainTask@Options 0001              __end_of_OsTmr_GetTimerStatus 4862  
                                _UCONbits 000F65                                  _SSP2STAT 000F73  
                ModemEvtParser@CompareIdx 009C                      _USBConfigureEndpoint 44E6  
        __size_of_USBStdFeatureReqHandler 0294                     SetUartBaudRate@Module 0099  
          __end_of_OsAlrm_ProcessOsAlarms 22AA                     ??_OsAlrm_ClearOsAlarm 0019  
                       ___wmul@multiplier 007D                     ?_USBTransferOnePacket 007D  
                                i1___wmul 5BAE                     __end_of_initGprsModem 536C  
                     ??_I2c_InitI2cModule 00A4                 __size_of_Rtcc_AlarmConfig 006C  
              __end_of_InitModemInterface 5FB6                    __end_of_Mdm_GetSmsData 586E  
                           ?_CDCTxService 0001            OsAlrm_SetOsAlarm@AlarmCallback 0089  
                  __size_of_Mdm_DrvMainFn 0006                              _RemoteWakeup 01E7  
                                _ApnLocal 0326                            _StartCondition 5FCA  
                      SetAckStatus@AckSts 007D                 __size_of_MdmHttp_MainTask 0046  
                  __size_of_Mdm_IsRinging 0024                          StringCompare@Len 0081  
             HttpGetMethod@GetMethodState 01ED                             _Tmr_TmrBPrSet 2E8E  
                       _NewStringReceived 003C                              _isspace$6408 007E  
                        _UartSetConfigLow 502A                                  _GetSmsSm 2F7C  
                 __end_of_USBStallHandler 556C                      Mdm_DrvMainFn@Options 0001  
                         _blinkForSeconds 58A8                     __size_of_Rtcc_LockRtc 0010  
                                _ConnWait 03D7                                  _MdmCntSm 41B6  
                       ___lmul@multiplier 007D                               _INTCON2bits 000FF1  
                             _INTCON3bits 000FF0                    I2cSlv_MainTask@Options 0001  
                               copy_data0 269E                                 copy_data1 26BE  
                               copy_data2 26DE                                 copy_data3 2716  
            __end_of_LedPulseStateMachine 314C                    I2cSlv_SendI2cMsg@TxSts 0084  
             ??_USBCtrlEPAllowStatusStage 007D               __end_of_USBStdSetCfgHandler 3232  
                          ?i1_GenerateEvt 0019                  Tmr_TmrBConfig@TmrBConfig 00A0  
                                _OsAlarms 0600                            ?_Rtcm_MainTask 0001  
                   OsTmr_StartTimer@Timer 0081              LedBlinkStateMachine@LedBlink 008A  
                                _ReadByte 5F90                             i2_GenerateEvt 5EA2  
                         ??_UartSetConfig 007D                               ??_SendSmsSm 009B  
                      __end_of_device_dsc FE88                 __end_of_I2c_InitI2cModule 4BEC  
                                _MsgReady FE5F                           ??_Term_MainTask 00A7  
                 __end_of_InitializeTasks 4C5C                initGprsModem@isInitialized 01D8  
                 ?_USBCtrlTrfSetupHandler 0001                                _ANCON1bits 000F49  
                                _RxBuffer 0C58                   USBStdGetStatusHandler@p 007E  
                                __Hrparam 0000                                  _TmrBInit 457E  
                    __size_of_SetBaudRate 004E                              ?_TurnOnModem 0001  
                                _TxBuffer 0322                            _LowPriorityIsr 0018  
                               memcpy@tmp 0087                      Tmr_TmrBPrSet@Divisor 009C  
                                __Lrparam 0000                    USBTransferOnePacket@ep 0081  
             __end_of_Uart_InitUartModule 0DC8                                  _SmsEvent 00DB  
                         _SetUartBaudRate 27C8              i1I2cSlv_SendI2cMsg@SlaveAddr 001E  
                                _Terminal 00D0                                  _SetupPkt 000430  
               I2cSlv_SendI2cMsg@TxBuffer 0080                     SetBaudRate@McuClockHz 009A  
                   ?_USBConfigureEndpoint 007D              OsAlrm_ClearOsAlarm@OsAlarmId 0019  
                           _I2c_WriteData 1D32                          __size_of___awdiv 0086  
                        __size_of___awmod 0072                  __end_of_UpdateOsCounters 5F44  
                         MyApp_Task@F8990 03C6                          __size_of___lldiv 0084  
                         MyApp_Task@F8993 03C4                           MyApp_Task@F8996 0320  
                         MyApp_Task@F8999 04E5                         Terminal@SlaveAddr 02EE  
                     OsTmr_Wait@WaitTimer 009B                          __size_of___lwdiv 0054  
                    Tmr_TmrBPrSet@TmrNumb 009B                          __size_of___lwmod 0044  
                I2c_WriteData@WritePacket 007E                         Terminal@TermState 02F0  
                           _UpdateSchFlag 5DAC                       __end_of_putUSBUSART 5CEC  
                             _line_coding 0380                              _Rtcc_LockRtc 5F14  
                    _LedBlinkStateMachine 23FC                    __end_of_StartCondition 5FCE  
                          ??_CDCTxService 0084                  ??_Pm_DsReleasePinControl 007D  
                  SendSmsSm@SendSms_State 01F4                 Rtcm_GetRtccDate@LocalDate 008A  
                         ?_Mdm_GetSmsData 0087                  I2c_WriteData@WriteStatus 0035  
                            _isupper$6411 007E                                strcat@from 007F  
                 I2c_ReadData@DataCounter 0033                            ?_Tmr_TmrBPrSet 0096  
                        ??_ModemEvtParser 0088                          _GetOsTickCounter 5EF2  
                        __size_of_isalpha 0030                          __size_of_isdigit 0022  
                 __size_of_USBDeviceTasks 0188                           ___lwdiv@divisor 0085  
                            Terminal@Addr 03A9                  ModemEvtParser@RingString 0097  
                             ??_WriteByte 007D                          __size_of_isspace 002A  
                         ___lwdiv@counter 0087                           MyApp_Task@phone 0132  
                                __ptext10 5408                                  __ptext11 5D30  
                                __ptext20 5BD4                                  __ptext12 457E  
                                __ptext21 549C                                  __ptext13 5D8E  
                         ??_UartWriteByte 007E                                  __ptext30 5986  
                                __ptext22 52CC                                  __ptext14 2B52  
                                __ptext31 5528                                  __ptext23 50DA  
                                __ptext15 4BEC                                  __ptext40 314C  
                                __ptext32 5C86                                  __ptext24 5FBC  
                                __ptext16 3E42                                  __ptext41 3EFE  
                                __ptext33 1FFE                                  __ptext25 5C64  
                                __ptext17 5DFE                                  __ptext50 2A2E  
                                __ptext42 2900                                  __ptext34 46AA  
                                __ptext26 5EE0                                  __ptext18 4862  
                                __ptext51 3746                                  __ptext43 135A  
                                __ptext35 5454                                  __ptext27 5FC2  
                                __ptext19 367A                                  __ptext60 00D0  
                                __ptext52 3CC2                                  __ptext44 4E62  
                                __ptext36 48F0                                  __ptext28 1BAA  
                                __ptext61 3232                                  __ptext53 33FC  
                                __ptext45 3FB0                                  __ptext37 2D8E  
                                __ptext29 586E                                  __ptext70 5CCA  
                                __ptext62 5E18                                  __ptext54 2544  
                                __ptext46 4C5C                                  __ptext38 4448  
                                __ptext71 55B0                                  __ptext63 57F6  
                                __ptext55 10B6                                  __ptext47 556C  
                                __ptext39 3318                                  __ptext80 567C  
                                __ptext72 410C                                  __ptext64 181C  
                                __ptext56 573C                                  __ptext48 44E6  
                                __ptext81 5D0E                                  __ptext73 55F4  
                                __ptext65 5E30                                  __ptext57 4F1E  
                                __ptext49 4D34                                  __ptext90 5E60  
                                __ptext82 512E                                  __ptext74 4614  
                                __ptext66 5B5C                                  __ptext58 35AC  
                                __ptext91 43A8                                  __ptext83 5F04  
                                __ptext75 3D84                                  __ptext67 5A4A  
                                __ptext59 5A1A                                  __ptext92 5E76  
                                __ptext84 15EE                                  __ptext76 34D4  
                                __ptext68 5CA8                                  __ptext93 4CC8  
                                __ptext85 4B08                                  __ptext77 5CEC  
                                __ptext69 59B8                                  __ptext94 531C  
                                __ptext86 497C                                  __ptext78 4A86  
                                __ptext95 58A8                                  __ptext87 5F14  
                                __ptext79 577A                                  __ptext96 4306  
                                __ptext88 4D9A                                  __ptext97 5F24  
                                __ptext89 473E                                  __ptext98 5BF8  
                                __ptext99 5C1C                          __size_of_isupper 0022  
                              _I2cDummyTx 5DC8                    Tmr_TmrBIrqSet@Priority 007D  
                   __end_of_HttpGetMethod 0ABC                  __size_of_InitGprsNetwork 02EE  
                            _SSP2CON2bits 000F71                                 isxdigit@c 0082  
                        __size_of_sprintf 00CE                          __size_of_tolower 0018  
                   __size_of_Tmr_StartTmr 0020                          __size_of_toupper 0018  
                          ?i2_GenerateEvt 0001                                _DSCONHbits 000F4D  
                              strcpy@from 007F                         _Mmd_RingIndicator 0030  
                              _DSCONLbits 000F4C                        i1GenerateEvt@Event 0019  
                       _Mdm_IsSmsReceived 5BF8               __size_of_UsbDevice_MainTask 0024  
                           __size_of_atoi 00D8                        TmrBInit@Postscaler 007E  
          __end_of_USBCtrlTrfSetupHandler 497C                             __size_of_main 000C  
                       ?_USBCtrlEPService 0001                             __size_of_itoa 0044  
               Mdm_GetSmsData@MessageText 0087                             __size_of_utoa 00AA  
                     Led_MainTask@Options 0001                             __size_of_xtoi 00E6  
                  ??_I2cSlv_I2cReadMsgSts 0081                    __end_of_LowPriorityIsr 00CC  
                   __end_of_CheckTxStatus 5FA4                        ?_Mdm_IsSmsReceived 0001  
                           _Mdm_DrvMainFn 5FBC                        ??_USBCtrlEPService 0097  
                                _isxdigit 57F6                             _Mdm_IsRinging 5C1C  
                     _USBCtrlTrfInHandler 3CC2                  I2c_ReadData@I2cReadState 0034  
              __end_of_Mdm_RequestSmsData 5F34                     __end_of_ScheduleTasks 2C74  
                 __size_of_GetElapsedTime 00C8                             ?_Led_MainTask 0001  
               blinkForSeconds@blickTicks 0093                                  _outPipes 01C9  
                    _USBCtrlTrfOutHandler 4D34                       Led_SetLedStatus@Led 007E  
                                int$flags 0042                                strtol@base 008D  
                          ?_I2c_WriteData 007E                                  atoi@sign 0087  
                       ??_I2cSlv_MainTask 00A6                           StringCopy@Index 0085  
               _USBCtrlEPAllowStatusStage 3746                       ??_Mdm_IsSmsReceived 0081  
               MyApp_Task@I2cTxBufferTest 0140                      __size_of_Term_MainSm 02A4  
            ScheduleTasks@ActiveTaskIndex 00AB                                strtol@sign 0093  
                         Term_MainSm@Data 0494                            _PhoneNumberLen 0324  
                    __size_of_RtccIrqInit 0016                 __size_of_Uart_WriteString 003E  
                  ??_USBTransferOnePacket 0081                            ?_UpdateSchFlag 0001  
                  __size_of_StopCondition 0004                     ?_LedBlinkStateMachine 008A  
                 __end_of_blinkForSeconds 58E2                      __size_of_Rtcc_RtcIsr 0004  
                     i1_I2cSlv_SendI2cMsg 58E2                  __end_of_Mcu_ConfigExtInt 5DFE  
                         ?_StartCondition 0001                 _USBDeferStatusStagePacket 00C6  
                CDCTxService@byte_to_send 0085             I2c_WriteData@TentativeCounter 0036  
                             _OSCTUNEbits 000F9B                                _INTCONbits 000FF2  
                UartWriteByte@ByteToWrite 007D                              _Tmr_StartTmr 5D30  
                __end_of_Led_SetLedStatus 5AAA                      ?_USBCtrlTrfInHandler 0001  
                                memcpy@d1 007D                                  memcpy@s1 007F  
              I2cSlv_I2cReadMsgSts@Result 0081             USBCtrlTrfTxService@byteToSend 007D  
                           ?_I2cSetConfig 0001                                  itoa@base 0097  
             i1I2cSlv_SendI2cMsg@TxBuffer 001C                             ?_I2c_ReadData 0080  
                           ?_I2cSendMsgSm 0001                                  isalpha@c 0082  
                  __size_of_Mcu_SetWdgSts 0012                                  isdigit@c 007F  
                                memset@p1 007D                          ?_USBStallHandler 0001  
                         ??i1_GenerateEvt 001B                          _Rtcm_SetRtccDate 512E  
                USBStdFeatureReqHandler@p 0095                          ??_Tmr_TmrBConfig 00A2  
                           ??_ClearBuffer 0081                           _HighPriorityIsr 0008  
                         ??_Rtcm_MainTask 0092                 __end_of_Mdm_IsSmsReceived 5C1C  
                        ??_Tmr_TmrBIrqSet 007F                  __size_of_secondsAppTimer 00A2  
                                intlevel1 0000                                  intlevel2 0000  
                    _OsTmr_GetTimerStatus 47D2                                 sprintf@ap 0084  
                               sprintf@cp 0087                                 sprintf@sp 007D  
                       TmrBInit@Prescaler 007D                      __size_of_Tmr_Tmr2Isr 0024  
                  __size_of_USBDeviceInit 0156   __end_of_USER_USB_CALLBACK_EVENT_HANDLER 4EC0  
__size_of_USER_USB_CALLBACK_EVENT_HANDLER 005E         ??_USER_USB_CALLBACK_EVENT_HANDLER 008F  
        ?_USER_USB_CALLBACK_EVENT_HANDLER 0089           _USER_USB_CALLBACK_EVENT_HANDLER 4E62  
                 Rtcc_SetRtcStatus@Status 007D                          ___lwmod@dividend 007D  
                          MyApp_Task@test 01D5                   __end_of_SetUartBaudRate 2900  
                                isspace@c 007F                          ___lldiv@dividend 0089  
                GsmGprsTerminal@UsbBuffer 0800                      ?i1_I2cSlv_SendI2cMsg 001C  
              __size_of_I2c_InitI2cModule 0072                            ?_Mdm_DrvMainFn 0001  
                        ??_CheckAckStatus 007D                    blinkForSeconds@seconds 0095  
                         ?_LowPriorityIsr 0001                          ?_InitializeTasks 0001  
                                isupper@c 007F                            ?_Mdm_IsRinging 0001  
                              _OSCCONbits 000FD3                 I2cSlv_ReceiveI2cMsg@RxSts 0084  
          __size_of_Uart_WriteConstString 0044                   ModemEvtParser@SmsString 0092  
                          ??_Led_MainTask 009A             __end_of_Uart_WriteConstString 567C  
                           OsTmr_Wait@Ret 00A1                         OsTmr_Wait@DelayMs 009D  
                 __size_of_InitSchedTimer 002E                    ??_USBConfigureEndpoint 007E  
                   ?_USBCtrlTrfOutHandler 0001               __size_of_UartTxBufferStatus 004E  
                __end_of_Rtcm_GetRtccDate 4E00                               _putUSBUSART 5CCA  
                     _USBCtrlTrfRxService 2A2E                          ??_ConfigureModem 00A2  
                  Rtcc_SetRtccValue@Value 0085                        _USBWakeFromSuspend 586E  
                 _USBStdFeatureReqHandler 135A                  __end_of_OsTmr_StartTimer 4F1E  
                    _LedPulseStateMachine 3064                        _USBCheckCDCRequest 3FB0  
                     _USBCtrlTrfTxService 33FC                       RtccIrqInit@Priority 007D  
                                utoa@base 008E                                _RTCCFGbits 000F3F  
             __size_of_Uart_ClearRxBuffer 0034                          _Rtcc_AlarmConfig 4CC8  
                         ??_Tmr_TmrBPrSet 009A                                  sprintf@c 0086  
                                sprintf@f 007F                                  tolower@c 007D  
                                strcat@cp 0081                                  strcat@to 007D  
                     ?_USBWakeFromSuspend 0001           __size_of_Pm_DsReleasePinControl 0006  
                        ___lldiv@quotient 0091                InitGprsNetwork@GprsInitSts 01FE  
                         ___lwmod@divisor 007F               GsmGprsTerminal@FirstRecFlag 01E1  
                   ??_USBCtrlTrfInHandler 007E                                  strcpy@cp 0081  
                                strlen@cp 0081                                  strcpy@to 007D  
               UsbDevice_MainTask@Options 0001                     _USBAlternateInterface 02F1  
                         ___lwmod@counter 0081                             ?_Mdm_MainTask 0001  
                          ??_I2cSetConfig 007D            __size_of_Irq_InitIntController 002A  
                                toupper@c 007D           SetUartBaudRate@BaudRateRegister 009A  
                     ?_USBCheckCDCRequest 0001                          _MdmHttp_MainTask 549C  
                          ??_I2c_ReadData 0082                            ??_I2cSendMsgSm 0084  
           __end_of_Irq_InitIntController 5B5C                     ReceiveEvt@EventStatus 0080  
            ?_Tmr_RegisterTmr2IsrCallback 007D                       USBEnableEndpoint@ep 0088  
                         _endpoint_number 00C8                                _WDTCONbits 000FC0  
                             ?_I2cDummyTx 0001                                  xtoi@sign 0087  
                  _NewMdmEvtParserRequest 003B       Uart_MdmGsmGprsReadService@RxCounter 0023  
                    ?_USBCtrlTrfRxService 0001                           ??i2_GenerateEvt 0003  
            __size_of_Led_SetLedBlinkTime 0054                             ?_getsUSBUSART 0084  
                UartTxBufferStatus@Module 007E                     ?_OsTmr_GetTimerStatus 0095  
           SetUartBaudRate@DivisionFactor 009C            I2cSlv_ReceiveI2cMsg@DataLenght 0083  
                           ??_GenerateEvt 007F                           _LedStateMachine 425E  
        Uart_MdmGsmGprsReadService@Module 0001                           TmrBInit@TmrNumb 0080  
                ?_USBCtrlEPAllowDataStage 0001                      ?_USBCtrlTrfTxService 0001  
            ??_Uart_MdmGsmGprsReadService 0005                             _StopCondition 5FC6  
                   ??i1_I2cSlv_SendI2cMsg 0020                    Led_SetLedStatus@LedSts 007D  
            _USBStatusStageTimeoutCounter 00C7                          Mdm_IsRinging@Ret 0081  
                    ??_USBWakeFromSuspend 0091                USBTransferOnePacket@handle 0082  
                       ??_InitGprsNetwork 009E                       __end_of_ClearBuffer 5952  
                    __end_of_CDCTxService 268A                      ??_USBCheckCDCRequest 007D  
                 __size_of_EnableReceiver 0004                                _USB_CD_Ptr FC5B  
                         ??_I2c_WriteData 0080                   ConfigureModem@NextState 0027  
                           ?_Mcu_ClearWdg 0001                             _Mcu_SetWdgSts 5EE0  
